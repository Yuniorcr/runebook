<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="266b9c7d1cd227bf46d8383331c2c534cb3a9b1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The return value from the method is intended only as an approximation for the sake of error reporting; it is not intended to provide sufficient information to edit the character content of the original XML document.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;该方法的返回值仅作为近似值，用于报告错误；它无意提供足够的信息来编辑原始XML文档的字符内容。</target>
        </trans-unit>
        <trans-unit id="21985473b3d61c21012ece4b313176f883a9b179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This class implements &lt;a href=&quot;../../../../../java.base/java/io/serializable&quot;&gt;&lt;code&gt;Serializable&lt;/code&gt;&lt;/a&gt; as a side effect of it extending &lt;a href=&quot;../basic/basiclookandfeel&quot;&gt;&lt;code&gt;BasicLookAndFeel&lt;/code&gt;&lt;/a&gt;. It is not intended to be serialized. An attempt to serialize it will result in &lt;a href=&quot;../../../../../java.base/java/io/notserializableexception&quot;&gt;&lt;code&gt;NotSerializableException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;此类实现&lt;a href=&quot;../../../../../java.base/java/io/serializable&quot;&gt; &lt;code&gt;Serializable&lt;/code&gt; &lt;/a&gt;作为扩展&lt;a href=&quot;../basic/basiclookandfeel&quot;&gt; &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 的副作用&lt;/a&gt;。它不打算序列化。尝试对其进行序列化将导致&lt;a href=&quot;../../../../../java.base/java/io/notserializableexception&quot;&gt; &lt;code&gt;NotSerializableException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecef0bbee86d8c27cb2ff042c933619b73660bb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; We recommend that you &lt;em&gt;not&lt;/em&gt; create subclasses of this class. If you absolutely must create a subclass, be sure to invoke the superclass version of each method.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;我们建议您&lt;em&gt;不要&lt;/em&gt;创建此类的子类。如果您绝对必须创建一个子类，请确保调用每个方法的超类版本。</target>
        </trans-unit>
        <trans-unit id="96b0c9c7489bfd4c4158836d657171dd8d149515" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt;&lt;code&gt;DefaultTableModel&lt;/code&gt; returns a column class of &lt;code&gt;Object&lt;/code&gt;. When &lt;code&gt;DefaultTableModel&lt;/code&gt; is used with a &lt;code&gt;TableRowSorter&lt;/code&gt; this will result in extensive use of &lt;code&gt;toString&lt;/code&gt;, which for non-&lt;code&gt;String&lt;/code&gt; data types is expensive. If you use &lt;code&gt;DefaultTableModel&lt;/code&gt; with a &lt;code&gt;TableRowSorter&lt;/code&gt; you are strongly encouraged to override &lt;code&gt;getColumnClass&lt;/code&gt; to return the appropriate type.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt; &lt;code&gt;DefaultTableModel&lt;/code&gt; 返回 &lt;code&gt;Object&lt;/code&gt; 的列类。当将 &lt;code&gt;DefaultTableModel&lt;/code&gt; 与 &lt;code&gt;TableRowSorter&lt;/code&gt; 一起使用时，这将导致 &lt;code&gt;toString&lt;/code&gt; 的广泛使用，这对于非 &lt;code&gt;String&lt;/code&gt; 数据类型而言是昂贵的。如果将 &lt;code&gt;DefaultTableModel&lt;/code&gt; 与 &lt;code&gt;TableRowSorter&lt;/code&gt; 一起使用，则强烈建议重写 &lt;code&gt;getColumnClass&lt;/code&gt; 以返回适当的类型。</target>
        </trans-unit>
        <trans-unit id="1a4dbfd60ddd2ae5bc2e394d9bec2c60f4dd0044" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;i&gt;opt&lt;/i&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;i&gt;opt&lt;/i&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="de0f4e877e0dcacc6b548ebdb0de7f7af031fa32" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;1&lt;/sup&gt; Depends on the definition of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;sup&gt;1&lt;/sup&gt;取决于&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; &lt;/a&gt;的定义。</target>
        </trans-unit>
        <trans-unit id="c18d6e71a34fe8209f6204f366f7cb332c7dd04c" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt; +</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt; +</target>
        </trans-unit>
        <trans-unit id="2597a4bec834c34a56ab45519733a00d41053d50" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt; For &lt;code&gt;'d'&lt;/code&gt; conversion only.</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt;仅用于 &lt;code&gt;'d'&lt;/code&gt; 转换。</target>
        </trans-unit>
        <trans-unit id="d0bcc49d2213a764ee7fceaf4a9b1c99b65c6ab7" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;) without intermediate overflow or underflow</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt;）没有中间上溢或下溢</target>
        </trans-unit>
        <trans-unit id="b8a0e46b9a691b7062789b86d5efd4910967fd59" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;2&lt;/sup&gt;) without intermediate overflow or underflow.</source>
          <target state="translated">&lt;sup&gt;2&lt;/sup&gt;）没有中间上溢或下溢。</target>
        </trans-unit>
        <trans-unit id="5205c0c6122f510a63e496b2c218115e94e6564d" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;3&lt;/sup&gt; For &lt;code&gt;'o'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, and &lt;code&gt;'X'&lt;/code&gt; conversions only.</source>
          <target state="translated">&lt;sup&gt;3仅&lt;/sup&gt;适用于 &lt;code&gt;'o'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; 和 &lt;code&gt;'X'&lt;/code&gt; 转换。</target>
        </trans-unit>
        <trans-unit id="1074f936fb9e998e1b4069f5b737ea4c77d097d4" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;4&lt;/sup&gt; For &lt;code&gt;'d'&lt;/code&gt;, &lt;code&gt;'o'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, and &lt;code&gt;'X'&lt;/code&gt; conversions applied to &lt;a href=&quot;../math/biginteger&quot;&gt;&lt;code&gt;BigInteger&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;'d'&lt;/code&gt; applied to &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;sup&gt;4&lt;/sup&gt;对于适用于&lt;a href=&quot;../math/biginteger&quot;&gt; &lt;code&gt;BigInteger&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;'d'&lt;/code&gt; ， &lt;code&gt;'o'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; 和 &lt;code&gt;'X'&lt;/code&gt; 转换，或适用于 &lt;code&gt;byte&lt;/code&gt; ，&lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;short&lt;/code&gt; ，&lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;int&lt;/code&gt; 和&lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;long&lt;/code&gt; 和&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;'d'&lt;/code&gt; 转换。</target>
        </trans-unit>
        <trans-unit id="1cbf27830e5e9235d5fadca0b7b2fbeff8e8286e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;5&lt;/sup&gt; For &lt;code&gt;'e'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'g'&lt;/code&gt;, and &lt;code&gt;'G'&lt;/code&gt; conversions only.</source>
          <target state="translated">&lt;sup&gt;5仅&lt;/sup&gt;对于 &lt;code&gt;'e'&lt;/code&gt; ， &lt;code&gt;'E'&lt;/code&gt; ， &lt;code&gt;'f'&lt;/code&gt; ， &lt;code&gt;'g'&lt;/code&gt; 和 &lt;code&gt;'G'&lt;/code&gt; 转换。</target>
        </trans-unit>
        <trans-unit id="c387cad14f96f3797404e05c2ba187515fcd6235" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;code&gt;a&lt;/code&gt;&lt;/sup&gt;, where</source>
          <target state="translated">&lt;sup&gt; &lt;code&gt;a&lt;/code&gt; &lt;/sup&gt;，在那里</target>
        </trans-unit>
        <trans-unit id="b5c29c713c380389f4685bafc832846f1ca12da5" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;code&gt;x&lt;/code&gt;&lt;/sup&gt; - 1 is within 1/2 ulp of the limit value -1, &lt;code&gt;-1.0&lt;/code&gt; should be returned.</source>
          <target state="translated">&lt;sup&gt; &lt;code&gt;x&lt;/code&gt; &lt;/sup&gt; -1在极限值-1的1/2 ulp之内，应返回 &lt;code&gt;-1.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2135a42fc3333807a86f1f9e4e6958262803c8b" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;code&gt;x&lt;/code&gt;&lt;/sup&gt; - 1.</source>
          <target state="translated">&lt;sup&gt; &lt;code&gt;x&lt;/code&gt; &lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="1b216d6dbef77b084f6b35f200086ec73058e228" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;code&gt;x&lt;/code&gt;&lt;/sup&gt; -1.</source>
          <target state="translated">&lt;sup&gt; &lt;code&gt;x&lt;/code&gt; &lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="cd592b76807caff2a10355e16a8f793f23dbf715" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;th&lt;/sup&gt;&lt;a href=&quot;#cg&quot;&gt;capturing group&lt;/a&gt; and &lt;code&gt;\g{&lt;/code&gt;</source>
          <target state="translated">&lt;sup&gt;个&lt;/sup&gt;&lt;a href=&quot;#cg&quot;&gt;捕获组&lt;/a&gt;和 &lt;code&gt;\g{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f76c86a36f13f2cba9267e9c8be26387681d1ca" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;th&lt;/sup&gt;&lt;a href=&quot;#cg&quot;&gt;capturing group&lt;/a&gt; matched</source>
          <target state="translated">&lt;sup&gt;个&lt;/sup&gt;&lt;a href=&quot;#cg&quot;&gt;捕获组&lt;/a&gt;匹配</target>
        </trans-unit>
        <trans-unit id="37049399390566ec49b8a3a6a0e0b51f26048321" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;x&lt;/sup&gt; -1.</source>
          <target state="translated">&lt;sup&gt;x&lt;/sup&gt; -1.</target>
        </trans-unit>
        <trans-unit id="85a414158c654cf05eff4c426095be529210b3d3" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;x&lt;/sup&gt; -1. Note that for values of</source>
          <target state="translated">&lt;sup&gt;X&lt;/sup&gt; -1。请注意，对于的值</target>
        </trans-unit>
        <trans-unit id="6a993260c9b3e2f7c8670ea387d904181ca53d47" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;x&lt;/sup&gt; than &lt;code&gt;exp(x)&lt;/code&gt;.</source>
          <target state="translated">&lt;sup&gt;x&lt;/sup&gt;比 &lt;code&gt;exp(x)&lt;/code&gt; 大。</target>
        </trans-unit>
        <trans-unit id="c8883fc032f7d88faa589f2c04bbbebac06ec546" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;&lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; is an important interface used in constructing a Document. It has the power to describe various structural parts of a document, such as paragraphs, lines of text, or even (in HTML documents) items in lists. Conceptually, the Element interface captures some of the spirit of an SGML document. So if you know SGML, you may already have some understanding of Swing's Element interface.</source>
          <target state="translated">&lt;u&gt;&lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;&lt;/u&gt;是用于构造文档的重要接口。它具有描述文档的各个结构部分的能力，例如段落，文本行，甚至（在HTML文档中）列表中的项目。从概念上讲，Element接口捕获了SGML文档的某些精神。因此，如果您了解SGML，则可能已经对Swing的Element接口有所了解。</target>
        </trans-unit>
        <trans-unit id="23c0047393c729c4df9310c0151cd3b09c874299" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;Figure 2&lt;/u&gt; shows how how those same two lines of text might map to actual content:</source>
          <target state="translated">&lt;u&gt;图2&lt;/u&gt;显示了这两行相同的文本如何映射到实际内容：</target>
        </trans-unit>
        <trans-unit id="04f4ed1b0adf4af2159fcb8b22a7588a68ce12c9" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;Figure 7&lt;/u&gt; shows how those same Elements might map to content.</source>
          <target state="translated">&lt;u&gt;图7&lt;/u&gt;显示了那些相同的Elements如何映射到内容。</target>
        </trans-unit>
        <trans-unit id="fc525efcc305521da75e0e3a51a3972a5a9ddbee" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;Note&lt;/u&gt;: the optional packages implementing the optional part of the &lt;em&gt;JMX Remote API&lt;/em&gt; are not included in the &lt;em&gt;Java SE Platform&lt;/em&gt; but are available from the &lt;em&gt;JMX Remote API &lt;a href=&quot;http://java.sun.com/products/JavaManagement/download.html&quot;&gt; Reference Implementation&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;u&gt;注意&lt;/u&gt;：实现&lt;em&gt;JMX Remote API&lt;/em&gt;可选部分的可选软件包未包含在&lt;em&gt;Java SE平台中，&lt;/em&gt;但可以从&amp;ldquo; &lt;em&gt;JMX Remote API &lt;a href=&quot;http://java.sun.com/products/JavaManagement/download.html&quot;&gt;参考实现&amp;rdquo;中获得&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c95050da94ce8cbd9d9f171a30894b4e3150e24a" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;Note&lt;/u&gt;: the optional packages implementing the optional part of the &lt;em&gt;JMX Remote API&lt;/em&gt; are not included in the &lt;em&gt;Java SE Platform&lt;/em&gt; but are available from the &lt;em&gt;JMX Remote API &lt;a href=&quot;https://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-java-plat-419418.html&quot;&gt; Reference Implementation&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;u&gt;注意&lt;/u&gt;：实现&lt;em&gt;JMX Remote API&lt;/em&gt;可选部分的可选软件包未包含在&lt;em&gt;Java SE平台中，&lt;/em&gt;但可以从&amp;ldquo; &lt;em&gt;JMX Remote API&lt;a href=&quot;https://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-java-plat-419418.html&quot;&gt;参考实现&amp;rdquo;中获得&lt;/a&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c0f347eadc263dbe3156f7147779a70c0429a944" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;archivelist&lt;/var&gt; must be enclosed in double quote marks.</source>
          <target state="translated">&lt;var&gt;archivelist&lt;/var&gt; 必须用双引号引起来。</target>
        </trans-unit>
        <trans-unit id="0f7ae43de7edbd0bc080fcada93cb989036d38e9" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;argumentType&lt;/var&gt; is the type of the argument that will be passed as parameter to the MBean's constructor.</source>
          <target state="translated">&lt;var&gt;argumentType&lt;/var&gt; 是参数的类型，它将作为参数传递给MBean的构造函数。</target>
        </trans-unit>
        <trans-unit id="1674d9d1a27cffdf0b23f453411f558dba05f8b3" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;CompositeData&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;CompositeData&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="fb05f6536453ff87492d9c522273919b1d7a3922" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="50b92fe75a21071455ff482534f31f8857956624" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="4bce2a26c7ed13e307bbf5478eebee587fc812ea" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanInfo&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="19ee9467bed306ae58eb068d05a8e2ebfab5221c" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="155ef69e8e05f1c4d40bf9ce9cb7bcf2e4a2a321" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="75c27052d7ad9e7ec808018e194884173ee3b254" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; also implements the &lt;code&gt;TabularData&lt;/code&gt; interface,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 还实现了 &lt;code&gt;TabularData&lt;/code&gt; 接口，</target>
        </trans-unit>
        <trans-unit id="253e502e7c38100be4045e40afe0238dc7f6f07f" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt; is non null,</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; 不为null，</target>
        </trans-unit>
        <trans-unit id="be7def36241841366cfcf2d66a6a803286e807d7" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;r&lt;/var&gt; is identical to &lt;var&gt;l&lt;/var&gt;; or</source>
          <target state="translated">&lt;var&gt;r&lt;/var&gt; 是相同的 &lt;var&gt;l&lt;/var&gt; ; 要么</target>
        </trans-unit>
        <trans-unit id="000f0cc4f75966810f276d4416f6272b5d9ca8a9" translate="yes" xml:space="preserve">
          <source>= &quot;NoMoreOftenThan&quot; and now &amp;gt; 'lastPersistTime' + 'persistPeriod'</source>
          <target state="translated">=&amp;ldquo; NoMoreOftenThan&amp;rdquo;，现在&amp;gt;'lastPersistTime'+'persistPeriod'</target>
        </trans-unit>
        <trans-unit id="dc3f8fabe8a4ebf8b4483e92773970369ef510de" translate="yes" xml:space="preserve">
          <source>= &quot;always&quot;</source>
          <target state="translated">=&amp;ldquo;总是&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1bf9dad3a3a2784844323dab08b5aaa968220d27" translate="yes" xml:space="preserve">
          <source>= &quot;never&quot;</source>
          <target state="translated">=&amp;ldquo;从不&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="34903d623efbf67149181aefad27a2a5d9f47407" translate="yes" xml:space="preserve">
          <source>= &quot;onTimer&quot; and now &amp;gt; 'lastPersistTime' + 'persistPeriod'</source>
          <target state="translated">=&amp;ldquo; onTimer&amp;rdquo;，现在&amp;gt;'lastPersistTime'+'persistPeriod'</target>
        </trans-unit>
        <trans-unit id="f2ac7312c97fa5c14d6b268b273d483de875b7de" translate="yes" xml:space="preserve">
          <source>= &quot;onUnregister&quot;</source>
          <target state="translated">=&amp;ldquo; onUnregister&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6073d22b378d3717b8d914e2c234e32fa17432a7" translate="yes" xml:space="preserve">
          <source>= &quot;onUpdate&quot;</source>
          <target state="translated">=&amp;ldquo; onUpdate&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="64a9966d0ceabdfc0d6a5ba87b81e6f9017846d1" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; chars from the given string into this buffer, starting at the given &lt;code&gt;start&lt;/code&gt; index and at the current position of this buffer. The position of this buffer is then incremented by</source>
          <target state="translated">= &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; 从给定字符串字符到该缓冲区中，从给定的 &lt;code&gt;start&lt;/code&gt; 索引，并且在该缓冲器的当前位置。然后将该缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="28c7232e0a2e120dd8424f182ecc7a935bae8d44" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; -</source>
          <target state="translated">= &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="c9d552344caa9efd6762036644cc5c62516c425e" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the byte at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，索引处的字节</target>
        </trans-unit>
        <trans-unit id="aed792725570a2f872c76857d21042195bb30c14" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the char at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，索引处的char</target>
        </trans-unit>
        <trans-unit id="21fee3245de177f4253dbc6a67add6bbeae887e7" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the double at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，索引处的double</target>
        </trans-unit>
        <trans-unit id="ee5ebd2842327761e0a36d657d90805da9596bc5" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the float at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，索引处的浮点数</target>
        </trans-unit>
        <trans-unit id="a8989acf643e840a55b06efc797f4ea5008a4996" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the int at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，索引处的int</target>
        </trans-unit>
        <trans-unit id="9a6aea9c2c83f43f46b312204abd9943d119eb36" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the long at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，即索引处的long</target>
        </trans-unit>
        <trans-unit id="b2ac89c119732feac494ff47bbdede7fd7dcacd0" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;position()&lt;/code&gt; is copied to index zero, the short at index</source>
          <target state="translated">= &lt;code&gt;position()&lt;/code&gt; 复制到索引零，索引处的short</target>
        </trans-unit>
        <trans-unit id="be8c718160d931158eae8b4cb03c3be155a388a2" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; bytes from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= 从给定缓冲区到此缓冲区的 &lt;code&gt;src.remaining()&lt;/code&gt; 字节，从每个缓冲区的当前位置开始。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="69153de829419c04279a7105bbabbf1880a25384" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; chars from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= &lt;code&gt;src.remaining()&lt;/code&gt; 从给定缓冲区到此缓冲区的字符，从每个缓冲区的当前位置开始。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="47440d269c37d48340c7d1f028c7bb7576627972" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; doubles from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= &lt;code&gt;src.remaining()&lt;/code&gt; 从给定缓冲区加倍到此缓冲区，从每个缓冲区的当前位置开始。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="524006f6324997801d2639eb94b4d225fcefe335" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; floats from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= &lt;code&gt;src.remaining()&lt;/code&gt; 从给定缓冲区浮动到此缓冲区，从每个缓冲区的当前位置开始。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="c1f1ac87c508781c2c937813352f423c40b5e590" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; ints from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= 从每个缓冲区的当前位置开始，从给定缓冲区到此缓冲区的 &lt;code&gt;src.remaining()&lt;/code&gt; 整数。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="1692b1504c9da0451bcfce3c110d60affb2641da" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; longs from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= &lt;code&gt;src.remaining()&lt;/code&gt; 从给定缓冲区长到该缓冲区，从每个缓冲区的当前位置开始。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="cd0a9f2c8f1162d98a7f1d49d63febb05cb8a2a3" translate="yes" xml:space="preserve">
          <source>= &lt;code&gt;src.remaining()&lt;/code&gt; shorts from the given buffer into this buffer, starting at each buffer's current position. The positions of both buffers are then incremented by</source>
          <target state="translated">= &lt;code&gt;src.remaining()&lt;/code&gt; 从给定缓冲区短路到此缓冲区，从每个缓冲区的当前位置开始。然后将两个缓冲区的位置增加</target>
        </trans-unit>
        <trans-unit id="a28ac76ff95178f962891214ed2bbdcac540aca1" translate="yes" xml:space="preserve">
          <source>= = &quot;NoMoreOftenThan&quot; and now &amp;lt; 'lastPersistTime' + 'persistPeriod'</source>
          <target state="translated">= =&amp;ldquo; NoMoreOftenThan&amp;rdquo;，现在&amp;lt;'lastPersistTime'+'persistPeriod'</target>
        </trans-unit>
        <trans-unit id="254ea32e3f14a1b61854947afe774fcefe8a0c78" translate="yes" xml:space="preserve">
          <source>= = &quot;onTimer&quot; &amp;amp;&amp;amp; now &amp;lt; 'lastPersistTime' + 'persistPeriod'</source>
          <target state="translated">= =&amp;ldquo; onTimer&amp;rdquo; &amp;amp;&amp;amp;现在&amp;lt;'lastPersistTime'+'persistPeriod'</target>
        </trans-unit>
        <trans-unit id="2bcaf237b85571232711954ab87fc5fd94e1a619" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;code&gt;JSpinner.DefaultEditor&lt;/code&gt;</source>
          <target state="translated">=&amp;gt; &lt;code&gt;JSpinner.DefaultEditor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bab61eb53176449e25c2c82f172b82cb13ffb9d" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>
        </trans-unit>
        <trans-unit id="a347759e33ed1f6c135c01aa7eadad17f6a3c812" translate="yes" xml:space="preserve">
          <source>? There must be at least one digit to represent the fractional part, and beyond that as many, but only as many, more digits as are needed to uniquely distinguish the argument value from adjacent values of type &lt;code&gt;double&lt;/code&gt;. That is, suppose that</source>
          <target state="translated">？必须有至少一位数字来表示小数部分，并且除此数字外，还必须要有多少个数字才能唯一地将参数值与 &lt;code&gt;double&lt;/code&gt; 类型的相邻值区分开来。也就是说，假设</target>
        </trans-unit>
        <trans-unit id="a8cba9ed9d4d1b9f27317f69c50ee4ed11419a1d" translate="yes" xml:space="preserve">
          <source>? There must be at least one digit to represent the fractional part, and beyond that as many, but only as many, more digits as are needed to uniquely distinguish the argument value from adjacent values of type &lt;code&gt;float&lt;/code&gt;. That is, suppose that</source>
          <target state="translated">？必须至少有一位数字来表示小数部分，并且除此以外，还需要与唯一数量不同的数字，以便将参数值与 &lt;code&gt;float&lt;/code&gt; 类型的相邻值唯一区分开。也就是说，假设</target>
        </trans-unit>
        <trans-unit id="15f3b821260db2ca1c7758c5f916d3d2b52e3e9b" translate="yes" xml:space="preserve">
          <source>@author name-text.</source>
          <target state="translated">@author名称文本。</target>
        </trans-unit>
        <trans-unit id="1cd2b5c8f6f04e0c39c9b50da887cb3cad059d81" translate="yes" xml:space="preserve">
          <source>@deprecated deprecated text.</source>
          <target state="translated">@deprecated不推荐使用的文本。</target>
        </trans-unit>
        <trans-unit id="03aef64fc744318465ba3a2878cdbc19e8eea2d5" translate="yes" xml:space="preserve">
          <source>@exception class-name description</source>
          <target state="translated">@exception类名描述</target>
        </trans-unit>
        <trans-unit id="4fbaac2863fb12addd4b0b3837da31ff8d17ce2a" translate="yes" xml:space="preserve">
          <source>@hidden</source>
          <target state="translated">@hidden</target>
        </trans-unit>
        <trans-unit id="c272289abfdcaea6377ba614cb382ab6a57fb7e8" translate="yes" xml:space="preserve">
          <source>@name content</source>
          <target state="translated">@名称内容</target>
        </trans-unit>
        <trans-unit id="6fa071bacd83a486e630de18fc2015a0b263c087" translate="yes" xml:space="preserve">
          <source>@param parameter-name description</source>
          <target state="translated">@param参数名称说明</target>
        </trans-unit>
        <trans-unit id="5fda16d274e881fdd170cd61ce0a52074594024b" translate="yes" xml:space="preserve">
          <source>@provides service-type description</source>
          <target state="translated">@提供服务类型描述</target>
        </trans-unit>
        <trans-unit id="c08eb1126bdbda59374bf0333d2ccf2b6ba81215" translate="yes" xml:space="preserve">
          <source>@return description</source>
          <target state="translated">@返回说明</target>
        </trans-unit>
        <trans-unit id="24cf082b1ecc502333000beffcc16ba898bc39ed" translate="yes" xml:space="preserve">
          <source>@see &quot;string&quot;</source>
          <target state="translated">@see&amp;ldquo;字串&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="df31f985c2e20c8f6eaf1acff94ffe9d6bc7ef92" translate="yes" xml:space="preserve">
          <source>@see &amp;lt;a href=&quot;URL#value&quot;&amp;gt; label &amp;lt;/a&amp;gt;</source>
          <target state="translated">@see &amp;lt;a href=&quot;URL#value&quot;&amp;gt;标签&amp;lt;/a&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9b58e7dc60678b30037413a45586aaa9916a6dc0" translate="yes" xml:space="preserve">
          <source>@see reference</source>
          <target state="translated">@请参阅参考</target>
        </trans-unit>
        <trans-unit id="1f5c47e99707a1f88929ec2ddd451ccf2963a1a4" translate="yes" xml:space="preserve">
          <source>@serial field-description | include | exclude</source>
          <target state="translated">@serial字段描述| 包括| 排除</target>
        </trans-unit>
        <trans-unit id="11fb65f45492a421be3b423f630df38abac342da" translate="yes" xml:space="preserve">
          <source>@serialData data-description</source>
          <target state="translated">@serialData数据描述</target>
        </trans-unit>
        <trans-unit id="8187e9cc80f9b9e1db8e8925e35de900da634e7e" translate="yes" xml:space="preserve">
          <source>@serialField field-name field-type field-description</source>
          <target state="translated">@serialField字段名称字段类型字段描述</target>
        </trans-unit>
        <trans-unit id="aa53138709b96b606e9223e4a2c3c0543e5b00a5" translate="yes" xml:space="preserve">
          <source>@since since-text</source>
          <target state="translated">@自文本以来</target>
        </trans-unit>
        <trans-unit id="af0e272a0735684783c41b93234036e9c69f1c9e" translate="yes" xml:space="preserve">
          <source>@throws class-name description</source>
          <target state="translated">@throws类名描述</target>
        </trans-unit>
        <trans-unit id="9f97d76e9c2c971866ae75d0a6dba78d8f7e1c78" translate="yes" xml:space="preserve">
          <source>@uses service-type description</source>
          <target state="translated">@uses服务类型说明</target>
        </trans-unit>
        <trans-unit id="a056b91042dc8278bd0fd8fd9653e8fcc32e2e0c" translate="yes" xml:space="preserve">
          <source>@version version-text</source>
          <target state="translated">@version版本文本</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="5513e4eb0c8216dc7136f185aa48f14223d55392" translate="yes" xml:space="preserve">
          <source>A &quot;&lt;em&gt;spurious wakeup&lt;/em&gt;&quot; occurs.</source>
          <target state="translated">发生&amp;ldquo; &lt;em&gt;虚假唤醒&lt;/em&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0f3349c60554425c5718ffb5eb59dfc83572efa4" translate="yes" xml:space="preserve">
          <source>A &quot;PropertyChange&quot; event gets delivered whenever a bean changes a &quot;bound&quot; or &quot;constrained&quot; property.</source>
          <target state="translated">每当Bean改变一个 &quot;绑定 &quot;或 &quot;约束 &quot;属性时,&quot;PropertyChange &quot;事件就会被传递。</target>
        </trans-unit>
        <trans-unit id="641c6959c3dfc13b48a4945e633e5452ededb36f" translate="yes" xml:space="preserve">
          <source>A &quot;PropertyChange&quot; event gets delivered whenever a bean changes a &quot;bound&quot; or &quot;constrained&quot; property. A PropertyChangeEvent object is sent as an argument to the PropertyChangeListener and VetoableChangeListener methods.</source>
          <target state="translated">每当Bean改变一个 &quot;绑定 &quot;或 &quot;约束 &quot;属性时,&quot;PropertyChange &quot;事件就会被传递。一个PropertyChangeEvent对象作为参数被发送到PropertyChangeListener和VetoableChangeListener方法。</target>
        </trans-unit>
        <trans-unit id="4df819facc660a51f8d27eeac2181a40009a4e9e" translate="yes" xml:space="preserve">
          <source>A &quot;PropertyChange&quot; event gets fired whenever a bean changes a &quot;bound&quot; property.</source>
          <target state="translated">每当Bean改变一个 &quot;绑定 &quot;属性时,一个 &quot;PropertyChange &quot;事件就会被触发。</target>
        </trans-unit>
        <trans-unit id="748edf61f82044c2de9355255e500dd4fa92c8f4" translate="yes" xml:space="preserve">
          <source>A &quot;PropertyChange&quot; event gets fired whenever a bean changes a &quot;bound&quot; property. You can register a PropertyChangeListener with a source bean so as to be notified of any bound property updates.</source>
          <target state="translated">每当Bean改变一个 &quot;绑定 &quot;属性时,&quot;PropertyChange &quot;事件就会被触发。你可以在源Bean中注册一个PropertyChangeListener,以便通知任何绑定属性的更新。</target>
        </trans-unit>
        <trans-unit id="74477595da6a327ec1904f24675655777c0cd5a0" translate="yes" xml:space="preserve">
          <source>A &quot;equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryRelQueryExp with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;query#EQ&quot;&gt;&lt;code&gt;EQ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;等于&amp;rdquo;约束。返回的对象将被序列化为 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;query#EQ&quot;&gt; &lt;code&gt;EQ&lt;/code&gt; &lt;/a&gt;的非公共类javax.management.BinaryRelQueryExp的实例。</target>
        </trans-unit>
        <trans-unit id="806135f1a52f04469e38ea2065903e0417612389" translate="yes" xml:space="preserve">
          <source>A &quot;equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#EQ&quot;&gt;&lt;code&gt;EQ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;等于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#EQ&quot;&gt; &lt;code&gt;EQ&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ed5ff3c67d78ecde9fc5f98ceeda9d337712b20" translate="yes" xml:space="preserve">
          <source>A &quot;equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#EQ&quot;&gt;&lt;code&gt;EQ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;等于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#EQ&quot;&gt; &lt;code&gt;EQ&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0de043fb0225053ecca95aaef17dc683110891a0" translate="yes" xml:space="preserve">
          <source>A &quot;greater than or equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryRelQueryExp with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;query#GE&quot;&gt;&lt;code&gt;GE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;大于或等于&amp;rdquo;约束。返回的对象将被序列化为 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;query#GE&quot;&gt; &lt;code&gt;GE&lt;/code&gt; &lt;/a&gt;的非公共类javax.management.BinaryRelQueryExp的实例。</target>
        </trans-unit>
        <trans-unit id="bc3ecdef79ff1bfb9f7d7207928bcd10d5350dba" translate="yes" xml:space="preserve">
          <source>A &quot;greater than or equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#GE&quot;&gt;&lt;code&gt;GE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;大于或等于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#GE&quot;&gt; &lt;code&gt;GE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30e92115d38ed4025e2785d408473123f1a7397b" translate="yes" xml:space="preserve">
          <source>A &quot;greater than or equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#GE&quot;&gt;&lt;code&gt;GE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;大于或等于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#GE&quot;&gt; &lt;code&gt;GE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a884531a739aabf42ac28cb17e1de598cfc3b3bc" translate="yes" xml:space="preserve">
          <source>A &quot;greater than&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryRelQueryExp with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;query#GT&quot;&gt;&lt;code&gt;GT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;大于&amp;rdquo;约束。返回的对象将被序列化为 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;query#GT&quot;&gt; &lt;code&gt;GT&lt;/code&gt; &lt;/a&gt;的非公共类javax.management.BinaryRelQueryExp的实例。</target>
        </trans-unit>
        <trans-unit id="cbfa98504026d3c18ee01d321f7bdf3ec1d4c1cc" translate="yes" xml:space="preserve">
          <source>A &quot;greater than&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#GT&quot;&gt;&lt;code&gt;GT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;大于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#GT&quot;&gt; &lt;code&gt;GT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f16235603e635b49d5a2e98e30ed6692ea6a533" translate="yes" xml:space="preserve">
          <source>A &quot;greater than&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#GT&quot;&gt;&lt;code&gt;GT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;大于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#GT&quot;&gt; &lt;code&gt;GT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da25afbc37982ef7e00ed1ad8dc107c0b3a9335b" translate="yes" xml:space="preserve">
          <source>A &quot;less than or equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryRelQueryExp with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;query#LE&quot;&gt;&lt;code&gt;LE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;小于或等于&amp;rdquo;约束。返回的对象将被序列化为 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;query#LE&quot;&gt; &lt;code&gt;LE&lt;/code&gt; &lt;/a&gt;的非公共类javax.management.BinaryRelQueryExp的实例。</target>
        </trans-unit>
        <trans-unit id="b969cef0427ec7ab5db2c26f93f14dd1c4bde6b9" translate="yes" xml:space="preserve">
          <source>A &quot;less than or equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#LE&quot;&gt;&lt;code&gt;LE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;小于或等于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#LE&quot;&gt; &lt;code&gt;LE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5a75e5ad27b31129ef39f99ab6b0e1f04fbe0b4" translate="yes" xml:space="preserve">
          <source>A &quot;less than or equal to&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#LE&quot;&gt;&lt;code&gt;LE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;小于或等于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#LE&quot;&gt; &lt;code&gt;LE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be9fee56b89e6dfc556451a6459fb3114cf7cfdb" translate="yes" xml:space="preserve">
          <source>A &quot;less than&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryRelQueryExp with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;query#LT&quot;&gt;&lt;code&gt;LT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;小于&amp;rdquo;约束。返回的对象将被序列化为 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;query#LT&quot;&gt; &lt;code&gt;LT&lt;/code&gt; &lt;/a&gt;的非公共类javax.management.BinaryRelQueryExp的实例。</target>
        </trans-unit>
        <trans-unit id="2e39b3bbfebf627cec72762c22afa78146b9d831" translate="yes" xml:space="preserve">
          <source>A &quot;less than&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#LT&quot;&gt;&lt;code&gt;LT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;小于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#LT&quot;&gt; &lt;code&gt;LT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbb9a8cd549a01665c423542556bc9c1bc768c7b" translate="yes" xml:space="preserve">
          <source>A &quot;less than&quot; constraint on the arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt; javax.management.BinaryRelQueryExp&lt;/a&gt; with a &lt;code&gt;relOp&lt;/code&gt; equal to &lt;a href=&quot;#LT&quot;&gt;&lt;code&gt;LT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对参数的&amp;ldquo;小于&amp;rdquo;约束。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryRelQueryExp&quot;&gt;javax.management.BinaryRelQueryExp&lt;/a&gt;与 &lt;code&gt;relOp&lt;/code&gt; 等于&lt;a href=&quot;#LT&quot;&gt; &lt;code&gt;LT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de08da0a62465d61a02c69fc3c0e07a5ba4bf8d3" translate="yes" xml:space="preserve">
          <source>A &quot;main&quot; &lt;code&gt;ForkJoinTask&lt;/code&gt; begins execution when it is explicitly submitted to a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;, or, if not already engaged in a ForkJoin computation, commenced in the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; via &lt;a href=&quot;#fork()&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#invoke()&quot;&gt;&lt;code&gt;invoke()&lt;/code&gt;&lt;/a&gt;, or related methods. Once started, it will usually in turn start other subtasks. As indicated by the name of this class, many programs using &lt;code&gt;ForkJoinTask&lt;/code&gt; employ only methods &lt;a href=&quot;#fork()&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, or derivatives such as &lt;a href=&quot;#invokeAll(java.util.concurrent.ForkJoinTask...)&quot;&gt;&lt;code&gt;invokeAll&lt;/code&gt;&lt;/a&gt;. However, this class also provides a number of other methods that can come into play in advanced usages, as well as extension mechanics that allow support of new forms of fork/join processing.</source>
          <target state="translated">A&amp;ldquo;主&amp;rdquo; &lt;code&gt;ForkJoinTask&lt;/code&gt; 开始执行时，它明确地提交给&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt;，或者，如果不是已经从事ForkJoin计算，开始于&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;通过&lt;a href=&quot;#fork()&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#invoke()&quot;&gt; &lt;code&gt;invoke()&lt;/code&gt; &lt;/a&gt;或相关方法。一旦启动，通常将依次启动其他子任务。如此类的名称所示，许多使用 &lt;code&gt;ForkJoinTask&lt;/code&gt; 的程序仅使用方法&lt;a href=&quot;#fork()&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;或诸如&lt;a href=&quot;#invokeAll(java.util.concurrent.ForkJoinTask...)&quot;&gt; &lt;code&gt;invokeAll&lt;/code&gt; 之类的&lt;/a&gt;派生类。。但是，此类还提供了许多其他可以在高级用法中使用的方法，以及允许支持新形式的fork / join处理的扩展机制。</target>
        </trans-unit>
        <trans-unit id="c02a3212a46bc55a239d47bafb8d0b6642e57a37" translate="yes" xml:space="preserve">
          <source>A &quot;main&quot; &lt;code&gt;ForkJoinTask&lt;/code&gt; begins execution when it is explicitly submitted to a &lt;a href=&quot;forkjoinpool&quot;&gt;&lt;code&gt;ForkJoinPool&lt;/code&gt;&lt;/a&gt;, or, if not already engaged in a ForkJoin computation, commenced in the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; via &lt;a href=&quot;forkjointask#fork--&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#invoke--&quot;&gt;&lt;code&gt;invoke()&lt;/code&gt;&lt;/a&gt;, or related methods. Once started, it will usually in turn start other subtasks. As indicated by the name of this class, many programs using &lt;code&gt;ForkJoinTask&lt;/code&gt; employ only methods &lt;a href=&quot;forkjointask#fork--&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, or derivatives such as &lt;a href=&quot;forkjointask#invokeAll-java.util.concurrent.ForkJoinTask...-&quot;&gt;&lt;code&gt;invokeAll&lt;/code&gt;&lt;/a&gt;. However, this class also provides a number of other methods that can come into play in advanced usages, as well as extension mechanics that allow support of new forms of fork/join processing.</source>
          <target state="translated">A&amp;ldquo;主&amp;rdquo; &lt;code&gt;ForkJoinTask&lt;/code&gt; 开始执行时，它明确地提交给&lt;a href=&quot;forkjoinpool&quot;&gt; &lt;code&gt;ForkJoinPool&lt;/code&gt; &lt;/a&gt;，或者，如果不是已经从事ForkJoin计算，开始于&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;通过&lt;a href=&quot;forkjointask#fork--&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;forkjointask#invoke--&quot;&gt; &lt;code&gt;invoke()&lt;/code&gt; &lt;/a&gt;或相关方法。一旦启动，通常将依次启动其他子任务。如此类的名称所示，许多使用 &lt;code&gt;ForkJoinTask&lt;/code&gt; 的程序仅使用方法&lt;a href=&quot;forkjointask#fork--&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;或诸如&lt;a href=&quot;forkjointask#invokeAll-java.util.concurrent.ForkJoinTask...-&quot;&gt; &lt;code&gt;invokeAll&lt;/code&gt; 之类的&lt;/a&gt;派生类。。但是，此类还提供了许多其他可以在高级用法中起作用的方法，以及允许支持新形式的fork / join处理的扩展机制。</target>
        </trans-unit>
        <trans-unit id="dc943e5cfb69961b43a73ba91cd6046c46d3cf2b" translate="yes" xml:space="preserve">
          <source>A &quot;plain&quot; socket implements these methods exactly as described, without attempting to go through a firewall or proxy.</source>
          <target state="translated">一个 &quot;普通 &quot;套接字完全按照上述方法实现,而不试图通过防火墙或代理。</target>
        </trans-unit>
        <trans-unit id="714027f0d67b1bf8b96c8ccc0f216b5a66a47b26" translate="yes" xml:space="preserve">
          <source>A &quot;pluggable look and feel&quot; (L&amp;amp;F) that can be specified by the programmer or (optionally) selected by the user at runtime. The look and feel for each component is provided by a &lt;em&gt;UI delegate&lt;/em&gt; -- an object that descends from &lt;a href=&quot;plaf/componentui&quot;&gt;&lt;code&gt;ComponentUI&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&quot;&gt;How to Set the Look and Feel&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for more information.</source>
          <target state="translated">可以由程序员指定或（可选）由用户在运行时选择的&amp;ldquo;可插入外观&amp;rdquo;（L＆F）。每个组件的外观由&lt;em&gt;UI委托&lt;/em&gt;提供&lt;em&gt;-UI委托&lt;/em&gt;是从&lt;a href=&quot;plaf/componentui&quot;&gt; &lt;code&gt;ComponentUI&lt;/code&gt; &lt;/a&gt;继承的对象。有关更多信息，请参见&lt;em&gt;Java教程&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&quot;&gt;如何设置外观&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64fea0e13f24284a3ee7c08b16bf7442f65bbb63" translate="yes" xml:space="preserve">
          <source>A &quot;pluggable look and feel&quot; (L&amp;amp;F) that can be specified by the programmer or (optionally) selected by the user at runtime. The look and feel for each component is provided by a &lt;em&gt;UI delegate&lt;/em&gt; -- an object that descends from &lt;a href=&quot;plaf/componentui&quot;&gt;&lt;code&gt;ComponentUI&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&quot;&gt;How to Set the Look and Feel&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for more information.</source>
          <target state="translated">可以由程序员指定或（可选）由用户在运行时选择的&amp;ldquo;可插入外观&amp;rdquo;（L＆F）。每个组件的外观由&lt;em&gt;UI委托&lt;/em&gt;提供&lt;em&gt;-UI委托&lt;/em&gt;是从&lt;a href=&quot;plaf/componentui&quot;&gt; &lt;code&gt;ComponentUI&lt;/code&gt; &lt;/a&gt;继承的对象。有关更多信息，请参见&lt;em&gt;Java教程&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&quot;&gt;如何设置外观&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9465dad66907e5534f8ce78f8a2bcc5366eb7d63" translate="yes" xml:space="preserve">
          <source>A &quot;provides service-name with implementation-name&quot; directive.</source>
          <target state="translated">一个 &quot;提供带有实施名称的服务名称 &quot;的指令。</target>
        </trans-unit>
        <trans-unit id="c7bcf1682006ae246b205c9162c9f0602f85cd20" translate="yes" xml:space="preserve">
          <source>A &quot;requires (static|transitive)* module-name&quot; directive.</source>
          <target state="translated">一个 &quot;需要(static|transitive)*模块名 &quot;的指令。</target>
        </trans-unit>
        <trans-unit id="8a7bdab095c6dd95a987d94861c32e7a52ed7eff" translate="yes" xml:space="preserve">
          <source>A &quot;root class&quot; is determined as follows: if the remote object's class directly implements an interface that extends &lt;a href=&quot;../remote&quot;&gt;&lt;code&gt;Remote&lt;/code&gt;&lt;/a&gt;, then the remote object's class is the root class; otherwise, the root class is the most derived superclass of the remote object's class that directly implements an interface that extends &lt;code&gt;Remote&lt;/code&gt;.</source>
          <target state="translated">确定&amp;ldquo;根类&amp;rdquo;的方法如下：如果远程对象的类直接实现扩展&lt;a href=&quot;../remote&quot;&gt; &lt;code&gt;Remote&lt;/code&gt; &lt;/a&gt;的接口，则远程对象的类为根类；否则，该类为根类。否则，根类是远程对象类中最派生的超类，它直接实现扩展 &lt;code&gt;Remote&lt;/code&gt; 的接口。</target>
        </trans-unit>
        <trans-unit id="d3b2b197c97d0a70f7eb09f20de7797275be9cab" translate="yes" xml:space="preserve">
          <source>A &quot;uses service-name&quot; directive.</source>
          <target state="translated">&quot;使用服务名 &quot;指令。</target>
        </trans-unit>
        <trans-unit id="28b9590fb34dc6e99ef9e2f2fa6e5db1aa5e5d57" translate="yes" xml:space="preserve">
          <source>A 'normal' user exception occurred.</source>
          <target state="translated">发生了一个 &quot;正常 &quot;的用户异常。</target>
        </trans-unit>
        <trans-unit id="ba532363ce1d66c2c8ccfa4e11dfa3d0986d92e2" translate="yes" xml:space="preserve">
          <source>A 'requires' directive (irrespective of 'transitive') expresses that one module depends on some other module. The effect of the 'transitive' modifier is to cause additional modules to also depend on the other module. If module M 'requires transitive N', then not only does M depend on N, but any module that depends on M also depends on N. This allows M to be refactored so that some or all of its content can be moved to a new module N without breaking modules that have a 'requires M' directive.</source>
          <target state="translated">一个'要求'指令(不管是否是'转义')表示一个模块依赖于其他模块。'转义'修饰语的作用是使其他模块也依赖于其他模块。如果模块M'需要反式N',那么不仅M依赖于N,而且任何依赖于M的模块也依赖于N,这使得M可以被重构,从而可以将其部分或全部内容移到一个新的模块N中,而不会破坏有'需要M'指令的模块。</target>
        </trans-unit>
        <trans-unit id="9428d7434c49a807b44f9ca3264e255b1193cd1f" translate="yes" xml:space="preserve">
          <source>A (Notification, Listener ID) pair.</source>
          <target state="translated">A(通知、听众ID)对。</target>
        </trans-unit>
        <trans-unit id="2f407ba41c22ce011c5499faf836fd2378747934" translate="yes" xml:space="preserve">
          <source>A (transparent) specification of cryptographic parameters.</source>
          <target state="translated">一个(透明的)加密参数规范。</target>
        </trans-unit>
        <trans-unit id="58e3837094f5b54f63ba78d8733c9477066d3bba" translate="yes" xml:space="preserve">
          <source>A (transparent) specification of the key material that constitutes a cryptographic key.</source>
          <target state="translated">构成加密密钥的密钥材料的(透明)规范。</target>
        </trans-unit>
        <trans-unit id="8a0daedd32e98b9659cc4c7bd3330fef767ba115" translate="yes" xml:space="preserve">
          <source>A 10Mb JAR packed without this limit will typically pack about 10% smaller, but the packer may require a larger Java heap (about ten times the segment limit).</source>
          <target state="translated">一个10Mb的JAR在没有这个限制的情况下,通常会打包小10%左右,但打包者可能需要一个更大的Java堆(大约是段限制的10倍)。</target>
        </trans-unit>
        <trans-unit id="05bf1a9a5d16275ca3c45ce8c10234dc159e4f35" translate="yes" xml:space="preserve">
          <source>A 3-element &lt;code&gt;float&lt;/code&gt; array containing the x, y, and z components of the profile's &lt;code&gt;mediaWhitePointTag&lt;/code&gt;.</source>
          <target state="translated">一个3元素的 &lt;code&gt;float&lt;/code&gt; 数组，其中包含配置文件的 &lt;code&gt;mediaWhitePointTag&lt;/code&gt; 的x，y和z分量。</target>
        </trans-unit>
        <trans-unit id="91ecface88db4fa194df61b4808b90c9557ce239" translate="yes" xml:space="preserve">
          <source>A 3x3 &lt;code&gt;float&lt;/code&gt; array that contains the x, y, and z components of the profile's &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, and &lt;code&gt;blueColorantTag&lt;/code&gt;.</source>
          <target state="translated">一个3x3 &lt;code&gt;float&lt;/code&gt; 数组，其中包含配置文件的 &lt;code&gt;redColorantTag&lt;/code&gt; ， &lt;code&gt;greenColorantTag&lt;/code&gt; 和 &lt;code&gt;blueColorantTag&lt;/code&gt; 的x，y和z分量。</target>
        </trans-unit>
        <trans-unit id="ad169425f469f5721472a7f8f45b5e8885e3e53c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#GARBAGE_COLLECTION_NOTIFICATION&quot;&gt;garbage collection notification&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;#GARBAGE_COLLECTION_NOTIFICATION&quot;&gt;垃圾回收通知&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5ed81011075464149b1976fc773bb87522058f6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#MEMORY_COLLECTION_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;collection usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;#MEMORY_COLLECTION_THRESHOLD_EXCEEDED&quot;&gt; &lt;code&gt;collection usage threshold exceeded notification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff3aed431ec27dfe240376bb132bbe524b2aa31f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#MEMORY_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;#MEMORY_THRESHOLD_EXCEEDED&quot;&gt; &lt;code&gt;usage threshold exceeded notification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="965f439c423479a4189eafcf9eab717600faf4ad" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#matches(java.lang.String,java.lang.CharSequence)&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method is defined by this class as a convenience for when a regular expression is used just once. This method compiles an expression and matches an input sequence against it in a single invocation. The statement</source>
          <target state="translated">甲&lt;a href=&quot;#matches(java.lang.String,java.lang.CharSequence)&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;方法由这个类作为当正则表达式只使用一次为一个方便而定义。此方法将编译一个表达式，并在一次调用中将一个输入序列与其匹配。该声明</target>
        </trans-unit>
        <trans-unit id="6c54a13b6677108d39955eabbb6233163fad8fc2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../../../../java.security.jgss/org/ietf/jgss/gssexception#NO_CRED&quot;&gt;&lt;code&gt;GSSException.NO_CRED&lt;/code&gt;&lt;/a&gt; will be thrown if the impersonation fails. A &lt;a href=&quot;../../../../../java.security.jgss/org/ietf/jgss/gssexception#FAILURE&quot;&gt;&lt;code&gt;GSSException.FAILURE&lt;/code&gt;&lt;/a&gt; will be thrown if the impersonation method is not available to this credential object.</source>
          <target state="translated">一个&lt;a href=&quot;../../../../../java.security.jgss/org/ietf/jgss/gssexception#NO_CRED&quot;&gt; &lt;code&gt;GSSException.NO_CRED&lt;/code&gt; &lt;/a&gt;如果模拟失败，将被抛出。一个&lt;a href=&quot;../../../../../java.security.jgss/org/ietf/jgss/gssexception#FAILURE&quot;&gt; &lt;code&gt;GSSException.FAILURE&lt;/code&gt; &lt;/a&gt;如果模拟方法不可用此凭证对象将被抛出。</target>
        </trans-unit>
        <trans-unit id="2e0d5c3149511c61f84a95a5b70167502ac2192f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; representing the &lt;code&gt;GarbageCollectionNotificationInfo&lt;/code&gt; object is stored in the &lt;a href=&quot;../../../../java.management/javax/management/notification#setUserData(java.lang.Object)&quot;&gt;userdata&lt;/a&gt; of a &lt;a href=&quot;../../../../java.management/javax/management/notification&quot;&gt;notification&lt;/a&gt;. The &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method is provided to convert from a &lt;code&gt;CompositeData&lt;/code&gt; to a &lt;code&gt;GarbageCollectionNotificationInfo&lt;/code&gt; object. For example:</source>
          <target state="translated">甲&lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;表示 &lt;code&gt;GarbageCollectionNotificationInfo&lt;/code&gt; 对象被存储在&lt;a href=&quot;../../../../java.management/javax/management/notification#setUserData(java.lang.Object)&quot;&gt;用户数据&lt;/a&gt;一个的&lt;a href=&quot;../../../../java.management/javax/management/notification&quot;&gt;通知&lt;/a&gt;。在&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法被提供给转换从一个 &lt;code&gt;CompositeData&lt;/code&gt; 到 &lt;code&gt;GarbageCollectionNotificationInfo&lt;/code&gt; 对象。例如：</target>
        </trans-unit>
        <trans-unit id="7e2d5fdb7fc493a397ed2e4debe3a1b2836de31a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; representing the &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; object is stored in the &lt;a href=&quot;../../../javax/management/notification#setUserData(java.lang.Object)&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method is provided to convert from a &lt;code&gt;CompositeData&lt;/code&gt; to a &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; object. For example:</source>
          <target state="translated">甲&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;表示 &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; 对象被存储在&lt;a href=&quot;../../../javax/management/notification#setUserData(java.lang.Object)&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt;一个的&lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;notification&lt;/code&gt; &lt;/a&gt;。在&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法被提供给转换从一个 &lt;code&gt;CompositeData&lt;/code&gt; 到 &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; 对象。例如：</target>
        </trans-unit>
        <trans-unit id="1a37cb5a0b97de4647147b96fe32fdde82bc6e05" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; representing the &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; object is stored in the &lt;a href=&quot;../../../javax/management/notification#setUserData-java.lang.Object-&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;memorynotificationinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method is provided to convert from a &lt;code&gt;CompositeData&lt;/code&gt; to a &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; object. For example:</source>
          <target state="translated">甲&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;表示 &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; 对象被存储在&lt;a href=&quot;../../../javax/management/notification#setUserData-java.lang.Object-&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt;一个的&lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;notification&lt;/code&gt; &lt;/a&gt;。在&lt;a href=&quot;memorynotificationinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法被提供给转换从一个 &lt;code&gt;CompositeData&lt;/code&gt; 到 &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; 对象。例如：</target>
        </trans-unit>
        <trans-unit id="a811fb395a0b9a25a42733345d26e124a500bf96" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../constant/package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; constant.</source>
          <target state="translated">一个&lt;a href=&quot;../constant/package-summary#nominal&quot;&gt;标称描述&lt;/a&gt;了&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;不变。</target>
        </trans-unit>
        <trans-unit id="6503faa32cb286134021110311634dfb9c87d502" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; that additionally supports blocking operations that wait for the deque to become non-empty when retrieving an element, and wait for space to become available in the deque when storing an element.</source>
          <target state="translated">甲&lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;该检索元素时附加地支持阻塞操作该等待双端队列变为非空，并等待空间在双端队列存储元素时变得可用。</target>
        </trans-unit>
        <trans-unit id="63afc8d76194070d365749d60355076276705929" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; that delegates sequentially to a list of other guarding dynamic linkers in its &lt;a href=&quot;#getGuardedInvocation(jdk.dynalink.linker.LinkRequest,jdk.dynalink.linker.LinkerServices)&quot;&gt;&lt;code&gt;getGuardedInvocation(LinkRequest, LinkerServices)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt;，它在其&lt;a href=&quot;#getGuardedInvocation(jdk.dynalink.linker.LinkRequest,jdk.dynalink.linker.LinkerServices)&quot;&gt; &lt;code&gt;getGuardedInvocation(LinkRequest, LinkerServices)&lt;/code&gt; &lt;/a&gt;顺序委托给其他保护性动态链接器列表。</target>
        </trans-unit>
        <trans-unit id="ad7c60b509d0b1f146c0575bae3be9add45158d9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; that delegates sequentially to a list of other guarding dynamic linkers in its &lt;a href=&quot;compositeguardingdynamiclinker#getGuardedInvocation(jdk.dynalink.linker.LinkRequest,jdk.dynalink.linker.LinkerServices)&quot;&gt;&lt;code&gt;CompositeGuardingDynamicLinker.getGuardedInvocation(LinkRequest, LinkerServices)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;../guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt;，它在其&lt;a href=&quot;compositeguardingdynamiclinker#getGuardedInvocation(jdk.dynalink.linker.LinkRequest,jdk.dynalink.linker.LinkerServices)&quot;&gt; &lt;code&gt;CompositeGuardingDynamicLinker.getGuardedInvocation(LinkRequest, LinkerServices)&lt;/code&gt; &lt;/a&gt;顺序地委派给其他保护动态链接器的列表。</target>
        </trans-unit>
        <trans-unit id="dba6f0c1acf2151ba3a42a66c5c34a8aba57158d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; object or &lt;code&gt;null&lt;/code&gt; if no resource with this name is found</source>
          <target state="translated">一个&lt;a href=&quot;../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;对象；如果找不到具有此名称的资源，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a612fe212b2e0a6a82c1619af955f9181b263640" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; object; &lt;code&gt;null&lt;/code&gt; if no resource with this name is found, the resource is in a package that is not &lt;a href=&quot;module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;open&lt;/a&gt; to at least the caller module, or access to the resource is denied by the security manager.</source>
          <target state="translated">一个&lt;a href=&quot;../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;对象；如果没有找到具有该名称的资源，或者该资源位于至少不能对调用者模块&lt;a href=&quot;module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;打开&lt;/a&gt;的程序包中，或者安全管理器拒绝对该资源的访问，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d25934cda3a9bfafd7fae12fbc5f6a17dbcc7d6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; providing thread safety and atomicity guarantees.</source>
          <target state="translated">一个&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;提供的线程安全性和原子性保证。</target>
        </trans-unit>
        <trans-unit id="62db7b7f9d0139d2e61cb326d0f7b697d1a9d526" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; object for reading the resource, or &lt;code&gt;null&lt;/code&gt; if the resource could not be found</source>
          <target state="translated">一个&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;读取资源，或对象 &lt;code&gt;null&lt;/code&gt; ，如果资源无法被发现</target>
        </trans-unit>
        <trans-unit id="92904b2916ccc19475c9d8a05961cc34f9478be0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; object or &lt;code&gt;null&lt;/code&gt; if no resource with this name is found</source>
          <target state="translated">一个&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;对象或 &lt;code&gt;null&lt;/code&gt; ，如果有没有相应的资源被发现</target>
        </trans-unit>
        <trans-unit id="43e76ed2c2b3fb1bf4caf7d1271322cb62bbd186" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; object; &lt;code&gt;null&lt;/code&gt; if no resource with this name is found, the resource cannot be located by a URL, the resource is in a package that is not &lt;a href=&quot;module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;open&lt;/a&gt; to at least the caller module, or access to the resource is denied by the security manager.</source>
          <target state="translated">一个&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;对象; 如果没有找到具有该名称的资源，则该资源不能由URL定位，该资源位于至少对调用者模块不&lt;a href=&quot;module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;开放&lt;/a&gt;的程序包中，或者安全管理器拒绝对该资源的访问，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d71c936b3325c278faa3b09399c0af11c11a9318" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; to the resource; &lt;code&gt;
          null&lt;/code&gt; if the resource could not be found, a URL could not be constructed to locate the resource, the resource is in a package that is not opened unconditionally or access to the resource is denied by the security manager.</source>
          <target state="translated">资源的&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;；如果找不到资源，无法构造URL来定位资源，该资源位于没有无条件打开的包中或者安全管理器拒绝对该资源的访问，则为 &lt;code&gt; null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b0803c10a5a0b7b7405f75def879d1b018c2de9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../parsers/documentbuilder&quot;&gt;&lt;code&gt;DocumentBuilder&lt;/code&gt;&lt;/a&gt; uses this information to properly implement &lt;a href=&quot;../../../org/w3c/dom/attr#isId()&quot;&gt;&lt;code&gt;Attr.isId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一&lt;a href=&quot;../parsers/documentbuilder&quot;&gt; &lt;code&gt;DocumentBuilder&lt;/code&gt; &lt;/a&gt;使用此信息来正确地实现&lt;a href=&quot;../../../org/w3c/dom/attr#isId()&quot;&gt; &lt;code&gt;Attr.isId()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ffceb7e507fb0a892fc75dd1e51b54d2140ad41" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; that additionally supports operations that wait for the queue to become non-empty when retrieving an element, and wait for space to become available in the queue when storing an element.</source>
          <target state="translated">甲&lt;a href=&quot;../queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;支持两个附加操作该等待队列中检索一个元素时变为非空，并等待空间在队列中存储元素时变得可用。</target>
        </trans-unit>
        <trans-unit id="8bf9c6a1bf6c8ca478c3c983832aafa5229fdfdb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../servicenotfoundexception&quot;&gt;&lt;code&gt;ServiceNotFoundException&lt;/code&gt;&lt;/a&gt; if a setMethod field is defined in the descriptor for the attribute and the managed resource is null; or if no setMethod field is defined and caching is not enabled for the attribute. Note that if there is no getMethod field either, then caching is automatically enabled.</source>
          <target state="translated">甲&lt;a href=&quot;../servicenotfoundexception&quot;&gt; &lt;code&gt;ServiceNotFoundException&lt;/code&gt; 的&lt;/a&gt;，如果使用setMethod字段在描述符属性和管理资源定义为空; 或如果未定义setMethod字段并且未为该属性启用缓存。请注意，如果也没有getMethod字段，则将自动启用缓存。</target>
        </trans-unit>
        <trans-unit id="9e09a194da693429884fa3e8508ac4c1d7d8029a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; projection of a ConcurrentHashMap may be created (using &lt;a href=&quot;#newKeySet()&quot;&gt;&lt;code&gt;newKeySet()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#newKeySet(int)&quot;&gt;&lt;code&gt;newKeySet(int)&lt;/code&gt;&lt;/a&gt;), or viewed (using &lt;a href=&quot;#keySet(V)&quot;&gt;&lt;code&gt;keySet(Object)&lt;/code&gt;&lt;/a&gt; when only keys are of interest, and the mapped values are (perhaps transiently) not used or all take the same mapping value.</source>
          <target state="translated">甲&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;一个的ConcurrentHashMap的投影可被创建（使用&lt;a href=&quot;#newKeySet()&quot;&gt; &lt;code&gt;newKeySet()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#newKeySet(int)&quot;&gt; &lt;code&gt;newKeySet(int)&lt;/code&gt; &lt;/a&gt;），或观察（使用&lt;a href=&quot;#keySet(V)&quot;&gt; &lt;code&gt;keySet(Object)&lt;/code&gt; &lt;/a&gt;时仅键是感兴趣的，并且被映射的值是（可能瞬时）不使用或全部取相同的映射值。</target>
        </trans-unit>
        <trans-unit id="a4e9e19029dbb5add608aa6e16ff760b042947a7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; projection of a ConcurrentHashMap may be created (using &lt;a href=&quot;concurrenthashmap#newKeySet--&quot;&gt;&lt;code&gt;newKeySet()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;concurrenthashmap#newKeySet-int-&quot;&gt;&lt;code&gt;newKeySet(int)&lt;/code&gt;&lt;/a&gt;), or viewed (using &lt;a href=&quot;concurrenthashmap#keySet-V-&quot;&gt;&lt;code&gt;keySet(Object)&lt;/code&gt;&lt;/a&gt; when only keys are of interest, and the mapped values are (perhaps transiently) not used or all take the same mapping value.</source>
          <target state="translated">甲&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;一个的ConcurrentHashMap的投影可被创建（使用&lt;a href=&quot;concurrenthashmap#newKeySet--&quot;&gt; &lt;code&gt;newKeySet()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;concurrenthashmap#newKeySet-int-&quot;&gt; &lt;code&gt;newKeySet(int)&lt;/code&gt; &lt;/a&gt;），或观察（使用&lt;a href=&quot;concurrenthashmap#keySet-V-&quot;&gt; &lt;code&gt;keySet(Object)&lt;/code&gt; &lt;/a&gt;时仅键是感兴趣的，并且被映射的值是（可能瞬时）不使用或全部取相同的映射值。</target>
        </trans-unit>
        <trans-unit id="be331f7b5a864efc83138b67a21f7e2fe7ef6ac2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; that uses an internal &lt;a href=&quot;copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; for all of its operations.</source>
          <target state="translated">一个使用内部&lt;a href=&quot;copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt;进行所有操作的&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="efb4a8120d13d79cc9dcf294ea51182dad3073dd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; that uses an internal &lt;a href=&quot;copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; for all of its operations. Thus, it shares the same basic properties:</source>
          <target state="translated">一个使用内部&lt;a href=&quot;copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt;进行所有操作的&lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;。因此，它具有相同的基本属性：</target>
        </trans-unit>
        <trans-unit id="8dbf6d061899ddef03364739ab7eb527a1d175d0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; available from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; can be used to wait for process termination, and possibly trigger dependent actions.</source>
          <target state="translated">&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;提供的&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;可用于等待进程终止，并可能触发依赖的操作。</target>
        </trans-unit>
        <trans-unit id="277a6a216b99c43ae18f017143f28d3b87ed8ae4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; represents the period of time that local time differs from UTC/Greenwich. This is usually a fixed number of hours and minutes. It is equivalent to the &lt;a href=&quot;../zoneoffset#getTotalSeconds()&quot;&gt;&lt;code&gt;total amount&lt;/code&gt;&lt;/a&gt; of the offset in seconds. For example, during the winter Paris has an offset of &lt;code&gt;+01:00&lt;/code&gt;, which is 3600 seconds.</source>
          <target state="translated">甲&lt;a href=&quot;../zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;表示的时间段，从UTC /格林威治本地时间不同。这通常是固定的小时数和分钟数。它等于以秒为单位的偏移&lt;a href=&quot;../zoneoffset#getTotalSeconds()&quot;&gt; &lt;code&gt;total amount&lt;/code&gt; &lt;/a&gt;。例如，在冬季，巴黎的偏移量为 &lt;code&gt;+01:00&lt;/code&gt; ，即3600秒。</target>
        </trans-unit>
        <trans-unit id="3b865fb1319606c6e09017437d962d44df137e3f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; represents the period of time that local time differs from UTC/Greenwich. This is usually a fixed number of hours and minutes. It is equivalent to the &lt;a href=&quot;../zoneoffset#getTotalSeconds--&quot;&gt;&lt;code&gt;total amount&lt;/code&gt;&lt;/a&gt; of the offset in seconds. For example, during the winter Paris has an offset of &lt;code&gt;+01:00&lt;/code&gt;, which is 3600 seconds.</source>
          <target state="translated">甲&lt;a href=&quot;../zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;表示的时间段，从UTC /格林威治本地时间不同。这通常是固定的小时数和分钟数。它等于以秒为单位的偏移&lt;a href=&quot;../zoneoffset#getTotalSeconds--&quot;&gt; &lt;code&gt;total amount&lt;/code&gt; &lt;/a&gt;。例如，在冬季，巴黎的偏移量为 &lt;code&gt;+01:00&lt;/code&gt; ，即3600秒。</target>
        </trans-unit>
        <trans-unit id="c61e2d7c471ce08f6bc574a15853bccffea04ea0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; in which producers may wait for consumers to receive elements.</source>
          <target state="translated">一&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;在生产商可能会等待消费者接受的元素。</target>
        </trans-unit>
        <trans-unit id="d2da4722fe3b889a3e89333836804f1518a27ee8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; in which producers may wait for consumers to receive elements. A &lt;code&gt;TransferQueue&lt;/code&gt; may be useful for example in message passing applications in which producers sometimes (using method &lt;a href=&quot;#transfer(E)&quot;&gt;&lt;code&gt;transfer(E)&lt;/code&gt;&lt;/a&gt;) await receipt of elements by consumers invoking &lt;code&gt;take&lt;/code&gt; or &lt;code&gt;poll&lt;/code&gt;, while at other times enqueue elements (via method &lt;code&gt;put&lt;/code&gt;) without waiting for receipt. &lt;a href=&quot;#tryTransfer(E)&quot;&gt;Non-blocking&lt;/a&gt; and &lt;a href=&quot;#tryTransfer(E,long,java.util.concurrent.TimeUnit)&quot;&gt;time-out&lt;/a&gt; versions of &lt;code&gt;tryTransfer&lt;/code&gt; are also available. A &lt;code&gt;TransferQueue&lt;/code&gt; may also be queried, via &lt;a href=&quot;#hasWaitingConsumer()&quot;&gt;&lt;code&gt;hasWaitingConsumer()&lt;/code&gt;&lt;/a&gt;, whether there are any threads waiting for items, which is a converse analogy to a &lt;code&gt;peek&lt;/code&gt; operation.</source>
          <target state="translated">一&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;在生产商可能会等待消费者接受的元素。甲 &lt;code&gt;TransferQueue&lt;/code&gt; 可以是例如在消息传递应用，其中有时生产者（使用方法&lt;a href=&quot;#transfer(E)&quot;&gt; &lt;code&gt;transfer(E)&lt;/code&gt; &lt;/a&gt;）等待接收由消费者调用元件的 &lt;code&gt;take&lt;/code&gt; 或 &lt;code&gt;poll&lt;/code&gt; ，而在其他时间排队元素（通过方法 &lt;code&gt;put&lt;/code&gt; ），而不等待接收。也可以使用 &lt;code&gt;tryTransfer&lt;/code&gt; &lt;a href=&quot;#tryTransfer(E)&quot;&gt;的非阻塞&lt;/a&gt;和&lt;a href=&quot;#tryTransfer(E,long,java.util.concurrent.TimeUnit)&quot;&gt;超时&lt;/a&gt;版本。甲 &lt;code&gt;TransferQueue&lt;/code&gt; 还可以查询，经由&lt;a href=&quot;#hasWaitingConsumer()&quot;&gt; &lt;code&gt;hasWaitingConsumer()&lt;/code&gt; &lt;/a&gt;，是否有任何线程在等待项目，这与 &lt;code&gt;peek&lt;/code&gt; 操作相反。</target>
        </trans-unit>
        <trans-unit id="3cd18643ea2f82fbc2020f2325a3e672cf888dae" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; in which producers may wait for consumers to receive elements. A &lt;code&gt;TransferQueue&lt;/code&gt; may be useful for example in message passing applications in which producers sometimes (using method &lt;a href=&quot;transferqueue#transfer-E-&quot;&gt;&lt;code&gt;transfer(E)&lt;/code&gt;&lt;/a&gt;) await receipt of elements by consumers invoking &lt;code&gt;take&lt;/code&gt; or &lt;code&gt;poll&lt;/code&gt;, while at other times enqueue elements (via method &lt;code&gt;put&lt;/code&gt;) without waiting for receipt. &lt;a href=&quot;transferqueue#tryTransfer-E-&quot;&gt;Non-blocking&lt;/a&gt; and &lt;a href=&quot;transferqueue#tryTransfer-E-long-java.util.concurrent.TimeUnit-&quot;&gt;time-out&lt;/a&gt; versions of &lt;code&gt;tryTransfer&lt;/code&gt; are also available. A &lt;code&gt;TransferQueue&lt;/code&gt; may also be queried, via &lt;a href=&quot;transferqueue#hasWaitingConsumer--&quot;&gt;&lt;code&gt;hasWaitingConsumer()&lt;/code&gt;&lt;/a&gt;, whether there are any threads waiting for items, which is a converse analogy to a &lt;code&gt;peek&lt;/code&gt; operation.</source>
          <target state="translated">一&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;在生产商可能会等待消费者接受的元素。甲 &lt;code&gt;TransferQueue&lt;/code&gt; 可以是例如在消息传递应用，其中有时生产者（使用方法&lt;a href=&quot;transferqueue#transfer-E-&quot;&gt; &lt;code&gt;transfer(E)&lt;/code&gt; &lt;/a&gt;）等待接收由消费者调用元件的 &lt;code&gt;take&lt;/code&gt; 或 &lt;code&gt;poll&lt;/code&gt; ，而在其他时间排队元素（通过方法 &lt;code&gt;put&lt;/code&gt; ），而不等待接收。 &lt;code&gt;tryTransfer&lt;/code&gt; &lt;a href=&quot;transferqueue#tryTransfer-E-&quot;&gt;的非阻塞&lt;/a&gt;和&lt;a href=&quot;transferqueue#tryTransfer-E-long-java.util.concurrent.TimeUnit-&quot;&gt;超时&lt;/a&gt;版本也可用。甲 &lt;code&gt;TransferQueue&lt;/code&gt; 还可以查询，经由&lt;a href=&quot;transferqueue#hasWaitingConsumer--&quot;&gt; &lt;code&gt;hasWaitingConsumer()&lt;/code&gt; &lt;/a&gt;，是否有任何线程在等待项目，这与 &lt;code&gt;peek&lt;/code&gt; 操作相反。</target>
        </trans-unit>
        <trans-unit id="ec45ca597ae996747e8a0083bd998a797a9539d5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; in which each insert operation must wait for a corresponding remove operation by another thread, and vice versa.</source>
          <target state="translated">一个&lt;a href=&quot;blockingqueue&quot;&gt;阻塞队列&lt;/a&gt;，其中每个插入操作必须等待另一个线程进行相应的删除操作，反之亦然。</target>
        </trans-unit>
        <trans-unit id="2048d85d25ed94ca6135978e0122e6078feb309a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; in which each insert operation must wait for a corresponding remove operation by another thread, and vice versa. A synchronous queue does not have any internal capacity, not even a capacity of one. You cannot &lt;code&gt;peek&lt;/code&gt; at a synchronous queue because an element is only present when you try to remove it; you cannot insert an element (using any method) unless another thread is trying to remove it; you cannot iterate as there is nothing to iterate. The &lt;em&gt;head&lt;/em&gt; of the queue is the element that the first queued inserting thread is trying to add to the queue; if there is no such queued thread then no element is available for removal and &lt;code&gt;poll()&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;. For purposes of other &lt;code&gt;Collection&lt;/code&gt; methods (for example &lt;code&gt;contains&lt;/code&gt;), a &lt;code&gt;SynchronousQueue&lt;/code&gt; acts as an empty collection. This queue does not permit &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">一个&lt;a href=&quot;blockingqueue&quot;&gt;阻塞队列&lt;/a&gt;，其中每个插入操作必须等待另一个线程进行相应的删除操作，反之亦然。同步队列没有任何内部容量，甚至没有一个容量。您无法 &lt;code&gt;peek&lt;/code&gt; 同步队列，因为仅当您尝试删除它时，该元素才存在。您不能插入元素（使用任何方法），除非另一个线程试图将其删除；您无法进行迭代，因为没有要迭代的内容。队列的&lt;em&gt;头部&lt;/em&gt;是第一个排队的插入线程试图添加到队列中的元素；如果没有这样的排队线程，则没有元素可用于删除，并且 &lt;code&gt;poll()&lt;/code&gt; 将返回 &lt;code&gt;null&lt;/code&gt; 。为了其他 &lt;code&gt;Collection&lt;/code&gt; 目的方法（例如 &lt;code&gt;contains&lt;/code&gt; ），则 &lt;code&gt;SynchronousQueue&lt;/code&gt; 充当空集合。此队列不允许 &lt;code&gt;null&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="ab7bc3bd400bf41c2ff2c7269822e90a6f35f53d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;coderresult#malformedForLength(int)&quot;&gt;malformed-input&lt;/a&gt; result indicates that a malformed-input error has been detected. The malformed bytes begin at the input buffer's (possibly incremented) position; the number of malformed bytes may be determined by invoking the result object's &lt;a href=&quot;coderresult#length()&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;#onMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;malformed action&lt;/a&gt; of this decoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the malformed input will be ignored or replaced, as requested.</source>
          <target state="translated">甲&lt;a href=&quot;coderresult#malformedForLength(int)&quot;&gt;错误输入&lt;/a&gt;结果指示已经检测到错误输入错误。格式错误的字节始于输入缓冲区的位置（可能是递增的）。格式错误的字节数可以通过调用结果对象的&lt;a href=&quot;coderresult#length()&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;方法来确定。仅当此解码器的&lt;a href=&quot;#onMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;格式错误的行为&lt;/a&gt;是&lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 时&lt;/a&gt;，这种情况才适用。否则，将根据要求忽略或替换格式错误的输入。</target>
        </trans-unit>
        <trans-unit id="d4facc66fd22bee4d4f940ee144b4df7a51ac3ea" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;coderresult#malformedForLength(int)&quot;&gt;malformed-input&lt;/a&gt; result indicates that a malformed-input error has been detected. The malformed characters begin at the input buffer's (possibly incremented) position; the number of malformed characters may be determined by invoking the result object's &lt;a href=&quot;coderresult#length()&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;#onMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;malformed action&lt;/a&gt; of this encoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the malformed input will be ignored or replaced, as requested.</source>
          <target state="translated">甲&lt;a href=&quot;coderresult#malformedForLength(int)&quot;&gt;错误输入&lt;/a&gt;结果指示已经检测到错误输入错误。格式错误的字符开始于输入缓冲区的位置（可能是递增的）。格式错误的字符数可以通过调用结果对象的&lt;a href=&quot;coderresult#length()&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;方法来确定。仅当此编码器的&lt;a href=&quot;#onMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;格式错误的行为&lt;/a&gt;是&lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 时&lt;/a&gt;，这种情况才适用；否则，将根据要求忽略或替换格式错误的输入。</target>
        </trans-unit>
        <trans-unit id="37dc8e605e4b17de4ad0b00e29ff2ed2f0879183" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;coderresult#malformedForLength-int-&quot;&gt;malformed-input&lt;/a&gt; result indicates that a malformed-input error has been detected. The malformed bytes begin at the input buffer's (possibly incremented) position; the number of malformed bytes may be determined by invoking the result object's &lt;a href=&quot;coderresult#length--&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;charsetdecoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;malformed action&lt;/a&gt; of this decoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the malformed input will be ignored or replaced, as requested.</source>
          <target state="translated">甲&lt;a href=&quot;coderresult#malformedForLength-int-&quot;&gt;错误输入&lt;/a&gt;结果指示已经检测到错误输入错误。格式错误的字节始于输入缓冲区的位置（可能是递增的）。格式错误的字节数可以通过调用结果对象的&lt;a href=&quot;coderresult#length--&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;方法来确定。仅当此解码器的&lt;a href=&quot;charsetdecoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;格式错误的行为&lt;/a&gt;是&lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 时&lt;/a&gt;，这种情况才适用。否则，将根据要求忽略或替换格式错误的输入。</target>
        </trans-unit>
        <trans-unit id="f428d88605448e02d0039be4c865a5189a5a84d1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;coderresult#malformedForLength-int-&quot;&gt;malformed-input&lt;/a&gt; result indicates that a malformed-input error has been detected. The malformed characters begin at the input buffer's (possibly incremented) position; the number of malformed characters may be determined by invoking the result object's &lt;a href=&quot;coderresult#length--&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; method. This case applies only if the &lt;a href=&quot;charsetencoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;malformed action&lt;/a&gt; of this encoder is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;; otherwise the malformed input will be ignored or replaced, as requested.</source>
          <target state="translated">甲&lt;a href=&quot;coderresult#malformedForLength-int-&quot;&gt;错误输入&lt;/a&gt;结果指示已经检测到错误输入错误。格式错误的字符从输入缓冲区的位置开始（可能是递增的）。格式错误的字符数可以通过调用结果对象的&lt;a href=&quot;coderresult#length--&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;方法来确定。仅当此编码器的&lt;a href=&quot;charsetencoder#onMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;格式错误的行为&lt;/a&gt;是&lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; 时&lt;/a&gt;，这种情况才适用。否则，将根据要求忽略或替换格式错误的输入。</target>
        </trans-unit>
        <trans-unit id="bbdff358d3d93270d3b49e5121994b44fae3466d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; has an encounter order if the corresponding &lt;a href=&quot;collection#iterator()&quot;&gt;&lt;code&gt;Collection.iterator()&lt;/code&gt;&lt;/a&gt; documents an order. If so, the encounter order is the same as the documented order. Otherwise, a collection does not have an encounter order.</source>
          <target state="translated">一个&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;有遭遇订单，如果相应的&lt;a href=&quot;collection#iterator()&quot;&gt; &lt;code&gt;Collection.iterator()&lt;/code&gt; &lt;/a&gt;文档的顺序。如果是这样，则相遇顺序与记录的顺序相同。否则，集合没有遇到顺序。</target>
        </trans-unit>
        <trans-unit id="3f35d1e5ef784758d765b02805cd2bcc0afad6eb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; has an encounter order if the corresponding &lt;a href=&quot;collection#iterator--&quot;&gt;&lt;code&gt;Collection.iterator()&lt;/code&gt;&lt;/a&gt; documents an order. If so, the encounter order is the same as the documented order. Otherwise, a collection does not have an encounter order.</source>
          <target state="translated">一个&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;有遭遇订单，如果相应的&lt;a href=&quot;collection#iterator--&quot;&gt; &lt;code&gt;Collection.iterator()&lt;/code&gt; &lt;/a&gt;文档的顺序。如果是这样，则遇到顺序与记录的顺序相同。否则，集合没有遇到顺序。</target>
        </trans-unit>
        <trans-unit id="cc2b847cc7c57e579a25f0284eb310a0cfef0a28" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;collector&quot;&gt;&lt;code&gt;Collector&lt;/code&gt;&lt;/a&gt; that supports concurrent reduction is marked with the &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt;&lt;/a&gt; characteristic. However, a concurrent collection also has a downside. If multiple threads are depositing results concurrently into a shared container, the order in which results are deposited is non-deterministic. Consequently, a concurrent reduction is only possible if ordering is not important for the stream being processed. The &lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt;&lt;code&gt;Stream.collect(Collector)&lt;/code&gt;&lt;/a&gt; implementation will only perform a concurrent reduction if</source>
          <target state="translated">甲&lt;a href=&quot;collector&quot;&gt; &lt;code&gt;Collector&lt;/code&gt; &lt;/a&gt;支持并发还原标有&lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt; &lt;/a&gt;特性。但是，并发收集也有一个缺点。如果有多个线程将结果同时存储到共享容器中，则结果存储的顺序是不确定的。因此，仅在排序对于正在处理的流不重要的情况下，才有可能同时进行缩减。该&lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt; &lt;code&gt;Stream.collect(Collector)&lt;/code&gt; &lt;/a&gt;执行将只执行并发如果减少</target>
        </trans-unit>
        <trans-unit id="ab018cbfa657eeeb3853dd6f519e165f35dbdda0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;collector&quot;&gt;&lt;code&gt;Collector&lt;/code&gt;&lt;/a&gt; that supports concurrent reduction is marked with the &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt;&lt;/a&gt; characteristic. However, a concurrent collection also has a downside. If multiple threads are depositing results concurrently into a shared container, the order in which results are deposited is non-deterministic. Consequently, a concurrent reduction is only possible if ordering is not important for the stream being processed. The &lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt;&lt;code&gt;Stream.collect(Collector)&lt;/code&gt;&lt;/a&gt; implementation will only perform a concurrent reduction if</source>
          <target state="translated">甲&lt;a href=&quot;collector&quot;&gt; &lt;code&gt;Collector&lt;/code&gt; &lt;/a&gt;支持并发还原标有&lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt; &lt;/a&gt;特性。但是，并发收集也有一个缺点。如果有多个线程将结果同时存储到共享容器中，则结果存储的顺序是不确定的。因此，仅在排序对于正在处理的流不重要的情况下，才有可能同时减少。该&lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt; &lt;code&gt;Stream.collect(Collector)&lt;/code&gt; &lt;/a&gt;执行将只执行并发如果减少</target>
        </trans-unit>
        <trans-unit id="0e7dad79d0852bf10bcfb2d08d6293f448e8a4d2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;completionservice&quot;&gt;&lt;code&gt;CompletionService&lt;/code&gt;&lt;/a&gt; that uses a supplied &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; to execute tasks.</source>
          <target state="translated">一个&lt;a href=&quot;completionservice&quot;&gt; &lt;code&gt;CompletionService&lt;/code&gt; &lt;/a&gt;使用所提供&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;来执行任务。</target>
        </trans-unit>
        <trans-unit id="8fc11ba08553877860bb977c11eb04da587620cf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;completionservice&quot;&gt;&lt;code&gt;CompletionService&lt;/code&gt;&lt;/a&gt; that uses a supplied &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; to execute tasks. This class arranges that submitted tasks are, upon completion, placed on a queue accessible using &lt;code&gt;take&lt;/code&gt;. The class is lightweight enough to be suitable for transient use when processing groups of tasks.</source>
          <target state="translated">一个&lt;a href=&quot;completionservice&quot;&gt; &lt;code&gt;CompletionService&lt;/code&gt; &lt;/a&gt;使用所提供&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;来执行任务。此类安排完成后将提交的任务放在使用 &lt;code&gt;take&lt;/code&gt; 可以访问的队列上。该类足够轻巧，适合在处理任务组时短暂使用。</target>
        </trans-unit>
        <trans-unit id="5487865321680404f56b9512a31e170dee210b17" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;concurrentmap&quot;&gt;&lt;code&gt;ConcurrentMap&lt;/code&gt;&lt;/a&gt; supporting &lt;a href=&quot;../navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; operations, and recursively so for its navigable sub-maps.</source>
          <target state="translated">一个&lt;a href=&quot;concurrentmap&quot;&gt; &lt;code&gt;ConcurrentMap&lt;/code&gt; &lt;/a&gt;支持&lt;a href=&quot;../navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt;操作，并且递归地支持其可导航子地图。</target>
        </trans-unit>
        <trans-unit id="863b55387f3da2ec571636428aef2853fe2d732b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;constant/package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for an &lt;code&gt;enum&lt;/code&gt; constant.</source>
          <target state="translated">甲&lt;a href=&quot;constant/package-summary#nominal&quot;&gt;标称描述符&lt;/a&gt;用于 &lt;code&gt;enum&lt;/code&gt; 常数。</target>
        </trans-unit>
        <trans-unit id="f7641f19a7578375417db247c91b15b840ee693e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt; is a description of a constant value. Such a description is the &lt;em&gt;nominal form&lt;/em&gt; of the constant value; it is not the value itself, but rather a &quot;recipe&quot; for describing the value, storing the value in a constant pool entry, or reconstituting the value given a class loading context. Every &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt; knows how to &lt;em&gt;resolve&lt;/em&gt; itself -- compute the value that it describes -- via &lt;a href=&quot;constantdesc#resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)&quot;&gt;&lt;code&gt;ConstantDesc.resolveConstantDesc&lt;/code&gt;&lt;/a&gt;. This allows an API which accepts &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt; objects to evaluate them reflectively, provided that the classes and methods referenced in their nominal description are present and accessible.</source>
          <target state="translated">甲&lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; &lt;/a&gt;是恒定值的描述。这样的描述是常数值的&lt;em&gt;名义形式&lt;/em&gt;。它不是值本身，而是用于描述值，将值存储在常量池条目中或在给定类加载上下文的情况下重构值的&amp;ldquo;配方&amp;rdquo;。每个&lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; 都&lt;/a&gt;知道如何&lt;em&gt;解决&lt;/em&gt;自身-通过&lt;a href=&quot;constantdesc#resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)&quot;&gt; &lt;code&gt;ConstantDesc.resolveConstantDesc&lt;/code&gt; &lt;/a&gt;计算其描述的值。这允许接受&lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; &lt;/a&gt;对象的API进行反射性评估，前提是存在并可以访问其名义描述中引用的类和方法。</target>
        </trans-unit>
        <trans-unit id="0ff16a3f7fcfc58771d7d7c99226a55b1dced8e2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;countermonitor&quot;&gt;&lt;code&gt;CounterMonitor&lt;/code&gt;&lt;/a&gt; observes attributes of integer type. The attributes are assumed to be non-negative, and monotonically increasing except for a possible &lt;em&gt;roll-over&lt;/em&gt; at a specified &lt;em&gt;modulus&lt;/em&gt;. Each observed attribute has an associated &lt;em&gt;threshold&lt;/em&gt; value. A notification is sent when the attribute exceeds its threshold.</source>
          <target state="translated">甲&lt;a href=&quot;countermonitor&quot;&gt; &lt;code&gt;CounterMonitor&lt;/code&gt; &lt;/a&gt;观察整数类型的属性。假定属性为非负数，并且除了在指定&lt;em&gt;模数下&lt;/em&gt;可能发生&lt;em&gt;翻转&lt;/em&gt;之外，单调增加。每个观察到的属性都有一个关联的&lt;em&gt;阈&lt;/em&gt;值。当属性超过其阈值时，将发送通知。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf7c7740d35492b515d5429814617f3d7cc18903" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt; is a resettable multiway synchronization point useful in some styles of parallel programming.</source>
          <target state="translated">甲&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;是可复位的多路同步点在一些风格并行编程的有用的。</target>
        </trans-unit>
        <trans-unit id="a841608c7059c5a7a581927322bcccc959673a92" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt; value indicates that field is not set.</source>
          <target state="translated">一个&lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; &lt;/a&gt;值指示不设置字段。</target>
        </trans-unit>
        <trans-unit id="a17b0dc0c53cf7d6fe7e42aadfa8ecff813092a4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;docattributeset&quot;&gt;&lt;code&gt;DocAttributeSet&lt;/code&gt;&lt;/a&gt;, containing &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;s, specifies the characteristics of an individual doc and the print job settings to be applied to an individual doc.</source>
          <target state="translated">甲&lt;a href=&quot;docattributeset&quot;&gt; &lt;code&gt;DocAttributeSet&lt;/code&gt; &lt;/a&gt;，含有&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt; S，指定一个单个文档和所述打印作业设置的特性，以被应用到单个文档。</target>
        </trans-unit>
        <trans-unit id="ed608efcfa013ea2be917bbb860290d8dbb12f72" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;flow.publisher&quot;&gt;&lt;code&gt;Flow.Publisher&lt;/code&gt;&lt;/a&gt; that asynchronously issues submitted (non-null) items to current subscribers until it is closed.</source>
          <target state="translated">一个&lt;a href=&quot;flow.publisher&quot;&gt; &lt;code&gt;Flow.Publisher&lt;/code&gt; &lt;/a&gt;，它以异步方式将提交的（非null）项目发布给当前的订阅者，直到关闭为止。</target>
        </trans-unit>
        <trans-unit id="026d41f21cfa4376df4ce02074add91f83fca562" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;flow.publisher&quot;&gt;&lt;code&gt;Flow.Publisher&lt;/code&gt;&lt;/a&gt; that asynchronously issues submitted (non-null) items to current subscribers until it is closed. Each current subscriber receives newly submitted items in the same order unless drops or exceptions are encountered. Using a SubmissionPublisher allows item generators to act as compliant &lt;a href=&quot;http://www.reactive-streams.org/&quot;&gt; reactive-streams&lt;/a&gt; Publishers relying on drop handling and/or blocking for flow control.</source>
          <target state="translated">一个&lt;a href=&quot;flow.publisher&quot;&gt; &lt;code&gt;Flow.Publisher&lt;/code&gt; &lt;/a&gt;，它以异步方式将提交的（非null）项目发布给当前的订阅者，直到关闭为止。每个当前订户以相同的顺序接收新提交的项目，除非遇到掉落或异常。使用SubmissionPublisher可以使项目生成器充当依从的&lt;a href=&quot;http://www.reactive-streams.org/&quot;&gt;反应流&lt;/a&gt;发布者，这些发布者依赖于墨滴处理和/或阻塞来进行流量控制。</target>
        </trans-unit>
        <trans-unit id="0224e649b252d805cb53fe47b42180a2218c478a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;flow.subscriber&quot;&gt;&lt;code&gt;Flow.Subscriber&lt;/code&gt;&lt;/a&gt; arranges that items be requested and processed. Items (invocations of &lt;a href=&quot;flow.subscriber#onNext(T)&quot;&gt;&lt;code&gt;Flow.Subscriber.onNext(T)&lt;/code&gt;&lt;/a&gt;) are not issued unless requested, but multiple items may be requested. Many Subscriber implementations can arrange this in the style of the following example, where a buffer size of 1 single-steps, and larger sizes usually allow for more efficient overlapped processing with less communication; for example with a value of 64, this keeps total outstanding requests between 32 and 64. Because Subscriber method invocations for a given &lt;a href=&quot;flow.subscription&quot;&gt;&lt;code&gt;Flow.Subscription&lt;/code&gt;&lt;/a&gt; are strictly ordered, there is no need for these methods to use locks or volatiles unless a Subscriber maintains multiple Subscriptions (in which case it is better to instead define multiple Subscribers, each with its own Subscription).</source>
          <target state="translated">一个&lt;a href=&quot;flow.subscriber&quot;&gt; &lt;code&gt;Flow.Subscriber&lt;/code&gt; &lt;/a&gt;的项目被要求和加工整理。除非提出要求，否则不会发出项目（&lt;a href=&quot;flow.subscriber#onNext(T)&quot;&gt; &lt;code&gt;Flow.Subscriber.onNext(T)&lt;/code&gt; 的&lt;/a&gt;调用），但是可能会请求多个项目。许多订户实现可以按照以下示例的方式进行安排，其中缓冲区大小为1个单步，而较大的缓冲区通常允许更高效的重叠处理，而所需的通信更少；例如，值为64，这会将未完成的请求总数保持在32和64之间。因为给定&lt;a href=&quot;flow.subscription&quot;&gt; &lt;code&gt;Flow.Subscription&lt;/code&gt; 的&lt;/a&gt;Subscriber方法调用按照严格的顺序，除非订阅服务器维护多个订阅服务器（在这种情况下，最好定义多个订阅服务器，每个订阅服务器都有自己的订阅服务器），则不需要使用这些方法来使用锁或volatile。</target>
        </trans-unit>
        <trans-unit id="ed79beedb532be58b73413e2f5d0f78429b3d587" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt; with a completion action performed when triggered and there are no remaining pending actions.</source>
          <target state="translated">一个&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;，在触发时执行完成动作，并且没有剩余的未决动作。</target>
        </trans-unit>
        <trans-unit id="a60bf0ce2dc486adc95611aa6a3e0d65ba11fb09" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt; with a completion action performed when triggered and there are no remaining pending actions. CountedCompleters are in general more robust in the presence of subtask stalls and blockage than are other forms of ForkJoinTasks, but are less intuitive to program. Uses of CountedCompleter are similar to those of other completion based components (such as &lt;a href=&quot;../../nio/channels/completionhandler&quot;&gt;&lt;code&gt;CompletionHandler&lt;/code&gt;&lt;/a&gt;) except that multiple &lt;em&gt;pending&lt;/em&gt; completions may be necessary to trigger the completion action &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt;, not just one. Unless initialized otherwise, the &lt;a href=&quot;#getPendingCount()&quot;&gt;pending count&lt;/a&gt; starts at zero, but may be (atomically) changed using methods &lt;a href=&quot;#setPendingCount(int)&quot;&gt;&lt;code&gt;setPendingCount(int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#addToPendingCount(int)&quot;&gt;&lt;code&gt;addToPendingCount(int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#compareAndSetPendingCount(int,int)&quot;&gt;&lt;code&gt;compareAndSetPendingCount(int, int)&lt;/code&gt;&lt;/a&gt;. Upon invocation of &lt;a href=&quot;#tryComplete()&quot;&gt;&lt;code&gt;tryComplete()&lt;/code&gt;&lt;/a&gt;, if the pending action count is nonzero, it is decremented; otherwise, the completion action is performed, and if this completer itself has a completer, the process is continued with its completer. As is the case with related synchronization components such as &lt;a href=&quot;phaser&quot;&gt;&lt;code&gt;Phaser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;, these methods affect only internal counts; they do not establish any further internal bookkeeping. In particular, the identities of pending tasks are not maintained. As illustrated below, you can create subclasses that do record some or all pending tasks or their results when needed. As illustrated below, utility methods supporting customization of completion traversals are also provided. However, because CountedCompleters provide only basic synchronization mechanisms, it may be useful to create further abstract subclasses that maintain linkages, fields, and additional support methods appropriate for a set of related usages.</source>
          <target state="translated">一个&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;，在触发时执行完成动作，并且没有剩余的未决动作。通常，在存在子任务停滞和阻塞的情况下，CountedCompleters比其他形式的ForkJoinTasks更健壮，但编程起来不那么直观。 CountedCompleter的用法与其他基于完成的组件（例如&lt;a href=&quot;../../nio/channels/completionhandler&quot;&gt; &lt;code&gt;CompletionHandler&lt;/code&gt; &lt;/a&gt;）的用法类似，不同的是可能需要多个&lt;em&gt;挂起的&lt;/em&gt;完成来触发&lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; 上&lt;/a&gt;的完成动作，而不仅仅是一个。除非以其他方式初始化，否则&lt;a href=&quot;#getPendingCount()&quot;&gt;暂挂计数&lt;/a&gt;从零开始，但可以使用&lt;a href=&quot;#setPendingCount(int)&quot;&gt; &lt;code&gt;setPendingCount(int)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#addToPendingCount(int)&quot;&gt; &lt;code&gt;addToPendingCount(int)&lt;/code&gt; &lt;/a&gt;方法（以原子方式）进行更改，然后&lt;a href=&quot;#compareAndSetPendingCount(int,int)&quot;&gt; &lt;code&gt;compareAndSetPendingCount(int, int)&lt;/code&gt; &lt;/a&gt;。调用&lt;a href=&quot;#tryComplete()&quot;&gt; &lt;code&gt;tryComplete()&lt;/code&gt; 时&lt;/a&gt;，如果挂起的操作计数为非零，则将其递减；否则，该计数将递减。否则，执行完成操作，并且如果此完成程序本身具有完成程序，则使用其完成程序继续该过程。与相关的同步组件（例如&lt;a href=&quot;phaser&quot;&gt; &lt;code&gt;Phaser&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; )一样&lt;/a&gt;，这些方法仅影响内部计数；他们没有建立任何进一步的内部簿记。特别是，未维护待处理任务的身份。如下所示，您可以创建子类，这些子类在需要时确实记录一些或所有未完成的任务或它们的结果。如下所示，还提供了支持完成遍历定制的实用程序方法。但是，由于CountedCompleters仅提供基本的同步机制，因此创建进一步的抽象子类（维护链接，字段和适用于一组相关用法的其他支持方法）可能是有用的。</target>
        </trans-unit>
        <trans-unit id="fb3ed653dbdcc6e068861ae3377f577af5456fa8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt; with a completion action performed when triggered and there are no remaining pending actions. CountedCompleters are in general more robust in the presence of subtask stalls and blockage than are other forms of ForkJoinTasks, but are less intuitive to program. Uses of CountedCompleter are similar to those of other completion based components (such as &lt;a href=&quot;../../nio/channels/completionhandler&quot;&gt;&lt;code&gt;CompletionHandler&lt;/code&gt;&lt;/a&gt;) except that multiple &lt;em&gt;pending&lt;/em&gt; completions may be necessary to trigger the completion action &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt;, not just one. Unless initialized otherwise, the &lt;a href=&quot;countedcompleter#getPendingCount--&quot;&gt;pending count&lt;/a&gt; starts at zero, but may be (atomically) changed using methods &lt;a href=&quot;countedcompleter#setPendingCount-int-&quot;&gt;&lt;code&gt;setPendingCount(int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;countedcompleter#addToPendingCount-int-&quot;&gt;&lt;code&gt;addToPendingCount(int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;countedcompleter#compareAndSetPendingCount-int-int-&quot;&gt;&lt;code&gt;compareAndSetPendingCount(int, int)&lt;/code&gt;&lt;/a&gt;. Upon invocation of &lt;a href=&quot;countedcompleter#tryComplete--&quot;&gt;&lt;code&gt;tryComplete()&lt;/code&gt;&lt;/a&gt;, if the pending action count is nonzero, it is decremented; otherwise, the completion action is performed, and if this completer itself has a completer, the process is continued with its completer. As is the case with related synchronization components such as &lt;a href=&quot;phaser&quot;&gt;&lt;code&gt;Phaser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt;, these methods affect only internal counts; they do not establish any further internal bookkeeping. In particular, the identities of pending tasks are not maintained. As illustrated below, you can create subclasses that do record some or all pending tasks or their results when needed. As illustrated below, utility methods supporting customization of completion traversals are also provided. However, because CountedCompleters provide only basic synchronization mechanisms, it may be useful to create further abstract subclasses that maintain linkages, fields, and additional support methods appropriate for a set of related usages.</source>
          <target state="translated">一个&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;，在触发时执行完成动作，并且没有剩余的未决动作。通常，在存在子任务停滞和阻塞的情况下，CountedCompleters比其他形式的ForkJoinTasks更为健壮，但编程不那么直观。 CountedCompleter的用法与其他基于完成的组件（例如&lt;a href=&quot;../../nio/channels/completionhandler&quot;&gt; &lt;code&gt;CompletionHandler&lt;/code&gt; &lt;/a&gt;）的用法类似，不同的是可能需要多个&lt;em&gt;挂起的&lt;/em&gt;完成来触发&lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; 上&lt;/a&gt;的完成动作，而不仅仅是一个。除非以其他方式初始化，否则&lt;a href=&quot;countedcompleter#getPendingCount--&quot;&gt;暂挂计数&lt;/a&gt;从零开始，但是可以使用&lt;a href=&quot;countedcompleter#setPendingCount-int-&quot;&gt; &lt;code&gt;setPendingCount(int)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;countedcompleter#addToPendingCount-int-&quot;&gt; &lt;code&gt;addToPendingCount(int)&lt;/code&gt; &lt;/a&gt;方法（以原子方式）进行更改，以及&lt;a href=&quot;countedcompleter#compareAndSetPendingCount-int-int-&quot;&gt; &lt;code&gt;compareAndSetPendingCount(int, int)&lt;/code&gt; &lt;/a&gt;。调用&lt;a href=&quot;countedcompleter#tryComplete--&quot;&gt; &lt;code&gt;tryComplete()&lt;/code&gt; 时&lt;/a&gt;，如果挂起的操作计数为非零，则将其递减；否则，该计数将递减。否则，执行完成操作，并且如果此完成程序本身具有完成程序，则使用其完成程序继续该过程。与相关的同步组件（例如&lt;a href=&quot;phaser&quot;&gt; &lt;code&gt;Phaser&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; )一样&lt;/a&gt;，这些方法仅影响内部计数；他们没有建立任何进一步的内部簿记。特别是，未维护待处理任务的身份。如下所示，您可以创建子类，在需要时确实记录一些或所有未完成的任务或它们的结果。如下所示，还提供了支持完成遍历定制的实用程序方法。但是，由于CountedCompleters仅提供基本的同步机制，因此创建进一步的抽象子类（维护链接，字段和适用于一组相关用法的其他支持方法）可能是有用的。</target>
        </trans-unit>
        <trans-unit id="01aa76019566735bcbbc891207a7f10feb22942c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; that is &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39c86cf98ef90fcf1a663c7ea35c635f02ef8181" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; that is &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;. Successful execution of the &lt;code&gt;run&lt;/code&gt; method causes completion of the &lt;code&gt;Future&lt;/code&gt; and allows access to its results.</source>
          <target state="translated">一个&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; 的&lt;/a&gt;。成功执行 &lt;code&gt;run&lt;/code&gt; 方法会导致 &lt;code&gt;Future&lt;/code&gt; 的完成，并允许访问其结果。</target>
        </trans-unit>
        <trans-unit id="9497a6b404465677f8a6392e98d814062889e3c5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; that may be explicitly completed (setting its value and status), and may be used as a &lt;a href=&quot;completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;, supporting dependent functions and actions that trigger upon its completion.</source>
          <target state="translated">可以明确完成（设置其值和状态）并可以用作&lt;a href=&quot;completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;，它支持在完成时触发的相关功能和操作。</target>
        </trans-unit>
        <trans-unit id="a78490901c38c9a824e6ce8c5131db90ed0da208" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;gaugemonitor&quot;&gt;&lt;code&gt;GaugeMonitor&lt;/code&gt;&lt;/a&gt; observes attributes of numerical type. Each observed attribute has an associated &lt;em&gt;high threshold&lt;/em&gt; and &lt;em&gt;low threshold&lt;/em&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;gaugemonitor&quot;&gt; &lt;code&gt;GaugeMonitor&lt;/code&gt; &lt;/a&gt;观察数值类型的属性。每个观察到的属性都有一个关联的&lt;em&gt;高阈值&lt;/em&gt;和&lt;em&gt;低阈值&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a9cc0a105ccb1b813228488039de0073b6c98704" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;gcinfo&quot;&gt;&lt;code&gt;GcInfo&lt;/code&gt;&lt;/a&gt; object containing some statistics about the GC cycle (start time, end time) and the memory usage before and after the GC cycle.</source>
          <target state="translated">一个&lt;a href=&quot;gcinfo&quot;&gt; &lt;code&gt;GcInfo&lt;/code&gt; &lt;/a&gt;对象，其中包含有关GC周期（开始时间，结束时间）以及GC周期之前和之后的内存使用情况的一些统计信息。</target>
        </trans-unit>
        <trans-unit id="b7dbfa3c19bc49325bb3201857c32ee3dc8f288e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;httpresponse.bodyhandler&quot;&gt;&lt;code&gt;BodyHandler&lt;/code&gt;&lt;/a&gt; must be supplied for each &lt;a href=&quot;httprequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; sent. The &lt;code&gt;BodyHandler&lt;/code&gt; determines how to handle the response body, if any. Once an &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; is received, the headers, response code, and body (typically) are available. Whether the response body bytes have been read or not depends on the type, &lt;code&gt;T&lt;/code&gt;, of the response body.</source>
          <target state="translated">甲&lt;a href=&quot;httpresponse.bodyhandler&quot;&gt; &lt;code&gt;BodyHandler&lt;/code&gt; &lt;/a&gt;必须为每个被提供&lt;a href=&quot;httprequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;发送。该 &lt;code&gt;BodyHandler&lt;/code&gt; 决定如何处理响应体，如果有的话。一旦&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 对象&lt;/a&gt;被接收时，头，响应代码，和身体（通常）是可用的。是否已读取响应主体字节取决于响应主体的类型 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ed6d8c65b8cee77ebe45720456bfca54776fee3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html&quot;&gt;JVM TI&lt;/a&gt; client is called an</source>
          <target state="translated">一个&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html&quot;&gt;JVM TI&lt;/a&gt;的客户端被称为</target>
        </trans-unit>
        <trans-unit id="83fabc9c2d9f90a6511e60bf17fbf41d85870f60" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;keymap&quot;&gt;&lt;code&gt;Keymap&lt;/code&gt;&lt;/a&gt; lets an application bind key strokes to actions. In order to allow keymaps to be shared across multiple text components, they can use actions that extend &lt;code&gt;TextAction&lt;/code&gt;. &lt;code&gt;TextAction&lt;/code&gt; can determine which &lt;code&gt;JTextComponent&lt;/code&gt; most recently has or had focus and therefore is the subject of the action (In the case that the &lt;code&gt;ActionEvent&lt;/code&gt; sent to the action doesn't contain the target text component as its source).</source>
          <target state="translated">一&lt;a href=&quot;keymap&quot;&gt; &lt;code&gt;Keymap&lt;/code&gt; &lt;/a&gt;让应用程序将击键绑定到操作。为了允许键映射在多个文本组件之间共享，它们可以使用扩展 &lt;code&gt;TextAction&lt;/code&gt; 的操作。 &lt;code&gt;TextAction&lt;/code&gt; 可以确定哪个 &lt;code&gt;JTextComponent&lt;/code&gt; 最近具有焦点或焦点，因此是该操作的主题（在发送到该操作的 &lt;code&gt;ActionEvent&lt;/code&gt; 不包含目标文本组件作为其源的情况下）。</target>
        </trans-unit>
        <trans-unit id="7dd19ae8058e5cba032ae717f2314f0d68d1a345" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; that further provides a &lt;em&gt;total ordering&lt;/em&gt; on its keys.</source>
          <target state="translated">一个&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;进一步提供了一个&lt;em&gt;总体排序&lt;/em&gt;关于键。</target>
        </trans-unit>
        <trans-unit id="48b5e086c6b73b09a6ed5e87d2fbf4df89a0b3f4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; that further provides a &lt;em&gt;total ordering&lt;/em&gt; on its keys. The map is ordered according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; typically provided at sorted map creation time. This order is reflected when iterating over the sorted map's collection views (returned by the &lt;code&gt;entrySet&lt;/code&gt;, &lt;code&gt;keySet&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt; methods). Several additional operations are provided to take advantage of the ordering. (This interface is the map analogue of &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">一个&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;进一步提供了一个&lt;em&gt;总体排序&lt;/em&gt;关于键。根据其键的&lt;a href=&quot;../lang/comparable&quot;&gt;自然顺序&lt;/a&gt;或通常在排序的地图创建时提供的&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;来对地图进行排序。遍历排序后的地图的集合视图（由 &lt;code&gt;entrySet&lt;/code&gt; ， &lt;code&gt;keySet&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 方法返回）时，将反映此顺序。提供了一些附加操作以利用订购的优势。（此接口是&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;的地图类似物。）</target>
        </trans-unit>
        <trans-unit id="7e48ac8948c121853633ee49556249fbee04bf07" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;memorynotificationinfo#MEMORY_COLLECTION_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;collection usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;memorynotificationinfo#MEMORY_COLLECTION_THRESHOLD_EXCEEDED&quot;&gt; &lt;code&gt;collection usage threshold exceeded notification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83775a71362eccbda74e498dbaf5475b80e9af93" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt; &lt;code&gt;usage threshold exceeded notification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9cf55c41df3db5a8e3f95adf8ba0d18a164936f9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; is an &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt;. One can iterate over a list of namespaces as a list of attributes. However this method returns only the list of namespaces declared on this START_ELEMENT and does not include the attributes declared on this START_ELEMENT. Returns an empty iterator if there are no namespaces.</source>
          <target state="translated">一个&lt;a href=&quot;namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;是一个&lt;a href=&quot;attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;。可以将命名空间列表作为属性列表进行迭代。但是，此方法仅返回在此START_ELEMENT上声明的名称空间列表，并且不包括在此START_ELEMENT上声明的属性。如果没有名称空间，则返回一个空的迭代器。</target>
        </trans-unit>
        <trans-unit id="4fb768af361736ab2e96c30d909366181c9d332c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;基础上实现&lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1945e9f8b306c48cd802c297f5976ff3571bd3c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;. The elements are ordered using their &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at set creation time, depending on which constructor is used.</source>
          <target state="translated">一个&lt;a href=&quot;navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;基础上实现&lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; 的&lt;/a&gt;。元素使用其&lt;a href=&quot;../lang/comparable&quot;&gt;自然顺序进行排序&lt;/a&gt;，或通过在设置创建时提供的&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; 进行&lt;/a&gt;排序，具体取决于所使用的构造函数。</target>
        </trans-unit>
        <trans-unit id="b3f8c3e414c6371bee46fb98c1599f739e3b9d4a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#Reduction&quot;&gt;mutable reduction operation&lt;/a&gt; that accumulates input elements into a mutable result container, optionally transforming the accumulated result into a final representation after all input elements have been processed.</source>
          <target state="translated">将输入元素累积到可变结果容器中的&lt;a href=&quot;package-summary#Reduction&quot;&gt;可变归约运算&lt;/a&gt;，在处理完所有输入元素之后，可选地将累积的结果转换为最终表示形式。</target>
        </trans-unit>
        <trans-unit id="30f07146010e48a8044433994ff386aed66eeb3a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#Reduction&quot;&gt;mutable reduction operation&lt;/a&gt; that accumulates input elements into a mutable result container, optionally transforming the accumulated result into a final representation after all input elements have been processed. Reduction operations can be performed either sequentially or in parallel.</source>
          <target state="translated">将输入元素累积到可变结果容器中的&lt;a href=&quot;package-summary#Reduction&quot;&gt;可变归约运算&lt;/a&gt;，在处理完所有输入元素之后，可选地将累积的结果转换为最终表示形式。还原操作可以顺序或并行执行。</target>
        </trans-unit>
        <trans-unit id="abc96a168b35988741540fedbbef4f60c1182326" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; constant.</source>
          <target state="translated">甲&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述符&lt;/a&gt;用于&lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;恒定。</target>
        </trans-unit>
        <trans-unit id="ecde411a725de0db7729ebf92ab1937bdc59d1a4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a &lt;a href=&quot;../invoke/methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; constant.</source>
          <target state="translated">一个&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述&lt;/a&gt;了&lt;a href=&quot;../invoke/methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;不变。</target>
        </trans-unit>
        <trans-unit id="a535123cd1b793fa3236be513e6321cb21bf3981" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a &lt;a href=&quot;../invoke/methodtype&quot;&gt;MethodType&lt;/a&gt; constant.</source>
          <target state="translated">一个&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述&lt;/a&gt;了&lt;a href=&quot;../invoke/methodtype&quot;&gt;MethodType&lt;/a&gt;不变。</target>
        </trans-unit>
        <trans-unit id="ea4739e45c4b3e9a26b70b544f1fe6644cf20973" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a direct &lt;a href=&quot;../invoke/methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述&lt;/a&gt;为直接&lt;a href=&quot;../invoke/methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="529edc0891c29e585064a25eb34fc8d1c50d7e59" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a direct &lt;a href=&quot;../invoke/methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;directmethodhandledesc&quot;&gt;DirectMethodHandleDesc&lt;/a&gt; corresponds to a &lt;code&gt;Constant_MethodHandle_info&lt;/code&gt; entry in the constant pool of a classfile.</source>
          <target state="translated">一个&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述&lt;/a&gt;为直接&lt;a href=&quot;../invoke/methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;。一个&lt;a href=&quot;directmethodhandledesc&quot;&gt;DirectMethodHandleDesc&lt;/a&gt;相当于 &lt;code&gt;Constant_MethodHandle_info&lt;/code&gt; 在类文件的常量池项。</target>
        </trans-unit>
        <trans-unit id="f88090fab4e327db596ce85bf7af40416f200f64" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a dynamic constant (one described in the constant pool with &lt;code&gt;Constant_Dynamic_info&lt;/code&gt;.)</source>
          <target state="translated">甲&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述符&lt;/a&gt;用于动态常数（一个在常量池中进行描述 &lt;code&gt;Constant_Dynamic_info&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="2ce7c9b7cdf7fe56697c5b4b714ba2315240cdbb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a loadable constant value, as defined in JVMS 4.4.</source>
          <target state="translated">甲&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述符&lt;/a&gt;用于可加载的恒定值，在JVMS 4.4所定义的。</target>
        </trans-unit>
        <trans-unit id="4c591268a513c4f754bd1e844e50e791a4444c57" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for a loadable constant value, as defined in JVMS 4.4. Such a descriptor can be resolved via &lt;a href=&quot;#resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)&quot;&gt;&lt;code&gt;resolveConstantDesc(MethodHandles.Lookup)&lt;/code&gt;&lt;/a&gt; to yield the constant value itself.</source>
          <target state="translated">甲&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述符&lt;/a&gt;用于可加载的恒定值，在JVMS 4.4所定义的。可以通过&lt;a href=&quot;#resolveConstantDesc(java.lang.invoke.MethodHandles.Lookup)&quot;&gt; &lt;code&gt;resolveConstantDesc(MethodHandles.Lookup)&lt;/code&gt; &lt;/a&gt;解析此类描述符，以产生常数值本身。</target>
        </trans-unit>
        <trans-unit id="936283972ac35e7d2099dfca5a81691b0d1b03f1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;package-summary#nominal&quot;&gt;nominal descriptor&lt;/a&gt; for an &lt;code&gt;invokedynamic&lt;/code&gt; call site.</source>
          <target state="translated">一个&lt;a href=&quot;package-summary#nominal&quot;&gt;标称描述&lt;/a&gt;为 &lt;code&gt;invokedynamic&lt;/code&gt; 调用点。</target>
        </trans-unit>
        <trans-unit id="4d44a71d81959b746ebcfb66ded7e38898863b29" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;pattern#matches-java.lang.String-java.lang.CharSequence-&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method is defined by this class as a convenience for when a regular expression is used just once. This method compiles an expression and matches an input sequence against it in a single invocation. The statement</source>
          <target state="translated">甲&lt;a href=&quot;pattern#matches-java.lang.String-java.lang.CharSequence-&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;方法由这个类作为当正则表达式只使用一次为一个方便而定义。此方法将编译一个表达式，并在一次调用中将一个输入序列与其匹配。该声明</target>
        </trans-unit>
        <trans-unit id="16551e367ea0db18f29a807ba404d55b507c0e22" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;phaser&quot;&gt;&lt;code&gt;Phaser&lt;/code&gt;&lt;/a&gt; provides a more flexible form of barrier that may be used to control phased computation among multiple threads.</source>
          <target state="translated">甲&lt;a href=&quot;phaser&quot;&gt; &lt;code&gt;Phaser&lt;/code&gt; &lt;/a&gt;提供了可以用于控制在多个线程之间分阶段计算屏障的更灵活的形式。</target>
        </trans-unit>
        <trans-unit id="d4cc5e6df2360a9e6e2de69018f3951cf51d03d0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;printjobattributeset&quot;&gt;&lt;code&gt;PrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, containing &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;s, reports the status of a print job.</source>
          <target state="translated">一个&lt;a href=&quot;printjobattributeset&quot;&gt; &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;，包含&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; &lt;/a&gt; S，报告打印作业的状态。</target>
        </trans-unit>
        <trans-unit id="70278963eb3f5045b38f37da9545fc082fdf04e0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;printrequestattributeset&quot;&gt;&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, containing &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;s, specifies the settings to be applied to a whole print job and to all the docs in the print job.</source>
          <target state="translated">一个&lt;a href=&quot;printrequestattributeset&quot;&gt; &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;，包含&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt; S，指定设置应用到整个打印作业和所有打印作业的文档。</target>
        </trans-unit>
        <trans-unit id="626b850e45fa1d1351fc6f6cec8df6365c571316" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;printserviceattributeset&quot;&gt;&lt;code&gt;PrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;, containing &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;s, reports the status of a Print Service instance.</source>
          <target state="translated">一个&lt;a href=&quot;printserviceattributeset&quot;&gt; &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; &lt;/a&gt;，含&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; &lt;/a&gt; S，报告打印服务实例的状态。</target>
        </trans-unit>
        <trans-unit id="d43c9a647251f8bb0736d88e294cec340b78b30b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;processhandle.info&quot;&gt;&lt;code&gt;ProcessHandle.Info&lt;/code&gt;&lt;/a&gt; instance has accessor methods that return information about the process if it is available.</source>
          <target state="translated">一个&lt;a href=&quot;processhandle.info&quot;&gt; &lt;code&gt;ProcessHandle.Info&lt;/code&gt; &lt;/a&gt;实例有访问方法，如果是可用的有关进程的返回信息。</target>
        </trans-unit>
        <trans-unit id="08eb7bbe74d99246a71e8526a63915d75b8d5b5e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;scheduledfuture&quot;&gt;&lt;code&gt;ScheduledFuture&lt;/code&gt;&lt;/a&gt; that is &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;scheduledfuture&quot;&gt; &lt;code&gt;ScheduledFuture&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; 的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aacd731c3ac5b2fa3a63dfc6e470fbf7dc7b7ce7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;scheduledfuture&quot;&gt;&lt;code&gt;ScheduledFuture&lt;/code&gt;&lt;/a&gt; that is &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;. Successful execution of the &lt;code&gt;run&lt;/code&gt; method causes completion of the &lt;code&gt;Future&lt;/code&gt; and allows access to its results.</source>
          <target state="translated">一个&lt;a href=&quot;scheduledfuture&quot;&gt; &lt;code&gt;ScheduledFuture&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; 的&lt;/a&gt;。成功执行 &lt;code&gt;run&lt;/code&gt; 方法会导致 &lt;code&gt;Future&lt;/code&gt; 的完成，并允许访问其结果。</target>
        </trans-unit>
        <trans-unit id="4b1e2c183b61c2273675c1311e6d623cf9988d8f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object is immutable in the sense that it shouldn't change the set of constraints once it is created. In other words, if an application validates the same document twice against the same &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;, it must always produce the same result.</source>
          <target state="translated">一个&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;对象在某种意义上是不可变的，一旦创建就不应改变约束的集合。换句话说，如果应用程序针对同一&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;两次验证同一文档，则它必须始终产生相同的结果。</target>
        </trans-unit>
        <trans-unit id="aef6cabb3dc20889673ea86962ada279806cdcbd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object is thread safe and applications are encouraged to share it across many parsers in many threads.</source>
          <target state="translated">一个&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;对象是线程安全的，鼓励应用程序跨多个解析器共享它在许多线程。</target>
        </trans-unit>
        <trans-unit id="f2fb19f09a688d7221f482646a2976cccb1d5d5e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object is usually created from &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常从&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;创建一个&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="bc5b0b24e94205c03509054e6a99979738a4a624" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;selector&quot;&gt;&lt;i&gt;selector&lt;/i&gt;&lt;/a&gt; is a multiplexor of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;i&gt;selectable channels&lt;/i&gt;&lt;/a&gt;, which in turn are a special type of channel that can be put into &lt;a href=&quot;selectablechannel#bm&quot;&gt;&lt;i&gt;non-blocking mode&lt;/i&gt;&lt;/a&gt;. To perform multiplexed I/O operations, one or more selectable channels are first created, put into non-blocking mode, and &lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int,java.lang.Object)&quot;&gt;&lt;code&gt;&lt;i&gt;registered&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; with a selector. Registering a channel specifies the set of I/O operations that will be tested for readiness by the selector, and returns a &lt;a href=&quot;selectionkey&quot;&gt;&lt;i&gt;selection key&lt;/i&gt;&lt;/a&gt; that represents the registration.</source>
          <target state="translated">甲&lt;a href=&quot;selector&quot;&gt;&lt;i&gt;选择器&lt;/i&gt;&lt;/a&gt;是一个多路转换器&lt;a href=&quot;selectablechannel&quot;&gt;&lt;i&gt;选择信道&lt;/i&gt;&lt;/a&gt;，而这又是信道的一种特殊类型的可以被放入&lt;a href=&quot;selectablechannel#bm&quot;&gt;&lt;i&gt;非阻塞模式&lt;/i&gt;&lt;/a&gt;。为了执行多路复用的I / O操作，首先创建一个或多个可选通道，将其置于非阻塞模式，并向选择器&lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int,java.lang.Object)&quot;&gt; &lt;code&gt;&lt;i&gt;registered&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;。注册通道指定了将由选择器测试是否准备就绪的一组I / O操作，并返回代表注册的&lt;a href=&quot;selectionkey&quot;&gt;&lt;i&gt;选择键&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="087599e9f01711a89e5002b6a3fac3496a476ccd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;selector&quot;&gt;&lt;i&gt;selector&lt;/i&gt;&lt;/a&gt; is a multiplexor of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;i&gt;selectable channels&lt;/i&gt;&lt;/a&gt;, which in turn are a special type of channel that can be put into &lt;a href=&quot;selectablechannel#bm&quot;&gt;&lt;i&gt;non-blocking mode&lt;/i&gt;&lt;/a&gt;. To perform multiplexed I/O operations, one or more selectable channels are first created, put into non-blocking mode, and &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt;&lt;code&gt;&lt;i&gt;registered&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; with a selector. Registering a channel specifies the set of I/O operations that will be tested for readiness by the selector, and returns a &lt;a href=&quot;selectionkey&quot;&gt;&lt;i&gt;selection key&lt;/i&gt;&lt;/a&gt; that represents the registration.</source>
          <target state="translated">甲&lt;a href=&quot;selector&quot;&gt;&lt;i&gt;选择器&lt;/i&gt;&lt;/a&gt;是一个多路转换器&lt;a href=&quot;selectablechannel&quot;&gt;&lt;i&gt;选择信道&lt;/i&gt;&lt;/a&gt;，而这又是信道的一种特殊类型的可以被放入&lt;a href=&quot;selectablechannel#bm&quot;&gt;&lt;i&gt;非阻塞模式&lt;/i&gt;&lt;/a&gt;。为了执行多路复用的I / O操作，首先创建一个或多个可选通道，将其置于非阻塞模式，并向选择器&lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt; &lt;code&gt;&lt;i&gt;registered&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;。注册通道指定了将由选择器测试是否准备就绪的一组I / O操作，并返回代表注册的&lt;a href=&quot;selectionkey&quot;&gt;&lt;i&gt;选择键&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="032109425d793487d595a949321d88f0c3ea878c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; that further provides a</source>
          <target state="translated">一&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;进一步提供</target>
        </trans-unit>
        <trans-unit id="2ec927f94a2df17af6a57f13009aabf70a1618b9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; extended with navigation methods returning the closest matches for given search targets.</source>
          <target state="translated">使用导航方法扩展的&lt;a href=&quot;sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;返回给定搜索目标的最接近匹配项。</target>
        </trans-unit>
        <trans-unit id="a52e97a9c42db302a5027966560fe5afc820ef62" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; extended with navigation methods returning the closest matches for given search targets. Methods &lt;a href=&quot;#lowerEntry(K)&quot;&gt;&lt;code&gt;lowerEntry(K)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#floorEntry(K)&quot;&gt;&lt;code&gt;floorEntry(K)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ceilingEntry(K)&quot;&gt;&lt;code&gt;ceilingEntry(K)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#higherEntry(K)&quot;&gt;&lt;code&gt;higherEntry(K)&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;Map.Entry&lt;/code&gt; objects associated with keys respectively less than, less than or equal, greater than or equal, and greater than a given key, returning &lt;code&gt;null&lt;/code&gt; if there is no such key. Similarly, methods &lt;a href=&quot;#lowerKey(K)&quot;&gt;&lt;code&gt;lowerKey(K)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#floorKey(K)&quot;&gt;&lt;code&gt;floorKey(K)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ceilingKey(K)&quot;&gt;&lt;code&gt;ceilingKey(K)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#higherKey(K)&quot;&gt;&lt;code&gt;higherKey(K)&lt;/code&gt;&lt;/a&gt; return only the associated keys. All of these methods are designed for locating, not traversing entries.</source>
          <target state="translated">一个&lt;a href=&quot;sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; 的&lt;/a&gt;扩展与导航方法返回给定搜索目标最接近的匹配。方法&lt;a href=&quot;#lowerEntry(K)&quot;&gt; &lt;code&gt;lowerEntry(K)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#floorEntry(K)&quot;&gt; &lt;code&gt;floorEntry(K)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ceilingEntry(K)&quot;&gt; &lt;code&gt;ceilingEntry(K)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#higherEntry(K)&quot;&gt; &lt;code&gt;higherEntry(K)&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;Map.Entry&lt;/code&gt; 对象，它们分别与键相关联，分别小于，小于或等于，大于或等于和大于给定键，如果没有这样的键，则返回 &lt;code&gt;null&lt;/code&gt; 。类似地，方法&lt;a href=&quot;#lowerKey(K)&quot;&gt; &lt;code&gt;lowerKey(K)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#floorKey(K)&quot;&gt; &lt;code&gt;floorKey(K)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ceilingKey(K)&quot;&gt; &lt;code&gt;ceilingKey(K)&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#higherKey(K)&quot;&gt; &lt;code&gt;higherKey(K)&lt;/code&gt; &lt;/a&gt;仅返回相关联的键。所有这些方法都是为查找而不是遍历条目而设计的。</target>
        </trans-unit>
        <trans-unit id="e21a9d8f7719aa430394aa8fcac440d9c1486a90" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; extended with navigation methods returning the closest matches for given search targets. Methods &lt;code&gt;lowerEntry&lt;/code&gt;, &lt;code&gt;floorEntry&lt;/code&gt;, &lt;code&gt;ceilingEntry&lt;/code&gt;, and &lt;code&gt;higherEntry&lt;/code&gt; return &lt;code&gt;Map.Entry&lt;/code&gt; objects associated with keys respectively less than, less than or equal, greater than or equal, and greater than a given key, returning &lt;code&gt;null&lt;/code&gt; if there is no such key. Similarly, methods &lt;code&gt;lowerKey&lt;/code&gt;, &lt;code&gt;floorKey&lt;/code&gt;, &lt;code&gt;ceilingKey&lt;/code&gt;, and &lt;code&gt;higherKey&lt;/code&gt; return only the associated keys. All of these methods are designed for locating, not traversing entries.</source>
          <target state="translated">使用导航方法扩展的&lt;a href=&quot;sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;返回给定搜索目标的最接近匹配项。方法 &lt;code&gt;lowerEntry&lt;/code&gt; ， &lt;code&gt;floorEntry&lt;/code&gt; ， &lt;code&gt;ceilingEntry&lt;/code&gt; 和 &lt;code&gt;higherEntry&lt;/code&gt; 返回与分别小于，小于或等于，大于或等于和大于给定键的键关联的 &lt;code&gt;Map.Entry&lt;/code&gt; 对象，如果没有这样的键，则返回 &lt;code&gt;null&lt;/code&gt; 。同样，方法 &lt;code&gt;lowerKey&lt;/code&gt; ， &lt;code&gt;floorKey&lt;/code&gt; ， &lt;code&gt;ceilingKey&lt;/code&gt; 和 &lt;code&gt;higherKey&lt;/code&gt; 仅返回关联的键。所有这些方法都是为查找而不是遍历条目而设计的。</target>
        </trans-unit>
        <trans-unit id="ad1503f25864e0bfc71b631cdd88fd205a72ed21" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; extended with navigation methods reporting closest matches for given search targets.</source>
          <target state="translated">一个&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 的&lt;/a&gt;扩展与导航方法报告对于给定的搜索目标最接近的匹配。</target>
        </trans-unit>
        <trans-unit id="a3dd81efb8d626da5a7fc78314d3fa030b1cb443" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; extended with navigation methods reporting closest matches for given search targets. Methods &lt;a href=&quot;#lower(E)&quot;&gt;&lt;code&gt;lower(E)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#floor(E)&quot;&gt;&lt;code&gt;floor(E)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ceiling(E)&quot;&gt;&lt;code&gt;ceiling(E)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#higher(E)&quot;&gt;&lt;code&gt;higher(E)&lt;/code&gt;&lt;/a&gt; return elements respectively less than, less than or equal, greater than or equal, and greater than a given element, returning &lt;code&gt;null&lt;/code&gt; if there is no such element.</source>
          <target state="translated">一个&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 的&lt;/a&gt;扩展与导航方法报告对于给定的搜索目标最接近的匹配。方法&lt;a href=&quot;#lower(E)&quot;&gt; &lt;code&gt;lower(E)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#floor(E)&quot;&gt; &lt;code&gt;floor(E)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ceiling(E)&quot;&gt; &lt;code&gt;ceiling(E)&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#higher(E)&quot;&gt; &lt;code&gt;higher(E)&lt;/code&gt; &lt;/a&gt;分别返回元件小于，小于或等于，大于或等于，和大于给定的元件时，返回 &lt;code&gt;null&lt;/code&gt; ，如果没有这样的元素。</target>
        </trans-unit>
        <trans-unit id="144a593f0c8b14f1b705cfe56ecd7f10e553f7dd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; extended with navigation methods reporting closest matches for given search targets. Methods &lt;code&gt;lower&lt;/code&gt;, &lt;code&gt;floor&lt;/code&gt;, &lt;code&gt;ceiling&lt;/code&gt;, and &lt;code&gt;higher&lt;/code&gt; return elements respectively less than, less than or equal, greater than or equal, and greater than a given element, returning &lt;code&gt;null&lt;/code&gt; if there is no such element. A &lt;code&gt;NavigableSet&lt;/code&gt; may be accessed and traversed in either ascending or descending order. The &lt;code&gt;descendingSet&lt;/code&gt; method returns a view of the set with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. This interface additionally defines methods &lt;code&gt;pollFirst&lt;/code&gt; and &lt;code&gt;pollLast&lt;/code&gt; that return and remove the lowest and highest element, if one exists, else returning &lt;code&gt;null&lt;/code&gt;. Methods &lt;code&gt;subSet&lt;/code&gt;, &lt;code&gt;headSet&lt;/code&gt;, and &lt;code&gt;tailSet&lt;/code&gt; differ from the like-named &lt;code&gt;SortedSet&lt;/code&gt; methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Subsets of any &lt;code&gt;NavigableSet&lt;/code&gt; must implement the &lt;code&gt;NavigableSet&lt;/code&gt; interface.</source>
          <target state="translated">一个&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 的&lt;/a&gt;扩展与导航方法报告对于给定的搜索目标最接近的匹配。方法 &lt;code&gt;lower&lt;/code&gt; ， &lt;code&gt;floor&lt;/code&gt; ， &lt;code&gt;ceiling&lt;/code&gt; 和 &lt;code&gt;higher&lt;/code&gt; 返回元素分别小于，小于或等于，大于或等于和大于给定元素，如果没有这样的元素，则返回 &lt;code&gt;null&lt;/code&gt; 。甲 &lt;code&gt;NavigableSet&lt;/code&gt; 可以被访问并以升序或降序顺序遍历。该 &lt;code&gt;descendingSet&lt;/code&gt; 方法返回具有相反关系和方向方法含义的集合视图。上升操作和视图的性能可能比下降操作和视图的性能更快。此接口还定义了 &lt;code&gt;pollFirst&lt;/code&gt; 和 &lt;code&gt;pollLast&lt;/code&gt; 方法，它们返回并除去最低和最高元素（如果存在），否则返回 &lt;code&gt;null&lt;/code&gt; 。方法 &lt;code&gt;subSet&lt;/code&gt; ， &lt;code&gt;headSet&lt;/code&gt; ，和 &lt;code&gt;tailSet&lt;/code&gt; 从名称相似的不同 &lt;code&gt;SortedSet&lt;/code&gt; 在接受描述的下限和上限是否是包含性的抗排斥附加参数的方法。任何 &lt;code&gt;NavigableSet&lt;/code&gt; 的子集都必须实现 &lt;code&gt;NavigableSet&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="508e612041bd0602e15347f4cc7579e902e0b73c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;spi/resourcebundleprovider&quot;&gt;resource bundle provider&lt;/a&gt; can provide resource bundles in any format such XML which replaces the need of &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;spi/resourcebundleprovider&quot;&gt;资源包提供者&lt;/a&gt;可以以任何格式，例如XML它取代有必要提供资源包&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="597357397545095f7f66f71c486785ddb3a1b7d4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;stringmonitor&quot;&gt;&lt;code&gt;StringMonitor&lt;/code&gt;&lt;/a&gt; observes attributes of type &lt;code&gt;String&lt;/code&gt;. A notification is sent when an observed attribute becomes equal and/or not equal to a given string.</source>
          <target state="translated">甲&lt;a href=&quot;stringmonitor&quot;&gt; &lt;code&gt;StringMonitor&lt;/code&gt; &lt;/a&gt;观察型的属性 &lt;code&gt;String&lt;/code&gt; 。当观察到的属性等于和/或不等于给定字符串时，将发送通知。</target>
        </trans-unit>
        <trans-unit id="7a554775d08ef16a1db651cce70fc15d0d58082e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt; object has a collection of &lt;code&gt;MidiChannels&lt;/code&gt;, usually one for each of the 16 channels prescribed by the MIDI 1.0 specification. The &lt;code&gt;Synthesizer&lt;/code&gt; generates sound when its &lt;code&gt;MidiChannels&lt;/code&gt; receive &lt;code&gt;noteOn&lt;/code&gt; messages.</source>
          <target state="translated">甲&lt;a href=&quot;synthesizer&quot;&gt; &lt;code&gt;Synthesizer&lt;/code&gt; &lt;/a&gt;对象具有的集合 &lt;code&gt;MidiChannels&lt;/code&gt; ，通常为每个由MIDI 1.0规范中规定的16个信道的。当其 &lt;code&gt;MidiChannels&lt;/code&gt; 接收到 &lt;code&gt;noteOn&lt;/code&gt; 消息时， &lt;code&gt;Synthesizer&lt;/code&gt; 产生声音。</target>
        </trans-unit>
        <trans-unit id="5a012dfeebb79628d1686005f76e53e7142647b5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; that can additionally schedule commands to run after a given delay, or to execute periodically.</source>
          <target state="translated">甲&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;可以另外安排的命令在给定的延迟后运行，或者定期地执行。</target>
        </trans-unit>
        <trans-unit id="e1281a7af3f4c9dee846ab6949518dda5707a61d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; that can additionally schedule commands to run after a given delay, or to execute periodically. This class is preferable to &lt;a href=&quot;../timer&quot;&gt;&lt;code&gt;Timer&lt;/code&gt;&lt;/a&gt; when multiple worker threads are needed, or when the additional flexibility or capabilities of &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; (which this class extends) are required.</source>
          <target state="translated">甲&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;可以另外安排的命令在给定的延迟后运行，或者定期地执行。当需要多个工作线程，或者需要&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;（此类扩展）的附加灵活性或功能时，此类比&lt;a href=&quot;../timer&quot;&gt; &lt;code&gt;Timer&lt;/code&gt; &lt;/a&gt;更好。</target>
        </trans-unit>
        <trans-unit id="21b3d179f0825291774efe6d3750b47065d83336" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;transformerconfigurationexception&quot;&gt;&lt;code&gt;TransformerConfigurationException&lt;/code&gt;&lt;/a&gt; may be thrown if for any reason a Transformer can not be created. A TransformerConfigurationException may be thrown if there is a syntax error in the transformation instructions, for example when &lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer(javax.xml.transform.Source)&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">一个&lt;a href=&quot;transformerconfigurationexception&quot;&gt; &lt;code&gt;TransformerConfigurationException&lt;/code&gt; &lt;/a&gt;如果由于某种原因变压器不能创建可能抛出。如果转换指令中存在语法错误，例如，当调用&lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer(javax.xml.transform.Source)&lt;/code&gt; &lt;/a&gt;时，可能会引发TransformerConfigurationException。</target>
        </trans-unit>
        <trans-unit id="804686a9d3acef4144d066dce97c14041c82c5c4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; is automatically reset every time the startDocument method is invoked.</source>
          <target state="translated">甲&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; 所&lt;/a&gt;自动复位每次调用startDocument方法时间。</target>
        </trans-unit>
        <trans-unit id="8e2baa9508561c44624c1e607804e4410a22b720" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; may buffer events to certain extent, but to allow &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to be used by a parser, the following requirement has to be met.</source>
          <target state="translated">甲&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; 所&lt;/a&gt;可缓冲事件一定程度上，但允许&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;到被解析器所使用的，以下要求必须满足。</target>
        </trans-unit>
        <trans-unit id="418af67dd0828ba9e383620ac5b3cc678ea2af16" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; object is not thread-safe and not reentrant. In other words, it is the application's responsibility to make sure that one &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; object is not used from more than one thread at any given time.</source>
          <target state="translated">一&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;对象不是线程安全的，也不能重入。换句话说，确保在任何给定时间不从多个线程使用一个&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;对象是应用程序的责任。</target>
        </trans-unit>
        <trans-unit id="eceb4a0aa8cdf9a5bb4f0898489012d46eb2694b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; object is registered with a watch service by invoking its &lt;a href=&quot;watchable#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, returning a &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; to represent the registration. When an event for an object is detected the key is &lt;em&gt;signalled&lt;/em&gt;, and if not currently signalled, it is queued to the watch service so that it can be retrieved by consumers that invoke the &lt;a href=&quot;#poll()&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#take()&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; methods to retrieve keys and process events. Once the events have been processed the consumer invokes the key's &lt;a href=&quot;watchkey#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method to reset the key which allows the key to be signalled and re-queued with further events.</source>
          <target state="translated">甲&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt;对象通过调用它与手表服务注册&lt;a href=&quot;watchable#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;方法，返回一个&lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt;来表示配准。当检测到某个对象的事件时，该键会&lt;em&gt;发出信号&lt;/em&gt;，如果当前未发出信号，则将其排队到监视服务，以便调用&lt;a href=&quot;#poll()&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#take()&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;方法检索键和处理事件的使用者可以检索到它。一旦事件被处理，使用者将调用密钥的&lt;a href=&quot;watchkey#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;方法来重置密钥，这将使该密钥被信号通知并与其他事件重新排队。</target>
        </trans-unit>
        <trans-unit id="5e38e84dbd5fbf8c4a36da4fa6f64faf252dc448" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; object is registered with a watch service by invoking its &lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, returning a &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; to represent the registration. When an event for an object is detected the key is &lt;em&gt;signalled&lt;/em&gt;, and if not currently signalled, it is queued to the watch service so that it can be retrieved by consumers that invoke the &lt;a href=&quot;watchservice#poll--&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;watchservice#take--&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; methods to retrieve keys and process events. Once the events have been processed the consumer invokes the key's &lt;a href=&quot;watchkey#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method to reset the key which allows the key to be signalled and re-queued with further events.</source>
          <target state="translated">甲&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt;对象通过调用它与手表服务注册&lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;方法，返回一个&lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt;来表示配准。当检测到某个对象的事件时，该键会&lt;em&gt;发出信号&lt;/em&gt;，如果当前未发出该键，则会将其排队到监视服务，以便调用&lt;a href=&quot;watchservice#poll--&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;watchservice#take--&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;方法检索键和处理事件的使用者可以将其检索。一旦事件被处理，消费者就调用密钥的&lt;a href=&quot;watchkey#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;方法来重置密钥，这将使该密钥被发信号并与其他事件重新排队。</target>
        </trans-unit>
        <trans-unit id="24a065fa3080837963ec25eca30e237dde0239bf" translate="yes" xml:space="preserve">
          <source>A &lt;a id=&quot;week_year&quot;&gt;&lt;em&gt;week year&lt;/em&gt;&lt;/a&gt; is in sync with a &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; cycle. All weeks between the first and last weeks (inclusive) have the same &lt;em&gt;week year&lt;/em&gt; value. Therefore, the first and last days of a week year may have different calendar year values.</source>
          <target state="translated">一个&lt;a id=&quot;week_year&quot;&gt;&lt;em&gt;星期年&lt;/em&gt;&lt;/a&gt;与同步 &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; 周期。第一个星期和最后一个星期（包括最后一个星期）之间的所有星期都具有相同的&lt;em&gt;星期年份&lt;/em&gt;值。因此，一周的第一天和最后一天可能具有不同的日历年值。</target>
        </trans-unit>
        <trans-unit id="bafaa93643e476baab4c314bb4e8fec0898917e2" translate="yes" xml:space="preserve">
          <source>A &lt;a name=&quot;week_year&quot;&gt;&lt;em&gt;week year&lt;/em&gt;&lt;/a&gt; is in sync with a &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; cycle. All weeks between the first and last weeks (inclusive) have the same &lt;em&gt;week year&lt;/em&gt; value. Therefore, the first and last days of a week year may have different calendar year values.</source>
          <target state="translated">一个&lt;a name=&quot;week_year&quot;&gt;&lt;em&gt;星期年&lt;/em&gt;&lt;/a&gt;与同步 &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; 周期。第一周和最后一周（包括最后一周）之间的所有星期都具有相同的&lt;em&gt;周年&lt;/em&gt;值。因此，一周的第一天和最后一天可能具有不同的日历年值。</target>
        </trans-unit>
        <trans-unit id="3a32bd68e7a89017dff287ded45b918cb9d1e779" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;synchronized view&lt;/b&gt;</source>
          <target state="translated">甲&lt;b&gt;同步视图&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="72336d1e66f1a59676f137b1d515bc4f4f29e666" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object has a collection of &lt;code&gt;MidiChannels&lt;/code&gt;, usually one for each of the 16 channels prescribed by the MIDI 1.0 specification. The &lt;code&gt;Synthesizer&lt;/code&gt; generates sound when its &lt;code&gt;MidiChannels&lt;/code&gt; receive &lt;code&gt;noteOn&lt;/code&gt; messages.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象具有的集合 &lt;code&gt;MidiChannels&lt;/code&gt; ，通常为每个由MIDI 1.0规范中规定的16个信道的。当 &lt;code&gt;Synthesizer&lt;/code&gt; 的 &lt;code&gt;MidiChannels&lt;/code&gt; 接收到 &lt;code&gt;noteOn&lt;/code&gt; 消息时，它将生成声音。</target>
        </trans-unit>
        <trans-unit id="88a61d5e72877351082e461191f01eacb47de075" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BasicAttribute&lt;/code&gt; instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a &lt;code&gt;BasicAttribute&lt;/code&gt; should lock the object.</source>
          <target state="translated">一个 &lt;code&gt;BasicAttribute&lt;/code&gt; 实例与并发多线程访问不同步。试图访问和修改 &lt;code&gt;BasicAttribute&lt;/code&gt; 的多个线程应锁定该对象。</target>
        </trans-unit>
        <trans-unit id="3d042ed6072ed6223bbeecf825d60331abea845a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BeanContextChild&lt;/code&gt;, or any arbitrary object associated with a &lt;code&gt;BeanContextChild&lt;/code&gt;, may obtain a reference to a currently registered service from its nesting &lt;code&gt;BeanContextServices&lt;/code&gt; via invocation of this method.</source>
          <target state="translated">甲 &lt;code&gt;BeanContextChild&lt;/code&gt; 中，或与相关联的任何任意物体 &lt;code&gt;BeanContextChild&lt;/code&gt; 中，就可以得到来自其嵌套到当前已注册服务的引用 &lt;code&gt;BeanContextServices&lt;/code&gt; 中通过此方法的调用。</target>
        </trans-unit>
        <trans-unit id="e6477efbf7cdc53cfaece4e371f5177317ac7154" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BeanContextChild&lt;/code&gt;, or any arbitrary object associated with a &lt;code&gt;BeanContextChild&lt;/code&gt;, may obtain a reference to a currently registered service from its nesting &lt;code&gt;BeanContextServices&lt;/code&gt; via invocation of this method. When invoked, this method gets the service by calling the getService() method on the underlying &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;BeanContextChild&lt;/code&gt; 中，或与相关联的任何任意物体 &lt;code&gt;BeanContextChild&lt;/code&gt; 中，就可以得到来自其嵌套到当前已注册服务的引用 &lt;code&gt;BeanContextServices&lt;/code&gt; 中通过此方法的调用。调用时，此方法通过在基础 &lt;code&gt;BeanContextServiceProvider&lt;/code&gt; 上调用getService（）方法来获取服务。</target>
        </trans-unit>
        <trans-unit id="a7d937e3de27065b64bf0d388046e7b99fcc1d9d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt; encapsulates the list of children added to, or removed from, the membership of a particular &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt; 封装孩子加入，或从一个特定的成员删除列表中 &lt;code&gt;BeanContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91bf1275319962cf826fde3798c03e8953740be4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt; encapsulates the list of children added to, or removed from, the membership of a particular &lt;code&gt;BeanContext&lt;/code&gt;. An instance of this event is fired whenever a successful add(), remove(), retainAll(), removeAll(), or clear() is invoked on a given &lt;code&gt;BeanContext&lt;/code&gt; instance. Objects interested in receiving events of this type must implement the &lt;code&gt;BeanContextMembershipListener&lt;/code&gt; interface, and must register their intent via the &lt;code&gt;BeanContext&lt;/code&gt;'s &lt;code&gt;addBeanContextMembershipListener(BeanContextMembershipListener bcml)
 &lt;/code&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt; 封装孩子加入，或从一个特定的成员删除列表中 &lt;code&gt;BeanContext&lt;/code&gt; 。每当在给定的 &lt;code&gt;BeanContext&lt;/code&gt; 实例上调用成功的add（），remove（），retainAll（），removeAll（）或clear（）时，都会触发此事件的实例。对接收此类事件感兴趣的对象必须实现 &lt;code&gt;BeanContextMembershipListener&lt;/code&gt; 接口，并且必须通过 &lt;code&gt;BeanContext&lt;/code&gt; 的 &lt;code&gt;addBeanContextMembershipListener(BeanContextMembershipListener bcml) &lt;/code&gt; 方法注册其意图。</target>
        </trans-unit>
        <trans-unit id="9659d34478898dfbbfc3a12cfe88bfdd0393753b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt; encapsulates the list of children added to, or removed from, the membership of a particular &lt;code&gt;BeanContext&lt;/code&gt;. An instance of this event is fired whenever a successful add(), remove(), retainAll(), removeAll(), or clear() is invoked on a given &lt;code&gt;BeanContext&lt;/code&gt; instance. Objects interested in receiving events of this type must implement the &lt;code&gt;BeanContextMembershipListener&lt;/code&gt; interface, and must register their intent via the &lt;code&gt;BeanContext&lt;/code&gt;'s &lt;code&gt;addBeanContextMembershipListener(BeanContextMembershipListener bcml)&lt;/code&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;BeanContextMembershipEvent&lt;/code&gt; 封装孩子加入，或从一个特定的成员删除列表中 &lt;code&gt;BeanContext&lt;/code&gt; 。每当在给定的 &lt;code&gt;BeanContext&lt;/code&gt; 实例上调用成功的add（），remove（），retainAll（），removeAll（）或clear（）时，都会触发此事件的实例。有兴趣接收此类事件的对象必须实现 &lt;code&gt;BeanContextMembershipListener&lt;/code&gt; 接口，并且必须通过 &lt;code&gt;BeanContext&lt;/code&gt; 的 &lt;code&gt;addBeanContextMembershipListener(BeanContextMembershipListener bcml)&lt;/code&gt; 方法注册其意图。</target>
        </trans-unit>
        <trans-unit id="a6e0eebcfe0d3ed57683c9fc7337776a57a3c700" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Bindings&lt;/code&gt; that can be used to replace the state of this &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Bindings&lt;/code&gt; ，可用于替换此状态 &lt;code&gt;ScriptEngine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d9959b72a03cd70ae64c8744d103a8f8d2d3869" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BitSet&lt;/code&gt; is not safe for multithreaded use without external synchronization.</source>
          <target state="translated">如果没有外部同步，则 &lt;code&gt;BitSet&lt;/code&gt; 对于多线程使用是不安全的。</target>
        </trans-unit>
        <trans-unit id="db3d71546bbd73bb0af0b4a8e54824d1d4daee9b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BlockingDeque&lt;/code&gt; implementation may be used directly as a FIFO &lt;code&gt;BlockingQueue&lt;/code&gt;. The methods inherited from the &lt;code&gt;BlockingQueue&lt;/code&gt; interface are precisely equivalent to &lt;code&gt;BlockingDeque&lt;/code&gt; methods as indicated in the following table:</source>
          <target state="translated">甲 &lt;code&gt;BlockingDeque&lt;/code&gt; 实现可以直接用作FIFO &lt;code&gt;BlockingQueue&lt;/code&gt; 。如下表所示，从 &lt;code&gt;BlockingQueue&lt;/code&gt; 接口继承的方法与 &lt;code&gt;BlockingDeque&lt;/code&gt; 方法完全等效：</target>
        </trans-unit>
        <trans-unit id="a76835f399a49c314d4b4e5405eae0aaf04257b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BlockingQueue&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; intrinsically support any kind of &quot;close&quot; or &quot;shutdown&quot; operation to indicate that no more items will be added. The needs and usage of such features tend to be implementation-dependent. For example, a common tactic is for producers to insert special &lt;em&gt;end-of-stream&lt;/em&gt; or &lt;em&gt;poison&lt;/em&gt; objects, that are interpreted accordingly when taken by consumers.</source>
          <target state="translated">一 &lt;code&gt;BlockingQueue&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;本质上支持任何形式的&amp;ldquo;接近&amp;rdquo;或&amp;ldquo;关机&amp;rdquo;的操作指示没有更多的项目将被添加。这些功能的需求和使用往往取决于实现。例如，一种常见的策略是让生产者插入特殊&lt;em&gt;的流尾&lt;/em&gt;对象或&lt;em&gt;有毒&lt;/em&gt;对象，当消费者采取这种方法时会对其进行相应的解释。</target>
        </trans-unit>
        <trans-unit id="eca4d1d80b86d58c41ef4f6ba5994e1a2b48aa61" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BlockingQueue&lt;/code&gt; does not accept &lt;code&gt;null&lt;/code&gt; elements. Implementations throw &lt;code&gt;NullPointerException&lt;/code&gt; on attempts to &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; or &lt;code&gt;offer&lt;/code&gt; a &lt;code&gt;null&lt;/code&gt;. A &lt;code&gt;null&lt;/code&gt; is used as a sentinel value to indicate failure of &lt;code&gt;poll&lt;/code&gt; operations.</source>
          <target state="translated">一 &lt;code&gt;BlockingQueue&lt;/code&gt; 不接受 &lt;code&gt;null&lt;/code&gt; 元素。实现会抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 异常在尝试 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; 或 &lt;code&gt;offer&lt;/code&gt; 一 &lt;code&gt;null&lt;/code&gt; 。一个 &lt;code&gt;null&lt;/code&gt; 用作警戒值指示的故障 &lt;code&gt;poll&lt;/code&gt; 行动。</target>
        </trans-unit>
        <trans-unit id="b78b406a4e1bd798dd6d5ed40a98f39662fdf4d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BlockingQueue&lt;/code&gt; may be capacity bounded. At any given time it may have a &lt;code&gt;remainingCapacity&lt;/code&gt; beyond which no additional elements can be &lt;code&gt;put&lt;/code&gt; without blocking. A &lt;code&gt;BlockingQueue&lt;/code&gt; without any intrinsic capacity constraints always reports a remaining capacity of &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;BlockingQueue&lt;/code&gt; 可以是容量限定。在任何给定时间，它可能具有 &lt;code&gt;remainingCapacity&lt;/code&gt; 容量，超过该容量就不能 &lt;code&gt;put&lt;/code&gt; 其他元素而不会阻塞。一个 &lt;code&gt;BlockingQueue&lt;/code&gt; 的没有任何内部容量约束始终报告的剩余容量 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3723120985482d8ca2245a8af75ed9fa27d4ebc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodyHandler&lt;/code&gt; is a function that takes a &lt;a href=&quot;httpresponse.responseinfo&quot;&gt;&lt;code&gt;ResponseInfo&lt;/code&gt;&lt;/a&gt; object; and which returns a &lt;code&gt;BodySubscriber&lt;/code&gt;. The &lt;code&gt;BodyHandler&lt;/code&gt; is invoked when the response status code and headers are available, but before the response body bytes are received.</source>
          <target state="translated">甲 &lt;code&gt;BodyHandler&lt;/code&gt; 是一个函数，它一个&lt;a href=&quot;httpresponse.responseinfo&quot;&gt; &lt;code&gt;ResponseInfo&lt;/code&gt; &lt;/a&gt;对象;并返回 &lt;code&gt;BodySubscriber&lt;/code&gt; 。所述 &lt;code&gt;BodyHandler&lt;/code&gt; 当响应状态码和报头是可用的被调用，但接收的身体字节响应之前。</target>
        </trans-unit>
        <trans-unit id="954a6d2d3b78f37533eb6cf9697e804c459bbe7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodyPublisher&lt;/code&gt; converts high-level Java objects into a flow of byte buffers suitable for sending as a request body.</source>
          <target state="translated">甲 &lt;code&gt;BodyPublisher&lt;/code&gt; 转换高级别Java对象转换为适合于发送的请求主体字节缓冲器的流动。</target>
        </trans-unit>
        <trans-unit id="5046af99e5a6c729927a847e5bf6b77f18c851b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodyPublisher&lt;/code&gt; converts high-level Java objects into a flow of byte buffers suitable for sending as a request body. The class &lt;a href=&quot;httprequest.bodypublishers&quot;&gt;&lt;code&gt;BodyPublishers&lt;/code&gt;&lt;/a&gt; provides implementations of many common publishers.</source>
          <target state="translated">甲 &lt;code&gt;BodyPublisher&lt;/code&gt; 转换高级别Java对象转换为适合于发送的请求主体字节缓冲器的流动。&lt;a href=&quot;httprequest.bodypublishers&quot;&gt; &lt;code&gt;BodyPublishers&lt;/code&gt; &lt;/a&gt;类提供了许多常见发布者的实现。</target>
        </trans-unit>
        <trans-unit id="32c0496d2a688ac3691600ee951d371fb8c23bc9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodyPublisher&lt;/code&gt; that reports a &lt;a href=&quot;#contentLength()&quot;&gt;content length&lt;/a&gt; of &lt;code&gt;0&lt;/code&gt; may not be subscribed to by the HTTP Client, as it has effectively no data to publish.</source>
          <target state="translated">甲 &lt;code&gt;BodyPublisher&lt;/code&gt; ，报告一个&lt;a href=&quot;#contentLength()&quot;&gt;内容长度&lt;/a&gt;的 &lt;code&gt;0&lt;/code&gt; 可以不被HTTP客户端订阅到的，因为它没有有效的数据进行发布。</target>
        </trans-unit>
        <trans-unit id="09e2ed31874107bea79cfdfff944b7b53f0559f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodySubscriber&lt;/code&gt; consumes response body bytes and converts them into a higher-level Java type.</source>
          <target state="translated">甲 &lt;code&gt;BodySubscriber&lt;/code&gt; 消耗响应主体的字节并将其转换成更高级别的Java类型。</target>
        </trans-unit>
        <trans-unit id="3a8eade4c0acab26b1e0c3b867ecd680ca13e093" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodySubscriber&lt;/code&gt; consumes response body bytes and converts them into a higher-level Java type. The class &lt;a href=&quot;httpresponse.bodysubscribers&quot;&gt;&lt;code&gt;BodySubscriber&lt;/code&gt;&lt;/a&gt; provides implementations of many common body subscribers.</source>
          <target state="translated">甲 &lt;code&gt;BodySubscriber&lt;/code&gt; 消耗响应主体的字节并将其转换成更高级别的Java类型。&lt;a href=&quot;httpresponse.bodysubscribers&quot;&gt; &lt;code&gt;BodySubscriber&lt;/code&gt; &lt;/a&gt;类提供了许多公共主体订阅者的实现。</target>
        </trans-unit>
        <trans-unit id="94fa6de5ff198e7b7db08299fb3c5ea98a20afd4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodySubscriber&lt;/code&gt; consumes response body bytes and converts them into a higher-level Java type. The class &lt;a href=&quot;httpresponse.bodysubscribers&quot;&gt;&lt;code&gt;BodySubscribers&lt;/code&gt;&lt;/a&gt; provides implementations of many common body subscribers.</source>
          <target state="translated">甲 &lt;code&gt;BodySubscriber&lt;/code&gt; 消耗响应主体的字节并将其转换成更高级别的Java类型。&lt;a href=&quot;httpresponse.bodysubscribers&quot;&gt; &lt;code&gt;BodySubscribers&lt;/code&gt; &lt;/a&gt;类提供了许多公共主体订阅者的实现。</target>
        </trans-unit>
        <trans-unit id="daad42d7694c98c1e82e4a60b31c2d07a4abd4dc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BodySubscriber&lt;/code&gt; which publishes the response body through a &lt;code&gt;Publisher&amp;lt;List&amp;lt;ByteBuffer&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;BodySubscriber&lt;/code&gt; ，它通过 &lt;code&gt;Publisher&amp;lt;List&amp;lt;ByteBuffer&amp;gt;&amp;gt;&lt;/code&gt; 响应主体。</target>
        </trans-unit>
        <trans-unit id="c5ed9b672132ae16990dfbd114f77626e0e70005" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BooleanControl&lt;/code&gt; provides the ability to switch between two possible settings that affect a line's audio.</source>
          <target state="translated">一个 &lt;code&gt;BooleanControl&lt;/code&gt; 提供对影响行音频的两个可能的设置之间进行切换的能力。</target>
        </trans-unit>
        <trans-unit id="bb49fdf6b0ad623e7f3f062755e5f831934335d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BooleanControl&lt;/code&gt; provides the ability to switch between two possible settings that affect a line's audio. The settings are boolean values (&lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;). A graphical user interface might represent the control by a two-state button, an on/off switch, two mutually exclusive buttons, or a checkbox (among other possibilities). For example, depressing a button might activate a &lt;a href=&quot;booleancontrol.type#MUTE&quot;&gt;&lt;code&gt;MUTE&lt;/code&gt;&lt;/a&gt; control to silence the line's audio.</source>
          <target state="translated">一个 &lt;code&gt;BooleanControl&lt;/code&gt; 提供对影响行音频的两个可能的设置之间进行切换的能力。设置为布尔值（ &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; ）。图形用户界面可能通过两个状态按钮，一个on / off开关，两个互斥按钮或一个复选框来表示控件（在其他可能性中）。例如，按下按钮可能会激活&lt;a href=&quot;booleancontrol.type#MUTE&quot;&gt; &lt;code&gt;MUTE&lt;/code&gt; &lt;/a&gt;控件以使线路的音频静音。</target>
        </trans-unit>
        <trans-unit id="9911f76b173e085a5790f91a525f4397f9513f1a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BooleanControl&lt;/code&gt; provides the ability to switch between two possible settings that affect a line's audio. The settings are boolean values (&lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;). A graphical user interface might represent the control by a two-state button, an on/off switch, two mutually exclusive buttons, or a checkbox (among other possibilities). For example, depressing a button might activate a &lt;code&gt;&lt;a href=&quot;booleancontrol.type#MUTE&quot;&gt;&lt;code&gt;MUTE&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; control to silence the line's audio.</source>
          <target state="translated">一个 &lt;code&gt;BooleanControl&lt;/code&gt; 提供对影响行音频的两个可能的设置之间进行切换的能力。设置为布尔值（ &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; ）。图形用户界面可能通过两个状态按钮，一个on / off开关，两个互斥按钮或一个复选框来表示控件（在其他可能性中）。例如，按下按钮可能会激活 &lt;code&gt;&lt;a href=&quot;booleancontrol.type#MUTE&quot;&gt;&lt;code&gt;MUTE&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 控件以使线路的音频静音。</target>
        </trans-unit>
        <trans-unit id="9b914d22e1412533f2cef28997e1fb52c2b2dc70" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BufferedInputStream&lt;/code&gt; adds functionality to another input stream-namely, the ability to buffer the input and to support the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods.</source>
          <target state="translated">甲 &lt;code&gt;BufferedInputStream&lt;/code&gt; 将功能添加到另一个输入流即缓冲输入和支持能力 &lt;code&gt;mark&lt;/code&gt; 和 &lt;code&gt;reset&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="93c4c3c5557c20913ab566f39f1e4c2d80a37495" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;BufferedInputStream&lt;/code&gt; adds functionality to another input stream-namely, the ability to buffer the input and to support the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. When the &lt;code&gt;BufferedInputStream&lt;/code&gt; is created, an internal buffer array is created. As bytes from the stream are read or skipped, the internal buffer is refilled as necessary from the contained input stream, many bytes at a time. The &lt;code&gt;mark&lt;/code&gt; operation remembers a point in the input stream and the &lt;code&gt;reset&lt;/code&gt; operation causes all the bytes read since the most recent &lt;code&gt;mark&lt;/code&gt; operation to be reread before new bytes are taken from the contained input stream.</source>
          <target state="translated">甲 &lt;code&gt;BufferedInputStream&lt;/code&gt; 将功能添加到另一个输入流即缓冲输入和支持能力 &lt;code&gt;mark&lt;/code&gt; 和 &lt;code&gt;reset&lt;/code&gt; 方法。当 &lt;code&gt;BufferedInputStream&lt;/code&gt; 被创建，创建一个内部缓冲器阵列。当读取或跳过流中的字节时，根据需要从包含的输入流中重新填充内部缓冲区，一次填充许多字节。该 &lt;code&gt;mark&lt;/code&gt; 操作的输入流中的一个记忆点和 &lt;code&gt;reset&lt;/code&gt; 操作导致的所有字节读取自最近一次 &lt;code&gt;mark&lt;/code&gt; 操作是从包含的输入流采取新的字节重读之前。</target>
        </trans-unit>
        <trans-unit id="a0ecef3ad6c8543087c7266df26538e704760491" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Builder&lt;/code&gt; checks the components and invariants as components are added to the builder. The rationale for this is to detect errors as early as possible and not defer all validation to the &lt;a href=&quot;#build()&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">当将组件添加到构建器时，构建 &lt;code&gt;Builder&lt;/code&gt; 检查组件和不变式。这样做的原理是尽早检测错误，而不是将所有验证都推迟到&lt;a href=&quot;#build()&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;方法上。</target>
        </trans-unit>
        <trans-unit id="8074a1cd6822a8d169f849c5286eeb64c2975544" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Builder&lt;/code&gt; object is obtained by invoking one of the &lt;a href=&quot;aclentry#newBuilder()&quot;&gt;&lt;code&gt;newBuilder&lt;/code&gt;&lt;/a&gt; methods defined by the &lt;code&gt;AclEntry&lt;/code&gt; class.</source>
          <target state="translated">通过调用由 &lt;code&gt;AclEntry&lt;/code&gt; 类定义的&lt;a href=&quot;aclentry#newBuilder()&quot;&gt; &lt;code&gt;newBuilder&lt;/code&gt; &lt;/a&gt;方法之一来获得一个 &lt;code&gt;Builder&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b6c6519b4d74a67eecc36daf82594125562f744c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Builder&lt;/code&gt; object is obtained by invoking one of the &lt;a href=&quot;aclentry#newBuilder--&quot;&gt;&lt;code&gt;newBuilder&lt;/code&gt;&lt;/a&gt; methods defined by the &lt;code&gt;AclEntry&lt;/code&gt; class.</source>
          <target state="translated">通过调用由 &lt;code&gt;AclEntry&lt;/code&gt; 类定义的&lt;a href=&quot;aclentry#newBuilder--&quot;&gt; &lt;code&gt;newBuilder&lt;/code&gt; &lt;/a&gt;方法之一来获得一个 &lt;code&gt;Builder&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="73ba69c95f915dc8cd68b2839f15c2e47a1be8bc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ButtonGroup&lt;/code&gt; can be used with any set of objects that inherit from &lt;code&gt;AbstractButton&lt;/code&gt;. Typically a button group contains instances of &lt;code&gt;JRadioButton&lt;/code&gt;, &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;, or &lt;code&gt;JToggleButton&lt;/code&gt;. It wouldn't make sense to put an instance of &lt;code&gt;JButton&lt;/code&gt; or &lt;code&gt;JMenuItem&lt;/code&gt; in a button group because &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JMenuItem&lt;/code&gt; don't implement the selected state.</source>
          <target state="translated">甲 &lt;code&gt;ButtonGroup&lt;/code&gt; 中可以与继承来自任何组对象可以使用 &lt;code&gt;AbstractButton&lt;/code&gt; 中。通常，按钮组包含 &lt;code&gt;JRadioButton&lt;/code&gt; ， &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; 或 &lt;code&gt;JToggleButton&lt;/code&gt; 的实例。将 &lt;code&gt;JButton&lt;/code&gt; 或 &lt;code&gt;JMenuItem&lt;/code&gt; 的实例放在按钮组中是没有意义的，因为 &lt;code&gt;JButton&lt;/code&gt; 和 &lt;code&gt;JMenuItem&lt;/code&gt; 不会实现所选状态。</target>
        </trans-unit>
        <trans-unit id="791602e7a16aa82d92f76658de19c18cb1b48d6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ByteArrayInputStream&lt;/code&gt; contains an internal buffer that contains bytes that may be read from the stream.</source>
          <target state="translated">甲 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 的包含一个包含可从流中读取的字节的内部缓冲器。</target>
        </trans-unit>
        <trans-unit id="aad024046734b23cdb23ec9792c4cc03fde87676" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ByteArrayInputStream&lt;/code&gt; contains an internal buffer that contains bytes that may be read from the stream. An internal counter keeps track of the next byte to be supplied by the &lt;code&gt;read&lt;/code&gt; method.</source>
          <target state="translated">甲 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 的包含一个包含可从流中读取的字节的内部缓冲器。内部计数器跟踪由 &lt;code&gt;read&lt;/code&gt; 方法提供的下一个字节。</target>
        </trans-unit>
        <trans-unit id="c824b6f84f896f24c9a504599c92a3ba81b4c301" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ByteChannel&lt;/code&gt; connected to an entity that contains a variable-length sequence of bytes</source>
          <target state="translated">甲 &lt;code&gt;ByteChannel&lt;/code&gt; 连接到包含字节的可变长度序列的实体</target>
        </trans-unit>
        <trans-unit id="2e0305ce221f1c16fad4bc61cfa1b63616256e91" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CAPTION&lt;/code&gt; element.</source>
          <target state="translated">一个 &lt;code&gt;CAPTION&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="f8f59faa82da92687132e2471fe3d0f1c23da118" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CRLSelector&lt;/code&gt; that selects &lt;code&gt;X509CRLs&lt;/code&gt; that match all specified criteria.</source>
          <target state="translated">一个 &lt;code&gt;CRLSelector&lt;/code&gt; ，它选择与所有指定条件匹配的 &lt;code&gt;X509CRLs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43965c0eb0dde6d867e326218f4d5796a9f54040" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CRLSelector&lt;/code&gt; that selects &lt;code&gt;X509CRLs&lt;/code&gt; that match all specified criteria. This class is particularly useful when selecting CRLs from a &lt;code&gt;CertStore&lt;/code&gt; to check revocation status of a particular certificate.</source>
          <target state="translated">一个 &lt;code&gt;CRLSelector&lt;/code&gt; ，它选择与所有指定条件匹配的 &lt;code&gt;X509CRLs&lt;/code&gt; 。当从 &lt;code&gt;CertStore&lt;/code&gt; 中选择CRL 以检查特定证书的吊销状态时，此类特别有用。</target>
        </trans-unit>
        <trans-unit id="8d902bd075204accf1f5381d76d1c73144162046" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CachedRowSet&lt;/code&gt; implementation should always be instantiated with an available &lt;code&gt;SyncProvider&lt;/code&gt; mechanism, but there are cases where resetting the &lt;code&gt;SyncProvider&lt;/code&gt; object is desirable or necessary. For example, an application might want to use the default &lt;code&gt;SyncProvider&lt;/code&gt; object for a time and then choose to use a provider that has more recently become available and better fits its needs.</source>
          <target state="translated">一个 &lt;code&gt;CachedRowSet&lt;/code&gt; 的实现应该始终与可用实例化 &lt;code&gt;SyncProvider&lt;/code&gt; 机制，但也有情况下重置 &lt;code&gt;SyncProvider&lt;/code&gt; 对象是需要或必要。例如，应用程序可能要使用默认的 &lt;code&gt;SyncProvider&lt;/code&gt; 对象一段时间，然后选择使用最近可用且更适合其需求的提供程序。</target>
        </trans-unit>
        <trans-unit id="f0e72057bc3912d1067f8cf18d9927ed995edf5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CachedRowSet&lt;/code&gt; object is a</source>
          <target state="translated">甲 &lt;code&gt;CachedRowSet&lt;/code&gt; 的对象是一个</target>
        </trans-unit>
        <trans-unit id="db32b03a716f025b091c9aff728b814a7645a59a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CachedRowSet&lt;/code&gt; object is a container for rows of data that caches its rows in memory, which makes it possible to operate without always being connected to its data source. Further, it is a JavaBeans component and is scrollable, updatable, and serializable. A &lt;code&gt;CachedRowSet&lt;/code&gt; object typically contains rows from a result set, but it can also contain rows from any file with a tabular format, such as a spread sheet. The reference implementation supports getting data only from a &lt;code&gt;ResultSet&lt;/code&gt; object, but developers can extend the &lt;code&gt;SyncProvider&lt;/code&gt; implementations to provide access to other tabular data sources.</source>
          <target state="translated">甲 &lt;code&gt;CachedRowSet&lt;/code&gt; 目的是用于数据的行的容器，其在存储器中，这使得它可以不总是被连接到它的数据源来操作它的高速缓存行。此外，它是一个JavaBeans组件，并且是可滚动，可更新和可序列化的。甲 &lt;code&gt;CachedRowSet&lt;/code&gt; 的对象通常包含行从一个结果集，但它也可以包含从与表格格式，任何文件的行，诸如电子数据表。参考实现仅支持从 &lt;code&gt;ResultSet&lt;/code&gt; 对象获取数据，但是开发人员可以扩展 &lt;code&gt;SyncProvider&lt;/code&gt; 实现，以提供对其他表格数据源的访问。</target>
        </trans-unit>
        <trans-unit id="0131f3ed8b4d441f8ce0e8c5666cfad89c0cf346" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CachedRowSet&lt;/code&gt; object is a container for rows of data that caches its rows in memory, which makes it possible to operate without always being connected to its data source. Further, it is a JavaBeans&amp;trade; component and is scrollable, updatable, and serializable. A &lt;code&gt;CachedRowSet&lt;/code&gt; object typically contains rows from a result set, but it can also contain rows from any file with a tabular format, such as a spread sheet. The reference implementation supports getting data only from a &lt;code&gt;ResultSet&lt;/code&gt; object, but developers can extend the &lt;code&gt;SyncProvider&lt;/code&gt; implementations to provide access to other tabular data sources.</source>
          <target state="translated">甲 &lt;code&gt;CachedRowSet&lt;/code&gt; 目的是用于数据的行的容器，其在存储器中，这使得它可以不总是被连接到它的数据源来操作它的高速缓存行。此外，它是JavaBeans&amp;trade;组件，可滚动，可更新和可序列化。甲 &lt;code&gt;CachedRowSet&lt;/code&gt; 的对象通常包含行从一个结果集，但它也可以包含从与表格格式，任何文件的行，诸如电子数据表。参考实现仅支持从 &lt;code&gt;ResultSet&lt;/code&gt; 对象获取数据，但是开发人员可以扩展 &lt;code&gt;SyncProvider&lt;/code&gt; 实现，以提供对其他表格数据源的访问。</target>
        </trans-unit>
        <trans-unit id="4d124d3faaddd6a205670c8032f9cef17c53c2d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CachedRowSet&lt;/code&gt; object may use any &lt;code&gt;SyncProvider&lt;/code&gt; implementation that has been registered with the &lt;code&gt;SyncFactory&lt;/code&gt; singleton. An application can find out which &lt;code&gt;SyncProvider&lt;/code&gt; implementations have been registered by calling the following line of code.</source>
          <target state="translated">一个 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象可以使用任何 &lt;code&gt;SyncProvider&lt;/code&gt; 已注册与实施 &lt;code&gt;SyncFactory&lt;/code&gt; 单。应用程序可以通过调用以下代码行来查找已注册哪些 &lt;code&gt;SyncProvider&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="2765fdbc2085f164518df4b47d7dea2a126e4d97" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Calendar&lt;/code&gt; object can produce all the calendar field values needed to implement the date-time formatting for a particular language and calendar style (for example, Japanese-Gregorian, Japanese-Traditional). &lt;code&gt;Calendar&lt;/code&gt; defines the range of values returned by certain calendar fields, as well as their meaning. For example, the first month of the calendar system has value &lt;code&gt;MONTH ==
 JANUARY&lt;/code&gt; for all calendars. Other values are defined by the concrete subclass, such as &lt;code&gt;ERA&lt;/code&gt;. See individual field documentation and subclass documentation for details.</source>
          <target state="translated">一个 &lt;code&gt;Calendar&lt;/code&gt; 对象可以生成实现日期-时间格式化为特定语言和日历风格所需的所有日历字段值（例如，日本的公历，日本的传统）。 &lt;code&gt;Calendar&lt;/code&gt; 定义了某些日历字段返回的值的范围及其含义。例如，对于所有日历，日历系统的第一个月的值为 &lt;code&gt;MONTH == JANUARY&lt;/code&gt; 。其他值由具体的子类定义，例如 &lt;code&gt;ERA&lt;/code&gt; 。有关详细信息，请参见各个字段文档和子类文档。</target>
        </trans-unit>
        <trans-unit id="dd6d85b0756315f1e4f7663f70b69679fb6b450a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CallSite&lt;/code&gt; is a holder for a variable &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, which is called its &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;CallSite&lt;/code&gt; 为可变的保持器&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;，这被称为它的 &lt;code&gt;target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af7606e6576b77b9af5096f4621ff846b4bf3b23" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CallSite&lt;/code&gt; is a holder for a variable &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, which is called its &lt;code&gt;target&lt;/code&gt;. An &lt;code&gt;invokedynamic&lt;/code&gt; instruction linked to a &lt;code&gt;CallSite&lt;/code&gt; delegates all calls to the site's current target. A &lt;code&gt;CallSite&lt;/code&gt; may be associated with several &lt;code&gt;invokedynamic&lt;/code&gt; instructions, or it may be &quot;free floating&quot;, associated with none. In any case, it may be invoked through an associated method handle called its &lt;a href=&quot;#dynamicInvoker()&quot;&gt;dynamic invoker&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;CallSite&lt;/code&gt; 为可变的保持器&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;，这被称为它的 &lt;code&gt;target&lt;/code&gt; 。链接到 &lt;code&gt;CallSite&lt;/code&gt; 的 &lt;code&gt;invokedynamic&lt;/code&gt; 指令将所有调用委派给站点的当前目标。一个 &lt;code&gt;CallSite&lt;/code&gt; 可能与多个 &lt;code&gt;invokedynamic&lt;/code&gt; 指令相关联，或者可能是&amp;ldquo;自由浮动&amp;rdquo;，与任何一个都不相关联。无论如何，都可以通过称为其&lt;a href=&quot;#dynamicInvoker()&quot;&gt;动态调用程序&lt;/a&gt;的关联方法句柄来调用它。</target>
        </trans-unit>
        <trans-unit id="53c675c04cbcf5d7a16adfd5966a7e5bcf6d3a57" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CallSite&lt;/code&gt; is a holder for a variable &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, which is called its &lt;code&gt;target&lt;/code&gt;. An &lt;code&gt;invokedynamic&lt;/code&gt; instruction linked to a &lt;code&gt;CallSite&lt;/code&gt; delegates all calls to the site's current target. A &lt;code&gt;CallSite&lt;/code&gt; may be associated with several &lt;code&gt;invokedynamic&lt;/code&gt; instructions, or it may be &quot;free floating&quot;, associated with none. In any case, it may be invoked through an associated method handle called its &lt;a href=&quot;callsite#dynamicInvoker--&quot;&gt;dynamic invoker&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;CallSite&lt;/code&gt; 为可变的保持器&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;，这被称为它的 &lt;code&gt;target&lt;/code&gt; 。链接到 &lt;code&gt;CallSite&lt;/code&gt; 的 &lt;code&gt;invokedynamic&lt;/code&gt; 指令将所有调用委派给站点的当前目标。一个 &lt;code&gt;CallSite&lt;/code&gt; 可能与几个 &lt;code&gt;invokedynamic&lt;/code&gt; 指令相关联，或者可能是&amp;ldquo;自由浮动&amp;rdquo;，与任何一个都不相关。无论如何，都可以通过称为其&lt;a href=&quot;callsite#dynamicInvoker--&quot;&gt;动态调用程序&lt;/a&gt;的关联方法句柄来调用它。</target>
        </trans-unit>
        <trans-unit id="547b858de4fcb2878a66306f28e205b002131a1a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CallableStatement&lt;/code&gt; can return one &lt;a href=&quot;resultset&quot;&gt;&lt;code&gt;ResultSet&lt;/code&gt;&lt;/a&gt; object or multiple &lt;code&gt;ResultSet&lt;/code&gt; objects. Multiple &lt;code&gt;ResultSet&lt;/code&gt; objects are handled using operations inherited from &lt;a href=&quot;statement&quot;&gt;&lt;code&gt;Statement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;CallableStatement&lt;/code&gt; 可以返回一个&lt;a href=&quot;resultset&quot;&gt; &lt;code&gt;ResultSet&lt;/code&gt; &lt;/a&gt;对象或多个 &lt;code&gt;ResultSet&lt;/code&gt; 对象。使用从&lt;a href=&quot;statement&quot;&gt; &lt;code&gt;Statement&lt;/code&gt; &lt;/a&gt;继承的操作来处理多个 &lt;code&gt;ResultSet&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="0413228db51a17d13f79f04340759b91adfe51d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CanonicalizationMethod&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newCanonicalizationMethod(java.lang.String,javax.xml.crypto.dsig.spec.C14NMethodParameterSpec)&quot;&gt;&lt;code&gt;newCanonicalizationMethod&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">甲 &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 的实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newCanonicalizationMethod(java.lang.String,javax.xml.crypto.dsig.spec.C14NMethodParameterSpec)&quot;&gt; &lt;code&gt;newCanonicalizationMethod&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="caab9927e90eaec3c1db4b9160eea9b93b8ff8c2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Canvas&lt;/code&gt; component represents a blank rectangular area of the screen onto which the application can draw or from which the application can trap input events from the user.</source>
          <target state="translated">甲 &lt;code&gt;Canvas&lt;/code&gt; 组件表示在其上的应用程序可以得出或从其中来自用户的应用程序可以陷阱的输入事件的屏幕的空白矩形区域。</target>
        </trans-unit>
        <trans-unit id="0dd12b23a94abb46dcb9f0a2b86fff1bdd9aca53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CardLayout&lt;/code&gt; object is a layout manager for a container.</source>
          <target state="translated">甲 &lt;code&gt;CardLayout&lt;/code&gt; 对象是用于容器的布局管理器。</target>
        </trans-unit>
        <trans-unit id="621e12c9ac34ad5ac20b20b766debfb166ad61be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CardLayout&lt;/code&gt; object is a layout manager for a container. It treats each component in the container as a card. Only one card is visible at a time, and the container acts as a stack of cards. The first component added to a &lt;code&gt;CardLayout&lt;/code&gt; object is the visible component when the container is first displayed.</source>
          <target state="translated">甲 &lt;code&gt;CardLayout&lt;/code&gt; 对象是用于容器的布局管理器。它将容器中的每个组件视为卡片。一次只能看到一张卡片，而且容器就像一堆卡片一样。首次显示容器时，添加到 &lt;code&gt;CardLayout&lt;/code&gt; 对象的第一个组件是可见组件。</target>
        </trans-unit>
        <trans-unit id="8614ff39dac3427ab2dd1c97bfe13af1b41dbc07" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathBuilderException&lt;/code&gt; provides support for wrapping exceptions. The &lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt;&lt;code&gt;getCause&lt;/code&gt;&lt;/a&gt; method returns the throwable, if any, that caused this exception to be thrown.</source>
          <target state="translated">一个 &lt;code&gt;CertPathBuilderException&lt;/code&gt; 提供了对包装异常的支持。该&lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt; &lt;code&gt;getCause&lt;/code&gt; &lt;/a&gt;方法返回抛出，如果有的话，引发此异常被抛出。</target>
        </trans-unit>
        <trans-unit id="728e147679cf1365aaeb47445695777da9023df7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathBuilderException&lt;/code&gt; provides support for wrapping exceptions. The &lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt;&lt;code&gt;getCause&lt;/code&gt;&lt;/a&gt; method returns the throwable, if any, that caused this exception to be thrown.</source>
          <target state="translated">一个 &lt;code&gt;CertPathBuilderException&lt;/code&gt; 提供了对包装异常的支持。该&lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt; &lt;code&gt;getCause&lt;/code&gt; &lt;/a&gt;方法返回抛出，如果有的话，引发此异常被抛出。</target>
        </trans-unit>
        <trans-unit id="4c69635f5cbf1ce4cd70d0b40a545efeb57e3d75" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathChecker&lt;/code&gt; implementation is typically created to extend a certification path validation algorithm. For example, an implementation may check for and process a critical private extension of each certificate in a certification path.</source>
          <target state="translated">一个 &lt;code&gt;CertPathChecker&lt;/code&gt; 实现通常是为扩展证书路径验证算法。例如，一种实现可以检查并处理认证路径中每个证书的关键私有扩展。</target>
        </trans-unit>
        <trans-unit id="22ed0f43de3b6721b8b086ee315ea80ef5b53940" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathValidatorException&lt;/code&gt; may also include the certification path that was being validated when the exception was thrown, the index of the certificate in the certification path that caused the exception to be thrown, and the reason that caused the failure. Use the &lt;a href=&quot;#getCertPath()&quot;&gt;&lt;code&gt;getCertPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getIndex()&quot;&gt;&lt;code&gt;getIndex&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getReason()&quot;&gt;&lt;code&gt;getReason&lt;/code&gt;&lt;/a&gt; methods to retrieve this information.</source>
          <target state="translated">一个 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 可能还包括：当异常被抛出，被扔在证书路径导致异常证书的索引，这是正在验证的证书路径，以及导致失败的原因。使用&lt;a href=&quot;#getCertPath()&quot;&gt; &lt;code&gt;getCertPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getIndex()&quot;&gt; &lt;code&gt;getIndex&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getReason()&quot;&gt; &lt;code&gt;getReason&lt;/code&gt; &lt;/a&gt;方法检索此信息。</target>
        </trans-unit>
        <trans-unit id="50135e1330488469bfafb1eba28f2aab6b352876" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathValidatorException&lt;/code&gt; may also include the certification path that was being validated when the exception was thrown, the index of the certificate in the certification path that caused the exception to be thrown, and the reason that caused the failure. Use the &lt;a href=&quot;certpathvalidatorexception#getCertPath--&quot;&gt;&lt;code&gt;getCertPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;certpathvalidatorexception#getIndex--&quot;&gt;&lt;code&gt;getIndex&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;certpathvalidatorexception#getReason--&quot;&gt;&lt;code&gt;getReason&lt;/code&gt;&lt;/a&gt; methods to retrieve this information.</source>
          <target state="translated">一个 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 可能还包括：当异常被抛出，被扔在证书路径导致异常证书的索引，这是正在验证的证书路径，以及导致失败的原因。使用&lt;a href=&quot;certpathvalidatorexception#getCertPath--&quot;&gt; &lt;code&gt;getCertPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;certpathvalidatorexception#getIndex--&quot;&gt; &lt;code&gt;getIndex&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;certpathvalidatorexception#getReason--&quot;&gt; &lt;code&gt;getReason&lt;/code&gt; &lt;/a&gt;方法检索此信息。</target>
        </trans-unit>
        <trans-unit id="38b1b71011b8b49819d5ea795a235b3d12b5fdd3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathValidatorException&lt;/code&gt; provides support for wrapping exceptions. The &lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt;&lt;code&gt;getCause&lt;/code&gt;&lt;/a&gt; method returns the throwable, if any, that caused this exception to be thrown.</source>
          <target state="translated">一个 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 提供了对包装异常的支持。该&lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt; &lt;code&gt;getCause&lt;/code&gt; &lt;/a&gt;方法返回抛出，如果有的话，引发此异常被抛出。</target>
        </trans-unit>
        <trans-unit id="15eba905a426f40a8890ddabc999c9a3b52da9f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertPathValidatorException&lt;/code&gt; provides support for wrapping exceptions. The &lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt;&lt;code&gt;getCause&lt;/code&gt;&lt;/a&gt; method returns the throwable, if any, that caused this exception to be thrown.</source>
          <target state="translated">一个 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 提供了对包装异常的支持。该&lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt; &lt;code&gt;getCause&lt;/code&gt; &lt;/a&gt;方法返回抛出，如果有的话，引发此异常被抛出。</target>
        </trans-unit>
        <trans-unit id="65f560d009f0e6567db9175712bf85433fe5cc63" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertSelector&lt;/code&gt; that selects &lt;code&gt;X509Certificates&lt;/code&gt; that match all specified criteria.</source>
          <target state="translated">甲 &lt;code&gt;CertSelector&lt;/code&gt; 其选择 &lt;code&gt;X509Certificates&lt;/code&gt; 匹配所有指定标准。</target>
        </trans-unit>
        <trans-unit id="be5c8ef13cabc2de05d5ea064c20acabb9a14fa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertSelector&lt;/code&gt; that selects &lt;code&gt;X509Certificates&lt;/code&gt; that match all specified criteria. This class is particularly useful when selecting certificates from a &lt;code&gt;CertStore&lt;/code&gt; to build a PKIX-compliant certification path.</source>
          <target state="translated">甲 &lt;code&gt;CertSelector&lt;/code&gt; 其选择 &lt;code&gt;X509Certificates&lt;/code&gt; 匹配所有指定标准。当从 &lt;code&gt;CertStore&lt;/code&gt; 选择证书以构建PKIX兼容的证书路径时，此类特别有用。</target>
        </trans-unit>
        <trans-unit id="7ea723de250e2659718edd41421ee46e8f50da70" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertStoreException&lt;/code&gt; provides support for wrapping exceptions. The &lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt;&lt;code&gt;getCause&lt;/code&gt;&lt;/a&gt; method returns the throwable, if any, that caused this exception to be thrown.</source>
          <target state="translated">一个 &lt;code&gt;CertStoreException&lt;/code&gt; 提供了对包装异常的支持。该&lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt; &lt;code&gt;getCause&lt;/code&gt; &lt;/a&gt;方法返回抛出，如果有的话，引发此异常被抛出。</target>
        </trans-unit>
        <trans-unit id="238fe188e71ee7dfe9fce6d0836d7928d5866c0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CertStoreException&lt;/code&gt; provides support for wrapping exceptions. The &lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt;&lt;code&gt;getCause&lt;/code&gt;&lt;/a&gt; method returns the throwable, if any, that caused this exception to be thrown.</source>
          <target state="translated">一个 &lt;code&gt;CertStoreException&lt;/code&gt; 提供了对包装异常的支持。该&lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt; &lt;code&gt;getCause&lt;/code&gt; &lt;/a&gt;方法返回抛出，如果有的话，引发此异常被抛出。</target>
        </trans-unit>
        <trans-unit id="2132e6d56d7be6af520361f786a04619acc657a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CharSequence&lt;/code&gt; is a readable sequence of &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">甲 &lt;code&gt;CharSequence&lt;/code&gt; 的是一个可读序列 &lt;code&gt;char&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="bd0a7e6c88d50c76fa8e459d55e92a9be2f616e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CharSequence&lt;/code&gt; is a readable sequence of &lt;code&gt;char&lt;/code&gt; values. This interface provides uniform, read-only access to many different kinds of &lt;code&gt;char&lt;/code&gt; sequences. A &lt;code&gt;char&lt;/code&gt; value represents a character in the</source>
          <target state="translated">甲 &lt;code&gt;CharSequence&lt;/code&gt; 的是一个可读序列 &lt;code&gt;char&lt;/code&gt; 的值。该接口提供对许多不同种类的 &lt;code&gt;char&lt;/code&gt; 序列的统一只读访问。一个 &lt;code&gt;char&lt;/code&gt; 值代表该字符</target>
        </trans-unit>
        <trans-unit id="e7df40ea3adad9621e2b177acc8b4c53a91715cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ChoiceFormat&lt;/code&gt; allows you to attach a format to a range of numbers.</source>
          <target state="translated">一个 &lt;code&gt;ChoiceFormat&lt;/code&gt; 允许将格式应用到某个范围的数。</target>
        </trans-unit>
        <trans-unit id="9bdbb6f65dc1a455bd231eb6943f7e27c4025766" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ChoiceFormat&lt;/code&gt; allows you to attach a format to a range of numbers. It is generally used in a &lt;code&gt;MessageFormat&lt;/code&gt; for handling plurals. The choice is specified with an ascending list of doubles, where each item specifies a half-open interval up to the next item:</source>
          <target state="translated">一个 &lt;code&gt;ChoiceFormat&lt;/code&gt; 允许将格式应用到某个范围的数。它通常在 &lt;code&gt;MessageFormat&lt;/code&gt; 中用于处理复数。该选项以双打的升序列表指定，其中每个项目指定一个半开间隔，直到下一个项目：</target>
        </trans-unit>
        <trans-unit id="ec4321c06a7245a80c8ed4f7d37472138143a6a0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ChronoLocalDate&lt;/code&gt; is the abstract representation of a date where the &lt;code&gt;Chronology chronology&lt;/code&gt;, or calendar system, is pluggable. The date is defined in terms of fields expressed by &lt;a href=&quot;../temporal/temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;, where most common implementations are defined in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. The chronology defines how the calendar system operates and the meaning of the standard fields.</source>
          <target state="translated">甲 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 是日期，其中的抽象表示 &lt;code&gt;Chronology chronology&lt;/code&gt; 或日历系统，是可插入的。日期是用&lt;a href=&quot;../temporal/temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;表示的字段定义的，其中最常见的实现是在&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中定义的。年表定义了日历系统的工作方式以及标准字段的含义。</target>
        </trans-unit>
        <trans-unit id="f18b024a28c84c2b5dc8056afec37c541ede1c43" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; is the abstract representation of a local date-time where the &lt;code&gt;Chronology chronology&lt;/code&gt;, or calendar system, is pluggable. The date-time is defined in terms of fields expressed by &lt;a href=&quot;../temporal/temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;, where most common implementations are defined in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. The chronology defines how the calendar system operates and the meaning of the standard fields.</source>
          <target state="translated">甲 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 是一个本地日期时间，其中所述抽象表示 &lt;code&gt;Chronology chronology&lt;/code&gt; 或日历系统，是可插入的。日期时间是根据&lt;a href=&quot;../temporal/temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;表示的字段定义的，其中最常见的实现是在&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中定义的。年表定义了日历系统的工作方式以及标准字段的含义。</target>
        </trans-unit>
        <trans-unit id="c76c79312f7e6ddd8a4da9c994ee6a3d57012b1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; is the abstract representation of an offset date-time where the &lt;code&gt;Chronology chronology&lt;/code&gt;, or calendar system, is pluggable. The date-time is defined in terms of fields expressed by &lt;a href=&quot;../temporal/temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;, where most common implementations are defined in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. The chronology defines how the calendar system operates and the meaning of the standard fields.</source>
          <target state="translated">甲 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 是的偏移日期-时间，其中所述抽象表示 &lt;code&gt;Chronology chronology&lt;/code&gt; 或日历系统，是可插入的。日期时间是根据&lt;a href=&quot;../temporal/temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;表示的字段定义的，其中最常见的实现是在&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中定义的。年表定义了日历系统的工作方式以及标准字段的含义。</target>
        </trans-unit>
        <trans-unit id="2e2380d8987110818f81e55fb1d2a8118642ba89" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Cipher&lt;/code&gt; property in a provider master class may have one of the following formats:</source>
          <target state="translated">甲 &lt;code&gt;Cipher&lt;/code&gt; 在提供商主类属性可以具有以下格式之一：</target>
        </trans-unit>
        <trans-unit id="1d4a61915e8a9354cda5cb40cb0bc94d6d8a034c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Class&lt;/code&gt; object indicating the legal object type for use by the &lt;code&gt;createInputStreamInstance&lt;/code&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;Class&lt;/code&gt; 对象，指示 &lt;code&gt;createInputStreamInstance&lt;/code&gt; 方法使用的合法对象类型。</target>
        </trans-unit>
        <trans-unit id="551a73a83752aece608b370ef85b4554f6122dda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Class&lt;/code&gt; reference to the newly available service</source>
          <target state="translated">一 &lt;code&gt;Class&lt;/code&gt; 参照新的可用服务</target>
        </trans-unit>
        <trans-unit id="8e648ba4c009aceac40f44ba6c1fde70c046db83" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Class&lt;/code&gt; reference to the service that is being revoked</source>
          <target state="translated">甲 &lt;code&gt;Class&lt;/code&gt; 参考服务正被撤销</target>
        </trans-unit>
        <trans-unit id="8d5022d7a53475c3ab19ea496fbbb9690140fc5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Class&lt;/code&gt; reference to the service that is being revoked.</source>
          <target state="translated">甲 &lt;code&gt;Class&lt;/code&gt; 参考到正在取消的服务。</target>
        </trans-unit>
        <trans-unit id="f09859abcc28d86a85cbfa595e6d974ffaef8054" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ClassCastException&lt;/code&gt; is thrown if &lt;code&gt;obj&lt;/code&gt; is not a primitive array of type &lt;code&gt;TransferType&lt;/code&gt;. An &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; might be thrown if the coordinates are not in bounds, or if &lt;code&gt;obj&lt;/code&gt; is not large enough to hold the pixel data.</source>
          <target state="translated">甲 &lt;code&gt;ClassCastException&lt;/code&gt; 异常如果被抛出 &lt;code&gt;obj&lt;/code&gt; 不类型的基本数组 &lt;code&gt;TransferType&lt;/code&gt; 。一个 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; 异常如果坐标不在边界可能被抛出，或者如果 &lt;code&gt;obj&lt;/code&gt; 是不是大到足以容纳像素数据。</target>
        </trans-unit>
        <trans-unit id="76833f57fb130a6054ef6ee8795bec499dea3722" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Closeable&lt;/code&gt; is a source or destination of data that can be closed.</source>
          <target state="translated">阿 &lt;code&gt;Closeable&lt;/code&gt; 是源或可以关闭数据的目的地。</target>
        </trans-unit>
        <trans-unit id="ead854f27504c26751e8689f46b3ee4504aa692a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Closeable&lt;/code&gt; is a source or destination of data that can be closed. The close method is invoked to release resources that the object is holding (such as open files).</source>
          <target state="translated">阿 &lt;code&gt;Closeable&lt;/code&gt; 是源或可以关闭数据的目的地。调用close方法以释放对象持有的资源（例如打开的文件）。</target>
        </trans-unit>
        <trans-unit id="fa25ad62b7032b57adecb70db33d146dd9cf1256" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollationKey&lt;/code&gt; represents a &lt;code&gt;String&lt;/code&gt; under the rules of a specific &lt;code&gt;Collator&lt;/code&gt; object.</source>
          <target state="translated">甲 &lt;code&gt;CollationKey&lt;/code&gt; 表示 &lt;code&gt;String&lt;/code&gt; 下一个特定的规则 &lt;code&gt;Collator&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6392757ac50f95e05875f5d1abe06fd277d9183c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollationKey&lt;/code&gt; represents a &lt;code&gt;String&lt;/code&gt; under the rules of a specific &lt;code&gt;Collator&lt;/code&gt; object. Comparing two &lt;code&gt;CollationKey&lt;/code&gt;s returns the relative order of the &lt;code&gt;String&lt;/code&gt;s they represent. Using &lt;code&gt;CollationKey&lt;/code&gt;s to compare &lt;code&gt;String&lt;/code&gt;s is generally faster than using &lt;code&gt;Collator.compare&lt;/code&gt;. Thus, when the &lt;code&gt;String&lt;/code&gt;s must be compared multiple times, for example when sorting a list of &lt;code&gt;String&lt;/code&gt;s. It's more efficient to use &lt;code&gt;CollationKey&lt;/code&gt;s.</source>
          <target state="translated">甲 &lt;code&gt;CollationKey&lt;/code&gt; 表示 &lt;code&gt;String&lt;/code&gt; 下一个特定的规则 &lt;code&gt;Collator&lt;/code&gt; 对象。比较两个 &lt;code&gt;CollationKey&lt;/code&gt; 返回它们表示的 &lt;code&gt;String&lt;/code&gt; 的相对顺序。使用 &lt;code&gt;CollationKey&lt;/code&gt; 来比较 &lt;code&gt;String&lt;/code&gt; 通常比使用 &lt;code&gt;Collator.compare&lt;/code&gt; 更快。因此，当必须多次比较 &lt;code&gt;String&lt;/code&gt; 时，例如在对 &lt;code&gt;String&lt;/code&gt; 列表进行排序时。使用 &lt;code&gt;CollationKey&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="ae4706b0d2166804b39f4bdf98edf570f3f0ff49" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;CRL&lt;/code&gt;s that match the specified selector (never &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">一个 &lt;code&gt;Collection&lt;/code&gt; 的 &lt;code&gt;CRL&lt;/code&gt; S中的指定选择（从不匹配 &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="98391a28fff09416b3a85282c39d7f24bf17bd18" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;Certificate&lt;/code&gt;s that match the specified selector (never &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">一 &lt;code&gt;Collection&lt;/code&gt; 的 &lt;code&gt;Certificate&lt;/code&gt; S中的指定选择（从不匹配 &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fcf9b063a928ea8d1b27f485abf63c132f37ab3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Collector&lt;/code&gt; is specified by four functions that work together to accumulate entries into a mutable result container, and optionally perform a final transform on the result. They are:</source>
          <target state="translated">甲 &lt;code&gt;Collector&lt;/code&gt; 是由四个功能指定一起工作以累加条目到一个可变的结果容器，和任选地执行该结果的最终变换。他们是：</target>
        </trans-unit>
        <trans-unit id="b116730b94f507b9013d20aec57e08a1a73e37ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Collector&lt;/code&gt; which concatenates CharSequence elements, separated by the specified delimiter, in encounter order</source>
          <target state="translated">甲 &lt;code&gt;Collector&lt;/code&gt; 该串接的CharSequence元件，分离由指定的分隔符，在遭遇顺序</target>
        </trans-unit>
        <trans-unit id="a7a306058b1bed8b4be6e2ba45666d219a0afc9b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent color and alpha information as separate samples and that store each sample in a separate data element.</source>
          <target state="translated">一个 &lt;code&gt;ColorModel&lt;/code&gt; 类，该类与将颜色和alpha信息表示为单独样本的像素值一起使用，并将每个样本存储在单独的数据元素中。</target>
        </trans-unit>
        <trans-unit id="eec5db285d074dc6c032370e2718b8b026511fc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent color and alpha information as separate samples and that store each sample in a separate data element. This class can be used with an arbitrary &lt;code&gt;ColorSpace&lt;/code&gt;. The number of color samples in the pixel values must be same as the number of color components in the &lt;code&gt;ColorSpace&lt;/code&gt;. There may be a single alpha sample.</source>
          <target state="translated">一个 &lt;code&gt;ColorModel&lt;/code&gt; 类，该类与将颜色和alpha信息表示为单独样本的像素值一起使用，并将每个样本存储在单独的数据元素中。此类可与任意 &lt;code&gt;ColorSpace&lt;/code&gt; 一起使用。像素值中颜色样本的数量必须与 &lt;code&gt;ColorSpace&lt;/code&gt; 中颜色分量的数量相同。可能只有一个alpha样本。</target>
        </trans-unit>
        <trans-unit id="547818ca649f844f79bb465943cb5471724df68c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method can complete exceptionally with:</source>
          <target state="translated">从此方法返回的 &lt;code&gt;CompletableFuture&lt;/code&gt; 可以异常完成：</target>
        </trans-unit>
        <trans-unit id="fd284d2909299b800818a662712c68cf36c2e24e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ComponentColorModel&lt;/code&gt; can be used in conjunction with a &lt;code&gt;ComponentSampleModel&lt;/code&gt;, a &lt;code&gt;BandedSampleModel&lt;/code&gt;, or a &lt;code&gt;PixelInterleavedSampleModel&lt;/code&gt; to construct a &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;ComponentColorModel&lt;/code&gt; 可以结合使用具有 &lt;code&gt;ComponentSampleModel&lt;/code&gt; 所，一个 &lt;code&gt;BandedSampleModel&lt;/code&gt; 或 &lt;code&gt;PixelInterleavedSampleModel&lt;/code&gt; 构建 &lt;code&gt;BufferedImage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="215b9e8124f54fcf6fc4752426c310c5bc4b0444" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ComponentInputMap&lt;/code&gt; is an &lt;code&gt;InputMap&lt;/code&gt; associated with a particular &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;ComponentInputMap&lt;/code&gt; 是 &lt;code&gt;InputMap&lt;/code&gt; 中与特定的相关联 &lt;code&gt;JComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a562c4e394af1191e27ca7eec183f37f0dced096" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ComponentInputMap&lt;/code&gt; is an &lt;code&gt;InputMap&lt;/code&gt; associated with a particular &lt;code&gt;JComponent&lt;/code&gt;. The component is automatically notified whenever the &lt;code&gt;ComponentInputMap&lt;/code&gt; changes. &lt;code&gt;ComponentInputMap&lt;/code&gt;s are used for &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; bindings.</source>
          <target state="translated">甲 &lt;code&gt;ComponentInputMap&lt;/code&gt; 是 &lt;code&gt;InputMap&lt;/code&gt; 中与特定的相关联 &lt;code&gt;JComponent&lt;/code&gt; 。每当 &lt;code&gt;ComponentInputMap&lt;/code&gt; 更改时，组件将自动收到通知。 &lt;code&gt;ComponentInputMap&lt;/code&gt; 用于 &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; 绑定。</target>
        </trans-unit>
        <trans-unit id="c31a57b7db785bbafda48aee8a14f2345128cafa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ComponentListener&lt;/code&gt; object is registered via &lt;code&gt;addComponentListener&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;ComponentListener&lt;/code&gt; 对象通过注册 &lt;code&gt;addComponentListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de776e86bb01bd11700a39d1b521872b9776c9ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CompositeData&lt;/code&gt; representing &lt;code&gt;ThreadInfo&lt;/code&gt; of version &lt;em&gt;N&lt;/em&gt; contains &lt;code&gt;&quot;stackTrace&quot;&lt;/code&gt; attribute and &lt;code&gt;&quot;lockedMonitors&quot;&lt;/code&gt; attribute representing an array of &lt;code&gt;StackTraceElement&lt;/code&gt; and an array of &lt;a href=&quot;monitorinfo&quot;&gt;&lt;code&gt;MonitorInfo&lt;/code&gt;&lt;/a&gt; respectively and their types are of version &lt;em&gt;N&lt;/em&gt;. The &lt;code&gt;&quot;lockedStackFrame&quot;&lt;/code&gt; attribute in &lt;a href=&quot;monitorinfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;MonitorInfo&lt;/code&gt;&lt;/a&gt;'s composite type must represent &lt;code&gt;StackTraceElement&lt;/code&gt; of the same version &lt;em&gt;N&lt;/em&gt;. Otherwise, this method will throw &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;CompositeData&lt;/code&gt; 表示 &lt;code&gt;ThreadInfo&lt;/code&gt; 的版本&lt;em&gt;&amp;Ntilde;&lt;/em&gt;包含 &lt;code&gt;&quot;stackTrace&quot;&lt;/code&gt; 属性和 &lt;code&gt;&quot;lockedMonitors&quot;&lt;/code&gt; 属性表示的阵列 &lt;code&gt;StackTraceElement&lt;/code&gt; 和阵列&lt;a href=&quot;monitorinfo&quot;&gt; &lt;code&gt;MonitorInfo&lt;/code&gt; &lt;/a&gt;分别和它们的类型的版本&lt;em&gt;&amp;Ntilde;&lt;/em&gt;。&lt;a href=&quot;monitorinfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;MonitorInfo&lt;/code&gt; &lt;/a&gt;的复合类型中的 &lt;code&gt;&quot;lockedStackFrame&quot;&lt;/code&gt; 属性必须表示相同版本&lt;em&gt;N的&lt;/em&gt; &lt;code&gt;StackTraceElement&lt;/code&gt; 。否则，此方法将抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d2570bd5ce1ea4612f9ae93952dccac9143ac53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CompositeName&lt;/code&gt; instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a &lt;code&gt;CompositeName&lt;/code&gt; should lock the object.</source>
          <target state="translated">一个 &lt;code&gt;CompositeName&lt;/code&gt; 实例与并发多线程访问不同步。试图访问和修改 &lt;code&gt;CompositeName&lt;/code&gt; 的多个线程应锁定该对象。</target>
        </trans-unit>
        <trans-unit id="bc18441fe19e7991e5f4bb3ce9a1c8fb901cb25a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CompoundControl&lt;/code&gt;, such as a graphic equalizer, provides control over two or more related properties, each of which is itself represented as a &lt;code&gt;Control&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;CompoundControl&lt;/code&gt; ，如图形均衡器，提供了在两个或多个相关的性能，其中的每一个本身是表示作为控制 &lt;code&gt;Control&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb19507e95a7882d1164574206b39a444478df23" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CompoundName&lt;/code&gt; instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a &lt;code&gt;CompoundName&lt;/code&gt; should lock the object.</source>
          <target state="translated">一个 &lt;code&gt;CompoundName&lt;/code&gt; 实例与并发多线程访问不同步。试图访问和修改 &lt;code&gt;CompoundName&lt;/code&gt; 的多个线程应锁定该对象。</target>
        </trans-unit>
        <trans-unit id="1a8abfd863968986c4551b5104be0b11a2d835de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Condition&lt;/code&gt; implementation can provide behavior and semantics that is different from that of the &lt;code&gt;Object&lt;/code&gt; monitor methods, such as guaranteed ordering for notifications, or not requiring a lock to be held when performing notifications. If an implementation provides such specialized semantics then the implementation must document those semantics.</source>
          <target state="translated">甲 &lt;code&gt;Condition&lt;/code&gt; 实现可以提供的行为和语义不同于的不同 &lt;code&gt;Object&lt;/code&gt; 监视器的方法，如保证排序的通知，或不需要的锁被保持在执行通知时。如果实现提供了这种特殊的语义，则实现必须记录这些语义。</target>
        </trans-unit>
        <trans-unit id="894d96a6d02f49c084a0cdde5939b69b3c2c71f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Condition&lt;/code&gt; instance is intrinsically bound to a lock. To obtain a &lt;code&gt;Condition&lt;/code&gt; instance for a particular &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; instance use its &lt;a href=&quot;lock#newCondition()&quot;&gt;&lt;code&gt;newCondition()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;Condition&lt;/code&gt; 实例本质绑定到锁。要获取特定&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;实例的 &lt;code&gt;Condition&lt;/code&gt; 实例，请使用其&lt;a href=&quot;lock#newCondition()&quot;&gt; &lt;code&gt;newCondition()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0c6ca21c0d4497ebf365c900bfa1c35883c30d13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Condition&lt;/code&gt; instance is intrinsically bound to a lock. To obtain a &lt;code&gt;Condition&lt;/code&gt; instance for a particular &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; instance use its &lt;a href=&quot;lock#newCondition--&quot;&gt;&lt;code&gt;newCondition()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;Condition&lt;/code&gt; 实例本质绑定到锁。要获取特定&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;实例的 &lt;code&gt;Condition&lt;/code&gt; 实例，请使用其&lt;a href=&quot;lock#newCondition--&quot;&gt; &lt;code&gt;newCondition()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="59a74a281351361da08496c5052dabec5bda2143" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ConnectException&lt;/code&gt; is thrown if a connection is refused to the remote host for a remote method call.</source>
          <target state="translated">一 &lt;code&gt;ConnectException&lt;/code&gt; 如果拒绝连接到一个远程方法调用的远程主机被抛出。</target>
        </trans-unit>
        <trans-unit id="35365431a4509521961b18fcc03474ebc29edf27" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ConnectIOException&lt;/code&gt; is thrown if an &lt;code&gt;IOException&lt;/code&gt; occurs while making a connection to the remote host for a remote method call.</source>
          <target state="translated">甲 &lt;code&gt;ConnectIOException&lt;/code&gt; 如果被抛出 &lt;code&gt;IOException&lt;/code&gt; 的同时使一个远程方法调用到远程主机的连接发生。</target>
        </trans-unit>
        <trans-unit id="cd401922b89f304759d8a11ef9eacfbf19b39264" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Connection&lt;/code&gt; object's database is able to provide information describing its tables, its supported SQL grammar, its stored procedures, the capabilities of this connection, and so on. This information is obtained with the &lt;code&gt;getMetaData&lt;/code&gt; method.</source>
          <target state="translated">一个 &lt;code&gt;Connection&lt;/code&gt; 对象的数据库能够提供描述其表，它支持SQL语法，它的存储过程，此连接的能力，等等信息。此信息是使用 &lt;code&gt;getMetaData&lt;/code&gt; 方法获得的。</target>
        </trans-unit>
        <trans-unit id="f0410c1af00ff590f6c0f9060f3e7b26d6110699" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ConstantCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target is permanent, and can never be changed.</source>
          <target state="translated">一个 &lt;code&gt;ConstantCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标是永久性的，不可更改。</target>
        </trans-unit>
        <trans-unit id="0fe56ac45686158ddd827916ddeec9333e1196a0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ConstantCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target is permanent, and can never be changed. An &lt;code&gt;invokedynamic&lt;/code&gt; instruction linked to a &lt;code&gt;ConstantCallSite&lt;/code&gt; is permanently bound to the call site's target.</source>
          <target state="translated">一个 &lt;code&gt;ConstantCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标是永久性的，不可更改。链接到 &lt;code&gt;ConstantCallSite&lt;/code&gt; 的 &lt;code&gt;invokedynamic&lt;/code&gt; 指令永久绑定到调用站点的目标。</target>
        </trans-unit>
        <trans-unit id="587e100c970910a84d26ddbfba1fcdab9804d1cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Constraints&lt;/code&gt; object holds the constraints that govern the way a component's size and position change in a container controlled by a &lt;code&gt;SpringLayout&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Constraints&lt;/code&gt; 对象将管理方式中由控制的容器组件的大小和位置变化的约束 &lt;code&gt;SpringLayout&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0b250c1d19fbfacd163c07679292f8b80db258f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Constraints&lt;/code&gt; object holds the constraints that govern the way a component's size and position change in a container controlled by a &lt;code&gt;SpringLayout&lt;/code&gt;. A &lt;code&gt;Constraints&lt;/code&gt; object is like a &lt;code&gt;Rectangle&lt;/code&gt;, in that it has &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; properties. In the &lt;code&gt;Constraints&lt;/code&gt; object, however, these properties have &lt;code&gt;Spring&lt;/code&gt; values instead of integers. In addition, a &lt;code&gt;Constraints&lt;/code&gt; object can be manipulated as four edges -- north, south, east, and west -- using the &lt;code&gt;constraint&lt;/code&gt; property.</source>
          <target state="translated">甲 &lt;code&gt;Constraints&lt;/code&gt; 对象将管理方式中由控制的容器组件的大小和位置变化的约束 &lt;code&gt;SpringLayout&lt;/code&gt; 中。甲 &lt;code&gt;Constraints&lt;/code&gt; 对象是像 &lt;code&gt;Rectangle&lt;/code&gt; ，在于其具有 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; ， &lt;code&gt;width&lt;/code&gt; ，和 &lt;code&gt;height&lt;/code&gt; 属性。但是，在 &lt;code&gt;Constraints&lt;/code&gt; 对象中，这些属性具有 &lt;code&gt;Spring&lt;/code&gt; 值而不是整数。此外，可以使用 &lt;code&gt;constraint&lt;/code&gt; 属性将 &lt;code&gt;Constraints&lt;/code&gt; 对象作为四个边线（北，南，东和西）进行操作。</target>
        </trans-unit>
        <trans-unit id="f0373f2115cc61f1ecd48de231e06c805c7dc5c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Control[]&lt;/code&gt; array passed as a parameter to any method is owned by the caller. The service provider will not modify the array or keep a reference to it, although it may keep references to the individual &lt;code&gt;Control&lt;/code&gt; objects in the array. A &lt;code&gt;Control[]&lt;/code&gt; array returned by any method is immutable, and may not subsequently be modified by either the caller or the service provider.</source>
          <target state="translated">调用者拥有作为参数传递给任何方法的 &lt;code&gt;Control[]&lt;/code&gt; 数组。尽管服务提供程序可能会保留对数组中各个 &lt;code&gt;Control&lt;/code&gt; 对象的引用，但服务提供者将不会修改该数组或保留对其的引用。甲 &lt;code&gt;Control[]&lt;/code&gt; 通过任何方法返回的数组是不可变的，并且可以不随后通过任一呼叫者或服务提供商进行修改。</target>
        </trans-unit>
        <trans-unit id="ee3aa4e3df63ebfdf55915ed94497312a8df67b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Control[]&lt;/code&gt; array passed as a parameter to the &lt;code&gt;getReferralContext()&lt;/code&gt; method is owned by the caller. The service provider will not modify the array or keep a reference to it, although it may keep references to the individual &lt;code&gt;Control&lt;/code&gt; objects in the array.</source>
          <target state="translated">调用者拥有作为参数传递给 &lt;code&gt;getReferralContext()&lt;/code&gt; 方法的 &lt;code&gt;Control[]&lt;/code&gt; 数组。尽管服务提供程序可能会保留对数组中各个 &lt;code&gt;Control&lt;/code&gt; 对象的引用，但服务提供者将不会修改该数组或保留对其的引用。</target>
        </trans-unit>
        <trans-unit id="623fddfc00e813f22200868156b0c8c96356f578" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CountDownLatch&lt;/code&gt; is a versatile synchronization tool and can be used for a number of purposes. A &lt;code&gt;CountDownLatch&lt;/code&gt; initialized with a count of one serves as a simple on/off latch, or gate: all threads invoking &lt;a href=&quot;#await()&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; wait at the gate until it is opened by a thread invoking &lt;a href=&quot;#countDown()&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;CountDownLatch&lt;/code&gt; initialized to &lt;em&gt;N&lt;/em&gt; can be used to make one thread wait until &lt;em&gt;N&lt;/em&gt; threads have completed some action, or some action has been completed N times.</source>
          <target state="translated">甲 &lt;code&gt;CountDownLatch&lt;/code&gt; 是一种多用途的同步工具，它可用于许多目的。甲 &lt;code&gt;CountDownLatch&lt;/code&gt; 初始化一个发球的计数作为上/简单断开锁存器，或门：所有线程调用&lt;a href=&quot;#await()&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;直到它被一个线程调用开在栅极等待&lt;a href=&quot;#countDown()&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt;。初始化为&lt;em&gt;N&lt;/em&gt;的 &lt;code&gt;CountDownLatch&lt;/code&gt; 可以用于使一个线程等待，直到&lt;em&gt;N个&lt;/em&gt;线程已完成某些操作或某些操作已完成N次。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="23654a775571a88b4f2911239e9e4effa00f8212" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CountDownLatch&lt;/code&gt; is a versatile synchronization tool and can be used for a number of purposes. A &lt;code&gt;CountDownLatch&lt;/code&gt; initialized with a count of one serves as a simple on/off latch, or gate: all threads invoking &lt;a href=&quot;countdownlatch#await--&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; wait at the gate until it is opened by a thread invoking &lt;a href=&quot;countdownlatch#countDown--&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;CountDownLatch&lt;/code&gt; initialized to &lt;em&gt;N&lt;/em&gt; can be used to make one thread wait until &lt;em&gt;N&lt;/em&gt; threads have completed some action, or some action has been completed N times.</source>
          <target state="translated">甲 &lt;code&gt;CountDownLatch&lt;/code&gt; 是一种多用途的同步工具，它可用于许多目的。甲 &lt;code&gt;CountDownLatch&lt;/code&gt; 初始化一个发球的计数作为上/简单断开锁存器，或门：所有线程调用&lt;a href=&quot;countdownlatch#await--&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;直到它被一个线程调用开在栅极等待&lt;a href=&quot;countdownlatch#countDown--&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt;。初始化为&lt;em&gt;N&lt;/em&gt;的 &lt;code&gt;CountDownLatch&lt;/code&gt; 可用于使一个线程等待，直到&lt;em&gt;N个&lt;/em&gt;线程已完成某些操作或某些操作已完成N次。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5780200d18f32d48a90570cf7ae27f4206cd6133" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CountDownLatch&lt;/code&gt; is initialized with a given &lt;em&gt;count&lt;/em&gt;. The &lt;a href=&quot;#await()&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; methods block until the current count reaches zero due to invocations of the &lt;a href=&quot;#countDown()&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt; method, after which all waiting threads are released and any subsequent invocations of &lt;a href=&quot;#await()&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; return immediately. This is a one-shot phenomenon -- the count cannot be reset. If you need a version that resets the count, consider using a &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;CountDownLatch&lt;/code&gt; 初始化为给定&lt;em&gt;数&lt;/em&gt;。在&lt;a href=&quot;#await()&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;方法阻塞，直到当前的计数达到零由于的调用&lt;a href=&quot;#countDown()&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt;方法，在这之后所有等待的线程被释放和任何后续调用&lt;a href=&quot;#await()&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;立即返回。这是一种一次性现象-无法重置计数。如果您需要一个用于重置计数的版本，请考虑使用&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d7ec18000de9280f0c1b01ceced2d3d4a2aabac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CountDownLatch&lt;/code&gt; is initialized with a given &lt;em&gt;count&lt;/em&gt;. The &lt;a href=&quot;countdownlatch#await--&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; methods block until the current count reaches zero due to invocations of the &lt;a href=&quot;countdownlatch#countDown--&quot;&gt;&lt;code&gt;countDown()&lt;/code&gt;&lt;/a&gt; method, after which all waiting threads are released and any subsequent invocations of &lt;a href=&quot;countdownlatch#await--&quot;&gt;&lt;code&gt;await&lt;/code&gt;&lt;/a&gt; return immediately. This is a one-shot phenomenon -- the count cannot be reset. If you need a version that resets the count, consider using a &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;CountDownLatch&lt;/code&gt; 初始化为给定&lt;em&gt;数&lt;/em&gt;。在&lt;a href=&quot;countdownlatch#await--&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;方法阻塞，直到当前的计数达到零由于的调用&lt;a href=&quot;countdownlatch#countDown--&quot;&gt; &lt;code&gt;countDown()&lt;/code&gt; &lt;/a&gt;方法，在这之后所有等待的线程被释放和任何后续调用&lt;a href=&quot;countdownlatch#await--&quot;&gt; &lt;code&gt;await&lt;/code&gt; &lt;/a&gt;立即返回。这是一种一次性现象-无法重置计数。如果需要用于重置计数的版本，请考虑使用&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1f5b8769fcbc5e2f74bc723a2975c47a63c9aa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CounterMonitor&lt;/code&gt; can operate in &lt;em&gt;difference mode&lt;/em&gt;. In this mode, the value compared against the threshold is the difference between two successive observations of an attribute.</source>
          <target state="translated">甲 &lt;code&gt;CounterMonitor&lt;/code&gt; 可以工作在&lt;em&gt;差分模式&lt;/em&gt;。在此模式下，与阈值比较的值是属性的两次连续观察之间的差。</target>
        </trans-unit>
        <trans-unit id="d7269b012ee130f2cfb0f0d27df9e22dbed71430" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CyclicBarrier&lt;/code&gt; supports an optional &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; command that is run once per barrier point, after the last thread in the party arrives, but before any threads are released. This &lt;em&gt;barrier action&lt;/em&gt; is useful for updating shared-state before any of the parties continue.</source>
          <target state="translated">一 &lt;code&gt;CyclicBarrier&lt;/code&gt; 支持一个可选&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;即每运行屏障点一次命令，在党内的最后一个线程到达之后，但任何线程都被释放之前。此&lt;em&gt;屏障操作&lt;/em&gt;对于在任何一方继续之前更新共享状态很有用。</target>
        </trans-unit>
        <trans-unit id="d0e59db3fed8b2b585d26ca27a870c98cefe2f2b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DATE_EDITOR&lt;/code&gt; is a component that allows users to edit &lt;code&gt;java.util.Date&lt;/code&gt; and &lt;code&gt;java.util.Time&lt;/code&gt; objects.</source>
          <target state="translated">一个 &lt;code&gt;DATE_EDITOR&lt;/code&gt; 是一个组件，允许用户编辑 &lt;code&gt;java.util.Date&lt;/code&gt; 和 &lt;code&gt;java.util.Time&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="3f28a3a3fddcbfd552884340d2a55ce72b45a7a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DOCUMENT_MODAL&lt;/code&gt; dialog blocks input to all top-level windows from the same document except those from its own child hierarchy.</source>
          <target state="translated">一个 &lt;code&gt;DOCUMENT_MODAL&lt;/code&gt; 输入对话框块到所有顶级窗口从同一文档除了那些从自己的子层次。</target>
        </trans-unit>
        <trans-unit id="3ce0bd6bebd56e547c80658e640f71d622bcff6a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DOCUMENT_MODAL&lt;/code&gt; dialog blocks input to all top-level windows from the same document except those from its own child hierarchy. A document is a top-level window without an owner. It may contain child windows that, together with the top-level window are treated as a single solid document. Since every top-level window must belong to some document, its root can be found as the top-nearest window without an owner.</source>
          <target state="translated">一个 &lt;code&gt;DOCUMENT_MODAL&lt;/code&gt; 输入对话框块到所有顶级窗口从同一文档除了那些从自己的子层次。文件是没有拥有者的顶层视窗。它可能包含与顶层窗口一起被视为单个实体文档的子窗口。由于每个顶层窗口都必须属于某个文档，因此可以将其根目录作为没有所有者的最上层窗口。</target>
        </trans-unit>
        <trans-unit id="7a3f7d42d20b7b3d67d7fa0fa8e42adc3c948908" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DOMString&lt;/code&gt; indicating which related data is expected in &lt;code&gt;relatedData&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;DOMString&lt;/code&gt; ,指示在 &lt;code&gt;relatedData&lt;/code&gt; 中需要哪些相关数据。</target>
        </trans-unit>
        <trans-unit id="5116e7b33efbcdbfd8f9de6e1e6813af7149e130" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DOMString&lt;/code&gt; indicating which related data is expected in &lt;code&gt;relatedData&lt;/code&gt;. Users should refer to the specification of the error in order to find its &lt;code&gt;DOMString&lt;/code&gt; type and &lt;code&gt;relatedData&lt;/code&gt; definitions if any.</source>
          <target state="translated">一个 &lt;code&gt;DOMString&lt;/code&gt; ,指示在 &lt;code&gt;relatedData&lt;/code&gt; 中需要哪些相关数据。用户应该参考错误的说明，以找到其 &lt;code&gt;DOMString&lt;/code&gt; 类型和 &lt;code&gt;relatedData&lt;/code&gt; 定义（如果有）。</target>
        </trans-unit>
        <trans-unit id="fdf3136aa9ed6d2adfa91078dd901de169c1263f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DataFlavor&lt;/code&gt; provides meta information about data.</source>
          <target state="translated">一 &lt;code&gt;DataFlavor&lt;/code&gt; 提供有关数据的元信息。</target>
        </trans-unit>
        <trans-unit id="4be4aba3f469353d84e00a69221bb21d6219bb1a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DataFlavor&lt;/code&gt; provides meta information about data. &lt;code&gt;DataFlavor&lt;/code&gt; is typically used to access data on the clipboard, or during a drag and drop operation.</source>
          <target state="translated">一 &lt;code&gt;DataFlavor&lt;/code&gt; 提供有关数据的元信息。 &lt;code&gt;DataFlavor&lt;/code&gt; 通常用于访问剪贴板上或拖放操作期间的数据。</target>
        </trans-unit>
        <trans-unit id="0a68c6d45b89da215100f63a2c1fb4b42f275c24" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DataSource&lt;/code&gt; object can be implemented to work with the middle tier infrastructure so that the connections it produces will be pooled for reuse. An application that uses such a &lt;code&gt;DataSource&lt;/code&gt; implementation will automatically get a connection that participates in connection pooling. A &lt;code&gt;DataSource&lt;/code&gt; object can also be implemented to work with the middle tier infrastructure so that the connections it produces can be used for distributed transactions without any special coding.</source>
          <target state="translated">一个 &lt;code&gt;DataSource&lt;/code&gt; 对象可以实现工作与中间层基础设施，使其生产的连接将被汇集起来进行再利用。使用此类 &lt;code&gt;DataSource&lt;/code&gt; 实现的应用程序将自动获得参与连接池的连接。还可以将 &lt;code&gt;DataSource&lt;/code&gt; 对象实现为与中间层基础结构一起使用，以便它产生的连接可以用于分布式事务，而无需任何特殊编码。</target>
        </trans-unit>
        <trans-unit id="407f539c1a6a73f3fb5878397ad90f413d6a8652" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DataSource&lt;/code&gt; object has properties that can be modified when necessary. For example, if the data source is moved to a different server, the property for the server can be changed. The benefit is that because the data source's properties can be changed, any code accessing that data source does not need to be changed.</source>
          <target state="translated">甲 &lt;code&gt;DataSource&lt;/code&gt; 对象具有可被修改时必要的属性。例如，如果将数据源移动到其他服务器，则可以更改服务器的属性。好处是，因为可以更改数据源的属性，所以不需要更改访问该数据源的任何代码。</target>
        </trans-unit>
        <trans-unit id="983265f22277c984071b6d0839ff11a5aabd6129" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Date&lt;/code&gt; parsed from the string.</source>
          <target state="translated">从字符串解析的 &lt;code&gt;Date&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b9da6c54213efee90c22320dda6686553788abc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Date&lt;/code&gt; parsed from the string. In case of error, returns null.</source>
          <target state="translated">从字符串解析的 &lt;code&gt;Date&lt;/code&gt; 。如果发生错误，则返回null。</target>
        </trans-unit>
        <trans-unit id="88198a2133b30c87ec970f147ea4593fb57ae6ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Date&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if the input could not be parsed</source>
          <target state="translated">一个 &lt;code&gt;Date&lt;/code&gt; ，或 &lt;code&gt;null&lt;/code&gt; 如果输入无法解析</target>
        </trans-unit>
        <trans-unit id="b940e54bad740f2ada94ed3c5d00e1993947acda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DecimalFormat&lt;/code&gt; comprises a &lt;em&gt;pattern&lt;/em&gt; and a set of &lt;em&gt;symbols&lt;/em&gt;. The pattern may be set directly using &lt;code&gt;applyPattern()&lt;/code&gt;, or indirectly using the API methods. The symbols are stored in a &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object. When using the &lt;code&gt;NumberFormat&lt;/code&gt; factory methods, the pattern and symbols are read from localized &lt;code&gt;ResourceBundle&lt;/code&gt;s.</source>
          <target state="translated">甲 &lt;code&gt;DecimalFormat&lt;/code&gt; 的包括&lt;em&gt;图案&lt;/em&gt;和一组&lt;em&gt;符号&lt;/em&gt;。可以使用 &lt;code&gt;applyPattern()&lt;/code&gt; 直接设置模式，也可以使用API​​方法间接设置模式。这些符号存储在 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 对象中。使用 &lt;code&gt;NumberFormat&lt;/code&gt; 工厂方法时，将从本地化的 &lt;code&gt;ResourceBundle&lt;/code&gt; 中读取模式和符号。</target>
        </trans-unit>
        <trans-unit id="f386dd84dac1520ed2bcfb17a3ac2ee80b93ecc1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DecimalFormat&lt;/code&gt; pattern contains a positive and negative subpattern, for example, &lt;code&gt;&quot;#,##0.00;(#,##0.00)&quot;&lt;/code&gt;. Each subpattern has a prefix, numeric part, and suffix. The negative subpattern is optional; if absent, then the positive subpattern prefixed with the localized minus sign (&lt;code&gt;'-'&lt;/code&gt; in most locales) is used as the negative subpattern. That is, &lt;code&gt;&quot;0.00&quot;&lt;/code&gt; alone is equivalent to &lt;code&gt;&quot;0.00;-0.00&quot;&lt;/code&gt;. If there is an explicit negative subpattern, it serves only to specify the negative prefix and suffix; the number of digits, minimal digits, and other characteristics are all the same as the positive pattern. That means that &lt;code&gt;&quot;#,##0.0#;(#)&quot;&lt;/code&gt; produces precisely the same behavior as &lt;code&gt;&quot;#,##0.0#;(#,##0.0#)&quot;&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;DecimalFormat&lt;/code&gt; 的图案包含一个正和负子模式，例如， &lt;code&gt;&quot;#,##0.00;(#,##0.00)&quot;&lt;/code&gt; 。每个子模式都有一个前缀，数字部分和后缀。负子模式是可选的；如果不存在，则将以局部减号（在大多数语言环境中为 &lt;code&gt;'-'&lt;/code&gt; ）作为前缀的正子模式用作负子模式。也就是说，单独的 &lt;code&gt;&quot;0.00&quot;&lt;/code&gt; 等效于 &lt;code&gt;&quot;0.00;-0.00&quot;&lt;/code&gt; 。如果存在明确的负子模式，则仅用于指定负前缀和后缀；数字位数，最小位数和其他特征都与正模式相同。这意味着 &lt;code&gt;&quot;#,##0.0#;(#)&quot;&lt;/code&gt; 产生与以下行为完全相同的行为 &lt;code&gt;&quot;#,##0.0#;(#,##0.0#)&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43f62f17c93d6e503ea6958cb597b84dc9cc8960" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; is a general-purpose node in a tree data structure.</source>
          <target state="translated">甲 &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; 是树数据结构的通用节点。</target>
        </trans-unit>
        <trans-unit id="d500332cdb51c4544e081fe6aaa562e8f963e7a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; is a general-purpose node in a tree data structure. For examples of using default mutable tree nodes, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">甲 &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; 是树数据结构的通用节点。有关使用默认可变树节点的示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c748b8d788228ebf84979c6a45c3bbd71d5cb14" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; is a general-purpose node in a tree data structure. For examples of using default mutable tree nodes, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">甲 &lt;code&gt;DefaultMutableTreeNode&lt;/code&gt; 是树数据结构的通用节点。有关使用默认可变树节点的示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47e3fd3937b7f9d45c2963522b8029c7a9d7864a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DigestMethod&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newDigestMethod(java.lang.String,javax.xml.crypto.dsig.spec.DigestMethodParameterSpec)&quot;&gt;&lt;code&gt;newDigestMethod&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">甲 &lt;code&gt;DigestMethod&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newDigestMethod(java.lang.String,javax.xml.crypto.dsig.spec.DigestMethodParameterSpec)&quot;&gt; &lt;code&gt;newDigestMethod&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="748fe46a90c654076e96379836903b45a13d067e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Dimension&lt;/code&gt; object that indicates the size of this component; &lt;code&gt;null&lt;/code&gt; if this object is not on the screen</source>
          <target state="translated">阿 &lt;code&gt;Dimension&lt;/code&gt; 对象，表示该组分的大小; 如果此对象不在屏幕上，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6525ce217e5549cf04ce19699f3d34ed2bc57c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DirObjectFactory&lt;/code&gt; extends &lt;code&gt;ObjectFactory&lt;/code&gt; by allowing an &lt;code&gt;Attributes&lt;/code&gt; instance to be supplied to the &lt;code&gt;getObjectInstance()&lt;/code&gt; method. &lt;code&gt;DirObjectFactory&lt;/code&gt; implementations are intended to be used by &lt;code&gt;DirContext&lt;/code&gt; service providers. The service provider, in addition reading an object from the directory, might already have attributes that are useful for the object factory to check to see whether the factory is supposed to process the object. For instance, an LDAP-style service provider might have read the &quot;objectclass&quot; of the object. A CORBA object factory might be interested only in LDAP entries with &quot;objectclass=corbaObject&quot;. By using the attributes supplied by the LDAP service provider, the CORBA object factory can quickly eliminate objects that it need not worry about, and non-CORBA object factories can quickly eliminate CORBA-related LDAP entries.</source>
          <target state="translated">甲 &lt;code&gt;DirObjectFactory&lt;/code&gt; 延伸 &lt;code&gt;ObjectFactory&lt;/code&gt; 通过允许 &lt;code&gt;Attributes&lt;/code&gt; 实例被提供给 &lt;code&gt;getObjectInstance()&lt;/code&gt; 方法。 &lt;code&gt;DirObjectFactory&lt;/code&gt; 实现旨在由 &lt;code&gt;DirContext&lt;/code&gt; 使用服务供应商。除了从目录中读取对象之外，服务提供者可能已经具有一些属性，这些属性对于对象工厂检查是否应该处理该对象很有用。例如，LDAP样式的服务提供者可能已读取对象的&amp;ldquo;对象类&amp;rdquo;。 CORBA对象工厂可能仅对带有&amp;ldquo; objectclass = corbaObject&amp;rdquo;的LDAP条目感兴趣。通过使用LDAP服务提供商提供的属性，CORBA对象工厂可以快速消除不需要担心的对象，非CORBA对象工厂可以快速消除与CORBA相关的LDAP条目。</target>
        </trans-unit>
        <trans-unit id="7a1be329221d19aed1829322a7305689086b3003" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DirStateFactory&lt;/code&gt; extends &lt;code&gt;StateFactory&lt;/code&gt; by allowing an &lt;code&gt;Attributes&lt;/code&gt; instance to be supplied to and be returned by the &lt;code&gt;getStateToBind()&lt;/code&gt; method. &lt;code&gt;DirStateFactory&lt;/code&gt; implementations are intended to be used by &lt;code&gt;DirContext&lt;/code&gt; service providers. When a caller binds an object using &lt;code&gt;DirContext.bind()&lt;/code&gt;, he might also specify a set of attributes to be bound with the object. The object and attributes to be bound are passed to the &lt;code&gt;getStateToBind()&lt;/code&gt; method of a factory. If the factory processes the object and attributes, it returns a corresponding pair of object and attributes to be bound. If the factory does not process the object, it must return null.</source>
          <target state="translated">甲 &lt;code&gt;DirStateFactory&lt;/code&gt; 延伸 &lt;code&gt;StateFactory&lt;/code&gt; 通过允许 &lt;code&gt;Attributes&lt;/code&gt; 实例被提供给和由返回 &lt;code&gt;getStateToBind()&lt;/code&gt; 方法。 &lt;code&gt;DirStateFactory&lt;/code&gt; 实现旨在由 &lt;code&gt;DirContext&lt;/code&gt; 服务提供者使用。当调用者使用 &lt;code&gt;DirContext.bind()&lt;/code&gt; 绑定对象时，他可能还会指定要与该对象绑定的一组属性。要绑定的对象和属性传递到工厂的 &lt;code&gt;getStateToBind()&lt;/code&gt; 方法。如果工厂处理了对象和属性，它将返回一对要绑定的对象和属性。如果工厂不处理该对象，则必须返回null。</target>
        </trans-unit>
        <trans-unit id="a58679715515bab3aef6bbaa606fe4fadd60c73a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DirectoryStream&lt;/code&gt; is opened upon creation and is closed by invoking the &lt;code&gt;close&lt;/code&gt; method. Closing a directory stream releases any resources associated with the stream. Failure to close the stream may result in a resource leak. The try-with-resources statement provides a useful construct to ensure that the stream is closed:</source>
          <target state="translated">一个 &lt;code&gt;DirectoryStream&lt;/code&gt; 是在创建时打开，并且通过调用关闭 &lt;code&gt;close&lt;/code&gt; 方法。关闭目录流将释放与该流关联的所有资源。无法关闭流可能会导致资源泄漏。try-with-resources语句提供了一个有用的构造，以确保关闭流：</target>
        </trans-unit>
        <trans-unit id="65b703cdf43a5ec83f8ad4044878e129de1094fd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DirectoryStream&lt;/code&gt; that defines operations on files that are located relative to an open directory.</source>
          <target state="translated">一个 &lt;code&gt;DirectoryStream&lt;/code&gt; 是在位于相对于开放式目录中的文件定义操作。</target>
        </trans-unit>
        <trans-unit id="01c2f8bc2c160fdac6becd46d1322732a89e078f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DirectoryStream&lt;/code&gt; that defines operations on files that are located relative to an open directory. A &lt;code&gt;SecureDirectoryStream&lt;/code&gt; is intended for use by sophisticated or security sensitive applications requiring to traverse file trees or otherwise operate on directories in a race-free manner. Race conditions can arise when a sequence of file operations cannot be carried out in isolation. Each of the file operations defined by this interface specify a relative path. All access to the file is relative to the open directory irrespective of if the directory is moved or replaced by an attacker while the directory is open. A &lt;code&gt;SecureDirectoryStream&lt;/code&gt; may also be used as a virtual &lt;em&gt;working directory&lt;/em&gt;.</source>
          <target state="translated">一个 &lt;code&gt;DirectoryStream&lt;/code&gt; 是在位于相对于开放式目录中的文件定义操作。一个 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; 旨在用于通过复杂或安全需要遍历文件树敏感的应用程序或在自由比赛的方式，否则目录操作。当无法单独执行一系列文件操作时，可能会出现争用条件。该接口定义的每个文件操作都指定一个相对路径。对文件的所有访问都是相对于打开目录的，而不管目录打开时是否被攻击者移动或替换了目录。甲 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; 也可以使用作为虚拟&lt;em&gt;工作目录&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0612efab86216fdda0a0396170a641c29dd7bdb4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DocAttributeSet&lt;/code&gt; is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the &lt;code&gt;DocAttributeSet&lt;/code&gt; must be instances of interface &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">一个 &lt;code&gt;DocAttributeSet&lt;/code&gt; 仅仅是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; &lt;/a&gt;，其构造和变异操作保证一个附加不变量，即在所有属性值 &lt;code&gt;DocAttributeSet&lt;/code&gt; 必须的接口实例&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;。在下面重新指定&lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作，以确保此附加不变性。</target>
        </trans-unit>
        <trans-unit id="af03376ceecb544d9985acc0755ed98550534ecd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DocPrintJob&lt;/code&gt; obtains its print data by means of interface &lt;a href=&quot;doc&quot;&gt;&lt;code&gt;Doc&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Doc&lt;/code&gt; object lets the &lt;code&gt;DocPrintJob&lt;/code&gt; determine the doc flavor the client can supply. A &lt;code&gt;Doc&lt;/code&gt; object also lets the &lt;code&gt;DocPrintJob&lt;/code&gt; obtain an instance of the doc flavor's representation class, from which the &lt;code&gt;DocPrintJob&lt;/code&gt; then obtains the actual print data.</source>
          <target state="translated">甲 &lt;code&gt;DocPrintJob&lt;/code&gt; 的通过界面的方式获得其打印数据&lt;a href=&quot;doc&quot;&gt; &lt;code&gt;Doc&lt;/code&gt; &lt;/a&gt;。一个 &lt;code&gt;Doc&lt;/code&gt; 对象让 &lt;code&gt;DocPrintJob&lt;/code&gt; 的确定的DocFlavor客户端可以提供。甲 &lt;code&gt;Doc&lt;/code&gt; 对象也让 &lt;code&gt;DocPrintJob&lt;/code&gt; 的获得该文档flavor的表示类，从该实例 &lt;code&gt;DocPrintJob&lt;/code&gt; 的随后获得实际的打印数据。</target>
        </trans-unit>
        <trans-unit id="45f553c3dc219e11e9cac35d1e111bda89463aab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DomainCombiner&lt;/code&gt; is passed as a parameter to the appropriate constructor for &lt;code&gt;AccessControlContext&lt;/code&gt;. The newly constructed context is then passed to the &lt;code&gt;AccessController.doPrivileged(..., context)&lt;/code&gt; method to bind the provided context (and associated &lt;code&gt;DomainCombiner&lt;/code&gt;) with the current execution Thread. Subsequent calls to &lt;code&gt;AccessController.getContext&lt;/code&gt; or &lt;code&gt;AccessController.checkPermission&lt;/code&gt; cause the &lt;code&gt;DomainCombiner.combine&lt;/code&gt; to get invoked.</source>
          <target state="translated">将 &lt;code&gt;DomainCombiner&lt;/code&gt; 作为参数传递给 &lt;code&gt;AccessControlContext&lt;/code&gt; 的适当构造函数。然后将新构造的上下文传递给 &lt;code&gt;AccessController.doPrivileged(..., context)&lt;/code&gt; 方法，以将提供的上下文（和关联的 &lt;code&gt;DomainCombiner&lt;/code&gt; ）与当前执行线程绑定。对 &lt;code&gt;AccessController.getContext&lt;/code&gt; 或 &lt;code&gt;AccessController.checkPermission&lt;/code&gt; 的后续调用导致 &lt;code&gt;DomainCombiner.combine&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="7af584515b6d622da0599e538175efd0509780e2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DomainCombiner&lt;/code&gt; provides a means to dynamically update the ProtectionDomains associated with the current &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;DomainCombiner&lt;/code&gt; 提供一个动态更新与当前关联的ProtectionDomain的装置 &lt;code&gt;AccessControlContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969de020230c5d0de2297be66b00415bdc63a99b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DosFileAttributeView&lt;/code&gt; is a &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; that additionally supports access to the set of DOS attribute flags that are used to indicate if the file is read-only, hidden, a system file, or archived.</source>
          <target state="translated">甲 &lt;code&gt;DosFileAttributeView&lt;/code&gt; 是&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;支持两个附加访问组用于指示文件是否只读，隐藏，系统文件，或存档DOS属性标志。</target>
        </trans-unit>
        <trans-unit id="3e0422692eeba56e400501c60a1367491cd3defc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DragGestureEvent&lt;/code&gt; is passed to &lt;code&gt;DragGestureListener&lt;/code&gt;'s dragGestureRecognized() method when a particular &lt;code&gt;DragGestureRecognizer&lt;/code&gt; detects that a platform dependent drag initiating gesture has occurred on the &lt;code&gt;Component&lt;/code&gt; that it is tracking.</source>
          <target state="translated">甲 &lt;code&gt;DragGestureEvent&lt;/code&gt; 被传递给 &lt;code&gt;DragGestureListener&lt;/code&gt; 的dragGestureRecognized（）方法时的具体 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 检测到已经发生了一个平台相关的拖动启动手势的 &lt;code&gt;Component&lt;/code&gt; ，它是跟踪。</target>
        </trans-unit>
        <trans-unit id="df8b8227642a3736f692748d4a90f5d5a95ec8dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DragGestureEvent&lt;/code&gt; is passed to &lt;code&gt;DragGestureListener&lt;/code&gt;'s dragGestureRecognized() method when a particular &lt;code&gt;DragGestureRecognizer&lt;/code&gt; detects that a platform dependent drag initiating gesture has occurred on the &lt;code&gt;Component&lt;/code&gt; that it is tracking. The &lt;code&gt;action&lt;/code&gt; field of any &lt;code&gt;DragGestureEvent&lt;/code&gt; instance should take one of the following values:</source>
          <target state="translated">甲 &lt;code&gt;DragGestureEvent&lt;/code&gt; 被传递给 &lt;code&gt;DragGestureListener&lt;/code&gt; 的dragGestureRecognized（）方法时的具体 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 检测到已经发生了一个平台相关的拖动启动手势的 &lt;code&gt;Component&lt;/code&gt; ，它是跟踪。任何 &lt;code&gt;DragGestureEvent&lt;/code&gt; 实例的 &lt;code&gt;action&lt;/code&gt; 字段应采用以下值之一：</target>
        </trans-unit>
        <trans-unit id="e6b64ca08ec1ff3206b0a11ebecc01a01ae26514" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is obtained from the &lt;code&gt;DragSource&lt;/code&gt; and is associated with a &lt;code&gt;Component&lt;/code&gt; in order to track and identify any Drag initiating gesture by the user over the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 从所得 &lt;code&gt;DragSource&lt;/code&gt; 并且与相关联的 &lt;code&gt;Component&lt;/code&gt; ，以便跟踪和由用户在识别任何拖动启动动作 &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65e20906fc545ca43fa04f80a5d9ada7302621ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DragSource&lt;/code&gt; comes into existence, associated with some presentation element (&lt;code&gt;Component&lt;/code&gt;) in the GUI, to initiate a Drag and Drop of some potentially &lt;code&gt;Transferable&lt;/code&gt; data.</source>
          <target state="translated">甲 &lt;code&gt;DragSource&lt;/code&gt; 开始存在，有一些呈现元件（相关 &lt;code&gt;Component&lt;/code&gt; ）在GUI，以引发一些潜在的拖放 &lt;code&gt;Transferable&lt;/code&gt; 数据。</target>
        </trans-unit>
        <trans-unit id="1a92d5d9ddc22a56ce39e56abcb59681f362c267" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DriverAction&lt;/code&gt; implementation is not intended to be used directly by applications. A JDBC Driver may choose to create its &lt;code&gt;DriverAction&lt;/code&gt; implementation in a private class to avoid it being called directly.</source>
          <target state="translated">一个 &lt;code&gt;DriverAction&lt;/code&gt; 实现不打算直接应用。JDBC驱动程序可以选择在私有类中创建其 &lt;code&gt;DriverAction&lt;/code&gt; 实现，以避免直接调用它。</target>
        </trans-unit>
        <trans-unit id="12068ae8e6190d25faca1bbbace9a271d823ded5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DropTargetContext&lt;/code&gt; is created whenever the logical cursor associated with a Drag and Drop operation coincides with the visible geometry of a &lt;code&gt;Component&lt;/code&gt; associated with a &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;DropTargetContext&lt;/code&gt; 每当用拖放操作一致用的可见几何相关联的逻辑光标被创建 &lt;code&gt;Component&lt;/code&gt; 与相关联 &lt;code&gt;DropTarget&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98bed9bb6d3e8178c5f5b3ab8da421776c67f667" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DropTargetContext&lt;/code&gt; is created whenever the logical cursor associated with a Drag and Drop operation coincides with the visible geometry of a &lt;code&gt;Component&lt;/code&gt; associated with a &lt;code&gt;DropTarget&lt;/code&gt;. The &lt;code&gt;DropTargetContext&lt;/code&gt; provides the mechanism for a potential receiver of a drop operation to both provide the end user with the appropriate drag under feedback, but also to effect the subsequent data transfer if appropriate.</source>
          <target state="translated">甲 &lt;code&gt;DropTargetContext&lt;/code&gt; 每当用拖放操作一致用的可见几何相关联的逻辑光标被创建 &lt;code&gt;Component&lt;/code&gt; 与相关联 &lt;code&gt;DropTarget&lt;/code&gt; 。所述 &lt;code&gt;DropTargetContext&lt;/code&gt; 提供了拖放操作的既提供具有下反馈适当的拖动终端用户的电位接收机的机制，但也以实现合适的话随后的数据传输。</target>
        </trans-unit>
        <trans-unit id="30d4f0a0b6cd4dfe2827283578fb4258723b708c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Duration&lt;/code&gt; represents a directed distance between two points on the time-line and can therefore be positive, zero or negative. This method checks whether the length is less than zero.</source>
          <target state="translated">甲 &lt;code&gt;Duration&lt;/code&gt; 表示所述时间线的两个点之间的有向距离，并因此可以是正的，零或负的。此方法检查长度是否小于零。</target>
        </trans-unit>
        <trans-unit id="2748f760b08fada23b2956823b2400fe17d043c7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Duration&lt;/code&gt; represents a directed distance between two points on the time-line and can therefore be positive, zero or negative. This method checks whether the length is zero.</source>
          <target state="translated">甲 &lt;code&gt;Duration&lt;/code&gt; 表示所述时间线的两个点之间的有向距离，并因此可以是正的，零或负的。此方法检查长度是否为零。</target>
        </trans-unit>
        <trans-unit id="930f6f6edd843ad2d6fbf30a21b58dbc51ccf9e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Duration&lt;/code&gt; represents a directed distance between two points on the time-line. A negative duration is expressed by the negative sign of the seconds part. A duration of -1 nanosecond is stored as -1 seconds plus 999,999,999 nanoseconds.</source>
          <target state="translated">甲 &lt;code&gt;Duration&lt;/code&gt; 表示所述时间线的两个点之间的有向距离。负持续时间由秒部分的负号表示。-1纳秒的持续时间存储为-1秒加999,999,999纳秒。</target>
        </trans-unit>
        <trans-unit id="c5f9797b527ff1fb2efee429f3363309891a1f28" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; can be configured with a &lt;a href=&quot;jdk/dynalink/dynamiclinkerfactory#setClassLoader(java.lang.ClassLoader)&quot;&gt;class loader&lt;/a&gt;. It will try to instantiate all &lt;a href=&quot;jdk/dynalink/linker/guardingdynamiclinkerexporter&quot;&gt;&lt;code&gt;GuardingDynamicLinkerExporter&lt;/code&gt;&lt;/a&gt; classes visible to that class loader and compose the linkers they provide into the &lt;code&gt;DynamicLinker&lt;/code&gt; it creates. This allows for interoperability between languages: if you have two language runtimes A and B deployed in your JVM and they export their linkers through the above mechanism, language runtime A will have a language-specific linker instance from B and vice versa inside their &lt;code&gt;DynamicLinker&lt;/code&gt; objects. This means that if an object from language runtime B gets passed to code from language runtime A, the linker from B will get a chance to link the call site in A when it encounters the object from B.</source>
          <target state="translated">甲 &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; 可以与被配置&lt;a href=&quot;jdk/dynalink/dynamiclinkerfactory#setClassLoader(java.lang.ClassLoader)&quot;&gt;类加载器&lt;/a&gt;。它将尝试实例化对该类加载器可见的所有&lt;a href=&quot;jdk/dynalink/linker/guardingdynamiclinkerexporter&quot;&gt; &lt;code&gt;GuardingDynamicLinkerExporter&lt;/code&gt; &lt;/a&gt;类，并将它们提供的链接器组合到它创建的 &lt;code&gt;DynamicLinker&lt;/code&gt; 中。这允许语言之间的互操作性：如果您在JVM中部署了两个语言运行库A和B，并且它们通过上述机制导出了它们的链接器，则语言运行库A将在其 &lt;code&gt;DynamicLinker&lt;/code&gt; 中从B拥有一个特定于语言的链接器实例，反之亦然对象。这意味着，如果来自语言运行库B的对象传递给来自语言运行库A的代码，则来自B的链接程序将有机会在遇到来自B的对象时链接A中的调用站点。</target>
        </trans-unit>
        <trans-unit id="a5025f75a24cc7c2641a1007fe78fed4557bb80a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;EnumControl&lt;/code&gt; provides control over a set of discrete possible values, each represented by an object.</source>
          <target state="translated">甲 &lt;code&gt;EnumControl&lt;/code&gt; 提供对一组离散的可能的值，每一个都由一个对象表示的控制。</target>
        </trans-unit>
        <trans-unit id="5b18550a37715d871995df89cc05801612c8dd56" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;EnumControl&lt;/code&gt; provides control over a set of discrete possible values, each represented by an object. In a graphical user interface, such a control might be represented by a set of buttons, each of which chooses one value or setting. For example, a reverb control might provide several preset reverberation settings, instead of providing continuously adjustable parameters of the sort that would be represented by &lt;code&gt;&lt;a href=&quot;floatcontrol&quot;&gt;&lt;code&gt;FloatControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">甲 &lt;code&gt;EnumControl&lt;/code&gt; 提供对一组离散的可能的值，每一个都由一个对象表示的控制。在图形用户界面中，此类控件可能由一组按钮表示，每个按钮都选择一个值或设置。例如，混响控件可能会提供几个预设的混响设置，而不是提供将由 &lt;code&gt;&lt;a href=&quot;floatcontrol&quot;&gt;&lt;code&gt;FloatControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象表示的那种连续可调的参数。</target>
        </trans-unit>
        <trans-unit id="4202cdf8de4262946a959135d355ce779c084535" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FONT_CHOOSER&lt;/code&gt; is a component that lets the user pick various attributes for fonts.</source>
          <target state="translated">甲 &lt;code&gt;FONT_CHOOSER&lt;/code&gt; 是让用户挑选各种属性的字体的成分。</target>
        </trans-unit>
        <trans-unit id="94ff7967cdf12cd25b3783588570d481ded45c74" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Field&lt;/code&gt; permits widening conversions to occur during a get or set access operation, but throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if a narrowing conversion would occur.</source>
          <target state="translated">一个 &lt;code&gt;Field&lt;/code&gt; 允许获取或设置访问操作期间发生的扩展转换，但抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 如果发生收缩转换。</target>
        </trans-unit>
        <trans-unit id="1328055d250f23371e05fcc65298d035aa264889" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Field&lt;/code&gt; provides information about, and dynamic access to, a single field of a class or an interface.</source>
          <target state="translated">甲 &lt;code&gt;Field&lt;/code&gt; 提供有关的信息，以及动态访问，一个类或一个接口的单个字段。</target>
        </trans-unit>
        <trans-unit id="3d84578fa873dd7a44de9272ca71dfa5a8a00812" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Field&lt;/code&gt; provides information about, and dynamic access to, a single field of a class or an interface. The reflected field may be a class (static) field or an instance field.</source>
          <target state="translated">甲 &lt;code&gt;Field&lt;/code&gt; 提供有关的信息，以及动态访问，一个类或一个接口的单个字段。反射字段可以是类（静态）字段或实例字段。</target>
        </trans-unit>
        <trans-unit id="be851e9dcdb2a6a22642fa0e075fd2d060b49379" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileChannel&lt;/code&gt; is created by invoking one of its static &lt;a href=&quot;filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods, or by invoking the &lt;code&gt;
 getChannel&lt;/code&gt; method of a &lt;a href=&quot;../../io/fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; to return a file channel connected to the same underlying file as the &lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">甲 &lt;code&gt;FileChannel&lt;/code&gt; 通过调用其静态之一创建&lt;a href=&quot;filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;的方法，或通过调用 &lt;code&gt; getChannel&lt;/code&gt; 一个的方法&lt;a href=&quot;../../io/fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../io/fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; 中&lt;/a&gt;，或&lt;a href=&quot;../../io/randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; 的&lt;/a&gt;返回连接到相同的基本文件作为一个文件通道&lt;a href=&quot;../../io/package-summary&quot;&gt; &lt;code&gt;java.io&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="3c6a8b1955dd096b5a0b1fc4b44adee3b3e60c93" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileChannel&lt;/code&gt; is created by invoking one of its static &lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods, or by invoking the &lt;code&gt;getChannel&lt;/code&gt; method of a &lt;a href=&quot;../../io/fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; to return a file channel connected to the same underlying file as the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">甲 &lt;code&gt;FileChannel&lt;/code&gt; 通过调用其静态之一创建&lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;的方法，或通过调用 &lt;code&gt;getChannel&lt;/code&gt; 一个的方法&lt;a href=&quot;../../io/fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../io/fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; 中&lt;/a&gt;，或&lt;a href=&quot;../../io/randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; 的&lt;/a&gt;返回连接到相同的基本文件作为一个文件通道 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="482f3e78c3eaddf0f4f51de9acc9f719f77190c8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileFilter&lt;/code&gt; can be set on a &lt;code&gt;JFileChooser&lt;/code&gt; to keep unwanted files from appearing in the directory listing. For an example implementation of a simple file filter, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileFilter.java&lt;/code&gt;. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">一个 &lt;code&gt;FileFilter&lt;/code&gt; 可以在设定 &lt;code&gt;JFileChooser&lt;/code&gt; 从出现在目录列表保存不需要的文件。有关简单文件过滤器的示例实现，请参见 &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileFilter.java&lt;/code&gt; 。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;如何使用文件选择器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a88f27beedc463dd736d4346d67c27ad6ead611b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileFilter&lt;/code&gt; can be set on a &lt;code&gt;JFileChooser&lt;/code&gt; to keep unwanted files from appearing in the directory listing. For an example implementation of a simple file filter, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileFilter.java&lt;/code&gt;. For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">一个 &lt;code&gt;FileFilter&lt;/code&gt; 可以在设定 &lt;code&gt;JFileChooser&lt;/code&gt; 从出现在目录列表保存不需要的文件。有关简单文件过滤器的示例实现，请参见 &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileFilter.java&lt;/code&gt; 。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;如何使用文件选择器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d7dbe17be044a047cac0a60d497bd3d6df3636b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileInputStream&lt;/code&gt; obtains input bytes from a file in a file system.</source>
          <target state="translated">甲 &lt;code&gt;FileInputStream&lt;/code&gt; 从文件系统中的文件获得输入字节。</target>
        </trans-unit>
        <trans-unit id="1796330eede2865aae5adce7c54631168f35ad9e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileInputStream&lt;/code&gt; obtains input bytes from a file in a file system. What files are available depends on the host environment.</source>
          <target state="translated">甲 &lt;code&gt;FileInputStream&lt;/code&gt; 从文件系统中的文件获得输入字节。可用的文件取决于主机环境。</target>
        </trans-unit>
        <trans-unit id="214a2c8beeebdce1896d0edcb65579291e981912" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileSystem&lt;/code&gt; can provide read-only or read-write access to the file system. Whether or not a file system provides read-only access is established when the &lt;code&gt;FileSystem&lt;/code&gt; is created and can be tested by invoking its &lt;a href=&quot;#isReadOnly()&quot;&gt;&lt;code&gt;isReadOnly&lt;/code&gt;&lt;/a&gt; method. Attempts to write to file stores by means of an object associated with a read-only file system throws &lt;a href=&quot;readonlyfilesystemexception&quot;&gt;&lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;FileSystem&lt;/code&gt; 可以提供只读或读写的文件系统访问。的时是否一个文件系统提供只读访问建立 &lt;code&gt;FileSystem&lt;/code&gt; 被创建，并且可以通过调用它来测试&lt;a href=&quot;#isReadOnly()&quot;&gt; &lt;code&gt;isReadOnly&lt;/code&gt; &lt;/a&gt;方法。尝试通过与只读文件系统关联的对象写入文件存储库将引发&lt;a href=&quot;readonlyfilesystemexception&quot;&gt; &lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2632d4be74b6a4625d839cf5ae4e5976f681131b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileSystem&lt;/code&gt; can provide read-only or read-write access to the file system. Whether or not a file system provides read-only access is established when the &lt;code&gt;FileSystem&lt;/code&gt; is created and can be tested by invoking its &lt;a href=&quot;filesystem#isReadOnly--&quot;&gt;&lt;code&gt;isReadOnly&lt;/code&gt;&lt;/a&gt; method. Attempts to write to file stores by means of an object associated with a read-only file system throws &lt;a href=&quot;readonlyfilesystemexception&quot;&gt;&lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;FileSystem&lt;/code&gt; 可以提供只读或读写的文件系统访问。的时是否一个文件系统提供只读访问建立 &lt;code&gt;FileSystem&lt;/code&gt; 被创建，并且可以通过调用它来测试&lt;a href=&quot;filesystem#isReadOnly--&quot;&gt; &lt;code&gt;isReadOnly&lt;/code&gt; &lt;/a&gt;方法。尝试通过与只读文件系统关联的对象写入文件存储库将引发&lt;a href=&quot;readonlyfilesystemexception&quot;&gt; &lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7c3fb79d465914ca1df5911c7a10492bdbb55ad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileSystem&lt;/code&gt; implementation supports the &quot;&lt;code&gt;glob&lt;/code&gt;&quot; and &quot;&lt;code&gt;regex&lt;/code&gt;&quot; syntaxes, and may support others. The value of the syntax component is compared without regard to case.</source>
          <target state="translated">一个 &lt;code&gt;FileSystem&lt;/code&gt; 实现支持&amp;ldquo; &lt;code&gt;glob&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;regex&lt;/code&gt; &amp;rdquo;语法，并且可以支持等。比较语法成分的值时不考虑大小写。</target>
        </trans-unit>
        <trans-unit id="679add4b88b56d5af3c24c1ad0ab7cf79c45d079" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FileTime&lt;/code&gt; is primarily intended to represent the value of a file's time stamp. Where used to represent</source>
          <target state="translated">一个 &lt;code&gt;FileTime&lt;/code&gt; 的主要目的是代表一个文件的时间戳值。用来代表</target>
        </trans-unit>
        <trans-unit id="3788c0fcb354158afae8b7a311ab4d1c461b74ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FilterInputStream&lt;/code&gt; contains some other input stream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.</source>
          <target state="translated">甲 &lt;code&gt;FilterInputStream&lt;/code&gt; 中包含其他一些输入流，它使用作为其基本数据源，它可以直接传输数据沿途或提供附加功能。</target>
        </trans-unit>
        <trans-unit id="7df34daede311fcfe7b9123ab498e1afb22440cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FilterInputStream&lt;/code&gt; contains some other input stream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality. The class &lt;code&gt;FilterInputStream&lt;/code&gt; itself simply overrides all methods of &lt;code&gt;InputStream&lt;/code&gt; with versions that pass all requests to the contained input stream. Subclasses of &lt;code&gt;FilterInputStream&lt;/code&gt; may further override some of these methods and may also provide additional methods and fields.</source>
          <target state="translated">甲 &lt;code&gt;FilterInputStream&lt;/code&gt; 中包含其他一些输入流，它使用作为其基本数据源，它可以直接传输数据沿途或提供附加功能。类 &lt;code&gt;FilterInputStream&lt;/code&gt; 本身只是使用将所有请求传递到所包含的输入流的版本来覆盖 &lt;code&gt;InputStream&lt;/code&gt; 的所有方法。 &lt;code&gt;FilterInputStream&lt;/code&gt; 的子类可以进一步覆盖其中的某些方法，并且还可以提供其他方法和字段。</target>
        </trans-unit>
        <trans-unit id="0776d262b9a240668408d943063b8980215c05ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FloatControl&lt;/code&gt; object provides control over a range of floating-point values.</source>
          <target state="translated">甲 &lt;code&gt;FloatControl&lt;/code&gt; 对象提供在一定范围的浮点值的控制。</target>
        </trans-unit>
        <trans-unit id="b5bb40a4c17c7317b8919e259e3349beb9e44552" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FloatControl&lt;/code&gt; object provides control over a range of floating-point values. Float controls are often represented in graphical user interfaces by continuously adjustable objects such as sliders or rotary knobs. Concrete subclasses of &lt;code&gt;FloatControl&lt;/code&gt; implement controls, such as gain and pan, that affect a line's audio signal in some way that an application can manipulate. The &lt;a href=&quot;floatcontrol.type&quot;&gt;&lt;code&gt;FloatControl.Type&lt;/code&gt;&lt;/a&gt; inner class provides static instances of types that are used to identify some common kinds of float control.</source>
          <target state="translated">甲 &lt;code&gt;FloatControl&lt;/code&gt; 对象提供在一定范围的浮点值的控制。浮动控件通常在图形用户界面中由连续可调的对象（例如滑块或旋钮）表示。 &lt;code&gt;FloatControl&lt;/code&gt; 的具体子类实现控件（例如增益和声相），这些控件以某种应用程序可以操纵的方式影响线路的音频信号。所述&lt;a href=&quot;floatcontrol.type&quot;&gt; &lt;code&gt;FloatControl.Type&lt;/code&gt; &lt;/a&gt;内部类提供用于标识一些常见的种浮子控制的类型的静态实例。</target>
        </trans-unit>
        <trans-unit id="165ea81b3de0ff3435f43bdd01ecce2114051843" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FloatControl&lt;/code&gt; object provides control over a range of floating-point values. Float controls are often represented in graphical user interfaces by continuously adjustable objects such as sliders or rotary knobs. Concrete subclasses of &lt;code&gt;FloatControl&lt;/code&gt; implement controls, such as gain and pan, that affect a line's audio signal in some way that an application can manipulate. The &lt;code&gt;&lt;a href=&quot;floatcontrol.type&quot;&gt;&lt;code&gt;FloatControl.Type&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; inner class provides static instances of types that are used to identify some common kinds of float control.</source>
          <target state="translated">甲 &lt;code&gt;FloatControl&lt;/code&gt; 对象提供在一定范围的浮点值的控制。浮动控件通常在图形用户界面中由连续可调的对象（例如滑块或旋钮）表示。 &lt;code&gt;FloatControl&lt;/code&gt; 的具体子类实现控件（例如增益和声像），这些控件以某种应用程序可以操纵的方式影响线路的音频信号。所述 &lt;code&gt;&lt;a href=&quot;floatcontrol.type&quot;&gt;&lt;code&gt;FloatControl.Type&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 内部类提供用于标识一些常见的种浮子控制的类型的静态实例。</target>
        </trans-unit>
        <trans-unit id="944eb4dbe083d626573fb9205a6f80a2ef305e79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Flushable&lt;/code&gt; is a destination of data that can be flushed.</source>
          <target state="translated">阿 &lt;code&gt;Flushable&lt;/code&gt; 是可冲洗的数据的目的地。</target>
        </trans-unit>
        <trans-unit id="d537dc81750c6b0be163b1df3ae5f7fcb7f1acc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Flushable&lt;/code&gt; is a destination of data that can be flushed. The flush method is invoked to write any buffered output to the underlying stream.</source>
          <target state="translated">阿 &lt;code&gt;Flushable&lt;/code&gt; 是可冲洗的数据的目的地。调用flush方法将任何缓冲的输出写入基础流。</target>
        </trans-unit>
        <trans-unit id="f809fd3c068420eb8d546ff15622bd985c9d00bd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FocusListener&lt;/code&gt; object is registered via &lt;code&gt;addFocusListener&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;addFocusListener&lt;/code&gt; 注册了一个 &lt;code&gt;FocusListener&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="aaa0f38c6cc271c8a7ac9b6a9808bb1a14f8d02c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Font&lt;/code&gt; can have many faces, such as heavy, medium, oblique, gothic and regular. All of these faces have similar typographic design.</source>
          <target state="translated">甲 &lt;code&gt;Font&lt;/code&gt; 可以有许多面孔，如重，中，倾斜，哥特式和规则的。所有这些面孔都具有相似的版式设计。</target>
        </trans-unit>
        <trans-unit id="7091d201aaf5fd42bc40f0165c256fbb7c1d55b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ForkJoinPool&lt;/code&gt; differs from other kinds of &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; mainly by virtue of employing &lt;em&gt;work-stealing&lt;/em&gt;: all threads in the pool attempt to find and execute tasks submitted to the pool and/or created by other active tasks (eventually blocking waiting for work if none exist). This enables efficient processing when most tasks spawn other subtasks (as do most &lt;code&gt;ForkJoinTask&lt;/code&gt;s), as well as when many small tasks are submitted to the pool from external clients. Especially when setting &lt;em&gt;asyncMode&lt;/em&gt; to true in constructors, &lt;code&gt;
 ForkJoinPool&lt;/code&gt;s may also be appropriate for use with event-style tasks that are never joined. All worker threads are initialized with &lt;a href=&quot;../../lang/thread#isDaemon()&quot;&gt;&lt;code&gt;Thread.isDaemon()&lt;/code&gt;&lt;/a&gt; set &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;ForkJoinPool&lt;/code&gt; 不同于其他种类的&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 的&lt;/a&gt;主要凭借采用的&lt;em&gt;工作窃取&lt;/em&gt;：所有线程池中试图找到并执行其他活动任务提交到池和/或创建的任务（最终阻塞等待工作，如果不存在） 。当大多数任务派生其他子任务时（大多数 &lt;code&gt;ForkJoinTask&lt;/code&gt; ），以及从外部客户端向池中提交许多小任务时，这均可实现高效处理。特别是在构造函数&lt;em&gt;中将asyncMode&lt;/em&gt;设置为true时， &lt;code&gt; ForkJoinPool&lt;/code&gt; 可能也适用于从未加入的事件样式任务。所有工作线程都使用&lt;a href=&quot;../../lang/thread#isDaemon()&quot;&gt; &lt;code&gt;Thread.isDaemon()&lt;/code&gt; &lt;/a&gt;初始化。设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8d18a90b5521be7acf1afb0796d715eb20c7f79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ForkJoinPool&lt;/code&gt; differs from other kinds of &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; mainly by virtue of employing &lt;em&gt;work-stealing&lt;/em&gt;: all threads in the pool attempt to find and execute tasks submitted to the pool and/or created by other active tasks (eventually blocking waiting for work if none exist). This enables efficient processing when most tasks spawn other subtasks (as do most &lt;code&gt;ForkJoinTask&lt;/code&gt;s), as well as when many small tasks are submitted to the pool from external clients. Especially when setting &lt;em&gt;asyncMode&lt;/em&gt; to true in constructors, &lt;code&gt;ForkJoinPool&lt;/code&gt;s may also be appropriate for use with event-style tasks that are never joined.</source>
          <target state="translated">一个 &lt;code&gt;ForkJoinPool&lt;/code&gt; 不同于其他种类的&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 的&lt;/a&gt;主要凭借采用的&lt;em&gt;工作窃取&lt;/em&gt;：所有线程池中试图找到并执行其他活动任务提交到池和/或创建的任务（最终阻塞等待工作，如果不存在） 。当大多数任务产生其他子任务时（大多数 &lt;code&gt;ForkJoinTask&lt;/code&gt; ），以及从外部客户端向池中提交许多小任务时，这都可以实现高效处理。特别是在构造函数&lt;em&gt;中将asyncMode&lt;/em&gt;设置为true时， &lt;code&gt;ForkJoinPool&lt;/code&gt; 可能也适用于从未加入的事件样式任务。</target>
        </trans-unit>
        <trans-unit id="0e3dce3428616a5b7729adb9311035be829ff79b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ForkJoinTask&lt;/code&gt; is a lightweight form of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. The efficiency of &lt;code&gt;ForkJoinTask&lt;/code&gt;s stems from a set of restrictions (that are only partially statically enforceable) reflecting their main use as computational tasks calculating pure functions or operating on purely isolated objects. The primary coordination mechanisms are &lt;a href=&quot;#fork()&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;, that arranges asynchronous execution, and &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, that doesn't proceed until the task's result has been computed. Computations should ideally avoid &lt;code&gt;synchronized&lt;/code&gt; methods or blocks, and should minimize other blocking synchronization apart from joining other tasks or using synchronizers such as Phasers that are advertised to cooperate with fork/join scheduling. Subdividable tasks should also not perform blocking I/O, and should ideally access variables that are completely independent of those accessed by other running tasks. These guidelines are loosely enforced by not permitting checked exceptions such as &lt;code&gt;IOExceptions&lt;/code&gt; to be thrown. However, computations may still encounter unchecked exceptions, that are rethrown to callers attempting to join them. These exceptions may additionally include &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt; stemming from internal resource exhaustion, such as failure to allocate internal task queues. Rethrown exceptions behave in the same way as regular exceptions, but, when possible, contain stack traces (as displayed for example using &lt;code&gt;ex.printStackTrace()&lt;/code&gt;) of both the thread that initiated the computation as well as the thread actually encountering the exception; minimally only the latter.</source>
          <target state="translated">一个 &lt;code&gt;ForkJoinTask&lt;/code&gt; 是一个轻量级的形式&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;ForkJoinTask&lt;/code&gt; 的效率源于一组限制（只能部分静态地强制执行），反映了它们的主要用途，这些限制主要用作计算任务，即计算纯函数或对纯隔离对象进行操作。主要的协调机制是&lt;a href=&quot;#fork()&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;，它安排异步执行；而&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;，直到计算出任务结果后才进行。理想情况下，计算应避免 &lt;code&gt;synchronized&lt;/code&gt; 方法或块，并且除了加入其他任务或使用同步器（例如，与Phaser一起宣传与fork / join调度配合使用的同步器）外，还应最小化其他阻塞同步。可细分的任务也不应执行阻塞I / O，并且理想情况下应访问与其他正在运行的任务访问的变量完全独立的变量。禁止抛出诸如 &lt;code&gt;IOExceptions&lt;/code&gt; 之类的检查异常，从而松散地实施了这些准则。但是，计算可能仍会遇到未经检查的异常，这些异常将被尝试加入它们的调用者重新抛出。这些异常可能还包括&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;源于内部资源耗尽，例如无法分配内部任务队列。重新引发的异常的行为与常规异常相同，但是在可能的情况下，包含启动计算的线程以及实际遇到该异常的线程的堆栈跟踪（例如，使用 &lt;code&gt;ex.printStackTrace()&lt;/code&gt; 显示）；最少只有后者。</target>
        </trans-unit>
        <trans-unit id="9544e01c6b5af36520a8f8b6ebcc6596c68d9f35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ForkJoinTask&lt;/code&gt; is a lightweight form of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. The efficiency of &lt;code&gt;ForkJoinTask&lt;/code&gt;s stems from a set of restrictions (that are only partially statically enforceable) reflecting their main use as computational tasks calculating pure functions or operating on purely isolated objects. The primary coordination mechanisms are &lt;a href=&quot;forkjointask#fork--&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;, that arranges asynchronous execution, and &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, that doesn't proceed until the task's result has been computed. Computations should ideally avoid &lt;code&gt;synchronized&lt;/code&gt; methods or blocks, and should minimize other blocking synchronization apart from joining other tasks or using synchronizers such as Phasers that are advertised to cooperate with fork/join scheduling. Subdividable tasks should also not perform blocking I/O, and should ideally access variables that are completely independent of those accessed by other running tasks. These guidelines are loosely enforced by not permitting checked exceptions such as &lt;code&gt;IOExceptions&lt;/code&gt; to be thrown. However, computations may still encounter unchecked exceptions, that are rethrown to callers attempting to join them. These exceptions may additionally include &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt; stemming from internal resource exhaustion, such as failure to allocate internal task queues. Rethrown exceptions behave in the same way as regular exceptions, but, when possible, contain stack traces (as displayed for example using &lt;code&gt;ex.printStackTrace()&lt;/code&gt;) of both the thread that initiated the computation as well as the thread actually encountering the exception; minimally only the latter.</source>
          <target state="translated">一个 &lt;code&gt;ForkJoinTask&lt;/code&gt; 是一个轻量级的形式&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;ForkJoinTask&lt;/code&gt; 的效率源自一组限制（这些限制只能部分静态地强制执行），反映了它们的主要用途，这些用途主要用作计算任务，用于计算纯函数或对纯隔离对象进行操作。主要的协调机制是&lt;a href=&quot;forkjointask#fork--&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;，它安排异步执行；而&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;，直到计算出任务结果后才进行。理想情况下，计算应避免 &lt;code&gt;synchronized&lt;/code&gt; 方法或块，并且除了加入其他任务或使用同步器（例如，与Phaser一起宣传与fork / join调度配合使用的同步器）外，还应最小化其他阻塞同步。可细分的任务也不应执行阻塞I / O，并且理想情况下应访问与其他正在运行的任务访问的变量完全独立的变量。不允许抛出诸如 &lt;code&gt;IOExceptions&lt;/code&gt; 之类的检查异常，从而松散地实施了这些准则。但是，计算可能仍会遇到未经检查的异常，这些异常会被尝试加入它们的调用者重新抛出。这些异常可能还包括&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;源于内部资源耗尽，例如无法分配内部任务队列。重新引发的异常的行为与常规异常相同，但在可能的情况下，包含启动计算的线程以及实际遇到该异常的线程的堆栈跟踪（例如，使用 &lt;code&gt;ex.printStackTrace()&lt;/code&gt; 显示）；最少只有后者。</target>
        </trans-unit>
        <trans-unit id="14da08ff70bb1beab693903db89e6bbfa739294b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Frame&lt;/code&gt; is a top-level window with a title and a border.</source>
          <target state="translated">一 &lt;code&gt;Frame&lt;/code&gt; 是带有标题和边框的顶层窗口。</target>
        </trans-unit>
        <trans-unit id="59e4537d03997fc8e4572b5632f13f3e8f86fa81" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Frame&lt;/code&gt; object, for example, has a top inset that corresponds to the height of the frame's title bar.</source>
          <target state="translated">甲 &lt;code&gt;Frame&lt;/code&gt; 对象，例如，具有顶插图对应于帧的标题栏的高度。</target>
        </trans-unit>
        <trans-unit id="aaed9c1c95e36e578332ed99960bdc34b464e2c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Future&lt;/code&gt; object representing the pending result</source>
          <target state="translated">甲 &lt;code&gt;Future&lt;/code&gt; 表示未决结果对象</target>
        </trans-unit>
        <trans-unit id="e3c738535226d76fc03962a22432b614701ce29c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Future&lt;/code&gt; represents the result of an asynchronous computation.</source>
          <target state="translated">甲 &lt;code&gt;Future&lt;/code&gt; 表示异步计算的结果。</target>
        </trans-unit>
        <trans-unit id="eba862211d7584251d0b7d0c2a6de4b35930cfa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Future&lt;/code&gt; represents the result of an asynchronous computation. Methods are provided to check if the computation is complete, to wait for its completion, and to retrieve the result of the computation. The result can only be retrieved using method &lt;code&gt;get&lt;/code&gt; when the computation has completed, blocking if necessary until it is ready. Cancellation is performed by the &lt;code&gt;cancel&lt;/code&gt; method. Additional methods are provided to determine if the task completed normally or was cancelled. Once a computation has completed, the computation cannot be cancelled. If you would like to use a &lt;code&gt;Future&lt;/code&gt; for the sake of cancellability but not provide a usable result, you can declare types of the form &lt;code&gt;Future&amp;lt;?&amp;gt;&lt;/code&gt; and return &lt;code&gt;null&lt;/code&gt; as a result of the underlying task.</source>
          <target state="translated">甲 &lt;code&gt;Future&lt;/code&gt; 表示异步计算的结果。提供了一些方法来检查计算是否完成，等待其完成以及检索计算结果。只有在计算完成后才可以使用 &lt;code&gt;get&lt;/code&gt; 方法检索结果，必要时将阻塞直到准备好为止。取消由 &lt;code&gt;cancel&lt;/code&gt; 方法执行。提供了其他方法来确定任务是正常完成还是被取消。一旦计算完成，就不能取消计算。如果出于可取消性的目的而使用 &lt;code&gt;Future&lt;/code&gt; 而不提供可用的结果，则可以声明 &lt;code&gt;Future&amp;lt;?&amp;gt;&lt;/code&gt; 形式的类型并返回 &lt;code&gt;null&lt;/code&gt; 作为基础任务的结果。</target>
        </trans-unit>
        <trans-unit id="f9bf9f3ae9d9dc18349e070a2be923bb4c83d53c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FutureTask&lt;/code&gt; can be used to wrap a &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; object. Because &lt;code&gt;FutureTask&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt;, a &lt;code&gt;FutureTask&lt;/code&gt; can be submitted to an &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; for execution.</source>
          <target state="translated">甲 &lt;code&gt;FutureTask&lt;/code&gt; 可用于包装&lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;的对象。由于 &lt;code&gt;FutureTask&lt;/code&gt; 实现 &lt;code&gt;Runnable&lt;/code&gt; ，因此 &lt;code&gt;FutureTask&lt;/code&gt; 可以提交给&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;以执行。</target>
        </trans-unit>
        <trans-unit id="e67d966c0d13366c153ce5f0e757c6dac3fdb0dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;GROUP_BOX&lt;/code&gt; is a simple container that contains a border around it and contains components inside it.</source>
          <target state="translated">一个 &lt;code&gt;GROUP_BOX&lt;/code&gt; 是包含它周围的边框和包含在它里面的部件的简单容器。</target>
        </trans-unit>
        <trans-unit id="b15d7f012da980ff804256f43a1e764ab575fa4d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;GaugeMonitor&lt;/code&gt; can operate in &lt;em&gt;difference mode&lt;/em&gt;. In this mode, the value compared against the high and low thresholds is the difference between two successive observations of an attribute.</source>
          <target state="translated">甲 &lt;code&gt;GaugeMonitor&lt;/code&gt; 可以工作在&lt;em&gt;差分模式&lt;/em&gt;。在此模式下，与高阈值和低阈值进行比较的值是属性的两次连续观察之间的差。</target>
        </trans-unit>
        <trans-unit id="808059b6c45e84ba504c80b1434f13dc3966a887" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;GlyphVector&lt;/code&gt; is associated with exactly one &lt;code&gt;Font&lt;/code&gt;, and can provide data useful only in relation to this &lt;code&gt;Font&lt;/code&gt;. In addition, metrics obtained from a &lt;code&gt;GlyphVector&lt;/code&gt; are not generally geometrically scalable since the pixelization and spacing are dependent on grid-fitting algorithms within a &lt;code&gt;Font&lt;/code&gt;. To facilitate accurate measurement of a &lt;code&gt;GlyphVector&lt;/code&gt; and its component glyphs, you must specify a scaling transform, anti-alias mode, and fractional metrics mode when creating the &lt;code&gt;GlyphVector&lt;/code&gt;. These characteristics can be derived from the destination device.</source>
          <target state="translated">甲 &lt;code&gt;GlyphVector&lt;/code&gt; 中正好与一个相关联的 &lt;code&gt;Font&lt;/code&gt; ，并能提供仅涉及此有用的数据 &lt;code&gt;Font&lt;/code&gt; 。另外，从 &lt;code&gt;GlyphVector&lt;/code&gt; 获得的度量通常不能在几何上缩放，因为像素化和间距取决于 &lt;code&gt;Font&lt;/code&gt; 中的网格拟合算法。为了便于精确测量 &lt;code&gt;GlyphVector&lt;/code&gt; 及其组件字形，在创建 &lt;code&gt;GlyphVector&lt;/code&gt; 时必须指定缩放变换，抗锯齿模式和分数度量模式。这些特性可以从目标设​​备得出。</target>
        </trans-unit>
        <trans-unit id="d09bf768aea31ab1ff2d6764b03dea110b3f5b8c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;GlyphVector&lt;/code&gt; object is a collection of glyphs containing geometric information for the placement of each glyph in a transformed coordinate space which corresponds to the device on which the &lt;code&gt;GlyphVector&lt;/code&gt; is ultimately displayed.</source>
          <target state="translated">甲 &lt;code&gt;GlyphVector&lt;/code&gt; 中对象是包含几何信息对每个字形的在放置字形的集合变换坐标空间，其对应于在其上的设备 &lt;code&gt;GlyphVector&lt;/code&gt; 最终显示。</target>
        </trans-unit>
        <trans-unit id="31e9dc31ab34f86503d195faf50a6e4ec7657f5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Graphics&lt;/code&gt; object encapsulates state information needed for the basic rendering operations that Java supports. This state information includes the following properties:</source>
          <target state="translated">一个 &lt;code&gt;Graphics&lt;/code&gt; 对象封装所需基本呈现操作是Java支持的状态信息。此状态信息包括以下属性：</target>
        </trans-unit>
        <trans-unit id="98b274d30d5b77844c6f808ebbde1cf0501f072a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Group&lt;/code&gt; that aligns and sizes it's children.</source>
          <target state="translated">一 &lt;code&gt;Group&lt;/code&gt; 是对齐和大小它的孩子。</target>
        </trans-unit>
        <trans-unit id="d339eb16dcfd277b22e0fd6637e62527c1be2267" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Group&lt;/code&gt; that aligns and sizes it's children. &lt;code&gt;ParallelGroup&lt;/code&gt; aligns it's children in four possible ways: along the baseline, centered, anchored to the leading edge, or anchored to the trailing edge.</source>
          <target state="translated">一 &lt;code&gt;Group&lt;/code&gt; 是对齐和大小它的孩子。 &lt;code&gt;ParallelGroup&lt;/code&gt; 以四种可能的方式对齐其子级：沿着基线，居中，锚定到前缘或锚定到后缘。</target>
        </trans-unit>
        <trans-unit id="74f684e8bcd3b6930a7334f03e093a8636931638" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Group&lt;/code&gt; that aligns and sizes its children.</source>
          <target state="translated">一 &lt;code&gt;Group&lt;/code&gt; 是对齐和大小的孩子。</target>
        </trans-unit>
        <trans-unit id="5709c33a70780b4280ad70eef3ad9bed1110b77b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Group&lt;/code&gt; that aligns and sizes its children. &lt;code&gt;ParallelGroup&lt;/code&gt; aligns its children in four possible ways: along the baseline, centered, anchored to the leading edge, or anchored to the trailing edge.</source>
          <target state="translated">一 &lt;code&gt;Group&lt;/code&gt; 是对齐和大小的孩子。 &lt;code&gt;ParallelGroup&lt;/code&gt; 以四种可能的方式对齐其子级：沿着基线，居中，锚定到前缘或锚定到后缘。</target>
        </trans-unit>
        <trans-unit id="6aef82558bac354b2e4ffd244f025111979caa2d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Group&lt;/code&gt; that positions and sizes its elements sequentially, one after another.</source>
          <target state="translated">一个 &lt;code&gt;Group&lt;/code&gt; ，一个接一个地依次定位和调整其元素的大小。</target>
        </trans-unit>
        <trans-unit id="549861e65bafbdd9423dea003b305d1390c7c0e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Group&lt;/code&gt; that positions and sizes its elements sequentially, one after another. This class has no public constructor, use the &lt;code&gt;createSequentialGroup&lt;/code&gt; method to create one.</source>
          <target state="translated">一个 &lt;code&gt;Group&lt;/code&gt; ，一个接一个地依次定位和调整其元素的大小。此类没有公共构造函数，请使用 &lt;code&gt;createSequentialGroup&lt;/code&gt; 方法创建一个。</target>
        </trans-unit>
        <trans-unit id="4cf3cffad5d242245950456e0383e3dadcec2d32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Handler&lt;/code&gt; can be disabled by doing a &lt;code&gt;setLevel(Level.OFF)&lt;/code&gt; and can be re-enabled by doing a &lt;code&gt;setLevel&lt;/code&gt; with an appropriate level.</source>
          <target state="translated">甲 &lt;code&gt;Handler&lt;/code&gt; 可以通过执行一个被禁用 &lt;code&gt;setLevel(Level.OFF)&lt;/code&gt; ，并且可以是通过执行一个重新启用 &lt;code&gt;setLevel&lt;/code&gt; 与适当的水平。</target>
        </trans-unit>
        <trans-unit id="07d5ef0f1e1b73dbbd9fd210671b4d619d422fe6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Handler&lt;/code&gt; object takes log messages from a &lt;code&gt;Logger&lt;/code&gt; and exports them.</source>
          <target state="translated">一个 &lt;code&gt;Handler&lt;/code&gt; 对象从需要的日志信息 &lt;code&gt;Logger&lt;/code&gt; 和出口他们。</target>
        </trans-unit>
        <trans-unit id="71915fb4257dbd796d9ff81b937255b731d13b27" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Handler&lt;/code&gt; object takes log messages from a &lt;code&gt;Logger&lt;/code&gt; and exports them. It might for example, write them to a console or write them to a file, or send them to a network logging service, or forward them to an OS log, or whatever.</source>
          <target state="translated">一个 &lt;code&gt;Handler&lt;/code&gt; 对象从需要的日志信息 &lt;code&gt;Logger&lt;/code&gt; 和出口他们。例如，可能将它们写入控制台或将它们写入文件，或者将它们发送到网络日志服务，或者将它们转发到OS日志等等。</target>
        </trans-unit>
        <trans-unit id="c043a5498a1c6516a85aefb7fe01c5496b8fa25d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JButton&lt;/code&gt; is created with this as its label.</source>
          <target state="translated">将以此为标签创建一个 &lt;code&gt;JButton&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94922e3df2645eec1358aa3bab9f5ed7b7d2f774" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JDIPermission&lt;/code&gt; object contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">甲 &lt;code&gt;JDIPermission&lt;/code&gt; 对象包含一个名称（也被称为&amp;ldquo;目标名称&amp;rdquo;），但没有动作列表; 您要么具有命名权限，要么没有。</target>
        </trans-unit>
        <trans-unit id="585bfc49a751caf274ce7d5d4caa7a2becdd770b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JLabel&lt;/code&gt; object can display either text, an image, or both. You can specify where in the label's display area the label's contents are aligned by setting the vertical and horizontal alignment. By default, labels are vertically centered in their display area. Text-only labels are leading edge aligned, by default; image-only labels are horizontally centered, by default.</source>
          <target state="translated">甲 &lt;code&gt;JLabel&lt;/code&gt; 对象可以显示文本，图像，或两者。您可以通过设置垂直和水平对齐方式来指定标签内容在标签显示区域中的对齐位置。默认情况下，标签在其显示区域中垂直居中。默认情况下，纯文本标签的前边缘对齐；默认情况下，仅图像标签在水平方向居中。</target>
        </trans-unit>
        <trans-unit id="bcd53b6c411732736c4dd4e1ccee842e3483ddbf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JSpinner&lt;/code&gt; has a single child component that's responsible for displaying and potentially changing the current element or</source>
          <target state="translated">甲 &lt;code&gt;JSpinner&lt;/code&gt; 的具有单个子组件这是负责显示和潜在地改变当前元素或</target>
        </trans-unit>
        <trans-unit id="7f594d64f28fa2188d323f2d18ed647f3a7397d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JSpinner&lt;/code&gt;'s sequence value is defined by its &lt;code&gt;SpinnerModel&lt;/code&gt;. The &lt;code&gt;model&lt;/code&gt; can be specified as a constructor argument and changed with the &lt;code&gt;model&lt;/code&gt; property. &lt;code&gt;SpinnerModel&lt;/code&gt; classes for some common types are provided: &lt;code&gt;SpinnerListModel&lt;/code&gt;, &lt;code&gt;SpinnerNumberModel&lt;/code&gt;, and &lt;code&gt;SpinnerDateModel&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;JSpinner&lt;/code&gt; 的序列值是由它限定 &lt;code&gt;SpinnerModel&lt;/code&gt; 。该 &lt;code&gt;model&lt;/code&gt; 可以被指定为构造函数的参数，并与改变 &lt;code&gt;model&lt;/code&gt; 属性。提供了一些常见类型的 &lt;code&gt;SpinnerModel&lt;/code&gt; 类： &lt;code&gt;SpinnerListModel&lt;/code&gt; ， &lt;code&gt;SpinnerNumberModel&lt;/code&gt; 和 &lt;code&gt;SpinnerDateModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac4a9fa2c90047df98b18998be1b5d8ef332c001" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JTextArea&lt;/code&gt; is a multi-line area that displays plain text.</source>
          <target state="translated">甲 &lt;code&gt;JTextArea&lt;/code&gt; 是一个多行的区域，其中显示纯文本。</target>
        </trans-unit>
        <trans-unit id="599011ab5514bb26626ca3250a62c0f2cb431bdd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JTextArea&lt;/code&gt; is a multi-line area that displays plain text. It is intended to be a lightweight component that provides source compatibility with the &lt;code&gt;java.awt.TextArea&lt;/code&gt; class where it can reasonably do so. You can find information and examples of using all the text components in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/text.html&quot;&gt;Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">甲 &lt;code&gt;JTextArea&lt;/code&gt; 是一个多行的区域，其中显示纯文本。它旨在成为一种轻量级的组件，在合理的程度上提供与 &lt;code&gt;java.awt.TextArea&lt;/code&gt; 类的源兼容性。您可以在&lt;em&gt;《 Java教程》的&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/text.html&quot;&gt;使用文本组件&lt;/a&gt;&amp;rdquo;一节中找到有关使用所有文本组件的信息和示例&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="928f25e4942dc25fc7c37c641ebbf63544084df6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JTextArea&lt;/code&gt; is a multi-line area that displays plain text. It is intended to be a lightweight component that provides source compatibility with the &lt;code&gt;java.awt.TextArea&lt;/code&gt; class where it can reasonably do so. You can find information and examples of using all the text components in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/text.html&quot;&gt;Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">甲 &lt;code&gt;JTextArea&lt;/code&gt; 是一个多行的区域，其中显示纯文本。它旨在成为一种轻量级的组件，在合理的程度上提供与 &lt;code&gt;java.awt.TextArea&lt;/code&gt; 类的源兼容性。您可以在&lt;em&gt;《 Java教程》的&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/text.html&quot;&gt;使用文本组件&lt;/a&gt;&amp;rdquo;一节中找到有关使用所有文本组件的信息和示例&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb49204534e5ab19b355fd6d0029faa105b21294" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JWindow&lt;/code&gt; is a container that can be displayed anywhere on the user's desktop.</source>
          <target state="translated">一个 &lt;code&gt;JWindow&lt;/code&gt; 是可以在任何地方的用户的桌面上显示一个容器。</target>
        </trans-unit>
        <trans-unit id="201efb5597ecfce6e0c41db46b7e67710dad8174" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;JWindow&lt;/code&gt; is a container that can be displayed anywhere on the user's desktop. It does not have the title bar, window-management buttons, or other trimmings associated with a &lt;code&gt;JFrame&lt;/code&gt;, but it is still a &quot;first-class citizen&quot; of the user's desktop, and can exist anywhere on it.</source>
          <target state="translated">一个 &lt;code&gt;JWindow&lt;/code&gt; 是可以在任何地方的用户的桌面上显示一个容器。它没有与 &lt;code&gt;JFrame&lt;/code&gt; 关联的标题栏，窗口管理按钮或其他修饰，但是它仍然是用户桌面的&amp;ldquo;一等公民&amp;rdquo;，并且可以存在于其上的任何位置。</target>
        </trans-unit>
        <trans-unit id="dcc3b0d144365dbfa47f757b66cde02c77acc393" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KerberosKey&lt;/code&gt; object includes an EncryptionKey, a &lt;a href=&quot;kerberosprincipal&quot;&gt;&lt;code&gt;KerberosPrincipal&lt;/code&gt;&lt;/a&gt; as its owner, and the version number of the key.</source>
          <target state="translated">甲 &lt;code&gt;KerberosKey&lt;/code&gt; 对象包括EncryptionKey设置，一个&lt;a href=&quot;kerberosprincipal&quot;&gt; &lt;code&gt;KerberosPrincipal&lt;/code&gt; &lt;/a&gt;作为其所有者，密钥的版本号。</target>
        </trans-unit>
        <trans-unit id="d2f55fcdf4871d6cb95f44b20907b710610f1bde" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyInfo&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;keyinfofactory#newKeyInfo(java.util.List)&quot;&gt;&lt;code&gt;newKeyInfo&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class, and passing it a list of one or more &lt;code&gt;XMLStructure&lt;/code&gt;s and an optional id parameter; for example:</source>
          <target state="translated">甲 &lt;code&gt;KeyInfo&lt;/code&gt; 例如可以通过调用的一个来创建&lt;a href=&quot;keyinfofactory#newKeyInfo(java.util.List)&quot;&gt; &lt;code&gt;newKeyInfo&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt;类，并通过它的一个或多个列表 &lt;code&gt;XMLStructure&lt;/code&gt; S和任选的id参数; 例如：</target>
        </trans-unit>
        <trans-unit id="012f55a0c0584ff20c441c4b7b74fd9047d2e0c2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyListener&lt;/code&gt; object is registered via &lt;code&gt;addKeyListener&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;addKeyListener&lt;/code&gt; 注册一个 &lt;code&gt;KeyListener&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="2f3e571242e9629b5fa97ea40e492f8c6ef61590" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyName&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;keyinfofactory#newKeyName(java.lang.String)&quot;&gt;&lt;code&gt;newKeyName&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class, and passing it a &lt;code&gt;String&lt;/code&gt; representing the name of the key; for example:</source>
          <target state="translated">甲 &lt;code&gt;KeyName&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;keyinfofactory#newKeyName(java.lang.String)&quot;&gt; &lt;code&gt;newKeyName&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt;类，并传递一个 &lt;code&gt;String&lt;/code&gt; 表示键的名称; 例如：</target>
        </trans-unit>
        <trans-unit id="51ffb2a6e4b862e2a4b8cb8c96de97af75952482" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeySelectorException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;KeySelectorException&lt;/code&gt; to get thrown.</source>
          <target state="translated">一个 &lt;code&gt;KeySelectorException&lt;/code&gt; 可能包含一个原因：另一个引发此 &lt;code&gt;KeySelectorException&lt;/code&gt; 的throwable 。</target>
        </trans-unit>
        <trans-unit id="3fb57c28b4cbc4de67b9b837881a7c7b94627b9d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyStore&lt;/code&gt; entry that holds a &lt;code&gt;PrivateKey&lt;/code&gt; and corresponding certificate chain.</source>
          <target state="translated">甲 &lt;code&gt;KeyStore&lt;/code&gt; 条目，其保持 &lt;code&gt;PrivateKey&lt;/code&gt; 和相应的证书链。</target>
        </trans-unit>
        <trans-unit id="837ba561898b391715044e3d771ab97e0f801556" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyStore&lt;/code&gt; entry that holds a &lt;code&gt;SecretKey&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;KeyStore&lt;/code&gt; 条目拥有 &lt;code&gt;SecretKey&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="2d4f9392633e9e6a7977e14aae24bfa123ae981d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyStore&lt;/code&gt; entry that holds a trusted &lt;code&gt;Certificate&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;KeyStore&lt;/code&gt; 保存条目的信任 &lt;code&gt;Certificate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3c291843cd8aff8aee9399a0e479b86bb3a9660" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyStore&lt;/code&gt; manages different types of entries. Each type of entry implements the &lt;code&gt;KeyStore.Entry&lt;/code&gt; interface. Three basic &lt;code&gt;KeyStore.Entry&lt;/code&gt; implementations are provided:</source>
          <target state="translated">一个 &lt;code&gt;KeyStore&lt;/code&gt; 管理不同类型的条目。每种类型的条目都实现 &lt;code&gt;KeyStore.Entry&lt;/code&gt; 接口。提供了三个基本的 &lt;code&gt;KeyStore.Entry&lt;/code&gt; 实现：</target>
        </trans-unit>
        <trans-unit id="5f8acb0e477c2ee7ecefc6414095975eb0214211" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;KeyValue&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;keyinfofactory#newKeyValue(java.security.PublicKey)&quot;&gt;&lt;code&gt;newKeyValue&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class, and passing it a &lt;a href=&quot;../../../../../../java.base/java/security/publickey&quot;&gt;&lt;code&gt;PublicKey&lt;/code&gt;&lt;/a&gt; representing the value of the public key. Here is an example of creating a &lt;code&gt;KeyValue&lt;/code&gt; from a &lt;a href=&quot;../../../../../../java.base/java/security/interfaces/dsapublickey&quot;&gt;&lt;code&gt;DSAPublicKey&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;../../../../../../java.base/java/security/cert/certificate&quot;&gt;&lt;code&gt;Certificate&lt;/code&gt;&lt;/a&gt; stored in a &lt;a href=&quot;../../../../../../java.base/java/security/keystore&quot;&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">甲 &lt;code&gt;KeyValue&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;keyinfofactory#newKeyValue(java.security.PublicKey)&quot;&gt; &lt;code&gt;newKeyValue&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt;类，并传递一个&lt;a href=&quot;../../../../../../java.base/java/security/publickey&quot;&gt; &lt;code&gt;PublicKey&lt;/code&gt; &lt;/a&gt;代表公共密钥的值。这是从存储在&lt;a href=&quot;../../../../../../java.base/java/security/keystore&quot;&gt; &lt;code&gt;KeyStore&lt;/code&gt; &lt;/a&gt;中的&lt;a href=&quot;../../../../../../java.base/java/security/cert/certificate&quot;&gt; &lt;code&gt;Certificate&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../../../../../java.base/java/security/interfaces/dsapublickey&quot;&gt; &lt;code&gt;DSAPublicKey&lt;/code&gt; &lt;/a&gt;创建 &lt;code&gt;KeyValue&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="c4b228d8e239a4731e8a03a244c7c1dd24b6042e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LSInput&lt;/code&gt; object describing the new input source, or &lt;code&gt;null&lt;/code&gt; to request that the parser open a regular URI connection to the resource.</source>
          <target state="translated">甲 &lt;code&gt;LSInput&lt;/code&gt; 中对象描述新的输入源，或 &lt;code&gt;null&lt;/code&gt; 至请求解析器打开一个定期URI连接到资源。</target>
        </trans-unit>
        <trans-unit id="f76ee51cc37d3f506f1ad2927635397e5ab3b4d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LSSerializer&lt;/code&gt; provides an API for serializing (writing) a DOM document out into XML.</source>
          <target state="translated">甲 &lt;code&gt;LSSerializer&lt;/code&gt; 提供序列化（写入）将DOM文档转换成XML的API。</target>
        </trans-unit>
        <trans-unit id="abe7fa5680110da7b6a61364c82151f1575a53b0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LSSerializer&lt;/code&gt; provides an API for serializing (writing) a DOM document out into XML. The XML data is written to a string or an output stream. Any changes or fixups made during the serialization affect only the serialized data. The &lt;code&gt;Document&lt;/code&gt; object and its children are never altered by the serialization operation.</source>
          <target state="translated">甲 &lt;code&gt;LSSerializer&lt;/code&gt; 提供序列化（写入）将DOM文档转换成XML的API。XML数据被写入字符串或输出流。序列化过程中所做的任何更改或修正仅影响序列化的数据。该 &lt;code&gt;Document&lt;/code&gt; 对象和它的孩子们永远不会被序列化操作改变。</target>
        </trans-unit>
        <trans-unit id="801222b890ab81b38019c7af42d4cb8c93476196" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Label&lt;/code&gt; object is a component for placing text in a container.</source>
          <target state="translated">甲 &lt;code&gt;Label&lt;/code&gt; 对象是用于放置文本在容器中的成分。</target>
        </trans-unit>
        <trans-unit id="123cbaa06c6b665f4a5fae9ccd069a82e908d0fe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Label&lt;/code&gt; object is a component for placing text in a container. A label displays a single line of read-only text. The text can be changed by the application, but a user cannot edit it directly.</source>
          <target state="translated">甲 &lt;code&gt;Label&lt;/code&gt; 对象是用于放置文本在容器中的成分。标签显示一行只读的文本。文本可以由应用程序更改，但用户无法直接编辑。</target>
        </trans-unit>
        <trans-unit id="c4dae11bb0779a5adf426c55c4dd02a312f2630d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LabelView&lt;/code&gt; is a styled chunk of text that represents a view mapped over an element in the text model.</source>
          <target state="translated">甲 &lt;code&gt;LabelView&lt;/code&gt; 是一个样式化文本块，它表示映射在文本模型中的元素的视图。</target>
        </trans-unit>
        <trans-unit id="ac4ae858cbc3947bf1a4ac65ccfc0c34eaafbbc0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LabelView&lt;/code&gt; is a styled chunk of text that represents a view mapped over an element in the text model. It caches the character level attributes used for rendering.</source>
          <target state="translated">甲 &lt;code&gt;LabelView&lt;/code&gt; 是一个样式化文本块，它表示映射在文本模型中的元素的视图。它缓存用于渲染的字符级属性。</target>
        </trans-unit>
        <trans-unit id="f429ad9047f95d3332ba89e413a6cc0ee2434630" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LexicalHandler&lt;/code&gt;, or null.</source>
          <target state="translated">一个 &lt;code&gt;LexicalHandler&lt;/code&gt; ，或者为null。</target>
        </trans-unit>
        <trans-unit id="bb4a585b9fa4f77ccbfb42f60f7e4ebf122059bf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Line.Info&lt;/code&gt; can be retrieved using various methods of the &lt;code&gt;Line&lt;/code&gt;, &lt;code&gt;Mixer&lt;/code&gt;, and &lt;code&gt;AudioSystem&lt;/code&gt; interfaces. Other such methods let you pass a &lt;code&gt;Line.Info&lt;/code&gt; as an argument, to learn whether lines matching the specified configuration are available and to obtain them.</source>
          <target state="translated">甲 &lt;code&gt;Line.Info&lt;/code&gt; 可以使用的各种方法来检索 &lt;code&gt;Line&lt;/code&gt; ， &lt;code&gt;Mixer&lt;/code&gt; ，和 &lt;code&gt;AudioSystem&lt;/code&gt; 接口。其他此类方法使您可以传递 &lt;code&gt;Line.Info&lt;/code&gt; 作为参数，以了解与指定配置匹配的行是否可用并获取它们。</target>
        </trans-unit>
        <trans-unit id="5433f861d6141ec2c15ed3524c528b35530116f7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Line.Info&lt;/code&gt; object contains information about a line.</source>
          <target state="translated">甲 &lt;code&gt;Line.Info&lt;/code&gt; 对象包含关于行的信息。</target>
        </trans-unit>
        <trans-unit id="411649ef651b4ec2897e14a73c6efb69e286dd53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Line.Info&lt;/code&gt; object contains information about a line. The only information provided by &lt;code&gt;Line.Info&lt;/code&gt; itself is the Java class of the line. A subclass of &lt;code&gt;Line.Info&lt;/code&gt; adds other kinds of information about the line. This additional information depends on which &lt;code&gt;Line&lt;/code&gt; subinterface is implemented by the kind of line that the &lt;code&gt;Line.Info&lt;/code&gt; subclass describes.</source>
          <target state="translated">甲 &lt;code&gt;Line.Info&lt;/code&gt; 对象包含关于行的信息。 &lt;code&gt;Line.Info&lt;/code&gt; 本身提供的唯一信息是该行的Java类。 &lt;code&gt;Line.Info&lt;/code&gt; 的子类添加有关该行的其他信息。此附加信息取决于 &lt;code&gt;Line.Info&lt;/code&gt; 子类描述的线的类型实现哪种 &lt;code&gt;Line&lt;/code&gt; 子接口。</target>
        </trans-unit>
        <trans-unit id="f5de3198e8f1dfa44dcfc8af9b52d97a73d03b8f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LineUnavailableException&lt;/code&gt; is an exception indicating that a line cannot be opened because it is unavailable.</source>
          <target state="translated">一个 &lt;code&gt;LineUnavailableException&lt;/code&gt; 是指示某一行不能打开，因为它是不可用的一个例外。</target>
        </trans-unit>
        <trans-unit id="4abb8847d52965ede812fd61400508e96855279e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LineUnavailableException&lt;/code&gt; is an exception indicating that a line cannot be opened because it is unavailable. This situation arises most commonly when a requested line is already in use by another application.</source>
          <target state="translated">一个 &lt;code&gt;LineUnavailableException&lt;/code&gt; 是指示某一行不能打开，因为它是不可用的一个例外。当请求的行已被另一个应用程序使用时，这种情况最常见。</target>
        </trans-unit>
        <trans-unit id="fcb957da8c31310ec301dd29626158388e9473b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; is reconstructed as a &lt;code&gt;java.util.ArrayList&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;; a &lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; as a &lt;code&gt;java.util.HashSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;; a &lt;code&gt;SortedSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; as a &lt;code&gt;java.util.TreeSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;List&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 被重构为一个 &lt;code&gt;java.util.ArrayList&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ; 一个 &lt;code&gt;Set&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 作为 &lt;code&gt;java.util.HashSet&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ; 一个 &lt;code&gt;SortedSet&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 作为 &lt;code&gt;java.util.TreeSet&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5612ba3544e8d755ed07b488135f8d65a862088" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;
      Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, such as &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; or &lt;code&gt;
        Set&amp;lt;ObjectName&amp;gt;&lt;/code&gt;, is mapped in the same way as an array of the same element type, such as &lt;code&gt;String[]&lt;/code&gt; or &lt;code&gt;
          ObjectName[]&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;List&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt; Set&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ，如 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 或 &lt;code&gt; Set&amp;lt;ObjectName&amp;gt;&lt;/code&gt; ，被以相同的方式映射为相同的元素类型的阵列，诸如 &lt;code&gt;String[]&lt;/code&gt; 或 &lt;code&gt; ObjectName[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af514fc0928d7590d9dc3d67e977394e1aca4d98" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, such as &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; or &lt;code&gt;Set&amp;lt;ObjectName&amp;gt;&lt;/code&gt;, is mapped in the same way as an array of the same element type, such as &lt;code&gt;String[]&lt;/code&gt; or &lt;code&gt;ObjectName[]&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;List&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;Set&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ，如 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 或 &lt;code&gt;Set&amp;lt;ObjectName&amp;gt;&lt;/code&gt; ，被以相同的方式映射为相同的元素类型的阵列，诸如 &lt;code&gt;String[]&lt;/code&gt; 或 &lt;code&gt;ObjectName[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="491f6106940ce82948b741e62cf889f957747531" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; can be converted to a &lt;code&gt;String[]&lt;/code&gt; using &lt;a href=&quot;../../../java.base/java/util/list#toArray(T%5B%5D)&quot;&gt;&lt;code&gt;List.toArray(new
          String[0])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;../../../java.base/java/util/list#toArray(T%5B%5D)&quot;&gt; &lt;code&gt;List.toArray(new String[0])&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 转换为 &lt;code&gt;String[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="655d6f46a51b7f12297ceef1f25f3c615013051a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; can be converted to a &lt;code&gt;String[]&lt;/code&gt; using &lt;a href=&quot;../../java/util/list#toArray-T:A-&quot;&gt;&lt;code&gt;List.toArray(new
          String[0])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;../../java/util/list#toArray-T:A-&quot;&gt; &lt;code&gt;List.toArray(new String[0])&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 转换为 &lt;code&gt;String[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="784dc8e6adfc0a37725d118e74305dfbf9bd33ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;BufferedImage&lt;/code&gt; thumbnails, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;BufferedImage&lt;/code&gt; 的缩略图，或 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdb60bce0f809f664699468a47d7ccb04d51a1b6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;BufferedImage&lt;/code&gt; thumbnails, or &lt;code&gt;null&lt;/code&gt;. Non-&lt;code&gt;BufferedImage&lt;/code&gt; objects must not be stored in this &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;BufferedImage&lt;/code&gt; 的缩略图，或 &lt;code&gt;null&lt;/code&gt; 。非 &lt;code&gt;BufferedImage&lt;/code&gt; 对象不能存储在此 &lt;code&gt;List&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="36b2069fe914d7b06b5470b8c3919de4f456ffd0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Locale&lt;/code&gt;s, one for each element of &lt;code&gt;warningListeners&lt;/code&gt;, initialized by default &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Locale&lt;/code&gt; &lt;code&gt;List&lt;/code&gt; ，每个 &lt;code&gt;warningListeners&lt;/code&gt; 器元素一个，默认情况下初始化为 &lt;code&gt;null&lt;/code&gt; ，它与一个空 &lt;code&gt;List&lt;/code&gt; 同义词。</target>
        </trans-unit>
        <trans-unit id="e3a7c07b884a663e7b28c579dbc62722d830dd12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of currently registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s, initialized by default to &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 目前注册 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; ，默认情况下初始化为 &lt;code&gt;null&lt;/code&gt; ，这是一个空的代名词 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f3df7f953dd6fc375207a519bf3b8812d9b980e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of currently registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s, initialized by default to &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 当前已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 供，默认情况下初始化为 &lt;code&gt;null&lt;/code&gt; ，这是一个空的代名词 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02920fdeb4509bc480fe7cb92fdd00152bb3b36e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of currently registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s, initialized by default to &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 当前已注册的 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 供，默认情况下初始化为 &lt;code&gt;null&lt;/code&gt; ，这是一个空的代名词 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1efe3832c842f4b962429c8ff5af3c882f4ac2e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of currently registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s, initialized by default &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 的当前已注册 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; ，默认情况下初始化 &lt;code&gt;null&lt;/code&gt; ，它与空的代名词 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b98b86689e972cd06c339fa353658a98f167a0a5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of currently registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s, initialized by default to &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 目前注册 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; ，默认情况下初始化为 &lt;code&gt;null&lt;/code&gt; ，这是一个空的代名词 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="917395ca416ac2ceda1a7b79e06bc0660475f8a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;List&lt;/code&gt; of the &lt;code&gt;Locale&lt;/code&gt;s associated with each currently registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;, initialized by default to &lt;code&gt;null&lt;/code&gt;, which is synonymous with an empty &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;Locale&lt;/code&gt; 与每个当前已注册相连的S &lt;code&gt;IIOReadWarningListener&lt;/code&gt; ，默认情况下初始化为 &lt;code&gt;null&lt;/code&gt; ，这是一个空的代名词 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="211c43ac85ae6d5574fc22ebc86733087aaf3305" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ListModel&lt;/code&gt; can be supplied directly to a &lt;code&gt;JList&lt;/code&gt; by way of a constructor or the &lt;code&gt;setModel&lt;/code&gt; method. The contents need not be static - the number of items, and the values of items can change over time. A correct &lt;code&gt;ListModel&lt;/code&gt; implementation notifies the set of &lt;code&gt;javax.swing.event.ListDataListener&lt;/code&gt;s that have been added to it, each time a change occurs. These changes are characterized by a &lt;code&gt;javax.swing.event.ListDataEvent&lt;/code&gt;, which identifies the range of list indices that have been modified, added, or removed. &lt;code&gt;JList&lt;/code&gt;'s &lt;code&gt;ListUI&lt;/code&gt; is responsible for keeping the visual representation up to date with changes, by listening to the model.</source>
          <target state="translated">可以通过构造函数或 &lt;code&gt;setModel&lt;/code&gt; 方法将 &lt;code&gt;ListModel&lt;/code&gt; 直接提供给 &lt;code&gt;JList&lt;/code&gt; 。内容不必是静态的-项目数，项目的值可以随时间变化。每次发生更改时，正确的 &lt;code&gt;ListModel&lt;/code&gt; 实现都会通知已添加到其中的 &lt;code&gt;javax.swing.event.ListDataListener&lt;/code&gt; 的集合。这些更改的特征在于 &lt;code&gt;javax.swing.event.ListDataEvent&lt;/code&gt; ，它标识已被修改，添加或删除的列表索引的范围。 &lt;code&gt;JList&lt;/code&gt; 的 &lt;code&gt;ListUI&lt;/code&gt; 负责通过侦听模型来使视觉表示与更改保持最新。</target>
        </trans-unit>
        <trans-unit id="cb5267a4f83942b24929404c0f218034b517dcf3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ListSelectionListener&lt;/code&gt; that forwards &lt;code&gt;ListSelectionEvents&lt;/code&gt; when there is a column selection change.</source>
          <target state="translated">一个 &lt;code&gt;ListSelectionListener&lt;/code&gt; 转发 &lt;code&gt;ListSelectionEvents&lt;/code&gt; 时，有一个列选择变化。</target>
        </trans-unit>
        <trans-unit id="b58a7624cae8f15ddb95782892153cb5fabf8fd5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LocalTime&lt;/code&gt; is formed if there is at least an hour-of-day available. This involves providing default values for minute, second and fraction of second.</source>
          <target state="translated">甲 &lt;code&gt;LocalTime&lt;/code&gt; 如果存在至少一个可用小时的日形成。这涉及提供分钟，秒和秒的默认值。</target>
        </trans-unit>
        <trans-unit id="01853789d6079ac2028fec19eeeae43f9b897108" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Locale&lt;/code&gt; is the mechanism for identifying the kind of object (&lt;code&gt;NumberFormat&lt;/code&gt;) that you would like to get. The locale is &lt;strong&gt;just&lt;/strong&gt; a mechanism for identifying objects, &lt;strong&gt;not&lt;/strong&gt; a container for the objects themselves.</source>
          <target state="translated">一个 &lt;code&gt;Locale&lt;/code&gt; 是用于识别对象种类（机制 &lt;code&gt;NumberFormat&lt;/code&gt; ），您想获得。语言环境&lt;strong&gt;只是&lt;/strong&gt;一种用于标识对象的机制，&lt;strong&gt;而不是&lt;/strong&gt;对象本身的容器。</target>
        </trans-unit>
        <trans-unit id="6fcfa373099d6b3da024951a19df5dd6b097e2d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Locale&lt;/code&gt; object logically consists of the fields described below.</source>
          <target state="translated">阿 &lt;code&gt;Locale&lt;/code&gt; 对象在逻辑上由下面描述的字段。</target>
        </trans-unit>
        <trans-unit id="166cc021915f9ee4f85c76cabe7204921d6e9fe0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Locale&lt;/code&gt; object represents a specific geographical, political, or cultural region.</source>
          <target state="translated">一个 &lt;code&gt;Locale&lt;/code&gt; 对象表示了特定的地理，政治和文化地区。</target>
        </trans-unit>
        <trans-unit id="635a5aa01099339234a0a7ea3dcb399de997df31" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Locale&lt;/code&gt; object represents a specific geographical, political, or cultural region. An operation that requires a &lt;code&gt;Locale&lt;/code&gt; to perform its task is called &lt;em&gt;locale-sensitive&lt;/em&gt; and uses the &lt;code&gt;Locale&lt;/code&gt; to tailor information for the user. For example, displaying a number is a locale-sensitive operation&amp;mdash; the number should be formatted according to the customs and conventions of the user's native country, region, or culture.</source>
          <target state="translated">一个 &lt;code&gt;Locale&lt;/code&gt; 对象表示了特定的地理，政治和文化地区。需要 &lt;code&gt;Locale&lt;/code&gt; 执行其任务的操作称为对&lt;em&gt;语言环境敏感的操作，&lt;/em&gt;并使用该 &lt;code&gt;Locale&lt;/code&gt; 为用户定制信息。例如，显示数字是对区域设置敏感的操作-数字的格式应根据用户的祖国，地区或文化的习俗和惯例进行。</target>
        </trans-unit>
        <trans-unit id="0cd9ed10b27f2ef168f4256244d20117115ba51e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Locale&lt;/code&gt; to be used to localize compression type names and quality descriptions, or &lt;code&gt;null&lt;/code&gt; to use a default &lt;code&gt;Locale&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Locale&lt;/code&gt; 用于本地化压缩类型名称和质量描述，或者为 &lt;code&gt;null&lt;/code&gt; 以使用默认 &lt;code&gt;Locale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12f70407c67f5352dca1aed29447302a2a4d4250" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Locale&lt;/code&gt; to be used to localize compression type names and quality descriptions, or &lt;code&gt;null&lt;/code&gt; to use a default &lt;code&gt;Locale&lt;/code&gt;. Subclasses must set the value manually.</source>
          <target state="translated">一个 &lt;code&gt;Locale&lt;/code&gt; 用于本地化压缩类型名称和质量描述，或者为 &lt;code&gt;null&lt;/code&gt; 以使用默认 &lt;code&gt;Locale&lt;/code&gt; 。子类必须手动设置值。</target>
        </trans-unit>
        <trans-unit id="8276cf42ea4317cfe442daf66653a487c4e1f80d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lock&lt;/code&gt; class can also provide behavior and semantics that is quite different from that of the implicit monitor lock, such as guaranteed ordering, non-reentrant usage, or deadlock detection. If an implementation provides such specialized semantics then the implementation must document those semantics.</source>
          <target state="translated">一 &lt;code&gt;Lock&lt;/code&gt; 类还可以提供的行为和语义是从隐式监视器锁定，如保证排序，非重入用法或死锁检测有很大的不同。如果实现提供了这种特殊的语义，则实现必须记录这些语义。</target>
        </trans-unit>
        <trans-unit id="3eca3b7befac58e83c9e637d52b7f145f7ba7b59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lock&lt;/code&gt; implementation may be able to detect erroneous use of the lock, such as an invocation that would cause deadlock, and may throw an (unchecked) exception in such circumstances. The circumstances and the exception type must be documented by that &lt;code&gt;Lock&lt;/code&gt; implementation.</source>
          <target state="translated">一个 &lt;code&gt;Lock&lt;/code&gt; 实现可能能够检测到错误使用的锁，如可能导致死锁，在这样的环境中可能抛出（未经检查的）异常的调用。该 &lt;code&gt;Lock&lt;/code&gt; 实现必须记录情况和异常类型。</target>
        </trans-unit>
        <trans-unit id="f3c0cd3882685c535519cd28b18404b3a9a21c01" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lock&lt;/code&gt; implementation will usually impose restrictions on which thread can release a lock (typically only the holder of the lock can release it) and may throw an (unchecked) exception if the restriction is violated. Any restrictions and the exception type must be documented by that &lt;code&gt;Lock&lt;/code&gt; implementation.</source>
          <target state="translated">一个 &lt;code&gt;Lock&lt;/code&gt; 的实现通常会强加给哪个线程可以释放锁，如果限制违反可能会抛出（未经检查的）异常（通常只有锁可以释放它的持有人）的限制。任何限制和异常类型都必须由那个 &lt;code&gt;Lock&lt;/code&gt; 实现记录下来。</target>
        </trans-unit>
        <trans-unit id="b71cbc511c202cb9f3e5502805e1768103b9d6cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LoginModule&lt;/code&gt; implementation must have a constructor with no arguments. This allows classes which load the &lt;code&gt;LoginModule&lt;/code&gt; to instantiate it.</source>
          <target state="translated">一个 &lt;code&gt;LoginModule&lt;/code&gt; 的实现必须有一个不带参数的构造函数。这允许加载 &lt;code&gt;LoginModule&lt;/code&gt; 的类对其进行实例化。</target>
        </trans-unit>
        <trans-unit id="d949ad08cad7e449a2f42749aa45dffb85fab86e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; object can be shared with other trusted code, such as a metaobject protocol. A shared &lt;code&gt;Lookup&lt;/code&gt; object delegates the capability to create method handles on private members of the lookup class. Even if privileged code uses the &lt;code&gt;Lookup&lt;/code&gt; object, the access checking is confined to the privileges of the original lookup class.</source>
          <target state="translated">甲 &lt;code&gt;Lookup&lt;/code&gt; 对象可以与其他受信任的代码共享，诸如元对象协议。共享的 &lt;code&gt;Lookup&lt;/code&gt; 对象委派了在lookup类的私有成员上创建方法句柄的功能。即使特权代码使用 &lt;code&gt;Lookup&lt;/code&gt; 对象，访问检查也仅限于原始Lookup类的特权。</target>
        </trans-unit>
        <trans-unit id="16c504d0134db57150e75cd387d1909b4f16459d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; object produced by the factory methods, such as the &lt;a href=&quot;methodhandles#lookup()&quot;&gt;&lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandles#publicLookup()&quot;&gt;&lt;code&gt;publicLookup()&lt;/code&gt;&lt;/a&gt; method, has &lt;code&gt;null&lt;/code&gt; previous lookup class. A &lt;code&gt;Lookup&lt;/code&gt; object has a non-null previous lookup class when this lookup was teleported from an old lookup class in one module to a new lookup class in another module.</source>
          <target state="translated">甲 &lt;code&gt;Lookup&lt;/code&gt; 由工厂的方法，如所产生的对象&lt;a href=&quot;methodhandles#lookup()&quot;&gt; &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;methodhandles#publicLookup()&quot;&gt; &lt;code&gt;publicLookup()&lt;/code&gt; &lt;/a&gt;方法，它具有 &lt;code&gt;null&lt;/code&gt; 以前查找类。一个 &lt;code&gt;Lookup&lt;/code&gt; 对象有当此查找是从旧的查找类在一个模块中远距传送到一个新的查找类在另一个模块中一个非空以前的查找类。</target>
        </trans-unit>
        <trans-unit id="bec657cc08b058966f2642f6c31e17ccf5c008e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; on &lt;code&gt;C&lt;/code&gt; can also &lt;em&gt;teleport&lt;/em&gt; to a target class via &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;&lt;code&gt;Lookup.in&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandles#privateLookupIn(java.lang.Class,java.lang.invoke.MethodHandles.Lookup)&quot;&gt;&lt;code&gt;MethodHandles.privateLookupIn&lt;/code&gt;&lt;/a&gt; methods. Teleporting across modules will always record the original lookup class as the &lt;em&gt;&lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt;&lt;/em&gt; and drops &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; access. If the target class is in the same module as the lookup class &lt;code&gt;C&lt;/code&gt;, then the target class becomes the new lookup class and there is no change to the previous lookup class. If the target class is in a different module from &lt;code&gt;M1&lt;/code&gt; (&lt;code&gt;C&lt;/code&gt;'s module), &lt;code&gt;C&lt;/code&gt; becomes the new previous lookup class and the target class becomes the new lookup class. In that case, if there was already a previous lookup class in &lt;code&gt;M0&lt;/code&gt;, and it differs from &lt;code&gt;M1&lt;/code&gt; and &lt;code&gt;M2&lt;/code&gt;, then the resulting lookup drops all privileges. For example,</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 上的 &lt;code&gt;Lookup&lt;/code&gt; 也可以通过&lt;a href=&quot;#in(java.lang.Class)&quot;&gt; &lt;code&gt;Lookup.in&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;methodhandles#privateLookupIn(java.lang.Class,java.lang.invoke.MethodHandles.Lookup)&quot;&gt; &lt;code&gt;MethodHandles.privateLookupIn&lt;/code&gt; &lt;/a&gt;方法&lt;em&gt;传送&lt;/em&gt;到目标类。跨模块传送将始终将原始查找类记录为&lt;em&gt;&lt;a href=&quot;#previousLookupClass()&quot;&gt;先前的查找类，&lt;/a&gt;&lt;/em&gt;并丢弃&lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;访问。如果目标类与查找类 &lt;code&gt;C&lt;/code&gt; 在同一模块中，则目标类将成为新的查找类，并且对先前的查找类没有任何更改。如果目标类位于与 &lt;code&gt;M1&lt;/code&gt; 不同的模块（ &lt;code&gt;C&lt;/code&gt; 的模块）中，则 &lt;code&gt;C&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;成为新的以前的查找类，而目标类成为新的查找类。在这种情况下，如果 &lt;code&gt;M0&lt;/code&gt; 中已经存在先前的查找类，并且它与 &lt;code&gt;M1&lt;/code&gt; 和 &lt;code&gt;M2&lt;/code&gt; 不同，则所得的查找将放弃所有特权。例如，</target>
        </trans-unit>
        <trans-unit id="991d368dcf0b3e78a36d53f3d2e05fd9c24be32c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; with &lt;a href=&quot;#PUBLIC&quot;&gt;&lt;code&gt;PUBLIC&lt;/code&gt;&lt;/a&gt; or with &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;&lt;code&gt;UNCONDITIONAL&lt;/code&gt;&lt;/a&gt; mode allows cross-module access. The access checking is performed with respect to both the lookup class and the previous lookup class if present.</source>
          <target state="translated">甲 &lt;code&gt;Lookup&lt;/code&gt; 与&lt;a href=&quot;#PUBLIC&quot;&gt; &lt;code&gt;PUBLIC&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#UNCONDITIONAL&quot;&gt; &lt;code&gt;UNCONDITIONAL&lt;/code&gt; &lt;/a&gt;模式允许跨模块的访问。针对查找类和先前的查找类（如果存在）执行访问检查。</target>
        </trans-unit>
        <trans-unit id="0e5c2e23d370340df0db26fb2033c3a065c8f0e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; with &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;&lt;code&gt;UNCONDITIONAL&lt;/code&gt;&lt;/a&gt; mode can access public type in all modules when the type is in a package that is &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt;exported unconditionally&lt;/a&gt;.</source>
          <target state="translated">当类型位于&lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt;无条件导出&lt;/a&gt;的程序包中时，具有&lt;a href=&quot;#UNCONDITIONAL&quot;&gt; &lt;code&gt;UNCONDITIONAL&lt;/code&gt; &lt;/a&gt;模式的 &lt;code&gt;Lookup&lt;/code&gt; 可以访问所有模块中的公共类型。</target>
        </trans-unit>
        <trans-unit id="7ecd163745bccdb5a30005b5592bea80bbd8e300" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode performs cross-module access check with respect to the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt; and &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt; if present.</source>
          <target state="translated">甲 &lt;code&gt;Lookup&lt;/code&gt; 与相对于所述该查找模式进行跨模块访问检查&lt;a href=&quot;#lookupClass()&quot;&gt;查找类&lt;/a&gt;和&lt;a href=&quot;#previousLookupClass()&quot;&gt;先前的查找类&lt;/a&gt;（如果存在）。</target>
        </trans-unit>
        <trans-unit id="638ae617b2818d2f9f7783f4b29ead82b402514c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ManagedBlocker&lt;/code&gt; provides two methods. Method &lt;a href=&quot;#isReleasable()&quot;&gt;&lt;code&gt;isReleasable()&lt;/code&gt;&lt;/a&gt; must return &lt;code&gt;true&lt;/code&gt; if blocking is not necessary. Method &lt;a href=&quot;#block()&quot;&gt;&lt;code&gt;block()&lt;/code&gt;&lt;/a&gt; blocks the current thread if necessary (perhaps internally invoking &lt;code&gt;isReleasable&lt;/code&gt; before actually blocking). These actions are performed by any thread invoking &lt;a href=&quot;forkjoinpool#managedBlock(java.util.concurrent.ForkJoinPool.ManagedBlocker)&quot;&gt;&lt;code&gt;ForkJoinPool.managedBlock(ManagedBlocker)&lt;/code&gt;&lt;/a&gt;. The unusual methods in this API accommodate synchronizers that may, but don't usually, block for long periods. Similarly, they allow more efficient internal handling of cases in which additional workers may be, but usually are not, needed to ensure sufficient parallelism. Toward this end, implementations of method &lt;code&gt;isReleasable&lt;/code&gt; must be amenable to repeated invocation.</source>
          <target state="translated">一个 &lt;code&gt;ManagedBlocker&lt;/code&gt; 提供了两种方法。如果不需要阻塞，则方法&lt;a href=&quot;#isReleasable()&quot;&gt; &lt;code&gt;isReleasable()&lt;/code&gt; &lt;/a&gt;必须返回 &lt;code&gt;true&lt;/code&gt; 。如果需要，方法&lt;a href=&quot;#block()&quot;&gt; &lt;code&gt;block()&lt;/code&gt; 会&lt;/a&gt;阻止当前线程（也许在实际阻止之前在内部调用 &lt;code&gt;isReleasable&lt;/code&gt; ）。这些操作由调用&lt;a href=&quot;forkjoinpool#managedBlock(java.util.concurrent.ForkJoinPool.ManagedBlocker)&quot;&gt; &lt;code&gt;ForkJoinPool.managedBlock(ManagedBlocker)&lt;/code&gt; 的&lt;/a&gt;任何线程执行。该API中不常见的方法可容纳可能会（但通常不会）长时间阻塞的同步器。同样，它们可以更有效地处理内部情况，在这种情况下，可能（但通常）不需要额外的工人来确保足够的并行度。为此，方法的实现是可 &lt;code&gt;isReleasable&lt;/code&gt; 必须能够重复调用。</target>
        </trans-unit>
        <trans-unit id="41de0ba43f16a90c262039e2bd1814b41250f82c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ManagedBlocker&lt;/code&gt; provides two methods. Method &lt;a href=&quot;forkjoinpool.managedblocker#isReleasable--&quot;&gt;&lt;code&gt;isReleasable()&lt;/code&gt;&lt;/a&gt; must return &lt;code&gt;true&lt;/code&gt; if blocking is not necessary. Method &lt;a href=&quot;forkjoinpool.managedblocker#block--&quot;&gt;&lt;code&gt;block()&lt;/code&gt;&lt;/a&gt; blocks the current thread if necessary (perhaps internally invoking &lt;code&gt;isReleasable&lt;/code&gt; before actually blocking). These actions are performed by any thread invoking &lt;a href=&quot;forkjoinpool#managedBlock-java.util.concurrent.ForkJoinPool.ManagedBlocker-&quot;&gt;&lt;code&gt;ForkJoinPool.managedBlock(ManagedBlocker)&lt;/code&gt;&lt;/a&gt;. The unusual methods in this API accommodate synchronizers that may, but don't usually, block for long periods. Similarly, they allow more efficient internal handling of cases in which additional workers may be, but usually are not, needed to ensure sufficient parallelism. Toward this end, implementations of method &lt;code&gt;isReleasable&lt;/code&gt; must be amenable to repeated invocation.</source>
          <target state="translated">一个 &lt;code&gt;ManagedBlocker&lt;/code&gt; 提供了两种方法。如果不需要阻塞，则方法&lt;a href=&quot;forkjoinpool.managedblocker#isReleasable--&quot;&gt; &lt;code&gt;isReleasable()&lt;/code&gt; &lt;/a&gt;必须返回 &lt;code&gt;true&lt;/code&gt; 。如果需要，方法&lt;a href=&quot;forkjoinpool.managedblocker#block--&quot;&gt; &lt;code&gt;block()&lt;/code&gt; 会&lt;/a&gt;阻塞当前线程（也许在实际阻塞之前在内部调用 &lt;code&gt;isReleasable&lt;/code&gt; ）。这些操作由调用&lt;a href=&quot;forkjoinpool#managedBlock-java.util.concurrent.ForkJoinPool.ManagedBlocker-&quot;&gt; &lt;code&gt;ForkJoinPool.managedBlock(ManagedBlocker)&lt;/code&gt; 的&lt;/a&gt;任何线程执行。该API中不常见的方法可容纳可能会（但通常不会）长时间阻塞的同步器。类似地，它们可以更有效地内部处理可能（但通常不需要）额外工人以确保足够的并行度的情况。为此，方法的实现是可 &lt;code&gt;isReleasable&lt;/code&gt; 必须能够重复调用。</target>
        </trans-unit>
        <trans-unit id="5e9cc5dc674a5b0316a5dbf3c9f9cf213ece6f21" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Manifest&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;xmlsignaturefactory#newManifest(java.util.List)&quot;&gt;&lt;code&gt;newManifest&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class; for example:</source>
          <target state="translated">甲 &lt;code&gt;Manifest&lt;/code&gt; 实例可以通过调用的一个来创建&lt;a href=&quot;xmlsignaturefactory#newManifest(java.util.List)&quot;&gt; &lt;code&gt;newManifest&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类;例如：</target>
        </trans-unit>
        <trans-unit id="ccb5483368ce702117255c40bb64a3c638ac6959" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; is reconstructed as a &lt;code&gt;java.util.HashMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;; a &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; as a &lt;code&gt;java.util.TreeMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Map&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 被重构为一个 &lt;code&gt;java.util.HashMap&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ;一个 &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt; &lt;em&gt;K&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 作为 &lt;code&gt;java.util.TreeMap&amp;lt;&lt;/code&gt; &lt;em&gt;K&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34d9d6e43d15d27f890e53136a47ea22621edffc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;
      SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, for example &lt;code&gt;
      Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt;, has Open Type &lt;a href=&quot;openmbean/tabulartype&quot;&gt;&lt;code&gt;TabularType&lt;/code&gt;&lt;/a&gt; and is mapped to a &lt;a href=&quot;openmbean/tabulardata&quot;&gt;&lt;code&gt;TabularData&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;TabularType&lt;/code&gt; has two items called &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. The Open Type of &lt;code&gt;key&lt;/code&gt; is &lt;em&gt;opentype(K)&lt;/em&gt;, and the Open Type of &lt;code&gt;value&lt;/code&gt; is &lt;em&gt;opentype(V)&lt;/em&gt;. The index of the &lt;code&gt;TabularType&lt;/code&gt; is the single item &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Map&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt; SortedMap&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ，例如 &lt;code&gt; Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; ，具有开放式&lt;a href=&quot;openmbean/tabulartype&quot;&gt; &lt;code&gt;TabularType&lt;/code&gt; &lt;/a&gt;和被映射到&lt;a href=&quot;openmbean/tabulardata&quot;&gt; &lt;code&gt;TabularData&lt;/code&gt; &lt;/a&gt;。该 &lt;code&gt;TabularType&lt;/code&gt; 有两个项目被称为 &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 。 &lt;code&gt;key&lt;/code&gt; 的Open Type为&lt;em&gt;opentype（K）&lt;/em&gt;， &lt;code&gt;value&lt;/code&gt; 的Open Type为&lt;em&gt;opentype（V）&lt;/em&gt;。 &lt;code&gt;TabularType&lt;/code&gt; 的索引是单个项目 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5492d91c797e8ad61ee773f7ff7771cc95b5945" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;, for example &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt;, has Open Type &lt;a href=&quot;openmbean/tabulartype&quot;&gt;&lt;code&gt;TabularType&lt;/code&gt;&lt;/a&gt; and is mapped to a &lt;a href=&quot;openmbean/tabulardata&quot;&gt;&lt;code&gt;TabularData&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;TabularType&lt;/code&gt; has two items called &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. The Open Type of &lt;code&gt;key&lt;/code&gt; is &lt;em&gt;opentype(K)&lt;/em&gt;, and the Open Type of &lt;code&gt;value&lt;/code&gt; is &lt;em&gt;opentype(V)&lt;/em&gt;. The index of the &lt;code&gt;TabularType&lt;/code&gt; is the single item &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Map&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; ，例如 &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; ，具有开放式&lt;a href=&quot;openmbean/tabulartype&quot;&gt; &lt;code&gt;TabularType&lt;/code&gt; &lt;/a&gt;和被映射到&lt;a href=&quot;openmbean/tabulardata&quot;&gt; &lt;code&gt;TabularData&lt;/code&gt; &lt;/a&gt;。该 &lt;code&gt;TabularType&lt;/code&gt; 有两个项目被称为 &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 。 &lt;code&gt;key&lt;/code&gt; 的Open Type 为&lt;em&gt;opentype（K）&lt;/em&gt;， &lt;code&gt;value&lt;/code&gt; 的Open Type 为&lt;em&gt;opentype（V）&lt;/em&gt;。 &lt;code&gt;TabularType&lt;/code&gt; 的索引是单个项目 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="491fe026154b44bab21540fc1d12cd511ab4f8ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MarshalException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;MarshalException&lt;/code&gt; to get thrown.</source>
          <target state="translated">一个 &lt;code&gt;MarshalException&lt;/code&gt; 可以包含一个原因：另一个引发此 &lt;code&gt;MarshalException&lt;/code&gt; 的throwable 。</target>
        </trans-unit>
        <trans-unit id="e2bfa32c78e5059bce11c1a8e652de673f8f4c33" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MarshalException&lt;/code&gt; is thrown if a &lt;code&gt;java.io.IOException&lt;/code&gt; occurs while marshalling the remote call header, arguments or return value for a remote method call.</source>
          <target state="translated">甲 &lt;code&gt;MarshalException&lt;/code&gt; 如果被抛出 &lt;code&gt;java.io.IOException&lt;/code&gt; 的在编组远程调用标题，参数或返回值的远程方法调用发生。</target>
        </trans-unit>
        <trans-unit id="6bd9d90b4757239b6c0c4997a903f5d67e33dbf6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MarshalException&lt;/code&gt; is thrown if a &lt;code&gt;java.io.IOException&lt;/code&gt; occurs while marshalling the remote call header, arguments or return value for a remote method call. A &lt;code&gt;MarshalException&lt;/code&gt; is also thrown if the receiver does not support the protocol version of the sender.</source>
          <target state="translated">甲 &lt;code&gt;MarshalException&lt;/code&gt; 如果被抛出 &lt;code&gt;java.io.IOException&lt;/code&gt; 的在编组远程调用标题，参数或返回值的远程方法调用发生。甲 &lt;code&gt;MarshalException&lt;/code&gt; 也抛出如果接收机不支持发送方的协议版本。</target>
        </trans-unit>
        <trans-unit id="a93248bdc0454438b648bb944c4e7eceb09fdc67" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MarshalledObject&lt;/code&gt; contains a byte stream with the serialized representation of an object given to its constructor.</source>
          <target state="translated">甲 &lt;code&gt;MarshalledObject&lt;/code&gt; 中包含具有给定了其构造方法的对象的序列化表示一个字节流。</target>
        </trans-unit>
        <trans-unit id="1b6eeb9b8ba22d69fe4c738b2de7f3dcbf5218ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MarshalledObject&lt;/code&gt; contains a byte stream with the serialized representation of an object given to its constructor. The &lt;code&gt;get&lt;/code&gt; method returns a new copy of the original object, as deserialized from the contained byte stream. The contained object is serialized and deserialized with the same serialization semantics used for marshaling and unmarshaling parameters and return values of RMI calls: When the serialized form is created:</source>
          <target state="translated">甲 &lt;code&gt;MarshalledObject&lt;/code&gt; 中包含具有给定了其构造方法的对象的序列化表示一个字节流。在 &lt;code&gt;get&lt;/code&gt; 方法返回原始对象的一个新的副本，从所包含的字节流进行反序列化。所包含的对象使用与用于编组和解编组参数以及RMI调用的返回值相同的序列化语义进行序列化和反序列化：创建序列化表单时：</target>
        </trans-unit>
        <trans-unit id="70fad3c3b4f1266ef436d5efdebeba344be477f5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MathContext&lt;/code&gt; object whose settings have the values required for unlimited precision arithmetic.</source>
          <target state="translated">一个 &lt;code&gt;MathContext&lt;/code&gt; 对象，其设置具有无限精度算术所需的值。</target>
        </trans-unit>
        <trans-unit id="4e3654abaa9ec0cd85de26194397d568c17a1dc7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MathContext&lt;/code&gt; object whose settings have the values required for unlimited precision arithmetic. The values of the settings are: &lt;code&gt;
  precision=0 roundingMode=HALF_UP
  &lt;/code&gt;</source>
          <target state="translated">一个 &lt;code&gt;MathContext&lt;/code&gt; 对象，其设置具有无限精度算术所需的值。设置的值是： &lt;code&gt; precision=0 roundingMode=HALF_UP &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96c1e909740c6811a0d1efdeffb1ff302e2bb931" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MathContext&lt;/code&gt; object with a precision setting matching the IEEE 754R Decimal128 format, 34 digits, and a rounding mode of &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;HALF_EVEN&lt;/code&gt;&lt;/a&gt;, the IEEE 754R default.</source>
          <target state="translated">一个 &lt;code&gt;MathContext&lt;/code&gt; 对象，其精度设置与IEEE 754R Decimal128格式（34位数字）匹配，并且舍入模式为&lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;HALF_EVEN&lt;/code&gt; &lt;/a&gt;，这是IEEE 754R的默认设置。</target>
        </trans-unit>
        <trans-unit id="5c1e77d0a3347653dcee6a8b1f11bee4a66d44be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MathContext&lt;/code&gt; object with a precision setting matching the IEEE 754R Decimal32 format, 7 digits, and a rounding mode of &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;HALF_EVEN&lt;/code&gt;&lt;/a&gt;, the IEEE 754R default.</source>
          <target state="translated">一个 &lt;code&gt;MathContext&lt;/code&gt; 对象，其精度设置与IEEE 754R Decimal32格式匹配（7位数字），并且舍入模式为&lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;HALF_EVEN&lt;/code&gt; &lt;/a&gt;（默认为IEEE 754R）。</target>
        </trans-unit>
        <trans-unit id="b4edaafe90086d392d090849cc8b67e7f5445efa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MathContext&lt;/code&gt; object with a precision setting matching the IEEE 754R Decimal64 format, 16 digits, and a rounding mode of &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;HALF_EVEN&lt;/code&gt;&lt;/a&gt;, the IEEE 754R default.</source>
          <target state="translated">一个 &lt;code&gt;MathContext&lt;/code&gt; 对象，其精度设置与IEEE 754R Decimal64格式匹配，16位数字，并且舍入模式为&lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;HALF_EVEN&lt;/code&gt; &lt;/a&gt;，这是IEEE 754R的默认设置。</target>
        </trans-unit>
        <trans-unit id="d9677ef7cd01bbfe977031fa93ccb1eb8392aa7b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Media&lt;/code&gt; object is constructed with a value which represents one of the ways in which the Media attribute can be specified.</source>
          <target state="translated">甲 &lt;code&gt;Media&lt;/code&gt; 对象被构造用代表的，其中，媒体属性可以指定的方式之一的值。</target>
        </trans-unit>
        <trans-unit id="606f930b55bbce0493e70e26368aa5b13a7f4fca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MemoryUsage&lt;/code&gt; object contains four values:</source>
          <target state="translated">一个 &lt;code&gt;MemoryUsage&lt;/code&gt; 对象包含四个值：</target>
        </trans-unit>
        <trans-unit id="fa4d939f81165b50263fcede0b6dfe1f34749207" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MemoryUsage&lt;/code&gt; object represents a snapshot of memory usage.</source>
          <target state="translated">甲 &lt;code&gt;MemoryUsage&lt;/code&gt; 对象表示的内存使用情况的快照。</target>
        </trans-unit>
        <trans-unit id="78b89506999de34adc0eab3d85d54befd68853ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MemoryUsage&lt;/code&gt; object represents a snapshot of memory usage. Instances of the &lt;code&gt;MemoryUsage&lt;/code&gt; class are usually constructed by methods that are used to obtain memory usage information about individual memory pool of the Java virtual machine or the heap or non-heap memory of the Java virtual machine as a whole.</source>
          <target state="translated">甲 &lt;code&gt;MemoryUsage&lt;/code&gt; 对象表示的内存使用情况的快照。 &lt;code&gt;MemoryUsage&lt;/code&gt; 类的实例通常由用于获取有关Java虚拟机的单个内存池或Java虚拟机的整个堆或非堆内存的内存使用信息的方法构造。</target>
        </trans-unit>
        <trans-unit id="2878636561e8e5d31d7c4ea4ddce32490944eca3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Menu&lt;/code&gt; object is a pull-down menu component that is deployed from a menu bar.</source>
          <target state="translated">一个 &lt;code&gt;Menu&lt;/code&gt; 对象是从菜单栏部署的下拉式菜单组件。</target>
        </trans-unit>
        <trans-unit id="a97fd72ec727d747337194ffbf451d3f7cf10cc8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Messager&lt;/code&gt; provides the way for an annotation processor to report error messages, warnings, and other notices.</source>
          <target state="translated">甲 &lt;code&gt;Messager&lt;/code&gt; 提供了用于注释处理器来报告错误消息，警告和其他通知的方式。</target>
        </trans-unit>
        <trans-unit id="8b5521c29051dc916ca552f3e4107d413e2197a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Messager&lt;/code&gt; provides the way for an annotation processor to report error messages, warnings, and other notices. Elements, annotations, and annotation values can be passed to provide a location hint for the message. However, such location hints may be unavailable or only approximate.</source>
          <target state="translated">甲 &lt;code&gt;Messager&lt;/code&gt; 提供了用于注释处理器来报告错误消息，警告和其他通知的方式。可以传递元素，注释和注释值以提供消息的位置提示。但是，这样的位置提示可能不可用或仅是近似的。</target>
        </trans-unit>
        <trans-unit id="8a28ba9d7e8182d497600748bf3e7d346a35f0fd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MetaMessage&lt;/code&gt; is a &lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt; that is not meaningful to synthesizers, but that can be stored in a MIDI file and interpreted by a sequencer program.</source>
          <target state="translated">一个 &lt;code&gt;MetaMessage&lt;/code&gt; 的是&lt;a href=&quot;midimessage&quot;&gt; &lt;code&gt;MidiMessage&lt;/code&gt; &lt;/a&gt;是没有意义的合成，但可存储在一个MIDI文件中然后由sequencer程序解释。</target>
        </trans-unit>
        <trans-unit id="2776880490c670eb8356fedbda3e278ca4cac50a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MetaMessage&lt;/code&gt; is a &lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt; that is not meaningful to synthesizers, but that can be stored in a MIDI file and interpreted by a sequencer program. (See the discussion in the &lt;code&gt;MidiMessage&lt;/code&gt; class description.) The Standard MIDI Files specification defines various types of meta-events, such as sequence number, lyric, cue point, and set tempo. There are also meta-events for such information as lyrics, copyrights, tempo indications, time and key signatures, markers, etc. For more information, see the Standard MIDI Files 1.0 specification, which is part of the Complete MIDI 1.0 Detailed Specification published by the MIDI Manufacturer's Association (&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;).</source>
          <target state="translated">一个 &lt;code&gt;MetaMessage&lt;/code&gt; 的是&lt;a href=&quot;midimessage&quot;&gt; &lt;code&gt;MidiMessage&lt;/code&gt; &lt;/a&gt;是没有意义的合成，但可存储在一个MIDI文件中然后由sequencer程序解释。 （请参见 &lt;code&gt;MidiMessage&lt;/code&gt; 类说明中的讨论。）标准MIDI文件规范定义了各种类型的元事件，例如序列号，歌词，提示点和设置速度。还提供元事件，例如歌词，版权，速度指示，时间和键签名，标记等信息。有关更多信息，请参见Standard MIDI Files 1.0规范，该规范是Complete MIDI 1.0 Details Specification的一部分，由发行。 MIDI制造商协会（&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1ad837bf3e31c7b5b47588b5b301ff6b6f388b32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MetaMessage&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; that is not meaningful to synthesizers, but that can be stored in a MIDI file and interpreted by a sequencer program.</source>
          <target state="translated">一个 &lt;code&gt;MetaMessage&lt;/code&gt; 的是 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 是没有意义的合成，但可存储在一个MIDI文件中然后由sequencer程序解释。</target>
        </trans-unit>
        <trans-unit id="6411c04f2592f16b41f8ac78ab0fe3af9c44008b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MetaMessage&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; that is not meaningful to synthesizers, but that can be stored in a MIDI file and interpreted by a sequencer program. (See the discussion in the &lt;code&gt;MidiMessage&lt;/code&gt; class description.) The Standard MIDI Files specification defines various types of meta-events, such as sequence number, lyric, cue point, and set tempo. There are also meta-events for such information as lyrics, copyrights, tempo indications, time and key signatures, markers, etc. For more information, see the Standard MIDI Files 1.0 specification, which is part of the Complete MIDI 1.0 Detailed Specification published by the MIDI Manufacturer's Association (&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;).</source>
          <target state="translated">一个 &lt;code&gt;MetaMessage&lt;/code&gt; 的是 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 是没有意义的合成，但可存储在一个MIDI文件中然后由sequencer程序解释。 （请参见 &lt;code&gt;MidiMessage&lt;/code&gt; 类说明中的讨论。）标准MIDI文件规范定义了各种类型的元事件，例如序列号，歌词，提示点和设置速度。还有元事件，例如歌词，版权，速度指示，时间和键签名，标记等信息。有关更多信息，请参见Standard MIDI Files 1.0规范，该规范是Complete MIDI 1.0详细规范的一部分，由发行。 MIDI制造商协会（&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b1556bc39acc4a33d83d3058b0e35d9fe2b1eecd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Method&lt;/code&gt; permits widening conversions to occur when matching the actual parameters to invoke with the underlying method's formal parameters, but it throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if a narrowing conversion would occur.</source>
          <target state="translated">甲 &lt;code&gt;Method&lt;/code&gt; 允许扩展转换匹配的实际参数时与下面的方法的形参数来调用发生，但它抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 如果将发生收缩转换。</target>
        </trans-unit>
        <trans-unit id="2661b86b675a199266968a6e45d097d08b2ed1b8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Method&lt;/code&gt; provides information about, and access to, a single method on a class or interface.</source>
          <target state="translated">甲 &lt;code&gt;Method&lt;/code&gt; 提供有关的信息，并获得，在一个类或接口的单个方法。</target>
        </trans-unit>
        <trans-unit id="0b3a1d14a60ca6e1169eb522df600b9e89fb9a7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Method&lt;/code&gt; provides information about, and access to, a single method on a class or interface. The reflected method may be a class method or an instance method (including an abstract method).</source>
          <target state="translated">甲 &lt;code&gt;Method&lt;/code&gt; 提供有关的信息，并获得，在一个类或接口的单个方法。反映的方法可以是类方法或实例方法（包括抽象方法）。</target>
        </trans-unit>
        <trans-unit id="7f5283226cb7888fe7049b87dfff2a5e77bdb1dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MethodType&lt;/code&gt; can be described in &lt;a href=&quot;../constant/methodtypedesc&quot;&gt;nominal form&lt;/a&gt; if and only if all of the parameter types and return type can be described with a &lt;a href=&quot;../class#describeConstable()&quot;&gt;&lt;code&gt;nominal descriptor&lt;/code&gt;&lt;/a&gt; represented by &lt;a href=&quot;../constant/classdesc&quot;&gt;&lt;code&gt;ClassDesc&lt;/code&gt;&lt;/a&gt;. If a method type can be described nominally, then:</source>
          <target state="translated">甲 &lt;code&gt;MethodType&lt;/code&gt; 可以被描述&lt;a href=&quot;../constant/methodtypedesc&quot;&gt;标称形式&lt;/a&gt;当且仅当所有的参数类型和返回类型可以与被描述&lt;a href=&quot;../class#describeConstable()&quot;&gt; &lt;code&gt;nominal descriptor&lt;/code&gt; &lt;/a&gt;所表示&lt;a href=&quot;../constant/classdesc&quot;&gt; &lt;code&gt;ClassDesc&lt;/code&gt; &lt;/a&gt;。如果可以名义上描述方法类型，则：</target>
        </trans-unit>
        <trans-unit id="db033c5925ad5ebb7b67f81287d933584d91e0cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiChannel&lt;/code&gt; object represents a single MIDI channel.</source>
          <target state="translated">甲 &lt;code&gt;MidiChannel&lt;/code&gt; 对象表示一个单一的MIDI通道。</target>
        </trans-unit>
        <trans-unit id="deef091e63ec51b5ffcf1c4a7c047cd054eff163" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiChannel&lt;/code&gt; object represents a single MIDI channel. Generally, each &lt;code&gt;MidiChannel&lt;/code&gt; method processes a like-named MIDI &quot;channel voice&quot; or &quot;channel mode&quot; message as defined by the MIDI specification. However, &lt;code&gt;MidiChannel&lt;/code&gt; adds some &quot;get&quot; methods that retrieve the value most recently set by one of the standard MIDI channel messages. Similarly, methods for per-channel solo and mute have been added.</source>
          <target state="translated">甲 &lt;code&gt;MidiChannel&lt;/code&gt; 对象表示一个单一的MIDI通道。通常，每种 &lt;code&gt;MidiChannel&lt;/code&gt; 方法都处理由MIDI规范定义的类似名称的MIDI&amp;ldquo;通道声音&amp;rdquo;或&amp;ldquo;通道模式&amp;rdquo;消息。但是， &lt;code&gt;MidiChannel&lt;/code&gt; 添加了一些&amp;ldquo;获取&amp;rdquo;方法来检索由标准MIDI通道消息之一最近设置的值。同样，增加了按通道独奏和静音的方法。</target>
        </trans-unit>
        <trans-unit id="d29f38e3f918da8dc28f11c91b574df75fb3581a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice.Info&lt;/code&gt; object contains assorted data about a &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;, including its name, the company who created it, and descriptive text.</source>
          <target state="translated">一个 &lt;code&gt;MidiDevice.Info&lt;/code&gt; 对象包含关于各类数据&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; 的&lt;/a&gt;，包括它的名字，谁创造了它的公司及描述性文本。</target>
        </trans-unit>
        <trans-unit id="1f2d3effb9276c4453dfb28467e6bcfc3448d55d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice.Info&lt;/code&gt; object contains assorted data about a &lt;code&gt;&lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, including its name, the company who created it, and descriptive text.</source>
          <target state="translated">一个 &lt;code&gt;MidiDevice.Info&lt;/code&gt; 对象包含关于各类数据 &lt;code&gt;&lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的，包括它的名字，谁创造了它的公司及描述性文本。</target>
        </trans-unit>
        <trans-unit id="4429461eb7a4efbdf69a4aeb669bf5eced481a98" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice&lt;/code&gt; can be a transmitter or a receiver of MIDI events, or both. Therefore, it can provide &lt;a href=&quot;transmitter&quot;&gt;&lt;code&gt;Transmitter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receiver&lt;/code&gt;&lt;/a&gt; instances (or both). Typically, MIDI IN ports provide transmitters, MIDI OUT ports and synthesizers provide receivers. A Sequencer typically provides transmitters for playback and receivers for recording.</source>
          <target state="translated">甲 &lt;code&gt;MidiDevice&lt;/code&gt; 的可以是一个发射器或MIDI事件，或者两者的接收器。因此，它可以提供&lt;a href=&quot;transmitter&quot;&gt; &lt;code&gt;Transmitter&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;receiver&quot;&gt; &lt;code&gt;Receiver&lt;/code&gt; &lt;/a&gt;实例（或两者）。通常，MIDI IN端口提供发送器，MIDI OUT端口提供，而合成器提供接收器。定序器通常提供用于回放的发射器和用于记录的接收器。</target>
        </trans-unit>
        <trans-unit id="73037143518746bb4920c9fc38dc1c15052002f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice&lt;/code&gt; can be opened and closed explicitly as well as implicitly. Explicit opening is accomplished by calling &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, explicit closing is done by calling &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;MidiDevice&lt;/code&gt; instance. If an application opens a &lt;code&gt;MidiDevice&lt;/code&gt; explicitly, it has to close it explicitly to free system resources and enable the application to exit cleanly. Implicit opening is done by calling &lt;a href=&quot;midisystem#getReceiver()&quot;&gt;&lt;code&gt;MidiSystem.getReceiver()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;midisystem#getTransmitter()&quot;&gt;&lt;code&gt;MidiSystem.getTransmitter()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;MidiDevice&lt;/code&gt; used by &lt;code&gt;MidiSystem.getReceiver&lt;/code&gt; and &lt;code&gt;MidiSystem.getTransmitter&lt;/code&gt; is implementation-dependent unless the properties &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; and &lt;code&gt;javax.sound.midi.Transmitter&lt;/code&gt; are used (see the description of properties to select default providers in &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;MidiSystem&lt;/code&gt;&lt;/a&gt;). A &lt;code&gt;MidiDevice&lt;/code&gt; that was opened implicitly, is closed implicitly by closing the &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; that resulted in opening it. If more than one implicitly opening &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; were obtained by the application, the device is closed after the last &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; has been closed. On the other hand, calling &lt;code&gt;getReceiver&lt;/code&gt; or &lt;code&gt;getTransmitter&lt;/code&gt; on the device instance directly does not open the device implicitly. Closing these &lt;code&gt;Transmitter&lt;/code&gt;s and &lt;code&gt;Receiver&lt;/code&gt;s does not close the device implicitly. To use a device with &lt;code&gt;Receiver&lt;/code&gt;s or &lt;code&gt;Transmitter&lt;/code&gt;s obtained this way, the device has to be opened and closed explicitly.</source>
          <target state="translated">一个 &lt;code&gt;MidiDevice&lt;/code&gt; 的可以打开和含蓄明确关闭为好。显式打开通过调用&lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open()&lt;/code&gt; 完成&lt;/a&gt;，显式关闭通过在 &lt;code&gt;MidiDevice&lt;/code&gt; 实例上调用&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;完成。如果应用程序显式打开 &lt;code&gt;MidiDevice&lt;/code&gt; ，则它必须显式关闭它以释放系统资源并使应用程序干净退出。隐式打开是通过调用&lt;a href=&quot;midisystem#getReceiver()&quot;&gt; &lt;code&gt;MidiSystem.getReceiver()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;midisystem#getTransmitter()&quot;&gt; &lt;code&gt;MidiSystem.getTransmitter()&lt;/code&gt; 完成的&lt;/a&gt;。 &lt;code&gt;MidiSystem.getReceiver&lt;/code&gt; 和 &lt;code&gt;MidiSystem.getTransmitter&lt;/code&gt; 使用的 &lt;code&gt;MidiDevice&lt;/code&gt; 取决于实现，除非该属性 &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; 和 &lt;code&gt;javax.sound.midi.Transmitter&lt;/code&gt; （请参阅属性说明，以选择&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;MidiSystem&lt;/code&gt; 中的&lt;/a&gt;默认提供程序）。隐式打开的 &lt;code&gt;MidiDevice&lt;/code&gt; 通过关闭导致打开它的 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; 隐式关闭。如果应用程序获得了多个隐式打开的 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; ，则在关闭最后一个 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; 之后，将关闭设备。另一方面，调用 &lt;code&gt;getReceiver&lt;/code&gt; 或 &lt;code&gt;getTransmitter&lt;/code&gt; 在设备实例上直接打开不会隐式打开设备。关闭这些 &lt;code&gt;Transmitter&lt;/code&gt; 和 &lt;code&gt;Receiver&lt;/code&gt; 不会隐式关闭设备。要使用通过这种方式获得的 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; 的设备，必须显式打开和关闭该设备。</target>
        </trans-unit>
        <trans-unit id="ef1a43b985855c29aef01aad7535cc36a37fca12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice&lt;/code&gt; can be opened and closed explicitly as well as implicitly. Explicit opening is accomplished by calling &lt;a href=&quot;mididevice#open--&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, explicit closing is done by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;MidiDevice&lt;/code&gt; instance. If an application opens a &lt;code&gt;MidiDevice&lt;/code&gt; explicitly, it has to close it explicitly to free system resources and enable the application to exit cleanly. Implicit opening is done by calling &lt;a href=&quot;midisystem#getReceiver--&quot;&gt;&lt;code&gt;MidiSystem.getReceiver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;midisystem#getTransmitter--&quot;&gt;&lt;code&gt;MidiSystem.getTransmitter&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;MidiDevice&lt;/code&gt; used by &lt;code&gt;MidiSystem.getReceiver&lt;/code&gt; and &lt;code&gt;MidiSystem.getTransmitter&lt;/code&gt; is implementation-dependant unless the properties &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; and &lt;code&gt;javax.sound.midi.Transmitter&lt;/code&gt; are used (see the description of properties to select default providers in &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;MidiSystem&lt;/code&gt;&lt;/a&gt;). A &lt;code&gt;MidiDevice&lt;/code&gt; that was opened implicitly, is closed implicitly by closing the &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; that resulted in opening it. If more than one implicitly opening &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; were obtained by the application, the device is closed after the last &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; has been closed. On the other hand, calling &lt;code&gt;getReceiver&lt;/code&gt; or &lt;code&gt;getTransmitter&lt;/code&gt; on the device instance directly does not open the device implicitly. Closing these &lt;code&gt;Transmitter&lt;/code&gt;s and &lt;code&gt;Receiver&lt;/code&gt;s does not close the device implicitly. To use a device with &lt;code&gt;Receiver&lt;/code&gt;s or &lt;code&gt;Transmitter&lt;/code&gt;s obtained this way, the device has to be opened and closed explicitly.</source>
          <target state="translated">一个 &lt;code&gt;MidiDevice&lt;/code&gt; 的可以打开和含蓄明确关闭为好。显式关闭通过调用&lt;a href=&quot;mididevice#open--&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;来完成，显式关闭通过在 &lt;code&gt;MidiDevice&lt;/code&gt; 实例上调用&lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;来完成。如果应用程序显式打开 &lt;code&gt;MidiDevice&lt;/code&gt; ，则必须显式关闭它以释放系统资源并使应用程序干净退出。隐式打开是通过调用&lt;a href=&quot;midisystem#getReceiver--&quot;&gt; &lt;code&gt;MidiSystem.getReceiver&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;midisystem#getTransmitter--&quot;&gt; &lt;code&gt;MidiSystem.getTransmitter&lt;/code&gt; &lt;/a&gt;来完成的。 &lt;code&gt;MidiSystem.getReceiver&lt;/code&gt; 和 &lt;code&gt;MidiSystem.getTransmitter&lt;/code&gt; 使用的 &lt;code&gt;MidiDevice&lt;/code&gt; 取决于实现，除非该属性 &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; 和 &lt;code&gt;javax.sound.midi.Transmitter&lt;/code&gt; （请参阅属性说明，以选择&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;MidiSystem&lt;/code&gt; 中的&lt;/a&gt;默认提供程序）。隐式打开的 &lt;code&gt;MidiDevice&lt;/code&gt; 通过关闭导致打开它的 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; 隐式关闭。如果应用程序获得了多个隐式打开的 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; ，则在关闭最后一个 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; 之后，将关闭设备。另一方面，调用 &lt;code&gt;getReceiver&lt;/code&gt; 或 &lt;code&gt;getTransmitter&lt;/code&gt; 直接在设备实例上打开不会隐式打开设备。关闭这些 &lt;code&gt;Transmitter&lt;/code&gt; 和 &lt;code&gt;Receiver&lt;/code&gt; 不会隐式关闭设备。要使用通过这种方式获得的 &lt;code&gt;Receiver&lt;/code&gt; 或 &lt;code&gt;Transmitter&lt;/code&gt; 的设备，必须显式打开和关闭该设备。</target>
        </trans-unit>
        <trans-unit id="e3efcb5be1434c81f03cbddbaadc4016017d3dd3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice&lt;/code&gt; includes a &lt;a href=&quot;mididevice.info&quot;&gt;&lt;code&gt;MidiDevice.Info&lt;/code&gt;&lt;/a&gt; object to provide manufacturer information and so on.</source>
          <target state="translated">甲 &lt;code&gt;MidiDevice&lt;/code&gt; 的包括&lt;a href=&quot;mididevice.info&quot;&gt; &lt;code&gt;MidiDevice.Info&lt;/code&gt; &lt;/a&gt;目的是提供制造商的信息等。</target>
        </trans-unit>
        <trans-unit id="7db816b29cf24e8a91f20dcd4cca5fcb5b1278eb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDevice&lt;/code&gt; includes a &lt;code&gt;&lt;a href=&quot;mididevice.info&quot;&gt;&lt;code&gt;MidiDevice.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object to provide manufacturer information and so on.</source>
          <target state="translated">甲 &lt;code&gt;MidiDevice&lt;/code&gt; 的包括 &lt;code&gt;&lt;a href=&quot;mididevice.info&quot;&gt;&lt;code&gt;MidiDevice.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 目的是提供制造商的信息等。</target>
        </trans-unit>
        <trans-unit id="8cc1fd3cea819e030e67804197f469d0190de70a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDeviceProvider&lt;/code&gt; is a factory or provider for a particular type of MIDI device.</source>
          <target state="translated">甲 &lt;code&gt;MidiDeviceProvider&lt;/code&gt; 是一个工厂或供应商为特定类型的MIDI设备的。</target>
        </trans-unit>
        <trans-unit id="22c2795e1420ab167287908c52a758f064a0385e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiDeviceProvider&lt;/code&gt; is a factory or provider for a particular type of MIDI device. This mechanism allows the implementation to determine how resources are managed in the creation and management of a device.</source>
          <target state="translated">甲 &lt;code&gt;MidiDeviceProvider&lt;/code&gt; 是一个工厂或供应商为特定类型的MIDI设备的。该机制允许实现确定在设备的创建和管理中如何管理资源。</target>
        </trans-unit>
        <trans-unit id="3a365e0072adf6018c7a45fe965c77b5ff34f79a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiFileFormat&lt;/code&gt; object can include a set of properties. A property is a pair of key and value: the key is of type &lt;code&gt;String&lt;/code&gt;, the associated property value is an arbitrary object. Properties specify additional informational meta data (like a author, or copyright). Properties are optional information, and file reader and file writer implementations are not required to provide or recognize properties.</source>
          <target state="translated">甲 &lt;code&gt;MidiFileFormat&lt;/code&gt; 对象可以包括一组属性。属性是键和值对：键的类型为 &lt;code&gt;String&lt;/code&gt; ，关联的属性值是任意对象。属性指定其他信息性元数据（例如作者或版权）。属性是可选信息，并且不需要文件读取器和文件写入器实现来提供或识别属性。</target>
        </trans-unit>
        <trans-unit id="02bac295f8f072ec44d74de766e4927dd0a110af" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiFileFormat&lt;/code&gt; object encapsulates a MIDI file's type, as well as its length and timing information.</source>
          <target state="translated">甲 &lt;code&gt;MidiFileFormat&lt;/code&gt; 对象封装了MIDI文件的类型，以及它的长度和定时信息。</target>
        </trans-unit>
        <trans-unit id="2b878e15bde87ac507d22902b909939ed90d36be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiFileReader&lt;/code&gt; supplies MIDI file-reading services.</source>
          <target state="translated">一个 &lt;code&gt;MidiFileReader&lt;/code&gt; 提供MIDI文件读取服务。</target>
        </trans-unit>
        <trans-unit id="63817d768f0fd5bd135044726715dc91b7d35f1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiFileReader&lt;/code&gt; supplies MIDI file-reading services. Classes implementing this interface can parse the format information from one or more types of MIDI file, and can produce a &lt;a href=&quot;../sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; object from files of these types.</source>
          <target state="translated">一个 &lt;code&gt;MidiFileReader&lt;/code&gt; 提供MIDI文件读取服务。实现此接口的类可以解析一种或多种类型的MIDI文件的格式信息，并可以从这些类型的文件中产生一个&lt;a href=&quot;../sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="18e0790864146b232d72e058bee3d2f1a5480e47" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiFileWriter&lt;/code&gt; supplies MIDI file-writing services.</source>
          <target state="translated">一个 &lt;code&gt;MidiFileWriter&lt;/code&gt; 提供MIDI文件写入服务。</target>
        </trans-unit>
        <trans-unit id="586a7aeb0cbf6524813db1bd1765bcd6b1133f75" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiFileWriter&lt;/code&gt; supplies MIDI file-writing services. Classes that implement this interface can write one or more types of MIDI file from a &lt;a href=&quot;../sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个 &lt;code&gt;MidiFileWriter&lt;/code&gt; 提供MIDI文件写入服务。实现此接口的类可以从&lt;a href=&quot;../sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;对象写入一种或多种类型的MIDI文件。</target>
        </trans-unit>
        <trans-unit id="f32314512dc1326f8c653bc76f3a7149e7754f8e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown when a requested MIDI component cannot be opened or created because it is unavailable.</source>
          <target state="translated">一个 &lt;code&gt;MidiUnavailableException&lt;/code&gt; 当请求的MIDI组件无法打开或创建的，因为它是不可被抛出。</target>
        </trans-unit>
        <trans-unit id="4da275a041db1ba3738a86b4858e949c177031ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown when a requested MIDI component cannot be opened or created because it is unavailable. This often occurs when a device is in use by another application. More generally, it can occur when there is a finite number of a certain kind of resource that can be used for some purpose, and all of them are already in use (perhaps all by this application). For an example of the latter case, see the &lt;a href=&quot;transmitter#setReceiver(javax.sound.midi.Receiver)&quot;&gt;&lt;code&gt;setReceiver&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Transmitter&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;MidiUnavailableException&lt;/code&gt; 当请求的MIDI组件无法打开或创建的，因为它是不可被抛出。当设备被另一个应用程序使用时，通常会发生这种情况。更一般而言，当有限数量的某种资源可以用于某些目的并且所有资源都已被使用时（可能全部由该应用程序使用），就会发生这种情况。有关后一种情况的示例，请参见 &lt;code&gt;Transmitter&lt;/code&gt; 的&lt;a href=&quot;transmitter#setReceiver(javax.sound.midi.Receiver)&quot;&gt; &lt;code&gt;setReceiver&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b7c94d4d663e27a735bb120381a0efbe34ba5992" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown when a requested MIDI component cannot be opened or created because it is unavailable. This often occurs when a device is in use by another application. More generally, it can occur when there is a finite number of a certain kind of resource that can be used for some purpose, and all of them are already in use (perhaps all by this application). For an example of the latter case, see the &lt;a href=&quot;transmitter#setReceiver-javax.sound.midi.Receiver-&quot;&gt;&lt;code&gt;setReceiver&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Transmitter&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;MidiUnavailableException&lt;/code&gt; 当请求的MIDI组件无法打开或创建的，因为它是不可被抛出。当设备被另一个应用程序使用时，通常会发生这种情况。更一般而言，当有限数量的某种资源可以用于某些目的并且所有资源都已经被使用时（可能全部由该应用程序使用），就会发生这种情况。有关后一种情况的示例，请参见 &lt;code&gt;Transmitter&lt;/code&gt; 的&lt;a href=&quot;transmitter#setReceiver-javax.sound.midi.Receiver-&quot;&gt; &lt;code&gt;setReceiver&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="7bd6145bc2699f35d65222d486204f21b8e857d2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; can only find one module with a given name. A &lt;code&gt;ModuleFinder&lt;/code&gt; that finds modules in a sequence of directories, for example, will locate the first occurrence of a module of a given name and will ignore other modules of that name that appear in directories later in the sequence.</source>
          <target state="translated">一个 &lt;code&gt;ModuleFinder&lt;/code&gt; 只能找到一个模块与给定的名称。例如，一个 &lt;code&gt;ModuleFinder&lt;/code&gt; 在目录序列中查找模块，它将找到给定名称的模块的第一个匹配项，并将忽略该名称的其他模块的出现，该模块出现在该序列的后面。</target>
        </trans-unit>
        <trans-unit id="151cc912e1882e06ada7b55608da3ce2c84a450c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; is not required to be thread safe.</source>
          <target state="translated">一个 &lt;code&gt;ModuleFinder&lt;/code&gt; 不需要线程安全的。</target>
        </trans-unit>
        <trans-unit id="520a6bd5f2753ba51b6f22de28a264c06618cd0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; provides a consistent view of the modules that it locates. If &lt;a href=&quot;#findAll()&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; is invoked several times then it will return the same (equals) result each time. For each &lt;code&gt;
 ModuleReference&lt;/code&gt; element in the returned set then it is guaranteed that &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; will locate the &lt;code&gt;ModuleReference&lt;/code&gt; if invoked to find that module.</source>
          <target state="translated">甲 &lt;code&gt;ModuleFinder&lt;/code&gt; 提供它找到模块的一致视图。如果&lt;a href=&quot;#findAll()&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; &lt;/a&gt;被多次调用，则每次将返回相同（相等）的结果。对于每个 &lt;code&gt; ModuleReference&lt;/code&gt; 在返回set那么，元件可以保证&lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;将定位 &lt;code&gt;ModuleReference&lt;/code&gt; 如果调用找到该模块。</target>
        </trans-unit>
        <trans-unit id="97b1937e314095f2bf769efa2e7a74f81112e13c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; provides a consistent view of the modules that it locates. If &lt;code&gt;find&lt;/code&gt; is invoked several times to locate the same module (by name) then it will return the same result each time. If a module is located then it is guaranteed to be a member of the set of modules returned by the &lt;a href=&quot;#findAll()&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">甲 &lt;code&gt;ModuleFinder&lt;/code&gt; 提供它找到模块的一致视图。如果多次调用 &lt;code&gt;find&lt;/code&gt; 来查找同一模块（按名称），则每次它将返回相同的结果。如果找到模块，则可以保证它是&lt;a href=&quot;#findAll()&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; &lt;/a&gt;方法返回的模块集合的成员。</target>
        </trans-unit>
        <trans-unit id="de8e7a181646738ad9cf4dd1d0b42aef252a897e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; that composes a sequence of module finders</source>
          <target state="translated">甲 &lt;code&gt;ModuleFinder&lt;/code&gt; 对构成模块发现者的序列</target>
        </trans-unit>
        <trans-unit id="67f4a0df08a8d45867ab49b2d4ff47b27a22e8a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; that locates modules on the file system</source>
          <target state="translated">在文件系统上查找模块的 &lt;code&gt;ModuleFinder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d0335579dc719decbc51f0f8113cda4f691e6c0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleFinder&lt;/code&gt; that locates the system modules</source>
          <target state="translated">甲 &lt;code&gt;ModuleFinder&lt;/code&gt; 用于定位系统模块</target>
        </trans-unit>
        <trans-unit id="b76309464d432cccc5060cc8cb02e6a531a9c67a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleReader&lt;/code&gt; implementation may require permissions to access resources in the module. Consequently the &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#open(java.lang.String)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#read(java.lang.String)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#list()&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;
 SecurityException&lt;/code&gt; if access is denied by the security manager.</source>
          <target state="translated">一个 &lt;code&gt;ModuleReader&lt;/code&gt; 实现可能需要在模块中的权限来访问资源。因此，如果安全管理器拒绝访问，则&lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#open(java.lang.String)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#read(java.lang.String)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#list()&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;方法可能会引发 &lt;code&gt; SecurityException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af26778fbff6483aeeddbb472619832eb42965da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleReader&lt;/code&gt; is &lt;a href=&quot;modulereference#open()&quot;&gt;open&lt;/a&gt; upon creation and is closed by invoking the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Failure to close a module reader may result in a resource leak. The &lt;code&gt;
 try-with-resources&lt;/code&gt; statement provides a useful construct to ensure that module readers are closed.</source>
          <target state="translated">一个 &lt;code&gt;ModuleReader&lt;/code&gt; 是&lt;a href=&quot;modulereference#open()&quot;&gt;开&lt;/a&gt;在创建并通过调用关闭&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法。无法关闭模块读取器可能会导致资源泄漏。在 &lt;code&gt; try-with-resources&lt;/code&gt; 语句提供了一个有用的结构，以确保模块的读者被关闭。</target>
        </trans-unit>
        <trans-unit id="3ee49b131945159b783b1e371edebb40a8b5fa3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModuleReader&lt;/code&gt; to read the module</source>
          <target state="translated">一个 &lt;code&gt;ModuleReader&lt;/code&gt; 来读取模块</target>
        </trans-unit>
        <trans-unit id="9543d1e26988d85e148c57ef600ad6d84534e5ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MouseEvent&lt;/code&gt; object is also passed to every &lt;code&gt;MouseMotionListener&lt;/code&gt; or &lt;code&gt;MouseMotionAdapter&lt;/code&gt; object which is registered to receive mouse motion events using the component's &lt;code&gt;addMouseMotionListener&lt;/code&gt; method. (&lt;code&gt;MouseMotionAdapter&lt;/code&gt; objects implement the &lt;code&gt;MouseMotionListener&lt;/code&gt; interface.) Each such listener object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse motion event.</source>
          <target state="translated">甲 &lt;code&gt;MouseEvent&lt;/code&gt; 对象也被传递到每一个 &lt;code&gt;MouseMotionListener&lt;/code&gt; 或 &lt;code&gt;MouseMotionAdapter&lt;/code&gt; 其被注册为接收使用组件的鼠标移动事件对象 &lt;code&gt;addMouseMotionListener&lt;/code&gt; 方法。 （ &lt;code&gt;MouseMotionAdapter&lt;/code&gt; 对象实现 &lt;code&gt;MouseMotionListener&lt;/code&gt; 接口。）每个这样的侦听器对象都获取一个包含鼠标移动事件的 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7042b6b3daa7338343941410c3d6d8af24662b2d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MouseEvent&lt;/code&gt; object is passed to every &lt;code&gt;MouseListener&lt;/code&gt; or &lt;code&gt;MouseAdapter&lt;/code&gt; object which is registered to receive the &quot;interesting&quot; mouse events using the component's &lt;code&gt;addMouseListener&lt;/code&gt; method. (&lt;code&gt;MouseAdapter&lt;/code&gt; objects implement the &lt;code&gt;MouseListener&lt;/code&gt; interface.) Each such listener object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse event.</source>
          <target state="translated">一个 &lt;code&gt;MouseEvent&lt;/code&gt; 对象传递给每个 &lt;code&gt;MouseListener&lt;/code&gt; 或 &lt;code&gt;MouseAdapter&lt;/code&gt; 对象，该对象已注册，可以使用组件的 &lt;code&gt;addMouseListener&lt;/code&gt; 方法接收&amp;ldquo;有趣的&amp;rdquo;鼠标事件。（ &lt;code&gt;MouseAdapter&lt;/code&gt; 对象实现 &lt;code&gt;MouseListener&lt;/code&gt; 接口。）每个此类侦听器对象都获取一个包含Mouse事件的 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cccb397dcd14457d099ecaa7105d1f34c6f009b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MouseListener&lt;/code&gt; object is registered via &lt;code&gt;addMouseListener&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;MouseListener&lt;/code&gt; 对象通过注册 &lt;code&gt;addMouseListener&lt;/code&gt; 将。</target>
        </trans-unit>
        <trans-unit id="9ef9a9409a13d087d6ca94c2dd527fd7bcfe8f57" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MouseMotionListener&lt;/code&gt; object is registered via &lt;code&gt;addMouseMotionListener&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;addMouseMotionListener&lt;/code&gt; 注册一个 &lt;code&gt;MouseMotionListener&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="fa4ce636c398e062ad05ccc33de8832fe91cc03c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MouseWheelListener&lt;/code&gt; object is registered via &lt;code&gt;addMouseWheelListener&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;addMouseWheelListener&lt;/code&gt; 注册一个 &lt;code&gt;MouseWheelListener&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f288774a826422b9a89638b2ddfd02698e03d33c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MutableCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target variable behaves like an ordinary field.</source>
          <target state="translated">甲 &lt;code&gt;MutableCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标变量的行为像一个普通的字段。</target>
        </trans-unit>
        <trans-unit id="97bd9615782b9cae8342b464551053132d8a5c9d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MutableCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target variable behaves like an ordinary field. An &lt;code&gt;invokedynamic&lt;/code&gt; instruction linked to a &lt;code&gt;MutableCallSite&lt;/code&gt; delegates all calls to the site's current target. The &lt;a href=&quot;callsite#dynamicInvoker()&quot;&gt;dynamic invoker&lt;/a&gt; of a mutable call site also delegates each call to the site's current target.</source>
          <target state="translated">甲 &lt;code&gt;MutableCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标变量的行为像一个普通的字段。链接到 &lt;code&gt;MutableCallSite&lt;/code&gt; 的 &lt;code&gt;invokedynamic&lt;/code&gt; 指令将所有调用委派给站点的当前目标。可变呼叫站点的&lt;a href=&quot;callsite#dynamicInvoker()&quot;&gt;动态调用程序&lt;/a&gt;还将每个呼叫委派给站点的当前目标。</target>
        </trans-unit>
        <trans-unit id="7dbbbebff1a773ccfef19e1f057066dee938b48b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MutableCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target variable behaves like an ordinary field. An &lt;code&gt;invokedynamic&lt;/code&gt; instruction linked to a &lt;code&gt;MutableCallSite&lt;/code&gt; delegates all calls to the site's current target. The &lt;a href=&quot;callsite#dynamicInvoker--&quot;&gt;dynamic invoker&lt;/a&gt; of a mutable call site also delegates each call to the site's current target.</source>
          <target state="translated">甲 &lt;code&gt;MutableCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标变量的行为像一个普通的字段。链接到 &lt;code&gt;MutableCallSite&lt;/code&gt; 的 &lt;code&gt;invokedynamic&lt;/code&gt; 指令将所有调用委派给站点的当前目标。可变呼叫站点的&lt;a href=&quot;callsite#dynamicInvoker--&quot;&gt;动态调用程序&lt;/a&gt;还将每个呼叫委派给站点的当前目标。</target>
        </trans-unit>
        <trans-unit id="ddea2e9580b4e5b08cf0cb2cef7357024c227bdd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Name&lt;/code&gt; parameter passed to any method is owned by the caller. The service provider will not modify the object or keep a reference to it. A &lt;code&gt;ResolveResult&lt;/code&gt; object returned by any method is owned by the caller. The caller may subsequently modify it; the service provider may not.</source>
          <target state="translated">一个 &lt;code&gt;Name&lt;/code&gt; 传递给任何方法的参数由调用者所有。服务提供者将不会修改该对象或保留对其的引用。一个 &lt;code&gt;ResolveResult&lt;/code&gt; 任何方法返回的对象是通过调用者所有。调用者可以随后对其进行修改；服务提供商可能不会。</target>
        </trans-unit>
        <trans-unit id="f35879cc18f0c6f1e6c601de043d035821ee29c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Name&lt;/code&gt; parameter passed to any method of the &lt;code&gt;Context&lt;/code&gt; interface or one of its subinterfaces will not be modified by the service provider. The service provider may keep a reference to it for the duration of the operation, including any enumeration of the method's results and the processing of any referrals generated. The caller should not modify the object during this time. A &lt;code&gt;Name&lt;/code&gt; returned by any such method is owned by the caller. The caller may subsequently modify it; the service provider may not.</source>
          <target state="translated">甲 &lt;code&gt;Name&lt;/code&gt; 传递到的任何方法参数 &lt;code&gt;Context&lt;/code&gt; 接口或其子接口之一将不会由服务提供商进行修改。服务提供商可以在操作期间保留对它的引用，包括方法结果的任何枚举和所生成的任何引用的处理。在此期间，调用方不应修改该对象。一个 &lt;code&gt;Name&lt;/code&gt; 返回任何这样的方法被调用者所有。调用者可以随后对其进行修改；服务提供商可能不会。</target>
        </trans-unit>
        <trans-unit id="1484e0dfd575a64d5fdcfe553e17b7f0c185a086" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NamedNodeMap&lt;/code&gt; containing the attributes of this node (if it is an &lt;code&gt;Element&lt;/code&gt;) or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">甲 &lt;code&gt;NamedNodeMap&lt;/code&gt; 含有此节点的属性（如果它是一个 &lt;code&gt;Element&lt;/code&gt; ）或 &lt;code&gt;null&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="a29ed6eaa294500c0f869a620c135ed5c065d755" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NamedNodeMap&lt;/code&gt; containing the general entities, both external and internal, declared in the DTD.</source>
          <target state="translated">一个 &lt;code&gt;NamedNodeMap&lt;/code&gt; ,包含在DTD中声明的常规实体，包括外部实体和内部实体。</target>
        </trans-unit>
        <trans-unit id="00195fef233e2a80558c312ad3d6dba296e81674" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NamedNodeMap&lt;/code&gt; containing the general entities, both external and internal, declared in the DTD. Parameter entities are not contained. Duplicates are discarded. For example in:</source>
          <target state="translated">一个 &lt;code&gt;NamedNodeMap&lt;/code&gt; ,包含在DTD中声明的常规实体，包括外部实体和内部实体。不包含参数实体。重复项将被丢弃。例如在：</target>
        </trans-unit>
        <trans-unit id="73aa833cac5a7f47b147b0a4d4d4eb73d37289e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NamedNodeMap&lt;/code&gt; containing the notations declared in the DTD.</source>
          <target state="translated">一个 &lt;code&gt;NamedNodeMap&lt;/code&gt; ,包含在DTD中声明的符号。</target>
        </trans-unit>
        <trans-unit id="c5b840d837bc263d4d3242dc37a8cc6a92576537" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NamedNodeMap&lt;/code&gt; containing the notations declared in the DTD. Duplicates are discarded. Every node in this map also implements the &lt;code&gt;Notation&lt;/code&gt; interface.</source>
          <target state="translated">一个 &lt;code&gt;NamedNodeMap&lt;/code&gt; ,包含在DTD中声明的符号。重复项将被丢弃。该映射中的每个节点还实现了 &lt;code&gt;Notation&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="8473a973a44184ea3d9b6302ea62f682af8b1f55" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NavigableMap&lt;/code&gt; may be accessed and traversed in either ascending or descending key order. The &lt;a href=&quot;#descendingMap()&quot;&gt;&lt;code&gt;descendingMap()&lt;/code&gt;&lt;/a&gt; method returns a view of the map with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. Methods &lt;a href=&quot;#subMap(K,boolean,K,boolean)&quot;&gt;&lt;code&gt;subMap(K, boolean, K, boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#headMap(K,boolean)&quot;&gt;&lt;code&gt;headMap(K, boolean)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tailMap(K,boolean)&quot;&gt;&lt;code&gt;tailMap(K, boolean)&lt;/code&gt;&lt;/a&gt; differ from the like-named &lt;code&gt;SortedMap&lt;/code&gt; methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Submaps of any &lt;code&gt;NavigableMap&lt;/code&gt; must implement the &lt;code&gt;NavigableMap&lt;/code&gt; interface.</source>
          <target state="translated">甲 &lt;code&gt;NavigableMap&lt;/code&gt; 的可以被访问并以升序或降序键顺序遍历。的&lt;a href=&quot;#descendingMap()&quot;&gt; &lt;code&gt;descendingMap()&lt;/code&gt; &lt;/a&gt;方法返回与倒所有关系和定向方法感官的地图的图。升序操作和视图的性能可能比降序操作和视图的性能更快。方法&lt;a href=&quot;#subMap(K,boolean,K,boolean)&quot;&gt; &lt;code&gt;subMap(K, boolean, K, boolean)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#headMap(K,boolean)&quot;&gt; &lt;code&gt;headMap(K, boolean)&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#tailMap(K,boolean)&quot;&gt; &lt;code&gt;tailMap(K, boolean)&lt;/code&gt; &lt;/a&gt;从名称相似的不同 &lt;code&gt;SortedMap&lt;/code&gt; 在接受描述的下限和上限是否是包含性的抗排斥附加参数的方法。任何 &lt;code&gt;NavigableMap&lt;/code&gt; 的子图都必须实现 &lt;code&gt;NavigableMap&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="26ae98ff07d84a581b94b546be70a1c3091b0550" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NavigableMap&lt;/code&gt; may be accessed and traversed in either ascending or descending key order. The &lt;code&gt;descendingMap&lt;/code&gt; method returns a view of the map with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. Methods &lt;code&gt;subMap&lt;/code&gt;, &lt;code&gt;headMap&lt;/code&gt;, and &lt;code&gt;tailMap&lt;/code&gt; differ from the like-named &lt;code&gt;SortedMap&lt;/code&gt; methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Submaps of any &lt;code&gt;NavigableMap&lt;/code&gt; must implement the &lt;code&gt;NavigableMap&lt;/code&gt; interface.</source>
          <target state="translated">甲 &lt;code&gt;NavigableMap&lt;/code&gt; 的可以被访问并以升序或降序键顺序遍历。该 &lt;code&gt;descendingMap&lt;/code&gt; 方法返回的反转所有关系和定向方法感官的地图的图。上升操作和视图的性能可能比下降操作和视图的性能更快。方法 &lt;code&gt;subMap&lt;/code&gt; ， &lt;code&gt;headMap&lt;/code&gt; 和 &lt;code&gt;tailMap&lt;/code&gt; 从名称相似的不同 &lt;code&gt;SortedMap&lt;/code&gt; 在接受描述的下限和上限是否是包含性的抗排斥附加参数的方法。任何 &lt;code&gt;NavigableMap&lt;/code&gt; 的子图都必须实现 &lt;code&gt;NavigableMap&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="3024e348667f5731d8014b894f6d9fe0d9449b55" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NavigableSet&lt;/code&gt; may be accessed and traversed in either ascending or descending order. The &lt;a href=&quot;#descendingSet()&quot;&gt;&lt;code&gt;descendingSet()&lt;/code&gt;&lt;/a&gt; method returns a view of the set with the senses of all relational and directional methods inverted. The performance of ascending operations and views is likely to be faster than that of descending ones. This interface additionally defines methods &lt;a href=&quot;#pollFirst()&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pollLast()&quot;&gt;&lt;code&gt;pollLast()&lt;/code&gt;&lt;/a&gt; that return and remove the lowest and highest element, if one exists, else returning &lt;code&gt;null&lt;/code&gt;. Methods &lt;a href=&quot;#subSet(E,boolean,E,boolean)&quot;&gt;&lt;code&gt;subSet(E, boolean, E, boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#headSet(E,boolean)&quot;&gt;&lt;code&gt;headSet(E, boolean)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tailSet(E,boolean)&quot;&gt;&lt;code&gt;tailSet(E, boolean)&lt;/code&gt;&lt;/a&gt; differ from the like-named &lt;code&gt;SortedSet&lt;/code&gt; methods in accepting additional arguments describing whether lower and upper bounds are inclusive versus exclusive. Subsets of any &lt;code&gt;NavigableSet&lt;/code&gt; must implement the &lt;code&gt;NavigableSet&lt;/code&gt; interface.</source>
          <target state="translated">甲 &lt;code&gt;NavigableSet&lt;/code&gt; 可以被访问并以升序或降序顺序遍历。所述&lt;a href=&quot;#descendingSet()&quot;&gt; &lt;code&gt;descendingSet()&lt;/code&gt; &lt;/a&gt;方法返回与集合的倒所有关系和定向方法感官的视图。升序操作和视图的性能可能比降序操作和视图的性能更快。此接口还定义了方法&lt;a href=&quot;#pollFirst()&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#pollLast()&quot;&gt; &lt;code&gt;pollLast()&lt;/code&gt; &lt;/a&gt;，它们返回并除去最低和最高元素（如果存在），否则返回 &lt;code&gt;null&lt;/code&gt; 。方法&lt;a href=&quot;#subSet(E,boolean,E,boolean)&quot;&gt; &lt;code&gt;subSet(E, boolean, E, boolean)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#headSet(E,boolean)&quot;&gt; &lt;code&gt;headSet(E, boolean)&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#tailSet(E,boolean)&quot;&gt; &lt;code&gt;tailSet(E, boolean)&lt;/code&gt; &lt;/a&gt;从名称相似的不同 &lt;code&gt;SortedSet&lt;/code&gt; 接受其他参数的方法，这些参数描述了下限和上限是包含式还是排除式。任何 &lt;code&gt;NavigableSet&lt;/code&gt; 的子集都必须实现 &lt;code&gt;NavigableSet&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="c66d9145f89916cb5ca92325d0da454b29a1f136" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NetworkInterface&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if there is no network interface with the specified IP address.</source>
          <target state="translated">一个 &lt;code&gt;NetworkInterface&lt;/code&gt; 的或 &lt;code&gt;null&lt;/code&gt; ，如果有指定IP地址的网络接口。</target>
        </trans-unit>
        <trans-unit id="79e6780e84690e8bd58f9e8be9004880b83eab6d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NetworkInterface&lt;/code&gt; with the specified name, or &lt;code&gt;null&lt;/code&gt; if there is no network interface with the specified name.</source>
          <target state="translated">一个 &lt;code&gt;NetworkInterface&lt;/code&gt; 的具有指定名称，或 &lt;code&gt;null&lt;/code&gt; 如果不存在具有指定名称的网络接口。</target>
        </trans-unit>
        <trans-unit id="47734803ceb6e3dd1d15a3ef0495e65125bb9572" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NoSuchMechanismException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;NoSuchMechanismException&lt;/code&gt; to get thrown.</source>
          <target state="translated">一个 &lt;code&gt;NoSuchMechanismException&lt;/code&gt; 可以包含一个原因：导致此另一个抛出 &lt;code&gt;NoSuchMechanismException&lt;/code&gt; 得到抛出。</target>
        </trans-unit>
        <trans-unit id="22ec30ce1b97673fedafc6ce3a5d02e2fc789696" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NoSuchObjectException&lt;/code&gt; is thrown if an attempt is made to invoke a method on an object that no longer exists in the remote virtual machine.</source>
          <target state="translated">甲 &lt;code&gt;NoSuchObjectException&lt;/code&gt; 如果试图调用的方法的对象，该对象不再在远程虚拟机存在于被抛出。</target>
        </trans-unit>
        <trans-unit id="a555720718d66c0baeb281fa2e824e7c3a711c3b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NoSuchObjectException&lt;/code&gt; is thrown if an attempt is made to invoke a method on an object that no longer exists in the remote virtual machine. If a &lt;code&gt;NoSuchObjectException&lt;/code&gt; occurs attempting to invoke a method on a remote object, the call may be retransmitted and still preserve RMI's &quot;at most once&quot; call semantics. A &lt;code&gt;NoSuchObjectException&lt;/code&gt; is also thrown by the method &lt;code&gt;java.rmi.server.RemoteObject.toStub&lt;/code&gt; and by the &lt;code&gt;unexportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; and</source>
          <target state="translated">甲 &lt;code&gt;NoSuchObjectException&lt;/code&gt; 如果试图调用的方法的对象，该对象不再在远程虚拟机存在于被抛出。如果发生 &lt;code&gt;NoSuchObjectException&lt;/code&gt; 尝试在远程对象上调用方法，则该调用可以重新传输，并且仍保留RMI的&amp;ldquo;最多一次&amp;rdquo;调用语义。甲 &lt;code&gt;NoSuchObjectException&lt;/code&gt; 也由方法引发 &lt;code&gt;java.rmi.server.RemoteObject.toStub&lt;/code&gt; 和由 &lt;code&gt;unexportObject&lt;/code&gt; 方法 &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; 和 &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; 中和</target>
        </trans-unit>
        <trans-unit id="78ff662ce60349b988cae8bc43b4f7d139713630" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Node&lt;/code&gt; (of any type) with the specified &lt;code&gt;nodeName&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if it does not identify any node in this map.</source>
          <target state="translated">甲 &lt;code&gt;Node&lt;/code&gt; 与指定的（任何类型） &lt;code&gt;nodeName&lt;/code&gt; ，或 &lt;code&gt;null&lt;/code&gt; ，如果它不识别在该映射中的任何节点。</target>
        </trans-unit>
        <trans-unit id="0d617f4ce51e8d2626e03760aa9fddaca1b90d4a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Node&lt;/code&gt; (of any type) with the specified local name and namespace URI, or &lt;code&gt;null&lt;/code&gt; if they do not identify any node in this map.</source>
          <target state="translated">一个 &lt;code&gt;Node&lt;/code&gt; （任何类型）与指定的本地名称和命名空间URI，或者 &lt;code&gt;null&lt;/code&gt; ，如果他们不认同这个地图的任何节点。</target>
        </trans-unit>
        <trans-unit id="8905f541ed33bf537e53361b7e5249ead89ea651" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NodeList&lt;/code&gt; that contains all children of this node.</source>
          <target state="translated">一个包含该节点所有子级的 &lt;code&gt;NodeList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ee22797d9d162e4a5c835020982a08af19e947a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NodeList&lt;/code&gt; that contains all children of this node. If there are no children, this is a &lt;code&gt;NodeList&lt;/code&gt; containing no nodes.</source>
          <target state="translated">一个包含该节点所有子级的 &lt;code&gt;NodeList&lt;/code&gt; 。如果没有子节点，则这是一个不包含节点的 &lt;code&gt;NodeList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78f8655fafea08a38349d6c4b99e445e18f24366" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NotBoundException&lt;/code&gt; is thrown if an attempt is made to lookup or unbind in the registry a name that has no associated binding.</source>
          <target state="translated">一个 &lt;code&gt;NotBoundException&lt;/code&gt; 如果试图查找或取消绑定在注册表中没有相关绑定的名称被抛出。</target>
        </trans-unit>
        <trans-unit id="f905cd07907538b4a504bef2446ba3f796141db0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Notation&lt;/code&gt; node does not have any parent.</source>
          <target state="translated">一个 &lt;code&gt;Notation&lt;/code&gt; 节点没有任何父节点。</target>
        </trans-unit>
        <trans-unit id="6fb26775a9fdcc1c3bf7e667ca62b4a0e3847451" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NotificationResult&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;NotificationResult&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="499bbbe749d1a8fe35d2d63486ceb566b6f99956" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NullPointerException&lt;/code&gt; is thrown if &lt;code&gt;nsContext&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;NullPointerException&lt;/code&gt; 异常，如果被抛出 &lt;code&gt;nsContext&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a241740ed76ba1500385e19d2672c53d6568516" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NullPointerException&lt;/code&gt; is thrown if &lt;code&gt;resolver&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;NullPointerException&lt;/code&gt; 异常，如果被抛出 &lt;code&gt;resolver&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="945c414a6ef8a9eb9ea267fe5c9e9ffbea32a062" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; parsed from the string.</source>
          <target state="translated">一个 &lt;code&gt;Number&lt;/code&gt; 从字符串进行解析。</target>
        </trans-unit>
        <trans-unit id="07267f60c29eb956490162424a03b8eaa0ddf249" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Number&lt;/code&gt; parsed from the string. In case of error, returns null.</source>
          <target state="translated">一个 &lt;code&gt;Number&lt;/code&gt; 从字符串进行解析。如果发生错误，则返回null。</target>
        </trans-unit>
        <trans-unit id="1af1d23d0fb47c7b520a040ff295b3966f9f68e5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NumberFormat&lt;/code&gt; instance for compact number formatting</source>
          <target state="translated">一个 &lt;code&gt;NumberFormat&lt;/code&gt; 的紧凑型数字格式实例</target>
        </trans-unit>
        <trans-unit id="9f4696afd159bc736f50e3e0bf524a48873d8bd0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NumericShaper.Range&lt;/code&gt; represents a Unicode range of a script having its own decimal digits.</source>
          <target state="translated">一个 &lt;code&gt;NumericShaper.Range&lt;/code&gt; 代表的具有自己的十进制数字的脚本的Unicode范围。</target>
        </trans-unit>
        <trans-unit id="56e5b0ad5467779fba265ba1ef5ecb4b612cbe0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NumericShaper.Range&lt;/code&gt; represents a Unicode range of a script having its own decimal digits. For example, the &lt;a href=&quot;#THAI&quot;&gt;&lt;code&gt;THAI&lt;/code&gt;&lt;/a&gt; range has the Thai digits, THAI DIGIT ZERO (U+0E50) to THAI DIGIT NINE (U+0E59).</source>
          <target state="translated">一个 &lt;code&gt;NumericShaper.Range&lt;/code&gt; 代表的具有自己的十进制数字的脚本的Unicode范围。例如，&lt;a href=&quot;#THAI&quot;&gt; &lt;code&gt;THAI&lt;/code&gt; &lt;/a&gt;范围的泰文数字为THAI DIGIT ZERO（U + 0E50）至THAI DIGIT NINE（U + 0E59）。</target>
        </trans-unit>
        <trans-unit id="736e9e890567a024806b1d5102a661882d8bb329" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PGPData&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;keyinfofactory#newPGPData(byte%5B%5D)&quot;&gt;&lt;code&gt;newPGPData&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class, and passing it &lt;code&gt;byte&lt;/code&gt; arrays representing the contents of the PGP public key identifier and/or PGP key material packet, and an optional list of elements from an external namespace.</source>
          <target state="translated">甲 &lt;code&gt;PGPData&lt;/code&gt; 实例可以通过调用的一个来创建&lt;a href=&quot;keyinfofactory#newPGPData(byte%5B%5D)&quot;&gt; &lt;code&gt;newPGPData&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt;类，并通过它 &lt;code&gt;byte&lt;/code&gt; 从外部命名空间表示PGP公钥标识符和/或PGP密钥材料包，和元素的可选列表的内容阵列。</target>
        </trans-unit>
        <trans-unit id="8a2e68373d50ce1993a491419ed8183f080a7dde" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; for checking the revocation status of certificates with the PKIX algorithm.</source>
          <target state="translated">一 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 检查与PKIX算法证书的吊销状态。</target>
        </trans-unit>
        <trans-unit id="79e2a20db8442012e6eb5a55cd86128049dfa98d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; may be called multiple times on successive certificates in a certification path. Concrete subclasses are expected to maintain any internal state that may be necessary to check successive certificates. The &lt;a href=&quot;#init(boolean)&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; method is used to initialize the internal state of the checker so that the certificates of a new certification path may be checked. A stateful implementation &lt;b&gt;must&lt;/b&gt; override the &lt;a href=&quot;#clone()&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; method if necessary in order to allow a PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; to efficiently backtrack and try other paths. In these situations, the &lt;code&gt;CertPathBuilder&lt;/code&gt; is able to restore prior path validation states by restoring the cloned &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s.</source>
          <target state="translated">一 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 可以在证书路径连续证书多次调用。期望具体的子类保持检查连续证书所必需的任何内部状态。该&lt;a href=&quot;#init(boolean)&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt;方法用于初始化检验器的内部状态，以使一个新的证书路径的证书可以被检查。有状态的实现&lt;b&gt;必须&lt;/b&gt;在必要时重写&lt;a href=&quot;#clone()&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;方法，以允许PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; 有效地回溯并尝试其他路径。在这些情况下， &lt;code&gt;CertPathBuilder&lt;/code&gt; 能够通过还原克隆的 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 来还原先前的路径验证状态。</target>
        </trans-unit>
        <trans-unit id="65b6019c9f6b36bf4a4374f0323b98058d8f83d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; may be called multiple times on successive certificates in a certification path. Concrete subclasses are expected to maintain any internal state that may be necessary to check successive certificates. The &lt;a href=&quot;pkixcertpathchecker#init-boolean-&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; method is used to initialize the internal state of the checker so that the certificates of a new certification path may be checked. A stateful implementation &lt;b&gt;must&lt;/b&gt; override the &lt;a href=&quot;pkixcertpathchecker#clone--&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt; method if necessary in order to allow a PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; to efficiently backtrack and try other paths. In these situations, the &lt;code&gt;CertPathBuilder&lt;/code&gt; is able to restore prior path validation states by restoring the cloned &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s.</source>
          <target state="translated">一 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 可以在证书路径连续证书多次调用。期望具体的子类保持检查连续证书所必需的任何内部状态。该&lt;a href=&quot;pkixcertpathchecker#init-boolean-&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt;方法用于初始化检验器的内部状态，以使一个新的证书路径的证书可以被检查。有状态的实现&lt;b&gt;必须&lt;/b&gt;在必要时重写&lt;a href=&quot;pkixcertpathchecker#clone--&quot;&gt; &lt;code&gt;clone&lt;/code&gt; &lt;/a&gt;方法，以允许PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; 有效地回溯并尝试其他路径。在这些情况下， &lt;code&gt;CertPathBuilder&lt;/code&gt; 能够通过还原克隆的 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 来还原先前的路径验证状态。</target>
        </trans-unit>
        <trans-unit id="e2aa3cb94194902df1ddaeffd50bf581104fa46a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; checks the revocation status of certificates with the Online Certificate Status Protocol (OCSP) or Certificate Revocation Lists (CRLs). OCSP is described in RFC 2560 and is a network protocol for determining the status of a certificate. A CRL is a time-stamped list identifying revoked certificates, and RFC 5280 describes an algorithm for determining the revocation status of certificates using CRLs.</source>
          <target state="translated">一个 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 检查与在线证书状态协议（OCSP）或证书吊销列表（CRL）证书的吊销状态。 OCSP在RFC 2560中进行了描述，它是用于确定证书状态的网络协议。 CRL是带有时间戳的列表，用于标识已撤销的证书，而RFC 5280描述了一种用于使用CRL确定证书的撤销状态的算法。</target>
        </trans-unit>
        <trans-unit id="b291c2578ded61f2aca8159ee09dde07c31f0c1d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is obtained by calling the &lt;a href=&quot;certpathvalidator#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker&lt;/code&gt;&lt;/a&gt; method of a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;. Additional parameters and options specific to revocation can be set (by calling the &lt;a href=&quot;#setOcspResponder(java.net.URI)&quot;&gt;&lt;code&gt;setOcspResponder&lt;/code&gt;&lt;/a&gt; method for instance). The &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is added to a &lt;code&gt;PKIXParameters&lt;/code&gt; object using the &lt;a href=&quot;pkixparameters#addCertPathChecker(java.security.cert.PKIXCertPathChecker)&quot;&gt;&lt;code&gt;addCertPathChecker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#setCertPathCheckers(java.util.List)&quot;&gt;&lt;code&gt;setCertPathCheckers&lt;/code&gt;&lt;/a&gt; method, and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to the &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method of a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;. When supplying a revocation checker in this manner, it will be used to check revocation irrespective of the setting of the &lt;a href=&quot;pkixparameters#isRevocationEnabled()&quot;&gt;&lt;code&gt;RevocationEnabled&lt;/code&gt;&lt;/a&gt; flag. Similarly, a &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; may be added to a &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; object for use with a PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 通过调用获得&lt;a href=&quot;certpathvalidator#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker&lt;/code&gt; &lt;/a&gt;一个PKIX的方法 &lt;code&gt;CertPathValidator&lt;/code&gt; 。可以设置特定于吊销的其他参数和选项（例如，通过调用&lt;a href=&quot;#setOcspResponder(java.net.URI)&quot;&gt; &lt;code&gt;setOcspResponder&lt;/code&gt; &lt;/a&gt;方法）。使用&lt;a href=&quot;pkixparameters#addCertPathChecker(java.security.cert.PKIXCertPathChecker)&quot;&gt; &lt;code&gt;addCertPathChecker&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;pkixparameters#setCertPathCheckers(java.util.List)&quot;&gt; &lt;code&gt;setCertPathCheckers&lt;/code&gt; &lt;/a&gt;方法将 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 添加到 &lt;code&gt;PKIXParameters&lt;/code&gt; 对象，然后将 &lt;code&gt;PKIXParameters&lt;/code&gt; 与要验证的 &lt;code&gt;CertPath&lt;/code&gt; 一起传递给PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 的&lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt;方法。以这种方式提供吊销检查器时，无论&lt;a href=&quot;pkixparameters#isRevocationEnabled()&quot;&gt; &lt;code&gt;RevocationEnabled&lt;/code&gt; &lt;/a&gt;标志的设置如何，都将使用它来检查吊销。类似地， &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 可被添加到一个 &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; 对象用于与PKIX使用 &lt;code&gt;CertPathBuilder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="968991d1ecee5d9aa89b891f287de7d1a71a88d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is obtained by calling the &lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker&lt;/code&gt;&lt;/a&gt; method of a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;. Additional parameters and options specific to revocation can be set (by calling the &lt;a href=&quot;pkixrevocationchecker#setOcspResponder-java.net.URI-&quot;&gt;&lt;code&gt;setOcspResponder&lt;/code&gt;&lt;/a&gt; method for instance). The &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is added to a &lt;code&gt;PKIXParameters&lt;/code&gt; object using the &lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt;&lt;code&gt;addCertPathChecker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt;&lt;code&gt;setCertPathCheckers&lt;/code&gt;&lt;/a&gt; method, and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to the &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method of a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;. When supplying a revocation checker in this manner, it will be used to check revocation irrespective of the setting of the &lt;a href=&quot;pkixparameters#isRevocationEnabled--&quot;&gt;&lt;code&gt;RevocationEnabled&lt;/code&gt;&lt;/a&gt; flag. Similarly, a &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; may be added to a &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; object for use with a PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 通过调用获得&lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker&lt;/code&gt; &lt;/a&gt;一个PKIX的方法 &lt;code&gt;CertPathValidator&lt;/code&gt; 。可以设置特定于吊销的其他参数和选项（例如，通过调用&lt;a href=&quot;pkixrevocationchecker#setOcspResponder-java.net.URI-&quot;&gt; &lt;code&gt;setOcspResponder&lt;/code&gt; &lt;/a&gt;方法）。使用&lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt; &lt;code&gt;addCertPathChecker&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt; &lt;code&gt;setCertPathCheckers&lt;/code&gt; &lt;/a&gt;方法将 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 添加到 &lt;code&gt;PKIXParameters&lt;/code&gt; 对象，然后将 &lt;code&gt;PKIXParameters&lt;/code&gt; 与要验证的 &lt;code&gt;CertPath&lt;/code&gt; 一起传递给PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 的&lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt;方法。以这种方式提供吊销检查器时，无论&lt;a href=&quot;pkixparameters#isRevocationEnabled--&quot;&gt; &lt;code&gt;RevocationEnabled&lt;/code&gt; &lt;/a&gt;标志的设置如何，都将使用它来检查吊销。类似地， &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 可被添加到一个 &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; 对象用于与PKIX使用 &lt;code&gt;CertPathBuilder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00344c3e603a69e9d256f9a4aa735572b4874a2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Package&lt;/code&gt; automatically defined for classes in a named module has the following properties:</source>
          <target state="translated">为命名模块中的类自动定义的 &lt;code&gt;Package&lt;/code&gt; 具有以下属性：</target>
        </trans-unit>
        <trans-unit id="27bb430a82bbd3a758f400dee1d01a8df22aa656" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Package&lt;/code&gt; automatically defined for classes in an unnamed module has the following properties:</source>
          <target state="translated">为未命名模块中的类自动定义的 &lt;code&gt;Package&lt;/code&gt; 具有以下属性：</target>
        </trans-unit>
        <trans-unit id="e6a03132a0dfdf419d31833c7b484cefba6ebaef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Package&lt;/code&gt; can be obtained with the &lt;a href=&quot;#getPackage(java.lang.String)&quot;&gt;&lt;code&gt;Package.getPackage(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;classloader#getDefinedPackage(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getDefinedPackage(String)&lt;/code&gt;&lt;/a&gt; methods. Every &lt;code&gt;Package&lt;/code&gt; defined by a class loader can be obtained with the &lt;a href=&quot;#getPackages()&quot;&gt;&lt;code&gt;Package.getPackages()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt;&lt;code&gt;ClassLoader.getDefinedPackages()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">甲 &lt;code&gt;Package&lt;/code&gt; 可以与获得&lt;a href=&quot;#getPackage(java.lang.String)&quot;&gt; &lt;code&gt;Package.getPackage(String)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;classloader#getDefinedPackage(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getDefinedPackage(String)&lt;/code&gt; &lt;/a&gt;的方法。可以使用&lt;a href=&quot;#getPackages()&quot;&gt; &lt;code&gt;Package.getPackages()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt; &lt;code&gt;ClassLoader.getDefinedPackages()&lt;/code&gt; &lt;/a&gt;方法获取由类加载器定义的每个 &lt;code&gt;Package&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b82d06470574b291a78e5f8f00efe49b58636bfd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Package&lt;/code&gt; may be explicitly defined with the &lt;a href=&quot;classloader#definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)&quot;&gt;&lt;code&gt;ClassLoader.definePackage(String, String, String, String,
 String, String, String, URL)&lt;/code&gt;&lt;/a&gt; method. The caller supplies the specification and implementation titles, versions, and vendors. The caller also indicates whether the package is &lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;sealed&lt;/a&gt;. If a &lt;code&gt;Package&lt;/code&gt; is not explicitly defined for a run-time package when a class in that run-time package is defined, then a &lt;code&gt;Package&lt;/code&gt; is automatically defined by the class's defining class loader, as follows.</source>
          <target state="translated">甲 &lt;code&gt;Package&lt;/code&gt; 可与明确定义&lt;a href=&quot;classloader#definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)&quot;&gt; &lt;code&gt;ClassLoader.definePackage(String, String, String, String, String, String, String, URL)&lt;/code&gt; &lt;/a&gt;方法。调用方提供规范和实现的标题，版本和供应商。呼叫者还指示包装是否&lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;密封&lt;/a&gt;。如果 &lt;code&gt;Package&lt;/code&gt; 没有明确的运行包定义在运行时包中的类定义时，则 &lt;code&gt;Package&lt;/code&gt; 会自动由类的定义类加载器定义，如下所示。</target>
        </trans-unit>
        <trans-unit id="f55f6f5c08f5641cc7d5ff85b17db1e9b5d4b93e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Painter&lt;/code&gt; may be created with a type parameter. This type will be expected in the &lt;code&gt;paint&lt;/code&gt; method. For example, you may wish to write a &lt;code&gt;Painter&lt;/code&gt; that only works with subclasses of &lt;a href=&quot;../../java/awt/component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;. In that case, when the &lt;code&gt;Painter&lt;/code&gt; is declared, you may declare that it requires a &lt;code&gt;Component&lt;/code&gt;, allowing the paint method to be type safe. Ex:</source>
          <target state="translated">甲 &lt;code&gt;Painter&lt;/code&gt; 可以用一种类型的参数来创建。这种类型将在 &lt;code&gt;paint&lt;/code&gt; 方法中被期望。例如，您可能希望编写仅适用于&lt;a href=&quot;../../java/awt/component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; &lt;/a&gt;子类的 &lt;code&gt;Painter&lt;/code&gt; 。在这种情况下，当宣告 &lt;code&gt;Painter&lt;/code&gt; 时，您可以声明它需要 &lt;code&gt;Component&lt;/code&gt; ，从而使paint方法是类型安全的。前任：</target>
        </trans-unit>
        <trans-unit id="61019145f25d0823b99987b93ef8f19602e98c8d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ParallelGroup&lt;/code&gt; that aligns it's children along the baseline must first decide where the baseline is anchored. The baseline can either be anchored to the top, or anchored to the bottom of the group. That is, the distance between the baseline and the beginning of the group can be a constant distance, or the distance between the end of the group and the baseline can be a constant distance. The possible choices correspond to the &lt;code&gt;BaselineResizeBehavior&lt;/code&gt; constants &lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_ASCENT&quot;&gt;&lt;code&gt;CONSTANT_ASCENT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_DESCENT&quot;&gt;&lt;code&gt;CONSTANT_DESCENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;ParallelGroup&lt;/code&gt; 对齐其沿基线孩子必须先决定基线锚定。基线可以固定在组的顶部，也可以固定在组的底部。即，基线与组的起点之间的距离可以是恒定的距离，或者组的终点与组的基线之间的距离可以是恒定的距离。可能的选择对应于 &lt;code&gt;BaselineResizeBehavior&lt;/code&gt; 常量&lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_ASCENT&quot;&gt; &lt;code&gt;CONSTANT_ASCENT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_DESCENT&quot;&gt; &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5478336d5f075d5ea8c31c7e9a524970cff7b853" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ParallelGroup&lt;/code&gt; that aligns it's elements along the baseline is only useful along the vertical axis. If you create a baseline group and use it along the horizontal axis an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when you ask &lt;code&gt;GroupLayout&lt;/code&gt; for the minimum, preferred or maximum size or attempt to layout the components.</source>
          <target state="translated">甲 &lt;code&gt;ParallelGroup&lt;/code&gt; 该对准是沿基线元件仅沿着垂直轴是有用的。如果创建基线组并沿水平轴使用它，则当您向 &lt;code&gt;GroupLayout&lt;/code&gt; 询问最小，首选或最大尺寸或尝试布局组件时，将引发 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62a9557fe45969ec99cfe417c5afc1f0b41f5568" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ParallelGroup&lt;/code&gt; that aligns its children along the baseline must first decide where the baseline is anchored. The baseline can either be anchored to the top, or anchored to the bottom of the group. That is, the distance between the baseline and the beginning of the group can be a constant distance, or the distance between the end of the group and the baseline can be a constant distance. The possible choices correspond to the &lt;code&gt;BaselineResizeBehavior&lt;/code&gt; constants &lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_ASCENT&quot;&gt;&lt;code&gt;CONSTANT_ASCENT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_DESCENT&quot;&gt;&lt;code&gt;CONSTANT_DESCENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将其子级沿基线对齐的 &lt;code&gt;ParallelGroup&lt;/code&gt; 必须首先确定基线的锚定位置。基线可以固定在组的顶部，也可以固定在组的底部。即，基线与组的起点之间的距离可以是恒定的距离，或者组的终点与组的基线之间的距离可以是恒定的距离。可能的选择对应于 &lt;code&gt;BaselineResizeBehavior&lt;/code&gt; 常量&lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_ASCENT&quot;&gt; &lt;code&gt;CONSTANT_ASCENT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../java/awt/component.baselineresizebehavior#CONSTANT_DESCENT&quot;&gt; &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69e3794af34295284a2190edae607aff12672729" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ParallelGroup&lt;/code&gt; that aligns its elements along the baseline is only useful along the vertical axis. If you create a baseline group and use it along the horizontal axis an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when you ask &lt;code&gt;GroupLayout&lt;/code&gt; for the minimum, preferred or maximum size or attempt to layout the components.</source>
          <target state="translated">甲 &lt;code&gt;ParallelGroup&lt;/code&gt; 该对准它的元素沿基线仅为沿垂直轴是有用的。如果创建基线组并沿水平轴使用它，则当您向 &lt;code&gt;GroupLayout&lt;/code&gt; 询问最小，首选或最大尺寸或尝试布局组件时，将引发 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7875a196205cc0e87611c2a7d7139b12281bbdc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ParameterBlock&lt;/code&gt; encapsulates all the information about sources and parameters (Objects) required by a RenderableImageOp, or other classes that process images.</source>
          <target state="translated">甲 &lt;code&gt;ParameterBlock&lt;/code&gt; 封装有关源和由RenderableImageOp所需的参数（对象），或其他处理图像的类的配置信息。</target>
        </trans-unit>
        <trans-unit id="44d5dff505605889de7a5e58ef3f8444907a95a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Patch&lt;/code&gt; object represents a location, on a MIDI synthesizer, into which a single instrument is stored (loaded).</source>
          <target state="translated">甲 &lt;code&gt;Patch&lt;/code&gt; 对象表示一个位置，在一个MIDI合成器，存储在单个器械插入其中（加载）。</target>
        </trans-unit>
        <trans-unit id="2bade130cacfd73a6662dacf0beb86afa67968ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Patch&lt;/code&gt; object represents a location, on a MIDI synthesizer, into which a single instrument is stored (loaded). Every &lt;code&gt;Instrument&lt;/code&gt; object has its own &lt;code&gt;Patch&lt;/code&gt; object that specifies the memory location into which that instrument should be loaded. The location is specified abstractly by a bank index and a program number (not by any scheme that directly refers to a specific address or offset in RAM). This is a hierarchical indexing scheme: MIDI provides for up to 16384 banks, each of which contains up to 128 program locations. For example, a minimal sort of synthesizer might have only one bank of instruments, and only 32 instruments (programs) in that bank.</source>
          <target state="translated">甲 &lt;code&gt;Patch&lt;/code&gt; 对象表示一个位置，在一个MIDI合成器，存储在单个器械插入其中（加载）。每个 &lt;code&gt;Instrument&lt;/code&gt; 对象都有其自己的 &lt;code&gt;Patch&lt;/code&gt; 对象，该对象指定应将该乐器加载到的内存位置。该位置由库索引和程序号抽象地指定（而不是由直接引用RAM中特定地址或偏移量的任何方案来指定）。这是一种分层索引方案：MIDI最多提供16384个库，每个库包含多达128个程序位置。例如，一种最少量的合成器可能只有一组乐器，而该组中只有32个乐器（程序）。</target>
        </trans-unit>
        <trans-unit id="320c0383b6ba27539a9291c5c08457dac6be0ca9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Path&lt;/code&gt; represents a path that is hierarchical and composed of a sequence of directory and file name elements separated by a special separator or delimiter. A &lt;em&gt;root component&lt;/em&gt;, that identifies a file system hierarchy, may also be present. The name element that is &lt;em&gt;farthest&lt;/em&gt; from the root of the directory hierarchy is the name of a file or directory. The other name elements are directory names. A &lt;code&gt;Path&lt;/code&gt; can represent a root, a root and a sequence of names, or simply one or more name elements. A &lt;code&gt;Path&lt;/code&gt; is considered to be an</source>
          <target state="translated">甲 &lt;code&gt;Path&lt;/code&gt; 表示是分层的，通过特殊的分离器或分隔符隔开的目录和文件名元素的序列组成的路径。甲&lt;em&gt;根组件&lt;/em&gt;，标识了文件系统层次结构中，也可以存在。&lt;em&gt;离&lt;/em&gt;目录层次结构的根&lt;em&gt;最远&lt;/em&gt;的name元素是文件或目录的名称。其他名称元素是目录名称。甲 &lt;code&gt;Path&lt;/code&gt; 可以代表一个根，根和名称的序列，或只是一个或多个名称的元件。一个 &lt;code&gt;Path&lt;/code&gt; 被认为是</target>
        </trans-unit>
        <trans-unit id="2ce8947d69cb036c7e7e382001791f3427abc1c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PathIterator&lt;/code&gt; that defines the arc's boundary.</source>
          <target state="translated">一个 &lt;code&gt;PathIterator&lt;/code&gt; 定义弧的边界。</target>
        </trans-unit>
        <trans-unit id="02db17db5b91e548f1ad12abac1017180e407cf3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Phaser&lt;/code&gt; may be used instead of a &lt;code&gt;CountDownLatch&lt;/code&gt; to control a one-shot action serving a variable number of parties. The typical idiom is for the method setting this up to first register, then start all the actions, then deregister, as in:</source>
          <target state="translated">一个 &lt;code&gt;Phaser&lt;/code&gt; ，可以用来代替 &lt;code&gt;CountDownLatch&lt;/code&gt; 控制服务可变数量各方的一次性动作。典型的习惯用法是将方法设置为首先注册，然后启动所有操作，然后注销，如下所示：</target>
        </trans-unit>
        <trans-unit id="2e056d8aeb0d2e80640b4c47fd934931fffc6852" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Phaser&lt;/code&gt; may be used instead of a &lt;code&gt;CountDownLatch&lt;/code&gt; to control a one-shot action serving a variable number of parties. The typical idiom is for the method setting this up to first register, then start the actions, then deregister, as in:</source>
          <target state="translated">一个 &lt;code&gt;Phaser&lt;/code&gt; ，可以用来代替 &lt;code&gt;CountDownLatch&lt;/code&gt; 控制服务可变数量各方的一次性动作。典型的习惯用法是将方法设置为首先注册，然后开始操作，然后注销，如下所示：</target>
        </trans-unit>
        <trans-unit id="b3726e6cb3f9c91800a6b7315e247de7b538989e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Point2D&lt;/code&gt; object representing the x,y coordinates of the ending point of the arc.</source>
          <target state="translated">一个 &lt;code&gt;Point2D&lt;/code&gt; 对象，它表示圆弧终点的x，y坐标。</target>
        </trans-unit>
        <trans-unit id="7506fe06746a7ab15b3b2c74adc4e3ab1cd96058" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Point2D&lt;/code&gt; object representing the x,y coordinates of the starting point of the arc.</source>
          <target state="translated">一个 &lt;code&gt;Point2D&lt;/code&gt; 对象，它表示圆弧起点的x，y坐标。</target>
        </trans-unit>
        <trans-unit id="7ba4fc27c0a519f672a4f2b0dd3490e89f4c6ed3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Policy&lt;/code&gt; contains the following information. Note that this example only represents the syntax for the default &lt;code&gt;Policy&lt;/code&gt; implementation. Subclass implementations of this class may implement alternative syntaxes and may retrieve the &lt;code&gt;Policy&lt;/code&gt; from any source such as files, databases, or servers.</source>
          <target state="translated">一个 &lt;code&gt;Policy&lt;/code&gt; 包含以下信息。请注意，此示例仅表示默认 &lt;code&gt;Policy&lt;/code&gt; 实现的语法。此类的子类实现可以实现替代语法，并且可以从任何源（例如文件，数据库或服务器）中检索 &lt;code&gt;Policy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c551493ea204607c260d63a76232db5f1422e1c4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Policy&lt;/code&gt; object can be queried for the set of Permissions granted to code running as a &lt;code&gt;Principal&lt;/code&gt; in the following manner:</source>
          <target state="translated">甲 &lt;code&gt;Policy&lt;/code&gt; 对象可以查询该组运行作为授予代码权限的 &lt;code&gt;Principal&lt;/code&gt; 以下列方式：</target>
        </trans-unit>
        <trans-unit id="e603fa49d7d9bf4791bd8564e966f88040e4457b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Position&lt;/code&gt; object points at a location between two characters. As the surrounding content is altered, the &lt;code&gt;Position&lt;/code&gt; object adjusts its offset automatically to reflect the changes. If content is inserted or removed before the &lt;code&gt;Position&lt;/code&gt; object's location, then the &lt;code&gt;Position&lt;/code&gt; increments or decrements its offset, respectively, so as to point to the same location. If a portion of the document is removed that contains a &lt;code&gt;Position&lt;/code&gt;'s offset, then the &lt;code&gt;Position&lt;/code&gt;'s offset becomes that of the beginning of the removed region. For example, if a &lt;code&gt;Position&lt;/code&gt; has an offset of 5 and the region 2-10 is removed, then the &lt;code&gt;Position&lt;/code&gt;'s offset becomes 2.</source>
          <target state="translated">甲 &lt;code&gt;Position&lt;/code&gt; 的物点在两个字符之间的位置。随着周围内容的更改， &lt;code&gt;Position&lt;/code&gt; 对象会自动调整其偏移量以反映更改。如果在 &lt;code&gt;Position&lt;/code&gt; 对象的位置之前插入或删除内容，则 &lt;code&gt;Position&lt;/code&gt; 分别增加或减少其偏移量，以指向相同的位置。如果要删除的文档中包含 &lt;code&gt;Position&lt;/code&gt; 偏移量的部分，那么 &lt;code&gt;Position&lt;/code&gt; 的偏移量将成为已删除区域开始处的偏移量。例如，如果某个 &lt;code&gt;Position&lt;/code&gt; 的偏移量为5，并且删除了2-10区域，则该 &lt;code&gt;Position&lt;/code&gt; 的偏移量将变为2。</target>
        </trans-unit>
        <trans-unit id="0e6789762086fb624373b893ae1c639a188c341e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Principal&lt;/code&gt; representing an identity used to determine access rights to objects in a file system.</source>
          <target state="translated">代表身份的 &lt;code&gt;Principal&lt;/code&gt; ，用于确定对文件系统中对象的访问权限。</target>
        </trans-unit>
        <trans-unit id="6aceb3a2faf95ee9fd58c042971b6d90b1138e41" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; must be instances of interface &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">一个 &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; 仅仅是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; &lt;/a&gt;，其构造和变异操作保证一个附加不变量，即在所有属性值 &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; 必须的接口实例&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; &lt;/a&gt;。在下面重新指定&lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作，以确保此附加不变性。</target>
        </trans-unit>
        <trans-unit id="174cff475cd36fe7b2cdbe06b01da9c527d7b5db" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; must be instances of interface &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">一个 &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; 仅仅是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; &lt;/a&gt;，其构造和变异操作保证一个附加不变量，即在所有属性值 &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; 必须的接口实例&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; &lt;/a&gt;。在下面重新指定&lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作，以确保此附加不变性。</target>
        </trans-unit>
        <trans-unit id="6821c066d80c383742f82d9ec454ed8de1bf1b17" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementor is recommended to check for the &lt;code&gt;SecurityManager.checkPrintJobAccess()&lt;/code&gt; to deny access to untrusted code. Following this recommended policy means that untrusted code may not be able to locate any print services. Downloaded applets are the most common example of untrusted code.</source>
          <target state="translated">建议使用 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 实现程序来检查 &lt;code&gt;SecurityManager.checkPrintJobAccess()&lt;/code&gt; 以拒绝对不受信任代码的访问。遵循此建议的策略意味着不受信任的代码可能无法找到任何打印服务。下载的小程序是不可信代码的最常见示例。</target>
        </trans-unit>
        <trans-unit id="edc93fd469a7b3a042919a5e86d89ac76d6a2eda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PrintStream&lt;/code&gt; adds functionality to another output stream, namely the ability to print representations of various data values conveniently.</source>
          <target state="translated">一个 &lt;code&gt;PrintStream&lt;/code&gt; 的将功能添加到其他输出流，它们能够方便地打印各种数据值表示的能力。</target>
        </trans-unit>
        <trans-unit id="9172fc92bd31a6e2c58b2c9e1a5b0568f5d5fe89" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PrintStream&lt;/code&gt; adds functionality to another output stream, namely the ability to print representations of various data values conveniently. Two other features are provided as well. Unlike other output streams, a &lt;code&gt;PrintStream&lt;/code&gt; never throws an &lt;code&gt;IOException&lt;/code&gt;; instead, exceptional situations merely set an internal flag that can be tested via the &lt;code&gt;checkError&lt;/code&gt; method. Optionally, a &lt;code&gt;PrintStream&lt;/code&gt; can be created so as to flush automatically; this means that the &lt;code&gt;flush&lt;/code&gt; method is automatically invoked after a byte array is written, one of the &lt;code&gt;println&lt;/code&gt; methods is invoked, or a newline character or byte (&lt;code&gt;'\n'&lt;/code&gt;) is written.</source>
          <target state="translated">一个 &lt;code&gt;PrintStream&lt;/code&gt; 的将功能添加到其他输出流，它们能够方便地打印各种数据值表示的能力。还提供了其他两个功能。与其他输出流不同， &lt;code&gt;PrintStream&lt;/code&gt; 永远不会抛出 &lt;code&gt;IOException&lt;/code&gt; 。相反，在特殊情况下，仅设置可以通过 &lt;code&gt;checkError&lt;/code&gt; 方法测试的内部标志。 （可选）可以创建 &lt;code&gt;PrintStream&lt;/code&gt; 以便自动刷新。这意味着在写入字节数组，调用 &lt;code&gt;println&lt;/code&gt; 方法之一或写入换行符或字节（ &lt;code&gt;'\n'&lt;/code&gt; ）之后，将自动调用 &lt;code&gt;flush&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="443d2c19443869278d45cf70c4daeb2a90b59332" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Printable(..)&lt;/code&gt; may be set on a &lt;code&gt;PrinterJob&lt;/code&gt;. When the client subsequently initiates printing by calling &lt;code&gt;PrinterJob.print(..)&lt;/code&gt; control</source>
          <target state="translated">可以在 &lt;code&gt;PrinterJob&lt;/code&gt; 上设置一个 &lt;code&gt;Printable(..)&lt;/code&gt; 。当客户端随后通过调用 &lt;code&gt;PrinterJob.print(..)&lt;/code&gt; 控件启动打印时</target>
        </trans-unit>
        <trans-unit id="dead7cff0dd9e0e698d1ea6176c439b087a91d0a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PrinterJob&lt;/code&gt; object should be created using the static &lt;a href=&quot;#getPrinterJob()&quot;&gt;&lt;code&gt;getPrinterJob&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">甲 &lt;code&gt;PrinterJob&lt;/code&gt; 对象应使用静态创建&lt;a href=&quot;#getPrinterJob()&quot;&gt; &lt;code&gt;getPrinterJob&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f86a8fedc1b01e36f3fffe6a84ad30ad6d807042" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Properties&lt;/code&gt; object that contains the name and current value of each of the client info properties supported by the driver.</source>
          <target state="translated">一个 &lt;code&gt;Properties&lt;/code&gt; 对象，其中包含驱动程序支持的每个客户端信息属性的名称和当前值。</target>
        </trans-unit>
        <trans-unit id="e5b459beeeccec3e6150676d0f5e6290385f678d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PropertyChangeEvent&lt;/code&gt; will get fired in response to setting a bound property, e.g. &lt;code&gt;setFont&lt;/code&gt;, &lt;code&gt;setBackground&lt;/code&gt;, or &lt;code&gt;setForeground&lt;/code&gt;. Note that if the current component is inheriting its foreground, background, or font from its container, then no event will be fired in response to a change in the inherited property.</source>
          <target state="translated">一 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 将响应被炒到设置绑定属性，例如 &lt;code&gt;setFont&lt;/code&gt; ， &lt;code&gt;setBackground&lt;/code&gt; 或 &lt;code&gt;setForeground&lt;/code&gt; 。请注意，如果当前组件正在从其容器继承其前景，背景或字体，则不会触发任何事件来响应继承的属性的更改。</target>
        </trans-unit>
        <trans-unit id="e01cf0c66503370e041abd76e97451d46e517e44" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PropertyChangeEvent&lt;/code&gt; will get fired whenever a default is changed.</source>
          <target state="translated">一 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 每当一个默认的改变将被解雇。</target>
        </trans-unit>
        <trans-unit id="43af3e934c517c608a5c379e17c1f394d58aea3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PropertyChangeSupport&lt;/code&gt; instance is thread-safe.</source>
          <target state="translated">一 &lt;code&gt;PropertyChangeSupport&lt;/code&gt; 实例是线程安全的。</target>
        </trans-unit>
        <trans-unit id="d53111262efd93277c3a285555a54956749a689a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PushbackInputStream&lt;/code&gt; adds functionality to another input stream, namely the ability to &quot;push back&quot; or &quot;unread&quot; bytes, by storing pushed-back bytes in an internal buffer.</source>
          <target state="translated">甲 &lt;code&gt;PushbackInputStream&lt;/code&gt; 将功能添加到另一个输入流，即能够&amp;ldquo;推后&amp;rdquo;或&amp;ldquo;未读&amp;rdquo;字节，通过存储推回在内部缓冲器中的字节。</target>
        </trans-unit>
        <trans-unit id="7af6908d661fc3df825c5f01de05f00d52da3b63" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PushbackInputStream&lt;/code&gt; adds functionality to another input stream, namely the ability to &quot;push back&quot; or &quot;unread&quot; bytes, by storing pushed-back bytes in an internal buffer. This is useful in situations where it is convenient for a fragment of code to read an indefinite number of data bytes that are delimited by a particular byte value; after reading the terminating byte, the code fragment can &quot;unread&quot; it, so that the next read operation on the input stream will reread the byte that was pushed back. For example, bytes representing the characters constituting an identifier might be terminated by a byte representing an operator character; a method whose job is to read just an identifier can read until it sees the operator and then push the operator back to be re-read.</source>
          <target state="translated">甲 &lt;code&gt;PushbackInputStream&lt;/code&gt; 将功能添加到另一个输入流，即能够&amp;ldquo;推后&amp;rdquo;或&amp;ldquo;未读&amp;rdquo;字节，通过存储推回在内部缓冲器中的字节。在某些情况下，便于代码片段读取由特定字节值界定的不确定数量的数据字节时，这很有用；读取终止字节后，代码片段可以&amp;ldquo;不读取&amp;rdquo;它，以便对输入流进行的下一个读取操作将重新读取被推回的字节。例如，代表构成标识符的字符的字节可以由代表操作符的字节终止；只能读取标识符的方法可以读取，直到看到操作员为止，然后将操作员推回以重新读取。</target>
        </trans-unit>
        <trans-unit id="498529e0c6968af51d25a65d16502b51019d6bb2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PushbackInputStream&lt;/code&gt; adds functionality to another input stream, namely the ability to &quot;push back&quot; or &quot;unread&quot; one byte.</source>
          <target state="translated">甲 &lt;code&gt;PushbackInputStream&lt;/code&gt; 将功能添加到另一个输入流，即能够&amp;ldquo;推后&amp;rdquo;或&amp;ldquo;未读&amp;rdquo;一个字节。</target>
        </trans-unit>
        <trans-unit id="5f514d5e2008c6e74c443994d842ab05a6d27a76" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;PushbackInputStream&lt;/code&gt; adds functionality to another input stream, namely the ability to &quot;push back&quot; or &quot;unread&quot; one byte. This is useful in situations where it is convenient for a fragment of code to read an indefinite number of data bytes that are delimited by a particular byte value; after reading the terminating byte, the code fragment can &quot;unread&quot; it, so that the next read operation on the input stream will reread the byte that was pushed back. For example, bytes representing the characters constituting an identifier might be terminated by a byte representing an operator character; a method whose job is to read just an identifier can read until it sees the operator and then push the operator back to be re-read.</source>
          <target state="translated">甲 &lt;code&gt;PushbackInputStream&lt;/code&gt; 将功能添加到另一个输入流，即能够&amp;ldquo;推后&amp;rdquo;或&amp;ldquo;未读&amp;rdquo;一个字节。这在代码片段方便地读取由特定字节值界定的不确定数量的数据字节的情况下很有用；读取终止字节后，代码片段可以&amp;ldquo;不读取&amp;rdquo;它，以便对输入流进行的下一个读取操作将重新读取被推回的字节。例如，代表构成标识符的字符的字节可以由代表操作符的字节终止；只能读取标识符的方法可以读取，直到看到操作员为止，然后将操作员推回以重新读取。</target>
        </trans-unit>
        <trans-unit id="b195ed2afd356225750c7019651fb6c71cb290d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Queue&lt;/code&gt; implementation that extends this class must minimally define a method &lt;a href=&quot;queue#offer(E)&quot;&gt;&lt;code&gt;Queue.offer(E)&lt;/code&gt;&lt;/a&gt; which does not permit insertion of &lt;code&gt;null&lt;/code&gt; elements, along with methods &lt;a href=&quot;queue#peek()&quot;&gt;&lt;code&gt;Queue.peek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;queue#poll()&quot;&gt;&lt;code&gt;Queue.poll()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;collection#size()&quot;&gt;&lt;code&gt;Collection.size()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;collection#iterator()&quot;&gt;&lt;code&gt;Collection.iterator()&lt;/code&gt;&lt;/a&gt;. Typically, additional methods will be overridden as well. If these requirements cannot be met, consider instead subclassing &lt;a href=&quot;abstractcollection&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Queue&lt;/code&gt; 实现扩展此类必须至少定义一个方法&lt;a href=&quot;queue#offer(E)&quot;&gt; &lt;code&gt;Queue.offer(E)&lt;/code&gt; &lt;/a&gt;，它不允许的插入 &lt;code&gt;null&lt;/code&gt; 元素，用方法一起&lt;a href=&quot;queue#peek()&quot;&gt; &lt;code&gt;Queue.peek()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;queue#poll()&quot;&gt; &lt;code&gt;Queue.poll()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;collection#size()&quot;&gt; &lt;code&gt;Collection.size()&lt;/code&gt; &lt;/a&gt;，并且&lt;a href=&quot;collection#iterator()&quot;&gt; &lt;code&gt;Collection.iterator()&lt;/code&gt; &lt;/a&gt;。通常，其他方法也会被覆盖。如果不能满足这些要求，请考虑将&lt;a href=&quot;abstractcollection&quot;&gt; &lt;code&gt;AbstractCollection&lt;/code&gt; &lt;/a&gt;子类化。</target>
        </trans-unit>
        <trans-unit id="58bb4d4e29ec77b52a73e79c2c7ec5fcb02deb1a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Queue&lt;/code&gt; implementation that extends this class must minimally define a method &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;Queue.offer(E)&lt;/code&gt;&lt;/a&gt; which does not permit insertion of &lt;code&gt;null&lt;/code&gt; elements, along with methods &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;Queue.peek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;Queue.poll()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;collection#size--&quot;&gt;&lt;code&gt;Collection.size()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;collection#iterator--&quot;&gt;&lt;code&gt;Collection.iterator()&lt;/code&gt;&lt;/a&gt;. Typically, additional methods will be overridden as well. If these requirements cannot be met, consider instead subclassing &lt;a href=&quot;abstractcollection&quot;&gt;&lt;code&gt;AbstractCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Queue&lt;/code&gt; 实现扩展此类必须至少定义一个方法&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;Queue.offer(E)&lt;/code&gt; &lt;/a&gt;，它不允许的插入 &lt;code&gt;null&lt;/code&gt; 元素，用方法一起&lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;Queue.peek()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;Queue.poll()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;collection#size--&quot;&gt; &lt;code&gt;Collection.size()&lt;/code&gt; &lt;/a&gt;，并且&lt;a href=&quot;collection#iterator--&quot;&gt; &lt;code&gt;Collection.iterator()&lt;/code&gt; &lt;/a&gt;。通常，其他方法也会被覆盖。如果不能满足这些要求，请考虑将&lt;a href=&quot;abstractcollection&quot;&gt; &lt;code&gt;AbstractCollection&lt;/code&gt; &lt;/a&gt;子类化。</target>
        </trans-unit>
        <trans-unit id="def3b6f50120461d8708c238f889d3f9cd108135" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReadWriteLock&lt;/code&gt; maintains a pair of associated &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;locks&lt;/code&gt;&lt;/a&gt;, one for read-only operations and one for writing.</source>
          <target state="translated">一个 &lt;code&gt;ReadWriteLock&lt;/code&gt; 中维护一对相关的&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;locks&lt;/code&gt; &lt;/a&gt;，一个用于只读操作，另一个用于写入。</target>
        </trans-unit>
        <trans-unit id="0e09680152da974de7708bd54d72fd93831d1e80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReadWriteLock&lt;/code&gt; maintains a pair of associated &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;locks&lt;/code&gt;&lt;/a&gt;, one for read-only operations and one for writing. The &lt;a href=&quot;#readLock()&quot;&gt;read lock&lt;/a&gt; may be held simultaneously by multiple reader threads, so long as there are no writers. The &lt;a href=&quot;#writeLock()&quot;&gt;write lock&lt;/a&gt; is exclusive.</source>
          <target state="translated">一个 &lt;code&gt;ReadWriteLock&lt;/code&gt; 中维护一对相关的&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;locks&lt;/code&gt; &lt;/a&gt;，一个用于只读操作，另一个用于写入。该&lt;a href=&quot;#readLock()&quot;&gt;读取锁&lt;/a&gt;可以同时被多个读线程举行，只要没有作家。该&lt;a href=&quot;#writeLock()&quot;&gt;写锁&lt;/a&gt;是独占的。</target>
        </trans-unit>
        <trans-unit id="3a5c3d06115aa28aff29d5534c6fc5941725a3a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReadWriteLock&lt;/code&gt; maintains a pair of associated &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;locks&lt;/code&gt;&lt;/a&gt;, one for read-only operations and one for writing. The &lt;a href=&quot;readwritelock#readLock--&quot;&gt;&lt;code&gt;read lock&lt;/code&gt;&lt;/a&gt; may be held simultaneously by multiple reader threads, so long as there are no writers. The &lt;a href=&quot;readwritelock#writeLock--&quot;&gt;&lt;code&gt;write lock&lt;/code&gt;&lt;/a&gt; is exclusive.</source>
          <target state="translated">一个 &lt;code&gt;ReadWriteLock&lt;/code&gt; 中维护一对相关的&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;locks&lt;/code&gt; &lt;/a&gt;，一个用于只读操作，另一个用于写入。该&lt;a href=&quot;readwritelock#readLock--&quot;&gt; &lt;code&gt;read lock&lt;/code&gt; &lt;/a&gt;可以同时被多个读线程举行，只要没有作家。该&lt;a href=&quot;readwritelock#writeLock--&quot;&gt; &lt;code&gt;write lock&lt;/code&gt; &lt;/a&gt;是独占的。</target>
        </trans-unit>
        <trans-unit id="a4ba4d2f544963239cdad0d5889d9b75a3868aa7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Readable&lt;/code&gt; is a source of characters.</source>
          <target state="translated">甲 &lt;code&gt;Readable&lt;/code&gt; 是字符的源。</target>
        </trans-unit>
        <trans-unit id="96d71823f195cce50e0a0e598590732b249e1579" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Readable&lt;/code&gt; is a source of characters. Characters from a &lt;code&gt;Readable&lt;/code&gt; are made available to callers of the read method via a &lt;a href=&quot;../nio/charbuffer&quot;&gt;&lt;code&gt;CharBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Readable&lt;/code&gt; 是字符的源。 &lt;code&gt;Readable&lt;/code&gt; 的字符通过&lt;a href=&quot;../nio/charbuffer&quot;&gt; &lt;code&gt;CharBuffer&lt;/code&gt; &lt;/a&gt;可供read方法的调用者使用。</target>
        </trans-unit>
        <trans-unit id="7adc9e5e51403a4efa309a291957fa4c97c0d4d0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Receiver&lt;/code&gt; receives &lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt; objects and typically does something useful in response, such as interpreting them to generate sound or raw MIDI output.</source>
          <target state="translated">甲 &lt;code&gt;Receiver&lt;/code&gt; 接收&lt;a href=&quot;midievent&quot;&gt; &lt;code&gt;MidiEvent&lt;/code&gt; &lt;/a&gt;目的和通常执行一些响应，例如，解释以生成声音或原始MIDI输出。</target>
        </trans-unit>
        <trans-unit id="3c76c7c5e28bd7a486394b016c5582a809e88117" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Receiver&lt;/code&gt; receives &lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt; objects and typically does something useful in response, such as interpreting them to generate sound or raw MIDI output. Common MIDI receivers include synthesizers and MIDI Out ports.</source>
          <target state="translated">甲 &lt;code&gt;Receiver&lt;/code&gt; 接收&lt;a href=&quot;midievent&quot;&gt; &lt;code&gt;MidiEvent&lt;/code&gt; &lt;/a&gt;目的和通常执行一些响应，例如，解释以生成声音或原始MIDI输出。常见的MIDI接收器包括合成器和MIDI输出端口。</target>
        </trans-unit>
        <trans-unit id="f19fa51699f4a664e93d7e5f550006586f58badc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Receiver&lt;/code&gt; receives &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects and typically does something useful in response, such as interpreting them to generate sound or raw MIDI output.</source>
          <target state="translated">甲 &lt;code&gt;Receiver&lt;/code&gt; 接收 &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 目的和通常执行一些响应，例如，解释以生成声音或原始MIDI输出。</target>
        </trans-unit>
        <trans-unit id="c29d462e6a52ab2259a7447d7f75c8ca3d531769" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Receiver&lt;/code&gt; receives &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects and typically does something useful in response, such as interpreting them to generate sound or raw MIDI output. Common MIDI receivers include synthesizers and MIDI Out ports.</source>
          <target state="translated">甲 &lt;code&gt;Receiver&lt;/code&gt; 接收 &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 目的和通常执行一些响应，例如，解释以生成声音或原始MIDI输出。常见的MIDI接收器包括合成器和MIDI输出端口。</target>
        </trans-unit>
        <trans-unit id="8b6502f89a0860b667635265c50410dcd6a13613" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RecordComponent&lt;/code&gt; provides information about, and dynamic access to, a component of a record class.</source>
          <target state="translated">甲 &lt;code&gt;RecordComponent&lt;/code&gt; 提供有关的信息，以及动态访问，一个记录类的组分。</target>
        </trans-unit>
        <trans-unit id="0bb66c2ae6ee8ada24da899deda6a542dac4fcad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rectangle&lt;/code&gt; object's &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are &lt;code&gt;public&lt;/code&gt; fields. The constructors that create a &lt;code&gt;Rectangle&lt;/code&gt;, and the methods that can modify one, do not prevent setting a negative value for width or height.</source>
          <target state="translated">一个 &lt;code&gt;Rectangle&lt;/code&gt; 对象的 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 是 &lt;code&gt;public&lt;/code&gt; 领域。创建 &lt;code&gt;Rectangle&lt;/code&gt; 的构造函数和可以修改Rectangle的方法不会阻止为width或height设置负值。</target>
        </trans-unit>
        <trans-unit id="09e45f5db9320d95c47dec97d00933c57ab8e443" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rectangle&lt;/code&gt; specifies an area in a coordinate space that is enclosed by the &lt;code&gt;Rectangle&lt;/code&gt; object's upper-left point &lt;code&gt;(x,y)&lt;/code&gt; in the coordinate space, its width, and its height.</source>
          <target state="translated">甲 &lt;code&gt;Rectangle&lt;/code&gt; 指定在由所附的坐标空间的区域 &lt;code&gt;Rectangle&lt;/code&gt; 对象的左上点 &lt;code&gt;(x,y)&lt;/code&gt; 在坐标空间中，它的宽度和高度可以。</target>
        </trans-unit>
        <trans-unit id="f868590cec06b06b083e631f103714d7966ad707" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rectangle&lt;/code&gt; whose width or height is negative has neither location nor dimension along those axes with negative dimensions. Such a &lt;code&gt;Rectangle&lt;/code&gt; is treated as non-existent along those axes. Such a &lt;code&gt;Rectangle&lt;/code&gt; is also empty with respect to containment calculations and methods which test if it contains or intersects a point or rectangle will always return false. Methods which combine such a &lt;code&gt;Rectangle&lt;/code&gt; with a point or rectangle will ignore the &lt;code&gt;Rectangle&lt;/code&gt; entirely in generating the result. If two &lt;code&gt;Rectangle&lt;/code&gt; objects are combined and each has a negative dimension, the result will have at least one negative dimension.</source>
          <target state="translated">甲 &lt;code&gt;Rectangle&lt;/code&gt; ，其宽度或高度是负具有沿着与负维度这些轴既不位置也不尺寸。沿着这些轴将这样的 &lt;code&gt;Rectangle&lt;/code&gt; 视为不存在。相对于包含计算，这种 &lt;code&gt;Rectangle&lt;/code&gt; 也为空，并且测试该矩形是否包含点或矩形或与之相交的方法将始终返回false。将此类 &lt;code&gt;Rectangle&lt;/code&gt; 与点或矩形组合的方法在生成结果时将完全忽略 &lt;code&gt;Rectangle&lt;/code&gt; 。如果将两个 &lt;code&gt;Rectangle&lt;/code&gt; 对象组合在一起，并且每个对象都具有负尺寸，则结果将至少具有一个负尺寸。</target>
        </trans-unit>
        <trans-unit id="b5b6b7944f45cb077aa26fe53c3e98fdd2d8c61d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReentrantLock&lt;/code&gt; is &lt;em&gt;owned&lt;/em&gt; by the thread last successfully locking, but not yet unlocking it. A thread invoking &lt;code&gt;lock&lt;/code&gt; will return, successfully acquiring the lock, when the lock is not owned by another thread. The method will return immediately if the current thread already owns the lock. This can be checked using methods &lt;a href=&quot;#isHeldByCurrentThread()&quot;&gt;&lt;code&gt;isHeldByCurrentThread()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getHoldCount()&quot;&gt;&lt;code&gt;getHoldCount()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;ReentrantLock&lt;/code&gt; 的是&lt;em&gt;拥有&lt;/em&gt;该线程最后成功锁定，但尚未解锁的。当该锁不属于另一个线程时，调用 &lt;code&gt;lock&lt;/code&gt; 的线程将返回，并成功获取该锁。如果当前线程已经拥有该锁，则该方法将立即返回。可以使用&lt;a href=&quot;#isHeldByCurrentThread()&quot;&gt; &lt;code&gt;isHeldByCurrentThread()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getHoldCount()&quot;&gt; &lt;code&gt;getHoldCount()&lt;/code&gt; &lt;/a&gt;方法进行检查。</target>
        </trans-unit>
        <trans-unit id="a466154e254c73452531856243b05c8548e2667c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReentrantLock&lt;/code&gt; is &lt;em&gt;owned&lt;/em&gt; by the thread last successfully locking, but not yet unlocking it. A thread invoking &lt;code&gt;lock&lt;/code&gt; will return, successfully acquiring the lock, when the lock is not owned by another thread. The method will return immediately if the current thread already owns the lock. This can be checked using methods &lt;a href=&quot;reentrantlock#isHeldByCurrentThread--&quot;&gt;&lt;code&gt;isHeldByCurrentThread()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;reentrantlock#getHoldCount--&quot;&gt;&lt;code&gt;getHoldCount()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;ReentrantLock&lt;/code&gt; 的是&lt;em&gt;拥有&lt;/em&gt;该线程最后成功锁定，但尚未解锁的。当该锁不属于另一个线程时，调用 &lt;code&gt;lock&lt;/code&gt; 的线程将返回并成功获取该锁。如果当前线程已经拥有该锁，则该方法将立即返回。可以使用&lt;a href=&quot;reentrantlock#isHeldByCurrentThread--&quot;&gt; &lt;code&gt;isHeldByCurrentThread()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;reentrantlock#getHoldCount--&quot;&gt; &lt;code&gt;getHoldCount()&lt;/code&gt; &lt;/a&gt;方法进行检查。</target>
        </trans-unit>
        <trans-unit id="f10e17887e5593070207f224b5b3a59f8276fe3d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Ref&lt;/code&gt; object can be stored in the database using the &lt;code&gt;PreparedStatement.setRef&lt;/code&gt; method.</source>
          <target state="translated">可以使用 &lt;code&gt;PreparedStatement.setRef&lt;/code&gt; 方法将 &lt;code&gt;Ref&lt;/code&gt; 对象存储在数据库中。</target>
        </trans-unit>
        <trans-unit id="7a1be5a08da98f67b80c48691f5802cfaa8fadba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Reference&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;xmlsignaturefactory#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)&quot;&gt;&lt;code&gt;newReference&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class; for example:</source>
          <target state="translated">甲 &lt;code&gt;Reference&lt;/code&gt; 实例可以通过调用的一个来创建&lt;a href=&quot;xmlsignaturefactory#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)&quot;&gt; &lt;code&gt;newReference&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类; 例如：</target>
        </trans-unit>
        <trans-unit id="3fdc135bd81bdab338e4afb3857420e914b0195c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Registry&lt;/code&gt; implementation may choose to restrict access to some or all of its methods (for example, methods that mutate the registry's bindings may be restricted to calls originating from the local host). If a &lt;code&gt;Registry&lt;/code&gt; method chooses to deny access for a given invocation, its implementation may throw &lt;a href=&quot;../accessexception&quot;&gt;&lt;code&gt;AccessException&lt;/code&gt;&lt;/a&gt;, which (because it extends &lt;a href=&quot;../remoteexception&quot;&gt;&lt;code&gt;RemoteException&lt;/code&gt;&lt;/a&gt;) will be wrapped in a &lt;a href=&quot;../serverexception&quot;&gt;&lt;code&gt;ServerException&lt;/code&gt;&lt;/a&gt; when caught by a remote client.</source>
          <target state="translated">一个 &lt;code&gt;Registry&lt;/code&gt; 实现可以选择限制访问某些或所有方法（例如，方法是发生变异注册表的绑定，可以从本地主机局限于呼叫始发）。如果 &lt;code&gt;Registry&lt;/code&gt; 方法选择拒绝给定调用的访问，则其实现可能会抛出&lt;a href=&quot;../accessexception&quot;&gt; &lt;code&gt;AccessException&lt;/code&gt; &lt;/a&gt;，这是因为它扩展了&lt;a href=&quot;../remoteexception&quot;&gt; &lt;code&gt;RemoteException&lt;/code&gt; &lt;/a&gt;，当被远程客户端捕获时，它将包装在&lt;a href=&quot;../serverexception&quot;&gt; &lt;code&gt;ServerException&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9f9be31f6b2c570638fd587aa515aab5324ec80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RemoteException&lt;/code&gt; is the common superclass for a number of communication-related exceptions that may occur during the execution of a remote method call.</source>
          <target state="translated">甲 &lt;code&gt;RemoteException&lt;/code&gt; 为许多远程方法调用的执行过程中可能发生的通信相关的异常的公共超。</target>
        </trans-unit>
        <trans-unit id="839e5b3abac606b93773f169161acf83a8a3b493" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RemoteException&lt;/code&gt; is the common superclass for a number of communication-related exceptions that may occur during the execution of a remote method call. Each method of a remote interface, an interface that extends &lt;code&gt;java.rmi.Remote&lt;/code&gt;, must list &lt;code&gt;RemoteException&lt;/code&gt; in its throws clause.</source>
          <target state="translated">甲 &lt;code&gt;RemoteException&lt;/code&gt; 为许多远程方法调用的执行过程中可能发生的通信相关的异常的公共超。远程接口的每个方法，即扩展 &lt;code&gt;java.rmi.Remote&lt;/code&gt; 的接口，都必须在其throws子句中列出 &lt;code&gt;RemoteException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6faecf013e62df9ef640102b4e068feb15415a8d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance must be thread-safe if it's simultaneously used by multiple threads. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; does not synchronize to call the &lt;code&gt;ResourceBundle.Control&lt;/code&gt; methods. The default implementations of the methods are thread-safe.</source>
          <target state="translated">如果 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 实例同时被多个线程使用，则它必须是线程安全的。 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 不同步以调用 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 方法。该方法的默认实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="278799dac47bdb1e5dd43e1ae79d07011ec7107d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Result&lt;/code&gt; containing the object's state for binding and the corresponding attributes to be bound; null if the object don't use this factory.</source>
          <target state="translated">甲 &lt;code&gt;Result&lt;/code&gt; 包含该对象的状态的结合，并结合相应的属性; 如果对象不使用此工厂，则为null。</target>
        </trans-unit>
        <trans-unit id="a2b81ce01a926fddf334a3e3dd43c889d7b6ef26" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ResultSet&lt;/code&gt; object is automatically closed when the &lt;code&gt;Statement&lt;/code&gt; object that generated it is closed, re-executed, or used to retrieve the next result from a sequence of multiple results.</source>
          <target state="translated">阿 &lt;code&gt;ResultSet&lt;/code&gt; 时该对象被自动关闭 &lt;code&gt;Statement&lt;/code&gt; 生成它对象被关闭时，重新执行，或用于检索从多个结果的序列中的下一结果。</target>
        </trans-unit>
        <trans-unit id="1269551aceff07e982e1aa7dc11633a1585bf491" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ResultSet&lt;/code&gt; object maintains a cursor pointing to its current row of data. Initially the cursor is positioned before the first row. The &lt;code&gt;next&lt;/code&gt; method moves the cursor to the next row, and because it returns &lt;code&gt;false&lt;/code&gt; when there are no more rows in the &lt;code&gt;ResultSet&lt;/code&gt; object, it can be used in a &lt;code&gt;while&lt;/code&gt; loop to iterate through the result set.</source>
          <target state="translated">阿 &lt;code&gt;ResultSet&lt;/code&gt; 对象维护指向其当前数据行的光标。最初，光标位于第一行之前。的 &lt;code&gt;next&lt;/code&gt; 方法将光标移动到下一行，并且因为它返回 &lt;code&gt;false&lt;/code&gt; 时，有在没有更多的行 &lt;code&gt;ResultSet&lt;/code&gt; 对象，它可以被用在 &lt;code&gt;while&lt;/code&gt; 在结果集中循环迭代。</target>
        </trans-unit>
        <trans-unit id="a0b09f6a0f2c58ea2685ec820d4941a9f6308fe9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ResultSet&lt;/code&gt; object; each row is a supported client info property</source>
          <target state="translated">阿 &lt;code&gt;ResultSet&lt;/code&gt; 对象; 每行都是受支持的客户端信息属性</target>
        </trans-unit>
        <trans-unit id="e5992f73179b55bd02b7ba70a2343356434f5001" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RetrievalMethod&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;keyinfofactory#newRetrievalMethod(java.lang.String)&quot;&gt;&lt;code&gt;newRetrievalMethod&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class, and passing it the URI identifying the location of the KeyInfo, an optional type URI identifying the type of KeyInfo, and an optional list of &lt;a href=&quot;../transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;s; for example:</source>
          <target state="translated">甲 &lt;code&gt;RetrievalMethod&lt;/code&gt; 实例可以通过调用的一个来创建&lt;a href=&quot;keyinfofactory#newRetrievalMethod(java.lang.String)&quot;&gt; &lt;code&gt;newRetrievalMethod&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt;类，并通过它的URI识别的密钥信息，可选的类型URI识别的KeyInfo的类型，和一个可选的列表的位置&lt;a href=&quot;../transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt;S; 例如：</target>
        </trans-unit>
        <trans-unit id="65ba03d2db39091b26c473a97ad70a6088f30b42" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object creates a &lt;code&gt;RowSetMetaDataImpl&lt;/code&gt; object internally in order to set and retrieve information about its columns.</source>
          <target state="translated">一个 &lt;code&gt;RowSet&lt;/code&gt; 对象创建一个 &lt;code&gt;RowSetMetaDataImpl&lt;/code&gt; 为了内部对象设置和获取关于其列的信息。</target>
        </trans-unit>
        <trans-unit id="35523f0350f58a1b43f5f1ed18cf7e25c00fb33b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object inherits the default properties of the &lt;code&gt;ResultSet&lt;/code&gt; object from which it got its data. That &lt;code&gt;ResultSet&lt;/code&gt; object's default fetch direction is set by the &lt;code&gt;Statement&lt;/code&gt; object that created it.</source>
          <target state="translated">一个 &lt;code&gt;RowSet&lt;/code&gt; 对象继承的默认属性 &lt;code&gt;ResultSet&lt;/code&gt; 从中得到了它的数据对象。该 &lt;code&gt;ResultSet&lt;/code&gt; 对象的默认提取方向由创建它的 &lt;code&gt;Statement&lt;/code&gt; 对象设置。</target>
        </trans-unit>
        <trans-unit id="233e78f8a0df18f6595fe7b4553e59c2f7f22eb2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object inherits the default properties of the &lt;code&gt;ResultSet&lt;/code&gt; object from which it got its data. That &lt;code&gt;ResultSet&lt;/code&gt; object's default fetch size is set by the &lt;code&gt;Statement&lt;/code&gt; object that created it.</source>
          <target state="translated">一个 &lt;code&gt;RowSet&lt;/code&gt; 对象继承的默认属性 &lt;code&gt;ResultSet&lt;/code&gt; 从中得到了它的数据对象。该 &lt;code&gt;ResultSet&lt;/code&gt; 对象的默认提取大小由创建它的 &lt;code&gt;Statement&lt;/code&gt; 对象设置。</target>
        </trans-unit>
        <trans-unit id="7221f1b82771a3bccc7338601ef515aa66597f75" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object is a JavaBeans component because it has properties and participates in the JavaBeans event notification mechanism. The &lt;code&gt;RowSetListener&lt;/code&gt; interface is implemented by a component that wants to be notified about events that occur to a particular &lt;code&gt;RowSet&lt;/code&gt; object. Such a component registers itself as a listener with a rowset via the &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt; method.</source>
          <target state="translated">甲 &lt;code&gt;RowSet&lt;/code&gt; 对象是JavaBeans组件，因为它具有在JavaBeans事件通知机制的属性和参与。该 &lt;code&gt;RowSetListener&lt;/code&gt; 接口由希望被通知发生的特定事件的一个组件来 &lt;code&gt;RowSet&lt;/code&gt; 对象。这样的组件通过 &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt; 方法将自己注册为具有行集的侦听器。</target>
        </trans-unit>
        <trans-unit id="ebfb40d9306da82896bf76a34239df58062d487b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object is a JavaBeans&amp;trade; component because it has properties and participates in the JavaBeans event notification mechanism. The &lt;code&gt;RowSetListener&lt;/code&gt; interface is implemented by a component that wants to be notified about events that occur to a particular &lt;code&gt;RowSet&lt;/code&gt; object. Such a component registers itself as a listener with a rowset via the &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt; method.</source>
          <target state="translated">甲 &lt;code&gt;RowSet&lt;/code&gt; 对象是JavaBeans&amp;trade;组件，因为它具有在JavaBeans事件通知机制的属性和参与。该 &lt;code&gt;RowSetListener&lt;/code&gt; 接口由希望被通知发生的特定事件的一个组件来 &lt;code&gt;RowSet&lt;/code&gt; 对象。这样的组件通过 &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt; 方法将自身注册为具有行集的侦听器。</target>
        </trans-unit>
        <trans-unit id="830d058daa7ae6abbfbbea71c3c410a4f2856270" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object may be populated with data from an SQL &lt;code&gt;VIEW&lt;/code&gt;. The following constants indicate whether a &lt;code&gt;SyncProvider&lt;/code&gt; object can update data in the table or tables from which the &lt;code&gt;VIEW&lt;/code&gt; was derived.</source>
          <target state="translated">甲 &lt;code&gt;RowSet&lt;/code&gt; 对象可以与从SQL的数据来填充 &lt;code&gt;VIEW&lt;/code&gt; 。以下常量指示 &lt;code&gt;SyncProvider&lt;/code&gt; 对象是否可以更新派生 &lt;code&gt;VIEW&lt;/code&gt; 的表中的数据。</target>
        </trans-unit>
        <trans-unit id="e6142e837cc318c749d31fbf09d8617cec525f36" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object may make a connection with a data source and maintain that connection throughout its life cycle, in which case it is called a</source>
          <target state="translated">甲 &lt;code&gt;RowSet&lt;/code&gt; 对象可以与一个数据源的连接，并保持在其整个生命周期中这方面，在这种情况下它被称为</target>
        </trans-unit>
        <trans-unit id="707af84de9b7b68e5ebc3584a61760a2a098f653" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object may use this method at any time to change its setting for the fetch direction.</source>
          <target state="translated">甲 &lt;code&gt;RowSet&lt;/code&gt; 对象可以使用此方法，在任何时候改变其设定为获取方向。</target>
        </trans-unit>
        <trans-unit id="6b010452c34608c38c571e31f2ff693f48d6b4b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object may use this method at any time to change its setting for the fetch size.</source>
          <target state="translated">甲 &lt;code&gt;RowSet&lt;/code&gt; 对象可以使用此方法，在任何时候改变其设定为提取大小。</target>
        </trans-unit>
        <trans-unit id="0108b9517bbe90dce9032e777e0703638967bf71" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object that implements the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on the &lt;code&gt;RowSetReader&lt;/code&gt; object associated with it to populate itself with data. It can also call on the &lt;code&gt;RowSetWriter&lt;/code&gt; object associated with it to write any changes to its rows back to the data source from which it originally got the rows. A rowset that remains connected to its data source does not need to use a reader and writer because it can simply operate on the data source directly.</source>
          <target state="translated">一个 &lt;code&gt;RowSet&lt;/code&gt; 对象实现了 &lt;code&gt;RowSetInternal&lt;/code&gt; 接口上拨打 &lt;code&gt;RowSetReader&lt;/code&gt; 与它相关联的对象与数据本身填充。它还可以调用与之关联的 &lt;code&gt;RowSetWriter&lt;/code&gt; 对象，以将对其行的所有更改写回到最初从中获取行的数据源。保持连接到其数据源的行集不需要使用读取器和写入器，因为它可以直接直接在数据源上进行操作。</target>
        </trans-unit>
        <trans-unit id="54c411c4de012f77914b5e702ec2b2960d6d6b74" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSet&lt;/code&gt; object uses these methods internally when it is populated with data from a different &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">当 &lt;code&gt;RowSet&lt;/code&gt; 对象使用来自不同 &lt;code&gt;ResultSet&lt;/code&gt; 对象的数据填充时，在内部使用这些方法。</target>
        </trans-unit>
        <trans-unit id="49fd81f8a57e315b66135c3c63ce9133ad73f97f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RowSetFactory&lt;/code&gt; implementation &lt;strong&gt;must&lt;/strong&gt; be provided.</source>
          <target state="translated">一个 &lt;code&gt;RowSetFactory&lt;/code&gt; 中实现&lt;strong&gt;必须&lt;/strong&gt;提供。</target>
        </trans-unit>
        <trans-unit id="7e7bc1293f0b3728a32d4cbb58bc720ecd6c238e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPIN_BOX&lt;/code&gt; is a simple spinner component and its main use is for simple numbers.</source>
          <target state="translated">一个 &lt;code&gt;SPIN_BOX&lt;/code&gt; 是一个简单的微调器组件，其主要用途是用于简单的数字。</target>
        </trans-unit>
        <trans-unit id="3ea8ba5219610eb2bae35255e8594348e4d58db4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SQLException&lt;/code&gt; will be thrown if &lt;code&gt;identifier&lt;/code&gt; contains any characters invalid in a delimited identifier or the identifier length is invalid for the datasource.</source>
          <target state="translated">甲 &lt;code&gt;SQLException&lt;/code&gt; 如果将被抛出 &lt;code&gt;identifier&lt;/code&gt; 包含的任何字符分隔标识符无效或者标识符长度为数据源无效。</target>
        </trans-unit>
        <trans-unit id="96a2cfd5e8cf4b28163c2ecff3951f3275086377" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SQLPermission&lt;/code&gt; object contains a name (also referred to as a &quot;target name&quot;) but no actions list; there is either a named permission or there is not. The target name is the name of the permission (see below). The naming convention follows the hierarchical property naming convention. In addition, an asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &lt;code&gt;loadLibrary.*&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; signify a wildcard match, while &lt;code&gt;*loadLibrary&lt;/code&gt; and &lt;code&gt;a*b&lt;/code&gt; do not.</source>
          <target state="translated">甲 &lt;code&gt;SQLPermission&lt;/code&gt; 对象包含一个名称（也被称为&amp;ldquo;目标名称&amp;rdquo;），但没有动作列表; 有一个命名的许可或没有命名的许可。目标名称是权限的名称（请参见下文）。命名约定遵循分层属性命名约定。此外，在名称的末尾可能会出现一个星号，或仅在&amp;ldquo;。&amp;rdquo;之后表示一个通配符匹配项。例如： &lt;code&gt;loadLibrary.*&lt;/code&gt; 和 &lt;code&gt;*&lt;/code&gt; 表示通配符匹配，而 &lt;code&gt;*loadLibrary&lt;/code&gt; 和 &lt;code&gt;a*b&lt;/code&gt; 则不匹配。</target>
        </trans-unit>
        <trans-unit id="13cffffbd34d388f3bda9e47c2411e5450931db5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SSLEngine&lt;/code&gt; provides a means for establishing secure communication sessions between two peers. &lt;code&gt;SSLEngine&lt;/code&gt; operations typically consume bytes from an input buffer and produce bytes in an output buffer. This class provides operational result values describing the state of the &lt;code&gt;SSLEngine&lt;/code&gt;, including indications of what operations are needed to finish an ongoing handshake. Lastly, it reports the number of bytes consumed and produced as a result of this operation.</source>
          <target state="translated">一个 &lt;code&gt;SSLEngine&lt;/code&gt; 上提供了两个对等节点之间建立安全通信会话的手段。 &lt;code&gt;SSLEngine&lt;/code&gt; 操作通常消耗来自输入缓冲区的字节，并在输出缓冲区中产生字节。此类提供了描述 &lt;code&gt;SSLEngine&lt;/code&gt; 状态的操作结果值，包括完成正在进行的握手需要进行哪些操作的指示。最后，它报告此操作所消耗和产生的字节数。</target>
        </trans-unit>
        <trans-unit id="be5086a8a2a67512afd14b8d89179cdc1c7714b2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SSLEngine&lt;/code&gt; using this session may generate SSL/TLS packets of any size up to and including the value returned by this method. All &lt;code&gt;SSLEngine&lt;/code&gt; network buffers should be sized at least this large to avoid insufficient space problems when performing &lt;code&gt;wrap&lt;/code&gt; and &lt;code&gt;unwrap&lt;/code&gt; calls.</source>
          <target state="translated">使用此会话的 &lt;code&gt;SSLEngine&lt;/code&gt; 可以生成最大到（包括）此方法返回的值的任何大小的SSL / TLS数据包。所有 &lt;code&gt;SSLEngine&lt;/code&gt; 网络缓冲区的大小都应至​​少如此大，以避免在执行 &lt;code&gt;wrap&lt;/code&gt; 和 &lt;code&gt;unwrap&lt;/code&gt; 调用时出现空间不足的问题。</target>
        </trans-unit>
        <trans-unit id="e9f67ce9dc7b53b9f6147aebe912ac7694d345ac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SSLSessionContext&lt;/code&gt; represents a set of &lt;code&gt;SSLSession&lt;/code&gt;s associated with a single entity.</source>
          <target state="translated">甲 &lt;code&gt;SSLSessionContext&lt;/code&gt; 下表示一组 &lt;code&gt;SSLSession&lt;/code&gt; 与单个实体相关联的第</target>
        </trans-unit>
        <trans-unit id="ad116e37518384a6f8fd1b681641d4d1a4337f0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SSLSessionContext&lt;/code&gt; represents a set of &lt;code&gt;SSLSession&lt;/code&gt;s associated with a single entity. For example, it could be associated with a server or client who participates in many sessions concurrently.</source>
          <target state="translated">甲 &lt;code&gt;SSLSessionContext&lt;/code&gt; 下表示一组 &lt;code&gt;SSLSession&lt;/code&gt; 与单个实体相关联的第 例如，它可以与同时参与许多会话的服务器或客户端相关联。</target>
        </trans-unit>
        <trans-unit id="1d2a0651dbfc4f447ad26fb1ac64513d96122a53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;STATUS_BAR&lt;/code&gt; is an simple component that can contain multiple labels of status information to the user.</source>
          <target state="translated">甲 &lt;code&gt;STATUS_BAR&lt;/code&gt; 是一种简单的组件，其可以包含的状态信息提供给用户的多个标签。</target>
        </trans-unit>
        <trans-unit id="5cb886248ddeb9dfbe863b678ae575818122b820" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SampleModel&lt;/code&gt; that is compatible with this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;ColorModel&lt;/code&gt; 兼容的 &lt;code&gt;SampleModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df191139b688447435814cf148062bb1f416f974" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SampleModel&lt;/code&gt; to be used as a prototype.</source>
          <target state="translated">一个 &lt;code&gt;SampleModel&lt;/code&gt; 用作原型。</target>
        </trans-unit>
        <trans-unit id="eb176b2751507777548bce49c3daa1e4bf12d3a7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Scanner&lt;/code&gt; breaks its input into tokens using a delimiter pattern, which by default matches whitespace. The resulting tokens may then be converted into values of different types using the various &lt;code&gt;next&lt;/code&gt; methods.</source>
          <target state="translated">甲 &lt;code&gt;Scanner&lt;/code&gt; 断开其输入到使用定界符模式，默认情况下与空白匹配。然后，可以使用各种 &lt;code&gt;next&lt;/code&gt; 一种方法将生成的令牌转换为不同类型的值。</target>
        </trans-unit>
        <trans-unit id="d2ae5d01da91681b0e09f5bf993b02ff3d8c51d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Scanner&lt;/code&gt; is not safe for multithreaded use without external synchronization.</source>
          <target state="translated">在没有外部同步的情况下， &lt;code&gt;Scanner&lt;/code&gt; 不能安全用于多线程。</target>
        </trans-unit>
        <trans-unit id="7114063e1218883537734c8807826b78fa2867d3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ScriptEngine&lt;/code&gt; created by the factory located in the search. Returns null if no such factory was found. The &lt;code&gt;ScriptEngineManager&lt;/code&gt; sets its own &lt;code&gt;globalScope&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; as the &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the newly created &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;ScriptEngine&lt;/code&gt; 的创建由工厂位于搜索。如果找不到这样的工厂，则返回null。该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 设置自己的 &lt;code&gt;globalScope&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; 为 &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; 新创建的 &lt;code&gt;ScriptEngine&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="6db977adc07c1fec67a733e8feec882a1d25224d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SearchControls&lt;/code&gt; or array object passed as a parameter to any method is owned by the caller. The service provider will not modify the object or keep a reference to it.</source>
          <target state="translated">调用者拥有作为参数传递给任何方法的 &lt;code&gt;SearchControls&lt;/code&gt; 或数组对象。服务提供者将不会修改该对象或保留对其的引用。</target>
        </trans-unit>
        <trans-unit id="4c5a148aab6fdebb2f29c63449a68ab51157e6ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecureDirectoryStream&lt;/code&gt; requires corresponding support from the underlying operating system. Where an implementation supports this features then the &lt;code&gt;DirectoryStream&lt;/code&gt; returned by the &lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path)&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method will be a &lt;code&gt;SecureDirectoryStream&lt;/code&gt; and must be cast to that type in order to invoke the methods defined by this interface.</source>
          <target state="translated">甲 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; 需要来自底层操作系统对应的支撑。如果实现支持此功能，则&lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path)&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;方法返回的 &lt;code&gt;DirectoryStream&lt;/code&gt; 将是 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; ,并且必须强制转换为该类型，才能调用此接口定义的方法。</target>
        </trans-unit>
        <trans-unit id="a29b101451e61fce98157bb2ee58c4b375379b8a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecureDirectoryStream&lt;/code&gt; requires corresponding support from the underlying operating system. Where an implementation supports this features then the &lt;code&gt;DirectoryStream&lt;/code&gt; returned by the &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method will be a &lt;code&gt;SecureDirectoryStream&lt;/code&gt; and must be cast to that type in order to invoke the methods defined by this interface.</source>
          <target state="translated">甲 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; 需要来自底层操作系统对应的支撑。如果实现支持此功能，则&lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;方法返回的 &lt;code&gt;DirectoryStream&lt;/code&gt; 将是 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; ,并且必须强制转换为该类型，才能调用此接口定义的方法。</target>
        </trans-unit>
        <trans-unit id="a09895bcec5b253ef83a4711a43fb6500d77ab91" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecureRandom&lt;/code&gt; can be reseeded at any time by calling the &lt;code&gt;reseed&lt;/code&gt; or &lt;code&gt;setSeed&lt;/code&gt; method. The &lt;code&gt;reseed&lt;/code&gt; method reads entropy input from its entropy source to reseed itself. The &lt;code&gt;setSeed&lt;/code&gt; method requires the caller to provide the seed.</source>
          <target state="translated">甲 &lt;code&gt;SecureRandom&lt;/code&gt; 的可以在任何时候通过调用补种 &lt;code&gt;reseed&lt;/code&gt; 或 &lt;code&gt;setSeed&lt;/code&gt; 方法。的 &lt;code&gt;reseed&lt;/code&gt; 方法读取从它的熵源熵输入到补种本身。该 &lt;code&gt;setSeed&lt;/code&gt; 方法要求主叫方提供所述种子。</target>
        </trans-unit>
        <trans-unit id="c58cb4d6699a4a2f4e16889a3900c3794374d2a2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecureRandom&lt;/code&gt; service provider can advertise that it is thread-safe by setting the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#service-attributes&quot;&gt;service provider attribute&lt;/a&gt; &quot;ThreadSafe&quot; to &quot;true&quot; when registering the provider. Otherwise, this class will instead synchronize access to the following methods of the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation:</source>
          <target state="translated">一个 &lt;code&gt;SecureRandom&lt;/code&gt; 的服务提供商可以做广告，它是线程安全的通过设置&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#service-attributes&quot;&gt;服务提供商属性&lt;/a&gt;注册的供应商时，&amp;ldquo;ThreadSafe的&amp;rdquo;为&amp;ldquo;true&amp;rdquo;。否则，此类将改为同步对 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 实现的以下方法的访问：</target>
        </trans-unit>
        <trans-unit id="48f58d7e35b33c41a747ee77d10db82cdf4cd55a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecureRandom&lt;/code&gt; service provider can advertise that it is thread-safe by setting the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#service-attributes&quot;&gt;service provider attribute&lt;/a&gt; &quot;ThreadSafe&quot; to &quot;true&quot; when registering the provider. Otherwise, this class will instead synchronize access to the following methods of the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation:</source>
          <target state="translated">一个 &lt;code&gt;SecureRandom&lt;/code&gt; 的服务提供商可以做广告，它是线程安全的通过设置&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#service-attributes&quot;&gt;服务提供商属性&lt;/a&gt;注册的供应商时，&amp;ldquo;ThreadSafe的&amp;rdquo;为&amp;ldquo;true&amp;rdquo;。否则，此类将改为同步对 &lt;code&gt;SecureRandomSpi&lt;/code&gt; 实现的以下方法的访问：</target>
        </trans-unit>
        <trans-unit id="363c5c2b325a2467f2dba26473ef1182cb00a6ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecurityException&lt;/code&gt; is also thrown if any of the elements of the input &lt;code&gt;array&lt;/code&gt; is a &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object for the class &lt;code&gt;java.lang.Class&lt;/code&gt; and &lt;code&gt;flag&lt;/code&gt; is true.</source>
          <target state="translated">甲 &lt;code&gt;SecurityException&lt;/code&gt; 也抛出如果任何输入的元件的 &lt;code&gt;array&lt;/code&gt; 是一个&lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;用于类对象 &lt;code&gt;java.lang.Class&lt;/code&gt; 和 &lt;code&gt;flag&lt;/code&gt; 为真。</target>
        </trans-unit>
        <trans-unit id="8267123825960a628289c6028b67620bec4aa5d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecurityException&lt;/code&gt; is also thrown if this object is a &lt;code&gt;Constructor&lt;/code&gt; object for the class &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;flag&lt;/code&gt; is true.</source>
          <target state="translated">一个 &lt;code&gt;SecurityException&lt;/code&gt; 如果这个对象是也抛出 &lt;code&gt;Constructor&lt;/code&gt; 对象的类 &lt;code&gt;Class&lt;/code&gt; 和 &lt;code&gt;flag&lt;/code&gt; 是真实的。</target>
        </trans-unit>
        <trans-unit id="1348b96b1f9cb55e6c7bc102d126076ba48c8171" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecurityException&lt;/code&gt; is raised if &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; but accessibility of any of the elements of the input &lt;code&gt;array&lt;/code&gt; may not be changed (for example, if the element object is a &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object for the class &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;). In the event of such a SecurityException, the accessibility of objects is set to &lt;code&gt;flag&lt;/code&gt; for array elements upto (and excluding) the element for which the exception occurred; the accessibility of elements beyond (and including) the element for which the exception occurred is unchanged.</source>
          <target state="translated">甲 &lt;code&gt;SecurityException&lt;/code&gt; 如果升高 &lt;code&gt;flag&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ，但任何输入的元件中的可访问性 &lt;code&gt;array&lt;/code&gt; 可以不改变（例如，如果元素对象是&lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;对象的类&lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;）。在发生此类SecurityException的情况下，将对象的可访问性设置为 &lt;code&gt;flag&lt;/code&gt; 直到（且不包括）发生异常的元素的数组元素。超出发生异常的元素（包括）之外的元素的可访问性不变。</target>
        </trans-unit>
        <trans-unit id="91d4909b78a699d458ff1b4c6a25ff1e864934b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecurityException&lt;/code&gt; is raised if &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; but accessibility of this object may not be changed (for example, if this element object is a &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object for the class &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">甲 &lt;code&gt;SecurityException&lt;/code&gt; 如果升高 &lt;code&gt;flag&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ，但此对象的可访问性可以不改变（例如，如果该元素对象是一个&lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;对象的类&lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="be2d43eca8667b1e0a7c0bbdfd5cbe7046d51e49" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SecurityException&lt;/code&gt; is raised if this object is a &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object for the class &lt;code&gt;java.lang.Class&lt;/code&gt;, and &lt;code&gt;flag&lt;/code&gt; is true.</source>
          <target state="translated">一个 &lt;code&gt;SecurityException&lt;/code&gt; 如果这个对象是提高&lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;对象类 &lt;code&gt;java.lang.Class&lt;/code&gt; 和 &lt;code&gt;flag&lt;/code&gt; 是真实的。</target>
        </trans-unit>
        <trans-unit id="333a27035fa0205934ea5038f80b765e2ca2a0f3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sequence&lt;/code&gt; can be created from a MIDI file by reading the file into an input stream and invoking one of the &lt;code&gt;getSequence&lt;/code&gt; methods of &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;MidiSystem&lt;/code&gt;&lt;/a&gt;. A sequence can also be built from scratch by adding new &lt;code&gt;Tracks&lt;/code&gt; to an empty &lt;code&gt;Sequence&lt;/code&gt;, and adding &lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt; objects to these &lt;code&gt;Tracks&lt;/code&gt;.</source>
          <target state="translated">通过将MIDI文件读入输入流并调用&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;MidiSystem&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;getSequence&lt;/code&gt; 方法之一，可以从MIDI文件创建一个 &lt;code&gt;Sequence&lt;/code&gt; 。通过将新的 &lt;code&gt;Tracks&lt;/code&gt; 添加到一个空 &lt;code&gt;Sequence&lt;/code&gt; 并将&lt;a href=&quot;midievent&quot;&gt; &lt;code&gt;MidiEvent&lt;/code&gt; &lt;/a&gt;对象添加到这些 &lt;code&gt;Tracks&lt;/code&gt; ，也可以从头开始构建一个sequence。</target>
        </trans-unit>
        <trans-unit id="47f1ccb99f3622c1d1fbee26066775abbdd89280" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sequence&lt;/code&gt; can be created from a MIDI file by reading the file into an input stream and invoking one of the &lt;code&gt;getSequence&lt;/code&gt; methods of &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;MidiSystem&lt;/code&gt;&lt;/a&gt;. A sequence can also be built from scratch by adding new &lt;code&gt;Tracks&lt;/code&gt; to an empty &lt;code&gt;Sequence&lt;/code&gt;, and adding &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects to these &lt;code&gt;Tracks&lt;/code&gt;.</source>
          <target state="translated">通过将MIDI文件读入输入流并调用&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;MidiSystem&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;getSequence&lt;/code&gt; 方法之一，可以从MIDI文件创建一个 &lt;code&gt;Sequence&lt;/code&gt; 。通过将新的 &lt;code&gt;Tracks&lt;/code&gt; 添加到一个空 &lt;code&gt;Sequence&lt;/code&gt; 并将 &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象添加到这些 &lt;code&gt;Tracks&lt;/code&gt; ，也可以从头开始构建一个sequence。</target>
        </trans-unit>
        <trans-unit id="3a5ff8b505d73b540246b730e9a90c0545a3cc85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sequence&lt;/code&gt; is a data structure containing musical information (often an entire song or composition) that can be played back by a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">甲 &lt;code&gt;Sequence&lt;/code&gt; 是包含音乐信息可以由回放的数据结构（通常是整首歌曲或组合物）&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="fa71ed91e1341a5f16c1570d55c6594ba10dd17c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sequence&lt;/code&gt; is a data structure containing musical information (often an entire song or composition) that can be played back by a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; object. Specifically, the &lt;code&gt;Sequence&lt;/code&gt; contains timing information and one or more tracks. Each &lt;a href=&quot;track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; consists of a series of MIDI events (such as note-ons, note-offs, program changes, and meta-events). The sequence's timing information specifies the type of unit that is used to time-stamp the events in the sequence.</source>
          <target state="translated">甲 &lt;code&gt;Sequence&lt;/code&gt; 是包含音乐信息可以由回放的数据结构（通常是整首歌曲或组合物）&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;对象。具体而言， &lt;code&gt;Sequence&lt;/code&gt; 包含时序信息和一个或多个轨道。每个&lt;a href=&quot;track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;包含一系列MIDI事件（例如音符开，音符关闭，程序更改和元事件）。序列的时间信息指定用于对序列中的事件进行时间戳记的单位类型。</target>
        </trans-unit>
        <trans-unit id="92987c7d586485713ab01347ccc93734161b144f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sequence&lt;/code&gt; is a data structure containing musical information (often an entire song or composition) that can be played back by a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">甲 &lt;code&gt;Sequence&lt;/code&gt; 是包含音乐信息可以由回放的数据结构（通常是整首歌曲或组合物） &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="c03b7c1f7021273b40415a3aaea4dcc1f735d836" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sequence&lt;/code&gt; is a data structure containing musical information (often an entire song or composition) that can be played back by a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object. Specifically, the &lt;code&gt;Sequence&lt;/code&gt; contains timing information and one or more tracks. Each &lt;code&gt;&lt;a href=&quot;track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; consists of a series of MIDI events (such as note-ons, note-offs, program changes, and meta-events). The sequence's timing information specifies the type of unit that is used to time-stamp the events in the sequence.</source>
          <target state="translated">甲 &lt;code&gt;Sequence&lt;/code&gt; 是包含音乐信息可以由回放的数据结构（通常是整首歌曲或组合物） &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象。具体而言， &lt;code&gt;Sequence&lt;/code&gt; 包含时序信息和一个或多个轨道。每个 &lt;code&gt;&lt;a href=&quot;track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 包含一系列MIDI事件（例如音符开，音符关闭，程序更改和元事件）。序列的时间信息指定用于对序列中的事件进行时间戳记的单位类型。</target>
        </trans-unit>
        <trans-unit id="53ae5e222af53133bd2c9490689f333c8858ecfa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SequenceInputStream&lt;/code&gt; represents the logical concatenation of other input streams.</source>
          <target state="translated">甲 &lt;code&gt;SequenceInputStream&lt;/code&gt; 表示其他输入流的逻辑串联。</target>
        </trans-unit>
        <trans-unit id="5dfc24617c0471997ddeb447ae28a22a21b8674a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SequenceInputStream&lt;/code&gt; represents the logical concatenation of other input streams. It starts out with an ordered collection of input streams and reads from the first one until end of file is reached, whereupon it reads from the second one, and so on, until end of file is reached on the last of the contained input streams.</source>
          <target state="translated">甲 &lt;code&gt;SequenceInputStream&lt;/code&gt; 表示其他输入流的逻辑串联。它从输入流的有序集合开始，从第一个开始读取，直到到达文件末尾，然后从第二个开始读取，依此类推，直到在最后一个包含的输入流中到达文件末尾。</target>
        </trans-unit>
        <trans-unit id="64f8e35603f8ba57d8ba66f9ae61c25ccd670a67" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerCloneException&lt;/code&gt; is thrown if a remote exception occurs during the cloning of a &lt;code&gt;UnicastRemoteObject&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;ServerCloneException&lt;/code&gt; 如果一个的克隆过程中发生远程抛出异常 &lt;code&gt;UnicastRemoteObject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7eba2e9b7dd931ba77a3701035a13eebd64f627" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerError&lt;/code&gt; is thrown as a result of a remote method invocation when an &lt;code&gt;Error&lt;/code&gt; is thrown while processing the invocation on the server, either while unmarshalling the arguments, executing the remote method itself, or marshalling the return value.</source>
          <target state="translated">甲 &lt;code&gt;ServerError&lt;/code&gt; 被抛出作为远程方法调用的结果，当一个 &lt;code&gt;Error&lt;/code&gt; 在处理服务器上的调用，则抛出任而解编参数，执行远程方法本身，或编组的返回值。</target>
        </trans-unit>
        <trans-unit id="a3b63fb9fe91928086d1b1f47d822e660c579eef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerError&lt;/code&gt; is thrown as a result of a remote method invocation when an &lt;code&gt;Error&lt;/code&gt; is thrown while processing the invocation on the server, either while unmarshalling the arguments, executing the remote method itself, or marshalling the return value. A &lt;code&gt;ServerError&lt;/code&gt; instance contains the original &lt;code&gt;Error&lt;/code&gt; that occurred as its cause.</source>
          <target state="translated">甲 &lt;code&gt;ServerError&lt;/code&gt; 被抛出作为远程方法调用的结果，当一个 &lt;code&gt;Error&lt;/code&gt; 在处理服务器上的调用，则抛出任而解编参数，执行远程方法本身，或编组的返回值。一个 &lt;code&gt;ServerError&lt;/code&gt; 实例包含原来的 &lt;code&gt;Error&lt;/code&gt; 发生作为其原因。</target>
        </trans-unit>
        <trans-unit id="c4a92e396c22734a0762dd6b2fd187b5c5d3052e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerException&lt;/code&gt; is thrown as a result of a remote method invocation when a &lt;code&gt;RemoteException&lt;/code&gt; is thrown while processing the invocation on the server, either while unmarshalling the arguments or executing the remote method itself.</source>
          <target state="translated">甲 &lt;code&gt;ServerException&lt;/code&gt; 当被抛出作为远程方法调用的结果 &lt;code&gt;RemoteException&lt;/code&gt; 在处理服务器上的调用，要么同时解编参数或执行远程方法本身被抛出。</target>
        </trans-unit>
        <trans-unit id="2330b59ecf339f5b208e07a73273f4281a6fee8b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerException&lt;/code&gt; is thrown as a result of a remote method invocation when a &lt;code&gt;RemoteException&lt;/code&gt; is thrown while processing the invocation on the server, either while unmarshalling the arguments or executing the remote method itself. A &lt;code&gt;ServerException&lt;/code&gt; instance contains the original &lt;code&gt;RemoteException&lt;/code&gt; that occurred as its cause.</source>
          <target state="translated">甲 &lt;code&gt;ServerException&lt;/code&gt; 当被抛出作为远程方法调用的结果 &lt;code&gt;RemoteException&lt;/code&gt; 在处理服务器上的调用，要么同时解编参数或执行远程方法本身被抛出。一个 &lt;code&gt;ServerException&lt;/code&gt; 实例包含原来 &lt;code&gt;RemoteException&lt;/code&gt; 发生作为其原因。</target>
        </trans-unit>
        <trans-unit id="3d75c2168deeeca35b1589b3c45e0a3a7cba5a16" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ServerRuntimeException&lt;/code&gt; is not thrown from servers executing on the Java 2 platform v1.2 or later versions.</source>
          <target state="translated">一个 &lt;code&gt;ServerRuntimeException&lt;/code&gt; 不是从Java 2平台v1.2或更高版本执行服务器抛出。</target>
        </trans-unit>
        <trans-unit id="a3a1640525a688346d415ae5d3f4e448fed7dd2e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Set&lt;/code&gt; containing the open associations, or an empty &lt;code&gt;Set&lt;/code&gt; if there are none.</source>
          <target state="translated">一 &lt;code&gt;Set&lt;/code&gt; 包含了打开的关联，或空 &lt;code&gt;Set&lt;/code&gt; ，如果有没有。</target>
        </trans-unit>
        <trans-unit id="68cee623b4eb08a33c48f686d33c5250166ff777" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Set&lt;/code&gt; of &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; objects are returned by the &lt;a href=&quot;policynode#getPolicyQualifiers()&quot;&gt;&lt;code&gt;PolicyNode.getPolicyQualifiers&lt;/code&gt;&lt;/a&gt; method. This allows applications with specific policy requirements to process and validate each policy qualifier. Applications that need to process policy qualifiers should explicitly set the &lt;code&gt;policyQualifiersRejected&lt;/code&gt; flag to false (by calling the &lt;a href=&quot;pkixparameters#setPolicyQualifiersRejected(boolean)&quot;&gt;&lt;code&gt;PKIXParameters.setPolicyQualifiersRejected&lt;/code&gt;&lt;/a&gt; method) before validating a certification path.</source>
          <target state="translated">一 &lt;code&gt;Set&lt;/code&gt; 的 &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; 对象是通过返回的&lt;a href=&quot;policynode#getPolicyQualifiers()&quot;&gt; &lt;code&gt;PolicyNode.getPolicyQualifiers&lt;/code&gt; &lt;/a&gt;方法。这允许具有特定策略要求的应用程序处理和验证每个策略限定符。需要处理策略限定符的应用程序应在验证证书路径之前将 &lt;code&gt;policyQualifiersRejected&lt;/code&gt; 标志显式设置为false（通过调用&lt;a href=&quot;pkixparameters#setPolicyQualifiersRejected(boolean)&quot;&gt; &lt;code&gt;PKIXParameters.setPolicyQualifiersRejected&lt;/code&gt; &lt;/a&gt;方法）。</target>
        </trans-unit>
        <trans-unit id="664c53380d8546663274983ecf83d6c0d77d55fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Set&lt;/code&gt; of &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; objects are returned by the &lt;a href=&quot;policynode#getPolicyQualifiers--&quot;&gt;&lt;code&gt;PolicyNode.getPolicyQualifiers&lt;/code&gt;&lt;/a&gt; method. This allows applications with specific policy requirements to process and validate each policy qualifier. Applications that need to process policy qualifiers should explicitly set the &lt;code&gt;policyQualifiersRejected&lt;/code&gt; flag to false (by calling the &lt;a href=&quot;pkixparameters#setPolicyQualifiersRejected-boolean-&quot;&gt;&lt;code&gt;PKIXParameters.setPolicyQualifiersRejected&lt;/code&gt;&lt;/a&gt; method) before validating a certification path.</source>
          <target state="translated">一 &lt;code&gt;Set&lt;/code&gt; 的 &lt;code&gt;PolicyQualifierInfo&lt;/code&gt; 对象是通过返回的&lt;a href=&quot;policynode#getPolicyQualifiers--&quot;&gt; &lt;code&gt;PolicyNode.getPolicyQualifiers&lt;/code&gt; &lt;/a&gt;方法。这使具有特定策略要求的应用程序可以处理和验证每个策略限定符。需要处理策略限定符的应用程序应在验证证书路径之前将 &lt;code&gt;policyQualifiersRejected&lt;/code&gt; 标志显式设置为false（通过调用&lt;a href=&quot;pkixparameters#setPolicyQualifiersRejected-boolean-&quot;&gt; &lt;code&gt;PKIXParameters.setPolicyQualifiersRejected&lt;/code&gt; &lt;/a&gt;方法）。</target>
        </trans-unit>
        <trans-unit id="9e26bc246691b598cf4b4baea9dbd4941f31b126" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Set&lt;/code&gt; of private credentials held by this &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;Subject&lt;/code&gt; 拥有的 &lt;code&gt;Set&lt;/code&gt; 私人证书。</target>
        </trans-unit>
        <trans-unit id="25ecf6c13358fd6c3988492153f2ca66c0a7c09d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Set&lt;/code&gt; of public credentials held by this &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;Subject&lt;/code&gt; 拥有的 &lt;code&gt;Set&lt;/code&gt; 公共证书。</target>
        </trans-unit>
        <trans-unit id="d23d1497e3e01041be25fe9fe4c863ffe56c1001" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ShardingKey&lt;/code&gt; may also be used for specifying a &lt;code&gt;superShardingKey&lt;/code&gt;. Databases that support composite Sharding may use a &lt;code&gt;superShardingKey&lt;/code&gt; to specify a additional level of partitioning within the Shard.</source>
          <target state="translated">甲 &lt;code&gt;ShardingKey&lt;/code&gt; 也可以使用用于指定 &lt;code&gt;superShardingKey&lt;/code&gt; 。支持复合分片的数据库可以使用 &lt;code&gt;superShardingKey&lt;/code&gt; 来指定分片内的其他分区级别。</target>
        </trans-unit>
        <trans-unit id="8e76fcba29fd4a12c2249595d7807514ece699ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ShortMessage&lt;/code&gt; contains a MIDI message that has at most two data bytes following its status byte.</source>
          <target state="translated">一个 &lt;code&gt;ShortMessage&lt;/code&gt; 包含有字节在状态字节后最多有两个数据中的MIDI消息。</target>
        </trans-unit>
        <trans-unit id="332caac10175dbc76add8475e7dbeca6d7617182" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ShortMessage&lt;/code&gt; contains a MIDI message that has at most two data bytes following its status byte. The types of MIDI message that satisfy this criterion are channel voice, channel mode, system common, and system real-time--in other words, everything except system exclusive and meta-events. The &lt;code&gt;ShortMessage&lt;/code&gt; class provides methods for getting and setting the contents of the MIDI message.</source>
          <target state="translated">一个 &lt;code&gt;ShortMessage&lt;/code&gt; 包含有字节在状态字节后最多有两个数据中的MIDI消息。满足此条件的MIDI消息的类型为通道语音，通道模式，系统通用和系统实时-换句话说，除系统独占和元事件以外的所有内容。该 &lt;code&gt;ShortMessage&lt;/code&gt; 类提供了用于获取和设置MIDI消息内容的方法。</target>
        </trans-unit>
        <trans-unit id="13ae34f3b0a0aff81ddb18ddb3768b8b2a397067" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SignatureMethod&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newSignatureMethod(java.lang.String,javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec)&quot;&gt;&lt;code&gt;newSignatureMethod&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">阿 &lt;code&gt;SignatureMethod&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newSignatureMethod(java.lang.String,javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec)&quot;&gt; &lt;code&gt;newSignatureMethod&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="31075194033bd091ea68517207b55ef35963bc6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SignatureProperties&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newSignatureProperties(java.util.List,java.lang.String)&quot;&gt;&lt;code&gt;newSignatureProperties&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class; for example:</source>
          <target state="translated">甲 &lt;code&gt;SignatureProperties&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newSignatureProperties(java.util.List,java.lang.String)&quot;&gt; &lt;code&gt;newSignatureProperties&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类; 例如：</target>
        </trans-unit>
        <trans-unit id="d864d4ecc1eed7f3acee7d1b31bb6f1733c60e27" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SignatureProperty&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newSignatureProperty(java.util.List,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;newSignatureProperty&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class; for example:</source>
          <target state="translated">甲 &lt;code&gt;SignatureProperty&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newSignatureProperty(java.util.List,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;newSignatureProperty&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类; 例如：</target>
        </trans-unit>
        <trans-unit id="161b7033a5670df38a4bf1dadf04453cd433b023" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SignedInfo&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;xmlsignaturefactory#newSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List)&quot;&gt;&lt;code&gt;newSignedInfo&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">甲 &lt;code&gt;SignedInfo&lt;/code&gt; 实例可以通过调用的一个来创建&lt;a href=&quot;xmlsignaturefactory#newSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List)&quot;&gt; &lt;code&gt;newSignedInfo&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="fd52f6852258fb45d0465f21689b2a061df0bff2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SimpleScriptContext&lt;/code&gt; is used as the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;AbstractScriptEngine&lt;/code&gt;..</source>
          <target state="translated">一个 &lt;code&gt;SimpleScriptContext&lt;/code&gt; 用作默认 &lt;code&gt;ScriptContext&lt;/code&gt; 中的的 &lt;code&gt;AbstractScriptEngine&lt;/code&gt; ..</target>
        </trans-unit>
        <trans-unit id="a5555cfa3e24e81ee173481d7b51680cf89e298b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SimpleScriptContext&lt;/code&gt; returned by this method is used to implement eval methods using the abstract &lt;code&gt;eval(Reader,Bindings)&lt;/code&gt; and &lt;code&gt;eval(String,Bindings)&lt;/code&gt; versions.</source>
          <target state="translated">甲 &lt;code&gt;SimpleScriptContext&lt;/code&gt; 返回由该方法用于实现使用抽象的eval方法 &lt;code&gt;eval(Reader,Bindings)&lt;/code&gt; 和 &lt;code&gt;eval(String,Bindings)&lt;/code&gt; 的版本。</target>
        </trans-unit>
        <trans-unit id="5c3522c1bb51e037675256ff738011a971700111" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SizeSequence&lt;/code&gt; object efficiently maintains an ordered list of sizes and corresponding positions.</source>
          <target state="translated">一个 &lt;code&gt;SizeSequence&lt;/code&gt; 对象，它有效保持大小和相应位置的顺序列表。</target>
        </trans-unit>
        <trans-unit id="bd4e66b73c0e8d262a5a6d1ddc1597c7e1aad79a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SizeSequence&lt;/code&gt; object efficiently maintains an ordered list of sizes and corresponding positions. One situation for which &lt;code&gt;SizeSequence&lt;/code&gt; might be appropriate is in a component that displays multiple rows of unequal size. In this case, a single &lt;code&gt;SizeSequence&lt;/code&gt; object could be used to track the heights and Y positions of all rows.</source>
          <target state="translated">一个 &lt;code&gt;SizeSequence&lt;/code&gt; 对象，它有效保持大小和相应位置的顺序列表。一种可能适合使用 &lt;code&gt;SizeSequence&lt;/code&gt; 的情况是在显示多行不等大小的组件中。在这种情况下，可以使用单个 &lt;code&gt;SizeSequence&lt;/code&gt; 对象跟踪所有行的高度和Y位置。</target>
        </trans-unit>
        <trans-unit id="5ee1558d6d28954c02def5254470fac145c00dbc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SkeletonNotFoundException&lt;/code&gt; is thrown if the &lt;code&gt;Skeleton&lt;/code&gt; corresponding to the remote object being exported is not found. Skeletons are no longer required, so this exception is never thrown.</source>
          <target state="translated">甲 &lt;code&gt;SkeletonNotFoundException&lt;/code&gt; 如果被抛出 &lt;code&gt;Skeleton&lt;/code&gt; 中没有找到对应于被导出的远程对象。不再需要骨骼，因此永远不会抛出此异常。</target>
        </trans-unit>
        <trans-unit id="0aa792e298cb7d4503cc6f14cc6a01bcc2f8b031" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; is mapped in the same way, but it is only convertible if &lt;em&gt;K&lt;/em&gt; is a class or interface that implements &lt;a href=&quot;../../../java.base/java/lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;. Thus, a &lt;code&gt;SortedMap&amp;lt;String,int[]&amp;gt;&lt;/code&gt; is convertible, but a &lt;code&gt;SortedMap&amp;lt;int[],String&amp;gt;&lt;/code&gt; is not. The conversion of a &lt;code&gt;SortedMap&lt;/code&gt; instance will fail with an &lt;code&gt;
          IllegalArgumentException&lt;/code&gt; if it has a non-null &lt;a href=&quot;../../../java.base/java/util/sortedmap#comparator()&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 被映射以相同的方式，但它仅仅是可兑换如果&lt;em&gt;ķ&lt;/em&gt;是一个类或接口实现&lt;a href=&quot;../../../java.base/java/lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;。因此， &lt;code&gt;SortedMap&amp;lt;String,int[]&amp;gt;&lt;/code&gt; 是可转换的，但 &lt;code&gt;SortedMap&amp;lt;int[],String&amp;gt;&lt;/code&gt; 不是。如果 &lt;code&gt;SortedMap&lt;/code&gt; 实例具有非null &lt;a href=&quot;../../../java.base/java/util/sortedmap#comparator()&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; &lt;/a&gt;的转换将失败，并 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be41add239b970c680e56068d4ab46a2a90a5a84" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; is mapped in the same way, but it is only convertible if &lt;em&gt;K&lt;/em&gt; is a class or interface that implements &lt;a href=&quot;../../java/lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;. Thus, a &lt;code&gt;SortedMap&amp;lt;String,int[]&amp;gt;&lt;/code&gt; is convertible, but a &lt;code&gt;SortedMap&amp;lt;int[],String&amp;gt;&lt;/code&gt; is not. The conversion of a &lt;code&gt;SortedMap&lt;/code&gt; instance will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if it has a non-null &lt;a href=&quot;../../java/util/sortedmap#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;SortedMap&amp;lt;&lt;/code&gt; &lt;em&gt;ķ&lt;/em&gt;，&lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 被映射以相同的方式，但它仅仅是可兑换如果&lt;em&gt;ķ&lt;/em&gt;是一个类或接口实现&lt;a href=&quot;../../java/lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;。因此， &lt;code&gt;SortedMap&amp;lt;String,int[]&amp;gt;&lt;/code&gt; 是可转换的，但 &lt;code&gt;SortedMap&amp;lt;int[],String&amp;gt;&lt;/code&gt; 不是。如果 &lt;code&gt;SortedMap&lt;/code&gt; 实例具有非null &lt;a href=&quot;../../java/util/sortedmap#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; &lt;/a&gt;的转换将失败，并 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86d2da3d0dd8fc66d3bad010c91cfe52a35e33d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SortedSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; is also mapped in the same way as an &lt;em&gt;E&lt;/em&gt;&lt;code&gt;[]&lt;/code&gt;, but it is only convertible if &lt;em&gt;E&lt;/em&gt; is a class or interface that implements &lt;a href=&quot;../../../java.base/java/lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;. Thus, a &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; or &lt;code&gt;SortedSet&amp;lt;Integer&amp;gt;&lt;/code&gt; is convertible, but a &lt;code&gt;
          SortedSet&amp;lt;int[]&amp;gt;&lt;/code&gt; or &lt;code&gt;SortedSet&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; is not. The conversion of a &lt;code&gt;SortedSet&lt;/code&gt; instance will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if it has a non-null &lt;a href=&quot;../../../java.base/java/util/sortedset#comparator()&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;SortedSet&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 也被映射以相同的方式作为&lt;em&gt;&amp;euml; &lt;/em&gt; &lt;code&gt;[]&lt;/code&gt; ，但它仅仅是可兑换如果&lt;em&gt;&amp;Euml;&lt;/em&gt;是一个类或接口实现&lt;a href=&quot;../../../java.base/java/lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;。因此， &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; 或 &lt;code&gt;SortedSet&amp;lt;Integer&amp;gt;&lt;/code&gt; 是可转换的，而 &lt;code&gt; SortedSet&amp;lt;int[]&amp;gt;&lt;/code&gt; 或 &lt;code&gt;SortedSet&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; 不是。如果 &lt;code&gt;SortedSet&lt;/code&gt; 实例具有非null&lt;a href=&quot;../../../java.base/java/util/sortedset#comparator()&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; &lt;/a&gt;则该转换将失败，并 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eba384ea4c59a220657b695b8a65869443ab17b0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SortedSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; is also mapped in the same way as an &lt;em&gt;E&lt;/em&gt;&lt;code&gt;[]&lt;/code&gt;, but it is only convertible if &lt;em&gt;E&lt;/em&gt; is a class or interface that implements &lt;a href=&quot;../../java/lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;. Thus, a &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; or &lt;code&gt;SortedSet&amp;lt;Integer&amp;gt;&lt;/code&gt; is convertible, but a &lt;code&gt;SortedSet&amp;lt;int[]&amp;gt;&lt;/code&gt; or &lt;code&gt;SortedSet&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; is not. The conversion of a &lt;code&gt;SortedSet&lt;/code&gt; instance will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if it has a non-null &lt;a href=&quot;../../java/util/sortedset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;SortedSet&amp;lt;&lt;/code&gt; &lt;em&gt;&amp;eacute; &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 也被映射以相同的方式作为&lt;em&gt;&amp;euml; &lt;/em&gt; &lt;code&gt;[]&lt;/code&gt; ，但它仅仅是可兑换如果&lt;em&gt;&amp;Euml;&lt;/em&gt;是一个类或接口实现&lt;a href=&quot;../../java/lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;。因此， &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; 或 &lt;code&gt;SortedSet&amp;lt;Integer&amp;gt;&lt;/code&gt; 是可转换的，而 &lt;code&gt;SortedSet&amp;lt;int[]&amp;gt;&lt;/code&gt; 或 &lt;code&gt;SortedSet&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;&lt;/code&gt; 不是。如果 &lt;code&gt;SortedSet&lt;/code&gt; 实例具有非null &lt;a href=&quot;../../java/util/sortedset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; &lt;/a&gt;则该转换将失败，并 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a1428a93985c53305df08261b8b65973bb4ae90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Soundbank&lt;/code&gt; contains a set of &lt;code&gt;Instruments&lt;/code&gt; that can be loaded into a &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Soundbank&lt;/code&gt; 中包含了一组 &lt;code&gt;Instruments&lt;/code&gt; ，可以加载到 &lt;code&gt;Synthesizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="936fe97b42056562dcee1bb2643c429b7f2dde2d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Soundbank&lt;/code&gt; contains a set of &lt;code&gt;Instruments&lt;/code&gt; that can be loaded into a &lt;code&gt;Synthesizer&lt;/code&gt;. Note that a Java Sound &lt;code&gt;Soundbank&lt;/code&gt; is different from a MIDI bank. MIDI permits up to 16383 banks, each containing up to 128 instruments (also sometimes called programs, patches, or timbres). However, a &lt;code&gt;Soundbank&lt;/code&gt; can contain 16383 times 128 instruments, because the instruments within a &lt;code&gt;Soundbank&lt;/code&gt; are indexed by both a MIDI program number and a MIDI bank number (via a &lt;code&gt;Patch&lt;/code&gt; object). Thus, a &lt;code&gt;Soundbank&lt;/code&gt; can be thought of as a collection of MIDI banks.</source>
          <target state="translated">一个 &lt;code&gt;Soundbank&lt;/code&gt; 中包含了一组 &lt;code&gt;Instruments&lt;/code&gt; ，可以加载到 &lt;code&gt;Synthesizer&lt;/code&gt; 。请注意，Java Sound &lt;code&gt;Soundbank&lt;/code&gt; 与MIDI库不同。MIDI最多允许16383个库，每个库最多包含128个乐器（有时也称为程序，音色或音色）。然而，一个 &lt;code&gt;Soundbank&lt;/code&gt; 中可以含有16383倍128仪器，因为内的仪器 &lt;code&gt;Soundbank&lt;/code&gt; 中由两者MIDI节目号码和一个MIDI库号（通过索引 &lt;code&gt;Patch&lt;/code&gt; 对象）。因此，可以将 &lt;code&gt;Soundbank&lt;/code&gt; 视为MIDI库的集合。</target>
        </trans-unit>
        <trans-unit id="bb71c7f35d20411e9a38b12129e5a3cc399d79a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SoundbankReader&lt;/code&gt; supplies soundbank file-reading services.</source>
          <target state="translated">一个 &lt;code&gt;SoundbankReader&lt;/code&gt; 用品音库文件读取服务。</target>
        </trans-unit>
        <trans-unit id="d6ebdda51f94a93f6575dd9124879e379ffd4459" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SoundbankReader&lt;/code&gt; supplies soundbank file-reading services. Concrete subclasses of &lt;code&gt;SoundbankReader&lt;/code&gt; parse a given soundbank file, producing a &lt;a href=&quot;../soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt; object that can be loaded into a &lt;a href=&quot;../synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;SoundbankReader&lt;/code&gt; 用品音库文件读取服务。 &lt;code&gt;SoundbankReader&lt;/code&gt; 的具体子类解析给定的音库文件，生成可以加载到&lt;a href=&quot;../synthesizer&quot;&gt; &lt;code&gt;Synthesizer&lt;/code&gt; 中&lt;/a&gt;的&lt;a href=&quot;../soundbank&quot;&gt; &lt;code&gt;Soundbank&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="531bd93ae1b0a0949760752bd971c5d495fa484f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SoundbankResource&lt;/code&gt; represents any audio resource stored in a &lt;a href=&quot;soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一 &lt;code&gt;SoundbankResource&lt;/code&gt; 表示存储在任何音频资源&lt;a href=&quot;soundbank&quot;&gt; &lt;code&gt;Soundbank&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8daf3926a405767122d6902eed98c6cc7a828cc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SoundbankResource&lt;/code&gt; represents any audio resource stored in a &lt;a href=&quot;soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt;. Common soundbank resources include:</source>
          <target state="translated">一 &lt;code&gt;SoundbankResource&lt;/code&gt; 表示存储在任何音频资源&lt;a href=&quot;soundbank&quot;&gt; &lt;code&gt;Soundbank&lt;/code&gt; 中&lt;/a&gt;。常见的音库资源包括：</target>
        </trans-unit>
        <trans-unit id="6c75af74d3d4959ceb2c10f6ff6fa241a313d323" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SoundbankResource&lt;/code&gt; represents any audio resource stored in a &lt;code&gt;&lt;a href=&quot;soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一 &lt;code&gt;SoundbankResource&lt;/code&gt; 表示存储在任何音频资源 &lt;code&gt;&lt;a href=&quot;soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="3778c6c6b603f44bd9513dc8ca46834e3c73bffb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SoundbankResource&lt;/code&gt; represents any audio resource stored in a &lt;code&gt;&lt;a href=&quot;soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. Common soundbank resources include:</source>
          <target state="translated">一 &lt;code&gt;SoundbankResource&lt;/code&gt; 表示存储在任何音频资源 &lt;code&gt;&lt;a href=&quot;soundbank&quot;&gt;&lt;code&gt;Soundbank&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 中。常见的音库资源包括：</target>
        </trans-unit>
        <trans-unit id="676ccfc2783b72d0cdbcf2483ca996f800476580" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Source&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt; suitable for passing to the &lt;code&gt;TransformerFactory&lt;/code&gt;.</source>
          <target state="translated">一个适合传递给 &lt;code&gt;TransformerFactory&lt;/code&gt; 的 &lt;code&gt;Source&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f45c7bf343186e4baef93dd0ec4dd1259f8e4c74" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpinnerModel&lt;/code&gt; for sequences of &lt;code&gt;Date&lt;/code&gt;s.</source>
          <target state="translated">甲 &lt;code&gt;SpinnerModel&lt;/code&gt; 为序列 &lt;code&gt;Date&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="392213bf914cb7615247161f7fc76519defde5d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpinnerModel&lt;/code&gt; for sequences of &lt;code&gt;Date&lt;/code&gt;s. The upper and lower bounds of the sequence are defined by properties called &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; and the size of the increase or decrease computed by the &lt;code&gt;nextValue&lt;/code&gt; and &lt;code&gt;previousValue&lt;/code&gt; methods is defined by a property called &lt;code&gt;calendarField&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; properties can be &lt;code&gt;null&lt;/code&gt; to indicate that the sequence has no lower or upper limit.</source>
          <target state="translated">甲 &lt;code&gt;SpinnerModel&lt;/code&gt; 为序列 &lt;code&gt;Date&lt;/code&gt; 秒。序列的上限和下限由称为 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 的属性定义，由 &lt;code&gt;nextValue&lt;/code&gt; 和 &lt;code&gt;previousValue&lt;/code&gt; 方法计算的增加或减少的大小由名为 &lt;code&gt;calendarField&lt;/code&gt; 的属性定义。的 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 的属性可以是 &lt;code&gt;null&lt;/code&gt; 以指示该序列没有上限或下限。</target>
        </trans-unit>
        <trans-unit id="6f45aa5fd321b96a79a9fe3cf25bb484669f4118" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpinnerModel&lt;/code&gt; for sequences of numbers.</source>
          <target state="translated">一个用于数字序列的 &lt;code&gt;SpinnerModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d187c6f6825bea9218b43a222d8024c230fd233b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpinnerModel&lt;/code&gt; for sequences of numbers. The upper and lower bounds of the sequence are defined by properties called &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt;. The size of the increase or decrease computed by the &lt;code&gt;nextValue&lt;/code&gt; and &lt;code&gt;previousValue&lt;/code&gt; methods is defined by a property called &lt;code&gt;stepSize&lt;/code&gt;. The &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; properties can be &lt;code&gt;null&lt;/code&gt; to indicate that the sequence has no lower or upper limit. All of the properties in this class are defined in terms of two generic types: &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;Comparable&lt;/code&gt;, so that all Java numeric types may be accommodated. Internally, there's only support for values whose type is one of the primitive &lt;code&gt;Number&lt;/code&gt; types: &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, or &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">一个用于数字序列的 &lt;code&gt;SpinnerModel&lt;/code&gt; 。序列的上限和下限由称为 &lt;code&gt;minimum&lt;/code&gt; 和 &lt;code&gt;maximum&lt;/code&gt; 的属性定义。 &lt;code&gt;nextValue&lt;/code&gt; 和 &lt;code&gt;previousValue&lt;/code&gt; 方法计算的增加或减少的大小由一个称为 &lt;code&gt;stepSize&lt;/code&gt; 的属性定义。的 &lt;code&gt;minimum&lt;/code&gt; 和 &lt;code&gt;maximum&lt;/code&gt; 特性可以是 &lt;code&gt;null&lt;/code&gt; 以指示该序列没有上限或下限。此类中的所有属性都是根据两种通用类型定义的： &lt;code&gt;Number&lt;/code&gt; 和 &lt;code&gt;Comparable&lt;/code&gt; ，以便可以容纳所有Java数字类型。在内部，仅支持类型为原始 &lt;code&gt;Number&lt;/code&gt; 类型之一的值： &lt;code&gt;Double&lt;/code&gt; ， &lt;code&gt;Float&lt;/code&gt; ， &lt;code&gt;Long&lt;/code&gt; ， &lt;code&gt;Integer&lt;/code&gt; ， &lt;code&gt;Short&lt;/code&gt; 或 &lt;code&gt;Byte&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbfe491daf8df4ed6725a2f50f6f7d4dd5daab9b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpinnerModel&lt;/code&gt; has three properties, only the first is read/write.</source>
          <target state="translated">一 &lt;code&gt;SpinnerModel&lt;/code&gt; 有三个属性，只有第一个是读/写。</target>
        </trans-unit>
        <trans-unit id="dfadbbee2a75f91ba2e5b6043571e05f0377a1e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Spring&lt;/code&gt; can be treated as a pair of intervals with a single common point: the preferred value. The following rules define some of the arithmetic operators that can be applied to intervals (&lt;code&gt;[a, b]&lt;/code&gt; refers to the interval from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt;, where &lt;code&gt;a &amp;lt;= b&lt;/code&gt;).</source>
          <target state="translated">甲 &lt;code&gt;Spring&lt;/code&gt; 可以被视为一对间隔的与单个公共点：优选值。以下规则定义了一些可应用于区间的算术运算符（ &lt;code&gt;[a, b]&lt;/code&gt; 从 &lt;code&gt;a&lt;/code&gt; 到 &lt;code&gt;b&lt;/code&gt; 的区间，其中 &lt;code&gt;a &amp;lt;= b&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9f9250daa9ad4c59ffc79d62d4e332248dc6117b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpringLayout&lt;/code&gt; lays out the children of its associated container according to a set of constraints.</source>
          <target state="translated">甲 &lt;code&gt;SpringLayout&lt;/code&gt; 中根据一组约束布置其相关联的容器的孩子。</target>
        </trans-unit>
        <trans-unit id="647df4c0f4a0e18cd2cbef78259fd7de61698945" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpringLayout&lt;/code&gt; lays out the children of its associated container according to a set of constraints. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for examples of using &lt;code&gt;SpringLayout&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;SpringLayout&lt;/code&gt; 中根据一组约束布置其相关联的容器的孩子。有关&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;使用SpringLayout&lt;/a&gt;的示例，请参见&lt;em&gt;Java教程&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;如何使用 &lt;code&gt;SpringLayout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5750761ca1f07b4a8a5c3657d465c11efe891835" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SpringLayout&lt;/code&gt; lays out the children of its associated container according to a set of constraints. See &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for examples of using &lt;code&gt;SpringLayout&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;SpringLayout&lt;/code&gt; 中根据一组约束布置其相关联的容器的孩子。有关&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;使用SpringLayout&lt;/a&gt;的示例，请参见&lt;em&gt;Java教程&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;如何使用 &lt;code&gt;SpringLayout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a839716f37e131b27baf09f1bcaa49eab165af51" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StackFrame&lt;/code&gt; object represents a method invocation returned by &lt;a href=&quot;stackwalker&quot;&gt;&lt;code&gt;StackWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;StackFrame&lt;/code&gt; 对象表示由返回的方法调用&lt;a href=&quot;stackwalker&quot;&gt; &lt;code&gt;StackWalker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b5399ec744e680e76f8bd66a301234127a65991" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StackWalker&lt;/code&gt; configured with this option will support &lt;a href=&quot;stackwalker#getCallerClass()&quot;&gt;&lt;code&gt;StackWalker.getCallerClass()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt;&lt;code&gt;StackFrame.getDeclaringClass()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用此选项配置的 &lt;code&gt;StackWalker&lt;/code&gt; 将支持&lt;a href=&quot;stackwalker#getCallerClass()&quot;&gt; &lt;code&gt;StackWalker.getCallerClass()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt; &lt;code&gt;StackFrame.getDeclaringClass()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b86b63120f1187e9a115af3b0e4d8f77d1520294" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Statement&lt;/code&gt; object represents a primitive statement in which a single method is applied to a target and a set of arguments - as in &lt;code&gt;&quot;a.setFoo(b)&quot;&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Statement&lt;/code&gt; 对象表示，其中一个单一的方法应用于一个目标和一组参数，一个原始声明-在如 &lt;code&gt;&quot;a.setFoo(b)&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a61be4591e38d6b7a3aa4b3b5d6a361b09587d3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Statement&lt;/code&gt; object represents a primitive statement in which a single method is applied to a target and a set of arguments - as in &lt;code&gt;&quot;a.setFoo(b)&quot;&lt;/code&gt;. Note that where this example uses names to denote the target and its argument, a statement object does not require a name space and is constructed with the values themselves. The statement object associates the named method with its environment as a simple set of values: the target and an array of argument values.</source>
          <target state="translated">甲 &lt;code&gt;Statement&lt;/code&gt; 对象表示，其中一个单一的方法应用于一个目标和一组参数，一个原始声明-在如 &lt;code&gt;&quot;a.setFoo(b)&quot;&lt;/code&gt; 。请注意，在此示例使用名称表示目标及其参数的情况下，语句对象不需要名称空间，而是使用值本身构造的。语句对象将命名方法与其环境关联为一组简单的值：目标和参数值数组。</target>
        </trans-unit>
        <trans-unit id="f73581493c1b2f0ecf66831949c9034f451696b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StatementEvent&lt;/code&gt; is sent to all &lt;code&gt;StatementEventListener&lt;/code&gt;s which were registered with a &lt;code&gt;PooledConnection&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;StatementEvent&lt;/code&gt; 被发送到所有 &lt;code&gt;StatementEventListener&lt;/code&gt; 将其用注册小号 &lt;code&gt;PooledConnection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f41bc39c312df02f4d21bf896a121cd0a424b96e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StatementEvent&lt;/code&gt; is sent to all &lt;code&gt;StatementEventListener&lt;/code&gt;s which were registered with a &lt;code&gt;PooledConnection&lt;/code&gt;. This occurs when the driver determines that a &lt;code&gt;PreparedStatement&lt;/code&gt; that is associated with the &lt;code&gt;PooledConnection&lt;/code&gt; has been closed or the driver determines is invalid.</source>
          <target state="translated">一个 &lt;code&gt;StatementEvent&lt;/code&gt; 被发送到所有 &lt;code&gt;StatementEventListener&lt;/code&gt; 将其用注册小号 &lt;code&gt;PooledConnection&lt;/code&gt; 。当驱动程序确定与 &lt;code&gt;PooledConnection&lt;/code&gt; 关联的 &lt;code&gt;PreparedStatement&lt;/code&gt; 已关闭或驱动程序确定无效时，就会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="bd2df8bb26a7e8052efe5bdb4f2ef98c07c3e44c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; is the factory for &lt;a href=&quot;javax/print/streamprintservice&quot;&gt;&lt;code&gt;StreamPrintService&lt;/code&gt;&lt;/a&gt; instances, which can print to an output stream in a particular document format described as a mime type.</source>
          <target state="translated">甲 &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; 是工厂进行&lt;a href=&quot;javax/print/streamprintservice&quot;&gt; &lt;code&gt;StreamPrintService&lt;/code&gt; &lt;/a&gt;实例，这可以打印到输出流中描述为mime类型的特定文档格式。</target>
        </trans-unit>
        <trans-unit id="88b96780c6028bc816e36e9837df5f86754a3912" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; is the factory for &lt;a href=&quot;streamprintservice&quot;&gt;&lt;code&gt;StreamPrintService&lt;/code&gt;&lt;/a&gt; instances, which can print to an output stream in a particular document format described as a mime type.</source>
          <target state="translated">甲 &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; 是工厂进行&lt;a href=&quot;streamprintservice&quot;&gt; &lt;code&gt;StreamPrintService&lt;/code&gt; &lt;/a&gt;实例，这可以打印到输出流中描述为mime类型的特定文档格式。</target>
        </trans-unit>
        <trans-unit id="9f370a18ad256d8838013b96f3fd3a6c57070006" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; is the factory for &lt;a href=&quot;streamprintservice&quot;&gt;&lt;code&gt;StreamPrintService&lt;/code&gt;&lt;/a&gt; instances, which can print to an output stream in a particular document format described as a mime type. A typical output document format may be Postscript(TM).</source>
          <target state="translated">甲 &lt;code&gt;StreamPrintServiceFactory&lt;/code&gt; 是工厂进行&lt;a href=&quot;streamprintservice&quot;&gt; &lt;code&gt;StreamPrintService&lt;/code&gt; &lt;/a&gt;实例，这可以打印到输出流中描述为mime类型的特定文档格式。典型的输出文档格式可以是Postscript TM。</target>
        </trans-unit>
        <trans-unit id="b656cee1e6a2645b9dd951fcb66dbb0f94a1a368" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; constant containing the standard format name, &lt;code&gt;&quot;javax_imageio_1.0&quot;&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; 常量，其中包含标准格式名称 &lt;code&gt;&quot;javax_imageio_1.0&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53fba3d0e985e2fa295966cac78bdf47bb9cd3fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; containing the class name of the native stream metadata format supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; ,包含此插件支持的本机流元数据格式的类名，最初为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d1c74db349ee872ae5cd9850f6c87be3d51a45e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; containing the name of the associated plug-in class, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; ,其中包含关联的插件类的名称，最初为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d45247269dbaf1c1d7689b448b26edb5feef622e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; containing the name of the current compression type, or &lt;code&gt;null&lt;/code&gt; if none is set.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; 其中包含当前压缩类型的名称；如果未设置，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50a95660663285b02c516594baebaf298fae2baa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; containing the name of the native stream metadata format supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; ,包含此插件支持的本机流元数据格式的名称，最初为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="daebdbc07674cc4a6f713de7393f0826d2e05d53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representation of a positive &lt;code&gt;Long&lt;/code&gt; value followed by an empty space and one of the following units:</source>
          <target state="translated">甲 &lt;code&gt;String&lt;/code&gt; 的正的表示 &lt;code&gt;Long&lt;/code&gt; 值，后跟一个空的空间和以下单元中的一个：</target>
        </trans-unit>
        <trans-unit id="a223c6052304a28bfe657353c24cb87b484346cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; representing the error message with location information appended.</source>
          <target state="translated">甲 &lt;code&gt;String&lt;/code&gt; 表示与位置信息的错误信息附加。</target>
        </trans-unit>
        <trans-unit id="d10ab1d455c0a57466c25555861d5c804559d231" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; represents a string in the UTF-16 format in which &lt;em&gt;supplementary characters&lt;/em&gt; are represented by &lt;em&gt;surrogate pairs&lt;/em&gt; (see the section &lt;a href=&quot;character#unicode&quot;&gt;Unicode Character Representations&lt;/a&gt; in the &lt;code&gt;Character&lt;/code&gt; class for more information). Index values refer to &lt;code&gt;char&lt;/code&gt; code units, so a supplementary character uses two positions in a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;String&lt;/code&gt; 表示在其中UTF-16格式的字符串&lt;em&gt;增补字符&lt;/em&gt;由表示&lt;em&gt;替代双&lt;/em&gt;（见节&lt;a href=&quot;character#unicode&quot;&gt;的Unicode字符表示&lt;/a&gt;在 &lt;code&gt;Character&lt;/code&gt; 类的更多信息）。索引值引用 &lt;code&gt;char&lt;/code&gt; 代码单位，因此，补充字符在 &lt;code&gt;String&lt;/code&gt; 中使用两个位置。</target>
        </trans-unit>
        <trans-unit id="34c086efe17669f8c286b6ac46d5b21d5d149d5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; to be returned from &lt;code&gt;getVendorName&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;getVendorName&lt;/code&gt; 返回的 &lt;code&gt;String&lt;/code&gt; ，最初为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03315933b3ff9b0f30ad43e2ef49e3cb9a6150ad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; to be returned from &lt;code&gt;getVendorName&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;. Constructors should set this to a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">从 &lt;code&gt;getVendorName&lt;/code&gt; 返回的 &lt;code&gt;String&lt;/code&gt; ，最初为 &lt;code&gt;null&lt;/code&gt; 。构造函数应将此设置为非 &lt;code&gt;null&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="d73b9ed3737e5a0865beb15731efe020f845df7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; to be returned from &lt;code&gt;getVersion&lt;/code&gt;, initially null.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; 从返回 &lt;code&gt;getVersion&lt;/code&gt; ，最初为null。</target>
        </trans-unit>
        <trans-unit id="4f161d6eb22ce16b9243b0894aaae9d6076c8921" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; to be returned from &lt;code&gt;getVersion&lt;/code&gt;, initially null. Constructors should set this to a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">一个 &lt;code&gt;String&lt;/code&gt; 从返回 &lt;code&gt;getVersion&lt;/code&gt; ，最初为null。构造函数应将此设置为非 &lt;code&gt;null&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="ae9b075558f4a4a24b9bd96101c6b618f699536c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StringJoiner&lt;/code&gt; is empty if &lt;a href=&quot;#add(java.lang.CharSequence)&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; has never been called, and if &lt;code&gt;merge()&lt;/code&gt; has never been called with a non-empty &lt;code&gt;StringJoiner&lt;/code&gt; argument.</source>
          <target state="translated">一个 &lt;code&gt;StringJoiner&lt;/code&gt; 是空的，如果&lt;a href=&quot;#add(java.lang.CharSequence)&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;从未被调用，如果 &lt;code&gt;merge()&lt;/code&gt; 从未调用一个非空 &lt;code&gt;StringJoiner&lt;/code&gt; 说法。</target>
        </trans-unit>
        <trans-unit id="843830e38e5ab1ee9ec315a6b3904b915eb4d232" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StringJoiner&lt;/code&gt; is empty if &lt;a href=&quot;stringjoiner#add-java.lang.CharSequence-&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; has never been called, and if &lt;code&gt;merge()&lt;/code&gt; has never been called with a non-empty &lt;code&gt;StringJoiner&lt;/code&gt; argument.</source>
          <target state="translated">一个 &lt;code&gt;StringJoiner&lt;/code&gt; 是空的，如果&lt;a href=&quot;stringjoiner#add-java.lang.CharSequence-&quot;&gt; &lt;code&gt;add()&lt;/code&gt; &lt;/a&gt;从未被调用，如果 &lt;code&gt;merge()&lt;/code&gt; 从未调用一个非空 &lt;code&gt;StringJoiner&lt;/code&gt; 说法。</target>
        </trans-unit>
        <trans-unit id="f945f4248f125fc9f42cd4cd88c1f0e16cb55452" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StringJoiner&lt;/code&gt; may be employed to create formatted output from a &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;stream/collectors#joining(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Collectors.joining(CharSequence)&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">甲 &lt;code&gt;StringJoiner&lt;/code&gt; 可以用来创建从一个格式化的输出&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;stream/collectors#joining(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Collectors.joining(CharSequence)&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="4f01da94ce05781ad0c478fa1fd9874f22c00b82" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StringJoiner&lt;/code&gt; may be employed to create formatted output from a &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;stream/collectors#joining-java.lang.CharSequence-&quot;&gt;&lt;code&gt;Collectors.joining(CharSequence)&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">甲 &lt;code&gt;StringJoiner&lt;/code&gt; 可以用来创建从一个格式化的输出&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;stream/collectors#joining-java.lang.CharSequence-&quot;&gt; &lt;code&gt;Collectors.joining(CharSequence)&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="7b30e0d159c48329651d255c8e3e3295c07dcd39" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StringTokenizer&lt;/code&gt; object internally maintains a current position within the string to be tokenized. Some operations advance this current position past the characters processed.</source>
          <target state="translated">甲 &lt;code&gt;StringTokenizer&lt;/code&gt; 对象在内部保持所述串内的当前位置被标记化。某些操作会将当前位置提前经过处理的字符。</target>
        </trans-unit>
        <trans-unit id="f2e2befae22818c094f8322a0e604a8f947006ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String[]&lt;/code&gt; can be converted to a &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; using &lt;a href=&quot;../../../java.base/java/util/arrays#asList(T...)&quot;&gt;&lt;code&gt;Arrays.asList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;../../../java.base/java/util/arrays#asList(T...)&quot;&gt; &lt;code&gt;Arrays.asList&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;String[]&lt;/code&gt; 转换为 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e7436c99924a2c38b8714b1e9dd2189b9fa534e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String[]&lt;/code&gt; can be converted to a &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; using &lt;a href=&quot;../../java/util/arrays#asList-T...-&quot;&gt;&lt;code&gt;Arrays.asList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;../../java/util/arrays#asList-T...-&quot;&gt; &lt;code&gt;Arrays.asList&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;String[]&lt;/code&gt; 转换为 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a7e56015aefb2c91c33ffde725bf100e28b8a74" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StubNotFoundException&lt;/code&gt; is thrown if a valid stub class could not be found for a remote object when it is exported.</source>
          <target state="translated">一 &lt;code&gt;StubNotFoundException&lt;/code&gt; 如果有效stub类，无法远程对象可以找到当出口被抛出。</target>
        </trans-unit>
        <trans-unit id="86f0d0afd7a91d757b2bea22dfacefb257c32c3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;StubNotFoundException&lt;/code&gt; is thrown if a valid stub class could not be found for a remote object when it is exported. A &lt;code&gt;StubNotFoundException&lt;/code&gt; may also be thrown when an activatable object is registered via the &lt;code&gt;java.rmi.activation.Activatable.register&lt;/code&gt; method.</source>
          <target state="translated">一 &lt;code&gt;StubNotFoundException&lt;/code&gt; 如果有效stub类，无法远程对象可以找到当出口被抛出。甲 &lt;code&gt;StubNotFoundException&lt;/code&gt; 时可激活对象经由注册也可以抛出 &lt;code&gt;java.rmi.activation.Activatable.register&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f94dd11ea1cb9c0c1609ce1c124d27fea9c24183" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Subject&lt;/code&gt; may also own security-related attributes, which are referred to as credentials. Sensitive credentials that require special protection, such as private cryptographic keys, are stored within a private credential &lt;code&gt;Set&lt;/code&gt;. Credentials intended to be shared, such as public key certificates or Kerberos server tickets are stored within a public credential &lt;code&gt;Set&lt;/code&gt;. Different permissions are required to access and modify the different credential Sets.</source>
          <target state="translated">一个 &lt;code&gt;Subject&lt;/code&gt; 也可以拥有与安全相关的属性，它们被称为凭据。需要特殊保护的敏感凭证（例如私有密码密钥）存储在私有凭证 &lt;code&gt;Set&lt;/code&gt; 中。打算共享的凭证（例如公用密钥证书或Kerberos服务器票证）存储在公用凭证 &lt;code&gt;Set&lt;/code&gt; 中。访问和修改不同的凭据集需要不同的权限。</target>
        </trans-unit>
        <trans-unit id="22269baf3728ed9f7d15e4ab750c278b8d5283a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Subject&lt;/code&gt; represents a grouping of related information for a single entity, such as a person.</source>
          <target state="translated">一个 &lt;code&gt;Subject&lt;/code&gt; 代表了一个单一的实体相关的信息，比如一个人的分组。</target>
        </trans-unit>
        <trans-unit id="93c8ea0d491d86c0014097b3753fabb605464376" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Subject&lt;/code&gt; represents a grouping of related information for a single entity, such as a person. Such information includes the Subject's identities as well as its security-related attributes (passwords and cryptographic keys, for example).</source>
          <target state="translated">一个 &lt;code&gt;Subject&lt;/code&gt; 代表了一个单一的实体相关的信息，比如一个人的分组。此类信息包括主体的身份及其与安全性相关的属性（例如，密码和加密密钥）。</target>
        </trans-unit>
        <trans-unit id="b4b96f4b0a834a875a405d5e37faefcc3df3352d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; updates ProtectionDomains with Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="translated">一 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 更新的ProtectionDomains从校长 &lt;code&gt;Subject&lt;/code&gt; 与此相关 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="228eae16184e9b6eedf87243ab41ab01541ff465" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SwitchPoint&lt;/code&gt; is an object which can publish state transitions to other threads.</source>
          <target state="translated">甲 &lt;code&gt;SwitchPoint&lt;/code&gt; 是一个对象，它可以发布状态转换为其他线程。</target>
        </trans-unit>
        <trans-unit id="be714f87cf38c5ca9056ac6e6285bffa2e095693" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SwitchPoint&lt;/code&gt; is an object which can publish state transitions to other threads. A switch point is initially in the &lt;em&gt;valid&lt;/em&gt; state, but may at any time be changed to the &lt;em&gt;invalid&lt;/em&gt; state. Invalidation cannot be reversed. A switch point can combine a &lt;em&gt;guarded pair&lt;/em&gt; of method handles into a &lt;em&gt;guarded delegator&lt;/em&gt;. The guarded delegator is a method handle which delegates to one of the old method handles. The state of the switch point determines which of the two gets the delegation.</source>
          <target state="translated">甲 &lt;code&gt;SwitchPoint&lt;/code&gt; 是一个对象，它可以发布状态转换为其他线程。切换点最初处于&lt;em&gt;有效&lt;/em&gt;状态，但可以随时更改为&lt;em&gt;无效&lt;/em&gt;状态。无效不能逆转。切换点可以将一&lt;em&gt;对&lt;/em&gt;受&lt;em&gt;保护&lt;/em&gt;的方法句柄组合成一个受&lt;em&gt;保护的委托人&lt;/em&gt;。受保护的委托人是一个方法句柄，它委托给一个旧的方法句柄。切换点的状态决定了两者中的哪一个获得委派。</target>
        </trans-unit>
        <trans-unit id="5e52e804a03b2b1c3cf01055a92fe4273f8ee447" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncMode&lt;/code&gt; object represents one of the ways in which a MIDI sequencer's notion of time can be synchronized with a master or slave device.</source>
          <target state="translated">甲 &lt;code&gt;SyncMode&lt;/code&gt; 对象表示，其中时间的MIDI定序器的概念可与主或从设备同步的方式之一。</target>
        </trans-unit>
        <trans-unit id="57b963ed2297f7f44f5e670069b94a810a4c2b31" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncMode&lt;/code&gt; object represents one of the ways in which a MIDI sequencer's notion of time can be synchronized with a master or slave device. If the sequencer is being synchronized to a master, the sequencer revises its current time in response to messages from the master. If the sequencer has a slave, the sequencer similarly sends messages to control the slave's timing.</source>
          <target state="translated">甲 &lt;code&gt;SyncMode&lt;/code&gt; 对象表示，其中时间的MIDI定序器的概念可与主或从设备同步的方式之一。如果定序器正在与主机同步，则定序器会响应来自主机的消息来修改其当前时间。如果定序器具有从机，则定序器会类似地发送消息以控制从机的时序。</target>
        </trans-unit>
        <trans-unit id="62066fb10b853bfb564b915079e0d4cc678eb458" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncProvider&lt;/code&gt; implementation is identified by a unique ID, which is its fully qualified class name. This name must be registered with the &lt;code&gt;SyncFactory&lt;/code&gt; SPI, thus making the implementation available to all &lt;code&gt;RowSet&lt;/code&gt; implementations. The factory mechanism in the reference implementation uses this name to instantiate the implementation, which can then provide a &lt;code&gt;RowSet&lt;/code&gt; object with its reader (a &lt;code&gt;javax.sql.RowSetReader&lt;/code&gt; object) and its writer (a &lt;code&gt;javax.sql.RowSetWriter&lt;/code&gt; object).</source>
          <target state="translated">一 &lt;code&gt;SyncProvider&lt;/code&gt; 实现由一个唯一的ID，这是它的完全限定类名称标识。此名称必须在 &lt;code&gt;SyncFactory&lt;/code&gt; SPI中注册，从而使该实现可用于所有 &lt;code&gt;RowSet&lt;/code&gt; 实现。参考实现中的工厂机制使用该名称来实例化实现，然后该实现可以向 &lt;code&gt;RowSet&lt;/code&gt; 对象提供其读取器（ &lt;code&gt;javax.sql.RowSetReader&lt;/code&gt; 对象）和其写入器（ &lt;code&gt;javax.sql.RowSetWriter&lt;/code&gt; 对象）。</target>
        </trans-unit>
        <trans-unit id="7311d23c53b03da1bd1a98c374e6ec93bb6f7661" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncProvider&lt;/code&gt; implementation may choose to implement a specific handler to handle a subset of query violations. However if an original query violation or a more general data source constraint violation is not handled by the &lt;code&gt;SyncProvider&lt;/code&gt; implementation, all &lt;code&gt;SyncProvider&lt;/code&gt; objects must throw a &lt;code&gt;SyncProviderException&lt;/code&gt;.</source>
          <target state="translated">一 &lt;code&gt;SyncProvider&lt;/code&gt; 实现可以选择实现特定的处理程序来处理查询违法行为的一个子集。但是，如果 &lt;code&gt;SyncProvider&lt;/code&gt; 实现未处理原始查询冲突或更常规的数据源约束冲突，则所有 &lt;code&gt;SyncProvider&lt;/code&gt; 对象都必须抛出 &lt;code&gt;SyncProviderException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5516c8268a0b200569e0ac4f643cb1d4ad44ce7d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncProvider&lt;/code&gt; implementation provides a disconnected &lt;code&gt;RowSet&lt;/code&gt; object with the mechanisms for reading data into it and for writing data that has been modified in it back to the underlying data source. A</source>
          <target state="translated">甲 &lt;code&gt;SyncProvider&lt;/code&gt; 实现提供一个断开的 &lt;code&gt;RowSet&lt;/code&gt; 与机制对象数据读入并写入已在它被修改回底层数据源的数据。一种</target>
        </trans-unit>
        <trans-unit id="ae72098b6f26bacd5f99b6b566a7b1a93651c31c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncProvider&lt;/code&gt; object provides a &lt;code&gt;CachedRowSet&lt;/code&gt; object with a reader (a &lt;code&gt;RowSetReader&lt;/code&gt; object) for reading data from a data source to populate itself with data. A reader can be implemented to read data from a &lt;code&gt;ResultSet&lt;/code&gt; object or from a file with a tabular format. A &lt;code&gt;SyncProvider&lt;/code&gt; object also provides a writer (a &lt;code&gt;RowSetWriter&lt;/code&gt; object) for synchronizing any modifications to the &lt;code&gt;CachedRowSet&lt;/code&gt; object's data made while it was disconnected with the data in the underlying data source.</source>
          <target state="translated">甲 &lt;code&gt;SyncProvider&lt;/code&gt; 对象提供 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象与读取器（一个 &lt;code&gt;RowSetReader&lt;/code&gt; 用于从数据源读取数据来填充数据本身对象）。可以实现阅读器来从 &lt;code&gt;ResultSet&lt;/code&gt; 对象或具有表格格式的文件中读取数据。甲 &lt;code&gt;SyncProvider&lt;/code&gt; 对象还提供一个写入器（一个 &lt;code&gt;RowSetWriter&lt;/code&gt; 用于同步到任何修改对象） &lt;code&gt;CachedRowSet&lt;/code&gt; 由对象的数据，同时将其用在基础数据源中的数据断开。</target>
        </trans-unit>
        <trans-unit id="93658669de6bcc3dd7ce035782e1c13aab7a3cdb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncProviderException&lt;/code&gt; object may or may not contain a description of the condition causing the exception. The inherited method &lt;code&gt;getMessage&lt;/code&gt; may be called to retrieve the description if there is one.</source>
          <target state="translated">甲 &lt;code&gt;SyncProviderException&lt;/code&gt; 的对象可以或可以不包含导致异常的条件的描述。可以调用继承的方法 &lt;code&gt;getMessage&lt;/code&gt; 来检索描述（如果有的话）。</target>
        </trans-unit>
        <trans-unit id="f773d096e13bb83540eb8a00687c0ec5277f9373" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncResolver&lt;/code&gt; object is a specialized &lt;code&gt;RowSet&lt;/code&gt; object that implements the &lt;code&gt;SyncResolver&lt;/code&gt; interface. It &lt;b&gt;may&lt;/b&gt; operate as either a connected &lt;code&gt;RowSet&lt;/code&gt; object (an implementation of the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface) or a connected &lt;code&gt;RowSet&lt;/code&gt; object (an implementation of the &lt;code&gt;CachedRowSet&lt;/code&gt; interface or one of its subinterfaces). For information on the subinterfaces, see the &lt;a href=&quot;../package-summary&quot;&gt;&lt;code&gt;javax.sql.rowset&lt;/code&gt;&lt;/a&gt; package description. The reference implementation for &lt;code&gt;SyncResolver&lt;/code&gt; implements the &lt;code&gt;CachedRowSet&lt;/code&gt; interface, but other implementations may choose to implement the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface to satisfy particular needs.</source>
          <target state="translated">一个 &lt;code&gt;SyncResolver&lt;/code&gt; 的对象是专业 &lt;code&gt;RowSet&lt;/code&gt; 对象实现了 &lt;code&gt;SyncResolver&lt;/code&gt; 的接口。它&lt;b&gt;可以&lt;/b&gt;作为连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象（ &lt;code&gt;JdbcRowSet&lt;/code&gt; 接口的实现）或连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象（ &lt;code&gt;CachedRowSet&lt;/code&gt; 接口或其子接口之一的实现）进行操作。有关子接口的信息，请参见&lt;a href=&quot;../package-summary&quot;&gt; &lt;code&gt;javax.sql.rowset&lt;/code&gt; &lt;/a&gt;包描述。 &lt;code&gt;SyncResolver&lt;/code&gt; 的参考实现实现 &lt;code&gt;CachedRowSet&lt;/code&gt; 接口，但是其他实现可以选择实现 &lt;code&gt;JdbcRowSet&lt;/code&gt; 满足特定需求的界面。</target>
        </trans-unit>
        <trans-unit id="831f70f37f0af58442c7772e629646eff1da65e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyncResolver&lt;/code&gt; object, which is a special kind of &lt;code&gt;CachedRowSet&lt;/code&gt; object or a &lt;code&gt;JdbcRowSet&lt;/code&gt; object that has implemented the &lt;code&gt;SyncResolver&lt;/code&gt; interface, examines the conflicts row by row. It is a duplicate of the &lt;code&gt;RowSet&lt;/code&gt; object being synchronized except that it contains only the data from the data source this is causing a conflict. All of the other column values are set to &lt;code&gt;null&lt;/code&gt;. To navigate from one conflict value to another, a &lt;code&gt;SyncResolver&lt;/code&gt; object provides the methods &lt;code&gt;nextConflict&lt;/code&gt; and &lt;code&gt;previousConflict&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;SyncResolver&lt;/code&gt; 的对象，这是一种特殊的 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象或 &lt;code&gt;JdbcRowSet&lt;/code&gt; 都已经实现对象 &lt;code&gt;SyncResolver&lt;/code&gt; 接口，按行检查冲突行。它与正在同步的 &lt;code&gt;RowSet&lt;/code&gt; 对象重复，只是它仅包含来自数据源的数据，这会引起冲突。所有其他列值均设置为 &lt;code&gt;null&lt;/code&gt; 。为了从一个冲突值导航到另一个冲突值， &lt;code&gt;SyncResolver&lt;/code&gt; 对象提供了 &lt;code&gt;nextConflict&lt;/code&gt; 和 &lt;code&gt;previousConflict&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="20bd756a8d8c45d903c01414a26ff940cfa94c5b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Synthesizer&lt;/code&gt; generates sound.</source>
          <target state="translated">甲 &lt;code&gt;Synthesizer&lt;/code&gt; 产生声音。</target>
        </trans-unit>
        <trans-unit id="6d0451cd1f434824db4bc18015bdc2300ec5a785" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Synthesizer&lt;/code&gt; generates sound. This usually happens when one of the &lt;code&gt;Synthesizer&lt;/code&gt;'s &lt;a href=&quot;midichannel&quot;&gt;&lt;code&gt;MidiChannel&lt;/code&gt;&lt;/a&gt; objects receives a &lt;a href=&quot;midichannel#noteOn(int,int)&quot;&gt;&lt;code&gt;noteOn&lt;/code&gt;&lt;/a&gt; message, either directly or via the &lt;code&gt;Synthesizer&lt;/code&gt; object. Many &lt;code&gt;Synthesizer&lt;/code&gt;s support &lt;code&gt;Receivers&lt;/code&gt;, through which MIDI events can be delivered to the &lt;code&gt;Synthesizer&lt;/code&gt;. In such cases, the &lt;code&gt;Synthesizer&lt;/code&gt; typically responds by sending a corresponding message to the appropriate &lt;code&gt;MidiChannel&lt;/code&gt;, or by processing the event itself if the event isn't one of the MIDI channel messages.</source>
          <target state="translated">甲 &lt;code&gt;Synthesizer&lt;/code&gt; 产生声音。当 &lt;code&gt;Synthesizer&lt;/code&gt; 的&lt;a href=&quot;midichannel&quot;&gt; &lt;code&gt;MidiChannel&lt;/code&gt; &lt;/a&gt;对象之一直接或通过 &lt;code&gt;Synthesizer&lt;/code&gt; 对象接收到&lt;a href=&quot;midichannel#noteOn(int,int)&quot;&gt; &lt;code&gt;noteOn&lt;/code&gt; &lt;/a&gt;消息时，通常会发生这种情况。许多 &lt;code&gt;Synthesizer&lt;/code&gt; 都支持 &lt;code&gt;Receivers&lt;/code&gt; ，通过它可以将MIDI事件传送到 &lt;code&gt;Synthesizer&lt;/code&gt; 。在这种情况下， &lt;code&gt;Synthesizer&lt;/code&gt; 通常通过将相应的消息发送到适当的 &lt;code&gt;MidiChannel&lt;/code&gt; 来响应，或者如果事件不是MIDI通道消息之一，则通过处理事件本身进行响应。</target>
        </trans-unit>
        <trans-unit id="a603b4809d42d4f273b7e8030849821e379b8887" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Synthesizer&lt;/code&gt; generates sound. This usually happens when one of the &lt;code&gt;Synthesizer&lt;/code&gt;'s &lt;a href=&quot;midichannel&quot;&gt;&lt;code&gt;MidiChannel&lt;/code&gt;&lt;/a&gt; objects receives a &lt;a href=&quot;midichannel#noteOn-int-int-&quot;&gt;&lt;code&gt;noteOn&lt;/code&gt;&lt;/a&gt; message, either directly or via the &lt;code&gt;Synthesizer&lt;/code&gt; object. Many &lt;code&gt;Synthesizer&lt;/code&gt;s support &lt;code&gt;Receivers&lt;/code&gt;, through which MIDI events can be delivered to the &lt;code&gt;Synthesizer&lt;/code&gt;. In such cases, the &lt;code&gt;Synthesizer&lt;/code&gt; typically responds by sending a corresponding message to the appropriate &lt;code&gt;MidiChannel&lt;/code&gt;, or by processing the event itself if the event isn't one of the MIDI channel messages.</source>
          <target state="translated">甲 &lt;code&gt;Synthesizer&lt;/code&gt; 产生声音。当 &lt;code&gt;Synthesizer&lt;/code&gt; 的&lt;a href=&quot;midichannel&quot;&gt; &lt;code&gt;MidiChannel&lt;/code&gt; &lt;/a&gt;对象之一直接或通过 &lt;code&gt;Synthesizer&lt;/code&gt; 对象接收到&lt;a href=&quot;midichannel#noteOn-int-int-&quot;&gt; &lt;code&gt;noteOn&lt;/code&gt; &lt;/a&gt;消息时，通常会发生这种情况。许多 &lt;code&gt;Synthesizer&lt;/code&gt; 都支持 &lt;code&gt;Receivers&lt;/code&gt; ，通过它可以将MIDI事件传送到 &lt;code&gt;Synthesizer&lt;/code&gt; 。在这种情况下， &lt;code&gt;Synthesizer&lt;/code&gt; 通常通过将相应的消息发送到适当的 &lt;code&gt;MidiChannel&lt;/code&gt; 来响应，或者如果事件不是MIDI通道消息之一，则通过处理事件本身进行响应。</target>
        </trans-unit>
        <trans-unit id="f4ee297ddf421454f00e52bd94c3be8de88eacbd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SysexMessage&lt;/code&gt; object represents a MIDI system exclusive message.</source>
          <target state="translated">甲 &lt;code&gt;SysexMessage&lt;/code&gt; 对象表示MIDI系统独占消息。</target>
        </trans-unit>
        <trans-unit id="b424007adfcafcda69dcf202fdc35d2c353d59d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TIFFDirectory&lt;/code&gt; is aware of the tag numbers in the group of &lt;a href=&quot;tifftagset&quot;&gt;&lt;code&gt;TIFFTagSet&lt;/code&gt;&lt;/a&gt;s associated with it. When a &lt;code&gt;TIFFDirectory&lt;/code&gt; is created from a native image metadata object, these tag sets are derived from the &lt;code&gt;tagSets&lt;/code&gt; attribute of the &lt;code&gt;TIFFIFD&lt;/code&gt; node.</source>
          <target state="translated">一个 &lt;code&gt;TIFFDirectory&lt;/code&gt; 知道该组中的标签号码的&lt;a href=&quot;tifftagset&quot;&gt; &lt;code&gt;TIFFTagSet&lt;/code&gt; &lt;/a&gt;与它相关秒。当 &lt;code&gt;TIFFDirectory&lt;/code&gt; 是从天然图像元数据对象创建，这些标签集从导出 &lt;code&gt;tagSets&lt;/code&gt; 的属性 &lt;code&gt;TIFFIFD&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="875ad0a723fa0c853b7894c344e24746b670155a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TIFFDirectory&lt;/code&gt; might also have a parent &lt;a href=&quot;tifftag&quot;&gt;&lt;code&gt;TIFFTag&lt;/code&gt;&lt;/a&gt;. This will occur if the directory represents an IFD other than the root IFD of the image. The parent tag is the tag of the IFD Entry which is a pointer to the IFD represented by this &lt;code&gt;TIFFDirectory&lt;/code&gt;. The &lt;a href=&quot;tifftag#isIFDPointer()&quot;&gt;&lt;code&gt;TIFFTag.isIFDPointer()&lt;/code&gt;&lt;/a&gt; method of this parent &lt;code&gt;TIFFTag&lt;/code&gt; must return &lt;code&gt;true&lt;/code&gt;. When a &lt;code&gt;TIFFDirectory&lt;/code&gt; is created from a native image metadata object, the parent tag set is set from the &lt;code&gt;parentTagName&lt;/code&gt; attribute of the corresponding &lt;code&gt;TIFFIFD&lt;/code&gt; node. Note that a &lt;code&gt;TIFFDirectory&lt;/code&gt; instance which has a non-&lt;code&gt;null&lt;/code&gt; parent tag will be contained in the data field of a &lt;code&gt;TIFFField&lt;/code&gt; instance which has a tag field equal to the contained directory's parent tag.</source>
          <target state="translated">一个 &lt;code&gt;TIFFDirectory&lt;/code&gt; 可能也有家长&lt;a href=&quot;tifftag&quot;&gt; &lt;code&gt;TIFFTag&lt;/code&gt; &lt;/a&gt;。如果目录代表映像的根IFD以外的IFD，则会发生这种情况。父标记是IFD条目的标记，它是指向此 &lt;code&gt;TIFFDirectory&lt;/code&gt; 表示的IFD的指针。此父 &lt;code&gt;TIFFTag&lt;/code&gt; 的&lt;a href=&quot;tifftag#isIFDPointer()&quot;&gt; &lt;code&gt;TIFFTag.isIFDPointer()&lt;/code&gt; &lt;/a&gt;方法必须返回 &lt;code&gt;true&lt;/code&gt; 。当 &lt;code&gt;TIFFDirectory&lt;/code&gt; 是从天然图像元数据对象创建，父标签集从设置 &lt;code&gt;parentTagName&lt;/code&gt; 相应的属性 &lt;code&gt;TIFFIFD&lt;/code&gt; 节点。请注意， &lt;code&gt;TIFFDirectory&lt;/code&gt; 实例具有非 &lt;code&gt;null&lt;/code&gt; 父标签将包含在 &lt;code&gt;TIFFField&lt;/code&gt; 实例的数据字段中，该实例的标签字段等于所包含目录的父标签。</target>
        </trans-unit>
        <trans-unit id="b9ae6f29cddcbce47dd7709903ac63f6215ae140" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TIFFDirectory&lt;/code&gt; populated from the contents of the supplied metadata object.</source>
          <target state="translated">从提供的元数据对象的内容填充的 &lt;code&gt;TIFFDirectory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d368c530bab22fa4adc6ff07c537517c0d110c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TIFFField&lt;/code&gt; with the requested tag number of &lt;code&gt;null&lt;/code&gt; if no such field is present.</source>
          <target state="translated">一个 &lt;code&gt;TIFFField&lt;/code&gt; 与所请求的标签号码 &lt;code&gt;null&lt;/code&gt; ，如果没有这样的字段存在。</target>
        </trans-unit>
        <trans-unit id="18150cd8e4b4c4f831b53d6d503460e64ffc67ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TIFF_UNDEFINED&lt;/code&gt; value is treated as though it were a &lt;code&gt;TIFF_BYTE&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;TIFF_UNDEFINED&lt;/code&gt; ，就好像是一个值将被视为 &lt;code&gt;TIFF_BYTE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22ce405197c16d33cb4946bf9dd4035759d81e7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; dialog blocks all top-level windows run from the same toolkit except those from its own child hierarchy.</source>
          <target state="translated">一个 &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; 对话框将阻止从同一工具箱运行的所有顶层窗口，但其子层次结构除外。</target>
        </trans-unit>
        <trans-unit id="dae47f9fbdf14ab4d9052bb6ec8de9a9fed7d448" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; dialog blocks all top-level windows run from the same toolkit except those from its own child hierarchy. If there are several applets launched in a browser, all of them run with the same toolkit; thus, a toolkit-modal dialog displayed by an applet may affect other applets and all windows of the browser instance which embeds the Java runtime environment for this toolkit. Special &lt;code&gt;AWTPermission&lt;/code&gt; &quot;toolkitModality&quot; must be granted to use toolkit-modal dialogs. If a &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; dialog is being created and this permission is not granted, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown, and no dialog will be created. If a modality type is being changed to &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; and this permission is not granted, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown, and the modality type will be left unchanged.</source>
          <target state="translated">一个 &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; 对话框将阻止从同一工具箱运行的所有顶层窗口，但其子层次结构除外。如果浏览器中启动了多个小程序，则所有小程序都使用相同的工具箱运行；因此，小应用程序显示的工具箱模式对话框可能会影响其他小应用程序以及浏览器实例的所有窗口，这些窗口嵌入了此工具箱的Java运行时环境。必须授予特殊的 &lt;code&gt;AWTPermission&lt;/code&gt; &amp;ldquo; toolkitModality&amp;rdquo;才能使用工具箱模式对话框。如果正在创建 &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; 对话框，并且未授予此权限，则将引发 &lt;code&gt;SecurityException&lt;/code&gt; ，并且不会创建任何对话框。如果将模式类型更改为 &lt;code&gt;TOOLKIT_MODAL&lt;/code&gt; 并且未授予此权限，则 &lt;code&gt;SecurityException&lt;/code&gt; 将抛出SecurityException，并且模态类型将保持不变。</target>
        </trans-unit>
        <trans-unit id="1d5fc4695449c52b91505450f62d8103e6563969" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TableColumn&lt;/code&gt; represents all the attributes of a column in a &lt;code&gt;JTable&lt;/code&gt;, such as width, resizability, minimum and maximum width.</source>
          <target state="translated">甲 &lt;code&gt;TableColumn&lt;/code&gt; 的表示在所述列的所有属性 &lt;code&gt;JTable&lt;/code&gt; ，诸如宽度，可调整大小，最小和最大宽度。</target>
        </trans-unit>
        <trans-unit id="53c87258f33aeaa9bb8627a37e666b4dfc91a5e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TableColumn&lt;/code&gt; represents all the attributes of a column in a &lt;code&gt;JTable&lt;/code&gt;, such as width, resizability, minimum and maximum width. In addition, the &lt;code&gt;TableColumn&lt;/code&gt; provides slots for a renderer and an editor that can be used to display and edit the values in this column.</source>
          <target state="translated">甲 &lt;code&gt;TableColumn&lt;/code&gt; 的表示在所述列的所有属性 &lt;code&gt;JTable&lt;/code&gt; ，诸如宽度，可调整大小，最小和最大宽度。另外， &lt;code&gt;TableColumn&lt;/code&gt; 为渲染器和编辑器提供了插槽，可用于显示和编辑此列中的值。</target>
        </trans-unit>
        <trans-unit id="e2859b19ec78253d2ceb32f653234edc9de0e75e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TabularType&lt;/code&gt; is assignable from another &lt;code&gt;
 TabularType&lt;/code&gt; if they have the same &lt;a href=&quot;opentype#getTypeName()&quot;&gt;typeName&lt;/a&gt; and &lt;a href=&quot;tabulartype#getIndexNames()&quot;&gt;index name list&lt;/a&gt;, and the &lt;a href=&quot;tabulartype#getRowType()&quot;&gt;row type&lt;/a&gt; of the first is assignable from the row type of the second.</source>
          <target state="translated">一个 &lt;code&gt;TabularType&lt;/code&gt; 是从另一个分配 &lt;code&gt; TabularType&lt;/code&gt; 如果它们具有相同&lt;a href=&quot;opentype#getTypeName()&quot;&gt;的typeName&lt;/a&gt;和&lt;a href=&quot;tabulartype#getIndexNames()&quot;&gt;索引名称列表&lt;/a&gt;，以及&lt;a href=&quot;tabulartype#getRowType()&quot;&gt;行类型&lt;/a&gt;的第一个是从该行类型的第二分配。</target>
        </trans-unit>
        <trans-unit id="00b7508b878aac3376b48986794450063c3d2c33" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TabularType&lt;/code&gt; is assignable from another &lt;code&gt;TabularType&lt;/code&gt; if they have the same &lt;a href=&quot;opentype#getTypeName--&quot;&gt;typeName&lt;/a&gt; and &lt;a href=&quot;tabulartype#getIndexNames--&quot;&gt;index name list&lt;/a&gt;, and the &lt;a href=&quot;tabulartype#getRowType--&quot;&gt;row type&lt;/a&gt; of the first is assignable from the row type of the second.</source>
          <target state="translated">一个 &lt;code&gt;TabularType&lt;/code&gt; 是从另一个分配 &lt;code&gt;TabularType&lt;/code&gt; 如果它们具有相同&lt;a href=&quot;opentype#getTypeName--&quot;&gt;的typeName&lt;/a&gt;和&lt;a href=&quot;tabulartype#getIndexNames--&quot;&gt;索引名称列表&lt;/a&gt;，以及&lt;a href=&quot;tabulartype#getRowType--&quot;&gt;行类型&lt;/a&gt;的第一个是从该行类型的第二分配。</target>
        </trans-unit>
        <trans-unit id="bcb12be556933750047f1bf21aca57c7527723b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents some form of date and time information. This factory converts the arbitrary temporal object to an instance of &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示某种形式的日期和时间信息。该工厂将任意时态对象转换为 &lt;code&gt;ZoneId&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="6686144140c8aaa5fced7bb05302a39e575ea1b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents some form of date and time information. This factory converts the arbitrary temporal object to an instance of &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示某种形式的日期和时间信息。该工厂将任意时态对象转换为 &lt;code&gt;ZoneOffset&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="357c0e971e0c7765b80d26848f102f0a3d8cd9d9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TextArea&lt;/code&gt; object is a multi-line region that displays text.</source>
          <target state="translated">甲 &lt;code&gt;TextArea&lt;/code&gt; 对象是一个多行的区域，其中显示文本。</target>
        </trans-unit>
        <trans-unit id="318888287335146bdbda48f609997d911e60975b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TextArea&lt;/code&gt; object is a multi-line region that displays text. It can be set to allow editing or to be read-only.</source>
          <target state="translated">甲 &lt;code&gt;TextArea&lt;/code&gt; 对象是一个多行的区域，其中显示文本。可以将其设置为允许编辑或为只读。</target>
        </trans-unit>
        <trans-unit id="c77b86a697f7cee769c19456b5b3de357feac93b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TextField&lt;/code&gt; object is a text component that allows for the editing of a single line of text.</source>
          <target state="translated">甲 &lt;code&gt;TextField&lt;/code&gt; 对象是文本成分，其允许单个文本行的编辑。</target>
        </trans-unit>
        <trans-unit id="6a5d1aafeb71fab06ca3a506802e9ed098926fbf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TextLayout&lt;/code&gt; object can be rendered using its &lt;code&gt;draw&lt;/code&gt; method.</source>
          <target state="translated">甲 &lt;code&gt;TextLayout&lt;/code&gt; 的对象可以使用其被渲染 &lt;code&gt;draw&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f4debc510b5d9cbf0f9f7bb8fb97f710bb844a5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TextListener&lt;/code&gt; object is registered via &lt;code&gt;addTextListener&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;addTextListener&lt;/code&gt; 注册一个 &lt;code&gt;TextListener&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="db1af988d6eb91e12d54f00858b58528022db90e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TextMeasurer&lt;/code&gt; object is constructed with an &lt;a href=&quot;../../../../java.base/java/text/attributedcharacteriterator&quot;&gt;&lt;code&gt;AttributedCharacterIterator&lt;/code&gt;&lt;/a&gt; representing a single paragraph of text. The value returned by the &lt;a href=&quot;../../../../java.base/java/text/characteriterator#getBeginIndex()&quot;&gt;&lt;code&gt;getBeginIndex&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; defines the absolute index of the first character. The value returned by the &lt;a href=&quot;../../../../java.base/java/text/characteriterator#getEndIndex()&quot;&gt;&lt;code&gt;getEndIndex&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; defines the index past the last character. These values define the range of indexes to use in calls to the &lt;code&gt;TextMeasurer&lt;/code&gt;. For example, calls to get the advance of a range of text or the line break of a range of text must use indexes between the beginning and end index values. Calls to &lt;a href=&quot;#insertChar(java.text.AttributedCharacterIterator,int)&quot;&gt;&lt;code&gt;insertChar&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#deleteChar(java.text.AttributedCharacterIterator,int)&quot;&gt;&lt;code&gt;deleteChar&lt;/code&gt;&lt;/a&gt; reset the &lt;code&gt;TextMeasurer&lt;/code&gt; to use the beginning index and end index of the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; passed in those calls.</source>
          <target state="translated">使用代表单个文本段落的&lt;a href=&quot;../../../../java.base/java/text/attributedcharacteriterator&quot;&gt; &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; &lt;/a&gt;构造 &lt;code&gt;TextMeasurer&lt;/code&gt; 对象。 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 的&lt;a href=&quot;../../../../java.base/java/text/characteriterator#getBeginIndex()&quot;&gt; &lt;code&gt;getBeginIndex&lt;/code&gt; &lt;/a&gt;方法返回的值定义了第一个字符的绝对索引。 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 的&lt;a href=&quot;../../../../java.base/java/text/characteriterator#getEndIndex()&quot;&gt; &lt;code&gt;getEndIndex&lt;/code&gt; &lt;/a&gt;方法返回的值定义了最后一个字符之后的索引。这些值定义了在 &lt;code&gt;TextMeasurer&lt;/code&gt; 的调用中使用的索引范围。例如，为获得文本范围的进阶或文本范围的换行而进行的调用必须在开始索引值和结束索引值之间使用索引。调用&lt;a href=&quot;#insertChar(java.text.AttributedCharacterIterator,int)&quot;&gt; &lt;code&gt;insertChar&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#deleteChar(java.text.AttributedCharacterIterator,int)&quot;&gt; &lt;code&gt;deleteChar&lt;/code&gt; &lt;/a&gt;重置 &lt;code&gt;TextMeasurer&lt;/code&gt; 使用的起始索引和结束索引 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 这些调用传递。</target>
        </trans-unit>
        <trans-unit id="432dd0288e2dea2a07b238ecf158d33313a9be1e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; will automatically adjust the pool size (see &lt;a href=&quot;#getPoolSize()&quot;&gt;&lt;code&gt;getPoolSize()&lt;/code&gt;&lt;/a&gt;) according to the bounds set by corePoolSize (see &lt;a href=&quot;#getCorePoolSize()&quot;&gt;&lt;code&gt;getCorePoolSize()&lt;/code&gt;&lt;/a&gt;) and maximumPoolSize (see &lt;a href=&quot;#getMaximumPoolSize()&quot;&gt;&lt;code&gt;getMaximumPoolSize()&lt;/code&gt;&lt;/a&gt;). When a new task is submitted in method &lt;a href=&quot;#execute(java.lang.Runnable)&quot;&gt;&lt;code&gt;execute(Runnable)&lt;/code&gt;&lt;/a&gt;, if fewer than corePoolSize threads are running, a new thread is created to handle the request, even if other worker threads are idle. Else if fewer than maximumPoolSize threads are running, a new thread will be created to handle the request only if the queue is full. By setting corePoolSize and maximumPoolSize the same, you create a fixed-size thread pool. By setting maximumPoolSize to an essentially unbounded value such as &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, you allow the pool to accommodate an arbitrary number of concurrent tasks. Most typically, core and maximum pool sizes are set only upon construction, but they may also be changed dynamically using &lt;a href=&quot;#setCorePoolSize(int)&quot;&gt;&lt;code&gt;setCorePoolSize(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setMaximumPoolSize(int)&quot;&gt;&lt;code&gt;setMaximumPoolSize(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 将自动调整池大小（见&lt;a href=&quot;#getPoolSize()&quot;&gt; &lt;code&gt;getPoolSize()&lt;/code&gt; &lt;/a&gt;）根据由corePoolSize设定的界限（参见&lt;a href=&quot;#getCorePoolSize()&quot;&gt; &lt;code&gt;getCorePoolSize()&lt;/code&gt; &lt;/a&gt;）和maximumPoolSize（参见&lt;a href=&quot;#getMaximumPoolSize()&quot;&gt; &lt;code&gt;getMaximumPoolSize()&lt;/code&gt; &lt;/a&gt;）。当在方法&lt;a href=&quot;#execute(java.lang.Runnable)&quot;&gt; &lt;code&gt;execute(Runnable)&lt;/code&gt; 中&lt;/a&gt;提交新任务时，如果正在运行的线程少于corePoolSize线程，则将创建一个新线程来处理请求，即使其他工作线程处于空闲状态也是如此。否则，如果正在运行的线程少于maximumPoolSize线程，则仅当队列已满时，才会创建一个新线程来处理请求。通过将corePoolSize和maximumPoolSize设置为相同，可以创建固定大小的线程池。通过将maximumPoolSize设置为本质上不受限制的值，例如 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; ，则允许池容纳任意数量的并发任务。最典型地，核心和最大池大小仅在构造时设置，但也可以使用&lt;a href=&quot;#setCorePoolSize(int)&quot;&gt; &lt;code&gt;setCorePoolSize(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#setMaximumPoolSize(int)&quot;&gt; &lt;code&gt;setMaximumPoolSize(int)&lt;/code&gt; &lt;/a&gt;动态更改。</target>
        </trans-unit>
        <trans-unit id="c5b7cf009138d5d0f2fff7b982816adbb7fce9da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; will automatically adjust the pool size (see &lt;a href=&quot;threadpoolexecutor#getPoolSize--&quot;&gt;&lt;code&gt;getPoolSize()&lt;/code&gt;&lt;/a&gt;) according to the bounds set by corePoolSize (see &lt;a href=&quot;threadpoolexecutor#getCorePoolSize--&quot;&gt;&lt;code&gt;getCorePoolSize()&lt;/code&gt;&lt;/a&gt;) and maximumPoolSize (see &lt;a href=&quot;threadpoolexecutor#getMaximumPoolSize--&quot;&gt;&lt;code&gt;getMaximumPoolSize()&lt;/code&gt;&lt;/a&gt;). When a new task is submitted in method &lt;a href=&quot;threadpoolexecutor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;execute(Runnable)&lt;/code&gt;&lt;/a&gt;, and fewer than corePoolSize threads are running, a new thread is created to handle the request, even if other worker threads are idle. If there are more than corePoolSize but less than maximumPoolSize threads running, a new thread will be created only if the queue is full. By setting corePoolSize and maximumPoolSize the same, you create a fixed-size thread pool. By setting maximumPoolSize to an essentially unbounded value such as &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, you allow the pool to accommodate an arbitrary number of concurrent tasks. Most typically, core and maximum pool sizes are set only upon construction, but they may also be changed dynamically using &lt;a href=&quot;threadpoolexecutor#setCorePoolSize-int-&quot;&gt;&lt;code&gt;setCorePoolSize(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadpoolexecutor#setMaximumPoolSize-int-&quot;&gt;&lt;code&gt;setMaximumPoolSize(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 将自动调整池大小（见&lt;a href=&quot;threadpoolexecutor#getPoolSize--&quot;&gt; &lt;code&gt;getPoolSize()&lt;/code&gt; &lt;/a&gt;）根据由corePoolSize设定的界限（参见&lt;a href=&quot;threadpoolexecutor#getCorePoolSize--&quot;&gt; &lt;code&gt;getCorePoolSize()&lt;/code&gt; &lt;/a&gt;）和maximumPoolSize（参见&lt;a href=&quot;threadpoolexecutor#getMaximumPoolSize--&quot;&gt; &lt;code&gt;getMaximumPoolSize()&lt;/code&gt; &lt;/a&gt;）。当在方法&lt;a href=&quot;threadpoolexecutor#execute-java.lang.Runnable-&quot;&gt; &lt;code&gt;execute(Runnable)&lt;/code&gt; 中&lt;/a&gt;提交新任务，并且正在运行的线程少于corePoolSize线程时，即使其他工作线程处于空闲状态，也会创建一个新线程来处理请求。如果运行的线程数大于corePoolSize但小于maximumPoolSize，则仅在队列已满时才创建新线程。通过将corePoolSize和maximumPoolSize设置为相同，可以创建固定大小的线程池。通过将maximumPoolSize设置为一个本质上不受限制的值，例如 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; ，您允许池容纳任意数量的并发任务。通常，核心和最大池大小仅在构造时设置，但也可以使用&lt;a href=&quot;threadpoolexecutor#setCorePoolSize-int-&quot;&gt; &lt;code&gt;setCorePoolSize(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;threadpoolexecutor#setMaximumPoolSize-int-&quot;&gt; &lt;code&gt;setMaximumPoolSize(int)&lt;/code&gt; &lt;/a&gt;动态更改。</target>
        </trans-unit>
        <trans-unit id="eca1f8984467324213270372e3af64cb7babf441" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TimeUnit&lt;/code&gt; is mainly used to inform time-based methods how a given timing parameter should be interpreted. For example, the following code will timeout in 50 milliseconds if the &lt;a href=&quot;locks/lock&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; is not available:</source>
          <target state="translated">一个 &lt;code&gt;TimeUnit&lt;/code&gt; 主要用于通知基于时间的方法，在给定时间参数应如何解释。例如，如果&lt;a href=&quot;locks/lock&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;不可用，则以下代码将在50毫秒后超时：</target>
        </trans-unit>
        <trans-unit id="f23aa9e76a05136ff2469933ea4a3b3c24e042ea" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TimeUnit&lt;/code&gt; represents time durations at a given unit of granularity and provides utility methods to convert across units, and to perform timing and delay operations in these units.</source>
          <target state="translated">甲 &lt;code&gt;TimeUnit&lt;/code&gt; 表示在粒度的一个给定的单位时间的持续时间和跨越单元提供实用的方法来转换，并在这些单元中执行的定时和延迟操作。</target>
        </trans-unit>
        <trans-unit id="cbde8d639f9de2af0b3456b7b9535eba31789a55" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TimeUnit&lt;/code&gt; represents time durations at a given unit of granularity and provides utility methods to convert across units, and to perform timing and delay operations in these units. A &lt;code&gt;TimeUnit&lt;/code&gt; does not maintain time information, but only helps organize and use time representations that may be maintained separately across various contexts. A nanosecond is defined as one thousandth of a microsecond, a microsecond as one thousandth of a millisecond, a millisecond as one thousandth of a second, a minute as sixty seconds, an hour as sixty minutes, and a day as twenty four hours.</source>
          <target state="translated">甲 &lt;code&gt;TimeUnit&lt;/code&gt; 表示在粒度的一个给定的单位时间的持续时间和跨越单元提供实用的方法来转换，并在这些单元中执行的定时和延迟操作。一个 &lt;code&gt;TimeUnit&lt;/code&gt; 不维护时间信息，但是有助于组织和可分别在不同环境中保持使用时间表示。纳秒定义为千分之一毫秒，一毫秒定义为千分之一秒，毫秒定义为千分之一秒，一分钟定义为六十秒，一小时定义为六十分钟，一天定义为二十四小时。</target>
        </trans-unit>
        <trans-unit id="401c628905e0a284f93c6e1b743bb8e851f83229" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Track&lt;/code&gt; occupies a middle level in the hierarchy of data played by a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;: sequencers play sequences, which contain tracks, which contain MIDI events. A sequencer may provide controls that mute or solo individual tracks.</source>
          <target state="translated">一个 &lt;code&gt;Track&lt;/code&gt; 占据在由播放数据的层次结构中的中间级&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;：序播放序列，其中包含曲目，其中包含MIDI事件。定序器可以提供使单个音轨静音或独奏的控件。</target>
        </trans-unit>
        <trans-unit id="cb72ddaf5fa462b8e5b5a29713baefb0b3439f3a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Track&lt;/code&gt; occupies a middle level in the hierarchy of data played by a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;: sequencers play sequences, which contain tracks, which contain MIDI events. A sequencer may provide controls that mute or solo individual tracks.</source>
          <target state="translated">一个 &lt;code&gt;Track&lt;/code&gt; 占据在由播放数据的层次结构中的中间级 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; ：序播放序列，其中包含曲目，其中包含MIDI事件。定序器可以提供使单个音轨静音或独奏的控件。</target>
        </trans-unit>
        <trans-unit id="7dca9c7ff91e154dc11c0176a814ef0d3b792503" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transferable&lt;/code&gt; which implements the capability required to transfer a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Transferable&lt;/code&gt; ，它实现了传输 &lt;code&gt;String&lt;/code&gt; 所需的功能。</target>
        </trans-unit>
        <trans-unit id="22f9024613781cfd1bae219663a121319c797eee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transform&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec)&quot;&gt;&lt;code&gt;newTransform&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">甲 &lt;code&gt;Transform&lt;/code&gt; 实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec)&quot;&gt; &lt;code&gt;newTransform&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="ce8eb8ae483b249dde3a67758552767732ab705e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TransformAttribute&lt;/code&gt; representing the identity transform.</source>
          <target state="translated">一个 &lt;code&gt;TransformAttribute&lt;/code&gt; 代表的身份转换。</target>
        </trans-unit>
        <trans-unit id="794d6415c9a0902d8857c3f3d41bcb725804988a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TransformException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;TransformException&lt;/code&gt; to get thrown.</source>
          <target state="translated">一个 &lt;code&gt;TransformException&lt;/code&gt; 可以包含一个原因：另一个引发此 &lt;code&gt;TransformException&lt;/code&gt; 的throwable 。</target>
        </trans-unit>
        <trans-unit id="6f1ebdad4154be73db70650d4c661a605d4d5a60" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transformer&lt;/code&gt; may be used multiple times. Parameters and output properties are preserved across transformations.</source>
          <target state="translated">甲 &lt;code&gt;Transformer&lt;/code&gt; 可以多次使用。参数和输出属性在转换之间保留。</target>
        </trans-unit>
        <trans-unit id="d7d7308b87cdcd31a24c3b2985ced7b66eb3d439" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transformer&lt;/code&gt; object that may be used to perform a transformation in a single &lt;code&gt;Thread&lt;/code&gt;, never &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Transformer&lt;/code&gt; 对象，可用于在单个 &lt;code&gt;Thread&lt;/code&gt; 中执行转换，决不能为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fef58fcbfbb311f387986c4ba19267aa872e583" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transmitter&lt;/code&gt; sends &lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt; objects to one or more &lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receivers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Transmitter&lt;/code&gt; 发送&lt;a href=&quot;midievent&quot;&gt; &lt;code&gt;MidiEvent&lt;/code&gt; &lt;/a&gt;对象到一个或多个&lt;a href=&quot;receiver&quot;&gt; &lt;code&gt;Receivers&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e98f51d396b18ef7f7ea6a95ac3f4559c6c559e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transmitter&lt;/code&gt; sends &lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt; objects to one or more &lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receivers&lt;/code&gt;&lt;/a&gt;. Common MIDI transmitters include sequencers and MIDI input ports.</source>
          <target state="translated">甲 &lt;code&gt;Transmitter&lt;/code&gt; 发送&lt;a href=&quot;midievent&quot;&gt; &lt;code&gt;MidiEvent&lt;/code&gt; &lt;/a&gt;对象到一个或多个&lt;a href=&quot;receiver&quot;&gt; &lt;code&gt;Receivers&lt;/code&gt; &lt;/a&gt;。常见的MIDI发射器包括音序器和MIDI输入端口。</target>
        </trans-unit>
        <trans-unit id="47f7ecde27375f051e8d2dbe61836c772a17041b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transmitter&lt;/code&gt; sends &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects to one or more &lt;code&gt;&lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receivers&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Transmitter&lt;/code&gt; 发送 &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象到一个或多个 &lt;code&gt;&lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receivers&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab5f5a092ccddf7f0ff4eb7494123a9cb8a192eb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transmitter&lt;/code&gt; sends &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects to one or more &lt;code&gt;&lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receivers&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. Common MIDI transmitters include sequencers and MIDI input ports.</source>
          <target state="translated">甲 &lt;code&gt;Transmitter&lt;/code&gt; 发送 &lt;code&gt;&lt;a href=&quot;midievent&quot;&gt;&lt;code&gt;MidiEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象到一个或多个 &lt;code&gt;&lt;a href=&quot;receiver&quot;&gt;&lt;code&gt;Receivers&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。常见的MIDI发射器包括音序器和MIDI输入端口。</target>
        </trans-unit>
        <trans-unit id="84b5b168f5983c184cb97f5c437732a0737ac2ee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TransportService&lt;/code&gt; may listen on multiple, yet different, addresses at the same time. To uniquely identify each &lt;code&gt;listener&lt;/code&gt; a listen key is created each time that &lt;a href=&quot;transportservice#startListening(java.lang.String)&quot;&gt;&lt;code&gt;startListening&lt;/code&gt;&lt;/a&gt; is called. The listen key is used in calls to the &lt;a href=&quot;transportservice#accept(com.sun.jdi.connect.spi.TransportService.ListenKey,long,long)&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method to accept inbound connections to that listener. A listen key is valid until it is used as an argument to &lt;a href=&quot;transportservice#stopListening(com.sun.jdi.connect.spi.TransportService.ListenKey)&quot;&gt;&lt;code&gt;stopListening&lt;/code&gt;&lt;/a&gt; to stop the transport service from listening on an address.</source>
          <target state="translated">一个 &lt;code&gt;TransportService&lt;/code&gt; 可以同时监听多，但不同的地址。为了唯一地标识每个 &lt;code&gt;listener&lt;/code&gt; ，&lt;a href=&quot;transportservice#startListening(java.lang.String)&quot;&gt; &lt;code&gt;startListening&lt;/code&gt; &lt;/a&gt;调用startListening时都会创建一个侦听键。侦听键用于调用&lt;a href=&quot;transportservice#accept(com.sun.jdi.connect.spi.TransportService.ListenKey,long,long)&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;方法，以接受与该侦听器的入站连接。侦听键是有效的，直到将其用作&lt;a href=&quot;transportservice#stopListening(com.sun.jdi.connect.spi.TransportService.ListenKey)&quot;&gt; &lt;code&gt;stopListening&lt;/code&gt; &lt;/a&gt;的参数以停止传输服务侦听地址为止。</target>
        </trans-unit>
        <trans-unit id="c43c787dc6ab76efe4badde6c83e22211538613c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TrayIcon&lt;/code&gt; can generate an &lt;a href=&quot;event/actionevent&quot;&gt;&lt;code&gt;ActionEvent&lt;/code&gt;&lt;/a&gt;. On some platforms, this occurs when the user selects the tray icon using either the mouse or keyboard.</source>
          <target state="translated">一个 &lt;code&gt;TrayIcon&lt;/code&gt; 可以生成一个&lt;a href=&quot;event/actionevent&quot;&gt; &lt;code&gt;ActionEvent&lt;/code&gt; &lt;/a&gt;。在某些平台上，当用户使用鼠标或键盘选择任务栏图标时，会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="466337adb8accff8d5b78bd4e68c60e9d871eb35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TrayIcon&lt;/code&gt; can generate various &lt;a href=&quot;event/mouseevent&quot;&gt;&lt;code&gt;MouseEvents&lt;/code&gt;&lt;/a&gt; and supports adding corresponding listeners to receive notification of these events. &lt;code&gt;TrayIcon&lt;/code&gt; processes some of the events by itself. For example, by default, when the right-mouse click is performed on the &lt;code&gt;TrayIcon&lt;/code&gt; it displays the specified popup menu. When the mouse hovers over the &lt;code&gt;TrayIcon&lt;/code&gt; the tooltip is displayed (this behaviour is platform dependent).</source>
          <target state="translated">甲 &lt;code&gt;TrayIcon&lt;/code&gt; 可以生成各种&lt;a href=&quot;event/mouseevent&quot;&gt; &lt;code&gt;MouseEvents&lt;/code&gt; &lt;/a&gt;和支持添加对应听众接收这些事件的通知。 &lt;code&gt;TrayIcon&lt;/code&gt; 自己处理一些事件。例如，默认情况下，在 &lt;code&gt;TrayIcon&lt;/code&gt; 上单击鼠标右键时，将显示指定的弹出菜单。当鼠标悬停在 &lt;code&gt;TrayIcon&lt;/code&gt; 上时，将显示工具提示（此行为取决于平台）。</target>
        </trans-unit>
        <trans-unit id="c6f001286c01c45c4daea4afa2c0d9a72aa6a0f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TrayIcon&lt;/code&gt; object represents a tray icon that can be added to the &lt;a href=&quot;systemtray&quot;&gt;&lt;code&gt;system tray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;TrayIcon&lt;/code&gt; 对象表示可被添加到一个托盘图标&lt;a href=&quot;systemtray&quot;&gt; &lt;code&gt;system tray&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8946c319e955d2eb9e506aa6eba7bd114aeb5444" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TrayIcon&lt;/code&gt; object represents a tray icon that can be added to the &lt;a href=&quot;systemtray&quot;&gt;&lt;code&gt;system tray&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;TrayIcon&lt;/code&gt; can have a tooltip (text), an image, a popup menu, and a set of listeners associated with it.</source>
          <target state="translated">甲 &lt;code&gt;TrayIcon&lt;/code&gt; 对象表示可被添加到一个托盘图标&lt;a href=&quot;systemtray&quot;&gt; &lt;code&gt;system tray&lt;/code&gt; &lt;/a&gt;。一个 &lt;code&gt;TrayIcon&lt;/code&gt; 可以有一个提示（文本），图像，弹出菜单和一组与之相关的听众。</target>
        </trans-unit>
        <trans-unit id="f07b1f8a803b8ad8312fc19de57667c518e2327f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TreeCellEditor&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;TreeCellEditor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d10b5b132d04669d5f36e25776be61d409dc94af" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TreeCellEditor&lt;/code&gt;. You need to supply an instance of &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; so that the icons can be obtained. You can optionally supply a &lt;code&gt;TreeCellEditor&lt;/code&gt; that will be layed out according to the icon in the &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt;. If you do not supply a &lt;code&gt;TreeCellEditor&lt;/code&gt;, a &lt;code&gt;TextField&lt;/code&gt; will be used. Editing is started on a triple mouse click, or after a click, pause, click and a delay of 1200 milliseconds.</source>
          <target state="translated">一个 &lt;code&gt;TreeCellEditor&lt;/code&gt; 。您需要提供一个 &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; 实例，以便可以获取图标。您可以选择提供一个 &lt;code&gt;TreeCellEditor&lt;/code&gt; ，它将根据 &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; 中的图标进行布局。如果不提供 &lt;code&gt;TreeCellEditor&lt;/code&gt; ，则将使用 &lt;code&gt;TextField&lt;/code&gt; 。单击三次即可开始编辑，或者在单击，暂停，单击并延迟1200毫秒后开始。</target>
        </trans-unit>
        <trans-unit id="a9a9973b7ddc573008a40e63e16153e2288f330f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UID&lt;/code&gt; created via this constructor will not clash with any &lt;code&gt;UID&lt;/code&gt;s generated via the no-arg constructor.</source>
          <target state="translated">通过此构造函数创建的 &lt;code&gt;UID&lt;/code&gt; 不会与通过no-arg构造函数生成的任何 &lt;code&gt;UID&lt;/code&gt; 冲突。</target>
        </trans-unit>
        <trans-unit id="13c40d3cb524b714a351808aa3e4e0e1cdd674d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UID&lt;/code&gt; instance contains three primitive values:</source>
          <target state="translated">一个 &lt;code&gt;UID&lt;/code&gt; 实例包含三个原始值：</target>
        </trans-unit>
        <trans-unit id="fe7d3ef4cba20379961fe38e5fb6e101ad696498" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UID&lt;/code&gt; represents an identifier that is unique over time with respect to the host it is generated on, or one of 2&lt;sup&gt;16&lt;/sup&gt; &quot;well-known&quot; identifiers.</source>
          <target state="translated">甲 &lt;code&gt;UID&lt;/code&gt; 表示的识别符即独特随着时间的推移相对于它在生成的主机，或2中的一个&lt;sup&gt;16&lt;/sup&gt; &amp;ldquo;公知&amp;rdquo;的标识符。</target>
        </trans-unit>
        <trans-unit id="76bc6d6be8cc65817824000c73faa0bd77b88f49" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;URIReferenceException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;URIReferenceException&lt;/code&gt; to get thrown.</source>
          <target state="translated">一个 &lt;code&gt;URIReferenceException&lt;/code&gt; 可以包含一个原因：导致此另一个抛出 &lt;code&gt;URIReferenceException&lt;/code&gt; 得到抛出。</target>
        </trans-unit>
        <trans-unit id="b58bc0ca4e83b0a96c3a1511203b83099584426f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;URL&lt;/code&gt; object for reading the resource, or &lt;code&gt;null&lt;/code&gt; if the resource could not be found</source>
          <target state="translated">一个 &lt;code&gt;URL&lt;/code&gt; 读取资源，或对象 &lt;code&gt;null&lt;/code&gt; ，如果资源无法被发现</target>
        </trans-unit>
        <trans-unit id="a3ae6dcbe03a5258c2de9b5adc43f66d499b2dc9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;URL&lt;/code&gt; object for reading the resource, or &lt;code&gt;null&lt;/code&gt; if the resource could not be found or the invoker doesn't have adequate privileges to get the resource.</source>
          <target state="translated">一个 &lt;code&gt;URL&lt;/code&gt; 读取资源，或对象 &lt;code&gt;null&lt;/code&gt; ，如果资源不能被发现或者调用方没有足够的权限来获取资源。</target>
        </trans-unit>
        <trans-unit id="e94033eefad59f1c4203f56b39af581faa583c07" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UUID&lt;/code&gt; generated from the specified array</source>
          <target state="translated">从指定数组生成的 &lt;code&gt;UUID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21620c1dde73d7df7f4687f50490fccf13363b02" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UUID&lt;/code&gt; with the specified value</source>
          <target state="translated">甲 &lt;code&gt;UUID&lt;/code&gt; 与指定值</target>
        </trans-unit>
        <trans-unit id="8922dbcbd6678e8544f8c534c1ebaa6cd046b103" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UserPrincipal&lt;/code&gt; object is an abstract representation of an identity. It has a &lt;a href=&quot;../../../security/principal#getName()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; that is typically the username or account name that it represents. User principal objects may be obtained using a &lt;a href=&quot;userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt;, or returned by &lt;a href=&quot;fileattributeview&quot;&gt;&lt;code&gt;FileAttributeView&lt;/code&gt;&lt;/a&gt; implementations that provide access to identity related attributes. For example, the &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; provide access to a file's &lt;a href=&quot;posixfileattributes#owner()&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;UserPrincipal&lt;/code&gt; 目的是一种身份的抽象表示。它的&lt;a href=&quot;../../../security/principal#getName()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;通常是它代表的用户名或帐户名。用户主体对象可以使用&lt;a href=&quot;userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;获得，或由提供对标识相关属性的访问的&lt;a href=&quot;fileattributeview&quot;&gt; &lt;code&gt;FileAttributeView&lt;/code&gt; &lt;/a&gt;实现返回。例如，&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;提供对文件&lt;a href=&quot;posixfileattributes#owner()&quot;&gt; &lt;code&gt;owner&lt;/code&gt; 的&lt;/a&gt;访问。</target>
        </trans-unit>
        <trans-unit id="599a7629c98484788296ad2234207d277d0e2d7d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UserPrincipal&lt;/code&gt; object is an abstract representation of an identity. It has a &lt;a href=&quot;../../../security/principal#getName--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; that is typically the username or account name that it represents. User principal objects may be obtained using a &lt;a href=&quot;userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt;, or returned by &lt;a href=&quot;fileattributeview&quot;&gt;&lt;code&gt;FileAttributeView&lt;/code&gt;&lt;/a&gt; implementations that provide access to identity related attributes. For example, the &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; provide access to a file's &lt;a href=&quot;posixfileattributes#owner--&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;UserPrincipal&lt;/code&gt; 目的是一种身份的抽象表示。它的&lt;a href=&quot;../../../security/principal#getName--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;通常是它代表的用户名或帐户名。用户主体对象可以使用&lt;a href=&quot;userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;获得，或由提供对标识相关属性的访问的&lt;a href=&quot;fileattributeview&quot;&gt; &lt;code&gt;FileAttributeView&lt;/code&gt; &lt;/a&gt;实现返回。例如，&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;提供对文件&lt;a href=&quot;posixfileattributes#owner--&quot;&gt; &lt;code&gt;owner&lt;/code&gt; 的&lt;/a&gt;访问。</target>
        </trans-unit>
        <trans-unit id="1c1f4741da78dd945ec791bf160e2424b5cc586b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UserPrincipal&lt;/code&gt; representing a &lt;em&gt;group identity&lt;/em&gt;, used to determine access rights to objects in a file system.</source>
          <target state="translated">甲 &lt;code&gt;UserPrincipal&lt;/code&gt; 表示&lt;em&gt;组标识&lt;/em&gt;，用于确定在一个文件系统对象的访问权限。</target>
        </trans-unit>
        <trans-unit id="8a116dd3c690ffcfbe35976550ba70d5560c07e7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UserPrincipal&lt;/code&gt; representing a &lt;em&gt;group identity&lt;/em&gt;, used to determine access rights to objects in a file system. The exact definition of a group is implementation specific, but typically, it represents an identity created for administrative purposes so as to determine the access rights for the members of the group. Whether an entity can be a member of multiple groups, and whether groups can be nested, are implementation specified and therefore not specified.</source>
          <target state="translated">甲 &lt;code&gt;UserPrincipal&lt;/code&gt; 表示&lt;em&gt;组标识&lt;/em&gt;，用于确定在一个文件系统对象的访问权限。组的确切定义是特定于实现的，但是通常，它代表为管理目的而创建的身份，以便确定组成员的访问权限。实体是否可以成为多个组的成员，以及组是否可以嵌套是由实现指定的，因此未指定。</target>
        </trans-unit>
        <trans-unit id="286c6994b195ff63e6cf6d828ee4b62110a6e467" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VetoableChangeSupport&lt;/code&gt; instance is thread-safe.</source>
          <target state="translated">一个 &lt;code&gt;VetoableChangeSupport&lt;/code&gt; 实例是线程安全的。</target>
        </trans-unit>
        <trans-unit id="7c39da4cc886a1480134b9477fecb46ea860f403" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; is inherently transparent. While a view may render into its entire allocation, typically a view does not. Rendering is performed by traversing down the tree of &lt;code&gt;View&lt;/code&gt; implementations. Each &lt;code&gt;View&lt;/code&gt; is responsible for rendering its children. This behavior is depended upon for thread safety. While view implementations do not necessarily have to be implemented with thread safety in mind, other view implementations that do make use of concurrency can depend upon a tree traversal to guarantee thread safety.</source>
          <target state="translated">一个 &lt;code&gt;View&lt;/code&gt; 本质上是透明的。尽管一个视图可以呈现其整个分配，但通常情况下不会。渲染是通过遍历 &lt;code&gt;View&lt;/code&gt; 实现树进行的。每个 &lt;code&gt;View&lt;/code&gt; 负责渲染其子级。此行为取决于线程安全性。尽管视图实现不一定必须要考虑线程安全性，但是其他确实使用并发性的视图实现可以依赖于树的遍历来保证线程安全。</target>
        </trans-unit>
        <trans-unit id="be03df672c94c77e01bf6a7d0e532abce574de99" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VirtualMachine&lt;/code&gt; represents a Java virtual machine to which this Java virtual machine has attached. The Java virtual machine to which it is attached is sometimes called the</source>
          <target state="translated">甲 &lt;code&gt;VirtualMachine&lt;/code&gt; 表示未向其中此Java虚拟机具有一个附加的Java虚拟机。与其连接的Java虚拟机有时称为</target>
        </trans-unit>
        <trans-unit id="5b2f2752a220063e8a9a1857f54d0efb58e87444" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; also has a &lt;a href=&quot;#displayName()&quot;&gt;&lt;code&gt;displayName&lt;/code&gt;&lt;/a&gt;. The display name is typically a human readable string that a tool might display to a user. For example, a tool that shows a list of Java virtual machines running on a system might use the display name rather than the identifier. A &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; may be created without a</source>
          <target state="translated">一个 &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; 也有一个&lt;a href=&quot;#displayName()&quot;&gt; &lt;code&gt;displayName&lt;/code&gt; &lt;/a&gt;。显示名称通常是工具可能显示给用户的人类可读字符串。例如，显示系统上运行的Java虚拟机列表的工具可能会使用显示名称而不是标识符。甲 &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; 可以在没有被创建</target>
        </trans-unit>
        <trans-unit id="966c96e09355ea598f681d4e0b0634b52ad13a7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; is a container class used to describe a Java virtual machine. It encapsulates an identifier that identifies a target virtual machine, and a reference to the &lt;a href=&quot;spi/attachprovider&quot;&gt;&lt;code&gt;AttachProvider&lt;/code&gt;&lt;/a&gt; that should be used when attempting to attach to the virtual machine. The identifier is implementation-dependent but is typically the process identifier (or pid) environments where each Java virtual machine runs in its own operating system process.</source>
          <target state="translated">甲 &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; 是用来描述一个Java虚拟机的容器类。它封装了标识目标虚拟机的标识符，以及在尝试附加到虚拟机时应使用的对&lt;a href=&quot;spi/attachprovider&quot;&gt; &lt;code&gt;AttachProvider&lt;/code&gt; &lt;/a&gt;的引用。该标识符与实现有关，但是通常是每个Java虚拟机都在其自己的操作系统进程中运行的进程标识符（或pid）环境。</target>
        </trans-unit>
        <trans-unit id="c7c1a5f09da71ded9d9701609b9298eebe4f189a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VoiceStatus&lt;/code&gt; object contains information about the current status of one of the voices produced by a &lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;VoiceStatus&lt;/code&gt; 对象包含关于由所产生的声音之一的当前状态的信息&lt;a href=&quot;synthesizer&quot;&gt; &lt;code&gt;Synthesizer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="596e71e7a54065b28311c0799dfe3ff8f15f0487" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VolatileCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target acts like a volatile variable.</source>
          <target state="translated">甲 &lt;code&gt;VolatileCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标的作用就像一个易失性可变。</target>
        </trans-unit>
        <trans-unit id="e0d418aa2c0aa5c7b088b46eb9b8c553a1989036" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VolatileCallSite&lt;/code&gt; is a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; whose target acts like a volatile variable. An &lt;code&gt;invokedynamic&lt;/code&gt; instruction linked to a &lt;code&gt;VolatileCallSite&lt;/code&gt; sees updates to its call site target immediately, even if the update occurs in another thread. There may be a performance penalty for such tight coupling between threads.</source>
          <target state="translated">甲 &lt;code&gt;VolatileCallSite&lt;/code&gt; 是&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;，其目标的作用就像一个易失性可变。链接到 &lt;code&gt;VolatileCallSite&lt;/code&gt; 的 &lt;code&gt;invokedynamic&lt;/code&gt; 指令可以立即看到对其调用站点目标的更新，即使更新发生在另一个线程中也是如此。线程之间的这种紧密耦合可能会降低性能。</target>
        </trans-unit>
        <trans-unit id="422fcf97e0a270d1eed1f6556c906973a4223b55" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebRowSet&lt;/code&gt; object can insert a new row by moving to the insert row, calling the appropriate updater methods for each column in the row, and then calling the method &lt;code&gt;insertRow&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;WebRowSet&lt;/code&gt; 目的可以通过移动到插入行，要求该行中的每个列中的适当的更新方法，然后调用该方法插入新行 &lt;code&gt;insertRow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c195302a2b3caef4fcd49f5a7d2356fa0fe23977" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebSocket&lt;/code&gt; has been connected.</source>
          <target state="translated">一个 &lt;code&gt;WebSocket&lt;/code&gt; 已连接。</target>
        </trans-unit>
        <trans-unit id="795b7bd5c6d0f92eeef0e5692db40ba00e671bfe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebSocket&lt;/code&gt; invokes methods of the associated listener passing itself as an argument. These methods are invoked in a thread-safe manner, such that the next invocation may start only after the previous one has finished.</source>
          <target state="translated">甲 &lt;code&gt;WebSocket&lt;/code&gt; 调用自身传递作为参数相关联的监听器的方法。这些方法以线程安全的方式调用，以便仅在前一个调用完成后才能开始下一个调用。</target>
        </trans-unit>
        <trans-unit id="ef7a88d2e30cce9da51d34eb036cab772256ef19" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Window&lt;/code&gt; object is a top-level window with no borders and no menubar.</source>
          <target state="translated">一个 &lt;code&gt;Window&lt;/code&gt; 对象是一个没有边界和菜单栏的顶层窗口。</target>
        </trans-unit>
        <trans-unit id="37af458e69ffd40570fb606e1c3a53b0b15bf3e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Window&lt;/code&gt; object is a top-level window with no borders and no menubar. The default layout for a window is &lt;code&gt;BorderLayout&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Window&lt;/code&gt; 对象是一个没有边界和菜单栏的顶层窗口。窗口的默认布局是 &lt;code&gt;BorderLayout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f2659d09382819cc3894e60b723100ad2720739" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WritableRaster&lt;/code&gt; containing the image's alpha channel.</source>
          <target state="translated">一个包含图像的Alpha通道的 &lt;code&gt;WritableRaster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb3422899b3c6df4136bc9881bcf3cb17b355389" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WritableRaster&lt;/code&gt; that is compatible with this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;ColorModel&lt;/code&gt; 兼容的 &lt;code&gt;WritableRaster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20a284f55c692945b604b39cc536b076f43e6dc2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;XMLObject&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;xmlsignaturefactory#newXMLObject(java.util.List,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;newXMLObject&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class; for example:</source>
          <target state="translated">甲 &lt;code&gt;XMLObject&lt;/code&gt; 组成实例可以通过调用被创建&lt;a href=&quot;xmlsignaturefactory#newXMLObject(java.util.List,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;newXMLObject&lt;/code&gt; &lt;/a&gt;所述的方法&lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt;类; 例如：</target>
        </trans-unit>
        <trans-unit id="8d9990704b4f7c2fb32800d093417ea36291d6a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ZoneId&lt;/code&gt; can be deserialized in a Java Runtime where the ID is unknown. For example, if a server-side Java Runtime has been updated with a new zone ID, but the client-side Java Runtime has not been updated. In this case, the &lt;code&gt;ZoneId&lt;/code&gt; object will exist, and can be queried using &lt;code&gt;getId&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;, &lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;getDisplayName&lt;/code&gt; and &lt;code&gt;normalized&lt;/code&gt;. However, any call to &lt;code&gt;getRules&lt;/code&gt; will fail with &lt;code&gt;ZoneRulesException&lt;/code&gt;. This approach is designed to allow a &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; to be loaded and queried, but not modified, on a Java Runtime with incomplete time-zone information.</source>
          <target state="translated">一个 &lt;code&gt;ZoneId&lt;/code&gt; 可以在Java运行时进行反序列化，其中ID是未知的。例如，如果使用新的区域ID更新了服务器端Java运行时，但尚未更新客户端Java运行时。在这种情况下， &lt;code&gt;ZoneId&lt;/code&gt; 对象将存在，并且可以使用 &lt;code&gt;getId&lt;/code&gt; ， &lt;code&gt;equals&lt;/code&gt; ， &lt;code&gt;hashCode&lt;/code&gt; ， &lt;code&gt;toString&lt;/code&gt; ， &lt;code&gt;getDisplayName&lt;/code&gt; 和 &lt;code&gt;normalized&lt;/code&gt; 进行查询。但是，任何对 &lt;code&gt;getRules&lt;/code&gt; 的调用都将因 &lt;code&gt;ZoneRulesException&lt;/code&gt; 而失败。此方法旨在允许在具有不完整时区信息的Java运行时上加载和查询&lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; &lt;/a&gt;，但不能对其进行修改。</target>
        </trans-unit>
        <trans-unit id="da505947151bf4272a8a9b83469f5005bb360311" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ZoneId&lt;/code&gt; is used to identify the rules used to convert between an &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;localdatetime&quot;&gt;&lt;code&gt;LocalDateTime&lt;/code&gt;&lt;/a&gt;. There are two distinct types of ID:</source>
          <target state="translated">一个 &lt;code&gt;ZoneId&lt;/code&gt; 用于识别用于将之间进行转换的规则&lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;localdatetime&quot;&gt; &lt;code&gt;LocalDateTime&lt;/code&gt; &lt;/a&gt;。有两种不同的ID类型：</target>
        </trans-unit>
        <trans-unit id="05f3af6a7feaa91622bf80e2250ca79781091904" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ZonedDateTime&lt;/code&gt; holds state equivalent to three separate objects, a &lt;code&gt;LocalDateTime&lt;/code&gt;, a &lt;code&gt;ZoneId&lt;/code&gt; and the resolved &lt;code&gt;ZoneOffset&lt;/code&gt;. The offset and local date-time are used to define an instant when necessary. The zone ID is used to obtain the rules for how and when the offset changes. The offset cannot be freely set, as the zone controls which offsets are valid.</source>
          <target state="translated">甲 &lt;code&gt;ZonedDateTime&lt;/code&gt; 保持相当于三个独立的物体，一个状态 &lt;code&gt;LocalDateTime&lt;/code&gt; ，一 &lt;code&gt;ZoneId&lt;/code&gt; 和解决 &lt;code&gt;ZoneOffset&lt;/code&gt; 。偏移量和本地日期时间用于在必要时定义时刻。区域ID用于获取偏移量更改方式和时间的规则。偏移量不能自由设置，因为区域控制哪些偏移量有效。</target>
        </trans-unit>
        <trans-unit id="0d10e806fe2685e19549872b276996cba4677bdf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; indicating if the encapsulated &lt;code&gt;Transferable&lt;/code&gt; object represents the result of local drag-n-drop operation (within the same JVM).</source>
          <target state="translated">一个 &lt;code&gt;boolean&lt;/code&gt; 指示封装的 &lt;code&gt;Transferable&lt;/code&gt; 对象是否表示本地拖放操作的结果（在同一JVM中）。</target>
        </trans-unit>
        <trans-unit id="fc9cd49ad7b5f59a0d1f4361c3727c4e5c505b5a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; indicating if this instance may now render a GUI.</source>
          <target state="translated">一个 &lt;code&gt;boolean&lt;/code&gt; ，指示此实例现在可以呈现一个GUI。</target>
        </trans-unit>
        <trans-unit id="911789bac1c76b67035efa87a8656de4b6dc167c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; indicating whether or not this object is currently in design time mode.</source>
          <target state="translated">一个 &lt;code&gt;boolean&lt;/code&gt; 指示此对象当前是否处于设计时模式。</target>
        </trans-unit>
        <trans-unit id="f020b03a03d1d7e0fea471e7287ff71c308e6333" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; parameter allows you to specify whether or not a printing dialog is displayed to the user. When it is, the user may use the dialog to change the destination printer or printing attributes, or even to cancel the print. Another two parameters allow for a &lt;code&gt;PrintService&lt;/code&gt; and printing attributes to be specified. These parameters can be used either to provide initial values for the print dialog, or to specify values when the dialog is not shown.</source>
          <target state="translated">一个 &lt;code&gt;boolean&lt;/code&gt; 参数，允许你指定一个打印对话框是否被显示给用户。启用后，用户可以使用对话框更改目标打印机或打印属性，甚至取消打印。另外两个参数允许指定 &lt;code&gt;PrintService&lt;/code&gt; 和打印属性。这些参数可用于为打印对话框提供初始值，或在未显示对话框时指定值。</target>
        </trans-unit>
        <trans-unit id="02f0086c349da359110250836ba03df79dd8e698" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ImageWriteParam&lt;/code&gt; allows images to be written as a progressive sequence of increasing quality passes.</source>
          <target state="translated">一个 &lt;code&gt;boolean&lt;/code&gt; ，如果此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 允许图像以渐增的质量传递顺序进行写入，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b410ad56ec7b1440a4b739b5de51c7d451c01a75" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ImageWriteParam&lt;/code&gt; allows images to be written as a progressive sequence of increasing quality passes. By default, the value is &lt;code&gt;false&lt;/code&gt;. Subclasses must set the value manually.</source>
          <target state="translated">一个 &lt;code&gt;boolean&lt;/code&gt; ，如果此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 允许图像以渐增的质量传递顺序进行写入，则为 &lt;code&gt;true&lt;/code&gt; 。默认情况下，该值为 &lt;code&gt;false&lt;/code&gt; 。子类必须手动设置值。</target>
        </trans-unit>
        <trans-unit id="e1aa5ec614f6f8cdf29028ca9609323b4981b960" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ImageWriteParam&lt;/code&gt; allows tile width and tile height parameters to be set.</source>
          <target state="translated">如果此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 允许设置图块宽度和图块高度参数，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="835d34959de64d4a8d84312a811100962bb32824" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ImageWriteParam&lt;/code&gt; allows tile width and tile height parameters to be set. By default, the value is &lt;code&gt;false&lt;/code&gt;. Subclasses must set the value manually.</source>
          <target state="translated">如果此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 允许设置图块宽度和图块高度参数，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。默认情况下，该值为 &lt;code&gt;false&lt;/code&gt; 。子类必须手动设置值。</target>
        </trans-unit>
        <trans-unit id="5a16a4b6cceb46d7210d870aeb738780b5350ffd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ImageWriteParam&lt;/code&gt; allows tiling grid offset parameters to be set.</source>
          <target state="translated">如果此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 允许设置平铺网格偏移参数，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69e6051986f502b35b40f12341fca7ee231dbb2f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;ImageWriteParam&lt;/code&gt; allows tiling grid offset parameters to be set. By default, the value is &lt;code&gt;false&lt;/code&gt;. Subclasses must set the value manually.</source>
          <target state="translated">如果此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 允许设置平铺网格偏移参数，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。默认情况下，该值为 &lt;code&gt;false&lt;/code&gt; 。子类必须手动设置值。</target>
        </trans-unit>
        <trans-unit id="ba57c1828f933d49824cc9acbe04ac90994cee7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this writer can write images using compression.</source>
          <target state="translated">如果此编写器可以使用压缩来写图像，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8334a88bf0f77348a41e079c994d353ef7e14ad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if this writer can write images using compression. By default, the value is &lt;code&gt;false&lt;/code&gt;. Subclasses must set the value manually.</source>
          <target state="translated">如果此编写器可以使用压缩来写图像，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。默认情况下，该值为 &lt;code&gt;false&lt;/code&gt; 。子类必须手动设置值。</target>
        </trans-unit>
        <trans-unit id="af783e5ccce67dac2defe55ca956bd446858f68b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; that is &lt;code&gt;true&lt;/code&gt; if tiling parameters have been specified.</source>
          <target state="translated">如果已指定切片参数，则为 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="298b6d38fd53ceb77f5afd16627685f8849adc99" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; value that may be updated atomically.</source>
          <target state="translated">一个可以自动更新的 &lt;code&gt;boolean&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="f183a691e5656cf9381e6b26108e31cd997e0220" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; value that may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses. An &lt;code&gt;AtomicBoolean&lt;/code&gt; is used in applications such as atomically updated flags, and cannot be used as a replacement for a &lt;a href=&quot;../../../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个可以自动更新的 &lt;code&gt;boolean&lt;/code&gt; 值。有关原子访问的属性的描述，请参见&lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;规范。一个 &lt;code&gt;AtomicBoolean&lt;/code&gt; 在应用，如原子方式更新标志使用，并且不能被用作一个替代&lt;a href=&quot;../../../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c101afa2aedde90937ffa8c036550e520ca97ed0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;boolean&lt;/code&gt; value that may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables. An &lt;code&gt;AtomicBoolean&lt;/code&gt; is used in applications such as atomically updated flags, and cannot be used as a replacement for a &lt;a href=&quot;../../../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个可以自动更新的 &lt;code&gt;boolean&lt;/code&gt; 值。有关原子变量属性的描述，请参见&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;软件包规范。一个 &lt;code&gt;AtomicBoolean&lt;/code&gt; 在应用，如原子方式更新标志使用，并且不能被用作一个替代&lt;a href=&quot;../../../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a76cd3619b4ccf3c191aed8eefc4ec53921b519" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;byte&lt;/code&gt; array initialized with a size of &lt;a href=&quot;#destWidth&quot;&gt;&lt;code&gt;destWidth&lt;/code&gt;&lt;/a&gt; and used to deliver a row of pixel data to the &lt;a href=&quot;imageconsumer&quot;&gt;&lt;code&gt;ImageConsumer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个 &lt;code&gt;byte&lt;/code&gt; 数组，其初始化大小为&lt;a href=&quot;#destWidth&quot;&gt; &lt;code&gt;destWidth&lt;/code&gt; &lt;/a&gt;，用于将一行像素数据传递给&lt;a href=&quot;imageconsumer&quot;&gt; &lt;code&gt;ImageConsumer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20da1027223eab2ad2c66e79d10dc8ff1024234e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;char&lt;/code&gt; value, therefore, represents Basic Multilingual Plane (BMP) code points, including the surrogate code points, or code units of the UTF-16 encoding. An &lt;code&gt;int&lt;/code&gt; value represents all Unicode code points, including supplementary code points. The lower (least significant) 21 bits of &lt;code&gt;int&lt;/code&gt; are used to represent Unicode code points and the upper (most significant) 11 bits must be zero. Unless otherwise specified, the behavior with respect to supplementary characters and surrogate &lt;code&gt;char&lt;/code&gt; values is as follows:</source>
          <target state="translated">甲 &lt;code&gt;char&lt;/code&gt; 值，因此，表示基本多语种平面（BMP）代码点，其中所述替代的编码点，或UTF-16编码的代码单元。一个 &lt;code&gt;int&lt;/code&gt; 值表示所有Unicode代码点，包括补充代码点。 &lt;code&gt;int&lt;/code&gt; 的低21位（最低有效）用于表示Unicode代码点，高11位（最高有效）必须为零。除非另有说明，否则有关补充字符和替代 &lt;code&gt;char&lt;/code&gt; 值的行为如下：</target>
        </trans-unit>
        <trans-unit id="6efab522b7aee8a07cad8889be3980bfb50d4943" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;class&lt;/code&gt; file of version 55.0 or greater may record the host of the nest to which it belongs by using the &lt;code&gt;NestHost&lt;/code&gt; attribute (JVMS 4.7.28). Alternatively, a &lt;code&gt;class&lt;/code&gt; file of version 55.0 or greater may act as a nest host by enumerating the nest's other members with the &lt;code&gt;NestMembers&lt;/code&gt; attribute (JVMS 4.7.29). A &lt;code&gt;class&lt;/code&gt; file of version 54.0 or lower does not use these attributes.</source>
          <target state="translated">版本55.0或更高版本的 &lt;code&gt;class&lt;/code&gt; 文件可以使用 &lt;code&gt;NestHost&lt;/code&gt; 属性（JVMS 4.7.28）记录其所属的嵌套主机。或者，版本55.0或更高版本的 &lt;code&gt;class&lt;/code&gt; 文件可以通过使用 &lt;code&gt;NestMembers&lt;/code&gt; 属性（JVMS 4.7.29）枚举嵌套的其他成员来充当嵌套主机。版本54.0或更低版本的 &lt;code&gt;class&lt;/code&gt; 文件不使用这些属性。</target>
        </trans-unit>
        <trans-unit id="eda7397702e8e699a3d9cd248aa7777f6f0ea18d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;count&lt;/code&gt; value of 0 disables looping: playback will continue at the loop end point, and it will not loop back to the loop start point. This is a sequencer's default.</source>
          <target state="translated">一个 &lt;code&gt;count&lt;/code&gt; 的0禁用循环值：回放将继续在循环的终点，也不会循环回到循环的起点。这是音序器的默认设置。</target>
        </trans-unit>
        <trans-unit id="cd82d12abe21bb169705776073d69b7b82dee223" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;count&lt;/code&gt; value of 0 indicates that any current looping should cease and playback should continue to the end of the clip. The behavior is undefined when this method is invoked with any other value during a loop operation.</source>
          <target state="translated">甲 &lt;code&gt;count&lt;/code&gt; 的0值指示任何当前循环应当停止和重放应继续剪辑的端部。在循环操作期间使用任何其他值调用此方法时，行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="4a9fd5c6543bde97c1701163a0d5f4be46237afa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; containing the current compression quality setting.</source>
          <target state="translated">甲 &lt;code&gt;float&lt;/code&gt; 包含当前压缩质量设置。</target>
        </trans-unit>
        <trans-unit id="002c59e83944aa5f0541632ce7cc87a21431c134" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; containing the current compression quality setting. The initial value is &lt;code&gt;1.0F&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;float&lt;/code&gt; 包含当前压缩质量设置。初始值为 &lt;code&gt;1.0F&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1479a5979c4c5293d1e73493a144c501a4ed3832" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;getDecoder&lt;/code&gt; method is defined similarly.</source>
          <target state="translated">甲 &lt;code&gt;getDecoder&lt;/code&gt; 方法被类似地定义。</target>
        </trans-unit>
        <trans-unit id="3c7ffaa40cbe2054db9cb8e86eaadea3ee80a4e9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;java.lang.Object&lt;/code&gt; holding the OUT parameter value</source>
          <target state="translated">甲 &lt;code&gt;java.lang.Object&lt;/code&gt; 中保存OUT参数值</target>
        </trans-unit>
        <trans-unit id="44edcb148071b12866fbe7f946483d8fc7f7136e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;java.lang.Object&lt;/code&gt; holding the OUT parameter value.</source>
          <target state="translated">甲 &lt;code&gt;java.lang.Object&lt;/code&gt; 中保存OUT参数值。</target>
        </trans-unit>
        <trans-unit id="c7437daa70a343a0b95fb2fbb0eaa5c65eff81fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;java.util.Map&lt;/code&gt; object is used to associate the SQL structured type with its mapping to the class &lt;code&gt;Authors&lt;/code&gt;. The following code fragment shows how a &lt;code&gt;Map&lt;/code&gt; object might be created and given an entry associating &lt;code&gt;AUTHORS&lt;/code&gt; and &lt;code&gt;Authors&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;java.util.Map&lt;/code&gt; 对象用于将SQL结构化类型与其映射关系关联到类 &lt;code&gt;Authors&lt;/code&gt; 。下面的代码片段显示了如何创建 &lt;code&gt;Map&lt;/code&gt; 对象并给出将 &lt;code&gt;AUTHORS&lt;/code&gt; 和 &lt;code&gt;Authors&lt;/code&gt; 关联的条目。</target>
        </trans-unit>
        <trans-unit id="a0ef54338e3f5fd740d5848f5642a2c1ccb5cf6e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; array in which elements may be updated atomically.</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 数组，其中的元素可以原子更新。</target>
        </trans-unit>
        <trans-unit id="3bcdd10f85c7468fa110c2018ba0e2892d616ace" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; array in which elements may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses.</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 数组，其中的元素可以原子更新。有关原子访问的属性的描述，请参见&lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="88aeee4d95787893e3688fea4c58f90d49ca8c99" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; array in which elements may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 数组，其中的元素可以原子更新。有关原子变量的属性的描述，请参见&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;包规范。</target>
        </trans-unit>
        <trans-unit id="03ee3984a4ce41f61a957ded4535f07488a6735b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; argument counts (for purposes of arity limits) as two argument slots.</source>
          <target state="translated">甲 &lt;code&gt;long&lt;/code&gt; 或 &lt;code&gt;double&lt;/code&gt; 参数计数（对于元数限制的目的）作为两个参数时隙。</target>
        </trans-unit>
        <trans-unit id="a04b66b2d94cf4ae8fbc24d6ec5f4a83902cb97c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; value representing the time the file was last modified, measured in milliseconds since the epoch (00:00:00 GMT, January 1, 1970), or &lt;code&gt;0L&lt;/code&gt; if the file does not exist or if an I/O error occurs</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 值，表示文件的最后修改时间，以从纪元（1970年1月1日格林尼治标准时间00:00:00，毫秒）开始的毫秒数为单位；如果文件不存在或发生I / O错误，则为 &lt;code&gt;0L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01233b54d85186abbddf9436bfdbaf094a88ef54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; value representing the time the file was last modified, measured in milliseconds since the epoch (00:00:00 GMT, January 1, 1970), or &lt;code&gt;0L&lt;/code&gt; if the file does not exist or if an I/O error occurs. The value may be negative indicating the number of milliseconds before the epoch</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 值，表示文件的最后修改时间，以该时间段（自格林尼治标准时间1970年1月1日00:00:00 GMT）以来的毫秒数为单位，如果文件不存在或发生I / O错误，则为 &lt;code&gt;0L&lt;/code&gt; 。该值可以为负，指示历元之前的毫秒数</target>
        </trans-unit>
        <trans-unit id="bc909250cbeae60993a8740b7bb550fbcd052167" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; value that may be updated atomically.</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 值，可以原子更新。</target>
        </trans-unit>
        <trans-unit id="ec162d19f31a3cd4caaba214a167faedbd80db54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; value that may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses. An &lt;code&gt;AtomicLong&lt;/code&gt; is used in applications such as atomically incremented sequence numbers, and cannot be used as a replacement for a &lt;a href=&quot;../../../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;. However, this class does extend &lt;code&gt;Number&lt;/code&gt; to allow uniform access by tools and utilities that deal with numerically-based classes.</source>
          <target state="translated">一个可能会自动更新的 &lt;code&gt;long&lt;/code&gt; 值。有关原子访问的属性的描述，请参见&lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;规范。一个 &lt;code&gt;AtomicLong&lt;/code&gt; 在应用中使用的诸如原子递增的序列号，并且不能被用作一个替代&lt;a href=&quot;../../../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;。但是，此类确实扩展了 &lt;code&gt;Number&lt;/code&gt; ,以允许处理基于数字的类的工具和实用程序进行统一访问。</target>
        </trans-unit>
        <trans-unit id="192854d39ccd972a8265120efc645d14fb105c7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;long&lt;/code&gt; value that may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables. An &lt;code&gt;AtomicLong&lt;/code&gt; is used in applications such as atomically incremented sequence numbers, and cannot be used as a replacement for a &lt;a href=&quot;../../../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;. However, this class does extend &lt;code&gt;Number&lt;/code&gt; to allow uniform access by tools and utilities that deal with numerically-based classes.</source>
          <target state="translated">一个 &lt;code&gt;long&lt;/code&gt; 值，可以原子更新。有关原子变量的属性的描述，请参见&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;包规范。一个 &lt;code&gt;AtomicLong&lt;/code&gt; 在应用中使用的诸如原子递增的序列号，并且不能被用作一个替代&lt;a href=&quot;../../../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;。但是，此类确实扩展了 &lt;code&gt;Number&lt;/code&gt; ,以允许处理基于数字的类的工具和实用程序进行统一访问。</target>
        </trans-unit>
        <trans-unit id="235874c94c0f2dfde0bba3dfb03aba6a5c029f12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;mailto:&lt;/code&gt; URI can specify message fields including</source>
          <target state="translated">甲 &lt;code&gt;mailto:&lt;/code&gt; URI可以指定包括消息字段</target>
        </trans-unit>
        <trans-unit id="e9fc1df4b7ac98eebfc4971379d3682ab28fb645" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;named-capturing group&lt;/code&gt; is still numbered as described in &lt;a href=&quot;#gnumber&quot;&gt;Group number&lt;/a&gt;.</source>
          <target state="translated">甲 &lt;code&gt;named-capturing group&lt;/code&gt; 中的说明仍然编号&lt;a href=&quot;#gnumber&quot;&gt;组号码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddc816003f98669f500647d38c58eeab0e8488b6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; address will assign the</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; 地址将分配</target>
        </trans-unit>
        <trans-unit id="073111b0c86bd79b925cf37fa0cb0aae841fb84e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; array reference is considered lexicographically less than a non-&lt;code&gt;null&lt;/code&gt; array reference. Two &lt;code&gt;null&lt;/code&gt; array references are considered equal.</source>
          <target state="translated">甲 &lt;code&gt;null&lt;/code&gt; 数组引用比非字典顺序较少考虑 &lt;code&gt;null&lt;/code&gt; 数组引用。两个 &lt;code&gt;null&lt;/code&gt; 数组引用被认为是相等的。</target>
        </trans-unit>
        <trans-unit id="329fa026cc72a7c35dee3ce859c96300362979ec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; array reference is considered lexicographically less than a non-&lt;code&gt;null&lt;/code&gt; array reference. Two &lt;code&gt;null&lt;/code&gt; array references are considered equal. A &lt;code&gt;null&lt;/code&gt; array element is considered lexicographically less than a non-&lt;code&gt;null&lt;/code&gt; array element. Two &lt;code&gt;null&lt;/code&gt; array elements are considered equal.</source>
          <target state="translated">甲 &lt;code&gt;null&lt;/code&gt; 数组引用比非字典顺序较少考虑 &lt;code&gt;null&lt;/code&gt; 数组引用。两个 &lt;code&gt;null&lt;/code&gt; 数组引用被认为是相等的。从字典上讲， &lt;code&gt;null&lt;/code&gt; 数组元素被认为比非 &lt;code&gt;null&lt;/code&gt; 数组元素小。两个 &lt;code&gt;null&lt;/code&gt; 数组元素被认为是相等的。</target>
        </trans-unit>
        <trans-unit id="af43eaaf3581a1e718f40089e52888e01f0297bf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; array reference is considered lexicographically less than a non-&lt;code&gt;null&lt;/code&gt; array reference. Two &lt;code&gt;null&lt;/code&gt; array references are considered equal. A &lt;code&gt;null&lt;/code&gt; array element is considered lexicographically than a non-&lt;code&gt;null&lt;/code&gt; array element. Two &lt;code&gt;null&lt;/code&gt; array elements are considered equal.</source>
          <target state="translated">甲 &lt;code&gt;null&lt;/code&gt; 数组引用比非字典顺序较少考虑 &lt;code&gt;null&lt;/code&gt; 数组引用。两个 &lt;code&gt;null&lt;/code&gt; 数组引用被认为是相等的。甲 &lt;code&gt;null&lt;/code&gt; 数组元素被认为是比非字典顺序 &lt;code&gt;null&lt;/code&gt; 数组元素。两个 &lt;code&gt;null&lt;/code&gt; 数组元素被认为是相等的。</target>
        </trans-unit>
        <trans-unit id="a1bfbb3f894a1e1d42024d7651c1edc781e39653" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; value for</source>
          <target state="translated">的 &lt;code&gt;null&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="dcb60d8ba30e7b319805196a1f0ba9444c9c5ea9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; value indicates that all destination bands will be used.</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; 值指示所有目标band将被使用。</target>
        </trans-unit>
        <trans-unit id="5aee2cf861557c088e548f762214d97ee16bebd1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; value indicates that all source bands will be used.</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; 值指示所有源band将被使用。</target>
        </trans-unit>
        <trans-unit id="c8aa7f56541d93b0cf41a104114d2908d45605e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; value indicates that field is not set.</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; 值指示不设置字段。</target>
        </trans-unit>
        <trans-unit id="7e24479059a86232b3b1259897089f329fb70b5c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; value may be passed to function</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; 值可以传递给函数</target>
        </trans-unit>
        <trans-unit id="1f63c6f19d49f7eeccf62713ebc460ba91686c20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt; value or &lt;code&gt;Action&lt;/code&gt; results in the button's &lt;code&gt;mnemonic&lt;/code&gt; property being set to &lt;code&gt;'\0'&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; 值或 &lt;code&gt;Action&lt;/code&gt; 导致按钮的 &lt;code&gt;mnemonic&lt;/code&gt; 属性设定为 &lt;code&gt;'\0'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="358b40c26f1d1fc27be4c8fd5ddb8dcc6f763775" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;null&lt;/code&gt;&lt;code&gt;domainName&lt;/code&gt; is equivalent to and represented by an empty string.</source>
          <target state="translated">一个 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;domainName&lt;/code&gt; 等效于一个空字符串，并由一个空字符串表示。</target>
        </trans-unit>
        <trans-unit id="1e7861e42cadd5a8e7683aa20e472886e476b3a9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;serialVersionUID&lt;/code&gt; field in an interface is ineffectual.</source>
          <target state="translated">甲 &lt;code&gt;serialVersionUID&lt;/code&gt; 在接口字段是无效的。</target>
        </trans-unit>
        <trans-unit id="316a2dd6a1a519cbd86c3c4d8154558ce3d693ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;serialVersionUID&lt;/code&gt; field in an interface is ineffectual. Do not use; no replacement.</source>
          <target state="translated">甲 &lt;code&gt;serialVersionUID&lt;/code&gt; 在接口字段是无效的。不使用; 无可替代。</target>
        </trans-unit>
        <trans-unit id="49912ba1de6fbd5de094cb48143007a99622de08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;startElement&lt;/code&gt; filter function may access or change the attributes for the Element. Changing Namespace declarations will have no effect on namespace resolution by the parser.</source>
          <target state="translated">甲 &lt;code&gt;startElement&lt;/code&gt; 滤波器功能可以访问或改变该元素的属性。更改名称空间声明将不会对解析器的名称空间解析产生影响。</target>
        </trans-unit>
        <trans-unit id="f673ebe2d5c5810c50da61a00a4c5064ab7d452e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Dynamic MBean&lt;/em&gt; is an MBean that defines its management interface at run-time. For example, a configuration MBean could determine the names and types of the attributes it exposes by parsing an XML file.</source>
          <target state="translated">甲&lt;em&gt;动态的MBean&lt;/em&gt;是定义在运行时其管理接口的MBean。例如，配置MBean可以通过解析XML文件来确定其公开的属性的名称和类型。</target>
        </trans-unit>
        <trans-unit id="c1adf451901eb2b128ac5f178878235f9536b4ce" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Model MBean&lt;/em&gt; is a kind of Dynamic MBean that acts as a bridge between the management interface and the underlying managed resource. Both the management interface and the managed resource are specified as Java objects. The same Model MBean implementation can be reused many times with different management interfaces and managed resources, and it can provide common functionality such as persistence and caching. Model MBeans are defined by the package &lt;a href=&quot;modelmbean/package-summary&quot;&gt;&lt;code&gt;
        javax.management.modelmbean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个&lt;em&gt;的Model MBean&lt;/em&gt;是一种Dynamic MBean，它充当管理接口和基础托管资源之间的桥梁。管理接口和托管资源都指定为Java对象。相同的Model MBean实现可以在不同的管理接口和托管资源下重复使用多次，并且可以提供诸如持久性和缓存之类的通用功能。模型MBean由包&lt;a href=&quot;modelmbean/package-summary&quot;&gt; &lt;code&gt; javax.management.modelmbean&lt;/code&gt; &lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="38f817f1bc8c8c30eeb708b79191fff2439cfeee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;URL context factory&lt;/em&gt; is a special ObjectFactory that creates contexts for resolving URLs or objects whose locations are specified by URLs. The &lt;code&gt;getObjectInstance()&lt;/code&gt; method of a URL context factory will obey the following rules.</source>
          <target state="translated">一个&lt;em&gt;URL上下文工厂&lt;/em&gt;是一个创建解决网址或对象，它们的位置由URL被指定的上下文一个特殊的ObjectFactory。URL上下文工厂的 &lt;code&gt;getObjectInstance()&lt;/code&gt; 方法将遵循以下规则。</target>
        </trans-unit>
        <trans-unit id="0da0a069e013ab04293daef37d59dd3f72593cab" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;character&lt;/em&gt; is a symbol that represents an item such as a letter, a digit, or punctuation in an abstract way. For example, &lt;code&gt;'g'&lt;/code&gt;, LATIN SMALL LETTER G, is a character.</source>
          <target state="translated">甲&lt;em&gt;字符&lt;/em&gt;是一个表示一个项，诸如字母，数字，标点符号或者以抽象方式的符号。例如，拉丁小写字母G'g &lt;code&gt;'g'&lt;/code&gt; 是一个字符。</target>
        </trans-unit>
        <trans-unit id="1b6020abc9bbd5b3b68dcf3dadb60c07aea04cbf" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; is an object having a graphical representation that can be displayed on the screen and that can interact with the user.</source>
          <target state="translated">甲&lt;em&gt;组件&lt;/em&gt;是具有可以被显示在屏幕上，并且可以与用户进行交互的图形表示的对象。</target>
        </trans-unit>
        <trans-unit id="5981e4cabac85afb86636e08791d62135577cae2" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; is an object having a graphical representation that can be displayed on the screen and that can interact with the user. Examples of components are the buttons, checkboxes, and scrollbars of a typical graphical user interface.</source>
          <target state="translated">甲&lt;em&gt;组件&lt;/em&gt;是具有可以被显示在屏幕上，并且可以与用户进行交互的图形表示的对象。组件的示例是典型图形用户界面的按钮，复选框和滚动条。</target>
        </trans-unit>
        <trans-unit id="bae7e79736ca0e41eec88bd1fbd34a7b4e497cc6" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;direct method handle&lt;/em&gt; represents a method, constructor, or field without any intervening argument bindings or other transformations. The method, constructor, or field referred to by a direct method handle is called its &lt;em&gt;underlying member&lt;/em&gt;. Direct method handles may be obtained in any of these ways:</source>
          <target state="translated">甲&lt;em&gt;直接方法手柄&lt;/em&gt;表示方法，构造函数，或场而没有任何插入的参数的绑定或其它变换。直接方法句柄引用的方法，构造函数或字段称为其&lt;em&gt;基础成员&lt;/em&gt;。可以通过以下任何方式获取直接方法句柄：</target>
        </trans-unit>
        <trans-unit id="3208ea1e27927112df98fe1305517c6f41d8a6c7" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;glyph&lt;/em&gt; is a shape used to render a character or a sequence of characters. In simple writing systems, such as Latin, typically one glyph represents one character. In general, however, characters and glyphs do not have one-to-one correspondence. For example, the character '&amp;aacute;' LATIN SMALL LETTER A WITH ACUTE, can be represented by two glyphs: one for 'a' and one for '&amp;acute;'. On the other hand, the two-character string &quot;fi&quot; can be represented by a single glyph, an &quot;fi&quot; ligature. In complex writing systems, such as Arabic or the South and South-East Asian writing systems, the relationship between characters and glyphs can be more complicated and involve context-dependent selection of glyphs as well as glyph reordering. A font encapsulates the collection of glyphs needed to render a selected set of characters as well as the tables needed to map sequences of characters to corresponding sequences of glyphs.</source>
          <target state="translated">一&lt;em&gt;字形&lt;/em&gt;是用于渲染字符或字符序列的形状。在简单的书写系统（例如拉丁语）中，通常一个字形代表一个字符。但是，一般而言，字符和字形没有一对一的对应关系。例如，字符&amp;ldquo;&amp;aacute;&amp;rdquo;带小号的拉丁文小写字母A可以用两个字形表示：一个字形代表&amp;ldquo; a&amp;rdquo;，一个字形代表&amp;ldquo;&amp;acute;&amp;rdquo;。另一方面，两个字符的字符串&amp;ldquo; fi&amp;rdquo;可以用一个字形表示，即&amp;ldquo; fi&amp;rdquo;连字。在复杂的书写系统（例如阿拉伯文或南亚和东南亚书写系统）中，字符和字形之间的关系可能更加复杂，并且涉及到上下文相关的字形选择以及字形重新排序。字体封装了呈现一组选定字符所需的字形集合以及将字符序列映射到相应字形序列所需的表。</target>
        </trans-unit>
        <trans-unit id="d8dacb0c0c5e3609e90253da2505ca498963c418" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;layout path&lt;/em&gt; originates from a &lt;em&gt;root&lt;/em&gt; layout (typically a group or a sequence layout) and terminates at a layout nested within the root layout - this is the layout &lt;em&gt;selected&lt;/em&gt; by the layout path. Layout paths are typically expressed as a sequence of one or more &lt;a href=&quot;memorylayout.pathelement&quot;&gt;&lt;code&gt;MemoryLayout.PathElement&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">甲&lt;em&gt;布局路径&lt;/em&gt;从一个始发&lt;em&gt;根&lt;/em&gt;布局（通常一组或一序列的布局），并终止于嵌套在根布局内的布局-这是布局&lt;em&gt;选择&lt;/em&gt;由布局路径。布局路径通常表示为一个或多个&lt;a href=&quot;memorylayout.pathelement&quot;&gt; &lt;code&gt;MemoryLayout.PathElement&lt;/code&gt; &lt;/a&gt;实例的序列。</target>
        </trans-unit>
        <trans-unit id="23c977c205f5d1a10d0c80e98d23945f1f5b0892" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;lookup object&lt;/em&gt; is a factory for creating method handles, when the creation requires access checking.</source>
          <target state="translated">一个&lt;em&gt;查找对象&lt;/em&gt;是用于创建方法处理，当创建需要访问检查的工厂。</target>
        </trans-unit>
        <trans-unit id="ec9f139bfeb4d7705debb706974cceb3ded9eaf5" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;lookup object&lt;/em&gt; is a factory for creating method handles, when the creation requires access checking. Method handles do not perform access checks when they are called, but rather when they are created. Therefore, method handle access restrictions must be enforced when a method handle is created. The caller class against which those restrictions are enforced is known as the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt;.</source>
          <target state="translated">一个&lt;em&gt;查找对象&lt;/em&gt;是用于创建方法处理，当创建需要访问检查的工厂。方法句柄在调用时不执行访问检查，而是在创建时执行。因此，在创建方法句柄时必须强制执行方法句柄访问限制。强制执行这些限制的调用方类称为&lt;a href=&quot;#lookupClass()&quot;&gt;lookup类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22cf7fb007bf2d5fe1f35768641f433f636d2570" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;lookup object&lt;/em&gt; is a factory for creating method handles, when the creation requires access checking. Method handles do not perform access checks when they are called, but rather when they are created. Therefore, method handle access restrictions must be enforced when a method handle is created. The caller class against which those restrictions are enforced is known as the &lt;a href=&quot;methodhandles.lookup#lookupClass&quot;&gt;lookup class&lt;/a&gt;.</source>
          <target state="translated">一个&lt;em&gt;查找对象&lt;/em&gt;是用于创建方法处理，当创建需要访问检查的工厂。方法句柄在调用时不执行访问检查，而是在创建时执行。因此，在创建方法句柄时必须强制执行方法句柄访问限制。强制执行这些限制的调用方类称为&lt;a href=&quot;methodhandles.lookup#lookupClass&quot;&gt;lookup类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03d5c0b02f91cd438ce51f0976c6a1b93c530e9a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;mutable reduction operation&lt;/em&gt; accumulates input elements into a mutable result container, such as a &lt;code&gt;Collection&lt;/code&gt; or &lt;code&gt;StringBuilder&lt;/code&gt;, as it processes the elements in the stream.</source>
          <target state="translated">甲&lt;em&gt;可变归约运算&lt;/em&gt;累积输入元件到一个可变的结果的容器，如一个 &lt;code&gt;Collection&lt;/code&gt; 或 &lt;code&gt;StringBuilder&lt;/code&gt; 的，因为它处理流中的元素。</target>
        </trans-unit>
        <trans-unit id="9e8fc7fd60302cc0d2d564d3cd78710e4bca9017" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;notification&lt;/em&gt; is an instance of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; class or a subclass. In addition to its Java class, it has a &lt;em&gt;type&lt;/em&gt; string that can distinguish it from other notifications of the same class.</source>
          <target state="translated">甲&lt;em&gt;通知&lt;/em&gt;是的一个实例&lt;a href=&quot;notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;类或子类。除了Java类之外，它还有一个&lt;em&gt;类型&lt;/em&gt;字符串，可以将其与同一类的其他通知区分开。</target>
        </trans-unit>
        <trans-unit id="e9cd5e4185dd07b85f3d563a03ad8994c7f4c23a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;package name&lt;/em&gt; is derived from the resource name. If the package name is a &lt;a href=&quot;#getPackages()&quot;&gt;package&lt;/a&gt; in the module then the resource can only be located by the caller of this method when the package is &lt;a href=&quot;#isOpen(java.lang.String,java.lang.Module)&quot;&gt;open&lt;/a&gt; to at least the caller's module. If the resource is not in a package in the module then the resource is not encapsulated.</source>
          <target state="translated">一&lt;em&gt;包名&lt;/em&gt;是从资源名称的。如果程序包名称是模块中的&lt;a href=&quot;#getPackages()&quot;&gt;程序包&lt;/a&gt;，则仅当程序包至少对调用方的模块&lt;a href=&quot;#isOpen(java.lang.String,java.lang.Module)&quot;&gt;打开&lt;/a&gt;时，该方法的调用方才能找到资源。如果资源不在模块的包装中，则该资源不会被封装。</target>
        </trans-unit>
        <trans-unit id="32d9b97aae32d5b323b7ea17ce070dd4e8295814" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;platform MBeanServer&lt;/em&gt; can be accessed with the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;getPlatformMBeanServer&lt;/code&gt;&lt;/a&gt; method. On the first call to this method, it creates the platform MBeanServer and registers all platform MXBeans including &lt;a href=&quot;platformmanagedobject&quot;&gt;platform MXBeans&lt;/a&gt;. Each platform MXBean is registered with a unique name defined in the specification of the management interface. This is a single MBeanServer that can be shared by different managed components running within the same Java virtual machine.</source>
          <target state="translated">一个&lt;em&gt;平台MBeanServer&lt;/em&gt;可以通过访问&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;getPlatformMBeanServer&lt;/code&gt; &lt;/a&gt;方法。首次调用此方法时，它将创建平台MBeanServer并注册所有平台MXBean，包括&lt;a href=&quot;platformmanagedobject&quot;&gt;平台MXBean&lt;/a&gt;。每个平台MXBean均使用在管理接口的规范中定义的唯一名称进行注册。这是一个MBeanServer，可以由在同一Java虚拟机中运行的不同托管组件共享。</target>
        </trans-unit>
        <trans-unit id="21c81f57a687d236a9823553d443d7c7bfc4f429" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;platform MBeanServer&lt;/em&gt; can be accessed with the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;getPlatformMBeanServer&lt;/code&gt;&lt;/a&gt; method. On the first call to this method, it creates the platform MBeanServer and registers all platform MXBeans including &lt;a href=&quot;platformmanagedobject&quot;&gt;platform MXBeans&lt;/a&gt;. Each platform MXBean is registered with a unique name defined in the specification of the management interface. This is a single MBeanServer that can be shared by different managed components running within the same Java virtual machine.</source>
          <target state="translated">一个&lt;em&gt;平台MBeanServer&lt;/em&gt;可以通过访问&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;getPlatformMBeanServer&lt;/code&gt; &lt;/a&gt;方法。第一次调用此方法时，它将创建平台MBeanServer并注册所有平台MXBean，包括&lt;a href=&quot;platformmanagedobject&quot;&gt;平台MXBean&lt;/a&gt;。每个平台MXBean均使用在管理接口的规范中定义的唯一名称进行注册。这是一个MBeanServer，可以由在同一Java虚拟机中运行的不同托管组件共享。</target>
        </trans-unit>
        <trans-unit id="32bec0eef41ca07d26cedc2089260b4548d59027" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;provider package list&lt;/em&gt; is searched for as follows:</source>
          <target state="translated">一个&lt;em&gt;提供者包列表&lt;/em&gt;的搜索如下所示：</target>
        </trans-unit>
        <trans-unit id="75f53e336013d60a78f82431737bf11c8a71996a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;proxy class&lt;/em&gt; is a class created at runtime that implements a specified list of interfaces, known as &lt;em&gt;proxy interfaces&lt;/em&gt;. A &lt;em&gt;proxy instance&lt;/em&gt; is an instance of a proxy class. Each proxy instance has an associated</source>
          <target state="translated">甲&lt;em&gt;代理类&lt;/em&gt;是在运行时创建的类，它实现接口指定列表，被称为&lt;em&gt;代理接口&lt;/em&gt;。一个&lt;em&gt;代理实例&lt;/em&gt;是代理类的一个实例。每个代理实例都有一个关联的</target>
        </trans-unit>
        <trans-unit id="bbe2813a0b49a517a6994326f5bc65425bce7602" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;qualified&lt;/em&gt; element name is one that has its package name prepended to it, such as &lt;code&gt;java.lang.String&lt;/code&gt;. A non-qualified name has no package name, such as &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">甲&lt;em&gt;合格&lt;/em&gt;元件名是已经其包名称前面加上它，如 &lt;code&gt;java.lang.String&lt;/code&gt; 中。非限定名称没有包名称，例如 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="385a385274a30bf632664dbb24d9c18b767194e2" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;quoted value&lt;/em&gt; consists of a quote (&lt;code&gt;&quot;&lt;/code&gt;), followed by a possibly empty string of characters, followed by another quote. Within the string of characters, the backslash (&lt;code&gt;\&lt;/code&gt;) has a special meaning. It must be followed by one of the following characters:</source>
          <target state="translated">带&lt;em&gt;引号的值&lt;/em&gt;包含一个引号（ &lt;code&gt;&quot;&lt;/code&gt; ），后跟一个可能为空的字符串，后跟另一个引号。在字符串中，反斜杠（ &lt;code&gt;\&lt;/code&gt; ）具有特殊含义。必须在其后跟随以下内容之一字符：</target>
        </trans-unit>
        <trans-unit id="ce63194cd7c0ea049812ae14373f43a626930e75" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;record class&lt;/em&gt; is a shallowly immutable, transparent carrier for a fixed set of values, called the &lt;em&gt;record components&lt;/em&gt;. The Java language provides concise syntax for declaring record classes, whereby the record components are declared in the record header. The list of record components declared in the record header form the &lt;em&gt;record descriptor&lt;/em&gt;.</source>
          <target state="translated">甲&lt;em&gt;记录类&lt;/em&gt;为固定值的集合，被称为一个浅不可改变的，透明的载体&lt;em&gt;记录部件&lt;/em&gt;。Java语言提供了用于声明记录类的简洁语法，从而在记录头中声明了记录组件。在记录头中声明的记录组件列表构成&lt;em&gt;记录描述符&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5e671cc59a0e1a4f6c086eb387d26a321894a7fe" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;reduction&lt;/em&gt; operation (also called a &lt;em&gt;fold&lt;/em&gt;) takes a sequence of input elements and combines them into a single summary result by repeated application of a combining operation, such as finding the sum or maximum of a set of numbers, or accumulating elements into a list. The streams classes have multiple forms of general reduction operations, called &lt;a href=&quot;stream#reduce(java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt;, as well as multiple specialized reduction forms such as &lt;a href=&quot;intstream#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream#max()&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;intstream#count()&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲&lt;em&gt;减少&lt;/em&gt;操作（也被称为&lt;em&gt;倍&lt;/em&gt;）由一个组合操作的反复应用，例如找到一组数字，或累积元素的总和或最大到一个列表中需要输入元件并且将它们组合成一个单一的汇总结果的一个序列。流类具有多种形式的常规归约运算，称为&lt;a href=&quot;stream#reduce(java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;reduce()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt;，以及多种专门的归约形式，如&lt;a href=&quot;intstream#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;intstream#max()&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;intstream#count()&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="881652b1aaf32556529fd976baa7d3f05a31e6a9" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;reduction&lt;/em&gt; operation (also called a &lt;em&gt;fold&lt;/em&gt;) takes a sequence of input elements and combines them into a single summary result by repeated application of a combining operation, such as finding the sum or maximum of a set of numbers, or accumulating elements into a list. The streams classes have multiple forms of general reduction operations, called &lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt;, as well as multiple specialized reduction forms such as &lt;a href=&quot;intstream#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream#max--&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;intstream#count--&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲&lt;em&gt;减少&lt;/em&gt;操作（也被称为&lt;em&gt;倍&lt;/em&gt;）由一个组合操作的反复应用，例如找到一组数字，或累积元素的总和或最大到一个列表中需要输入元件并且将它们组合成一个单一的汇总结果的一个序列。流类具有多种形式的常规归约运算，称为&lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;reduce()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt;，以及多种专门的归约形式，如&lt;a href=&quot;intstream#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;intstream#max--&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;intstream#count--&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="432755a5f675a231099e40d1fd01a3255d083a6a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;reference object&lt;/em&gt; encapsulates a reference to some other object so that the reference itself may be examined and manipulated like any other object. Three types of reference objects are provided, each weaker than the last: &lt;em&gt;soft&lt;/em&gt;, &lt;em&gt;weak&lt;/em&gt;, and &lt;em&gt;phantom&lt;/em&gt;. Each type corresponds to a different level of reachability, as defined below. Soft references are for implementing memory-sensitive caches, weak references are for implementing canonicalizing mappings that do not prevent their keys (or values) from being reclaimed, and phantom references are for scheduling post-mortem cleanup actions. Post-mortem cleanup actions can be registered and managed by a &lt;a href=&quot;cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">甲&lt;em&gt;参考对象&lt;/em&gt;封装到一些其他对象的引用，使得参考本身可被检查和操纵像任何其他对象。提供了三种类型的参考对象，每种类型的参考对象都比上一种&lt;em&gt;弱&lt;/em&gt;：&lt;em&gt;soft&lt;/em&gt;，&lt;em&gt;weak&lt;/em&gt;和&lt;em&gt;phantom&lt;/em&gt;。每种类型对应于不同级别的可达性，如下所述。软引用用于实现对内存敏感的缓存，弱引用用于实现规范化的映射，这些映射不会阻止其键（或值）被回收，幻像引用用于调度事后清理操作。验尸清除操作可以由&lt;a href=&quot;cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt;进行注册和管理。</target>
        </trans-unit>
        <trans-unit id="b091889df96c828d757f4c394d0df7407841cf1e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;relation type&lt;/em&gt; defines a relationship between MBeans. It contains &lt;em&gt;roles&lt;/em&gt; that the MBeans play in the relationship. Usually there are at least two roles in a relation type.</source>
          <target state="translated">甲&lt;em&gt;关系类型&lt;/em&gt;定义MBean之间的关系。它包含MBean在关系中&lt;em&gt;扮演的角色&lt;/em&gt;。通常，关系类型中至少有两个角色。</target>
        </trans-unit>
        <trans-unit id="3899aa8cc676171703dc878529f50a9965979186" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;relation&lt;/em&gt; is a named instance of a relation type, where specific MBeans appear in the roles, represented by their &lt;a href=&quot;../objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">一个&lt;em&gt;关系&lt;/em&gt;是关系类型，其中具体的MBean出现在角色，由他们所代表的命名实例&lt;a href=&quot;../objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;秒。</target>
        </trans-unit>
        <trans-unit id="1944d9900738e576ae4fce116ef62f21ef3a291b" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;run with respect to a set of attributes&lt;/em&gt; is a maximum text range for which this condition is met for each member attribute.</source>
          <target state="translated">甲&lt;em&gt;相对于一组属性的运行&lt;/em&gt;是指此条件被满足为每个成员属性的最大文本范围。</target>
        </trans-unit>
        <trans-unit id="0d67170b41f46f2a54ffcedc832e8521fdb9e0ee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;run with respect to an attribute&lt;/em&gt; is a maximum text range for which:</source>
          <target state="translated">甲&lt;em&gt;相对于一个属性运行&lt;/em&gt;是一个最大的文本范围，其中：</target>
        </trans-unit>
        <trans-unit id="60c63adbc71294c80ec9d80af6bef2584d4c4aee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;short version string&lt;/em&gt;, &lt;code&gt;$SVSTR&lt;/code&gt;, often useful in less formal contexts, is a version number optionally followed by a pre-release identifier:</source>
          <target state="translated">一个&lt;em&gt;短版本字符串&lt;/em&gt;， &lt;code&gt;$SVSTR&lt;/code&gt; ，在更短的正式场合往往是有用的，是后面可以跟一个预发行标识符的版本号：</target>
        </trans-unit>
        <trans-unit id="77a55bad18ac56a1c3d3d180c828c330f121c52a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;version number&lt;/em&gt;, &lt;code&gt;$VNUM&lt;/code&gt;, is a non-empty sequence of elements separated by period characters (U+002E). An element is either zero, or an unsigned integer numeral without leading zeros. The final element in a version number must not be zero. When an element is incremented, all subsequent elements are removed. The format is:</source>
          <target state="translated">甲&lt;em&gt;版本号&lt;/em&gt;， &lt;code&gt;$VNUM&lt;/code&gt; ，是元素的非空序列分离由周期字符（U + 002E）。元素可以是零，也可以是无符号整数，且不带前导零。版本号中的最后一个元素不能为零。当元素增加时，所有后续元素都将被删除。格式为：</target>
        </trans-unit>
        <trans-unit id="33101b84457f2cfa1c154a19b48a4dd0fa91e421" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;version string&lt;/em&gt;, &lt;code&gt;$VSTR&lt;/code&gt;, is a version number &lt;code&gt;
 $VNUM&lt;/code&gt;, as described above, optionally followed by pre-release and build information, in one of the following formats:</source>
          <target state="translated">甲&lt;em&gt;版本字符串&lt;/em&gt;， &lt;code&gt;$VSTR&lt;/code&gt; ，是版本号 &lt;code&gt; $VNUM&lt;/code&gt; ，如上所述，任选接着进行预发布和版本的信息，以下列格式中的一个：</target>
        </trans-unit>
        <trans-unit id="806b08b4e8ef62277d75b5f1cd9e89140a50a7ed" translate="yes" xml:space="preserve">
          <source>A Base64 decoder.</source>
          <target state="translated">一个Base64解码器。</target>
        </trans-unit>
        <trans-unit id="38879c33dc00c52c03ee4ebf16cfa8fb6c4bb7f9" translate="yes" xml:space="preserve">
          <source>A Base64 encoder.</source>
          <target state="translated">一个Base64编码器。</target>
        </trans-unit>
        <trans-unit id="b1d103ec388aee5968f3ecd9fbbf62a0676958f3" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of PopupMenuSeparatorUI.</source>
          <target state="translated">PopupMenuSeparatorUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="a86d915f23ab9abd7e1ab669cf1b1a5a6ff54905" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of PopupMenuSeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">PopupMenuSeparatorUI的基本L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="a28fd96240d773873fb27e46761d229709bb9c0a" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of ProgressBarUI.</source>
          <target state="translated">ProgressBarUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="ea44464426214cb4fc7af3ea4e86c9dc073e3a38" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of SeparatorUI.</source>
          <target state="translated">SeparatorUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="524103230d8f4ce04e4ffb7374e6367e6d39a507" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of SeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">SeparatorUI的基本L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="ffaab5953e723084e354c05d129bf2d7a5b06b11" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of SliderUI.</source>
          <target state="translated">SliderUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="fc182b2e3b749f812e894997134470a6c903fc0a" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of TabbedPaneUI.</source>
          <target state="translated">TabbedPaneUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="10e4474f1e0be2b51fad8c1cf90a852e079a90cb" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of ToolBarSeparatorUI.</source>
          <target state="translated">ToolBarSeparatorUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="56378e91409286f49e40a5d1367e7f777761bfb4" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of ToolBarSeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">ToolBarSeparatorUI的基本L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="0a99b8ac60388e481db78d72edd1c6637a14dca4" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of ToolBarUI.</source>
          <target state="translated">ToolBarUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="8ecd154b65ab21887639b06d195787366a5c5e48" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of ToolBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">ToolBarUI的基本L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="9cca53b343f4a7dc7eff79153a080da200c72690" translate="yes" xml:space="preserve">
          <source>A Basic L&amp;amp;F implementation of the SplitPaneUI.</source>
          <target state="translated">SplitPaneUI的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="7effbb868774fa7201da24bfa7e98891f4622fad" translate="yes" xml:space="preserve">
          <source>A BasicAttributes instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single BasicAttributes instance should lock the object.</source>
          <target state="translated">BasicAttributes实例不针对并发的多线程访问进行同步。试图访问和修改单个BasicAttributes实例的多个线程应该锁定该对象。</target>
        </trans-unit>
        <trans-unit id="d9247c27ac2f78a7a463f4f28a7e2b80d016da76" translate="yes" xml:space="preserve">
          <source>A BeanContextServiceProvider implementor who wishes to provide explicit information about the services their bean may provide shall implement a BeanInfo class that implements this BeanInfo subinterface and provides explicit information about the methods, properties, events, etc, of their services.</source>
          <target state="translated">一个BeanContextServiceProvider实现者如果希望提供他们的Bean可能提供的服务的显式信息,则应实现一个BeanInfo类,该类实现这个BeanInfo子接口,并提供其服务的方法、属性、事件等显式信息。</target>
        </trans-unit>
        <trans-unit id="e8f23324906add1f310a590417b0abed83b70cce" translate="yes" xml:space="preserve">
          <source>A BeanDescriptor provides global information about a &quot;bean&quot;, including its Java class, its displayName, etc.</source>
          <target state="translated">BeanDescriptor提供了一个 &quot;bean &quot;的全局信息,包括它的Java类,它的displayName等。</target>
        </trans-unit>
        <trans-unit id="21e115ffee0fc95123c0feadd52121e72a12c44f" translate="yes" xml:space="preserve">
          <source>A BeanInfo object describing the target bean.</source>
          <target state="translated">一个描述目标Bean的BeanInfo对象。</target>
        </trans-unit>
        <trans-unit id="6c41a3a1a268cf77e426b305da1dbb801de9ddc8" translate="yes" xml:space="preserve">
          <source>A Bidi object provides information on the bidirectional reordering of the text used to create it. This is required, for example, to properly display Arabic or Hebrew text. These languages are inherently mixed directional, as they order numbers from left-to-right while ordering most other text from right-to-left.</source>
          <target state="translated">Bidi 对象提供了用于创建文本的双向重新排序的信息。例如,正确显示阿拉伯语或希伯来语文本就需要这样的信息。这些语言本质上是混合方向性的,因为它们从左到右排列数字,而大多数其他文本则从右到左排列。</target>
        </trans-unit>
        <trans-unit id="29e791cb5cdd134f853346aba38560632c6426be" translate="yes" xml:space="preserve">
          <source>A BinaryRefAddr consists of a type that describes the communication mechanism and an opaque buffer containing the address description specific to that communication mechanism. The format and interpretation of the address type and the contents of the opaque buffer are based on the agreement of three parties: the client that uses the address, the object/server that can be reached using the address, and the administrator or program that creates the address.</source>
          <target state="translated">BinaryRefAddr由一个描述通信机制的类型和一个不透明的缓冲区组成,缓冲区中包含该通信机制特有的地址描述。地址类型的格式和解释以及不透明缓冲区的内容是基于三方的协议:使用该地址的客户端、使用该地址可以到达的对象/服务器以及创建该地址的管理员或程序。</target>
        </trans-unit>
        <trans-unit id="39a6848d4b9b5cac97a7e4fd4b3cf19f03c74e59" translate="yes" xml:space="preserve">
          <source>A Binding instance is not synchronized against concurrent access by multiple threads. Threads that need to access a Binding concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">Binding实例不会针对多个线程的并发访问进行同步。需要并发访问Binding的线程应该在它们之间同步,并提供必要的锁定。</target>
        </trans-unit>
        <trans-unit id="359b87dbe2ac0cf833cd33e678422c1583e37741" translate="yes" xml:space="preserve">
          <source>A Border wrapper class which implements UIResource.</source>
          <target state="translated">一个实现UIResource.Border的包装器类。</target>
        </trans-unit>
        <trans-unit id="d344d077cbfcb8283cabcc4f56252e81a35f735d" translate="yes" xml:space="preserve">
          <source>A Border wrapper class which implements UIResource. UI classes which set border properties should use this class to wrap any borders specified as defaults. This class delegates all method invocations to the Border &quot;delegate&quot; object specified at construction.</source>
          <target state="translated">一个实现UIResource的Border封装类。设置边框属性的UI类应该使用这个类来包装任何指定为默认的边框。该类将所有方法的调用委托给在构造时指定的Border &quot;delegate &quot;对象。</target>
        </trans-unit>
        <trans-unit id="5fcf840c5e0ee43714bd210d1b1ab35679b18b25" translate="yes" xml:space="preserve">
          <source>A CannotProceedException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify CannotProceedException should lock the object.</source>
          <target state="translated">CannotProceedException 实例对并发多线程访问不同步。试图访问和修改CannotProceedException的多个线程应该锁定对象。</target>
        </trans-unit>
        <trans-unit id="3711f46200eab78ac34b47a9e818cad8ef3b5be1" translate="yes" xml:space="preserve">
          <source>A CardPermission with a name of &lt;code&gt;*&lt;/code&gt; applies to all card terminals. The actions string is a comma separated list of the actions listed below, or &lt;code&gt;*&lt;/code&gt; to signify &quot;all actions.&quot;</source>
          <target state="translated">名称为 &lt;code&gt;*&lt;/code&gt; 的CardPermission适用于所有卡终端。操作字符串是下面列出的操作的逗号分隔列表，或 &lt;code&gt;*&lt;/code&gt; 表示&amp;ldquo;所有操作&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a5d12e1e7f853f5acc75fbcaef13869cdd98ca0d" translate="yes" xml:space="preserve">
          <source>A Catalog Resolver that implements SAX &lt;a href=&quot;../../../org/xml/sax/entityresolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt;, StAX &lt;a href=&quot;../stream/xmlresolver&quot;&gt;&lt;code&gt;XMLResolver&lt;/code&gt;&lt;/a&gt;, DOM LS &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; used by Schema Validation, and Transform &lt;a href=&quot;../transform/uriresolver&quot;&gt;&lt;code&gt;URIResolver&lt;/code&gt;&lt;/a&gt;, and resolves external references using catalogs.</source>
          <target state="translated">一个实现了SAX &lt;a href=&quot;../../../org/xml/sax/entityresolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; &lt;/a&gt;，StAX &lt;a href=&quot;../stream/xmlresolver&quot;&gt; &lt;code&gt;XMLResolver&lt;/code&gt; &lt;/a&gt;，Schema Validation使用的DOM LS &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt;和Transform &lt;a href=&quot;../transform/uriresolver&quot;&gt; &lt;code&gt;URIResolver&lt;/code&gt; &lt;/a&gt;的目录解析器，并使用目录解析外部引用。</target>
        </trans-unit>
        <trans-unit id="a13b428d65b18d206b5c9f6274e74e38bb8c6763" translate="yes" xml:space="preserve">
          <source>A CatalogFeatures instance can be created through its builder as illustrated in the following sample code:</source>
          <target state="translated">如以下示例代码所示,可以通过其构建器创建一个CatalogFeatures实例。</target>
        </trans-unit>
        <trans-unit id="bb4e740e5333b7ab4af49fd927ba5c0f79ed5bfd" translate="yes" xml:space="preserve">
          <source>A CipherInputStream is composed of an InputStream and a Cipher so that read() methods return data that are read in from the underlying InputStream but have been additionally processed by the Cipher.</source>
          <target state="translated">CipherInputStream由InputStream和Cipher组成,因此read()方法返回的数据是从底层InputStream读进来的,但已经被Cipher额外处理过。</target>
        </trans-unit>
        <trans-unit id="605214ba078d3fc48b5059183bf76aec5c86bd39" translate="yes" xml:space="preserve">
          <source>A CipherInputStream is composed of an InputStream and a Cipher so that read() methods return data that are read in from the underlying InputStream but have been additionally processed by the Cipher. The Cipher must be fully initialized before being used by a CipherInputStream.</source>
          <target state="translated">一个CipherInputStream是由一个InputStream和一个Cipher组成的,所以read()方法返回的数据是从底层InputStream读进来的,但已经被Cipher额外处理过。在被CipherInputStream使用之前,Cipher必须被完全初始化。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
