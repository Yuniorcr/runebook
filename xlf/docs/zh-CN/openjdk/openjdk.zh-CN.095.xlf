<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="08635b4d2c31b178cab0dff6331454a2ce0e3829" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category is class JobSheets itself.</source>
          <target state="translated">对于类JobSheets和任何厂商定义的子类,类别是类JobSheets本身。</target>
        </trans-unit>
        <trans-unit id="71446d47b48784e7ff553bd8da1658389b5d2f23" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobSheets类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8170f7f0ffca7b963fce46f1c79886b100ded91" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category is class JobState itself.</source>
          <target state="translated">对于类JobState和任何厂商定义的子类,类别就是类JobState本身。</target>
        </trans-unit>
        <trans-unit id="de1cfc9b5e2eca0387a6cbf6b9671b5e0909f312" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobState类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="653376caf1a3418e9063f33ff2fe20a57da04c8f" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category is class JobStateReason itself.</source>
          <target state="translated">对于类JobStateReason和任何厂商定义的子类,类别是类JobStateReason本身。</target>
        </trans-unit>
        <trans-unit id="b3ddae2ef6f7432cf73b5be9105ad4ecf53afcd2" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobStateReason类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfbdbe2790acae32d23312b21eddd8d7e025518d" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category is class JobStateReasons itself.</source>
          <target state="translated">对于类JobStateReasons,类别就是类JobStateReasons本身。</target>
        </trans-unit>
        <trans-unit id="23baf7c64ea9b95a67a83036824005151d4ee4ad" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category name is &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobStateReasons，类别名称为 &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76e305ec9df07083f4a03bce58c310f04a069567" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category is class Media itself.</source>
          <target state="translated">对于类Media和任何厂商定义的子类,类别就是类Media本身。</target>
        </trans-unit>
        <trans-unit id="63aac2809d48a40719da92a486aca03ea048211a" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">对于Media类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;media&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eebe8d13bec04bb83fd3cdedb183d88549f7716" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category is class MediaPrintableArea itself.</source>
          <target state="translated">对于类MediaPrintableArea来说,类别就是类MediaPrintableArea本身。</target>
        </trans-unit>
        <trans-unit id="6f3383a496f3ced46a73b82b0d97aa06701b296e" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类MediaPrintableArea，类别名称为 &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b16bb9bb31c348614af9361198929e0e4c9e3d75" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category is class MediaSize itself.</source>
          <target state="translated">对于类 MediaSize 和任何供应商定义的子类,类别是类 MediaSize 本身。</target>
        </trans-unit>
        <trans-unit id="dcaa0b98dfb736343dba9f90ceee28a35402fb0b" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类MediaSize和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c94b84051032fff8f407be040afd8b908718b0e5" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category is class MultipleDocumentHandling itself.</source>
          <target state="translated">对于类MultipleDocumentHandling和任何厂商定义的子类,类别是类MultipleDocumentHandling本身。</target>
        </trans-unit>
        <trans-unit id="5a15c896684c3bdae21a952fc314bc83e432b65a" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类MultipleDocumentHandling和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d80aca402535b79315974f7262cb5caf36ece03" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category is class NumberOfDocuments itself.</source>
          <target state="translated">对于类NumberOfDocuments来说,类别就是类NumberOfDocuments本身。</target>
        </trans-unit>
        <trans-unit id="7a4f4357a00f01b7773082cf51d10e445b0c684e" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">对于NumberOfDocuments类，类别名称为 &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a15143dc5c9eaa5cfb57170f82d6c2c78842dc82" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category is class NumberOfInterveningJobs itself.</source>
          <target state="translated">对于类NumberOfInterveningJobs来说,类别就是类NumberOfInterveningJobs本身。</target>
        </trans-unit>
        <trans-unit id="4f64d68c238a1069789d44fdc2461b1b3abfd3f3" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类NumberOfInterveningJobs，类别名称为 &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbebe8d07517db48f6ceb60ef3eda69a123a4ca6" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category is class NumberUp itself.</source>
          <target state="translated">对于类NumberUp来说,类别就是类NumberUp本身。</target>
        </trans-unit>
        <trans-unit id="679d46d1327714f3b8a4ffe2ac56338f3140bd2d" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">对于NumberUp类，类别名称为 &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43898aa6f875f8e6510fb0adc64cbe5396f5d910" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category is class NumberUpSupported itself.</source>
          <target state="translated">对于类NumberUpSupported,类别就是类NumberUpSupported本身。</target>
        </trans-unit>
        <trans-unit id="84efd2894a327c192bb5f0bdcaa0b6f9b76bb8f9" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类NumberUpSupported，类别名称为 &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="565e4c6e7614396692edb4af2f709c35214286d4" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category is class OrientationRequested itself.</source>
          <target state="translated">对于类OrientationRequested来说,类别就是类OrientationRequested本身。</target>
        </trans-unit>
        <trans-unit id="52fcaeb0ba5aa93429c5861479086b2d3a01eafd" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类OrientationRequested，类别名称为 &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abde76b383658ea382bc59eff2fb0367dfc991de" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category is class OutputDeviceAssigned itself.</source>
          <target state="translated">对于类OutputDeviceAssigned来说,类别就是类OutputDeviceAssigned本身。</target>
        </trans-unit>
        <trans-unit id="8c848d24bcfaa87be7b3eaaafab61333297d4de5" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类OutputDeviceAssigned，类别名称为 &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b50e8daad8ee24c6bb2f8f8f02fb8d2ae166cd84" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category is class PDLOverrideSupported itself.</source>
          <target state="translated">对于类PDLOverrideSupported和任何厂商定义的子类,类别是类PDLOverrideSupported本身。</target>
        </trans-unit>
        <trans-unit id="1862855f9347a76978b17a738e7c5bbb33f59cc0" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PDLOverrideSupported和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce220ceb7741aa95d88a2fe3bc6c7db7d98e7d95" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category is class PageRanges itself.</source>
          <target state="translated">对于类PageRanges来说,类别就是类PageRanges本身。</target>
        </trans-unit>
        <trans-unit id="36e6d05319c67769fc3db5bb0ecdbb4b60392f46" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PageRanges，类别名称为 &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7f01eada40934f6714620dd2a2b554f377c9308" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category is class PagesPerMinute itself.</source>
          <target state="translated">对于类PagesPerMinute来说,类别就是类PagesPerMinute本身。</target>
        </trans-unit>
        <trans-unit id="e14ff0028ffef5fede72d51eb82a6235e41c4323" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PagesPerMinute，类别名称是 &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d522346d833c539376b5f07c17f5f72b79dd7f0f" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category is class PagesPerMinuteColor itself.</source>
          <target state="translated">对于类PagesPerMinuteColor来说,类别就是类PagesPerMinuteColor本身。</target>
        </trans-unit>
        <trans-unit id="7c660c99e02d7c212af35cc7873730d7af2cf120" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PagesPerMinuteColor，类别名称是 &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8aaee8c396105cb02829f6cbc1aea2b4ca171041" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category is class PresentationDirection itself.</source>
          <target state="translated">对于类PresentationDirection的类别是类PresentationDirection本身。</target>
        </trans-unit>
        <trans-unit id="09e0c06b664549dedff4cfd3e2b0109f7061132a" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PresentationDirection，类别名称为 &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73ab431070b7902f07a4e2eb111942a3d3c89260" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category is class PrintQuality itself.</source>
          <target state="translated">对于类PrintQuality和任何厂商定义的子类,类别是类PrintQuality本身。</target>
        </trans-unit>
        <trans-unit id="ad6627e73fffda4d8a63d01e1314eb76d67d38ee" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrintQuality和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb6f0cc027e88992fdedf39e07582b1430266e3c" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category is class PrinterInfo itself.</source>
          <target state="translated">对于类PrinterInfo来说,类别就是类PrinterInfo本身。</target>
        </trans-unit>
        <trans-unit id="25b6527a1b2b670e8d591c05cce9bc5e9d9447a2" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterInfo，类别名称为 &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06c9256086f531efae796e8d8690666052354d1b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category is class PrinterIsAcceptingJobs itself.</source>
          <target state="translated">对于类PrinterIsAcceptingJobs来说,类别是类PrinterIsAcceptingJobs本身。</target>
        </trans-unit>
        <trans-unit id="3b444196d4a92442d1815635095756fb443b3c8b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterIsAcceptingJobs，类别名称为 &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f689abe18da853c0516008897c2e59452d205a11" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category is class PrinterLocation itself.</source>
          <target state="translated">对于类PrinterLocation来说,类别就是类PrinterLocation本身。</target>
        </trans-unit>
        <trans-unit id="cd2fea8becd5eb8189e9b5472dff8986755fda80" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterLocation，类别名称为 &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c1dd9a747520f8dbedcf4f13a83a0e4af94e2ba" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category is class PrinterMakeAndModel itself.</source>
          <target state="translated">对于类PrinterMakeAndModel来说,类别是类PrinterMakeAndModel本身。</target>
        </trans-unit>
        <trans-unit id="ba4fae7b3cb6c2828fcdbaf1716fd8c108dc1d52" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterMakeAndModel，类别名称为 &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25e865fa5a526858929f1ec74db4ddabb2559cfd" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category is class PrinterMessageFromOperator itself.</source>
          <target state="translated">对于类PrinterMessageFromOperator来说,类别是类PrinterMessageFromOperator本身。</target>
        </trans-unit>
        <trans-unit id="63bdaad11dc64623e0b9ad73640ced1a04cd8190" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterMessageFromOperator，类别名称为 &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc38988d14d54c070df510381432956fb04be2b5" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category is class PrinterMoreInfo itself.</source>
          <target state="translated">对于类PrinterMoreInfo来说,类别就是类PrinterMoreInfo本身。</target>
        </trans-unit>
        <trans-unit id="07993e08f2f2ff8aca46598c2c607bf8b4f7551b" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterMoreInfo，类别名称为 &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="241cfde9db629abbf16d37ecf1ba0b5701fa39bb" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category is class PrinterMoreInfoManufacturer itself.</source>
          <target state="translated">对于类PrinterMoreInfoManufacturer来说,类别就是类PrinterMoreInfoManufacturer本身。</target>
        </trans-unit>
        <trans-unit id="48561e0264312aaad1e530ded45d0c142643d71d" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterMoreInfoManufacturer，类别名称为 &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d09189884a718425f1dd44675f4544e703b2dc4" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category is class PrinterName itself.</source>
          <target state="translated">对于类PrinterName来说,类别就是类PrinterName本身。</target>
        </trans-unit>
        <trans-unit id="f981b8db2489e51ff8a0c52f0213cad136f70214" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterName，类别名称为 &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b653a81213f2676d2a468fbe40f45aeb6bb23eb0" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category is class PrinterResolution itself.</source>
          <target state="translated">对于类PrinterResolution来说,类别就是类PrinterResolution本身。</target>
        </trans-unit>
        <trans-unit id="089c03e6282acc3da250b5bbf8c9b3c0723bc5de" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterResolution，类别名称为 &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ddf3275c606f2df378612cccd2405b28e94d547" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category is class PrinterState itself.</source>
          <target state="translated">对于类PrinterState来说,类别就是类PrinterState本身。</target>
        </trans-unit>
        <trans-unit id="cbc846db841ae5c9762311f9887a7ed626d21ac2" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterState，类别名称为 &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8e4577f59fa87e6b5beb516c568387c170e4b8c" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category is class PrinterStateReason itself.</source>
          <target state="translated">对于类PrinterStateReason和任何厂商定义的子类,类别是类PrinterStateReason本身。</target>
        </trans-unit>
        <trans-unit id="faeb3e536e0a737a954b661a24e00e48ef3bcef4" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterStateReason和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e808c039b758b2f59db1f7d952b1bf58c1aa4a7" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category is class PrinterStateReasons itself.</source>
          <target state="translated">对于类PrinterStateReasons来说,类别就是类PrinterStateReasons本身。</target>
        </trans-unit>
        <trans-unit id="e14e080c82b2595f0ad5da46fffd3e824d0f9490" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterStateReasons，类别名称为 &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a33b14dd071582edba93515dae6937007a50673" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category is class PrinterURI itself.</source>
          <target state="translated">对于类PrinterURI和任何厂商定义的子类,类别是类PrinterURI本身。</target>
        </trans-unit>
        <trans-unit id="b5c54c79aa3a2ed3bc26221d866d3bf0414ab4d0" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类PrinterURI和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="427bb8ae79ce5ce6305815064eb955898deba35e" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category is class QueuedJobCount itself.</source>
          <target state="translated">对于类QueuedJobCount来说,类别就是类QueuedJobCount本身。</target>
        </trans-unit>
        <trans-unit id="8c2032679b33ee7eeab7ea70028fe4a54b11a34b" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类QueuedJobCount，类别名称为 &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed9b64b1898dc19b34e09680ab59f290a11180b1" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category is class ReferenceUriSchemesSupported itself.</source>
          <target state="translated">对于类ReferenceUriSchemesSupported和任何厂商定义的子类,类别是类ReferenceUriSchemesSupported本身。</target>
        </trans-unit>
        <trans-unit id="936b31b70be0215f64773fb73ec5e86c0ca36d06" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类ReferenceUriSchemesSupported和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5468094b261f63f7a851ffdea2ab7b4ba7224051" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category is class RequestingUserName itself.</source>
          <target state="translated">对于类RequestingUserName来说,类别就是类RequestingUserName本身。</target>
        </trans-unit>
        <trans-unit id="794b8d2f9a18f1de951bd2a77cf8d9823f430c19" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类RequestingUserName，类别名称为 &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b817b624e8fc642c4c82793be6aece9829795dc5" translate="yes" xml:space="preserve">
          <source>For class Severit, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">对于Severit类，类别名称是 &lt;code&gt;&quot;severity&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95cf92446e07a3726f7d683aed39c191dd9dd0f7" translate="yes" xml:space="preserve">
          <source>For class Severity, the category is class Severity itself.</source>
          <target state="translated">对于类严重性,类别就是类严重性本身。</target>
        </trans-unit>
        <trans-unit id="1df6ec0b95bed137549c213c42c887235000d710" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category is class SheetCollate itself.</source>
          <target state="translated">对于类SheetCollate来说,类别就是类SheetCollate本身。</target>
        </trans-unit>
        <trans-unit id="eec42e414ddbb008a0160e654bcfebb31c674017" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类SheetCollat​​e，类别名称为 &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a54a6c66b3185766ef8980b2b771f7a5145737b9" translate="yes" xml:space="preserve">
          <source>For class Sides, the category is class Sides itself.</source>
          <target state="translated">对于类侧,类别就是类侧本身。</target>
        </trans-unit>
        <trans-unit id="00e176bee23fa052a123452f97bdfd610c3f76aa" translate="yes" xml:space="preserve">
          <source>For class Sides, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类Sides，类别名称为 &lt;code&gt;&quot;sides&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e291d7686d6bf5a610fa7b42648acca9aac4fbe1" translate="yes" xml:space="preserve">
          <source>For client formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted):</source>
          <target state="translated">对于客户机格式化的打印数据,打印数据表示类通常为下列之一(但允许使用其他表示类)。</target>
        </trans-unit>
        <trans-unit id="e6d74a7546298ead87242134049dd273d250b2d3" translate="yes" xml:space="preserve">
          <source>For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.</source>
          <target state="translated">对于客户端套接字,在将套接字连接到其远程对等体之前,必须调用setReceiveBufferSize()。</target>
        </trans-unit>
        <trans-unit id="b4d07d8b04ebb5bf8cd0d980eb8abf2e92d0b689" translate="yes" xml:space="preserve">
          <source>For collectors that do not have the &lt;code&gt;UNORDERED&lt;/code&gt; characteristic, two accumulated results &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; are equivalent if &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt;. For unordered collectors, equivalence is relaxed to allow for non-equality related to differences in order. (For example, an unordered collector that accumulated elements to a &lt;code&gt;List&lt;/code&gt; would consider two lists equivalent if they contained the same elements, ignoring order.)</source>
          <target state="translated">对于不具有 &lt;code&gt;UNORDERED&lt;/code&gt; 特性的收集器，如果 &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt; ，则两个累加结果 &lt;code&gt;a1&lt;/code&gt; 和 &lt;code&gt;a2&lt;/code&gt; 是等效的。对于无序收集器，放宽了等效性以允许与顺序差异相关的不平等。 （例如，将元素累积到一个 &lt;code&gt;List&lt;/code&gt; 的无序收集器将认为两个包含相同元素的列表是等效的，而忽略了顺序。）</target>
        </trans-unit>
        <trans-unit id="5daebfee18e6210b1df3959fb579eb8ef2b007d1" translate="yes" xml:space="preserve">
          <source>For combo boxes with a non trivial number of items, it is recommended to use a prototype display value to significantly speed up the display size calculation.</source>
          <target state="translated">对于项目数量不多的组合框,建议使用原型显示值,以显著加快显示大小计算。</target>
        </trans-unit>
        <trans-unit id="e2c5f24899985c8ea850d045b39ba018e910066b" translate="yes" xml:space="preserve">
          <source>For common system types, including all the primitive types, there are predefined &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; constants in &lt;a href=&quot;constantdescs&quot;&gt;&lt;code&gt;ConstantDescs&lt;/code&gt;&lt;/a&gt;. (The &lt;code&gt;java.lang.constant&lt;/code&gt; APIs consider &lt;code&gt;void&lt;/code&gt; to be a primitive type.) To create a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for a class or interface type, use &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(java.lang.String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ofDescriptor(String)&lt;/code&gt;&lt;/a&gt;; to create a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for an array type, use &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ofDescriptor(String)&lt;/code&gt;&lt;/a&gt;, or first obtain a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for the component type and then call the &lt;a href=&quot;#arrayType()&quot;&gt;&lt;code&gt;arrayType()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#arrayType(int)&quot;&gt;&lt;code&gt;arrayType(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">对于常见的系统类型（包括所有基本类型），在&lt;a href=&quot;constantdescs&quot;&gt; &lt;code&gt;ConstantDescs&lt;/code&gt; 中&lt;/a&gt;有预定义的&lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt;常量。 （ &lt;code&gt;java.lang.constant&lt;/code&gt; API将 &lt;code&gt;void&lt;/code&gt; 视为原始类型。）要为类或接口类型创建&lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt;，请使用&lt;a href=&quot;#of(java.lang.String)&quot;&gt; &lt;code&gt;of(java.lang.String)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;ofDescriptor(String)&lt;/code&gt; &lt;/a&gt;；若要使用数组类型创建&lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt;，请使用&lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;ofDescriptor(String)&lt;/code&gt; &lt;/a&gt;，或首先获取组件类型的&lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt;，然后调用&lt;a href=&quot;#arrayType()&quot;&gt; &lt;code&gt;arrayType()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#arrayType(int)&quot;&gt; &lt;code&gt;arrayType(int)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3a2967995857133da00d1565c63fb3be5ba528a4" translate="yes" xml:space="preserve">
          <source>For comparing &lt;code&gt;String&lt;/code&gt;s exactly once, the &lt;code&gt;compare&lt;/code&gt; method provides the best performance. When sorting a list of &lt;code&gt;String&lt;/code&gt;s however, it is generally necessary to compare each &lt;code&gt;String&lt;/code&gt; multiple times. In this case, &lt;code&gt;CollationKey&lt;/code&gt;s provide better performance. The &lt;code&gt;CollationKey&lt;/code&gt; class converts a &lt;code&gt;String&lt;/code&gt; to a series of bits that can be compared bitwise against other &lt;code&gt;CollationKey&lt;/code&gt;s. A &lt;code&gt;CollationKey&lt;/code&gt; is created by a &lt;code&gt;Collator&lt;/code&gt; object for a given &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">为了只比较 &lt;code&gt;String&lt;/code&gt; 一次， &lt;code&gt;compare&lt;/code&gt; 方法可提供最佳性能。但是，在对 &lt;code&gt;String&lt;/code&gt; 的列表进行排序时，通常需要多次比较每个 &lt;code&gt;String&lt;/code&gt; 。在这种情况下， &lt;code&gt;CollationKey&lt;/code&gt; 可以提供更好的性能。所述 &lt;code&gt;CollationKey&lt;/code&gt; 类转换 &lt;code&gt;String&lt;/code&gt; 为一系列可以比较与其他按位比特 &lt;code&gt;CollationKey&lt;/code&gt; 第甲 &lt;code&gt;CollationKey&lt;/code&gt; 由创建 &lt;code&gt;Collator&lt;/code&gt; 对象对于给定的 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af7d1003679e326a588379c3ddd16e561bb257a9" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;
 IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;#asList()&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">出于兼容性考虑，这是可能的，虽然非常气馁，将对象添加到一个 &lt;code&gt;AttributeList&lt;/code&gt; 的不在的实例 &lt;code&gt;Attribute&lt;/code&gt; 。但是，可以将 &lt;code&gt;AttributeList&lt;/code&gt; 设置为&lt;em&gt;类型安全的&lt;/em&gt;，这意味着添加非 &lt;code&gt;Attribute&lt;/code&gt; 对象的尝试将产生 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 。一个 &lt;code&gt;AttributeList&lt;/code&gt; 中当该方法变得类型安全&lt;a href=&quot;#asList()&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt;被调用就可以了。</target>
        </trans-unit>
        <trans-unit id="3bda8af9f3ea2c182bc4edb9c9e7d569970e2c7c" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;attributelist#asList--&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">出于兼容性考虑，这是可能的，虽然非常气馁，将对象添加到一个 &lt;code&gt;AttributeList&lt;/code&gt; 的不在的实例 &lt;code&gt;Attribute&lt;/code&gt; 。但是，可以将 &lt;code&gt;AttributeList&lt;/code&gt; 设置为&lt;em&gt;类型安全的&lt;/em&gt;，这意味着尝试添加非 &lt;code&gt;Attribute&lt;/code&gt; 的对象将产生 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。一个 &lt;code&gt;AttributeList&lt;/code&gt; 中当该方法变得类型安全&lt;a href=&quot;attributelist#asList--&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt;被调用就可以了。</target>
        </trans-unit>
        <trans-unit id="fa3fadeadc9c59b0bb290751e24959992cae4d8a" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, two non-conforming locales are treated as special cases. These are &lt;b&gt;&lt;code&gt;ja_JP_JP&lt;/code&gt;&lt;/b&gt; and &lt;b&gt;&lt;code&gt;th_TH_TH&lt;/code&gt;&lt;/b&gt;. These are ill-formed in BCP 47 since the variants are too short. To ease migration to BCP 47, these are treated specially during construction. These two cases (and only these) cause a constructor to generate an extension, all other values behave exactly as they did prior to Java 7.</source>
          <target state="translated">出于兼容性原因，将两个不一致的语言环境视为特殊情况。这些是&lt;b&gt; &lt;code&gt;ja_JP_JP&lt;/code&gt; &lt;/b&gt;和&lt;b&gt; &lt;code&gt;th_TH_TH&lt;/code&gt; &lt;/b&gt;。由于变体太短，它们在BCP 47中格式错误。为了简化向BCP 47的迁移，在施工过程中会对其进行特殊处理。这两种情况（并且只有这两种情况）会导致构造函数生成扩展，所有其他值的行为与Java 7之前的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="88ffec9f8f3ececb82205df4b4f1f28ffab318bb" translate="yes" xml:space="preserve">
          <source>For compatibility with JDK 1.1.x, some other three-letter time zone IDs (such as &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;) are also supported. However, &lt;strong&gt;their use is deprecated&lt;/strong&gt; because the same abbreviation is often used for multiple time zones (for example, &quot;CST&quot; could be U.S. &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;), and the Java platform can then only recognize one of them.</source>
          <target state="translated">为了与JDK 1.1.x兼容，还支持其他三个字母的时区ID（例如&amp;ldquo; PST&amp;rdquo;，&amp;ldquo; CTT&amp;rdquo;，&amp;ldquo; AST&amp;rdquo;）。但是，&lt;strong&gt;不赞成使用它们，&lt;/strong&gt;因为同一缩写通常用于多个时区（例如，&amp;ldquo; CST&amp;rdquo;可以是美国的&amp;ldquo; Central Standard Time&amp;rdquo;和&amp;ldquo; China Standard Time&amp;rdquo;），并且Java平台只能识别以下一种他们。</target>
        </trans-unit>
        <trans-unit id="fd60c878e75d2f5708d5f3e6789fa9e2306f96c1" translate="yes" xml:space="preserve">
          <source>For compatibility with applications developed earlier this method still accepts &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; only. The iconic state of the frame is only changed, other aspects of frame state are not affected by this method. If the state passed to this method is neither &lt;code&gt;
 Frame.NORMAL&lt;/code&gt; nor &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; the method performs no actions at all.</source>
          <target state="translated">为了与早期开发的应用程序兼容，该方法仍仅接受 &lt;code&gt;Frame.NORMAL&lt;/code&gt; 和 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 。框架的图标状态仅被更改，框架状态的其他方面不受此方法的影响。如果传递给此方法的状态既不是 &lt;code&gt; Frame.NORMAL&lt;/code&gt; 也不是Frame.ICONIFIED， &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 该方法完全不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="c9eb361e769ed726818ef4786ab9e82032615e2e" translate="yes" xml:space="preserve">
          <source>For compatibility with old parsers, XMLFormatters can be configured to revert to the old format by specifying a &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt;&lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;property&lt;/a&gt; in the logging configuration. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the old formatting will be preserved. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default), the &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; element will be printed and the &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will contain the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;formatted&lt;/a&gt; instant.</source>
          <target state="translated">为了与旧解析器兼容，可以通过在日志记录配置中指定 &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt; &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;属性&lt;/a&gt;，将XMLFormatters配置为还原为旧格式。当 &lt;code&gt;useInstant&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时，将保留旧格式。当 &lt;code&gt;useInstant&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; （默认设置）时，将打印 &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; 元素，而 &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; 元素将包含&lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;格式化的&lt;/a&gt;即时信息。</target>
        </trans-unit>
        <trans-unit id="4ae98774e76aff887be754e2a71ca1589d7931b3" translate="yes" xml:space="preserve">
          <source>For compatibility with old programs this method still returns &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; but it only reports the iconic state of the frame, other aspects of frame state are not reported by this method.</source>
          <target state="translated">为了与旧程序兼容，此方法仍返回 &lt;code&gt;Frame.NORMAL&lt;/code&gt; 和 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; ,但它仅报告框架的图标状态，此方法未报告框架状态的其他方面。</target>
        </trans-unit>
        <trans-unit id="fdb12ba84178516e070cb7e3438381124465f720" translate="yes" xml:space="preserve">
          <source>For compatibility with previous releases, &lt;code&gt;BorderLayout&lt;/code&gt; also includes the relative positioning constants &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt;, &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt;, &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; and &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt;. These are equivalent to &lt;code&gt;PAGE_START&lt;/code&gt;, &lt;code&gt;PAGE_END&lt;/code&gt;, &lt;code&gt;LINE_START&lt;/code&gt; and &lt;code&gt;LINE_END&lt;/code&gt; respectively. For consistency with the relative positioning constants used by other components, the latter constants are preferred.</source>
          <target state="translated">为了与以前的版本兼容， &lt;code&gt;BorderLayout&lt;/code&gt; 还包括相对定位常数 &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt; ， &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt; ， &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; 和 &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt; 。它们分别等效于 &lt;code&gt;PAGE_START&lt;/code&gt; ， &lt;code&gt;PAGE_END&lt;/code&gt; ， &lt;code&gt;LINE_START&lt;/code&gt; 和 &lt;code&gt;LINE_END&lt;/code&gt; 。为了与其他组件使用的相对定位常数保持一致，最好使用后者。</target>
        </trans-unit>
        <trans-unit id="780dc5f76884169760a87fecc1ed665350c52d37" translate="yes" xml:space="preserve">
          <source>For compatibility, the default implementation of this method returns an empty &lt;code&gt;Optional&lt;/code&gt;. Subclasses should override this method with an appropriate implementation since an application may need to access additional parameters associated with the SSL session.</source>
          <target state="translated">为了兼容性，此方法的默认实现返回一个空的 &lt;code&gt;Optional&lt;/code&gt; 。子类应使用适当的实现重写此方法，因为应用程序可能需要访问与SSL会话关联的其他参数。</target>
        </trans-unit>
        <trans-unit id="0b68d1775fb9f96001888959c6d32bec9d0ab9b8" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">有关RMI的完整详细信息，请参阅描述RMI API和系统的&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="108b8b0eaa56c557c0ce561d43ddd6032ceaaa24" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">有关RMI的完整详细信息，请参阅描述RMI API和系统的&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/rmi/index.html&quot;&gt;RMI规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9423ca6a745439d228e81775dfe1289ff98c768" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关完整的示例和更多文档，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;如何监视进度&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd9b622a83fcede5c32b8b6dd8e0ecaa49e64f16" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关完整的示例和更多文档，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;如何监视进度&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="426d2bc87f59f5f0cb4ba388ec2d7d4edcc97713" translate="yes" xml:space="preserve">
          <source>For concurrent collectors, an implementation is free to (but not required to) implement reduction concurrently. A concurrent reduction is one where the accumulator function is called concurrently from multiple threads, using the same concurrently-modifiable result container, rather than keeping the result isolated during accumulation. A concurrent reduction should only be applied if the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristics or if the originating data is unordered.</source>
          <target state="translated">对于并发收集器，实现可以自由（但不是必须）并发实现缩减。并发归约是使用相同的可同时修改的结果容器从多个线程并发调用累加器函数的一种方法，而不是在累加过程中保持隔离的结果。仅当收集器具有&lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt;特征或原始数据无序时，才应应用并发缩减。</target>
        </trans-unit>
        <trans-unit id="5b77db919dc549d42aa7190b43a492b8ea4ee578" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;JLayeredPane&lt;/code&gt; divides the depth-range into several different layers. Putting a component into one of those layers makes it easy to ensure that components overlap properly, without having to worry about specifying numbers for specific depths:</source>
          <target state="translated">为了方便起见， &lt;code&gt;JLayeredPane&lt;/code&gt; 将深度范围划分为几个不同的层。将组件放入这些层之一可以轻松确保组件正确重叠，而不必担心为特定深度指定数字：</target>
        </trans-unit>
        <trans-unit id="c27fac6ea267b3ee9bd3b0f98727a50d9691f093" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;#isError()&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">为方便起见，&lt;a href=&quot;#isError()&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt;方法对于描述格式错误的输入和不可映射的字符错误的结果对象返回 &lt;code&gt;true&lt;/code&gt; ，但对于描述下溢或上溢条件的结果对象返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b87f89f0734b0f681dabea429fae1aace7b8245d" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;coderresult#isError--&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">为方便起见，&lt;a href=&quot;coderresult#isError--&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt;方法对于描述格式错误的输入和不可映射的字符错误的结果对象返回 &lt;code&gt;true&lt;/code&gt; ，而对于描述下溢或上溢条件的结果对象返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f29ffc46a44dbbbeb0d145ab11e0eed98f221342" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">为了方便起见，此类声明了一些公共的final静态字段，这些字段引用由&lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;方法返回的单例实例。</target>
        </trans-unit>
        <trans-unit id="ebada93ed27c6249289f1e3fb580ab3052fec92c" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the values() method.</source>
          <target state="translated">为了方便起见,这个类声明了许多公共静态最终字段,这些字段引用了由 values()方法返回的单子实例。</target>
        </trans-unit>
        <trans-unit id="22c5cc62321a61e23fe5e092c90e1a30e44ff7cd" translate="yes" xml:space="preserve">
          <source>For correct printing behaviour, the following points should be observed:</source>
          <target state="translated">为了正确的打印行为,应注意以下几点。</target>
        </trans-unit>
        <trans-unit id="cb5e8dedd374a70c1c847661490301249aacc703" translate="yes" xml:space="preserve">
          <source>For data in &lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; format, the application must take care when promoting the data to longer integral types to avoid sign extension.</source>
          <target state="translated">对于 &lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 格式的数据，在将数据提升为更长的整数类型时，应用程序必须小心，以避免符号扩展。</target>
        </trans-unit>
        <trans-unit id="1540b9260398a27c20afbc75e79f7e85a69fa272" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option is used to allow multiple programs bind to the same address. This option should be enabled when the socket is to be used for Internet Protocol (IP) multicasting.</source>
          <target state="translated">对于面向数据报的套接字,套接字选项用于允许多个程序绑定到同一个地址。当套接字要用于Internet协议(IP)多播时,应该启用该选项。</target>
        </trans-unit>
        <trans-unit id="0f95b5e33b3ee975e827804d3ac17eb2566ce8e5" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option usually allows multiple UDP sockets to be bound to the same address and port.</source>
          <target state="translated">对于面向数据报的套接字,套接字选项通常允许多个UDP套接字绑定到同一个地址和端口。</target>
        </trans-unit>
        <trans-unit id="786c72f86388cb950616d047202d32b3eb1c3b0f" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the receive buffer may limit the size of the datagrams that can be received. Whether datagrams larger than the buffer size can be received is system dependent. Increasing the socket receive buffer may be important for cases where datagrams arrive in bursts faster than they can be processed.</source>
          <target state="translated">对于面向数据报的套接字,接收缓冲区的大小可能限制了可以接收的数据报的大小。能否接收到大于缓冲区大小的数据报取决于系统。增加套接字接收缓冲区对于数据报以突发方式到达而无法处理的情况可能很重要。</target>
        </trans-unit>
        <trans-unit id="966cd6f9c064ea098962ea14f75ef3365435e675" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the send buffer may limit the size of the datagrams that may be sent by the socket. Whether datagrams larger than the buffer size are sent or discarded is system dependent.</source>
          <target state="translated">对于面向数据报的套接字,发送缓冲区的大小可能会限制套接字可以发送的数据报的大小。大于缓冲区大小的数据报是被发送还是被丢弃,取决于系统。</target>
        </trans-unit>
        <trans-unit id="e144e4de7a25df3ef3b62d81140888932e771f2c" translate="yes" xml:space="preserve">
          <source>For date-times, 'JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'JULIAN_DAY.adjustInto()' and 'JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">对于日期时间，&amp;ldquo; JULIAN_DAY.getFrom（）&amp;rdquo;采用从午夜到下一个午夜之前的相同值。如果将&amp;ldquo; JULIAN_DAY.adjustInto（）&amp;rdquo;应用于日期时间，则&amp;ldquo;一天中的时间&amp;rdquo;部分保持不变。 'JULIAN_DAY.adjustInto（）'和'JULIAN_DAY.getFrom（）'仅适用于可以转换为&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;Temporal&lt;/code&gt; 对象。一个&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; &lt;/a&gt;抛出为任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="0cc6b45ec07db1a8b27e379302a25193156d3ffa" translate="yes" xml:space="preserve">
          <source>For date-times, 'MODIFIED_JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'MODIFIED_JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'MODIFIED_JULIAN_DAY.adjustInto()' and 'MODIFIED_JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">对于日期时间，&amp;ldquo; MODIFIED_JULIAN_DAY.getFrom（）&amp;rdquo;采用从午夜到下一个午夜之前的相同值。如果将&amp;ldquo; MODIFIED_JULIAN_DAY.adjustInto（）&amp;rdquo;应用于日期时间，则&amp;ldquo;一天中的时间&amp;rdquo;部分保持不变。 'MODIFIED_JULIAN_DAY.adjustInto（）'和'MODIFIED_JULIAN_DAY.getFrom（）'仅适用于可以转换为&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;Temporal&lt;/code&gt; 对象。一个&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; &lt;/a&gt;抛出为任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="8cbb52d0e448ae0028f420b523fc0e8fe8889086" translate="yes" xml:space="preserve">
          <source>For date-times, 'RATA_DIE.getFrom()' assumes the same value from midnight until just before the next midnight. When 'RATA_DIE.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'RATA_DIE.adjustInto()' and 'RATA_DIE.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">对于日期时间，&amp;ldquo; RATA_DIE.getFrom（）&amp;rdquo;采用从午夜到下一个午夜之前的相同值。当将'RATA_DIE.adjustInto（）'应用于日期时间时，一天中的时间部分保持不变。'RATA_DIE.adjustInto（）'和'RATA_DIE.getFrom（）'仅适用于可以转换为&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;Temporal&lt;/code&gt; 对象。一个&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; &lt;/a&gt;抛出为任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="5917af1a5a5388259e477975711371546feece14" translate="yes" xml:space="preserve">
          <source>For default values not specified by SAX2, each XMLReader implementation specifies its default, or may choose not to expose the feature flag. Unless otherwise specified here, implementations may support changing current values of these standard feature flags, but not while parsing.</source>
          <target state="translated">对于SAX2没有指定的默认值,每个XMLReader实现都会指定它的默认值,或者可以选择不暴露特征标志。除非这里另有规定,否则实现可以支持改变这些标准特征标志的当前值,但在解析时不支持。</target>
        </trans-unit>
        <trans-unit id="d21c60d5fb09e760cc030c28677e9de4a9cb8ba5" translate="yes" xml:space="preserve">
          <source>For deletes, the indexes represent the</source>
          <target state="translated">对于删除来说,索引代表了</target>
        </trans-unit>
        <trans-unit id="28d681735625cb5b074de969173935dda35c689f" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the  Java Cryptography Architecture API Specification &amp;amp; Reference. Security providers can override it to implement their own test.</source>
          <target state="translated">有关对各种服务类型有效的详细信息和参数值，请参见此类的顶部以及《 Java密码体系结构API规范和参考》。安全提供者可以覆盖它以实施自己的测试。</target>
        </trans-unit>
        <trans-unit id="b68492db6a0c7fda9b50e23139dd936779868511" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">有关对各种服务类型有效的详细信息和参数值，请参见此类的顶部和《&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca&quot;&gt;Java密码体系结构（JCA）参考指南》&lt;/a&gt;。安全提供者可以覆盖它以实施自己的测试。</target>
        </trans-unit>
        <trans-unit id="804b34ef3e3e29b6ff0dcdc4e3200775ed24a3f5" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">有关对各种服务类型有效的详细信息和参数值，请参见此类的顶部和《&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java密码体系结构（JCA）参考指南》&lt;/a&gt;。安全提供者可以覆盖它以实施自己的测试。</target>
        </trans-unit>
        <trans-unit id="c68701285e7b960e6e93d95808cdd4a77d317a1f" translate="yes" xml:space="preserve">
          <source>For details on how the widths of columns in the &lt;code&gt;JTable&lt;/code&gt; (and &lt;code&gt;JTableHeader&lt;/code&gt;) are calculated from the &lt;code&gt;preferredWidth&lt;/code&gt;, see the &lt;code&gt;doLayout&lt;/code&gt; method in &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">有关如何从 &lt;code&gt;preferredWidth&lt;/code&gt; 计算 &lt;code&gt;JTable&lt;/code&gt; （和 &lt;code&gt;JTableHeader&lt;/code&gt; ）中的列宽的详细信息，请参见 &lt;code&gt;JTable&lt;/code&gt; 中的 &lt;code&gt;doLayout&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5aab162f3d6513fcbe058868b382f7a560c31fe9" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">有关焦点子系统的详细信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;如何使用焦点子系统&lt;/a&gt;&amp;rdquo;一节和&amp;ldquo;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;焦点规范&amp;rdquo;&lt;/a&gt;以获取更多信息。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b1b03e23526eb89a32170bba3eac6c71adb286b" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">有关焦点子系统的详细信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;如何使用焦点子系统&lt;/a&gt;&amp;rdquo;一节和&amp;ldquo;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;焦点规范&amp;rdquo;&lt;/a&gt;以获取更多信息。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="265e8a5599432ddf889d173f21ff483b5caee801" translate="yes" xml:space="preserve">
          <source>For directories that do not use a string representation for some or all of their attributes, the filter argument corresponding to an attribute value may be of a type other than String. Directories that support unstructured binary-valued attributes, for example, should accept byte arrays as filter arguments. The interpretation (if any) of filter arguments of any other type is determined by the service provider for that directory, which maps the filter operations onto operations with corresponding semantics in the underlying directory.</source>
          <target state="translated">对于那些不使用字符串表示部分或全部属性的目录,对应于属性值的过滤器参数可以是String以外的类型。例如,支持非结构化二进制值属性的目录,应该接受字节数组作为过滤器参数。任何其他类型的过滤器参数的解释(如果有的话)由该目录的服务提供商决定,它将过滤器操作映射到底层目录中具有相应语义的操作上。</target>
        </trans-unit>
        <trans-unit id="518376a1f0776715181d384c293e66dd7896f2e6" translate="yes" xml:space="preserve">
          <source>For documentation that includes information about algorithm parameter and key specifications, please see:</source>
          <target state="translated">关于包括算法参数和关键规格信息的文档,请参见。</target>
        </trans-unit>
        <trans-unit id="b6a829f85f8f642a1c89efe627173daa5255f0cb" translate="yes" xml:space="preserve">
          <source>For drop mode &lt;code&gt;DropMode.INSERT&lt;/code&gt;, this index indicates the index at which the data should be inserted into the parent path represented by &lt;code&gt;getPath()&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; indicates that the drop occurred over the parent itself, and in most cases should be treated as inserting into either the beginning or the end of the parent's list of children.</source>
          <target state="translated">对于放置模式 &lt;code&gt;DropMode.INSERT&lt;/code&gt; ，此索引指示将数据插入到由 &lt;code&gt;getPath()&lt;/code&gt; 表示的父路径中的索引。 &lt;code&gt;-1&lt;/code&gt; 表示该下降发生在父级本身上，在大多数情况下，应将其视为插入到父级子级列表的开头或结尾。</target>
        </trans-unit>
        <trans-unit id="7fcd28f67347c51882b14015451795cd74b74cd2" translate="yes" xml:space="preserve">
          <source>For drop modes &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; and &lt;code&gt;DropMode.ON&lt;/code&gt;, this index is unimportant (and it will always be &lt;code&gt;-1&lt;/code&gt;) as the only interesting data is the path over which the drop operation occurred.</source>
          <target state="translated">对于放置模式 &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; 和 &lt;code&gt;DropMode.ON&lt;/code&gt; ，此索引并不重要（它将始终为 &lt;code&gt;-1&lt;/code&gt; ），因为唯一有趣的数据是发生放置操作的路径。</target>
        </trans-unit>
        <trans-unit id="5e8ebd7b5b5944d400b4ddb7391f9d645ae1a1ac" translate="yes" xml:space="preserve">
          <source>For each</source>
          <target state="translated">对于每个</target>
        </trans-unit>
        <trans-unit id="48eda97c675ea6215a67a5147e8e38b46a61c861" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;#isBlank()&quot;&gt;non-blank&lt;/a&gt; line,</source>
          <target state="translated">对于每条&lt;a href=&quot;#isBlank()&quot;&gt;非空白&lt;/a&gt;行，</target>
        </trans-unit>
        <trans-unit id="45d82f9f72a200ec7154f206947a25a77ab40162" translate="yes" xml:space="preserve">
          <source>For each TransportService installed on the platform, the VirtualMachineManager creates a corresponding &lt;a href=&quot;connect/attachingconnector&quot;&gt;&lt;code&gt;AttachingConnector&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;connect/listeningconnector&quot;&gt;&lt;code&gt;ListeningConnector&lt;/code&gt;&lt;/a&gt;. These Connectors are created to encapsulate a &lt;a href=&quot;connect/transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt; that in turn encapsulates the TransportService. The AttachingConnector will be named based on the name of the transport service concatenated with the string &lt;code&gt;Attach&lt;/code&gt;. For example, if the transport service &lt;a href=&quot;connect/spi/transportservice#name()&quot;&gt;&lt;code&gt;name()&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;telepathic&lt;/code&gt; then the AttachingConnector will be named &lt;code&gt;telepathicAttach&lt;/code&gt;. Similiarly the ListeningConnector will be named with the string &lt;code&gt;Listen&lt;/code&gt; tagged onto the name of the transport service. The &lt;a href=&quot;connect/connector#description()&quot;&gt;&lt;code&gt;description()&lt;/code&gt;&lt;/a&gt; method of both the AttachingConnector, and the ListeningConnector, will delegate to the &lt;a href=&quot;connect/spi/transportservice#description()&quot;&gt;&lt;code&gt;description()&lt;/code&gt;&lt;/a&gt; method of the underlying transport service. Both the AttachingConnector and the ListeningConnector will have two Connector &lt;a href=&quot;connect/connector.argument&quot;&gt;&lt;code&gt;Arguments&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;connect/connector.stringargument&quot;&gt;&lt;code&gt;StringArgument&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;address&lt;/code&gt; is the connector argument to specify the address to attach too, or to listen on. A &lt;a href=&quot;connect/connector.integerargument&quot;&gt;&lt;code&gt;IntegerArgument&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;timeout&lt;/code&gt; is the connector argument to specify the timeout when attaching, or accepting. The timeout connector may be ignored depending on if the transport service supports an attach timeout or accept timeout.</source>
          <target state="translated">对于平台上安装的每个TransportService，VirtualMachineManager都会创建一个对应的&lt;a href=&quot;connect/attachingconnector&quot;&gt; &lt;code&gt;AttachingConnector&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;connect/listeningconnector&quot;&gt; &lt;code&gt;ListeningConnector&lt;/code&gt; &lt;/a&gt;。创建这些连接器是为了封装&lt;a href=&quot;connect/transport&quot;&gt; &lt;code&gt;Transport&lt;/code&gt; &lt;/a&gt;，而传输又封装了TransportService。 AttachingConnector将根据与字符串 &lt;code&gt;Attach&lt;/code&gt; 串联的传输服务的名称来命名。例如，如果传输服务&lt;a href=&quot;connect/spi/transportservice#name()&quot;&gt; &lt;code&gt;name()&lt;/code&gt; &lt;/a&gt;方法返回 &lt;code&gt;telepathic&lt;/code&gt; ,则AttachingConnector将被命名为 &lt;code&gt;telepathicAttach&lt;/code&gt; 。类似地，ListeningConnector的名称将在传输服务的名称上带有名称为 &lt;code&gt;Listen&lt;/code&gt; 的字符串。这&lt;a href=&quot;connect/connector#description()&quot;&gt; &lt;code&gt;description()&lt;/code&gt; &lt;/a&gt;两者AttachingConnector和ListeningConnector的方法，将委托给&lt;a href=&quot;connect/spi/transportservice#description()&quot;&gt; &lt;code&gt;description()&lt;/code&gt; &lt;/a&gt;底层传输服务的方法。 AttachingConnector和ListeningConnector都将具有两个连接器&lt;a href=&quot;connect/connector.argument&quot;&gt; &lt;code&gt;Arguments&lt;/code&gt; &lt;/a&gt;。名为 &lt;code&gt;address&lt;/code&gt; 的&lt;a href=&quot;connect/connector.stringargument&quot;&gt; &lt;code&gt;StringArgument&lt;/code&gt; &lt;/a&gt;是连接器参数，用于指定也要附加或监听的地址。一个名为 &lt;code&gt;timeout&lt;/code&gt; 的&lt;a href=&quot;connect/connector.integerargument&quot;&gt; &lt;code&gt;IntegerArgument&lt;/code&gt; &lt;/a&gt;是连接器参数，用于指定附加或接受时的超时。可能会忽略超时连接器，具体取决于传输服务是否支持附加超时或接受超时。</target>
        </trans-unit>
        <trans-unit id="d5e87de10ee00b022602cd0fe8a0bf81b92bb32e" translate="yes" xml:space="preserve">
          <source>For each call of &lt;code&gt;publish&lt;/code&gt; the &lt;code&gt;Handler&lt;/code&gt; will call this &lt;code&gt;Filter&lt;/code&gt; (if it is non-null) to check if the &lt;code&gt;LogRecord&lt;/code&gt; should be published or discarded.</source>
          <target state="translated">对于每个呼叫 &lt;code&gt;publish&lt;/code&gt; 的 &lt;code&gt;Handler&lt;/code&gt; 会调用这个 &lt;code&gt;Filter&lt;/code&gt; （如果非null）来检查 &lt;code&gt;LogRecord&lt;/code&gt; 应发布或放弃。</target>
        </trans-unit>
        <trans-unit id="286cc615cc027b7399bc8f36bf03bcc0ce9d8b08" translate="yes" xml:space="preserve">
          <source>For each class &quot;Foo&quot;, explicit information may be available if there exists a corresponding &quot;FooBeanInfo&quot; class that provides a non-null value when queried for the information. We first look for the BeanInfo class by taking the full package-qualified name of the target bean class and appending &quot;BeanInfo&quot; to form a new class name. If this fails, then we take the final classname component of this name, and look for that class in each of the packages specified in the BeanInfo package search path.</source>
          <target state="translated">对于每一个类 &quot;Foo&quot;,如果存在一个对应的 &quot;FooBeanInfo &quot;类,在查询信息时提供一个非空值,就可以获得显式信息。我们首先寻找BeanInfo类,方法是取目标bean类的完整包限定名称,并附加 &quot;BeanInfo&quot;,形成一个新的类名。如果失败了,那么我们就取这个名称的最后一个类名成分,在BeanInfo包搜索路径中指定的每个包中寻找该类。</target>
        </trans-unit>
        <trans-unit id="20256c9d6947200a5e94011138eea8b1897119cf" translate="yes" xml:space="preserve">
          <source>For each combination, the security strength can be requested from 112 up to the highest strength it supports. Both reseeding and prediction resistance are supported.</source>
          <target state="translated">对于每个组合,安全强度可以从112到其支持的最高强度进行申请。同时支持重播和抗预测。</target>
        </trans-unit>
        <trans-unit id="4d952801a5093c12c28f05ad1d4bdd655a37742c" translate="yes" xml:space="preserve">
          <source>For each configuration key in the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;existing configuration&lt;/a&gt; and the given input stream configuration, the given &lt;code&gt;mapper&lt;/code&gt; function is invoked to map from the configuration key to a function,</source>
          <target state="translated">对于&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;现有配置&lt;/a&gt;和给定的输入流配置中的每个配置键，调用给定的 &lt;code&gt;mapper&lt;/code&gt; 函数以从配置键映射到一个函数，</target>
        </trans-unit>
        <trans-unit id="b6e30f6a64e00d84dcf684b247b7c04cb7d796f1" translate="yes" xml:space="preserve">
          <source>For each entry of &lt;code&gt;providers&lt;/code&gt; that implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called once for each category it is registered under. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category or when the registry is finalized.</source>
          <target state="translated">对于实现 &lt;code&gt;RegisterableService&lt;/code&gt; 接口的 &lt;code&gt;providers&lt;/code&gt; 每个条目，将为其注册的每个类别调用一次其 &lt;code&gt;onRegistration&lt;/code&gt; 方法。每次从类别中取消注册或完成注册表时，都会调用其 &lt;code&gt;onDeregistration&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c516132c3718d7f067332d5c83b439ea451e810e" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that &quot;reads&quot; B:</source>
          <target state="translated">对于每个 &quot;读取 &quot;B的枚举模块A。</target>
        </trans-unit>
        <trans-unit id="a25403e3f97a5b7ac07a000714e826226e543668" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that 'requires' B: A &quot;reads&quot; B.</source>
          <target state="translated">对于每个 &quot;需要 &quot;B的枚举模块A:A &quot;读取 &quot;B。</target>
        </trans-unit>
        <trans-unit id="35aeee93cde14551d6eade0a0c737d8f9a729564" translate="yes" xml:space="preserve">
          <source>For each enumerated module X that is automatic: X &quot;reads&quot; every other enumerated module (it is &quot;as if&quot; an automatic module has 'requires' directives for every other enumerated module).</source>
          <target state="translated">对于每一个自动的枚举模块X,X都会 &quot;读取 &quot;其他每一个枚举模块。X &quot;读取 &quot;每一个其他的枚举模块(&quot;好像 &quot;一个自动模块对每一个其他的枚举模块都有 &quot;要求 &quot;指令)。</target>
        </trans-unit>
        <trans-unit id="96d2961bb25e716d2f6e80a236a212dd331a8ca6" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">对于遇到的每个文件，此方法都尝试读取其&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;。如果文件不是目录，则使用文件属性调用&lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt;方法。如果由于I / O异常而无法读取文件属性，则使用I / O异常调用&lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="6ca5a3eb61a3c0a9243e70fdb42a70d21404ae0f" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">对于遇到的每个文件，此方法都尝试读取其&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;。如果文件不是目录，则使用文件属性调用&lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt;方法。如果由于I / O异常而无法读取文件属性，则将使用I / O异常调用&lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="4d739c9464a9a531eadc74d9ce9305fefe52ff7c" translate="yes" xml:space="preserve">
          <source>For each glyph in the &lt;code&gt;GlyphVector&lt;/code&gt;, you can obtain:</source>
          <target state="translated">对于每个字形 &lt;code&gt;GlyphVector&lt;/code&gt; 中，你可以得到：</target>
        </trans-unit>
        <trans-unit id="ddf36bbce577351f24028eda6666f70d941e508b" translate="yes" xml:space="preserve">
          <source>For each listener, the original &lt;code&gt;NotificationListener&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; are kept on the client side; in order for the client to be able to identify them, the server generates and returns a unique &lt;code&gt;listenerID&lt;/code&gt;. This &lt;code&gt;listenerID&lt;/code&gt; is forwarded with the &lt;code&gt;Notifications&lt;/code&gt; to the remote client.</source>
          <target state="translated">对于每个侦听器，原始的 &lt;code&gt;NotificationListener&lt;/code&gt; 和 &lt;code&gt;handback&lt;/code&gt; 保留在客户端。为了使客户端能够识别它们，服务器生成并返回唯一的 &lt;code&gt;listenerID&lt;/code&gt; 。该 &lt;code&gt;listenerID&lt;/code&gt; 随 &lt;code&gt;Notifications&lt;/code&gt; 一起转发到远程客户端。</target>
        </trans-unit>
        <trans-unit id="97a84cf424a476d032f4b6ffd9d39b7dddecc378" translate="yes" xml:space="preserve">
          <source>For each lower bound B :</source>
          <target state="translated">对于每一个下界B :</target>
        </trans-unit>
        <trans-unit id="560c97173e52668310a247ab36d49a521c8f9040" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">对于返回的 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 中的每个方法，调用该方法将导致在远程MBean服务器中代表给定的委托主题而不是已认证的主题来调用相应的方法。 MBean服务器方法返回的值是返回给客户端的值。如果MBean服务器方法产生 &lt;code&gt;Exception&lt;/code&gt; ，则客户端会看到相同的 &lt;code&gt;Exception&lt;/code&gt; 。如果MBean服务器方法或对其进行调用的尝试产生 &lt;code&gt;Error&lt;/code&gt; ，则该 &lt;code&gt;Error&lt;/code&gt; 将包装在&lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 中&lt;/a&gt;，客户端可以看到该错误。</target>
        </trans-unit>
        <trans-unit id="6cab9b7add9ebb79364ab1771d1e616553c1e6db" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">对于返回的 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 中的每个方法，调用该方法将导致在远程MBean服务器中代表给定的委托主题而不是已认证的主题来调用相应的方法。 MBean服务器方法返回的值是返回给客户端的值。如果MBean服务器方法产生 &lt;code&gt;Exception&lt;/code&gt; ，则客户端会看到相同的 &lt;code&gt;Exception&lt;/code&gt; 。如果MBean服务器方法或对其进行调用的尝试产生 &lt;code&gt;Error&lt;/code&gt; ，则该 &lt;code&gt;Error&lt;/code&gt; 将包装在&lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 中&lt;/a&gt;，客户端可以看到该错误。</target>
        </trans-unit>
        <trans-unit id="b4d1d1cbcb4df50206304dcd7ddd941a7faf1321" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">对于返回的 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 中的每个方法，调用该方法将导致在远程MBean服务器中调用相应的方法。 MBean服务器方法返回的值是返回给客户端的值。如果MBean服务器方法产生 &lt;code&gt;Exception&lt;/code&gt; ，则客户端会看到相同的 &lt;code&gt;Exception&lt;/code&gt; 。如果MBean服务器方法或对其进行调用的尝试产生 &lt;code&gt;Error&lt;/code&gt; ，则该 &lt;code&gt;Error&lt;/code&gt; 将包装在&lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 中&lt;/a&gt;，客户端可以看到该错误。</target>
        </trans-unit>
        <trans-unit id="af553cdcbe446f41ad75bb0c253ebededf33d396" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">对于返回的 &lt;code&gt;MBeanServerConnection&lt;/code&gt; 中的每个方法，调用该方法将导致在远程MBean服务器中调用相应的方法。 MBean服务器方法返回的值是返回给客户端的值。如果MBean服务器方法产生 &lt;code&gt;Exception&lt;/code&gt; ，则客户端会看到相同的 &lt;code&gt;Exception&lt;/code&gt; 。如果MBean服务器方法或对其进行调用的尝试产生 &lt;code&gt;Error&lt;/code&gt; ，则该 &lt;code&gt;Error&lt;/code&gt; 将包装在&lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; 中&lt;/a&gt;，客户端可以看到该错误。</target>
        </trans-unit>
        <trans-unit id="a088159314769f3251dc5a987ee7696aef6ceb45" translate="yes" xml:space="preserve">
          <source>For each non-blank line (as defined by &lt;a href=&quot;#isBlank()&quot;&gt;&lt;code&gt;isBlank()&lt;/code&gt;&lt;/a&gt;), the leading &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; characters are counted.</source>
          <target state="translated">对于每条非空白行（由&lt;a href=&quot;#isBlank()&quot;&gt; &lt;code&gt;isBlank()&lt;/code&gt; &lt;/a&gt;定义），都会对前导&lt;a href=&quot;character#isWhitespace(int)&quot;&gt;空白&lt;/a&gt;字符进行计数。</target>
        </trans-unit>
        <trans-unit id="719f9f441ad2dee9837b67bc47a02d9badbbe4a3" translate="yes" xml:space="preserve">
          <source>For each non-transient property, an expression is created in which the nullary &quot;getter&quot; method is applied to the &lt;code&gt;oldInstance&lt;/code&gt;. The value of this expression is the value of the property in the instance that is being serialized. If the value of this expression in the cloned environment &lt;code&gt;mutatesTo&lt;/code&gt; the target value, the new value is initialized to make it equivalent to the old value. In this case, because the property value has not changed there is no need to call the corresponding &quot;setter&quot; method and no statement is emitted. If not however, the expression for this value is replaced with another expression (normally a constructor) and the corresponding &quot;setter&quot; method is called to install the new property value in the object. This scheme removes default information from the output produced by streams using this delegate.</source>
          <target state="translated">对于每个非瞬态属性，将创建一个表达式，其中将无效的&amp;ldquo; getter&amp;rdquo;方法应用于 &lt;code&gt;oldInstance&lt;/code&gt; 。此表达式的值是要序列化的实例中的属性的值。如果在克隆环境中此表达式的值是 &lt;code&gt;mutatesTo&lt;/code&gt; 目标值，则将新值初始化为使其等于旧值。在这种情况下，由于属性值未更改，因此无需调用相应的&amp;ldquo; setter&amp;rdquo;方法，也不会发出任何语句。如果不是，则用另一个表达式（通常是构造函数）替换该值的表达式，并调用相应的&amp;ldquo; setter&amp;rdquo;方法以在对象中安装新的属性值。此方案使用此委托从流产生的输出中删除默认信息。</target>
        </trans-unit>
        <trans-unit id="b6e68cba9e515c80a86dee74a48fa0652d49385f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;doPhase&lt;/code&gt; needs to be called. For example, if this key exchange is with one other party, &lt;code&gt;doPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If this key exchange is with two other parties, &lt;code&gt;doPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">对于密钥交换中的每个代理， &lt;code&gt;doPhase&lt;/code&gt; 需要调用doPhase。例如，如果此密钥交换是与另一方进行的，则 &lt;code&gt;doPhase&lt;/code&gt; 需要被调用一次，并且 &lt;code&gt;lastPhase&lt;/code&gt; 标志设置为 &lt;code&gt;true&lt;/code&gt; 。如果此密钥交换是与其他两个 &lt;code&gt;doPhase&lt;/code&gt; 进行的，则doPhase需要被调用两次，第一次是将 &lt;code&gt;lastPhase&lt;/code&gt; 标志设置为 &lt;code&gt;false&lt;/code&gt; ，第二次将其设置为 &lt;code&gt;true&lt;/code&gt; 。密钥交换中可能有许多参与方。</target>
        </trans-unit>
        <trans-unit id="bf1abc49e05851db66fa969e8d77a4a123b0ee0f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called. For example, if the key exchange is with one other party, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If the key exchange is with two other parties, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">对于密钥交换中的每个对应方，需要调用 &lt;code&gt;engineDoPhase&lt;/code&gt; 。例如，如果密钥交换是与另一方进行的， &lt;code&gt;engineDoPhase&lt;/code&gt; 需要将一次 &lt;code&gt;lastPhase&lt;/code&gt; 调用，并且lastPhase标志设置为 &lt;code&gt;true&lt;/code&gt; 。如果与其他两个方进行密钥交换， &lt;code&gt;engineDoPhase&lt;/code&gt; 需要调用engineDoPhase两次，第一次将 &lt;code&gt;lastPhase&lt;/code&gt; 标志设置为 &lt;code&gt;false&lt;/code&gt; ，第二次将其设置为 &lt;code&gt;true&lt;/code&gt; 。密钥交换中可能有许多参与方。</target>
        </trans-unit>
        <trans-unit id="6705d80531c8f298495e16bdc3ba61df9ab6cbdc" translate="yes" xml:space="preserve">
          <source>For each of those three kinds of information, the Introspector will separately analyze the bean's class and superclasses looking for either explicit or implicit information and use that information to build a BeanInfo object that comprehensively describes the target bean.</source>
          <target state="translated">对于这三种信息,Introspector将分别分析bean的类和超类,寻找显式或隐式信息,并使用这些信息构建一个全面描述目标bean的BeanInfo对象。</target>
        </trans-unit>
        <trans-unit id="3ff74e9e3b5f2e83be3535442fcbac4322b4605f" translate="yes" xml:space="preserve">
          <source>For each pair of threads that successfully exchange objects via an &lt;code&gt;Exchanger&lt;/code&gt;, actions prior to the &lt;code&gt;exchange()&lt;/code&gt; in each thread</source>
          <target state="translated">对于通过 &lt;code&gt;Exchanger&lt;/code&gt; 成功交换对象的每对线程，在每个线程中执行 &lt;code&gt;exchange()&lt;/code&gt; 之前的操作</target>
        </trans-unit>
        <trans-unit id="077272393c1edab2916968364e29494b3d96b143" translate="yes" xml:space="preserve">
          <source>For each path identifies if that path is in fact new.</source>
          <target state="translated">对于每个路径识别该路径是否为新路径。</target>
        </trans-unit>
        <trans-unit id="70daddc43f303edbcbd09b46d7f6250e5c21d2f8" translate="yes" xml:space="preserve">
          <source>For each property found in both of these two sources, JNDI determines the property's value as follows. If the property is one of the standard JNDI properties that specify a list of JNDI factories (listed &lt;a href=&quot;#LISTPROPS&quot;&gt;above&lt;/a&gt;), the values are concatenated into a single colon-separated list. For other properties, only the first value found is used.</source>
          <target state="translated">对于在这两个源中找到的每个属性，JNDI如下确定该属性的值。如果该属性是指定JNDI工厂列表（在&lt;a href=&quot;#LISTPROPS&quot;&gt;上面&lt;/a&gt;列出）的标准JNDI属性之一，则将这些值连接到单个冒号分隔的列表中。对于其他属性，仅使用找到的第一个值。</target>
        </trans-unit>
        <trans-unit id="90dc92c1a206cf79e9d08ca3b0fa19bc4dfdd624" translate="yes" xml:space="preserve">
          <source>For each property found in both of these two sources, or in more than one application resource file, the property's value is determined as follows. If the property is one of the standard JNDI properties that specify a list of JNDI factories (see &lt;a href=&quot;context#LISTPROPS&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt;), all of the values are concatenated into a single colon-separated list. For other properties, only the first value found is used.</source>
          <target state="translated">对于在这两个源或两个以上应用程序资源文件中找到的每个属性，该属性的值如下确定。如果该属性是指定JNDI工厂列表的标准JNDI属性之一（请参见&lt;a href=&quot;context#LISTPROPS&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;），则所有值都被连接到单个冒号分隔的列表中。对于其他属性，仅使用找到的第一个值。</target>
        </trans-unit>
        <trans-unit id="b2a5c213817cdd80511492b1f5a1b49d548c1151" translate="yes" xml:space="preserve">
          <source>For each property found in more than one application resource file, JNDI uses the first value found or, in a few cases where it makes sense to do so, it concatenates all of the values (details are given below). For example, if the &quot;java.naming.factory.object&quot; property is found in three &lt;code&gt;jndi.properties&lt;/code&gt; resource files, the list of object factories is a concatenation of the property values from all three files. Using this scheme, each deployable component is responsible for listing the factories that it exports. JNDI automatically collects and uses all of these export lists when searching for factory classes.</source>
          <target state="translated">对于在多个应用程序资源文件中找到的每个属性，JNDI使用找到的第一个值，或者在某些情况下有意义的情况下，JNDI将所有值连接起来（详细信息在下面给出）。例如，如果在三个 &lt;code&gt;jndi.properties&lt;/code&gt; 资源文件中找到&amp;ldquo; java.naming.factory.object&amp;rdquo;属性，则对象工厂列表是所有三个文件的属性值的串联。使用此方案，每个可部署组件负责列出其出口的工厂。搜索工厂类时，JNDI自动收集并使用所有这些导出列表。</target>
        </trans-unit>
        <trans-unit id="cebf057d31e3a874e277390510d8867ee4415f1a" translate="yes" xml:space="preserve">
          <source>For each representation [</source>
          <target state="translated">对于每一个代表[]。</target>
        </trans-unit>
        <trans-unit id="47a9561df7b527f4b2aab61f4f34ec8cc6a9b40c" translate="yes" xml:space="preserve">
          <source>For each text attribute, the documentation provides:</source>
          <target state="translated">对于每个文本属性,文件规定:</target>
        </trans-unit>
        <trans-unit id="3fc4fa19139d0316b7911716ec07a2b22e32aa79" translate="yes" xml:space="preserve">
          <source>For each upper bound B :</source>
          <target state="translated">对于每个上界B 。</target>
        </trans-unit>
        <trans-unit id="b1963cf2281039f3bd61fa6e3d2bbdd1608d8271" translate="yes" xml:space="preserve">
          <source>For each upper bound B:</source>
          <target state="translated">对于每个上界B。</target>
        </trans-unit>
        <trans-unit id="0f830a65e3f2e9d17727af61b48af4b494bd849c" translate="yes" xml:space="preserve">
          <source>For efficiency, a node passed to the filter may not be the same as the one that is actually in the tree. And the actual node (node object identity) may be reused during the process of filtering and serializing a document.</source>
          <target state="translated">为了提高效率,传递给过滤器的节点可能与树中实际存在的节点不一样。而实际的节点(节点对象标识)可能会在文档的过滤和序列化过程中被重复使用。</target>
        </trans-unit>
        <trans-unit id="851ce3cbc9de3b0a8b7e8eabea78affca6c64eaf" translate="yes" xml:space="preserve">
          <source>For efficiency, the Element node passed to the filter may not be the same one as is actually placed in the tree if the node is accepted. And the actual node (node object identity) may be reused during the process of reading in and filtering a document.</source>
          <target state="translated">为了提高效率,如果该节点被接受,传递给过滤器的Element节点可能与实际放在树中的节点不一样。而实际的节点(节点对象标识)可能会在读入和过滤文档的过程中被重复使用。</target>
        </trans-unit>
        <trans-unit id="6808db189d4064c914947cfda276df1fb67492d5" translate="yes" xml:space="preserve">
          <source>For encodings consisting of multiple certificates, use &lt;code&gt;generateCertificates&lt;/code&gt; when you want to parse a collection of possibly unrelated certificates. Otherwise, use &lt;code&gt;generateCertPath&lt;/code&gt; when you want to generate a &lt;code&gt;CertPath&lt;/code&gt; (a certificate chain) and subsequently validate it with a &lt;code&gt;CertPathValidator&lt;/code&gt;.</source>
          <target state="translated">对于包含多个证书的编码，当您想解析可能不相关的证书的集合时，请使用 &lt;code&gt;generateCertificates&lt;/code&gt; 。否则，当您要生成 &lt;code&gt;CertPath&lt;/code&gt; （证书链）并随后使用 &lt;code&gt;CertPathValidator&lt;/code&gt; 对其进行验证时，请使用 &lt;code&gt;generateCertPath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6442f87b0f03b18ad3f252a02ec0dd0852bad5c7" translate="yes" xml:space="preserve">
          <source>For events related to the parsing of a file.</source>
          <target state="translated">用于解析文件的相关事件。</target>
        </trans-unit>
        <trans-unit id="6119a588162f17f778d02e4197d780c8a89fc19a" translate="yes" xml:space="preserve">
          <source>For events relating to an individual annotation processing round.</source>
          <target state="translated">用于与单个注释处理轮相关的事件。</target>
        </trans-unit>
        <trans-unit id="000f7e62b833e5f35b5ce3cc6a4c0eab6e0b58e9" translate="yes" xml:space="preserve">
          <source>For events relating to class files being generated.</source>
          <target state="translated">用于生成类文件的相关事件。</target>
        </trans-unit>
        <trans-unit id="e1b6d4df43d90f4a744a97db77e904c593298d64" translate="yes" xml:space="preserve">
          <source>For events relating to elements being analyzed for errors.</source>
          <target state="translated">用于与被分析错误的元素有关的事件。</target>
        </trans-unit>
        <trans-unit id="022e46c741aec213a3a33e316e458ad4ac5e21cb" translate="yes" xml:space="preserve">
          <source>For events relating to elements being entered.</source>
          <target state="translated">用于与正在输入的元素有关的事件。</target>
        </trans-unit>
        <trans-unit id="51b13fbcf15ea4eff73687711f5e62eacd6fa470" translate="yes" xml:space="preserve">
          <source>For events relating to overall annotation processing.</source>
          <target state="translated">用于与整体注释处理有关的事件。</target>
        </trans-unit>
        <trans-unit id="3c58b6e9bc484c08c212d940518dbfc22676fe01" translate="yes" xml:space="preserve">
          <source>For every Java type &lt;em&gt;J&lt;/em&gt;, the MXBean mapping is described by the following information:</source>
          <target state="translated">对于每个Java类型&lt;em&gt;J&lt;/em&gt;，以下信息描述了MXBean映射：</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">比如说</target>
        </trans-unit>
        <trans-unit id="670a909717db4485fe98bcf482ca6b5ed344272b" translate="yes" xml:space="preserve">
          <source>For example -</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="6d25b7b1723971b685662d129ae6845002a82989" translate="yes" xml:space="preserve">
          <source>For example this code returns a date on the last day of July:</source>
          <target state="translated">例如,此代码返回7月最后一天的日期。</target>
        </trans-unit>
        <trans-unit id="2e17e901f7efa9c67eab5d1d5cbdc89f3e5ba8cd" translate="yes" xml:space="preserve">
          <source>For example to count the unique imports for all the files in a file hierarchy on a Unix compatible platform:</source>
          <target state="translated">例如,在Unix兼容平台上统计文件层次结构中所有文件的唯一导入。</target>
        </trans-unit>
        <trans-unit id="a93be9a98e0ead9fb758dc65b47e6eacc04ae211" translate="yes" xml:space="preserve">
          <source>For example to read from a stream as written by the example in ObjectOutputStream:</source>
          <target state="translated">例如要从ObjectOutputStream中的例子所写的流中读取。</target>
        </trans-unit>
        <trans-unit id="dea8f92e5ff92dd10bdae905afaf950bcc028834" translate="yes" xml:space="preserve">
          <source>For example to write an object that can be read by the example in ObjectInputStream:</source>
          <target state="translated">例如要在ObjectInputStream中写一个可以被例子读取的对象。</target>
        </trans-unit>
        <trans-unit id="ed3bd207737b554201ad4873d19d79f75b22c5dd" translate="yes" xml:space="preserve">
          <source>For example using UTF-8 as the encoding scheme the string &quot;The string &amp;uuml;@foo-bar&quot; would get converted to &quot;The+string+%C3%BC%40foo-bar&quot; because in UTF-8 the character &amp;uuml; is encoded as two bytes C3 (hex) and BC (hex), and the character @ is encoded as one byte 40 (hex).</source>
          <target state="translated">例如，使用UTF-8作为编码方案，字符串&amp;ldquo;字符串&amp;uuml;@ foo-bar&amp;rdquo;将被转换为&amp;ldquo; The + string +％C3％BC％40foo-bar&amp;rdquo;，因为在UTF-8中，字符&amp;uuml;被编码为两个字节C3（十六进制）和BC（十六进制），字符@编码为一个字节40（十六进制）。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="77436c62db40fb0d8e10ad4f0044d6f872750e7a" translate="yes" xml:space="preserve">
          <source>For example, &quot;*&quot;, &quot;javax.management.remote.JMXPrincipal.*&quot; and &quot;javax.management.remote.JMXPrincipal.delegate&quot; are valid target names. The first one denotes any principal name from any principal class, the second one denotes any principal name of the concrete principal class &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; and the third one denotes a concrete principal name &lt;code&gt;delegate&lt;/code&gt; of the concrete principal class &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt;.</source>
          <target state="translated">例如，&amp;ldquo; *&amp;rdquo;，&amp;ldquo; javax.management.remote.JMXPrincipal。*&amp;rdquo;和&amp;ldquo; javax.management.remote.JMXPrincipal.delegate&amp;rdquo;是有效的目标名称。第一种是指任何主要名称从任何主要类，第二个表示具体主体类的任何主体名称 &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; 和第三个表示混凝土主体名称 &lt;code&gt;delegate&lt;/code&gt; 的混凝土主体类的 &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1f1fc71f706b96406965545c5a72537af23c22f" translate="yes" xml:space="preserve">
          <source>For example, &quot;1 year, 6 months and 3 days&quot; minus &quot;2 years, 2 months and 2 days&quot; returns &quot;-1 years, 4 months and 1 day&quot;.</source>
          <target state="translated">例如,&quot;1年6个月零3天 &quot;减去 &quot;2年2个月零2天 &quot;的结果是&quot;-1年4个月零1天&quot;。</target>
        </trans-unit>
        <trans-unit id="ce2f04507ae8e2998174aa82e754a89ec2df289f" translate="yes" xml:space="preserve">
          <source>For example, &quot;1 year, 6 months and 3 days&quot; plus &quot;2 years, 2 months and 2 days&quot; returns &quot;3 years, 8 months and 5 days&quot;.</source>
          <target state="translated">例如,&quot;1年6个月零3天 &quot;加上 &quot;2年2个月零2天 &quot;返回 &quot;3年8个月零5天&quot;。</target>
        </trans-unit>
        <trans-unit id="cd1ca285238b6f4f71a5a84cbdfe707d75fa2f47" translate="yes" xml:space="preserve">
          <source>For example, &quot;CertificateFactory.X.509&quot; would be satisfied by any provider that supplied a CertificateFactory implementation for X.509 certificates.</source>
          <target state="translated">例如,&quot;CertificateFactory.X.509 &quot;将由任何提供X.509证书的CertificateFactory实现的提供商来满足。</target>
        </trans-unit>
        <trans-unit id="c41348f1997c9b465cb11a4e4b35ee11f6fc435c" translate="yes" xml:space="preserve">
          <source>For example, &quot;P1D&quot; (1 day) is equal to &quot;PT24H&quot; (24 hours).</source>
          <target state="translated">例如,&quot;P1D&quot;(1天)等于 &quot;PT24H&quot;(24小时)。</target>
        </trans-unit>
        <trans-unit id="01a5173bc02a3a282df0b5b324e7dd8980aadd3c" translate="yes" xml:space="preserve">
          <source>For example, &quot;P1D&quot; (one day) &amp;gt; &quot;PT12H&quot; (12 hours) and &quot;P2Y&quot; (two years) &amp;gt; &quot;P23M&quot; (23 months).</source>
          <target state="translated">例如，&amp;ldquo; P1D&amp;rdquo;（一天）&amp;gt;&amp;ldquo; PT12H&amp;rdquo;（12小时）和&amp;ldquo; P2Y&amp;rdquo;（两年）&amp;gt;&amp;ldquo; P23M&amp;rdquo;（23个月）。</target>
        </trans-unit>
        <trans-unit id="f63fe4a2a7c054829c4bfb4607b20ee971586bd3" translate="yes" xml:space="preserve">
          <source>For example, &quot;Signature.SHA1withDSA KeySize:1024&quot; would be satisfied by any provider that implemented the SHA1withDSA signature algorithm with a keysize of 1024 (or larger).</source>
          <target state="translated">例如,&quot;Signature.SHA1withDSA KeySize:1024 &quot;将由任何实施SHA1withDSA签名算法的提供商满足,其密钥大小为1024(或更大)。</target>
        </trans-unit>
        <trans-unit id="23834668b4f42aa3eff36d9dc3af1cb803a05d8f" translate="yes" xml:space="preserve">
          <source>For example, &quot;d:k=*&quot; and &quot;d:k=*,*&quot; are property value patterns whereas &quot;d:k=v,*&quot; is not.</source>
          <target state="translated">例如,&quot;d:k=*&quot;和 &quot;d:k=*,*&quot;是属性值模式,而 &quot;d:k=v,*&quot;不是。</target>
        </trans-unit>
        <trans-unit id="693804fe51c05f08e1e089946166fd022bbe5638" translate="yes" xml:space="preserve">
          <source>For example, &quot;d:k=v,*&quot; and &quot;d:k=*,*&quot; are key property list patterns whereas &quot;d:k=*&quot; is not.</source>
          <target state="translated">例如,&quot;d:k=v,*&quot;和 &quot;d:k=*,*&quot;是关键属性列表模式,而 &quot;d:k=*&quot;不是。</target>
        </trans-unit>
        <trans-unit id="8dfc24b67f40b9ce20a215e59dc00c07892dee26" translate="yes" xml:space="preserve">
          <source>For example, &quot;text/sgml&quot; will be selected over &quot;text/html&quot;, and &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; will be chosen over &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;.</source>
          <target state="translated">例如，将在&amp;ldquo; text / html&amp;rdquo;上选择&amp;ldquo; text / sgml&amp;rdquo;，并在 &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; 上选择 &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f203035b2d853f5578c6fa1376f1f2226371e963" translate="yes" xml:space="preserve">
          <source>For example, 'ppH' outputs the hour-of-day padded on the left with spaces to a width of 2.</source>
          <target state="translated">例如,'ppH'输出的是一天中的小时数,左边用空格填充,宽度为2。</target>
        </trans-unit>
        <trans-unit id="fe932a3580bdae7afe6e0a4a9de58c7157cf7a7c" translate="yes" xml:space="preserve">
          <source>For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.</source>
          <target state="translated">例如,1904年是闰年,它被4整除。1900年不是闰年,因为它被100整除,但2000年是闰年,因为它被400整除。</target>
        </trans-unit>
        <trans-unit id="6a78f26713124191fac2e6d28003f9a9ac84e472" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 minus one month would result in the invalid date 2007-02-31. Instead of returning an invalid result, the last valid day of the month, 2007-02-28, is selected instead.</source>
          <target state="translated">例如,2007-03-31减去一个月,结果是无效的日期2007-02-31。不返回无效的结果,而是选择该月的最后一天,2007-02-28。</target>
        </trans-unit>
        <trans-unit id="4f6ba16c2096d7d81200bdc33b24cb5f6ab6239d" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 minus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.</source>
          <target state="translated">例如,2007-03-31减去一个月,结果是无效的日期2007-04-31。而不是返回无效的结果,而是选择该月的最后一个有效日期2007-04-30。</target>
        </trans-unit>
        <trans-unit id="bd615cd01a73b4d5679c49655d40ba2b42a8ae69" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 plus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.</source>
          <target state="translated">例如,2007-03-31加上一个月,结果是无效的日期2007-04-31。而不是返回无效的结果,而是选择该月的最后一个有效日期,2007-04-30。</target>
        </trans-unit>
        <trans-unit id="e868a34fb2f73ca67495f195fb00081f0ca9a55a" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2007-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2007-02-28, is selected instead.</source>
          <target state="translated">例如,2008-02-29(闰年)减去一年,结果是无效的日期2007-02-29(标准年)。不返回无效的结果,而是选择该月的最后一天,2007-02-28。</target>
        </trans-unit>
        <trans-unit id="04433b015b19f6077c09b7c0646d9668dd2e4865" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.</source>
          <target state="translated">例如,2008-02-29(闰年)减去一年,结果是无效的日期2009-02-29(标准年)。不返回无效的结果,而是选择该月的最后一天,2009-02-28。</target>
        </trans-unit>
        <trans-unit id="4c2323f63b708163f478b22afb5d3d7394c2b7fb" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) plus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.</source>
          <target state="translated">例如,2008-02-29(闰年)加一岁会导致无效日期2009-02-29(标准年)。不返回无效的结果,而是选择该月的最后一天,2009-02-28。</target>
        </trans-unit>
        <trans-unit id="fc67e734a945db6ecd093cddd5d355c674f7062b" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 minus one day would result in 2009-01-01.</source>
          <target state="translated">例如,2008-12-31减去一天,结果是2009-01-01。</target>
        </trans-unit>
        <trans-unit id="f1a5ba47be43a81f6ae6988d7484d726497287d1" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 minus one week would result in 2009-01-07.</source>
          <target state="translated">例如,2008-12-31减去一周,结果是2009-01-07。</target>
        </trans-unit>
        <trans-unit id="a47190266a9dbf83e8257ded9a0ae0d448f4ea1b" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 plus one day would result in 2009-01-01.</source>
          <target state="translated">例如,2008-12-31加一天,结果是2009-01-01。</target>
        </trans-unit>
        <trans-unit id="be8b9caab1cbe23452ae062409cbc54469046fd9" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 plus one week would result in 2009-01-07.</source>
          <target state="translated">例如,2008-12-31加一周,结果是2009-01-07。</target>
        </trans-unit>
        <trans-unit id="753c745299a18ae4a799071980d0926142c9ce97" translate="yes" xml:space="preserve">
          <source>For example, 2009-01-01 minus one day would result in 2008-12-31.</source>
          <target state="translated">例如,2009-01-01减去一天,结果是2008-12-31。</target>
        </trans-unit>
        <trans-unit id="b4903b02ec0ad82ff029ba8cebb4d342c8e56e1a" translate="yes" xml:space="preserve">
          <source>For example, 2009-01-07 minus one week would result in 2008-12-31.</source>
          <target state="translated">例如,2009-01-07减去一周,结果是2008-12-31。</target>
        </trans-unit>
        <trans-unit id="5dc35db9167b570ffed75aadc5b48a485ca7282f" translate="yes" xml:space="preserve">
          <source>For example, 30 days cannot be meaningfully compared to one month. The &lt;a href=&quot;#compare(javax.xml.datatype.Duration)&quot;&gt;&lt;code&gt;compare(Duration duration)&lt;/code&gt;&lt;/a&gt; method implements this relationship.</source>
          <target state="translated">例如，将30天与一个月相比并没有意义。的&lt;a href=&quot;#compare(javax.xml.datatype.Duration)&quot;&gt; &lt;code&gt;compare(Duration duration)&lt;/code&gt; &lt;/a&gt;方法实现这种关系。</target>
        </trans-unit>
        <trans-unit id="fc133e42d70b82a62bf05a26a79b0108e9f8886f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;en&quot;&lt;/code&gt; (English), &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt; (Japanese, Japan), &lt;code&gt;&quot;*&quot;&lt;/code&gt; (special language range which matches any language tag) are basic language ranges, whereas &lt;code&gt;&quot;*-CH&quot;&lt;/code&gt; (any languages, Switzerland), &lt;code&gt;&quot;es-*&quot;&lt;/code&gt; (Spanish, any regions), and &lt;code&gt;&quot;zh-Hant-*&quot;&lt;/code&gt; (Traditional Chinese, any regions) are extended language ranges.</source>
          <target state="translated">例如， &lt;code&gt;&quot;en&quot;&lt;/code&gt; （英语）， &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt; （日语，日本）， &lt;code&gt;&quot;*&quot;&lt;/code&gt; （与任何语言标签匹配的特殊语言范围）是基本语言范围，而 &lt;code&gt;&quot;*-CH&quot;&lt;/code&gt; （任何语言，瑞士） ）， &lt;code&gt;&quot;es-*&quot;&lt;/code&gt; （西班牙语，任何区域）和 &lt;code&gt;&quot;zh-Hant-*&quot;&lt;/code&gt; （繁体中文，任何区域）都是扩展的语言范围。</target>
        </trans-unit>
        <trans-unit id="1fb8432db4bbea954a98cb622124c212bb94692c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;Util::getResourceBundle&lt;/code&gt; loads a resource bundle on behalf of the caller. It invokes &lt;code&gt;getCallerClass&lt;/code&gt; to identify the class whose method called &lt;code&gt;Util::getResourceBundle&lt;/code&gt;. Then, it obtains the class loader of that class, and uses the class loader to load the resource bundle. The caller class in this example is &lt;code&gt;MyTool&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;Util::getResourceBundle&lt;/code&gt; 代表调用者加载资源束。它调用 &lt;code&gt;getCallerClass&lt;/code&gt; 来标识其类称为 &lt;code&gt;Util::getResourceBundle&lt;/code&gt; 。然后，它获取该类的类加载器，并使用该类加载器加载资源束。在此示例中，调用者类是 &lt;code&gt;MyTool&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="307ac7475a5766fb24af31c365da55c146a7a4e7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;floorDiv(-4, 3) == -2&lt;/code&gt;, whereas &lt;code&gt;(-4 / 3) == -1&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;floorDiv(-4, 3) == -2&lt;/code&gt; ，而 &lt;code&gt;(-4 / 3) == -1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9357617bd335f33004f692f6a9b76c59dbe77c62" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;floorDiv(4, 3) == 1&lt;/code&gt; and &lt;code&gt;(4 / 3) == 1&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;floorDiv(4, 3) == 1&lt;/code&gt; 和 &lt;code&gt;(4 / 3) == 1&lt;/code&gt; 4/3 ）== 1。</target>
        </trans-unit>
        <trans-unit id="2bb31b06521f7f1a31052bea36561e3ebec1375c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;unwrap()&lt;/code&gt; will return a &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt;&lt;/a&gt; result if the engine determines that there is not enough destination buffer space available. Applications should call &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; and compare that value with the space available in the destination buffer, enlarging the buffer if necessary. Similarly, if &lt;code&gt;unwrap()&lt;/code&gt; were to return a &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt;&lt;/a&gt;, the application should call &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; to ensure that the source buffer has enough room to hold a record (enlarging if necessary), and then obtain more inbound data.</source>
          <target state="translated">例如，如果引擎确定没有足够的目标缓冲区可用空间，则 &lt;code&gt;unwrap()&lt;/code&gt; 将返回&lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt; &lt;/a&gt;结果。应用程序应调用&lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt;并将该值与目标缓冲区中的可用空间进行比较，并在必要时扩大缓冲区。同样，如果 &lt;code&gt;unwrap()&lt;/code&gt; 返回&lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt; &lt;/a&gt;，则应用程序应调用&lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;以确保源缓冲区有足够的空间来保存记录（必要时进行放大），然后获取更多入站数据。</target>
        </trans-unit>
        <trans-unit id="2a3db823fd5d154379db38330c70c6aa05d95a7b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;unwrap()&lt;/code&gt; will return a &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt;&lt;/a&gt; result if the engine determines that there is not enough destination buffer space available. Applications should call &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; and compare that value with the space available in the destination buffer, enlarging the buffer if necessary. Similarly, if &lt;code&gt;unwrap()&lt;/code&gt; were to return a &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt;&lt;/a&gt;, the application should call &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; to ensure that the source buffer has enough room to hold a record (enlarging if necessary), and then obtain more inbound data.</source>
          <target state="translated">例如，如果引擎确定没有足够的目标缓冲区可用空间，则 &lt;code&gt;unwrap()&lt;/code&gt; 将返回&lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt; &lt;/a&gt;结果。应用程序应调用&lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt;并将该值与目标缓冲区中的可用空间进行比较，并在必要时扩大缓冲区。同样，如果 &lt;code&gt;unwrap()&lt;/code&gt; 返回&lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt; &lt;/a&gt;，则应用程序应调用&lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;以确保源缓冲区有足够的空间来保存记录（必要时进行放大），然后获取更多入站数据。</target>
        </trans-unit>
        <trans-unit id="3427a048cebb7d267538d0ecbaae0369b4a34189" translate="yes" xml:space="preserve">
          <source>For example, January 1, 1998 is a Thursday. If &lt;code&gt;
 getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;
 getMinimalDaysInFirstWeek()&lt;/code&gt; is 4 (ISO 8601 standard compatible setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar year 1997. If, however, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt;, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three days of 1998 then are part of week 53 of 1997 and their week year is 1997.</source>
          <target state="translated">例如，1998年1月1日是星期四。如果 &lt;code&gt; getFirstDayOfWeek()&lt;/code&gt; 为 &lt;code&gt;MONDAY&lt;/code&gt; ,而 &lt;code&gt; getMinimalDaysInFirstWeek()&lt;/code&gt; 为4（ISO 8601标准兼容设置），则1998年的第1周从1997年12月29日开始，到1998年1月4日结束。最后三天的年份是1998年但是，如果 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 是 &lt;code&gt;SUNDAY&lt;/code&gt; ，则1998年的第1周从1998年1月4日开始，到1998年1月10日结束；1998年的前三天是1997年第53周的一部分，而它们的一周年份是1997年。</target>
        </trans-unit>
        <trans-unit id="1998d630e1504268351aa6615083ecf8974433fd" translate="yes" xml:space="preserve">
          <source>For example, January 1, 1998 is a Thursday. If &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4 (ISO 8601 standard compatible setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar year 1997. If, however, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt;, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three days of 1998 then are part of week 53 of 1997 and their week year is 1997.</source>
          <target state="translated">例如，1998年1月1日是星期四。如果 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 为 &lt;code&gt;MONDAY&lt;/code&gt; 并且 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 为4（ISO 8601标准兼容设置），则1998年的第1周从1997年12月29日开始，到1998年1月4日结束。最后三天的年是1998年。但是，如果 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 是 &lt;code&gt;SUNDAY&lt;/code&gt; ，则1998年的第1周从1998年1月4日开始，到1998年1月10日结束。 1998年的前三天是1997年第53周的一部分，而一周是1997年。</target>
        </trans-unit>
        <trans-unit id="e092825d8d7d24993000ffbf9f66dd544c8f8c1a" translate="yes" xml:space="preserve">
          <source>For example, Paris is one hour ahead of Greenwich/UTC in winter and two hours ahead in summer. The &lt;code&gt;ZoneId&lt;/code&gt; instance for Paris will reference two &lt;code&gt;ZoneOffset&lt;/code&gt; instances - a &lt;code&gt;+01:00&lt;/code&gt; instance for winter, and a &lt;code&gt;+02:00&lt;/code&gt; instance for summer.</source>
          <target state="translated">例如，巴黎冬季比格林威治/ UTC提前一小时，夏季比格林威治/ UTC早两个小时。巴黎的 &lt;code&gt;ZoneId&lt;/code&gt; 实例将引用两个 &lt;code&gt;ZoneOffset&lt;/code&gt; 实例- 冬季为 &lt;code&gt;+01:00&lt;/code&gt; 实例，夏季为 &lt;code&gt;+02:00&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="d688f4f440475c5a1db8e0e10b800e36113df212" translate="yes" xml:space="preserve">
          <source>For example, TimeZone.getTimeZone(&quot;GMT-8&quot;).getID() returns &quot;GMT-08:00&quot;.</source>
          <target state="translated">例如,TimeZone.getTimeZone(&quot;GMT-8&quot;).getID()返回 &quot;GMT-08:00&quot;。</target>
        </trans-unit>
        <trans-unit id="57c7ca5a012c91a082608be74e8403d76eb6feca" translate="yes" xml:space="preserve">
          <source>For example, a 3-banded &lt;code&gt;Raster&lt;/code&gt; might have the following transformation applied to each pixel in order to invert the second band of the &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">例如，三波段 &lt;code&gt;Raster&lt;/code&gt; 可能将以下变换应用于每个像素，以反转 &lt;code&gt;Raster&lt;/code&gt; 的第二波段。</target>
        </trans-unit>
        <trans-unit id="fe9f6aeedfb8de865524def4fbb728eedaecd29c" translate="yes" xml:space="preserve">
          <source>For example, a Start TLS extended request class would need to know how to process a Start TLS extended response. It does this by creating a class that implements ExtendedResponse.</source>
          <target state="translated">例如,一个Start TLS扩展请求类需要知道如何处理Start TLS扩展响应。它通过创建一个实现ExtendedResponse的类来实现。</target>
        </trans-unit>
        <trans-unit id="0c39f664631a0cf28a49a0e35b1cefa452e0a0bb" translate="yes" xml:space="preserve">
          <source>For example, a base value of &lt;code&gt;1980&lt;/code&gt; and a width of &lt;code&gt;2&lt;/code&gt; will have valid values from &lt;code&gt;1980&lt;/code&gt; to &lt;code&gt;2079&lt;/code&gt;. During parsing, the text &lt;code&gt;&quot;12&quot;&lt;/code&gt; will result in the value &lt;code&gt;2012&lt;/code&gt; as that is the value within the range where the last two characters are &quot;12&quot;. By contrast, parsing the text &lt;code&gt;&quot;1915&quot;&lt;/code&gt; will result in the value &lt;code&gt;1915&lt;/code&gt;.</source>
          <target state="translated">例如，基本值 &lt;code&gt;1980&lt;/code&gt; 和宽度 &lt;code&gt;2&lt;/code&gt; 将具有从 &lt;code&gt;1980&lt;/code&gt; 到 &lt;code&gt;2079&lt;/code&gt; 的有效值。在解析期间，文本 &lt;code&gt;&quot;12&quot;&lt;/code&gt; 将得出值 &lt;code&gt;2012&lt;/code&gt; ，因为该值在最后两个字符为&amp;ldquo; 12&amp;rdquo;的范围内。相比之下，解析文本 &lt;code&gt;&quot;1915&quot;&lt;/code&gt; 将得到值 &lt;code&gt;1915&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66c71f404fe84e7574fa1935e3403b27fa6ab778" translate="yes" xml:space="preserve">
          <source>For example, a bean which supports named properties would have a two argument method signature for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; for a property:</source>
          <target state="translated">例如，支持命名属性的bean将具有两个参数的方法签名，用于为属性添加 &lt;code&gt;PropertyChangeListener&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="42cb1eb4764ec3ddad58273862c1d25cfa5133d2" translate="yes" xml:space="preserve">
          <source>For example, a caller can invoke &lt;code&gt;trySetAccessible&lt;/code&gt; on a &lt;code&gt;Method&lt;/code&gt; object for a private instance method &lt;code&gt;p.T::privateMethod&lt;/code&gt; to suppress the checks for Java language access control when the &lt;code&gt;Method&lt;/code&gt; is invoked. If &lt;code&gt;p.T&lt;/code&gt; class is in a different module to the caller and package &lt;code&gt;p&lt;/code&gt; is open to at least the caller's module, the code below successfully sets the &lt;code&gt;accessible&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">例如，呼叫者可以调用 &lt;code&gt;trySetAccessible&lt;/code&gt; 一个对 &lt;code&gt;Method&lt;/code&gt; 对象私有的实例方法 &lt;code&gt;p.T::privateMethod&lt;/code&gt; 的时候打压Java语言访问控制的检查 &lt;code&gt;Method&lt;/code&gt; 被调用。如果 &lt;code&gt;p.T&lt;/code&gt; 类位于与调用者不同的模块中，并且包 &lt;code&gt;p&lt;/code&gt; 至少对调用者的模块开放，则下面的代码将成功将 &lt;code&gt;accessible&lt;/code&gt; 标志设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f98bd693b65418b7676311d076cc95cc65256ecb" translate="yes" xml:space="preserve">
          <source>For example, a caller might bind a printer object with some printer-related attributes.</source>
          <target state="translated">例如,调用者可能会用一些与打印机相关的属性绑定一个打印机对象。</target>
        </trans-unit>
        <trans-unit id="6d94c61f647d454a1fa4c444b818c29312b4a2a0" translate="yes" xml:space="preserve">
          <source>For example, a factory might use the BER encoded data in basic control and return an instance of a VirtualListReplyControl.</source>
          <target state="translated">例如,工厂可能会在基本控制中使用BER编码的数据,并返回一个VirtualListReplyControl的实例。</target>
        </trans-unit>
        <trans-unit id="5f4c82aa3549e686137815bb739d3a70a2ae3334" translate="yes" xml:space="preserve">
          <source>For example, a field with the value &lt;code&gt;0.5&lt;/code&gt; annotated by this annotation, should be interpreted as &lt;code&gt;50%&lt;/code&gt; and rendered in a graphical user interface with a percentage sign to avoid confusion with &lt;code&gt;0.005%&lt;/code&gt;.</source>
          <target state="translated">例如，此注释所注释的值为 &lt;code&gt;0.5&lt;/code&gt; 的字段应解释为 &lt;code&gt;50%&lt;/code&gt; ,并在带有百分比符号的图形用户界面中呈现，以避免与 &lt;code&gt;0.005%&lt;/code&gt; 混淆。</target>
        </trans-unit>
        <trans-unit id="3fa59bf2661efe7c994e38c7d7b8d6548f8749dc" translate="yes" xml:space="preserve">
          <source>For example, a key set of a &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is a concurrent source. A Spliterator created from the source reports a characteristic of &lt;code&gt;CONCURRENT&lt;/code&gt;.</source>
          <target state="translated">例如，&lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;的键集是并发源。从源创建的分隔器报告 &lt;code&gt;CONCURRENT&lt;/code&gt; 的特征。</target>
        </trans-unit>
        <trans-unit id="f3bf09d65d1b744736bfff4d727827c030a90735" translate="yes" xml:space="preserve">
          <source>For example, a plugin constructor can call this method to register a listener to listen to the &lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt;&lt;code&gt;connectionState&lt;/code&gt;&lt;/a&gt; property changes and the listener will be added to the &lt;a href=&quot;jconsolecontext#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;&lt;code&gt;JConsoleContext&lt;/code&gt;&lt;/a&gt; object when it is available.</source>
          <target state="translated">例如，插件构造函数可以调用此方法来注册侦听器以侦听&lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt; &lt;code&gt;connectionState&lt;/code&gt; &lt;/a&gt;属性的更改，并且该侦听器将在可用时添加到&lt;a href=&quot;jconsolecontext#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt; &lt;code&gt;JConsoleContext&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="b126924e79c2834f2d9a043c26ae9dc7d8a62dfd" translate="yes" xml:space="preserve">
          <source>For example, a provider may supply a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; that implements</source>
          <target state="translated">例如，提供者可以提供实现的 &lt;code&gt;CipherSpi&lt;/code&gt; 的子类</target>
        </trans-unit>
        <trans-unit id="3a588ecb609a8731396bc6e7d6ee6ce1237d9150" translate="yes" xml:space="preserve">
          <source>For example, after the following code is executed:</source>
          <target state="translated">例如,执行以下代码后。</target>
        </trans-unit>
        <trans-unit id="2267a27b43c9dd4b60e4328d79e5f67cbcbd0a30" translate="yes" xml:space="preserve">
          <source>For example, an MBean representing an application's configuration could have attributes representing the different configuration items. Reading the &lt;code&gt;CacheSize&lt;/code&gt; attribute would return the current value of that item. Writing it would update the item, potentially changing the behavior of the running application. An operation such as &lt;code&gt;save&lt;/code&gt; could store the current configuration persistently. A notification such as &lt;code&gt;ConfigurationChangedNotification&lt;/code&gt; could be sent every time the configuration is changed.</source>
          <target state="translated">例如，代表应用程序配置的MBean可以具有代表不同配置项的属性。读取 &lt;code&gt;CacheSize&lt;/code&gt; 属性将返回该项目的当前值。编写它会更新项目，可能会更改正在运行的应用程序的行为。 &lt;code&gt;save&lt;/code&gt; 等操作可以持久存储当前配置。每次更改 &lt;code&gt;ConfigurationChangedNotification&lt;/code&gt; 都可以发送诸如ConfigurationChangedNotification之类的通知。</target>
        </trans-unit>
        <trans-unit id="6bec37e50bd07a7b9a1146826f2b4add33836ad5" translate="yes" xml:space="preserve">
          <source>For example, an address type could be &quot;BSD Printer Address&quot;, which specifies that it is an address to be used with the BSD printing protocol. Its contents could be the machine name identifying the location of the printer server that understands this protocol.</source>
          <target state="translated">例如,地址类型可以是 &quot;BSD打印机地址&quot;,它指定了它是与BSD打印协议一起使用的地址。它的内容可以是机器名称,确定了解该协议的打印机服务器的位置。</target>
        </trans-unit>
        <trans-unit id="95e1d5796d48a176413567e598e8ec0c386d451c" translate="yes" xml:space="preserve">
          <source>For example, an annotation whose type is meta-annotated with &lt;code&gt;@Target(ElementType.FIELD)&lt;/code&gt; may only be written as a modifier for a field declaration.</source>
          <target state="translated">例如，类型为 &lt;code&gt;@Target(ElementType.FIELD)&lt;/code&gt; 进行元注释的注释只能写为字段声明的修饰符。</target>
        </trans-unit>
        <trans-unit id="1a2148da4efe014a9df975d69808a41981018913" translate="yes" xml:space="preserve">
          <source>For example, an annotation whose type is meta-annotated with &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; may be written on the type of a field (or within the type of the field, if it is a nested, parameterized, or array type), and may also appear as a modifier for, say, a class declaration.</source>
          <target state="translated">例如，可以在字段的类型上（或如果在嵌套，参数化或数组类型中，则在字段的类型之内 &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; 写入其类型使用@Target（ElementType.TYPE_USE）进行元注释的注释，并且也可能作为类声明的修饰符出现。</target>
        </trans-unit>
        <trans-unit id="e3d7fa5f16112c607e685e5e651f88ca7e56d2d8" translate="yes" xml:space="preserve">
          <source>For example, an application could create a network class loader to download class files from a server. Sample code might look like:</source>
          <target state="translated">例如,一个应用程序可以创建一个网络类加载器来从服务器下载类文件。示例代码可能是这样的:</target>
        </trans-unit>
        <trans-unit id="52bfe2a8d638a77e4e3824130d95a5f8a374d5d7" translate="yes" xml:space="preserve">
          <source>For example, an application or library gets a SASL client by doing something like:</source>
          <target state="translated">例如,一个应用程序或库通过做这样的事情来获得一个SASL客户端。</target>
        </trans-unit>
        <trans-unit id="1828960382a974d4643dd826be7d24df87a13a41" translate="yes" xml:space="preserve">
          <source>For example, an implementation of the &lt;a href=&quot;../../text/spi/dateformatprovider&quot;&gt;&lt;code&gt;DateFormatProvider&lt;/code&gt;&lt;/a&gt; class should take the form of a jar file which contains the file:</source>
          <target state="translated">例如，&lt;a href=&quot;../../text/spi/dateformatprovider&quot;&gt; &lt;code&gt;DateFormatProvider&lt;/code&gt; &lt;/a&gt;类的实现应采用包含以下文件的jar文件的形式：</target>
        </trans-unit>
        <trans-unit id="c4504425379be6e57446a265c161123e2f772abb" translate="yes" xml:space="preserve">
          <source>For example, an instance of &lt;a href=&quot;concurrent/copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; is an immutable source. A Spliterator created from the source reports a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt;.</source>
          <target state="translated">例如，&lt;a href=&quot;concurrent/copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt;的实例是不可变的源。从源创建的 &lt;code&gt;IMMUTABLE&lt;/code&gt; 报告IMMUTABLE的特征。</target>
        </trans-unit>
        <trans-unit id="4d64ae9863fdb213ccc2efe6d6e0617a30bbaa25" translate="yes" xml:space="preserve">
          <source>For example, an instance of &lt;code&gt;gYear&lt;/code&gt; can be created invoking this factory with &lt;code&gt;month&lt;/code&gt; and &lt;code&gt;day&lt;/code&gt; parameters set to &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例如，可以使用将 &lt;code&gt;month&lt;/code&gt; 和 &lt;code&gt;day&lt;/code&gt; 参数设置为&lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; 的&lt;/a&gt;工厂来调用 &lt;code&gt;gYear&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="eebff7ebeaf954ec4ab1a27b1905b35bb41b2bae" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;code&gt;ScrollPane.setScrollPosition&lt;/code&gt; and then &lt;code&gt;getScrollPosition&lt;/code&gt; may return an incorrect value if the original request has not yet been processed.</source>
          <target state="translated">例如，如果尚未处理原始请求，则先调用 &lt;code&gt;ScrollPane.setScrollPosition&lt;/code&gt; ，然后再调用 &lt;code&gt;getScrollPosition&lt;/code&gt; 可能会返回不正确的值。</target>
        </trans-unit>
        <trans-unit id="c49493292c987a394b19f8ed522472d06c5c2f95" translate="yes" xml:space="preserve">
          <source>For example, configuration data for a simple keystore domain comprising three keystores is shown below:</source>
          <target state="translated">例如,一个简单的keystore域的配置数据包括三个keystore,如下图所示。</target>
        </trans-unit>
        <trans-unit id="99107e117c2889e51b14699fb5352bf8f38f4d15" translate="yes" xml:space="preserve">
          <source>For example, consider &lt;code&gt;builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2);&lt;/code&gt; The year is a variable width parse of between 1 and 19 digits. The month is a fixed width parse of 2 digits. Because these were appended to the same builder immediately after one another, the year parser will reserve two digits for the month to parse. Thus, the text '201106' will correctly parse to a year of 2011 and a month of 6. Without adjacent value parsing, the year would greedily parse all six digits and leave nothing for the month.</source>
          <target state="translated">例如，考虑 &lt;code&gt;builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2);&lt;/code&gt; 年是1到19位数字之间的可变宽度解析。月份是2位数的固定宽度解析。由于这些是紧接彼此后附加到同一生成器的，因此年份解析器将为要保留的月份保留两位数字。因此，文本&amp;ldquo; 201106&amp;rdquo;将正确地解析为2011年和6月份。如果没有相邻的值解析，则该年份将贪婪地解析所有六个数字，并且该月没有任何内容。</target>
        </trans-unit>
        <trans-unit id="4eb27e173bb555deeaace6ea758fa2e284bad81e" translate="yes" xml:space="preserve">
          <source>For example, consider a builder setup as &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()&lt;/code&gt;. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.</source>
          <target state="translated">例如，将构建器设置视为 &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()&lt;/code&gt; 。在格式化期间，仅当可以从日期时间获得分钟值时，才输出分钟。解析期间，无论分钟是否存在，输入都会成功解析。</target>
        </trans-unit>
        <trans-unit id="bd8dd1ddf4f32aeb5b0a11f4fe5fb43881c7c42d" translate="yes" xml:space="preserve">
          <source>For example, consider a builder setup as &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)&lt;/code&gt;. The optional section ends automatically at the end of the builder. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.</source>
          <target state="translated">例如，将构建器设置视为 &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)&lt;/code&gt; 。可选部分在构建器的结尾处自动结束。在格式化期间，仅当可以从日期时间获得分钟的值时，才会输出分钟。在解析期间，无论分钟是否存在，输入都会成功解析。</target>
        </trans-unit>
        <trans-unit id="2ef221f9f647dba2a0421f5ea02960bcddf562fa" translate="yes" xml:space="preserve">
          <source>For example, consider a formatter that parses the year, followed by an optional month, with a further optional day-of-month. Using such a formatter would require the calling code to check whether a full date, year-month or just a year had been parsed. This method can be used to default the month and day-of-month to a sensible value, such as the first of the month, allowing the calling code to always get a date.</source>
          <target state="translated">例如,考虑一个格式化器,它可以解析年,然后是一个可选的月,再加上一个可选的月日。使用这样的格式化程序需要调用代码检查是否解析了完整的日期、年-月或只是一年。这个方法可以用来将月和月日默认为一个合理的值,比如月1日,让调用代码总是得到一个日期。</target>
        </trans-unit>
        <trans-unit id="08a27a201770a8b8829db90b4ec6af7aee1a054b" translate="yes" xml:space="preserve">
          <source>For example, consider a time-zone where the spring DST cutover means that the local times 01:00 to 01:59 occur twice changing from offset +02:00 to +01:00.</source>
          <target state="translated">例如,考虑一个时区,春季DST切变意味着当地时间01:00到01:59发生两次从偏移+02:00到+01:00的变化。</target>
        </trans-unit>
        <trans-unit id="502bf92ccc45e1f0f6974f47520f50019d3995f1" translate="yes" xml:space="preserve">
          <source>For example, consider a time-zone, such as 'Europe/Paris', where the Autumn DST cutover means that the local times 02:00 to 02:59 occur twice changing from offset +02:00 in summer to +01:00 in winter.</source>
          <target state="translated">例如,考虑一个时区,如 &quot;欧洲/巴黎&quot;,秋季夏令时转换意味着当地时间02:00至02:59发生两次变化,从夏季的偏移+02:00到冬季的+01:00。</target>
        </trans-unit>
        <trans-unit id="2d42880f23c0e646f2d4e506ad0e04510090d6f3" translate="yes" xml:space="preserve">
          <source>For example, consider adding a period of one day and a duration of one day to 18:00 on the evening before a daylight savings gap. The &lt;code&gt;Period&lt;/code&gt; will add the conceptual day and result in a &lt;code&gt;ZonedDateTime&lt;/code&gt; at 18:00 the following day. By contrast, the &lt;code&gt;Duration&lt;/code&gt; will add exactly 24 hours, resulting in a &lt;code&gt;ZonedDateTime&lt;/code&gt; at 19:00 the following day (assuming a one hour DST gap).</source>
          <target state="translated">例如，考虑在夏令时之前的晚上将1天的期限和1天的持续时间添加到晚上18:00。该 &lt;code&gt;Period&lt;/code&gt; 将增加概念性一天，结果在 &lt;code&gt;ZonedDateTime&lt;/code&gt; 18:00次日。相比之下， &lt;code&gt;Duration&lt;/code&gt; 将恰好增加24小时，从而在 &lt;code&gt;ZonedDateTime&lt;/code&gt; 的19:00 产生ZonedDateTime（假设DST间隔为一小时）。</target>
        </trans-unit>
        <trans-unit id="68df5296d7673eca3d6b63955d031bc849454994" translate="yes" xml:space="preserve">
          <source>For example, consider the following in Spanish:</source>
          <target state="translated">例如,考虑以下西班牙语的内容:</target>
        </trans-unit>
        <trans-unit id="7cb5a4cf14b5c96f0ad5dede731407c75cf7f15a" translate="yes" xml:space="preserve">
          <source>For example, consider the text &quot;abc&quot;. TextHitInfo.trailing(1) corresponds to the right side of the 'b' in the text.</source>
          <target state="translated">例如,考虑文本 &quot;abc&quot;。TextHitInfo.trailing(1)对应于文本中'b'的右侧。</target>
        </trans-unit>
        <trans-unit id="4af7bb1c185aedbecaa994ec6f7728a83767bcac" translate="yes" xml:space="preserve">
          <source>For example, duration of one month normalizes to 31 days given the start time instance &quot;July 8th 2003, 17:40:32&quot;.</source>
          <target state="translated">例如,给定开始时间实例 &quot;2003年7月8日,17:40:32&quot;,一个月的持续时间正常化为31天。</target>
        </trans-unit>
        <trans-unit id="9f37546673d9f0750b6986e9d6915ec5ac72652f" translate="yes" xml:space="preserve">
          <source>For example, even though a value might be a Java String object, its directory syntax might be &quot;Printable String&quot; or &quot;Telephone Number&quot;. Or a value might be a byte array, and its directory syntax is &quot;JPEG&quot; or &quot;Certificate&quot;. For example, if this attribute's syntax is &quot;JPEG&quot;, this method would return the syntax definition for &quot;JPEG&quot;.</source>
          <target state="translated">例如,尽管一个值可能是一个Java字符串对象,但它的目录语法可能是 &quot;可打印字符串 &quot;或 &quot;电话号码&quot;。或者一个值可能是一个字节数组,其目录语法是 &quot;JPEG &quot;或 &quot;证书&quot;。例如,如果这个属性的语法是 &quot;JPEG&quot;,这个方法就会返回 &quot;JPEG &quot;的语法定义。</target>
        </trans-unit>
        <trans-unit id="9ce595e1a571880b369b3dfa35a7aa34a29c458b" translate="yes" xml:space="preserve">
          <source>For example, for dynamically-computed call site, a the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors.)</source>
          <target state="translated">例如，对于动态计算的呼叫站点，第一个参数可以是 &lt;code&gt;Object&lt;/code&gt; 而不是 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; ，返回类型也可以是 &lt;code&gt;Object&lt;/code&gt; 而不是 &lt;code&gt;CallSite&lt;/code&gt; 。 （请注意，堆叠参数的类型和数量将引导方法的合法种类限制为适当类型的静态方法和构造函数。）</target>
        </trans-unit>
        <trans-unit id="a1b86776e44cd97bbaf6958da2a1af7a82be3f3e" translate="yes" xml:space="preserve">
          <source>For example, for dynamically-computed call site, the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors.)</source>
          <target state="translated">例如，对于动态计算的呼叫站点，第一个参数可以是 &lt;code&gt;Object&lt;/code&gt; 而不是 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; ，返回类型也可以是 &lt;code&gt;Object&lt;/code&gt; 而不是 &lt;code&gt;CallSite&lt;/code&gt; 。 （请注意，堆叠参数的类型和数量将引导方法的合法种类限制为适当类型的静态方法和构造函数。）</target>
        </trans-unit>
        <trans-unit id="74a4d26cb6efe1f523aa46724f8fb96f7856600d" translate="yes" xml:space="preserve">
          <source>For example, for the Java type &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">例如，对于Java类型 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="24ffbeae9f0f48649ff9382de5a91c3902e5591e" translate="yes" xml:space="preserve">
          <source>For example, given a beanName of &quot;x.y&quot;, Beans.instantiate would first try to read a serialized object from the resource &quot;x/y.ser&quot; and if that failed it would try to load the class &quot;x.y&quot; and create an instance of that class.</source>
          <target state="translated">例如,给定一个 &quot;x.y &quot;的beanName,Beans.instantiate将首先尝试从资源 &quot;x/y.ser &quot;中读取一个序列化对象,如果失败,它将尝试加载 &quot;x.y &quot;类,并创建一个该类的实例。</target>
        </trans-unit>
        <trans-unit id="35d92376d82e73bb63b8e40f940e5ec4a077d198" translate="yes" xml:space="preserve">
          <source>For example, given a date in May, the following are output:</source>
          <target state="translated">例如,给定5月的某个日期,输出如下。</target>
        </trans-unit>
        <trans-unit id="ecda29c3f3147c74316769a89dd8f6fe868f7043" translate="yes" xml:space="preserve">
          <source>For example, given a date that is a Wednesday, the following are output:</source>
          <target state="translated">例如,给定一个日期是星期三,输出如下。</target>
        </trans-unit>
        <trans-unit id="c965f7a5f41ce80f1a25cbd34c8d47aad5df9f54" translate="yes" xml:space="preserve">
          <source>For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to calculate tallest person in each city:</source>
          <target state="translated">例如，给定 &lt;code&gt;Person&lt;/code&gt; 流，以计算每个城市中的最高人员：</target>
        </trans-unit>
        <trans-unit id="b713374a02cb786860f1fc8ec9775898d60b3245" translate="yes" xml:space="preserve">
          <source>For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to calculate the longest last name of residents in each city:</source>
          <target state="translated">例如，给定 &lt;code&gt;Person&lt;/code&gt; 流，以计算每个城市中居民的最长姓氏：</target>
        </trans-unit>
        <trans-unit id="7e31c382624c9d6b1c417bd25fa1df6a1652aebf" translate="yes" xml:space="preserve">
          <source>For example, here is a ManagedBlocker based on a ReentrantLock:</source>
          <target state="translated">例如,这里是一个基于ReentrantLock的ManagedBlocker。</target>
        </trans-unit>
        <trans-unit id="82156eae8fb0fc5dde9fadba753d71470b6abeef" translate="yes" xml:space="preserve">
          <source>For example, here is an initial version of a class that uses divide-by-two recursive decomposition to divide work into single pieces (leaf tasks). Even when work is split into individual calls, tree-based techniques are usually preferable to directly forking leaf tasks, because they reduce inter-thread communication and improve load balancing. In the recursive case, the second of each pair of subtasks to finish triggers completion of its parent (because no result combination is performed, the default no-op implementation of method &lt;code&gt;onCompletion&lt;/code&gt; is not overridden). A static utility method sets up the base task and invokes it (here, implicitly using the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">例如，这是该类的初始版本，该类使用&amp;ldquo;二分法&amp;rdquo;递归分解将工作划分为多个部分（叶任务）。即使将工作分为多个单独的调用，基于树的技术通常也比直接分叉叶任务更可取，因为它们减少了线程间的通信并改善了负载平衡。在递归情况下，每对子任务中的第二个要完成的任务触发其父对象的完成（因为未执行任何结果组合，因此不会覆盖方法 &lt;code&gt;onCompletion&lt;/code&gt; 的默认无操作实现）。静态实用程序方法设置并调用基本任务（在此，使用&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;隐式地）。</target>
        </trans-unit>
        <trans-unit id="18b23dc8445eab9aeb0ac59b00c49b4df2c79b88" translate="yes" xml:space="preserve">
          <source>For example, here is an initial version of a utility method that uses divide-by-two recursive decomposition to divide work into single pieces (leaf tasks). Even when work is split into individual calls, tree-based techniques are usually preferable to directly forking leaf tasks, because they reduce inter-thread communication and improve load balancing. In the recursive case, the second of each pair of subtasks to finish triggers completion of their parent (because no result combination is performed, the default no-op implementation of method &lt;code&gt;onCompletion&lt;/code&gt; is not overridden). The utility method sets up the root task and invokes it (here, implicitly using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;). It is straightforward and reliable (but not optimal) to always set the pending count to the number of child tasks and call &lt;code&gt;
 tryComplete()&lt;/code&gt; immediately before returning.</source>
          <target state="translated">例如，这是实用程序方法的初始版本，该方法使用&amp;ldquo;二分法&amp;rdquo;递归分解将工作划分为多个部分（叶任务）。即使将工作分为多个单独的调用，基于树的技术通常也比直接分支叶任务更可取，因为它们减少了线程间的通信并改善了负载平衡。在递归情况下，每对子任务中的第二个要完成时触发它们的父任务的完成（因为未执行任何结果组合，因此不会覆盖方法 &lt;code&gt;onCompletion&lt;/code&gt; 的默认无操作实现）。实用程序方法设置并调用根任务（在这里，隐式使用&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;）。直接将待处理的计数始终设置为子任务的数量，并在返回之前立即调用 &lt;code&gt; tryComplete()&lt;/code&gt; 是直接且可靠的（但不是最佳方法）。</target>
        </trans-unit>
        <trans-unit id="85e275d8300f52d19c548442729a421b90979a34" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;baseName&lt;/code&gt; is &lt;code&gt;&quot;baseName&quot;&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt;, then &lt;code&gt;&quot;baseName_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; is returned. If the given locale is &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt;, then &lt;code&gt;&quot;baseName_en&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">例如，如果 &lt;code&gt;baseName&lt;/code&gt; 为 &lt;code&gt;&quot;baseName&quot;&lt;/code&gt; 且 &lt;code&gt;locale&lt;/code&gt; 为 &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt; ，则返回 &lt;code&gt;&quot;baseName_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; 。如果给定的语言环境是 &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; ，则返回 &lt;code&gt;&quot;baseName_en&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae5e4a94ee896495a820fe44097fd53ab44491bb" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;baseName&lt;/code&gt; is &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; then the resource bundle name of &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; of &lt;code&gt;Locale(&quot;ja&quot;, &quot;&quot;, &quot;XX&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; could be &lt;code&gt;
 &quot;p.resources.ja.Bundle_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; and &lt;code&gt;&quot;p.resources.Bundle_en&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">例如，如果 &lt;code&gt;baseName&lt;/code&gt; 的是 &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; ，则资源包的名称 &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; 的 &lt;code&gt;Locale(&quot;ja&quot;, &quot;&quot;, &quot;XX&quot;)&lt;/code&gt; 和 &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; 可以是 &lt;code&gt; &quot;p.resources.ja.Bundle_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;p.resources.Bundle_en&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e94ed48679a1350002fbfba72ed6d70a0774deb8" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; is a provider of the &lt;code&gt;JavaCompiler&lt;/code&gt; tool then its jar file would contain the file &lt;code&gt;
 META-INF/services/javax.tools.JavaCompiler&lt;/code&gt;. This file would contain the single line:</source>
          <target state="translated">例如，如果 &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; 是 &lt;code&gt;JavaCompiler&lt;/code&gt; 工具的提供者，则其jar文件将包含文件 &lt;code&gt; META-INF/services/javax.tools.JavaCompiler&lt;/code&gt; 。该文件将包含单行：</target>
        </trans-unit>
        <trans-unit id="830d8126196c337be8d88ddce1630721ca654641" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; is a provider of the &lt;code&gt;JavaCompiler&lt;/code&gt; tool then its jar file would contain the file &lt;code&gt;META-INF/services/javax.tools.JavaCompiler&lt;/code&gt;. This file would contain the single line:</source>
          <target state="translated">例如，如果 &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; 是 &lt;code&gt;JavaCompiler&lt;/code&gt; 工具的提供者，则其jar文件将包含文件 &lt;code&gt;META-INF/services/javax.tools.JavaCompiler&lt;/code&gt; 。该文件将包含单行：</target>
        </trans-unit>
        <trans-unit id="3a67cf7851c6b086e93044a3d3dddc5b85bcbeab" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;from&lt;/code&gt; was located at bank number 2, program number 11, remapping causes that bank and program location to be occupied instead by &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">例如，如果 &lt;code&gt;from&lt;/code&gt; 位于在银行数2，节目号11，重映射的原因在于银行和节目位置要由代替占用 &lt;code&gt;to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="899a0fe3dc85838c3957e2652979a348ab972b1e" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4, then the first week of January 1998 is Sunday, January 4 through Saturday, January 10. These days have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 1. Thursday, January 1 through Saturday, January 3 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 0. If &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is changed to 3, then January 1 through January 3 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 1.</source>
          <target state="translated">例如，如果 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 为 &lt;code&gt;SUNDAY&lt;/code&gt; 且 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 为4，则1998年1月的第一周为1月4日星期日至1月10日星期六。这些天的 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 为1。从1月1日星期四至1月星期六。 3的 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 为0。如果 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 更改为3，则1月1日至1月3日的 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 为1。</target>
        </trans-unit>
        <trans-unit id="cb253ab77f0e4e443fb7be6278c680bfc999539d" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;z&lt;/code&gt; refers to a string buffer object whose current contents are &lt;code&gt;&quot;start&quot;&lt;/code&gt;, then the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string buffer to contain &lt;code&gt;&quot;startle&quot;&lt;/code&gt;, whereas &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string buffer to contain &lt;code&gt;&quot;starlet&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，如果 &lt;code&gt;z&lt;/code&gt; 指向当前内容为 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 的字符串缓冲区对象，则方法调用 &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; 将导致字符串缓冲区包含 &lt;code&gt;&quot;startle&quot;&lt;/code&gt; &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; &amp;rdquo;，而z.insert（4，&amp;ldquo; le&amp;rdquo;）将更改字符串缓冲区以包含 &lt;code&gt;&quot;starlet&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e17dfa1bfe4e57090ded791b7e9e279a25dffa9a" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;z&lt;/code&gt; refers to a string builder object whose current contents are &quot;&lt;code&gt;start&lt;/code&gt;&quot;, then the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string builder to contain &quot;&lt;code&gt;startle&lt;/code&gt;&quot;, whereas &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string builder to contain &quot;&lt;code&gt;starlet&lt;/code&gt;&quot;.</source>
          <target state="translated">例如，如果 &lt;code&gt;z&lt;/code&gt; 指字符串生成器对象，其当前内容是&amp;ldquo; &lt;code&gt;start&lt;/code&gt; &amp;rdquo;，则该方法调用 &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; 将导致字符串生成器含有&amp;ldquo; &lt;code&gt;startle&lt;/code&gt; &amp;rdquo;，而 &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; 将更改字符串生成器以包含&amp;ldquo; &lt;code&gt;starlet&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="547c3c9ef6a5b6ebe0e6555d8b1a531ba67282a4" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;MouseListener&lt;/code&gt; has been added to a component, or &lt;code&gt;enableEvents(AWTEvent.MOUSE_EVENT_MASK)&lt;/code&gt; has been invoked, then all the events defined by &lt;code&gt;MouseListener&lt;/code&gt; are dispatched to the component. On the other hand, if a &lt;code&gt;MouseMotionListener&lt;/code&gt; has not been added and &lt;code&gt;enableEvents&lt;/code&gt; has not been invoked with &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt;, then mouse motion events are not dispatched to the component. Instead the mouse motion events are dispatched to the first ancestors that has enabled mouse motion events.</source>
          <target state="translated">例如，如果将 &lt;code&gt;MouseListener&lt;/code&gt; 添加到组件中，或者已调用 &lt;code&gt;enableEvents(AWTEvent.MOUSE_EVENT_MASK)&lt;/code&gt; ，则 &lt;code&gt;MouseListener&lt;/code&gt; 定义的所有事件都将分派给该组件。另一方面，如果尚未添加 &lt;code&gt;MouseMotionListener&lt;/code&gt; ,并且尚未使用 &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt; 调用 &lt;code&gt;enableEvents&lt;/code&gt; ，则不会将鼠标动作事件调度到该组件。而是将鼠标动作事件调度到已启用鼠标动作事件的第一个祖先。</target>
        </trans-unit>
        <trans-unit id="710d856edbf8bf84aeb5220900f3b61fda35b993" translate="yes" xml:space="preserve">
          <source>For example, if a Language Priority List consists of two language ranges, &lt;code&gt;&quot;zh-Hant-TW&quot;&lt;/code&gt; and &lt;code&gt;&quot;en-US&quot;&lt;/code&gt;, in prioritized order, lookup method progressively searches the language tags below in order to find the best matching language tag.</source>
          <target state="translated">例如，如果语言优先级列表按优先级顺序由 &lt;code&gt;&quot;zh-Hant-TW&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;en-US&quot;&lt;/code&gt; 两个语言范围组成，则查找方法将逐步搜索以下语言标签，以找到最匹配的语言标签。</target>
        </trans-unit>
        <trans-unit id="53695bf5cdd86be952751803915692383845fafa" translate="yes" xml:space="preserve">
          <source>For example, if a URI and local name were obtained from an element defined with &amp;lt;xyz:foo xmlns:xyz=&quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;, then the Qualified Name would be &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. Note that the prefix is lost.</source>
          <target state="translated">例如，如果从使用&amp;lt;xyz：foo xmlns：xyz =&amp;ldquo; http://xyz.foo.com/yada/baz.html&amp;rdquo; /&amp;gt;定义的元素获取URI和本地名称，则合格名称为&amp;ldquo; {http://xyz.foo.com/yada/baz.html}foo&amp;rdquo;。请注意，前缀会丢失。</target>
        </trans-unit>
        <trans-unit id="c282276491a44688232676e097fd20aa874468e4" translate="yes" xml:space="preserve">
          <source>For example, if a URI and local name were obtained from an element defined with &amp;lt;xyz:foo xmlns:xyz=&quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;, then the qualified name would be &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. Note that no prefix is used.</source>
          <target state="translated">例如，如果从&amp;lt;xyz：foo xmlns：xyz =&amp;ldquo; http://xyz.foo.com/yada/baz.html&amp;rdquo; /&amp;gt;定义的元素中获取URI和本地名称，则限定名称为&amp;ldquo; {http://xyz.foo.com/yada/baz.html}foo&amp;rdquo;。请注意，不使用前缀。</target>
        </trans-unit>
        <trans-unit id="37ee5516da7948e7d83ec435b55ced0c950b2636" translate="yes" xml:space="preserve">
          <source>For example, if a response header instance contains one key &quot;HeaderName&quot; with two values &quot;value1 and value2&quot; then this object is output as two header lines:</source>
          <target state="translated">例如,如果一个响应头实例包含一个键 &quot;HeaderName&quot;,有两个值 &quot;value1和value2&quot;,那么这个对象就会输出两行头。</target>
        </trans-unit>
        <trans-unit id="d721c1b03d9d14a9e4cf807cebbec792a07dec1f" translate="yes" xml:space="preserve">
          <source>For example, if a target class defines:</source>
          <target state="translated">例如,如果一个目标类定义了。</target>
        </trans-unit>
        <trans-unit id="c4ddb7bd9c556e0ea81e6d434c0f8f6fb2342bb1" translate="yes" xml:space="preserve">
          <source>For example, if a user's Language Priority List consists of five language ranges (&lt;code&gt;&quot;zh&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;en&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt;, and &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt;), the newly generated Language Priority List which is customized using the above map example will consists of &lt;code&gt;&quot;zh&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-Hans&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-Hans-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;en&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt;, and &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，如果用户的语言优先级列表由五个语言范围（ &lt;code&gt;&quot;zh&quot;&lt;/code&gt; ， &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; ， &lt;code&gt;&quot;en&quot;&lt;/code&gt; ， &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt; ）组成，则新生成的语言优先级列表将使用上述地图示例进行自定义，将由 &lt;code&gt;&quot;zh&quot;&lt;/code&gt; ， &lt;code&gt;&quot;zh-Hans&quot;&lt;/code&gt; ， &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; ， &lt;code&gt;&quot;zh-Hans-CN&quot;&lt;/code&gt; ， &lt;code&gt;&quot;en&quot;&lt;/code&gt; ， &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dccca141c8e739b24a4309512cb89730110c45cb" translate="yes" xml:space="preserve">
          <source>For example, if one adds two keys &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(!a.equals(b) &amp;amp;&amp;amp; a.compareTo(b) == 0)&lt;/code&gt; to a sorted set that does not use an explicit comparator, the second &lt;code&gt;add&lt;/code&gt; operation returns false (and the size of the sorted set does not increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equivalent from the sorted set's perspective.</source>
          <target state="translated">例如，如果将两个键 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 相加，使得 &lt;code&gt;(!a.equals(b) &amp;amp;&amp;amp; a.compareTo(b) == 0)&lt;/code&gt; 到不使用显式比较器的排序集中，则第二个 &lt;code&gt;add&lt;/code&gt; 操作返回false （并且排序集的大小不会增加），因为从排序集的角度来看， &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 是等效的。</target>
        </trans-unit>
        <trans-unit id="9281b71706921b868196d03b533cffbd112d303a" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="translated">例如，如果 &lt;code&gt;JMXServiceURL&lt;/code&gt; 为：</target>
        </trans-unit>
        <trans-unit id="8b529e25ea8f5209f163d42a160cb2fc30151d43" translate="yes" xml:space="preserve">
          <source>For example, if the Cipher is initialized for decryption, the CipherInputStream will attempt to read in data and decrypt them, before returning the decrypted data.</source>
          <target state="translated">例如,如果Cipher被初始化为解密,CipherInputStream将尝试读取数据并解密它们,然后再返回解密后的数据。</target>
        </trans-unit>
        <trans-unit id="7724368f3e485ffdfec604e01e07ff3df51b34fc" translate="yes" xml:space="preserve">
          <source>For example, if the Gregorian change date is January 10, 1970 and the date of this &lt;code&gt;GregorianCalendar&lt;/code&gt; is January 20, 1970, the actual minimum value of the &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; field is 10 because the previous date of January 10, 1970 is December 27, 1996 (in the Julian calendar). Therefore, December 28, 1969 to January 9, 1970 don't exist.</source>
          <target state="translated">例如，如果公历更改日期为1970年1月10日，并且此 &lt;code&gt;GregorianCalendar&lt;/code&gt; 日历的日期为1970年1月20日，则 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 字段的实际最小值为10，因为1970年1月10日的上一个日期为1996年12月27日（在儒略历中）。因此，从1969年12月28日到1970年1月9日不存在。</target>
        </trans-unit>
        <trans-unit id="e8447515f016fd7e843ce62844c4f2eb71755b43" translate="yes" xml:space="preserve">
          <source>For example, if the an element is removed from it's parent, this method should report that the parent changed and provide an ElementChange implementation that describes the change to the parent. If the child element removed had children, these elements do not need to be reported as removed.</source>
          <target state="translated">例如,如果一个元素从它的父元素中被移除,这个方法应该报告父元素发生了变化,并提供一个ElementChange实现来描述父元素的变化。如果被移除的子元素有子元素,这些元素不需要报告为被移除。</target>
        </trans-unit>
        <trans-unit id="33aa87758d6fb8746e61cd5b9e96eee72ff67fdd" translate="yes" xml:space="preserve">
          <source>For example, if the cipher is initialized for encryption, the CipherOutputStream will attempt to encrypt data before writing out the encrypted data.</source>
          <target state="translated">例如,如果密码被初始化为加密,CipherOutputStream将在写出加密数据之前尝试加密数据。</target>
        </trans-unit>
        <trans-unit id="1479475ea5c9bec50119b10a7a4c2d86c208fd36" translate="yes" xml:space="preserve">
          <source>For example, if the first day-of-week is Sunday, then that will have the value 1, with other days ranging from Monday as 2 to Saturday as 7.</source>
          <target state="translated">例如,如果一周的第一天是周日,那么它的值是1,其他的日子从周一是2到周六是7。</target>
        </trans-unit>
        <trans-unit id="b4895bff52e5cdcffa088092aeb0f239bdd75672" translate="yes" xml:space="preserve">
          <source>For example, if the first mouse button is pressed, events are sent in the following order:</source>
          <target state="translated">例如,如果第一个鼠标按钮被按下,事件按以下顺序发送。</target>
        </trans-unit>
        <trans-unit id="a2f2eb4c48388118ea43438f47cc5002b3188b1b" translate="yes" xml:space="preserve">
          <source>For example, if the following is specified in the property:</source>
          <target state="translated">例如,如果在属性中指定了以下内容。</target>
        </trans-unit>
        <trans-unit id="9a6f20f96d154000d074240aaa31c798fdc07419" translate="yes" xml:space="preserve">
          <source>For example, if the fully-qualified name of the class that implements &lt;code&gt;java.awt.im.spi.InputMethodDesciptor&lt;/code&gt; for the &lt;em&gt;Foo&lt;/em&gt; input method is &lt;code&gt;com.sun.ime.FooInputMethodDescriptor&lt;/code&gt;, the file &lt;code&gt;META-INF/services/java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; contains a line:</source>
          <target state="translated">例如，如果为&lt;em&gt;Foo&lt;/em&gt;输入法实现 &lt;code&gt;java.awt.im.spi.InputMethodDesciptor&lt;/code&gt; 的类的标准名称是 &lt;code&gt;com.sun.ime.FooInputMethodDescriptor&lt;/code&gt; ，则文件 &lt;code&gt;META-INF/services/java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; 包含一行：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0d7d62e74d7435814a6cf38d36bfaaf109d9a51" translate="yes" xml:space="preserve">
          <source>For example, if the given &lt;code&gt;baseName&lt;/code&gt; is &quot;Messages&quot; and the given &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt;, then a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Locale&lt;/code&gt;s:</source>
          <target state="translated">例如，如果给定 &lt;code&gt;baseName&lt;/code&gt; 的是&amp;ldquo;消息&amp;rdquo;和给定的 &lt;code&gt;locale&lt;/code&gt; 为 &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt; ，则 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;Locale&lt;/code&gt; S：</target>
        </trans-unit>
        <trans-unit id="60cd652c0516c6edb966a6f2150f2e358c4fe8b3" translate="yes" xml:space="preserve">
          <source>For example, if the list() is returning only a partial answer, the corresponding exception would be PartialResultException. list() would first return a NamingEnumeration. When the last of the results has been returned by the NamingEnumeration's next(), invoking hasMore() would result in PartialResultException being thrown.</source>
          <target state="translated">例如,如果list()只返回了部分答案,对应的异常就是PartialResultException,list()会先返回一个NamingEnumeration。当最后一个结果被NamingEnumeration的next()返回后,调用hasMore()将导致PartialResultException被抛出。</target>
        </trans-unit>
        <trans-unit id="cf271c5db83413140525b967e8a237980c46cf6f" translate="yes" xml:space="preserve">
          <source>For example, if the mask is &lt;code&gt;'(###) ###-####'&lt;/code&gt;, the current value is &lt;code&gt;'(415) 555-1212'&lt;/code&gt;, and &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; is true &lt;code&gt;stringToValue&lt;/code&gt; will return &lt;code&gt;'(415) 555-1212'&lt;/code&gt;. On the other hand, if &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; is false, &lt;code&gt;stringToValue&lt;/code&gt; will return &lt;code&gt;'4155551212'&lt;/code&gt;.</source>
          <target state="translated">例如，如果掩码为 &lt;code&gt;'(###) ###-####'&lt;/code&gt; ，则当前值为 &lt;code&gt;'(415) 555-1212'&lt;/code&gt; ，并且 &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; 为true &lt;code&gt;stringToValue&lt;/code&gt; 将返回 &lt;code&gt;'(415) 555-1212'&lt;/code&gt; （415）555-1212 '。另一方面，如果 &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; 为false，则 &lt;code&gt;stringToValue&lt;/code&gt; 将返回 &lt;code&gt;'4155551212'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="331dbdc8afa3ed2fafd4f2269cdca47bfcf3b063" translate="yes" xml:space="preserve">
          <source>For example, if the scheme id is &quot;ldap&quot;, and the &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; property contains &quot;com.widget:com.wiz.jndi&quot;, the naming manager would attempt to load the following classes until one is successfully instantiated:</source>
          <target state="translated">例如，如果方案标识为&amp;ldquo; ldap&amp;rdquo;，并且 &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; 属性包含&amp;ldquo; com.widget：com.wiz.jndi&amp;rdquo;，则命名管理器将尝试加载以下类，直到成功实例化以下类：</target>
        </trans-unit>
        <trans-unit id="9946384c3fd6b072df324bd1293690a1c0583c54" translate="yes" xml:space="preserve">
          <source>For example, if the selection is being updated in response to a user drag, this property can be set to &lt;code&gt;true&lt;/code&gt; when the drag is initiated and set to &lt;code&gt;false&lt;/code&gt; when the drag is finished. During the drag, listeners receive events with a &lt;code&gt;valueIsAdjusting&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;. At the end of the drag, when the change is finalized, listeners receive an event with the value set to &lt;code&gt;false&lt;/code&gt;. Listeners can use this pattern if they wish to update only when a change has been finalized.</source>
          <target state="translated">例如，如果响应于用户拖动而更新选择，则可在启动拖动时将此属性设置为 &lt;code&gt;true&lt;/code&gt; ，并在拖动完成时将该属性设置为 &lt;code&gt;false&lt;/code&gt; 。在拖动过程中，侦听器会收到一个 &lt;code&gt;valueIsAdjusting&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; 的事件。拖动结束时，更改完成后，侦听器将收到一个事件，其值设置为 &lt;code&gt;false&lt;/code&gt; 。如果侦听器只希望在更改完成后才希望更新，则可以使用此模式。</target>
        </trans-unit>
        <trans-unit id="5a5af4fc040f0ce0de3df6b5ef5d4bd424a6f4cf" translate="yes" xml:space="preserve">
          <source>For example, if the setting descriptor represents a percentage, then &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; hints to a client that a value of &quot;0.5&quot; is formatted as &quot;50%&quot;.</source>
          <target state="translated">例如，如果设置描述符表示百分比，则 &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; 向客户端提示&amp;ldquo; 0.5&amp;rdquo;的值格式为&amp;ldquo; 50％&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d410392dee140daf0f08572b9afdeaf55f6469ad" translate="yes" xml:space="preserve">
          <source>For example, if the user presses &lt;b&gt;button 1&lt;/b&gt; followed by &lt;b&gt;button 2&lt;/b&gt;, and then releases them in the same order, the following sequence of events is generated:</source>
          <target state="translated">例如，如果用户按下&lt;b&gt;按钮1&lt;/b&gt;，随后&lt;b&gt;按钮2&lt;/b&gt;，然后释放它们以相同的顺序，将生成的事件的序列如下：</target>
        </trans-unit>
        <trans-unit id="46297070dbcf189b984984a0a199e305142ec624" translate="yes" xml:space="preserve">
          <source>For example, if the val is &quot;Sue, Grabbit and Runn&quot;, the escaped value returned by this method is &quot;Sue\, Grabbit and Runn&quot;.</source>
          <target state="translated">例如,如果val是 &quot;Sue,Grabbit和Runn&quot;,那么这个方法返回的转义值就是 &quot;Sue,Grabbit和Runn&quot;。</target>
        </trans-unit>
        <trans-unit id="4bd1055cc9f89a1e5bd1d53415f67354b34766c2" translate="yes" xml:space="preserve">
          <source>For example, if the value descriptor's type is &lt;code&gt;float&lt;/code&gt; and the event value is &lt;code&gt;0.5f&lt;/code&gt;, a content type of &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; hints to a client that the value is a percentage and that it should be rendered as &lt;code&gt;&quot;50%&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，如果值描述符的类型为 &lt;code&gt;float&lt;/code&gt; 且事件值为 &lt;code&gt;0.5f&lt;/code&gt; ，则内容类型为 &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; 向客户端提示该值为百分比，并且应将其呈现为 &lt;code&gt;&quot;50%&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1354cf34e1ac70df7295a90262b1d890c1d1c39d" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a &lt;code&gt;GregorianCalendar&lt;/code&gt; and its date is 2005-01-01, then the string representation of the &lt;a href=&quot;#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field would be &quot;January&quot; in the long style in an English locale or &quot;Jan&quot; in the short style. However, no string representation would be available for the &lt;a href=&quot;#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; field, and this method would return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">例如，如果此 &lt;code&gt;Calendar&lt;/code&gt; 为 &lt;code&gt;GregorianCalendar&lt;/code&gt; ,并且日期为2005-01-01，则&lt;a href=&quot;#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;字段的字符串表示形式在英语语言环境中为长样式的&amp;ldquo; January&amp;rdquo;或在短样式中为&amp;ldquo; Jan&amp;rdquo;。但是，没有字符串表示形式可用于&lt;a href=&quot;#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;字段，并且此方法将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d08c542a01363da65f25cae9dcf86b3ab527e74" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a &lt;code&gt;GregorianCalendar&lt;/code&gt; and its date is 2005-01-01, then the string representation of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field would be &quot;January&quot; in the long style in an English locale or &quot;Jan&quot; in the short style. However, no string representation would be available for the &lt;a href=&quot;calendar#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; field, and this method would return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">例如，如果此 &lt;code&gt;Calendar&lt;/code&gt; 为 &lt;code&gt;GregorianCalendar&lt;/code&gt; ,并且日期为2005-01-01，则&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;字段的字符串表示形式在英语语言环境中为长样式的&amp;ldquo; January&amp;rdquo;或在短样式中为&amp;ldquo; Jan&amp;rdquo;。但是，&lt;a href=&quot;calendar#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;字段没有字符串表示形式，并且此方法将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3f8dec20a3958e1902910e524d78edacaf8262f" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;GregorianCalendar&lt;/code&gt;'s date is December 31, 2008 with &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;the ISO 8601 compatible setting&lt;/a&gt;, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while &lt;a href=&quot;#getActualMaximum(int)&quot;&gt;&lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt;&lt;/a&gt; will return 52 for the period: December 31, 2007 to December 28, 2008.</source>
          <target state="translated">例如，如果此 &lt;code&gt;GregorianCalendar&lt;/code&gt; 的日期为2008年12月31日，且&lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;具有ISO 8601兼容设置&lt;/a&gt;，则此方法将在以下期间返回53：2008年12月29日至2010年1月3日，而在该期间&lt;a href=&quot;#getActualMaximum(int)&quot;&gt; &lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt; &lt;/a&gt;将返回52 ：2007年12月31日至2008年12月28日。</target>
        </trans-unit>
        <trans-unit id="3643c6484340ffe26a21c4d8fab930e16ffe032d" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;GregorianCalendar&lt;/code&gt;'s date is December 31, 2008 with &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;the ISO 8601 compatible setting&lt;/a&gt;, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while &lt;a href=&quot;gregoriancalendar#getActualMaximum-int-&quot;&gt;&lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt;&lt;/a&gt; will return 52 for the period: December 31, 2007 to December 28, 2008.</source>
          <target state="translated">例如，如果此 &lt;code&gt;GregorianCalendar&lt;/code&gt; 的日期为2008年12月31日，且&lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;具有ISO 8601兼容设置&lt;/a&gt;，则此方法将在以下期间返回53：2008年12月29日至2010年1月3日，而&lt;a href=&quot;gregoriancalendar#getActualMaximum-int-&quot;&gt; &lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt; &lt;/a&gt;将在该期间返回52 ：2007年12月31日至2008年12月28日。</target>
        </trans-unit>
        <trans-unit id="e16d20b9efdce35bec0d0944cd28ae28c29420bc" translate="yes" xml:space="preserve">
          <source>For example, if this context is named &quot;wiz.com&quot; relative to the initial context, then</source>
          <target state="translated">例如,如果这个上下文相对于初始上下文被命名为 &quot;wiz.com&quot;,那么</target>
        </trans-unit>
        <trans-unit id="23ce10b77d4d60ce2e4667d7daf8fcc5e575e436" translate="yes" xml:space="preserve">
          <source>For example, if you have specified the WIDTH and WEST (X) location the EAST is calculated as WEST + WIDTH. If you instead specified the WIDTH and EAST locations the WEST (X) location is then calculated as EAST - WIDTH.</source>
          <target state="translated">例如,如果您指定了WIDTH和WEST (X)的位置,那么EAST的计算方法就是WEST+WIDTH。如果您指定了WIDTH和EAST位置,那么WEST (X)位置将以EAST-WIDTH计算。</target>
        </trans-unit>
        <trans-unit id="3070fbc0afefe4ba32efdbac515d776b347e33bf" translate="yes" xml:space="preserve">
          <source>For example, if you have two FilePermissions:</source>
          <target state="translated">例如,如果你有两个FilePermissions。</target>
        </trans-unit>
        <trans-unit id="0a4d7501c36e5c5efefa917cb0f7c1e40b482f63" translate="yes" xml:space="preserve">
          <source>For example, in Massachusetts, five time zones west of Greenwich:</source>
          <target state="translated">例如,在马萨诸塞州,格林威治以西的五个时区。</target>
        </trans-unit>
        <trans-unit id="64a75c6e6a5e2cdb362552f912fa2ac36588aead" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-month starts on day-of-month 1, the second aligned-week starts on day-of-month 8, and so on. Thus, day-of-month values 1 to 7 are in aligned-week 1, while day-of-month values 8 to 14 are in aligned-week 2, and so on.</source>
          <target state="translated">例如,在一周为7天的日历系统中,第一个对齐的月周从第1天开始,第二个对齐的周从第8天开始,以此类推。因此,第1至7天的月值在第1天,而第8至14天的月值在第2天,以此类推。</target>
        </trans-unit>
        <trans-unit id="3c9c772cedc41791f8d1cb68769035e91f2f41e3" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-month starts on day-of-month 1, the second aligned-week starts on day-of-month 8, and so on. Within each of these aligned-weeks, the days are numbered from 1 to 7 and returned as the value of this field. As such, day-of-month 1 to 7 will have aligned-day-of-week values from 1 to 7. And day-of-month 8 to 14 will repeat this with aligned-day-of-week values from 1 to 7.</source>
          <target state="translated">例如,在一周为7天的日历系统中,第一个对齐的月周从第1天开始,第二个对齐的周从第8天开始,以此类推。在每一个对齐周中,天数从1到7,并作为这个字段的值返回。因此,月的第1天到第7天将有1到7的对齐周值。而月8到14日将重复上述操作,周日的值从1到7对齐。</target>
        </trans-unit>
        <trans-unit id="f5dda9b2475fff15bbb36c85195a054becb35bb2" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-year starts on day-of-year 1, the second aligned-week starts on day-of-year 8, and so on. Thus, day-of-year values 1 to 7 are in aligned-week 1, while day-of-year values 8 to 14 are in aligned-week 2, and so on.</source>
          <target state="translated">例如,在一周为7天的日历系统中,第一个对齐周从第1天开始,第二个对齐周从第8天开始,以此类推。因此,第1至7天的年值在第1天,而第8至14天的年值在第2天,以此类推。</target>
        </trans-unit>
        <trans-unit id="df0baee2845f9a21e825c757acaf8a692815fac2" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-year starts on day-of-year 1, the second aligned-week starts on day-of-year 8, and so on. Within each of these aligned-weeks, the days are numbered from 1 to 7 and returned as the value of this field. As such, day-of-year 1 to 7 will have aligned-day-of-week values from 1 to 7. And day-of-year 8 to 14 will repeat this with aligned-day-of-week values from 1 to 7.</source>
          <target state="translated">例如,在一周为7天的日历系统中,第一个对齐周从第1天开始,第二个对齐周从第8天开始,以此类推。在每一个对齐的周中,天数从1到7编号,并作为这个字段的值返回。因此,第1年到第7天的周对齐日的值是1到7。而第8至14天将重复上述操作,其星期数为1至7。</target>
        </trans-unit>
        <trans-unit id="667454b51ee160e5f830b2fdf48f69b11def86bc" translate="yes" xml:space="preserve">
          <source>For example, in an instance method the expression:</source>
          <target state="translated">例如,在一个实例方法中,表达式。</target>
        </trans-unit>
        <trans-unit id="83711f22cafdaf4358be276e1bd1b5420f8d198f" translate="yes" xml:space="preserve">
          <source>For example, in progressive JPEG decoding each pass contains updates to a set of coefficients, which would have to be transformed into pixel values and converted to an RGB color space for each pass if listeners are present. If no listeners are present, the coefficients may simply be accumulated and the final results transformed and color converted one time only.</source>
          <target state="translated">例如,在渐进式JPEG解码中,每个通道都包含对一组系数的更新,如果有监听器存在,这些系数必须转化为像素值,并在每个通道中转换为RGB颜色空间。如果没有监听器,则可以简单地累积系数,并只对最终结果进行一次转换和颜色转换。</target>
        </trans-unit>
        <trans-unit id="c1662d32e2f27b7909577fedec74e294858f30bb" translate="yes" xml:space="preserve">
          <source>For example, in the &lt;code&gt;manifest.mf&lt;/code&gt; file:</source>
          <target state="translated">例如，在 &lt;code&gt;manifest.mf&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="1a59ad602d23ec59462a674a66faf3132c7e3c63" translate="yes" xml:space="preserve">
          <source>For example, invoking getObjectInstance() as shown above on a LDAP URL context factory would return a context that can resolve LDAP urls (e.g. &quot;ldap://ldap.wiz.com/o=wiz,c=us&quot;, &quot;ldap://ldap.umich.edu/o=umich,c=us&quot;, ...).</source>
          <target state="translated">例如,在LDAP URL上下文工厂上调用如上所示的getObjectInstance(),将返回一个可以解析LDAP urls的上下文(例如 &quot;ldap://ldap.wiz.com/o=wiz,c=us&quot;,&quot;ldap://ldap.umich.edu/o=umich,c=us&quot;,...)。</target>
        </trans-unit>
        <trans-unit id="977510c92080ba8010d28759c38eb8389f8d2b36" translate="yes" xml:space="preserve">
          <source>For example, it is not generally permissible for one thread to modify a Collection while another thread is iterating over it. In general, the results of the iteration are undefined under these circumstances. Some Iterator implementations (including those of all the general purpose collection implementations provided by the JRE) may choose to throw this exception if this behavior is detected. Iterators that do this are known as</source>
          <target state="translated">例如,一般不允许一个线程在另一个线程对一个Collection进行迭代时修改它。一般来说,在这些情况下,迭代的结果是没有定义的。一些迭代器实现(包括JRE提供的所有通用集合实现的迭代器)如果检测到这种行为,可能会选择抛出这种异常。这样做的迭代器被称为</target>
        </trans-unit>
        <trans-unit id="55a369ef0fe8ebad5b029b1f28bb54b108692dc0" translate="yes" xml:space="preserve">
          <source>For example, launching a process to compare two files and get a boolean if they are identical:</source>
          <target state="translated">例如,启动一个进程来比较两个文件,如果它们是相同的,则得到一个布尔值。</target>
        </trans-unit>
        <trans-unit id="419095da819dea8caeaf54e67c3bbf2bbe849031" translate="yes" xml:space="preserve">
          <source>For example, lenient mode allows the month in the ISO calendar system to be outside the range 1 to 12. For example, month 15 is treated as being 3 months after month 12.</source>
          <target state="translated">例如,宽松模式允许ISO日历系统中的月份在1至12的范围之外。例如,第15个月被视为第12个月之后的3个月。</target>
        </trans-unit>
        <trans-unit id="9260a232005f2151adc172f87bb59f3c1c47b1d2" translate="yes" xml:space="preserve">
          <source>For example, lets say you wanted to create an action to insert a table into the body. The parentTag would be HTML.Tag.BODY, addTag would be HTML.Tag.TABLE, and the string could be something like &amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;.</source>
          <target state="translated">例如，假设您要创建一个动作以将表格插入到正文中。parentTag将为HTML.Tag.BODY，addTag将为HTML.Tag.TABLE，字符串可能类似于&amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; &amp;lt;/ td&amp;gt; &amp;lt;/ tr&amp;gt; &amp;lt;/ table&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="a1b8d9519a762fcc4900410f219bae25bde25134" translate="yes" xml:space="preserve">
          <source>For example, passing in April and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.</source>
          <target state="translated">例如,在4月和第31天通过将抛出一个例外,因为任何一年都不可能有4月31日。相反,在2月29日通过是允许的,因为该月日有时是有效的。</target>
        </trans-unit>
        <trans-unit id="95a9ab686c164d231a3c13b53e175a3015e71b35" translate="yes" xml:space="preserve">
          <source>For example, passing in month 4 (April) and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.</source>
          <target state="translated">例如,在第4个月(4月)和第31天通过会产生一个例外,因为任何一年都不可能有4月31日。相反,在2月29日通过是允许的,因为该月日有时是有效的。</target>
        </trans-unit>
        <trans-unit id="17c293c7e39e8e3b727ae44a1a1381c381faf03b" translate="yes" xml:space="preserve">
          <source>For example, pressing the Shift key will cause a KEY_PRESSED event with a VK_SHIFT keyCode, while pressing the 'a' key will result in a VK_A keyCode. After the 'a' key is released, a KEY_RELEASED event will be fired with VK_A. Separately, a KEY_TYPED event with a keyChar value of 'A' is generated.</source>
          <target state="translated">例如,按Shift键将引起一个带有VK_SHIFT键码的KEY_PRESSED事件,而按'a'键将导致一个VK_A键码。在释放'a'键后,将触发一个带有VK_A的KEY_RELEASED事件。另外,一个keyChar值为'a'的KEY_TYPED事件会被生成。</target>
        </trans-unit>
        <trans-unit id="9a1ab47a4b02f92a0615112e10f6f5e8a8a01d5a" translate="yes" xml:space="preserve">
          <source>For example, querying for the &lt;code&gt;font&lt;/code&gt; property should not return &quot;normal normal normal 14pt/normal Arial, sans-serif&quot;, when &quot;14pt Arial, sans-serif&quot; suffices. (The normals are initial values, and are implied by use of the longhand property.)</source>
          <target state="translated">例如，当&amp;ldquo; 14pt Arial，sans-serif&amp;rdquo;足够时，查询 &lt;code&gt;font&lt;/code&gt; 属性不应返回&amp;ldquo; normal normal normal 14pt / normal Arial，sans-serif&amp;rdquo;。（法线是初始值，通过使用longhand属性来隐含。）</target>
        </trans-unit>
        <trans-unit id="5ece2aad41b9136b32570fffbcf0f35d16e2c7ef" translate="yes" xml:space="preserve">
          <source>For example, resolving year-month and day-of-month in the ISO calendar system using smart mode will ensure that the day-of-month is from 1 to 31, converting any value beyond the last valid day-of-month to be the last valid day-of-month.</source>
          <target state="translated">例如,在ISO日历系统中使用智能模式解析年月和月日,将确保月日从1到31,将超过最后有效月日的任何值转换为最后有效月日。</target>
        </trans-unit>
        <trans-unit id="e8610632f6733c46625ec28b668d9d0958dfcb9b" translate="yes" xml:space="preserve">
          <source>For example, resolving year-month and day-of-month in the ISO calendar system using strict mode will ensure that the day-of-month is valid for the year-month, rejecting invalid values.</source>
          <target state="translated">例如,在ISO日历系统中使用严格模式解析年月日,将确保年月日有效,拒绝无效值。</target>
        </trans-unit>
        <trans-unit id="c2960524da870ffd8c45901d28d87d1b01945cd8" translate="yes" xml:space="preserve">
          <source>For example, subtracting a year each time yield the following:</source>
          <target state="translated">例如,每次减去一年,得到以下结果。</target>
        </trans-unit>
        <trans-unit id="47aabc43dc57e9cc5bf0a224360db057f6055a41" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;list&lt;/code&gt; comprises&lt;code&gt; [t, a, n, k, s]&lt;/code&gt;. After invoking &lt;code&gt;Collections.rotate(list, 1)&lt;/code&gt; (or &lt;code&gt;Collections.rotate(list, -4)&lt;/code&gt;), &lt;code&gt;list&lt;/code&gt; will comprise &lt;code&gt;[s, t, a, n, k]&lt;/code&gt;.</source>
          <target state="translated">例如，假设 &lt;code&gt;list&lt;/code&gt; 包括 &lt;code&gt; [t, a, n, k, s]&lt;/code&gt; 。调用 &lt;code&gt;Collections.rotate(list, 1)&lt;/code&gt; （或 &lt;code&gt;Collections.rotate(list, -4)&lt;/code&gt; ）后， &lt;code&gt;list&lt;/code&gt; 将包含 &lt;code&gt;[s, t, a, n, k]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9ba05200c79cd884e3728c4efa7d1c62535fcce" translate="yes" xml:space="preserve">
          <source>For example, suppose I had a component named JFoo. Suppose I then registered this component with the NimbusLookAndFeel in this manner:</source>
          <target state="translated">例如,假设我有一个名为JFoo的组件。假设我然后用NimbusLookAndFeel的方式注册这个组件。</target>
        </trans-unit>
        <trans-unit id="b56f40200256403e55b2d08f2b4cfa0ac29aa223" translate="yes" xml:space="preserve">
          <source>For example, suppose I have a &lt;code&gt;Painter&lt;/code&gt; implementation that draws a gradient. The gradient goes from white to black. It &quot;stretches&quot; to fill the painted region. Thus, if I use this &lt;code&gt;Painter&lt;/code&gt; to paint a 500 x 500 region, the far left would be black, the far right would be white, and a smooth gradient would be painted between. I could then, without modification, reuse the &lt;code&gt;Painter&lt;/code&gt; to paint a region that is 20x20 in size. This region would also be black on the left, white on the right, and a smooth gradient painted between.</source>
          <target state="translated">例如，假设我有一个绘制渐变的 &lt;code&gt;Painter&lt;/code&gt; 实现。渐变从白色到黑色。它&amp;ldquo;拉伸&amp;rdquo;以填充绘制的区域。因此，如果我使用此 &lt;code&gt;Painter&lt;/code&gt; 绘制500 x 500的区域，则最左边的将为黑色，最右边的将为白色，并在其之间绘制平滑的渐变。然后，我可以不加修改地重用 &lt;code&gt;Painter&lt;/code&gt; 来绘制大小为20x20的区域。该区域在左侧也将是黑色的，在右侧将是白色的，并且它们之间将绘制平滑的渐变。</target>
        </trans-unit>
        <trans-unit id="86dbe4bd6065b4cb0b731de33bae24d41dbc526b" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener implements &lt;code&gt;ObjectChangeListener&lt;/code&gt; and registers with a &lt;code&gt;EventContext&lt;/code&gt;. Then, if the connection to the server is subsequently broken, the listener will receive a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; and may take some corrective action, such as notifying the user of the application.</source>
          <target state="translated">例如，假设侦听器实现 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 并向 &lt;code&gt;EventContext&lt;/code&gt; 注册。然后，如果随后断开与服务器的连接，则侦听器将收到 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 并可能采取一些纠正措施，例如通知应用程序用户。</target>
        </trans-unit>
        <trans-unit id="5d5c51db318646847151e6b97346f9afc762c064" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener implements &lt;code&gt;ObjectChangeListener&lt;/code&gt; and registers with an &lt;code&gt;EventContext&lt;/code&gt;. Then, if the connection to the server is subsequently broken, the listener will receive a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; and may take some corrective action, such as notifying the user of the application.</source>
          <target state="translated">例如，假设侦听器实现 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 并向 &lt;code&gt;EventContext&lt;/code&gt; 注册。然后，如果到服务器的连接随后断开，则侦听器将收到 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 并可能采取一些纠正措施，例如将应用程序通知用户。</target>
        </trans-unit>
        <trans-unit id="ecccb48383e0235028ba4e42b0ed5977d52f556f" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener makes the following registration:</source>
          <target state="translated">例如,假设一个监听者进行了以下注册。</target>
        </trans-unit>
        <trans-unit id="544466e03cf4e204054f295a7affd3dd6dee5a02" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server sends back a &quot;change ID&quot; control in response to a successful modification. It would supply a class &lt;code&gt;ChangeIDControl&lt;/code&gt; so that the application can use this feature. An application would perform an update, and then try to get the change ID.</source>
          <target state="translated">例如，假设LDAP服务器响应成功的修改发送回&amp;ldquo;更改ID&amp;rdquo;控件。它将提供一个 &lt;code&gt;ChangeIDControl&lt;/code&gt; 类，以便应用程序可以使用此功能。应用程序将执行更新，然后尝试获取更改ID。</target>
        </trans-unit>
        <trans-unit id="06c3623b514eb5cdba5ee8dc296c328e7f84e249" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server supports a &quot;get time&quot; extended operation. It would supply classes such as &lt;code&gt;GetTimeRequest&lt;/code&gt; and &lt;code&gt;GetTimeResponse&lt;/code&gt;, so that applications can use this feature. An application would use these classes as follows:</source>
          <target state="translated">例如，假设LDAP服务器支持&amp;ldquo;获取时间&amp;rdquo;扩展操作。它将提供诸如 &lt;code&gt;GetTimeRequest&lt;/code&gt; 和 &lt;code&gt;GetTimeResponse&lt;/code&gt; 之类的类，以便应用程序可以使用此功能。应用程序将按以下方式使用这些类：</target>
        </trans-unit>
        <trans-unit id="79d99dd15c47ddf1bd0f160d5ec3694f7617029b" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server supports a &quot;signed results&quot; request control, which when sent with a request, asks the server to digitally sign the results of an operation. It would supply a class &lt;code&gt;SignedResultsControl&lt;/code&gt; so that applications can use this feature. An application would use this class as follows:</source>
          <target state="translated">例如，假设LDAP服务器支持&amp;ldquo;签名结果&amp;rdquo;请求控件，该控件随请求一起发送时，要求服务器对操作结果进行数字签名。它将提供一个 &lt;code&gt;SignedResultsControl&lt;/code&gt; 类，以便应用程序可以使用此功能。应用程序将使用此类，如下所示：</target>
        </trans-unit>
        <trans-unit id="be8902c946be1fc9e100cbe20068110411a50507" translate="yes" xml:space="preserve">
          <source>For example, suppose one adds two elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; to an empty &lt;code&gt;TreeSet&lt;/code&gt; with comparator &lt;code&gt;c&lt;/code&gt;. The second &lt;code&gt;add&lt;/code&gt; operation will return true (and the size of the tree set will increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are not equivalent from the tree set's perspective, even though this is contrary to the specification of the &lt;a href=&quot;set#add(E)&quot;&gt;&lt;code&gt;Set.add&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">例如，假设有人将两个元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 相加，使得 &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; 到具有比较器 &lt;code&gt;c&lt;/code&gt; 的空 &lt;code&gt;TreeSet&lt;/code&gt; 中。第二个 &lt;code&gt;add&lt;/code&gt; 操作将返回true（并且树集的大小将增加），因为从树集的角度来看， &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 不相等，即使这与&lt;a href=&quot;set#add(E)&quot;&gt; &lt;code&gt;Set.add&lt;/code&gt; &lt;/a&gt;方法的规范相反。</target>
        </trans-unit>
        <trans-unit id="e6856361217873808048fcc8d8563713fdb9f1e9" translate="yes" xml:space="preserve">
          <source>For example, suppose one adds two elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; to an empty &lt;code&gt;TreeSet&lt;/code&gt; with comparator &lt;code&gt;c&lt;/code&gt;. The second &lt;code&gt;add&lt;/code&gt; operation will return true (and the size of the tree set will increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are not equivalent from the tree set's perspective, even though this is contrary to the specification of the &lt;a href=&quot;set#add-E-&quot;&gt;&lt;code&gt;Set.add&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">例如，假设有人将两个元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 相加，使得 &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; 到带有比较器 &lt;code&gt;c&lt;/code&gt; 的空 &lt;code&gt;TreeSet&lt;/code&gt; 中。第二个 &lt;code&gt;add&lt;/code&gt; 操作将返回true（并且树集的大小将增加），因为从树集的角度来看， &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 不相等，即使这与&lt;a href=&quot;set#add-E-&quot;&gt; &lt;code&gt;Set.add&lt;/code&gt; &lt;/a&gt;方法的规范相反。</target>
        </trans-unit>
        <trans-unit id="b8429399a8ee6dd81aeccd65edca7dd387d5a635" translate="yes" xml:space="preserve">
          <source>For example, suppose the LDAP server supported a 'get time' extended operation. It would supply GetTimeRequest and GetTimeResponse classes. The GetTimeResponse class might look like:</source>
          <target state="translated">例如,假设LDAP服务器支持 &quot;获取时间 &quot;的扩展操作,它将提供GetTimeRequest和GetTimeResponse类。它将提供GetTimeRequest和GetTimeResponse类。GetTimeResponse类可能是这样的。</target>
        </trans-unit>
        <trans-unit id="fdd5ec9d3034278b63d192b66c4021fe19238ac6" translate="yes" xml:space="preserve">
          <source>For example, suppose the LDAP server supported a 'get time' extended operation. It would supply GetTimeRequest and GetTimeResponse classes:</source>
          <target state="translated">例如,假设LDAP服务器支持 &quot;获取时间 &quot;的扩展操作,它将提供GetTimeRequest和GetTimeResponse类。它将提供GetTimeRequest和GetTimeResponse类。</target>
        </trans-unit>
        <trans-unit id="c850829ad67f48ce83d754eaa746b9238fc6f58a" translate="yes" xml:space="preserve">
          <source>For example, suppose the service provider &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; is packaged in a JAR file for the class path. The JAR file will contain a provider-configuration file named:</source>
          <target state="translated">例如，假设服务提供者 &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; 打包在JAR文件中，用于类路径。JAR文件将包含一个提供程序配置文件，名为：</target>
        </trans-unit>
        <trans-unit id="4b7aaba7c594c43cc60d302e8d8ff53dc01af76f" translate="yes" xml:space="preserve">
          <source>For example, suppose there are &lt;code&gt;Module&lt;/code&gt; MBeans, representing modules within an application. A &lt;code&gt;DependsOn&lt;/code&gt; relation type could express the relationship that some modules depend on others, which could be used to determine the order in which the modules are started or stopped. The &lt;code&gt;DependsOn&lt;/code&gt; relation type would have two roles, &lt;code&gt;dependent&lt;/code&gt; and &lt;code&gt;dependedOn&lt;/code&gt;.</source>
          <target state="translated">例如，假设有 &lt;code&gt;Module&lt;/code&gt; MBean，代表应用程序中的模块。一个 &lt;code&gt;DependsOn&lt;/code&gt; 关系类型可以表达的关系，有些模块依赖于他人，这可以用来确定在哪个模块启动或停止的顺序。该 &lt;code&gt;DependsOn&lt;/code&gt; 关系类型将有两个角色， &lt;code&gt;dependent&lt;/code&gt; 和 &lt;code&gt;dependedOn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6851c4e026126d2cadb4456f8c17deadeed95c47" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a FilePermissionCollection in this Permissions object, and it contains one FilePermission that specifies &quot;read&quot; access for all files in all subdirectories of the &quot;/tmp&quot; directory, and another FilePermission that specifies &quot;write&quot; access for all files in the &quot;/tmp/scratch/foo&quot; directory. Then if the &lt;code&gt;implies&lt;/code&gt; method is called with a permission specifying both &quot;read&quot; and &quot;write&quot; access to files in the &quot;/tmp/scratch/foo&quot; directory, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">例如，假设在此Permissions对象中有一个FilePermissionCollection，它包含一个FilePermission指定对&amp;ldquo; / tmp&amp;rdquo;目录的所有子目录中所有文件的&amp;ldquo;读取&amp;rdquo;访问权限，而另一个FilePermission指定对所有文件的&amp;ldquo;写入&amp;rdquo;访问权限在&amp;ldquo; / tmp / scratch / foo&amp;rdquo;目录中。然后，如果使用具有对&amp;ldquo; / tmp / scratch / foo&amp;rdquo;目录中的文件的&amp;ldquo;读取&amp;rdquo;和&amp;ldquo;写入&amp;rdquo;访问权限的权限调用 &lt;code&gt;implies&lt;/code&gt; 方法，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b859271d9922abcaf237d74c6f4004f67d23dfcf" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a module layer where each module is in its own class loader (see &lt;a href=&quot;../lang/modulelayer#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt;). If this &lt;code&gt;ServiceLoader.load&lt;/code&gt; method is invoked to locate providers using any of the class loaders created for the module layer, then it will locate all of the providers in the module layer, irrespective of their defining class loader.</source>
          <target state="translated">例如，假设有一个模块层，其中每个模块都在其自己的类加载器中（请参见&lt;a href=&quot;../lang/modulelayer#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; &lt;/a&gt;）。如果调用此 &lt;code&gt;ServiceLoader.load&lt;/code&gt; 方法以使用为模块层创建的任何类加载器来定位提供程序，则它将在模块层中定位所有提供程序，而不管其定义的类加载器如何。</target>
        </trans-unit>
        <trans-unit id="9c4a3c6accaf2a649faf04567656523f83868294" translate="yes" xml:space="preserve">
          <source>For example, suppose we want to iterate over the files ending with &quot;.java&quot; in a directory:</source>
          <target state="translated">例如,假设我们想遍历一个目录中以&quot;.java &quot;结尾的文件。</target>
        </trans-unit>
        <trans-unit id="05a4d1c5d07862052a8718331187b8f1781335a5" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a class &lt;code&gt;Measure&lt;/code&gt; that consists of a String called &lt;code&gt;units&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt; that is either a &lt;code&gt;long&lt;/code&gt; or a &lt;code&gt;double&lt;/code&gt;. It might look like this:</source>
          <target state="translated">例如，假设你有一个类 &lt;code&gt;Measure&lt;/code&gt; 一个字符串组成所谓的 &lt;code&gt;units&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 要么是一个 &lt;code&gt;long&lt;/code&gt; 或 &lt;code&gt;double&lt;/code&gt; 。它可能看起来像这样：</target>
        </trans-unit>
        <trans-unit id="84544c4734f4c5f5229790515b9195bff2e4d7dd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a horizontal box that contains two fixed-size components. If the box gets extra space, the fixed-size components won't become larger, so where does the extra space go? Without glue, the extra space goes to the right of the second component. If you put glue between the fixed-size components, then the extra space goes there. If you put glue before the first fixed-size component, the extra space goes there, and the fixed-size components are shoved against the right edge of the box. If you put glue before the first fixed-size component and after the second fixed-size component, the fixed-size components are centered in the box.</source>
          <target state="translated">例如,假设你有一个水平的盒子,里面有两个固定尺寸的组件。如果盒子获得额外的空间,固定尺寸的组件不会变大,那么额外的空间会去哪里呢?如果没有胶水,多余的空间就会放到第二个组件的右边。如果你在固定尺寸的组件之间涂上胶水,那么多余的空间就会去那里。如果你在第一个固定尺寸的组件之前涂上胶水,那么多余的空间就会被放在那里,固定尺寸的组件就会被推到盒子的右边缘。如果在第一个固定尺寸的部件前和第二个固定尺寸的部件后涂上胶水,固定尺寸的部件就会被放在盒子的中心位置。</target>
        </trans-unit>
        <trans-unit id="4a2a226a5afd671906af81bfc5026907a68833b6" translate="yes" xml:space="preserve">
          <source>For example, suppose you have an interface like this:</source>
          <target state="translated">例如,假设你有一个这样的界面。</target>
        </trans-unit>
        <trans-unit id="feed7a297ad146234d8242fae2e6875af7601dfd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have two MXBean interfaces like this:</source>
          <target state="translated">例如,假设你有两个MXBean接口是这样的。</target>
        </trans-unit>
        <trans-unit id="4b96eed8b9322570b8d411a7bacaa4906fe3c08d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;IsoFields&lt;/code&gt; class contains the quarter-of-year and day-of-quarter fields. The implementation of this method in that class resolves the two fields plus the &lt;a href=&quot;chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; into a complete &lt;code&gt;LocalDate&lt;/code&gt;. The resolve method will remove all three fields from the map before returning the &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;IsoFields&lt;/code&gt; 类包含&amp;ldquo;季度&amp;rdquo;和&amp;ldquo;季度&amp;rdquo;字段。该方法在该类中的实现将两个字段以及&lt;a href=&quot;chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;解析为一个完整的 &lt;code&gt;LocalDate&lt;/code&gt; 。resolve方法将在返回 &lt;code&gt;LocalDate&lt;/code&gt; 之前从地图中删除所有三个字段。</target>
        </trans-unit>
        <trans-unit id="0b355f8589a768bee7cdd6e2b374f9f88e59b5ef" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt;
      Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</source>
          <target state="translated">例如， &lt;code&gt;TabularType&lt;/code&gt; 用于 &lt;code&gt; Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; 可能与这样的代码来构成：</target>
        </trans-unit>
        <trans-unit id="5b81c7338939efbb5d98eb4eaeb30e317371878a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</source>
          <target state="translated">例如， &lt;code&gt;TabularType&lt;/code&gt; 用于 &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; 可能与这样的代码来构成：</target>
        </trans-unit>
        <trans-unit id="5fbd75fecfcbea62d5180938bfee7d0a96f67fb8" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month always starts at 1. The largest minimum is therefore 1.</source>
          <target state="translated">例如,ISO月日总是从1开始,因此最大的最小值是1。</target>
        </trans-unit>
        <trans-unit id="9954675608ba0d2447d8c70c553ce4908bf6872e" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month always starts at 1. The minimum is therefore 1.</source>
          <target state="translated">例如,ISO的月日总是从1开始,因此最小值是1。</target>
        </trans-unit>
        <trans-unit id="753698f108344c2b6f822295f83686eb7deeb43a" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs from 1 to between 28 and 31. Since there is uncertainty about the maximum value, the range is not fixed. However, for the month of January, the range is always 1 to 31, thus it is fixed.</source>
          <target state="translated">例如,国际标准化组织的月日从1到28和31之间。由于最大值是不确定的,所以这个范围不是固定的。但是,对于1月份,范围总是1至31,因此是固定的。</target>
        </trans-unit>
        <trans-unit id="1825874677c8efec6c434b63e4f9a58ffa2948ba" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs to between 28 and 31 days. The maximum is therefore 31.</source>
          <target state="translated">例如,国际标准化组织的月日在28至31天之间。因此,最长为31天。</target>
        </trans-unit>
        <trans-unit id="6bcb8a8d31e6b5bda8c8a31339caadd463dbafdb" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs to between 28 and 31 days. The smallest maximum is therefore 28.</source>
          <target state="translated">例如,国际标准化组织的月日在28至31天之间。因此,最小的最大值是28天。</target>
        </trans-unit>
        <trans-unit id="3126ea544624f04dc4af914a288e43e4b5e44c06" translate="yes" xml:space="preserve">
          <source>For example, the ISO month-of-year has values from 1 to 12, which fits in an &lt;code&gt;int&lt;/code&gt;. By comparison, ISO nano-of-day runs from 1 to 86,400,000,000,000 which does not fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">例如，ISO年度月份的值从1到12，适合 &lt;code&gt;int&lt;/code&gt; 。相比之下，ISO每日百万分之一从1到86,400,000,000,000，不适合 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="891514d228ba0a680cfae01cc75cb0c878ac816b" translate="yes" xml:space="preserve">
          <source>For example, the Japanese year &quot;Heisei 24&quot; corresponds to ISO year &quot;2012&quot;.</source>
          <target state="translated">例如,日本的 &quot;平成24年 &quot;对应的是ISO年 &quot;2012&quot;。</target>
        </trans-unit>
        <trans-unit id="f057bc50d4f9cbcee2fd03e25db7ad75bc897348" translate="yes" xml:space="preserve">
          <source>For example, the ObjectName instances below:</source>
          <target state="translated">例如,下面的ObjectName实例。</target>
        </trans-unit>
        <trans-unit id="44e96a62da6c4e34494e786a872f8b8a5113b965" translate="yes" xml:space="preserve">
          <source>For example, the Thai Buddhist calendar system divides time into two eras, before and after a single date. By contrast, the Japanese calendar system has one era for the reign of each Emperor.</source>
          <target state="translated">例如,泰国佛教的历法将时间分为两个时代,在一个日期之前和之后。相比之下,日本的历法则是每个天皇在位时有一个时代。</target>
        </trans-unit>
        <trans-unit id="2a2d59c315643a0b3b1942f96a7e22778bf58b94" translate="yes" xml:space="preserve">
          <source>For example, the class below generates unique identifiers local to each thread. A thread's id is assigned the first time it invokes &lt;code&gt;ThreadId.get()&lt;/code&gt; and remains unchanged on subsequent calls.</source>
          <target state="translated">例如，下面的类生成每个线程本地的唯一标识符。线程的ID是在第一次调用 &lt;code&gt;ThreadId.get()&lt;/code&gt; 时分配的，并且在以后的调用中保持不变。</target>
        </trans-unit>
        <trans-unit id="9b4b8c7af567aec1dfe22cdd402ec5ac4a2fe5e6" translate="yes" xml:space="preserve">
          <source>For example, the code . . .</source>
          <target state="translated">例如,代码...</target>
        </trans-unit>
        <trans-unit id="1dd5f7b4ebe0cc41842611a133e002691579b0ee" translate="yes" xml:space="preserve">
          <source>For example, the codesource objects with the following locations and null certificates all imply the codesource with the location &quot;http://java.sun.com/classes/foo.jar&quot; and null certificates:</source>
          <target state="translated">例如,具有以下位置和空证书的代码源对象都意味着具有 &quot;http://java.sun.com/classes/foo.jar &quot;位置和空证书的代码源。</target>
        </trans-unit>
        <trans-unit id="8c4f42dbcf8b2164f2e204cf1d44084d7f59456e" translate="yes" xml:space="preserve">
          <source>For example, the codesource objects with the following locations and null certificates all imply the codesource with the location &quot;http://www.example.com/classes/foo.jar&quot; and null certificates:</source>
          <target state="translated">例如,具有以下位置和空证书的代码源对象都意味着具有 &quot;http://www.example.com/classes/foo.jar &quot;位置和空证书的代码源。</target>
        </trans-unit>
        <trans-unit id="756f8e79ed2bdcf15890e6f3746ee619b529186f" translate="yes" xml:space="preserve">
          <source>For example, the compact number pattern representing millions in German locale can be specified as &lt;code&gt;&quot;{one:0' 'Million other:0' 'Millionen}&quot;&lt;/code&gt;. The &lt;code&gt;count&lt;/code&gt; follows LDML's &lt;a href=&quot;https://unicode.org/reports/tr35/tr35-numbers.html#Language_Plural_Rules&quot;&gt; Language Plural Rules&lt;/a&gt;.</source>
          <target state="translated">例如，可以在德国语言环境中表示百万的紧凑型数字模式可以指定为 &lt;code&gt;&quot;{one:0' 'Million other:0' 'Millionen}&quot;&lt;/code&gt; 。该 &lt;code&gt;count&lt;/code&gt; 如下LDML的&lt;a href=&quot;https://unicode.org/reports/tr35/tr35-numbers.html#Language_Plural_Rules&quot;&gt;语言复数规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9577516c18720a6506a145d0e8f0b0ac70992df8" translate="yes" xml:space="preserve">
          <source>For example, the effect of this option is built in: &lt;code&gt;pack.class.attribute.SourceFile=RUH&lt;/code&gt;.</source>
          <target state="translated">例如，此选项的效果内置于： &lt;code&gt;pack.class.attribute.SourceFile=RUH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8920e276528365953f0968f14c401f25817bbf7a" translate="yes" xml:space="preserve">
          <source>For example, the following action listener</source>
          <target state="translated">例如,下面的动作监听器</target>
        </trans-unit>
        <trans-unit id="af842b0f3fef4c9e26a527cffd159eb564cb80d9" translate="yes" xml:space="preserve">
          <source>For example, the following are valid inputs:</source>
          <target state="translated">例如,以下是有效的输入:</target>
        </trans-unit>
        <trans-unit id="c04d542de8d7b4c4a927f2f1b22e6b4845d556d4" translate="yes" xml:space="preserve">
          <source>For example, the following call registers a callback function that examines the TLS handshake parameters and selects an application protocol name:</source>
          <target state="translated">例如,下面的调用注册了一个回调函数,该函数检查TLS握手参数并选择一个应用协议名称。</target>
        </trans-unit>
        <trans-unit id="3e9548168ee523ea98776ac0d99dc8e2e03140ae" translate="yes" xml:space="preserve">
          <source>For example, the following call will return &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，以下调用将返回 &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="800db53de5ef69ffa1c8bdf9c66fd2ba83b76e33" translate="yes" xml:space="preserve">
          <source>For example, the following call will return a &lt;code&gt;Map&lt;/code&gt; containing &lt;code&gt;&quot;January&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">例如，以下调用将返回包含 &lt;code&gt;&quot;January&quot;&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 到&lt;a href=&quot;../calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; 返回&lt;a href=&quot;../calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;&quot;February&quot;&lt;/code&gt; 到&lt;a href=&quot;../calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; 返回&lt;a href=&quot;../calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; &lt;/a&gt;，依此类推。</target>
        </trans-unit>
        <trans-unit id="ab160cea5fa5d97b5c742b66b19a144cd1be2739" translate="yes" xml:space="preserve">
          <source>For example, the following code fragment returns the runtime &lt;code&gt;Class&lt;/code&gt; descriptor for the class named &lt;code&gt;java.lang.Thread&lt;/code&gt;:</source>
          <target state="translated">例如，以下代码片段返回名为 &lt;code&gt;java.lang.Thread&lt;/code&gt; 的类的运行时 &lt;code&gt;Class&lt;/code&gt; 描述符：</target>
        </trans-unit>
        <trans-unit id="e6fa08051fad1a7c686f1f3704a31cec262ab998" translate="yes" xml:space="preserve">
          <source>For example, the following code fragment specifies that the SQL type &lt;code&gt;ATHLETES&lt;/code&gt; will be mapped to the class &lt;code&gt;Athletes&lt;/code&gt; in the Java programming language. The code fragment retrieves the type map for the &lt;code&gt;Connection
 &lt;/code&gt; object &lt;code&gt;con&lt;/code&gt;, inserts the entry into it, and then sets the type map with the new entry as the connection's type map.</source>
          <target state="translated">例如，以下代码片段指定将SQL类型 &lt;code&gt;ATHLETES&lt;/code&gt; 映射为Java编程语言中的 &lt;code&gt;Athletes&lt;/code&gt; 类。该代码片段为 &lt;code&gt;Connection &lt;/code&gt; 对象 &lt;code&gt;con&lt;/code&gt; 检索类型映射，将条目插入其中，然后将具有新条目的类型映射设置为连接的类型映射。</target>
        </trans-unit>
        <trans-unit id="a576e32ce142dd687d0baaa037ad19f28b0a4f92" translate="yes" xml:space="preserve">
          <source>For example, the following code will create a list of comma-delimited tokens from a string:</source>
          <target state="translated">例如,以下代码将从一个字符串中创建一个以逗号分隔的标记列表。</target>
        </trans-unit>
        <trans-unit id="decb7a755353f013553fca3c806cc1fc507bd702" translate="yes" xml:space="preserve">
          <source>For example, the following code will read a file and return a list of all sequences of characters consisting of seven or more Latin capital letters:</source>
          <target state="translated">例如,下面的代码将读取一个文件,并返回一个由7个或更多拉丁大写字母组成的所有字符序列的列表。</target>
        </trans-unit>
        <trans-unit id="06e4d3fa5fd40c797500d85cae43cf41dec447dd" translate="yes" xml:space="preserve">
          <source>For example, the following image depicts a frame with four text fields of varying widths. Two of these text fields display the predefined text &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，下图描绘了一个框架，其中包含四个宽度可变的文本字段。这些文本字段中的两个显示预定义的文本 &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e735d68b24fa929d7974b81ffd2f14c7e8e3db24" translate="yes" xml:space="preserve">
          <source>For example, the following invokations:</source>
          <target state="translated">例如,以下调用:</target>
        </trans-unit>
        <trans-unit id="ebfa64934fbb8d8c13e300499c0fbfd299c59fe6" translate="yes" xml:space="preserve">
          <source>For example, the following is the comparator order:</source>
          <target state="translated">例如,以下是比较器的顺序。</target>
        </trans-unit>
        <trans-unit id="2e5145fc0b1887c7f338976c09c1b22e0149535b" translate="yes" xml:space="preserve">
          <source>For example, the following might be an implementation of a custom &quot;Indeterminate&quot; state for JProgressBars:</source>
          <target state="translated">例如,以下可能是JProgressBars的自定义 &quot;不确定 &quot;状态的实现。</target>
        </trans-unit>
        <trans-unit id="579d2788523bcba78702221bcf8dfcda1fdb0cd3" translate="yes" xml:space="preserve">
          <source>For example, the following permission grants access to the com.sun.PrivateCredential owned by Subjects which have a com.sun.Principal with the name, &quot;duke&quot;. Note that although this example, as well as all the examples below, do not contain Codebase, SignedBy, or Principal information in the grant statement (for simplicity reasons), actual policy configurations should specify that information when appropriate.</source>
          <target state="translated">例如,以下权限将授予对拥有名称为 &quot;duke &quot;的 com.sun.Principal 的 Subjects 所拥有的 com.sun.PrivateCredential 的访问权限。请注意,虽然此示例以及下面的所有示例在授予声明中不包含 Codebase、SignedBy 或 Principal 信息(出于简单性考虑),但实际策略配置应在适当时指定这些信息。</target>
        </trans-unit>
        <trans-unit id="4be8500e7495aef23b54930b5292f0022824cecd" translate="yes" xml:space="preserve">
          <source>For example, the following picture shows an applet using the flow layout manager (its default layout manager) to position three buttons:</source>
          <target state="translated">例如,下图显示了一个使用流程布局管理器(其默认布局管理器)来定位三个按钮的小程序。</target>
        </trans-unit>
        <trans-unit id="7522e8223fe59cfba16079804d94817adcde32ed" translate="yes" xml:space="preserve">
          <source>For example, the following security policy grants an application in the user's current directory all the permissions required by this module:</source>
          <target state="translated">例如,以下安全策略授予用户当前目录下的应用程序该模块所需的所有权限。</target>
        </trans-unit>
        <trans-unit id="da170e009e37813248dc29ce5b6b7ee536e58d5c" translate="yes" xml:space="preserve">
          <source>For example, the following will parse:</source>
          <target state="translated">例如,以下内容将被解析为:</target>
        </trans-unit>
        <trans-unit id="dfaeb77baccf84c3cc12b85797b2a674e2da2753" translate="yes" xml:space="preserve">
          <source>For example, the following would be correct:</source>
          <target state="translated">例如,下列说法正确的是:</target>
        </trans-unit>
        <trans-unit id="f982d151697783cd09896775b1dfd2a8059c4f1e" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;ConsoleHandler&lt;/code&gt; would be:</source>
          <target state="translated">例如， &lt;code&gt;ConsoleHandler&lt;/code&gt; 的属性为：</target>
        </trans-unit>
        <trans-unit id="d8f931db20e6cd28062e3c50f185c3c6ecce4677" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;FileHandler&lt;/code&gt; would be:</source>
          <target state="translated">例如， &lt;code&gt;FileHandler&lt;/code&gt; 的属性为：</target>
        </trans-unit>
        <trans-unit id="70ee2fbf03d54cbdd60a163f88386cac3ed53cb7" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;MemoryHandler&lt;/code&gt; would be:</source>
          <target state="translated">例如， &lt;code&gt;MemoryHandler&lt;/code&gt; 的属性为：</target>
        </trans-unit>
        <trans-unit id="a1f43cf1f2bf6da316757e63f6b8452206d8f683" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;SocketHandler&lt;/code&gt; would be:</source>
          <target state="translated">例如， &lt;code&gt;SocketHandler&lt;/code&gt; 的属性为：</target>
        </trans-unit>
        <trans-unit id="07d06c623a74187c226038a1ba49eb4b2125ca1b" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;StreamHandler&lt;/code&gt; would be:</source>
          <target state="translated">例如， &lt;code&gt;StreamHandler&lt;/code&gt; 的属性为：</target>
        </trans-unit>
        <trans-unit id="db09fd6c4a0b3f3ccde0e332b40eaa8dd7c8c19b" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getReceiver&lt;/code&gt; is called: if the class &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; exists in the list of installed MIDI device providers, the first &lt;code&gt;Receiver&lt;/code&gt; device with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Receiver&lt;/code&gt; from that provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Receiver&lt;/code&gt; with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; in the list of all devices (as returned by &lt;code&gt;getMidiDeviceInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Receiver&lt;/code&gt; that can be found in the list of all devices is returned. If that fails, too, a &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown.</source>
          <target state="translated">例如，当 &lt;code&gt;getReceiver&lt;/code&gt; 时，值为 &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; 的属性 &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; 将具有以下后果：如果类 &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; 在已安装的MIDI设备提供程序列表中，如果第一个 &lt;code&gt;Receiver&lt;/code&gt; 设备名称为 &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; 则会返回该设备。如果找不到，将返回该提供者的第一个 &lt;code&gt;Receiver&lt;/code&gt; ，而不管其名称如何。如果没有， &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; 所有设备列表中第一个名称为&amp;ldquo; SunMIDI1&amp;rdquo;的 &lt;code&gt;Receiver&lt;/code&gt; （由 &lt;code&gt;getMidiDeviceInfo&lt;/code&gt; 返回））将被返回，或者，如果找不到，将返回在所有设备列表中可以找到的第一个 &lt;code&gt;Receiver&lt;/code&gt; 。如果同样失败，则抛出 &lt;code&gt;MidiUnavailableException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7575a2a6b1ae6067582981f8aa6f22b796df82cf" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getLine&lt;/code&gt; is called requesting a &lt;code&gt;Clip&lt;/code&gt; instance: if the class &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; exists in the list of installed mixer providers, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer of the specified provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Clip&lt;/code&gt; from the first &lt;code&gt;Mixer&lt;/code&gt; with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; in the list of all mixers (as returned by &lt;code&gt;getMixerInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Clip&lt;/code&gt; of the first &lt;code&gt;Mixer&lt;/code&gt; that can be found in the list of all mixers is returned. If that fails, too, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">例如，财产 &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; 中有值 &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; 将产生以下后果时， &lt;code&gt;getLine&lt;/code&gt; 被称为请求 &lt;code&gt;Clip&lt;/code&gt; 实例：如果该类 &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; 存在于已安装的混音器提供程序列表中，将返回第一个名称为 &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; 混音器的第一个 &lt;code&gt;Clip&lt;/code&gt; 。如果找不到，将返回指定提供者的第一个混合器的第一个 &lt;code&gt;Clip&lt;/code&gt; ，无论名称如何。如果不存在，则来自第一个 &lt;code&gt;Mixer&lt;/code&gt; 的第一个 &lt;code&gt;Clip&lt;/code&gt; ，名称为 &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; 将返回所有混合器列表中的（由 &lt;code&gt;getMixerInfo&lt;/code&gt; 返回），或者，如果找不到，将返回所有混合器列表中可以找到的第一个 &lt;code&gt;Mixer&lt;/code&gt; 的第一个 &lt;code&gt;Clip&lt;/code&gt; 。如果同样失败，则抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f54d17b66104630b955178605a2279a2ac88c658" translate="yes" xml:space="preserve">
          <source>For example, this &lt;code&gt;@Target&lt;/code&gt; meta-annotation indicates that the declared type is itself a meta-annotation type. It can only be used on annotation type declarations:</source>
          <target state="translated">例如，此 &lt;code&gt;@Target&lt;/code&gt; 元注释表示所声明的类型本身就是元注释类型。它只能用于注释类型声明：</target>
        </trans-unit>
        <trans-unit id="e89a04f3da4efa728a7469acac726ca3cfa4b865" translate="yes" xml:space="preserve">
          <source>For example, this code allows a user to read a number from &lt;code&gt;System.in&lt;/code&gt;:</source>
          <target state="translated">例如，此代码允许用户从 &lt;code&gt;System.in&lt;/code&gt; 中读取数字：</target>
        </trans-unit>
        <trans-unit id="dc0aeff52d98963e9b52ef9b7492a0f9f8e38a99" translate="yes" xml:space="preserve">
          <source>For example, this method allows the number of days between two dates to be calculated:</source>
          <target state="translated">例如,这种方法可以计算两个日期之间的天数。</target>
        </trans-unit>
        <trans-unit id="52cd17ffbe39b63f68834b0ef711a4383a761739" translate="yes" xml:space="preserve">
          <source>For example, to check if a shaper shapes to Arabic, you would use the following:</source>
          <target state="translated">例如,要检查一个成形器的形状是否为阿拉伯文,你可以使用以下方法。</target>
        </trans-unit>
        <trans-unit id="3063291fbeb8cab7d02fe3b39ad0305adadd4b7d" translate="yes" xml:space="preserve">
          <source>For example, to compute the set of last names of people in each city, where the city names are sorted:</source>
          <target state="translated">例如,要计算每个城市的人的姓氏集,其中城市名称是排序的。</target>
        </trans-unit>
        <trans-unit id="542c0e3ace7d7c931e3fca12ab5e385bf8b8c0c0" translate="yes" xml:space="preserve">
          <source>For example, to compute the set of last names of people in each city:</source>
          <target state="translated">例如,要计算每个城市的人的姓氏集。</target>
        </trans-unit>
        <trans-unit id="f05452af65e15167a37042770e9c5b3da86616ac" translate="yes" xml:space="preserve">
          <source>For example, to convert 10 minutes to milliseconds, use: &lt;code&gt;TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)&lt;/code&gt;</source>
          <target state="translated">例如，要将10分钟转换为毫秒，请使用： &lt;code&gt;TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0d9e251461e5a6e353041a4a4542e479d3f2028" translate="yes" xml:space="preserve">
          <source>For example, to create a &lt;code&gt;MouseListener&lt;/code&gt; that sets the target object's &lt;code&gt;origin&lt;/code&gt; property to the incoming &lt;code&gt;MouseEvent&lt;/code&gt;'s location (that's the value of &lt;code&gt;mouseEvent.getPoint()&lt;/code&gt;) each time a mouse button is pressed, one would write:</source>
          <target state="translated">例如，要创建一个 &lt;code&gt;MouseListener&lt;/code&gt; ，将每次按下鼠标按钮时将目标对象的 &lt;code&gt;origin&lt;/code&gt; 属性设置为传入的 &lt;code&gt;MouseEvent&lt;/code&gt; 的位置（即 &lt;code&gt;mouseEvent.getPoint()&lt;/code&gt; 的值），则将编写：</target>
        </trans-unit>
        <trans-unit id="7c169d1425b0d3d047f986a746865e5bcd17ca63" translate="yes" xml:space="preserve">
          <source>For example, to find the first 10 calling frames, first skipping those frames whose declaring class is in package &lt;code&gt;com.foo&lt;/code&gt;:</source>
          <target state="translated">例如，要查找前10个调用帧，请首先跳过声明类在包 &lt;code&gt;com.foo&lt;/code&gt; 中的那些帧：</target>
        </trans-unit>
        <trans-unit id="81105bd41c2fbf89b34ee447551dfb47d67c897e" translate="yes" xml:space="preserve">
          <source>For example, to identify the &lt;code&gt;SPLIT_PANE&lt;/code&gt;&lt;code&gt;Region&lt;/code&gt; you would use &lt;code&gt;SplitPane&lt;/code&gt;. The following shows a custom &lt;code&gt;SynthStyleFactory&lt;/code&gt; that returns a specific style for split panes:</source>
          <target state="translated">例如，要标识 &lt;code&gt;SPLIT_PANE&lt;/code&gt; &lt;code&gt;Region&lt;/code&gt; ，可以使用 &lt;code&gt;SplitPane&lt;/code&gt; 。下面显示了一个自定义 &lt;code&gt;SynthStyleFactory&lt;/code&gt; ，它为拆分窗格返回特定样式：</target>
        </trans-unit>
        <trans-unit id="039e8b55bb061518d4b6a27396dcc8fc21604cf2" translate="yes" xml:space="preserve">
          <source>For example, to measure how long some code takes to execute:</source>
          <target state="translated">例如,用来衡量一些代码的执行时间。</target>
        </trans-unit>
        <trans-unit id="8064ab890fae301b1c872df07a0c453c310705c9" translate="yes" xml:space="preserve">
          <source>For example, to monitor image uploads to a web server with a separate thread for each upload, an event called File Upload starts when the user uploads a file and ends when the upload is complete. For advanced diagnostics about image uploads, more detailed events are created (for example, Image Read, Image Resize, and Image Write). During these detailed events, other low- level events could occur (for example, Socket Read and File Write).</source>
          <target state="translated">例如,为了监控图像上传到Web服务器,并为每次上传建立一个单独的线程,一个名为File Upload的事件在用户上传文件时开始,并在上传完成时结束。为了对图像上传进行高级诊断,创建了更多的详细事件(例如,图像读取、图像调整大小和图像写入)。在这些详细事件期间,可能会发生其他低级事件(例如,Socket Read和File Write)。</target>
        </trans-unit>
        <trans-unit id="fb09925aecc146e184d9ca3d6ae2de5f80ef10f2" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;
 Person&lt;/code&gt; objects by their last name ignoring case differences,</source>
          <target state="translated">例如，要获得一个 &lt;code&gt;Comparator&lt;/code&gt; ，以比较 &lt;code&gt; Person&lt;/code&gt; 对象的姓氏而忽略大小写差异，</target>
        </trans-unit>
        <trans-unit id="c9d3d4ff8736c7b66d61fc02698ec045f178ad78" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;
 Person&lt;/code&gt; objects by their last name,</source>
          <target state="translated">例如，要获得一个 &lt;code&gt;Comparator&lt;/code&gt; ，比较器将 &lt;code&gt; Person&lt;/code&gt; 对象的姓氏进行比较，</target>
        </trans-unit>
        <trans-unit id="d27c11303b6f84d44156eb74f65cb1fb6557f6f1" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;Person&lt;/code&gt; objects by their last name ignoring case differences,</source>
          <target state="translated">例如，要获得一个 &lt;code&gt;Comparator&lt;/code&gt; ，以比较 &lt;code&gt;Person&lt;/code&gt; 对象的姓氏而忽略大小写差异，</target>
        </trans-unit>
        <trans-unit id="354ab1d14b7fe39532cb8c574202480e62f34ef8" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;Person&lt;/code&gt; objects by their last name,</source>
          <target state="translated">例如，要获得一个 &lt;code&gt;Comparator&lt;/code&gt; ，比较器将 &lt;code&gt;Person&lt;/code&gt; 对象的姓氏进行比较，</target>
        </trans-unit>
        <trans-unit id="8221a33305d40e06cb9be3bf03c846af33b861de" translate="yes" xml:space="preserve">
          <source>For example, to obtain a DOM Document Node:</source>
          <target state="translated">例如,要获得一个DOM文档节点。</target>
        </trans-unit>
        <trans-unit id="d766cb4d571bbdc6c5fbd68fc0b953fc1af8846b" translate="yes" xml:space="preserve">
          <source>For example, to parse an XML value with a DOM parser:</source>
          <target state="translated">例如,用DOM解析器来解析一个XML值。</target>
        </trans-unit>
        <trans-unit id="63b9e3822258c48e3b16d7faa3a5376c66a4942d" translate="yes" xml:space="preserve">
          <source>For example, to print all elements of a &lt;code&gt;Vector&amp;lt;E&amp;gt;&lt;/code&gt;</source>
          <target state="translated">例如，要打印 &lt;code&gt;Vector&amp;lt;E&amp;gt;&lt;/code&gt; 所有元素</target>
        </trans-unit>
        <trans-unit id="edbb747839df6ac31ee4fba787419b796a8f7906" translate="yes" xml:space="preserve">
          <source>For example, to set the sample interval of the CPU Load event to once every second, use the name &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; and the value &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;. If multiple events use the same name, for example if an event class is loaded in multiple class loaders, and differentiation is needed between them, then the name is &lt;code&gt;&quot;56#period&quot;&lt;/code&gt;. The ID for an event is obtained by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getId()&quot;&gt;&lt;code&gt;EventType.getId()&lt;/code&gt;&lt;/a&gt; method and is valid for the Java Virtual Machine (JVM) instance that the event is registered in.</source>
          <target state="translated">例如，要将CPU Load事件的采样间隔设置为每秒一次，请使用名称 &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; 和值 &lt;code&gt;&quot;1 s&quot;&lt;/code&gt; 。如果多个事件使用相同的名称，例如，如果在多个类加载器中加载了一个事件类，并且需要区分它们，则名称为 &lt;code&gt;&quot;56#period&quot;&lt;/code&gt; 。事件的ID是通过调用&lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getId()&quot;&gt; &lt;code&gt;EventType.getId()&lt;/code&gt; &lt;/a&gt;方法获得的，并且对于该事件在其中注册的Java虚拟机（JVM）实例有效。</target>
        </trans-unit>
        <trans-unit id="e9d5df42ba7a06759bf1297e4828fc9f44238ff4" translate="yes" xml:space="preserve">
          <source>For example, to set the sample interval of the CPU Load event to once every second, use the name &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; and the value &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;. If multiple events use the same name, for example if an event class is loaded in multiple class loaders, and differentiation is needed between them, then the name is &lt;code&gt;&quot;56#period&quot;&lt;/code&gt;. The ID for an event is obtained by invoking &lt;a href=&quot;eventtype#getId()&quot;&gt;&lt;code&gt;EventType.getId()&lt;/code&gt;&lt;/a&gt; method and is valid for the Java Virtual Machine instance that the event is registered in.</source>
          <target state="translated">例如，要将CPU Load事件的采样间隔设置为每秒一次，请使用名称 &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; 和值 &lt;code&gt;&quot;1 s&quot;&lt;/code&gt; 。如果多个事件使用相同的名称，例如，如果在多个类加载器中加载了一个事件类，并且需要区分它们，则名称为 &lt;code&gt;&quot;56#period&quot;&lt;/code&gt; 。事件的ID是通过调用&lt;a href=&quot;eventtype#getId()&quot;&gt; &lt;code&gt;EventType.getId()&lt;/code&gt; &lt;/a&gt;方法获得的，并且对于该事件在其中注册的Java虚拟机实例有效。</target>
        </trans-unit>
        <trans-unit id="0507a7d537ae9945a10e6635aaa2418e8fc20e24" translate="yes" xml:space="preserve">
          <source>For example, to sort a collection of &lt;code&gt;String&lt;/code&gt; based on the length and then case-insensitive natural ordering, the comparator can be composed using following code,</source>
          <target state="translated">例如，要根据长度对 &lt;code&gt;String&lt;/code&gt; 的集合进行排序，然后对大小写不敏感的自然顺序进行排序，则可以使用以下代码来组成比较器，</target>
        </trans-unit>
        <trans-unit id="a5496677e05a9fd5dfd0e6a5b8d5d4c7e0a44f20" translate="yes" xml:space="preserve">
          <source>For example, to specify the &quot;host&quot; service use of a forwardable TGT the target permission is specified as follows:</source>
          <target state="translated">例如,要指定可转发TGT的 &quot;主机 &quot;服务用途,目标权限指定如下。</target>
        </trans-unit>
        <trans-unit id="533a0f50bf0b375e4e417e9cacef45695527dd13" translate="yes" xml:space="preserve">
          <source>For example, to specify the permission to access to the TGT to initiate a security context the permission is constructed as follows:</source>
          <target state="translated">例如,要指定访问TGT以启动安全上下文的权限,权限的构造如下。</target>
        </trans-unit>
        <trans-unit id="b342cdb19cfb253b2fc3d5084c2213b875e77218" translate="yes" xml:space="preserve">
          <source>For example, you can align numbers in two ways:</source>
          <target state="translated">例如,你可以用两种方式排列数字。</target>
        </trans-unit>
        <trans-unit id="7fe7b4fb9a2ed77429bfbc46219b1d2c87900bad" translate="yes" xml:space="preserve">
          <source>For example, you can construct a SocketPermission instance as the following:</source>
          <target state="translated">例如,你可以像下面这样构造一个SocketPermission实例。</target>
        </trans-unit>
        <trans-unit id="911931a41db3ff2123e7246a13c4b78a0cf276f7" translate="yes" xml:space="preserve">
          <source>For example, you can print a slide presentation on US letter-sized white paper, double-sided, stapled, 20 copies to make handouts for a talk; and you could print the same slide presentation on US letter-sized transparencies, single-sided, one copy to make the actual slides for the talk.</source>
          <target state="translated">例如,你可以用美国信纸大小的白纸,双面打印,装订成册,20份,制作演讲的讲义;你也可以用美国信纸大小的透明胶片,单面打印,一份,制作演讲的实际幻灯片。</target>
        </trans-unit>
        <trans-unit id="2f85cf8c2987e395efc8c2eac232884781ca0b58" translate="yes" xml:space="preserve">
          <source>For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;BlockingQueue.poll&lt;/code&gt;&lt;/a&gt;) using:</source>
          <target state="translated">例如，您可以使用以下方法实现阻塞 &lt;code&gt;poll&lt;/code&gt; 方法（请参阅&lt;a href=&quot;blockingqueue#poll(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;BlockingQueue.poll&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="b6ac85d9e48f5b4a3d8639df9f4a72b7a35300d5" translate="yes" xml:space="preserve">
          <source>For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;BlockingQueue.poll&lt;/code&gt;&lt;/a&gt;) using:</source>
          <target state="translated">例如，您可以使用以下方法实现阻塞 &lt;code&gt;poll&lt;/code&gt; 方法（请参阅&lt;a href=&quot;blockingqueue#poll-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;BlockingQueue.poll&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="fdcbab4aae2389893f867fa63018aa69e039b2ef" translate="yes" xml:space="preserve">
          <source>For example: com.company.package.classname. The date element is used to indicate the date the source was generated. The date element must follow the ISO 8601 standard. For example the date element would have the following value 2001-07-04T12:08:56.235-0700 which represents 2001-07-04 12:08:56 local time in the U.S. Pacific Time time zone.</source>
          <target state="translated">例如:com.company.package.classname。日期元素用于指示源的生成日期。日期元素必须遵循ISO 8601标准。例如,日期元素的值如下2001-07-04T12:08:56.235-0700,代表美国太平洋时区当地时间2001-07-04 12:08:56。</target>
        </trans-unit>
        <trans-unit id="7e5f4a789a81a7ee9220bb8bdf29a0137643b64b" translate="yes" xml:space="preserve">
          <source>For examples and further information on using button groups see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关使用按钮组的示例和更多信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;如何使用单选按钮&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f48b1839f0d9d7bcb6fda541874914f2e598de29" translate="yes" xml:space="preserve">
          <source>For examples and further information on using button groups see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关使用按钮组的示例和更多信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;如何使用单选按钮&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c717625bd61cd01493fbcc4cadd7d2934e4cec61" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorDiv(int,int)&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;#floorDiv(int,int)&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="278b9a1168df3127c25b5587e0e84a19abe4b0fb" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorDiv(long,long)&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;#floorDiv(long,long)&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1de7cccbbe2af214ee09fe3b941c433108d19943" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorMod(int,int)&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;#floorMod(int,int)&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56727bc3623e0ddfd80f98aae78c7797481c52a2" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorMod(long,long)&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;#floorMod(long,long)&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60d302a6835077ac5f129f7fde727dfa42966be4" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;math#floorDiv-int-int-&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;math#floorDiv-int-int-&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2170f0d8e4fb039d7c4dce593784b3310564d9a" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;math#floorMod-int-int-&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;math#floorMod-int-int-&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a97093b8a6da476bf44b7f54ca0f23866085823d" translate="yes" xml:space="preserve">
          <source>For file objects representing regular files</source>
          <target state="translated">对于代表常规文件的文件对象</target>
        </trans-unit>
        <trans-unit id="107fea67ce4853781cd6165337272b1075f787c3" translate="yes" xml:space="preserve">
          <source>For finer-grained String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更细粒度的String比较，请参阅&lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f44070d7d95f5a7e5a8b0198d911637f271e9cf" translate="yes" xml:space="preserve">
          <source>For finer-grained, locale-sensitive String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更细粒度，对语言环境敏感的String比较，请参阅&lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af275deed54fcb5d94febf308381f0c41ceb385f" translate="yes" xml:space="preserve">
          <source>For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, are recognized.</source>
          <target state="translated">对于格式化， &lt;code&gt;DecimalFormat&lt;/code&gt; 使用从 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 对象中定义的本地化零数字开始的十个连续字符作为数字。对于解析，这些数字以及所有由&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;定义的Unicode十进制数字都将被识别。</target>
        </trans-unit>
        <trans-unit id="bbd0239ac79e980c77f30b8f9af1ba23162cd46a" translate="yes" xml:space="preserve">
          <source>For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, are recognized.</source>
          <target state="translated">对于格式化， &lt;code&gt;DecimalFormat&lt;/code&gt; 使用从 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 对象中定义的本地化零数字开始的十个连续字符作为数字。对于解析，这些数字以及所有由&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;定义的Unicode十进制数字都将被识别。</target>
        </trans-unit>
        <trans-unit id="1ff16dff24bd3a7f7ada71f36fe1fa2079304912" translate="yes" xml:space="preserve">
          <source>For formatting, if the number of pattern letters is 2, the year is truncated to 2 digits; otherwise it is interpreted as a &lt;a href=&quot;#number&quot;&gt;number&lt;/a&gt;.</source>
          <target state="translated">对于格式设置，如果图案字母的数量为2，则年份将被截断为2位；否则，将其解释为&lt;a href=&quot;#number&quot;&gt;数字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddb6fed4a81ca53cc369192aacd8582ee4ce8e0a" translate="yes" xml:space="preserve">
          <source>For formatting, if the offset value from GMT is 0, &lt;code&gt;&quot;Z&quot;&lt;/code&gt; is produced. If the number of pattern letters is 1, any fraction of an hour is ignored. For example, if the pattern is &lt;code&gt;&quot;X&quot;&lt;/code&gt; and the time zone is &lt;code&gt;&quot;GMT+05:30&quot;&lt;/code&gt;, &lt;code&gt;&quot;+05&quot;&lt;/code&gt; is produced.</source>
          <target state="translated">对于格式化，如果距GMT的偏移值为0，则生成 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; 。如果图案字母的数量为1，则忽略一小时的任何分数。例如，如果模式为 &lt;code&gt;&quot;X&quot;&lt;/code&gt; 且时区为 &lt;code&gt;&quot;GMT+05:30&quot;&lt;/code&gt; ，则会生成 &lt;code&gt;&quot;+05&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30762100cef30818142dda2795a16148020ed918" translate="yes" xml:space="preserve">
          <source>For formatting, the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;maxWidth&lt;/code&gt; are used to determine the number of characters to format. If they are equal then the format is fixed width. If the value of the field is within the range of the &lt;code&gt;baseValue&lt;/code&gt; using &lt;code&gt;width&lt;/code&gt; characters then the reduced value is formatted otherwise the value is truncated to fit &lt;code&gt;maxWidth&lt;/code&gt;. The rightmost characters are output to match the width, left padding with zero.</source>
          <target state="translated">对于格式化， &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;maxWidth&lt;/code&gt; 用于确定要格式化的字符数。如果它们相等，则格式为固定宽度。如果该字段的值在使用 &lt;code&gt;width&lt;/code&gt; 字符的 &lt;code&gt;baseValue&lt;/code&gt; 范围内，则格式化减小的值，否则该值将被截断以适合 &lt;code&gt;maxWidth&lt;/code&gt; 。输出最右边的字符以匹配宽度，左边的填充为零。</target>
        </trans-unit>
        <trans-unit id="86307ef52182c337ecdeed0a18f594ba47f90dbc" translate="yes" xml:space="preserve">
          <source>For further details on the makeup of the returned &lt;code&gt;Hashtable&lt;/code&gt;, see the &lt;code&gt;setLabelTable&lt;/code&gt; documentation.</source>
          <target state="translated">有关返回的 &lt;code&gt;Hashtable&lt;/code&gt; 组成的更多详细信息，请参见 &lt;code&gt;setLabelTable&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="70177aedeb0091d3f5131204109f5188dbfe7cf0" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;如何使用内部框架&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e4b037bbbe770f333358d04be0b29cf63399e18" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&amp;rdquo;&lt;/a&gt;部分&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5c55da39c499a60c82c691b8be9607fd4d72241" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多文档和示例，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;如何监视进度&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc0794470ab2d5218687b182417d70c95c4efbf1" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;如何使用内部框架&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9400509e10d6f9c91228f40cc27b68a4bd780fd8" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&amp;rdquo;&lt;/a&gt;部分&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5444a9c69b0235795e7ff8b94c2258df216fc7e3" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多文档和示例，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;如何监视进度&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3cec4a9555e2d3c867d9f5618a404938d6de5cde" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;The Java Tutorial中&lt;/em&gt;的以下各节：&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;如何编写树扩展侦听器&lt;/a&gt;和&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;如何编写Tree-Will-Expand侦听器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cec016b2f97e881f2ef8cd31a48fecf887e596a6" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;The Java Tutorial中&lt;/em&gt;的以下各节：&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;如何编写树扩展侦听器&lt;/a&gt;和&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;如何编写Tree-Will-Expand侦听器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48582963a77ba74bf88d3b898d4ce9c917800ae0" translate="yes" xml:space="preserve">
          <source>For further documentation and for examples, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;The Java Tutorial&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus &lt;/a&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e1284681b4c2b5d1f6b1055809882c4572cff72" translate="yes" xml:space="preserve">
          <source>For further documentation and for examples, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多文档和示例，请参见&lt;em&gt;The Java Tutorial&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus &lt;/a&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0c3d831d0c3d774c07aabb377adbb94d8c02b4b" translate="yes" xml:space="preserve">
          <source>For further documentation, please see:</source>
          <target state="translated">关于进一步的文件,请见:</target>
        </trans-unit>
        <trans-unit id="fcec9208587350945fcaf80b6a1f5f94eb52edd2" translate="yes" xml:space="preserve">
          <source>For further documentation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关更多文档，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;创建表模型&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0f06d9b519d18282f33f57472142b94ccacaeb96" translate="yes" xml:space="preserve">
          <source>For further documentation, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关更多文档，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;创建表模型&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="db98ffc64d074e9381de37b26512bf1d106a9bd5" translate="yes" xml:space="preserve">
          <source>For further information and examples of using check box menu items, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用复选框菜单项的更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f0ce83de447a00856f5201ae11cc7e4f9f3ecf2" translate="yes" xml:space="preserve">
          <source>For further information and examples of using check box menu items, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用复选框菜单项的更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf2a4252e04c57eefeb7b1ecc400cf9feab741de" translate="yes" xml:space="preserve">
          <source>For further information and examples of using image icons, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用图像图标的更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;如何使用图标&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="882bf3f7567c15e80ad1071053fff49b01cb39ab" translate="yes" xml:space="preserve">
          <source>For further information and examples of using image icons, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用图像图标的更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;如何使用图标&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47c9910bdc3fd79ca4fea29dc730177492456718" translate="yes" xml:space="preserve">
          <source>For further information and examples of using tree paths, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用树路径的更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36c2dcdc449a0e6853fe47da5e21301140952033" translate="yes" xml:space="preserve">
          <source>For further information and examples of using tree paths, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用树路径的更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7a90ce028732da31dc2085bfa4e6d659d483dbf" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;如何使用滑块&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bbfc882840839be130d27c6cdcfcd5a22fbca81b" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;如何使用BoxLayout &lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="455ecf20c7af5b27aa51bb82f3a662b2b0819b43" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;如何使用滑块&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1607668101eaae1f1e933aff0c2d46c5b910018e" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;如何使用BoxLayout &lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64c1185b29041da35b97ab7eab62b5e3abc72849" translate="yes" xml:space="preserve">
          <source>For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关树模型的更多信息，包括自定义实现的示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8869140d50a8b31e5be1a1a94a8fba8436ea85e" translate="yes" xml:space="preserve">
          <source>For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关树模型的更多信息，包括自定义实现的示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f28bbe0d1ed64d964af58c8022a109ae9ccc10f" translate="yes" xml:space="preserve">
          <source>For further information see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;如何使用按钮，复选框和单选按钮&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="96b6840b6054b516727fe81bcf15ce39e95a61a4" translate="yes" xml:space="preserve">
          <source>For further information see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;如何使用按钮，复选框和单选按钮&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fffa387798756e472ad4ed19066f2f96eeb6d8b9" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;使用多路复用外观。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e018c6fbeea3ae17d14fcc58c8a97447d4b29ec5" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;使用多路复用外观。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b240043433660c7e11e9eaf3757b9adfa7c62ee" translate="yes" xml:space="preserve">
          <source>For general argument types, the precision is the maximum number of characters to be written to the output.</source>
          <target state="translated">对于一般的参数类型,精度是写入输出的最大字符数。</target>
        </trans-unit>
        <trans-unit id="6ac3bc0ccd869fb439d7cb91a237f9f63e1b3d00" translate="yes" xml:space="preserve">
          <source>For historical reasons, this method is not static, but its behavior does not depend on the instance on which it is called.</source>
          <target state="translated">由于历史原因,这个方法不是静态的,但它的行为并不依赖于调用它的实例。</target>
        </trans-unit>
        <trans-unit id="9ef1222a3aa584be05528f73a489e06ed37b9719" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling and &lt;code&gt;VERTICAL&lt;/code&gt; orientation, returns &lt;code&gt;visibleRect.width&lt;/code&gt;.</source>
          <target state="translated">对于水平滚动和 &lt;code&gt;VERTICAL&lt;/code&gt; 方向，返回 &lt;code&gt;visibleRect.width&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f9614c4b6677d682d6ebf32146e4b40ca83ced4" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling, if the layout orientation is &lt;code&gt;VERTICAL&lt;/code&gt;, then the list's font size is returned (or &lt;code&gt;1&lt;/code&gt; if the font is &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">对于水平滚动，如果布局方向为 &lt;code&gt;VERTICAL&lt;/code&gt; ，则返回列表的字体大小（如果font为 &lt;code&gt;null&lt;/code&gt; ,则返回 &lt;code&gt;1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e93dfe403e923c48d7c3ec78228e39fdac5fbbe3" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling, when the layout orientation is either &lt;code&gt;VERTICAL_WRAP&lt;/code&gt; or &lt;code&gt;HORIZONTAL_WRAP&lt;/code&gt;:</source>
          <target state="translated">对于水平滚动，当布局方向为 &lt;code&gt;VERTICAL_WRAP&lt;/code&gt; 或 &lt;code&gt;HORIZONTAL_WRAP&lt;/code&gt; 时：</target>
        </trans-unit>
        <trans-unit id="ffdf89fbfae740196b5bdae01ce560a68c803bc1" translate="yes" xml:space="preserve">
          <source>For i=1..K, Di = Ai</source>
          <target state="translated">对于i=1...K,Di=Ai</target>
        </trans-unit>
        <trans-unit id="09b9b63237aaa55086913ffd8a2b891202973f33" translate="yes" xml:space="preserve">
          <source>For i=1..N, Ti is adaptable to Aj, where j=i+k</source>
          <target state="translated">对于i=1...N,Ti对Aj是适应的,其中j=i+k</target>
        </trans-unit>
        <trans-unit id="59d9dde9e53f112cf0672b2c57e8e527ae4c2cfc" translate="yes" xml:space="preserve">
          <source>For ignorable characters, the first rule must start with a relation (the examples we have used above are really fragments; &quot;a &amp;lt; b&quot; really should be &quot;&amp;lt; a &amp;lt; b&quot;). If, however, the first relation is not &quot;&amp;lt;&quot;, then all the all text-arguments up to the first &quot;&amp;lt;&quot; are ignorable. For example, &quot;, - &amp;lt; a &amp;lt; b&quot; makes &quot;-&quot; an ignorable character, as we saw earlier in the word &quot;black-birds&quot;. In the samples for different languages, you see that most accents are ignorable.</source>
          <target state="translated">对于可忽略字符，第一个规则必须以关系开头（我们上面使用的示例实际上是片段；&amp;ldquo; a &amp;lt;b&amp;rdquo;实际上应该是&amp;ldquo; &amp;lt;a &amp;lt;b&amp;rdquo;）。但是，如果第一个关系不是&amp;ldquo; &amp;lt;&amp;rdquo;，那么直到第一个&amp;ldquo; &amp;lt;&amp;rdquo;的所有所有文本参数都是可忽略的。例如，如我们在前面的&amp;ldquo;黑鸟&amp;rdquo;一词中看到的，&amp;ldquo;，-&amp;lt;a &amp;lt;b&amp;rdquo;使&amp;ldquo;-&amp;rdquo;成为可忽略的字符。在不同语言的样本中，您会看到大多数重音都是可忽略的。</target>
        </trans-unit>
        <trans-unit id="fabd85b21ae351b462896cf695c97093bbffa124" translate="yes" xml:space="preserve">
          <source>For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute.</source>
          <target state="translated">对于图像，工具提示文本来自使用 &lt;code&gt;ALT&lt;/code&gt; 属性指定的文本。</target>
        </trans-unit>
        <trans-unit id="0d9b4f443a1f2d7650a9da382d578987b32be1b0" translate="yes" xml:space="preserve">
          <source>For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute. This is overriden to return &lt;code&gt;getAltText&lt;/code&gt;.</source>
          <target state="translated">对于图像，工具提示文本来自使用 &lt;code&gt;ALT&lt;/code&gt; 属性指定的文本。重写此方法以返回 &lt;code&gt;getAltText&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9fd31dcc26a3c512fd5aca7bd3a9885c31b1e33" translate="yes" xml:space="preserve">
          <source>For implementations that support a command-line interface, an agent can be started by specifying an option on the command-line.</source>
          <target state="translated">对于支持命令行接口的实现,可以通过在命令行上指定一个选项来启动代理。</target>
        </trans-unit>
        <trans-unit id="999a3b10953e4e7b359f0edd758b57b264e2b633" translate="yes" xml:space="preserve">
          <source>For implementations where multiple copies are produced by the interpreter with only a single pass over the data, the final value of the JobKOctetsProcessed attribute must be equal to the value of the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; attribute. For implementations where multiple copies are produced by the interpreter by processing the data for each copy, the final value must be a multiple of the value of the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">对于其中多个拷贝通过仅与单个传过来的数据解释器生成实施方式中，JobKOctetsProcessed属性的最终值必须等于的值&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt;属性。对于解释器通过处理每个副本的数据生成多个副本的实现，最终值必须是&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt;属性值的倍数。</target>
        </trans-unit>
        <trans-unit id="1d7dfecee7ffa161616519435e3d44d03df9362c" translate="yes" xml:space="preserve">
          <source>For imports, the import is added. Classes, interfaces. methods, and variables are defined. The initializer of variables, statements, and expressions are executed. The modifiers public, protected, private, static, and final are not allowed on op-level declarations and are ignored with a warning. Synchronized, native, abstract, and default top-level methods are not allowed and are errors. If a previous definition of a declaration is overwritten then there will be an event showing its status changed to OVERWRITTEN, this will not occur for dropped, rejected, or already overwritten declarations.</source>
          <target state="translated">对于导入,添加了导入。对类、接口.方法和变量进行定义。变量、语句和表达式的初始化器被执行。op级声明上不允许使用修饰符public、protected、private、static和final,并且会被忽略并发出警告。同步、本机、抽象和默认的顶层方法是不允许的,并且是错误的。如果一个声明的前一个定义被覆盖,那么会有一个事件显示它的状态变为OVERWRITTEN,这不会发生在放弃、拒绝或已经被覆盖的声明上。</target>
        </trans-unit>
        <trans-unit id="e2b22519a10688f4a1bea8cd9d520a60881a40d7" translate="yes" xml:space="preserve">
          <source>For information about X.509 certificates and CRLs, please see:</source>
          <target state="translated">有关X.509证书和CRL的信息,请参见。</target>
        </trans-unit>
        <trans-unit id="8688fad722f03c47fb91dbf39fb3661b85bb1d1f" translate="yes" xml:space="preserve">
          <source>For information and examples of using menu bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用菜单栏的信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c36647438815ab06cecb187171d9acc3f9da96f3" translate="yes" xml:space="preserve">
          <source>For information and examples of using menu bars see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用菜单栏的信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="662cb4e57dc7b68ed821cd0497757b673c382163" translate="yes" xml:space="preserve">
          <source>For information and examples of using menus see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用菜单的信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29c1aba2fc55df113dfa14e1346ad458c76a3252" translate="yes" xml:space="preserve">
          <source>For information and examples of using menus see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用菜单的信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0ade067e2e1dd72bc80cc13e6334ca8c385d22f" translate="yes" xml:space="preserve">
          <source>For information and examples of using popup menus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用弹出菜单的信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7320901564e73dd2695096a69f88132162b7f72d" translate="yes" xml:space="preserve">
          <source>For information and examples of using popup menus, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关使用弹出菜单的信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&lt;/a&gt;&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="708a47bc63c338712226c228b897d83e7e0726e3" translate="yes" xml:space="preserve">
          <source>For information and examples of using spinner see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;使用Spinners的&lt;/a&gt;信息和示例，请参见&lt;em&gt;The Java Tutorial&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;How to Use Spinners一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c8c064ed84ca74c33ee63994a1ca4ab3bb2a6df" translate="yes" xml:space="preserve">
          <source>For information and examples of using spinner see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;使用Spinners的&lt;/a&gt;信息和示例，请参见&lt;em&gt;The Java Tutorial&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;How to Use Spinners一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07700dd83b22b86d17d2b19aa278c34c33dca7f9" translate="yes" xml:space="preserve">
          <source>For information on customizing how &lt;b&gt;text/html&lt;/b&gt; is rendered please see &lt;a href=&quot;#W3C_LENGTH_UNITS&quot;&gt;&lt;code&gt;W3C_LENGTH_UNITS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#HONOR_DISPLAY_PROPERTIES&quot;&gt;&lt;code&gt;HONOR_DISPLAY_PROPERTIES&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">有关自定义&lt;b&gt;text / html&lt;/b&gt;呈现方式的信息，请参见&lt;a href=&quot;#W3C_LENGTH_UNITS&quot;&gt; &lt;code&gt;W3C_LENGTH_UNITS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#HONOR_DISPLAY_PROPERTIES&quot;&gt; &lt;code&gt;HONOR_DISPLAY_PROPERTIES&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a8c5755ffed0a58e3924605a1239109dbdea591" translate="yes" xml:space="preserve">
          <source>For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;event/mousewheelevent&quot;&gt;&lt;code&gt;MouseWheelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关如何分配鼠标滚轮事件的信息，请参见&lt;a href=&quot;event/mousewheelevent&quot;&gt; &lt;code&gt;MouseWheelEvent&lt;/code&gt; &lt;/a&gt;的类描述。</target>
        </trans-unit>
        <trans-unit id="a39eb611ccb9eb6a80e659baf0b72ce7b96dd4eb" translate="yes" xml:space="preserve">
          <source>For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;mousewheelevent&quot;&gt;&lt;code&gt;MouseWheelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关如何分配鼠标滚轮事件的信息，请参见&lt;a href=&quot;mousewheelevent&quot;&gt; &lt;code&gt;MouseWheelEvent&lt;/code&gt; &lt;/a&gt;的类描述。</target>
        </trans-unit>
        <trans-unit id="0cfabcb2d4ce1ff88f8b33c668fb5c06a02d8216" translate="yes" xml:space="preserve">
          <source>For information on how to create and deploy service providers, refer to the documentation on &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">有关如何创建和部署服务提供者的信息，请参阅&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;上的文档。</target>
        </trans-unit>
        <trans-unit id="1e77a1bf016a3e275018812830c53ab5dfce41c9" translate="yes" xml:space="preserve">
          <source>For information on the names, see startElement.</source>
          <target state="translated">有关名称的信息,请参见startElement。</target>
        </trans-unit>
        <trans-unit id="f05dee150a8a7141366a693983458a0d9ef32ff7" translate="yes" xml:space="preserve">
          <source>For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</source>
          <target state="translated">有关事件分发机制的线程问题的信息，请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT线程问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="311e3cf159bf4759d9af450775b9054c6a7f7561" translate="yes" xml:space="preserve">
          <source>For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</source>
          <target state="translated">有关事件分发机制的线程问题的信息，请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT线程问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bca1a70b8a9d47b42d800fe5073e4db6547f559" translate="yes" xml:space="preserve">
          <source>For information on using data transfer with Swing, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</source>
          <target state="translated">有关在Swing中使用数据传输的信息，请参阅&lt;em&gt;Java教程&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;如何使用拖放和数据传输&lt;/a&gt;&amp;rdquo;一节，以获取更多信息。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1add2573ab1adf12bb7e6697260a8cdb349a6c6" translate="yes" xml:space="preserve">
          <source>For information on using data transfer with Swing, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</source>
          <target state="translated">有关在Swing中使用数据传输的信息，请参阅&lt;em&gt;Java教程&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;如何使用拖放和数据传输&lt;/a&gt;&amp;rdquo;一节，以获取更多信息。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38ee7b0d0a82550013b02d59ffc3943a4f4f8f71" translate="yes" xml:space="preserve">
          <source>For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;, but also does not affect whether composition is enabled.</source>
          <target state="translated">对于主机操作系统提供的输入法，并非总是可以确定是否支持此操作。例如，一种输入法可能只对某些区域启用合成，而对其他区域则不执行任何操作。对于此类输入方法，此方法可能不会引发&lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;，但也不会影响是否启用合成。</target>
        </trans-unit>
        <trans-unit id="9fbd613382fe235d1118481dbe11ae0114c491df" translate="yes" xml:space="preserve">
          <source>For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;, but also does not affect whether composition is enabled.</source>
          <target state="translated">对于主机操作系统提供的输入法，并非总是可以确定是否支持此操作。例如，一种输入法可能只对某些区域启用合成，而对其他区域则不执行任何操作。对于此类输入方法，此方法可能不会引发&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;，但也不会影响是否启用合成。</target>
        </trans-unit>
        <trans-unit id="079a98af4118c7db3c6ea12ffe6be5c1b4f3db94" translate="yes" xml:space="preserve">
          <source>For inserts, the indexes represent the</source>
          <target state="translated">对于插入,索引代表</target>
        </trans-unit>
        <trans-unit id="d82a0da809e48b52c3793077a5499e2f62e6d228" translate="yes" xml:space="preserve">
          <source>For instance eth0:1 will be a subinterface to eth0.</source>
          <target state="translated">例如eth0:1将是eth0的一个子接口。</target>
        </trans-unit>
        <trans-unit id="22e4d1bfbba0c0574d67f23e7853a569a58881c5" translate="yes" xml:space="preserve">
          <source>For instance, consider the following struct declaration in C:</source>
          <target state="translated">例如,考虑以下C语言的结构声明。</target>
        </trans-unit>
        <trans-unit id="2ef404ebc66421af26a36682a8560469fc8a566c" translate="yes" xml:space="preserve">
          <source>For instance, given a sequence layout of the kind:</source>
          <target state="translated">例如,给定一个序列布局的种类。</target>
        </trans-unit>
        <trans-unit id="6b679074e1f9aaff9fab194a3eb3eb1d920c34d0" translate="yes" xml:space="preserve">
          <source>For instance, if a vendor named Fred, Inc. offered a &lt;code&gt;SyncProvider&lt;/code&gt; implementation, you could have the following:</source>
          <target state="translated">例如，如果名为Fred，Inc.的供应商提供了 &lt;code&gt;SyncProvider&lt;/code&gt; 实现，则您可能具有以下内容：</target>
        </trans-unit>
        <trans-unit id="f799caef16ddd4d32fdd7fb7fb732b6b99f8fe9f" translate="yes" xml:space="preserve">
          <source>For instance, in order to configure plain instances of XMLFormatter to omit the new &lt;code&gt;&amp;lt;nano&amp;gt;&lt;/code&gt; element, &lt;code&gt;java.util.logging.XMLFormatter.useInstant = false&lt;/code&gt; can be specified in the logging configuration.</source>
          <target state="translated">例如，为了配置XMLFormatter的普通实例以忽略新的 &lt;code&gt;&amp;lt;nano&amp;gt;&lt;/code&gt; 元素，可以在日志记录配置中指定 &lt;code&gt;java.util.logging.XMLFormatter.useInstant = false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70234272a3b0d056278aecef0730ed49132b14a6" translate="yes" xml:space="preserve">
          <source>For instance, in the above example calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; with &quot;yo&quot; in argument results in the following:</source>
          <target state="translated">例如，在上面的示例中，在参数中包含&amp;ldquo; bar&amp;rdquo;和&amp;ldquo; yo&amp;rdquo;的 &lt;code&gt;Text&lt;/code&gt; 节点上调用 &lt;code&gt;replaceWholeText&lt;/code&gt; 会导致以下结果：</target>
        </trans-unit>
        <trans-unit id="eac033dcc4f324e4af48e46ba5cfcda47230874d" translate="yes" xml:space="preserve">
          <source>For instance, in the example below &lt;code&gt;wholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; returns &quot;barfoo&quot;, while on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;foo&quot; it returns &quot;barfoo&quot;.</source>
          <target state="translated">例如，在下面的示例中， &lt;code&gt;wholeText&lt;/code&gt; 在包含&amp;ldquo; bar&amp;rdquo;的 &lt;code&gt;Text&lt;/code&gt; 节点上返回&amp;ldquo; barfoo&amp;rdquo;，而在包含&amp;ldquo; foo&amp;rdquo;的 &lt;code&gt;Text&lt;/code&gt; 节点上则返回&amp;ldquo; barfoo&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ffee8bd9056a2b45a907b0b3baabeded0bf3eea4" translate="yes" xml:space="preserve">
          <source>For instance, in the example below calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; fails, because the &lt;code&gt;EntityReference&lt;/code&gt; node &quot;ent&quot; contains an &lt;code&gt;Element&lt;/code&gt; node which cannot be removed.</source>
          <target state="translated">例如，在下面的示例中，在包含&amp;ldquo; bar&amp;rdquo;的 &lt;code&gt;Text&lt;/code&gt; 节点上调用 &lt;code&gt;replaceWholeText&lt;/code&gt; 失败，因为 &lt;code&gt;EntityReference&lt;/code&gt; 节点&amp;ldquo; ent&amp;rdquo;包含无法删除的 &lt;code&gt;Element&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="c1496abd7300063ad9deaa506cbc8b1f4d0ce10e" translate="yes" xml:space="preserve">
          <source>For instanceof with a pattern, i.e. in the following form:</source>
          <target state="translated">对于带有模式的实例,即如下形式。</target>
        </trans-unit>
        <trans-unit id="03a512596becc85c896f6e223cb9d257c4363540" translate="yes" xml:space="preserve">
          <source>For instanceof without a pattern, i.e. in the following form:</source>
          <target state="translated">对于没有模式的实例,即以下形式。</target>
        </trans-unit>
        <trans-unit id="b3a692e5bb2f1b4f5bf2ce0c8822cf89de2eecf4" translate="yes" xml:space="preserve">
          <source>For instances with unsigned sample values, the unnormalized color/alpha component representation is only supported if two conditions hold. First, sample value 0 must map to normalized component value 0.0 and sample value 2&lt;sup&gt;n&lt;/sup&gt; - 1 to 1.0. Second the min/max range of all color components of the &lt;code&gt;ColorSpace&lt;/code&gt; must be 0.0 to 1.0. In this case, the component representation is the n least significant bits of the corresponding sample. Thus each component is an unsigned integral value between 0 and 2&lt;sup&gt;n&lt;/sup&gt; - 1, where n is the number of significant bits for a particular component. If these conditions are not met, any method taking an unnormalized component argument will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">对于具有无符号样本值的实例，仅在两个条件成立的情况下，才支持未规范化的颜色/ alpha分量表示形式。首先，样本值0必须映射到归一化分量值0.0，样本值2 &lt;sup&gt;n&lt;/sup&gt; -1映射到1.0。其次， &lt;code&gt;ColorSpace&lt;/code&gt; 的所有颜色分量的最小/最大范围必须为0.0到1.0。在这种情况下，分量表示是相应样本的n个最低有效位。因此，每个组件都是0到2 &lt;sup&gt;n&lt;/sup&gt; -1之间的无符号整数值，其中n是特定组件的有效位数。如果不满足这些条件，则任何采用未规范化的组件参数的方法都将抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="719fe421d98202b344f227f4d64df21fe27399aa" translate="yes" xml:space="preserve">
          <source>For key pressed and key released events, the getKeyCode method returns the event's keyCode. For key typed events, the getKeyCode method always returns &lt;code&gt;VK_UNDEFINED&lt;/code&gt;. The &lt;code&gt;getExtendedKeyCode&lt;/code&gt; method may also be used with many international keyboard layouts.</source>
          <target state="translated">对于按下按键和释放按键的事件，getKeyCode方法返回事件的keyCode。对于键类型的事件，getKeyCode方法始终返回 &lt;code&gt;VK_UNDEFINED&lt;/code&gt; 。该 &lt;code&gt;getExtendedKeyCode&lt;/code&gt; 方法还可以与众多国际键盘布局使用。</target>
        </trans-unit>
        <trans-unit id="54bf9c03f8ae4c844a7fb836b024adb6eeab7bd2" translate="yes" xml:space="preserve">
          <source>For keyboard events, &lt;a href=&quot;#key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt; contains a value indicating which key was activated, and &lt;a href=&quot;#modifiers&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the modifiers for that event. For the KEY_PRESS and KEY_RELEASE event ids, the value of &lt;code&gt;key&lt;/code&gt; is the unicode character code for the key. For KEY_ACTION and KEY_ACTION_RELEASE, the value of &lt;code&gt;key&lt;/code&gt; is one of the defined action-key identifiers in the &lt;code&gt;Event&lt;/code&gt; class (&lt;code&gt;PGUP&lt;/code&gt;, &lt;code&gt;PGDN&lt;/code&gt;, &lt;code&gt;F1&lt;/code&gt;, &lt;code&gt;F2&lt;/code&gt;, etc).</source>
          <target state="translated">对于键盘事件，&lt;a href=&quot;#key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt;包含一个值，该值指示已激活哪个键，&lt;a href=&quot;#modifiers&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt;包含该事件的修饰符。对于KEY_PRESS和KEY_RELEASE事件ID， &lt;code&gt;key&lt;/code&gt; 的值是该键的unicode字符代码。对于KEY_ACTION和KEY_ACTION_RELEASE，的值 &lt;code&gt;key&lt;/code&gt; 是在所定义的动作密钥标识符中的一个 &lt;code&gt;Event&lt;/code&gt; 类（ &lt;code&gt;PGUP&lt;/code&gt; ， &lt;code&gt;PGDN&lt;/code&gt; ， &lt;code&gt;F1&lt;/code&gt; ， &lt;code&gt;F2&lt;/code&gt; ，等等）。</target>
        </trans-unit>
        <trans-unit id="4f376632644072537f9164c8002757250815e1ed" translate="yes" xml:space="preserve">
          <source>For left to right orientations, the size is determined from the current AbstractLayoutCache. For RTL orientations, the preferred size becomes the width minus the minimum x position.</source>
          <target state="translated">对于从左到右的方向,尺寸由当前的AbstractLayoutCache决定。对于RTL方向,首选的尺寸是宽度减去最小的X位置。</target>
        </trans-unit>
        <trans-unit id="da9058e03b6adc44700d838fbdd67dfe65cb75f3" translate="yes" xml:space="preserve">
          <source>For maximum portability, a call's &lt;code&gt;ResultSet&lt;/code&gt; objects and update counts should be processed prior to getting the values of output parameters.</source>
          <target state="translated">为了获得最大的可移植性，应在获取输出参数的值之前处理调用的 &lt;code&gt;ResultSet&lt;/code&gt; 对象和更新计数。</target>
        </trans-unit>
        <trans-unit id="39b24e3909cb8f16d11a9b4e3cf43043aff83dc4" translate="yes" xml:space="preserve">
          <source>For messages being sent &lt;code&gt;true&lt;/code&gt; indicates that the message is complete, &lt;code&gt;false&lt;/code&gt; indicates that the message is not complete. How the send channel interprets this value depends on the value of its &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="translated">对于正在发送的消息 &lt;code&gt;true&lt;/code&gt; 表示该消息是完整的， &lt;code&gt;false&lt;/code&gt; 表示该消息是不完整的。发送通道如何解释此值取决于其&lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; &lt;/a&gt;套接字选项的值。</target>
        </trans-unit>
        <trans-unit id="09cc51be0ad57f631b9b037d5a5c1ec3cc09b637" translate="yes" xml:space="preserve">
          <source>For method and constructor parameters, the name of each parameter must be distinct from the names of all other parameters of the same executable. If the original source names are not available, an implementation may synthesize names subject to the distinctness requirement above.</source>
          <target state="translated">对于方法和构造参数,每个参数的名称必须与同一可执行文件中所有其他参数的名称不同。如果没有原始的源名,执行者可以根据上述区别性要求合成名称。</target>
        </trans-unit>
        <trans-unit id="7aa481bebd670386bf813c89465c530eee7a4d3e" translate="yes" xml:space="preserve">
          <source>For methods that can throw &lt;a href=&quot;instancenotfoundexception&quot;&gt;&lt;code&gt;InstanceNotFoundException&lt;/code&gt;&lt;/a&gt;, this exception is thrown for a non-existent MBean, regardless of permissions. This is because a non-existent MBean has no &lt;code&gt;className&lt;/code&gt;.</source>
          <target state="translated">对于可以抛出&lt;a href=&quot;instancenotfoundexception&quot;&gt; &lt;code&gt;InstanceNotFoundException&lt;/code&gt; 的&lt;/a&gt;方法，无论权限如何，都会为不存​​在的MBean抛出此异常。这是因为不存在的MBean没有 &lt;code&gt;className&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76774b41448928d2dea1d49da68288f4b72f5eb8" translate="yes" xml:space="preserve">
          <source>For methods that return a textual representation as output value, the first form, i.e. a dotted-quad string, is used.</source>
          <target state="translated">对于返回文本表示作为输出值的方法,使用第一种形式,即点阵字符串。</target>
        </trans-unit>
        <trans-unit id="bf7ab1ce5e7d929aee2f17a0a3acfac53a1554a0" translate="yes" xml:space="preserve">
          <source>For methods that return a textual representation as output value, the full form is used. Inet6Address will return the full form because it is unambiguous when used in combination with other textual data.</source>
          <target state="translated">对于返回文本表示作为输出值的方法,会使用完整的形式。Inet6Address将返回完整的形式,因为当它与其他文本数据结合使用时是不含糊的。</target>
        </trans-unit>
        <trans-unit id="8f24aa23e5872e59ccfbd9ed068b2210966f6b77" translate="yes" xml:space="preserve">
          <source>For more details on declaring service providers, and the JAR format in general, see the  JAR File Specification.</source>
          <target state="translated">有关声明服务提供者和一般JAR格式的更多细节,请参见JAR文件规范。</target>
        </trans-unit>
        <trans-unit id="643a9476ed6ecbe548cc662cd1b19fe7604623bf" translate="yes" xml:space="preserve">
          <source>For more details on declaring service providers, and the JAR format in general, see the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html&quot;&gt; JAR File Specification&lt;/a&gt;.</source>
          <target state="translated">有关声明服务提供者的更多详细信息以及一般的JAR格式，请参见&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html&quot;&gt;JAR文件规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae8a4f018bd5638b094a31e219c904b99c0f2995" translate="yes" xml:space="preserve">
          <source>For more developer information on how to use these interfaces, including information on how to design &lt;code&gt;Key&lt;/code&gt; classes for hardware devices, please refer to the cryptographic provider developer guide:</source>
          <target state="translated">有关如何使用这些接口的更多开发人员信息，包括有关如何设计硬件设备的 &lt;code&gt;Key&lt;/code&gt; 类的信息，请参阅加密提供程序开发人员指南：</target>
        </trans-unit>
        <trans-unit id="81e3cc80113990862f7e618b47a2e12565303132" translate="yes" xml:space="preserve">
          <source>For more developer information on how to use these interfaces, including information on how to design &lt;code&gt;Key&lt;/code&gt; classes for hardware devices, please refer to these cryptographic provider developer guides:</source>
          <target state="translated">有关如何使用这些接口的更多开发人员信息，包括有关如何设计硬件设备的 &lt;code&gt;Key&lt;/code&gt; 类的信息，请参阅以下加密提供程序开发人员指南：</target>
        </trans-unit>
        <trans-unit id="7d9204267faf9117d206239d345f2c3370d63bca" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;#init(javax.net.ssl.ManagerFactoryParameters)&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更灵活的初始化，请参见&lt;a href=&quot;#init(javax.net.ssl.ManagerFactoryParameters)&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9fda7de9da51760582b2ea855ba85a39fd18514" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;keymanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更灵活的初始化，请参见&lt;a href=&quot;keymanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff1200e59956243f9672ac2eced7edb97e653f86" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更灵活的初始化，请参见&lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fd06cc6e7479451e3716a9760936425212c4e1f" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;SecurityManager&lt;/code&gt; changes made in the JDK and advice regarding porting of 1.1-style security managers, see the security documentation.</source>
          <target state="translated">有关JDK中对 &lt;code&gt;SecurityManager&lt;/code&gt; 所做的更改的更多信息以及有关移植1.1样式的安全管理器的建议，请参阅安全性文档。</target>
        </trans-unit>
        <trans-unit id="a08a4a16ece0e8c8fdf593bd2a70e2beea2d6bca" translate="yes" xml:space="preserve">
          <source>For more information about introspection and design patterns, please consult the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans specification&lt;/a&gt;.</source>
          <target state="translated">有关自省和设计模式的更多信息，请查阅&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b48c85d76a708f58e3b1d3720fdc1490243108d" translate="yes" xml:space="preserve">
          <source>For more information about introspection and design patterns, please consult the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&amp;trade; specification&lt;/a&gt;.</source>
          <target state="translated">有关自省和设计模式的更多信息，请查阅&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&amp;trade;规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e826a923d21ca0ae7f2bc333eae1ef3ba5d5d1d0" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">有关内置JPEG插件的操作的更多信息，请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG元数据格式规范和使用说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b27d702c47799618b4c6eee0d51e8df10dff887" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">有关内置JPEG插件的操作的更多信息，请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG元数据格式规范和使用说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01a99e9d7949612b1e41eea534d474e4c6c23dbb" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the JPEG metadata format specification and usage notes.</source>
          <target state="translated">有关内置JPEG插件操作的更多信息,请参阅JPEG元数据格式规范和使用说明。</target>
        </trans-unit>
        <trans-unit id="ca7cab63f922f3f1dbb72be8cb139b2c682dc7a6" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</source>
          <target state="translated">有关标准JPEG插件的操作的更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG元数据格式规范和使用说明。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96ef9df10914781567843d85e087f208994e6385" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</source>
          <target state="translated">有关标准JPEG插件的操作的更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG元数据格式规范和使用说明。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3811c966c9c719a30361e2707e6b04cc1227e5b" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the JPEG metadata format specification and usage notes</source>
          <target state="translated">有关标准JPEG插件操作的更多信息,请参见JPEG元数据格式规范和使用说明。</target>
        </trans-unit>
        <trans-unit id="a7874053f8215f8f069529c92d7fce008faba07b" translate="yes" xml:space="preserve">
          <source>For more information about using resource bundles with the XMLEncoder, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html#i18n&quot;&gt; Creating Internationalized Applications&lt;/a&gt;,</source>
          <target state="translated">有关将资源包与XMLEncoder一起使用的更多信息，请参见&lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html#i18n&quot;&gt;创建国际化应用程序&lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="bf4eb80e08fdbf7afe2002f9657ceb53a408645b" translate="yes" xml:space="preserve">
          <source>For more information about using resource bundles with the XMLEncoder, see http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n</source>
          <target state="translated">有关使用XMLEncoder的资源捆绑的更多信息,请参见http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n。</target>
        </trans-unit>
        <trans-unit id="b0eebce63cb322ab248193b87a12e8c1789a810f" translate="yes" xml:space="preserve">
          <source>For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&amp;rdquo;&lt;/a&gt;部分&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="333b90c344c7e7f4a6d48007bd9d8179f7d1f61a" translate="yes" xml:space="preserve">
          <source>For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;如何使用菜单&amp;rdquo;&lt;/a&gt;部分&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="578e9a2249248ae3a0b9437101f71f2e9428f7e5" translate="yes" xml:space="preserve">
          <source>For more information including algorithms used to create &lt;code&gt;UUID&lt;/code&gt;s, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt; &lt;i&gt;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&lt;/i&gt;&lt;/a&gt;, section 4.2 &quot;Algorithms for Creating a Time-Based UUID&quot;.</source>
          <target state="translated">有关包括用于创建 &lt;code&gt;UUID&lt;/code&gt; 的算法的更多信息，请参见&lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;&lt;i&gt;RFC 4122：通用唯一标识符（UUID）URN命名空间&lt;/i&gt;&lt;/a&gt;，第4.2节&amp;ldquo;用于创建基于时间的UUID的算法&amp;rdquo;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ba8b1407dfbd73a80e0f18eb4cfbef2b392c96ad" translate="yes" xml:space="preserve">
          <source>For more information including algorithms used to create &lt;code&gt;UUID&lt;/code&gt;s, see &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt; &lt;i&gt;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&lt;/i&gt;&lt;/a&gt;, section 4.2 &quot;Algorithms for Creating a Time-Based UUID&quot;.</source>
          <target state="translated">有关包括用于创建 &lt;code&gt;UUID&lt;/code&gt; 的算法的更多信息，请参见&lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt;&lt;i&gt;RFC 4122：通用唯一标识符（UUID）URN命名空间&lt;/i&gt;&lt;/a&gt;，第4.2节&amp;ldquo;用于创建基于时间的UUID的算法&amp;rdquo;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="24cf73d2cec75865fec392cca4fce7bcf51ce26c" translate="yes" xml:space="preserve">
          <source>For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;http://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</source>
          <target state="translated">有关TrueType和OpenType字体的更多信息，请参见OpenType规范。（&lt;a href=&quot;http://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="186debb813d7076cd6849988823d3a2f569c02f8" translate="yes" xml:space="preserve">
          <source>For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;https://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</source>
          <target state="translated">有关TrueType和OpenType字体的更多信息，请参见OpenType规范。（&lt;a href=&quot;https://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cdd0deee19a74716ce69b0928bbf21dc4e66a7ed" translate="yes" xml:space="preserve">
          <source>For more information on content panes and other features that root panes provide, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关内容窗格和根窗格提供的其他功能的更多信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;使用顶级容器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c7b1c7fe5f49ca613b002d2dff163fa45d746698" translate="yes" xml:space="preserve">
          <source>For more information on content panes and other features that root panes provide, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关内容窗格和根窗格提供的其他功能的更多信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;使用顶级容器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4824abf981bf81ee2ff53f62ff7bb011062e10ef" translate="yes" xml:space="preserve">
          <source>For more information on full-screen exclusive mode API, see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</source>
          <target state="translated">有关全屏独占模式API的更多信息，请参见《&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt;全屏独占模式API教程》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b8786ac4d9337c8262f5f808fc7b6268f93a62f" translate="yes" xml:space="preserve">
          <source>For more information on full-screen exclusive mode API, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</source>
          <target state="translated">有关全屏独占模式API的更多信息，请参见《&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt;全屏独占模式API教程》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9157dadc80922a9a5d11e1c0eb4437fd9bd802bf" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;Document&lt;/code&gt; class, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/articles-jsp-139072.html&quot;&gt;The Swing Connection&lt;/a&gt; and most particularly the article, &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/text/element_interface&quot;&gt; The Element Interface&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;Document&lt;/code&gt; 类的更多信息，请参见&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/articles-jsp-139072.html&quot;&gt;The Swing Connection&lt;/a&gt;，尤其是文章&lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/text/element_interface&quot;&gt;The Element Interface&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33759175457013b2e6d7889bccdc9919f7498bcf" translate="yes" xml:space="preserve">
          <source>For more information on the user space coordinate system and the rendering process, see the &lt;code&gt;Graphics2D&lt;/code&gt; class comments.</source>
          <target state="translated">有关用户空间坐标系和渲染过程的更多信息，请参见 &lt;code&gt;Graphics2D&lt;/code&gt; 类注释。</target>
        </trans-unit>
        <trans-unit id="9065a8abeebf95664c0a281aa11db9e70161c3c6" translate="yes" xml:space="preserve">
          <source>For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;Swing package description&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</source>
          <target state="translated">有关这些主题的更多信息，请参见&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;Swing package description&lt;/code&gt; &lt;/a&gt;和&lt;em&gt;Java教程&lt;/em&gt;部分&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;的JComponent类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4330b0d94b0d0326bd2e928bf7934b24637e0567" translate="yes" xml:space="preserve">
          <source>For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;Swing package description&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</source>
          <target state="translated">有关这些主题的更多信息，请参见&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;Swing package description&lt;/code&gt; &lt;/a&gt;和&lt;em&gt;Java教程&lt;/em&gt;部分&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;的JComponent类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e77e85d84c97791f93f22cb3eeb63334102c0bd" translate="yes" xml:space="preserve">
          <source>For more information on this topic, see section 14.2, &quot;Condition Queues,&quot; in Brian Goetz and others' &lt;em&gt;Java Concurrency in Practice&lt;/em&gt; (Addison-Wesley, 2006) or Item 69 in Joshua Bloch's &lt;em&gt;Effective Java, Second Edition&lt;/em&gt; (Addison-Wesley, 2008).</source>
          <target state="translated">有关此主题的更多信息，请参见Brian Goetz和其他人的&lt;em&gt;Java Concurrency in Practice&lt;/em&gt;（Addison-Wesley，2006年）中的14.2节&amp;ldquo;条件队列&amp;rdquo;，或Joshua Bloch的&lt;em&gt;Effective Java，第二版&lt;/em&gt;（Addison-Wesley，2008年）中的第69条。）。</target>
        </trans-unit>
        <trans-unit id="fd6df08100fcb4e0392469e47d0f1c198809b889" translate="yes" xml:space="preserve">
          <source>For more information on using Java Sound see:</source>
          <target state="translated">有关使用Java Sound的更多信息,请参阅。</target>
        </trans-unit>
        <trans-unit id="a3c227b2aee29a2d9a82f7e55ab6f087bec84d33" translate="yes" xml:space="preserve">
          <source>For more information on using data transfer with Swing see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关在Swing中使用数据传输的更多信息，请参见&lt;em&gt;《 Java教程》中&lt;/em&gt;的&amp;ldquo;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;如何使用拖放和数据传输&lt;/a&gt;&amp;rdquo;部分。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="339ba2cc5acac3af981e48e6807e7c854f380ff6" translate="yes" xml:space="preserve">
          <source>For more information on using data transfer with Swing see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关在Swing中使用数据传输的更多信息，请参见&lt;em&gt;《 Java教程》中&lt;/em&gt;的&amp;ldquo;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;如何使用拖放和数据传输&lt;/a&gt;&amp;rdquo;部分。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="924cf796f95fe65f04f10759d8ebc0d0480f1be0" translate="yes" xml:space="preserve">
          <source>For more information on what expanded state means, see the &lt;a href=&quot;jtree&quot;&gt;&lt;code&gt;JTree description&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">有关扩展状态含义的更多信息，请参见上面的&lt;a href=&quot;jtree&quot;&gt; &lt;code&gt;JTree description&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa58ed474d6ceaf5b1697038f1320fe3f16736ac" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">有关更多信息，您可能还想查看&lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;JavaBeans组件的长期持久性：XML Schema&lt;/a&gt;，&lt;em&gt;这是Swing Connection中&lt;/em&gt;的文章&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="beed59bdd4e48ec33361f1a310f9787e27db5082" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence4&quot;&gt;Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">有关更多信息，您可能还需要查看&lt;em&gt;The Swing Connection中&lt;/em&gt;的文章&lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence4&quot;&gt;Using XMLEncoder &lt;/a&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdd77c4acf8523af4881e0ec52f0a004e43c75d8" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence3-139471.html&quot;&gt; Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">有关更多信息，您可能还想查看&lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence3-139471.html&quot;&gt;《 JavaBeans组件的长期持久性：XML Schema》&lt;/a&gt;，&lt;em&gt;这是Swing Connection中&lt;/em&gt;的文章&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee1df522655b7bbb3e3266971a02cdfe17d684cf" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html&quot;&gt; Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">有关更多信息，您可能还需要查看&lt;em&gt;The Swing Connection中&lt;/em&gt;的文章&lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html&quot;&gt;Using XMLEncoder &lt;/a&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e3a8126f411e59d515eedaa4745571aeed4e1e7" translate="yes" xml:space="preserve">
          <source>For more information, refer to Java Plug-In's guides,  Applet Security Basics and  usePolicy Permission.</source>
          <target state="translated">有关更多信息,请参阅 Java Plug-In 指南、Applet 安全基础知识和 usePolicy Permission。</target>
        </trans-unit>
        <trans-unit id="566805fa6faf03baabb71ea15c05e3b1b5d50ffa" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;中的&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9adb545b1df02cb7b81e0401d795a177674ce56e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280：Internet X.509公钥基础结构证书和CRL配置文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="635ee25f145a41ce7f17a98821b60a12cf6621b7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280：Internet X.509公钥基础结构证书和CRL配置文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe462f8fbe2a4fc311617d213131726523dbae66" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;使用多路复用外观。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4db738fec2e273a4c05f6d3a516c4b48630b7b9c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;使用多路复用外观。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6105a854c78a15fe859d0c64ad2b9b3c51aa441e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;中的&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6515e5d0818b09f399d3348c9c6741ab773e04fc" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280：Internet X.509公钥基础结构证书和CRL配置文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6fe9cc110a33a9ed5dac1d410fccea21446d9ecc" translate="yes" xml:space="preserve">
          <source>For more sophisticated patterns, you can use a &lt;code&gt;ChoiceFormat&lt;/code&gt; to produce correct forms for singular and plural:</source>
          <target state="translated">对于更复杂的模式，可以使用 &lt;code&gt;ChoiceFormat&lt;/code&gt; 生成正确的单数和复数形式：</target>
        </trans-unit>
        <trans-unit id="f2abe7e06ae2851d23daf12e439ccac89684d3e2" translate="yes" xml:space="preserve">
          <source>For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; interface, for example the class &lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于更专业的用途，可以通过直接实例化实现&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt;接口的类（例如，类&lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; )&lt;/a&gt;来创建连接器客户端。</target>
        </trans-unit>
        <trans-unit id="1d899f3432679880d6489926be6b9f61a595cb6d" translate="yes" xml:space="preserve">
          <source>For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; interface, for example the class &lt;a href=&quot;rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于更专业的用途，可以通过直接实例化实现&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt;接口的类（例如&lt;a href=&quot;rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt;类）来创建连接器客户端。</target>
        </trans-unit>
        <trans-unit id="63abd7908da19a58e133fd6971c8f4d3dfa821bd" translate="yes" xml:space="preserve">
          <source>For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</source>
          <target state="translated">对于大多数操作系统，文件映射到内存比读，或通过一般书写的几十数据的千字节的更昂贵的&lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;的方法。从性能的角度来看，通常仅需要将较大的文件映射到内存中。</target>
        </trans-unit>
        <trans-unit id="e257e80e52e23bb1f5097e9f135dc6baef407e33" translate="yes" xml:space="preserve">
          <source>For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</source>
          <target state="translated">对于大多数操作系统，文件映射到内存比读，或通过一般书写的几十数据的千字节的更昂贵的&lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;的方法。从性能的角度来看，通常仅需要将较大的文件映射到内存中。</target>
        </trans-unit>
        <trans-unit id="b8d47aef9dfdaffead563198406171ed3ff9a633" translate="yes" xml:space="preserve">
          <source>For most readers, which only accept input from an &lt;code&gt;ImageInputStream&lt;/code&gt;, a single-element array containing &lt;code&gt;ImageInputStream.class&lt;/code&gt; should be returned.</source>
          <target state="translated">对于大多数仅接受 &lt;code&gt;ImageInputStream&lt;/code&gt; 输入的读者，应返回包含 &lt;code&gt;ImageInputStream.class&lt;/code&gt; 的单元素数组。</target>
        </trans-unit>
        <trans-unit id="0737e1146c46eaedda574254b184a05ef178c0d8" translate="yes" xml:space="preserve">
          <source>For most writers, which only output to an &lt;code&gt;ImageOutputStream&lt;/code&gt;, a single-element array containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt; should be returned.</source>
          <target state="translated">对于大多数仅输出到 &lt;code&gt;ImageOutputStream&lt;/code&gt; 的编写器，应返回包含 &lt;code&gt;ImageOutputStream.class&lt;/code&gt; 的单元素数组。</target>
        </trans-unit>
        <trans-unit id="d93e5b1bff26af04219f8bdd441a9eafbac77a05" translate="yes" xml:space="preserve">
          <source>For multiple-selection scrolling lists, it is considered a better user interface to use an external gesture (such as clicking on a button) to trigger the action.</source>
          <target state="translated">对于多选滚动列表,使用外部手势(如点击按钮)来触发操作被认为是更好的用户界面。</target>
        </trans-unit>
        <trans-unit id="8141e1359276458bda25227189f84a7dc2c470e8" translate="yes" xml:space="preserve">
          <source>For mutable sources, arbitrary and non-deterministic behavior may occur if the source is structurally interfered with (elements added, replaced, or removed) between the time that the Spliterator binds to its data source and the end of traversal. For example, such interference will produce arbitrary, non-deterministic results when using the &lt;code&gt;java.util.stream&lt;/code&gt; framework.</source>
          <target state="translated">对于可变源，如果在分隔符绑定到其数据源的时间到遍历结束之间，源在结构上受到干扰（添加，替换或删除的元素），则可能会发生任意和不确定的行为。例如，使用 &lt;code&gt;java.util.stream&lt;/code&gt; 框架时，此类干扰将产生任意的不确定结果。</target>
        </trans-unit>
        <trans-unit id="25193b196b4f7600b5dbdd467bd6c547e23b4a19" translate="yes" xml:space="preserve">
          <source>For named modules, the returned set contains an element for each package in the module.</source>
          <target state="translated">对于命名的模块,返回的集合包含模块中每个包的一个元素。</target>
        </trans-unit>
        <trans-unit id="78b0c05700e618c811cbdeb91b30a28661eb895a" translate="yes" xml:space="preserve">
          <source>For nodes of any type other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; and nodes created with a DOM Level 1 method, such as &lt;code&gt;Document.createElement()&lt;/code&gt;, this is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;ELEMENT_NODE&lt;/code&gt; 和 &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; 以外的任何类型的节点以及使用DOM Level 1方法创建的节点 &lt;code&gt;Document.createElement()&lt;/code&gt; 例如Document.createElement（）），该值始终为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6892baceeeb04510a39a946267b15b55509adb7b" translate="yes" xml:space="preserve">
          <source>For nodes of any type other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; and nodes created with a DOM Level 1 method, such as &lt;code&gt;createElement&lt;/code&gt; from the &lt;code&gt;Document&lt;/code&gt; interface, this is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">比其他任何类型的节点 &lt;code&gt;ELEMENT_NODE&lt;/code&gt; 和 &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; 节点与DOM级别1的方法，例如创建和 &lt;code&gt;createElement&lt;/code&gt; 从 &lt;code&gt;Document&lt;/code&gt; 的界面，这始终是 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f278ad171d850a8af543d2f081a00db12840525e" translate="yes" xml:space="preserve">
          <source>For non-&lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has poor splitting properties, similar to that of a spliterator associated with an iterator or that associated with a stream returned from &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;. Poor splitting properties can result in poor parallel stream performance.</source>
          <target state="translated">对于非&lt;em&gt;行最佳&lt;/em&gt;字符集，流源的拆分器具有较差的拆分属性，类似于与迭代器关联的拆分器或与从&lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt;返回的流关联的拆分器。较差的拆分属性可能会导致并行流性能下降。</target>
        </trans-unit>
        <trans-unit id="282aa7c260e2aae49eeff8198a51995a4a15b876" translate="yes" xml:space="preserve">
          <source>For non-concurrent collectors, any result returned from the result supplier, accumulator, or combiner functions must be serially thread-confined. This enables collection to occur in parallel without the &lt;code&gt;Collector&lt;/code&gt; needing to implement any additional synchronization. The reduction implementation must manage that the input is properly partitioned, that partitions are processed in isolation, and combining happens only after accumulation is complete.</source>
          <target state="translated">对于非并发收集器，必须将结果提供者，累加器或组合器函数返回的所有结果串行地限制在线程中。这使收集可以并行发生，而 &lt;code&gt;Collector&lt;/code&gt; 无需实现任何其他同步。简化实现必须管理输入已正确分区，分区被隔离处理以及仅在累加完成后才进行合并。</target>
        </trans-unit>
        <trans-unit id="2438b72799366ac407374d286bd01f0c4166089c" translate="yes" xml:space="preserve">
          <source>For objects of type &lt;code&gt;Class,&lt;/code&gt; by executing a synchronized static method of that class.</source>
          <target state="translated">对于 &lt;code&gt;Class,&lt;/code&gt; 类型的对象，通过执行该类的同步静态方法。</target>
        </trans-unit>
        <trans-unit id="2393833e8c76843229b97d3096ce8ec39cd225c2" translate="yes" xml:space="preserve">
          <source>For once-off notifications, the notification is delivered immediately.</source>
          <target state="translated">对于一次性通知,通知会立即发送。</target>
        </trans-unit>
        <trans-unit id="3f4ed89b54bd26be6870100c57685d81eb9d6db9" translate="yes" xml:space="preserve">
          <source>For operation under a 1.1 virtual machine, this uses the value returned by &lt;code&gt;toString&lt;/code&gt; concatenated to the classname. The value returned by toString should not have the class reference in it (ie it should be reimplemented from the definition in Object) in order to be the same when recomputed later.</source>
          <target state="translated">对于在1.1虚拟机上的操作，此操作使用由 &lt;code&gt;toString&lt;/code&gt; 返回的值连接到类名。toString返回的值中不应包含类引用（即应从Object中的定义重新实现），以便在以后重新计算时相同。</target>
        </trans-unit>
        <trans-unit id="eb01da6b90e46d6f44e5d813ee9681cba49cc8a0" translate="yes" xml:space="preserve">
          <source>For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean(false):</source>
          <target state="translated">对于以特定类型作为参数的选项,getOption(int)将返回参数的值,否则将返回java.lang.Boolean(false)。</target>
        </trans-unit>
        <trans-unit id="1349eb15a8a9be1a8e6e057dc2ac8b33f793323e" translate="yes" xml:space="preserve">
          <source>For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean.FALSE:</source>
          <target state="translated">对于以特定类型作为参数的选项,getOption(int)将返回参数的值,否则将返回java.lang.Boolean.FALSE。</target>
        </trans-unit>
        <trans-unit id="0c0acc100e32fc6234c0c7457cf6dc7e5450a156" translate="yes" xml:space="preserve">
          <source>For ordered streams, the selection of distinct elements is stable (for duplicated elements, the element appearing first in the encounter order is preserved.) For unordered streams, no stability guarantees are made.</source>
          <target state="translated">对于有序的流,不同元素的选择是稳定的(对于重复的元素,保留相遇顺序中最先出现的元素)。对于无序流,不做稳定性保证。</target>
        </trans-unit>
        <trans-unit id="001abdbdf15e42842cf7a21df9e3b1a4e78dc160" translate="yes" xml:space="preserve">
          <source>For ordered streams, the sort is stable. For unordered streams, no stability guarantees are made.</source>
          <target state="translated">对于有序流,排序是稳定的。对于无序流,不保证稳定性。</target>
        </trans-unit>
        <trans-unit id="6c729397bf989a0e1b25cc2c57e1b20cd8e4b8c6" translate="yes" xml:space="preserve">
          <source>For out going messages the &lt;code&gt;timeToLive&lt;/code&gt; parameter is a time period that the sending side SCTP stack may expire the message if it has not been sent. This time period is an indication to the stack that the message is no longer required to be sent after the time period expires. It is not a hard timeout and may be influenced by whether the association supports the partial reliability extension, &lt;a href=&quot;https://www.ietf.org/rfc/rfc3758.txt&quot;&gt;RFC 3758 &lt;/a&gt;.</source>
          <target state="translated">对于外发消息， &lt;code&gt;timeToLive&lt;/code&gt; 参数是发送方SCTP堆栈可能在未发送消息时使消息过期的时间段。该时间段向堆栈指示在该时间段到期后不再需要发送消息。这不是硬超时，并且可能受关联是否支持部分可靠性扩展&lt;a href=&quot;https://www.ietf.org/rfc/rfc3758.txt&quot;&gt;RFC 3758的影响&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0cc3c03d940589c6746e4c70b9692c35da706494" translate="yes" xml:space="preserve">
          <source>For overview, architecture, and tutorial documentation, please see:</source>
          <target state="translated">有关概述、架构和教程文档,请参见。</target>
        </trans-unit>
        <trans-unit id="d8bfdf98afbbde02f03df613f17f462dca795146" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, and guides, please see:</source>
          <target state="translated">有关概述、教程、示例和指南,请参见。</target>
        </trans-unit>
        <trans-unit id="8e018fd62c549e8e2179cc594ca3a679f6ac03ca" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and other documentation, please see:</source>
          <target state="translated">有关概述、教程、示例、指南和其他文档,请参见。</target>
        </trans-unit>
        <trans-unit id="62f1d3f7834b33683db871654f454196f1523b2d" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;Input Method Framework Overview&lt;/a&gt;.</source>
          <target state="translated">有关概述，教程，示例，指南和工具文档，请参见&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;输入法框架概述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c0ce3cec54e96b8406619a3ad08ba8f9250c72f" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework Overview&lt;/a&gt;.</source>
          <target state="translated">有关概述，教程，示例，指南和工具文档，请参见&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;输入法框架概述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d68439e8f07c23e343822db92fbf1f865a4c58c7" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see:</source>
          <target state="translated">有关概述、教程、示例、指南和工具文档,请参见。</target>
        </trans-unit>
        <trans-unit id="f86ceb74f740cac0f77b81c7bf321ec528a40fdb" translate="yes" xml:space="preserve">
          <source>For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">对于并行流管道,该动作可以在上游操作提供元素的任何时间和任何线程中调用。如果动作修改了共享状态,它负责提供所需的同步。</target>
        </trans-unit>
        <trans-unit id="f0fc793c5384edf9a979ea96ace2f88d94083d6a" translate="yes" xml:space="preserve">
          <source>For parallel stream pipelines, this operation does &lt;em&gt;not&lt;/em&gt; guarantee to respect the encounter order of the stream, as doing so would sacrifice the benefit of parallelism. For any given element, the action may be performed at whatever time and in whatever thread the library chooses. If the action accesses shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">对于并行流管道，此操作&lt;em&gt;不能&lt;/em&gt;保证尊重流的遇到顺序，因为这样做会牺牲并行性的好处。对于任何给定的元素，可以在库选择的任何时间和线程中执行操作。如果操作访问共享状态，则它负责提供所需的同步。</target>
        </trans-unit>
        <trans-unit id="c2e0c24ab6772aaaf6d162d55ee00363ff393680" translate="yes" xml:space="preserve">
          <source>For parallel streams, relaxing the ordering constraint can sometimes enable more efficient execution. Certain aggregate operations, such as filtering duplicates (&lt;code&gt;distinct()&lt;/code&gt;) or grouped reductions (&lt;code&gt;Collectors.groupingBy()&lt;/code&gt;) can be implemented more efficiently if ordering of elements is not relevant. Similarly, operations that are intrinsically tied to encounter order, such as &lt;code&gt;limit()&lt;/code&gt;, may require buffering to ensure proper ordering, undermining the benefit of parallelism. In cases where the stream has an encounter order, but the user does not particularly &lt;em&gt;care&lt;/em&gt; about that encounter order, explicitly de-ordering the stream with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;unordered()&lt;/code&gt;&lt;/a&gt; may improve parallel performance for some stateful or terminal operations. However, most stream pipelines, such as the &quot;sum of weight of blocks&quot; example above, still parallelize efficiently even under ordering constraints.</source>
          <target state="translated">对于并行流，放宽排序约束有时可以使执行效率更高。如果元素的顺序不相关，则某些聚合操作（例如，过滤重复项（ &lt;code&gt;distinct()&lt;/code&gt; ）或分组的约简（ &lt;code&gt;Collectors.groupingBy()&lt;/code&gt; ）可以更有效地实现。类似地，本质上与遇到顺序相关的操作（例如 &lt;code&gt;limit()&lt;/code&gt; )可能需要缓冲以确保正确的顺序，从而削弱了并行性的优势。在流具有遇到顺序的情况下，但用户并不特别&lt;em&gt;关心&lt;/em&gt;该遇到顺序，请使用&lt;a href=&quot;basestream#unordered()&quot;&gt; &lt;code&gt;unordered()&lt;/code&gt; &lt;/a&gt;显式地对流进行排序。可能会提高某些有状态或终端操作的并行性能。但是，大多数流管道，例如上面的&amp;ldquo;块权重之和&amp;rdquo;示例，即使在排序约束下也仍然有效地并行化。</target>
        </trans-unit>
        <trans-unit id="4a022d17d72acbe4095f5d82c97b6b3416972a03" translate="yes" xml:space="preserve">
          <source>For parallel streams, relaxing the ordering constraint can sometimes enable more efficient execution. Certain aggregate operations, such as filtering duplicates (&lt;code&gt;distinct()&lt;/code&gt;) or grouped reductions (&lt;code&gt;Collectors.groupingBy()&lt;/code&gt;) can be implemented more efficiently if ordering of elements is not relevant. Similarly, operations that are intrinsically tied to encounter order, such as &lt;code&gt;limit()&lt;/code&gt;, may require buffering to ensure proper ordering, undermining the benefit of parallelism. In cases where the stream has an encounter order, but the user does not particularly &lt;em&gt;care&lt;/em&gt; about that encounter order, explicitly de-ordering the stream with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;unordered()&lt;/code&gt;&lt;/a&gt; may improve parallel performance for some stateful or terminal operations. However, most stream pipelines, such as the &quot;sum of weight of blocks&quot; example above, still parallelize efficiently even under ordering constraints.</source>
          <target state="translated">对于并行流，放宽排序约束有时可以使执行效率更高。如果元素的顺序无关紧要，则可以更有效地实现某些聚合操作，例如过滤重复项（ &lt;code&gt;distinct()&lt;/code&gt; ）或分组归约（ &lt;code&gt;Collectors.groupingBy()&lt;/code&gt; ）。类似地，本质上与遇到顺序相关的操作（例如 &lt;code&gt;limit()&lt;/code&gt; )可能需要缓冲以确保正确的顺序，从而削弱了并行性的优势。如果流具有遇到顺序，但是用户并不特别&lt;em&gt;关心&lt;/em&gt;该遇到顺序，请使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;unordered()&lt;/code&gt; &lt;/a&gt;显式地对流进行排序。可能会提高某些有状态或终端操作的并行性能。但是，大多数流管道，例如上面的&amp;ldquo;块权重之和&amp;rdquo;示例，即使在排序约束下也仍然有效地并行化。</target>
        </trans-unit>
        <trans-unit id="9e73b1d1f2d18bb67b976ff90a09775a27eb548e" translate="yes" xml:space="preserve">
          <source>For parser interface characteristics that are described as objects, a separate namespace is defined. The objects in this namespace are again identified by URI, and the standard property URIs have the prefix &lt;code&gt;http://xml.org/sax/properties/&lt;/code&gt; before an identifier such as &lt;code&gt;lexical-handler&lt;/code&gt; or &lt;code&gt;dom-node&lt;/code&gt;. Manage those properties using &lt;em&gt;setProperty()&lt;/em&gt;. Those identifiers are:</source>
          <target state="translated">对于描述为对象的解析器接口特征，定义了一个单独的名称空间。该名称空间中的对象再次由URI标识，并且标准属性URI在诸如 &lt;code&gt;lexical-handler&lt;/code&gt; 或 &lt;code&gt;dom-node&lt;/code&gt; 之类的标识符之前具有前缀 &lt;code&gt;http://xml.org/sax/properties/&lt;/code&gt; 。使用&lt;em&gt;setProperty（）&lt;/em&gt;管理那些属性。这些标识符是：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf900feffef41cc4b28ed04126fec2aa9d3d70eb" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">要使用缩写的年份模式（&amp;ldquo; y&amp;rdquo;或&amp;ldquo; yy&amp;rdquo;）进行分析， &lt;code&gt;SimpleDateFormat&lt;/code&gt; 必须解释相对于某个世纪的缩写的年份。它通过将日期调整为在创建 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 实例之前的80年内和之后的20年内来实现此目的。例如，使用模式&amp;ldquo; MM / dd / yy&amp;rdquo;和1997年1月1日创建的 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 实例，字符串&amp;ldquo; 01/11/12&amp;rdquo;将解释为2012年1月11日，而字符串&amp;ldquo; 05/04 /&amp;rdquo; 64&amp;ldquo;将被解释为1964年5月4日。在解析期间，仅字符串由正好由两位数字组成，如&lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; &lt;/a&gt;所定义，将被解析为默认世纪。从字面上解释任何其他数字字符串，例如一个数字字符串，三个或三个以上数字字符串或不是所有数字的两个数字字符串（例如&amp;ldquo; -1&amp;rdquo;）。因此，使用与公元1月2日相同的模式来解析&amp;ldquo; 01/02/3&amp;rdquo;或&amp;ldquo; 01/02/003&amp;rdquo;。同样，&amp;ldquo; 01/02 / -3&amp;rdquo;被解析为公元前4年1月2日。</target>
        </trans-unit>
        <trans-unit id="f59f9b594d7dd4a34f5d782945a41831c3266165" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit(int)&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">要使用缩写的年份模式（&amp;ldquo; y&amp;rdquo;或&amp;ldquo; yy&amp;rdquo;）进行分析， &lt;code&gt;SimpleDateFormat&lt;/code&gt; 必须解释相对于某个世纪的缩写的年份。它通过将日期调整为在创建 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 实例之前的80年内和之后的20年内来实现此目的。例如，使用模式&amp;ldquo; MM / dd / yy&amp;rdquo;和1997年1月1日创建的 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 实例，字符串&amp;ldquo; 01/11/12&amp;rdquo;将解释为2012年1月11日，而字符串&amp;ldquo; 05/04 /&amp;rdquo; 64&amp;ldquo;将被解释为1964年5月4日。在解析期间，仅字符串由正好由两位数字组成，如&lt;a href=&quot;../lang/character#isDigit(int)&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; &lt;/a&gt;所定义，将被解析为默认世纪。从字面上解释任何其他数字字符串，例如一个数字字符串，三个或三个以上数字字符串或不是所有数字的两个数字字符串（例如&amp;ldquo; -1&amp;rdquo;）。因此，使用与公元1月2日相同的模式来解析&amp;ldquo; 01/02/3&amp;rdquo;或&amp;ldquo; 01/02/003&amp;rdquo;。同样，&amp;ldquo; 01/02 / -3&amp;rdquo;被解析为公元前4年1月2日。</target>
        </trans-unit>
        <trans-unit id="c570a798086e94379323b4fd869f2a44d713a877" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">要使用缩写的年份模式（&amp;ldquo; y&amp;rdquo;或&amp;ldquo; yy&amp;rdquo;）进行解析， &lt;code&gt;SimpleDateFormat&lt;/code&gt; 必须解释相对于某个世纪的缩写的年份。它通过将日期调整为在创建 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 实例之前的80年和之后的20年之内来实现此目的。例如，使用模式&amp;ldquo; MM / dd / yy&amp;rdquo;和1997年1月1日创建的 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 实例，字符串&amp;ldquo; 01/11/12&amp;rdquo;将被解释为2012年1月11日，而字符串&amp;ldquo; 05/04 /&amp;rdquo; 64&amp;ldquo;将被解释为1964年5月4日。在解析期间，仅字符串由正好由两位数字组成，如&lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; &lt;/a&gt;所定义，将被解析为默认世纪。从字面上解释任何其他数字字符串，例如一个数字字符串，三个或三个以上数字字符串或不是所有数字的两个数字字符串（例如&amp;ldquo; -1&amp;rdquo;）。因此，使用与公元1月2日相同的模式来分析&amp;ldquo; 01/02/3&amp;rdquo;或&amp;ldquo; 01/02/003&amp;rdquo;。同样，&amp;ldquo; 01/02 / -3&amp;rdquo;被解析为公元前4年1月2日。</target>
        </trans-unit>
        <trans-unit id="4a764f5159f9e22afe179e63808190284e10eb12" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822 time zones&lt;/a&gt; are also accepted.</source>
          <target state="translated">为了进行解析，还接受&lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822时区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baabe17164e63bd44c3000ec7a5be5ff380b1df0" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;a href=&quot;#timezone&quot;&gt;general time zones&lt;/a&gt; are also accepted.</source>
          <target state="translated">对于解析，也可以接受&lt;a href=&quot;#timezone&quot;&gt;常规时区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fac8c5ed0886874a6aa7b271e61c544b5d8be575" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;code&gt;&quot;Z&quot;&lt;/code&gt; is parsed as the UTC time zone designator. &lt;a href=&quot;#timezone&quot;&gt;General time zones&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; accepted.</source>
          <target state="translated">为了进行解析，将 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; 解析为UTC时区指示符。&lt;a href=&quot;#timezone&quot;&gt;一般的时区&lt;/a&gt;都&lt;em&gt;没有&lt;/em&gt;接受。</target>
        </trans-unit>
        <trans-unit id="1e6618bdd467f78f58afb023c88a8cc4afa3e44a" translate="yes" xml:space="preserve">
          <source>For parsing, if the number of pattern letters is more than 2, the year is interpreted literally, regardless of the number of digits. So using the pattern &quot;MM/dd/yyyy&quot;, &quot;01/11/12&quot; parses to Jan 11, 12 A.D.</source>
          <target state="translated">在解析时,如果模式字母的数量超过2个,则无论数字多少,都会按字面解释年份。所以使用模式 &quot;MM/dd/yyyy&quot;,&quot;01/11/12 &quot;解析为公元12年1月11日。</target>
        </trans-unit>
        <trans-unit id="26ab4b1f4f2fedc9dbe0601284ca2ee8e4aeac44" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;code&gt;Component&lt;/code&gt;s with zero width or height aren't considered to need painting when they are first shown, and also aren't considered to need repair.</source>
          <target state="translated">出于性能方面的考虑，首次显示宽度或高度为零的 &lt;code&gt;Component&lt;/code&gt; 时不认为需要上漆，也不认为需要维修。</target>
        </trans-unit>
        <trans-unit id="7160eed7fa1346d63fcd7925944e1d727500c617" translate="yes" xml:space="preserve">
          <source>For performance reasons, it is preferable that &lt;code&gt;Raster&lt;/code&gt; objects passed to the &lt;code&gt;compose&lt;/code&gt; method of a &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt; object created by the &lt;code&gt;AlphaComposite&lt;/code&gt; class have premultiplied data. If either the source &lt;code&gt;Raster&lt;/code&gt; or the destination &lt;code&gt;Raster&lt;/code&gt; is not premultiplied, however, appropriate conversions are performed before and after the compositing operation.</source>
          <target state="translated">出于性能原因，传递给 &lt;code&gt;AlphaComposite&lt;/code&gt; 类创建的&lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt;对象的 &lt;code&gt;compose&lt;/code&gt; 方法的 &lt;code&gt;Raster&lt;/code&gt; 对象最好具有预乘数据。但是，如果未预先乘以源 &lt;code&gt;Raster&lt;/code&gt; 或目标 &lt;code&gt;Raster&lt;/code&gt; ，则在合成操作之前和之后都将进行适当的转换。</target>
        </trans-unit>
        <trans-unit id="2c001c6ebfd8657baca1812a75f6899a1d0dbf06" translate="yes" xml:space="preserve">
          <source>For periodic notifications, the first notification is delivered immediately and the subsequent ones are spaced as specified by the period parameter.</source>
          <target state="translated">对于周期性的通知,第一次通知会立即发送,随后的通知会按照周期参数的规定间隔发送。</target>
        </trans-unit>
        <trans-unit id="c073373dd230874d620a8da3acd5b596dbfa99f6" translate="yes" xml:space="preserve">
          <source>For primitive arrays the &lt;a href=&quot;#getElementOpenType()&quot;&gt;&lt;code&gt;getElementOpenType()&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt; corresponding to the wrapper type of the primitive type of the array.</source>
          <target state="translated">对于原始数组，&lt;a href=&quot;#getElementOpenType()&quot;&gt; &lt;code&gt;getElementOpenType()&lt;/code&gt; &lt;/a&gt;方法返回与数组原始类型的包装器类型相对应的&lt;a href=&quot;simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f821990434cda12a37c22f0b70c7a915410fdb2" translate="yes" xml:space="preserve">
          <source>For primitive arrays the &lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt;&lt;code&gt;getElementOpenType()&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt; corresponding to the wrapper type of the primitive type of the array.</source>
          <target state="translated">对于原始数组，&lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt; &lt;code&gt;getElementOpenType()&lt;/code&gt; &lt;/a&gt;方法返回与数组原始类型的包装器类型相对应的&lt;a href=&quot;simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1852a857e6c6604b004e3458ad42f21fe5e162d7" translate="yes" xml:space="preserve">
          <source>For primitive values, such as &lt;code&gt;opaque&lt;/code&gt;, the method &lt;code&gt;
 installProperty&lt;/code&gt; should be invoked. &lt;code&gt;installProperty&lt;/code&gt; only changes the corresponding property if the value has not been changed by the developer.</source>
          <target state="translated">对于诸如 &lt;code&gt;opaque&lt;/code&gt; 之类的原始值，应调用方法 &lt;code&gt; installProperty&lt;/code&gt; 。如果开发人员未更改该值，则 &lt;code&gt;installProperty&lt;/code&gt; 仅更改相应的属性。</target>
        </trans-unit>
        <trans-unit id="4ad66ae8d5664bf576a41f20650fa30d06e9cd67" translate="yes" xml:space="preserve">
          <source>For purposes of concurrency control, a Context operation that returns a &lt;code&gt;NamingEnumeration&lt;/code&gt; is not considered to have completed while the enumeration is still in use, or while any referrals generated by that operation are still being followed.</source>
          <target state="translated">出于并发控制的目的，返回 &lt;code&gt;NamingEnumeration&lt;/code&gt; 的Context操作在枚举仍在使用时，或在仍遵循该操作生成的任何引用时，都被视为未完成。</target>
        </trans-unit>
        <trans-unit id="9f3974f591009726983466072bceba6e0651cf09" translate="yes" xml:space="preserve">
          <source>For purposes of the methods in this class, colors are represented as arrays of color components represented as floats in a normalized range defined by each &lt;code&gt;ColorSpace&lt;/code&gt;. For many &lt;code&gt;ColorSpaces&lt;/code&gt; (e.g. sRGB), this range is 0.0 to 1.0. However, some &lt;code&gt;ColorSpaces&lt;/code&gt; have components whose values have a different range. Methods are provided to inquire per component minimum and maximum normalized values.</source>
          <target state="translated">出于此类中方法的目的，颜色表示为颜色成分的数组，这些颜色成分表示为在每个 &lt;code&gt;ColorSpace&lt;/code&gt; 定义的归一化范围内的float 。对于许多 &lt;code&gt;ColorSpaces&lt;/code&gt; （例如sRGB），此范围是0.0到1.0。但是，某些 &lt;code&gt;ColorSpaces&lt;/code&gt; 具有其值具有不同范围的组件。提供了用于查询每个组件的最小和最大归一化值的方法。</target>
        </trans-unit>
        <trans-unit id="5b70912ee937c9b1afb11355852437a3c9e2750e" translate="yes" xml:space="preserve">
          <source>For purposes of the methods in this class, colors are represented as arrays of color components represented as floats in a normalized range defined by each ColorSpace. For many ColorSpaces (e.g. sRGB), this range is 0.0 to 1.0. However, some ColorSpaces have components whose values have a different range. Methods are provided to inquire per component minimum and maximum normalized values.</source>
          <target state="translated">在本类中的方法中,颜色被表示为由每个ColorSpace定义的归一化范围内的浮点数的颜色组件数组。对于许多ColorSpaces(例如sRGB),这个范围是0.0到1.0。然而,一些ColorSpaces的组件的值有不同的范围。我们提供了查询每个组件最小和最大归一化值的方法。</target>
        </trans-unit>
        <trans-unit id="5cb8df1427c2607eeb964dabbba2a3f6332dd9c2" translate="yes" xml:space="preserve">
          <source>For received messages &lt;code&gt;true&lt;/code&gt; indicates that the message was completely received. For messages being sent &lt;code&gt;true&lt;/code&gt; indicates that the message is complete, &lt;code&gt;false&lt;/code&gt; indicates that the message is not complete. How the send channel interprets this value depends on the value of its &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="translated">对于接收到的消息，为 &lt;code&gt;true&lt;/code&gt; 表示已完全接收到消息。对于正在发送的消息 &lt;code&gt;true&lt;/code&gt; 表示该消息是完整的， &lt;code&gt;false&lt;/code&gt; 表示该消息是不完整的。发送通道如何解释此值取决于其&lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt; &lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt; &lt;/a&gt;套接字选项的值。</target>
        </trans-unit>
        <trans-unit id="18e33a6b1d1aec8bfa5947f6b05e341ac3dfef4d" translate="yes" xml:space="preserve">
          <source>For resources in named modules then the method must implement the rules for encapsulation specified in the &lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;getResourceAsStream&lt;/code&gt;&lt;/a&gt; method. Additionally, it must not find non-&quot;&lt;code&gt;.class&lt;/code&gt;&quot; resources in packages of named modules unless the package is &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opened&lt;/code&gt;&lt;/a&gt; unconditionally.</source>
          <target state="translated">对于命名模块中的资源，该方法必须实现 &lt;code&gt;Module&lt;/code&gt; &lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;getResourceAsStream&lt;/code&gt; &lt;/a&gt;方法中指定的封装规则。另外，除非无条件&lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opened&lt;/code&gt; &lt;/a&gt;包，否则它一定不能在命名模块的包中找到非&amp;ldquo; &lt;code&gt;.class&lt;/code&gt; &amp;rdquo;资源。</target>
        </trans-unit>
        <trans-unit id="6af3b8b702cec551453071655b308d7ec1304eee" translate="yes" xml:space="preserve">
          <source>For retransformations, the retransformation incapable transformers are not called, instead the result of the previous transformation is reused. In all other cases, this method is called. Within each of these groupings, transformers are called in the order registered. Native transformers are provided by the &lt;code&gt;ClassFileLoadHook&lt;/code&gt; event in the Java Virtual Machine Tool Interface).</source>
          <target state="translated">对于重新转换，不调用没有重新转换能力的转换器，而是重新使用先前转换的结果。在所有其他情况下，将调用此方法。在每个分组中，按注册顺序调用变压器。本机转换器由Java虚拟机工具界面中的 &lt;code&gt;ClassFileLoadHook&lt;/code&gt; 事件提供。</target>
        </trans-unit>
        <trans-unit id="7dd2facb3f68ee424622ebbb379381658dbe37eb" translate="yes" xml:space="preserve">
          <source>For security reasons, it is often desirable to use an &lt;code&gt;ActiveEvent&lt;/code&gt; to avoid calling untrusted code from a critical thread. For instance, peer implementations can use this facility to avoid making calls into user code from a system thread. Doing so avoids potential deadlocks and denial-of-service attacks.</source>
          <target state="translated">出于安全原因，通常希望使用 &lt;code&gt;ActiveEvent&lt;/code&gt; 来避免从关键线程中调用不受信任的代码。例如，对等实现可以使用此功能来避免从系统线程对用户代码进行调用。这样做可以避免潜在的死锁和拒绝服务攻击。</target>
        </trans-unit>
        <trans-unit id="68aca3f784675cc07cb4e0642cca8613fe19a4fb" translate="yes" xml:space="preserve">
          <source>For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase</source>
          <target state="translated">出于安全考虑,每个代码库都存在流和密钥的映射。换句话说,来自一个代码库的applet不能访问来自不同代码库的applet创建的流。</target>
        </trans-unit>
        <trans-unit id="090a205944e041a23c2af870eee91a2ad52fe770" translate="yes" xml:space="preserve">
          <source>For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase.</source>
          <target state="translated">出于安全考虑,每个代码库都存在流和密钥的映射。换句话说,来自一个代码库的applet不能访问来自不同代码库的applet创建的流。</target>
        </trans-unit>
        <trans-unit id="3aaf586cff8e4109d1052cda9cf2048cf817c051" translate="yes" xml:space="preserve">
          <source>For security reasons, the same named values may not be visible across different access control contexts.</source>
          <target state="translated">出于安全原因,相同的命名值在不同的访问控制上下文中可能不可见。</target>
        </trans-unit>
        <trans-unit id="07a616bdd03b87c7c8b36c86cf798f970d625046" translate="yes" xml:space="preserve">
          <source>For security reasons, this method is deprecated. Use the &lt;code&gt;* getPassword&lt;/code&gt; method instead.</source>
          <target state="translated">出于安全原因，不建议使用此方法。使用 &lt;code&gt;* getPassword&lt;/code&gt; 方法代替。</target>
        </trans-unit>
        <trans-unit id="b9a153d78438e600a61dd60f37ea36fd771a9301" translate="yes" xml:space="preserve">
          <source>For security reasons, this method is deprecated. Use the &lt;code&gt;getPassword&lt;/code&gt; method instead.</source>
          <target state="translated">出于安全原因，不建议使用此方法。请改用 &lt;code&gt;getPassword&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5bc2c1eacdb9df0b1e19143b671c79f00c7d88d8" translate="yes" xml:space="preserve">
          <source>For security reasons, this option may imply the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;LinkOption.NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option. In other words, if the option is present when opening an existing file that is a symbolic link then it may fail (by throwing &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">出于安全原因，此选项可能暗含&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;LinkOption.NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;选项。换句话说，如果在打开作为符号链接的现有文件时存在该选项，则该选项可能会失败（通过抛出&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1e48b929136f5e9d3672a30cfe645fb8bf5a7c9f" translate="yes" xml:space="preserve">
          <source>For sensitive information, a &lt;a href=&quot;httpsserver&quot;&gt;&lt;code&gt;HttpsServer&lt;/code&gt;&lt;/a&gt; can be used to process &quot;https&quot; requests secured by the SSL or TLS protocols. A HttpsServer must be provided with a &lt;a href=&quot;httpsconfigurator&quot;&gt;&lt;code&gt;HttpsConfigurator&lt;/code&gt;&lt;/a&gt; object, which contains an initialized &lt;a href=&quot;../../../../../java.base/javax/net/ssl/sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;. HttpsConfigurator can be used to configure the cipher suites and other SSL operating parameters. A simple example SSLContext could be created as follows:</source>
          <target state="translated">对于敏感信息，可以使用&lt;a href=&quot;httpsserver&quot;&gt; &lt;code&gt;HttpsServer&lt;/code&gt; &lt;/a&gt;处理由SSL或TLS协议保护的&amp;ldquo; https&amp;rdquo;请求。必须为HttpsServer提供&lt;a href=&quot;httpsconfigurator&quot;&gt; &lt;code&gt;HttpsConfigurator&lt;/code&gt; &lt;/a&gt;对象，该对象包含已初始化的&lt;a href=&quot;../../../../../java.base/javax/net/ssl/sslcontext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;。 HttpsConfigurator可用于配置密码套件和其他SSL操作参数。可以创建一个简单的示例SSLContext，如下所示：</target>
        </trans-unit>
        <trans-unit id="48e8cccc24afd200b00b6d417f9f7eb38448e719" translate="yes" xml:space="preserve">
          <source>For sequential streams, the presence or absence of an encounter order does not affect performance, only determinism. If a stream is ordered, repeated execution of identical stream pipelines on an identical source will produce an identical result; if it is not ordered, repeated execution might produce different results.</source>
          <target state="translated">对于顺序流来说,有无遇到顺序并不影响性能,只影响确定性。如果一个流是有序的,那么在相同的源上重复执行相同的流管道将产生相同的结果;如果不是有序的,重复执行可能产生不同的结果。</target>
        </trans-unit>
        <trans-unit id="612299030742e36a518e5bbd5b2e467622413307" translate="yes" xml:space="preserve">
          <source>For service formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted). Nested classes inside class &lt;code&gt;DocFlavor&lt;/code&gt; declare predefined static constant &lt;code&gt;DocFlavor&lt;/code&gt; objects for these example doc flavors; class &lt;code&gt;DocFlavor&lt;/code&gt;'s constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">对于服务格式的打印数据，打印数据表示形式类别通常是以下之一（尽管允许其他表示形式类别）。 &lt;code&gt;DocFlavor&lt;/code&gt; 类中的嵌套类为这些示例DocFlavor声明了预定义的静态常量 &lt;code&gt;DocFlavor&lt;/code&gt; 对象。 &lt;code&gt;DocFlavor&lt;/code&gt; 类的构造函数可用于创建任意doc样式。</target>
        </trans-unit>
        <trans-unit id="26bb61cb564ead626c2bde55cc602f10668817ef" translate="yes" xml:space="preserve">
          <source>For service formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted). Nested classes inside class DocFlavor declare predefined static constant DocFlavor objects for these example doc flavors; class DocFlavor's constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">对于服务格式化的打印数据,打印数据的表示类通常是下面的一种(尽管允许使用其他的表示类)。在类DocFlavor内部的嵌套类为这些示例文档风味声明了预定义的静态常量DocFlavor对象;类DocFlavor的构造函数可以用来创建一个任意的文档风味。</target>
        </trans-unit>
        <trans-unit id="e47563fc5b992c913402209b3b12d7e051476c9a" translate="yes" xml:space="preserve">
          <source>For simple applications requiring only line-oriented reading, use &lt;a href=&quot;#readLine(java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于仅需要面向行阅读的简单应用程序，请使用&lt;a href=&quot;#readLine(java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca1d6d31248f3efa59038d05d967fd0679416a5d" translate="yes" xml:space="preserve">
          <source>For simple applications requiring only line-oriented reading, use &lt;code&gt;&lt;a href=&quot;console#readLine-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">对于仅需要面向行阅读的简单应用程序，请使用 &lt;code&gt;&lt;a href=&quot;console#readLine-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10110bc1b4d00e0dc3d5198a1f41849e4846b830" translate="yes" xml:space="preserve">
          <source>For simple stand-alone Java applications, a typical way to write a line of output data is:</source>
          <target state="translated">对于简单的单机Java应用程序,写一行输出数据的典型方法是。</target>
        </trans-unit>
        <trans-unit id="08ab4d80904580e41702f8742bdd05a4e07d7c29" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists (e.g., so-called</source>
          <target state="translated">对于已经存在一组特定算法参数的情况(例如,所谓的</target>
        </trans-unit>
        <trans-unit id="55d2efc269d07ba41c86c8d0158f4502fe21c27a" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists, there are two &lt;a href=&quot;#init(java.security.spec.AlgorithmParameterSpec)&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; methods that have an &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; argument. One also has a &lt;code&gt;SecureRandom&lt;/code&gt; argument, while the other uses the SecureRandom implementation of the highest-priority installed provider as the source of randomness (or a system-provided source of randomness if none of the installed providers supply a SecureRandom implementation).</source>
          <target state="translated">对于已经存在一组特定于算法的参数的情况，有两种具有 &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; 自变量的&lt;a href=&quot;#init(java.security.spec.AlgorithmParameterSpec)&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt;方法。一个也有一个 &lt;code&gt;SecureRandom&lt;/code&gt; 参数，而另一个使用最高优先级已安装提供程序的SecureRandom实现作为随机源（如果没有安装的提供程序提供SecureRandom实现，则使用系统提供的随机源）。</target>
        </trans-unit>
        <trans-unit id="95eedb101c336b80a564e4cdfc54df965d97f306" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists, there are two &lt;a href=&quot;keygenerator#init-java.security.spec.AlgorithmParameterSpec-&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; methods that have an &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; argument. One also has a &lt;code&gt;SecureRandom&lt;/code&gt; argument, while the other uses the SecureRandom implementation of the highest-priority installed provider as the source of randomness (or a system-provided source of randomness if none of the installed providers supply a SecureRandom implementation).</source>
          <target state="translated">对于已经存在一组特定于算法的参数的情况，有两种具有 &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; 自变量的&lt;a href=&quot;keygenerator#init-java.security.spec.AlgorithmParameterSpec-&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt;方法。一个也有一个 &lt;code&gt;SecureRandom&lt;/code&gt; 参数，而另一个则使用最高优先级已安装提供程序的SecureRandom实现作为随机源（如果没有安装的提供程序提供SecureRandom实现，则使用系统提供的随机源）。</target>
        </trans-unit>
        <trans-unit id="f8119c10712b80271b387c627507ed293ca218ad" translate="yes" xml:space="preserve">
          <source>For sockets accepted from a ServerSocket, this must be done by calling &lt;a href=&quot;serversocket#setReceiveBufferSize(int)&quot;&gt;&lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt; before the ServerSocket is bound to a local address.</source>
          <target state="translated">对于从ServerSocket接受的套接字，必须在将ServerSocket绑定到本地地址之前调用&lt;a href=&quot;serversocket#setReceiveBufferSize(int)&quot;&gt; &lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt; &lt;/a&gt;来完成此操作。</target>
        </trans-unit>
        <trans-unit id="a85dbc709a9f2ba6465c3e2a6e42e17a0cb8fa6b" translate="yes" xml:space="preserve">
          <source>For sockets accepted from a ServerSocket, this must be done by calling &lt;a href=&quot;serversocket#setReceiveBufferSize-int-&quot;&gt;&lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt; before the ServerSocket is bound to a local address.</source>
          <target state="translated">对于从ServerSocket接受的套接字，必须在ServerSocket绑定到本地地址之前通过调用&lt;a href=&quot;serversocket#setReceiveBufferSize-int-&quot;&gt; &lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt; &lt;/a&gt;来完成。</target>
        </trans-unit>
        <trans-unit id="b5d9e449f3c30af13b7c3df63d138eee7bd155c9" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the &lt;code&gt;CRL&lt;/code&gt;s that match the selector. For instance, an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the directory. Instead, it may just search entries that are likely to contain the &lt;code&gt;CRL&lt;/code&gt;s it is looking for.</source>
          <target state="translated">对于一些 &lt;code&gt;CertStore&lt;/code&gt; 类型，得到的 &lt;code&gt;Collection&lt;/code&gt; 可能不包含&lt;b&gt;所有&lt;/b&gt;的的 &lt;code&gt;CRL&lt;/code&gt; 选择匹配秒。例如，LDAP &lt;code&gt;CertStore&lt;/code&gt; 可能不会搜索目录中的所有条目。相反，它可能只搜索可能包含其要查找的 &lt;code&gt;CRL&lt;/code&gt; 的条目。</target>
        </trans-unit>
        <trans-unit id="2d2bd5d4910b94aed8dde240f220cd40623a6895" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the &lt;code&gt;Certificate&lt;/code&gt;s that match the selector. For instance, an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the directory. Instead, it may just search entries that are likely to contain the &lt;code&gt;Certificate&lt;/code&gt;s it is looking for.</source>
          <target state="translated">对于一些 &lt;code&gt;CertStore&lt;/code&gt; 类型，得到的 &lt;code&gt;Collection&lt;/code&gt; 可能不包含&lt;b&gt;所有&lt;/b&gt;的 &lt;code&gt;Certificate&lt;/code&gt; 选择匹配秒。例如，LDAP &lt;code&gt;CertStore&lt;/code&gt; 可能不会搜索目录中的所有条目。相反，它可能只搜索可能包含其要查找的 &lt;code&gt;Certificate&lt;/code&gt; 的条目。</target>
        </trans-unit>
        <trans-unit id="22e94a6fa8a45a9ac9e87cc4182da53a7e5c4700" translate="yes" xml:space="preserve">
          <source>For some document formats (such as &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), the desired orientation of the print-stream pages is specified within the document data. This information is generated by a device driver prior to the submission of the print job. Other document formats (such as &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;) do not include the notion of desired orientation within the document data. In the latter case it is possible for the printer to bind the desired orientation to the document data after it has been submitted. It is expected that a printer would only support the &lt;code&gt;OrientationRequested&lt;/code&gt; attribute for some document formats (e.g., &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; or &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;) but not others (e.g. &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;). This is no different from any other job template attribute, since a print job can always impose constraints among the values of different job template attributes. However, a special mention is made here since it is very likely that a printer will support the &lt;code&gt;OrientationRequested&lt;/code&gt; attribute for only a subset of the supported document formats.</source>
          <target state="translated">对于某些文档格式（例如 &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ），在文档数据中指定了打印流页面的所需方向。该信息由设备驱动程序在提交打印作业之前生成。其他文档格式（例如 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; ）不包含文档数据中所需方向的概念。在后一种情况下，打印机可以在提交文档数据后将所需的方向绑定到文档数据。期望打印机仅支持某些文档格式（例如 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; ）的 &lt;code&gt;OrientationRequested&lt;/code&gt; 属性，而不支持其他文档格式（例如 &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ）。这与任何其他作业模板属性没有什么不同，因为打印作业始终可以在不同作业模板属性的值之间施加约束。但是，这里要特别提及，因为打印机很可能仅对支持的文档格式的一部分支持 &lt;code&gt;OrientationRequested&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="a5305c849ef834d436ddf738002d87d9d625028c" translate="yes" xml:space="preserve">
          <source>For some document formats (such as &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), the desired orientation of the print-stream pages is specified within the document data. This information is generated by a device driver prior to the submission of the print job. Other document formats (such as &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;) do not include the notion of desired orientation within the document data. In the latter case it is possible for the printer to bind the desired orientation to the document data after it has been submitted. It is expected that a printer would only support the OrientationRequested attribute for some document formats (e.g., &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; or &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;) but not others (e.g. &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;). This is no different from any other job template attribute, since a print job can always impose constraints among the values of different job template attributes. However, a special mention is made here since it is very likely that a printer will support the OrientationRequested attribute for only a subset of the supported document formats.</source>
          <target state="translated">对于某些文档格式（例如 &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ），在文档数据中指定了打印流页面的所需方向。该信息由设备驱动程序在提交打印作业之前生成。其他文档格式（例如 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; ）不包含文档数据中所需方向的概念。在后一种情况下，打印机可以在提交文档数据后将所需的方向绑定到文档数据。期望打印机仅支持某些文档格式（例如 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; ）的OrientationRequested属性，而不支持其他文档格式（例如 &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ）。这与任何其他作业模板属性没有什么不同，因为打印作业始终可以在不同作业模板属性的值之间施加约束。但是，这里要特别提及，因为打印机很可能仅对支持的文档格式的一部分支持OrientationRequested属性。</target>
        </trans-unit>
        <trans-unit id="0fe557112ee4ca1e72435e187056ad881c86ceb4" translate="yes" xml:space="preserve">
          <source>For some shorthand properties that take missing values from other sides, such as the &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, and &lt;code&gt;border-[width|style|color]&lt;/code&gt; properties, the minimum number of sides possible should be used; i.e., &quot;0px 10px&quot; will be returned instead of &quot;0px 10px 0px 10px&quot;.</source>
          <target state="translated">对于一些其他方面缺少值的速记属性，例如 &lt;code&gt;margin&lt;/code&gt; ， &lt;code&gt;padding&lt;/code&gt; 和 &lt;code&gt;border-[width|style|color]&lt;/code&gt; 属性，应使用可能的最小边数；即，将返回&amp;ldquo; 0px 10px&amp;rdquo;，而不是&amp;ldquo; 0px 10px 0px 10px&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="09018bb506a1cc69eba6480b165cb1aba8eb22a7" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#doubleStream(java.util.Spliterator.OfDouble,boolean)&quot;&gt;&lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">该报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或在&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，很可能更有效地使用&lt;a href=&quot;#doubleStream(java.util.Spliterator.OfDouble,boolean)&quot;&gt; &lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt; &lt;/a&gt;来代替。</target>
        </trans-unit>
        <trans-unit id="6266d2745dcb22de483d0dc7b876171ca4cabb70" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#intStream(java.util.Spliterator.OfInt,boolean)&quot;&gt;&lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">该报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或在&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，很可能更有效地使用&lt;a href=&quot;#intStream(java.util.Spliterator.OfInt,boolean)&quot;&gt; &lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt; &lt;/a&gt;来代替。</target>
        </trans-unit>
        <trans-unit id="5f350f6770ebd5851eaeb91f7a7cf7e4a21b8a4d" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#longStream(java.util.Spliterator.OfLong,boolean)&quot;&gt;&lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">该报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或在&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，很可能更有效地使用&lt;a href=&quot;#longStream(java.util.Spliterator.OfLong,boolean)&quot;&gt; &lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt; &lt;/a&gt;来代替。</target>
        </trans-unit>
        <trans-unit id="148567bd1b6747400177d4608517d55a74fd6918" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#stream(java.util.Spliterator,boolean)&quot;&gt;&lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">对于报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或者被&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，则很可能更有效地使用&lt;a href=&quot;#stream(java.util.Spliterator,boolean)&quot;&gt; &lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="fad206ccade197d1c3cdd9d97321b934f1f258a2" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#doubleStream-java.util.Spliterator.OfDouble-boolean-&quot;&gt;&lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">该报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或在&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，很可能更有效地使用&lt;a href=&quot;streamsupport#doubleStream-java.util.Spliterator.OfDouble-boolean-&quot;&gt; &lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt; &lt;/a&gt;来代替。</target>
        </trans-unit>
        <trans-unit id="10d39936197a6f658bf70a8886338926a7e07f8f" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#intStream-java.util.Spliterator.OfInt-boolean-&quot;&gt;&lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">该报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或在&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，很可能更有效地使用&lt;a href=&quot;streamsupport#intStream-java.util.Spliterator.OfInt-boolean-&quot;&gt; &lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt; &lt;/a&gt;来代替。</target>
        </trans-unit>
        <trans-unit id="20fb5d2059249e6adb6fc28ea0b2d832633b253a" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#longStream-java.util.Spliterator.OfLong-boolean-&quot;&gt;&lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">该报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或在&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，很可能更有效地使用&lt;a href=&quot;streamsupport#longStream-java.util.Spliterator.OfLong-boolean-&quot;&gt; &lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt; &lt;/a&gt;来代替。</target>
        </trans-unit>
        <trans-unit id="4160b6cd117fad4ed84680b4ead6ade57d473b25" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#stream-java.util.Spliterator-boolean-&quot;&gt;&lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">对于报告的特性spliterators &lt;code&gt;IMMUTABLE&lt;/code&gt; 或 &lt;code&gt;CONCURRENT&lt;/code&gt; ，或者被&lt;a href=&quot;../spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;，则很可能更有效地使用&lt;a href=&quot;streamsupport#stream-java.util.Spliterator-boolean-&quot;&gt; &lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="26f58254cdff2a06f3d6d9734d80dbfafad4e87f" translate="yes" xml:space="preserve">
          <source>For strict parsing, the number of characters allowed by &lt;code&gt;width&lt;/code&gt; to &lt;code&gt;maxWidth&lt;/code&gt; are parsed. For lenient parsing, the number of characters must be at least 1 and less than 10. If the number of digits parsed is equal to &lt;code&gt;width&lt;/code&gt; and the value is positive, the value of the field is computed to be the first number greater than or equal to the &lt;code&gt;baseValue&lt;/code&gt; with the same least significant characters, otherwise the value parsed is the field value. This allows a reduced value to be entered for values in range of the baseValue and width and absolute values can be entered for values outside the range.</source>
          <target state="translated">对于严格解析，将解析 &lt;code&gt;width&lt;/code&gt; 到 &lt;code&gt;maxWidth&lt;/code&gt; 允许的字符数。对于宽大的解析，字符数必须至少为1且小于10。如果解析的位数等于 &lt;code&gt;width&lt;/code&gt; 并且值为正，则该字段的值将被计算为大于或等于的第一个数字到具有相同的最低有效字符的 &lt;code&gt;baseValue&lt;/code&gt; ，否则解析的值为字段值。这允许为baseValue范围内的值输入一个减小的值，为该范围外的值输入宽度和绝对值。</target>
        </trans-unit>
        <trans-unit id="7454110d6c362813ee11506433ae73a93c3882b6" translate="yes" xml:space="preserve">
          <source>For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists.</source>
          <target state="translated">对于支持样式表包含概念的样式表语言,这个属性代表包含的样式表,如果存在的话。</target>
        </trans-unit>
        <trans-unit id="3c44c1fef329f7f25959b79f780bae4c4660a5dc" translate="yes" xml:space="preserve">
          <source>For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对于支持样式表包含概念的样式表语言，此属性表示包含样式表（如果存在）。如果样式表是顶级样式表，或者样式表语言不支持包含，则此属性的值为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5df93252e1ef16c3279772a8887b08c66190d6d6" translate="yes" xml:space="preserve">
          <source>For systems that do not support federation, the name arguments (in either &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; forms) and the names returned in &lt;code&gt;NamingEnumeration&lt;/code&gt; may be names in their own namespace rather than names in a composite namespace, at the discretion of the service provider.</source>
          <target state="translated">对于不支持联盟的系统，由服务提供商决定，名称参数（以 &lt;code&gt;Name&lt;/code&gt; 或 &lt;code&gt;String&lt;/code&gt; 形式）和 &lt;code&gt;NamingEnumeration&lt;/code&gt; 中返回的名称可以是其自身名称空间中的名称，而不是组合名称空间中的名称。</target>
        </trans-unit>
        <trans-unit id="4c36c0d5e03fbbc8eeeb250c08d04988226b782f" translate="yes" xml:space="preserve">
          <source>For systems that support federation, &lt;code&gt;String&lt;/code&gt; name arguments to &lt;code&gt;Context&lt;/code&gt; methods are composite names. Name arguments that are instances of &lt;code&gt;CompositeName&lt;/code&gt; are treated as composite names, while &lt;code&gt;Name&lt;/code&gt; arguments that are not instances of &lt;code&gt;CompositeName&lt;/code&gt; are treated as compound names (which might be instances of &lt;code&gt;CompoundName&lt;/code&gt; or other implementations of compound names). This allows the results of &lt;code&gt;NameParser.parse()&lt;/code&gt; to be used as arguments to the &lt;code&gt;Context&lt;/code&gt; methods. Prior to JNDI 1.2, all name arguments were treated as composite names.</source>
          <target state="translated">对于支持联盟的系统， &lt;code&gt;Context&lt;/code&gt; 方法的 &lt;code&gt;String&lt;/code&gt; 名称参数是复合名称。作为 &lt;code&gt;CompositeName&lt;/code&gt; 实例的Name参数被视为组合名称，而不是 &lt;code&gt;CompositeName&lt;/code&gt; 实例的 &lt;code&gt;Name&lt;/code&gt; 参数被视为复合名称（可能是 &lt;code&gt;CompoundName&lt;/code&gt; 的实例或复合名称的其他实现）。这允许 &lt;code&gt;NameParser.parse()&lt;/code&gt; 的结果用作 &lt;code&gt;Context&lt;/code&gt; 方法的参数。在JNDI 1.2之前，所有名称参数都被视为组合名称。</target>
        </trans-unit>
        <trans-unit id="f935a46a38882498b2fd69c4831dee68e2e937c5" translate="yes" xml:space="preserve">
          <source>For target values which will be frequently updated, consider using a &lt;a href=&quot;volatilecallsite&quot;&gt;volatile call site&lt;/a&gt; instead.</source>
          <target state="translated">对于经常更新的目标值，请考虑使用&lt;a href=&quot;volatilecallsite&quot;&gt;易失性呼叫站点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfa72173fbc4e278072cdd080d8c5237f40fa65a" translate="yes" xml:space="preserve">
          <source>For text deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the text that was deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对于文本删除， &lt;code&gt;oldValue&lt;/code&gt; 是一个 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; ,用于指定已删除的文本，而 &lt;code&gt;newValue&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7269ea0cc24dd493dddf3eac9f6e8cccb42ee32f" translate="yes" xml:space="preserve">
          <source>For text insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the text that was inserted.</source>
          <target state="translated">对于文本插入， &lt;code&gt;oldValue&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，而 &lt;code&gt;newValue&lt;/code&gt; 是一个 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; ,用于指定要插入的文本。</target>
        </trans-unit>
        <trans-unit id="3d9e3c5d8fa00a75d19707b2f2902a47b97f60b0" translate="yes" xml:space="preserve">
          <source>For text replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the old text and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the new text.</source>
          <target state="translated">对于文本替换的 &lt;code&gt;oldValue&lt;/code&gt; 是 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; 指定的旧文本和 &lt;code&gt;newValue&lt;/code&gt; 是 &lt;code&gt;AccessibleTextSequence&lt;/code&gt; 指定新的文本。</target>
        </trans-unit>
        <trans-unit id="b8365274e15659426f7246197d05cab03f982ba1" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getAttribute(javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#getAttribute(javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23f273aef5167ca16f1d1df68e6919c8910a5d3d" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getAttributes(javax.management.ObjectName,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">对于&lt;a href=&quot;#getAttributes(javax.management.ObjectName,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;getAttributes&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。此外，为每个属性&lt;em&gt;一个&lt;/em&gt;在&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 中&lt;/a&gt;，如果调用者的权限并不意味着&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;，则MBean服务器的行为与该属性未在所提供的列表。</target>
        </trans-unit>
        <trans-unit id="e082abdbf8b25df918965d8fd0a7c66abff5bd6e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, loaderName,
 &quot;getClassLoader&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, loaderName, &quot;getClassLoader&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="190c1b9a4e8b5dc26519eb318f65181b9defc626" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, mbeanName,
 &quot;getClassLoaderFor&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, mbeanName, &quot;getClassLoaderFor&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dc275ddd537d8d7c349ba29e9c411ab2ea02398" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoaderRepository()&quot;&gt;&lt;code&gt;getClassLoaderRepository&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#getClassLoaderRepository()&quot;&gt; &lt;code&gt;getClassLoaderRepository&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c53b1b8f34b83d9ed1250c21b9352597438cda11" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each MBean &lt;em&gt;n&lt;/em&gt; that matches &lt;code&gt;name&lt;/code&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that MBean did not exist.</source>
          <target state="translated">对于&lt;a href=&quot;#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;。此外，对于每个与 &lt;code&gt;name&lt;/code&gt; 匹配的MBean &lt;em&gt;n&lt;/em&gt;，如果调用者的权限不暗含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;n&lt;/em&gt;，&amp;ldquo; queryMBeans&amp;rdquo;），则MBean服务器将表现为该MBean不存在。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="778605b295314d4a6d32d7a0c2fb6f1feac04d44" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; method, the checks are the same as for &lt;code&gt;queryMBeans&lt;/code&gt; except that &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; is used instead of &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; in the &lt;code&gt;MBeanPermission&lt;/code&gt; objects. Note that a &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; permission implies the corresponding &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; permission.</source>
          <target state="translated">对于&lt;a href=&quot;#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt;方法，检查与对 &lt;code&gt;queryMBeans&lt;/code&gt; 的检查相同，不同之处在于，在 &lt;code&gt;MBeanPermission&lt;/code&gt; 对象中使用 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 代替 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 。请注意， &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 权限暗含了相应的 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 权限。</target>
        </trans-unit>
        <trans-unit id="b6d30f6448a4da148b2ba1a363fbb778821a0e8e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a46688ec74cb638650657f0ae04c971ba2c8493" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#setAttribute(javax.management.ObjectName,javax.management.Attribute)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;attrName&lt;/code&gt; is &lt;a href=&quot;attribute#getName()&quot;&gt;&lt;code&gt;attribute.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#setAttribute(javax.management.ObjectName,javax.management.Attribute)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;，其中 &lt;code&gt;attrName&lt;/code&gt; 是&lt;a href=&quot;attribute#getName()&quot;&gt; &lt;code&gt;attribute.getName()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3127e4fe03e65d132a348b4a4c15804187a89206" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#setAttributes(javax.management.ObjectName,javax.management.AttributeList)&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">对于&lt;a href=&quot;#setAttributes(javax.management.ObjectName,javax.management.AttributeList)&quot;&gt; &lt;code&gt;setAttributes&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。此外，为每个属性&lt;em&gt;一个&lt;/em&gt;在&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 中&lt;/a&gt;，如果调用者的权限并不意味着&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;，则MBean服务器的行为与该属性未在所提供的列表。</target>
        </trans-unit>
        <trans-unit id="599fec1bc61d3b18b6bb471c85bdf5d2c3831da9" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#unregisterMBean(javax.management.ObjectName)&quot;&gt;&lt;code&gt;unregisterMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#unregisterMBean(javax.management.ObjectName)&quot;&gt; &lt;code&gt;unregisterMBean&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07a529682b90dbb4f21872bf4c556169d936d61f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddbaf08a3d47f1c0d9927806eb60a1f290a58c7b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt; &lt;code&gt;getAttributes&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。此外，为每个属性&lt;em&gt;一个&lt;/em&gt;在&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 中&lt;/a&gt;，如果调用者的权限并不意味着&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;，则MBean服务器的行为与该属性未在所提供的列表。</target>
        </trans-unit>
        <trans-unit id="bf51b6429c6774bbbbb436da1863834e3f600b2e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, loaderName,
 &quot;getClassLoader&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, loaderName, &quot;getClassLoader&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fe5e86cb960b8bf74a81e8cf6836ae546034489" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, mbeanName,
 &quot;getClassLoaderFor&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, mbeanName, &quot;getClassLoaderFor&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d13aa3f80a8c0aa789c154b81017939d57a4df0e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;getClassLoaderRepository&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;getClassLoaderRepository&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36aa2847328675e1fd0ef997bc609841c5ffdba8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getDomains--&quot;&gt;&lt;code&gt;getDomains&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each domain &lt;var&gt;d&lt;/var&gt; in the returned array, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;),
 &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;, the domain is eliminated from the array. Here, &lt;code&gt;x=x&lt;/code&gt; is any &lt;var&gt;key=value&lt;/var&gt; pair, needed to satisfy ObjectName's constructor but not otherwise relevant.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getDomains--&quot;&gt; &lt;code&gt;getDomains&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;。另外，对于返回的数组中的每个域 &lt;var&gt;d&lt;/var&gt; ，如果调用者的权限不暗示&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;), &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;，则从数组中删除该域。在此， &lt;code&gt;x=x&lt;/code&gt; 是满足ObjectName的构造函数所需的任何 &lt;var&gt;key=value&lt;/var&gt; 对，但在其他方面不相关。</target>
        </trans-unit>
        <trans-unit id="35ded60bc9272f51bebab45845bcfea544ce03dd" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbc22db4e65eb35d8c1286bbd27476f8bfe46541" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getObjectInstance&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getObjectInstance&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d65efe8a2194085110664d672435aca72c22b0c" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#invoke-javax.management.ObjectName-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#invoke-javax.management.ObjectName-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f5ec4bf97218bf65b28d8302d714f45e4025fe7" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;isInstanceOf&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;isInstanceOf&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="858b78f3418d32b14c78d61a0f9406ea6c007add" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each MBean &lt;em&gt;n&lt;/em&gt; that matches &lt;code&gt;name&lt;/code&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that MBean did not exist.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;。另外，对于每个与 &lt;code&gt;name&lt;/code&gt; 匹配的MBean &lt;em&gt;n&lt;/em&gt;，如果调用者的权限不暗含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;n&lt;/em&gt;，&amp;ldquo; queryMBeans&amp;rdquo;），则MBean服务器将表现为该MBean不存在。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ec1a6bbead7c891292d17ad2571fba7958073a8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; method, the checks are the same as for &lt;code&gt;queryMBeans&lt;/code&gt; except that &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; is used instead of &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; in the &lt;code&gt;MBeanPermission&lt;/code&gt; objects. Note that a &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; permission implies the corresponding &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; permission.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt;方法，检查与对 &lt;code&gt;queryMBeans&lt;/code&gt; 的检查相同，不同之处在于，在 &lt;code&gt;MBeanPermission&lt;/code&gt; 对象中使用 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 代替 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 。请注意， &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 权限暗含了相应的 &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 权限。</target>
        </trans-unit>
        <trans-unit id="dd26c7a9cbf6a5c71bccc701e255f8feaa4c4fff" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa5fa7717acc4a5f69b8a3ba980fc0b65552537b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#setAttribute-javax.management.ObjectName-javax.management.Attribute-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;attrName&lt;/code&gt; is &lt;a href=&quot;attribute#getName--&quot;&gt;&lt;code&gt;attribute.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#setAttribute-javax.management.ObjectName-javax.management.Attribute-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;，其中 &lt;code&gt;attrName&lt;/code&gt; 是&lt;a href=&quot;attribute#getName--&quot;&gt; &lt;code&gt;attribute.getName()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a90e1d8dab00350d546cff27eec4811d28de3f6" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt; &lt;code&gt;setAttributes&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。此外，为每个属性&lt;em&gt;一个&lt;/em&gt;在&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; 中&lt;/a&gt;，如果调用者的权限并不意味着&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;，则MBean服务器的行为与该属性未在所提供的列表。</target>
        </trans-unit>
        <trans-unit id="498e8bad40ab2aba1376c2975dbe1109a057e4b5" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#unregisterMBean-javax.management.ObjectName-&quot;&gt;&lt;code&gt;unregisterMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserver#unregisterMBean-javax.management.ObjectName-&quot;&gt; &lt;code&gt;unregisterMBean&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="894a79786652fd406dbe2d9b1d75421314a9f30e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getDomains()&quot;&gt;&lt;code&gt;getDomains&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each domain &lt;var&gt;d&lt;/var&gt; in the returned array, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;),
 &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;, the domain is eliminated from the array. Here, &lt;code&gt;x=x&lt;/code&gt; is any &lt;var&gt;key=value&lt;/var&gt; pair, needed to satisfy ObjectName's constructor but not otherwise relevant.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserverconnection#getDomains()&quot;&gt; &lt;code&gt;getDomains&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;。此外，对于返回的数组中的每个域 &lt;var&gt;d&lt;/var&gt; ，如果调用者的权限不暗示&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;), &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;，则从数组中删除该域。在此， &lt;code&gt;x=x&lt;/code&gt; 是满足ObjectName的构造函数所需的任何 &lt;var&gt;key=value&lt;/var&gt; 对，但在其他方面不相关。</target>
        </trans-unit>
        <trans-unit id="b9a75913ab49da09f34c1757df1d0cef5c86881f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="adf78cdbd31e96ea013ba638e3fc8f84eaac9a97" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getObjectInstance(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getObjectInstance&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserverconnection#getObjectInstance(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getObjectInstance&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f7424be29688688d940bd63416f7bf39a2ff8bd" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#invoke(javax.management.ObjectName,java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserverconnection#invoke(javax.management.ObjectName,java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e9b66f4d611a96f9a5aa9f7bc1b8dc5bbdda644" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#isInstanceOf(javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;isInstanceOf&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;mbeanserverconnection#isInstanceOf(javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;isInstanceOf&lt;/code&gt; &lt;/a&gt;方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e2e70f14d21bee3396ce0d422cb726137c3a8e2" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;H1&lt;/code&gt; to &lt;code&gt;H6&lt;/code&gt; elements.</source>
          <target state="translated">用于 &lt;code&gt;H1&lt;/code&gt; 到 &lt;code&gt;H6&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="57c743c047bf384a5b3deea57092610323a385da" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;H1&lt;/code&gt; to &lt;code&gt;H6&lt;/code&gt; elements. See the H1 element definition in HTML 4.0.</source>
          <target state="translated">用于 &lt;code&gt;H1&lt;/code&gt; 到 &lt;code&gt;H6&lt;/code&gt; 元素。请参阅HTML 4.0中的H1元素定义。</target>
        </trans-unit>
        <trans-unit id="2f5106a75bcd658e2922a5b6c1b1bae014d5206d" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Q&lt;/code&gt; and &lt;code&gt;BLOCKQUOTE&lt;/code&gt; elements.</source>
          <target state="translated">用于 &lt;code&gt;Q&lt;/code&gt; 和 &lt;code&gt;BLOCKQUOTE&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="ed360b4d95045d8fe15e50d3174409e817d17c24" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Q&lt;/code&gt; and &lt;code&gt;BLOCKQUOTE&lt;/code&gt; elements. See the Q element definition in HTML 4.0.</source>
          <target state="translated">用于 &lt;code&gt;Q&lt;/code&gt; 和 &lt;code&gt;BLOCKQUOTE&lt;/code&gt; 元素。请参阅HTML 4.0中的Q元素定义。</target>
        </trans-unit>
        <trans-unit id="8b8f600b2d3f51c19e43ce489ac69af6701f49a5" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;addNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;addNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;addNotificationListener&lt;/code&gt; 方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;addNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="158c487d95ccee5e697a4a0b3019a2af7484037b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;addNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;addNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;addNotificationListener&lt;/code&gt; 方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;addNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="587aaae3639acfe81cc64afdee6d0ade23c7b75b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;createMBean&lt;/code&gt; methods, the caller's permissions must imply the permissions needed by the equivalent &lt;code&gt;instantiate&lt;/code&gt; followed by &lt;code&gt;registerMBean&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;createMBean&lt;/code&gt; 方法，调用者的权限必须隐含等效 &lt;code&gt;instantiate&lt;/code&gt; 其后跟 &lt;code&gt;registerMBean&lt;/code&gt; )所需的权限。</target>
        </trans-unit>
        <trans-unit id="20ffdfa868345763a88829877c0b37aeb75759a9" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;instantiate&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;className&lt;/code&gt; is the name of the class which is to be instantiated.</source>
          <target state="translated">对于 &lt;code&gt;instantiate&lt;/code&gt; 方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt; &lt;/a&gt;，其中 &lt;code&gt;className&lt;/code&gt; 是要实例化的类的名称。</target>
        </trans-unit>
        <trans-unit id="734e386c7b6f7d6551a6fee63ca653f21ab334bd" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;instantiate&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;className&lt;/code&gt; is the name of the class which is to be instantiated.</source>
          <target state="translated">对于 &lt;code&gt;instantiate&lt;/code&gt; 方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt; &lt;/a&gt;，其中 &lt;code&gt;className&lt;/code&gt; 是要实例化的类的名称。</target>
        </trans-unit>
        <trans-unit id="9510b3d070ff7025d9a516b8a230d3fe5f87a5f3" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;remove&lt;/code&gt; methods that take two arguments, the following is returned:</source>
          <target state="translated">对于带有两个参数的 &lt;code&gt;remove&lt;/code&gt; 方法，将返回以下内容：</target>
        </trans-unit>
        <trans-unit id="ebcde0e97f3d9e96e3386a8a5f4e4db451f65870" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;removeNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;removeNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;removeNotificationListener&lt;/code&gt; 方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;removeNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69f05a461e498d5392d695eac6a4d13e36407ae8" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;removeNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;removeNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于 &lt;code&gt;removeNotificationListener&lt;/code&gt; 方法，调用者的权限必须隐含&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;removeNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9271dae0fba74ef21f22433d478a297260a46d6" translate="yes" xml:space="preserve">
          <source>For the assertion &quot;someCount=127&quot;, for example, &lt;code&gt;attr&lt;/code&gt; is &quot;someCount&quot; and &lt;code&gt;value&lt;/code&gt; is &quot;127&quot;. The provider determines, based on the attribute ID (&quot;someCount&quot;) (and possibly its schema), that the attribute's value is an integer. It then parses the string &quot;127&quot; appropriately.</source>
          <target state="translated">例如，对于断言&amp;ldquo; someCount = 127&amp;rdquo;， &lt;code&gt;attr&lt;/code&gt; 是&amp;ldquo; someCount&amp;rdquo;， &lt;code&gt;value&lt;/code&gt; 是&amp;ldquo; 127&amp;rdquo;。提供程序根据属性ID（&amp;ldquo; someCount&amp;rdquo;）（可能还有其架构）确定属性的值是整数。然后，它适当地解析字符串&amp;ldquo; 127&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bee936b5f5b2889b9390a8fc111ae587011b69cf" translate="yes" xml:space="preserve">
          <source>For the bound coordinates to be well formed, their types must be &lt;code&gt;T1, T2 ... Tn &lt;/code&gt;, where &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; are the coordinate types starting at position &lt;code&gt;pos&lt;/code&gt; of the target var handle.</source>
          <target state="translated">为了使绑定坐标良好地形成，其类型必须为 &lt;code&gt;T1, T2 ... Tn &lt;/code&gt; ，其中 &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; 是从目标var手柄的位置 &lt;code&gt;pos&lt;/code&gt; 开始的坐标类型。</target>
        </trans-unit>
        <trans-unit id="14b2db76fc639b775a1752f6f4ab2e07b10c5889" translate="yes" xml:space="preserve">
          <source>For the boxing and unboxing filters to be well formed, their types must be of the form &lt;code&gt;(A... , S) -&amp;gt; T&lt;/code&gt; and &lt;code&gt;(A... , T) -&amp;gt; S&lt;/code&gt;, respectively, where &lt;code&gt;T&lt;/code&gt; is the type of the target var handle. If this is the case, the resulting var handle will have type &lt;code&gt;S&lt;/code&gt; and will feature the additional coordinates &lt;code&gt;A...&lt;/code&gt; (which will be appended to the coordinates of the target var handle).</source>
          <target state="translated">为了使装箱和拆箱过滤器结构良好，其类型必须分别为 &lt;code&gt;(A... , S) -&amp;gt; T&lt;/code&gt; 和 &lt;code&gt;(A... , T) -&amp;gt; S&lt;/code&gt; ，其中 &lt;code&gt;T&lt;/code&gt; 是目标var句柄。在这种情况下，生成的var句柄将具有类型 &lt;code&gt;S&lt;/code&gt; ，并具有附加坐标 &lt;code&gt;A...&lt;/code&gt; （将附加到目标var句柄的坐标）。</target>
        </trans-unit>
        <trans-unit id="62cdf9a055c7ff004e4e70c28dab11d33378e893" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that a primary key may not be updated if it has been imported by another table as a foreign key.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 列，指示如果主键已被另一个表作为外键导入，则可能不会更新主键。</target>
        </trans-unit>
        <trans-unit id="2e35eed0cacf929c0a53c316cd4e08f72ef75dcf" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that a primary key may not be updated if it has been imported by another table as a foreign key. For the column &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that a primary key may not be deleted if it has been imported by another table as a foreign key.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 列，指示如果主键已被另一个表作为外键导入，则可能不会更新主键。对于 &lt;code&gt;DELETE_RULE&lt;/code&gt; 列，指示如果主键已由另一个表作为外键导入，则可能不会删除该主键。</target>
        </trans-unit>
        <trans-unit id="d724b744995e198fb7e69fc0f57d38e67e2ea58e" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 列，指示在更新主键时，将更改外键（导入键）以使其与之一致。</target>
        </trans-unit>
        <trans-unit id="d6ef279dd538e07a259a0e964b5d39e024933826" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it. For the column &lt;code&gt;DELETE_RULE&lt;/code&gt;, it indicates that when the primary key is deleted, rows that imported that key are deleted.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 列，指示在更新主键时，将更改外键（导入键）以使其与之一致。对于 &lt;code&gt;DELETE_RULE&lt;/code&gt; 列，它指示删除主键时，将删除导入该键的行。</target>
        </trans-unit>
        <trans-unit id="3ed7d546c07bf7bb43d070a3cd2adfaf92570184" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that if the primary key has been imported, it cannot be updated or deleted.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 和 &lt;code&gt;DELETE_RULE&lt;/code&gt; 列，指示如果已导入主键，则不能对其进行更新或删除。</target>
        </trans-unit>
        <trans-unit id="652b817332b8bd073038d1acd7eb2577785a3489" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that if the primary key is updated or deleted, the foreign key (imported key) is set to the default value.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 和 &lt;code&gt;DELETE_RULE&lt;/code&gt; 列，指示如果更新或删除了主键，则将外键（导入的键）设置为默认值。</target>
        </trans-unit>
        <trans-unit id="b7fcdd681027f98f9b0a5865b40fc52b7bea0a33" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that when the primary key is updated or deleted, the foreign key (imported key) is changed to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;UPDATE_RULE&lt;/code&gt; 和 &lt;code&gt;DELETE_RULE&lt;/code&gt; 列，指示当更新或删除主键时，外键（导入的键）更改为 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e81d4ac40547bcfb74b63ec729125f5e1c6b88a" translate="yes" xml:space="preserve">
          <source>For the constructors and static &lt;code&gt;exportObject&lt;/code&gt; methods, the stub for a remote object being exported is obtained as described in &lt;a href=&quot;../server/unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于构造函数和静态 &lt;code&gt;exportObject&lt;/code&gt; 方法，如&lt;a href=&quot;../server/unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; 中&lt;/a&gt;所述获取要导出的远程对象的存根。</target>
        </trans-unit>
        <trans-unit id="8db9cd3eaad5c22591d41a15feec87cd973ac5e8" translate="yes" xml:space="preserve">
          <source>For the convenience of layout managers, calculates information about the size and position of components.</source>
          <target state="translated">为了方便布局管理者,计算组件的大小和位置信息。</target>
        </trans-unit>
        <trans-unit id="3ab6053cfb18d310258a73ec8d4622a5c35199e6" translate="yes" xml:space="preserve">
          <source>For the convenience of layout managers, calculates information about the size and position of components. All size and position calculation methods are class methods that take arrays of SizeRequirements as arguments. The SizeRequirements class supports two types of layout:</source>
          <target state="translated">为了方便布局管理者,计算组件的大小和位置信息。所有的尺寸和位置计算方法都是类方法,以SizeRequirements的数组作为参数。SizeRequirements类支持两种类型的布局。</target>
        </trans-unit>
        <trans-unit id="6e83ebacad213ea3f65edbf4cbfeab6eefb09772" translate="yes" xml:space="preserve">
          <source>For the coordinate filters to be well formed, their types must be of the form &lt;code&gt;S1 -&amp;gt; T1, S2 -&amp;gt; T1 ... Sn -&amp;gt; Tn&lt;/code&gt;, where &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; are the coordinate types starting at position &lt;code&gt;pos&lt;/code&gt; of the target var handle.</source>
          <target state="translated">为了使坐标过滤器结构良好，其类型必须为 &lt;code&gt;S1 -&amp;gt; T1, S2 -&amp;gt; T1 ... Sn -&amp;gt; Tn&lt;/code&gt; ，其中 &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; 是从位置 &lt;code&gt;pos&lt;/code&gt; 开始的坐标类型。目标var句柄。</target>
        </trans-unit>
        <trans-unit id="fa93951bb48d44f6c5191751b6a1e590e5224950" translate="yes" xml:space="preserve">
          <source>For the default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation using &lt;code&gt;java.util.logging&lt;/code&gt; as its backend, refer to &lt;a href=&quot;../../../java.logging/java/util/logging/package-summary&quot;&gt;&lt;code&gt;java.util.logging&lt;/code&gt;&lt;/a&gt; for logging configuration. For the default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation returning simple loggers when the &lt;code&gt;java.logging&lt;/code&gt; module is absent, the configuration is implementation dependent.</source>
          <target state="translated">对于使用 &lt;code&gt;java.util.logging&lt;/code&gt; 作为后端的默认 &lt;code&gt;LoggerFinder&lt;/code&gt; 实现，请参考&lt;a href=&quot;../../../java.logging/java/util/logging/package-summary&quot;&gt; &lt;code&gt;java.util.logging&lt;/code&gt; &lt;/a&gt;进行日志配置。对于缺少 &lt;code&gt;java.logging&lt;/code&gt; 模块时默认 &lt;code&gt;LoggerFinder&lt;/code&gt; 实现返回简单记录器的情况，该配置取决于实现。</target>
        </trans-unit>
        <trans-unit id="e323244daf1540708498ed48a430fbf93176610a" translate="yes" xml:space="preserve">
          <source>For the deprecated &lt;code&gt;deserialize&lt;/code&gt; methods, the required permissions are the same as for the methods that replace them.</source>
          <target state="translated">对于不建议使用的 &lt;code&gt;deserialize&lt;/code&gt; 方法，所需的权限与替换它们的方法相同。</target>
        </trans-unit>
        <trans-unit id="a73e6ebc41f1d4baf8f59c549e375b1223b0077c" translate="yes" xml:space="preserve">
          <source>For the first selected row expandedness will be toggled.</source>
          <target state="translated">对于第一个选择的行,扩展性将被切换。</target>
        </trans-unit>
        <trans-unit id="38687a8b8af780e9dffdd379f23c6d1d05a7d5ca" translate="yes" xml:space="preserve">
          <source>For the fixed-length type JDBC &lt;code&gt;CHAR&lt;/code&gt;, the &lt;code&gt;String&lt;/code&gt; object returned has exactly the same value the SQL &lt;code&gt;CHAR&lt;/code&gt; value had in the database, including any padding added by the database.</source>
          <target state="translated">对于固定长度类型的JDBC &lt;code&gt;CHAR&lt;/code&gt; ，返回的 &lt;code&gt;String&lt;/code&gt; 对象具有与SQL &lt;code&gt;CHAR&lt;/code&gt; 值在数据库中完全相同的值，包括数据库添加的任何填充。</target>
        </trans-unit>
        <trans-unit id="bb59ec91472ba3cd68ed0417d37ca0bf997762d7" translate="yes" xml:space="preserve">
          <source>For the fixed-length type JDBC &lt;code&gt;NCHAR&lt;/code&gt;, the &lt;code&gt;String&lt;/code&gt; object returned has exactly the same value the SQL &lt;code&gt;NCHAR&lt;/code&gt; value had in the database, including any padding added by the database.</source>
          <target state="translated">对于固定长度类型的JDBC &lt;code&gt;NCHAR&lt;/code&gt; ，返回的 &lt;code&gt;String&lt;/code&gt; 对象具有与SQL &lt;code&gt;NCHAR&lt;/code&gt; 值在数据库中完全相同的值，包括数据库添加的任何填充。</target>
        </trans-unit>
        <trans-unit id="e46aca6eab86f2b8c52afd99c9d142dfe56791c8" translate="yes" xml:space="preserve">
          <source>For the floating-point conversions &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, &lt;code&gt;'e'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, and &lt;code&gt;'f'&lt;/code&gt; the precision is the number of digits after the radix point. If the conversion is &lt;code&gt;'g'&lt;/code&gt; or &lt;code&gt;'G'&lt;/code&gt;, then the precision is the total number of digits in the resulting magnitude after rounding.</source>
          <target state="translated">对于浮点转换 &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'A'&lt;/code&gt; ， &lt;code&gt;'e'&lt;/code&gt; ， &lt;code&gt;'E'&lt;/code&gt; 和 &lt;code&gt;'f'&lt;/code&gt; ，精度是小数点后的位数。如果转换是 &lt;code&gt;'g'&lt;/code&gt; 或 &lt;code&gt;'G'&lt;/code&gt; ，则精度是四舍五入后得到的幅度中的位数总数。</target>
        </trans-unit>
        <trans-unit id="2edef0880ff500c3be071a1041e2785dfd7f0756" translate="yes" xml:space="preserve">
          <source>For the general mechanism to load service providers, see &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;, which is the underlying standard mechanism used by this class.</source>
          <target state="translated">有关加载服务提供者的一般机制，请参见&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;，它是此类使用的基础标准机制。</target>
        </trans-unit>
        <trans-unit id="24e6785472989839f3d8e9a7b3e91c6d6d57cacd" translate="yes" xml:space="preserve">
          <source>For the getter methods, a JDBC driver attempts to convert the underlying data to the Java type specified in the getter method and returns a suitable Java value. The JDBC specification has a table showing the allowable mappings from SQL types to Java types that can be used by the &lt;code&gt;ResultSet&lt;/code&gt; getter methods.</source>
          <target state="translated">对于getter方法，JDBC驱动程序尝试将基础数据转换为getter方法中指定的Java类型，并返回合适的Java值。JDBC规范具有一张表，该表显示了 &lt;code&gt;ResultSet&lt;/code&gt; getter方法可以使用的从SQL类型到Java类型的允许映射。</target>
        </trans-unit>
        <trans-unit id="9c2caf26b9b9eb99484dcfe9c272d224c15db32d" translate="yes" xml:space="preserve">
          <source>For the header bytes CLA, INS, P1, and P2 the Java type &lt;code&gt;int&lt;/code&gt; is used to represent the 8 bit unsigned values. In the constructors, only the 8 lowest bits of the &lt;code&gt;int&lt;/code&gt; value specified by the application are significant. The accessor methods always return the byte as an unsigned value between 0 and 255.</source>
          <target state="translated">对于标头字节CLA，INS，P1和P2，Java类型 &lt;code&gt;int&lt;/code&gt; 用于表示8位无符号值。在构造函数中，只有应用程序指定的 &lt;code&gt;int&lt;/code&gt; 值的最低8位有效。访问器方法始终以0到255之间的无符号值返回字节。</target>
        </trans-unit>
        <trans-unit id="35be51934ab76e85073b98fe584645e3abdc336b" translate="yes" xml:space="preserve">
          <source>For the implementations of the methods described below, which all take a &lt;code&gt;String&lt;/code&gt; parameter named &lt;code&gt;codebase&lt;/code&gt; that is a space-separated list of URLs, each invocation has an associated</source>
          <target state="translated">对于下面描述的方法的实现，这些方法都带有一个名为 &lt;code&gt;codebase&lt;/code&gt; 的 &lt;code&gt;String&lt;/code&gt; 参数，该参数是一个用空格分隔的URL列表，每个调用都具有一个</target>
        </trans-unit>
        <trans-unit id="337b49be1ff6af10af540e0ace529d5ec996ff66" translate="yes" xml:space="preserve">
          <source>For the labels to be drawn on the slider, the returned &lt;code&gt;Hashtable&lt;/code&gt; must be passed into &lt;code&gt;setLabelTable&lt;/code&gt;, and &lt;code&gt;setPaintLabels&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">为了在滑块上绘制标签，必须将返回的 &lt;code&gt;Hashtable&lt;/code&gt; 传递到 &lt;code&gt;setLabelTable&lt;/code&gt; 中，并且 &lt;code&gt;setPaintLabels&lt;/code&gt; 必须设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06aaf863b78d2db68b84de64f043b5884e2a38d6" translate="yes" xml:space="preserve">
          <source>For the mathematically inclined, the</source>
          <target state="translated">对于有数学兴趣的人来说。</target>
        </trans-unit>
        <trans-unit id="4bf557c4e1091ca7cd2e9c48b51e297e05ef3bbb" translate="yes" xml:space="preserve">
          <source>For the method to be valid it must return a &lt;code&gt;SettingControl&lt;/code&gt; and only have one parameter, which should be a non-abstract subclass of &lt;a href=&quot;settingcontrol&quot;&gt;&lt;code&gt;SettingControl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">为了使方法有效，它必须返回一个 &lt;code&gt;SettingControl&lt;/code&gt; 且仅具有一个参数，该参数应为&lt;a href=&quot;settingcontrol&quot;&gt; &lt;code&gt;SettingControl&lt;/code&gt; &lt;/a&gt;的非抽象子类。</target>
        </trans-unit>
        <trans-unit id="cd365d472dc61c689cd01391bb26b289a209fa1a" translate="yes" xml:space="preserve">
          <source>For the methods that do not take an explicit source name and method name, the Logging framework will make a &quot;best effort&quot; to determine which class and method called into the logging method. However, it is important to realize that this automatically inferred information may only be approximate (or may even be quite wrong!). Virtual machines are allowed to do extensive optimizations when JITing and may entirely remove stack frames, making it impossible to reliably locate the calling class and method.</source>
          <target state="translated">对于那些不采用明确的源名和方法名的方法,日志框架会 &quot;尽最大努力 &quot;来确定是哪个类和方法调用到了日志方法。但是,必须意识到,这种自动推断的信息可能只是近似的(甚至可能是相当错误的!)。虚拟机在JIT时可以做大量的优化工作,可能会完全删除堆栈框架,从而无法可靠地定位调用的类和方法。</target>
        </trans-unit>
        <trans-unit id="918c0b7e8f769b516391a049b47963d833e03898" translate="yes" xml:space="preserve">
          <source>For the next level up, the writer checks to see if there are any conflicts, and if there are, it does not write anything to the data source. The problem with this concurrency level is that if another party has modified the corresponding data in the data source since the &lt;code&gt;RowSet&lt;/code&gt; object got its data, the changes made to the &lt;code&gt;RowSet&lt;/code&gt; object are lost. The &lt;code&gt;RIOptimisticProvider&lt;/code&gt; implementation uses this level of synchronization.</source>
          <target state="translated">对于下一个升级，作者检查是否存在任何冲突，如果存在冲突，则不向数据源写入任何内容。与此并发级别的问题是，如果另一方已经修改了相应的数据在数据源，因为 &lt;code&gt;RowSet&lt;/code&gt; 对象获得其数据，对所做的更改 &lt;code&gt;RowSet&lt;/code&gt; 对象都将丢失。该 &lt;code&gt;RIOptimisticProvider&lt;/code&gt; 实现使用此水平同步。</target>
        </trans-unit>
        <trans-unit id="c5e212e3a9074256ce77a7e927e229b849e01470" translate="yes" xml:space="preserve">
          <source>For the purpose of loading, a service is represented by a single type, that is, a single interface or abstract class. (A concrete class can be used, but this is not recommended.) A provider of a given service contains one or more concrete classes that extend this</source>
          <target state="translated">为了加载的目的,一个服务由一个单一的类型来表示,即一个单一的接口或抽象类。(可以使用一个具体的类,但不推荐这样做。)一个给定服务的提供者包含一个或多个具体的类来扩展这个服务。(可以使用具体的类,但不推荐这样做。)一个给定服务的提供者包含一个或多个具体的类,它们扩展了这个</target>
        </trans-unit>
        <trans-unit id="1288ddcc9c4db5a49c8d29b85bd92bc7b437561a" translate="yes" xml:space="preserve">
          <source>For the returned &lt;code&gt;SynthLookAndFeel&lt;/code&gt; to be useful you need to invoke &lt;code&gt;load&lt;/code&gt; to specify the set of &lt;code&gt;SynthStyle&lt;/code&gt;s, or invoke &lt;code&gt;setStyleFactory&lt;/code&gt;.</source>
          <target state="translated">为了使返回的 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 有用，您需要调用 &lt;code&gt;load&lt;/code&gt; 来指定 &lt;code&gt;SynthStyle&lt;/code&gt; 的集合，或者调用 &lt;code&gt;setStyleFactory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="420e1533712c545c003744acf9162a0f799d5639" translate="yes" xml:space="preserve">
          <source>For the reverse process, when an object is bound into the namespace, JNDI provides &lt;em&gt;state factories&lt;/em&gt;. Continuing with the printer example, suppose the printer object is updated and rebound:</source>
          <target state="translated">对于相反的过程，当将对象绑定到名称空间时，JNDI提供&lt;em&gt;状态工厂&lt;/em&gt;。继续打印机示例，假设打印机对象已更新并反弹：</target>
        </trans-unit>
        <trans-unit id="dd2ddad0a154f707a981a1a5aae2c41c34d69c2c" translate="yes" xml:space="preserve">
          <source>For the sake of brevity and clarity, pseudo-code is used throughout the descriptions of &lt;code&gt;BigDecimal&lt;/code&gt; methods. The pseudo-code expression &lt;code&gt;(i + j)&lt;/code&gt; is shorthand for &quot;a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is that of the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;i&lt;/code&gt; added to that of the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;j&lt;/code&gt;.&quot; The pseudo-code expression &lt;code&gt;(i == j)&lt;/code&gt; is shorthand for &quot;&lt;code&gt;true&lt;/code&gt; if and only if the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;i&lt;/code&gt; represents the same value as the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;j&lt;/code&gt;.&quot; Other pseudo-code expressions are interpreted similarly. Square brackets are used to represent the particular &lt;code&gt;BigInteger&lt;/code&gt; and scale pair defining a &lt;code&gt;BigDecimal&lt;/code&gt; value; for example [19, 2] is the &lt;code&gt;BigDecimal&lt;/code&gt; numerically equal to 0.19 having a scale of 2.</source>
          <target state="translated">为了简洁明了，在 &lt;code&gt;BigDecimal&lt;/code&gt; 方法的整个描述过程中都使用伪代码。伪代码表达式 &lt;code&gt;(i + j)&lt;/code&gt; 是&amp;ldquo; &lt;code&gt;BigDecimal&lt;/code&gt; 的简写，其值 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;i&lt;/code&gt; 的值加上 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; 的值。&amp;rdquo;伪代码表达式 &lt;code&gt;(i == j)&lt;/code&gt; 是&amp;ldquo; 当且仅当 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;i&lt;/code&gt; 表示与 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; 相同的值时，才为 &lt;code&gt;true&lt;/code&gt; &amp;rdquo;。其他伪代码表达式的解释类似。方括号用于表示特定的 &lt;code&gt;BigInteger&lt;/code&gt; 和比例对，定义了 &lt;code&gt;BigDecimal&lt;/code&gt; 值；例如[ &lt;code&gt;BigDecimal&lt;/code&gt; ]是BigDecimal，数值等于0.19，小数位数为2。</target>
        </trans-unit>
        <trans-unit id="a3e36c82a3b0dbeb638b77cfd214bb7c619f87cb" translate="yes" xml:space="preserve">
          <source>For the sake of brevity and clarity, pseudo-code is used throughout the descriptions of BigInteger methods. The pseudo-code expression &lt;code&gt;(i + j)&lt;/code&gt; is shorthand for &quot;a BigInteger whose value is that of the BigInteger &lt;code&gt;i&lt;/code&gt; plus that of the BigInteger &lt;code&gt;j&lt;/code&gt;.&quot; The pseudo-code expression &lt;code&gt;(i == j)&lt;/code&gt; is shorthand for &quot;&lt;code&gt;true&lt;/code&gt; if and only if the BigInteger &lt;code&gt;i&lt;/code&gt; represents the same value as the BigInteger &lt;code&gt;j&lt;/code&gt;.&quot; Other pseudo-code expressions are interpreted similarly.</source>
          <target state="translated">为了简洁明了，在BigInteger方法的整个描述过程中都使用伪代码。伪代码表达式 &lt;code&gt;(i + j)&lt;/code&gt; 是&amp;ldquo; BigInteger的值，它的值是BigInteger &lt;code&gt;i&lt;/code&gt; 的值加上BigInteger &lt;code&gt;j&lt;/code&gt; 的值&amp;rdquo;。伪代码表达式 &lt;code&gt;(i == j)&lt;/code&gt; 是&amp;ldquo; 当且仅当BigInteger &lt;code&gt;i&lt;/code&gt; 表示与BigInteger &lt;code&gt;j&lt;/code&gt; 相同的值时，才为 &lt;code&gt;true&lt;/code&gt; &amp;rdquo;。其他伪代码表达式的解释类似。</target>
        </trans-unit>
        <trans-unit id="1ef274c4392b2a272a81c02a6bbbe1acf4470fbd" translate="yes" xml:space="preserve">
          <source>For the sake of speed, this method does no checking for name conflicts or well-formedness: such checks are the responsibility of the application.</source>
          <target state="translated">为了提高速度,本方法不进行名称冲突或格式良好的检查:这种检查是应用程序的责任。</target>
        </trans-unit>
        <trans-unit id="5f5c1893f57fef781a72da0605607bfefe31f220" translate="yes" xml:space="preserve">
          <source>For the sake of speed, this method does no checking to see if the attribute is already in the list: that is the responsibility of the application.</source>
          <target state="translated">为了提高速度,这个方法不检查属性是否已经在列表中:那是应用程序的责任。</target>
        </trans-unit>
        <trans-unit id="6421651edc95497cb158a89700f5d65270e20e34" translate="yes" xml:space="preserve">
          <source>For the segment from 1972-11-03 (exact boundary discussed below) until further notice, the consensus international time scale is UTC (with leap seconds). In this segment, the Java Time-Scale is identical to &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;. This is identical to UTC on days that do not have a leap second. On days that do have a leap second, the leap second is spread equally over the last 1000 seconds of the day, maintaining the appearance of exactly 86400 seconds per day.</source>
          <target state="translated">对于从1972-11-03开始的段（下面将讨论确切的边界），直至另行通知，共识的国际时间范围是UTC（带有leap秒）。在此部分中，Java Time-Scale与&lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;相同。这与没有a秒的日子的UTC相同。在具有a秒的日子中，the秒会在一天的最后1000秒内平均分配，从而保持每天精确地出现86400秒。</target>
        </trans-unit>
        <trans-unit id="93c5667c98fb4c1cbb9fa0c8ce2360fb9ed70491" translate="yes" xml:space="preserve">
          <source>For the segment from 1972-11-03 (exact boundary discussed below) until further notice, the consensus international time scale is UTC (with leap seconds). In this segment, the Java Time-Scale is identical to &lt;a href=&quot;https://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;. This is identical to UTC on days that do not have a leap second. On days that do have a leap second, the leap second is spread equally over the last 1000 seconds of the day, maintaining the appearance of exactly 86400 seconds per day.</source>
          <target state="translated">对于从1972-11-03开始（直到下面进一步讨论的确切边界）直到进一步通知的时间段，共识的国际时间范围是UTC（带leap秒）。在此部分中，Java Time-Scale与&lt;a href=&quot;https://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;相同。在没有a秒的日子里，这与UTC相同。在具有a秒的日子中，the秒会在一天的最后1000秒内平均分配，从而保持每天精确地出现86400秒。</target>
        </trans-unit>
        <trans-unit id="1219d8605bba4589bebfd58c531fef13fd1ec85d" translate="yes" xml:space="preserve">
          <source>For the segment prior to 1972-11-03, extending back arbitrarily far, the consensus international time scale is defined to be UT1, applied proleptically, which is equivalent to the (mean) solar time on the prime meridian (Greenwich). In this segment, the Java Time-Scale is identical to the consensus international time scale. The exact boundary between the two segments is the instant where UT1 = UTC between 1972-11-03T00:00 and 1972-11-04T12:00.</source>
          <target state="translated">对于1972-11-03之前的部分,任意延伸到很远的地方,协商一致的国际时标被定义为UT1,按比例应用,相当于本初子午线(格林威治)上的(平均)太阳时。在这一段中,Java时标与共识国际时标相同。两段时标的确切界限是1972-11-03T00:00和1972-11-04T12:00之间UT1=UTC的瞬间。</target>
        </trans-unit>
        <trans-unit id="62147cec184303427ef9bddf6cf83bee6e3ce949" translate="yes" xml:space="preserve">
          <source>For the server, this is the client's host; and for the client, it is the server's host. The name may not be a fully qualified host name or even a host name at all as it may represent a string encoding of the peer's network address. If such a name is desired, it might be resolved through a name service based on the value returned by this method.</source>
          <target state="translated">对于服务器来说,这是客户端的主机;对于客户端来说,这是服务器的主机。这个名称可能不是一个完全限定的主机名,甚至根本不是主机名,因为它可能代表对等体的网络地址的字符串编码。如果需要这样的名称,可以根据本方法返回的值,通过名称服务进行解析。</target>
        </trans-unit>
        <trans-unit id="cf7ed42141cfec99708063e665d4db5f25de170e" translate="yes" xml:space="preserve">
          <source>For the server, this is the client's port number; and for the client, it is the server's port number.</source>
          <target state="translated">对于服务器来说,这是客户端的端口号;对于客户端来说,这是服务器的端口号。</target>
        </trans-unit>
        <trans-unit id="0e9197788cd85e2a5147c42cfaf919f20524e0e7" translate="yes" xml:space="preserve">
          <source>For the static methods in this class that embody the arithmetic operators, we do not actually perform the operation in question as that would snapshot the values of the properties of the method's arguments at the time the static method is called. Instead, the static methods create a new &lt;code&gt;Spring&lt;/code&gt; instance containing references to the method's arguments so that the characteristics of the new spring track the potentially changing characteristics of the springs from which it was made. This is a little like the idea of a &lt;em&gt;lazy value&lt;/em&gt; in a functional language.</source>
          <target state="translated">对于此类包含算术运算符的静态方法，我们实际上并不执行所讨论的操作，因为那样会在调用静态方法时对方法参数的属性值进行快照。相反，静态方法创建了一个新的 &lt;code&gt;Spring&lt;/code&gt; 实例，其中包含对该方法的参数的引用，以便新弹簧的特性跟踪从中制造该弹簧的弹簧的潜在变化特性。这有点像功能语言中的&lt;em&gt;惰性值&lt;/em&gt;的想法。</target>
        </trans-unit>
        <trans-unit id="270fcfa4c23fefd34f6067dfc14da88db6edf11e" translate="yes" xml:space="preserve">
          <source>For this case to work, the JNDI API must have been configured appropriately to supply the information about what directory to use.</source>
          <target state="translated">为了使这种情况下的工作,JNDI API必须进行适当的配置,以提供有关使用什么目录的信息。</target>
        </trans-unit>
        <trans-unit id="b682781178515ee0e34c97bf7e010a636e03f5b2" translate="yes" xml:space="preserve">
          <source>For this to work correctly, the document must have an &lt;code&gt;HTMLEditorKit.Parser&lt;/code&gt; set. This will be the case if the document was created from an HTMLEditorKit via the &lt;code&gt;createDefaultDocument&lt;/code&gt; method.</source>
          <target state="translated">为了使其正常工作，文档必须设置 &lt;code&gt;HTMLEditorKit.Parser&lt;/code&gt; 。如果文档是通过 &lt;code&gt;createDefaultDocument&lt;/code&gt; 方法从HTMLEditorKit创建的，则将是这种情况。</target>
        </trans-unit>
        <trans-unit id="86afe932c6f36f674d651c4b0a0385d6e02afc2f" translate="yes" xml:space="preserve">
          <source>For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the &lt;code&gt;createDefaultDocument&lt;/code&gt; method.</source>
          <target state="translated">为了使其正常工作，文档必须设置HTMLEditorKit.Parser。如果文档是通过 &lt;code&gt;createDefaultDocument&lt;/code&gt; 方法从HTMLEditorKit创建的，则将是这种情况。</target>
        </trans-unit>
        <trans-unit id="31c03e704c64da6039aa6cc23e4bc0d4e38cac66" translate="yes" xml:space="preserve">
          <source>For those components that automatically display a drop location during drag and drop, accepting the transfer, by default, tells them to show the drop location. This can be changed by calling &lt;code&gt;setShowDropLocation&lt;/code&gt; on the &lt;code&gt;TransferSupport&lt;/code&gt;.</source>
          <target state="translated">对于在拖放过程中自动显示放置位置的那些组件，默认情况下接受转移会告诉它们显示放置位置。可以通过在 &lt;code&gt;TransferSupport&lt;/code&gt; 上调用 &lt;code&gt;setShowDropLocation&lt;/code&gt; 来更改此设置。</target>
        </trans-unit>
        <trans-unit id="2786feaac3ba78dc455492c27da01f02b62e3263" translate="yes" xml:space="preserve">
          <source>For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is always one. The transfer types supported are &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; and &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt;. A single int pixel representation is valid for all objects of this class, since it is always possible to represent pixel values used with this class in a single int. Therefore, methods that use this representation do not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">对于那些使用类型为 &lt;code&gt;transferType&lt;/code&gt; 的原始数组像素表示形式的方法，数组长度始终为1。支持的传输类型为 &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; 和 &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt; 。单个int像素表示形式对此类的所有对象均有效，因为始终可以在单个int中表示与该类一起使用的像素值。因此，由于无效的像素值，使用此表示形式的方法不会引发 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99cf5ba3304c383a2df51118708e0986bac1d0ac" translate="yes" xml:space="preserve">
          <source>For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is the same as the number of color and alpha samples. Color samples are stored first in the array followed by the alpha sample, if present. The order of the color samples is specified by the &lt;code&gt;ColorSpace&lt;/code&gt;. Typically, this order reflects the name of the color space type. For example, for &lt;code&gt;TYPE_RGB&lt;/code&gt;, index 0 corresponds to red, index 1 to green, and index 2 to blue.</source>
          <target state="translated">对于那些使用类型为 &lt;code&gt;transferType&lt;/code&gt; 的原始数组像素表示形式的方法，数组长度与颜色和alpha样本的数量相同。颜色样本首先存储在数组中，然后存储在alpha样本（如果存在）中。颜色样本的顺序由 &lt;code&gt;ColorSpace&lt;/code&gt; 指定。通常，此顺序反映颜色空间类型的名称。例如，对于 &lt;code&gt;TYPE_RGB&lt;/code&gt; ，索引0对应于红色，索引1对应于绿色，索引2对应于蓝色。</target>
        </trans-unit>
        <trans-unit id="56e76dca6435248ee5f5c1c729db49347e93fef4" translate="yes" xml:space="preserve">
          <source>For top efficiency, consider wrapping an InputStreamReader within a BufferedReader. For example:</source>
          <target state="translated">为了达到最高的效率,可以考虑在BufferedReader中封装一个InputStreamReader。例如:</target>
        </trans-unit>
        <trans-unit id="0654848a089140d2007dcfe1b9715ed583001722" translate="yes" xml:space="preserve">
          <source>For top efficiency, consider wrapping an OutputStreamWriter within a BufferedWriter so as to avoid frequent converter invocations. For example:</source>
          <target state="translated">为了达到最高效率,可以考虑在BufferedWriter中封装一个OutputStreamWriter,以避免频繁调用转换器。例如</target>
        </trans-unit>
        <trans-unit id="2788ca71aa05651818266f4a2d3abb2660aaaca4" translate="yes" xml:space="preserve">
          <source>For transformation errors, a &lt;code&gt;Transformer&lt;/code&gt; must use this interface instead of throwing an &lt;code&gt;Exception&lt;/code&gt;: it is up to the application to decide whether to throw an &lt;code&gt;Exception&lt;/code&gt; for different types of errors and warnings. Note however that the &lt;code&gt;Transformer&lt;/code&gt; is not required to continue with the transformation after a call to &lt;a href=&quot;#fatalError(javax.xml.transform.TransformerException)&quot;&gt;&lt;code&gt;fatalError(TransformerException exception)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于转换错误， &lt;code&gt;Transformer&lt;/code&gt; 必须使用此接口而不是引发 &lt;code&gt;Exception&lt;/code&gt; ：由应用程序决定是否针对不同类型的错误和警告引发 &lt;code&gt;Exception&lt;/code&gt; 。但请注意， &lt;code&gt;Transformer&lt;/code&gt; 不需要继续在通话结束后改造&lt;a href=&quot;#fatalError(javax.xml.transform.TransformerException)&quot;&gt; &lt;code&gt;fatalError(TransformerException exception)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c081b54696fcba2289120fbf328c3f2ca017882" translate="yes" xml:space="preserve">
          <source>For two &lt;code&gt;DocumentType&lt;/code&gt; nodes to be equal, the following conditions must also be satisfied:</source>
          <target state="translated">为了使两个 &lt;code&gt;DocumentType&lt;/code&gt; 节点相等，还必须满足以下条件：</target>
        </trans-unit>
        <trans-unit id="b464d383cd3cfa532b3f2034d87a15caddd8db94" translate="yes" xml:space="preserve">
          <source>For two ACL entries to be considered equals requires that they are both the same type, their who components are equal, their permissions components are equal, and their flags components are equal.</source>
          <target state="translated">要想让两个ACL条目被认为是相等的,需要它们的类型都相同,它们的who组件是相等的,它们的权限组件是相等的,它们的flags组件是相等的。</target>
        </trans-unit>
        <trans-unit id="a33b6dc4fc08ac58790e30247b0b5e0d86acb3d4" translate="yes" xml:space="preserve">
          <source>For two URIs to be considered equal requires that either both are opaque or both are hierarchical. Their schemes must either both be undefined or else be equal without regard to case. Their fragments must either both be undefined or else be equal.</source>
          <target state="translated">要使两个URI被认为是平等的,需要两者都是不透明的,或者两者都是分层的。它们的方案必须要么是未定义的,要么是不分大小写的。它们的片段必须要么是未定义的,要么是相等的。</target>
        </trans-unit>
        <trans-unit id="9fda39dc260b35491a35fb6ef8135edfdb1fed3f" translate="yes" xml:space="preserve">
          <source>For two hierarchical URIs to be considered equal, their paths must be equal and their queries must either both be undefined or else be equal. Their authorities must either both be undefined, or both be registry-based, or both be server-based. If their authorities are defined and are registry-based, then they must be equal. If their authorities are defined and are server-based, then their hosts must be equal without regard to case, their port numbers must be equal, and their user-information components must be equal.</source>
          <target state="translated">要使两个分层URI被认为是相等的,它们的路径必须是相等的,它们的查询必须要么是未定义的,要么是相等的。它们的权限要么是未定义的,要么是基于注册表的,要么是基于服务器的。如果它们的权限被定义并且是基于注册表的,那么它们必须相等。如果它们的权限是被定义的,并且是基于服务器的,那么它们的主机必须相等,不分大小写,它们的端口号必须相等,它们的用户信息组件必须相等。</target>
        </trans-unit>
        <trans-unit id="81a9827d6416dd4007c6cdbdb1c378d41a9bc98a" translate="yes" xml:space="preserve">
          <source>For two opaque URIs to be considered equal, their scheme-specific parts must be equal.</source>
          <target state="translated">要使两个不透明的URI被认为是相等的,它们的方案特定部分必须相等。</target>
        </trans-unit>
        <trans-unit id="1773f4b25e986b1b1e47cbc4ac4abf1a37e430f8" translate="yes" xml:space="preserve">
          <source>For type-safety and to represent all attributes uniformly, the Java Print Service API defines each attribute category as a class, such as class &lt;code&gt;Copies&lt;/code&gt;, class &lt;a href=&quot;standard/sides&quot;&gt;Sides&lt;/a&gt;, and class &lt;a href=&quot;standard/printerresolution&quot;&gt;PrinterResolution&lt;/a&gt;. Each attribute class wraps one or more primitive data items containing the attribute's value. Attribute set operations perform frequent comparisons between attribute category objects when adding attributes, finding existing attributes in the same category, and looking up an attribute given its category. Because an attribute category is represented by a class, fast attribute-value comparisons can be performed with the &lt;code&gt;Class.equals&lt;/code&gt; method.</source>
          <target state="translated">为了确保类型安全并统一表示所有属性，Java Print Service API将每个属性类别定义为一个类，例如 &lt;code&gt;Copies&lt;/code&gt; 类，&lt;a href=&quot;standard/sides&quot;&gt;Sides&lt;/a&gt;类和&lt;a href=&quot;standard/printerresolution&quot;&gt;PrinterResolution&lt;/a&gt;类。每个属性类都包装一个或多个包含该属性值的原始数据项。在添加属性，查找同一类别中的现有属性并查找给定类别的属性时，属性集操作会在属性类别对象之间执行频繁的比较。因为属性类别由类表示，所以可以使用 &lt;code&gt;Class.equals&lt;/code&gt; 方法执行快速的属性值比较。</target>
        </trans-unit>
        <trans-unit id="c8151a77e532da63512e95e962382939ed80a1a3" translate="yes" xml:space="preserve">
          <source>For unnamed modules, this method is the equivalent to invoking the &lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt;&lt;code&gt;getDefinedPackages&lt;/code&gt;&lt;/a&gt; method of this module's class loader and returning the set of package names.</source>
          <target state="translated">对于未命名的模块，此方法等效于调用此模块的类加载器的&lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt; &lt;code&gt;getDefinedPackages&lt;/code&gt; &lt;/a&gt;方法并返回包名称集。</target>
        </trans-unit>
        <trans-unit id="7551f08b32c51469006c7e84becb9b47d73a193b" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity.</source>
          <target state="translated">对于未解析的实体,实体的符号名称。</target>
        </trans-unit>
        <trans-unit id="7f0cd9f0f4cc8493c530713ad6f5e4863c851932" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity. For parsed entities, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对于未解析的实体，该实体的符号名称。对于已解析的实体，该参数为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7eaf32e1bfec30e70663490c30bbb45f99fe9fb3" translate="yes" xml:space="preserve">
          <source>For validating parsers, the checks are made on the original document, before any modification by the filter. No validity checks are made on any document modifications made by the filter.</source>
          <target state="translated">对于验证解析器,在过滤器进行任何修改之前,先对原始文档进行检查。对过滤器所做的任何文件修改都不进行有效性检查。</target>
        </trans-unit>
        <trans-unit id="d5c1648f641165c8a91e6ceb25b78ba9c26bdae2" translate="yes" xml:space="preserve">
          <source>For values other than &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; NaN and &amp;plusmn;Infinity, this constructor is compatible with the values returned by &lt;a href=&quot;../lang/float#toString(float)&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This is generally the preferred way to convert a &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; into a BigDecimal, as it doesn't suffer from the unpredictability of the &lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">对于 &lt;code&gt;float&lt;/code&gt; 和 &lt;code&gt;double&lt;/code&gt; NaN和&amp;plusmn;Infinity以外的值，此构造函数与&lt;a href=&quot;../lang/float#toString(float)&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;返回的值兼容。通常，这是将 &lt;code&gt;float&lt;/code&gt; 或 &lt;code&gt;double&lt;/code&gt; 转换为BigDecimal的首选方法，因为它不会受到&lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;构造函数的不可预测性的影响。</target>
        </trans-unit>
        <trans-unit id="769dd5ea1ba79523c383adcf407ff9b0c4811341" translate="yes" xml:space="preserve">
          <source>For vertical scrolling, the following rules are used:</source>
          <target state="translated">对于垂直滚动,使用以下规则。</target>
        </trans-unit>
        <trans-unit id="8961949ac0861281f381f9244791d180b3d7373a" translate="yes" xml:space="preserve">
          <source>ForLoopTree</source>
          <target state="translated">ForLoopTree</target>
        </trans-unit>
        <trans-unit id="b03f826ea2ede997abbd73c87f99f4f7f6c05e54" translate="yes" xml:space="preserve">
          <source>Force a line break.</source>
          <target state="translated">强行断线。</target>
        </trans-unit>
        <trans-unit id="d6aa6cfdb6fd89911c92131158050aad0c7134cf" translate="yes" xml:space="preserve">
          <source>Force a line break. See the BR element definition in HTML 4.0.</source>
          <target state="translated">强制换行。参见HTML 4.0中的BR元素定义。</target>
        </trans-unit>
        <trans-unit id="c468aeea91404a1c8265133c126661b29c8366b4" translate="yes" xml:space="preserve">
          <source>Force a method to return before it reaches a return statement.</source>
          <target state="translated">强制一个方法在到达返回语句之前返回。</target>
        </trans-unit>
        <trans-unit id="518f2d66d8adadf9f6d027b476ccdc25ad385da7" translate="yes" xml:space="preserve">
          <source>Force all system buffers to synchronize with the underlying device.</source>
          <target state="translated">强制所有系统缓冲区与底层设备同步。</target>
        </trans-unit>
        <trans-unit id="54f4d8d19a42658228ac7ae908ce569b6f16fb5b" translate="yes" xml:space="preserve">
          <source>Force all system buffers to synchronize with the underlying device. This method returns after all modified data and attributes of this FileDescriptor have been written to the relevant device(s). In particular, if this FileDescriptor refers to a physical storage medium, such as a file in a file system, sync will not return until all in-memory modified copies of buffers associated with this FileDescriptor have been written to the physical medium. sync is meant to be used by code that requires physical storage (such as a file) to be in a known state For example, a class that provided a simple transaction facility might use sync to ensure that all changes to a file caused by a given transaction were recorded on a storage medium. sync only affects buffers downstream of this FileDescriptor. If any in-memory buffering is being done by the application (for example, by a BufferedOutputStream object), those buffers must be flushed into the FileDescriptor (for example, by invoking OutputStream.flush) before that data will be affected by sync.</source>
          <target state="translated">强制所有系统缓冲区与底层设备同步。此方法在此FileDescriptor的所有修改数据和属性被写入相关设备后返回。特别是,如果这个FileDescriptor指向一个物理存储介质,比如文件系统中的文件,那么在与这个FileDescriptor相关的缓冲区的所有内存修改副本被写入物理介质之前,同步不会返回。sync的目的是被需要物理存储(如文件)处于已知状态的代码所使用。例如,一个提供简单事务设施的类可能会使用sync来确保由给定事务引起的对文件的所有修改都被记录在存储介质上。如果应用程序正在进行任何内存缓冲(例如,由BufferedOutputStream对象),这些缓冲区必须被刷新到FileDescriptor中(例如,通过调用OutputStream.flush),然后这些数据才会受到同步的影响。</target>
        </trans-unit>
        <trans-unit id="db658f27e687d892a5022ac035400f638bcb31a7" translate="yes" xml:space="preserve">
          <source>Force the original target method handle &lt;code&gt;MH0&lt;/code&gt; to the required type, as &lt;code&gt;MH1 = MH0.asType(TN)&lt;/code&gt;.</source>
          <target state="translated">强制将原始目标方法句柄 &lt;code&gt;MH0&lt;/code&gt; 设置为所需的类型，因为 &lt;code&gt;MH1 = MH0.asType(TN)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a2e70d2878a9d5aa38cb5618572b46c26f02088" translate="yes" xml:space="preserve">
          <source>ForcedBreakWeight</source>
          <target state="translated">ForcedBreakWeight</target>
        </trans-unit>
        <trans-unit id="5939f444f5d0d9a52f72fc6e0d0b730f6e796ebd" translate="yes" xml:space="preserve">
          <source>Forces any changes in the contents of this preference node and its descendants to the persistent store.</source>
          <target state="translated">强制将此偏好节点及其子代的内容更改到持久化存储中。</target>
        </trans-unit>
        <trans-unit id="1c9b10af1449bad784be1cde6e9a43551892676f" translate="yes" xml:space="preserve">
          <source>Forces any changes in the contents of this preference node and its descendants to the persistent store. Once this method returns successfully, it is safe to assume that all changes made in the subtree rooted at this node prior to the method invocation have become permanent.</source>
          <target state="translated">强制将此偏好节点及其子节点的内容的任何更改转移到持久化存储中。一旦本方法成功返回,可以安全地认为在本方法调用之前根植于本节点的子树中的所有更改都已成为永久性的。</target>
        </trans-unit>
        <trans-unit id="866add102857888eac0356740813a95c72761659" translate="yes" xml:space="preserve">
          <source>Forces any changes made to a region of this buffer's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">强制将对该缓冲区内容的区域所做的任何更改写入包含映射文件的存储设备。</target>
        </trans-unit>
        <trans-unit id="b6577447f3397789dd5b59325424ee56567c7eed" translate="yes" xml:space="preserve">
          <source>Forces any changes made to a region of this buffer's content to be written to the storage device containing the mapped file. The region starts at the given &lt;code&gt;index&lt;/code&gt; in this buffer and is &lt;code&gt;length&lt;/code&gt; bytes.</source>
          <target state="translated">强制对该缓冲区内容区域进行的任何更改都将写入包含映射文件的存储设备中。该区域从该缓冲区中的给定 &lt;code&gt;index&lt;/code&gt; 开始，为 &lt;code&gt;length&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="a680e483ca6950b6c2d33e9ce98ce8a59904a423" translate="yes" xml:space="preserve">
          <source>Forces any changes made to this buffer's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">强制将对该缓冲区内容的任何更改写入包含映射文件的存储设备。</target>
        </trans-unit>
        <trans-unit id="979293701c2da21f6b5259ef695a3cf808e4e7c1" translate="yes" xml:space="preserve">
          <source>Forces any changes made to this segment's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">强制将对该段内容的任何更改写入包含映射文件的存储设备。</target>
        </trans-unit>
        <trans-unit id="deea8a87216b9ce28d84e11ea2b2562f15768162" translate="yes" xml:space="preserve">
          <source>Forces any updates to this channel's file to be written to the storage device that contains it.</source>
          <target state="translated">强制将此通道文件的任何更新写入包含它的存储设备。</target>
        </trans-unit>
        <trans-unit id="77d782523eb2a73cd90e8e918ae7fac2208133bf" translate="yes" xml:space="preserve">
          <source>Forces the current value to be taken from the &lt;code&gt;AbstractFormatter&lt;/code&gt; and set as the current value.</source>
          <target state="translated">强制从 &lt;code&gt;AbstractFormatter&lt;/code&gt; 获取当前值并将其设置为当前值。</target>
        </trans-unit>
        <trans-unit id="ec9382053ccf38d457c53ee8300e84d872701416" translate="yes" xml:space="preserve">
          <source>Forces the current value to be taken from the &lt;code&gt;AbstractFormatter&lt;/code&gt; and set as the current value. This has no effect if there is no current &lt;code&gt;AbstractFormatter&lt;/code&gt; installed.</source>
          <target state="translated">强制从 &lt;code&gt;AbstractFormatter&lt;/code&gt; 获取当前值并将其设置为当前值。如果没有安装当前的 &lt;code&gt;AbstractFormatter&lt;/code&gt; ,这将无效。</target>
        </trans-unit>
        <trans-unit id="5e0e8d66fb65d640dc6fc57b52309f8c8b4fc141" translate="yes" xml:space="preserve">
          <source>Forces the data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable.</source>
          <target state="translated">强制数据匹配 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 变量中指定的状态。</target>
        </trans-unit>
        <trans-unit id="7247ff20e823272d20fd969a4770a9eb59049fe9" translate="yes" xml:space="preserve">
          <source>Forces the data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state.</source>
          <target state="translated">强制数据匹配 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 变量中指定的状态。它可以将彩色栅格数据乘以或除以alpha，如果数据处于正确状态，则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="3cb1bac84088d2f373c2cf2dd831c6a1d91a81f2" translate="yes" xml:space="preserve">
          <source>Forces the given value to be returned as a result.</source>
          <target state="translated">强制返回给定值作为结果。</target>
        </trans-unit>
        <trans-unit id="dbce88f263ac9d740c92b1f1edd27fb2fa3fda52" translate="yes" xml:space="preserve">
          <source>Forces the given value to be returned as a result. This method is designed to support extensions, and should not in general be called otherwise.</source>
          <target state="translated">强制返回给定值作为结果。这个方法是为了支持扩展而设计的,一般情况下不应该被调用。</target>
        </trans-unit>
        <trans-unit id="da9dbd45f463b58f2240e5185c7d5cf9102f825b" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">假定此 &lt;code&gt;ColorModel&lt;/code&gt; 当前正确描述了栅格数据，以使其与 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 变量中指定的状态匹配。</target>
        </trans-unit>
        <trans-unit id="4549cc0416b7cda2bd6ba87f5c0839294f8bd757" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method also returns an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. Since &lt;code&gt;ColorModel&lt;/code&gt; can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported &lt;code&gt;transferType&lt;/code&gt;.</source>
          <target state="translated">假定此 &lt;code&gt;ColorModel&lt;/code&gt; 当前正确描述了栅格数据，以使其与 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 变量中指定的状态匹配。它可以将彩色栅格数据乘以或除以alpha，如果数据处于正确状态，则不执行任何操作。如果需要强制数据，则此方法还将返回此 &lt;code&gt;ColorModel&lt;/code&gt; 的实例，该实例具有适当设置的 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 标志。由于 &lt;code&gt;ColorModel&lt;/code&gt; 可以被子类化，因此子类继承了此方法的实现，如果不重写它，则如果使用不受支持的 &lt;code&gt;transferType&lt;/code&gt; ，则它们将引发异常。</target>
        </trans-unit>
        <trans-unit id="988c07f1ed2980fbf5a6ea7e9086a5c86550e09c" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. This method will throw a &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if it is not supported by this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; is an abstract class, any instance is an instance of a subclass. Subclasses must override this method since the implementation in this abstract class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">假定此 &lt;code&gt;ColorModel&lt;/code&gt; 当前正确描述了栅格数据，以使其与 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 变量中指定的状态匹配。它可以将彩色栅格数据乘以或除以alpha，如果数据处于正确状态，则不执行任何操作。如果需要强制数据，则此方法还将返回此 &lt;code&gt;ColorModel&lt;/code&gt; 的实例，该实例具有适当设置的 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 标志。如果此 &lt;code&gt;ColorModel&lt;/code&gt; 不支持此方法，则将抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。由于 &lt;code&gt;ColorModel&lt;/code&gt; 是一个抽象类，任何实例都是一个子类的实例。子类必须重写此方法，因为此抽象类中的实现将引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="118377b2f181faacd93bb631f27279c6cd8907a0" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. This method will throw a &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this transferType is not supported by this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.</source>
          <target state="translated">假定此 &lt;code&gt;ColorModel&lt;/code&gt; 当前正确描述了栅格数据，以使其与 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 变量中指定的状态匹配。它可以将彩色栅格数据乘以或除以alpha，如果数据处于正确状态，则不执行任何操作。如果需要强制数据，则此方法还将返回此 &lt;code&gt;ColorModel&lt;/code&gt; 的实例，该实例具有适当设置的 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 标志。如果此 &lt;code&gt;ColorModel&lt;/code&gt; 不支持该transferType，则此方法将引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。由于 &lt;code&gt;ColorModel&lt;/code&gt; 可以子类化，子类继承此方法的实现，如果不重写此方法，则使用不支持的transferType会引发异常。</target>
        </trans-unit>
        <trans-unit id="f80d2a26537684a8a826907dd42b699f6d7f7f82" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes.</source>
          <target state="translated">强制指定的部件沿指定的轴线具有相同的尺寸,而不考虑它们的首选、最小或最大尺寸。</target>
        </trans-unit>
        <trans-unit id="fb20e053b06a3e6b80f33343837372a070455de0" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components along the horizontal axis and the preferred width is 10 and 20, both components are given a width of 20.</source>
          <target state="translated">强制指定的组件在指定的轴线上具有相同的尺寸,无论它们的首选、最小或最大尺寸。被链接的组件被赋予每个链接组件的首选尺寸的最大值。例如,如果沿水平轴链接两个组件,并且首选宽度是10和20,则两个组件的宽度都是20。</target>
        </trans-unit>
        <trans-unit id="7508af74e0b645d0e8673f26b3c2909a94bbfe96" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size regardless of their preferred, minimum or maximum sizes.</source>
          <target state="translated">强制指定的组件具有相同的尺寸,无论其首选、最小或最大尺寸。</target>
        </trans-unit>
        <trans-unit id="1bb12d9e5c29c262c5c0b442af8ebd90c800f627" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components with a preferred width of 10 and 20, both components are given a width of 20.</source>
          <target state="translated">强制指定的组件具有相同的尺寸,而不管它们的首选、最小或最大尺寸。被链接的组件被赋予每个链接组件的首选尺寸的最大值。例如,如果您链接了两个首选宽度为10和20的组件,那么这两个组件的宽度都是20。</target>
        </trans-unit>
        <trans-unit id="dde1b8ae3d0a842d68726e659939eb0c5c7f8545" translate="yes" xml:space="preserve">
          <source>Forces the thread to stop executing.</source>
          <target state="translated">强制线程停止执行。</target>
        </trans-unit>
        <trans-unit id="3d1c1c7583df36349c8a3dc399a306938d49a073" translate="yes" xml:space="preserve">
          <source>Forces this phaser to enter termination state.</source>
          <target state="translated">强制该相位器进入终止状态。</target>
        </trans-unit>
        <trans-unit id="c3e0e32becf1c3ad394aa3f4fdb2ae0464a0dd19" translate="yes" xml:space="preserve">
          <source>Forces this phaser to enter termination state. Counts of registered parties are unaffected. If this phaser is a member of a tiered set of phasers, then all of the phasers in the set are terminated. If this phaser is already terminated, this method has no effect. This method may be useful for coordinating recovery after one or more tasks encounter unexpected exceptions.</source>
          <target state="translated">强制该相位器进入终止状态。已注册的相位器的计数不受影响。如果该相位器是分层相位器集合的成员,那么该集合中的所有相位器都将被终止。如果这个相位器已经被终止,那么这个方法就没有效果。此方法对于在一个或多个任务遇到意外异常后协调恢复可能很有用。</target>
        </trans-unit>
        <trans-unit id="acffb05348f752c59e5d294b6dc5985b876136be" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed.</source>
          <target state="translated">强制导致方法&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和相关方法的后续调用引发给定异常，无论是否已完成。</target>
        </trans-unit>
        <trans-unit id="5445c45650785e4ad2937d1d5d9d5487d8c3ce5f" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">强制导致方法&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和相关方法的后续调用引发给定异常，无论是否已完成。此方法仅设计用于错误恢复操作，即使在这种情况下，使用已建立的结果或覆盖的结果也可能导致正在进行的相关完成。</target>
        </trans-unit>
        <trans-unit id="a9d25990145c83fbe30b7ec71eb0f5ee823cb07f" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">强制导致方法&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和相关方法的后续调用抛出给定的异常，无论是否已完成。此方法仅设计用于错误恢复操作，即使在这种情况下，使用已建立的结果或覆盖的结果也可能导致正在进行的相关完成。</target>
        </trans-unit>
        <trans-unit id="c81377834f3334c2907fec28b26737276865107a" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed.</source>
          <target state="translated">强制设置或重置随后由方法&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和相关方法返回的值（无论是否已完成）。</target>
        </trans-unit>
        <trans-unit id="9c3f9e363addc3b76fcf9fdc62ce15eccc5454dc" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">强制设置或重置随后由方法&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;和相关方法返回的值（无论是否已完成）。此方法仅设计用于错误恢复操作，即使在这种情况下，使用已建立的结果或覆盖的结果也可能导致正在进行的相关完成。</target>
        </trans-unit>
        <trans-unit id="3e2c4695f4300e5fd7114ef140e2386285715a22" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">强制设置或重置随后由&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;方法和相关方法返回的值（无论是否已完成）。此方法仅设计用于错误恢复操作，即使在这种情况下，使用已建立的结果或覆盖的结果也可能导致正在进行的相关完成。</target>
        </trans-unit>
        <trans-unit id="3dc9b793d4f642b58f87c9edc48942b364f96f2b" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the currently running Java virtual machine.</source>
          <target state="translated">强制终止当前运行的Java虚拟机。</target>
        </trans-unit>
        <trans-unit id="36e93f57eedd9a54ddda92bd9479c29c2239c76f" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the currently running Java virtual machine. This method never returns normally.</source>
          <target state="translated">强制终止当前运行的Java虚拟机。此方法永远不会正常返回。</target>
        </trans-unit>
        <trans-unit id="1613ff18a51063a1ec5a75856a9d23412b1fa962" translate="yes" xml:space="preserve">
          <source>Forcing reading of fields corresponding to &lt;code&gt;TIFFTag&lt;/code&gt;s not in any of the allowed &lt;code&gt;TIFFTagSet&lt;/code&gt;s may be effected via &lt;a href=&quot;#setReadUnknownTags(boolean)&quot;&gt;&lt;code&gt;setReadUnknownTags&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过&lt;a href=&quot;#setReadUnknownTags(boolean)&quot;&gt; &lt;code&gt;setReadUnknownTags&lt;/code&gt; &lt;/a&gt;强制读取不在任何允许的 &lt;code&gt;TIFFTagSet&lt;/code&gt; 中的与 &lt;code&gt;TIFFTag&lt;/code&gt; 对应的字段。</target>
        </trans-unit>
        <trans-unit id="f7745efdedae8430f407638389ab56b4f858eeed" translate="yes" xml:space="preserve">
          <source>Foreground</source>
          <target state="translated">Foreground</target>
        </trans-unit>
        <trans-unit id="eb08eb0b266d650d7a34350fb36997b3bc618533" translate="yes" xml:space="preserve">
          <source>ForegroundAction</source>
          <target state="translated">ForegroundAction</target>
        </trans-unit>
        <trans-unit id="fccd10bd01f081e772ab55fdf5e2bd560958bf1a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool</source>
          <target state="translated">ForkJoinPool</target>
        </trans-unit>
        <trans-unit id="f39d8a7e89b599a5922f299f82b1a8c6acd3a87a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ForkJoinWorkerThreadFactory</source>
          <target state="translated">ForkJoinPool.ForkJoinWorkerThreadFactory</target>
        </trans-unit>
        <trans-unit id="ad028608dc5cc21b9f19de41ba8ea82f9a2aa0f6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()</source>
          <target state="translated">ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()</target>
        </trans-unit>
        <trans-unit id="7ecdf21d4b2f0d280dd6c19b3ab787e93ef269a6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker</source>
          <target state="translated">ForkJoinPool.ManagedBlocker</target>
        </trans-unit>
        <trans-unit id="5eb0e257ecb6476a08bc37c22217a81973f1c833" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker.block()</source>
          <target state="translated">ForkJoinPool.ManagedBlocker.block()</target>
        </trans-unit>
        <trans-unit id="c23a407322375c571854eaba3582b74df262d4da" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker.isReleasable()</source>
          <target state="translated">ForkJoinPool.ManagedBlocker.isReleasable()</target>
        </trans-unit>
        <trans-unit id="5d07a96e3f41b39dad5d76d32a59480cd45ff59d" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.awaitQuiescence()</source>
          <target state="translated">ForkJoinPool.awaitQuiescence()</target>
        </trans-unit>
        <trans-unit id="ce226f283a258522ba29450ec73ffb2a3449205a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.awaitTermination()</source>
          <target state="translated">ForkJoinPool.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="3aa52c8a1e44e47a16bbd49172332d24b2715623" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.commonPool()</source>
          <target state="translated">ForkJoinPool.commonPool()</target>
        </trans-unit>
        <trans-unit id="385ac479751a78d054ac18b246c415aed5ab64b6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.drainTasksTo()</source>
          <target state="translated">ForkJoinPool.drainTasksTo()</target>
        </trans-unit>
        <trans-unit id="5b4130a21005c5f67b0ea532e393df7b096450c3" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.execute()</source>
          <target state="translated">ForkJoinPool.execute()</target>
        </trans-unit>
        <trans-unit id="a2f334663e796ecc9858263dc71a34e0a30f739e" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getActiveThreadCount()</source>
          <target state="translated">ForkJoinPool.getActiveThreadCount()</target>
        </trans-unit>
        <trans-unit id="28fbff92fd675f66b94eeb30de0b190127eeb544" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getAsyncMode()</source>
          <target state="translated">ForkJoinPool.getAsyncMode()</target>
        </trans-unit>
        <trans-unit id="e6179f341847929d36d77692104083832b3030f1" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getCommonPoolParallelism()</source>
          <target state="translated">ForkJoinPool.getCommonPoolParallelism()</target>
        </trans-unit>
        <trans-unit id="6f34a8e32f7e690865dafd75e80ec571296cdbd6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getFactory()</source>
          <target state="translated">ForkJoinPool.getFactory()</target>
        </trans-unit>
        <trans-unit id="1a03e04b00b20c2269390bbd12bfd81012839466" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getParallelism()</source>
          <target state="translated">ForkJoinPool.getParallelism()</target>
        </trans-unit>
        <trans-unit id="4bc046d6b8640b3d2504821b5c135ded1d833fd6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getPoolSize()</source>
          <target state="translated">ForkJoinPool.getPoolSize()</target>
        </trans-unit>
        <trans-unit id="6c06d0b4ff54a653996ee5b2aa8080fadf00b2a4" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getQueuedSubmissionCount()</source>
          <target state="translated">ForkJoinPool.getQueuedSubmissionCount()</target>
        </trans-unit>
        <trans-unit id="f33076b722e1cad6390534ecf825abac4fc3aaf2" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getQueuedTaskCount()</source>
          <target state="translated">ForkJoinPool.getQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="12f81fb17b2bb940a0951076fa5c61dd0be3099c" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getRunningThreadCount()</source>
          <target state="translated">ForkJoinPool.getRunningThreadCount()</target>
        </trans-unit>
        <trans-unit id="3f8d7459d72c6b4ac7a4f2c49c0cf21720d83ccc" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getStealCount()</source>
          <target state="translated">ForkJoinPool.getStealCount()</target>
        </trans-unit>
        <trans-unit id="82bee117026169a5497bd3efac03b4c75e2532a9" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getUncaughtExceptionHandler()</source>
          <target state="translated">ForkJoinPool.getUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="4b336964ea7affe439f1c3559fc0da6b4359ac36" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.hasQueuedSubmissions()</source>
          <target state="translated">ForkJoinPool.hasQueuedSubmissions()</target>
        </trans-unit>
        <trans-unit id="379dfbf47fcbad302f0a0ea85ff96b5796cad7dd" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.invoke()</source>
          <target state="translated">ForkJoinPool.invoke()</target>
        </trans-unit>
        <trans-unit id="931e5430fc6c6213aba1a9bcb4b17c34cab25307" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.invokeAll()</source>
          <target state="translated">ForkJoinPool.invokeAll()</target>
        </trans-unit>
        <trans-unit id="d07fee2abe17748f58fdbcd25ef6b487f6ae6b65" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isQuiescent()</source>
          <target state="translated">ForkJoinPool.isQuiescent()</target>
        </trans-unit>
        <trans-unit id="3ca358ce8f82d43cdc85b7565f3136661b6ad6c7" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isShutdown()</source>
          <target state="translated">ForkJoinPool.isShutdown()</target>
        </trans-unit>
        <trans-unit id="63e491a96c2d56b401d9fb6b86161de85a051551" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isTerminated()</source>
          <target state="translated">ForkJoinPool.isTerminated()</target>
        </trans-unit>
        <trans-unit id="fdb7780bd7a291bb10007d9da6ae6b0eb9e54de2" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isTerminating()</source>
          <target state="translated">ForkJoinPool.isTerminating()</target>
        </trans-unit>
        <trans-unit id="d8394094624d0503d79c4a04cb1552f61949d4bf" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.managedBlock()</source>
          <target state="translated">ForkJoinPool.managedBlock()</target>
        </trans-unit>
        <trans-unit id="94fa97addee2bb016fa7ad0dba60f03e0174f651" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.newTaskFor()</source>
          <target state="translated">ForkJoinPool.newTaskFor()</target>
        </trans-unit>
        <trans-unit id="948cf8a07fe3440136e940fe1bf2780e9308f719" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.pollSubmission()</source>
          <target state="translated">ForkJoinPool.pollSubmission()</target>
        </trans-unit>
        <trans-unit id="d8298ff24e07678c64b2477a81e0aba73e8d0e27" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.shutdown()</source>
          <target state="translated">ForkJoinPool.shutdown()</target>
        </trans-unit>
        <trans-unit id="e92dc1fa038cb558325a32141647a6b89a3bf76e" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.shutdownNow()</source>
          <target state="translated">ForkJoinPool.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="7c2afced7fedfcef83ba19435784c2707f27cfc8" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.submit()</source>
          <target state="translated">ForkJoinPool.submit()</target>
        </trans-unit>
        <trans-unit id="ea35f6d6d1e2525a9bf9fbed7c02fa29586a7cb5" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.toString()</source>
          <target state="translated">ForkJoinPool.toString()</target>
        </trans-unit>
        <trans-unit id="23ac2c518680958cf19f36c2fafaa6479ef0f3ae" translate="yes" xml:space="preserve">
          <source>ForkJoinTask</source>
          <target state="translated">ForkJoinTask</target>
        </trans-unit>
        <trans-unit id="492eb83820d55a644e618c8afafd921055639859" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.adapt()</source>
          <target state="translated">ForkJoinTask.adapt()</target>
        </trans-unit>
        <trans-unit id="ee8d9ae1739cf8b336587f8783a3849bb685fe58" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.cancel()</source>
          <target state="translated">ForkJoinTask.cancel()</target>
        </trans-unit>
        <trans-unit id="7e48208733c4012a55ab36f052964bca4003b2a1" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.compareAndSetForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.compareAndSetForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="94b15ff04b08a6eb6b1de30659c59f6e63b714f0" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.complete()</source>
          <target state="translated">ForkJoinTask.complete()</target>
        </trans-unit>
        <trans-unit id="9bc884392d7037bd7863201a2bbbc62d6d48e432" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.completeExceptionally()</source>
          <target state="translated">ForkJoinTask.completeExceptionally()</target>
        </trans-unit>
        <trans-unit id="7837dc8a9d9af718ac92c7ffd144281e74869bf8" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.exec()</source>
          <target state="translated">ForkJoinTask.exec()</target>
        </trans-unit>
        <trans-unit id="1ad0a80adc32bf635c8a3b60a23e5ab096e8d5ce" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.fork()</source>
          <target state="translated">ForkJoinTask.fork()</target>
        </trans-unit>
        <trans-unit id="b655d7110805dcfef615f12711e9c1935f46291d" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.get()</source>
          <target state="translated">ForkJoinTask.get()</target>
        </trans-unit>
        <trans-unit id="82c37a27c81d5be46eaabb49e37965eef5d787f2" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getException()</source>
          <target state="translated">ForkJoinTask.getException()</target>
        </trans-unit>
        <trans-unit id="04d0e9910c2fae1b75675a431ddddc7cb005c19e" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.getForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="0d13ff10dc6ea2d242e5a16af56572ec62728dbc" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getPool()</source>
          <target state="translated">ForkJoinTask.getPool()</target>
        </trans-unit>
        <trans-unit id="75e02c9328661a1c949f8637fb6921b870fc6f72" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getQueuedTaskCount()</source>
          <target state="translated">ForkJoinTask.getQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="5b3a64e0ddf0601d8c368714d74c4ec34e6ba1cc" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getRawResult()</source>
          <target state="translated">ForkJoinTask.getRawResult()</target>
        </trans-unit>
        <trans-unit id="e93d5dc2d0a6e324cac0016b71230fe47ab6d260" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getSurplusQueuedTaskCount()</source>
          <target state="translated">ForkJoinTask.getSurplusQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="c72a935c3bdf49a46a2f68c7f844e212b99b3a9f" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.helpQuiesce()</source>
          <target state="translated">ForkJoinTask.helpQuiesce()</target>
        </trans-unit>
        <trans-unit id="25af2dc288d8d7258c4a924add3faa3c3363d09c" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.inForkJoinPool()</source>
          <target state="translated">ForkJoinTask.inForkJoinPool()</target>
        </trans-unit>
        <trans-unit id="4c8230bf67d85984c78649ebbdaa9022214ac726" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.invoke()</source>
          <target state="translated">ForkJoinTask.invoke()</target>
        </trans-unit>
        <trans-unit id="bb2578235be5a1d80b49286f382c02652722d1a6" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.invokeAll()</source>
          <target state="translated">ForkJoinTask.invokeAll()</target>
        </trans-unit>
        <trans-unit id="46c7234f20e7ff5558eecb6f85a763355ab3a356" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCancelled()</source>
          <target state="translated">ForkJoinTask.isCancelled()</target>
        </trans-unit>
        <trans-unit id="3c53578c67a3d5dc3fae2b6213adfeab5408052b" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCompletedAbnormally()</source>
          <target state="translated">ForkJoinTask.isCompletedAbnormally()</target>
        </trans-unit>
        <trans-unit id="64c6052d0b139df19ec14840b22cb668cfa8a699" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCompletedNormally()</source>
          <target state="translated">ForkJoinTask.isCompletedNormally()</target>
        </trans-unit>
        <trans-unit id="3cf941db3592a3bd14771662fa3711a9ae5520fe" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isDone()</source>
          <target state="translated">ForkJoinTask.isDone()</target>
        </trans-unit>
        <trans-unit id="a5eb02bf25628b76b9df59e667c00401866fc1e6" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.join()</source>
          <target state="translated">ForkJoinTask.join()</target>
        </trans-unit>
        <trans-unit id="f3e6da96efd8c2d0493ec1fccabe1253b7e0cacf" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.peekNextLocalTask()</source>
          <target state="translated">ForkJoinTask.peekNextLocalTask()</target>
        </trans-unit>
        <trans-unit id="6d79698b971753cda3eae311a5d1c9cf50528add" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.pollNextLocalTask()</source>
          <target state="translated">ForkJoinTask.pollNextLocalTask()</target>
        </trans-unit>
        <trans-unit id="d5b8dd9e0601a48a2a9413f5c28964b1c66fd4f9" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.pollTask()</source>
          <target state="translated">ForkJoinTask.pollTask()</target>
        </trans-unit>
        <trans-unit id="c9b9bd8d4d1df6a87ec42b885261aa46f726a561" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyComplete()</source>
          <target state="translated">ForkJoinTask.quietlyComplete()</target>
        </trans-unit>
        <trans-unit id="c8ffabdba5c635ce350bc64adca02711eaf8d512" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyInvoke()</source>
          <target state="translated">ForkJoinTask.quietlyInvoke()</target>
        </trans-unit>
        <trans-unit id="1e5d69359e294c620cfe630d7684c08767394fb7" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyJoin()</source>
          <target state="translated">ForkJoinTask.quietlyJoin()</target>
        </trans-unit>
        <trans-unit id="de0df6fd3f44a36068c6c8700906462505936195" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.reinitialize()</source>
          <target state="translated">ForkJoinTask.reinitialize()</target>
        </trans-unit>
        <trans-unit id="782d35350e2bb520475ccb484b619b4ff0dc3c87" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.setForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.setForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="157793f053a4ed6b66175aa00177f39b8c52fbe1" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.setRawResult()</source>
          <target state="translated">ForkJoinTask.setRawResult()</target>
        </trans-unit>
        <trans-unit id="14e13b4f0828cc7e9569f65c318e9bb4f7c7ee7d" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.tryUnfork()</source>
          <target state="translated">ForkJoinTask.tryUnfork()</target>
        </trans-unit>
        <trans-unit id="e33265d16d3575aaf320d5b191427cdfaa3266f6" translate="yes" xml:space="preserve">
          <source>ForkJoinTasks are &lt;code&gt;Serializable&lt;/code&gt;, which enables them to be used in extensions such as remote execution frameworks. It is sensible to serialize tasks only before or after, but not during, execution. Serialization is not relied on during execution itself.</source>
          <target state="translated">ForkJoinTasks是 &lt;code&gt;Serializable&lt;/code&gt; 的，这使它们可以在扩展中使用，例如远程执行框架。仅在执行之前或之后而不是执行期间序列化任务是明智的。执行本身不依赖序列化。</target>
        </trans-unit>
        <trans-unit id="bd5b71f4d9e3bb8d68310798b2e570d8ff14474a" translate="yes" xml:space="preserve">
          <source>ForkJoinTasks should perform relatively small amounts of computation. Large tasks should be split into smaller subtasks, usually via recursive decomposition. As a very rough rule of thumb, a task should perform more than 100 and less than 10000 basic computational steps, and should avoid indefinite looping. If tasks are too big, then parallelism cannot improve throughput. If too small, then memory and internal task maintenance overhead may overwhelm processing.</source>
          <target state="translated">ForkJoinTasks应该执行相对较小的计算量。大型任务应该被拆分成更小的子任务,通常通过递归分解。作为一个非常粗略的经验法则,一个任务应该执行超过100个且小于10000个基本计算步骤,并且应该避免无限循环。如果任务太大,那么并行就无法提高吞吐量。如果太小,那么内存和内部任务维护开销可能会使处理量不堪重负。</target>
        </trans-unit>
        <trans-unit id="1031cd9059d05e6af3dd9bce421a8a905ec7317b" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread</source>
          <target state="translated">ForkJoinWorkerThread</target>
        </trans-unit>
        <trans-unit id="edb483d1de1c698134ee111f9b84e356ae013c28" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.getPool()</source>
          <target state="translated">ForkJoinWorkerThread.getPool()</target>
        </trans-unit>
        <trans-unit id="007655f701cc69ac5304814368f7a4e9cf42a0a9" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.getPoolIndex()</source>
          <target state="translated">ForkJoinWorkerThread.getPoolIndex()</target>
        </trans-unit>
        <trans-unit id="c3220bb92b11d439b4fc2d6fd4c6baaff306dd9d" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.onStart()</source>
          <target state="translated">ForkJoinWorkerThread.onStart()</target>
        </trans-unit>
        <trans-unit id="f9bbb0eb86558f820cea5dd375880bfe1fe8952c" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.onTermination()</source>
          <target state="translated">ForkJoinWorkerThread.onTermination()</target>
        </trans-unit>
        <trans-unit id="0c2c89bcd318db6a40f6e343725881ec2dd59c52" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.run()</source>
          <target state="translated">ForkJoinWorkerThread.run()</target>
        </trans-unit>
        <trans-unit id="f56ea20d95bae68d52ee1e3ac06ab54ddc4cac3f" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown.</source>
          <target state="translated">分派指定集合中的所有任务，返回为每个任务保留 &lt;code&gt;isDone&lt;/code&gt; 的时间或遇到（未检查的）异常时，在这种情况下，该异常被重新抛出。</target>
        </trans-unit>
        <trans-unit id="e1bf7f04dc91d95646b89f43aa5927c7ad2482df" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">分派指定集合中的所有任务，返回为每个任务保留 &lt;code&gt;isDone&lt;/code&gt; 的时间或遇到（未检查的）异常时，在这种情况下，该异常被重新抛出。如果一个以上的任务遇到一个异常，则此方法将引发这些异常中的任何一个。如果任何任务遇到异常，则其他任务可能会被取消。但是，不能保证在异常返回时单个任务的执行状态。可以使用&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;和相关方法来获取每个任务的状态，以检查它们是否已被取消，正常或异常完成或未处理。</target>
        </trans-unit>
        <trans-unit id="07e592a3c48252cf7f9fcf1dc6663e80ef967130" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">分派指定集合中的所有任务，返回每个任务的 &lt;code&gt;isDone&lt;/code&gt; 保留时间或遇到（未检查的）异常时，在这种情况下，该异常将被重新抛出。如果一个以上的任务遇到一个异常，则此方法将引发这些异常中的任何一个。如果任何任务遇到异常，则其他任务可能会被取消。但是，无法保证在异常返回时单个任务的执行状态。可以使用&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;和相关方法来获取每个任务的状态，以检查它们是否已取消，正常或异常完成，或者未处理。</target>
        </trans-unit>
        <trans-unit id="8f4766b8846819a882dbe8026c24b5ed399b2cfc" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown.</source>
          <target state="translated">分派给定的任务，返回 &lt;code&gt;isDone&lt;/code&gt; 在每个任务中保持的时间，或者遇到（未检查的）异常，在这种情况下，该异常将被重新抛出。</target>
        </trans-unit>
        <trans-unit id="2290a44156b3b58593fa8c972feb4c3d0d3e2780" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">分派给定的任务，返回 &lt;code&gt;isDone&lt;/code&gt; 在每个任务中保持的时间，或者遇到（未检查的）异常，在这种情况下，该异常将被重新抛出。如果一个以上的任务遇到一个异常，则此方法将引发这些异常中的任何一个。如果任何任务遇到异常，则其他任务可能会被取消。但是，不能保证在异常返回时单个任务的执行状态。可以使用&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;和相关方法来获取每个任务的状态，以检查它们是否已被取消，正常或异常完成或未处理。</target>
        </trans-unit>
        <trans-unit id="04917135e1237009b50bf463b498a6bf21064d37" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">分派给定的任务，返回何时 &lt;code&gt;isDone&lt;/code&gt; 保留每个任务或遇到（未检查的）异常，在这种情况下，异常将被重新抛出。如果一个以上的任务遇到一个异常，则此方法将引发这些异常中的任何一个。如果任何任务遇到异常，则其他任务可能会被取消。但是，无法保证在异常返回时单个任务的执行状态。可以使用&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;和相关方法来获取每个任务的状态，以检查它们是否已取消，正常或异常完成，或者未处理。</target>
        </trans-unit>
        <trans-unit id="75ca61e1c6bb032b25e0459b71a078e13bd40c81" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, the other may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">分派给定的任务，返回 &lt;code&gt;isDone&lt;/code&gt; 在每个任务中保持的时间，或者遇到（未检查的）异常，在这种情况下，该异常将被重新抛出。如果一个以上的任务遇到一个异常，则此方法将引发这些异常中的任何一个。如果任何任务遇到异常，则其他任务可能会被取消。但是，不能保证在异常返回时单个任务的执行状态。可以使用&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;和相关方法来获取每个任务的状态，以检查它们是否已被取消，正常或异常完成或未处理。</target>
        </trans-unit>
        <trans-unit id="5381ba0db46417dd20ad2bece1549ce15b6b5747" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, the other may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">分派给定任务，返回 &lt;code&gt;isDone&lt;/code&gt; 对每个任务保持的时间，或者遇到（未检查的）异常，在这种情况下，异常被重新抛出。如果一个以上的任务遇到一个异常，则此方法将引发这些异常中的任何一个。如果任何任务遇到异常，则其他任务可能会被取消。但是，无法保证在异常返回时单个任务的执行状态。可以使用&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;和相关方法来获取每个任务的状态，以检查它们是否已取消，正常或异常完成，或者未处理。</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="b6599e900a80e606201260c58a85f8e2ace5c069" translate="yes" xml:space="preserve">
          <source>Form control or object name when submitted with a form.</source>
          <target state="translated">与表格一起提交时,表格控件或对象名称。</target>
        </trans-unit>
        <trans-unit id="f8c7c15ff5ddeb2f968880451afe8fec85073daf" translate="yes" xml:space="preserve">
          <source>Form control or object name when submitted with a form. See the name attribute definition in HTML 4.0.</source>
          <target state="translated">与表单一起提交时的表单控件或对象名称。参见HTML 4.0中的name属性定义。</target>
        </trans-unit>
        <trans-unit id="2c4f3b3e50f579bcd7cd4f5b9f98d212944a5e92" translate="yes" xml:space="preserve">
          <source>Form control.</source>
          <target state="translated">形式控制。</target>
        </trans-unit>
        <trans-unit id="49fbe067e62d9d1f99d11581553216776a353999" translate="yes" xml:space="preserve">
          <source>Form control. Note. Depending upon the environment in which the page is being viewed, the value property may be read-only for the file upload input type. For the &quot;password&quot; input type, the actual value returned may be masked to prevent unauthorized use. See the INPUT element definition in HTML 4.0.</source>
          <target state="translated">形式控制。注意:根据查看页面的环境,文件上传输入类型的值属性可能是只读的。根据查看页面的环境,对于文件上传输入类型,值属性可能是只读的。对于 &quot;密码 &quot;输入类型,实际返回的值可能会被屏蔽,以防止未经授权的使用。参见HTML 4.0中的INPUT元素定义。</target>
        </trans-unit>
        <trans-unit id="86ed21bf9ffb423b422c29d8a25008b83227239d" translate="yes" xml:space="preserve">
          <source>Form field label text.</source>
          <target state="translated">表格字段标签文本。</target>
        </trans-unit>
        <trans-unit id="86f3e3a3612b0943158133c984400a8f5cc0980e" translate="yes" xml:space="preserve">
          <source>Form field label text. See the LABEL element definition in HTML 4.0.</source>
          <target state="translated">表格字段的标签文本。参见HTML 4.0中的LABEL元素定义。</target>
        </trans-unit>
        <trans-unit id="f8da4c6326fb637b2f9272903fa59e8779424979" translate="yes" xml:space="preserve">
          <source>Form the list of return types (in clause order), omitting all occurrences of &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">形成返回类型列表（按子句顺序），并省略所有出现的 &lt;code&gt;void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58bc8d840f13f2aa6d5e8156e1fe4a711b1790a1" translate="yes" xml:space="preserve">
          <source>FormAction</source>
          <target state="translated">FormAction</target>
        </trans-unit>
        <trans-unit id="29a85675fe66fe8e6532f318420e4f1524cb9d4e" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent</source>
          <target state="translated">FormSubmitEvent</target>
        </trans-unit>
        <trans-unit id="6c0da694941094618e6e144d8c557f655973519c" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent is used to notify interested parties that a form was submitted.</source>
          <target state="translated">FormSubmitEvent用于通知相关方表单已经提交。</target>
        </trans-unit>
        <trans-unit id="d989329d84d432a6d2e3ade91d913cd3a1f3c3bc" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent.MethodType</source>
          <target state="translated">FormSubmitEvent.MethodType</target>
        </trans-unit>
        <trans-unit id="c34f993c9e5f06888785af71ab0173c412b97960" translate="yes" xml:space="preserve">
          <source>FormView</source>
          <target state="translated">FormView</target>
        </trans-unit>
        <trans-unit id="a9f27196158fedc001eb2410797af212b59869fa" translate="yes" xml:space="preserve">
          <source>FormView.MouseEventListener</source>
          <target state="translated">FormView.MouseEventListener</target>
        </trans-unit>
        <trans-unit id="c232e93c157d8ff6df15790349e5f218511859e4" translate="yes" xml:space="preserve">
          <source>Formal parameter declaration</source>
          <target state="translated">正式的参数声明</target>
        </trans-unit>
        <trans-unit id="b547394b3b9aa7e3fdb1acc6e742bf32f412025b" translate="yes" xml:space="preserve">
          <source>Formally the computation is defined as follows. First, we can assume that two &lt;code&gt;Duration&lt;/code&gt;s are both positive without losing generality. (i.e., &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt;, &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt;, &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt;)</source>
          <target state="translated">形式上，计算定义如下。首先，我们可以假设两个 &lt;code&gt;Duration&lt;/code&gt; 均为正数而不失一般性。（即 &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt; ， &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt; ， &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8168ab7b1148461cbeb5cb0070afdd613dac8dbd" translate="yes" xml:space="preserve">
          <source>Formally, the computation is defined as follows.</source>
          <target state="translated">形式上,计算定义如下:</target>
        </trans-unit>
        <trans-unit id="9a67d939d17da1c3e4bd65461e1391834195935d" translate="yes" xml:space="preserve">
          <source>Formally, the computation is done as follows:</source>
          <target state="translated">形式上,计算方法如下。</target>
        </trans-unit>
        <trans-unit id="ba429414c74079c2156fd97089b7aa008df8b44e" translate="yes" xml:space="preserve">
          <source>Formally, the following holds for any &lt;code&gt;Duration&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt; x:</source>
          <target state="translated">正式地，以下内容适用于任何 &lt;code&gt;Duration&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt; x：</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="e0e31adb6cc861ffe4700cf93625baf412604bf7" translate="yes" xml:space="preserve">
          <source>Format String Syntax</source>
          <target state="translated">格式 字符串 语法</target>
        </trans-unit>
        <trans-unit id="f531d541f5613113b7c853d36bf388cf8a0c233d" translate="yes" xml:space="preserve">
          <source>Format a LogRecord into a standard XML format.</source>
          <target state="translated">将日志记录格式化为标准的XML格式。</target>
        </trans-unit>
        <trans-unit id="04e6011f57b4d7c03296826caf852d4e6c1c8796" translate="yes" xml:space="preserve">
          <source>Format a long to produce a string.</source>
          <target state="translated">将一个长的格式化为一个字符串。</target>
        </trans-unit>
        <trans-unit id="ae2ffe5a7a236541d8dd38a2b35d11b8ed237835" translate="yes" xml:space="preserve">
          <source>Format and publish a &lt;code&gt;LogRecord&lt;/code&gt;.</source>
          <target state="translated">格式化并发布 &lt;code&gt;LogRecord&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40fe786e1cb4c2e3fc346b6346949102b40ff14b" translate="yes" xml:space="preserve">
          <source>Format identifier. O means the OSI CCR format.</source>
          <target state="translated">格式标识符。O表示OSI CCR格式。</target>
        </trans-unit>
        <trans-unit id="78f46621d9683df48e3daa89a9237afa18bbe597" translate="yes" xml:space="preserve">
          <source>Format instance used for converting from/to Strings</source>
          <target state="translated">用于从/到字符串转换的格式实例。</target>
        </trans-unit>
        <trans-unit id="9e613d3ff5aba0492bf29fcc59a7b0e5f6759964" translate="yes" xml:space="preserve">
          <source>Format specifiers can reference arguments in three ways:</source>
          <target state="translated">格式指定器可以通过三种方式引用参数。</target>
        </trans-unit>
        <trans-unit id="71e82333b671f19dfc603692509556dcfffc70d1" translate="yes" xml:space="preserve">
          <source>Format the &lt;code&gt;BigDecimal&lt;/code&gt; as a decimal number.</source>
          <target state="translated">将 &lt;code&gt;BigDecimal&lt;/code&gt; 格式化为十进制数字。</target>
        </trans-unit>
        <trans-unit id="7076f5049495f161d64978e61538fda9e34ca46e" translate="yes" xml:space="preserve">
          <source>Format the &lt;code&gt;BigDecimal&lt;/code&gt; in computerized scientific notation.</source>
          <target state="translated">用计算机科学计数法格式化 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8926957abccd383147f72e6cc92305b1a9cb0fab" translate="yes" xml:space="preserve">
          <source>Format the given LogRecord.</source>
          <target state="translated">对给定的LogRecord进行格式化。</target>
        </trans-unit>
        <trans-unit id="c75529fcb251f3b2ccfd0d825d210ae6f152b712" translate="yes" xml:space="preserve">
          <source>Format the given log record and return the formatted string.</source>
          <target state="translated">对给定的日志记录进行格式化,并返回格式化后的字符串。</target>
        </trans-unit>
        <trans-unit id="664761aede593637664129c3039e828e577b1efa" translate="yes" xml:space="preserve">
          <source>Format the given message to XML.</source>
          <target state="translated">将给定的信息格式化为XML。</target>
        </trans-unit>
        <trans-unit id="568d6e3238de37c4ce635fc088441f7e5b62a0cd" translate="yes" xml:space="preserve">
          <source>Format.Field</source>
          <target state="translated">Format.Field</target>
        </trans-unit>
        <trans-unit id="17b45075ee0434d1d3bcaea22c022ed6d6419499" translate="yes" xml:space="preserve">
          <source>Format.Field constants associated with the text at the given position.</source>
          <target state="translated">Format.Field 常量与给定位置的文本相关联。</target>
        </trans-unit>
        <trans-unit id="0a4d1139c52c45a3084446e69c46f83d34a51f0c" translate="yes" xml:space="preserve">
          <source>Format.clone()</source>
          <target state="translated">Format.clone()</target>
        </trans-unit>
        <trans-unit id="0df50e364976426751d2bcf69343ab4001064807" translate="yes" xml:space="preserve">
          <source>Format.format()</source>
          <target state="translated">Format.format()</target>
        </trans-unit>
        <trans-unit id="0ced8f81caf0da4ac0dfc0eba834286734d88d3f" translate="yes" xml:space="preserve">
          <source>Format.formatToCharacterIterator()</source>
          <target state="translated">Format.formatToCharacterIterator()</target>
        </trans-unit>
        <trans-unit id="3e467ba00a6a3b8abc3bd44c809e3d589436b4d1" translate="yes" xml:space="preserve">
          <source>Format.parseObject()</source>
          <target state="translated">Format.parseObject()</target>
        </trans-unit>
        <trans-unit id="dcdcdb1e1335fbf3b14ef4fce03347d948ed4048" translate="yes" xml:space="preserve">
          <source>Format: &quot;RAW&quot;</source>
          <target state="translated">格式:&quot;RAW&quot;</target>
        </trans-unit>
        <trans-unit id="9df120b5cbab90d63a2d0715c4be0010f9933f1d" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider</source>
          <target state="translated">FormatConversionProvider</target>
        </trans-unit>
        <trans-unit id="9b0236c42f4b1c55f31dc51c6b16246f0024b98f" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getAudioInputStream()</source>
          <target state="translated">FormatConversionProvider.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="bcda1d0483ec19f835f2069ed89711071d6a6159" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getSourceEncodings()</source>
          <target state="translated">FormatConversionProvider.getSourceEncodings()</target>
        </trans-unit>
        <trans-unit id="66eaee8c30598e5d40566ae6742f7cebe650d5a0" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getTargetEncodings()</source>
          <target state="translated">FormatConversionProvider.getTargetEncodings()</target>
        </trans-unit>
        <trans-unit id="6c2cf875bc1836ab1258a6f0f8d189cfd43155e0" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getTargetFormats()</source>
          <target state="translated">FormatConversionProvider.getTargetFormats()</target>
        </trans-unit>
        <trans-unit id="11a5d55a4cbc0b2be37622296b521a52db1d0825" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isConversionSupported()</source>
          <target state="translated">FormatConversionProvider.isConversionSupported()</target>
        </trans-unit>
        <trans-unit id="131c566041bead3406f2d986da597583b8ec36d9" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isSourceEncodingSupported()</source>
          <target state="translated">FormatConversionProvider.isSourceEncodingSupported()</target>
        </trans-unit>
        <trans-unit id="4f9999fe896487bae407fc43e5c49bbbe4879efd" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isTargetEncodingSupported()</source>
          <target state="translated">FormatConversionProvider.isTargetEncodingSupported()</target>
        </trans-unit>
        <trans-unit id="db383ed0e067b8f757f7b98b368d2afe5c7313d9" translate="yes" xml:space="preserve">
          <source>FormatElement</source>
          <target state="translated">FormatElement</target>
        </trans-unit>
        <trans-unit id="412dca0cbf64716453dbf40f4f38618282c9db98" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException</source>
          <target state="translated">FormatFlagsConversionMismatchException</target>
        </trans-unit>
        <trans-unit id="1c066917f62e00249cbf26f067524db353a8e820" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getConversion()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getConversion()</target>
        </trans-unit>
        <trans-unit id="15da17fbdd9c43b5956dad3cae4b34ed59242a4e" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getFlags()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getFlags()</target>
        </trans-unit>
        <trans-unit id="19963e30c388216c737deca1e7a2454088da9869" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getMessage()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getMessage()</target>
        </trans-unit>
        <trans-unit id="1a635b1e375ae58994f98e2dafdb962dda0f1247" translate="yes" xml:space="preserve">
          <source>FormatStyle</source>
          <target state="translated">FormatStyle</target>
        </trans-unit>
        <trans-unit id="21fe696c76bc40f63a4659f3f62bdde305c3f921" translate="yes" xml:space="preserve">
          <source>FormatStyle.valueOf()</source>
          <target state="translated">FormatStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="3193a241219c0156048d278b1c6c46750899a195" translate="yes" xml:space="preserve">
          <source>FormatStyle.values()</source>
          <target state="translated">FormatStyle.values()</target>
        </trans-unit>
        <trans-unit id="a577d37f0089a3ba893412a7be689f31f9997051" translate="yes" xml:space="preserve">
          <source>FormatType</source>
          <target state="translated">FormatType</target>
        </trans-unit>
        <trans-unit id="4d564dfb2534b5a8fabedc87954bce9e0f66c438" translate="yes" xml:space="preserve">
          <source>Formats a &lt;a href=&quot;../util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; into a date-time string.</source>
          <target state="translated">将&lt;a href=&quot;../util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;格式化为日期时间字符串。</target>
        </trans-unit>
        <trans-unit id="5b4f5f799cb36ddff2082d5b48b5b543f6d03c75" translate="yes" xml:space="preserve">
          <source>Formats a &lt;a href=&quot;../util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; into a date-time string. The formatted string is appended to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">将&lt;a href=&quot;../util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;格式化为日期时间字符串。格式化的字符串将附加到给定的 &lt;code&gt;StringBuffer&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="07073d6e0f6c54cdcb241bb922b045b2fd8d9e05" translate="yes" xml:space="preserve">
          <source>Formats a Date into a date/time string.</source>
          <target state="translated">将Date格式化为日期/时间字符串。</target>
        </trans-unit>
        <trans-unit id="d895c48c811c4a15b835a302b66aae80bd7bfb83" translate="yes" xml:space="preserve">
          <source>Formats a date in the date escape format yyyy-mm-dd.</source>
          <target state="translated">以日期转义格式yyyy-mm-dd来格式化日期。</target>
        </trans-unit>
        <trans-unit id="54f8fd862c2a92d11dcde61cfc7f6d8e793d879d" translate="yes" xml:space="preserve">
          <source>Formats a date-time object to an &lt;code&gt;Appendable&lt;/code&gt; using this formatter.</source>
          <target state="translated">使用此格式化程序将日期时间对象格式化为 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9be1bf7a7f7e377cf813b5f734ac2e3d2a2aa436" translate="yes" xml:space="preserve">
          <source>Formats a date-time object using this formatter.</source>
          <target state="translated">使用此格式化器格式化一个日期-时间对象。</target>
        </trans-unit>
        <trans-unit id="2ea4b02a698ffd70e20c0bc95795dda05c4da5b5" translate="yes" xml:space="preserve">
          <source>Formats a double to produce a string representing its compact form.</source>
          <target state="translated">对一个双数进行格式化,生成一个代表其紧凑形式的字符串。</target>
        </trans-unit>
        <trans-unit id="0bf02beedd6f1bce58518eddc5808fefdade7b69" translate="yes" xml:space="preserve">
          <source>Formats a double to produce a string.</source>
          <target state="translated">将一个双数格式化为一个字符串。</target>
        </trans-unit>
        <trans-unit id="2aaf6b450fc4ef07da6fda4aa4d75590adf1828c" translate="yes" xml:space="preserve">
          <source>Formats a long to produce a string representing its compact form.</source>
          <target state="translated">对一个长进行格式化,生成一个代表其紧凑形式的字符串。</target>
        </trans-unit>
        <trans-unit id="112e331e98d840c220f1dc8f00487d91925c3d95" translate="yes" xml:space="preserve">
          <source>Formats a number and appends the resulting text to the given string buffer.</source>
          <target state="translated">对数字进行格式化,并将产生的文本附加到给定的字符串缓冲区。</target>
        </trans-unit>
        <trans-unit id="d04e67cc414adf66ebecc3ce08b87154e076b882" translate="yes" xml:space="preserve">
          <source>Formats a number and appends the resulting text to the given string buffer. The number can be of any subclass of &lt;a href=&quot;../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">格式化数字并将结果文本附加到给定的字符串缓冲区。该数字可以是&lt;a href=&quot;../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;的任何子类。</target>
        </trans-unit>
        <trans-unit id="6af93d8ac8831bbfcefd34453745cbe5dee11e8c" translate="yes" xml:space="preserve">
          <source>Formats a number to produce a string representing its compact form.</source>
          <target state="translated">对一个数字进行格式化,生成一个代表其紧凑形式的字符串。</target>
        </trans-unit>
        <trans-unit id="731ebfb98425d98ec93d25e054510745ff003307" translate="yes" xml:space="preserve">
          <source>Formats a number to produce a string representing its compact form. The number can be of any subclass of &lt;a href=&quot;../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">格式化数字以产生表示其紧凑形式的字符串。该数字可以是&lt;a href=&quot;../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;的任何子类。</target>
        </trans-unit>
        <trans-unit id="4c38a6c1e349504e7c81867767dd8fa321e52f5d" translate="yes" xml:space="preserve">
          <source>Formats a time in JDBC time escape format.</source>
          <target state="translated">以JDBC时间转义格式格式化时间。</target>
        </trans-unit>
        <trans-unit id="a635ecde511422bb0806f2d67e35eb5cd42f3049" translate="yes" xml:space="preserve">
          <source>Formats a timestamp in JDBC timestamp escape format.</source>
          <target state="translated">以JDBC时间戳转义格式格式化一个时间戳。</target>
        </trans-unit>
        <trans-unit id="54a0aaa2ae5f803534da575b822ef04706be6745" translate="yes" xml:space="preserve">
          <source>Formats a timestamp in JDBC timestamp escape format. &lt;code&gt;yyyy-mm-dd hh:mm:ss.fffffffff&lt;/code&gt;, where &lt;code&gt;fffffffff&lt;/code&gt; indicates nanoseconds.</source>
          <target state="translated">以JDBC时间戳转义格式格式化时间戳。 &lt;code&gt;yyyy-mm-dd hh:mm:ss.fffffffff&lt;/code&gt; ，其中 &lt;code&gt;fffffffff&lt;/code&gt; 表示纳秒。</target>
        </trans-unit>
        <trans-unit id="724afb2150bad053f43b86fef598f4a48739a4e6" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">格式化对象，生成 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0665c20061fe5f4b47c2dff46ad0383201d84aa3" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. The returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; can be used to build the resulting string, as well as to determine information about the resulting string.</source>
          <target state="translated">格式化对象，生成 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 。返回的 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 可以用于生成结果字符串，以及确定有关结果字符串的信息。</target>
        </trans-unit>
        <trans-unit id="7869ed7c2765ecd200324b00ea3d1d924e8762e0" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. You can use the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; to build the resulting String, as well as to determine information about the resulting String.</source>
          <target state="translated">格式化对象，生成 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 。您可以使用返回的 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 生成结果字符串，以及确定有关结果字符串的信息。</target>
        </trans-unit>
        <trans-unit id="935d245fe455147d9c757e999ebd8388d0b692bf" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and appends the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, with format elements replaced by the formatted objects, to the provided &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">格式化对象数组，并将 &lt;code&gt;MessageFormat&lt;/code&gt; 的模式（用格式化的对象替换格式元素）附加到提供的 &lt;code&gt;StringBuffer&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="7c03c37cf08dd4617eecfb4b80423fbece656cbd" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and appends the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, with format elements replaced by the formatted objects, to the provided &lt;code&gt;StringBuffer&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">格式化对象数组，并将 &lt;code&gt;MessageFormat&lt;/code&gt; 的模式（用格式化的对象替换格式元素）附加到提供的 &lt;code&gt;StringBuffer&lt;/code&gt; 中。这相当于</target>
        </trans-unit>
        <trans-unit id="dc17b532fb50dda274c6bd3b042cf1935b3b091d" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and inserts them into the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">格式化对象数组并将其插入 &lt;code&gt;MessageFormat&lt;/code&gt; 的模式，从而生成 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21297b414ce0029faaca682aeb10c15afb91174c" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and inserts them into the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. You can use the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; to build the resulting String, as well as to determine information about the resulting String.</source>
          <target state="translated">格式化对象数组并将其插入 &lt;code&gt;MessageFormat&lt;/code&gt; 的模式，从而生成 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 。您可以使用返回的 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 生成结果字符串，以及确定有关结果字符串的信息。</target>
        </trans-unit>
        <trans-unit id="9cea71f618fb3ffb49644be00236b83d57f0606f" translate="yes" xml:space="preserve">
          <source>Formats an object and appends the resulting text to a given string buffer.</source>
          <target state="translated">对对象进行格式化,并将产生的文本附加到给定的字符串缓冲区。</target>
        </trans-unit>
        <trans-unit id="1a22d7749925a09720265c0ac9d11263b68df807" translate="yes" xml:space="preserve">
          <source>Formats an object and appends the resulting text to a given string buffer. If the &lt;code&gt;pos&lt;/code&gt; argument identifies a field used by the format, then its indices are set to the beginning and end of the first such field encountered.</source>
          <target state="translated">格式化对象并将结果文本附加到给定的字符串缓冲区。如果 &lt;code&gt;pos&lt;/code&gt; 参数标识格式使用的字段，则将其索引设置为遇到的第一个此类字段的开头和结尾。</target>
        </trans-unit>
        <trans-unit id="37ed6a3230e4949ccf7355a51282ad42ea2737e5" translate="yes" xml:space="preserve">
          <source>Formats an object to produce a string.</source>
          <target state="translated">对对象进行格式化,生成一个字符串。</target>
        </trans-unit>
        <trans-unit id="3a28e2667660d3aa12cbe5d58992c3eadbf6aa76" translate="yes" xml:space="preserve">
          <source>Formats an object to produce a string. This is equivalent to</source>
          <target state="translated">对对象进行格式化,生成一个字符串。这相当于</target>
        </trans-unit>
        <trans-unit id="7c0a5adf713797b1e88d1ed1b05fb283e5fc9075" translate="yes" xml:space="preserve">
          <source>Formats are generally not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.</source>
          <target state="translated">格式一般不会同步。建议为每个线程创建单独的格式实例。如果多个线程同时访问一个格式,必须在外部同步。</target>
        </trans-unit>
        <trans-unit id="aefb58f1cc1cb3eb81f84a3c57abd7926f4f2238" translate="yes" xml:space="preserve">
          <source>Formats such as &quot;raw,&quot; which can potentially attempt to read nearly any stream, should return &lt;code&gt;false&lt;/code&gt; in order to avoid being invoked in preference to a closer match.</source>
          <target state="translated">诸如&amp;ldquo; raw&amp;rdquo;之类的格式（可能会尝试读取几乎所有流）应返回 &lt;code&gt;false&lt;/code&gt; ，以避免优先于更接近的匹配而被调用。</target>
        </trans-unit>
        <trans-unit id="312a5f525f8b10dfb4ad63090301d64356edce01" translate="yes" xml:space="preserve">
          <source>Formats the argument as a Unicode character as described in &lt;a href=&quot;../lang/character#unicode&quot;&gt;Unicode Character Representation&lt;/a&gt;. This may be more than one 16-bit &lt;code&gt;char&lt;/code&gt; in the case where the argument represents a supplementary character.</source>
          <target state="translated">如在描述的格式的参数作为Unicode字符&lt;a href=&quot;../lang/character#unicode&quot;&gt;的Unicode字符表示&lt;/a&gt;。在参数表示一个补充字符的情况下，它可以是多个16位 &lt;code&gt;char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0570fb471e9afbb2f306caffe87460c9188dcc29" translate="yes" xml:space="preserve">
          <source>Formats the argument as a decimal integer. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="translated">将参数格式化为十进制整数。在&lt;a href=&quot;#L10nAlgorithm&quot;&gt;定位算法&lt;/a&gt;被应用。</target>
        </trans-unit>
        <trans-unit id="3cfff0fa6dbf122d692c0742ddcf6c5629c7b0cb" translate="yes" xml:space="preserve">
          <source>Formats the argument as an integer in base eight. No localization is applied.</source>
          <target state="translated">将参数格式化为基数为8的整数。不应用本地化。</target>
        </trans-unit>
        <trans-unit id="abdda238fb46a84a701714dfa86485fddeb68760" translate="yes" xml:space="preserve">
          <source>Formats the argument as an integer in base sixteen. No localization is applied.</source>
          <target state="translated">将参数格式化为十六进制的整数。不应用本地化。</target>
        </trans-unit>
        <trans-unit id="55eeadb3f1c2dfee435c57ecf4db62a0d6032358" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Date&lt;/code&gt; into a date/time string and appends the result to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">将给定的 &lt;code&gt;Date&lt;/code&gt; 格式化为日期/时间字符串，并将结果附加到给定的 &lt;code&gt;StringBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a19ac0f7123a01bbaed07c557a97d49e3cd0ec52" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Object&lt;/code&gt; into a date-time string.</source>
          <target state="translated">将给定的 &lt;code&gt;Object&lt;/code&gt; 格式化为日期时间字符串。</target>
        </trans-unit>
        <trans-unit id="b5163d7a45c0deabefaa7eb426556c9ad41dbb0b" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Object&lt;/code&gt; into a date-time string. The formatted string is appended to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">将给定的 &lt;code&gt;Object&lt;/code&gt; 格式化为日期时间字符串。格式化的字符串将附加到给定的 &lt;code&gt;StringBuffer&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="74e028adfd5ea9f1e03ddc3e4aaec41d58efd862" translate="yes" xml:space="preserve">
          <source>Formats the object using the provided &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用提供的&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;formatter&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="7d5d90b0b4d12a460062ea991f8fdf7f7e42e5f2" translate="yes" xml:space="preserve">
          <source>Formats this date using the specified formatter.</source>
          <target state="translated">使用指定的格式化器格式化此日期。</target>
        </trans-unit>
        <trans-unit id="21460715a9e761e72bd9b1e44f4ae8f543367854" translate="yes" xml:space="preserve">
          <source>Formats this date-time using the specified formatter.</source>
          <target state="translated">使用指定的格式化器格式化此日期-时间。</target>
        </trans-unit>
        <trans-unit id="50891c12b61aa2bbc0baa1a9008a341a319ab97b" translate="yes" xml:space="preserve">
          <source>Formats this month-day using the specified formatter.</source>
          <target state="translated">使用指定的格式化器格式化这个月日。</target>
        </trans-unit>
        <trans-unit id="b33863404be77fa78615877db0a295721489855e" translate="yes" xml:space="preserve">
          <source>Formats this time using the specified formatter.</source>
          <target state="translated">这次使用指定的格式器进行格式化。</target>
        </trans-unit>
        <trans-unit id="d8f653b32726183250759a52c2cf358e88df1902" translate="yes" xml:space="preserve">
          <source>Formats this year using the specified formatter.</source>
          <target state="translated">今年使用指定的格式器进行格式化。</target>
        </trans-unit>
        <trans-unit id="f5dfa57ee3604286edab15ae77ed93a4c94f2f22" translate="yes" xml:space="preserve">
          <source>Formats this year-month using the specified formatter.</source>
          <target state="translated">使用指定的格式化器对该年月进行格式化。</target>
        </trans-unit>
        <trans-unit id="ee72b0a2802a4004e2ed8dfbd23e7d0bf17e9e7f" translate="yes" xml:space="preserve">
          <source>Formats using this string as the format string, and the supplied arguments.</source>
          <target state="translated">使用此字符串作为格式字符串和提供的参数进行格式化。</target>
        </trans-unit>
        <trans-unit id="4f7c7364f655788e4b3118b68f3797a1b9213c05" translate="yes" xml:space="preserve">
          <source>Formattable</source>
          <target state="translated">Formattable</target>
        </trans-unit>
        <trans-unit id="24a5daf1c05412467919e0ab706235f8a90fecdc" translate="yes" xml:space="preserve">
          <source>Formattable.formatTo()</source>
          <target state="translated">Formattable.formatTo()</target>
        </trans-unit>
        <trans-unit id="cfa6c7a48792619cf5ad6d7179a2420ac429949a" translate="yes" xml:space="preserve">
          <source>FormattableFlags</source>
          <target state="translated">FormattableFlags</target>
        </trans-unit>
        <trans-unit id="1647870bbfd4c4e7eb98722f1f2217f1c51503b6" translate="yes" xml:space="preserve">
          <source>FormattableFlags are passed to the &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;.</source>
          <target state="translated">FormattableFlags传递给&lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;方法，并修改&lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;的输出格式。</target>
        </trans-unit>
        <trans-unit id="2e10af3c2869f4474eab6514b4e12aada331a46d" translate="yes" xml:space="preserve">
          <source>FormattableFlags are passed to the &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;. Implementations of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; are responsible for interpreting and validating any flags.</source>
          <target state="translated">FormattableFlags传递给&lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;方法，并修改&lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;的输出格式。&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; 的&lt;/a&gt;实现负责解释和验证任何标志。</target>
        </trans-unit>
        <trans-unit id="787f0634c99e31e8d07616a8164a5dd380caba61" translate="yes" xml:space="preserve">
          <source>Formattables are not necessarily safe for multithreaded access. Thread safety is optional and may be enforced by classes that extend and implement this interface.</source>
          <target state="translated">Formattables对于多线程访问不一定安全。线程安全是可选的,可以由扩展和实现这个接口的类来执行。</target>
        </trans-unit>
        <trans-unit id="032e219ce652424b62e2f5cbcae7876f52a41343" translate="yes" xml:space="preserve">
          <source>Formatted Text</source>
          <target state="translated">格式化文本</target>
        </trans-unit>
        <trans-unit id="186bfa811d3c12e2d6d2a163cd1d14fa1220da87" translate="yes" xml:space="preserve">
          <source>Formatted printing for the Java language is heavily inspired by C's &lt;code&gt;printf&lt;/code&gt;. Although the format strings are similar to C, some customizations have been made to accommodate the Java language and exploit some of its features. Also, Java formatting is more strict than C's; for example, if a conversion is incompatible with a flag, an exception will be thrown. In C inapplicable flags are silently ignored. The format strings are thus intended to be recognizable to C programmers but not necessarily completely compatible with those in C.</source>
          <target state="translated">Java语言的格式化打印在很大程度上受C的 &lt;code&gt;printf&lt;/code&gt; 启发。尽管格式字符串类似于C，但是已经进行了一些自定义以适应Java语言并利用其某些功能。而且，Java格式比C格式更严格。例如，如果转换与标志不兼容，则将引发异常。在C语言中，不适用的标志将被静默忽略。因此，格式字符串旨在为C程序员所识别，但不一定与C语言完全兼容。</target>
        </trans-unit>
        <trans-unit id="224a21b58aa618be5c77da4364e1d8dc9574f3e2" translate="yes" xml:space="preserve">
          <source>Formatted string.</source>
          <target state="translated">格式化的字符串。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
