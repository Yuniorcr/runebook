<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cacba501db40175a13ef41b80f586a906ebcc5f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; methods to return PseudoColumns and if a generated key is always returned</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; 方法返回PseudoColumns，以及是否始终返回生成的键</target>
        </trans-unit>
        <trans-unit id="aa32dfe10e8a610bc08ac344c2fad5ce58a2f68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; methods to return maximum Logical LOB size and if Ref Cursors are supported</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; 方法可返回最大逻辑LOB大小以及是否支持引用游标</target>
        </trans-unit>
        <trans-unit id="50a1a5b584a01d2242b7dbee0459dde430cac23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Date&lt;/code&gt; class -- mapping for SQL &lt;code&gt;DATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 类-SQL &lt;code&gt;DATE&lt;/code&gt; 的映射</target>
        </trans-unit>
        <trans-unit id="f1784f171a73635ccdb68cb9354974f2e943ea23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; helps you to format and parse dates for any locale. Your code can be completely independent of the locale conventions for months, days of the week, or even the calendar format: lunar vs. solar.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 可帮助您格式化和解析任何语言环境的日期。您的代码可以完全独立于几个月，一周中的几天甚至是日历格式的区域设置惯例：农历与太阳。</target>
        </trans-unit>
        <trans-unit id="9f50521d542dee5c5af6d8ea854e3ca1bd6ff74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 是日期/时间格式化子类的抽象类，该子类以与语言无关的方式格式化和解析日期或时间。</target>
        </trans-unit>
        <trans-unit id="29f62771fd780387e1c2a9b447d2c5473efac054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner. The date/time formatting subclass, such as &lt;a href=&quot;simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;, allows for formatting (i.e., date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization. The date is represented as a &lt;code&gt;Date&lt;/code&gt; object or as the milliseconds since January 1, 1970, 00:00:00 GMT.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 是日期/时间格式化子类的抽象类，该子类以与语言无关的方式格式化和解析日期或时间。日期/时间格式子类（例如&lt;a href=&quot;simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; &lt;/a&gt;）允许进行格式设置（例如，日期&amp;rarr;文本），解析（文本&amp;rarr;日期）和规范化。日期用 &lt;code&gt;Date&lt;/code&gt; 对象或自格林尼治标准时间1970年1月1日00:00:00以来的毫秒数表示。</target>
        </trans-unit>
        <trans-unit id="db10af39b813a7b46842289dc7d504656eca81b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; provides many class methods for obtaining default date/time formatters based on the default or a given locale and a number of formatting styles. The formatting styles include &lt;a href=&quot;#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt;. More detail and examples of using these styles are provided in the method descriptions.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 提供了许多类方法，用于根据默认或给定的语言环境以及多种格式样式来获取默认的日期/时间格式化程序。格式样式包括&lt;a href=&quot;#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt;。方法说明中提供了使用这些样式的更多详细信息和示例。</target>
        </trans-unit>
        <trans-unit id="5b035c794cb89fd3270eb68d8bbd9da71d5ac1e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; provides many class methods for obtaining default date/time formatters based on the default or a given locale and a number of formatting styles. The formatting styles include &lt;a href=&quot;dateformat#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dateformat#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dateformat#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dateformat#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt;. More detail and examples of using these styles are provided in the method descriptions.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; 提供了许多类方法，用于根据默认或给定的语言环境以及多种格式样式来获取默认的日期/时间格式化程序。格式样式包括&lt;a href=&quot;dateformat#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;dateformat#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;dateformat#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;dateformat#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt;。方法说明中提供了使用这些样式的更多详细信息和示例。</target>
        </trans-unit>
        <trans-unit id="7102570a3872fc2eccd96900b02ead6fa6e5467b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; 是一个公共类，用于封装可本地化的日期时间格式数据，例如月份名称，星期几名称和时区数据。</target>
        </trans-unit>
        <trans-unit id="f17c3accd23ff6eb64c0dd51be77e36f0a89b198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data. &lt;code&gt;SimpleDateFormat&lt;/code&gt; uses &lt;code&gt;DateFormatSymbols&lt;/code&gt; to encapsulate this information.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; 是一个公共类，用于封装可本地化的日期时间格式数据，例如月份名称，星期几名称和时区数据。 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 使用 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 封装此信息。</target>
        </trans-unit>
        <trans-unit id="b931b83548968bc9b09b5a12dc104ee6f1e36cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; objects are cloneable. When you obtain a &lt;code&gt;DateFormatSymbols&lt;/code&gt; object, feel free to modify the date-time formatting data. For instance, you can replace the localized date-time format pattern characters with the ones that you feel easy to remember. Or you can change the representative cities to your favorite ones.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; 对象是可克隆的。当获取 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 对象时，可以随时修改日期时间格式数据。例如，您可以将本地化的日期时间格式模式字符替换为您容易记住的字符。或者，您可以将代表城市更改为您喜欢的城市。</target>
        </trans-unit>
        <trans-unit id="ba14072c622b98365c8f93d49048f23cac5387bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; is an enum representing the 7 days of the week - Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 是一个枚举，代表一周中的7天-星期一，星期二，星期三，星期四，星期五，星期六和星期日。</target>
        </trans-unit>
        <trans-unit id="7aa33573e5e4c4ee84673e9a302c8f8b44547021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; is an enum representing the 7 days of the week. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday).</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 是代表一周中7天的枚举。该工厂允许从 &lt;code&gt;int&lt;/code&gt; 值获取枚举。的 &lt;code&gt;int&lt;/code&gt; 值遵循ISO-8601标准，从1（星期一）至7（星期日）。</target>
        </trans-unit>
        <trans-unit id="4dd1311030562ce950b326d49e5d1cbf37181043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 返回 &lt;code&gt;DAYS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c91c3a0022f19f52c352b7d692a4c1367bc2738b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="312f426d7d11f3683c933095b436500109d070f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns null (shared across chronologies)</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; 返回null（按时间顺序共享）</target>
        </trans-unit>
        <trans-unit id="36f3ee3ea939b71acf1555d4ffe33a177f2bf4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; is a concrete subclass of &lt;code&gt;NumberFormat&lt;/code&gt; that formats decimal numbers.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 是 &lt;code&gt;NumberFormat&lt;/code&gt; 的一个具体子类，用于格式化十进制数字。</target>
        </trans-unit>
        <trans-unit id="1e06e90b92f127303652caaf26a73456f99be709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; is a concrete subclass of &lt;code&gt;NumberFormat&lt;/code&gt; that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, and Indic digits. It also supports different kinds of numbers, including integers (123), fixed-point numbers (123.4), scientific notation (1.23E4), percentages (12%), and currency amounts ($123). All of these can be localized.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 是 &lt;code&gt;NumberFormat&lt;/code&gt; 的一个具体子类，用于格式化十进制数字。它具有多种功能，旨在使可以在任何语言环境中解析和格式化数字，包括对西方，阿拉伯和印度数字的支持。它还支持各种数字，包括整数（123），定点数字（123.4），科学计数法（1.23E4），百分比（12％）和货币金额（$ 123）。所有这些都可以本地化。</target>
        </trans-unit>
        <trans-unit id="296ebefaa86f8a8a1d922cd3d2a1418a021465d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; parses all Unicode characters that represent decimal digits, as defined by &lt;code&gt;Character.digit()&lt;/code&gt;. In addition, &lt;code&gt;DecimalFormat&lt;/code&gt; also recognizes as digits the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 解析所有由 &lt;code&gt;Character.digit()&lt;/code&gt; 定义的代表十进制数字的Unicode字符。此外， &lt;code&gt;DecimalFormat&lt;/code&gt; 还将从 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 对象中定义的本地化零数字开始，将十个连续字符识别为数字。</target>
        </trans-unit>
        <trans-unit id="73481d290bc9a0bc3a623a91a94f73d95954c437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; patterns have the following syntax:</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 模式具有以下语法：</target>
        </trans-unit>
        <trans-unit id="48bbd87a3a8178de393d41e1f9a4dc20ff90f13c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; provides rounding modes defined in &lt;a href=&quot;../math/roundingmode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; for formatting. By default, it uses &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; 提供在&lt;a href=&quot;../math/roundingmode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; 中&lt;/a&gt;定义的舍入模式以进行格式化。默认情况下，它使用&lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eaa7ef50faa5ba6a7437543f357f52489ac278f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DeclarationSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;DeclarationSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="8e1b6f07144283290279351996fc7e9520525743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Default&lt;/code&gt; - a default value.</source>
          <target state="translated">&lt;code&gt;Default&lt;/code&gt; -默认值。</target>
        </trans-unit>
        <trans-unit id="74881dff9189c4c783328b65bea467f4ead78f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Default&lt;/code&gt; - the default value.</source>
          <target state="translated">&lt;code&gt;Default&lt;/code&gt; -默认值。</target>
        </trans-unit>
        <trans-unit id="013ad656021a30c0fcc5b39c3840413a1b4d25f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultFormatter&lt;/code&gt; formats arbitrary objects.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; 格式化任意对象。</target>
        </trans-unit>
        <trans-unit id="b1a3c706ae4fdaf19fc797fbdf54f6ee28ed6e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultFormatter&lt;/code&gt; formats arbitrary objects. Formatting is done by invoking the &lt;code&gt;toString&lt;/code&gt; method. In order to convert the value back to a String, your class must provide a constructor that takes a String argument. If no single argument constructor that takes a String is found, the returned value will be the String passed into &lt;code&gt;stringToValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; 格式化任意对象。格式化是通过调用 &lt;code&gt;toString&lt;/code&gt; 方法完成的。为了将值转换回String，您的类必须提供采用String参数的构造函数。如果未找到采用String的单个参数构造函数，则返回的值将是传递给 &lt;code&gt;stringToValue&lt;/code&gt; 的String 。</target>
        </trans-unit>
        <trans-unit id="b63bdff99c08cc0803b28dfa4c7ee1ec923132ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultMetalTheme&lt;/code&gt; uses bold fonts for many controls. To make all controls (with the exception of the internal frame title bars and client decorated frame title bars) use plain fonts you can do either of the following:</source>
          <target state="translated">&lt;code&gt;DefaultMetalTheme&lt;/code&gt; 对许多控件使用粗体字体。要使所有控件（内部框架标题栏和客户端装饰的框架标题栏除外）都使用纯字体，您可以执行以下任一操作：</target>
        </trans-unit>
        <trans-unit id="8530508038c8b24055b893842eef1cd4d28d0b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; is responsible for providing the data that gets sorted by &lt;code&gt;DefaultRowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; 负责提供按 &lt;code&gt;DefaultRowSorter&lt;/code&gt; 排序的数据。</target>
        </trans-unit>
        <trans-unit id="29873af872a40852989ab9782213e3c555b4127e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; is responsible for providing the data that gets sorted by &lt;code&gt;DefaultRowSorter&lt;/code&gt;. You normally do not interact directly with &lt;code&gt;ModelWrapper&lt;/code&gt;. Subclasses of &lt;code&gt;DefaultRowSorter&lt;/code&gt; provide an implementation of &lt;code&gt;ModelWrapper&lt;/code&gt; wrapping another model. For example, &lt;code&gt;TableRowSorter&lt;/code&gt; provides a &lt;code&gt;ModelWrapper&lt;/code&gt; that wraps a &lt;code&gt;TableModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; 负责提供按 &lt;code&gt;DefaultRowSorter&lt;/code&gt; 排序的数据。通常，您不直接与 &lt;code&gt;ModelWrapper&lt;/code&gt; 进行交互。 &lt;code&gt;DefaultRowSorter&lt;/code&gt; 的子类提供了封装另一个模型的 &lt;code&gt;ModelWrapper&lt;/code&gt; 的实现。例如， &lt;code&gt;TableRowSorter&lt;/code&gt; 提供了一个包装 &lt;code&gt;TableModel&lt;/code&gt; 的 &lt;code&gt;ModelWrapper&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4afdd229f8b121d7cdb57ceb13a8e95f4b4f7280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter&lt;/code&gt; has two formal type parameters. The first type parameter corresponds to the class of the model, for example &lt;code&gt;DefaultTableModel&lt;/code&gt;. The second type parameter corresponds to the class of the identifier passed to the &lt;code&gt;RowFilter&lt;/code&gt;. Refer to &lt;code&gt;TableRowSorter&lt;/code&gt; and &lt;code&gt;RowFilter&lt;/code&gt; for more details on the type parameters.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter&lt;/code&gt; 具有两个形式类型参数。第一个类型参数对应于模型的类，例如 &lt;code&gt;DefaultTableModel&lt;/code&gt; 。第二个类型参数对应于传递给 &lt;code&gt;RowFilter&lt;/code&gt; 的标识符的类。有关类型参数的更多详细信息，请参考 &lt;code&gt;TableRowSorter&lt;/code&gt; 和 &lt;code&gt;RowFilter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f05dcd2d1e9a51b9437f7e57a3a4e51a0e10484b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter&lt;/code&gt; is an abstract class. Concrete subclasses must provide access to the underlying data by invoking &lt;code&gt;setModelWrapper&lt;/code&gt;. The &lt;code&gt;setModelWrapper&lt;/code&gt; method &lt;b&gt;must&lt;/b&gt; be invoked soon after the constructor is called, ideally from within the subclass's constructor. Undefined behavior will result if you use a &lt;code&gt;
 DefaultRowSorter&lt;/code&gt; without specifying a &lt;code&gt;ModelWrapper&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter&lt;/code&gt; 是一个抽象类。具体的子类必须通过调用 &lt;code&gt;setModelWrapper&lt;/code&gt; 提供对基础数据的访问。该 &lt;code&gt;setModelWrapper&lt;/code&gt; 方法&lt;b&gt;必须&lt;/b&gt;调用构造函数后，从子类的构造函数中最好尽快被调用。如果您使用 &lt;code&gt; DefaultRowSorter&lt;/code&gt; 而不指定 &lt;code&gt;ModelWrapper&lt;/code&gt; ,则会导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="8d7e3d656af321377b0de756c2f2d297b453de34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deque&lt;/code&gt; implementations generally do not define element-based versions of the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods, but instead inherit the identity-based versions from class &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Deque&lt;/code&gt; 实现通常不定义 &lt;code&gt;equals&lt;/code&gt; 和 &lt;code&gt;hashCode&lt;/code&gt; 方法的基于元素的版本，而是从类继承基于身份的版本 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40cffbac4a1f83e6256195266a7d20f5564b4d94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DialogType.COMMON&lt;/code&gt;, &lt;code&gt;DialogType.NATIVE&lt;/code&gt;, or &lt;code&gt;DialogType.NONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DialogType.COMMON&lt;/code&gt; ， &lt;code&gt;DialogType.NATIVE&lt;/code&gt; 或 &lt;code&gt;DialogType.NONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c53d0fb64a00ee4cb716575127743bcda6209fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; （1024）</target>
        </trans-unit>
        <trans-unit id="914677f73256948b55184ea61d5c17ff0123eeb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; （DiffieHellman）（1024，2048）</target>
        </trans-unit>
        <trans-unit id="0a6b42bc4d64ddd0f190d08d4d10625c706c5375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048, 4096)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048, 4096)</target>
        </trans-unit>
        <trans-unit id="a89ea9c0771a38eb80fdae677e70a1bdfd4cd7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirContext&lt;/code&gt; also behaves as a naming context by extending the &lt;code&gt;Context&lt;/code&gt; interface in the &lt;code&gt;javax.naming&lt;/code&gt; package. This means that any directory object can also provide a naming context. For example, the directory object for a person might contain the attributes of that person, and at the same time provide a context for naming objects relative to that person such as his printers and home directory.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 也可以通过扩展 &lt;code&gt;Context&lt;/code&gt; 接口来充当命名上下文。 &lt;code&gt;javax.naming&lt;/code&gt; 包中。这意味着任何目录对象都可以提供命名上下文。例如，一个人的目录对象可能包含该人的属性，并同时提供一个上下文来命名相对于该人的对象，例如他的打印机和主目录。</target>
        </trans-unit>
        <trans-unit id="5792729aa4540c3123da205e3eb0ace9a9fe61c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirContext&lt;/code&gt; contains methods for performing content-based searching of the directory. In the simplest and most common form of usage, the application specifies a set of attributes--possibly with specific values--to match, and submits this attribute set, to the &lt;code&gt;search()&lt;/code&gt; method. There are other overloaded forms of &lt;code&gt;search()&lt;/code&gt; that support more sophisticated &lt;em&gt;search filters&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 包含用于执行基于内容的目录搜索的方法。在最简单，最常见的用法中，应用程序指定一组属性（可能具有特定值）进行匹配，并将此属性集提交给 &lt;code&gt;search()&lt;/code&gt; 方法。还有其他重载形式的 &lt;code&gt;search()&lt;/code&gt; ，它们支持更复杂的&lt;em&gt;搜索过滤器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="09df54d6c818038812565940d73a4163f3e53360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; successively loads in object factories. If it encounters a &lt;code&gt;DirObjectFactory&lt;/code&gt;, it will invoke &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt;; otherwise, it invokes &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;. It does this until a factory produces a non-null answer.</source>
          <target state="translated">&lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; 会依次加载到对象工厂中。如果遇到 &lt;code&gt;DirObjectFactory&lt;/code&gt; ，它将调用 &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt; ; 否则，它将调用 &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; 。这样做直到工厂产生非空答案为止。</target>
        </trans-unit>
        <trans-unit id="f86324db481587886f342c04b19ddf73e6679064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; successively loads in state factories. If a factory implements &lt;code&gt;DirStateFactory&lt;/code&gt;, &lt;code&gt;DirectoryManager&lt;/code&gt; invokes this method; otherwise, it invokes &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt;. It does this until a factory produces a non-null answer.</source>
          <target state="translated">&lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; 先后在状态工厂中加载。如果工厂实现 &lt;code&gt;DirStateFactory&lt;/code&gt; ，则 &lt;code&gt;DirectoryManager&lt;/code&gt; 会调用此方法；否则，它将调用 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; 。这样做直到工厂产生非空答案为止。</target>
        </trans-unit>
        <trans-unit id="2064d6f94b778843b611daf1f37f67fd34ec2d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager&lt;/code&gt; is safe for concurrent access by multiple threads.</source>
          <target state="translated">&lt;code&gt;DirectoryManager&lt;/code&gt; 对于通过多个线程进行并发访问是安全的。</target>
        </trans-unit>
        <trans-unit id="a92c0395bd973c1d7a5990789758ae8d67cdc80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocAttribute&lt;/code&gt;s which are to be specified on the &lt;code&gt;Doc&lt;/code&gt; must be included in this set to accurately represent the context.</source>
          <target state="translated">&lt;code&gt;DocAttribute&lt;/code&gt; 此 &lt;code&gt;Doc&lt;/code&gt; 集中必须包含要在Doc上指定的DocAttribute，以准确表示上下文。</target>
        </trans-unit>
        <trans-unit id="0c6a919f97734d4e67d8dbc26bb50eaa928e4894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DockingListener&lt;/code&gt; for &lt;code&gt;MetalToolBarUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DockingListener&lt;/code&gt; 的 &lt;code&gt;MetalToolBarUI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="543ebc95484a5c30bb8a17d799a0d20faa874af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document.inputEncoding&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;Document.inputEncoding&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="b45f1d389e09ebca5519e73cf3a872524800a7ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document.xmlEncoding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document.xmlEncoding&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7b407aa8b7ae77dbddfbfe395e59ea6177846984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes are written, including the XML declaration (unless the parameter &quot;xml-declaration&quot; is set to &lt;code&gt;false&lt;/code&gt;) and a DTD subset, if one exists in the DOM. Writing a &lt;code&gt;Document&lt;/code&gt; node serializes the entire document.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 编写文档节点，包括XML声明（除非参数&amp;ldquo; xml-declaration&amp;rdquo;设置为 &lt;code&gt;false&lt;/code&gt; ）和DTD子集（如果DOM中存在子集）。编写 &lt;code&gt;Document&lt;/code&gt; 节点会序列化整个文档。</target>
        </trans-unit>
        <trans-unit id="b37d487719ba02c4168d6e8b316b96235c3e38d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 无法使用文档节点。</target>
        </trans-unit>
        <trans-unit id="95ed47064f6dad9b43129d869396522461467783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes cannot be imported.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 无法导入文档节点。</target>
        </trans-unit>
        <trans-unit id="0d766e16445218d1589b4eaa94bf64c97df9a921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; result of parsing the &lt;code&gt;InputStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 解析 &lt;code&gt;InputStream&lt;/code&gt; 的文档结果</target>
        </trans-unit>
        <trans-unit id="0c492d3683adb0835b33cde3d91883965efbf45b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentType&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt;, &lt;code&gt;Notation&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt; , and children of &lt;code&gt;Attr&lt;/code&gt; nodes are not passed to the filter. The child nodes of an &lt;code&gt;EntityReference&lt;/code&gt; node are only passed to the filter if the &lt;code&gt;EntityReference&lt;/code&gt; node is skipped by the method &lt;code&gt;LSParserFilter.acceptNode()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; &lt;code&gt;Attr&lt;/code&gt; 节点的Document， &lt;code&gt;DocumentType&lt;/code&gt; ， &lt;code&gt;DocumentFragment&lt;/code&gt; ， &lt;code&gt;Notation&lt;/code&gt; ， &lt;code&gt;Entity&lt;/code&gt; 和子代不会传递到过滤器。一个的子节点 &lt;code&gt;EntityReference&lt;/code&gt; 节点，如果仅传递给过滤器 &lt;code&gt;EntityReference&lt;/code&gt; 节点由该方法跳过 &lt;code&gt;LSParserFilter.acceptNode()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bb2c607723c47087e45826c3c7cb4428361e527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentBuilder&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt;&lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;DocumentBuilder&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;DocumentBuilder&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DocumentBuilder&lt;/code&gt; 重置为与使用&lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt; &lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt; &lt;/a&gt;创建时相同的状态。 &lt;code&gt;reset()&lt;/code&gt; 旨在允许重用现有 &lt;code&gt;DocumentBuilder&lt;/code&gt; ,从而节省与创建新 &lt;code&gt;DocumentBuilder&lt;/code&gt; 关联的资源。</target>
        </trans-unit>
        <trans-unit id="81d2cf523601208f09d89c363fd2bc11e1d5b9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFilter&lt;/code&gt;, as the name implies, is a filter for the &lt;code&gt;Document&lt;/code&gt; mutation methods.</source>
          <target state="translated">&lt;code&gt;DocumentFilter&lt;/code&gt; ，顾名思义，是为过滤 &lt;code&gt;Document&lt;/code&gt; 突变的方法。</target>
        </trans-unit>
        <trans-unit id="9f7baec10ddb03e92b7880ce7dd440573017b206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFilter&lt;/code&gt;, as the name implies, is a filter for the &lt;code&gt;Document&lt;/code&gt; mutation methods. When a &lt;code&gt;Document&lt;/code&gt; containing a &lt;code&gt;DocumentFilter&lt;/code&gt; is modified (either through &lt;code&gt;insert&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt;), it forwards the appropriate method invocation to the &lt;code&gt;DocumentFilter&lt;/code&gt;. The default implementation allows the modification to occur. Subclasses can filter the modifications by conditionally invoking methods on the superclass, or invoking the necessary methods on the passed in &lt;code&gt;FilterBypass&lt;/code&gt;. Subclasses should NOT call back into the Document for the modification instead call into the superclass or the &lt;code&gt;FilterBypass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DocumentFilter&lt;/code&gt; ，顾名思义，是为过滤 &lt;code&gt;Document&lt;/code&gt; 突变的方法。当一个 &lt;code&gt;Document&lt;/code&gt; 包含 &lt;code&gt;DocumentFilter&lt;/code&gt; 被修改（通过 &lt;code&gt;insert&lt;/code&gt; 或 &lt;code&gt;remove&lt;/code&gt; ）时，它转发适当的方法调用到 &lt;code&gt;DocumentFilter&lt;/code&gt; 。默认实现允许进行修改。子类可以通过有条件地调用超类上的方法或通过 &lt;code&gt;FilterBypass&lt;/code&gt; 中传递的必要方法来过滤修改。子类不应调用Document进行修改，而应调用超类或 &lt;code&gt;FilterBypass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ccfd2a5dcdb05e199a7df560efc65280cd3e8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; is a &quot;lightweight&quot; or &quot;minimal&quot; &lt;code&gt;Document&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 是&amp;ldquo;轻量&amp;rdquo;或&amp;ldquo;最小&amp;rdquo; &lt;code&gt;Document&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="4ac63a67802d1b43d585cfac083f7d21e3b1595f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; is a &quot;lightweight&quot; or &quot;minimal&quot; &lt;code&gt;Document&lt;/code&gt; object. It is very common to want to be able to extract a portion of a document's tree or to create a new fragment of a document. Imagine implementing a user command like cut or rearranging a document by moving fragments around. It is desirable to have an object which can hold such fragments and it is quite natural to use a Node for this purpose. While it is true that a &lt;code&gt;Document&lt;/code&gt; object could fulfill this role, a &lt;code&gt;Document&lt;/code&gt; object can potentially be a heavyweight object, depending on the underlying implementation. What is really needed for this is a very lightweight object. &lt;code&gt;DocumentFragment&lt;/code&gt; is such an object.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 是&amp;ldquo;轻量&amp;rdquo;或&amp;ldquo;最小&amp;rdquo; &lt;code&gt;Document&lt;/code&gt; 对象。希望能够提取文档树的一部分或创建文档的新片段是很常见的。想象一下实现用户命令，例如通过移动碎片来剪切或重新排列文档。希望有一个可以容纳这些片段的对象，并且为此目的使用Node是很自然的。虽然 &lt;code&gt;Document&lt;/code&gt; 对象确实可以担当此角色，但取决于基础实现， &lt;code&gt;Document&lt;/code&gt; 对象也可能是重量级对象。为此，真正需要的是一个非常轻便的对象。 &lt;code&gt;DocumentFragment&lt;/code&gt; 就是这样的对象。</target>
        </trans-unit>
        <trans-unit id="b902b96377a51b8b38b72a56177252d7d4579c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; nodes are serialized by serializing the children of the document fragment in the order they appear in the document fragment.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; 通过按文档片段的子代在文档片段中出现的顺序对其进行序列化，可以对DocumentFragment节点进行序列化。</target>
        </trans-unit>
        <trans-unit id="659895d243b0c297153cbbe188cfdd0d9cdb35bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentTraversal&lt;/code&gt; contains methods that create &lt;code&gt;NodeIterators&lt;/code&gt; and &lt;code&gt;TreeWalkers&lt;/code&gt; to traverse a node and its children in document order (depth first, pre-order traversal, which is equivalent to the order in which the start tags occur in the text representation of the document).</source>
          <target state="translated">&lt;code&gt;DocumentTraversal&lt;/code&gt; 包含一些方法，这些方法创建 &lt;code&gt;NodeIterators&lt;/code&gt; 和 &lt;code&gt;TreeWalkers&lt;/code&gt; 来按文档顺序遍历节点及其子级（深度优先，预遍历，等效于开始标记在文档的文本表示中出现的顺序）。</target>
        </trans-unit>
        <trans-unit id="c2fcf6c0454a88db8728e286edbaddcc0e999a37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentTraversal&lt;/code&gt; contains methods that create &lt;code&gt;NodeIterators&lt;/code&gt; and &lt;code&gt;TreeWalkers&lt;/code&gt; to traverse a node and its children in document order (depth first, pre-order traversal, which is equivalent to the order in which the start tags occur in the text representation of the document). In DOMs which support the Traversal feature, &lt;code&gt;DocumentTraversal&lt;/code&gt; will be implemented by the same objects that implement the Document interface.</source>
          <target state="translated">&lt;code&gt;DocumentTraversal&lt;/code&gt; 包含一些方法，这些方法创建 &lt;code&gt;NodeIterators&lt;/code&gt; 和 &lt;code&gt;TreeWalkers&lt;/code&gt; 来按文档顺序遍历节点及其子级（深度优先，预遍历，等效于开始标记在文档的文本表示中出现的顺序）。在支持遍历功能的DOM中， &lt;code&gt;DocumentTraversal&lt;/code&gt; 将由实现Document接口的相同对象来实现。</target>
        </trans-unit>
        <trans-unit id="d381ad218fdf0fca28cd300d73912b49f9158dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; 无法使用DocumentType节点。</target>
        </trans-unit>
        <trans-unit id="f54d62aa176ae72ad1969fa2a268a0a5b07edafd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; nodes cannot be imported.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; 无法导入DocumentType节点。</target>
        </trans-unit>
        <trans-unit id="9048d91e0f8c8d923c9e8cb627c66dcf1cc58c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Double(-0.0)&lt;/code&gt; if both &lt;code&gt;isParseBigDecimal()&lt;/code&gt; and &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; are false.</source>
          <target state="translated">&lt;code&gt;Double(-0.0)&lt;/code&gt; 如果 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; 和 &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; 均为false ，则为Double（-0.0）。</target>
        </trans-unit>
        <trans-unit id="9da8cff5c95b35967306da5e5b2f8c9fad055766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Double.NaN&lt;/code&gt; 此方法认为Double.NaN等于自己，并且大于所有其他 &lt;code&gt;double&lt;/code&gt; 值（包括 &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4dd312cf923103aca3696c7f4775ff77c24070dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;DoubleStream.iterate&lt;/code&gt; 应该产生与相应的for循环所产生的元素序列相同的序列：</target>
        </trans-unit>
        <trans-unit id="beb0f3783d20d53b34997322c5fa55b324d54a20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 可用作&lt;a href=&quot;stream/stream&quot;&gt;流&lt;/a&gt;的&lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;缩减&lt;/a&gt;目标。例如：</target>
        </trans-unit>
        <trans-unit id="8dbc465130bcec70ae126f81e19d9136dabeb003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 可用作&lt;a href=&quot;stream/stream&quot;&gt;流&lt;/a&gt;的&lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;缩减&lt;/a&gt;目标。例如：</target>
        </trans-unit>
        <trans-unit id="36167a6d8ef9e69497700eec1acae687e88e8b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DragSourceEvent&lt;/code&gt;s are generated whenever the drag enters, moves over, or exits a drop site, when the drop action changes, and when the drag ends. The location for the generated &lt;code&gt;DragSourceEvent&lt;/code&gt; specifies the mouse cursor location in screen coordinates at the moment this event occurred.</source>
          <target state="translated">&lt;code&gt;DragSourceEvent&lt;/code&gt; 每当拖动进入，移到或退出放置站点，放置动作发生变化以及拖动结束时，都会生成DragSourceEvent。生成的 &lt;code&gt;DragSourceEvent&lt;/code&gt; 的位置在事件发生时指定屏幕坐标中的鼠标光标位置。</target>
        </trans-unit>
        <trans-unit id="14bf5fa06cba37be55b3590487b71d48993380ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Driver&lt;/code&gt; interface -- provides the API for registering and connecting drivers based on JDBC technology (&quot;JDBC drivers&quot;); generally used only by the &lt;code&gt;DriverManager&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;Driver&lt;/code&gt; 接口-提供用于注册和连接基于JDBC技术的驱动程序的API（&amp;ldquo; JDBC驱动程序&amp;rdquo;）；通常仅由 &lt;code&gt;DriverManager&lt;/code&gt; 类使用</target>
        </trans-unit>
        <trans-unit id="dc514f897b1c82361eeeb08f2c0916b30f7f5506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverManager&lt;/code&gt; class -- makes a connection with a driver</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; 类-与驱动程序建立连接</target>
        </trans-unit>
        <trans-unit id="76034b55e4d0e1e48f244f47e3a2bf96a7116609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverManager&lt;/code&gt; initialization is done lazily and looks up service providers using the thread context class loader. The drivers loaded and available to an application will depend on the thread context class loader of the thread that triggers driver initialization by &lt;code&gt;DriverManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; 延迟完成DriverManager初始化，并使用线程上下文类加载器查找服务提供者。加载的驱动程序以及可用于应用程序的驱动程序将取决于线程的线程上下文类加载器，该加载器触发 &lt;code&gt;DriverManager&lt;/code&gt; 初始化驱动程序。</target>
        </trans-unit>
        <trans-unit id="2353186265de4b132202e3a99ad04eb87e53996d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverPropertyInfo&lt;/code&gt; class -- provides properties for a JDBC driver; not used by the general user</source>
          <target state="translated">&lt;code&gt;DriverPropertyInfo&lt;/code&gt; 类-提供JDBC驱动程序的属性；普通用户不使用</target>
        </trans-unit>
        <trans-unit id="1c1004d82e6f836c5fca36164c84bebdaad75e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DropTarget&lt;/code&gt; objects manifest &quot;Drag Under&quot; feedback to the user, in the typical case, by rendering animations into their associated GUI &lt;code&gt;Component&lt;/code&gt;(s) under the GUI Cursor.</source>
          <target state="translated">&lt;code&gt;DropTarget&lt;/code&gt; 在典型情况下，DropTarget对象通过在GUI光标下将动画呈现到其关联的GUI &lt;code&gt;Component&lt;/code&gt; ，从而向用户显示&amp;ldquo;拖动到下方&amp;rdquo;的反馈。</target>
        </trans-unit>
        <trans-unit id="ea562f4880999384cb9584bc386c0a82713cbfff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt; of years and months of this &lt;code&gt;Duration&lt;/code&gt; as days.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; 的年和月的 &lt;code&gt;Duration&lt;/code&gt; 以天为单位）。</target>
        </trans-unit>
        <trans-unit id="0882532caac551c9de94e6fa0a0c59351867e102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary.</source>
          <target state="translated">&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; 可以包装矢量/哈希表/数组/字符串，并根据需要创建适当的子树节点。</target>
        </trans-unit>
        <trans-unit id="2b94df8ae8c2b3667e474d3108259cd82e1598b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary. It is dynamic in that it will only create the children as necessary.</source>
          <target state="translated">&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; 可以包装矢量/哈希表/数组/字符串，并根据需要创建适当的子树节点。它是动态的，因为它将仅在必要时创建子代。</target>
        </trans-unit>
        <trans-unit id="0faa3cb9d71752dc2c186446730225f2317ec969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The base class of elements held in this array</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此数组中包含的元素的基类</target>
        </trans-unit>
        <trans-unit id="bf1437cc83c446bf4aa593e17085e1af9ba9ce95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -集合中元素的类</target>
        </trans-unit>
        <trans-unit id="361e98d763634ad8ec7a10bf657261ee37729657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the enum set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -枚举集中的元素类别</target>
        </trans-unit>
        <trans-unit id="8ec8941e9851ee55fe24c26103e577c50d64baea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -集合中元素的类别</target>
        </trans-unit>
        <trans-unit id="7d76cc61fcf088a06b26e3a5f7d98b04e375009c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the parameter elements and of the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -参数元素和集合的类</target>
        </trans-unit>
        <trans-unit id="b25490b1c8ed44bbd9edd0693726eed05004841d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the specified element and of the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -指定元素和集合的类</target>
        </trans-unit>
        <trans-unit id="d2de7ed4a566f06b473b0513e7b5f8989042d895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The enum type for which a constant value is to be returned</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -要为其返回常量值的枚举类型</target>
        </trans-unit>
        <trans-unit id="ad253a36a7d7b3b3a100cec773acd949f4c61316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The enum type subclass</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -枚举类型子类</target>
        </trans-unit>
        <trans-unit id="297cda062ba4927b388aa132a3b710de3d42ce41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - Type of component elements</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -组成元素的类型</target>
        </trans-unit>
        <trans-unit id="bf2496dabd6861a8a3375b92943a60260dc05350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the &lt;code&gt;List&lt;/code&gt;'s element type</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -该 &lt;code&gt;List&lt;/code&gt; 的元素类型</target>
        </trans-unit>
        <trans-unit id="524cc3c0c1c76c6cb03e13a0bc5f633f19a22757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the &lt;code&gt;Set&lt;/code&gt;'s element type</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - &lt;code&gt;Set&lt;/code&gt; 的元素类型</target>
        </trans-unit>
        <trans-unit id="dec398885250622eb9629f1fa14fcf6bde23d555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the Java type that described instances must have</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -描述实例必须具有的Java类型</target>
        </trans-unit>
        <trans-unit id="c72a0eaef3c43f14fb8eba41af201909d684d8c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the map keys and of the objects in the returned set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -映射键和返回集中的对象的类</target>
        </trans-unit>
        <trans-unit id="9f86769f0bada4e55235e6b1c975d051e63c8d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -集合中对象的类</target>
        </trans-unit>
        <trans-unit id="7fc113d7abe10ac7f2fc4eb5bb2af975a242c727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -列表中对象的类</target>
        </trans-unit>
        <trans-unit id="69601f08684e4e26ce097f560e0fc1583618dbfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the queue</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -队列中对象的类</target>
        </trans-unit>
        <trans-unit id="12fa27c904b9b0de01918fc369202a3951fc403b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -集合中对象的类</target>
        </trans-unit>
        <trans-unit id="0f086297c933260861f3f493814f7d98364778e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此集合中包含的元素的类型</target>
        </trans-unit>
        <trans-unit id="cefaab8a71cf76be7a437b56508cb0b3d45edf86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this deque</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此双端队列中包含的元素的类型</target>
        </trans-unit>
        <trans-unit id="0695e7f9d1279d77cdf133ec26175ff3b0d937d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此列表中包含的元素类型</target>
        </trans-unit>
        <trans-unit id="d88da2df9071d078e83dc963f539d08e43070408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this queue</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此队列中保存的元素类型</target>
        </trans-unit>
        <trans-unit id="0c05513393245baadd78c93632560368cb7e8974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此集合中包含的元素的类型</target>
        </trans-unit>
        <trans-unit id="7d52f8802f1780fa99fea81b4cc597fb84353327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements in this collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此集合中元素的类型</target>
        </trans-unit>
        <trans-unit id="47bf0a88e642d5ced3075e45b22161ea6cae79b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements in this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此列表中元素的类型</target>
        </trans-unit>
        <trans-unit id="98ec22579763e9440abdcf6f96ae2666c72c4ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements maintained by this set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此集合维护的元素类型</target>
        </trans-unit>
        <trans-unit id="7c2862c0bd229619f4f8345dd2fa1c0a2be89520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements returned by this iterator</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此迭代器返回的元素类型</target>
        </trans-unit>
        <trans-unit id="4f509f05e252c39b1801ac266a69457b08f83615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this combo box</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此组合框的元素类型</target>
        </trans-unit>
        <trans-unit id="58b481b9a5308e41fbf722a42fbe2607e51807f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此列表元素的类型</target>
        </trans-unit>
        <trans-unit id="6a33816c08a58aadb803fa75f7b77b179ff344af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this model</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此模型的元素类型</target>
        </trans-unit>
        <trans-unit id="2340a924dee854a31040a1da235db94cb5d00c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the enum constant</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -枚举常量的类型</target>
        </trans-unit>
        <trans-unit id="315e17caea7b0a2448bc434639bc139188d21662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of values this renderer can be used for</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -此渲染器可用于的值的类型</target>
        </trans-unit>
        <trans-unit id="6ddf4a863c5be0beaf9068a557e640b0e5335d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - type of elements, if there were any, in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -集合中元素的类型（如果有）</target>
        </trans-unit>
        <trans-unit id="c7e37d0a4f1a261fd00413c2e238eb392794c1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - If present, this is converted to a &lt;code&gt;LocalDate&lt;/code&gt; and all other date fields are then cross-checked against the date.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -如果存在，则将其转换为 &lt;code&gt;LocalDate&lt;/code&gt; ，然后根据日期对所有其他日期字段进行交叉检查。</target>
        </trans-unit>
        <trans-unit id="0cc19a47c9bf9256cbb4905ca348e76e7ea08359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - If present, this is converted to a date and all other date fields are then cross-checked against the date.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -如果存在，则将其转换为日期，然后将所有其他日期字段与该日期进行交叉检查。</target>
        </trans-unit>
        <trans-unit id="8aa6cf32a77705b393f789573e90523569e4533f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. This completely replaces the date and is equivalent to &lt;a href=&quot;#ofEpochDay(long)&quot;&gt;&lt;code&gt;ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -返回具有指定纪元日期的 &lt;code&gt;LocalDate&lt;/code&gt; 。这将完全替换日期，并且等效于&lt;a href=&quot;#ofEpochDay(long)&quot;&gt; &lt;code&gt;ofEpochDay(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7121d811ef992feec385966eb2e4889abb23c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. This completely replaces the date and is equivalent to &lt;a href=&quot;localdate#ofEpochDay-long-&quot;&gt;&lt;code&gt;ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -返回具有指定时代的 &lt;code&gt;LocalDate&lt;/code&gt; 。这将完全替换日期，并且等效于&lt;a href=&quot;localdate#ofEpochDay-long-&quot;&gt; &lt;code&gt;ofEpochDay(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d055afcf83204542d1a5eb967ddb5a854a77b5dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified era. The year-of-era and month will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; -返回具有指定时代的 &lt;code&gt;LocalDate&lt;/code&gt; 。年份和月份将保持不变。除非新的月份和年份无效，否则月份中的日期也将保持不变。在这种情况下，将月份日期调整为新月份和年份的最大有效值。</target>
        </trans-unit>
        <trans-unit id="7192bcbcaa950d940ddff2aac0b184ee2878fd2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified era. The year-of-era will be unchanged.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; -返回具有指定时代的 &lt;code&gt;Year&lt;/code&gt; 。时代不变。</target>
        </trans-unit>
        <trans-unit id="5592ee89ee78259f7422a7461ebb8100053d8828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified era. The month and year-of-era will be unchanged.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; -返回 &lt;code&gt;YearMonth&lt;/code&gt; 与指定的时代。月份和年份将保持不变。</target>
        </trans-unit>
        <trans-unit id="92d60b1fa4241d1b363fe6a15064ffb7756f3c10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; -返回具有指定时代数的 &lt;code&gt;LocalDate&lt;/code&gt; 。仅支持两个时代，因此金额必须为1、0或减1。如果金额不为零，则更改年份，以使年份不变。除非新的月份和年份无效，否则月份中的日期将保持不变。在这种情况下，将月份日期调整为新月份和年份的最大有效值。</target>
        </trans-unit>
        <trans-unit id="436c7c34644682dc6664730ace48d38160ccfce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; -返回带有指定时代数的 &lt;code&gt;Year&lt;/code&gt; 。仅支持两个时代，因此金额必须为1、0或减1。如果金额不为零，则更改年份，以使年份不变。</target>
        </trans-unit>
        <trans-unit id="1699937a84ba6ad8bd1a082586a5e1944f13a06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; -返回 &lt;code&gt;YearMonth&lt;/code&gt; 添加了时代的指定号码。仅支持两个时代，因此金额必须为1、0或减1。如果金额不为零，则更改年份，以使年份不变。</target>
        </trans-unit>
        <trans-unit id="a9422738414f8bc460037cdc3be55582ba06ad65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt; level: usually used to log error messages.</source>
          <target state="translated">&lt;code&gt;ERROR&lt;/code&gt; 级别：通常用于记录错误消息。</target>
        </trans-unit>
        <trans-unit id="5419867910ba863344df43054bf633f2cbf4df88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt; level: usually used to log error messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ERROR&lt;/code&gt; 级别：通常用于记录错误消息。此级别的&lt;a href=&quot;#getSeverity()&quot;&gt;严重性&lt;/a&gt;为 &lt;code&gt;1000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fd8828d44db21a3c67a6fc02ed7689a1bab858b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXIT_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Exit the application using the &lt;code&gt;System&lt;/code&gt;&lt;code&gt;exit&lt;/code&gt; method. Use this only in applications.</source>
          <target state="translated">&lt;code&gt;EXIT_ON_CLOSE&lt;/code&gt; （在 &lt;code&gt;WindowConstants&lt;/code&gt; 中定义）：使用 &lt;code&gt;System&lt;/code&gt; &lt;code&gt;exit&lt;/code&gt; 方法退出应用程序。仅在应用程序中使用它。</target>
        </trans-unit>
        <trans-unit id="4292064b88de46c02ba526ea6e79d012512d7d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementIterator&lt;/code&gt;, as the name suggests, iterates over the &lt;code&gt;Element&lt;/code&gt; tree.</source>
          <target state="translated">&lt;code&gt;ElementIterator&lt;/code&gt; ，顾名思义，遍历的 &lt;code&gt;Element&lt;/code&gt; 树。</target>
        </trans-unit>
        <trans-unit id="26d2a3b87d52fd9f32afa8afa957a0eea56b362c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ElementIterator&lt;/code&gt;, as the name suggests, iterates over the &lt;code&gt;Element&lt;/code&gt; tree. The constructor can be invoked with either &lt;code&gt;Document&lt;/code&gt; or an &lt;code&gt;Element&lt;/code&gt; as an argument. If the constructor is invoked with a &lt;code&gt;Document&lt;/code&gt; as an argument then the root of the iteration is the return value of &lt;code&gt;document.getDefaultRootElement()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ElementIterator&lt;/code&gt; ，顾名思义，遍历的 &lt;code&gt;Element&lt;/code&gt; 树。构造函数可以使用 &lt;code&gt;Document&lt;/code&gt; 或 &lt;code&gt;Element&lt;/code&gt; 作为参数来调用。如果构造函数以 &lt;code&gt;Document&lt;/code&gt; 作为参数调用，则迭代的根是 &lt;code&gt;document.getDefaultRootElement()&lt;/code&gt; 的返回值。</target>
        </trans-unit>
        <trans-unit id="8e5a65e686d575c44f22ac408a8801a25074e345" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmptySelectionModel&lt;/code&gt; is a &lt;code&gt;TreeSelectionModel&lt;/code&gt; that does not allow anything to be selected.</source>
          <target state="translated">&lt;code&gt;EmptySelectionModel&lt;/code&gt; 是不允许选择任何内容的 &lt;code&gt;TreeSelectionModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ba9184609fdda58a17d4ca99ec16ca7f8538f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes can be imported, however in the current release of the DOM the &lt;code&gt;DocumentType&lt;/code&gt; is readonly. Ability to add these imported nodes to a &lt;code&gt;DocumentType&lt;/code&gt; will be considered for addition to a future release of the DOM.On import, the &lt;code&gt;publicId&lt;/code&gt;, &lt;code&gt;systemId&lt;/code&gt;, and &lt;code&gt;notationName&lt;/code&gt; attributes are copied. If a &lt;code&gt;deep&lt;/code&gt; import is requested, the descendants of the the source &lt;code&gt;Entity&lt;/code&gt; are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; 可以导入实体节点，但是在当前的DOM版本中， &lt;code&gt;DocumentType&lt;/code&gt; 是只读的。在将来的DOM版本中，将考虑将这些导入的节点添加到 &lt;code&gt;DocumentType&lt;/code&gt; 的能力。在导入时，将复制 &lt;code&gt;publicId&lt;/code&gt; ， &lt;code&gt;systemId&lt;/code&gt; 和 &lt;code&gt;notationName&lt;/code&gt; 属性。如果请求 &lt;code&gt;deep&lt;/code&gt; 导入，则将递归导入源 &lt;code&gt;Entity&lt;/code&gt; 的后代，并重组结果节点以形成相应的子树。</target>
        </trans-unit>
        <trans-unit id="2ece41806e5911c85908381b8e2a153c52badab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; 节点不能被采用。</target>
        </trans-unit>
        <trans-unit id="2cb6a6158fd92155f5b9b63ec7bb51d344ef21c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes, when written directly by &lt;code&gt;LSSerializer.write&lt;/code&gt;, outputs the entity expansion but no namespace fixup is done. The resulting output will be valid as an external entity.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; 节点由 &lt;code&gt;LSSerializer.write&lt;/code&gt; 直接编写时，将输出实体扩展，但不完成名称空间修复。结果输出将作为外部实体有效。</target>
        </trans-unit>
        <trans-unit id="2bd6af26cb179e2c9c63c07856120ebfe1563820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntityReference&lt;/code&gt; nodes may be used to represent an entity reference in the tree.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; 节点可用于表示树中的实体引用。</target>
        </trans-unit>
        <trans-unit id="c71b309f4451b904dd8b954021969ec850b75700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntityReference&lt;/code&gt; nodes may be used to represent an entity reference in the tree. Note that character references and references to predefined entities are considered to be expanded by the HTML or XML processor so that characters are represented by their Unicode equivalent rather than by an entity reference. Moreover, the XML processor may completely expand references to entities while building the &lt;code&gt;Document&lt;/code&gt;, instead of providing &lt;code&gt;EntityReference&lt;/code&gt; nodes. If it does provide such nodes, then for an &lt;code&gt;EntityReference&lt;/code&gt; node that represents a reference to a known entity an &lt;code&gt;Entity&lt;/code&gt; exists, and the subtree of the &lt;code&gt;EntityReference&lt;/code&gt; node is a copy of the &lt;code&gt;Entity&lt;/code&gt; node subtree. However, the latter may not be true when an entity contains an unbound namespace prefix. In such a case, because the namespace prefix resolution depends on where the entity reference is, the descendants of the &lt;code&gt;EntityReference&lt;/code&gt; node may be bound to different namespace URIs. When an &lt;code&gt;EntityReference&lt;/code&gt; node represents a reference to an unknown entity, the node has no children and its replacement value, when used by &lt;code&gt;Attr.value&lt;/code&gt; for example, is empty.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; 节点可用于表示树中的实体引用。注意，字符引用和对预定义实体的引用被认为是由HTML或XML处理器扩展的，因此字符由其Unicode等效项而不是由实体引用表示。而且，XML处理器可以在构建 &lt;code&gt;Document&lt;/code&gt; 时完全扩展对实体的引用，而不是提供 &lt;code&gt;EntityReference&lt;/code&gt; 节点。如果确实提供了这样的节点，则对于表示对已知实体的引用的 &lt;code&gt;EntityReference&lt;/code&gt; 节点，存在一个 &lt;code&gt;Entity&lt;/code&gt; ，并且 &lt;code&gt;EntityReference&lt;/code&gt; 节点的子树是 &lt;code&gt;Entity&lt;/code&gt; 的副本节点子树。但是，当实体包含未绑定的名称空间前缀时，后者可能不是正确的。在这种情况下，由于名称空间前缀解析取决于实体引用的位置，因此 &lt;code&gt;EntityReference&lt;/code&gt; 节点的后代可以绑定到不同的名称空间URI。当 &lt;code&gt;EntityReference&lt;/code&gt; 节点表示对未知实体的引用时，该节点没有子级，并且其替换值（例如，由 &lt;code&gt;Attr.value&lt;/code&gt; 使用时）为空。</target>
        </trans-unit>
        <trans-unit id="c6c8c75a843a696aa22bb97cbd1c0166de9cd0b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns &lt;code&gt;ERAS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; 归来 &lt;code&gt;ERAS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="583e47b2348bb953596dfef107cbc3d6bf478432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; 返回空</target>
        </trans-unit>
        <trans-unit id="79fc68e18753cfbbe2367d304206e532d69df9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns the associated chronology</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; 返回相关的年代</target>
        </trans-unit>
        <trans-unit id="7663a3eee3e4b4a9d845bf69b416e73656374f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErroneousSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;ErroneousSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="b0bd94277b509521f6b0d76b3f181090c5e24828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is a platform-independent class that encapsulates events from the platform's Graphical User Interface in the Java 1.0 event model. In Java 1.1 and later versions, the &lt;code&gt;Event&lt;/code&gt; class is maintained only for backwards compatibility. The information in this class description is provided to assist programmers in converting Java 1.0 programs to the new event model.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; 是一个独立于平台的类，该类在Java 1.0事件模型中封装了来自平台图形用户界面的事件。在Java 1.1和更高版本中，仅维护 &lt;code&gt;Event&lt;/code&gt; 类是为了向后兼容。提供此类说明中的信息以帮助程序员将Java 1.0程序转换为新的事件模型。</target>
        </trans-unit>
        <trans-unit id="90b4c5122f384da2b33a8c47aee335116a89598a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EventQueue&lt;/code&gt; is a platform-independent class that queues events, both from the underlying peer classes and from trusted application classes.</source>
          <target state="translated">&lt;code&gt;EventQueue&lt;/code&gt; 是一个独立于平台的类，它对来自基础对等类和受信任的应用程序类的事件进行排队。</target>
        </trans-unit>
        <trans-unit id="e61fc6572bdbb2cf438572e25d30fb15b1fc1837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExpressionSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;ExpressionSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="61a107bd16a84ea6bf0780cdb11a06c3d6e516c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the class implementing &lt;a href=&quot;typedescriptor.offield&quot;&gt;TypeDescriptor.OfField&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; -实现&lt;a href=&quot;typedescriptor.offield&quot;&gt;TypeDescriptor.OfField&lt;/a&gt;的类</target>
        </trans-unit>
        <trans-unit id="5be692751fb19ebf9647e17be2c244dfc7b8cc3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the kind of file object forwarded to by this object</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; -此对象转发到的文件对象的类型</target>
        </trans-unit>
        <trans-unit id="d79bfe74e17123ea5e773ba3c7f55480d2bc8686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the type representing field type descriptors</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; -表示字段类型描述符的类型</target>
        </trans-unit>
        <trans-unit id="cba960ec4c81ca0de97fa7fd5a5b2acef3592fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; should be included in the DOM document being built.</source>
          <target state="translated">&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; ,如果 &lt;code&gt;Element&lt;/code&gt; 应包含在正在构建的DOM文档中。</target>
        </trans-unit>
        <trans-unit id="cdb365489828fe5f7aa7e7e89f053527e5b53fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; if this &lt;code&gt;Node&lt;/code&gt; should be included in the DOM document being built.</source>
          <target state="translated">&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; ,如果此 &lt;code&gt;Node&lt;/code&gt; 应包含在正在构建的DOM文档中。</target>
        </trans-unit>
        <trans-unit id="f5d22d13b475a2e19e2f36de25e79b3abc15fe49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The &lt;code&gt;Element&lt;/code&gt; is rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; 如果过滤器要停止处理文档，则为FILTER_INTERRUPT。中断文档的处理不再保证生成的DOM树是XML格式正确的。该 &lt;code&gt;Element&lt;/code&gt; 将被拒绝。</target>
        </trans-unit>
        <trans-unit id="2f9b2f9c0745c204bfc472facf3e22d57ddb382e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The &lt;code&gt;Node&lt;/code&gt; is accepted and will be the last completely parsed node.</source>
          <target state="translated">&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; 如果过滤器要停止处理文档，则为FILTER_INTERRUPT。中断文档的处理不再保证生成的DOM树是XML格式正确的。该 &lt;code&gt;Node&lt;/code&gt; 将被接受，并将成为最后一个完全解析的节点。</target>
        </trans-unit>
        <trans-unit id="aa9be6163725d49380f8a0d3232fb6457d3efa2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_REJECT&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; and all of its children should be rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_REJECT&lt;/code&gt; 如果应该拒绝 &lt;code&gt;Element&lt;/code&gt; 及其所有子元素，则为FILTER_REJECT。</target>
        </trans-unit>
        <trans-unit id="4c6bf521cf55c183abb0baa51d7c2137eab0204f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_REJECT&lt;/code&gt; if the &lt;code&gt;Node&lt;/code&gt; and all of its children should be rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_REJECT&lt;/code&gt; 如果应该拒绝 &lt;code&gt;Node&lt;/code&gt; 及其所有子节点，则为FILTER_REJECT。</target>
        </trans-unit>
        <trans-unit id="6a43f64dd5b6cd50eac4a1bc25d94a1d5d9603d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_SKIP&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; should be skipped. All of its children are inserted in place of the skipped &lt;code&gt;Element&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;FILTER_SKIP&lt;/code&gt; 如果 &lt;code&gt;Element&lt;/code&gt; 应该被跳过。它的所有子级都将插入，以代替跳过的 &lt;code&gt;Element&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="1b4dd3bdcef625de6de84a7811e612f2f55f8f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_SKIP&lt;/code&gt; if the &lt;code&gt;Node&lt;/code&gt; should be skipped and the &lt;code&gt;Node&lt;/code&gt; should be replaced by all the children of the &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FILTER_SKIP&lt;/code&gt; 如果 &lt;code&gt;Node&lt;/code&gt; 和应跳过的 &lt;code&gt;Node&lt;/code&gt; 应该由所有的孩子都被替换 &lt;code&gt;Node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="629d29c206731a97fc916c39b34395adad34522c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FONT&lt;/code&gt; is used for special situations where clients already have a &lt;code&gt;Font&lt;/code&gt; instance but still need to use &lt;code&gt;Map&lt;/code&gt;-based APIs. Typically, there will be no other attributes in the &lt;code&gt;Map&lt;/code&gt; except the &lt;code&gt;FONT&lt;/code&gt; attribute. With &lt;code&gt;Map&lt;/code&gt;-based APIs the common case is to specify all attributes individually, so &lt;code&gt;FONT&lt;/code&gt; is not needed or desirable.</source>
          <target state="translated">&lt;code&gt;FONT&lt;/code&gt; 用于客户端已经具有 &lt;code&gt;Font&lt;/code&gt; 实例但仍需要使用基于 &lt;code&gt;Map&lt;/code&gt; 的API的特殊情况。通常， &lt;code&gt;Map&lt;/code&gt; 中除了 &lt;code&gt;FONT&lt;/code&gt; 属性外没有其他属性。使用基于 &lt;code&gt;Map&lt;/code&gt; 的API的常见情况是分别指定所有属性，因此不需要或不希望使用 &lt;code&gt;FONT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1c4f0e5d2f3ee6dd6ba02bb13ae2f21c342fed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOREGROUND&lt;/code&gt; and &lt;code&gt;BACKGROUND&lt;/code&gt; use &lt;code&gt;Paint&lt;/code&gt; values. The subclass &lt;code&gt;Color&lt;/code&gt; is serializable, while &lt;code&gt;GradientPaint&lt;/code&gt; and &lt;code&gt;TexturePaint&lt;/code&gt; are not.</source>
          <target state="translated">&lt;code&gt;FOREGROUND&lt;/code&gt; 和 &lt;code&gt;BACKGROUND&lt;/code&gt; 使用 &lt;code&gt;Paint&lt;/code&gt; 值。子类 &lt;code&gt;Color&lt;/code&gt; 是可序列化的，而 &lt;code&gt;GradientPaint&lt;/code&gt; 和 &lt;code&gt;TexturePaint&lt;/code&gt; 不是。</target>
        </trans-unit>
        <trans-unit id="e3ab6915a15e18ace8239e0d1239fd06842d0f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to identify fields in formatted output.</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; 是 &lt;code&gt;Format&lt;/code&gt; 及其子类用于在格式化输出中标识字段的简单类。</target>
        </trans-unit>
        <trans-unit id="fda64cbfb2561fa529680eb4dcd35983f4574716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to identify fields in formatted output. Fields can be identified in two ways:</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; 是 &lt;code&gt;Format&lt;/code&gt; 及其子类用于在格式化输出中标识字段的简单类。可以通过两种方式识别字段：</target>
        </trans-unit>
        <trans-unit id="66d8c4e02a9ae1f6d9d57f566aefd6d9839cc41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; keeps track of the position of the field within the formatted output with two indices: the index of the first character of the field and the index of the last character of the field.</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; 使用两个索引跟踪格式化输出中字段的位置：两个字段的第一个字符的索引和一个字段的最后一个字符的索引。</target>
        </trans-unit>
        <trans-unit id="2bb0a06ff0f9e0567e91d312b3f3769ebc3d0845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileFilter&lt;/code&gt; is an abstract class used by &lt;code&gt;JFileChooser&lt;/code&gt; for filtering the set of files shown to the user.</source>
          <target state="translated">&lt;code&gt;FileFilter&lt;/code&gt; 是 &lt;code&gt;JFileChooser&lt;/code&gt; 使用的抽象类，用于过滤显示给用户的文件集。</target>
        </trans-unit>
        <trans-unit id="bd6c31e0bc4c051ed7a19ff8a1acf19468ee3512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileFilter&lt;/code&gt; is an abstract class used by &lt;code&gt;JFileChooser&lt;/code&gt; for filtering the set of files shown to the user. See &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; for an implementation that filters using the file name extension.</source>
          <target state="translated">&lt;code&gt;FileFilter&lt;/code&gt; 是 &lt;code&gt;JFileChooser&lt;/code&gt; 使用的抽象类，用于过滤显示给用户的文件集。有关使用文件扩展名过滤的实现，请参见 &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bda55279bf1395102f4c2fd5b7ba10266002c018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileInputStream&lt;/code&gt; is meant for reading streams of raw bytes such as image data. For reading streams of characters, consider using &lt;code&gt;FileReader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileInputStream&lt;/code&gt; 用于读取原始字节流，例如图像数据。要读取字符流，请考虑使用 &lt;code&gt;FileReader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ada3748517c825d7b93819ccfd538cc1bf08cb90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileOutputStream&lt;/code&gt; is meant for writing streams of raw bytes such as image data. For writing streams of characters, consider using &lt;code&gt;FileWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileOutputStream&lt;/code&gt; 用于写入原始字节流，例如图像数据。要编写字符流，请考虑使用 &lt;code&gt;FileWriter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3b4a87bff782fbf99e63f9b586a9fd6571b5349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileReader&lt;/code&gt; is meant for reading streams of characters. For reading streams of raw bytes, consider using a &lt;code&gt;FileInputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileReader&lt;/code&gt; 用于读取字符流。为了读取原始字节流，请考虑使用 &lt;code&gt;FileInputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac15f3d7a2af52f0935898602d2d48b66b7a0979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileTime&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;Instant&lt;/code&gt;. Conversion from such further time points saturates to &lt;a href=&quot;../../../time/instant#MIN&quot;&gt;&lt;code&gt;Instant.MIN&lt;/code&gt;&lt;/a&gt; if earlier than &lt;code&gt;Instant.MIN&lt;/code&gt; or &lt;a href=&quot;../../../time/instant#MAX&quot;&gt;&lt;code&gt;Instant.MAX&lt;/code&gt;&lt;/a&gt; if later than &lt;code&gt;Instant.MAX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileTime&lt;/code&gt; 可以将时间点存储在时间轴上，而不是 &lt;code&gt;Instant&lt;/code&gt; 。如果早于 &lt;code&gt;Instant.MIN&lt;/code&gt; ，&lt;a href=&quot;../../../time/instant#MAX&quot;&gt; &lt;code&gt;Instant.MAX&lt;/code&gt; &lt;/a&gt;其他时间点转换到&lt;a href=&quot;../../../time/instant#MIN&quot;&gt; &lt;code&gt;Instant.MIN&lt;/code&gt; &lt;/a&gt;，如果晚于 &lt;code&gt;Instant.MAX&lt;/code&gt; ,则转换为Instant.MAX。</target>
        </trans-unit>
        <trans-unit id="ca56c87eb1dc576b27179980fc510da7644e22f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileView&lt;/code&gt; 定义了一个抽象类，可以将其实现为Filechooser提供 &lt;code&gt;File&lt;/code&gt; 的UI信息。</target>
        </trans-unit>
        <trans-unit id="a27524f79276ffe7f2c58d564637073c4b609ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;. Each L&amp;amp;F &lt;code&gt;JFileChooserUI&lt;/code&gt; object implements this class to pass back the correct icons and type descriptions specific to that L&amp;amp;F. For example, the Microsoft Windows L&amp;amp;F returns the generic Windows icons for directories and generic files. Additionally, you may want to provide your own &lt;code&gt;FileView&lt;/code&gt; to &lt;code&gt;JFileChooser&lt;/code&gt; to return different icons or additional information using &lt;a href=&quot;../jfilechooser#setFileView(javax.swing.filechooser.FileView)&quot;&gt;&lt;code&gt;JFileChooser.setFileView(javax.swing.filechooser.FileView)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;FileView&lt;/code&gt; 定义了一个抽象类，可以将其实现为Filechooser提供 &lt;code&gt;File&lt;/code&gt; 的UI信息。每个L＆F &lt;code&gt;JFileChooserUI&lt;/code&gt; 对象都实现该类，以传回正确的图标和特定于该L＆F的类型描述。例如，Microsoft Windows L＆F返回目录和通用文件的通用Windows图标。另外，您可能想使用&lt;a href=&quot;../jfilechooser#setFileView(javax.swing.filechooser.FileView)&quot;&gt; &lt;code&gt;JFileChooser.setFileView(javax.swing.filechooser.FileView)&lt;/code&gt; &lt;/a&gt;向 &lt;code&gt;JFileChooser&lt;/code&gt; 提供自己的 &lt;code&gt;FileView&lt;/code&gt; 来返回不同的图标或其他信息。</target>
        </trans-unit>
        <trans-unit id="a790825a9e717827b75ebf3946247521a25807c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileWriter&lt;/code&gt; is meant for writing streams of characters. For writing streams of raw bytes, consider using a &lt;code&gt;FileOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileWriter&lt;/code&gt; 用于编写字符流。要写入原始字节流，请考虑使用 &lt;code&gt;FileOutputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e9e751657ebec6ebbc76a771274c62f7a59ce8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlavorEvent&lt;/code&gt; is used to notify interested parties that available &lt;a href=&quot;dataflavor&quot;&gt;&lt;code&gt;DataFlavor&lt;/code&gt;&lt;/a&gt;s have changed in the &lt;a href=&quot;clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; (the event source).</source>
          <target state="translated">&lt;code&gt;FlavorEvent&lt;/code&gt; 用于通知感兴趣的方&lt;a href=&quot;clipboard&quot;&gt; &lt;code&gt;Clipboard&lt;/code&gt; &lt;/a&gt;中的可用&lt;a href=&quot;dataflavor&quot;&gt; &lt;code&gt;DataFlavor&lt;/code&gt; &lt;/a&gt;已更改（事件源）。</target>
        </trans-unit>
        <trans-unit id="1436c5ba3e88606e2237f1f1f8ec20d656ec1846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlavorException&lt;/code&gt;. If the document has a flavor not supported by this print job.</source>
          <target state="translated">&lt;code&gt;FlavorException&lt;/code&gt; 。如果文档具有此打印作业不支持的风格。</target>
        </trans-unit>
        <trans-unit id="765e7b336ed61134d2c9e5cd2128f29f7276e436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Float.NaN&lt;/code&gt; 此方法认为Float.NaN等于其自身，并且大于所有其他 &lt;code&gt;float&lt;/code&gt; 值（包括 &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="637ef1470aa27d35e688638b0badff5e9cf0a4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FocusListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; 附加到 &lt;code&gt;JTable&lt;/code&gt; 的FocusListener。</target>
        </trans-unit>
        <trans-unit id="d6a6d3e6a36cc50c4ca6ec901f02a2f3548442f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FocusListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; 附加到 &lt;code&gt;JList&lt;/code&gt; 的FocusListener。</target>
        </trans-unit>
        <trans-unit id="d47124dca2bc4d669a09c09246ac4abaee8ea3ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 此 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 中的字体。</target>
        </trans-unit>
        <trans-unit id="c55f8b6ca0604a6285d7b7b0add2ef888859fdad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. A created font is one that was returned from calling &lt;a href=&quot;font#createFont(int,java.io.InputStream)&quot;&gt;&lt;code&gt;Font.createFont(int, java.io.InputStream)&lt;/code&gt;&lt;/a&gt;, or derived from a created font by calling &lt;a href=&quot;font#deriveFont(int,float)&quot;&gt;&lt;code&gt;Font.deriveFont(int, float)&lt;/code&gt;&lt;/a&gt;. After calling this method for such a font, it is available to be used in constructing new &lt;code&gt;Font&lt;/code&gt;s by name or family name, and is enumerated by &lt;a href=&quot;#getAvailableFontFamilyNames()&quot;&gt;&lt;code&gt;getAvailableFontFamilyNames()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts()&lt;/code&gt;&lt;/a&gt; within the execution context of this application or applet. This means applets cannot register fonts in a way that they are visible to other applets.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 此 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 中的字体。创建的字体是通过调用&lt;a href=&quot;font#createFont(int,java.io.InputStream)&quot;&gt; &lt;code&gt;Font.createFont(int, java.io.InputStream)&lt;/code&gt; &lt;/a&gt;，或者是通过调用&lt;a href=&quot;font#deriveFont(int,float)&quot;&gt; &lt;code&gt;Font.deriveFont(int, float)&lt;/code&gt; &lt;/a&gt;从创建的字体派生的字体。在为这种字体调用此方法之后，可以将其用于按名称或姓氏构造新的 &lt;code&gt;Font&lt;/code&gt; ，并且可以在此应用程序或applet的执行上下文中由&lt;a href=&quot;#getAvailableFontFamilyNames()&quot;&gt; &lt;code&gt;getAvailableFontFamilyNames()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts()&lt;/code&gt; &lt;/a&gt;枚举。这意味着小程序无法以其他小程序可见的方式注册字体。</target>
        </trans-unit>
        <trans-unit id="0e182e216ed621f72714d3893bd0a590ca28b868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; supports most &lt;code&gt;TextAttribute&lt;/code&gt;s. This makes some operations, such as rendering underlined text, convenient since it is not necessary to explicitly construct a &lt;code&gt;TextLayout&lt;/code&gt; object. Attributes can be set on a Font by constructing or deriving it using a &lt;code&gt;Map&lt;/code&gt; of &lt;code&gt;TextAttribute&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 支持大多数 &lt;code&gt;TextAttribute&lt;/code&gt; 。由于不必显式构造 &lt;code&gt;TextLayout&lt;/code&gt; 对象，因此这使某些操作（如呈现带下划线的文本）变得很方便。属性可以对字体通过构建或使用派生它来设置 &lt;code&gt;Map&lt;/code&gt; 的 &lt;code&gt;TextAttribute&lt;/code&gt; 中值。</target>
        </trans-unit>
        <trans-unit id="016ca9568911c6fae35586d06c0d33cf0e9cabf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; used to create this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; 用于创建此 &lt;code&gt;GlyphVector&lt;/code&gt; 的字体。</target>
        </trans-unit>
        <trans-unit id="fd1a90f175dfa8abb6d76861f25d4b4c96620e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="faf7e468c322d805314bfe554b4394cf7eff07eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FontRenderContext&lt;/code&gt; used to create this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FontRenderContext&lt;/code&gt; 用于创建此 &lt;code&gt;GlyphVector&lt;/code&gt; 的FontRenderContext。</target>
        </trans-unit>
        <trans-unit id="6c80c194d85330eba1df1471b0c8a7010ea54635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; defines the programming interface for formatting locale-sensitive objects into &lt;code&gt;String&lt;/code&gt;s (the &lt;code&gt;format&lt;/code&gt; method) and for parsing &lt;code&gt;String&lt;/code&gt;s back into objects (the &lt;code&gt;parseObject&lt;/code&gt; method).</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; 定义了编程接口，用于将对语言环境敏感的对象格式化为 &lt;code&gt;String&lt;/code&gt; （ &lt;code&gt;format&lt;/code&gt; 方法），以及将 &lt;code&gt;String&lt;/code&gt; 解析回对象（ &lt;code&gt;parseObject&lt;/code&gt; 方法）。</target>
        </trans-unit>
        <trans-unit id="c59f9e8d3608aea2b5056402fc29df21518df4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers.</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; 是抽象的基类，用于格式化对区域设置敏感的信息，例如日期，消息和数字。</target>
        </trans-unit>
        <trans-unit id="da7bcc736d2882db7bc7fc0eded36953550dc16e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FractionalSecond&lt;/code&gt; is optional and has a value of &lt;code&gt;null&lt;/code&gt; when it is undefined.</source>
          <target state="translated">&lt;code&gt;FractionalSecond&lt;/code&gt; 是可选的，并且在未定义时其值为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e1ef4f87d3f427db9ce18ec1f8cb30a45e0fe25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Frame.NORMAL&lt;/code&gt; or &lt;code&gt;Frame.ICONIFIED&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Frame.NORMAL&lt;/code&gt; 或 &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe72b97ebf3428cbb8bb5cc6319b3975c4535280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; corresponds to the GET form method</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; 对应于GET表单方法</target>
        </trans-unit>
        <trans-unit id="17ba9144146a6b5a003341c14bd43055be4547f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GcInfo&lt;/code&gt; is a &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; The GC-specific attributes can be obtained via the CompositeData interface. This is a historical relic, and other classes should not copy this pattern. Use &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedataview&quot;&gt;&lt;code&gt;CompositeDataView&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;GcInfo&lt;/code&gt; 是&lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;可以通过CompositeData接口获取特定于GC的属性。这是一个历史遗迹，其他类不应复制此模式。请改用&lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedataview&quot;&gt; &lt;code&gt;CompositeDataView&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c6c9299d58f79aee24fe71d25c4094de847fd5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GcInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;GcInfo&lt;/code&gt; 映射到具有&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中指定的属性的&lt;a href=&quot;../../../../java.management/javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="996bae03ecfe64c70dbcd63440edd88798972644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneralPath&lt;/code&gt; is a legacy final class which exactly implements the behavior of its superclass &lt;a href=&quot;path2d.float&quot;&gt;&lt;code&gt;Path2D.Float&lt;/code&gt;&lt;/a&gt;. Together with &lt;a href=&quot;path2d.double&quot;&gt;&lt;code&gt;Path2D.Double&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt; classes provide full implementations of a general geometric path that support all of the functionality of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interfaces with the ability to explicitly select different levels of internal coordinate precision.</source>
          <target state="translated">&lt;code&gt;GeneralPath&lt;/code&gt; 是一个遗留的最终类，它完全实现其超类&lt;a href=&quot;path2d.float&quot;&gt; &lt;code&gt;Path2D.Float&lt;/code&gt; &lt;/a&gt;的行为。与&lt;a href=&quot;path2d.double&quot;&gt; &lt;code&gt;Path2D.Double&lt;/code&gt; 一起&lt;/a&gt;，&lt;a href=&quot;path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt;类提供了通用几何路径的完整实现，该几何路径支持&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;接口的所有功能，并能够显式选择不同级别的内部坐标精度。</target>
        </trans-unit>
        <trans-unit id="b1f322f9576a1567586923394a42f31058e731d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GenericArrayType&lt;/code&gt; represents an array type whose component type is either a parameterized type or a type variable.</source>
          <target state="translated">&lt;code&gt;GenericArrayType&lt;/code&gt; 表示一种数组类型，其组件类型为参数化类型或类型变量。</target>
        </trans-unit>
        <trans-unit id="2bb4eb7ff6a8be3c5843cac4ed24136d23fe97c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsConfiguration&lt;/code&gt; is the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt; on which the drag gesture for the current drag operation was recognized. If the cursor location is outside the bounds of the initiator &lt;code&gt;GraphicsConfiguration&lt;/code&gt;, the reported coordinates are clipped to fit within the bounds of that &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; 是在其上识别出当前拖动操作的拖动手势的 &lt;code&gt;Component&lt;/code&gt; 的 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 。如果光标位置在启动器 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的边界之外，则报告的坐标将被裁剪以适合该 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的边界。</target>
        </trans-unit>
        <trans-unit id="7c6b825eade96f846f628d2d3d18fa928a0567eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsConfiguration&lt;/code&gt;. The</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; 。这</target>
        </trans-unit>
        <trans-unit id="5d2b1320d4ccb976126c9779aa03486dbf1dcf13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsDevice&lt;/code&gt; corresponding to the pointer</source>
          <target state="translated">&lt;code&gt;GraphicsDevice&lt;/code&gt; 对应的指针</target>
        </trans-unit>
        <trans-unit id="ea6114ac0b5bca275d6c5f44233cbba34c6c7f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; implements &lt;em&gt;proleptic&lt;/em&gt; Gregorian and Julian calendars. That is, dates are computed by extrapolating the current rules indefinitely far backward and forward in time. As a result, &lt;code&gt;GregorianCalendar&lt;/code&gt; may be used for all years to generate meaningful and consistent results. However, dates obtained using &lt;code&gt;GregorianCalendar&lt;/code&gt; are historically accurate only from March 1, 4 AD onward, when modern Julian calendar rules were adopted. Before this date, leap year rules were applied irregularly, and before 45 BC the Julian calendar did not even exist.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 的工具&lt;em&gt;proleptic&lt;/em&gt;格里高利历和罗马儒略历。也就是说，通过无限期地将当前规则外推到时间来计算日期。结果， &lt;code&gt;GregorianCalendar&lt;/code&gt; 可能会被用于所有年份，以产生有意义且一致的结果。但是，使用 &lt;code&gt;GregorianCalendar&lt;/code&gt; 获取的日期在历史上仅从公元3月1日开始采用现代朱利安日历规则才是准确的。在此日期之前，leap年规则是不定期适用的，并且在公元前45年之前甚至不存在儒略历。</target>
        </trans-unit>
        <trans-unit id="ddf1c29076c0f6197dc9ff1b322c41f015d287a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a concrete subclass of &lt;code&gt;Calendar&lt;/code&gt; and provides the standard calendar system used by most of the world.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 是 &lt;code&gt;Calendar&lt;/code&gt; 的具体子类，并提供世界上大多数国家/地区使用的标准日历系统。</target>
        </trans-unit>
        <trans-unit id="94759b7172a9bedfbb466e01aed3eaebe49b5707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted (October 15, 1582 in some countries, later in others). The cutover date may be changed by the caller by calling &lt;a href=&quot;#setGregorianChange(java.util.Date)&quot;&gt;&lt;code&gt;setGregorianChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 是一个混合日历，在单个不连续性的支持下支持儒略历和公历系统，默认情况下，它与建立公历的公历日期相对应（在某些国家/地区，1582年10月15日，在以后的其他国家）。调用者可以通过调用&lt;a href=&quot;#setGregorianChange(java.util.Date)&quot;&gt; &lt;code&gt;setGregorianChange()&lt;/code&gt; &lt;/a&gt;来更改转换日期。</target>
        </trans-unit>
        <trans-unit id="1088c8f0e4b9e54f2b41f4e0f3a6ea2cf397c790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted (October 15, 1582 in some countries, later in others). The cutover date may be changed by the caller by calling &lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt;&lt;code&gt;setGregorianChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; 是一种混合日历，在单个不连续性的支持下同时支持Julian和Gregorian日历系统，默认情况下，该日历对应于设置了Gregorian日历的公历日期（在某些国家中为1582年10月15日，在其他国家中为稍后）。调用者可以通过调用&lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt; &lt;code&gt;setGregorianChange()&lt;/code&gt; &lt;/a&gt;来更改转换日期。</target>
        </trans-unit>
        <trans-unit id="8ba962651252d77c200e1e3da4e48691cc3b0985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GridBagConstraints.CENTER&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;GridBagConstraints.CENTER&lt;/code&gt; （默认值）</target>
        </trans-unit>
        <trans-unit id="6ecb6ad7b3fcfb423b1672c87862145fa073880d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; provides the basis for the two types of operations supported by &lt;code&gt;GroupLayout&lt;/code&gt;: laying out components one after another (&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt;&lt;code&gt;SequentialGroup&lt;/code&gt;&lt;/a&gt;) or aligned (&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt;&lt;code&gt;ParallelGroup&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; 为 &lt;code&gt;GroupLayout&lt;/code&gt; 支持的两种类型的操作提供了基础：一个接一个地布置组件（&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt; &lt;code&gt;SequentialGroup&lt;/code&gt; &lt;/a&gt;）或对齐的组件（&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt; &lt;code&gt;ParallelGroup&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="50204599fc141672bb54402eb7e28e56f6669dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; provides the basis for the two types of operations supported by &lt;code&gt;GroupLayout&lt;/code&gt;: laying out components one after another (&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt;&lt;code&gt;SequentialGroup&lt;/code&gt;&lt;/a&gt;) or aligned (&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt;&lt;code&gt;ParallelGroup&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;Group&lt;/code&gt; and its subclasses have no public constructor; to create one use one of &lt;code&gt;createSequentialGroup&lt;/code&gt; or &lt;code&gt;createParallelGroup&lt;/code&gt;. Additionally, taking a &lt;code&gt;Group&lt;/code&gt; created from one &lt;code&gt;GroupLayout&lt;/code&gt; and using it with another will produce undefined results.</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; 为 &lt;code&gt;GroupLayout&lt;/code&gt; 支持的两种类型的操作提供了基础：一个接一个地布置组件（&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt; &lt;code&gt;SequentialGroup&lt;/code&gt; &lt;/a&gt;）或对齐的组件（&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt; &lt;code&gt;ParallelGroup&lt;/code&gt; &lt;/a&gt;）。 &lt;code&gt;Group&lt;/code&gt; 及其子类没有公共构造函数；要创建一个，请使用 &lt;code&gt;createSequentialGroup&lt;/code&gt; 或 &lt;code&gt;createParallelGroup&lt;/code&gt; 之一。此外，采用从一个 &lt;code&gt;GroupLayout&lt;/code&gt; 创建的 &lt;code&gt;Group&lt;/code&gt; 并将其与另一个GroupLayout结合使用会产生不确定的结果。</target>
        </trans-unit>
        <trans-unit id="9e775e94c1a699fe7db608341bec9a1f3129432e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; is a &lt;code&gt;LayoutManager&lt;/code&gt; that hierarchically groups components in order to position them in a &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 是一个 &lt;code&gt;LayoutManager&lt;/code&gt; ，它对组件进行分层分组，以便将它们放置在 &lt;code&gt;Container&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="fdf4c2ce3f17a0487e172b88a4d5e60ea53dd2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; is a &lt;code&gt;LayoutManager&lt;/code&gt; that hierarchically groups components in order to position them in a &lt;code&gt;Container&lt;/code&gt;. &lt;code&gt;GroupLayout&lt;/code&gt; is intended for use by builders, but may be hand-coded as well. Grouping is done by instances of the &lt;a href=&quot;grouplayout.group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; class. &lt;code&gt;
 GroupLayout&lt;/code&gt; supports two types of groups. A sequential group positions its child elements sequentially, one after another. A parallel group aligns its child elements in one of four ways.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 是一个 &lt;code&gt;LayoutManager&lt;/code&gt; ，它对组件进行分层分组，以便将它们放置在 &lt;code&gt;Container&lt;/code&gt; 中。 &lt;code&gt;GroupLayout&lt;/code&gt; 供构建者使用，但也可以手工编码。分组是通过&lt;a href=&quot;grouplayout.group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;类的实例完成的。 &lt;code&gt; GroupLayout&lt;/code&gt; 支持两种类型的组。一个顺序组将其子元素一个接一个地顺序放置。并行组以四种方式之一对齐其子元素。</target>
        </trans-unit>
        <trans-unit id="20d65a6d452d2a3e66918629b47cff47f0769242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; provides the ability to insert gaps between &lt;code&gt;Component&lt;/code&gt;s. The size of the gap is determined by an instance of &lt;code&gt;LayoutStyle&lt;/code&gt;. This may be turned on using the &lt;code&gt;setAutoCreateGaps&lt;/code&gt; method. Similarly, you may use the &lt;code&gt;setAutoCreateContainerGaps&lt;/code&gt; method to insert gaps between components that touch the edge of the parent container and the container.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 提供了在 &lt;code&gt;Component&lt;/code&gt; 之间插入间隙的功能。间隙的大小由 &lt;code&gt;LayoutStyle&lt;/code&gt; 的实例确定。可以使用 &lt;code&gt;setAutoCreateGaps&lt;/code&gt; 方法将其打开。同样，可以使用 &lt;code&gt;setAutoCreateContainerGaps&lt;/code&gt; 方法在接触父容器边缘和容器边缘的组件之间插入间隙。</target>
        </trans-unit>
        <trans-unit id="6c1a79c6653641b512b3d9cda866565bd88bb68b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; treats each axis independently. That is, there is a group representing the horizontal axis, and a group representing the vertical axis. The horizontal group is responsible for determining the minimum, preferred and maximum size along the horizontal axis as well as setting the x and width of the components contained in it. The vertical group is responsible for determining the minimum, preferred and maximum size along the vertical axis as well as setting the y and height of the components contained in it. Each &lt;code&gt;Component&lt;/code&gt; must exist in both a horizontal and vertical group, otherwise an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown during layout, or when the minimum, preferred or maximum size is requested.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; 独立对待每个轴。即，存在代表水平轴的组和代表垂直轴的组。水平组负责确定沿水平轴的最小，首选和最大尺寸，并设置其中包含的组件的x和宽度。垂直组负责确定沿垂直轴的最小，首选和最大尺寸，并设置其中包含的组件的y和高度。每个 &lt;code&gt;Component&lt;/code&gt; 必须同时存在于水平和垂直组中，否则在布局期间或请求最小，首选或最大大小时会抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="124830507ddf0d5eaaf2e64ea8d09214f1e187ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;H&lt;/code&gt; - the height of the &lt;code&gt;Rectangle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;H&lt;/code&gt; - &lt;code&gt;Rectangle&lt;/code&gt; 的高度</target>
        </trans-unit>
        <trans-unit id="6b4cbca4d3fe15fb7b895c66b2086d15751c5231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 43,200 (12 hours).</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -返回具有指定的半天数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;乘以43,200（12小时）。</target>
        </trans-unit>
        <trans-unit id="0cc8134ab443eb4f429cd4a13865ed0f4eba41dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;#plusHours(long)&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 12.</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与加半天指定的号码。这等于&lt;a href=&quot;#plusHours(long)&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt;乘以12。</target>
        </trans-unit>
        <trans-unit id="7ef2428e099a376ff0ca3d4874d88d3ddab5836e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;localtime#plusHours-long-&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 12.</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与加半天指定的号码。这等于&lt;a href=&quot;localtime#plusHours-long-&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt;乘以12。</target>
        </trans-unit>
        <trans-unit id="a9fa6e6639a74cbd80c4a4878a027b64dee7ec3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 43,200 (12 hours).</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -返回具有指定的半天数的 &lt;code&gt;Instant&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;，其数量乘以43,200（12小时）。</target>
        </trans-unit>
        <trans-unit id="d2e683184741e9a320e1b093390059b153e3f19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide the dialog after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; （在 &lt;code&gt;WindowConstants&lt;/code&gt; 中定义）：调用任何已注册的 &lt;code&gt;WindowListener&lt;/code&gt; 对象后，自动隐藏对话框。</target>
        </trans-unit>
        <trans-unit id="93523687d5449333476d93cc59ef735ec73959d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide the frame after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; （在 &lt;code&gt;WindowConstants&lt;/code&gt; 中定义）：调用任何已注册的 &lt;code&gt;WindowListener&lt;/code&gt; 对象后，自动隐藏框架。</target>
        </trans-unit>
        <trans-unit id="17a0b849b2586a2cb52e8c4c77b8bfa0e24007e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HORIZONTAL&lt;/code&gt; or &lt;code&gt;VERTICAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HORIZONTAL&lt;/code&gt; 或 &lt;code&gt;VERTICAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4b90ce04e423e60422a73e763cd652a64042621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HORIZONTAL&lt;/code&gt;: Make the component wide enough to fill its display area horizontally, but do not change its height.</source>
          <target state="translated">&lt;code&gt;HORIZONTAL&lt;/code&gt; ：使组件足够宽，可以水平填充其显示区域，但不要更改其高度。</target>
        </trans-unit>
        <trans-unit id="85016515254065489b3026630c065fccdcc5686d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 3,600.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -返回具有指定小时数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;乘以3600。</target>
        </trans-unit>
        <trans-unit id="8c33c5e3931c0a4918502f136f81dfe78bbec516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;#plusHours(long)&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -返回具有指定小时数的 &lt;code&gt;LocalTime&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusHours(long)&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="948c34d01c92eee1bb29cc183a83d9babdf61038" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;localtime#plusHours-long-&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -返回具有指定小时数的 &lt;code&gt;LocalTime&lt;/code&gt; 。这等效于&lt;a href=&quot;localtime#plusHours-long-&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1e780e1f7265bff9ccb184801153876c8f30ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 3,600.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -返回具有指定小时数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;乘以3600。</target>
        </trans-unit>
        <trans-unit id="20d6de7da97fd2ce2eae7be6b1f905d5e1e4b3e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour-of-am-pm. The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定小时的-AM-PM。AM / PM，分钟，分钟和纳秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="3448c8c6d8cbdb203548ac51e774b574ad6b7b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOUR_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour-of-day. The minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;HOUR_OF_DAY&lt;/code&gt; -返回具有指定时间的 &lt;code&gt;LocalTime&lt;/code&gt; 。分钟，分钟和毫微秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="480fbc78f1f24a847a4c4c2362a1bafca7902cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLEditorKit.createDefaultDocument&lt;/code&gt; will set the parser for you. If you create an &lt;code&gt;HTMLDocument&lt;/code&gt; by hand, be sure and set the parser accordingly.</source>
          <target state="translated">&lt;code&gt;HTMLEditorKit.createDefaultDocument&lt;/code&gt; 将为您设置解析器。如果您手动创建 &lt;code&gt;HTMLDocument&lt;/code&gt; ，请确保并相应地设置解析器。</target>
        </trans-unit>
        <trans-unit id="526a609bbcca3d331e1ea8860b3c31e279e64830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; classes typically use &lt;code&gt;LogManager&lt;/code&gt; properties to set default values for the &lt;code&gt;Handler&lt;/code&gt;'s &lt;code&gt;Filter&lt;/code&gt;, &lt;code&gt;Formatter&lt;/code&gt;, and &lt;code&gt;Level&lt;/code&gt;. See the specific documentation for each concrete &lt;code&gt;Handler&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; 类通常使用 &lt;code&gt;LogManager&lt;/code&gt; 属性为 &lt;code&gt;Handler&lt;/code&gt; 的 &lt;code&gt;Filter&lt;/code&gt; ， &lt;code&gt;Formatter&lt;/code&gt; 和 &lt;code&gt;Level&lt;/code&gt; 设置默认值。请参阅每个具体 &lt;code&gt;Handler&lt;/code&gt; 类的特定文档。</target>
        </trans-unit>
        <trans-unit id="0288ba468f1edff8e8fe620576d0b70f8b4719e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; that buffers requests in a circular buffer in memory.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; 在内存中的循环缓冲区中缓冲请求的处理程序。</target>
        </trans-unit>
        <trans-unit id="00da1c453b813694b52e9c716cf92707d2e80b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpHeaders&lt;/code&gt; instances are immutable.</source>
          <target state="translated">&lt;code&gt;HttpHeaders&lt;/code&gt; 实例是不可变的。</target>
        </trans-unit>
        <trans-unit id="b5ea1b6135a1ffc196e6540fb72c78084aef39a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpsURLConnection&lt;/code&gt; extends &lt;code&gt;HttpURLConnection&lt;/code&gt; with support for https-specific features.</source>
          <target state="translated">&lt;code&gt;HttpsURLConnection&lt;/code&gt; 扩展了 &lt;code&gt;HttpURLConnection&lt;/code&gt; ,并支持https特定的功能。</target>
        </trans-unit>
        <trans-unit id="2452fdf7156c7cd9635cca800bbfd27507d77463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the identifier supplied to the filter</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; -提供给过滤器的标识符</target>
        </trans-unit>
        <trans-unit id="9ef05e31546ec0abd8f05f33d98fb7788f04dfc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the type of the identifier passed to the &lt;code&gt;RowFilter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; -传递给 &lt;code&gt;RowFilter&lt;/code&gt; 的标识符的类型</target>
        </trans-unit>
        <trans-unit id="7c3ccb6c442ddb7dd1d1f76da061d832e9b51fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the type of the identifier; when using &lt;code&gt;TableRowSorter&lt;/code&gt; this will be &lt;code&gt;Integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; -标识符的类型；当使用 &lt;code&gt;TableRowSorter&lt;/code&gt; 时,它将是 &lt;code&gt;Integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5f317e9f8e734ae7b9f5316144e757140022c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - The time zone ID which is given to this object.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -赋予该对象的时区ID。</target>
        </trans-unit>
        <trans-unit id="cb8f2d905964f73467653a60cf68edb92903c568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - The time zone name that is given to this instance.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -赋予该实例的时区名称。</target>
        </trans-unit>
        <trans-unit id="aad7b55de5995caef3f57461e861f0dc2be533d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - a time zone ID string</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -时区ID字符串</target>
        </trans-unit>
        <trans-unit id="bc9ff596b1493ada8f15a4e1e11e83aa035a46cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - the ID for a &lt;code&gt;TimeZone&lt;/code&gt;, either an abbreviation such as &quot;PST&quot;, a full name such as &quot;America/Los_Angeles&quot;, or a custom ID such as &quot;GMT-8:00&quot;. Note that the support of abbreviations is for JDK 1.1.x compatibility only and full names should be used.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -标识为一个 &lt;code&gt;TimeZone&lt;/code&gt; ，要么的缩写如&amp;ldquo;PST&amp;rdquo;，一个完整的名称，如&amp;ldquo;美国/洛杉矶&amp;rdquo;，或自定义ID，如&amp;ldquo;GMT-8：00&amp;rdquo;。请注意，缩写的支持仅出于JDK 1.1.x兼容性的考虑，应使用全名。</target>
        </trans-unit>
        <trans-unit id="409a85e3b5f09d277a588807ed62379b0d76d23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - the new time zone ID.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -新的时区ID。</target>
        </trans-unit>
        <trans-unit id="16f10c877b65167347c059317cd08215c8aa74c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; if the image is incompatible with the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; object passed into the &lt;code&gt;validate&lt;/code&gt; method. Incompatibility implies that the image may need to be recreated with a new &lt;code&gt;Component&lt;/code&gt; or &lt;code&gt;GraphicsConfiguration&lt;/code&gt; in order to get an image that can be used successfully with this &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. An incompatible image is not checked for whether restoration was necessary, so the state of the image is unchanged after a return value of &lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; and this return value implies nothing about whether the image needs to be restored.</source>
          <target state="translated">&lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; ,如果图像与传递给 &lt;code&gt;validate&lt;/code&gt; 方法的 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 对象不兼容。不兼容意味着可能需要使用新的 &lt;code&gt;Component&lt;/code&gt; 或 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 重新创建图像，以便获得可以与此 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 一起成功使用的图像。不检查不兼容的映像是否需要恢复，因此在返回值 &lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; 之后，映像的状态保持不变，并且此返回值不表示是否需要恢复映像。</target>
        </trans-unit>
        <trans-unit id="6660b9f0d0673107d7714fa4a6cd596ab34629dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_OK&lt;/code&gt; if the image did not need validation</source>
          <target state="translated">&lt;code&gt;IMAGE_OK&lt;/code&gt; ,如果图像不需要验证</target>
        </trans-unit>
        <trans-unit id="ad8dcff493a0d3c16cd0bcf850a908d009b28fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_RESTORED&lt;/code&gt; if the image needed restoration. Restoration implies that the contents of the image may have been affected and the image may need to be re-rendered.</source>
          <target state="translated">&lt;code&gt;IMAGE_RESTORED&lt;/code&gt; 如果图像需要还原。恢复意味着图像的内容可能已经受到影响，并且可能需要重新渲染图像。</target>
        </trans-unit>
        <trans-unit id="f4ffc8e36f8525f7d84e5118df9edbe7b47ef074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level: usually used to log information messages.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; 级别：通常用于记录信息消息。</target>
        </trans-unit>
        <trans-unit id="68db4d44c771cfe646a6742d3f28ccff5850b97e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level: usually used to log information messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;800&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; 级别：通常用于记录信息消息。此级别的&lt;a href=&quot;#getSeverity()&quot;&gt;严重性&lt;/a&gt;为 &lt;code&gt;800&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb8286c60bf174dbf1a52ff17c347bca85989b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INNER_JOIN&lt;/code&gt; - the default if no &lt;code&gt;JOIN&lt;/code&gt; type has been set</source>
          <target state="translated">&lt;code&gt;INNER_JOIN&lt;/code&gt; -如果未设置 &lt;code&gt;JOIN&lt;/code&gt; 类型，则为默认值</target>
        </trans-unit>
        <trans-unit id="86b463a184732abf0f41437ba4a0ba319aca0952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INPUT_METHOD_HIGHLIGHT&lt;/code&gt; uses &lt;code&gt;InputMethodHighlight&lt;/code&gt; values, which are not serializable. See &lt;a href=&quot;im/inputmethodhighlight&quot;&gt;&lt;code&gt;InputMethodHighlight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INPUT_METHOD_HIGHLIGHT&lt;/code&gt; 使用 &lt;code&gt;InputMethodHighlight&lt;/code&gt; 值，这些值不可序列化。请参见&lt;a href=&quot;im/inputmethodhighlight&quot;&gt; &lt;code&gt;InputMethodHighlight&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ef7b28e4d3d9f4f9a99b95a87e7a125737ba1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; - one or more rows and/or columns have been inserted</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; -已插入一个或多个行和/或列</target>
        </trans-unit>
        <trans-unit id="82f189e497a0d70871e7ca9aa0d85434a16ccd00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified epoch-second. The nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; -返回具有指定纪元秒的 &lt;code&gt;Instant&lt;/code&gt; 。纳秒级将保持不变。</target>
        </trans-unit>
        <trans-unit id="884650ae4eae993a0ec7a597bcb7a32091aa2c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IV&lt;/code&gt;: Initialization Vector (IV)</source>
          <target state="translated">&lt;code&gt;IV&lt;/code&gt; ：初始化向量（IV）</target>
        </trans-unit>
        <trans-unit id="f163789351aa87e3a08da7731a7e414640753e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 抛出</target>
        </trans-unit>
        <trans-unit id="d31eb4cde08c0ee9263bd6229c87968680e5983f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the input buffer is not in valid Base64 encoding scheme. The position of the input buffer will not be advanced in this case.</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 如果输入缓冲区不在有效的Base64编码方案中，则抛出IllegalArgumentException。在这种情况下，输入缓冲区的位置将不会前进。</target>
        </trans-unit>
        <trans-unit id="80a441081531d8a599e712331cd27d79118676af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown if any of the following restrictions is violated:</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 如果违反以下任何限制，则将抛出IllegalArgumentException：</target>
        </trans-unit>
        <trans-unit id="25a6dbceb7c32563fdcbbfb1abdda8b839413452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt; objects are normally instantiated by the service provider interface (SPI) class for the specific format. Service provider classes (e.g., instances of &lt;code&gt;ImageReaderSpi&lt;/code&gt;) are registered with the &lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition and presentation of available format readers and writers.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 对象通常由服务提供商接口（SPI）类针对特定格式实例化。服务提供商类（例如 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 的实例）已向 &lt;code&gt;IIORegistry&lt;/code&gt; 注册，后者使用它们进行格式识别和可用格式读取器和写入器的呈现。</target>
        </trans-unit>
        <trans-unit id="ef33e288b67701c24a861558997dcb7853df94a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt;s that do not support setting of the source render size may ignore this value.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 不支持源渲染大小设置的ImageReader可能会忽略此值。</target>
        </trans-unit>
        <trans-unit id="b500dbb0f638633f0db3963336fdbdc9e2e308fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt;s that do not support setting of the source render size should set this value to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 不支持源渲染大小设置的ImageReader应该将此值设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="406cefd978145765934d99c7349bccdd08a9b643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageWriter&lt;/code&gt; objects are normally instantiated by the service provider class for the specific format. Service provider classes are registered with the &lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition and presentation of available format readers and writers.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 对象通常由服务提供程序类针对特定格式实例化。服务提供者类是通过 &lt;code&gt;IIORegistry&lt;/code&gt; 注册的，该类将它们用于格式识别和可用格式读取器和写入器的表示。</target>
        </trans-unit>
        <trans-unit id="277ebc8be481476d23f2184b1e893031fb8d8040" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImportSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;ImportSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="3e28c1473fed9c9f42e3c3710f6b4c36dab3863e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputMap&lt;/code&gt; provides a binding between an input event (currently only &lt;code&gt;KeyStroke&lt;/code&gt;s are used) and an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputMap&lt;/code&gt; 提供了输入事件（当前仅使用 &lt;code&gt;KeyStroke&lt;/code&gt; ）和 &lt;code&gt;Object&lt;/code&gt; 之间的绑定。</target>
        </trans-unit>
        <trans-unit id="0186cbf4fdcc81e96895ac727fd24d21b1e9f6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputMap&lt;/code&gt; provides a binding between an input event (currently only &lt;code&gt;KeyStroke&lt;/code&gt;s are used) and an &lt;code&gt;Object&lt;/code&gt;. &lt;code&gt;InputMap&lt;/code&gt;s are usually used with an &lt;code&gt;ActionMap&lt;/code&gt;, to determine an &lt;code&gt;Action&lt;/code&gt; to perform when a key is pressed. An &lt;code&gt;InputMap&lt;/code&gt; can have a parent that is searched for bindings not defined in the &lt;code&gt;InputMap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputMap&lt;/code&gt; 提供了输入事件（当前仅使用 &lt;code&gt;KeyStroke&lt;/code&gt; ）和 &lt;code&gt;Object&lt;/code&gt; 之间的绑定。 &lt;code&gt;InputMap&lt;/code&gt; 通常与 &lt;code&gt;ActionMap&lt;/code&gt; 一起使用，以确定按下键时要执行的 &lt;code&gt;Action&lt;/code&gt; 。一个 &lt;code&gt;InputMap&lt;/code&gt; 中可以有中搜索在没有定义绑定父母 &lt;code&gt;InputMap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b3e52db9842641fd18ff547c88682ba9942c744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputStream&lt;/code&gt; through which the partial &lt;code&gt;Blob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 可以读取部分 &lt;code&gt;Blob&lt;/code&gt; 值的InputStream。</target>
        </trans-unit>
        <trans-unit id="c009719418adcf7d42aea467fa64571c4800bf89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;Date&lt;/code&gt;. In this scenario, this method will throw an exception.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 可以将 &lt;code&gt;Date&lt;/code&gt; 和日期存储在时间轴上更远的将来。在这种情况下，此方法将引发异常。</target>
        </trans-unit>
        <trans-unit id="aa134bd1f75399bc7781fff961870a9b2e8b870b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; is the closest equivalent class to &lt;code&gt;java.util.Date&lt;/code&gt;. &lt;code&gt;ZonedDateTime&lt;/code&gt; is the closest equivalent class to &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 是最接近 &lt;code&gt;java.util.Date&lt;/code&gt; 的等效类。 &lt;code&gt;ZonedDateTime&lt;/code&gt; 是最接近 &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; 的等效类。</target>
        </trans-unit>
        <trans-unit id="d10b3c5ea0c355cfcf9354f410a7fac28f94deb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 返回 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="489a3cc302b61344308b8cf9e6d8de209a02be72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="ad42bbc428fc6f915c39ece2daa07897b692dd17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 返回null（不代表日期）</target>
        </trans-unit>
        <trans-unit id="00d7da128e9dcb0029aa870ecbf560f510800458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; uses a precision of nanoseconds, whereas &lt;code&gt;Date&lt;/code&gt; uses a precision of milliseconds. The conversion will trancate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 使用毫秒级的精度，而 &lt;code&gt;Date&lt;/code&gt; 使用毫秒级的精度。该转换将转换任何多余的精度信息，就好像纳秒的数量要被整数除以一百万。</target>
        </trans-unit>
        <trans-unit id="22947d123c87ac99fabaa692c24d7d62800431c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; uses a precision of nanoseconds, whereas &lt;code&gt;Date&lt;/code&gt; uses a precision of milliseconds. The conversion will truncate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; 使用毫秒级的精度，而 &lt;code&gt;Date&lt;/code&gt; 使用毫秒级的精度。该转换将截断所有多余的精度信息，就好像纳秒的数量要被整数除以一百万。</target>
        </trans-unit>
        <trans-unit id="96984a798524fb70da361b9d15f265e505e95265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;IntStream.iterate&lt;/code&gt; 应该产生与相应的for循环相同的元素序列：</target>
        </trans-unit>
        <trans-unit id="b673966989262dc2de450a295e652501c6dde358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;IntSummaryStatistics&lt;/code&gt; 可用作&lt;a href=&quot;stream/stream&quot;&gt;流&lt;/a&gt;的&lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;缩减&lt;/a&gt;目标。例如：</target>
        </trans-unit>
        <trans-unit id="efbdc2e5ab1a95f4c01cced9efaa42caed4e921e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;IntSummaryStatistics&lt;/code&gt; 可用作&lt;a href=&quot;stream/stream&quot;&gt;流&lt;/a&gt;的&lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;缩减&lt;/a&gt;目标。例如：</target>
        </trans-unit>
        <trans-unit id="de04aa860f9254de370b5655f9592aa115418acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; (as specified by &lt;a href=&quot;blockingqueue#remainingCapacity()&quot;&gt;&lt;code&gt;BlockingQueue.remainingCapacity()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; （由&lt;a href=&quot;blockingqueue#remainingCapacity()&quot;&gt; &lt;code&gt;BlockingQueue.remainingCapacity()&lt;/code&gt; &lt;/a&gt;指定）</target>
        </trans-unit>
        <trans-unit id="f10e22b7d65a6887a91fb513ed9582789f93c402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; (as specified by &lt;a href=&quot;blockingqueue#remainingCapacity--&quot;&gt;&lt;code&gt;BlockingQueue.remainingCapacity&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; （由&lt;a href=&quot;blockingqueue#remainingCapacity--&quot;&gt; &lt;code&gt;BlockingQueue.remainingCapacity&lt;/code&gt; &lt;/a&gt;指定）</target>
        </trans-unit>
        <trans-unit id="be7bfaf45f65c0824f09169bae91b3496ffef726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; always</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 始终为Integer.MAX_VALUE</target>
        </trans-unit>
        <trans-unit id="f6e79cfcede6096bb5c0298312c9592495399732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; ， &lt;code&gt;Boolean&lt;/code&gt; 等</target>
        </trans-unit>
        <trans-unit id="6338c153f250ef81745f3004fb310a7288d787b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;ObjectName&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; ， &lt;code&gt;ObjectName&lt;/code&gt; 等</target>
        </trans-unit>
        <trans-unit id="3331529aaf6e845963846c592f00ed0bac7ed32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt; extends &lt;code&gt;DefaultFormatter&lt;/code&gt;, using an instance of &lt;code&gt;java.text.Format&lt;/code&gt; to handle the conversion to a String, and the conversion from a String.</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; 使用 &lt;code&gt;java.text.Format&lt;/code&gt; 的实例扩展 &lt;code&gt;DefaultFormatter&lt;/code&gt; ，以处理到字符串的转换以及从字符串的转换。</target>
        </trans-unit>
        <trans-unit id="2cc2d8ab1140f9ecdd79ce4beabb6c81c987179d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt; implements &lt;code&gt;stringToValue&lt;/code&gt; in this manner so that you can specify an alternate Class than &lt;code&gt;Format&lt;/code&gt; may return.</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; 以这种方式实现 &lt;code&gt;stringToValue&lt;/code&gt; ，以便您可以指定替代 &lt;code&gt;Format&lt;/code&gt; 可能返回的类。</target>
        </trans-unit>
        <trans-unit id="ee137fae54c4cea8b2088f0ef6457821116103c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt;'s behavior of &lt;code&gt;stringToValue&lt;/code&gt; is slightly different than that of &lt;code&gt;DefaultTextFormatter&lt;/code&gt;, it does the following:</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; 的 &lt;code&gt;stringToValue&lt;/code&gt; 行为与 &lt;code&gt;DefaultTextFormatter&lt;/code&gt; 略有不同，它执行以下操作：</target>
        </trans-unit>
        <trans-unit id="5ef7409c4b47ce43d825d9e4094126501b146adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvocationHandler&lt;/code&gt; is the interface implemented by the</source>
          <target state="translated">&lt;code&gt;InvocationHandler&lt;/code&gt; 是由</target>
        </trans-unit>
        <trans-unit id="c527833daa9300953a05dbfdf160201cc738ca5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IsoEra&lt;/code&gt; is an enum representing the ISO eras of BCE/CE. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;IsoEra&lt;/code&gt; 是代表BCE / CE的ISO时代的枚举。该工厂允许从 &lt;code&gt;int&lt;/code&gt; 值获取枚举。</target>
        </trans-unit>
        <trans-unit id="879476c65678c7bca891731cffd2e531f1ed33d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; for all prefixes bound to the Namespace URI in the current scope</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 当前范围中绑定到命名空间URI的所有前缀的迭代器</target>
        </trans-unit>
        <trans-unit id="45e87b228485535623057c3224f04fb14268a993" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; over prefixes bound to Namespace URI in the current scope in an arbitrary, &lt;strong&gt;implementation dependent&lt;/strong&gt;, order</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 在当前范围内以任意，&lt;strong&gt;取决于实现的&lt;/strong&gt;顺序绑定到命名空间URI的前缀上的迭代器</target>
        </trans-unit>
        <trans-unit id="f62ff1974b6b3148df0f420949fb5e19be43636a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; with one element set to &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; (&quot;xmlns&quot;)</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 一个元素设置为 &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; （&amp;ldquo; xmlns&amp;rdquo;）的迭代器</target>
        </trans-unit>
        <trans-unit id="35c64831e809bb3406e92be705b3932c30cffb0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; with one element set to &lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; (&quot;xml&quot;)</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 一个元素设置为 &lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; （&amp;ldquo; xml&amp;rdquo;）的迭代器</target>
        </trans-unit>
        <trans-unit id="106cf98e5df497b025ce3a9503ba79a90aa2401f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; 提供了一个旨在允许用户操纵和选择颜色的控件窗格。</target>
        </trans-unit>
        <trans-unit id="44ed52d5ff3e19fad4ae9d8d23aea7ab427f9fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color. For information about using color choosers, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; 提供了一个旨在允许用户操纵和选择颜色的控件窗格。有关使用颜色选择器的信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;如何使用颜色选择器&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7bf290706ec1413102c365ec34e0374bd40744f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color. For information about using color choosers, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; 提供了一个旨在允许用户操纵和选择颜色的控件窗格。有关使用颜色选择器的信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;如何使用颜色选择器&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7603bfdccd10a6ab059f029c69fbea275bdf2c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JComponent&lt;/code&gt; and its subclasses document default values for certain properties. For example, &lt;code&gt;JTable&lt;/code&gt; documents the default row height as 16. Each &lt;code&gt;JComponent&lt;/code&gt; subclass that has a &lt;code&gt;ComponentUI&lt;/code&gt; will create the &lt;code&gt;ComponentUI&lt;/code&gt; as part of its constructor. In order to provide a particular look and feel each &lt;code&gt;ComponentUI&lt;/code&gt; may set properties back on the &lt;code&gt;JComponent&lt;/code&gt; that created it. For example, a custom look and feel may require &lt;code&gt;JTable&lt;/code&gt;s to have a row height of 24. The documented defaults are the value of a property BEFORE the &lt;code&gt;ComponentUI&lt;/code&gt; has been installed. If you need a specific value for a particular property you should explicitly set it.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 及其子类记录了某些属性的默认值。例如， &lt;code&gt;JTable&lt;/code&gt; 记录默认行高为16。每个具有 &lt;code&gt;ComponentUI&lt;/code&gt; 的 &lt;code&gt;JComponent&lt;/code&gt; 子类都将创建 &lt;code&gt;ComponentUI&lt;/code&gt; 作为其构造函数的一部分。为了提供特定的外观，每个 &lt;code&gt;ComponentUI&lt;/code&gt; 都可以在创建它的 &lt;code&gt;JComponent&lt;/code&gt; 上设置属性。例如，自定义外观可能要求 &lt;code&gt;JTable&lt;/code&gt; 的行高为24。记录的默认值是 &lt;code&gt;ComponentUI&lt;/code&gt; 之前的属性值。已安装。如果您需要特定属性的特定值，则应显式设置它。</target>
        </trans-unit>
        <trans-unit id="a527e2994de1518dc31e3334f491619cf306117f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JComponent&lt;/code&gt; subclasses that need to be painted when any of their children are repainted should override this method to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 重绘其子级时需要绘制的JComponent子类应重写此方法以返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="beded7b134b029e3666b8d9a4b8619013141607b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JConsoleContext&lt;/code&gt; notifies any &lt;code&gt;PropertyChangeListeners&lt;/code&gt; about the &lt;a href=&quot;#CONNECTION_STATE_PROPERTY&quot;&gt;&lt;i&gt;ConnectionState&lt;/i&gt;&lt;/a&gt; property change to &lt;a href=&quot;jconsolecontext.connectionstate#CONNECTED&quot;&gt;&lt;code&gt;CONNECTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jconsolecontext.connectionstate#DISCONNECTED&quot;&gt;&lt;code&gt;DISCONNECTED&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;JConsoleContext&lt;/code&gt; instance will be the source for any generated events.</source>
          <target state="translated">&lt;code&gt;JConsoleContext&lt;/code&gt; 通知有关&lt;a href=&quot;#CONNECTION_STATE_PROPERTY&quot;&gt;&lt;i&gt;ConnectionState&lt;/i&gt;&lt;/a&gt;属性更改为&lt;a href=&quot;jconsolecontext.connectionstate#CONNECTED&quot;&gt; &lt;code&gt;CONNECTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;jconsolecontext.connectionstate#DISCONNECTED&quot;&gt; &lt;code&gt;DISCONNECTED&lt;/code&gt; 的&lt;/a&gt;所有 &lt;code&gt;PropertyChangeListeners&lt;/code&gt; 。该 &lt;code&gt;JConsoleContext&lt;/code&gt; 实例将成为所有已生成事件的来源。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="175416413d4fb9620990f0d5c050f80ea101c2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JConsoleContext&lt;/code&gt; represents a JConsole connection to a target application.</source>
          <target state="translated">&lt;code&gt;JConsoleContext&lt;/code&gt; 表示与目标应用程序的JConsole连接。</target>
        </trans-unit>
        <trans-unit id="2b3868bc233636db4d38d59db5b2035c838c1fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; first looks to see if there is a user defined &lt;code&gt;FileView&lt;/code&gt;, if there is, it gets type information from there first. If &lt;code&gt;FileView&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; for any method, &lt;code&gt;JFileChooser&lt;/code&gt; then uses the L&amp;amp;F specific view to get the information. So, for example, if you provide a &lt;code&gt;FileView&lt;/code&gt; class that returns an &lt;code&gt;Icon&lt;/code&gt; for JPG files, and returns &lt;code&gt;null&lt;/code&gt; icons for all other files, the UI's &lt;code&gt;FileView&lt;/code&gt; will provide default icons for all other files.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 首先查看是否有用户定义的 &lt;code&gt;FileView&lt;/code&gt; ，如果存在，它将首先从那里获取类型信息。如果 &lt;code&gt;FileView&lt;/code&gt; 对于任何方法都返回 &lt;code&gt;null&lt;/code&gt; ，则 &lt;code&gt;JFileChooser&lt;/code&gt; 使用L＆F特定的视图来获取信息。因此，例如，如果您提供一个 &lt;code&gt;FileView&lt;/code&gt; 类，该类返回JPG文件的 &lt;code&gt;Icon&lt;/code&gt; ，并为所有其他文件返回 &lt;code&gt;null&lt;/code&gt; 图标，则UI的 &lt;code&gt;FileView&lt;/code&gt; 将为所有其他文件提供默认图标。</target>
        </trans-unit>
        <trans-unit id="7ee79c41dfcf6f92948da9c9fbf9bcee6a9a7899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 为用户提供了一种选择文件的简单机制。</target>
        </trans-unit>
        <trans-unit id="b1ae99fbe784b42aa7527beb889b91d151661956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file. For information about using &lt;code&gt;JFileChooser&lt;/code&gt;, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 为用户提供了一种选择文件的简单机制。有关使用 &lt;code&gt;JFileChooser&lt;/code&gt; 的信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;如何使用文件选择器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="530ca5b5720340f9c60906130c2b84f4178fb4e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file. For information about using &lt;code&gt;JFileChooser&lt;/code&gt;, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 为用户提供了一种选择文件的简单机制。有关使用 &lt;code&gt;JFileChooser&lt;/code&gt; 的信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;如何使用文件选择器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a1fb51de2ad213046ddadd20440cb91ad363752a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; is also responsible for determining when values are committed to the &lt;code&gt;JFormattedTextField&lt;/code&gt;. Some &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s will make new values available on every edit, and others will never commit the value. You can force the current value to be obtained from the current &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; by way of invoking &lt;code&gt;commitEdit&lt;/code&gt;. &lt;code&gt;commitEdit&lt;/code&gt; will be invoked whenever return is pressed in the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 还负责确定何时将值提交给 &lt;code&gt;JFormattedTextField&lt;/code&gt; 。一些 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 会在每次编辑中提供新值，而其他J将从不会提交该值。您可以通过调用 &lt;code&gt;commitEdit&lt;/code&gt; 强制从当前 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 获取当前值。只要在 &lt;code&gt;JFormattedTextField&lt;/code&gt; 中按回车键，就会调用 &lt;code&gt;commitEdit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92b55cf9238083c742347f07fe26e5831d2d0895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; allows configuring what action should be taken when focus is lost. The possible configurations are:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 允许配置失去焦点时应采取的措施。可能的配置是：</target>
        </trans-unit>
        <trans-unit id="f3e143dafd7434c7bd687b6669c51fbaad5815a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; allows the focus to leave, even if the currently edited value is invalid. To lock the focus down while the &lt;code&gt;JFormattedTextField&lt;/code&gt; is an invalid edit state you can attach an &lt;code&gt;InputVerifier&lt;/code&gt;. The following code snippet shows a potential implementation of such an &lt;code&gt;InputVerifier&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 允许焦点离开，即使当前编辑的值无效。要在 &lt;code&gt;JFormattedTextField&lt;/code&gt; 是无效的编辑状态时锁定焦点，可以附加 &lt;code&gt;InputVerifier&lt;/code&gt; 。以下代码段显示了此类 &lt;code&gt;InputVerifier&lt;/code&gt; 的潜在实现：</target>
        </trans-unit>
        <trans-unit id="49cbb6148263e7269a076333a72993b96f8cf566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; does not do the formatting it self, rather formatting is done through an instance of &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; which is obtained from an instance of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;. Instances of &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; are notified when they become active by way of the &lt;code&gt;install&lt;/code&gt; method, at which point the &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; can install whatever it needs to, typically a &lt;code&gt;DocumentFilter&lt;/code&gt;. Similarly when &lt;code&gt;JFormattedTextField&lt;/code&gt; no longer needs the &lt;code&gt;AbstractFormatter&lt;/code&gt;, it will invoke &lt;code&gt;uninstall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 上没有做格式化自我，而格式化通过一个实例进行 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 供是从实例获得 &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; 。 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 的实例在通过 &lt;code&gt;install&lt;/code&gt; 方法变为活动状态时会得到通知，此时 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 可以安装所需的任何内容，通常是 &lt;code&gt;DocumentFilter&lt;/code&gt; 。同样，当 &lt;code&gt;JFormattedTextField&lt;/code&gt; 不再需要 &lt;code&gt;AbstractFormatter&lt;/code&gt; 时，它将调用 &lt;code&gt;uninstall&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5eebc1724a3b2ed75af911e5e4fb2942c7a5ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 扩展了 &lt;code&gt;JTextField&lt;/code&gt; ,添加了对格式化任意值以及在用户编辑文本后检索特定对象的支持。</target>
        </trans-unit>
        <trans-unit id="2d33f62b99f836614b3345ef6242a567c59b4336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text. The following illustrates configuring a &lt;code&gt;JFormattedTextField&lt;/code&gt; to edit dates:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 扩展了 &lt;code&gt;JTextField&lt;/code&gt; ,添加了对格式化任意值以及在用户编辑文本后检索特定对象的支持。下面说明了如何配置 &lt;code&gt;JFormattedTextField&lt;/code&gt; 来编辑日期：</target>
        </trans-unit>
        <trans-unit id="8de2c393530108fb48973a702fbfb63cf8eadec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; typically queries the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; for an &lt;code&gt;AbstractFormat&lt;/code&gt; when it gains or loses focus. Although this can change based on the focus lost policy. If the focus lost policy is &lt;code&gt;JFormattedTextField.PERSIST&lt;/code&gt; and the &lt;code&gt;JFormattedTextField&lt;/code&gt; has been edited, the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; will not be queried until the value has been committed. Similarly if the focus lost policy is &lt;code&gt;JFormattedTextField.COMMIT&lt;/code&gt; and an exception is thrown from &lt;code&gt;stringToValue&lt;/code&gt;, the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; will not be queried when focus is lost or gained.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; 通常查询 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 一个 &lt;code&gt;AbstractFormat&lt;/code&gt; 在它获得或失去焦点。尽管这可能会因失去焦点而改变策略。如果焦点丢失策略是 &lt;code&gt;JFormattedTextField.PERSIST&lt;/code&gt; ,并且已经编辑了 &lt;code&gt;JFormattedTextField&lt;/code&gt; ，则在提交值之前将不查询 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 。同样，如果焦点丢失策略是 &lt;code&gt;JFormattedTextField.COMMIT&lt;/code&gt; ,并且从 &lt;code&gt;stringToValue&lt;/code&gt; 抛出异常，则丢失或获得焦点时将不会查询 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4825a454e1efc9ea32e8b5998d0d0a25051f9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; delegates the handling of painting and input events to a &lt;a href=&quot;plaf/layerui&quot;&gt;&lt;code&gt;LayerUI&lt;/code&gt;&lt;/a&gt; object, which performs the actual decoration.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 将绘画和输入事件的处理委托给&lt;a href=&quot;plaf/layerui&quot;&gt; &lt;code&gt;LayerUI&lt;/code&gt; &lt;/a&gt;对象，该对象执行实际的装饰。</target>
        </trans-unit>
        <trans-unit id="5658d1fc91ec90d609cf7e545fccb07006a043d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; is a good solution if you only need to do custom painting over compound component or catch input events from its subcomponents.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 如果只需要对复合组件进行自定义绘制或从其子组件捕获输入事件，则JLayer是一个很好的解决方案。</target>
        </trans-unit>
        <trans-unit id="1cfa5807b40e968fb11105f6d8e9d30ae6521ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; is a universal decorator for Swing components which enables you to implement various advanced painting effects as well as receive notifications of all &lt;code&gt;AWTEvent&lt;/code&gt;s generated within its borders.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; 是Swing组件的通用装饰器，它使您能够实现各种高级绘画效果以及接收在其边界内生成的所有 &lt;code&gt;AWTEvent&lt;/code&gt; 的通知。</target>
        </trans-unit>
        <trans-unit id="dae3e634d4e19647cd61699bb22003d2a8179264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 为JFC / Swing容器增加了深度，允许组件在需要时彼此重叠。</target>
        </trans-unit>
        <trans-unit id="485c8639befdb7591dd512dac093f4a950d4120a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed. An &lt;code&gt;Integer&lt;/code&gt; object specifies each component's depth in the container, where higher-numbered components sit &quot;on top&quot; of other components. For task-oriented documentation and examples of using layered panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 为JFC / Swing容器增加了深度，允许组件在需要时彼此重叠。一个 &lt;code&gt;Integer&lt;/code&gt; 对象指定容器中每个组件的深度，其中编号较高的组件位于其他组件的&amp;ldquo;顶部&amp;rdquo;。有关面向任务的文档和使用分层窗格的示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;如何使用分层窗格&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98e02eaf0193391b2bde17935fc29631d593e7df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed. An &lt;code&gt;Integer&lt;/code&gt; object specifies each component's depth in the container, where higher-numbered components sit &quot;on top&quot; of other components. For task-oriented documentation and examples of using layered panes see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 为JFC / Swing容器增加了深度，允许组件在需要时彼此重叠。一个 &lt;code&gt;Integer&lt;/code&gt; 对象指定容器中每个组件的深度，其中编号较高的组件位于其他组件的&amp;ldquo;顶部&amp;rdquo;。有关面向任务的文档和使用分层窗格的示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;如何使用分层窗格&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96ed1919ccda17cbb871a15b03f600f1f6ee7af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; manages its list of children like &lt;code&gt;Container&lt;/code&gt;, but allows for the definition of a several layers within itself. Children in the same layer are managed exactly like the normal &lt;code&gt;Container&lt;/code&gt; object, with the added feature that when children components overlap, children in higher layers display above the children in lower layers.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; 管理其子级列表（例如 &lt;code&gt;Container&lt;/code&gt; )，但允许在其内部定义几层。在同一层中的子项的管理与普通的 &lt;code&gt;Container&lt;/code&gt; 对象完全相同，其附加功能是，当子项组件重叠时，较高层的子项显示在较低层的子项上方。</target>
        </trans-unit>
        <trans-unit id="a0bda5d0bd1b60d17cd7346425b4c3c8cc93f71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; doesn't implement scrolling directly. To create a list that scrolls, make it the viewport view of a &lt;code&gt;JScrollPane&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 并不直接实现滚动。要创建滚动列表，请使其成为 &lt;code&gt;JScrollPane&lt;/code&gt; 的视口视图。例如：</target>
        </trans-unit>
        <trans-unit id="55f8e3b4df354ba954f8b7f55a2e805688f37c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; doesn't provide any special handling of double or triple (or N) mouse clicks, but it's easy to add a &lt;code&gt;MouseListener&lt;/code&gt; if you wish to take action on these events. Use the &lt;code&gt;locationToIndex&lt;/code&gt; method to determine what cell was clicked. For example:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 没有提供两次或三次（或N次）鼠标单击的任何特殊处理，但是如果您希望对这些事件采取行动，则很容易添加 &lt;code&gt;MouseListener&lt;/code&gt; 。使用 &lt;code&gt;locationToIndex&lt;/code&gt; 方法确定单击了哪个单元格。例如：</target>
        </trans-unit>
        <trans-unit id="7cfe7bb2790141c82b668eaf1d38714fbf5f2b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 支持以下删除模式：</target>
        </trans-unit>
        <trans-unit id="51dfeb4e7cb7476d93f7a530d56e5f4c66f1c567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="59a2b620c313da2a435b69a817319b85d4467e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 使您可以轻松地弹出一个标准对话框，提示用户输入值或通知用户某些信息。</target>
        </trans-unit>
        <trans-unit id="58d29c83736d46256bcd531f94d98c7e14761eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using &lt;code&gt;JOptionPane&lt;/code&gt;, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 使您可以轻松地弹出一个标准对话框，提示用户输入值或通知用户某些信息。有关使用 &lt;code&gt;JOptionPane&lt;/code&gt; 的信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;如何制作对话框&amp;rdquo;&lt;/a&gt;部分。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="517f34b62e406f30bbcc9b4ce0bcfb2c7ca50c1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using &lt;code&gt;JOptionPane&lt;/code&gt;, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 使您可以轻松地弹出一个标准对话框，提示用户输入值或通知用户某些信息。有关使用 &lt;code&gt;JOptionPane&lt;/code&gt; 的信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;如何制作对话框&amp;rdquo;&lt;/a&gt;部分。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eab64e6a5c9c3c5957a4e4b76257f9fce08caca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; that the receiver is providing the look and feel for.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 接收器为其提供外观的JOptionPane。</target>
        </trans-unit>
        <trans-unit id="ff37d16ae6ac2004a4f2c3929c33004527e7c2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 是一个通用的轻量级容器。</target>
        </trans-unit>
        <trans-unit id="548b97d7ce70cdd68abfeb12617a4fd40d41b06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container. For examples and task-oriented documentation for JPanel, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 是一个通用的轻量级容器。有关JPanel的示例和面向任务的文档，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;如何使用面板&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1b772636804cc2f255b361a1e4328c8d02d0fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container. For examples and task-oriented documentation for JPanel, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; 是一个通用的轻量级容器。有关JPanel的示例和面向任务的文档，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;如何使用面板&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b61171be88dd8f716c3c9e99aa55c5538537364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters.</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 是一个轻量级的组件，它允许编辑单行文本，其中视图指示键入了某些内容，但不显示原始字符。</target>
        </trans-unit>
        <trans-unit id="77b9076cae2e4c91e7983362180178af747ed236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters. You can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 是一个轻量级的组件，它允许编辑单行文本，其中视图指示键入了某些内容，但不显示原始字符。您可以在&lt;em&gt;The Java Tutorial&lt;/em&gt;中的&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields中&lt;/a&gt;找到更多信息和示例&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a71bbcbb0f2fdb870588421fd53186a350fac0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters. You can find further information and examples in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 是一个轻量级的组件，它允许编辑单行文本，其中视图指示键入了某些内容，但不显示原始字符。您可以在&lt;em&gt;The Java Tutorial&lt;/em&gt;中的&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields中&lt;/a&gt;找到更多信息和示例&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07e3e9fdc1a796b9d8877250e87aba14bba4a8f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is intended to be source-compatible with &lt;code&gt;java.awt.TextField&lt;/code&gt; used with &lt;code&gt;echoChar&lt;/code&gt; set. It is provided separately to make it easier to safely change the UI for the &lt;code&gt;JTextField&lt;/code&gt; without affecting password entries.</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; 旨在与与 &lt;code&gt;echoChar&lt;/code&gt; 设置一起使用的 &lt;code&gt;java.awt.TextField&lt;/code&gt; 源兼容。它是单独提供的，以使在不影响密码输入的情况下更轻松地安全地更改 &lt;code&gt;JTextField&lt;/code&gt; 的UI 。</target>
        </trans-unit>
        <trans-unit id="52712d3a5ca640a791f1ccbf642d9b8b84ead558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPopupMenu&lt;/code&gt; assigned for this component or &lt;code&gt;null&lt;/code&gt; if no popup assigned</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; 为此组件分配了JPopupMenu；如果未分配弹出窗口，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f45e4a6129beaab4110a8b85afa60ba9ebebfa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPopupMenu&lt;/code&gt;, &lt;code&gt;JToolBar&lt;/code&gt; and &lt;code&gt;JMenu&lt;/code&gt; all provide convenience methods for creating a component and setting the &lt;code&gt;Action&lt;/code&gt; on the corresponding component. Refer to each of these classes for more information.</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; ， &lt;code&gt;JToolBar&lt;/code&gt; 和 &lt;code&gt;JMenu&lt;/code&gt; 都提供了方便的方法来创建组件并在相应的组件上设置 &lt;code&gt;Action&lt;/code&gt; 。有关更多信息，请参考这些类中的每一个。</target>
        </trans-unit>
        <trans-unit id="799fa21b1eda4fc60a9187dd4e770fca16b103e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JProgressBar&lt;/code&gt; uses a &lt;code&gt;BoundedRangeModel&lt;/code&gt; as its data model, with the &lt;code&gt;value&lt;/code&gt; property representing the &quot;current&quot; state of the task, and the &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; properties representing the beginning and end points, respectively.</source>
          <target state="translated">&lt;code&gt;JProgressBar&lt;/code&gt; 使用 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 作为其数据模型，其中 &lt;code&gt;value&lt;/code&gt; 属性代表任务的&amp;ldquo;当前&amp;rdquo;状态， &lt;code&gt;minimum&lt;/code&gt; 属性和 &lt;code&gt;maximum&lt;/code&gt; 属性分别代表起点和终点。</target>
        </trans-unit>
        <trans-unit id="1b516a434f9f3ef95f9f9e851378e62a62eae793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSeparator&lt;/code&gt; provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings.</source>
          <target state="translated">&lt;code&gt;JSeparator&lt;/code&gt; 提供了用于实现分隔线的通用组件-最常用作菜单项之间的分隔线，将其分解为逻辑分组。</target>
        </trans-unit>
        <trans-unit id="b36fd04b0fc62f41cd7781d0f17d099e4e59b249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSeparator&lt;/code&gt; provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings. Instead of using &lt;code&gt;JSeparator&lt;/code&gt; directly, you can use the &lt;code&gt;JMenu&lt;/code&gt; or &lt;code&gt;JPopupMenu&lt;/code&gt;&lt;code&gt;addSeparator&lt;/code&gt; method to create and add a separator. &lt;code&gt;JSeparator&lt;/code&gt;s may also be used elsewhere in a GUI wherever a visual divider is useful.</source>
          <target state="translated">&lt;code&gt;JSeparator&lt;/code&gt; 提供了用于实现分隔线的通用组件-最常用作菜单项之间的分隔线，将其分解为逻辑分组。可以直接使用 &lt;code&gt;JMenu&lt;/code&gt; 或 &lt;code&gt;JPopupMenu&lt;/code&gt; &lt;code&gt;addSeparator&lt;/code&gt; 方法来创建和添加分隔符，而不是直接使用 &lt;code&gt;JSeparator&lt;/code&gt; 。 &lt;code&gt;JSeparator&lt;/code&gt; 也可以在可视分隔符有用的GUI的其他地方使用。</target>
        </trans-unit>
        <trans-unit id="c6db90e53a9985e0f7adf31f2ddc167a0cde83a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSpinner&lt;/code&gt; ancestor; &lt;code&gt;null&lt;/code&gt; if none of the ancestors are a &lt;code&gt;JSpinner&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JSpinner&lt;/code&gt; 的祖先；如果所有祖先都不是 &lt;code&gt;JSpinner&lt;/code&gt; ，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5ce35029df4d40232dfb701b71813f555e739ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; 用于划分两个（只有两个） &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86b77964cdd1e61da5138c190a52bc82fc0bb927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s. The two &lt;code&gt;Component&lt;/code&gt;s are graphically divided based on the look and feel implementation, and the two &lt;code&gt;Component&lt;/code&gt;s can then be interactively resized by the user. Information on using &lt;code&gt;JSplitPane&lt;/code&gt; is in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;How to Use Split Panes&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; 用于划分两个（只有两个） &lt;code&gt;Component&lt;/code&gt; 。根据外观实现，将两个 &lt;code&gt;Component&lt;/code&gt; 进行图形划分，然后用户可以交互地调整两个 &lt;code&gt;Component&lt;/code&gt; 的大小。有关使用 &lt;code&gt;JSplitPane&lt;/code&gt; 的信息&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;，请&lt;/a&gt;参见&lt;em&gt;Java教程&lt;/em&gt;中的如何使用拆分窗格。</target>
        </trans-unit>
        <trans-unit id="62ae7bd215cf3af44bf44c20a29f3df0bbb2513c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s. The two &lt;code&gt;Component&lt;/code&gt;s are graphically divided based on the look and feel implementation, and the two &lt;code&gt;Component&lt;/code&gt;s can then be interactively resized by the user. Information on using &lt;code&gt;JSplitPane&lt;/code&gt; is in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;How to Use Split Panes&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; 用于划分两个（只有两个） &lt;code&gt;Component&lt;/code&gt; 。根据外观实现，将两个 &lt;code&gt;Component&lt;/code&gt; 进行图形划分，然后用户可以交互地调整两个 &lt;code&gt;Component&lt;/code&gt; 的大小。有关使用 &lt;code&gt;JSplitPane&lt;/code&gt; 的信息&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;，请&lt;/a&gt;参见&lt;em&gt;Java教程&lt;/em&gt;中的如何使用拆分窗格。</target>
        </trans-unit>
        <trans-unit id="b5de9a5fc81e16d6dc5f31c98411c11523cecfda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 支持以下删除模式：</target>
        </trans-unit>
        <trans-unit id="7606fe914e7d81929dfff4717fa95f2b0ed10207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt;'s row-based methods and &lt;code&gt;JTable&lt;/code&gt;'s selection model refer to the view and not the underlying model. Therefore, it is necessary to convert between the two. For example, to get the selection in terms of &lt;code&gt;myModel&lt;/code&gt; you need to convert the indices:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 的基于行的方法和 &lt;code&gt;JTable&lt;/code&gt; 的选择模型引用视图，而不引用基础模型。因此，有必要在两者之间进行转换。例如，要获得基于 &lt;code&gt;myModel&lt;/code&gt; 的选择，您需要转换索引：</target>
        </trans-unit>
        <trans-unit id="caa017b6686d727916808a78c96c6ef105c58db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt;s are typically placed inside of a &lt;code&gt;JScrollPane&lt;/code&gt;. By default, a &lt;code&gt;JTable&lt;/code&gt; will adjust its width such that a horizontal scrollbar is unnecessary. To allow for a horizontal scrollbar, invoke &lt;a href=&quot;#setAutoResizeMode(int)&quot;&gt;&lt;code&gt;setAutoResizeMode(int)&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;AUTO_RESIZE_OFF&lt;/code&gt;. Note that if you wish to use a &lt;code&gt;JTable&lt;/code&gt; in a standalone view (outside of a &lt;code&gt;JScrollPane&lt;/code&gt;) and want the header displayed, you can get it using &lt;a href=&quot;#getTableHeader()&quot;&gt;&lt;code&gt;getTableHeader()&lt;/code&gt;&lt;/a&gt; and display it separately.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 通常放置在 &lt;code&gt;JScrollPane&lt;/code&gt; 内部。默认情况下， &lt;code&gt;JTable&lt;/code&gt; 将调整其宽度，从而不需要水平滚动条。要允许水平滚动条，请使用 &lt;code&gt;AUTO_RESIZE_OFF&lt;/code&gt; 调用&lt;a href=&quot;#setAutoResizeMode(int)&quot;&gt; &lt;code&gt;setAutoResizeMode(int)&lt;/code&gt; &lt;/a&gt;。请注意，如果希望在独立视图中（在 &lt;code&gt;JScrollPane&lt;/code&gt; 之外）使用 &lt;code&gt;JTable&lt;/code&gt; 并希望显示标头，则可以使用&lt;a href=&quot;#getTableHeader()&quot;&gt; &lt;code&gt;getTableHeader()&lt;/code&gt; &lt;/a&gt;获取它并单独显示它。</target>
        </trans-unit>
        <trans-unit id="6eb8d9d3cb483a6a13db69f01e132ddaa6a891d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components.</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; 是摆动文本组件的基类。</target>
        </trans-unit>
        <trans-unit id="dcc1b5f2bf4b9f1ea87c929136493fea70e539f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components. It tries to be compatible with the &lt;code&gt;java.awt.TextComponent&lt;/code&gt; class where it can reasonably do so. Also provided are other services for additional flexibility (beyond the pluggable UI and bean support). You can find information on how to use the functionality this class provides in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;General Rules for Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; 是摆动文本组件的基类。它尝试与 &lt;code&gt;java.awt.TextComponent&lt;/code&gt; 类进行兼容，以使其可以合理地做到这一点。还提供了其他服务，以提供更大的灵活性（除了可插入的UI和Bean支持之外）。您可以在&lt;em&gt;《 Java教程&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;》的&amp;ldquo;使用文本组件的一般规则&amp;rdquo;&lt;/a&gt;部分中找到有关如何使用此类提供的功能的信息&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="558992402a772c9da63b96fc28d64b179dc5cd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components. It tries to be compatible with the &lt;code&gt;java.awt.TextComponent&lt;/code&gt; class where it can reasonably do so. Also provided are other services for additional flexibility (beyond the pluggable UI and bean support). You can find information on how to use the functionality this class provides in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;General Rules for Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; 是摆动文本组件的基类。它尝试与 &lt;code&gt;java.awt.TextComponent&lt;/code&gt; 类进行兼容，以使其可以合理地做到这一点。还提供了其他服务，以提供更大的灵活性（除了可插入的UI和Bean支持之外）。您可以在&lt;em&gt;《 Java教程&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;》的&amp;ldquo;使用文本组件的一般规则&amp;rdquo;&lt;/a&gt;部分中找到有关如何使用此类提供的功能的信息&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd86112155bd8ab808f845dfa0e7719361f3dc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponents&lt;/code&gt; support the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTextComponents&lt;/code&gt; 支持以下放置模式：</target>
        </trans-unit>
        <trans-unit id="249c5f2b33a773ceea4a522fc3384cbe691d233b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; has a method to establish the string used as the command string for the action event that gets fired. The &lt;code&gt;java.awt.TextField&lt;/code&gt; used the text of the field as the command string for the &lt;code&gt;ActionEvent&lt;/code&gt;. &lt;code&gt;JTextField&lt;/code&gt; will use the command string set with the &lt;code&gt;setActionCommand&lt;/code&gt; method if not &lt;code&gt;null&lt;/code&gt;, otherwise it will use the text of the field as a compatibility with &lt;code&gt;java.awt.TextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 具有一种方法来建立用作触发的动作事件的命令字符串的字符串。该 &lt;code&gt;java.awt.TextField&lt;/code&gt; 中使用的字段的文本作为命令字符串 &lt;code&gt;ActionEvent&lt;/code&gt; 。 &lt;code&gt;JTextField&lt;/code&gt; 将使用通过 &lt;code&gt;setActionCommand&lt;/code&gt; 方法设置的命令字符串（如果不为 &lt;code&gt;null&lt;/code&gt; 的话)，否则它将使用字段的文本作为与 &lt;code&gt;java.awt.TextField&lt;/code&gt; 的兼容性。</target>
        </trans-unit>
        <trans-unit id="93e9584291de7455790b0357847da0fc1f817f51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 是一个轻量级的组件，允许编辑一行文本。</target>
        </trans-unit>
        <trans-unit id="4a1fd03bab5db3521fa449bc489afcc01fcd4373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text. For information on and examples of using text fields, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 是一个轻量级的组件，允许编辑一行文本。有关使用文本字段的信息和示例，请参见&lt;em&gt;《 Java教程&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;》&lt;/a&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;如何使用文本字段&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad6775b979fc65774f73982613d2b24793985249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text. For information on and examples of using text fields, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 是一个轻量级的组件，允许编辑一行文本。有关使用文本字段的信息和示例，请参见&lt;em&gt;《 Java教程&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;》&lt;/a&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;如何使用文本字段&lt;em&gt;&amp;rdquo;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db2d5b2fc957016529f40c6da6e79efca4096132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is intended to be source-compatible with &lt;code&gt;java.awt.TextField&lt;/code&gt; where it is reasonable to do so. This component has capabilities not found in the &lt;code&gt;java.awt.TextField&lt;/code&gt; class. The superclass should be consulted for additional capabilities.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 旨在与 &lt;code&gt;java.awt.TextField&lt;/code&gt; 源兼容，只要这样做是合理的。该组件具有 &lt;code&gt;java.awt.TextField&lt;/code&gt; 类中未找到的功能。应该咨询超类以获得更多功能。</target>
        </trans-unit>
        <trans-unit id="d2ce0cf272ba250797b53f3787838f87c19684f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToggleButton&lt;/code&gt;, &lt;code&gt;JCheckBox&lt;/code&gt;, &lt;code&gt;JRadioButton&lt;/code&gt;, &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; and &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JToggleButton&lt;/code&gt; ， &lt;code&gt;JCheckBox&lt;/code&gt; ， &lt;code&gt;JRadioButton&lt;/code&gt; ， &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; 和 &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a94ee21261936d748fb093ab1194f83ce8644c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 提供了一个组件，可用于显示常用的 &lt;code&gt;Action&lt;/code&gt; 或控件。</target>
        </trans-unit>
        <trans-unit id="f25c6d0f33277a31cc5cec0601adad51e336ea85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls. For examples and information on using tool bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 提供了一个组件，可用于显示常用的 &lt;code&gt;Action&lt;/code&gt; 或控件。有关使用工具栏的示例和信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;如何使用工具栏&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0fd31c2f0610bd665ec08d55068c7bea206d545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls. For examples and information on using tool bars see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 提供了一个组件，可用于显示常用的 &lt;code&gt;Action&lt;/code&gt; 或控件。有关使用工具栏的示例和信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;如何使用工具栏&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="545f76a44333f3ce6627c792c6823f554ec44b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; and its related classes make extensive use of &lt;code&gt;TreePath&lt;/code&gt;s for identifying nodes in the &lt;code&gt;TreeModel&lt;/code&gt;. If a &lt;code&gt;TreeModel&lt;/code&gt; returns the same object, as compared by &lt;code&gt;equals&lt;/code&gt;, at two different indices under the same parent than the resulting &lt;code&gt;TreePath&lt;/code&gt; objects will be considered equal as well. Some implementations may assume that if two &lt;code&gt;TreePath&lt;/code&gt;s are equal, they identify the same node. If this condition is not met, painting problems and other oddities may result. In other words, if &lt;code&gt;getChild&lt;/code&gt; for a given parent returns the same Object (as determined by &lt;code&gt;equals&lt;/code&gt;) problems may result, and it is recommended you avoid doing this.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 及其相关类广泛使用 &lt;code&gt;TreePath&lt;/code&gt; 来标识 &lt;code&gt;TreeModel&lt;/code&gt; 中的节点。如果 &lt;code&gt;TreeModel&lt;/code&gt; 返回相同的对象（与 &lt;code&gt;equals&lt;/code&gt; 相比），则在同一父对象下的两个不同索引处，生成的 &lt;code&gt;TreePath&lt;/code&gt; 对象也将被视为相等。一些实现可以假设如果两个 &lt;code&gt;TreePath&lt;/code&gt; 相等，则它们标识相同的节点。如果不满足该条件，则可能导致涂漆问题和其他问题。换句话说，如果给定父对象的 &lt;code&gt;getChild&lt;/code&gt; 返回相同的Object（由 &lt;code&gt;equals&lt;/code&gt; 确定），则可能会出现问题，建议您避免这样做。</target>
        </trans-unit>
        <trans-unit id="5c513c289f58d0471f1eaef0e0451185c2d64100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; instance listening too.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 实例也在监听。</target>
        </trans-unit>
        <trans-unit id="1aba9a9e59002555242f73b4a8cda8061b293812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 支持以下放置模式：</target>
        </trans-unit>
        <trans-unit id="707cf5ee063f62698d0be7a76353051f290d8776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JobState&lt;/code&gt; is a printing attribute class, an enumeration, that identifies the current state of a print job.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; 是打印属性类，它是一个枚举，用于标识打印作业的当前状态。</target>
        </trans-unit>
        <trans-unit id="d5d6a5c8a568cb33231bb583a7be5eb643c6308f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JobState&lt;/code&gt; is a printing attribute class, an enumeration, that identifies the current state of a print job. Class &lt;code&gt;JobState&lt;/code&gt; defines standard job state values. A Print Service implementation only needs to report those job states which are appropriate for the particular implementation; it does not have to report every defined job state. The &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute augments the &lt;code&gt;JobState&lt;/code&gt; attribute to give more detailed information about the job in the given job state.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; 是打印属性类，它是一个枚举，用于标识打印作业的当前状态。 &lt;code&gt;JobState&lt;/code&gt; 类定义标准作业状态值。打印服务实施仅需要报告适合于特定实施的那些工作状态；它不必报告每个定义的作业状态。该&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性扩充了 &lt;code&gt;JobState&lt;/code&gt; 属性，以提供有关在给定的工作状态下作业的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="91518f1203fb584c25d36533968bb5bb1afa6652" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;July&lt;/code&gt;; &lt;code&gt;Jul&lt;/code&gt;; &lt;code&gt;07&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;July&lt;/code&gt; ; &lt;code&gt;Jul&lt;/code&gt; ; &lt;code&gt;07&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44cc6d7a6a6f2e0fe1dc06353c2890a74d802d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; type of then map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -映射键的&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;类型</target>
        </trans-unit>
        <trans-unit id="07fc0ca4437a126863a6f1173268bf388ad94d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the &lt;code&gt;Map&lt;/code&gt;'s key type</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -在 &lt;code&gt;Map&lt;/code&gt; 的键类型</target>
        </trans-unit>
        <trans-unit id="52c513e3a95ba55a9158e6d9497540077cdfacb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the class of the map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -地图键的类别</target>
        </trans-unit>
        <trans-unit id="9342a0ae454e755e09dcfcd765e885d49c896320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the element type of the returned set</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -返回集合的元素类型</target>
        </trans-unit>
        <trans-unit id="4b796ac99576adddcb26ba0d79aeb9f52baa9050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the key's type</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -键的类型</target>
        </trans-unit>
        <trans-unit id="326d2bdfabb0c34b57b9174ca11e81b63731848a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the output type of the key mapping function</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -键映射函数的输出类型</target>
        </trans-unit>
        <trans-unit id="e7460ccfe2e406676ace0a64c960bd17443b48e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of keys maintained by this map</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -此地图维护的键的类型</target>
        </trans-unit>
        <trans-unit id="b814f5cc3dc2d8322ab691f546272e3be800cc6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of the keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -键的类型</target>
        </trans-unit>
        <trans-unit id="c311265dbddc5089d39ac2a0212516fbd115348a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of the map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -映射键的类型</target>
        </trans-unit>
        <trans-unit id="9a186af7c485f74dd35835ddff394e6f821c3f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - type of map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -地图键类型</target>
        </trans-unit>
        <trans-unit id="b912d08b4cb540fbad74e69760a53f63a0912b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY_PRESSED&lt;/code&gt; and &lt;code&gt;KEY_RELEASED&lt;/code&gt; events are not intended for reporting of character input. Therefore, the values returned by this method are guaranteed to be meaningful only for &lt;code&gt;KEY_TYPED&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;KEY_PRESSED&lt;/code&gt; 和 &lt;code&gt;KEY_RELEASED&lt;/code&gt; 事件不用于报告字符输入。因此，保证此方法返回的值仅对 &lt;code&gt;KEY_TYPED&lt;/code&gt; 事件有意义。</target>
        </trans-unit>
        <trans-unit id="253cb144964913578f52b727b9d200ca37424dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyEvent.KEY_PRESSED&lt;/code&gt;, &lt;code&gt;KeyEvent.KEY_TYPED&lt;/code&gt;, or &lt;code&gt;KeyEvent.KEY_RELEASED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;KeyEvent.KEY_PRESSED&lt;/code&gt; ， &lt;code&gt;KeyEvent.KEY_TYPED&lt;/code&gt; 或 &lt;code&gt;KeyEvent.KEY_RELEASED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bcdc42d52710ffd469d36294eb5e4dccc14e6fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyInfo&lt;/code&gt; objects can also be marshalled to XML by invoking the &lt;a href=&quot;#marshal(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;KeyInfo&lt;/code&gt; 也可以通过调用&lt;a href=&quot;#marshal(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;方法将KeyInfo对象编组为XML 。</target>
        </trans-unit>
        <trans-unit id="9facf2e0242425ccc01bccf4fb2737bae6062ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyInfoFactory&lt;/code&gt; implementations are registered and loaded using the &lt;a href=&quot;../../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt; mechanism. For example, a service provider that supports the DOM mechanism would be specified in the &lt;code&gt;Provider&lt;/code&gt; subclass as:</source>
          <target state="translated">&lt;code&gt;KeyInfoFactory&lt;/code&gt; 使用&lt;a href=&quot;../../../../../../java.base/java/security/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;机制注册和加载KeyInfoFactory实现。例如，将在 &lt;code&gt;Provider&lt;/code&gt; 子类中将支持DOM机制的服务提供者指定为：</target>
        </trans-unit>
        <trans-unit id="23d62b9ad68e06cba7bf1e4a1c5866c9b7220c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeyListener&lt;/code&gt; 附加到 &lt;code&gt;JTable&lt;/code&gt; 的KeyListener。</target>
        </trans-unit>
        <trans-unit id="31a46f8e065592007c532eb083fa0cbebb0b7cee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyManager&lt;/code&gt;s are created by either using a &lt;code&gt;KeyManagerFactory&lt;/code&gt;, or by implementing one of the &lt;code&gt;KeyManager&lt;/code&gt; subclasses.</source>
          <target state="translated">&lt;code&gt;KeyManager&lt;/code&gt; S被要么使用创建 &lt;code&gt;KeyManagerFactory&lt;/code&gt; ，或者通过实施之一 &lt;code&gt;KeyManager&lt;/code&gt; 子类。</target>
        </trans-unit>
        <trans-unit id="f3ea9ba3304be11cff444bb5e929fefa7efef714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyManager&lt;/code&gt;s are responsible for managing the key material which is used to authenticate the local SSLSocket to its peer. If no key material is available, the socket will be unable to present authentication credentials.</source>
          <target state="translated">&lt;code&gt;KeyManager&lt;/code&gt; 负责管理用于对本地SSLSocket进行身份验证的密钥材料。如果没有可用的密钥材料，则套接字将无法提供身份验证凭据。</target>
        </trans-unit>
        <trans-unit id="717d4a231e62fc113a072100b883d6cdade1d2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt;&lt;em&gt;N&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt;&lt;em&gt;N&lt;/em&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90b936b8bdf424dc6fb197a7392c56332b718d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIGHT&lt;/code&gt; is used for the property &lt;code&gt;Tree.collapsedIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LIGHT&lt;/code&gt; 用于属性 &lt;code&gt;Tree.collapsedIcon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3174e8c9e822c80f9fb583f7f332b80eeb4b400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSInput&lt;/code&gt; objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary).</source>
          <target state="translated">&lt;code&gt;LSInput&lt;/code&gt; 对象属于应用程序。DOM实现永远不会修改它们（尽管它可以制作副本并在必要时修改副本）。</target>
        </trans-unit>
        <trans-unit id="664aaeea2ca3a59c0693f642988bf423fe117b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSOutput.encoding&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;LSOutput.encoding&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="30d4fb0b3b1c8dd2b8a90ee99a83d32d8faa9298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSOutput&lt;/code&gt; objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary).</source>
          <target state="translated">&lt;code&gt;LSOutput&lt;/code&gt; 对象属于应用程序。DOM实现永远不会修改它们（尽管它可以制作副本并在必要时修改副本）。</target>
        </trans-unit>
        <trans-unit id="d41359c88fd70ac492e585d8e251588b90b64e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParser&lt;/code&gt; provides an API for parsing XML and building the corresponding DOM document structure. A &lt;code&gt;LSParser&lt;/code&gt; instance can be obtained by invoking the &lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; 提供了一个API，用于解析XML和构建相应的DOM文档结构。甲 &lt;code&gt;LSParser&lt;/code&gt; 实例可以通过调用能够得到 &lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a8f04b5acbb539ddb9c6081c40f613adc04830ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParserFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being constructed while parsing.</source>
          <target state="translated">&lt;code&gt;LSParserFilter&lt;/code&gt; 为应用程序提供了在解析时检查节点的能力。</target>
        </trans-unit>
        <trans-unit id="3da36f7925cf63f6a47bf4d1542a0c5da40791c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParserFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being constructed while parsing. As each node is examined, it may be modified or removed, or the entire parse may be terminated early.</source>
          <target state="translated">&lt;code&gt;LSParserFilter&lt;/code&gt; 为应用程序提供了在解析时检查节点的能力。在检查每个节点时，可以对其进行修改或删除，或者可以尽早终止整个解析。</target>
        </trans-unit>
        <trans-unit id="6724960f548208794f001d66bd8d40673d635654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSResourceResolver&lt;/code&gt; provides a way for applications to redirect references to external resources.</source>
          <target state="translated">&lt;code&gt;LSResourceResolver&lt;/code&gt; 为应用程序提供了一种将引用重定向到外部资源的方法。</target>
        </trans-unit>
        <trans-unit id="900760c626833d318beceffc058fd647ef15c085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializer&lt;/code&gt; accepts any node type for serialization. For nodes of type &lt;code&gt;Document&lt;/code&gt; or &lt;code&gt;Entity&lt;/code&gt;, well-formed XML will be created when possible (well-formedness is guaranteed if the document or entity comes from a parse operation and is unchanged since it was created). The serialized output for these node types is either as a XML document or an External XML Entity, respectively, and is acceptable input for an XML parser. For all other types of nodes the serialized form is implementation dependent.</source>
          <target state="translated">&lt;code&gt;LSSerializer&lt;/code&gt; 接受任何节点类型进行序列化。对于 &lt;code&gt;Document&lt;/code&gt; 或 &lt;code&gt;Entity&lt;/code&gt; 类型的节点，将在可能的情况下创建格式正确的XML（如果文档或实体来自解析操作并且自创建以来未更改，则可以保证格式正确）。这些节点类型的序列化输出分别是XML文档或外部XML实体，并且是XML解析器可接受的输入。对于所有其他类型的节点，序列化形式取决于实现。</target>
        </trans-unit>
        <trans-unit id="a7acee96b3e5a9c8f50f59ab39fe3ea11280aff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not.</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; 为应用程序提供了在序列化节点时检查节点并决定应序列化与否的节点的能力。</target>
        </trans-unit>
        <trans-unit id="2ad61db5c66abeafc9d06184ecb18aea19821ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not. The &lt;code&gt;LSSerializerFilter&lt;/code&gt; interface is based on the &lt;code&gt;NodeFilter&lt;/code&gt; interface defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; 为应用程序提供了在序列化节点时检查节点并决定应序列化与否的节点的能力。所述 &lt;code&gt;LSSerializerFilter&lt;/code&gt; 接口是基于上 &lt;code&gt;NodeFilter&lt;/code&gt; 在[定义的接口&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;的DOM 2级遍历和范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c30f64c3b389e1bdb13c13f1694e1884b012e8ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not. The &lt;code&gt;LSSerializerFilter&lt;/code&gt; interface is based on the &lt;code&gt;NodeFilter&lt;/code&gt; interface defined in [&lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; 为应用程序提供了在序列化节点时检查节点并决定应序列化与否的节点的能力。所述 &lt;code&gt;LSSerializerFilter&lt;/code&gt; 接口是基于上 &lt;code&gt;NodeFilter&lt;/code&gt; 在[定义的接口&lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;的DOM 2级遍历和范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48c6a27663ab28f7c04836ac7c5e997c089d10b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LabelUI&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;LabelUI&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="ee39e660515ded42a6fbda28547851471b1041ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayoutStyle&lt;/code&gt; provides information about how to position components.</source>
          <target state="translated">&lt;code&gt;LayoutStyle&lt;/code&gt; 提供有关如何放置组件的信息。</target>
        </trans-unit>
        <trans-unit id="83028f700e447cb92db4328157f99769b597b9d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayoutStyle&lt;/code&gt; provides information about how to position components. This class is primarily useful for visual tools and layout managers. Most developers will not need to use this class.</source>
          <target state="translated">&lt;code&gt;LayoutStyle&lt;/code&gt; 提供有关如何放置组件的信息。此类对于可视化工具和布局管理器主要有用。大多数开发人员将不需要使用此类。</target>
        </trans-unit>
        <trans-unit id="975a021496115d6781efed95e7ca1fa7bef79ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyInputMap&lt;/code&gt; will create a &lt;code&gt;InputMap&lt;/code&gt; in its &lt;code&gt;createValue&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LazyInputMap&lt;/code&gt; 将在其 &lt;code&gt;createValue&lt;/code&gt; 方法中创建一个 &lt;code&gt;InputMap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bd063a22a2bed8185d4bb68d4f90396d3ceb7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyInputMap&lt;/code&gt; will create a &lt;code&gt;InputMap&lt;/code&gt; in its &lt;code&gt;createValue&lt;/code&gt; method. The bindings are passed in the constructor. The bindings are an array with the even number entries being string &lt;code&gt;KeyStrokes&lt;/code&gt; (eg &quot;alt SPACE&quot;) and the odd number entries being the value to use in the &lt;code&gt;InputMap&lt;/code&gt; (and the key in the &lt;code&gt;ActionMap&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;LazyInputMap&lt;/code&gt; 将在其 &lt;code&gt;createValue&lt;/code&gt; 方法中创建一个 &lt;code&gt;InputMap&lt;/code&gt; 。绑定在构造函数中传递。绑定是一个数组，其偶数条目是字符串 &lt;code&gt;KeyStrokes&lt;/code&gt; （例如&amp;ldquo; alt SPACE&amp;rdquo;），而奇数条目是 &lt;code&gt;InputMap&lt;/code&gt; 中要使用的值（以及 &lt;code&gt;ActionMap&lt;/code&gt; 中的键）。</target>
        </trans-unit>
        <trans-unit id="9a519258100423707f0968c203607a1ce8a9aba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LdapName&lt;/code&gt; will properly parse all valid names, but does not attempt to detect all possible violations when parsing invalid names. It is &quot;generous&quot; in accepting invalid names. The &quot;validity&quot; of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations.</source>
          <target state="translated">&lt;code&gt;LdapName&lt;/code&gt; 将正确解析所有有效名称，但在解析无效名称时不会尝试检测所有可能的违规。接受无效名称是&amp;ldquo;慷慨的&amp;rdquo;。名称的&amp;ldquo;有效性&amp;rdquo;最终是在将其提供给LDAP服务器时确定的，LDAP服务器可以根据诸如其架构信息和互操作性等因素来接受或拒绝该名称。</target>
        </trans-unit>
        <trans-unit id="75c16543fa6d774a575de4f098eb2fb1b7caf5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineBreakMeasurer&lt;/code&gt; implements the most commonly used line-breaking policy: Every word that fits within the wrapping width is placed on the line. If the first word does not fit, then all of the characters that fit within the wrapping width are placed on the line. At least one character is placed on each line.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 实施最常用的换行策略：将适合换行宽度的每个单词放在行上。如果第一个单词不合适，则将所有适合在包装宽度内的字符放在行上。每行至少放置一个字符。</target>
        </trans-unit>
        <trans-unit id="15fa6f2b1cfa84a440d7ce92b496498dc4c85afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineBreakMeasurer&lt;/code&gt; is constructed with an iterator over styled text. The iterator's range should be a single paragraph in the text. &lt;code&gt;LineBreakMeasurer&lt;/code&gt; maintains a position in the text for the start of the next text segment. Initially, this position is the start of text. Paragraphs are assigned an overall direction (either left-to-right or right-to-left) according to the bidirectional formatting rules. All segments obtained from a paragraph have the same direction as the paragraph.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 是使用迭代器构造在样式文本上的。迭代器的范围应为文本中的单个段落。 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 会在文本中为下一个文本段的开头保留一个位置。最初，此位置是文本的开头。根据双向格式设置规则，为段落分配了总体方向（从左到右或从右到左）。从一个段落获得的所有句段都与该段落具有相同的方向。</target>
        </trans-unit>
        <trans-unit id="f586310c053ffa95ccc0b35ac9d4a247d8cbddab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0367347003be39d8a7fbfcb37b6e968265cdc4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&amp;lt;? extends AnnotationValue&amp;gt;&lt;/code&gt; (representing the elements, in declared order, if the value is an array)</source>
          <target state="translated">&lt;code&gt;List&amp;lt;? extends AnnotationValue&amp;gt;&lt;/code&gt; （如果值是数组，则以声明的顺序表示元素）</target>
        </trans-unit>
        <trans-unit id="957e21563e2786d4b55037aefd935e8a6999a397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListDataListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListDataListener&lt;/code&gt; 附加到 &lt;code&gt;JList&lt;/code&gt; 的ListDataListener。</target>
        </trans-unit>
        <trans-unit id="ca656788abf2eef40b1501dbe90f5693b06e3bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListResourceBundle&lt;/code&gt; is an abstract subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale in a convenient and easy to use list.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; 是 &lt;code&gt;ResourceBundle&lt;/code&gt; 的抽象子类，它在方便且易于使用的列表中管理区域设置的资源。</target>
        </trans-unit>
        <trans-unit id="a6a9a9d27e1eede167eb175cc65fa7393ffafa85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListResourceBundle&lt;/code&gt; is an abstract subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale in a convenient and easy to use list. See &lt;code&gt;ResourceBundle&lt;/code&gt; for more information about resource bundles in general.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; 是 &lt;code&gt;ResourceBundle&lt;/code&gt; 的抽象子类，它在方便且易于使用的列表中管理区域设置的资源。有关一般资源包的更多信息，请参见 &lt;code&gt;ResourceBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7401235292d816014a85119baff0346ec67ae456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListSelectionListener&lt;/code&gt; 附加到 &lt;code&gt;JList&lt;/code&gt; 的ListSelectionListener。</target>
        </trans-unit>
        <trans-unit id="dba22fc604261a1babc290c09524d08b9cc705f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - In this mode, there's no restriction on what can be selected.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; -在此模式下，对可以选择的内容没有任何限制。</target>
        </trans-unit>
        <trans-unit id="1eb84dd12d67adca7c254290bda202be1163effb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - In this mode, there's no restriction on what can be selected. This mode is the default.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; -在此模式下，对可以选择的内容没有任何限制。此模式是默认模式。</target>
        </trans-unit>
        <trans-unit id="0ceb767d70cf5d4533eb5a18135179abbf98c126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - Only one contiguous interval can be selected at a time. In this mode, &lt;code&gt;addSelectionInterval&lt;/code&gt; behaves like &lt;code&gt;setSelectionInterval&lt;/code&gt; (replacing the current selection), unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow it.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; -一次只能选择一个连续的时间间隔。在此模式下，除非给定的间隔与现有选择紧邻或重叠，否则 &lt;code&gt;addSelectionInterval&lt;/code&gt; 的行为类似于 &lt;code&gt;setSelectionInterval&lt;/code&gt; （替换当前选择）。</target>
        </trans-unit>
        <trans-unit id="d691b6597f6d0de647fe7ac0aead6854f9542767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - Only one contiguous interval can be selected at a time. In this mode, &lt;code&gt;addSelectionInterval&lt;/code&gt; behaves like &lt;code&gt;setSelectionInterval&lt;/code&gt; (replacing the current selection}, unless the given interval is immediately adjacent to or overlaps the existing selection, and can be used to grow the selection.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; -一次只能选择一个连续的时间间隔。在这种模式下，除非给定的间隔与现有选择直接相邻或重叠，否则 &lt;code&gt;addSelectionInterval&lt;/code&gt; 的行为类似于 &lt;code&gt;setSelectionInterval&lt;/code&gt; （替换当前选择）。</target>
        </trans-unit>
        <trans-unit id="17fd096a7fe71d81552943c7156afc9c76feda47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_SELECTION&lt;/code&gt; - Only one list index can be selected at a time. In this mode, &lt;code&gt;setSelectionInterval&lt;/code&gt; and &lt;code&gt;addSelectionInterval&lt;/code&gt; are equivalent, both replacing the current selection with the index represented by the second argument (the &quot;lead&quot;).</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_SELECTION&lt;/code&gt; -一次只能选择一个列表索引。在这种模式下， &lt;code&gt;setSelectionInterval&lt;/code&gt; 和 &lt;code&gt;addSelectionInterval&lt;/code&gt; 是等效的，它们都用第二个参数（&amp;ldquo; lead&amp;rdquo;）表示的索引替换了当前选择。</target>
        </trans-unit>
        <trans-unit id="bd6cc2bf16660d492a4b7ea7dcb0e4a0596a929b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoaderHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</source>
          <target state="translated">&lt;code&gt;LoaderHandler&lt;/code&gt; 是RMI运行时内部在以前的实现版本中使用的接口。绝对不能由应用程序代码访问它。</target>
        </trans-unit>
        <trans-unit id="0ed15ee2ee38bd494d6a4a680be1ddb607b94b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; implements this interface as it represents a set of fields that are contiguous from days to forever and require no external information to determine the validity of each date. It is therefore able to implement plus/minus correctly.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 实现了此接口，因为它代表了一组从几天到永远都是连续的字段，不需要外部信息来确定每个日期的有效性。因此，它能够正确实现加/减。</target>
        </trans-unit>
        <trans-unit id="b164d30df690ada780a7e4a4e896d59973145ee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; is an immutable date-time object that represents a date, often viewed as year-month-day. Other date fields, such as day-of-year, day-of-week and week-of-year, can also be accessed. For example, the value &quot;2nd October 2007&quot; can be stored in a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 是一个不可变的日期时间对象，代表一个日期，通常被视为年-月-日。也可以访问其他日期字段，例如每年的日期，星期几和每年的星期几。例如，值&amp;ldquo; 2007年10月2日&amp;rdquo;可以存储在 &lt;code&gt;LocalDate&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="60170d11336300553c83286800fe3fe502330942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 返回 &lt;code&gt;DAYS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c81d531e769bd9ae681a95232e11ab8654e6e3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 返回 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5320f46bcbe47a3a9fa891e4ec41a81c90424fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="a419ab33f8557e8bea7860ae514e2d9c02811fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; is an immutable date-time object that represents a date-time, often viewed as year-month-day-hour-minute-second. Other date and time fields, such as day-of-year, day-of-week and week-of-year, can also be accessed. Time is represented to nanosecond precision. For example, the value &quot;2nd October 2007 at 13:45.30.123456789&quot; can be stored in a &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 是一个不变的日期时间对象，它代表一个日期时间，通常被视为年-月-日-小时-分钟-秒。也可以访问其他日期和时间字段，例如，一年中的某天，一周中的某天和一周中的某周。时间以纳秒精度表示。例如，值&amp;ldquo; 2007年10月2日13：45.30.123456789&amp;rdquo;可以存储在 &lt;code&gt;LocalDateTime&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="a3efcb9931bf615bb0e029072548769f4931553d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 返回 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca3bc7a0598ce7093020620768b609a00bf2584a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 返回 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c083245c0527d4043ca70dd4876067710b6c7ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="e47ab7cc24703b37a4970dcf8e824a8ddcf6943d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; uses a precision of nanoseconds, whereas this class uses a precision of milliseconds. The conversion will truncate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; 使用纳秒级的精度，而此类使用毫秒级的精度。该转换将截断所有多余的精度信息，就好像纳秒的数量要被整数除以一百万。</target>
        </trans-unit>
        <trans-unit id="c2178509e97c86a408c6cc9dcdc43de58b9784f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; implements this interface as it represents a set of fields that are contiguous from nanos to within days and require no external information to determine validity. It is able to implement plus/minus correctly, by wrapping around the day.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 之所以实现此接口，是因为它表示从纳秒到数天之内连续的一组字段，不需要外部信息即可确定有效性。通过绕一整天，它能够正确实现加/减。</target>
        </trans-unit>
        <trans-unit id="0b1ff1a7e083726a18ec2548b2ac82070642d37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value &quot;13:45.30.123456789&quot; can be stored in a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 是一个不变的日期时间对象，它代表一个时间，通常被视为时-分-秒。时间以纳秒精度表示。例如，值&amp;ldquo;13：45.30.123456789&amp;rdquo;可以被存储在一个 &lt;code&gt;LocalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4831478f50a9606abb9443e1d405e0f064c0d78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 返回 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8474d3a63814f4d7570b6a0ff081a32a34d4ed9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="621730de2bb2243f31b0beaf83d3aed58b728952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 返回null（不表示日期）</target>
        </trans-unit>
        <trans-unit id="e31c54ebc280fc6d9da2ac5b2c982b9624bf1fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; would generate the same list except that locales with &quot;no&quot; would appear before the corresponding locales with &quot;nb&quot;.</source>
          <target state="translated">&lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; 会生成相同的列表，只是带有&amp;ldquo; no&amp;rdquo;的语言环境会出现在带有&amp;ldquo; nb&amp;rdquo;的相应语言环境之前。</target>
        </trans-unit>
        <trans-unit id="a6814649d068191641c350a4ac7c9314232b04f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocateRegistry&lt;/code&gt; is used to obtain a reference to a bootstrap remote object registry on a particular host (including the local host), or to create a remote object registry that accepts calls on a specific port.</source>
          <target state="translated">&lt;code&gt;LocateRegistry&lt;/code&gt; 用于获取对特定主机（包括本地主机）上的引导远程对象注册表的引用，或用于创建接受特定端口上的调用的远程对象注册表。</target>
        </trans-unit>
        <trans-unit id="8d8e92f7df41403e727bd170263d9f91d8697676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide additional functionality over the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements by providing a non-blocking attempt to acquire a lock (&lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt;), an attempt to acquire the lock that can be interrupted (&lt;a href=&quot;#lockInterruptibly()&quot;&gt;&lt;code&gt;lockInterruptibly()&lt;/code&gt;&lt;/a&gt;, and an attempt to acquire the lock that can timeout (&lt;a href=&quot;#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 实现通过使用非阻塞尝试获取锁（&lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;），尝试获取可被中断的锁（&lt;a href=&quot;#lockInterruptibly()&quot;&gt; &lt;code&gt;lockInterruptibly()&lt;/code&gt; &lt;/a&gt;以及尝试获取锁），提供了比 &lt;code&gt;synchronized&lt;/code&gt; 方法和语句更多的功能。可能超时的锁（&lt;a href=&quot;#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c33cf344eddf551fcccfa7a6fff8450bd67f550b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide additional functionality over the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements by providing a non-blocking attempt to acquire a lock (&lt;a href=&quot;lock#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt;), an attempt to acquire the lock that can be interrupted (&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt;&lt;code&gt;lockInterruptibly()&lt;/code&gt;&lt;/a&gt;, and an attempt to acquire the lock that can timeout (&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 实现通过使用非阻塞尝试获取锁（&lt;a href=&quot;lock#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;），尝试获取可被中断的锁（&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt; &lt;code&gt;lockInterruptibly()&lt;/code&gt; &lt;/a&gt;以及尝试获取锁），提供了比 &lt;code&gt;synchronized&lt;/code&gt; 方法和语句更多的功能。可能超时的锁（&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5673096caf43b509458ac48821caba1c37ff2d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide more extensive locking operations than can be obtained using &lt;code&gt;synchronized&lt;/code&gt; methods and statements.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 与使用 &lt;code&gt;synchronized&lt;/code&gt; 方法和语句相比，锁实现提供了更广泛的锁操作。</target>
        </trans-unit>
        <trans-unit id="c77ac305aad6dbe832b47a89e75ccb3bc94d9d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide more extensive locking operations than can be obtained using &lt;code&gt;synchronized&lt;/code&gt; methods and statements. They allow more flexible structuring, may have quite different properties, and may support multiple associated &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 与使用 &lt;code&gt;synchronized&lt;/code&gt; 方法和语句相比，锁实现提供了更广泛的锁操作。它们允许更灵活的结构，可以具有完全不同的属性，并且可以支持多个关联的&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="08a19829fa13ac8eeb1d4a6736c0ebad77e95bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; 如在&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中指定的，LockInfo被映射到&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3d29d3664efbeba95a5c2c7b8e16d15e3405fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; as specified in the &lt;a href=&quot;lockinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; 如&lt;a href=&quot;lockinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中所指定，LockInfo映射到&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c29857290d6c7476b2ee7ba595096c91939db848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; of an object for which the thread is blocked waiting if any; &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; 线程被阻塞的对象的LockInfo（如果有）；否则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb91e6cd1754ca35d21c20ae401cfb45358a347a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogRecords&lt;/code&gt; are published to a given &lt;code&gt;java.io.OutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; 发布到给定的 &lt;code&gt;java.io.OutputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b9d32f93c9de2f3bebb3a15d07b0ed263c1da50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogRecords&lt;/code&gt; are published to a network stream connection. By default the &lt;code&gt;XMLFormatter&lt;/code&gt; class is used for formatting.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; 发布到网络流连接。默认情况下， &lt;code&gt;XMLFormatter&lt;/code&gt; 类用于格式化。</target>
        </trans-unit>
        <trans-unit id="feb0884875afa29bf98a02930fa7b49fbb9c52f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogStream&lt;/code&gt; provides a mechanism for logging errors that are of possible interest to those monitoring a system.</source>
          <target state="translated">&lt;code&gt;LogStream&lt;/code&gt; 提供了一种记录错误的机制，这些错误可能是监视系统的人可能感兴趣的。</target>
        </trans-unit>
        <trans-unit id="b994775ffa12a3bcd16f3afcd3037edea64983e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoggingMXBean&lt;/code&gt; is no longer a &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt;&lt;code&gt;platform MXBean&lt;/code&gt;&lt;/a&gt; and is replaced with &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; 不再是&lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt; &lt;code&gt;platform MXBean&lt;/code&gt; &lt;/a&gt;，而已替换为&lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fa38de80a015e11b4309d61ef002e7cc06af7c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoggingMXBean&lt;/code&gt; is no longer a &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt;&lt;code&gt;platform MXBean&lt;/code&gt;&lt;/a&gt; and is replaced with &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;. It will not register in the platform &lt;code&gt;MBeanServer&lt;/code&gt;. Use &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; 不再是&lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt; &lt;code&gt;platform MXBean&lt;/code&gt; &lt;/a&gt;，而已替换为&lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;。它不会在平台 &lt;code&gt;MBeanServer&lt;/code&gt; 中注册。请改用 &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bafc9d5d2b42fcd6cc057a7201f7806f1bed16df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; describes the interface implemented by authentication technology providers.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 描述了身份验证技术提供者实现的接口。</target>
        </trans-unit>
        <trans-unit id="33dc38c10d3809b30c11d4aac67a4f11cdba26b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; describes the interface implemented by authentication technology providers. LoginModules are plugged in under applications to provide a particular type of authentication.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 描述了身份验证技术提供者实现的接口。LoginModules插入应用程序下以提供特定类型的身份验证。</target>
        </trans-unit>
        <trans-unit id="f866ed1761767576e0395095240c4a27b8e02380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; is configured and succeeds, then only the</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 已配置并成功，然后只有</target>
        </trans-unit>
        <trans-unit id="aa876cf2d06335f653a7c76c2d3df0cf4cd70552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; must succeed.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 必须成功。</target>
        </trans-unit>
        <trans-unit id="b4fac527fa58329a3ffd016f3f81f59cc95cefe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; need to have succeeded for the overall authentication to succeed. If no</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 需要成功才能使整体身份验证成功。如果不</target>
        </trans-unit>
        <trans-unit id="6ee9cc4d98d18b2cfc904839ca2abf435888e29f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Long(0)&lt;/code&gt; if &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is false and &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; is true,</source>
          <target state="translated">&lt;code&gt;Long(0)&lt;/code&gt; 如果 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; 为false且 &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; 为true，则Long（0），</target>
        </trans-unit>
        <trans-unit id="12306d267038cb4cda55bb56e12d8917381bd5f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;LongStream.iterate&lt;/code&gt; 应该产生与相应的for循环所产生的元素序列相同的序列：</target>
        </trans-unit>
        <trans-unit id="c06c1ce8a39c986dc062094680d50f906264fd51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;LongSummaryStatistics&lt;/code&gt; 可用作&lt;a href=&quot;stream/stream&quot;&gt;流&lt;/a&gt;的&lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;缩减&lt;/a&gt;目标。例如：</target>
        </trans-unit>
        <trans-unit id="fe40cf5a0c540e512a970d39b1fe3e2ed2a27a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;Stream.collect(Collector)&lt;/a&gt; reduction} target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;LongSummaryStatistics&lt;/code&gt; 可以用作一个&lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;Stream.collect（集电极）&lt;/a&gt;还原}目标一个&lt;a href=&quot;stream/stream&quot;&gt;流&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="10b1ffb40eaff00c7a1433afcc696364c75a8d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookAndFeel&lt;/code&gt;, as the name implies, encapsulates a look and feel.</source>
          <target state="translated">&lt;code&gt;LookAndFeel&lt;/code&gt; 顾名思义，LookAndFeel封装了外观。</target>
        </trans-unit>
        <trans-unit id="aebfe27b59099d91cecf8d4bb4ddf83d069a7002" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookAndFeel&lt;/code&gt;, as the name implies, encapsulates a look and feel. Beyond installing a look and feel most developers never need to interact directly with &lt;code&gt;LookAndFeel&lt;/code&gt;. In general only developers creating a custom look and feel need to concern themselves with this class.</source>
          <target state="translated">&lt;code&gt;LookAndFeel&lt;/code&gt; 顾名思义，LookAndFeel封装了外观。除了安装外观之外，大多数开发人员都不需要直接与 &lt;code&gt;LookAndFeel&lt;/code&gt; 进行交互。通常，只有创建自定义外观的开发人员才需要关注此类。</target>
        </trans-unit>
        <trans-unit id="74ab60559847002c89effe2ad75cd5bf7dfe41c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M1&lt;/code&gt; reads &lt;code&gt;M2&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;M1&lt;/code&gt; 读取 &lt;code&gt;M2&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="4a05f73864fe496c03dc6bfda3c6a49e891bcd6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M1&lt;/code&gt;&lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;&lt;code&gt;reads&lt;/code&gt;&lt;/a&gt;&lt;code&gt;M2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;M1&lt;/code&gt;&lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;&lt;code&gt;reads&lt;/code&gt;&lt;/a&gt;&lt;code&gt;M2&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="96c2a0466195134cca9247fd56536682abaef33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M2&lt;/code&gt;&lt;a href=&quot;../module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt; the package containing the target class to at least &lt;code&gt;M1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;M2&lt;/code&gt; 向至少 &lt;code&gt;M1&lt;/code&gt; &lt;a href=&quot;../module#isOpen(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt;包含目标类的包。</target>
        </trans-unit>
        <trans-unit id="2556e2e6cf25b9176bcbfb7c18cdf21bf46d4158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the class implementing &lt;a href=&quot;typedescriptor.ofmethod&quot;&gt;TypeDescriptor.OfMethod&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -实现&lt;a href=&quot;typedescriptor.ofmethod&quot;&gt;TypeDescriptor.OfMethod&lt;/a&gt;的类</target>
        </trans-unit>
        <trans-unit id="69076c6772cd965e02c6c47b9fb650c6866211c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the kind of file manager forwarded to by this object</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -此对象转发到的文件管理器的类型</target>
        </trans-unit>
        <trans-unit id="dca1ab3b491612f56682eb781666eec867316456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -模型的类型</target>
        </trans-unit>
        <trans-unit id="77d261006b8e07101f7bcedc43e7f6fb1c4f4f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model the &lt;code&gt;RowFilter&lt;/code&gt; applies to</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 应用于的模型的类型</target>
        </trans-unit>
        <trans-unit id="bfc4570005edffbd39ee303a9b120a663d80f244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model to which the &lt;code&gt;RowFilter&lt;/code&gt; applies</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 应用于的模型的类型</target>
        </trans-unit>
        <trans-unit id="d00e40668e0df86397f02daa21c0937f56a79825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model, which must be an implementation of &lt;code&gt;TableModel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -模型的类型，必须是 &lt;code&gt;TableModel&lt;/code&gt; 的实现</target>
        </trans-unit>
        <trans-unit id="272b9f141e22803e983aa961786e91b506716e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model; for example &lt;code&gt;PersonModel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -模型的类型；例如 &lt;code&gt;PersonModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68a8b4dfea9599cfe86bf0512d623759d8e9e013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the resulting &lt;code&gt;ConcurrentMap&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -生成的 &lt;code&gt;ConcurrentMap&lt;/code&gt; 的类型</target>
        </trans-unit>
        <trans-unit id="53f43757309e4e44acf3be6d255188e86e6fccf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the resulting &lt;code&gt;Map&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -生成的 &lt;code&gt;Map&lt;/code&gt; 的类型</target>
        </trans-unit>
        <trans-unit id="f980e11347e5a103e5f2d981d468daa74f9a2216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the underlying model</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -基础模型的类型</target>
        </trans-unit>
        <trans-unit id="0aceb7282d98fbd98293227151377de51093bfd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; implies &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; 暗示 &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="275620a4a0e33bba654cf67432c0cba90dfdc542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; -返回带有指定微秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000。</target>
        </trans-unit>
        <trans-unit id="dc8ae6ce638ccefcc165409d1db5067ca7eb46b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 添加了微秒的指定数目。这等于&lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000。</target>
        </trans-unit>
        <trans-unit id="758cfad5f3eb63bd7ade931e37341b4dd68153a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 添加了微秒的指定数目。这等于&lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000。</target>
        </trans-unit>
        <trans-unit id="4960b9e0a4ec57c6d69dab4d83595b7edb3a661f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; -返回具有指定微秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000。</target>
        </trans-unit>
        <trans-unit id="d865c617ce03e7f5e2fc344256727da3c5f4fbcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified micro-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the micro-of-day multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定微的一天。这完全代替了时间，等效于使用&lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt;，其中micro-of-day乘以1,000。</target>
        </trans-unit>
        <trans-unit id="78d8aed84e75340fccec40c838f77b07bfd67fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified micro-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the micro-of-day multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定微的一天。这完全替换了时间，等效于使用&lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt;，将天数乘以1,000。</target>
        </trans-unit>
        <trans-unit id="fb086ce993caad7fcbf5885ba9e7089553c08000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与纳米的秒由指定的微的秒乘以1,000取代。小时，分钟和秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="73cfb94a8463eee9d517d161e0190472d9b30d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; -返回一个 &lt;code&gt;Instant&lt;/code&gt; ，其中毫微秒的秒数替换为指定的微秒乘以1,000。纪元将保持不变。</target>
        </trans-unit>
        <trans-unit id="3157be627b93fb984f98af52c04b7586dc625fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; -返回添加了指定的千年数的 &lt;code&gt;LocalDate&lt;/code&gt; 。这等效于调用&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;并将其乘以1,000。除非对新的月份和年份无效，否则月份中的日期将保持不变。在这种情况下，将月份中的日期调整为新月份和新年度的最大有效值。</target>
        </trans-unit>
        <trans-unit id="2b222e9423ffdc15611372113c2cebd20aa090b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;localdate#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; -返回具有指定的千年数的 &lt;code&gt;LocalDate&lt;/code&gt; 。这等效于调用&lt;a href=&quot;localdate#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;并将其乘以1,000。除非新的月份和年份无效，否则月份中的日期将保持不变。在这种情况下，将月份日期调整为新月份和年份的最大有效值。</target>
        </trans-unit>
        <trans-unit id="3872fc60eafce889212bc09ad0b8f08230b3893e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; -返回带有指定的千年数的 &lt;code&gt;Year&lt;/code&gt; 。这等效于调用&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;并将其乘以1,000。</target>
        </trans-unit>
        <trans-unit id="011b340b99bba91e92a8fe40dd62c56e37aee39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;year#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; -返回带有指定的千年数的 &lt;code&gt;Year&lt;/code&gt; 。这等效于调用&lt;a href=&quot;year#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;并将其乘以1,000。</target>
        </trans-unit>
        <trans-unit id="27a6370c7b40d4826a6d1fb48880788fadc620a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; -返回 &lt;code&gt;YearMonth&lt;/code&gt; ，并添加指定的千年数。这等效于调用&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;并将其乘以1,000。</target>
        </trans-unit>
        <trans-unit id="3c064d23f75e51fc6ce892da9fc8437f36a4bc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; -返回 &lt;code&gt;YearMonth&lt;/code&gt; ，并添加指定的千年数。这等效于调用&lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;并将其乘以1,000。</target>
        </trans-unit>
        <trans-unit id="3b5b9c5c0c7482ef9da87f2ea19a85b1ab3b0b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; -返回具有指定毫秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000,000。</target>
        </trans-unit>
        <trans-unit id="f048ddc272f621cb1afa076a1e24ce34e431e97d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与添加指定的毫秒数。这等于&lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000,000。</target>
        </trans-unit>
        <trans-unit id="ec1240411ee90ccaa40430da6eecf66a0a0b2b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与添加指定的毫秒数。这等于&lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000,000。</target>
        </trans-unit>
        <trans-unit id="64e2494098e102b1e1cf05595d5a4ff1116dfab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; -返回具有指定毫秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;乘以1,000,000。</target>
        </trans-unit>
        <trans-unit id="0c7a3319d5b32bb8eddc107c5a6a97fd80f476b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified milli-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the milli-of-day multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定毫的一天。这将完全替换时间，并且等效于使用&lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt;乘以天的毫秒数乘以1,000,000。</target>
        </trans-unit>
        <trans-unit id="1cdb67c5d2d1731ec4727e2be70579e5f5895edb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified milli-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the milli-of-day multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定毫的一天。这将完全替换时间，并等同于使用&lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt;并将天的毫秒数乘以1,000,000。</target>
        </trans-unit>
        <trans-unit id="4be7716ab1b357a7a7487ad9eff06d2f3b85afdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与纳米的秒由指定的毫的秒乘了1,000,000取代。小时，分钟和秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="f0706116c4949378dc73354dba353d09564af583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; -返回一个 &lt;code&gt;Instant&lt;/code&gt; ，其中毫微秒的秒数替换为指定的毫秒数乘以1,000,000。纪元将保持不变。</target>
        </trans-unit>
        <trans-unit id="986faa0149ffbe6e7a1f8f2ae3cf153c34ee5cf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMEType&lt;/code&gt; - a &lt;code&gt;String&lt;/code&gt; containing a file suffix (</source>
          <target state="translated">&lt;code&gt;MIMEType&lt;/code&gt; -一个 &lt;code&gt;String&lt;/code&gt; 包含文件后缀（</target>
        </trans-unit>
        <trans-unit id="dfd8077c71e40a35b7c069b386fa98a10b3a2aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMETypes&lt;/code&gt; - an array of &lt;code&gt;String&lt;/code&gt;s indicating the format's MIME types. If no MIME types are defined, &lt;code&gt;null&lt;/code&gt; should be supplied. An array of length 0 will be normalized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MIMETypes&lt;/code&gt; -一个 &lt;code&gt;String&lt;/code&gt; 数组，指示格式的MIME类型。如果未定义MIME类型，则应提供 &lt;code&gt;null&lt;/code&gt; 。长度为0的数组将被标准化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d6f2f33fe0292fb3746649f633b15a900c87701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMETypes&lt;/code&gt; - an array of &lt;code&gt;String&lt;/code&gt;s indicating the format's MIME types. If no suffixes are defined, &lt;code&gt;null&lt;/code&gt; should be supplied. An array of length 0 will be normalized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MIMETypes&lt;/code&gt; -一个 &lt;code&gt;String&lt;/code&gt; 数组，指示格式的MIME类型。如果未定义后缀，则应提供 &lt;code&gt;null&lt;/code&gt; 。长度为0的数组将被标准化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c00d6797f122b2e0a2040e8b3e291b32dde186d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 60.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; -返回带有指定分钟数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;乘以60。</target>
        </trans-unit>
        <trans-unit id="aec0242da4a5b45ccd580835c85b902f794143dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;#plusMinutes(long)&quot;&gt;&lt;code&gt;plusMinutes(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; -返回带有指定分钟数的 &lt;code&gt;LocalTime&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusMinutes(long)&quot;&gt; &lt;code&gt;plusMinutes(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc6581c95b350aae6e7561ffa5b274f87a40e296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;localtime#plusMinutes-long-&quot;&gt;&lt;code&gt;plusMinutes(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; -返回带有指定分钟数的 &lt;code&gt;LocalTime&lt;/code&gt; 。这等效于&lt;a href=&quot;localtime#plusMinutes-long-&quot;&gt; &lt;code&gt;plusMinutes(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f9301edfad0a968ce8d21372577cb347891c181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 60.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; -返回带有指定分钟数的 &lt;code&gt;Instant&lt;/code&gt; 。这等于&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;乘以60。</target>
        </trans-unit>
        <trans-unit id="6b43e03380bd9feb31e7706b7d0b89b0aecd7d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTE_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified minute-of-day. The second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MINUTE_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定分钟的日。秒和毫微秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="5e5386981cecab229ba147fbf04cfdf412444a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified minute-of-hour. The hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定分钟-的小时。小时，分钟和毫微秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="68d5ffe9725bdeacc3d1f8879b27212371fc3c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODELESS&lt;/code&gt; dialog doesn't block any top-level windows.</source>
          <target state="translated">&lt;code&gt;MODELESS&lt;/code&gt; 对话框不会阻止任何顶级窗口。</target>
        </trans-unit>
        <trans-unit id="0482e5082ef0b5fecb1a5cde873fb57bdc5139f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - The image will conform to the metadata object passed in to a write. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; -图像将符合传递给写入的元数据对象。 &lt;code&gt;setTiling&lt;/code&gt; 将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de4c3e7e43bf04eb98d2586edad699178fc54444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - The output image will use whatever progression parameters are found in the metadata objects passed into the writer.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; -输出图像将使用传递到编写器的元数据对象中找到的任何进度参数。</target>
        </trans-unit>
        <trans-unit id="06b48f2ba2e8d422b131232ba5b83710bca0fbd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - Use whatever compression parameters are specified in metadata objects passed in to the writer.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; -使用传递给编写器的元数据对象中指定的任何压缩参数。</target>
        </trans-unit>
        <trans-unit id="8450b8a8e562cb70ca9bb009dd21772bec303c2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - The image will be tiled using default parameters. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; -使用默认参数平铺图像。 &lt;code&gt;setTiling&lt;/code&gt; 将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37d9f7063eed0f08ff989209aefe7373a5e5cf9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - The image will be written progressively, with parameters chosen by the writer.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; -图像将被逐步写入，写入者将选择参数。</target>
        </trans-unit>
        <trans-unit id="a638892fe2001d5254d0071c363e02a7228a4f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - Use default compression parameters.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; -使用默认压缩参数。</target>
        </trans-unit>
        <trans-unit id="528da00ce58da145cebea2c4dab97be90a8c91dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - If the mode is set to &lt;code&gt;MODE_DISABLED&lt;/code&gt;, methods that query or modify the compression type or parameters will throw an &lt;code&gt;IllegalStateException&lt;/code&gt; (if compression is normally supported by the plug-in). Some writers, such as JPEG, do not normally offer uncompressed output. In this case, attempting to set the mode to &lt;code&gt;MODE_DISABLED&lt;/code&gt; will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; and the mode will not be changed.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; -如果将模式设置为 &lt;code&gt;MODE_DISABLED&lt;/code&gt; ，则查询或修改压缩类型或参数的方法将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; （如果插件通常支持压缩）。某些编写器（例如JPEG）通常不提供未压缩的输出。在这种情况下，尝试将模式设置为 &lt;code&gt;MODE_DISABLED&lt;/code&gt; 将引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; ,并且该模式将不会更改。</target>
        </trans-unit>
        <trans-unit id="f206e6196afc4ad94c8df84d4d3e5579127b6325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - No progression. Use this to turn off progression.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; -无进展。使用此选项可关闭进度。</target>
        </trans-unit>
        <trans-unit id="b50b40acbcde82ffcf24c01be42755116db76fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - The image will not be tiled. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; -图像将不会平铺。 &lt;code&gt;setTiling&lt;/code&gt; 将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5560582ceb954a684763a67ee6047633da9f9b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - Compress using the compression type and quality settings specified in this &lt;code&gt;ImageWriteParam&lt;/code&gt;. Any previously set compression parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; -使用此 &lt;code&gt;ImageWriteParam&lt;/code&gt; 中指定的压缩类型和质量设置进行压缩。任何先前设置的压缩参数都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="680145e8265ebb943e714b525c627b831ccab0c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - The image will be tiled according to parameters given in the &lt;a href=&quot;#setTiling(int,int,int,int)&quot;&gt;&lt;code&gt;setTiling&lt;/code&gt;&lt;/a&gt; method. Any previously set tiling parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; -将根据&lt;a href=&quot;#setTiling(int,int,int,int)&quot;&gt; &lt;code&gt;setTiling&lt;/code&gt; &lt;/a&gt;方法中给定的参数对图像进行平铺。任何先前设置的切片参数都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="e62c8ed22e04601d262ad72623d5093f995262bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - The image will be tiled according to parameters given in the &lt;a href=&quot;imagewriteparam#setTiling-int-int-int-int-&quot;&gt;&lt;code&gt;setTiling&lt;/code&gt;&lt;/a&gt; method. Any previously set tiling parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; -将根据&lt;a href=&quot;imagewriteparam#setTiling-int-int-int-int-&quot;&gt; &lt;code&gt;setTiling&lt;/code&gt; &lt;/a&gt;方法中给定的参数对图像进行平铺。任何先前设置的切片参数都将被丢弃。</target>
        </trans-unit>
        <trans-unit id="d9e6697c2c353a18d4331a09ee2ccabfb2c1cb06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;#plusMonths(long)&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; -返回具有指定月份数的 &lt;code&gt;LocalDate&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusMonths(long)&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt;。除非对新的月份和年份无效，否则月份中的日期将保持不变。在这种情况下，将月份中的日期调整为新月份和新年度的最大有效值。</target>
        </trans-unit>
        <trans-unit id="35fd54ca93a59bacc3006f1ce3027ace744edf73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;localdate#plusMonths-long-&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; -返回具有指定月份数的 &lt;code&gt;LocalDate&lt;/code&gt; 。这等效于&lt;a href=&quot;localdate#plusMonths-long-&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt;。除非新的月份和年份无效，否则月份中的日期将保持不变。在这种情况下，将月份日期调整为新月份和年份的最大有效值。</target>
        </trans-unit>
        <trans-unit id="602fb31be003841ee46a4c305ee2778b480b95a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;#plusMonths(long)&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; -返回 &lt;code&gt;YearMonth&lt;/code&gt; 添加了几个月的指定数目。这等效于&lt;a href=&quot;#plusMonths(long)&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4765ed8e635693fee304cc0c7c22eb226d0ee681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;yearmonth#plusMonths-long-&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; -返回 &lt;code&gt;YearMonth&lt;/code&gt; 添加了几个月的指定数目。这等效于&lt;a href=&quot;yearmonth#plusMonths-long-&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7b9a1c53940311a0d34ddca6467ea28bb9c8280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified month-of-year. The year will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; -返回具有指定年份的 &lt;code&gt;LocalDate&lt;/code&gt; 。年份将保持不变。除非新的月份和年份无效，否则月份中的日期也将保持不变。在这种情况下，将月份日期调整为新月份和年份的最大有效值。</target>
        </trans-unit>
        <trans-unit id="376c694ce18aaf2f716de71060cfc2fe6c3e6124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified month-of-year. The year will be unchanged.</source>
          <target state="translated">&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; -返回具有指定年份的 &lt;code&gt;YearMonth&lt;/code&gt; 。年份将保持不变。</target>
        </trans-unit>
        <trans-unit id="121eab465441f63a73c8383822bab0e7ce4515eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events are delivered to the &lt;code&gt;Component&lt;/code&gt; in which the mouse button was pressed until the mouse button is released (regardless of whether the mouse position is within the bounds of the &lt;code&gt;Component&lt;/code&gt;). Due to platform-dependent Drag&amp;amp;Drop implementations, &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events may not be delivered during a native Drag&amp;amp;Drop operation. In a multi-screen environment mouse drag events are delivered to the &lt;code&gt;Component&lt;/code&gt; even if the mouse position is outside the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; associated with that &lt;code&gt;Component&lt;/code&gt;. However, the reported position for mouse drag events in this case may differ from the actual mouse position:</source>
          <target state="translated">&lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 事件传递到在其中按下鼠标按钮直到释放鼠标按钮的 &lt;code&gt;Component&lt;/code&gt; （无论鼠标位置是否在 &lt;code&gt;Component&lt;/code&gt; 的边界内）。由于依赖于平台的拖放实现，因此在本机拖放操作期间可能无法传递 &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 事件。在多屏幕环境鼠标拖动事件被传递到 &lt;code&gt;Component&lt;/code&gt; 即使鼠标位置在边界之外 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 与之相关 &lt;code&gt;Component&lt;/code&gt; 。但是，在这种情况下，鼠标拖动事件的报告位置可能与实际鼠标位置不同：</target>
        </trans-unit>
        <trans-unit id="24d1182915192717959f1a97d1cb1c6b57d86b39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff63702eaeb0fd043018a7488668a3494a4523b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MarshalledObject&lt;/code&gt; facilitates passing objects in RMI calls that are not automatically deserialized immediately by the remote peer.</source>
          <target state="translated">&lt;code&gt;MarshalledObject&lt;/code&gt; 有助于在RMI调用中传递对象，而远程对等对象不会立即自动反序列化这些对象。</target>
        </trans-unit>
        <trans-unit id="0fb6dd037a96250c328c8d92ced4aeb04bf7b380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaskFormatter&lt;/code&gt; is used to format and edit strings.</source>
          <target state="translated">&lt;code&gt;MaskFormatter&lt;/code&gt; 用于格式化和编辑字符串。</target>
        </trans-unit>
        <trans-unit id="4b44d2f2c495f04c3c1f363e40a7a654ebda789e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaskFormatter&lt;/code&gt; is used to format and edit strings. The behavior of a &lt;code&gt;MaskFormatter&lt;/code&gt; is controlled by way of a String mask that specifies the valid characters that can be contained at a particular location in the &lt;code&gt;Document&lt;/code&gt; model. The following characters can be specified:</source>
          <target state="translated">&lt;code&gt;MaskFormatter&lt;/code&gt; 用于格式化和编辑字符串。 &lt;code&gt;MaskFormatter&lt;/code&gt; 的行为是通过String掩码控制的，该字符串掩码指定可以包含在 &lt;code&gt;Document&lt;/code&gt; 模型中特定位置的有效字符。可以指定以下字符：</target>
        </trans-unit>
        <trans-unit id="56346b54ddc05b5bad96363388a06e5337fb8a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MediaSize&lt;/code&gt; is not yet used to specify media. Its current role is as a mapping for named media (see &lt;a href=&quot;mediasizename&quot;&gt;&lt;code&gt;MediaSizeName&lt;/code&gt;&lt;/a&gt;). Clients can use the mapping method &lt;code&gt;MediaSize.getMediaSizeForName(MediaSizeName)&lt;/code&gt; to find the physical dimensions of the &lt;code&gt;MediaSizeName&lt;/code&gt; instances enumerated in this API. This is useful for clients which need this information to format &amp;amp; paginate printing.</source>
          <target state="translated">&lt;code&gt;MediaSize&lt;/code&gt; 尚未用于指定媒体。它当前的角色是作为命名媒体的映射（请参见&lt;a href=&quot;mediasizename&quot;&gt; &lt;code&gt;MediaSizeName&lt;/code&gt; &lt;/a&gt;）。客户端可以使用映射方法 &lt;code&gt;MediaSize.getMediaSizeForName(MediaSizeName)&lt;/code&gt; 来查找此API中枚举的 &lt;code&gt;MediaSizeName&lt;/code&gt; 实例的物理尺寸。这对于需要此信息来格式化和分页打印的客户很有用。</target>
        </trans-unit>
        <trans-unit id="6b338ba3ddb2c6a300cb5e6c334e45ac7bf2bb10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MediaSizeName&lt;/code&gt; matching these dimensions, or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MediaSizeName&lt;/code&gt; 与这些尺寸匹配的MediaSizeName，或者为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc94883fc9e07c6c8d5f85a6e3870288443c3944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is a &lt;em&gt;model-specific class&lt;/em&gt;. With Standard MBeans, a client of the MBean Server cannot access the &lt;code&gt;Usage&lt;/code&gt; attribute if it does not know the class &lt;code&gt;MemoryUsage&lt;/code&gt;. Suppose the client is a generic console based on JMX technology. Then the console would have to be configured with the model-specific classes of every application it might connect to. The problem is even worse for clients that are not written in the Java language. Then there may not be any way to tell the client what a &lt;code&gt;MemoryUsage&lt;/code&gt; looks like.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 是&lt;em&gt;特定&lt;/em&gt;于&lt;em&gt;模型的类&lt;/em&gt;。使用标准MBean，如果MBean服务器的客户端不知道 &lt;code&gt;MemoryUsage&lt;/code&gt; 类，则无法访问&amp;ldquo; &lt;code&gt;Usage&lt;/code&gt; 属性。假设客户端是基于JMX技术的通用控制台。然后，必须为控制台配置它可能连接到的每个应用程序的特定于模型的类。对于不是使用Java语言编写的客户端，问题甚至更严重。然后可能没有任何方法可以告诉客户端 &lt;code&gt;MemoryUsage&lt;/code&gt; 的外观。</target>
        </trans-unit>
        <trans-unit id="2631a6c8258f4f1c679e020fd0f7232d7ea4cdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 映射到具有&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中指定的属性的&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e76812395aa6e5732329df1c79c4c9edb846ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 映射到具有&lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中指定的属性的&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b986b604d7d375068f37a30961d975d461c9911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; provides a means to produce concatenated messages in a language-neutral way.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 提供了一种以与语言无关的方式生成串联消息的方法。</target>
        </trans-unit>
        <trans-unit id="9520869e6e04c0dbfdf170a31127c8e8e4df4ea6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; provides a means to produce concatenated messages in a language-neutral way. Use this to construct messages displayed for end users.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 提供了一种以与语言无关的方式生成串联消息的方法。使用它来构造为最终用户显示的消息。</target>
        </trans-unit>
        <trans-unit id="9ef1967fdaaeaaa97e2c583a8747c5532b6c8a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; takes a set of objects, formats them, then inserts the formatted strings into the pattern at the appropriate places.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 接收一组对象，对它们进行格式化，然后在适当的位置将格式化的字符串插入模式中。</target>
        </trans-unit>
        <trans-unit id="c3cf391f8a99415be580806a8d0e01562d5f4047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; uses patterns of the following form:</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 使用以下形式的模式：</target>
        </trans-unit>
        <trans-unit id="62f430bb779d8ad3533271f4020a770ecdd52bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageInfo&lt;/code&gt; instances are not safe for use by multiple concurrent threads. If a MessageInfo is to be used by more than one thread then access to the MessageInfo should be controlled by appropriate synchronization.</source>
          <target state="translated">&lt;code&gt;MessageInfo&lt;/code&gt; 实例不能安全用于多个并发线程。如果一个多个线程使用一个MessageInfo，则应通过适当的同步来控制对MessageInfo的访问。</target>
        </trans-unit>
        <trans-unit id="fee9acc35c10ee430a5974eec9c8f5a90db1abf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalLookAndFeel&lt;/code&gt; derives it's color palette and fonts from &lt;code&gt;MetalTheme&lt;/code&gt;. The default theme is &lt;code&gt;OceanTheme&lt;/code&gt;. The theme can be changed using the &lt;code&gt;setCurrentTheme&lt;/code&gt; method, refer to it for details on changing the theme. Prior to 1.5 the default theme was &lt;code&gt;DefaultMetalTheme&lt;/code&gt;. The system property &lt;code&gt;&quot;swing.metalTheme&quot;&lt;/code&gt; can be set to &lt;code&gt;&quot;steel&quot;&lt;/code&gt; to indicate the default should be &lt;code&gt;DefaultMetalTheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetalLookAndFeel&lt;/code&gt; 从 &lt;code&gt;MetalTheme&lt;/code&gt; 派生其调色板和字体。默认主题是 &lt;code&gt;OceanTheme&lt;/code&gt; 。可以使用 &lt;code&gt;setCurrentTheme&lt;/code&gt; 方法更改主题，有关更改主题的详细信息，请参考该主题。在1.5之前，默认主题为 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 。可以将系统属性 &lt;code&gt;&quot;swing.metalTheme&quot;&lt;/code&gt; 设置为 &lt;code&gt;&quot;steel&quot;&lt;/code&gt; 以指示默认值应为 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2590625a9a9683e4bd7d3869bc8cf6bf18e0d5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalLookAndFeel&lt;/code&gt; maintains the current theme that the the &lt;code&gt;ComponentUI&lt;/code&gt; implementations for metal use. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt;&lt;code&gt;MetalLookAndFeel.setCurrentTheme(MetalTheme)&lt;/code&gt;&lt;/a&gt; for details on changing the current theme.</source>
          <target state="translated">&lt;code&gt;MetalLookAndFeel&lt;/code&gt; 维护 &lt;code&gt;ComponentUI&lt;/code&gt; 实现用于金属的当前主题。有关更改当前主题的详细信息，请参阅&lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt; &lt;code&gt;MetalLookAndFeel.setCurrentTheme(MetalTheme)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9f53fb25fbb023dd23903d230e78d50776306de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalRootPaneUI&lt;/code&gt; provides support for the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of &lt;code&gt;JRootPane&lt;/code&gt;. &lt;code&gt;MetalRootPaneUI&lt;/code&gt; does this by way of installing a custom &lt;code&gt;LayoutManager&lt;/code&gt;, a private &lt;code&gt;Component&lt;/code&gt; to render the appropriate widgets, and a private &lt;code&gt;Border&lt;/code&gt;. The &lt;code&gt;LayoutManager&lt;/code&gt; is always installed, regardless of the value of the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property, but the &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;Component&lt;/code&gt; are only installed/added if the &lt;code&gt;windowDecorationStyle&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetalRootPaneUI&lt;/code&gt; 为 &lt;code&gt;JRootPane&lt;/code&gt; 的 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 属性提供支持。 &lt;code&gt;MetalRootPaneUI&lt;/code&gt; 通过安装自定义 &lt;code&gt;LayoutManager&lt;/code&gt; ，用于渲染适当的小部件的私有 &lt;code&gt;Component&lt;/code&gt; 和私有 &lt;code&gt;Border&lt;/code&gt; 来实现此目的。该 &lt;code&gt;LayoutManager&lt;/code&gt; 始终安装，无论价值的 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 财产，但 &lt;code&gt;Border&lt;/code&gt; 和 &lt;code&gt;Component&lt;/code&gt; ，才能安装/添加如果 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 比其他 &lt;code&gt;JRootPane.NONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d68288751909ed7d5ecee1048c477e01e2dad650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; is abstract, see &lt;code&gt;DefaultMetalTheme&lt;/code&gt; and &lt;code&gt;OceanTheme&lt;/code&gt; for concrete implementations.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 是抽象的，有关具体实现，请参见 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 和 &lt;code&gt;OceanTheme&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fff4e537b4a9182e7eb89277f216c1273922a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; provides a number of public methods for getting colors. These methods are implemented in terms of a handful of protected abstract methods. A subclass need only override the protected abstract methods (&lt;code&gt;getPrimary1&lt;/code&gt;, &lt;code&gt;getPrimary2&lt;/code&gt;, &lt;code&gt;getPrimary3&lt;/code&gt;, &lt;code&gt;getSecondary1&lt;/code&gt;, &lt;code&gt;getSecondary2&lt;/code&gt;, and &lt;code&gt;getSecondary3&lt;/code&gt;); although a subclass may override the other public methods for more control over the set of colors that are used.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 提供了许多获取颜色的公共方法。这些方法是根据少数受保护的抽象方法实现的。子类只需要重写受保护的抽象方法（ &lt;code&gt;getPrimary1&lt;/code&gt; ， &lt;code&gt;getPrimary2&lt;/code&gt; ， &lt;code&gt;getPrimary3&lt;/code&gt; ， &lt;code&gt;getSecondary1&lt;/code&gt; ， &lt;code&gt;getSecondary2&lt;/code&gt; 和 &lt;code&gt;getSecondary3&lt;/code&gt; ）；尽管子类可能会覆盖其他公共方法，以更好地控制所使用的颜色集。</target>
        </trans-unit>
        <trans-unit id="39c5f184c133a129c1d46365a4a2cd94174db342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; provides the color palette and fonts used by the Java Look and Feel.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 提供Java Look and Feel使用的调色板和字体。</target>
        </trans-unit>
        <trans-unit id="7912e8cfe14ca9cd1892901356cff75ec9a881d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTreeUI&lt;/code&gt; allows for configuring how to visually render the spacing and delineation between nodes. The following hints are supported:</source>
          <target state="translated">&lt;code&gt;MetalTreeUI&lt;/code&gt; 允许配置如何以可视方式呈现节点之间的间距和轮廓。支持以下提示：</target>
        </trans-unit>
        <trans-unit id="fee985ebf8d9c77eee32e04d50e8622204fbaa23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MethodSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;MethodSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="1ad9f5aeb9a85beb3ae2195036e7be21db838e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MethodType&lt;/code&gt; objects are sometimes derived from bytecode instructions such as &lt;code&gt;invokedynamic&lt;/code&gt;, specifically from the type descriptor strings associated with the instructions in a class file's constant pool.</source>
          <target state="translated">&lt;code&gt;MethodType&lt;/code&gt; 对象有时从字节码指令（例如 &lt;code&gt;invokedynamic&lt;/code&gt; )派生，特别是从与类文件的常量池中的指令关联的类型描述符字符串派生。</target>
        </trans-unit>
        <trans-unit id="e7eb915d538d5617b4efd4c2d02820c4afb3fcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDevice&lt;/code&gt; is the base interface for all MIDI devices.</source>
          <target state="translated">&lt;code&gt;MidiDevice&lt;/code&gt; 是所有MIDI设备的基本接口。</target>
        </trans-unit>
        <trans-unit id="26fe6a8452f631ee24f8b497f415179f3fdfa388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDevice&lt;/code&gt; is the base interface for all MIDI devices. Common devices include synthesizers, sequencers, MIDI input ports, and MIDI output ports.</source>
          <target state="translated">&lt;code&gt;MidiDevice&lt;/code&gt; 是所有MIDI设备的基本接口。常见的设备包括合成器，音序器，MIDI输入端口和MIDI输出端口。</target>
        </trans-unit>
        <trans-unit id="405225ae64a16ff62ec079f1d60dce0ec42e6f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; is a &lt;code&gt;Receiver&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getReceiver()&quot;&gt;&lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 是一个 &lt;code&gt;Receiver&lt;/code&gt; ，其表示的MIDI输入连接器 &lt;code&gt;MidiDevice&lt;/code&gt; 的（见&lt;a href=&quot;mididevice#getReceiver()&quot;&gt; &lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0d8560ce74ba97d352f2e900a13909e682085f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; is a &lt;code&gt;Receiver&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getReceiver--&quot;&gt;&lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 是一个 &lt;code&gt;Receiver&lt;/code&gt; ，其表示的MIDI输入连接器 &lt;code&gt;MidiDevice&lt;/code&gt; 的（见&lt;a href=&quot;mididevice#getReceiver--&quot;&gt; &lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a7b6cd9103cfaed812877522dcfcfc8fdfab0369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; is a &lt;code&gt;Transmitter&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getTransmitter()&quot;&gt;&lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 是一个 &lt;code&gt;Transmitter&lt;/code&gt; ，其表示的MIDI输入连接器 &lt;code&gt;MidiDevice&lt;/code&gt; 的（见&lt;a href=&quot;mididevice#getTransmitter()&quot;&gt; &lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="195d91d5fc1464655aaec4aa20de063d7858bace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; is a &lt;code&gt;Transmitter&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getTransmitter--&quot;&gt;&lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 是一个 &lt;code&gt;Transmitter&lt;/code&gt; ，其表示的MIDI输入连接器 &lt;code&gt;MidiDevice&lt;/code&gt; 的（见&lt;a href=&quot;mididevice#getTransmitter--&quot;&gt; &lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b2039df56725431a9a6773410c88c9c90a3f9da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; includes methods to get, but not set, these values. Setting them is a subclass responsibility.</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 包含获取但未设置这些值的方法。设置它们是子类责任。</target>
        </trans-unit>
        <trans-unit id="ed042f848775afd38fb16b7ed17b1f10e0c7a1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; is the base class for MIDI messages.</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 是MIDI消息的基类。</target>
        </trans-unit>
        <trans-unit id="c08ba538afce075697225999b176a47b8db644a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; is the base class for MIDI messages. They include not only the standard MIDI messages that a synthesizer can respond to, but also &quot;meta-events&quot; that can be used by sequencer programs. There are meta-events for such information as lyrics, copyrights, tempo indications, time and key signatures, markers, etc. For more information, see the Standard MIDI Files 1.0 specification, which is part of the Complete MIDI 1.0 Detailed Specification published by the MIDI Manufacturer's Association (&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 是MIDI消息的基类。它们不仅包括合成器可以响应的标准MIDI消息，还包括音序器程序可以使用的&amp;ldquo;元事件&amp;rdquo;。有用于诸如歌词，版权，速度指示，时间和键签名，标记等信息的元事件。有关更多信息，请参见标准MIDI文件1.0规范，该规范是由MIDI发布的完整MIDI 1.0详细规范的一部分。 MIDI制造商协会（&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="86298ca308c9018cb4234698f85245e854878994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinguoEra&lt;/code&gt; is an enum representing the Minguo eras of BEFORE_ROC/ROC. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;MinguoEra&lt;/code&gt; 是代表BEFORE_ROC / ROC的Minguo时代的枚举。该工厂允许从 &lt;code&gt;int&lt;/code&gt; 值获取枚举。</target>
        </trans-unit>
        <trans-unit id="47b2c431155112d67b907341379ef8ea9df308bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelWrapper&lt;/code&gt; makes a distinction between values as &lt;code&gt;Object&lt;/code&gt;s and &lt;code&gt;String&lt;/code&gt;s. This allows implementations to provide a custom string converter to be used instead of invoking &lt;code&gt;toString&lt;/code&gt; on the object.</source>
          <target state="translated">&lt;code&gt;ModelWrapper&lt;/code&gt; 区分了 &lt;code&gt;Object&lt;/code&gt; 和 &lt;code&gt;String&lt;/code&gt; 之类的值。这允许实现提供一个要使用的自定义字符串转换器，而不是在对象上调用 &lt;code&gt;toString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a17cad9396d74724601a9916024400e728758ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleDescriptor&lt;/code&gt; defines the &lt;a href=&quot;moduledescriptor#newModule(java.lang.String,java.util.Set)&quot;&gt;&lt;code&gt;newModule&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;moduledescriptor#newOpenModule(java.lang.String)&quot;&gt;&lt;code&gt;newOpenModule&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;moduledescriptor#newAutomaticModule(java.lang.String)&quot;&gt;&lt;code&gt;newAutomaticModule&lt;/code&gt;&lt;/a&gt; methods to create builders for building &lt;em&gt;normal&lt;/em&gt;, open, and automatic modules.</source>
          <target state="translated">&lt;code&gt;ModuleDescriptor&lt;/code&gt; 定义&lt;a href=&quot;moduledescriptor#newModule(java.lang.String,java.util.Set)&quot;&gt; &lt;code&gt;newModule&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;moduledescriptor#newOpenModule(java.lang.String)&quot;&gt; &lt;code&gt;newOpenModule&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;moduledescriptor#newAutomaticModule(java.lang.String)&quot;&gt; &lt;code&gt;newAutomaticModule&lt;/code&gt; &lt;/a&gt;方法来创建用于构建&lt;em&gt;普通&lt;/em&gt;，开放和自动模块的构建器。</target>
        </trans-unit>
        <trans-unit id="aa9f4b530f678df9fcc1a1769e9e4474daf7622e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleDescriptor&lt;/code&gt; objects are immutable and safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;code&gt;ModuleDescriptor&lt;/code&gt; 对象是不可变的，可以安全地被多个并发线程使用。</target>
        </trans-unit>
        <trans-unit id="96ca82ac6d53abce80dada33b416776e964cc71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MonitorInfo&lt;/code&gt; 映射到具有&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中指定的属性的&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8cdb01369e01f3dedba8852c7b75c937295ece3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;monitorinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MonitorInfo&lt;/code&gt; 映射到具有&lt;a href=&quot;monitorinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;方法中指定的属性的&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebcf84a871263b6dbd5e43fbf162230b7727e862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; is an enum representing the 12 months of the year - January, February, March, April, May, June, July, August, September, October, November and December.</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 是一个枚举，表示一年中的12个月-一月，二月，三月，四月，五月，六月，七月，八月，九月，十月，十一月和十二月。</target>
        </trans-unit>
        <trans-unit id="57f29d4394ab40d0a748fd0e494f79c61d2e354c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; is an enum representing the 12 months of the year. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (January) to 12 (December).</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 是代表一年中12个月的枚举。该工厂允许从 &lt;code&gt;int&lt;/code&gt; 值获取枚举。的 &lt;code&gt;int&lt;/code&gt; 值遵循ISO-8601标准，从1（1月）到12（12月）。</target>
        </trans-unit>
        <trans-unit id="e52c26c31ad3e0d356c866a23a748fc1098c94d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 返回 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67bee7fd3d103a4c688f71811bd554f2d17ea0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns &lt;code&gt;MONTHS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 返回 &lt;code&gt;MONTHS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7f2e0af6d8b9f20cff50fa4bdd489195f53fbf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 返回空</target>
        </trans-unit>
        <trans-unit id="4dc683f0bfc8790b020b9839b52b55382b5fe41a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; is an immutable date-time object that represents the combination of a month and day-of-month. Any field that can be derived from a month and day, such as quarter-of-year, can be obtained.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 是一个不变的日期时间对象，代表一个月和一个月中的某天的组合。可以获取任何可以从一个月和一天得出的字段，例如每季度一次。</target>
        </trans-unit>
        <trans-unit id="dd469d958e54ff45b0e6f662d91e1d7d60507ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="51421d3c0b56c0062b370587258d51af7289349b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null (does not represent a complete date or time)</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 返回null（不代表完整的日期或时间）</target>
        </trans-unit>
        <trans-unit id="7e104804f5763e262284dd8a1601b5e7fac5b571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 返回空的 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e934c2578f4b6a829793be8efc1665460fa70f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt;, the combination of month-of-year and day-of-month, does not implement this interface. While the combination is contiguous, from days to months within years, the combination does not have sufficient information to define the valid range of values for day-of-month. As such, it is unable to implement plus/minus correctly.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 月份和月份的组合MonthDay不会实现此接口。虽然组合是连续的，但在几年内从几天到几个月不等，所以该组合没有足够的信息来定义每月某天的有效值范围。因此，它无法正确实现加/减。</target>
        </trans-unit>
        <trans-unit id="99160db0e1f9f9e289d7b5e412bf5baa2ddb6d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInfo&lt;/code&gt; provides methods for getting information about the mouse, such as mouse pointer location and the number of mouse buttons.</source>
          <target state="translated">&lt;code&gt;MouseInfo&lt;/code&gt; 提供了获取有关鼠标信息的方法，例如鼠标指针的位置和鼠标按钮的数量。</target>
        </trans-unit>
        <trans-unit id="0dc0c531a21fa5d0fa52b7d7a7d9d5a421e4788e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInputListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; 附加到 &lt;code&gt;JTable&lt;/code&gt; 的MouseInputListener。</target>
        </trans-unit>
        <trans-unit id="87e0ad612e015f3114d0402d4efd42c36b02c394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInputListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; 附加到 &lt;code&gt;JList&lt;/code&gt; 的MouseInputListener。</target>
        </trans-unit>
        <trans-unit id="3e8054e67a87654d667d8f32ebad101271b80481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAME = &lt;/code&gt;&lt;var&gt;mbeanname&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;NAME = &lt;/code&gt; &lt;var&gt;mbeanname&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="9da2bf96c6148955e43c58216af629bfaa07941d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; -返回具有指定的纳秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等效于&lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5858ed006b01eb0219b0446df2fcc10aa97be73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; -返回一个 &lt;code&gt;LocalTime&lt;/code&gt; ，其中添加了指定的纳秒数。这等效于&lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a99ec50942f14620b5e3d876b47d131754b8621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; -返回一个 &lt;code&gt;LocalTime&lt;/code&gt; ，其中添加了指定的纳秒数。这等效于&lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14d3b699722a37162938678071b56c793fc5e1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; -返回带有指定的纳秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b52dc6ae65e63be82bb97fb2aeb5af28e442768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-day. This completely replaces the time and is equivalent to &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANO_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定纳米的一天。这完全替代了时间，并且等效于&lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b36aeb5ce4c969166cfb457a07417d59d8803a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-day. This completely replaces the time and is equivalent to &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANO_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定纳米的一天。这完全替换了时间，并且等效于&lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6eeececab1f16b8c765bd9831190626e99ccb087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-second. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定纳米的秒。小时，分钟和秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="68d2ccd536d498cc08e835b63acc425d64d3df07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified nano-of-second. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; -返回具有指定毫微秒数的 &lt;code&gt;Instant&lt;/code&gt; 。纪元将保持不变。</target>
        </trans-unit>
        <trans-unit id="e30462139c3babdfb78ca3dcb7434a96cc974e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NClob&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;NCLOB&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NClob&lt;/code&gt; 接口-SQL &lt;code&gt;NCLOB&lt;/code&gt; 的映射</target>
        </trans-unit>
        <trans-unit id="69b56c115b67ab432819f031e752a8eecbc86383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEVER_UPDATE&lt;/code&gt;: the caret stays at the same absolute position in the document regardless of any document updates, except when document length becomes less than the current caret position due to removal. In that case caret position is adjusted to the end of the document. The caret doesn't try to keep itself visible by scrolling the associated view when using this policy.</source>
          <target state="translated">&lt;code&gt;NEVER_UPDATE&lt;/code&gt; ：插入符在文档中的绝对位置保持不变，而不考虑任何文档更新，除非文档长度由于移除而变得小于当前插入符的位置。在这种情况下，插入标记的位置将调整到文档末尾。使用此策略时，插入符号不会尝试通过滚动关联的视图来保持自身可见。</target>
        </trans-unit>
        <trans-unit id="c903da937c120083927738d07d2688b708396156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOBUTTON&lt;/code&gt;, &lt;code&gt;BUTTON1&lt;/code&gt;, &lt;code&gt;BUTTON2&lt;/code&gt; or &lt;code&gt;BUTTON3&lt;/code&gt; if support for the extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java</source>
          <target state="translated">&lt;code&gt;NOBUTTON&lt;/code&gt; 如果Java&lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt;了对扩展鼠标按钮的支持， &lt;code&gt;BUTTON2&lt;/code&gt; NOBUTTON， &lt;code&gt;BUTTON1&lt;/code&gt; ，BUTTON2或 &lt;code&gt;BUTTON3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e7151d6f3ed327dc35788c5d098e3052166b620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Do not resize the component.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; ：请勿调整组件的大小。</target>
        </trans-unit>
        <trans-unit id="4c565387ab34ab593403d5a537bfca5e1bcf6269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NULL_ATTRIBUTE_VALUE&lt;/code&gt; used in cases where the value for the attribute has not been specified.</source>
          <target state="translated">&lt;code&gt;NULL_ATTRIBUTE_VALUE&lt;/code&gt; 在未指定属性值的情况下使用NULL_ATTRIBUTE_VALUE。</target>
        </trans-unit>
        <trans-unit id="2e09080dfbf2deb2898bf93fa2eab4796a224515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; - the string representing &quot;not a number&quot;</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; -表示&amp;ldquo;非数字&amp;rdquo;的字符串</target>
        </trans-unit>
        <trans-unit id="c34288688d4e817ea265514b818f564a79442b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is formatted as a string, which typically has a single character &lt;code&gt;&amp;amp;#92;uFFFD&lt;/code&gt;. This string is determined by the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object. This is the only value for which the prefixes and suffixes are not used.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 格式化为字符串，通常具有单个字符 &lt;code&gt;&amp;amp;#92;uFFFD&lt;/code&gt; 。该字符串由 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 对象确定。这是唯一不使用前缀和后缀的值。</target>
        </trans-unit>
        <trans-unit id="f7923f945b5badac0adc7bdb118b9bc4f6ac0493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is formatted as a string, which typically has a single character &lt;code&gt;\uFFFD&lt;/code&gt;. This string is determined by the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object. This is the only value for which the prefixes and suffixes are not used.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 格式化为字符串，通常具有单个字符 &lt;code&gt;\uFFFD&lt;/code&gt; 。该字符串由 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 对象确定。这是唯一不使用前缀和后缀的值。</target>
        </trans-unit>
        <trans-unit id="1a6a7aeb0a2894d956910a6b4911723daf4d8dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Class-Path&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Class-Path&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="101a7a108e633b6b4fbb89dfc51d8da27aa902fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Class-Path&lt;/code&gt; manifest attribute. Bundled extensions can use this attribute to find other JAR files containing needed classes.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Class-Path&lt;/code&gt; 清单属性的名称对象。捆绑的扩展程序可以使用此属性来查找其他包含所需类的JAR文件。</target>
        </trans-unit>
        <trans-unit id="6654cd7280ebd2d5dfce0c0318300e21d0609a9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Content-Type&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Content-Type&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="95da2853ab970bd4edb49bc10c8dfdf3c2f477c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Installation&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Installation&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="d87e841ebb45a7150d76ed1a2f28074f3bb82330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-List&lt;/code&gt; manifest attribute used for declaring dependencies on installed extensions.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-List&lt;/code&gt; 清单属性的名称对象，用于声明对已安装扩展的依赖性。</target>
        </trans-unit>
        <trans-unit id="9e14cb2ea87b1d044e05d03e887dd9e68e3652e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-List&lt;/code&gt; manifest attribute used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于不再支持的扩展机制的 &lt;code&gt;Extension-List&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="76d242a455b81a66698a1a596505593f54d5e39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute used for declaring dependencies on installed extensions.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 清单属性的Name对象，用于声明对已安装扩展的依赖性。</target>
        </trans-unit>
        <trans-unit id="826f19171430ac572058166d84a99f493236e347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于不再支持的扩展机制的 &lt;code&gt;Extension-Name&lt;/code&gt; 清单属性的Name对象。</target>
        </trans-unit>
        <trans-unit id="aae384968af91d1d14b71db2e96a5823478da8fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="2c860d78e955b5b599147931d72161aa3e0a42cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute. used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 清单属性的名称对象。用于不再受支持的扩展机制。</target>
        </trans-unit>
        <trans-unit id="29b5b898d03b4b9e75bb44bfc0199efec1907a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Title&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 软件包版本控制使用的 &lt;code&gt;Implementation-Title&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="054f9ef5fdf2f394e4fab7fdb7bcadaaea1a4c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-URL&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于软件包版本控制的 &lt;code&gt;Implementation-URL&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="eff2ee3407a5d95b509418d9ca1bcac096fa166e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-URL&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Implementation-URL&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="820f281ef9969d6bb50289f79c4e8e7f9c5d4f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 软件包版本控制使用的 &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="9ec931851cbced412f5ce4e6169a92e1cf4a984f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="4bb43e73882adede71fb8e848ce659cbc9a2fd42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于软件包版本控制的 &lt;code&gt;Implementation-Vendor&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="fae56761a20760d61939eb3fbeeb84150b351012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Version&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 软件包版本控制使用的 &lt;code&gt;Implementation-Version&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="239d226962d8f7fb63db0d86f7228fa6cb341b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Main-Class&lt;/code&gt; manifest attribute used for launching applications packaged in JAR files.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Main-Class&lt;/code&gt; 清单属性的名称对象，用于启动打包在JAR文件中的应用程序。</target>
        </trans-unit>
        <trans-unit id="24366770dc570f2f5b633058a6838f0a271637dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Main-Class&lt;/code&gt; manifest attribute used for launching applications packaged in JAR files. The &lt;code&gt;Main-Class&lt;/code&gt; attribute is used in conjunction with the &lt;code&gt;-jar&lt;/code&gt; command-line option of the &lt;code&gt;java&lt;/code&gt; application launcher.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Main-Class&lt;/code&gt; 清单属性的名称对象，用于启动打包在JAR文件中的应用程序。的 &lt;code&gt;Main-Class&lt;/code&gt; 属性在与结合使用 &lt;code&gt;-jar&lt;/code&gt; 的的命令行选项 &lt;code&gt;java&lt;/code&gt; 应用程序启动。</target>
        </trans-unit>
        <trans-unit id="0c93e12f9a6889a1277855927439bed82251ac5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Manifest-Version&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Manifest-Version&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="6f05b54a28cd813420114981c64ba24f38fa58a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Manifest-Version&lt;/code&gt; manifest attribute. This attribute indicates the version number of the manifest standard to which a JAR file's manifest conforms.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Manifest-Version&lt;/code&gt; 清单属性的名称对象。此属性指示JAR文件的清单所遵循的清单标准的版本号。</target>
        </trans-unit>
        <trans-unit id="ce7b67d87efd00f4bf99d32f8dbc323187fd9dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Multi-Release&lt;/code&gt; manifest attribute that indicates this is a multi-release JAR file.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Multi-Release&lt;/code&gt; 清单属性的名称对象，指示这是一个多发行版JAR文件。</target>
        </trans-unit>
        <trans-unit id="233db5a58c168cde66546f727e09a2541aa09a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Sealed&lt;/code&gt; manifest attribute used for sealing.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于 &lt;code&gt;Sealed&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="291017efe44c9301310dc04279e049aec72a7d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Signature-Version&lt;/code&gt; manifest attribute used when signing JAR files.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 签名JAR文件时使用的 &lt;code&gt;Signature-Version&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="36432e9123ad8d3d1de130d3d0e733bfaf7bd710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Title&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于包版本控制的 &lt;code&gt;Specification-Title&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="3a9f39386bfa7266d984f41d525adebcd04511d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Vendor&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于包版本控制的 &lt;code&gt;Specification-Vendor&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="0e09f828f9a6428b437c6fa59632c64ff7b0d393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Version&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 用于包版本控制的 &lt;code&gt;Specification-Version&lt;/code&gt; 清单属性的名称对象。</target>
        </trans-unit>
        <trans-unit id="1dc0371053a1f0434316d53a3d60058cd0b5afac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedNodeMap&lt;/code&gt; objects in the DOM are live.</source>
          <target state="translated">&lt;code&gt;NamedNodeMap&lt;/code&gt; DOM中的NamedNodeMap对象是活动的。</target>
        </trans-unit>
        <trans-unit id="17cd49e3414bb9cba7a7c1cd9d63e5333e1184ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingEvent&lt;/code&gt; represents an event that occurs in a naming or directory service. There are two categories of naming events:</source>
          <target state="translated">&lt;code&gt;NamingEvent&lt;/code&gt; 表示在命名或目录服务中发生的事件。命名事件分为两类：</target>
        </trans-unit>
        <trans-unit id="1db2f5e519e46461d928a970d7c295fab04e8930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; successively loads in object factories and invokes this method on them until one produces a non-null answer. When an exception is thrown by an object factory, the exception is passed on to the caller of &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; (and no search is made for other factories that may produce a non-null answer). An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="translated">&lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; 会依次加载对象工厂并在对象工厂上调用此方法，直到产生非空答案为止。当对象工厂引发异常时，该异常将传递给 &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; 的调用方（并且不会搜索可能产生非空答案的其他工厂）。只有在确定对象工厂是唯一的预期工厂并且不应尝试其他对象工厂的情况下，对象工厂才应引发异常。如果该工厂无法使用提供的参数创建对象，则应返回null。</target>
        </trans-unit>
        <trans-unit id="d64280ca1e45b694b8ae4874b022d2eee1f18d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; successively loads in state factories and invokes this method on them until one produces a non-null answer. &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; successively loads in state factories. If a factory implements &lt;code&gt;DirStateFactory&lt;/code&gt;, then &lt;code&gt;DirectoryManager&lt;/code&gt; invokes &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt;; otherwise it invokes &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; 会依次加载状态工厂，并在状态工厂上调用此方法，直到产生非空答案为止。 &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; 先后在状态工厂中加载。如果工厂实现 &lt;code&gt;DirStateFactory&lt;/code&gt; ，则 &lt;code&gt;DirectoryManager&lt;/code&gt; 调用 &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; ; 否则，它将调用 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37b7486bfec76e1ea72808e8bad65133fb5f28d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigationFilter&lt;/code&gt; can be used to restrict where the cursor can be positioned.</source>
          <target state="translated">&lt;code&gt;NavigationFilter&lt;/code&gt; 可用于限制光标的放置位置。</target>
        </trans-unit>
        <trans-unit id="9ae8914d40c81648f3e49bd74d0fcd8af7daba0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigationFilter&lt;/code&gt; can be used to restrict where the cursor can be positioned. When the default cursor positioning actions attempt to reposition the cursor they will call into the &lt;code&gt;NavigationFilter&lt;/code&gt;, assuming the &lt;code&gt;JTextComponent&lt;/code&gt; has a non-null &lt;code&gt;NavigationFilter&lt;/code&gt; set. In this manner the &lt;code&gt;NavigationFilter&lt;/code&gt; can effectively restrict where the cursor can be positioned. Similarly &lt;code&gt;DefaultCaret&lt;/code&gt; will call into the &lt;code&gt;NavigationFilter&lt;/code&gt; when the user is changing the selection to further restrict where the cursor can be positioned.</source>
          <target state="translated">&lt;code&gt;NavigationFilter&lt;/code&gt; 可用于限制光标的放置位置。当默认的光标定位操作尝试重新定位光标时，它们将调用 &lt;code&gt;NavigationFilter&lt;/code&gt; ，假设 &lt;code&gt;JTextComponent&lt;/code&gt; 设置了一个非null的 &lt;code&gt;NavigationFilter&lt;/code&gt; 。通过这种方式， &lt;code&gt;NavigationFilter&lt;/code&gt; 可以有效地限制光标的定位位置。类似地，当用户更改选择以进一步限制光标的放置位置时， &lt;code&gt;DefaultCaret&lt;/code&gt; 将调用 &lt;code&gt;NavigationFilter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b02b3a9b17a7c6cda60e7655c9a99c73f643a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoSuchElementException&lt;/code&gt; - if this vector has no components</source>
          <target state="translated">&lt;code&gt;NoSuchElementException&lt;/code&gt; -如果此向量没有组件</target>
        </trans-unit>
        <trans-unit id="bf0ca623ba94785698d7e451a3ca572babd13ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Node&lt;/code&gt; -- &lt;code&gt;Node.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; -- &lt;code&gt;Node.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47bdc81cda3e7e7f0daa60ec88d87aa20b530842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeFilters&lt;/code&gt; do not need to know how to traverse from node to node, nor do they need to know anything about the data structure that is being traversed. This makes it very easy to write filters, since the only thing they have to know how to do is evaluate a single node. One filter may be used with a number of different kinds of traversals, encouraging code reuse.</source>
          <target state="translated">&lt;code&gt;NodeFilters&lt;/code&gt; 不需要知道如何从一个节点到另一个节点遍历，也不需要知道有关正在遍历的数据结构的任何知识。这使得编写过滤器非常容易，因为他们唯一需要知道的方法就是评估单个节点。一个过滤器可以与多种不同类型的遍历一起使用，从而鼓励代码重用。</target>
        </trans-unit>
        <trans-unit id="b2edca722138d3b1139699c656c7cea8c7d4a39d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeIterators&lt;/code&gt; are used to step through a set of nodes, e.g.</source>
          <target state="translated">&lt;code&gt;NodeIterators&lt;/code&gt; 用于逐步浏览一组节点，例如</target>
        </trans-unit>
        <trans-unit id="c53e05a98286f7bc9ba514419c61933b80e450e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeIterators&lt;/code&gt; are used to step through a set of nodes, e.g. the set of nodes in a &lt;code&gt;NodeList&lt;/code&gt;, the document subtree governed by a particular &lt;code&gt;Node&lt;/code&gt;, the results of a query, or any other set of nodes. The set of nodes to be iterated is determined by the implementation of the &lt;code&gt;NodeIterator&lt;/code&gt;. DOM Level 2 specifies a single &lt;code&gt;NodeIterator&lt;/code&gt; implementation for document-order traversal of a document subtree. Instances of these &lt;code&gt;NodeIterators&lt;/code&gt; are created by calling &lt;code&gt;DocumentTraversal&lt;/code&gt;&lt;code&gt;.createNodeIterator()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NodeIterators&lt;/code&gt; 用于逐步浏览一组节点，例如 &lt;code&gt;NodeList&lt;/code&gt; 中的节点集，由特定 &lt;code&gt;Node&lt;/code&gt; 控制的文档子树，查询结果或任何其他节点集。要迭代的节点集由 &lt;code&gt;NodeIterator&lt;/code&gt; 的实现确定。DOM级别2为文档子树的文档顺序遍历指定了一个 &lt;code&gt;NodeIterator&lt;/code&gt; 实现。通过调用 &lt;code&gt;DocumentTraversal&lt;/code&gt; &lt;code&gt;.createNodeIterator()&lt;/code&gt; 创建这些 &lt;code&gt;NodeIterators&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="6705e7796155d0ab638bdb0eab1c503c594536d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodeset&lt;/code&gt; -- &lt;code&gt;XPathNodes.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Nodeset&lt;/code&gt; -- &lt;code&gt;XPathNodes.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7431568a4e997688dcd2fe8485a0ecf5e645a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notation&lt;/code&gt; nodes can be imported, however in the current release of the DOM the &lt;code&gt;DocumentType&lt;/code&gt; is readonly. Ability to add these imported nodes to a &lt;code&gt;DocumentType&lt;/code&gt; will be considered for addition to a future release of the DOM.On import, the &lt;code&gt;publicId&lt;/code&gt; and &lt;code&gt;systemId&lt;/code&gt; attributes are copied. Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on this type of nodes since they cannot have any children.</source>
          <target state="translated">&lt;code&gt;Notation&lt;/code&gt; 可以导入符号节点，但是在当前的DOM版本中， &lt;code&gt;DocumentType&lt;/code&gt; 是只读的。在将来的DOM版本中，将考虑将这些导入的节点添加到 &lt;code&gt;DocumentType&lt;/code&gt; 的能力。在导入时，将复制 &lt;code&gt;publicId&lt;/code&gt; 和 &lt;code&gt;systemId&lt;/code&gt; 属性。请注意， &lt;code&gt;deep&lt;/code&gt; 参数对此类型的节点无效，因为它们不能有任何子节点。</target>
        </trans-unit>
        <trans-unit id="a5570bb694562e5a548ac75bc58bdaaf2e740c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notation&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Notation&lt;/code&gt; 不能使用表示法节点。</target>
        </trans-unit>
        <trans-unit id="08f520ff0b2c1120a1b1efb420b122d27bab1db1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; -- &lt;code&gt;Number.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; -- &lt;code&gt;Number.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69704c9f6d1a18a613bb40d5045ce4bac49f8125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 可帮助您格式化和解析任何语言环境的数字。您的代码可以完全独立于小数点，千位分隔符甚至使用的特定十进制数字的语言环境约定，或者数字格式是否为偶数。</target>
        </trans-unit>
        <trans-unit id="a62dcdecdb771696235e908fc00600289aedc2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; is the abstract base class for all number formats.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 是所有数字格式的抽象基类。</target>
        </trans-unit>
        <trans-unit id="3f8b124e4dcf0afad09b7b86e28e457462dac5df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. &lt;code&gt;NumberFormat&lt;/code&gt; also provides methods for determining which locales have number formats, and what their names are.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 是所有数字格式的抽象基类。此类提供了用于格式化和解析数字的接口。 &lt;code&gt;NumberFormat&lt;/code&gt; 还提供了用于确定哪些语言环境具有数字格式及其名称的方法。</target>
        </trans-unit>
        <trans-unit id="c3ba2e72dcc3a147bbf1b505e678ea6aa3b97354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; provides slightly different behavior to &lt;code&gt;stringToValue&lt;/code&gt; than that of its superclass. If you have specified a Class for values, &lt;a href=&quot;defaultformatter#setValueClass(java.lang.Class)&quot;&gt;&lt;code&gt;DefaultFormatter.setValueClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;, that is one of of &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt; or &lt;code&gt;Short&lt;/code&gt; and the Format's &lt;code&gt;parseObject&lt;/code&gt; returns an instance of &lt;code&gt;Number&lt;/code&gt;, the corresponding instance of the value class will be created using the constructor appropriate for the primitive type the value class represents. For example: &lt;code&gt;setValueClass(Integer.class)&lt;/code&gt; will cause the resulting value to be created via &lt;code&gt;Integer.valueOf(((Number)formatter.parseObject(string)).intValue())&lt;/code&gt;. This is typically useful if you wish to set a min/max value as the various &lt;code&gt;Number&lt;/code&gt; implementations are generally not comparable to each other. This is also useful if for some reason you need a specific &lt;code&gt;Number&lt;/code&gt; implementation for your values.</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 为 &lt;code&gt;stringToValue&lt;/code&gt; 提供的行为与其父类的行为略有不同。如果您指定一个类的值，&lt;a href=&quot;defaultformatter#setValueClass(java.lang.Class)&quot;&gt; &lt;code&gt;DefaultFormatter.setValueClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;，这是一个 &lt;code&gt;Integer&lt;/code&gt; ， &lt;code&gt;Long&lt;/code&gt; ， &lt;code&gt;Float&lt;/code&gt; ， &lt;code&gt;Double&lt;/code&gt; ， &lt;code&gt;Byte&lt;/code&gt; 或 &lt;code&gt;Short&lt;/code&gt; 和格式的 &lt;code&gt;parseObject&lt;/code&gt; 返回的实例 &lt;code&gt;Number&lt;/code&gt; 时，值类的对应实例将使用适合于值类所表示的原始类型的构造函数来创建。例如： &lt;code&gt;setValueClass(Integer.class)&lt;/code&gt; 将导致通过 &lt;code&gt;Integer.valueOf(((Number)formatter.parseObject(string)).intValue())&lt;/code&gt; 创建结果值。如果您希望设置一个最小值/最大值，这通常很有用，因为各种 &lt;code&gt;Number&lt;/code&gt; 实现通常不能相互比较。如果出于某些原因需要特定的 &lt;code&gt;Number&lt;/code&gt; 实现来实现值，这也很有用。</target>
        </trans-unit>
        <trans-unit id="828d002b3afbbcc2f93875ba43578cbc4de28fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; subclasses &lt;code&gt;InternationalFormatter&lt;/code&gt; adding special behavior for numbers.</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 子类化 &lt;code&gt;InternationalFormatter&lt;/code&gt; ,为数字添加了特殊的行为。</target>
        </trans-unit>
        <trans-unit id="bb16e6e39a618c2251cd1e1b2d85f0006ce3d55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; subclasses &lt;code&gt;InternationalFormatter&lt;/code&gt; adding special behavior for numbers. Among the specializations are (these are only used if the &lt;code&gt;NumberFormatter&lt;/code&gt; does not display invalid numbers, for example, &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 子类化 &lt;code&gt;InternationalFormatter&lt;/code&gt; ,为数字添加了特殊的行为。其中一种是特殊化（仅当 &lt;code&gt;NumberFormatter&lt;/code&gt; 不显示无效数字时才使用这些特殊化，例如 &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="ee0419c27c215157223e7ab8eab3f6c49e979585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumericShaper&lt;/code&gt; Constants</source>
          <target state="translated">&lt;code&gt;NumericShaper&lt;/code&gt; 常量</target>
        </trans-unit>
        <trans-unit id="8185e03fc7c6426082a3f24e65952aa655667088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT = &lt;/code&gt;&lt;var&gt;serfile&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;OBJECT = &lt;/code&gt; &lt;var&gt;serfile&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e8eeb23fb07ae1cee8d44619de7607f778f1e9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPAQUE&lt;/code&gt; if all colors used by this &lt;code&gt;Paint&lt;/code&gt; object are opaque, &lt;code&gt;TRANSLUCENT&lt;/code&gt; if at least one of the colors used by this &lt;code&gt;Paint&lt;/code&gt; object is not opaque.</source>
          <target state="translated">&lt;code&gt;OPAQUE&lt;/code&gt; 如果通过此使用的所有颜色 &lt;code&gt;Paint&lt;/code&gt; 对象是不透明的， &lt;code&gt;TRANSLUCENT&lt;/code&gt; 如果此所使用的颜色的至少一个 &lt;code&gt;Paint&lt;/code&gt; 对象不是不透明的。</target>
        </trans-unit>
        <trans-unit id="80f10e18d714ff767c08003d54dacb63050f4bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; references whose legal values are defined as a range must implement the &lt;code&gt;Comparable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 合法值定义为范围的对象引用必须实现 &lt;code&gt;Comparable&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="ca87a14235f184e15de9592b8154a4d1e9bbd4fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; representation of text</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 文本的对象表示</target>
        </trans-unit>
        <trans-unit id="c9f2653079246ad0302e9b55a05b78d3f74924cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; is an immutable representation of a date-time with an offset. This class stores all date and time fields, to a precision of nanoseconds, as well as the offset from UTC/Greenwich. For example, the value &quot;2nd October 2007 at 13:45.30.123456789 +02:00&quot; can be stored in an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 是带有偏移量的日期时间的不可变表示形式。此类存储所有日期和时间字段（精度为纳秒）以及与UTC /格林威治时间的偏移量。例如，值&amp;ldquo; 2nd October 2007 at 13：45.30.123456789 +02：00&amp;rdquo;可以存储在 &lt;code&gt;OffsetDateTime&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="fd5d11805842ba2f963fc4088087af559a9b8cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; is an immutable representation of a date-time with an offset. This class stores all date and time fields, to a precision of nanoseconds, as well as the offset from UTC/Greenwich. For example, the value &quot;2nd October 2007 at 13:45:30.123456789 +02:00&quot; can be stored in an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 是带有偏移量的日期时间的不可变表示形式。此类存储所有日期和时间字段（精度为纳秒）以及与UTC /格林威治时间的偏移量。例如，值&amp;ldquo; 2007年10月2日13：45：30.123456789 +02：00&amp;rdquo;可以存储在 &lt;code&gt;OffsetDateTime&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0d3f6ee4197f3b2b983bca3cca829db904232908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 返回 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6edaafd79341b725c5f8e6ebeccc458c11de8581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 返回 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05fe4e4a096b20b61d48662f41d683e52ee7c4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="cc0f13b6a3cd72c40fc03bdbbbdfd8afab8c8cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt;, &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; all store an instant on the time-line to nanosecond precision. &lt;code&gt;Instant&lt;/code&gt; is the simplest, simply representing the instant. &lt;code&gt;OffsetDateTime&lt;/code&gt; adds to the instant the offset from UTC/Greenwich, which allows the local date-time to be obtained. &lt;code&gt;ZonedDateTime&lt;/code&gt; adds full time-zone rules.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; ，&lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;都在时间线上存储一个瞬间，精确到纳秒级。 &lt;code&gt;Instant&lt;/code&gt; 是最简单的，仅表示即时。 &lt;code&gt;OffsetDateTime&lt;/code&gt; 将与UTC /格林威治标准时间的偏移量相加，从而可以获取本地日期时间。 &lt;code&gt;ZonedDateTime&lt;/code&gt; 添加完整的时区规则。</target>
        </trans-unit>
        <trans-unit id="747ef8ee3778f91e8ac9d910664411561a55c9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second-offset. This class stores all time fields, to a precision of nanoseconds, as well as a zone offset. For example, the value &quot;13:45.30.123456789+02:00&quot; can be stored in an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 是一个不可变的日期时间对象，代表一个时间，通常被视为时分秒偏移。此类存储所有时间字段（精度为纳秒）以及区域偏移。例如，值&amp;ldquo; 13：45.30.123456789 + 02：00&amp;rdquo;可以存储在 &lt;code&gt;OffsetTime&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="8a77af86f7130ef19d25ae4ebac7f5a5386ebc24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second-offset. This class stores all time fields, to a precision of nanoseconds, as well as a zone offset. For example, the value &quot;13:45:30.123456789+02:00&quot; can be stored in an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 是一个不可变的日期时间对象，它代表一个时间，通常被视为时，分，秒的偏移量。此类存储所有时间字段（精度为纳秒）以及区域偏移。例如，值&amp;ldquo; 13：45：30.123456789 + 02：00&amp;rdquo;可以存储在 &lt;code&gt;OffsetTime&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="fb556f1d044c93dd78fc127a07542edfbf5c323d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 返回 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6c69736d03b4fa389637a846b670c2e73d679e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 返回null</target>
        </trans-unit>
        <trans-unit id="32491c76af56dd803b6d0f847510706d254ed46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 返回null（不表示日期）</target>
        </trans-unit>
        <trans-unit id="dbc436631db3e42ab64490a5d3372bc7f7c11731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional&lt;/code&gt; contains a copy of the context or empty if context is null.</source>
          <target state="translated">&lt;code&gt;Optional&lt;/code&gt; 包含上下文的副本；如果context为null，则为空。</target>
        </trans-unit>
        <trans-unit id="7309fc575e1f2c3685e6ad0e704892b1c62eb4fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result,&quot; and where using &lt;code&gt;null&lt;/code&gt; is likely to cause errors. A variable whose type is &lt;code&gt;Optional&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;Optional&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Optional&lt;/code&gt; 主要用于在明确需要表示&amp;ldquo;无结果&amp;rdquo;并且使用 &lt;code&gt;null&lt;/code&gt; 可能导致错误的情况下用作方法返回类型。类型为 &lt;code&gt;Optional&lt;/code&gt; 的变量本身不应为 &lt;code&gt;null&lt;/code&gt; ；它应该始终指向 &lt;code&gt;Optional&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="f1f24b3fba50109e527e904488bb44e22ec470ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalDouble&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalDouble&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalDouble&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalDouble&lt;/code&gt; 主要用于需要明确表示&amp;ldquo;无结果&amp;rdquo;的方法返回类型。类型为 &lt;code&gt;OptionalDouble&lt;/code&gt; 的变量本身不应为 &lt;code&gt;null&lt;/code&gt; ；它应该始终指向 &lt;code&gt;OptionalDouble&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="b877a4fccfde4c8156b8c47ee8b462ef38c2bc9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalInt&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalInt&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalInt&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalInt&lt;/code&gt; 主要用于需要明确表示&amp;ldquo;无结果&amp;rdquo;的方法返回类型。类型为 &lt;code&gt;OptionalInt&lt;/code&gt; 的变量本身绝不能为 &lt;code&gt;null&lt;/code&gt; ；它应该始终指向 &lt;code&gt;OptionalInt&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="cf2607c5b1175552b80c75c09227eae06be75347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalLong&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalLong&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalLong&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalLong&lt;/code&gt; 主要用于需要明确表示&amp;ldquo;无结果&amp;rdquo;的方法返回类型。类型为 &lt;code&gt;OptionalLong&lt;/code&gt; 的变量本身绝不能为 &lt;code&gt;null&lt;/code&gt; ; 它应该始终指向 &lt;code&gt;OptionalLong&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="77dac311fc96d660e341cef7460eeea0f8d7c514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to the visitor's methods</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; -访问者方法的附加参数的类型</target>
        </trans-unit>
        <trans-unit id="922006ae4f2d58df64f97acb7a01b82595c3d105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to this visitor's methods.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; -此访问者方法的附加参数的类型。</target>
        </trans-unit>
        <trans-unit id="c62ebd37997a8e857f60b36d7ca67d9b0351d5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to this visitor's methods. Use &lt;code&gt;Void&lt;/code&gt; for visitors that do not need an additional parameter.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; -此访问者方法的附加参数的类型。将 &lt;code&gt;Void&lt;/code&gt; 用于不需要其他参数的访问者。</target>
        </trans-unit>
        <trans-unit id="bf991d6427ef4a01b1368453ba715a86e4b880b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; corresponds to the POST from method</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 对应于from方法的POST</target>
        </trans-unit>
        <trans-unit id="0b739bd423f77c49d62539efaa695b288e8c1955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI1.in(C1)&lt;/code&gt; different package</source>
          <target state="translated">&lt;code&gt;PRI1.in(C1)&lt;/code&gt; 不同的包装</target>
        </trans-unit>
        <trans-unit id="feed3ab8e83141c1f42159d756b92bb27015d5de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI1.in(C1)&lt;/code&gt; same package</source>
          <target state="translated">&lt;code&gt;PRI1.in(C1)&lt;/code&gt; 相同的软件包</target>
        </trans-unit>
        <trans-unit id="6bbd61e7beca9d012e4886a31aea5799d4167365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI1.in(D)&lt;/code&gt; different module</source>
          <target state="translated">&lt;code&gt;PRI1.in(D)&lt;/code&gt; 不同的模块</target>
        </trans-unit>
        <trans-unit id="d51c61e85021fdf1b9b1b4c2c3c8f8e9498af09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(C1)&lt;/code&gt; hop back to module</source>
          <target state="translated">&lt;code&gt;PRI2.in(C1)&lt;/code&gt; 跳回模块</target>
        </trans-unit>
        <trans-unit id="5266800496eef635886f55e9444658748627f071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(D2)&lt;/code&gt; different package</source>
          <target state="translated">&lt;code&gt;PRI2.in(D2)&lt;/code&gt; 不同的包装</target>
        </trans-unit>
        <trans-unit id="6222dc65e125077f0ef1c930dbcb5d43631a967b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(D2)&lt;/code&gt; same package</source>
          <target state="translated">&lt;code&gt;PRI2.in(D2)&lt;/code&gt; 相同的软件包</target>
        </trans-unit>
        <trans-unit id="c390f8eef7c3475f69261b39aab83fb3b199a5ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRI2.in(E)&lt;/code&gt; hop to third module</source>
          <target state="translated">&lt;code&gt;PRI2.in(E)&lt;/code&gt; 跳至第三模块</target>
        </trans-unit>
        <trans-unit id="0cb04a7ab75fc7c438013c18d6beb8308c6ff2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRO&lt;/code&gt; indicates &lt;a href=&quot;#PROTECTED&quot;&gt;&lt;code&gt;PROTECTED&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;PRI&lt;/code&gt; indicates &lt;a href=&quot;#PRIVATE&quot;&gt;&lt;code&gt;PRIVATE&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;PAC&lt;/code&gt; indicates &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;MOD&lt;/code&gt; indicates &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;1R&lt;/code&gt; and &lt;code&gt;2R&lt;/code&gt; indicate &lt;a href=&quot;#PUBLIC&quot;&gt;&lt;code&gt;PUBLIC&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;U&lt;/code&gt; indicates &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;&lt;code&gt;UNCONDITIONAL&lt;/code&gt;&lt;/a&gt; bit set, &lt;code&gt;IAE&lt;/code&gt; indicates &lt;code&gt;IllegalAccessException&lt;/code&gt; thrown.</source>
          <target state="translated">&lt;code&gt;PRO&lt;/code&gt; 指示&lt;a href=&quot;#PROTECTED&quot;&gt; &lt;code&gt;PROTECTED&lt;/code&gt; &lt;/a&gt;位设置， &lt;code&gt;PRI&lt;/code&gt; 指示&lt;a href=&quot;#PRIVATE&quot;&gt; &lt;code&gt;PRIVATE&lt;/code&gt; &lt;/a&gt;位设置， &lt;code&gt;PAC&lt;/code&gt; 指示&lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;位设置， &lt;code&gt;MOD&lt;/code&gt; 指示&lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;位设置， &lt;code&gt;1R&lt;/code&gt; 和 &lt;code&gt;2R&lt;/code&gt; 指示&lt;a href=&quot;#PUBLIC&quot;&gt; &lt;code&gt;PUBLIC&lt;/code&gt; &lt;/a&gt;位设置， &lt;code&gt;U&lt;/code&gt; 指示&lt;a href=&quot;#UNCONDITIONAL&quot;&gt; &lt;code&gt;UNCONDITIONAL&lt;/code&gt; &lt;/a&gt;位设置， &lt;code&gt;IAE&lt;/code&gt; 指示 &lt;code&gt;IllegalAccessException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4187f6d523accc36108f687c2d15a65e8a549328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - If present, then it is split into the &lt;code&gt;YEAR&lt;/code&gt; and &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;. If the mode is strict or smart then the field is validated.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; -如果存在，则分为 &lt;code&gt;YEAR&lt;/code&gt; 和 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 。如果该模式是严格或智能模式，则该字段将被验证。</target>
        </trans-unit>
        <trans-unit id="8e4c2b1bef8f7b831de2ce63ea052d62bf4486ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified proleptic-month. The day-of-month will be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; -返回具有指定的proleptic-month 的 &lt;code&gt;LocalDate&lt;/code&gt; 。除非新的月份和年份无效，否则星期几将保持不变。在这种情况下，将月份日期调整为新月份和年份的最大有效值。</target>
        </trans-unit>
        <trans-unit id="e09b11fee61d275d63c2254d9be273d616ad7a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified proleptic-month. This completely replaces the year and month of this object.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; -返回带有指定 &lt;code&gt;YearMonth&lt;/code&gt; 。这将完全替换该对象的年份和月份。</target>
        </trans-unit>
        <trans-unit id="1066d40dc72f60175bf2efce878721170c292b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUB.in(D).in(E)&lt;/code&gt; third module</source>
          <target state="translated">&lt;code&gt;PUB.in(D).in(E)&lt;/code&gt; 第三模块</target>
        </trans-unit>
        <trans-unit id="eb050715279f9becb8d52d29ef4fad30f9c5c542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUB.in(D)&lt;/code&gt; different module</source>
          <target state="translated">&lt;code&gt;PUB.in(D)&lt;/code&gt; 不同的模块</target>
        </trans-unit>
        <trans-unit id="6a733f517cf6ef22d5273ea3306a50eb5b611e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pacific Standard Time&lt;/code&gt;; &lt;code&gt;PST&lt;/code&gt;; &lt;code&gt;GMT-08:00&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Pacific Standard Time&lt;/code&gt; ; &lt;code&gt;PST&lt;/code&gt; ; &lt;code&gt;GMT-08:00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12c3c1a284fc6b9d375f248307f17359a66ab888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Package&lt;/code&gt; objects contain version information about the implementation and specification of a Java package.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 对象包含有关Java软件包的实现和规范的版本信息。</target>
        </trans-unit>
        <trans-unit id="4308eb4729e35d6bf10b5f07656f4548fe66e043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Package&lt;/code&gt; objects contain version information about the implementation and specification of a Java package. This versioning information is retrieved and made available by the &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; instance that loaded the class(es). Typically, it is stored in the manifest that is distributed with the classes.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 对象包含有关Java软件包的实现和规范的版本信息。加载该类的&lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt;实例将检索此版本信息并使其可用。通常，它存储在与类一起分发的清单中。</target>
        </trans-unit>
        <trans-unit id="3184fcc28bfbb3e3652e068c94ac106af122eec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Painter&lt;/code&gt;s are simply encapsulations of Java2D code and make it fairly trivial to reuse existing &lt;code&gt;Painter&lt;/code&gt;s or to combine them together. Implementations of this interface are also trivial to write, such that if you can't find a &lt;code&gt;Painter&lt;/code&gt; that does what you need, you can write one with minimal effort. Writing a &lt;code&gt;Painter&lt;/code&gt; requires knowledge of Java2D.</source>
          <target state="translated">&lt;code&gt;Painter&lt;/code&gt; 只是Java2D代码的封装，使得重用现有的 &lt;code&gt;Painter&lt;/code&gt; 或将它们组合在一起相当简单。该接口的实现也很容易编写，因此，如果找不到符合您需要的 &lt;code&gt;Painter&lt;/code&gt; ，则可以用最少的精力编写一个。编写 &lt;code&gt;Painter&lt;/code&gt; 需要Java2D的知识。</target>
        </trans-unit>
        <trans-unit id="2ae426ea16f6c01f7525e4fb9b8daa7c7ee0008a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Panel&lt;/code&gt; is the simplest container class.</source>
          <target state="translated">&lt;code&gt;Panel&lt;/code&gt; 是最简单的容器类。</target>
        </trans-unit>
        <trans-unit id="bf58b12f094b17fd0230c881bc1c6f20e1e4a93a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Panel&lt;/code&gt; is the simplest container class. A panel provides space in which an application can attach any other component, including other panels.</source>
          <target state="translated">&lt;code&gt;Panel&lt;/code&gt; 是最简单的容器类。面板提供了一个空间，应用程序可以在其中附加任何其他组件，包括其他面板。</target>
        </trans-unit>
        <trans-unit id="f88524b1c692827b9287752ed80bb843e014e773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParagraphView&lt;/code&gt; instances are breakable along the &lt;code&gt;Y_AXIS&lt;/code&gt; only, and only if &lt;code&gt;len&lt;/code&gt; is after the first line.</source>
          <target state="translated">&lt;code&gt;ParagraphView&lt;/code&gt; 仅当 &lt;code&gt;len&lt;/code&gt; 在第一行之后时，ParagraphView实例才可沿 &lt;code&gt;Y_AXIS&lt;/code&gt; 断开。</target>
        </trans-unit>
        <trans-unit id="59266e78d3708d29d7685fac4eae848b92d30711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParagraphView&lt;/code&gt; instances are breakable along the &lt;code&gt;Y_AXIS&lt;/code&gt; only, and only if &lt;code&gt;len&lt;/code&gt; is after the first row. If the length is less than one row, a value of &lt;code&gt;BadBreakWeight&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;ParagraphView&lt;/code&gt; 仅当 &lt;code&gt;len&lt;/code&gt; 在第一行之后时，ParagraphView实例才可沿 &lt;code&gt;Y_AXIS&lt;/code&gt; 断开。如果长度小于一行，则返回 &lt;code&gt;BadBreakWeight&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="3c941976ba8bbde2caadcd614cc35eb62f4e4de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParallelGroup&lt;/code&gt;s created with an alignment other than &lt;code&gt;BASELINE&lt;/code&gt; align elements that are smaller than the size of the group in one of three ways: centered, anchored to the leading edge, or anchored to the trailing edge.</source>
          <target state="translated">&lt;code&gt;ParallelGroup&lt;/code&gt; 使用除 &lt;code&gt;BASELINE&lt;/code&gt; 之外的其他对齐方式创建的ParallelGroup会以以下三种方式之一对齐小于组大小的元素：居中，锚定至前缘或锚定至后缘。</target>
        </trans-unit>
        <trans-unit id="4f1bef79e76b3c298b8f1e0ea0107bf3710c853a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParameterMetaData&lt;/code&gt; interface -- provides information about the parameters to &lt;code&gt;PreparedStatement&lt;/code&gt; commands</source>
          <target state="translated">&lt;code&gt;ParameterMetaData&lt;/code&gt; 接口-为 &lt;code&gt;PreparedStatement&lt;/code&gt; 命令提供有关参数的信息</target>
        </trans-unit>
        <trans-unit id="d332e015aea351b8b9c98d96fad816ef5c64bd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsePosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to keep track of the current position during parsing.</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 是 &lt;code&gt;Format&lt;/code&gt; 及其子类使用的简单类，用于在解析过程中跟踪当前位置。</target>
        </trans-unit>
        <trans-unit id="0b01d465e11f55069c6f0d71183162dfea21a9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsePosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to keep track of the current position during parsing. The &lt;code&gt;parseObject&lt;/code&gt; method in the various &lt;code&gt;Format&lt;/code&gt; classes requires a &lt;code&gt;ParsePosition&lt;/code&gt; object as an argument.</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 是 &lt;code&gt;Format&lt;/code&gt; 及其子类使用的简单类，用于在解析过程中跟踪当前位置。各种 &lt;code&gt;Format&lt;/code&gt; 类中的 &lt;code&gt;parseObject&lt;/code&gt; 方法需要一个 &lt;code&gt;ParsePosition&lt;/code&gt; 对象作为参数。</target>
        </trans-unit>
        <trans-unit id="54bb2ec20881507a99c401abc6b56363280e79a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path2D&lt;/code&gt; provides exactly those facilities required for basic construction and management of a geometric path and implementation of the above interfaces with little added interpretation. If it is useful to manipulate the interiors of closed geometric shapes beyond simple hit testing then the &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class provides additional capabilities specifically targeted at closed figures. While both classes nominally implement the &lt;code&gt;Shape&lt;/code&gt; interface, they differ in purpose and together they provide two useful views of a geometric shape where &lt;code&gt;Path2D&lt;/code&gt; deals primarily with a trajectory formed by path segments and &lt;code&gt;Area&lt;/code&gt; deals more with interpretation and manipulation of enclosed regions of 2D geometric space.</source>
          <target state="translated">&lt;code&gt;Path2D&lt;/code&gt; 完全提供了几何路径的基本构造和管理以及上述接口的实现所需的那些设施，而几乎没有增加任何解释。如果除了简单的命中测试之外还可以操作封闭的几何形状的内部，则&lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;类可提供专门针对封闭图形的附加功能。虽然这两个类名义上都实现 &lt;code&gt;Shape&lt;/code&gt; 接口，但是它们的目的不同，并且它们一起提供了两个有用的几何形状视图，其中 &lt;code&gt;Path2D&lt;/code&gt; 主要处理由路径段形成的轨迹，而 &lt;code&gt;Area&lt;/code&gt; 处理更多的是对2D几何空间的封闭区域的解释和操作。 。</target>
        </trans-unit>
        <trans-unit id="725f5ddf7763d423eda66951a1d4efd989748e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PersistentSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;PersistentSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="bd85a37b9664d4f2321ca036855aff097361659f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Popup&lt;/code&gt; does not descend from &lt;code&gt;Component&lt;/code&gt;, rather implementations of &lt;code&gt;Popup&lt;/code&gt; are responsible for creating and maintaining their own &lt;code&gt;Component&lt;/code&gt;s to render the requested &lt;code&gt;Component&lt;/code&gt; to the user.</source>
          <target state="translated">&lt;code&gt;Popup&lt;/code&gt; 并非派生自 &lt;code&gt;Component&lt;/code&gt; ，而是 &lt;code&gt;Popup&lt;/code&gt; 的实现负责创建和维护自己的 &lt;code&gt;Component&lt;/code&gt; ,以将请求的 &lt;code&gt;Component&lt;/code&gt; 呈现给用户。</target>
        </trans-unit>
        <trans-unit id="fb740f402aa150f39d20bfb1c1a658728470a780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PopupFactory&lt;/code&gt;, as the name implies, is used to obtain instances of &lt;code&gt;Popup&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PopupFactory&lt;/code&gt; 顾名思义，PopupFactory用于获取 &lt;code&gt;Popup&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="ab474a9710faea400895816054c5d100740d952f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PopupFactory&lt;/code&gt;, as the name implies, is used to obtain instances of &lt;code&gt;Popup&lt;/code&gt;s. &lt;code&gt;Popup&lt;/code&gt;s are used to display a &lt;code&gt;Component&lt;/code&gt; above all other &lt;code&gt;Component&lt;/code&gt;s in a particular containment hierarchy. The general contract is that once you have obtained a &lt;code&gt;Popup&lt;/code&gt; from a &lt;code&gt;PopupFactory&lt;/code&gt;, you must invoke &lt;code&gt;hide&lt;/code&gt; on the &lt;code&gt;Popup&lt;/code&gt;. The typical usage is:</source>
          <target state="translated">&lt;code&gt;PopupFactory&lt;/code&gt; 顾名思义，PopupFactory用于获取 &lt;code&gt;Popup&lt;/code&gt; 的实例。 &lt;code&gt;Popup&lt;/code&gt; 用于在特定包含层次结构中的所有其他 &lt;code&gt;Component&lt;/code&gt; 之上显示 &lt;code&gt;Component&lt;/code&gt; 。通常的约定是，一旦您从 &lt;code&gt;PopupFactory&lt;/code&gt; 获得了 &lt;code&gt;Popup&lt;/code&gt; ，就必须在 &lt;code&gt;Popup&lt;/code&gt; 上调用 &lt;code&gt;hide&lt;/code&gt; 。典型用法是：</target>
        </trans-unit>
        <trans-unit id="0f0413c8cf1cdf77186650256b11a1e2936e0d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Position&lt;/code&gt; with an offset of 0 is a special case. It never changes its offset while document content is altered.</source>
          <target state="translated">&lt;code&gt;Position&lt;/code&gt; 为0的偏移量是一个特例。更改文档内容时，它永远不会更改其偏移量。</target>
        </trans-unit>
        <trans-unit id="79f3a6ee69b3394457b9595b0feea4b5ceeb2b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PreparedStatement&lt;/code&gt; -- used to send prepared statements or basic SQL statements (derived from &lt;code&gt;Statement&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; -用于发送准备好的语句或基本SQL语句（派生自 &lt;code&gt;Statement&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ddfec47f813ac5bfe133b54d7e1655ef912631f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJob&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;PrintJob&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="24d03c1feaac5c5d678afd40cc4c37019901508f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJobAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job.</source>
          <target state="translated">&lt;code&gt;PrintJobAttribute&lt;/code&gt; 是一个标记接口，打印属性类实现该接口以指示该属性描述打印作业的状态或打印作业的某些其他特征。</target>
        </trans-unit>
        <trans-unit id="20bfd128f1b76f898859d45fa950060bf5c041a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJobAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job. A Print Service instance adds a number of &lt;code&gt;PrintJobAttributes&lt;/code&gt; to a Print Job's attribute set to report the Print Job's status. If an attribute implements &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;PrintJobAttribute&lt;/code&gt;, the client may include the attribute in a attribute set to specify the attribute's value for the Print Job.</source>
          <target state="translated">&lt;code&gt;PrintJobAttribute&lt;/code&gt; 是一个标记接口，打印属性类实现该接口以指示该属性描述打印作业的状态或打印作业的某些其他特征。一个打印服务实例将多个 &lt;code&gt;PrintJobAttributes&lt;/code&gt; 添加到一个打印作业的属性集中，以报告该打印作业的状态。如果属性同时实现&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;PrintJobAttribute&lt;/code&gt; ，则客户端可以将属性包括在属性集中，以指定&amp;ldquo;打印作业&amp;rdquo;的属性值。</target>
        </trans-unit>
        <trans-unit id="49f9e3feaf5d8167b442ce9300d0511dcf6c6795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; must be instances of interface &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 只是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; ,&lt;/a&gt;其构造函数和变异操作保证了附加的不变性，即 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 中的所有属性值都必须是接口&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; 的&lt;/a&gt;实例。在下面重新指定&lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作，以确保此附加不变性。</target>
        </trans-unit>
        <trans-unit id="f899e09674ba72d841f60ba92cefab52905c6fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintService&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;PrintService&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="eef3f14e5df3d0d2706edd64e3b8ca579f73575a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintService&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PrintService&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="e01793b4167c22062078a543832e66af0d0719e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrinterResolution&lt;/code&gt; is used in multiple ways:</source>
          <target state="translated">&lt;code&gt;PrinterResolution&lt;/code&gt; 有多种使用方式：</target>
        </trans-unit>
        <trans-unit id="cb0094c2401044684191945838ede7bd2b46a2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; provides control of native processes started by ProcessBuilder.start and Runtime.exec.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; 提供对由ProcessBuilder.start和Runtime.exec启动的本机进程的控制。</target>
        </trans-unit>
        <trans-unit id="3b8ec7db8395b083ec838a28db64a25bf83b3930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; provides control of native processes started by ProcessBuilder.start and Runtime.exec. The class provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process. The &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; 提供对由ProcessBuilder.start和Runtime.exec启动的本机进程的控制。该类提供以下方法：执行来自流程的输入，执行至流程的输出，等待流程完成，检查流程的退出状态以及销毁（杀死）流程。所述&lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;runtime#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;方法创建本机过程并返回的子类的实例 &lt;code&gt;Process&lt;/code&gt; 可用于控制该过程，并获得关于它的信息。</target>
        </trans-unit>
        <trans-unit id="9c966b2587f0f3e6f3eadbe2c03d187ad210d483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a change has occurred in a component's bounds.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; ，它指示组件范围内发生了更改。</target>
        </trans-unit>
        <trans-unit id="f33b28a5934c627cd00b184f0c2b45891534112f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a change has occurred in a component's bounds. The &lt;code&gt;oldValue&lt;/code&gt; is the old component bounds and the &lt;code&gt;newValue&lt;/code&gt; is the new component bounds.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; ，它指示组件范围内发生了更改。该 &lt;code&gt;oldValue&lt;/code&gt; 是旧的组件边界和 &lt;code&gt;newValue&lt;/code&gt; 是新的组件边界。</target>
        </trans-unit>
        <trans-unit id="1fc6054b990682647628eab0832fedebb8332f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a significant change has occurred to the children of a component like a tree or text.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; ，它指示树或文本之类的组件的子代发生了重大更改。</target>
        </trans-unit>
        <trans-unit id="60571f7c0debfd7d9c48d0c61bd9e8edf99bb1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a significant change has occurred to the children of a component like a tree or text. This change notifies the event listener that it needs to reacquire the state of the subcomponents. The &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is the component whose children have become invalid.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; ，它指示树或文本之类的组件的子代发生了重大更改。此更改通知事件侦听器它需要重新获取子组件的状态。该 &lt;code&gt;oldValue&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt; 和 &lt;code&gt;newValue&lt;/code&gt; 是他们的孩子已经变得无效的组件。</target>
        </trans-unit>
        <trans-unit id="7ff8dd3094c5297ae6a9b431bb15f8519d14a511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that text attributes have changed.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 指示文本属性已更改的PropertyChangeEvent。</target>
        </trans-unit>
        <trans-unit id="7d5e1b9441a9527d77606d4a9630d0f10c32ae68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that text has changed.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 指示文本已更改的PropertyChangeEvent。</target>
        </trans-unit>
        <trans-unit id="7e58a8d75baba6e6d89910e2db7656658699c50d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; installed on the scroll pane.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 安装在滚动窗格上。</target>
        </trans-unit>
        <trans-unit id="ba06b0dd08ce4d57a239a3b9dddd4a16a33ab51d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 从 &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 返回的PropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="a6958e056e94f9d39980355fd9db462d2f00a97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt;. You should not need to access this field, rather if you want to customize the &lt;code&gt;PropertyChangeListener&lt;/code&gt; override &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 从 &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 返回的PropertyChangeListener。您不需要访问此字段，而是如果要自定义 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 覆盖 &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="399b556c838e2cf11db4df4893f7c0f77933070c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 附加到 &lt;code&gt;JList&lt;/code&gt; 的PropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="2d699fbd7532c65d9b67bd95b5a209a336df8924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListeners&lt;/code&gt; are notified asynchronously on the</source>
          <target state="translated">&lt;code&gt;PropertyChangeListeners&lt;/code&gt; 会在</target>
        </trans-unit>
        <trans-unit id="59067153cfbf767bf0eae368624ecf2fda3e6023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeSupport&lt;/code&gt; for this &lt;code&gt;SwingWorker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PropertyChangeSupport&lt;/code&gt; 对此 &lt;code&gt;SwingWorker&lt;/code&gt; 的支持</target>
        </trans-unit>
        <trans-unit id="18dd12e6b13bdc8d1392690785a89b93fd970019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyListener&lt;/code&gt; for &lt;code&gt;JSlider.isFilled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyListener&lt;/code&gt; 为 &lt;code&gt;JSlider.isFilled&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a005f47c2c8e6ab97de822319cbb1d41c63fc760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; can be constructed either from an &lt;code&gt;InputStream&lt;/code&gt; or a &lt;code&gt;Reader&lt;/code&gt;, which represents a property file. Constructing a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance from an &lt;code&gt;InputStream&lt;/code&gt; requires that the input stream be encoded in &lt;code&gt;UTF-8&lt;/code&gt;. By default, if a &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt;&lt;code&gt;MalformedInputException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt;&lt;code&gt;UnmappableCharacterException&lt;/code&gt;&lt;/a&gt; occurs on reading the input stream, then the &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance resets to the state before the exception, re-reads the input stream in &lt;code&gt;ISO-8859-1&lt;/code&gt;, and continues reading. If the system property &lt;code&gt;&lt;span id=&quot;java.util.PropertyResourceBundle.encoding&quot;&gt;java.util.PropertyResourceBundle.encoding&lt;/span&gt;&lt;/code&gt; is set to either &quot;ISO-8859-1&quot; or &quot;UTF-8&quot;, the input stream is solely read in that encoding, and throws the exception if it encounters an invalid sequence. If &quot;ISO-8859-1&quot; is specified, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 可以从 &lt;code&gt;InputStream&lt;/code&gt; 或表示属性文件的 &lt;code&gt;Reader&lt;/code&gt; 构造。从 &lt;code&gt;InputStream&lt;/code&gt; 构造 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 实例要求将输入流编码为 &lt;code&gt;UTF-8&lt;/code&gt; 。默认情况下，如果在读取输入流时发生&lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt; &lt;code&gt;MalformedInputException&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt; &lt;code&gt;UnmappableCharacterException&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 实例将重置为异常之前的状态，并在 &lt;code&gt;ISO-8859-1&lt;/code&gt; 中重新读取输入流，然后继续读取。如果系统属性为 &lt;code&gt;&lt;span id=&quot;java.util.PropertyResourceBundle.encoding&quot;&gt;java.util.PropertyResourceBundle.encoding&lt;/span&gt;&lt;/code&gt; &lt;span id=&quot;java.util.PropertyResourceBundle.encoding&quot;&gt;&lt;/span&gt;设置为&amp;ldquo; ISO-8859-1&amp;rdquo;或&amp;ldquo; UTF-8&amp;rdquo;，则仅以该编码方式读取输入流，如果遇到无效序列，则将引发异常。如果指定了&amp;ldquo; ISO-8859-1&amp;rdquo;，则无法用ISO-8859-1编码表示的字符必须由Unicode转义符表示，如第3.3节中所定义。</target>
        </trans-unit>
        <trans-unit id="749c70a759310b6c0ac6be6b8e9326bb4117feac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; can be constructed either from an &lt;code&gt;InputStream&lt;/code&gt; or a &lt;code&gt;Reader&lt;/code&gt;, which represents a property file. Constructing a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance from an &lt;code&gt;InputStream&lt;/code&gt; requires that the input stream be encoded in &lt;code&gt;UTF-8&lt;/code&gt;. By default, if a &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt;&lt;code&gt;MalformedInputException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt;&lt;code&gt;UnmappableCharacterException&lt;/code&gt;&lt;/a&gt; occurs on reading the input stream, then the &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance resets to the state before the exception, re-reads the input stream in &lt;code&gt;ISO-8859-1&lt;/code&gt;, and continues reading. If the system property &lt;code&gt;java.util.PropertyResourceBundle.encoding&lt;/code&gt; is set to either &quot;ISO-8859-1&quot; or &quot;UTF-8&quot;, the input stream is solely read in that encoding, and throws the exception if it encounters an invalid sequence. If &quot;ISO-8859-1&quot; is specified, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 可以从 &lt;code&gt;InputStream&lt;/code&gt; 或表示属性文件的 &lt;code&gt;Reader&lt;/code&gt; 构造。从 &lt;code&gt;InputStream&lt;/code&gt; 构造 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 实例要求将输入流编码为 &lt;code&gt;UTF-8&lt;/code&gt; 。默认情况下，如果在读取输入流时发生&lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt; &lt;code&gt;MalformedInputException&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt; &lt;code&gt;UnmappableCharacterException&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 实例将重置为异常之前的状态，并在 &lt;code&gt;ISO-8859-1&lt;/code&gt; 中重新读取输入流，然后继续读取。如果系统属性为 &lt;code&gt;java.util.PropertyResourceBundle.encoding&lt;/code&gt; 设置为&amp;ldquo; ISO-8859-1&amp;rdquo;或&amp;ldquo; UTF-8&amp;rdquo;，则仅以该编码方式读取输入流，如果遇到无效序列，则将引发异常。如果指定了&amp;ldquo; ISO-8859-1&amp;rdquo;，则无法用ISO-8859-1编码表示的字符必须由Unicode转义符表示，如第3.3节中所定义。</target>
        </trans-unit>
        <trans-unit id="fc24baabfee4175aa3af89492a6508e2fc036e98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; is a concrete subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale using a set of static strings from a property file.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 是 &lt;code&gt;ResourceBundle&lt;/code&gt; 的具体子类，它使用属性文件中的一组静态字符串来管理语言环境的资源。</target>
        </trans-unit>
        <trans-unit id="e96ec8b508fe11d2f8bb4f08f31370e4ecf1c82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; is a concrete subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale using a set of static strings from a property file. See &lt;a href=&quot;resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; for more information about resource bundles.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 是 &lt;code&gt;ResourceBundle&lt;/code&gt; 的具体子类，它使用属性文件中的一组静态字符串来管理语言环境的资源。有关&lt;a href=&quot;resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt;包的更多信息，请参见ResourceBundle。</target>
        </trans-unit>
        <trans-unit id="408b51230bab9b7150ec7ee422a6ef3e7f58e82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; throws &lt;code&gt;IllegalArgumentException&lt;/code&gt; for the same reasons that &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 引发 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 的原因与 &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="da530510929fe6c96f463bc0c49e1ee92cd5450a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 提供用于创建动态代理类和实例的静态方法，它还是由这些方法创建的所有动态代理类的超类。</target>
        </trans-unit>
        <trans-unit id="60c8ecf884af360e6a1a2e1af05573b45adf00c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating objects that act like instances of interfaces but allow for customized method invocation.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 提供静态方法来创建对象，这些对象的行为类似于接口实例，但允许自定义方法调用。</target>
        </trans-unit>
        <trans-unit id="7f206786bed47d96888a69848c08426679cc5eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating objects that act like instances of interfaces but allow for customized method invocation. To create a proxy instance for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 提供静态方法来创建对象，这些对象的行为类似于接口实例，但允许自定义方法调用。为某些接口 &lt;code&gt;Foo&lt;/code&gt; 创建代理实例：</target>
        </trans-unit>
        <trans-unit id="ca585ada7df00c4b1d8fea4d54987978ddbccd39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the Namespace URI and local part.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 构造函数，用于指定名称空间URI和本地部分。</target>
        </trans-unit>
        <trans-unit id="e2eedc4571c3eec827bcfe60939843df95e4d603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the Namespace URI, local part and prefix.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 构造函数，用于指定名称空间URI，本地部分和前缀。</target>
        </trans-unit>
        <trans-unit id="c55545fb2750e34975ef7192b5fb00823b2a74ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the local part.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 指定本地部分的QName构造函数。</target>
        </trans-unit>
        <trans-unit id="bbd029620df34bd9762a8223840db541c1dc8110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; corresponding to the given &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 对应于给定 &lt;code&gt;String&lt;/code&gt; 的QName</target>
        </trans-unit>
        <trans-unit id="a8c85a6a30518746adb38fbd850ec25ed2cf89cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; derived from parsing the formatted &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 是从解析格式化的 &lt;code&gt;String&lt;/code&gt; 派生的。</target>
        </trans-unit>
        <trans-unit id="81e9568b1ff909b6fedc25500eaba911395070d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; is immutable.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 是不可变的。</target>
        </trans-unit>
        <trans-unit id="4c6e14f13a0f624db15eb12df316be14fa9502ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; represents a &lt;strong&gt;qualified name&lt;/strong&gt; as defined in the XML specifications: &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2: Datatypes specification&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 表示XML规范中定义的&lt;strong&gt;合格名称&lt;/strong&gt;：&lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2：数据类型规范&lt;/a&gt;，&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;XML中的命名空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bba3fa47be657a119757384c57fc90d0f4e99588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; represents a &lt;strong&gt;qualified name&lt;/strong&gt; as defined in the XML specifications: &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2: Datatypes specification&lt;/a&gt;, &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 表示XML规范中定义的&lt;strong&gt;合格名称&lt;/strong&gt;：&lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2：数据类型规范&lt;/a&gt;，&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;XML中的命名空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b396eea9383cb4b88b5b025775c976d9863badd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="0b93516b8e1e330d60d039e95c0fb02772feaad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; implementations generally do not allow insertion of &lt;code&gt;null&lt;/code&gt; elements, although some implementations, such as &lt;a href=&quot;linkedlist&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt;, do not prohibit insertion of &lt;code&gt;null&lt;/code&gt;. Even in the implementations that permit it, &lt;code&gt;null&lt;/code&gt; should not be inserted into a &lt;code&gt;Queue&lt;/code&gt;, as &lt;code&gt;null&lt;/code&gt; is also used as a special return value by the &lt;code&gt;poll&lt;/code&gt; method to indicate that the queue contains no elements.</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 实现通常不允许插入 &lt;code&gt;null&lt;/code&gt; 元素，尽管某些实现（例如&lt;a href=&quot;linkedlist&quot;&gt; &lt;code&gt;LinkedList&lt;/code&gt; &lt;/a&gt;）不禁止插入 &lt;code&gt;null&lt;/code&gt; 。即使在允许的实现中，也不应将 &lt;code&gt;null&lt;/code&gt; 插入 &lt;code&gt;Queue&lt;/code&gt; 中，因为 &lt;code&gt;poll&lt;/code&gt; 方法还将 &lt;code&gt;null&lt;/code&gt; 用作特殊的返回值，以指示该队列不包含任何元素。</target>
        </trans-unit>
        <trans-unit id="8679c55cdb78a70e595d02b028825709fb730408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; implementations generally do not define element-based versions of methods &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; but instead inherit the identity based versions from class &lt;code&gt;Object&lt;/code&gt;, because element-based equality is not always well-defined for queues with the same elements but different ordering properties.</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 实现通常不定义 &lt;code&gt;equals&lt;/code&gt; 和 &lt;code&gt;hashCode&lt;/code&gt; 方法的基于元素的版本，而是从 &lt;code&gt;Object&lt;/code&gt; 类继承基于身份的版本，因为对于具有相同元素但排序属性不同的队列，基于元素的相等性并不总是很好定义的。</target>
        </trans-unit>
        <trans-unit id="aedadaa81438ca4b05b6f2bd835c8da0741ec96a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R1&lt;/code&gt; - the result type of the first collector</source>
          <target state="translated">&lt;code&gt;R1&lt;/code&gt; -第一个收集器的结果类型</target>
        </trans-unit>
        <trans-unit id="ed0d668f5625376f91185a665c267beebefa8f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R2&lt;/code&gt; - the result type of the second collector</source>
          <target state="translated">&lt;code&gt;R2&lt;/code&gt; -第二个收集器的结果类型</target>
        </trans-unit>
        <trans-unit id="d5b3084d90510a484a935829d3ff8b444a3ddac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The element type of the new stream</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -新流的元素类型</target>
        </trans-unit>
        <trans-unit id="f629e4a546cc14c51a7987f2aef05acc9d7d69ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The final result type of the new collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -新收集器的最终结果类型</target>
        </trans-unit>
        <trans-unit id="60d3b1beb316e1205baef79de9638a11fef62fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The type of intermediate accumulation result, and final result, for the new collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -新收集器的中间累积结果的类型和最终结果</target>
        </trans-unit>
        <trans-unit id="c630e5a81467b58eb9e79f30ab7efe65928479f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - class of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -结果类别</target>
        </trans-unit>
        <trans-unit id="7754430553251d06e99e56218086c9955a5ef401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -收集器的结果类型</target>
        </trans-unit>
        <trans-unit id="16d793d0e9e37a8b2abb141bcb19ff1586f17209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of the downstream collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -下游收集器的结果类型</target>
        </trans-unit>
        <trans-unit id="c5c1ff4a10db643c11d376d93ee63250190fd7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of this operation.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -此操作的结果类型。</target>
        </trans-unit>
        <trans-unit id="a9fefc0a83d1467f3d4c7949842b896632be396e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the final result type</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -最终结果类型</target>
        </trans-unit>
        <trans-unit id="33f562cfb608d3acccf73609f1456db5167a2834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the published item type</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -发布的项目类型</target>
        </trans-unit>
        <trans-unit id="8c76b51e69a0849c323c7465e221b08f87a89bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the result type of the reduction operation</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -归约运算的结果类型</target>
        </trans-unit>
        <trans-unit id="1f05c5bda74f948a003c8606ea1462bb62baf4ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of the visitor's methods</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -访问者方法的返回类型</target>
        </trans-unit>
        <trans-unit id="4560e8e675a7acc63ca504ce2fb3e54fb35b188c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -此访问者方法的返回类型</target>
        </trans-unit>
        <trans-unit id="c77aeb842dafaa1f8c1e5e71b034081d5ff32c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../../java.base/java/lang/void&quot;&gt;&lt;code&gt;Void&lt;/code&gt;&lt;/a&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -此访问者方法的返回类型。将&lt;a href=&quot;../../../../../java.base/java/lang/void&quot;&gt; &lt;code&gt;Void&lt;/code&gt; &lt;/a&gt;用于不需要返回结果的访问者。</target>
        </trans-unit>
        <trans-unit id="918c3fc3373408ca6ce2da43c8190d3ed0fd5c58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../java/lang/void&quot;&gt;&lt;code&gt;Void&lt;/code&gt;&lt;/a&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -此访问者方法的返回类型。将&lt;a href=&quot;../../../../java/lang/void&quot;&gt; &lt;code&gt;Void&lt;/code&gt; &lt;/a&gt;用于不需要返回结果的访问者。</target>
        </trans-unit>
        <trans-unit id="fc83d57ed38eebfff120b35ee913384621bf2606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;code&gt;Void&lt;/code&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -此访问者方法的返回类型。将 &lt;code&gt;Void&lt;/code&gt; 用于不需要返回结果的访问者。</target>
        </trans-unit>
        <trans-unit id="d28a3271151222f7a67611f53075a5b628c7cce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the Temporal object</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -时间对象的类型</target>
        </trans-unit>
        <trans-unit id="7313d88e31203e0f8d42968a231940bba48838e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the mutable result container</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -可变结果容器的类型</target>
        </trans-unit>
        <trans-unit id="4eb784ce6b9c857b370cc34ebb112c5f7d8a53a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -结果类型</target>
        </trans-unit>
        <trans-unit id="4bb6dfc6fe71a4ea2106649887d0bbe1aee5753e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the result of the function</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -函数结果的类型</target>
        </trans-unit>
        <trans-unit id="6752128866cc67ce79fe2fab671aa74da246532d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type returned from the query</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -查询返回的类型</target>
        </trans-unit>
        <trans-unit id="572787d050c17378048bd8d95bf105f18ac9a20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - type of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; -结果类型</target>
        </trans-unit>
        <trans-unit id="2da7795b3a4eeb517c388139fe41c4fd5c716d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_getField&lt;/code&gt; which matches to &lt;code&gt;GETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_getField&lt;/code&gt; 匹配的 &lt;code&gt;GETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a920b19c5d1c4d51615317f225ebc34e10bec35f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_getStatic&lt;/code&gt; which matches to &lt;code&gt;STATIC_GETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_getStatic&lt;/code&gt; 其匹配 &lt;code&gt;STATIC_GETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdcbbd80ac70589b00c94e6efa45afd0433081ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeInterface&lt;/code&gt; which matches to &lt;code&gt;INTERFACE_VIRTUAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeInterface&lt;/code&gt; 与 &lt;code&gt;INTERFACE_VIRTUAL&lt;/code&gt; 相匹配的REF_invokeInterface</target>
        </trans-unit>
        <trans-unit id="8df7101c16b0b81b99947800c3db422a7d80b0b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeSpecial&lt;/code&gt; which matches to &lt;code&gt;SPECIAL&lt;/code&gt; or &lt;code&gt;INTERFACE_SPECIAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeSpecial&lt;/code&gt; 与 &lt;code&gt;SPECIAL&lt;/code&gt; 或 &lt;code&gt;INTERFACE_SPECIAL&lt;/code&gt; 匹配</target>
        </trans-unit>
        <trans-unit id="5d0f1205c2fce7ff0e8f978bd6adcb944e03bb56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeStatic&lt;/code&gt; which matches to &lt;code&gt;STATIC&lt;/code&gt; or &lt;code&gt;INTERFACE_STATIC&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeStatic&lt;/code&gt; 与 &lt;code&gt;STATIC&lt;/code&gt; 或 &lt;code&gt;INTERFACE_STATIC&lt;/code&gt; 匹配的REF_invokeStatic</target>
        </trans-unit>
        <trans-unit id="3cd664d7deb0f9461573a59cc39b837faecde9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_invokeVirtual&lt;/code&gt; which matches to &lt;code&gt;VIRTUAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_invokeVirtual&lt;/code&gt; ，它与 &lt;code&gt;VIRTUAL&lt;/code&gt; 相匹配</target>
        </trans-unit>
        <trans-unit id="71a9c5c609c68ccb8718a8cf6bb3b5fd7545a31f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_newInvokeSpecial&lt;/code&gt; which matches to &lt;code&gt;CONSTRUCTOR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_newInvokeSpecial&lt;/code&gt; 与 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; 匹配</target>
        </trans-unit>
        <trans-unit id="0d5e602e70c3a619edc70bad4edc5dc10ea69fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_putField&lt;/code&gt; which matches to &lt;code&gt;SETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_putField&lt;/code&gt; 其匹配 &lt;code&gt;SETTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dce8667a6efa13aa9d2a7de788ecd2bde0b48c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REF_putStatic&lt;/code&gt; which matches to &lt;code&gt;STATIC_SETTER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REF_putStatic&lt;/code&gt; 与 &lt;code&gt;STATIC_SETTER&lt;/code&gt; 匹配</target>
        </trans-unit>
        <trans-unit id="67bcbbb823d949e9a2614deae5bef9e0749cea1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI.</source>
          <target state="translated">&lt;code&gt;RMIClassLoader&lt;/code&gt; 包含静态方法以支持使用RMI进行动态类加载。</target>
        </trans-unit>
        <trans-unit id="21a3551f68fe0e3f44babcb2d8c844e6f30a03db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI. Included are methods for loading classes from a network location (one or more URLs) and obtaining the location from which an existing class should be loaded by remote parties. These methods are used by the RMI runtime when marshalling and unmarshalling classes contained in the arguments and return values of remote method calls, and they also may be invoked directly by applications in order to mimic RMI's dynamic class loading behavior.</source>
          <target state="translated">&lt;code&gt;RMIClassLoader&lt;/code&gt; 包含静态方法以支持使用RMI进行动态类加载。其中包括从网络位置（一个或多个URL）加载类并获取远程方应从中加载现有类的位置的方法。当编组和解组包含在参数中的类和远程方法调用的返回值时，RMI运行时将使用这些方法，并且它们也可以由应用程序直接调用以模仿RMI的动态类加载行为。</target>
        </trans-unit>
        <trans-unit id="d88506e3e9135913bcd88803f18d035564e60855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; 是服务提供者接口 &lt;code&gt;RMIClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de0c91bac67fc2222fd604f4ed7d597fa8904b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt;. In particular, an &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; instance provides an implementation of the following static methods of &lt;code&gt;RMIClassLoader&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; 是服务提供者接口 &lt;code&gt;RMIClassLoader&lt;/code&gt; 。特别是， &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; 实例提供了以下 &lt;code&gt;RMIClassLoader&lt;/code&gt; 静态方法的实现：</target>
        </trans-unit>
        <trans-unit id="21dff0411f1aca90f50abcb44a1221d16817046c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMISecurityManager&lt;/code&gt; implements a policy identical to the policy implemented by &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt;&lt;code&gt;SecurityManager&lt;/code&gt;&lt;/a&gt;. RMI applications should use the &lt;code&gt;SecurityManager&lt;/code&gt; class or another appropriate &lt;code&gt;SecurityManager&lt;/code&gt; implementation instead of this class. RMI's class loader will download classes from remote locations only if a security manager has been set.</source>
          <target state="translated">&lt;code&gt;RMISecurityManager&lt;/code&gt; 实施的策略与&lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt; &lt;code&gt;SecurityManager&lt;/code&gt; &lt;/a&gt;实施的策略相同。RMI应用程序应使用 &lt;code&gt;SecurityManager&lt;/code&gt; 类或其他适当的 &lt;code&gt;SecurityManager&lt;/code&gt; 实现而不是此类。仅当设置了安全管理器后，RMI的类加载器才会从远程位置下载类。</target>
        </trans-unit>
        <trans-unit id="064d766acc118d90826f3cd801ec7ee46447bff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RR&lt;/code&gt; - result type of the resulting collector</source>
          <target state="translated">&lt;code&gt;RR&lt;/code&gt; -结果收集器的结果类型</target>
        </trans-unit>
        <trans-unit id="08e56083939315acb3ac8d6d9eb96ef047650fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&lt;/code&gt; （1024、2048）</target>
        </trans-unit>
        <trans-unit id="cf4f7e3a6ec30bd47895fa42228f3c7581d40155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&lt;/code&gt; （1024、2048）</target>
        </trans-unit>
        <trans-unit id="08d0860727c4a7d941dce0f8a1ee3917b24f840b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/PKCS1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/PKCS1Padding&lt;/code&gt; （1024、2048）</target>
        </trans-unit>
        <trans-unit id="62b2f4466d958c3f3ed5b550a38c7c0f1729fce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA&lt;/code&gt; （1024、2048）</target>
        </trans-unit>
        <trans-unit id="3dd51987ef2d55d99d3b337efe4ed149d3974ae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA&lt;/code&gt; (1024, 2048, 4096)</source>
          <target state="translated">&lt;code&gt;RSA&lt;/code&gt; (1024, 2048, 4096)</target>
        </trans-unit>
        <trans-unit id="815e3a487397227803232ef66641e18db3fd87f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rdn&lt;/code&gt; will properly parse all valid RDNs, but does not attempt to detect all possible violations when parsing invalid RDNs. It is &quot;generous&quot; in accepting invalid RDNs. The &quot;validity&quot; of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations.</source>
          <target state="translated">&lt;code&gt;Rdn&lt;/code&gt; 将正确解析所有有效的RDN，但在解析无效的RDN时不会尝试检测所有可能的违规。接受无效的RDN是&amp;ldquo;慷慨的&amp;rdquo;。名称的&amp;ldquo;有效性&amp;rdquo;最终是在将其提供给LDAP服务器时确定的，LDAP服务器可以根据诸如其架构信息和互操作性等因素来接受或拒绝该名称。</target>
        </trans-unit>
        <trans-unit id="0b2bd8531858a5408bab3b061558434deab0f7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;Clob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; 通过该读取器读取部分 &lt;code&gt;Clob&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="cb89420b5a6168c1926ef1a349b07badce26d93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;SerialClob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; 通过该读取器读取部分 &lt;code&gt;SerialClob&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="190d6ea7948cbea5101e314c49f2d828b4a3a990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; objects whose geometry is defined by a rectangular frame.</source>
          <target state="translated">&lt;code&gt;RectangularShape&lt;/code&gt; 是许多&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;对象的基类，这些对象的几何形状由矩形框定义。</target>
        </trans-unit>
        <trans-unit id="bca0b3b9feaae8ba2603c7480c12bc9b507327ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; objects whose geometry is defined by a rectangular frame. This class does not directly specify any specific geometry by itself, but merely provides manipulation methods inherited by a whole category of &lt;code&gt;Shape&lt;/code&gt; objects. The manipulation methods provided by this class can be used to query and modify the rectangular frame, which provides a reference for the subclasses to define their geometry.</source>
          <target state="translated">&lt;code&gt;RectangularShape&lt;/code&gt; 是许多&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;对象的基类，其几何形状由矩形框架定义。此类本身并不直接指定任何特定的几何图形，而仅提供由整个 &lt;code&gt;Shape&lt;/code&gt; 对象类别继承的操作方法。此类提供的操作方法可用于查询和修改矩形框，该矩形框为子类定义其几何形状提供了参考。</target>
        </trans-unit>
        <trans-unit id="b405d689b832d3e935123ce31bb2b643c2b65904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Redirect&lt;/code&gt; policy is set through the &lt;a href=&quot;httpclient.builder#followRedirects(java.net.http.HttpClient.Redirect)&quot;&gt;Builder.followRedirects&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Redirect&lt;/code&gt; 策略是通过&lt;a href=&quot;httpclient.builder#followRedirects(java.net.http.HttpClient.Redirect)&quot;&gt;Builder.followRedirects&lt;/a&gt;方法设置的。</target>
        </trans-unit>
        <trans-unit id="3270607507eec3e0380e86661b6b97a44f66cb59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;REF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; 接口-SQL &lt;code&gt;REF&lt;/code&gt; 的映射</target>
        </trans-unit>
        <trans-unit id="e171fb3a12d4c7971286d8920295e04b989404f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReferralException&lt;/code&gt; is an abstract class. Concrete implementations determine its synchronization and serialization properties.</source>
          <target state="translated">&lt;code&gt;ReferralException&lt;/code&gt; 是一个抽象类。具体的实现确定其同步和序列化属性。</target>
        </trans-unit>
        <trans-unit id="0abee82700c66126c40567a46238d65513f57497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names.</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; 是一个简单的远程对象注册表的远程接口，该注册表提供了用于存储和检索绑定有任意字符串名称的远程对象引用的方法。</target>
        </trans-unit>
        <trans-unit id="ffa9f67a6e6e8cc3751736392cd46e339e63274d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names. The &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;unbind&lt;/code&gt;, and &lt;code&gt;rebind&lt;/code&gt; methods are used to alter the name bindings in the registry, and the &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; methods are used to query the current name bindings.</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; 是一个简单的远程对象注册表的远程接口，该注册表提供了用于存储和检索绑定有任意字符串名称的远程对象引用的方法。该 &lt;code&gt;bind&lt;/code&gt; ， &lt;code&gt;unbind&lt;/code&gt; ，并 &lt;code&gt;rebind&lt;/code&gt; 方法用于改变注册表中的名称绑定，以及 &lt;code&gt;lookup&lt;/code&gt; 和 &lt;code&gt;list&lt;/code&gt; 的方法用于查询当前的名称绑定。</target>
        </trans-unit>
        <trans-unit id="fed59a121a01f78e1d40cee1c3e9e212b4884dfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegistryHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</source>
          <target state="translated">&lt;code&gt;RegistryHandler&lt;/code&gt; 是RMI运行时内部在以前的实现版本中使用的接口。绝对不能由应用程序代码访问它。</target>
        </trans-unit>
        <trans-unit id="3991f2a2d42fbb14855a3e612c11e7d44be6a32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteCall&lt;/code&gt; is an abstraction used solely by the RMI runtime (in conjunction with stubs and skeletons of remote objects) to carry out a call to a remote object. The &lt;code&gt;RemoteCall&lt;/code&gt; interface is deprecated because it is only used by deprecated methods of &lt;code&gt;java.rmi.server.RemoteRef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RemoteCall&lt;/code&gt; 是RMI运行时单独使用的抽象（与远程对象的桩和框架一起使用），以执行对远程对象的调用。在 &lt;code&gt;RemoteCall&lt;/code&gt; 接口被推荐使用，因为它只是使用的过时的方法 &lt;code&gt;java.rmi.server.RemoteRef&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="70b15fba3fa84029ec247e5de0cb62463efb7d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; implements this method as follows:</source>
          <target state="translated">&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; 实现此方法的方法如下：</target>
        </trans-unit>
        <trans-unit id="68faf08f5939f3b3edd3d6736a08fe3892a2bc16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object.</source>
          <target state="translated">&lt;code&gt;RemoteRef&lt;/code&gt; 代表远程对象的句柄。</target>
        </trans-unit>
        <trans-unit id="f96ccdf7740dbaec50ae8c3f8d8d081f971af8b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object. A &lt;code&gt;RemoteStub&lt;/code&gt; uses a remote reference to carry out a remote method invocation to a remote object.</source>
          <target state="translated">&lt;code&gt;RemoteRef&lt;/code&gt; 代表远程对象的句柄。甲 &lt;code&gt;RemoteStub&lt;/code&gt; 使用远程引用远程方法调用执行对远程对象。</target>
        </trans-unit>
        <trans-unit id="d612181669519d05eb73f1a010b91c5bc950e970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;#configuration()&quot;&gt;&lt;code&gt;configuration&lt;/code&gt;&lt;/a&gt; method to get the configuration that the resolved module is in. It defines the &lt;a href=&quot;#reference()&quot;&gt;&lt;code&gt;reference&lt;/code&gt;&lt;/a&gt; method to get the reference to the module's content.</source>
          <target state="translated">&lt;code&gt;ResolvedModule&lt;/code&gt; 定义用于获取已解析模块所在配置的&lt;a href=&quot;#configuration()&quot;&gt; &lt;code&gt;configuration&lt;/code&gt; &lt;/a&gt;方法。它定义用于获取对模块内容的引用的&lt;a href=&quot;#reference()&quot;&gt; &lt;code&gt;reference&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="7002152bf7373912ffbca68bcdc0b39553fb6bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 定义了一组回调方法，这些方法在捆绑包加载过程中由&lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;工厂方法调用。</target>
        </trans-unit>
        <trans-unit id="d3aaf853b7b606795204fe52223c22b18f4e96f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 定义了一组回调方法，这些方法在捆绑包加载过程中由&lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;工厂方法调用。</target>
        </trans-unit>
        <trans-unit id="1b8639d51169c0c5effd0eb8b76da726ad17c9eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 定义了一组回调方法，这些方法在捆绑包加载过程中由&lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;工厂方法调用。换句话说， &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 与工厂方法协作以加载资源束。回调方法的默认实现提供了工厂方法执行&lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;默认行为所&lt;/a&gt;必需的信息。</target>
        </trans-unit>
        <trans-unit id="9bc668c8bbed6dc5bb76e0f70a605ac7573114b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 定义了一组回调方法，这些方法在捆绑包加载过程中由&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;工厂方法调用。</target>
        </trans-unit>
        <trans-unit id="8e93382bf5a4bd6d45990819ce9ad24466ec435c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 定义了一组回调方法，这些方法在捆绑包加载过程中由&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;工厂方法调用。换句话说， &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 与工厂方法协作以加载资源束。回调方法的默认实现提供了工厂方法执行&lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;默认行为所&lt;/a&gt;必需的信息。</target>
        </trans-unit>
        <trans-unit id="b4eaf806b6b4e5c2ab3718eb76827fa1167c3d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; is not supported in named modules. If the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; method with a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; is called in a named module, the method will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Any service providers of &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; are ignored in named modules.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 命名模块不支持ResourceBundle.Control。如果在命名模块中调用带有 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 的 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 方法，则该方法将抛出&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。在命名模块中，将忽略&lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; 的&lt;/a&gt;任何服务提供程序。</target>
        </trans-unit>
        <trans-unit id="631d53d09c73a80467cf823de9d98a388619ab47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle&lt;/code&gt; of the given &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if no resource bundle is found</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 给定的 &lt;code&gt;baseName&lt;/code&gt; 的和 &lt;code&gt;locale&lt;/code&gt; ，或者 &lt;code&gt;null&lt;/code&gt; ，如果没有资源包中发现</target>
        </trans-unit>
        <trans-unit id="b8c05ab03857e0e09e08e9100b575af7d33249f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles.</source>
          <target state="translated">&lt;code&gt;ResourceBundleProvider&lt;/code&gt; 是资源束的服务提供者接口。</target>
        </trans-unit>
        <trans-unit id="0ccb808daa165b14dbbb698c6c5ff159bd58486e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles. It is used by &lt;a href=&quot;../resourcebundle#getBundle(java.lang.String)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods to locate and load the service providers that are deployed as modules via &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundleProvider&lt;/code&gt; 是资源束的服务提供者接口。&lt;a href=&quot;../resourcebundle#getBundle(java.lang.String)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;工厂方法使用它来查找和加载通过&lt;a href=&quot;../serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;部署为模块的服务提供者。</target>
        </trans-unit>
        <trans-unit id="a4c954169d57604e9a0c6c189ae2fa340694e007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet.TYPE_FORWARD_ONLY&lt;/code&gt;, &lt;code&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;/code&gt;, or &lt;code&gt;ResultSet.TYPE_SCROLL_SENSITIVE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ResultSet.TYPE_FORWARD_ONLY&lt;/code&gt; ， &lt;code&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;/code&gt; 或 &lt;code&gt;ResultSet.TYPE_SCROLL_SENSITIVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a666ccf1634b9e5f0677cbe41c2a500bf0a8f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a stored procedure parameter or column</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行描述一个存储过程参数或列</target>
        </trans-unit>
        <trans-unit id="19b7b0a589025cbcfb6a4b1905708eb16d587ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a user function parameter, column or return type</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行描述一个用户函数参数，列或返回类型</target>
        </trans-unit>
        <trans-unit id="4a0456197c8cf4c0b3a0da8e6e8ba419471f1e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行是一个列说明</target>
        </trans-unit>
        <trans-unit id="965d886d08cb7bc3c7c54206ece75834c564a66a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column privilege description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行是一个列权限说明</target>
        </trans-unit>
        <trans-unit id="e74705730655155da6310bb90a817d5d3c01462c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a foreign key column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行都是外键列说明</target>
        </trans-unit>
        <trans-unit id="1721e34c1dfcb5a1dbc19b26e34f4448c895c681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a function description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行是一个函数描述</target>
        </trans-unit>
        <trans-unit id="72e7841c8e3a8213bccb775b04db24de85e0f00c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a primary key column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行都是主键列说明</target>
        </trans-unit>
        <trans-unit id="fd09482cc86833da653ab8c54602d9662610bd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a procedure description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行是一个过程描述</target>
        </trans-unit>
        <trans-unit id="659a085aade031f021812f066a8e58efcdb9402b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行都是一个表描述</target>
        </trans-unit>
        <trans-unit id="cae558a7051ea9a7111c08597ce537782d5d3c25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table privilege description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行是一个表特权描述</target>
        </trans-unit>
        <trans-unit id="fd54fff16f1300e9793c28198f2d030ec7e24c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is an index column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; -每行是一个索引列说明</target>
        </trans-unit>
        <trans-unit id="0e78e7fcda18bca9e2ed8a0f523e0310209e866b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; holdability -- ability to specify whether cursors should be held open or closed at the end of a transaction</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 可保持性-能够指定在事务结束时应保持游标处于打开还是关闭状态</target>
        </trans-unit>
        <trans-unit id="b05cd551de56bd90029b38b7ae884cd394685efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 界面</target>
        </trans-unit>
        <trans-unit id="2513acd82505e81f2dde2ba7576159ee9369894a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; object in which each row describes a UDT</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 对象，其中每行描述一个UDT</target>
        </trans-unit>
        <trans-unit id="a1658e8024878241ba251caea41c2d3133894bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSetMetaData&lt;/code&gt; interface -- provides information about the columns of a &lt;code&gt;ResultSet&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;ResultSetMetaData&lt;/code&gt; 接口-提供有关 &lt;code&gt;ResultSet&lt;/code&gt; 对象的列的信息</target>
        </trans-unit>
        <trans-unit id="c2d9f791677a368b321a608cb8eec1ce67b0e10e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RoundingMode&lt;/code&gt; corresponding to the given integer.</source>
          <target state="translated">&lt;code&gt;RoundingMode&lt;/code&gt; 对应于给定的整数。</target>
        </trans-unit>
        <trans-unit id="1fdcf84ed5053a874f5d4162c341a513473a7e63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; has two formal type parameters that allow you to create a &lt;code&gt;RowFilter&lt;/code&gt; for a specific model. For example, the following assumes a specific model that is wrapping objects of type &lt;code&gt;Person&lt;/code&gt;. Only &lt;code&gt;Person&lt;/code&gt;s with an age over 20 will be shown:</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; 具有两个形式类型参数，可用于为特定模型创建 &lt;code&gt;RowFilter&lt;/code&gt; 。例如，以下假定包装了 &lt;code&gt;Person&lt;/code&gt; 类型的对象的特定模型。仅显示20岁以上的 &lt;code&gt;Person&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="54f6778f7acce0cfe887ed685880049c58947337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; 用于从模型中过滤出条目，以使它们不会显示在视图中。</target>
        </trans-unit>
        <trans-unit id="5e7a2b096ed31692163aec67d7170f9ce5401c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view. For example, a &lt;code&gt;RowFilter&lt;/code&gt; associated with a &lt;code&gt;JTable&lt;/code&gt; might only allow rows that contain a column with a specific string. The meaning of &lt;em&gt;entry&lt;/em&gt; depends on the component type. For example, when a filter is associated with a &lt;code&gt;JTable&lt;/code&gt;, an entry corresponds to a row; when associated with a &lt;code&gt;JTree&lt;/code&gt;, an entry corresponds to a node.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; 用于从模型中过滤出条目，以使它们不会显示在视图中。例如，与 &lt;code&gt;JTable&lt;/code&gt; 关联的 &lt;code&gt;RowFilter&lt;/code&gt; 可能只允许包含具有特定字符串的列的行。&lt;em&gt;条目&lt;/em&gt;的含义取决于组件类型。例如，当过滤器与 &lt;code&gt;JTable&lt;/code&gt; 关联时，条目对应于一行；当与 &lt;code&gt;JTree&lt;/code&gt; 关联时，条目对应于一个节点。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a62bad87bb32530e6b909097040d2be3c34b03ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt;'s &lt;code&gt;include&lt;/code&gt; method is passed an &lt;code&gt;Entry&lt;/code&gt; that wraps the underlying model. The number of columns in the &lt;code&gt;Entry&lt;/code&gt; corresponds to the number of columns in the &lt;code&gt;ModelWrapper&lt;/code&gt;. The identifier comes from the &lt;code&gt;ModelWrapper&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; 的 &lt;code&gt;include&lt;/code&gt; 方法将传递一个包装基础模型的 &lt;code&gt;Entry&lt;/code&gt; 。列中的数字 &lt;code&gt;Entry&lt;/code&gt; 对应于列数 &lt;code&gt;ModelWrapper&lt;/code&gt; 。标识符也来自 &lt;code&gt;ModelWrapper&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd6fa59398a489e40df155285814ed3fd335b1ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowId&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;ROWID&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RowId&lt;/code&gt; 接口-SQL &lt;code&gt;ROWID&lt;/code&gt; 的映射</target>
        </trans-unit>
        <trans-unit id="ffb3b24ad73205966a8adeadd3569c92ed985423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL()&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 实现可使用方法 &lt;code&gt;RowSet.getURL()&lt;/code&gt; 检索 &lt;code&gt;java.net.URL&lt;/code&gt; 对象，该对象可用于处理外部数据。</target>
        </trans-unit>
        <trans-unit id="b4a1850613de664696cd804e54eb0f449203871b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 实现可以使用 &lt;code&gt;RowSet.getURL&lt;/code&gt; 方法检索 &lt;code&gt;java.net.URL&lt;/code&gt; 对象，该对象可用于操作外部数据。</target>
        </trans-unit>
        <trans-unit id="09de9dca764ed588784c655b559a3e3b5ada030a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; objects that implement the &lt;code&gt;Joinable&lt;/code&gt; interface must ensure that a key-like constraint continues to be enforced until the method &lt;code&gt;CachedRowSet.unsetKeyColumns&lt;/code&gt; has been called on the designated column.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 实现 &lt;code&gt;Joinable&lt;/code&gt; 接口的RowSet对象必须确保继续执行类似键的约束，直到在指定列上 &lt;code&gt;CachedRowSet.unsetKeyColumns&lt;/code&gt; 方法为止。</target>
        </trans-unit>
        <trans-unit id="44784d9b5d29a68624b98bd2ded6ab9ac38490c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; technology -- providing a convenient means of handling and passing data</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 技术-提供一种方便的方式来处理和传递数据</target>
        </trans-unit>
        <trans-unit id="0eda6ada678c264b134ad0f4a5400d6cf8f6280f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; implementations typically don't have a one-to-one mapping with the underlying model, but they can. For example, if a database does the sorting, &lt;code&gt;toggleSortOrder&lt;/code&gt; might call through to the database (on a background thread), and override the mapping methods to return the argument that is passed in.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 实现通常不具有与基础模型的一对一映射，但是可以。例如，如果数据库进行排序，则 &lt;code&gt;toggleSortOrder&lt;/code&gt; 可能会调用该数据库（在后台线程上），并覆盖映射方法以返回传入的参数。</target>
        </trans-unit>
        <trans-unit id="821dd02c989cffdebf359529b5bc977c97ee2587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides notification of changes by way of &lt;code&gt;RowSorterListener&lt;/code&gt;. Two types of notification are sent:</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 的提供了的方式更改通知 &lt;code&gt;RowSorterListener&lt;/code&gt; 。发送两种类型的通知：</target>
        </trans-unit>
        <trans-unit id="9e9dd4a551b7e19a7005465bc5eb7a68e6b0d0e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 提供了排序和过滤的基础。</target>
        </trans-unit>
        <trans-unit id="62560c806671aaf7d19a928c426d7819649dcc57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt;, you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 提供了排序和过滤的基础。除了创建和安装 &lt;code&gt;RowSorter&lt;/code&gt; 之外，您很少需要直接与之交互。有关 &lt;code&gt;JTable&lt;/code&gt; 的 &lt;code&gt;RowSorter&lt;/code&gt; 的具体实现，请参考&lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db818f86fe7f0686c4451718d966191a1373bb41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt;'s primary role is to provide a mapping between two coordinate systems: that of the view (for example a &lt;code&gt;JTable&lt;/code&gt;) and that of the underlying data source, typically a model.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 的主要作用是提供两个坐标系之间的映射：视图的坐标系（例如 &lt;code&gt;JTable&lt;/code&gt; ）和基础数据源的坐标系，通常是模型。</target>
        </trans-unit>
        <trans-unit id="b8f8a1e97f3f4066ed71031f59df29b426956d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent.Type.SORTED&lt;/code&gt; &amp;mdash; notifies listeners that the mapping maintained by the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent.Type.SORTED&lt;/code&gt; -通知侦听器由保持的映射 &lt;code&gt;RowSorter&lt;/code&gt; 的以某种方式发生了变化。</target>
        </trans-unit>
        <trans-unit id="9f504c4d653176c0e43badac606389ab84a8bdb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent.Type.SORT_ORDER_CHANGED&lt;/code&gt; &amp;mdash; notifies listeners that the sort order has changed. This is typically followed by a notification that the sort has changed.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent.Type.SORT_ORDER_CHANGED&lt;/code&gt; &amp;mdash;通知侦听器排序顺序已更改。通常在此之后是有关类别已更改的通知。</target>
        </trans-unit>
        <trans-unit id="55ea85ba15fd90e0b02644c32317b957685b6952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent&lt;/code&gt; 提供对 &lt;code&gt;RowSorter&lt;/code&gt; 更改的通知。</target>
        </trans-unit>
        <trans-unit id="86e5506758545dc0f1ab2d607a1c53706cc9cb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt;. Two types of notification are possible:</source>
          <target state="translated">&lt;code&gt;RowSorterEvent&lt;/code&gt; 提供对 &lt;code&gt;RowSorter&lt;/code&gt; 更改的通知。两种类型的通知是可能的：</target>
        </trans-unit>
        <trans-unit id="45061a9ac389f705c96fdc1e4deed6c56d6ca0b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterListener&lt;/code&gt; notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</source>
          <target state="translated">&lt;code&gt;RowSorterListener&lt;/code&gt; 通知 &lt;code&gt;RowSorter&lt;/code&gt; 已经以某种方式更改。</target>
        </trans-unit>
        <trans-unit id="3828badaa4cdbafd77514b7d80b2e45ab1745819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterListener&lt;/code&gt;s are notified of changes to a &lt;code&gt;RowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorterListener&lt;/code&gt; ，就会通知更改为的 &lt;code&gt;RowSorter&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="386e45f1522a57e8d24fa65f7237c39a4cd48149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleBasedCollator&lt;/code&gt; automatically processes its rule table to include both pre-composed and combining-character versions of accented characters. Even if the provided rule string contains only base characters and separate combining accent characters, the pre-composed accented characters matching all canonical combinations of characters from the rule string will be entered in the table.</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 自动处理其规则表，以包含重音符号的预组合版本和组合字符版本。即使提供的规则字符串仅包含基本字符和单独的组合重音符，也将在表中输入与规则字符串中所有字符的规范组合匹配的预先组合的重音字符。</target>
        </trans-unit>
        <trans-unit id="b5ca2151532edc56020ec873d9966225698866fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleBasedCollator&lt;/code&gt; has the following restrictions for efficiency (other subclasses may be used for more complex languages) :</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 对于效率有以下限制（其他子类可用于更复杂的语言）：</target>
        </trans-unit>
        <trans-unit id="aed8291a7ad5e60c2d511c9d7c2bc1c5e9514b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeException&lt;/code&gt; and its subclasses are &lt;em&gt;unchecked exceptions&lt;/em&gt;. Unchecked exceptions do &lt;em&gt;not&lt;/em&gt; need to be declared in a method or constructor's &lt;code&gt;throws&lt;/code&gt; clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.</source>
          <target state="translated">&lt;code&gt;RuntimeException&lt;/code&gt; 及其子类是&lt;em&gt;未经检查的异常&lt;/em&gt;。不要unchecked异常&lt;em&gt;并不&lt;/em&gt;需要在方法声明或构造函数的 &lt;code&gt;throws&lt;/code&gt; ，如果他们可以通过该方法或构造边界之外的方法或构造和宣传的执行抛出子句。</target>
        </trans-unit>
        <trans-unit id="ee89d7519d663a3f64bd7e4162d4413889ee0d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeException&lt;/code&gt; is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;RuntimeException&lt;/code&gt; 是在Java虚拟机的正常操作期间可能引发的那些异常的超类。</target>
        </trans-unit>
        <trans-unit id="fa2ba50f3b3f6212cb9e965aa1c39a14f6c55abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - The service type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -服务类型</target>
        </trans-unit>
        <trans-unit id="607167fa6edcd61a86ed92347a5f708ed5ce5f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - The type of the service to be loaded by this loader</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -此加载程序要加载的服务的类型</target>
        </trans-unit>
        <trans-unit id="aa7614aaa5d4f31668a529139146e6102c7b4f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the class of the service type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -服务类型的类别</target>
        </trans-unit>
        <trans-unit id="0361ea17a61d6bdbcce0b1fb0fa44e097e82f58b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the memory segment type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -内存段类型</target>
        </trans-unit>
        <trans-unit id="b456f70b973c54cd2560b6686e7a22c746d10e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the service class</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -服务等级</target>
        </trans-unit>
        <trans-unit id="927b65107d7f9a534c7cdbd3229a37c2f62bcca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -实现 &lt;code&gt;BaseStream&lt;/code&gt; 的流的类型</target>
        </trans-unit>
        <trans-unit id="548414ab1abf4affd37801c91b1896419aba2800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source object used by this diagnostic</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -此诊断使用的源对象的类型</target>
        </trans-unit>
        <trans-unit id="923b305de01acd1b3e85477885db89643548d938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source objects used by diagnostics received by this listener</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -此侦听器接收的诊断所使用的源对象的类型</target>
        </trans-unit>
        <trans-unit id="3f2104735ab5900bc917a3c463944fa7a95f51e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source objects used by diagnostics received by this object</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -此对象接收的诊断所使用的源对象的类型</target>
        </trans-unit>
        <trans-unit id="e76302bbafeacbd22b0dda6b5b6514a1a75a10fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the Subscriber</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -订户的类型</target>
        </trans-unit>
        <trans-unit id="10a980d8f23cdd89adb02637640b16ac5ed158f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -实现 &lt;code&gt;BaseStream&lt;/code&gt; 的流的类型</target>
        </trans-unit>
        <trans-unit id="ca0fc77f39061845f23b81c1416f2d8b6edb4a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the thread local's value</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -线程局部值的类型</target>
        </trans-unit>
        <trans-unit id="5a936b609567701f674df21513fe38d96d018bc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAXParser&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;saxparserfactory#newSAXParser()&quot;&gt;&lt;code&gt;SAXParserFactory.newSAXParser()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;SAXParser&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;SAXParser&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SAXParser&lt;/code&gt; 重置为与使用&lt;a href=&quot;saxparserfactory#newSAXParser()&quot;&gt; &lt;code&gt;SAXParserFactory.newSAXParser()&lt;/code&gt; &lt;/a&gt;创建时相同的状态。 &lt;code&gt;reset()&lt;/code&gt; 旨在允许重用现有的 &lt;code&gt;SAXParser&lt;/code&gt; ,从而节省与创建新 &lt;code&gt;SAXParser&lt;/code&gt; 关联的资源。</target>
        </trans-unit>
        <trans-unit id="f27f6467b7b3911aebccb5f1ecc6dd64a3a6d2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="92bc058aa5512a5acc8b9fe578de2b07fd794e68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_HORIZONTAL_ONLY&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_HORIZONTAL_ONLY&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="47c2269c028775e7b57c9959022e7c0cd0de20c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_NONE&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="a3169927a13b8ae78e660803e302207f5475c1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_VERTICAL_ONLY&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_VERTICAL_ONLY&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="083db2bc433e705fdbdc2302b4fd77c5cf1db1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; -返回具有指定秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等效于&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8daa819d4664a473d84d152122968917b7078334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; -返回具有指定秒数的 &lt;code&gt;LocalTime&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da8c097475c769ccd39c187184fe7a13eec9caa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;localtime#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; -返回具有指定秒数的 &lt;code&gt;LocalTime&lt;/code&gt; 。这等效于&lt;a href=&quot;localtime#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a9f10907263955203ea7c5a553c4ed004b8cde3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; -返回具有指定秒数的 &lt;code&gt;Instant&lt;/code&gt; 。这等效于&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7034306b5bc65e85fe377cb02c4fd3599a6a8bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECOND_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-day. The nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;SECOND_OF_DAY&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定第二的天。纳秒级将保持不变。</target>
        </trans-unit>
        <trans-unit id="6842382cc3006eb68d8b59c27b0f511e0e9fb383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-minute. The hour, minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; -返回 &lt;code&gt;LocalTime&lt;/code&gt; 与指定第二的分钟。小时，分钟和毫微秒将保持不变。</target>
        </trans-unit>
        <trans-unit id="ab6a7728328b9be64727231fc085295cecab0b7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -每个输入文档将使用其自己的指定绑定单独绑定。</target>
        </trans-unit>
        <trans-unit id="4ab9f055d4326082fe06c53eee2c0cf10701caf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -每个输入文档将使用指定的绑定单独绑定。</target>
        </trans-unit>
        <trans-unit id="6347cd0491acb8347236f100472700863890005e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -对于每个单独的输入文档，将打印其自己的指定页面范围。</target>
        </trans-unit>
        <trans-unit id="ccf283f83435567d18ec74050bd29449c6deb5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -对于每个单独的输入文档，将打印指定的页面范围。</target>
        </trans-unit>
        <trans-unit id="9beda333d4a836f62192f3e0f6a2e6643e5da185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -输入文档将保持独立。每个媒体印象将包括</target>
        </trans-unit>
        <trans-unit id="a93e331637f6fd9bd3256f375b9f510a887ff2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -输入文档将保持独立。每个媒体表将包括</target>
        </trans-unit>
        <trans-unit id="f49da7ed0a139da1b3fad1754c030eee7f46f759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -输入文档将保持独立。对于输入文件</target>
        </trans-unit>
        <trans-unit id="8b55e046de6824337553dda006227aecb2651efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The result will be the first input document, the second input document, . . . the last input document, the group of documents being repeated</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -结果将是第一个输入文档，第二个输入文档。。。最后输入的文档，该组文档被重复</target>
        </trans-unit>
        <trans-unit id="a6d5354f4169de474e66ec2ec5b2be74d114b9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -每个输入文档将使用其自己的指定绑定单独绑定。</target>
        </trans-unit>
        <trans-unit id="fb9b7c8d7450f822cfc2b40569db13a0e4001f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -每个输入文档将使用指定的绑定单独绑定。</target>
        </trans-unit>
        <trans-unit id="1cd2f03eb02556539762d77ade16a2db8b82fc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -对于每个单独的输入文档，将打印其自己的指定页面范围。</target>
        </trans-unit>
        <trans-unit id="f7d1c776009c54c4959cf568c548bc24270781f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -对于每个单独的输入文档，将打印指定的页面范围。</target>
        </trans-unit>
        <trans-unit id="6f121433c698e8ff2fe2ad8a4e153959a0ec0997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -输入文档将保持独立。每个媒体印象将包括</target>
        </trans-unit>
        <trans-unit id="8e0810edae4d87f2e7d2c1d211d38b1c4655612c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -输入文档将保持独立。每个媒体表将包括</target>
        </trans-unit>
        <trans-unit id="2587d4f86db5bdeaddd06c692c256e7332e525a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -输入文档将保持独立。对于输入文件</target>
        </trans-unit>
        <trans-unit id="210594f2cd002c755cc021facd147c1df9f8ae40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -结果将是</target>
        </trans-unit>
        <trans-unit id="a5748cd343f6cdf345d9cff9449b2a51d598ea4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;, &lt;code&gt;CTRL-SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SHIFT-TAB&lt;/code&gt; 上 &lt;code&gt;KEY_PRESSED&lt;/code&gt; ， &lt;code&gt;CTRL-SHIFT-TAB&lt;/code&gt; 上 &lt;code&gt;KEY_PRESSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26950784cf000632a2bbcff7001eed528ba0fe51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -所有输入文档将作为具有指定绑定的一个输出文档绑定在一起。</target>
        </trans-unit>
        <trans-unit id="48b4d0f440d9a4632ee4e1ab6c1d1ca2f3a4ef05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -所有输入文档将合并到一个输出文档中。每个媒体印象将包括</target>
        </trans-unit>
        <trans-unit id="c680e0fba084cf66acab19081ed0dc5bb1779eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -所有输入文档将合并到一个输出文档中。每个媒体表将包括</target>
        </trans-unit>
        <trans-unit id="de8fee43c483a13dd9c4f9dd4a0f495579009952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. The specified page ranges of that output document will be printed.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -所有输入文档将合并到一个输出文档中。该输出文档的指定页面范围将被打印。</target>
        </trans-unit>
        <trans-unit id="f3f31b4bdc3174848c8e179b65054503546b9a4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -结果将是</target>
        </trans-unit>
        <trans-unit id="3b26c8e40fea57b0d38ed587c63d23997b4ccf5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; is the same as &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; with respect to ordering of print-stream pages, but not media sheet generation, since &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; will put the first page of the next document on the back side of a sheet if an odd number of pages have been produced so far for the job, while &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; always forces the next document or document copy on to a new sheet.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; 就打印流页面的排序而言，SINGLE_DOCUMENT与 &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; 相同，但与媒体纸张的生成不同，因为如果生成的页数奇数， &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; 会将下一个文档的第一页放在纸张的背面，因此远不能胜任，而 &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; 总是将下一个文档或文档副本强制插入到新的工作表上。</target>
        </trans-unit>
        <trans-unit id="0927f05eef173a899f75065bebef4a7132163637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding, and the first impression of each input doc will always start on a new media sheet.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -所有输入文档将被绑定在一起，成为具有指定绑定的输出文档，并且每个输入文档的第一印象将始终在新的介质纸上开始。</target>
        </trans-unit>
        <trans-unit id="0931ecdef69e8e5bd3af0cad3d9ff0ef67e6283a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document, and the first impression of each input doc will always start on a new media sheet. The specified page ranges of that output document will be printed.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -所有输入文档将合并到一个输出文档中，并且每个输入文档的第一印象将始终在新的介质纸上开始。该输出文档的指定页面范围将被打印。</target>
        </trans-unit>
        <trans-unit id="5b9ed75db8c5da2a8b35d314b80be3505c2b57ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -所有输入文档将合并到一个输出文档中。每个媒体印象将包括</target>
        </trans-unit>
        <trans-unit id="fabb1b8ef5e998d853356a02979098fd6094277f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -所有输入文档将合并到一个输出文档中。每个媒体表将包括</target>
        </trans-unit>
        <trans-unit id="d9338cdd4e544485897b042b4bf2ef15c7fa4e5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -结果将是</target>
        </trans-unit>
        <trans-unit id="f3cbbad3b7929587ebfb11751f16a3791b2a765c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SNIMatcher&lt;/code&gt; objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;SNIMatcher&lt;/code&gt; 对象是不可变的。子类不应提供可以在实例创建后更改其状态的方法。</target>
        </trans-unit>
        <trans-unit id="12bf6f9be7c1428c486b2da202c2c67d5c1852f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SNIServerName&lt;/code&gt; objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;SNIServerName&lt;/code&gt; 对象是不可变的。子类不应提供可以在实例创建后更改其状态的方法。</target>
        </trans-unit>
        <trans-unit id="a10380367af0114ace1aac4951a2770e8534310f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLData&lt;/code&gt; interface -- specifies the mapping of a UDT to an instance of this class</source>
          <target state="translated">&lt;code&gt;SQLData&lt;/code&gt; 接口-指定UDT到此类的实例的映射</target>
        </trans-unit>
        <trans-unit id="2b7155e66a20ff83c051a18fac2935325e3abaa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLException&lt;/code&gt; -- thrown by most methods when there is a problem accessing data and by some methods for other reasons</source>
          <target state="translated">&lt;code&gt;SQLException&lt;/code&gt; -在访问数据时出现问题时，大多数方法都会抛出该异常；而由于其他原因，某些方法会抛出该异常</target>
        </trans-unit>
        <trans-unit id="85f7ee54affd1251e2412911fc8d6b52ac71b1de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLInput&lt;/code&gt; interface -- provides methods for reading UDT attributes from a stream</source>
          <target state="translated">&lt;code&gt;SQLInput&lt;/code&gt; 接口-提供从流中读取UDT属性的方法</target>
        </trans-unit>
        <trans-unit id="d4cb807b69d5277300f5667d62d674001a729cef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLOutput&lt;/code&gt; interface -- provides methods for writing UDT attributes back to a stream</source>
          <target state="translated">&lt;code&gt;SQLOutput&lt;/code&gt; 接口-提供将UDT属性写回到流中的方法</target>
        </trans-unit>
        <trans-unit id="09efcbdf7586109e577d7fad691ee5bd1a6f6a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLPermission&lt;/code&gt; class -- provides permission when code running within a Security Manager, such as an applet, attempts to set up a logging stream through the &lt;code&gt;DriverManager&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLPermission&lt;/code&gt; 类-在安全管理器中运行的代码（例如小应用程序）尝试通过 &lt;code&gt;DriverManager&lt;/code&gt; 设置日志记录流时提供权限</target>
        </trans-unit>
        <trans-unit id="0bdb5b8e6def6cb0fcf4bd36bd5d471b39015774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN code identifying the warning; if a non standard XOPEN</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; -标识警告的XOPEN代码；如果是非标准的XOPEN</target>
        </trans-unit>
        <trans-unit id="8da05d2d7563c425db843a8204e1b1ff0d74e2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN or SQL:2003 code identifying the exception</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; -标识异常的XOPEN或SQL：2003代码</target>
        </trans-unit>
        <trans-unit id="a147eab74994e05107b5fe8882f54d43d9f00aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN or SQL:2003 code identifying the warning</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; -标识警告的XOPEN或SQL：2003代码</target>
        </trans-unit>
        <trans-unit id="ddfd7f3af12152280ead5a5d8a5fa085b5cb540a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLType&lt;/code&gt; - the column's SQL type</source>
          <target state="translated">&lt;code&gt;SQLType&lt;/code&gt; -列的SQL类型</target>
        </trans-unit>
        <trans-unit id="d0bf228575646ed283a6e706d05753a737448583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLType&lt;/code&gt; - the designated column's SQL type, which must be one of the constants in the class &lt;code&gt;java.sql.Types&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLType&lt;/code&gt; -指定列的SQL类型，它必须是类 &lt;code&gt;java.sql.Types&lt;/code&gt; 中的常量之一。</target>
        </trans-unit>
        <trans-unit id="b034a56720b573ab6b1faf386635a56eba8baaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLWarning&lt;/code&gt; -- thrown to indicate a warning</source>
          <target state="translated">&lt;code&gt;SQLWarning&lt;/code&gt; -引发警告</target>
        </trans-unit>
        <trans-unit id="632c8c3c9e45befc0bcba234f66777737fadab06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLXML&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;XML&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLXML&lt;/code&gt; 接口-SQL &lt;code&gt;XML&lt;/code&gt; 的映射</target>
        </trans-unit>
        <trans-unit id="f6ff64a6c409ff2f4d27d351ef9a48df78196a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; application data buffers must be large enough to hold the application data from any inbound network application data packet received. Typically, outbound application data buffers can be of any size.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 应用程序数据缓冲区必须足够大，以容纳来自接收到的任何入站网络应用程序数据包中的应用程序数据。通常，出站应用程序数据缓冲区可以是任何大小。</target>
        </trans-unit>
        <trans-unit id="52b5f6df8a8bd32a9beddeb5913cb0fa3f281bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; implementations may use the &lt;code&gt;peerHost&lt;/code&gt; and &lt;code&gt;peerPort&lt;/code&gt; parameters as hints for their internal session reuse strategy.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 实现可以使用 &lt;code&gt;peerHost&lt;/code&gt; 和 &lt;code&gt;peerPort&lt;/code&gt; 参数作为其内部会话重用策略的提示。</target>
        </trans-unit>
        <trans-unit id="4cb4bc4aa36ce9c29b5969f549ad3158ac08d8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; operation (task). Each task must be assigned a thread (possibly the current) to perform the &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; operation. Once the &lt;code&gt;run&lt;/code&gt; method returns, the &lt;code&gt;Runnable&lt;/code&gt; object is no longer needed and may be discarded.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 操作可能需要阻塞的操作结果，或者可能需要很长时间才能完成。此方法用于获取出色的&lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;操作（任务）。必须为每个任务分配一个线程（可能是当前线程）以执行&lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;操作。一旦 &lt;code&gt;run&lt;/code&gt; 方法返回，就不再需要 &lt;code&gt;Runnable&lt;/code&gt; 对象，并且可以将其丢弃。</target>
        </trans-unit>
        <trans-unit id="e124743cbfae1376018f7988b134ed5eadc09910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; operation (task). Each task must be assigned a thread (possibly the current) to perform the &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; operation. Once the &lt;code&gt;run&lt;/code&gt; method returns, the &lt;code&gt;Runnable&lt;/code&gt; object is no longer needed and may be discarded.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 操作可能需要阻塞的操作结果，或者可能需要很长时间才能完成。此方法用于获取出色的&lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;操作（任务）。必须为每个任务分配一个线程（可能是当前线程）以执行&lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;操作。一旦 &lt;code&gt;run&lt;/code&gt; 方法返回，就不再需要 &lt;code&gt;Runnable&lt;/code&gt; 对象，并且可以将其丢弃。</target>
        </trans-unit>
        <trans-unit id="e32ee651bece7ee367ccb4b46f18627e0d3f5ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLServerSocket&lt;/code&gt;s contain several pieces of state data which are inherited by the &lt;code&gt;SSLSocket&lt;/code&gt; at socket creation. These include the enabled cipher suites and protocols, whether client authentication is necessary, and whether created sockets should begin handshaking in client or server mode. The state inherited by the created &lt;code&gt;SSLSocket&lt;/code&gt; can be overriden by calling the appropriate methods.</source>
          <target state="translated">&lt;code&gt;SSLServerSocket&lt;/code&gt; 包含一些状态数据，这些状态数据在创建套接字时由 &lt;code&gt;SSLSocket&lt;/code&gt; 继承。这些包括启用的密码套件和协议，是否需要客户端身份验证以及创建的套接字是否应以客户端或服务器模式开始握手。创建的 &lt;code&gt;SSLSocket&lt;/code&gt; 继承的状态可以通过调用适当的方法来覆盖。</target>
        </trans-unit>
        <trans-unit id="e2857607296e17100bc99874e4f9e9d9ba422abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLServerSocketFactory&lt;/code&gt;s create &lt;code&gt;SSLServerSocket&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SSLServerSocketFactory&lt;/code&gt; 的创建 &lt;code&gt;SSLServerSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95a5d586a821b29834bc1c2e75c552ba7da26391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSocket&lt;/code&gt;s returned from &lt;code&gt;accept()&lt;/code&gt; inherit this setting.</source>
          <target state="translated">&lt;code&gt;SSLSocket&lt;/code&gt; 从 &lt;code&gt;accept()&lt;/code&gt; 返回的SSLSocket继承了此设置。</target>
        </trans-unit>
        <trans-unit id="3a920b9ddb24cfbe3c3e189e7152a5b3d3902d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSocketFactory&lt;/code&gt;s create &lt;code&gt;SSLSocket&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SSLSocketFactory&lt;/code&gt; 创建 &lt;code&gt;SSLSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0549f5b4b7d9ff54466b0305b66f6a06cc439939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPERSCRIPT&lt;/code&gt; can impact the ascent and descent of a font. The ascent and descent can never become negative, however.</source>
          <target state="translated">&lt;code&gt;SUPERSCRIPT&lt;/code&gt; 可能会影响字体的上升和下降。但是，上升和下降永远不会成为负面的。</target>
        </trans-unit>
        <trans-unit id="1ef07b1494ed2bd5ac4802d53ef450a14cae38b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaslClientFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SaslClientFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb43c36b48a422fa0d1566e175d57a3ecde2286d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaslServerFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SaslServerFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5415aad73aed2b0e551b3de1b6bc9accedf9e89d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Savepoint&lt;/code&gt; -- provides savepoints in a transaction</source>
          <target state="translated">&lt;code&gt;Savepoint&lt;/code&gt; -在事务中提供保存点</target>
        </trans-unit>
        <trans-unit id="9fca6c6c59b1a6ea6962493157917a5c4eae5b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - The set of named values representing the state of this &lt;code&gt;ScriptEngine&lt;/code&gt;. The values are generally visible in scripts using the associated keys as variable names.</source>
          <target state="translated">&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; -表示此 &lt;code&gt;ScriptEngine&lt;/code&gt; 状态的一组命名值。这些值通常在脚本中使用关联的键作为变量名可见。</target>
        </trans-unit>
        <trans-unit id="e118f3e4518f17cee7aadc6517dfbb89fb5ce521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - The specified &lt;code&gt;Bindings&lt;/code&gt; replaces the engine scope of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; -指定的 &lt;code&gt;Bindings&lt;/code&gt; 替换了 &lt;code&gt;ScriptEngine&lt;/code&gt; 的引擎范围。</target>
        </trans-unit>
        <trans-unit id="166244d545ed7d8bfcf528a37381f43f7ff22f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - The set of named values representing global scope. If this &lt;code&gt;ScriptEngine&lt;/code&gt; is created by a &lt;code&gt;ScriptEngineManager&lt;/code&gt;, then the manager sets global scope bindings. This may be &lt;code&gt;null&lt;/code&gt; if no global scope is associated with this &lt;code&gt;ScriptEngine&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; -代表全局范围的一组命名值。如果 &lt;code&gt;ScriptEngine&lt;/code&gt; 的是通过创建 &lt;code&gt;ScriptEngineManager&lt;/code&gt; ，那么经理在全球范围内绑定。如果没有全局范围与此 &lt;code&gt;ScriptEngine&lt;/code&gt; 相关联，则此字段可以为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="474e614bb8e94409fe202102a2daf20b4a3c29c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - The specified &lt;code&gt;Bindings&lt;/code&gt; must be visible as the &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; -指定的 &lt;code&gt;Bindings&lt;/code&gt; 必须显示为 &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8b358949ab228606096ee7355ef135a4ab3ef4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptEngine&lt;/code&gt; is the fundamental interface whose methods must be fully functional in every implementation of this specification.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; 是基本接口，其方法在本规范的每个实现中都必须具有完整的功能。</target>
        </trans-unit>
        <trans-unit id="ec19a99d3619511a11056d3247195323fe7f40bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptEngineFactory&lt;/code&gt; is used to describe and instantiate &lt;code&gt;ScriptEngines&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngineFactory&lt;/code&gt; 用于描述和实例化 &lt;code&gt;ScriptEngines&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="642a3ce02f0b38ed5fbcb81b5c3b8d38266c4320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptException&lt;/code&gt; constructor specifying message, filename, line number and column number.</source>
          <target state="translated">&lt;code&gt;ScriptException&lt;/code&gt; 构造函数，指定消息，文件名，行号和列号。</target>
        </trans-unit>
        <trans-unit id="75c266ed7cce5f778bb83ab49d48b6dad41999af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom&lt;/code&gt; objects are safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 对象可安全用于多个并发线程。</target>
        </trans-unit>
        <trans-unit id="9ceb0398a6944486fbe1ea4d23d0947ec6cc2714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom&lt;/code&gt; will call the applicable engine methods without any synchronization.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 将在不进行任何同步的情况下调用适用的引擎方法。</target>
        </trans-unit>
        <trans-unit id="2a82e5d1100f7738a7dfdea6f8b77faf3a473f1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialBlob&lt;/code&gt; methods make it possible to make a copy of a &lt;code&gt;SerialBlob&lt;/code&gt; object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a &lt;code&gt;Blob&lt;/code&gt; object within a &lt;code&gt;SerialBlob&lt;/code&gt; object and to update or truncate a &lt;code&gt;Blob&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 方法可以将 &lt;code&gt;SerialBlob&lt;/code&gt; 对象的副本复制为字节数组或流。它们还可以在 &lt;code&gt;SerialBlob&lt;/code&gt; 对象中定位给定的字节模式或 &lt;code&gt;Blob&lt;/code&gt; 对象，并更新或截断 &lt;code&gt;Blob&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="74419653c1f40ff91cfe62d1189834d049f6a220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialBlob&lt;/code&gt; methods make it possible to make a copy of a &lt;code&gt;SerialBlob&lt;/code&gt; object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a &lt;code&gt;Blob&lt;/code&gt; object within a &lt;code&gt;SerialBlob&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 方法可以将 &lt;code&gt;SerialBlob&lt;/code&gt; 对象的副本复制为字节数组或流。它们还使得可以在 &lt;code&gt;SerialBlob&lt;/code&gt; 对象中定位给定的字节模式或 &lt;code&gt;Blob&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9fc439651f33039d5a719055108c01235fcfc2b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialClob&lt;/code&gt; methods make it possible to get a substring from a &lt;code&gt;SerialClob&lt;/code&gt; object or to locate the start of a pattern of characters.</source>
          <target state="translated">&lt;code&gt;SerialClob&lt;/code&gt; 方法可以从 &lt;code&gt;SerialClob&lt;/code&gt; 对象获取子字符串或定位字符模式的开始。</target>
        </trans-unit>
        <trans-unit id="11aef03e8b2e55e04fb03b654f6005371127ed30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerializedLambda&lt;/code&gt; has a &lt;code&gt;readResolve&lt;/code&gt; method that looks for a (possibly private) static method called &lt;code&gt;$deserializeLambda$(SerializedLambda)&lt;/code&gt; in the capturing class, invokes that with itself as the first argument, and returns the result. Lambda classes implementing &lt;code&gt;$deserializeLambda$&lt;/code&gt; are responsible for validating that the properties of the &lt;code&gt;SerializedLambda&lt;/code&gt; are consistent with a lambda actually captured by that class.</source>
          <target state="translated">&lt;code&gt;SerializedLambda&lt;/code&gt; 有一个 &lt;code&gt;readResolve&lt;/code&gt; 方法，该方法在捕获类中查找称为 &lt;code&gt;$deserializeLambda$(SerializedLambda)&lt;/code&gt; 的（可能是私有的）静态方法，将其本身作为第一个参数进行调用，然后返回结果。实现 &lt;code&gt;$deserializeLambda$&lt;/code&gt; Lambda类负责验证 &lt;code&gt;SerializedLambda&lt;/code&gt; 的属性是否与该类实际捕获的lambda一致。</target>
        </trans-unit>
        <trans-unit id="2e8a2a9f1c6675667be2c3609e26630eaad05e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3814ace93a00dd1c189266f962c46ceee25663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleAttributeSet&lt;/code&gt; containing the attributes</source>
          <target state="translated">&lt;code&gt;SimpleAttributeSet&lt;/code&gt; 包含属性的SimpleAttributeSet</target>
        </trans-unit>
        <trans-unit id="b01d9ce1e35c15847c93cfb4f475071af6d3549f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; allows you to start by choosing any user-defined patterns for date-time formatting. However, you are encouraged to create a date-time formatter with either &lt;code&gt;getTimeInstance&lt;/code&gt;, &lt;code&gt;getDateInstance&lt;/code&gt;, or &lt;code&gt;getDateTimeInstance&lt;/code&gt; in &lt;code&gt;DateFormat&lt;/code&gt;. Each of these class methods can return a date/time formatter initialized with a default format pattern. You may modify the format pattern using the &lt;code&gt;applyPattern&lt;/code&gt; methods as desired. For more information on using these methods, see &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 允许您从选择任何用户定义的日期时间格式模式开始。但是，我们鼓励您创建用于设置日期时间格式化 &lt;code&gt;getTimeInstance&lt;/code&gt; ， &lt;code&gt;getDateInstance&lt;/code&gt; 或 &lt;code&gt;getDateTimeInstance&lt;/code&gt; 的 &lt;code&gt;DateFormat&lt;/code&gt; 。这些类方法中的每一个都可以返回使用默认格式模式初始化的日期/时间格式化程序。您可以根据需要使用 &lt;code&gt;applyPattern&lt;/code&gt; 方法修改格式模式。有关使用这些方法的更多信息，请参见&lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e2d9b63de5c9f9c4dc26179609fceee4ae162a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; also supports &lt;em&gt;localized date and time pattern&lt;/em&gt; strings. In these strings, the pattern letters described above may be replaced with other, locale dependent, pattern letters. &lt;code&gt;SimpleDateFormat&lt;/code&gt; does not deal with the localization of text other than the pattern letters; that's up to the client of the class.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 还支持&lt;em&gt;本地化的日期和时间模式&lt;/em&gt;字符串。在这些字符串中，可以将上述模式字母替换为其他与语言环境相关的模式字母。 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 不处理模式字母以外的其他文本的本地化；这取决于班级的客户。</target>
        </trans-unit>
        <trans-unit id="eee60a82249fad86b3f9c641534c50c42eef0c6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 是一个具体的类，用于以对语言环境敏感的方式来格式化和解析日期。</target>
        </trans-unit>
        <trans-unit id="095aeb3228774faa5db7939d6aba2e728fda82cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner. It allows for formatting (date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 是一个具体的类，用于以对语言环境敏感的方式来格式化和解析日期。它允许格式化（日期&amp;rarr;文本），解析（文本&amp;rarr;日期）和规范化。</target>
        </trans-unit>
        <trans-unit id="3999b0fcea53cbfca5b6860f2e79adffedf9aeb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 是 &lt;code&gt;TimeZone&lt;/code&gt; 的具体子类，它表示与格里高利历一起使用的时区。</target>
        </trans-unit>
        <trans-unit id="582a5d3ad210edcd948f728205b52043091f02c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called &lt;em&gt;raw offset&lt;/em&gt;, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the &lt;a href=&quot;#setStartYear(int)&quot;&gt;&lt;code&gt;setStartYear&lt;/code&gt;&lt;/a&gt; method can specify the year when the daylight saving time schedule starts in effect.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 是 &lt;code&gt;TimeZone&lt;/code&gt; 的具体子类，它表示与格里高利历一起使用的时区。该类包含GMT的偏移量（称为&lt;em&gt;raw offset&lt;/em&gt;）以及夏时制时间表的开始和结束规则。由于每个值仅包含一个值，因此它无法处理GMT偏移量和夏令时的历史变化，只是&lt;a href=&quot;#setStartYear(int)&quot;&gt; &lt;code&gt;setStartYear&lt;/code&gt; &lt;/a&gt;方法可以指定夏令时开始生效的年份。</target>
        </trans-unit>
        <trans-unit id="226a45adfe31c45f833557c019715ad02ab8ca9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called &lt;em&gt;raw offset&lt;/em&gt;, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the &lt;a href=&quot;simpletimezone#setStartYear-int-&quot;&gt;&lt;code&gt;setStartYear&lt;/code&gt;&lt;/a&gt; method can specify the year when the daylight saving time schedule starts in effect.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 是 &lt;code&gt;TimeZone&lt;/code&gt; 的具体子类，它表示与格里高利历一起使用的时区。该类包含GMT的偏移量，称为&lt;em&gt;raw offset&lt;/em&gt;，以及夏令时时间表的开始和结束规则。由于每个值仅包含一个值，因此它无法处理GMT偏移量和夏令时的历史变化，只是&lt;a href=&quot;simpletimezone#setStartYear-int-&quot;&gt; &lt;code&gt;setStartYear&lt;/code&gt; &lt;/a&gt;方法可以指定夏令时开始生效的年份。</target>
        </trans-unit>
        <trans-unit id="abba4a41eeae3163007a16e87e6b0405572fa2d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleType.BOOLEAN&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;SimpleType.BOOLEAN&lt;/code&gt; 等</target>
        </trans-unit>
        <trans-unit id="6aa5dfe01213bf072f10976c42910c732f519f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="4f5a93921ed72e648946d8e1a7f8f8f11c1d8f4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SnippetEvent&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;SnippetEvent&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="a1987884fcdf95bdb93f7b3c08f2df127eb74ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket s = new Socket(Proxy.NO_PROXY);&lt;/code&gt; will create a plain socket ignoring any other proxy configuration.</source>
          <target state="translated">&lt;code&gt;Socket s = new Socket(Proxy.NO_PROXY);&lt;/code&gt; 将创建一个普通套接字，忽略任何其他代理配置。</target>
        </trans-unit>
        <trans-unit id="844a32d79478574daff7a859b0c6c5512155a1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(&quot;socks.mydom.com&quot;, 1080)));&lt;/code&gt; will create a socket connecting through the specified SOCKS proxy server.</source>
          <target state="translated">&lt;code&gt;Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(&quot;socks.mydom.com&quot;, 1080)));&lt;/code&gt; 将创建一个通过指定的SOCKS代理服务器连接的套接字。</target>
        </trans-unit>
        <trans-unit id="a022cddd8f9c2721d5f1ffe4ca29c34995c4183a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0ac90c4479b724b8cea60590d7ac28464fe6838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SortedSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; (see below)</source>
          <target state="translated">&lt;code&gt;SortedSet&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; （请参见下文）</target>
        </trans-unit>
        <trans-unit id="10fef87c15836ea8ed0aa5b594adea95be454925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Soundbank&lt;/code&gt; includes methods that return &lt;code&gt;String&lt;/code&gt; objects containing the sound bank's name, manufacturer, version number, and description. The precise content and format of these strings is left to the implementor.</source>
          <target state="translated">&lt;code&gt;Soundbank&lt;/code&gt; 包含返回 &lt;code&gt;String&lt;/code&gt; 对象的方法，这些对象包含声音库的名称，制造商，版本号和说明。这些字符串的确切内容和格式留给实现者。</target>
        </trans-unit>
        <trans-unit id="0f15aba6026499e033d5684305223819fded0093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; / &lt;code&gt;Result&lt;/code&gt; Accepted</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; 接受源/ &lt;code&gt;Result&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db3ceaf3c4770bdebad4cbd65e7667ad6893277c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SpringLayout&lt;/code&gt; also provides a way to solve many of the difficult layout problems that cannot be solved by nesting combinations of &lt;code&gt;Box&lt;/code&gt;es. That said, &lt;code&gt;SpringLayout&lt;/code&gt; honors the &lt;code&gt;LayoutManager2&lt;/code&gt; contract correctly and so can be nested with other layout managers -- a technique that can be preferable to creating the constraints implied by the other layout managers.</source>
          <target state="translated">&lt;code&gt;SpringLayout&lt;/code&gt; 还提供了一种解决许多难于解决的布局问题的方法，而这些问题是嵌套 &lt;code&gt;Box&lt;/code&gt; 组合无法解决的。就是说， &lt;code&gt;SpringLayout&lt;/code&gt; 正确履行了 &lt;code&gt;LayoutManager2&lt;/code&gt; 合同，因此可以与其他布局管理器嵌套在一起-这种技术可能比创建其他布局管理器隐含的约束更好。</target>
        </trans-unit>
        <trans-unit id="ec91ed8f9123d61216804a6acde10441218f9889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StAXSource&lt;/code&gt;s are consumed during processing and are not reusable.</source>
          <target state="translated">&lt;code&gt;StAXSource&lt;/code&gt; 在处理期间被消耗，并且不可重用。</target>
        </trans-unit>
        <trans-unit id="ea0b7335f020836736aa6dff2f652b1c0bff086a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTraceElement&lt;/code&gt; for this stack frame.</source>
          <target state="translated">&lt;code&gt;StackTraceElement&lt;/code&gt; 此堆栈帧的StackTraceElement。</target>
        </trans-unit>
        <trans-unit id="8041bd6384dd3ecdb1e93b1a2a106bb847aeb068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTraceElement&lt;/code&gt; that locked the object monitor, or &lt;code&gt;null&lt;/code&gt; if not available.</source>
          <target state="translated">&lt;code&gt;StackTraceElement&lt;/code&gt; 锁定对象监视器的StackTraceElement；如果不可用，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29a2aa694d97d15db4eceb1116c8181fecb83ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackWalker&lt;/code&gt; is thread-safe. Multiple threads can share a single &lt;code&gt;StackWalker&lt;/code&gt; object to traverse its own stack. A permission check is performed when a &lt;code&gt;StackWalker&lt;/code&gt; is created, according to the options it requests. No further permission check is done at stack walking time.</source>
          <target state="translated">&lt;code&gt;StackWalker&lt;/code&gt; 是线程安全的。多个线程可以共享一个 &lt;code&gt;StackWalker&lt;/code&gt; 对象以遍历其自己的堆栈。创建 &lt;code&gt;StackWalker&lt;/code&gt; 时，将根据其请求的选项执行权限检查。在堆栈遍历时不会进行进一步的权限检查。</target>
        </trans-unit>
        <trans-unit id="1d6a1f969d0d5ebd472a51875d672053d4129edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartTlsRequest&lt;/code&gt;/&lt;code&gt;StartTlsResponse&lt;/code&gt; are used to establish a TLS connection over the existing LDAP connection associated with the JNDI context on which &lt;code&gt;extendedOperation()&lt;/code&gt; is invoked. Typically, a JNDI program uses these classes as follows.</source>
          <target state="translated">&lt;code&gt;StartTlsRequest&lt;/code&gt; / &lt;code&gt;StartTlsResponse&lt;/code&gt; 用于在与调用了 &lt;code&gt;extendedOperation()&lt;/code&gt; 的JNDI上下文相关联的现有LDAP连接上建立TLS连接。通常，JNDI程序如下使用这些类。</target>
        </trans-unit>
        <trans-unit id="ef9f730de20dae7770242297e64e70f83abcd6ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StateFactory&lt;/code&gt; is intended for use with service providers that implement only the &lt;code&gt;Context&lt;/code&gt; interface. &lt;code&gt;DirStateFactory&lt;/code&gt; is intended for use with service providers that implement the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;StateFactory&lt;/code&gt; 旨在与仅实现 &lt;code&gt;Context&lt;/code&gt; 接口的服务提供商一起使用。 &lt;code&gt;DirStateFactory&lt;/code&gt; 旨在与实现 &lt;code&gt;DirContext&lt;/code&gt; 接口的服务提供程序一起使用。</target>
        </trans-unit>
        <trans-unit id="129618728f6b3efccfa306aa06ad990999b3aa4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; to indicate that the command failed to execute successfully</source>
          <target state="translated">&lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; 指示命令未能成功执行</target>
        </trans-unit>
        <trans-unit id="59506452a3f530aa4dfdbecfe44bad38215c7572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement.SUCCESS_NO_INFO&lt;/code&gt; to indicate that the command executed successfully but the number of rows affected is unknown</source>
          <target state="translated">&lt;code&gt;Statement.SUCCESS_NO_INFO&lt;/code&gt; 指示命令已成功执行，但受影响的行数未知</target>
        </trans-unit>
        <trans-unit id="9e3ea72d63719f308a4865dc35ef821859cd95be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement&lt;/code&gt; -- used to send basic SQL statements</source>
          <target state="translated">&lt;code&gt;Statement&lt;/code&gt; -用于发送基本的SQL语句</target>
        </trans-unit>
        <trans-unit id="8b0fda723e343d630648335a8457d55193716336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StatementSnippet&lt;/code&gt; is immutable: an access to any of its methods will always return the same result. and thus is thread-safe.</source>
          <target state="translated">&lt;code&gt;StatementSnippet&lt;/code&gt; 是不可变的：对其任何方法的访问将始终返回相同的结果。因此是线程安全的。</target>
        </trans-unit>
        <trans-unit id="fc42993ba6fcf2f2814531fad6877f29d0d25725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StaticClass&lt;/code&gt; objects representing Java array types will act as constructors taking a single int argument and create an array of the specified size.</source>
          <target state="translated">&lt;code&gt;StaticClass&lt;/code&gt; 表示Java数组类型的StaticClass对象将充当带有单个int参数的构造函数，并创建指定大小的数组。</target>
        </trans-unit>
        <trans-unit id="0a2666a6c024cb35ccf78992d06447056310480a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;Stream.iterate&lt;/code&gt; 应该产生与相应的for循环相同的元素序列：</target>
        </trans-unit>
        <trans-unit id="83d3fb42133bff3d5aa29cddfe8b40c597c0ee1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; -- &lt;code&gt;String.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; -- &lt;code&gt;String.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a838b39decfb2294c0b8862c0f9fc0659f60422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; -- The print data consists of the Unicode characters in the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; -打印数据由字符串中的Unicode字符组成。</target>
        </trans-unit>
        <trans-unit id="e96e53f605a844ffcd002c2930bca38bba8f524f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;QName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 此 &lt;code&gt;QName&lt;/code&gt; 的字符串表示形式</target>
        </trans-unit>
        <trans-unit id="25b29359bc12a29ea3a6b38dbf0cbf432ae9e931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;QName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 此 &lt;code&gt;QName&lt;/code&gt; 的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="104a0ccb552a1e7671deec21d6324d5564b5b36a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; version of this two-dimensional size attribute</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 此二维大小属性的字符串版本</target>
        </trans-unit>
        <trans-unit id="17d26d0e56342b14556b773585795dc7f60f72e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringBuffer&lt;/code&gt; implements &lt;code&gt;Comparable&lt;/code&gt; but does not override &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;. Thus, the natural ordering of &lt;code&gt;StringBuffer&lt;/code&gt; is inconsistent with equals. Care should be exercised if &lt;code&gt;StringBuffer&lt;/code&gt; objects are used as keys in a &lt;code&gt;SortedMap&lt;/code&gt; or elements in a &lt;code&gt;SortedSet&lt;/code&gt;. See &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 实现 &lt;code&gt;Comparable&lt;/code&gt; ,但不覆盖&lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;。因此， &lt;code&gt;StringBuffer&lt;/code&gt; 的自然顺序与等号不一致。如果将 &lt;code&gt;StringBuffer&lt;/code&gt; 对象用作 &lt;code&gt;SortedMap&lt;/code&gt; 中的键或 &lt;code&gt;SortedSet&lt;/code&gt; 中的元素，则应格外小心。有关更多信息，请参见&lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce4ba99eb1531465f93022e15257d7af0a594df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringBuilder&lt;/code&gt; implements &lt;code&gt;Comparable&lt;/code&gt; but does not override &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;. Thus, the natural ordering of &lt;code&gt;StringBuilder&lt;/code&gt; is inconsistent with equals. Care should be exercised if &lt;code&gt;StringBuilder&lt;/code&gt; objects are used as keys in a &lt;code&gt;SortedMap&lt;/code&gt; or elements in a &lt;code&gt;SortedSet&lt;/code&gt;. See &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; 实现 &lt;code&gt;Comparable&lt;/code&gt; ,但不覆盖&lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;。因此， &lt;code&gt;StringBuilder&lt;/code&gt; 的自然顺序与等号不一致。如果将 &lt;code&gt;StringBuilder&lt;/code&gt; 对象用作 &lt;code&gt;SortedMap&lt;/code&gt; 中的键或 &lt;code&gt;SortedSet&lt;/code&gt; 中的元素，则应格外小心。有关更多信息，请参见&lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05442803e74defea6168462ab72660a17f23ec67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringCharacterIterator&lt;/code&gt; implements the &lt;code&gt;CharacterIterator&lt;/code&gt; protocol for a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringCharacterIterator&lt;/code&gt; 为 &lt;code&gt;String&lt;/code&gt; 实现 &lt;code&gt;CharacterIterator&lt;/code&gt; 协议。</target>
        </trans-unit>
        <trans-unit id="e99f4eccee869a2545780e0c78bad182a3e54dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringCharacterIterator&lt;/code&gt; implements the &lt;code&gt;CharacterIterator&lt;/code&gt; protocol for a &lt;code&gt;String&lt;/code&gt;. The &lt;code&gt;StringCharacterIterator&lt;/code&gt; class iterates over the entire &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringCharacterIterator&lt;/code&gt; 为 &lt;code&gt;String&lt;/code&gt; 实现 &lt;code&gt;CharacterIterator&lt;/code&gt; 协议。该 &lt;code&gt;StringCharacterIterator&lt;/code&gt; 类遍历整个 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5abba757a9c8a22ad071ad0672f0b19b7011fd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringJoiner&lt;/code&gt; is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.</source>
          <target state="translated">&lt;code&gt;StringJoiner&lt;/code&gt; 用于构造由定界符分隔的字符序列，并可选地以提供的前缀开头和以提供的后缀结尾。</target>
        </trans-unit>
        <trans-unit id="dc1a831a4a48a82bad38250223afca4dab93dd1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringTokenizer&lt;/code&gt; is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. It is recommended that anyone seeking this functionality use the &lt;code&gt;split&lt;/code&gt; method of &lt;code&gt;String&lt;/code&gt; or the java.util.regex package instead.</source>
          <target state="translated">&lt;code&gt;StringTokenizer&lt;/code&gt; 是一个遗留类，出于兼容性原因而保留，尽管在新代码中不鼓励使用它。建议任何寻求此功能的人改用 &lt;code&gt;String&lt;/code&gt; 的 &lt;code&gt;split&lt;/code&gt; 方法或java.util.regex软件包。</target>
        </trans-unit>
        <trans-unit id="846fd30669f7f4ca899e139ae5970d2a57205b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Struct&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;STRUCT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Struct&lt;/code&gt; 接口-SQL &lt;code&gt;STRUCT&lt;/code&gt; 的映射</target>
        </trans-unit>
        <trans-unit id="3b71bdaf4c82c6a53941ee7bb7364d0884eee9be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Style&lt;/code&gt; is an enum which represents the style for formatting a number within a given &lt;code&gt;NumberFormat&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Style&lt;/code&gt; 是一个枚举，表示用于在给定 &lt;code&gt;NumberFormat&lt;/code&gt; 实例中格式化数字的样式。</target>
        </trans-unit>
        <trans-unit id="4682346c146b15c4dc8c13a975c3f9e9461682ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.CENTER&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;SwingConstants.CENTER&lt;/code&gt; （默认）</target>
        </trans-unit>
        <trans-unit id="f0874a1f56e0ae79da5bffb09836e6a186e663b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.TRAILING&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;SwingConstants.TRAILING&lt;/code&gt; （默认值）</target>
        </trans-unit>
        <trans-unit id="ac04e74360d0d3d91962f23cc215a9dfcee5b829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.VERTICAL&lt;/code&gt; or &lt;code&gt;SwingConstants.HORIZONTAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SwingConstants.VERTICAL&lt;/code&gt; 或 &lt;code&gt;SwingConstants.HORIZONTAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="235df273db625a404bd9f26deaf887e4d80c6f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingEventMonitor&lt;/code&gt; extends &lt;a href=&quot;awteventmonitor&quot;&gt;&lt;code&gt;AWTEventMonitor&lt;/code&gt;&lt;/a&gt; by adding a suite of listeners conditionally installed on every Swing component instance in the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;SwingEventMonitor&lt;/code&gt; 通过添加有条件地安装在Java虚拟机中每个Swing组件实例上的一组侦听器来扩展&lt;a href=&quot;awteventmonitor&quot;&gt; &lt;code&gt;AWTEventMonitor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38820cf2dd10c1b10792fc31de4ac221b184b358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingEventMonitor&lt;/code&gt; extends &lt;a href=&quot;awteventmonitor&quot;&gt;&lt;code&gt;AWTEventMonitor&lt;/code&gt;&lt;/a&gt; by adding a suite of listeners conditionally installed on every Swing component instance in the Java Virtual Machine. The events captured by these listeners are made available through a unified set of listeners supported by &lt;code&gt;SwingEventMonitor&lt;/code&gt;. With this, all the individual events on each of the AWT and Swing component instances are funneled into one set of listeners broken down by category (see &lt;a href=&quot;eventid&quot;&gt;&lt;code&gt;EventID&lt;/code&gt;&lt;/a&gt; for the categories).</source>
          <target state="translated">&lt;code&gt;SwingEventMonitor&lt;/code&gt; 通过添加有条件地安装在Java虚拟机中每个Swing组件实例上的一组侦听器来扩展&lt;a href=&quot;awteventmonitor&quot;&gt; &lt;code&gt;AWTEventMonitor&lt;/code&gt; &lt;/a&gt;。这些侦听器捕获的事件可通过 &lt;code&gt;SwingEventMonitor&lt;/code&gt; 支持的一组统一的侦听器使用。这样，AWT和Swing组件实例中的每个实例上的所有单个事件将被集中到一组按类别细分的侦听器中（有关类别，请参阅&lt;a href=&quot;eventid&quot;&gt; &lt;code&gt;EventID&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5f5f5ee2142f8256579bd407a7ac24d418c39441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is &lt;code&gt;DONE&lt;/code&gt; after &lt;code&gt;doInBackground&lt;/code&gt; method is finished.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 的是 &lt;code&gt;DONE&lt;/code&gt; 后 &lt;code&gt;doInBackground&lt;/code&gt; 方法完成。</target>
        </trans-unit>
        <trans-unit id="200f683304c2ec654cbb098c762d92d50845d6d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is &lt;code&gt;STARTED&lt;/code&gt; before invoking &lt;code&gt;doInBackground&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 类是 &lt;code&gt;STARTED&lt;/code&gt; 调用之前 &lt;code&gt;doInBackground&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6228bde435579fa2ab039b856d9dedfe6aa34441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is designed for situations where you need to have a long running task run in a background thread and provide updates to the UI either when done, or while processing. Subclasses of &lt;code&gt;SwingWorker&lt;/code&gt; must implement the &lt;a href=&quot;#doInBackground()&quot;&gt;&lt;code&gt;doInBackground()&lt;/code&gt;&lt;/a&gt; method to perform the background computation.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 专为需要在后台线程中运行长时间运行的任务并在完成或处理时向UI提供更新的情况而设计。 &lt;code&gt;SwingWorker&lt;/code&gt; 的子类必须实现&lt;a href=&quot;#doInBackground()&quot;&gt; &lt;code&gt;doInBackground()&lt;/code&gt; &lt;/a&gt;方法才能执行后台计算。</target>
        </trans-unit>
        <trans-unit id="7daf9cd552f9f62ea5601a1993af472e55c4b229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is only designed to be executed once. Executing a &lt;code&gt;SwingWorker&lt;/code&gt; more than once will not result in invoking the &lt;code&gt;doInBackground&lt;/code&gt; method twice.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 仅设计为只能执行一次。多次执行 &lt;code&gt;SwingWorker&lt;/code&gt; 不会导致两次调用 &lt;code&gt;doInBackground&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="4196f1bfcc657773ada73b70fea09e6b8b5af309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyncProvider&lt;/code&gt; implementations that supply XML data reader capabilities such as output XML stream capabilities can implement this interface to provide standard &lt;code&gt;XmlReader&lt;/code&gt; objects to &lt;code&gt;WebRowSet&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 提供XML数据读取器功能（例如输出XML流功能）的SyncProvider实现可以实现此接口，以向 &lt;code&gt;WebRowSet&lt;/code&gt; 实现提供标准 &lt;code&gt;XmlReader&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="d9d52f5eac3295025057315703f33bdfe14d4896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyncProvider&lt;/code&gt; implementations that supply XML data writer capabilities such as output XML stream capabilities can implement this interface to provide standard &lt;code&gt;XmlWriter&lt;/code&gt; objects to &lt;code&gt;WebRowSet&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 提供XML数据编写器功能（例如输出XML流功能）的SyncProvider实现可以实现此接口，以向 &lt;code&gt;WebRowSet&lt;/code&gt; 实现提供标准 &lt;code&gt;XmlWriter&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="c07ed42b19c910960415bc8be913c8bb2aed3274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is abstract in so far as it does no painting, all the methods are empty. While none of these methods are typed to throw an exception, subclasses can assume that valid arguments are passed in, and if not they can throw a &lt;code&gt;NullPointerException&lt;/code&gt; or &lt;code&gt;IllegalArgumentException&lt;/code&gt; in response to invalid arguments.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 在不绘画的情况下是抽象的，所有方法都是空的。尽管这些方法都没有类型可以引发异常，但是子类可以假定传入了有效参数，如果没有，则可以抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 或 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 以响应无效参数。</target>
        </trans-unit>
        <trans-unit id="0738580db4ef00684ffad070f1a83a1ffc56d380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is used for painting portions of &lt;code&gt;JComponent&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 用于绘画 &lt;code&gt;JComponent&lt;/code&gt; 的部分。</target>
        </trans-unit>
        <trans-unit id="b03301bff08ea3d1cda6ec5b9a0c6e81568f0cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is used for painting portions of &lt;code&gt;JComponent&lt;/code&gt;s. At a minimum each &lt;code&gt;JComponent&lt;/code&gt; has two paint methods: one for the border and one for the background. Some &lt;code&gt;JComponent&lt;/code&gt;s have more than one &lt;code&gt;Region&lt;/code&gt;, and as a consequence more paint methods.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 用于绘画 &lt;code&gt;JComponent&lt;/code&gt; 的部分。每个 &lt;code&gt;JComponent&lt;/code&gt; 至少有两种绘制方法：一种用于边框，一种用于背景。一些 &lt;code&gt;JComponent&lt;/code&gt; 具有不止一个 &lt;code&gt;Region&lt;/code&gt; ，因此有更多的绘制方法。</target>
        </trans-unit>
        <trans-unit id="a07e5cfaeabd910b7f59d499497be9d62bc1aadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 是一组样式属性。</target>
        </trans-unit>
        <trans-unit id="6921afa3434d09c5dc37b05583cc85391ef9d493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties. Each &lt;code&gt;SynthUI&lt;/code&gt; references at least one &lt;code&gt;SynthStyle&lt;/code&gt; that is obtained using a &lt;code&gt;SynthStyleFactory&lt;/code&gt;. You typically don't need to interact with this class directly, rather you will load a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format file&lt;/a&gt; into &lt;code&gt;SynthLookAndFeel&lt;/code&gt; that will create a set of SynthStyles.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 是一组样式属性。每个 &lt;code&gt;SynthUI&lt;/code&gt; 引用的至少一个 &lt;code&gt;SynthStyle&lt;/code&gt; 的是使用得到 &lt;code&gt;SynthStyleFactory&lt;/code&gt; 。通常，您不需要直接与此类进行交互，而是将&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format文件&lt;/a&gt;加载到 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 中，该文件将创建一组SynthStyles。</target>
        </trans-unit>
        <trans-unit id="1ad1c4f50e3d0e061c146f22242c12cb28efccf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties. Each &lt;code&gt;SynthUI&lt;/code&gt; references at least one &lt;code&gt;SynthStyle&lt;/code&gt; that is obtained using a &lt;code&gt;SynthStyleFactory&lt;/code&gt;. You typically don't need to interact with this class directly, rather you will load a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format file&lt;/a&gt; into &lt;code&gt;SynthLookAndFeel&lt;/code&gt; that will create a set of SynthStyles.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 是一组样式属性。每个 &lt;code&gt;SynthUI&lt;/code&gt; 引用的至少一个 &lt;code&gt;SynthStyle&lt;/code&gt; 的是使用得到 &lt;code&gt;SynthStyleFactory&lt;/code&gt; 。通常，您不需要直接与此类进行交互，而是将&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format文件&lt;/a&gt;加载到 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 中，该文件将创建一组SynthStyles。</target>
        </trans-unit>
        <trans-unit id="585e31788aacba94cba584cfb189bf6a2d162739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;System.Logger&lt;/code&gt; instances log messages that will be routed to the underlying logging framework the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; uses.</source>
          <target state="translated">&lt;code&gt;System.Logger&lt;/code&gt; 实例记录将被路由到&lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; &lt;/a&gt;使用的基础日志框架的消息。</target>
        </trans-unit>
        <trans-unit id="6b6780e7d3d88e8db41659a81dda648f999d2bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;System.Logger&lt;/code&gt; instances log messages that will be routed to the underlying logging framework the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; uses. &lt;code&gt;System.Logger&lt;/code&gt; instances are typically obtained from the &lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; class, by calling &lt;a href=&quot;system#getLogger(java.lang.String)&quot;&gt;&lt;code&gt;System.getLogger(loggerName)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;system#getLogger(java.lang.String,java.util.ResourceBundle)&quot;&gt;&lt;code&gt;System.getLogger(loggerName, bundle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;System.Logger&lt;/code&gt; 实例记录将被路由到&lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; &lt;/a&gt;使用的基础日志框架的消息。通常通过调用&lt;a href=&quot;system#getLogger(java.lang.String)&quot;&gt; &lt;code&gt;System.getLogger(loggerName)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;system#getLogger(java.lang.String,java.util.ResourceBundle)&quot;&gt; &lt;code&gt;System.getLogger(loggerName, bundle)&lt;/code&gt; &lt;/a&gt;从&lt;a href=&quot;system&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt;类获得 &lt;code&gt;System.Logger&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="432722d984024862451f1393e1a4cffc94321b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; (or a third thread) then calls &lt;code&gt;CV.remove(C)&lt;/code&gt;, undoing &lt;code&gt;T2&lt;/code&gt;'s work</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; （或第三个线程）调用 &lt;code&gt;CV.remove(C)&lt;/code&gt; ，撤消 &lt;code&gt;T2&lt;/code&gt; 的工作</target>
        </trans-unit>
        <trans-unit id="de1282e67caa3cb38bdb0f2d862a36bd5576eef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; quickly computes a similar time-dependent value &lt;code&gt;V1&lt;/code&gt; and installs it on &lt;code&gt;CV.get(C)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; 快速计算类似的时间相关值 &lt;code&gt;V1&lt;/code&gt; 并将其安装在 &lt;code&gt;CV.get(C)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6dcc2e3370d8ea9d35631dea5f935d793c3aa5e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Allows the compiler to check that &lt;code&gt;implementation&lt;/code&gt; does indeed implement the class described by &lt;code&gt;mbeanInterface&lt;/code&gt;. The compiler can only check this if &lt;code&gt;mbeanInterface&lt;/code&gt; is a class literal such as &lt;code&gt;MyMBean.class&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -允许编译器检查 &lt;code&gt;implementation&lt;/code&gt; 是否确实实现了 &lt;code&gt;mbeanInterface&lt;/code&gt; 描述的类。如果 &lt;code&gt;mbeanInterface&lt;/code&gt; 是类文字，例如 &lt;code&gt;MyMBean.class&lt;/code&gt; ,则编译器只能进行检查。</target>
        </trans-unit>
        <trans-unit id="d98ea9921663d2eacd8470ef000aa084e7f8f117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The class type that will be returned by the XPath expression.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -XPath表达式将返回的类类型。</target>
        </trans-unit>
        <trans-unit id="95ba15351f5078dff161ba24372e003a68f416dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The enum type whose constant is to be returned</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -要返回其常量的枚举类型</target>
        </trans-unit>
        <trans-unit id="7f9a40bdea403cdddb5226c4132dbd7b9793393f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The result type returned by this future's &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -此Future的 &lt;code&gt;join&lt;/code&gt; 和 &lt;code&gt;get&lt;/code&gt; 方法返回的结果类型</target>
        </trans-unit>
        <trans-unit id="adb8a31e81b655e7f510ab545971bf3ae795456d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of element returned by the iterator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -迭代器返回的元素类型</target>
        </trans-unit>
        <trans-unit id="6088a6251bfb20139b5be1dd3e2a158f1974fb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of input elements for the new collector</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -新收集器的输入元素的类型</target>
        </trans-unit>
        <trans-unit id="f02a7da6353446ba19cd5914ba3176b873e0b361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of reference to the files</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -对文件的引用类型</target>
        </trans-unit>
        <trans-unit id="44831613362015ca2008c05c75dfd96b1aaa0efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of stream elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -流元素的类型</target>
        </trans-unit>
        <trans-unit id="965cdc28bc507dd4bd91b771600cf6b9c635e15a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the array elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -数组元素的类型</target>
        </trans-unit>
        <trans-unit id="1fa4d7ab5d76c4e58980dc3aa5d17150c167f5cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the attachment</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -附件类型</target>
        </trans-unit>
        <trans-unit id="e6402813030ed7b2e5d5a05f2a0dec650ef8cebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the context object associated with the event</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -与事件关联的上下文对象的类型</target>
        </trans-unit>
        <trans-unit id="dd7f818faad1c693c82a8da3fe094263c7051013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the file attribute value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -文件属性值的类型</target>
        </trans-unit>
        <trans-unit id="66b4f8d985a4070895126cbddfb33899bdafbfbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the non-existent value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -不存在的值的类型</target>
        </trans-unit>
        <trans-unit id="bf65765ca32b37f80aa36c04120fdb51a1cfe043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the object attached to the receive operation</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -附加到接收操作的对象的类型</target>
        </trans-unit>
        <trans-unit id="4f715de3a93d4a1325adf7976bf1e0519b30c7f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the object holding the updatable field</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -包含可更新字段的对象的类型</target>
        </trans-unit>
        <trans-unit id="f0b5c4b9ea15d28815a39982c4ed017559037b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the result of applying the function to the stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;stack frame&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -将函数应用于&lt;a href=&quot;stackwalker.stackframe&quot;&gt;堆栈帧&lt;/a&gt;流的结果的类型。</target>
        </trans-unit>
        <trans-unit id="fced19de39fdc49f3543cd4b98a3f618545229bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the socket option value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -套接字选项值的类型</target>
        </trans-unit>
        <trans-unit id="c8eeb6eeda1a3d4c7860c0bd3637a9fca5325e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the socket option value.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -套接字选项值的类型。</target>
        </trans-unit>
        <trans-unit id="9e13b8b435198952685a0fb5f9ebe33f58446c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Type of elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -元素类型</target>
        </trans-unit>
        <trans-unit id="664c82518d7dbe51d95dc0376308c7b080b24885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Type of the non-existent value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -不存在的值的类型</target>
        </trans-unit>
        <trans-unit id="6fc5b2ce6f49c66d4978328ac73e2cccd63806b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;
 defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -让编译器检查的 &lt;code&gt; defaultValue&lt;/code&gt; 和 &lt;code&gt;legalValues&lt;/code&gt; 来，如果非空，对给定正确的Java类型 &lt;code&gt;openType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47053d5a6e7d312d26e0ae45310c2370314009ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;
 defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;
 openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -让编译器来检查 &lt;code&gt; defaultValue&lt;/code&gt; ， &lt;code&gt;minValue&lt;/code&gt; (最小值)，以及 &lt;code&gt;maxValue&lt;/code&gt; ，如果非空，对给定正确的Java类型 &lt;code&gt; openType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cca368ab1d05f403a456411366a46a54d041c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -让编译器检查的 &lt;code&gt;defaultValue&lt;/code&gt; 和 &lt;code&gt;legalValues&lt;/code&gt; 来，如果非空，对给定正确的Java类型 &lt;code&gt;openType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7da93c037f6bd746c409db9a9a1b00223431a0dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -让编译器来检查 &lt;code&gt;defaultValue&lt;/code&gt; ， &lt;code&gt;minValue&lt;/code&gt; (最小值)，以及 &lt;code&gt;maxValue&lt;/code&gt; ，如果非空，对给定正确的Java类型 &lt;code&gt;openType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d38da2b8f1415f0bfea67001da1e7a786c9c7e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt;, if non-null, has the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -允许编译器检查 &lt;code&gt;defaultValue&lt;/code&gt; （如果非null）是否具有给定 &lt;code&gt;openType&lt;/code&gt; 的正确Java类型。</target>
        </trans-unit>
        <trans-unit id="a7cb62e7104db5f392c61ea3e8a79952ec6f7aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;
 interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -允许编译器知道例如，如果 &lt;code&gt; interfaceClass&lt;/code&gt; 参数为 &lt;code&gt;MyMBean.class&lt;/code&gt; ，则返回类型为 &lt;code&gt;MyMBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a57394c155db5ba75faeb0bd09208f6ccbeda1d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;
 interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMXBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -允许编译器知道例如，如果 &lt;code&gt; interfaceClass&lt;/code&gt; 参数为 &lt;code&gt;MyMXBean.class&lt;/code&gt; ，则返回类型为 &lt;code&gt;MyMXBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="019ca4079877b49738764e49ac125a3ff05a9261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -允许编译器知道例如，如果 &lt;code&gt;interfaceClass&lt;/code&gt; 参数为 &lt;code&gt;MyMBean.class&lt;/code&gt; ，则返回类型为 &lt;code&gt;MyMBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf87baaa7eb6ff571f806e206e747d483737fb70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMXBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -允许编译器知道例如，如果 &lt;code&gt;interfaceClass&lt;/code&gt; 参数为 &lt;code&gt;MyMXBean.class&lt;/code&gt; ，则返回类型为 &lt;code&gt;MyMXBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f5d25a6903901fb9d715669cfb586215f9e259f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - an &lt;code&gt;mxbeanInterface&lt;/code&gt; type parameter</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -一个 &lt;code&gt;mxbeanInterface&lt;/code&gt; 类型参数</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
