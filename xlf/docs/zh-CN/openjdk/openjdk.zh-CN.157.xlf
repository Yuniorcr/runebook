<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="7b714ebd6de634fdba1f86515ab4bd0e35c46a23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDragEvent&lt;/code&gt; is delivered from the &lt;code&gt;DragSourceContextPeer&lt;/code&gt;, via the &lt;code&gt;DragSourceContext&lt;/code&gt;, to the &lt;code&gt;DragSourceListener&lt;/code&gt; registered with that &lt;code&gt;DragSourceContext&lt;/code&gt; and with its associated &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DragSourceDragEvent&lt;/code&gt; 从交付 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; ，通过 &lt;code&gt;DragSourceContext&lt;/code&gt; ，给 &lt;code&gt;DragSourceListener&lt;/code&gt; 与注册 &lt;code&gt;DragSourceContext&lt;/code&gt; 和与其关联 &lt;code&gt;DragSource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d31b1878f6e04bbd66b12f6d210c8503298cea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDragEvent&lt;/code&gt; reports the</source>
          <target state="translated">该 &lt;code&gt;DragSourceDragEvent&lt;/code&gt; 报告</target>
        </trans-unit>
        <trans-unit id="ac52ab45dff423a52b65a99453d257e77b17e615" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDropEvent&lt;/code&gt; is delivered from the &lt;code&gt;DragSourceContextPeer&lt;/code&gt;, via the &lt;code&gt;DragSourceContext&lt;/code&gt;, to the &lt;code&gt;dragDropEnd&lt;/code&gt; method of &lt;code&gt;DragSourceListener&lt;/code&gt;s registered with that &lt;code&gt;DragSourceContext&lt;/code&gt; and with its associated &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;DragSourceDropEvent&lt;/code&gt; 从递送 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; 经由 &lt;code&gt;DragSourceContext&lt;/code&gt; 到 &lt;code&gt;dragDropEnd&lt;/code&gt; 的方法 &lt;code&gt;DragSourceListener&lt;/code&gt; 与注册小号 &lt;code&gt;DragSourceContext&lt;/code&gt; 和与其相关联的 &lt;code&gt;DragSource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e677218ceda78bbf903d55fdd8613920724c58b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceDropEvent&lt;/code&gt; is delivered from the &lt;code&gt;DragSourceContextPeer&lt;/code&gt;, via the &lt;code&gt;DragSourceContext&lt;/code&gt;, to the &lt;code&gt;dragDropEnd&lt;/code&gt; method of &lt;code&gt;DragSourceListener&lt;/code&gt;s registered with that &lt;code&gt;DragSourceContext&lt;/code&gt; and with its associated &lt;code&gt;DragSource&lt;/code&gt;. It contains sufficient information for the originator of the operation to provide appropriate feedback to the end user when the operation completes.</source>
          <target state="translated">所述 &lt;code&gt;DragSourceDropEvent&lt;/code&gt; 从递送 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; 经由 &lt;code&gt;DragSourceContext&lt;/code&gt; 到 &lt;code&gt;dragDropEnd&lt;/code&gt; 的方法 &lt;code&gt;DragSourceListener&lt;/code&gt; 与注册小号 &lt;code&gt;DragSourceContext&lt;/code&gt; 和与其相关联的 &lt;code&gt;DragSource&lt;/code&gt; 。它包含足够的信息供操作的发起者在操作完成时向最终用户提供适当的反馈。</target>
        </trans-unit>
        <trans-unit id="e9e3418fc8cdd49330b7f79abdc8904fb8722d38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceListener&lt;/code&gt; defines the event interface for originators of Drag and Drop operations to track the state of the user's gesture, and to provide appropriate &quot;drag over&quot; feedback to the user throughout the Drag and Drop operation.</source>
          <target state="translated">该 &lt;code&gt;DragSourceListener&lt;/code&gt; 定义了用于拖动的发起人和Drop操作事件接口来跟踪用户操作的状态，并在整个拖放操作的用户提供反馈，适当的&amp;ldquo;拖动结束&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2f2d9115dd61845a24deb87877d315f3a9e4f165" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTarget&lt;/code&gt; is associated with a &lt;code&gt;Component&lt;/code&gt; when that &lt;code&gt;Component&lt;/code&gt; wishes to accept drops during Drag and Drop operations.</source>
          <target state="translated">该 &lt;code&gt;DropTarget&lt;/code&gt; 的与相关 &lt;code&gt;Component&lt;/code&gt; 时 &lt;code&gt;Component&lt;/code&gt; 希望接受拖放操作期间下降。</target>
        </trans-unit>
        <trans-unit id="fc9ceb54981fdaa5275f1c3158775b7713926c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetContext&lt;/code&gt; associated with this &lt;code&gt;DropTargetEvent&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DropTargetContext&lt;/code&gt; 与此相关 &lt;code&gt;DropTargetEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ffbaf633173a302e98991243b9280a1d21067be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDragEvent&lt;/code&gt; is delivered to a &lt;code&gt;DropTargetListener&lt;/code&gt; via its dragEnter() and dragOver() methods.</source>
          <target state="translated">所述 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 被递送到 &lt;code&gt;DropTargetListener&lt;/code&gt; 经由其dragEnter事件（）和的dragover（）方法。</target>
        </trans-unit>
        <trans-unit id="7ca6b065fdcfefbc58d586632c9621c6336c3140" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDragEvent&lt;/code&gt; reports the</source>
          <target state="translated">该 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 报告</target>
        </trans-unit>
        <trans-unit id="8cd604ebcf28e38aaec8a020404fd0ed59cb3f44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDropEvent&lt;/code&gt; is delivered via the &lt;code&gt;DropTargetListener&lt;/code&gt; drop() method.</source>
          <target state="translated">所述 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; 经由递送 &lt;code&gt;DropTargetListener&lt;/code&gt; 降（）方法。</target>
        </trans-unit>
        <trans-unit id="a7b814023f405a37ab935e9af73364cf929626ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetDropEvent&lt;/code&gt; reports the</source>
          <target state="translated">该 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; 报告</target>
        </trans-unit>
        <trans-unit id="777f975ce845ccbaea28145926d0360d15d674cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetEvent&lt;/code&gt; is the base class for both the &lt;code&gt;DropTargetDragEvent&lt;/code&gt; and the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DropTargetEvent&lt;/code&gt; 是两者的基类 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 和 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c3d2978f393b9a45819d66b22c6fef1c3b101b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetEvent&lt;/code&gt; is the base class for both the &lt;code&gt;DropTargetDragEvent&lt;/code&gt; and the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;. It encapsulates the current state of the Drag and Drop operations, in particular the current &lt;code&gt;DropTargetContext&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DropTargetEvent&lt;/code&gt; 是两者的基类 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 和 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; 。它封装了拖放操作的当前状态，尤其是当前的 &lt;code&gt;DropTargetContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6f8032621bbb9de280649cd020af9e49c6c9b9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetListener&lt;/code&gt; interface is the callback interface used by the &lt;code&gt;DropTarget&lt;/code&gt; class to provide notification of DnD operations that involve the subject &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DropTargetListener&lt;/code&gt; 接口是由所使用的回调接口 &lt;code&gt;DropTarget&lt;/code&gt; 类提供所涉及主题的DnD操作的通知 &lt;code&gt;DropTarget&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="f1ad4dc5e388ca41872cef2cc6ae867a25a15ca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropTargetListener&lt;/code&gt; interface is the callback interface used by the &lt;code&gt;DropTarget&lt;/code&gt; class to provide notification of DnD operations that involve the subject &lt;code&gt;DropTarget&lt;/code&gt;. Methods of this interface may be implemented to provide &quot;drag under&quot; visual feedback to the user throughout the Drag and Drop operation.</source>
          <target state="translated">该 &lt;code&gt;DropTargetListener&lt;/code&gt; 接口是由所使用的回调接口 &lt;code&gt;DropTarget&lt;/code&gt; 类提供所涉及主题的DnD操作的通知 &lt;code&gt;DropTarget&lt;/code&gt; 的。可以实现此界面的方法，以在整个拖放操作过程中向用户提供&amp;ldquo;在...下方拖动&amp;rdquo;的视觉反馈。</target>
        </trans-unit>
        <trans-unit id="b3b11f7c76e4ccfcb4d3d6f6066f5eb2401835a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DynamicLinker&lt;/code&gt; objects created by &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; by default contain an internal instance of &lt;code&gt;BeansLinker&lt;/code&gt;, which is a language-specific linker that implements the usual Java semantics for all of the above operations and can link any Java object that no other language-specific linker has managed to link. This way, all language runtimes have built-in interoperability with ordinary Java objects. See &lt;a href=&quot;jdk/dynalink/beans/beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt; for details on how it links the various operations.</source>
          <target state="translated">默认情况下，由 &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; 创建的 &lt;code&gt;DynamicLinker&lt;/code&gt; 对象包含 &lt;code&gt;BeansLinker&lt;/code&gt; 的内部实例，该实例是特定于语言的链接器，可为上述所有操作实现通常的Java语义，并且可以链接任何其他特定于语言的链接器都无法管理的Java对象。关联。这样，所有语言运行时都具有与普通Java对象的内置互操作性。有关如何链接各种操作的详细信息，请参见&lt;a href=&quot;jdk/dynalink/beans/beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd923e66451c09da1d3d4e1f6626a2df5c8337ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the &lt;code&gt;ScriptContext&lt;/code&gt; contains the bindings of scripting variables to application objects to be used during this script execution.</source>
          <target state="translated">该 &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; 了的 &lt;code&gt;ScriptContext&lt;/code&gt; 中包含此脚本执行期间使用脚本变量的应用对象的绑定。</target>
        </trans-unit>
        <trans-unit id="7ac2a2597218d88488760abbe3572d583515c44b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ERA&lt;/code&gt; field returns a range for the one valid Hijrah era.</source>
          <target state="translated">在 &lt;code&gt;ERA&lt;/code&gt; 字段返回为一个有效的伊历时代范围。</target>
        </trans-unit>
        <trans-unit id="1a7ce34ce162da4ee98566ed04babff39297325b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; interface represents an element in an HTML or XML document.</source>
          <target state="translated">所述 &lt;code&gt;Element&lt;/code&gt; 接口表示HTML或XML文档中的元素。</target>
        </trans-unit>
        <trans-unit id="56f8e7cbe7fedd44e71cad4abca86307c32d940a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; interface represents an element in an HTML or XML document. Elements may have attributes associated with them; since the &lt;code&gt;Element&lt;/code&gt; interface inherits from &lt;code&gt;Node&lt;/code&gt;, the generic &lt;code&gt;Node&lt;/code&gt; interface attribute &lt;code&gt;attributes&lt;/code&gt; may be used to retrieve the set of all attributes for an element. There are methods on the &lt;code&gt;Element&lt;/code&gt; interface to retrieve either an &lt;code&gt;Attr&lt;/code&gt; object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an &lt;code&gt;Attr&lt;/code&gt; object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience.</source>
          <target state="translated">所述 &lt;code&gt;Element&lt;/code&gt; 接口表示HTML或XML文档中的元素。元素可能具有与之关联的属性；由于 &lt;code&gt;Element&lt;/code&gt; 接口是从 &lt;code&gt;Node&lt;/code&gt; 继承的，因此通用 &lt;code&gt;Node&lt;/code&gt; 接口的属性 &lt;code&gt;attributes&lt;/code&gt; 可用于检索元素的所有属性集。 &lt;code&gt;Element&lt;/code&gt; 接口上有一些方法可以按名称检索 &lt;code&gt;Attr&lt;/code&gt; 对象，也可以按名称检索属性值。在XML中，如果属性值可能包含实体引用，则 &lt;code&gt;Attr&lt;/code&gt; 应该检索对象以检查表示属性值的可能相当复杂的子树。另一方面，在所有属性都具有简单字符串值的HTML中，可以方便地使用直接访问属性值的方法。</target>
        </trans-unit>
        <trans-unit id="062646a7a70bae8b386d004ed0c24a7f5febaa0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; node this attribute is attached to or &lt;code&gt;null&lt;/code&gt; if this attribute is not in use.</source>
          <target state="translated">此属性附加到的 &lt;code&gt;Element&lt;/code&gt; 节点；如果不使用此属性，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84d456059a3ae70710ff77987c83f5d3565185be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; on which the namespace was in scope when it was requested.</source>
          <target state="translated">当请求名称空间时，在其上作用域的 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ae505cc529eebac866deb17686d9f4d77dd8e63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Element&lt;/code&gt; on which the namespace was in scope when it was requested. This does not change on a returned namespace node even if the document changes such that the namespace goes out of scope on that element and this node is no longer found there by XPath.</source>
          <target state="translated">当请求名称空间时，在其上作用域的 &lt;code&gt;Element&lt;/code&gt; 。即使文档发生更改，使得名称空间超出了该元素的作用域，并且XPath也不再在该节点上找到此节点，这在返回的名称空间节点上不会更改。</target>
        </trans-unit>
        <trans-unit id="43f6c56600834b8ccf7f7093afce844b3f3f5fe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ElementIterator&lt;/code&gt; does no locking of the &lt;code&gt;Element&lt;/code&gt; tree. This means that it does not track any changes. It is the responsibility of the user of this class, to ensure that no changes happen during element iteration.</source>
          <target state="translated">该 &lt;code&gt;ElementIterator&lt;/code&gt; 并没有锁定的 &lt;code&gt;Element&lt;/code&gt; 树。这意味着它不会跟踪任何更改。此类用户的职责是确保元素迭代期间不发生任何更改。</target>
        </trans-unit>
        <trans-unit id="aa0fc8a45db77f0c824cdd5135e6bc6d602e48de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ElementTraversal&lt;/code&gt; interface is a set of read-only attributes which allow an author to easily navigate between elements in a document.</source>
          <target state="translated">所述 &lt;code&gt;ElementTraversal&lt;/code&gt; 接口是一组只读属性，其允许作者到文档中的元素之间轻松地浏览的。</target>
        </trans-unit>
        <trans-unit id="f29a430f06dd21d9a13b377efef42edf2992728c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Ellipse2D&lt;/code&gt; class describes an ellipse that is defined by a framing rectangle.</source>
          <target state="translated">所述 &lt;code&gt;Ellipse2D&lt;/code&gt; 的类描述由边界矩形定义的椭圆。</target>
        </trans-unit>
        <trans-unit id="0000711917ddc5bd5d5eb440dd34fe945066b5e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class is static, so that all &lt;code&gt;AudioFormat&lt;/code&gt; objects that have the same encoding will refer to the same object (rather than different instances of the same class). This allows matches to be made by checking that two format's encodings are equal.</source>
          <target state="translated">的 &lt;code&gt;Encoding&lt;/code&gt; 类是静态的，以使所有 &lt;code&gt;AudioFormat&lt;/code&gt; 具有相同的编码对象将是指相同的对象（而不是同一类的不同实例）。这样可以通过检查两种格式的编码是否相等来进行匹配。</target>
        </trans-unit>
        <trans-unit id="1a1ea0fb7e3f89b73df59f57bc0a3bb25057d04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class names the specific type of data representation used for an audio stream.</source>
          <target state="translated">的 &lt;code&gt;Encoding&lt;/code&gt; 类名称用于音频流的数据表示的具体类型。</target>
        </trans-unit>
        <trans-unit id="579a96ad9bfb2cbe0dbb67099e0bc3e08f52c25e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class names the specific type of data representation used for an audio stream. The encoding includes aspects of the sound format other than the number of channels, sample rate, sample size, frame rate, frame size, and byte order.</source>
          <target state="translated">的 &lt;code&gt;Encoding&lt;/code&gt; 类名称用于音频流的数据表示的具体类型。除了通道数，采样率，采样大小，帧速率，帧大小和字节顺序之外，编码还包括声音格式的各个方面。</target>
        </trans-unit>
        <trans-unit id="70221ca9234977d1998bbe35ce71cb299b70251c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Event&lt;/code&gt; interface is used to provide contextual information about an event to the handler processing the event.</source>
          <target state="translated">的 &lt;code&gt;Event&lt;/code&gt; 接口用于提供关于事件的处理程序处理事件的上下文信息。</target>
        </trans-unit>
        <trans-unit id="ee720903ce1589882e864971326a615e0265b5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Event&lt;/code&gt; interface is used to provide contextual information about an event to the handler processing the event. An object which implements the &lt;code&gt;Event&lt;/code&gt; interface is generally passed as the first parameter to an event handler. More specific context information is passed to event handlers by deriving additional interfaces from &lt;code&gt;Event&lt;/code&gt; which contain information directly relating to the type of event they accompany. These derived interfaces are also implemented by the object passed to the event listener.</source>
          <target state="translated">的 &lt;code&gt;Event&lt;/code&gt; 接口用于提供关于事件的处理程序处理事件的上下文信息。通常将实现 &lt;code&gt;Event&lt;/code&gt; 接口的对象作为第一个参数传递给事件处理程序。通过从 &lt;code&gt;Event&lt;/code&gt; 派生其他接口来将更特定的上下文信息传递给事件处理程序，这些接口包含与它们所伴随的事件类型直接相关的信息。这些派生的接口也由传递给事件侦听器的对象实现。</target>
        </trans-unit>
        <trans-unit id="c57bc9aa7ce02ee33576a9afbd97413544332913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventContext&lt;/code&gt; instance on which you invoke the registration methods is the &lt;em&gt;event source&lt;/em&gt; of the events that are (potentially) generated. The source is &lt;em&gt;not necessarily&lt;/em&gt; the object named by the target. Only when the target is the empty name is the object named by the target the source. In other words, the target, along with the scope parameter, are used to identify the object(s) that the listener is interested in, but the event source is the &lt;code&gt;EventContext&lt;/code&gt; instance with which the listener has registered.</source>
          <target state="translated">在其上调用注册方法的 &lt;code&gt;EventContext&lt;/code&gt; 实例是（可能）生成的事件的&lt;em&gt;事件源&lt;/em&gt;。源&lt;em&gt;不一定&lt;/em&gt;是目标命名的对象。仅当目标为空名称时，目标才为源命名对象。换句话说，目标与scope参数一起用于标识侦听器感兴趣的对象，但是事件源是侦听器已向其注册的 &lt;code&gt;EventContext&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="0401b3ef0ddcd75a11b4100c749b173a19fed9a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventHandler&lt;/code&gt; class is intended to be used by interactive tools, such as application builders, that allow developers to make connections between beans. Typically connections are made from a user interface bean (the event &lt;em&gt;source&lt;/em&gt;) to an application logic bean (the &lt;em&gt;target&lt;/em&gt;). The most effective connections of this kind isolate the application logic from the user interface. For example, the &lt;code&gt;EventHandler&lt;/code&gt; for a connection from a &lt;code&gt;JCheckBox&lt;/code&gt; to a method that accepts a boolean value can deal with extracting the state of the check box and passing it directly to the method so that the method is isolated from the user interface layer.</source>
          <target state="translated">该 &lt;code&gt;EventHandler&lt;/code&gt; 类旨在通过互动工具，如应用程序构建，它允许开发人员在bean之间建立连接使用。通常，连接是从用户界面Bean（事件&lt;em&gt;源&lt;/em&gt;）到应用程序逻辑Bean（&lt;em&gt;目标&lt;/em&gt;）建立的。这种最有效的连接将应用程序逻辑与用户界面隔离开。例如，用于从 &lt;code&gt;JCheckBox&lt;/code&gt; 到接受布尔值的方法的连接的 &lt;code&gt;EventHandler&lt;/code&gt; 可以处理提取复选框的状态并将其直接传递给该方法，以便该方法与用户界面层隔离。</target>
        </trans-unit>
        <trans-unit id="0a0c2cb5421950ae7ac855868e35820ff6dd57b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventHandler&lt;/code&gt; class provides support for dynamically generating event listeners whose methods execute a simple statement involving an incoming event object and a target object.</source>
          <target state="translated">的 &lt;code&gt;EventHandler&lt;/code&gt; 类提供了动态生成事件侦听器的方法执行涉及传入事件对象和目标对象的简单语句。</target>
        </trans-unit>
        <trans-unit id="5746368fd39e97ecb130eef1d44079c51b10dd57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventListener&lt;/code&gt; interface is the primary method for handling events.</source>
          <target state="translated">该 &lt;code&gt;EventListener&lt;/code&gt; 接口是用于处理事件的主要方法。</target>
        </trans-unit>
        <trans-unit id="d5b8044a35f1030045e0fcb4786dab202a677cc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventListener&lt;/code&gt; interface is the primary method for handling events. Users implement the &lt;code&gt;EventListener&lt;/code&gt; interface and register their listener on an &lt;code&gt;EventTarget&lt;/code&gt; using the &lt;code&gt;AddEventListener&lt;/code&gt; method. The users should also remove their &lt;code&gt;EventListener&lt;/code&gt; from its &lt;code&gt;EventTarget&lt;/code&gt; after they have completed using the listener.</source>
          <target state="translated">该 &lt;code&gt;EventListener&lt;/code&gt; 接口是用于处理事件的主要方法。用户实现 &lt;code&gt;EventListener&lt;/code&gt; 接口，并使用 &lt;code&gt;AddEventListener&lt;/code&gt; 方法在 &lt;code&gt;EventTarget&lt;/code&gt; 上注册其侦听器。用户完成使用侦听器的操作后，还应将其 &lt;code&gt;EventListener&lt;/code&gt; 从其 &lt;code&gt;EventTarget&lt;/code&gt; 中删除。</target>
        </trans-unit>
        <trans-unit id="3ef13e78574db68f3020a464f6de3488bb77bb37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventQueueMonitor&lt;/code&gt; class provides key core functionality for Assistive Technologies (and other system-level technologies that need some of the same things that Assistive Technology needs).</source>
          <target state="translated">该 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 类提供了（需要一些相同的东西，辅助技术需求和其他系统级技术）辅助技术的关键核心功能。</target>
        </trans-unit>
        <trans-unit id="eba9a866ee0aa85057bfaa47d775f6b70445832f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventTarget&lt;/code&gt; interface is implemented by all &lt;code&gt;Nodes&lt;/code&gt; in an implementation which supports the DOM Event Model.</source>
          <target state="translated">该 &lt;code&gt;EventTarget&lt;/code&gt; 接口由所有执行 &lt;code&gt;Nodes&lt;/code&gt; 在支持DOM事件模型的实现。</target>
        </trans-unit>
        <trans-unit id="2b0f81e17db7dd6a51dcbe255542568c5bc70c5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventTarget&lt;/code&gt; interface is implemented by all &lt;code&gt;Nodes&lt;/code&gt; in an implementation which supports the DOM Event Model. Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;Node&lt;/code&gt; interface. The interface allows registration and removal of &lt;code&gt;EventListeners&lt;/code&gt; on an &lt;code&gt;EventTarget&lt;/code&gt; and dispatch of events to that &lt;code&gt;EventTarget&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;EventTarget&lt;/code&gt; 接口由所有执行 &lt;code&gt;Nodes&lt;/code&gt; 在支持DOM事件模型的实现。因此，可以通过在 &lt;code&gt;Node&lt;/code&gt; 接口的实例上使用绑定特定的强制转换方法来获得此接口。该接口允许在 &lt;code&gt;EventTarget&lt;/code&gt; 上注册和删除 &lt;code&gt;EventListeners&lt;/code&gt; ，并将事件调度到该 &lt;code&gt;EventTarget&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18ab01a7844cde2885367a84cc967515963ae74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Executable&lt;/code&gt; declaring this parameter.</source>
          <target state="translated">声明此参数的 &lt;code&gt;Executable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e179cf148b7b9faaffa085aae387466fa8e5482" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExecutionControl&lt;/code&gt; spec is the &lt;code&gt;ExecutionControlProvider&lt;/code&gt; name optionally followed by a parameter specification. The syntax of the spec is:</source>
          <target state="translated">所述 &lt;code&gt;ExecutionControl&lt;/code&gt; 规格是 &lt;code&gt;ExecutionControlProvider&lt;/code&gt; 名称任选地随后的参数规范。规范的语法为：</target>
        </trans-unit>
        <trans-unit id="748442734a6da04d6ba765d11eb14f744d0ff842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Executor&lt;/code&gt; implementations provided in this package implement &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt;, which is a more extensive interface. The &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; class provides an extensible thread pool implementation. The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for these Executors.</source>
          <target state="translated">此程序包中提供的 &lt;code&gt;Executor&lt;/code&gt; 实现实现&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;/a&gt;，这是一个更广泛的接口。该&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;类提供一个可扩展的线程池实现。该&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类为这些Executor提供了便捷的工厂方法。</target>
        </trans-unit>
        <trans-unit id="fe186b84d49128ed73233864d2f5883a88dc0260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FORM&lt;/code&gt; element encompasses behavior similar to a collection and an element.</source>
          <target state="translated">该 &lt;code&gt;FORM&lt;/code&gt; 元素包括类似于集合和一个元素行为。</target>
        </trans-unit>
        <trans-unit id="0a5c0b1147aa12b75064b100c3d28e5fd19d2f41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FORM&lt;/code&gt; element encompasses behavior similar to a collection and an element. It provides direct access to the contained input elements as well as the attributes of the form element. See the FORM element definition in HTML 4.0.</source>
          <target state="translated">该 &lt;code&gt;FORM&lt;/code&gt; 元素包括类似于集合和一个元素行为。它提供对包含的输入元素以及form元素的属性的直接访问。请参阅HTML 4.0中的FORM元素定义。</target>
        </trans-unit>
        <trans-unit id="cd7831d464cae2caf35d14c49bf37dcbd50928ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileDialog&lt;/code&gt; class displays a dialog window from which the user can select a file.</source>
          <target state="translated">所述 &lt;code&gt;FileDialog&lt;/code&gt; 类显示一个对话框窗口，用户可从中选择一个文件。</target>
        </trans-unit>
        <trans-unit id="104e889b683697e2a1535a79c04ec73d00af897b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; can either write to a specified file, or it can write to a rotating set of files.</source>
          <target state="translated">该 &lt;code&gt;FileHandler&lt;/code&gt; 可以到指定的文件要么写，也可以写入文件轮换集的。</target>
        </trans-unit>
        <trans-unit id="c629d1686ef85f09a631d3c6d79e16eb2130db7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to no limit, and the file count is set to one.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置为没有限制，并且将文件计数设置为1。</target>
        </trans-unit>
        <trans-unit id="1630482434078ed5febe3695c2cacb2c6ab11a76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to no limit, the file count is set to one, and the append mode is set to the given &lt;code&gt;append&lt;/code&gt; argument.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置为没有限制的，该文件计数设置为一个，并且附加模式是集给定的 &lt;code&gt;append&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="87b15897d52aed2848665ab23e99dca1351949cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument, and the append mode is set to the given &lt;code&gt;append&lt;/code&gt; argument.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置到极限参数，该文件计数设置为给定的计数参数，并将append模式设置为给定的 &lt;code&gt;append&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="a5f603ee32e4c43503a06a42f3d23eed55051d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置到极限参数，该文件计数设置为给定的计数参数。</target>
        </trans-unit>
        <trans-unit id="902ce54b56a8a7418be70ecf196fdc6d2abb61f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileReader&lt;/code&gt; is meant for reading streams of characters. For reading streams of raw bytes, consider using a &lt;code&gt;FileInputStream&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;FileReader&lt;/code&gt; 是为读取字符流。为了读取原始字节流，请考虑使用 &lt;code&gt;FileInputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f9400ea004a66e78915fea0425d090fb09491e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileWriter&lt;/code&gt; is meant for writing streams of characters. For writing streams of raw bytes, consider using a &lt;code&gt;FileOutputStream&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;FileWriter&lt;/code&gt; 的是为写字符流。要写入原始字节流，请考虑使用 &lt;code&gt;FileOutputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="531c96d389a16e6b4a111db536916683b490ba7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FilteredRowSet&lt;/code&gt; object will use this method internally while inserting new rows to a &lt;code&gt;FilteredRowSet&lt;/code&gt; instance.</source>
          <target state="translated">将新行插入 &lt;code&gt;FilteredRowSet&lt;/code&gt; 实例时， &lt;code&gt;FilteredRowSet&lt;/code&gt; 对象将在内部使用此方法。</target>
        </trans-unit>
        <trans-unit id="6e9a4cae0012293bcacf3dcfa3a10773c155f830" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FilteredRowSet&lt;/code&gt; range criterion can be modified by applying a new &lt;code&gt;Predicate&lt;/code&gt; object to the &lt;code&gt;FilteredRowSet&lt;/code&gt; instance at any time. This is possible if no additional references to the &lt;code&gt;FilteredRowSet&lt;/code&gt; object are detected. A new filter has an immediate effect on criterion enforcement within the &lt;code&gt;FilteredRowSet&lt;/code&gt; object, and all subsequent views and updates will be subject to similar enforcement.</source>
          <target state="translated">所述 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的范围条件可通过施加新的被修改 &lt;code&gt;Predicate&lt;/code&gt; 对象到 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的随时实例。如果未检测到对 &lt;code&gt;FilteredRowSet&lt;/code&gt; 对象的其他引用，则有可能。一个新的过滤器对 &lt;code&gt;FilteredRowSet&lt;/code&gt; 对象中的条件强制执行具有立竿见影的效果，所有后续视图和更新将受到类似的强制执行。</target>
        </trans-unit>
        <trans-unit id="b9c1b7599d17536940e43f4891c13c30e31a414b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FlatteningPathIterator&lt;/code&gt; class returns a flattened view of another &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;FlatteningPathIterator&lt;/code&gt; 类返回另一个的平面视图&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="d6995963af20174a405541621459a4cf42b76b4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FlatteningPathIterator&lt;/code&gt; class returns a flattened view of another &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object. Other &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; classes can use this class to provide flattening behavior for their paths without having to perform the interpolation calculations themselves.</source>
          <target state="translated">所述 &lt;code&gt;FlatteningPathIterator&lt;/code&gt; 类返回另一个的平面视图&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;对象。其他&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;类可以使用此类为它们的路径提供展平行为，而不必自己执行插值计算。</target>
        </trans-unit>
        <trans-unit id="bbd40c49bd8d9a7324ed683644da8ab0fb15dde3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a geometric path with coordinates stored in single precision floating point.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类定义与存储在单精度浮点坐标的几何路径。</target>
        </trans-unit>
        <trans-unit id="72f4f159165d82d4c830d239bd204365474b1049" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a point specified in float precision.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类以float精度定义指定的点。</target>
        </trans-unit>
        <trans-unit id="9b4e57310345618e93b471ecd434a01eac973c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a rectangle specified in float coordinates.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类定义以float坐标指定的矩形。</target>
        </trans-unit>
        <trans-unit id="9cf27054de1ce5624ddd4ab38383b55cc5d816b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines a rectangle with rounded corners all specified in &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类定义的圆角中的所有指定的矩形 &lt;code&gt;float&lt;/code&gt; 坐标。</target>
        </trans-unit>
        <trans-unit id="35ae68551d0b26d10451461d73f146f494eb06cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class defines an ellipse specified in &lt;code&gt;float&lt;/code&gt; precision.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类定义中指定的椭圆 &lt;code&gt;float&lt;/code&gt; 精度。</target>
        </trans-unit>
        <trans-unit id="d9aef651c660cc7e3ebf06c721651629cdc87d53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;float&lt;/code&gt; in an object.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;float&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="faf56435fef80020d3a74b994d56ec27fef71d7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;float&lt;/code&gt; in an object. An object of type &lt;code&gt;Float&lt;/code&gt; contains a single field whose type is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;float&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Float&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;float&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="ff1bf80c3497af61acd8a7e490e0a49fe5769bad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FloatControl&lt;/code&gt; abstract class provides methods to set and get the control's current floating-point value. Other methods obtain the possible range of values and the control's resolution (the smallest increment between returned values). Some float controls allow ramping to a new value over a specified period of time. &lt;code&gt;FloatControl&lt;/code&gt; also includes methods that return string labels for the minimum, maximum, and midpoint positions of the control.</source>
          <target state="translated">该 &lt;code&gt;FloatControl&lt;/code&gt; 抽象类提供设置和获取控件的当前浮点值。其他方法可以获取可能的值范围和控件的分辨率（返回值之间的最小增量）。一些浮动控件允许在指定的时间段内斜升到新值。 &lt;code&gt;FloatControl&lt;/code&gt; 还包括一些方法，这些方法返回控件的最小，最大和中点位置的字符串标签。</target>
        </trans-unit>
        <trans-unit id="1cd58efa168d666747712c3d3c73a1908978fecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FloatControl&lt;/code&gt; class has methods to impose a maximum and minimum allowable value for gain. However, because an audio signal might already be at a high amplitude, the maximum setting does not guarantee that the signal will be undistorted when the gain is applied to it (unless the maximum is zero or negative). To avoid numeric overflow from excessively large gain settings, a gain control can implement clipping, meaning that the signal's amplitude will be limited to the maximum value representable by its audio format, instead of wrapping around.</source>
          <target state="translated">该 &lt;code&gt;FloatControl&lt;/code&gt; 类有方法的最大和最小允许值施加增益。但是，由于音频信号可能已经处于高振幅，因此最大设置不能保证在对其施加增益时信号不会失真（除非最大值为零或负）。为了避免过大的增益设置引起数值溢出，增益控制可以实现削波，这意味着信号的幅度将被限制为其音频格式可表示的最大值，而不是回绕。</target>
        </trans-unit>
        <trans-unit id="6676912d1268dcad28777c51d6a9607e35cb86ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class defines constants for the logical font names &lt;a href=&quot;../font#DIALOG&quot;&gt;&lt;code&gt;DIALOG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../font#DIALOG_INPUT&quot;&gt;&lt;code&gt;DIALOG_INPUT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../font#SANS_SERIF&quot;&gt;&lt;code&gt;SANS_SERIF&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../font#SERIF&quot;&gt;&lt;code&gt;SERIF&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../font#MONOSPACED&quot;&gt;&lt;code&gt;MONOSPACED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;Font&lt;/code&gt; 类定义的逻辑字体名常量&lt;a href=&quot;../font#DIALOG&quot;&gt; &lt;code&gt;DIALOG&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../font#DIALOG_INPUT&quot;&gt; &lt;code&gt;DIALOG_INPUT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../font#SANS_SERIF&quot;&gt; &lt;code&gt;SANS_SERIF&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../font#SERIF&quot;&gt; &lt;code&gt;SERIF&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../font#MONOSPACED&quot;&gt; &lt;code&gt;MONOSPACED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb6290e56262770962d96129f1fce82b4b1128c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class represents an instance of a font face from a collection of font faces that are present in the system resources of the host system. As examples, Arial Bold and Courier Bold Italic are font faces. There can be several &lt;code&gt;Font&lt;/code&gt; objects associated with a font face, each differing in size, style, transform and font features.</source>
          <target state="translated">的 &lt;code&gt;Font&lt;/code&gt; 类表示根据字体面存在于所述主机系统的所述系统资源的集合的字型的一个实例。例如，Arial Bold和Courier Bold Italic是字体。可能有多个与字体外观相关联的 &lt;code&gt;Font&lt;/code&gt; 对象，每个对象的大小，样式，变换和字体特征都不同。</target>
        </trans-unit>
        <trans-unit id="9cd38989c33d64ddfb0afce3f4c2fbf8d931ab29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class represents fonts, which are used to render text in a visible way.</source>
          <target state="translated">该 &lt;code&gt;Font&lt;/code&gt; 类表示字体，用来渲染可见方式文本。</target>
        </trans-unit>
        <trans-unit id="d83ec2e9b9ceac56c5e640c82b8dd8628717bd67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; class represents fonts, which are used to render text in a visible way. A font provides the information needed to map sequences of &lt;em&gt;characters&lt;/em&gt; to sequences of &lt;em&gt;glyphs&lt;/em&gt; and to render sequences of glyphs on &lt;code&gt;Graphics&lt;/code&gt; and &lt;code&gt;Component&lt;/code&gt; objects.</source>
          <target state="translated">该 &lt;code&gt;Font&lt;/code&gt; 类表示字体，用来渲染可见方式文本。字体提供了将&lt;em&gt;字符&lt;/em&gt;序列映射到&lt;em&gt;字形&lt;/em&gt;序列以及在 &lt;code&gt;Graphics&lt;/code&gt; 和 &lt;code&gt;Component&lt;/code&gt; 对象上渲染&lt;em&gt;字形&lt;/em&gt;序列所需的信息。</target>
        </trans-unit>
        <trans-unit id="c97092d779c669af47caf3ba85d4f1d8d8967679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Font&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Font&lt;/code&gt; 的的 &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="887095c238f859e81a69ba6f7ea7c6cf2748d66d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FontMetrics&lt;/code&gt; class defines a font metrics object, which encapsulates information about the rendering of a particular font on a particular screen.</source>
          <target state="translated">所述 &lt;code&gt;FontMetrics&lt;/code&gt; 类定义了字体规格对象，它封装了有关特定字体的特定屏幕上呈现的信息。</target>
        </trans-unit>
        <trans-unit id="44a0a28784457c11b3b91e1981ce7b99133fce43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FontRenderContext&lt;/code&gt; class is a container for the information needed to correctly measure text.</source>
          <target state="translated">该 &lt;code&gt;FontRenderContext&lt;/code&gt; 类是正确测量文本所需的信息容器。</target>
        </trans-unit>
        <trans-unit id="c15f2020faddaf638ec2b9664b545f192fb3ea3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FontRenderContext&lt;/code&gt; class is a container for the information needed to correctly measure text. The measurement of text can vary because of rules that map outlines to pixels, and rendering hints provided by an application.</source>
          <target state="translated">该 &lt;code&gt;FontRenderContext&lt;/code&gt; 类是正确测量文本所需的信息容器。文本的度量可能会有所不同，这是因为将轮廓映射到像素的规则以及应用程序提供的呈现提示。</target>
        </trans-unit>
        <trans-unit id="85f7d029dde3a2e7afbc7ce6cee578e8429c56f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Formattable&lt;/code&gt; 接口必须由任何类需要执行自定义使用格式来实现 &lt;code&gt;'s'&lt;/code&gt; 的转换指定&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e69e235b1c0bec2bb6332f7a9e5ede6debcaf8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;. This interface allows basic control for formatting arbitrary objects. For example, the following class prints out different representations of a stock's name depending on the flags and length constraints:</source>
          <target state="translated">所述 &lt;code&gt;Formattable&lt;/code&gt; 接口必须由任何类需要执行自定义使用格式来实现 &lt;code&gt;'s'&lt;/code&gt; 的转换指定&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。该接口允许对格式化任意对象进行基本控制。例如，以下类根据标志和长度约束来打印出股票名称的不同表示形式：</target>
        </trans-unit>
        <trans-unit id="fdc2f6ed9da54144faf7ffc672bbd4b1c6864d1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;. This interface allows basic control for formatting arbitrary objects. For example, the following class prints out different representations of a stock's name depending on the flags and length constraints: &lt;code&gt;import java.nio.CharBuffer;
   import java.util.Formatter;
   import java.util.Formattable;
   import java.util.Locale;
   import static java.util.FormattableFlags.*;

  ...

   public class StockName implements Formattable {
       private String symbol, companyName, frenchCompanyName;
       public StockName(String symbol, String companyName,
                        String frenchCompanyName) {
           ...
       }

       ...

       public void formatTo(Formatter fmt, int f, int width, int precision) {
           StringBuilder sb = new StringBuilder();

           // decide form of name
           String name = companyName;
           if (fmt.locale().equals(Locale.FRANCE))
               name = frenchCompanyName;
           boolean alternate = (f &amp;amp; ALTERNATE) == ALTERNATE;
           boolean usesymbol = alternate || (precision != -1 &amp;amp;&amp;amp; precision &amp;lt; 10);
           String out = (usesymbol ? symbol : name);

           // apply precision
           if (precision == -1 || out.length() &amp;lt; precision) {
               // write it all
               sb.append(out);
           } else {
               sb.append(out.substring(0, precision - 1)).append('*');
           }

           // apply width and justification
           int len = sb.length();
           if (len &amp;lt; width)
               for (int i = 0; i &amp;lt; width - len; i++)
                   if ((f &amp;amp; LEFT_JUSTIFY) == LEFT_JUSTIFY)
                       sb.append(' ');
                   else
                       sb.insert(0, ' ');

           fmt.format(sb.toString());
       }

       public String toString() {
           return String.format(&quot;%s - %s&quot;, symbol, companyName);
       }
   }
 &lt;/code&gt;</source>
          <target state="translated">所述 &lt;code&gt;Formattable&lt;/code&gt; 接口必须由任何类需要执行自定义使用格式来实现 &lt;code&gt;'s'&lt;/code&gt; 的转换指定&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。该接口允许对格式化任意对象进行基本控制。例如，以下类根据标志和长度限制来打印出股票名称的不同表示形式： &lt;code&gt;import java.nio.CharBuffer; import java.util.Formatter; import java.util.Formattable; import java.util.Locale; import static java.util.FormattableFlags.*; ... public class StockName implements Formattable { private String symbol, companyName, frenchCompanyName; public StockName(String symbol, String companyName, String frenchCompanyName) { ... } ... public void formatTo(Formatter fmt, int f, int width, int precision) { StringBuilder sb = new StringBuilder(); // decide form of name String name = companyName; if (fmt.locale().equals(Locale.FRANCE)) name = frenchCompanyName; boolean alternate = (f &amp;amp; ALTERNATE) == ALTERNATE; boolean usesymbol = alternate || (precision != -1 &amp;amp;&amp;amp; precision &amp;lt; 10); String out = (usesymbol ? symbol : name); // apply precision if (precision == -1 || out.length() &amp;lt; precision) { // write it all sb.append(out); } else { sb.append(out.substring(0, precision - 1)).append('*'); } // apply width and justification int len = sb.length(); if (len &amp;lt; width) for (int i = 0; i &amp;lt; width - len; i++) if ((f &amp;amp; LEFT_JUSTIFY) == LEFT_JUSTIFY) sb.append(' '); else sb.insert(0, ' '); fmt.format(sb.toString()); } public String toString() { return String.format(&quot;%s - %s&quot;, symbol, companyName); } } &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded1b8b780654793fea0795f740f95473dfc0b75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formatter&lt;/code&gt;'s &quot;tail&quot; string is written to the stream before it is closed. In addition, if the &lt;code&gt;Formatter&lt;/code&gt;'s &quot;head&quot; string has not yet been written to the stream, it will be written before the &quot;tail&quot; string.</source>
          <target state="translated">在关闭流之前，将 &lt;code&gt;Formatter&lt;/code&gt; 的&amp;ldquo; tail&amp;rdquo;字符串写入流中。另外，如果尚未将 &lt;code&gt;Formatter&lt;/code&gt; 的&amp;ldquo; head&amp;rdquo;字符串写入流中，则将其写入&amp;ldquo; tail&amp;rdquo;字符串之前。</target>
        </trans-unit>
        <trans-unit id="75cc2d6f81ad7d65874276a5e2ad49a582a87e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Future&lt;/code&gt; interface defines the &lt;a href=&quot;../../util/concurrent/future#cancel(boolean)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method to cancel execution. This causes all threads waiting on the result of the I/O operation to throw &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;. Whether the underlying I/O operation can be cancelled is highly implementation specific and therefore not specified. Where cancellation leaves the channel, or the entity to which it is connected, in an inconsistent state, then the channel is put into an implementation specific &lt;em&gt;error state&lt;/em&gt; that prevents further attempts to initiate I/O operations that are</source>
          <target state="translated">在 &lt;code&gt;Future&lt;/code&gt; 接口定义的&lt;a href=&quot;../../util/concurrent/future#cancel(boolean)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;方法来取消执行。这将导致所有等待I / O操作结果的线程都抛出&lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;。是否可以取消基础I / O操作是高度特定于实现的，因此未指定。在取消操作使通道或其连接的实体处于不一致状态的情况下，通道被置于特定于实现的&lt;em&gt;错误状态&lt;/em&gt;，该&lt;em&gt;错误状态&lt;/em&gt;阻止了进一步尝试启动I / O操作。</target>
        </trans-unit>
        <trans-unit id="5f0017742b86bb525c52b44a372868ba47f8c805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Future&lt;/code&gt; interface defines the &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method to cancel execution. This causes all threads waiting on the result of the I/O operation to throw &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;. Whether the underlying I/O operation can be cancelled is highly implementation specific and therefore not specified. Where cancellation leaves the channel, or the entity to which it is connected, in an inconsistent state, then the channel is put into an implementation specific &lt;em&gt;error state&lt;/em&gt; that prevents further attempts to initiate I/O operations that are</source>
          <target state="translated">在 &lt;code&gt;Future&lt;/code&gt; 接口定义的&lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;方法来取消执行。这将导致所有等待I / O操作结果的线程都抛出&lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;。是否可以取消基础I / O操作是高度特定于实现的，因此未指定。如果取消操作使通道或其所连接的实体处于不一致状态，则通道将进入特定于实现的&lt;em&gt;错误状态&lt;/em&gt;，该&lt;em&gt;错误状态&lt;/em&gt;将阻止进一步尝试启动I / O操作。</target>
        </trans-unit>
        <trans-unit id="3602374c96f5a5c257635205a93086c90dc41df6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GSSManager&lt;/code&gt; class has two methods that enable these modes of usage: &lt;a href=&quot;#addProviderAtFront(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;addProviderAtFront&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addProviderAtEnd(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;addProviderAtEnd&lt;/code&gt;&lt;/a&gt;. These methods have the effect of creating an ordered list of</source>
          <target state="translated">该 &lt;code&gt;GSSManager&lt;/code&gt; 类有两个方法，使这些使用模式：&lt;a href=&quot;#addProviderAtFront(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;addProviderAtFront&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addProviderAtEnd(java.security.Provider,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;addProviderAtEnd&lt;/code&gt; &lt;/a&gt;。这些方法具有创建以下项的有序列表的作用：</target>
        </trans-unit>
        <trans-unit id="914da397f8c97202021f7ec88c5d7ecdc38f6e6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GUIInitializedListener&lt;/code&gt; interface is used by the &lt;a href=&quot;eventqueuemonitor&quot;&gt;&lt;code&gt;EventQueueMonitor&lt;/code&gt;&lt;/a&gt; class to notify an interested party when the GUI subsystem has been initialized.</source>
          <target state="translated">该 &lt;code&gt;GUIInitializedListener&lt;/code&gt; 接口使用的&lt;a href=&quot;eventqueuemonitor&quot;&gt; &lt;code&gt;EventQueueMonitor&lt;/code&gt; &lt;/a&gt;上课的时候GUI子系统已初始化通知有关当事人。</target>
        </trans-unit>
        <trans-unit id="db191355d553162f7fbdc2d9663eec947a2f20d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GUIInitializedListener&lt;/code&gt; interface is used by the &lt;a href=&quot;eventqueuemonitor&quot;&gt;&lt;code&gt;EventQueueMonitor&lt;/code&gt;&lt;/a&gt; class to notify an interested party when the GUI subsystem has been initialized. This is necessary because assistive technologies can be loaded before the GUI subsystem is initialized. As a result, assistive technologies should check the &lt;a href=&quot;eventqueuemonitor#isGUIInitialized()&quot;&gt;&lt;code&gt;isGUIInitialized&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;EventQueueMonitor&lt;/code&gt; before creating any GUI components. If the return value is true, assistive technologies can create GUI components following the same thread restrictions as any other application. If the return value is false, the assistive technology should register a &lt;code&gt;GUIInitializedListener&lt;/code&gt; with the &lt;code&gt;EventQueueMonitor&lt;/code&gt; to be notified when the GUI subsystem is initialized.</source>
          <target state="translated">该 &lt;code&gt;GUIInitializedListener&lt;/code&gt; 接口使用的&lt;a href=&quot;eventqueuemonitor&quot;&gt; &lt;code&gt;EventQueueMonitor&lt;/code&gt; &lt;/a&gt;上课的时候GUI子系统已初始化通知有关当事人。这是必需的，因为可以在初始化GUI子系统之前加载辅助技术。因此，辅助技术应在创建任何GUI组件之前检查 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 的&lt;a href=&quot;eventqueuemonitor#isGUIInitialized()&quot;&gt; &lt;code&gt;isGUIInitialized&lt;/code&gt; &lt;/a&gt;方法。如果返回值为true，则辅助技术可以按照与任何其他应用程序相同的线程限制来创建GUI组件。如果返回值是假的，辅助技术应该注册一个 &lt;code&gt;GUIInitializedListener&lt;/code&gt; 与 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 在GUI子系统初始化时收到通知。</target>
        </trans-unit>
        <trans-unit id="70df597792a5d0c1f742f4bbc73443851469858e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralPath&lt;/code&gt; class represents a geometric path constructed from straight lines, and quadratic and cubic (B&amp;eacute;zier) curves.</source>
          <target state="translated">所述 &lt;code&gt;GeneralPath&lt;/code&gt; 类表示根据直线，二次曲线和三次（B&amp;eacute;zier）曲线构造的几何路径。</target>
        </trans-unit>
        <trans-unit id="cb3e442cafe4b2435222cea3fefab94ec8d73d74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralPath&lt;/code&gt; class represents a geometric path constructed from straight lines, and quadratic and cubic (B&amp;eacute;zier) curves. It can contain multiple subpaths.</source>
          <target state="translated">所述 &lt;code&gt;GeneralPath&lt;/code&gt; 类表示根据直线，二次曲线和三次（B&amp;eacute;zier）曲线构造的几何路径。它可以包含多个子路径。</target>
        </trans-unit>
        <trans-unit id="0794b1416bd199f56af33739272b109badf5de09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralSecurityException&lt;/code&gt; class is a generic security exception class that provides type safety for all the security-related exception classes that extend from it.</source>
          <target state="translated">该 &lt;code&gt;GeneralSecurityException&lt;/code&gt; 类是一个一般安全异常类，提供类型安全为所有从其扩展的与安全有关的异常类。</target>
        </trans-unit>
        <trans-unit id="8c32683bb604a52bbbd12a72cd3f38b11977a353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GetTimeRequest&lt;/code&gt; and &lt;code&gt;GetTimeResponse&lt;/code&gt; classes might be defined as follows:</source>
          <target state="translated">该 &lt;code&gt;GetTimeRequest&lt;/code&gt; 和 &lt;code&gt;GetTimeResponse&lt;/code&gt; 之类可能被定义如下：</target>
        </trans-unit>
        <trans-unit id="13c0923d03901bd10b867c4df6e64615af99014f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; class represents information about the justification properties of a glyph.</source>
          <target state="translated">该 &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 类表示关于字形调整属性的信息。</target>
        </trans-unit>
        <trans-unit id="b927a0c2359e692e02f1706ffd35129affd6a872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; class represents information about the justification properties of a glyph. A glyph is the visual representation of one or more characters. Many different glyphs can be used to represent a single character or combination of characters. The four justification properties represented by &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; are weight, priority, absorb and limit.</source>
          <target state="translated">该 &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 类表示关于字形调整属性的信息。字形是一个或多个字符的视觉表示。许多不同的字形可用于表示单个字符或字符组合。 &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 表示的四个对齐属性是权重，优先级，吸收和限制。</target>
        </trans-unit>
        <trans-unit id="45abb7154dbefa102ab517801d557cf9f3c56346" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphMetrics&lt;/code&gt; class represents information for a single glyph.</source>
          <target state="translated">该 &lt;code&gt;GlyphMetrics&lt;/code&gt; 类表示单个字形的信息。</target>
        </trans-unit>
        <trans-unit id="4c21b3f44b58fec8cc03a6ae86f7fe0931c38e31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphMetrics&lt;/code&gt; class represents information for a single glyph. A glyph is the visual representation of one or more characters. Many different glyphs can be used to represent a single character or combination of characters. &lt;code&gt;GlyphMetrics&lt;/code&gt; instances are produced by &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; and are applicable to a specific glyph in a particular &lt;code&gt;Font&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;GlyphMetrics&lt;/code&gt; 类表示单个字形的信息。字形是一个或多个字符的视觉表示。许多不同的字形可用于表示单个字符或字符组合。 &lt;code&gt;GlyphMetrics&lt;/code&gt; 实例由&lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;产生，并且适用于特定 &lt;code&gt;Font&lt;/code&gt; 中的特定字形。</target>
        </trans-unit>
        <trans-unit id="0d535761fb3907adf7a158ff9798deca3a7c2168" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GlyphVector&lt;/code&gt; does not attempt any interpretation of the sequence of glyphs it contains. Relationships between adjacent glyphs in sequence are solely used to determine the placement of the glyphs in the visual coordinate space.</source>
          <target state="translated">该 &lt;code&gt;GlyphVector&lt;/code&gt; 中不会尝试它包含的字形序列的任何解释。顺序相邻字形之间的关系仅用于确定字形在视觉坐标空间中的位置。</target>
        </trans-unit>
        <trans-unit id="22c3fa3fa913d25f815a28b8e119f96a0555cab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern.</source>
          <target state="translated">所述 &lt;code&gt;GradientPaint&lt;/code&gt; 类提供一种方法来填充&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;与线性颜色渐变图案。</target>
        </trans-unit>
        <trans-unit id="9b77696e16f3807289412d33d3f22fcce890f133" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern. If &lt;a href=&quot;point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; P1 with &lt;a href=&quot;color&quot;&gt;&lt;code&gt;Color&lt;/code&gt;&lt;/a&gt; C1 and &lt;code&gt;Point&lt;/code&gt; P2 with &lt;code&gt;Color&lt;/code&gt; C2 are specified in user space, the &lt;code&gt;Color&lt;/code&gt; on the P1, P2 connecting line is proportionally changed from C1 to C2. Any point P not on the extended P1, P2 connecting line has the color of the point P' that is the perpendicular projection of P on the extended P1, P2 connecting line. Points on the extended line outside of the P1, P2 segment can be colored in one of two ways.</source>
          <target state="translated">所述 &lt;code&gt;GradientPaint&lt;/code&gt; 类提供一种方法来填充&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;与线性颜色渐变图案。如果&lt;a href=&quot;point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt;P1与&lt;a href=&quot;color&quot;&gt; &lt;code&gt;Color&lt;/code&gt; &lt;/a&gt;C1和 &lt;code&gt;Point&lt;/code&gt; P2与 &lt;code&gt;Color&lt;/code&gt; C2在用户空间中指定，则 &lt;code&gt;Color&lt;/code&gt; 上的P1，P2连接线成比例地从C1变化为C2。不在扩展的P1，P2连接线上的任何点P都具有点P'的颜色，该点是P在扩展的P1，P2连接线上的垂直投影。P1，P2线段之外的延长线上的点可以用以下两种方式之一进行着色。</target>
        </trans-unit>
        <trans-unit id="32819e2ce29b3957db4a98ae15341d7630917a53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicAttribute&lt;/code&gt; class represents a graphic embedded in text. Clients subclass this class to implement their own char replacement graphics. Clients wishing to embed shapes and images in text need not subclass this class. Instead, clients can use the &lt;a href=&quot;shapegraphicattribute&quot;&gt;&lt;code&gt;ShapeGraphicAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;imagegraphicattribute&quot;&gt;&lt;code&gt;ImageGraphicAttribute&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">该 &lt;code&gt;GraphicAttribute&lt;/code&gt; 类表示嵌入在文本中的图形。客户对该类进行子类化，以实现自己的字符替换图形。希望在文本中嵌入形状和图像的客户不必将此类作为子类。而是，客户端可以使用&lt;a href=&quot;shapegraphicattribute&quot;&gt; &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;imagegraphicattribute&quot;&gt; &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="b392fe6147351913070567a0c9f057359947726a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; class defines only the &lt;code&gt;setColor&lt;/code&gt; method to control the color to be painted. Since the Java 2D API extends the &lt;code&gt;Color&lt;/code&gt; object to implement the new &lt;code&gt;Paint&lt;/code&gt; interface, the existing &lt;code&gt;setColor&lt;/code&gt; method is now a convenience method for setting the current &lt;code&gt;Paint&lt;/code&gt; attribute to a &lt;code&gt;Color&lt;/code&gt; object. &lt;code&gt;setColor(c)&lt;/code&gt; is equivalent to &lt;code&gt;setPaint(c)&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Graphics&lt;/code&gt; 类只定义了 &lt;code&gt;setColor&lt;/code&gt; 方法来控制颜色待涂漆。由于Java 2D API扩展了 &lt;code&gt;Color&lt;/code&gt; 对象以实现新的 &lt;code&gt;Paint&lt;/code&gt; 接口，因此现有 &lt;code&gt;setColor&lt;/code&gt; 方法现在是将当前 &lt;code&gt;Paint&lt;/code&gt; 属性设置为 &lt;code&gt;Color&lt;/code&gt; 对象的便捷方法。 &lt;code&gt;setColor(c)&lt;/code&gt; 等效于 &lt;code&gt;setPaint(c)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8427a2fc2ebce29422ab41b78d54daf8a407ffe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; class defines two methods for controlling how colors are applied to the destination.</source>
          <target state="translated">该 &lt;code&gt;Graphics&lt;/code&gt; 类定义用于控制颜色如何应用到目标的两种方法。</target>
        </trans-unit>
        <trans-unit id="13125e55dc6ed960bfbfd2294776b370d2c21f49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; class is the abstract base class for all graphics contexts that allow an application to draw onto components that are realized on various devices, as well as onto off-screen images.</source>
          <target state="translated">的 &lt;code&gt;Graphics&lt;/code&gt; 类是所有图形上下文，允许应用程序上绘制该被实现在各种设备上，以及到离屏图像组件抽象基类。</target>
        </trans-unit>
        <trans-unit id="a5e9745b4915a7b3ff47fc4c84d91228cd6e76fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Graphics&lt;/code&gt; object given is not initialized in any way. A view should set any settings needed.</source>
          <target state="translated">给定的 &lt;code&gt;Graphics&lt;/code&gt; 对象不会以任何方式初始化。视图应设置所需的任何设置。</target>
        </trans-unit>
        <trans-unit id="0a2ff97389f96fefc6b5f822679a56149d361216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; class is used to obtain a valid &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 中类用于获得一个有效&lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffb98ba7d72f93086adb8e667b98e30406027f45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; class is used to obtain a valid &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt;. A user instantiates one of these objects and then sets all non-default attributes as desired. The &lt;a href=&quot;graphicsdevice#getBestConfiguration(java.awt.GraphicsConfigTemplate)&quot;&gt;&lt;code&gt;GraphicsDevice.getBestConfiguration(java.awt.GraphicsConfigTemplate)&lt;/code&gt;&lt;/a&gt; method found in the &lt;a href=&quot;graphicsdevice&quot;&gt;&lt;code&gt;GraphicsDevice&lt;/code&gt;&lt;/a&gt; class is then called with this &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt;. A valid &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is returned that meets or exceeds what was requested in the &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 中类用于获得一个有效&lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt;。用户实例化这些对象之一，然后根据需要设置所有非默认属性。然后，使用此 &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 调用&lt;a href=&quot;graphicsdevice&quot;&gt; &lt;code&gt;GraphicsDevice&lt;/code&gt; &lt;/a&gt;类中找到的&lt;a href=&quot;graphicsdevice#getBestConfiguration(java.awt.GraphicsConfigTemplate)&quot;&gt; &lt;code&gt;GraphicsDevice.getBestConfiguration(java.awt.GraphicsConfigTemplate)&lt;/code&gt; &lt;/a&gt;方法。返回的有效 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 满足或超过 &lt;code&gt;GraphicsConfigTemplate&lt;/code&gt; 中的要求。</target>
        </trans-unit>
        <trans-unit id="726b47b205fe0a661cf0370ba8da7a5b488fd925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfiguration&lt;/code&gt; class describes the characteristics of a graphics destination such as a printer or monitor.</source>
          <target state="translated">所述 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 类描述诸如打印机或监视器图形目的地的特性。</target>
        </trans-unit>
        <trans-unit id="a92ac41ae0dd8c36409cae0e9587878c5fb14003" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsConfiguration&lt;/code&gt; class describes the characteristics of a graphics destination such as a printer or monitor. There can be many &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects associated with a single graphics device, representing different drawing modes or capabilities. The corresponding native structure will vary from platform to platform. For example, on X11 windowing systems, each visual is a different &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. On Microsoft Windows, &lt;code&gt;GraphicsConfiguration&lt;/code&gt;s represent PixelFormats available in the current resolution and color depth.</source>
          <target state="translated">所述 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 类描述诸如打印机或监视器图形目的地的特性。单个图形设备可以有许多 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 对象，它们代表不同的绘制模式或功能。相应的本机结构将因平台而异。例如，在X11窗口系统上，每个视觉对象都是一个不同的 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 。在Microsoft Windows上， &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 表示在当前分辨率和颜色深度中可用的PixelFormats。</target>
        </trans-unit>
        <trans-unit id="969d3be706bf8119db76442a54255ffe0dea0b26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsDevice&lt;/code&gt; class describes the graphics devices that might be available in a particular graphics environment.</source>
          <target state="translated">该 &lt;code&gt;GraphicsDevice&lt;/code&gt; 类描述了图形设备可能会在特定图形环境中使用。</target>
        </trans-unit>
        <trans-unit id="462d91ac3e0876dc7fa769bfba720acd5fae4a62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsDevice&lt;/code&gt; class describes the graphics devices that might be available in a particular graphics environment. These include screen and printer devices. Note that there can be many screens and many printers in an instance of &lt;a href=&quot;graphicsenvironment&quot;&gt;&lt;code&gt;GraphicsEnvironment&lt;/code&gt;&lt;/a&gt;. Each graphics device has one or more &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt; objects associated with it. These objects specify the different configurations in which the &lt;code&gt;GraphicsDevice&lt;/code&gt; can be used.</source>
          <target state="translated">该 &lt;code&gt;GraphicsDevice&lt;/code&gt; 类描述了图形设备可能会在特定图形环境中使用。这些包括屏幕和打印机设备。请注意，&lt;a href=&quot;graphicsenvironment&quot;&gt; &lt;code&gt;GraphicsEnvironment&lt;/code&gt; &lt;/a&gt;实例中可以有许多屏幕和许多打印机。每个图形设备都有一个或多个与之关联的&lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt;对象。这些对象指定可以使用 &lt;code&gt;GraphicsDevice&lt;/code&gt; 的不同配置。</target>
        </trans-unit>
        <trans-unit id="35341cf36a040d8d479bdd8ded3520b65faf36e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class describes the collection of &lt;a href=&quot;graphicsdevice&quot;&gt;&lt;code&gt;GraphicsDevice&lt;/code&gt;&lt;/a&gt; objects and &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; objects available to a Java(tm) application on a particular platform.</source>
          <target state="translated">在 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 中类描述的集合&lt;a href=&quot;graphicsdevice&quot;&gt; &lt;code&gt;GraphicsDevice&lt;/code&gt; &lt;/a&gt;对象和&lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;对象可在特定平台上的Java（TM）应用程序。</target>
        </trans-unit>
        <trans-unit id="7e5b963b9e15640f3032a326aa2be9cd04e50597" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class describes the collection of &lt;a href=&quot;graphicsdevice&quot;&gt;&lt;code&gt;GraphicsDevice&lt;/code&gt;&lt;/a&gt; objects and &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; objects available to a Java(tm) application on a particular platform. The resources in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt; might be local or on a remote machine. &lt;code&gt;GraphicsDevice&lt;/code&gt; objects can be screens, printers or image buffers and are the destination of &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; drawing methods. Each &lt;code&gt;GraphicsDevice&lt;/code&gt; has a number of &lt;a href=&quot;graphicsconfiguration&quot;&gt;&lt;code&gt;GraphicsConfiguration&lt;/code&gt;&lt;/a&gt; objects associated with it. These objects specify the different configurations in which the &lt;code&gt;GraphicsDevice&lt;/code&gt; can be used.</source>
          <target state="translated">在 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 中类描述的集合&lt;a href=&quot;graphicsdevice&quot;&gt; &lt;code&gt;GraphicsDevice&lt;/code&gt; &lt;/a&gt;对象和&lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;对象可在特定平台上的Java（TM）应用程序。此 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 中的资源可能是本地资源，也可能位于远程计算机上。 &lt;code&gt;GraphicsDevice&lt;/code&gt; 对象可以是屏幕，打印机或图像缓冲区，并且是&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;绘制方法的目标。每个 &lt;code&gt;GraphicsDevice&lt;/code&gt; 都有许多与之关联的&lt;a href=&quot;graphicsconfiguration&quot;&gt; &lt;code&gt;GraphicsConfiguration&lt;/code&gt; &lt;/a&gt;对象。这些对象指定可以使用 &lt;code&gt;GraphicsDevice&lt;/code&gt; 的不同配置。</target>
        </trans-unit>
        <trans-unit id="fc511c77ada4c92e4f5e1047075dc3015a45c13a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagConstraints&lt;/code&gt; class specifies constraints for components that are laid out using the &lt;code&gt;GridBagLayout&lt;/code&gt; class.</source>
          <target state="translated">所述 &lt;code&gt;GridBagConstraints&lt;/code&gt; 类指定约束为被布局使用的组件 &lt;code&gt;GridBagLayout&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="054925047c5a9fd9ce6f93fbb0458416fc8717e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayout&lt;/code&gt; class is a flexible layout manager that aligns components vertically, horizontally or along their baseline without requiring that the components be of the same size.</source>
          <target state="translated">所述 &lt;code&gt;GridBagLayout&lt;/code&gt; 类是一个灵活的布局管理器组件对准垂直，水平或沿不要求的组件具有相同的大小的他们的基线。</target>
        </trans-unit>
        <trans-unit id="574091ea4562c915fcd1fabbdb94abf8adc280e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayout&lt;/code&gt; class is a flexible layout manager that aligns components vertically, horizontally or along their baseline without requiring that the components be of the same size. Each &lt;code&gt;GridBagLayout&lt;/code&gt; object maintains a dynamic, rectangular grid of cells, with each component occupying one or more cells, called its &lt;em&gt;display area&lt;/em&gt;.</source>
          <target state="translated">所述 &lt;code&gt;GridBagLayout&lt;/code&gt; 类是一个灵活的布局管理器组件对准垂直，水平或沿不要求的组件具有相同的大小的他们的基线。每个 &lt;code&gt;GridBagLayout&lt;/code&gt; 对象维护一个动态的矩形单元格网格，每个组件占据一个或多个单元格，称为其&lt;em&gt;显示区域&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="76062deb045ca36f22a85ceffeb0ad784b53d31e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayout&lt;/code&gt; class requires a &lt;code&gt;GridBagConstraints&lt;/code&gt; object. Failure to pass the correct type of constraints object results in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;GridBagLayout&lt;/code&gt; 的类需要一个 &lt;code&gt;GridBagConstraints&lt;/code&gt; 的对象。未能通过正确类型的约束对象会导致 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac8ff2c00fb25b77e2b48357ae3e4d63bde879f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayoutInfo&lt;/code&gt; is an utility class for &lt;code&gt;GridBagLayout&lt;/code&gt; layout manager.</source>
          <target state="translated">该 &lt;code&gt;GridBagLayoutInfo&lt;/code&gt; 是一个实用工具类 &lt;code&gt;GridBagLayout&lt;/code&gt; 布局管理器。</target>
        </trans-unit>
        <trans-unit id="92b008e93189549a646aef66f3bffaf374962247" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridBagLayoutInfo&lt;/code&gt; is an utility class for &lt;code&gt;GridBagLayout&lt;/code&gt; layout manager. It stores align, size and baseline parameters for every component within a container.</source>
          <target state="translated">该 &lt;code&gt;GridBagLayoutInfo&lt;/code&gt; 是一个实用工具类 &lt;code&gt;GridBagLayout&lt;/code&gt; 布局管理器。它存储容器中每个组件的对齐，大小和基线参数。</target>
        </trans-unit>
        <trans-unit id="67565b28b276bd69513394c4ddbf42066c068bfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridLayout&lt;/code&gt; class is a layout manager that lays out a container's components in a rectangular grid.</source>
          <target state="translated">该 &lt;code&gt;GridLayout&lt;/code&gt; 类是勾画出一个容器的组件矩形网格布局管理器。</target>
        </trans-unit>
        <trans-unit id="885be3d5e327ec2ad7dc7c689228f7bf0680ebe1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GridLayout&lt;/code&gt; class is a layout manager that lays out a container's components in a rectangular grid. The container is divided into equal-sized rectangles, and one component is placed in each rectangle. For example, the following is an applet that lays out six buttons into three rows and two columns:</source>
          <target state="translated">该 &lt;code&gt;GridLayout&lt;/code&gt; 类是勾画出一个容器的组件矩形网格布局管理器。容器分为大小相等的矩形，每个矩形中放置一个组件。例如，以下是一个小程序，它将六个按钮布置成三行两列：</target>
        </trans-unit>
        <trans-unit id="118049c104bd48460d735d53d07755dc77eab0fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HTMLDOMImplementation&lt;/code&gt; interface extends the &lt;code&gt;DOMImplementation&lt;/code&gt; interface with a method for creating an HTML document instance.</source>
          <target state="translated">所述 &lt;code&gt;HTMLDOMImplementation&lt;/code&gt; 接口扩展了 &lt;code&gt;DOMImplementation&lt;/code&gt; 用于创建HTML文档实例的方法接口。</target>
        </trans-unit>
        <trans-unit id="7b3db553a343fd330b52da577c5515316776d097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Handler&lt;/code&gt; is responsible for formatting the message, when and if necessary. The formatting should include localization.</source>
          <target state="translated">该 &lt;code&gt;Handler&lt;/code&gt; 是负责格式化消息时，如果必要的。格式应包括本地化。</target>
        </trans-unit>
        <trans-unit id="158b4670dc7ccf98630ac3b1539118f01f71661d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HandlerResult&lt;/code&gt; is used to determine the behavior of the channel after it handles a notification from the SCTP stack. Essentially its value determines if the channel should try to receive another notification or a message before returning.</source>
          <target state="translated">所述 &lt;code&gt;HandlerResult&lt;/code&gt; 被用来确定它处理来自SCTP栈的通知后的信道的行为。本质上，其值确定通道在返回之前是否应尝试接收另一个通知或消息。</target>
        </trans-unit>
        <trans-unit id="f1ea2fc9f3d54d23f364907703d3ac96f91fdf0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_ColorSpace&lt;/code&gt; class is an implementation of the abstract &lt;code&gt;ColorSpace&lt;/code&gt; class.</source>
          <target state="translated">该 &lt;code&gt;ICC_ColorSpace&lt;/code&gt; 类是抽象的实现 &lt;code&gt;ColorSpace&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="f6918facd7e31b8252dd63334a785b3e9813caae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_ColorSpace&lt;/code&gt; class is an implementation of the abstract &lt;code&gt;ColorSpace&lt;/code&gt; class. This representation of device independent and device dependent color spaces is based on the International Color Consortium Specification ICC.1:2001-12, File Format for Color Profiles (see &lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.org&lt;/a&gt;).</source>
          <target state="translated">该 &lt;code&gt;ICC_ColorSpace&lt;/code&gt; 类是抽象的实现 &lt;code&gt;ColorSpace&lt;/code&gt; 类。设备独立和设备独立色彩空间的这种表示基于国际色彩协会规范ICC.1：2001-12，色彩配置文件的文件格式（请参阅&lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.org&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8da61bc9d927b3db75e7a43eb8fa3a67bb6d1f62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; method will return an &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; object when these conditions are met. Three-component, matrix-based input profiles and RGB display profiles are examples of this type of profile.</source>
          <target state="translated">满足这些条件时， &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; 方法将返回 &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; 对象。基于矩阵的三分量输入配置文件和RGB显示配置文件是此类配置文件的示例。</target>
        </trans-unit>
        <trans-unit id="32aa0f88f296ce21dcaf9e0d00afc36365bb4fea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_ProfileGray&lt;/code&gt; class is a subclass of the &lt;code&gt;ICC_Profile&lt;/code&gt; class that represents profiles which meet the following criteria: the color space type of the profile is &lt;code&gt;TYPE_GRAY&lt;/code&gt; and the profile includes the &lt;code&gt;grayTRCTag&lt;/code&gt; and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags.</source>
          <target state="translated">所述 &lt;code&gt;ICC_ProfileGray&lt;/code&gt; 类是的一个子类 &lt;code&gt;ICC_Profile&lt;/code&gt; 类，它表示满足以下标准的配置：该轮廓的色彩空间的类型是 &lt;code&gt;TYPE_GRAY&lt;/code&gt; 和轮廓包括 &lt;code&gt;grayTRCTag&lt;/code&gt; 和 &lt;code&gt;mediaWhitePointTag&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="d1e4df1bd579a9f06afd737e2751ebfb596d5dd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_ProfileGray&lt;/code&gt; class is a subclass of the &lt;code&gt;ICC_Profile&lt;/code&gt; class that represents profiles which meet the following criteria: the color space type of the profile is &lt;code&gt;TYPE_GRAY&lt;/code&gt; and the profile includes the &lt;code&gt;grayTRCTag&lt;/code&gt; and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags. The &lt;code&gt;getInstance&lt;/code&gt; methods in the &lt;code&gt;ICC_Profile&lt;/code&gt; class will return an &lt;code&gt;ICC_ProfileGray&lt;/code&gt; object when the above conditions are met. Examples of this kind of profile are monochrome input profiles, monochrome display profiles, and monochrome output profiles.</source>
          <target state="translated">所述 &lt;code&gt;ICC_ProfileGray&lt;/code&gt; 类是的一个子类 &lt;code&gt;ICC_Profile&lt;/code&gt; 类，它表示满足以下标准的配置：该轮廓的色彩空间的类型是 &lt;code&gt;TYPE_GRAY&lt;/code&gt; 和轮廓包括 &lt;code&gt;grayTRCTag&lt;/code&gt; 和 &lt;code&gt;mediaWhitePointTag&lt;/code&gt; 标签。满足上述条件时， &lt;code&gt;ICC_Profile&lt;/code&gt; 类中的 &lt;code&gt;getInstance&lt;/code&gt; 方法将返回 &lt;code&gt;ICC_ProfileGray&lt;/code&gt; 对象。这种配置文件的示例是单色输入配置文件，单色显示配置文件和单色输出配置文件。</target>
        </trans-unit>
        <trans-unit id="652d1cea1331e9078eb6a6bc1b0373da89c1b48f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; class is a subclass of the &lt;code&gt;ICC_Profile&lt;/code&gt; class that represents profiles which meet the following criteria: the profile's color space type is RGB, and the profile includes the &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, &lt;code&gt;blueColorantTag&lt;/code&gt;, &lt;code&gt;redTRCTag&lt;/code&gt;, &lt;code&gt;greenTRCTag&lt;/code&gt;, &lt;code&gt;blueTRCTag&lt;/code&gt;, &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags.</source>
          <target state="translated">所述 &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; 类是的子类 &lt;code&gt;ICC_Profile&lt;/code&gt; 表示满足以下标准的配置类：轮廓的色彩空间的类型是RGB，和轮廓包括 &lt;code&gt;redColorantTag&lt;/code&gt; ， &lt;code&gt;greenColorantTag&lt;/code&gt; ， &lt;code&gt;blueColorantTag&lt;/code&gt; ， &lt;code&gt;redTRCTag&lt;/code&gt; ， &lt;code&gt;greenTRCTag&lt;/code&gt; ， &lt;code&gt;blueTRCTag&lt;/code&gt; ， &lt;code&gt;mediaWhitePointTag&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="5358f2d1cdc57c22f5e748b6306eb87ff6c460c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; class is a subclass of the &lt;code&gt;ICC_Profile&lt;/code&gt; class that represents profiles which meet the following criteria: the profile's color space type is RGB, and the profile includes the &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, &lt;code&gt;blueColorantTag&lt;/code&gt;, &lt;code&gt;redTRCTag&lt;/code&gt;, &lt;code&gt;greenTRCTag&lt;/code&gt;, &lt;code&gt;blueTRCTag&lt;/code&gt;, &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags. The &lt;code&gt;getInstance&lt;/code&gt; methods in the &lt;code&gt;ICC_Profile&lt;/code&gt; class will return an &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; object when the above conditions are met. Three-component, matrix-based input profiles and RGB display profiles are examples of this type of profile.</source>
          <target state="translated">所述 &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; 类是的子类 &lt;code&gt;ICC_Profile&lt;/code&gt; 表示满足以下标准的配置类：轮廓的色彩空间的类型是RGB，和轮廓包括 &lt;code&gt;redColorantTag&lt;/code&gt; ， &lt;code&gt;greenColorantTag&lt;/code&gt; ， &lt;code&gt;blueColorantTag&lt;/code&gt; ， &lt;code&gt;redTRCTag&lt;/code&gt; ， &lt;code&gt;greenTRCTag&lt;/code&gt; ， &lt;code&gt;blueTRCTag&lt;/code&gt; ， &lt;code&gt;mediaWhitePointTag&lt;/code&gt; 标签。满足上述条件时， &lt;code&gt;ICC_Profile&lt;/code&gt; 类中的 &lt;code&gt;getInstance&lt;/code&gt; 方法将返回 &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; 对象。基于矩阵的三分量输入配置文件和RGB显示配置文件是此类配置文件的示例。</target>
        </trans-unit>
        <trans-unit id="91085e13e25b56334d0136ad6a6a3aeb2acef937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOByteBuffer&lt;/code&gt; class provides an alternative way to perform reads of sequences of bytes that reduces the amount of internal data copying.</source>
          <target state="translated">所述 &lt;code&gt;IIOByteBuffer&lt;/code&gt; 类提供了可降低内部数据复制的量的字节序列来执行的另一种方式读出。</target>
        </trans-unit>
        <trans-unit id="5555691f6c07d9fa4101cfba1135746750fd08c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOMetadataController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOMetadata&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called.</source>
          <target state="translated">所述 &lt;code&gt;IIOMetadataController&lt;/code&gt; 将被用于此提供的设置 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象时 &lt;code&gt;activateController&lt;/code&gt; 方法被调用。</target>
        </trans-unit>
        <trans-unit id="a9e351d66bd62ad441f8bd1a17f3defde63a80bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOMetadataController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOMetadata&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This value overrides any default controller, even when &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;IIOMetadataController&lt;/code&gt; 将被用于此提供的设置 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象时 &lt;code&gt;activateController&lt;/code&gt; 方法被调用。该值将覆盖所有默认控制器，即使为 &lt;code&gt;null&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="b86312023dda6b799b3a5f85701920c8a9e53282" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called.</source>
          <target state="translated">所述 &lt;code&gt;IIOParamController&lt;/code&gt; 将被用于此提供的设置 &lt;code&gt;IIOParam&lt;/code&gt; 所有对象时 &lt;code&gt;activateController&lt;/code&gt; 方法被调用。</target>
        </trans-unit>
        <trans-unit id="f17066ba75d42abb02e2b439c5a64a255a531a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This value overrides any default controller, even when null.</source>
          <target state="translated">所述 &lt;code&gt;IIOParamController&lt;/code&gt; 将被用于此提供的设置 &lt;code&gt;IIOParam&lt;/code&gt; 所有对象时 &lt;code&gt;activateController&lt;/code&gt; 方法被调用。该值将覆盖所有默认控制器，即使为null也不例外。</target>
        </trans-unit>
        <trans-unit id="1373fac41a2c0fd6a7088e2e48cb2f69a0a7c602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadProgressListener&lt;/code&gt; interface allows for notification of the percentage of an image that has been read successfully.</source>
          <target state="translated">该 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 接口允许已成功读取图像的百分比的通知。</target>
        </trans-unit>
        <trans-unit id="8efd925d40fc2c06f26f62362d2f5ad61bf84a89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; interface allows for notification of the portions of an image that have been read. This is useful, for example, for implementing dynamic display of an image as it is loaded.</source>
          <target state="translated">所述 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 供界面允许对已经读取的图像的部分的通知。例如，这对于在加载图像时实现图像的动态显示很有用。</target>
        </trans-unit>
        <trans-unit id="d9b45fe43fb5e8f36d95b122d8bc0cf608973ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadWarningListener&lt;/code&gt; interface allows for notification of non-fatal errors during reading.</source>
          <target state="translated">该 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 供接口允许非致命错误的通知读书期间。</target>
        </trans-unit>
        <trans-unit id="b149ec0010741dabc593484f5a58f1f5bb765802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; and &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; interfaces perform analogous functions for writers.</source>
          <target state="translated">该 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 和 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 供接口作家执行类似的功能。</target>
        </trans-unit>
        <trans-unit id="5ebe107cde1d3bd9a79d28a4e17587461ce4d493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; field will return a date-time with the specified instant. The offset and nano-of-second are unchanged. If the new instant value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 区域将返回日期时间与指定的瞬间。偏移和毫微秒不变。如果新的即时值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2471418c65939f74253b34d90116b39570d73512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; field will return a date-time with the specified instant. The zone and nano-of-second are unchanged. The result will have an offset derived from the new instant and original zone. If the new instant value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 区域将返回日期时间与指定的瞬间。区域和毫微秒不变。结果将具有从新的即时区域和原始区域得出的偏移量。如果新的即时值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="392613a8e6cca470b48fddf1528f1a7a4bb816c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Icon&lt;/code&gt; is wrapped in a &lt;code&gt;JLabel&lt;/code&gt; and displayed in the dialog.</source>
          <target state="translated">该 &lt;code&gt;Icon&lt;/code&gt; 被包装在 &lt;code&gt;JLabel&lt;/code&gt; 并在对话框中显示出来。</target>
        </trans-unit>
        <trans-unit id="a965621559c252e432937665b61d466e33f20641" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IllegalPathStateException&lt;/code&gt; represents an exception that is thrown if an operation is performed on a path that is in an illegal state with respect to the particular operation being performed, such as appending a path segment to a &lt;a href=&quot;generalpath&quot;&gt;&lt;code&gt;GeneralPath&lt;/code&gt;&lt;/a&gt; without an initial moveto.</source>
          <target state="translated">所述 &lt;code&gt;IllegalPathStateException&lt;/code&gt; 表示，如果这是在相对于所述特定操作的非法状态被执行，如附加的路径段的路径上执行操作时引发的异常&lt;a href=&quot;generalpath&quot;&gt; &lt;code&gt;GeneralPath&lt;/code&gt; &lt;/a&gt;不具有初始moveto。</target>
        </trans-unit>
        <trans-unit id="9c18c56f19c3dcaf88dfb987620dbfd93d3a3c2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Image&lt;/code&gt; object determines what colors to render, sampled according to the source to destination coordinate mapping specified by the current &lt;code&gt;Transform&lt;/code&gt; and the optional image transform.</source>
          <target state="translated">所述 &lt;code&gt;Image&lt;/code&gt; 对象确定什么颜色来呈现，根据源到目的地的坐标映射由当前指定的采样 &lt;code&gt;Transform&lt;/code&gt; 和可选的图像变换。</target>
        </trans-unit>
        <trans-unit id="d0d2fd4edf3f38ee33c3e1c03e54afb17d287f78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; class is an implementation of &lt;a href=&quot;graphicattribute&quot;&gt;&lt;code&gt;GraphicAttribute&lt;/code&gt;&lt;/a&gt; which draws images in a &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; 类是一个实现&lt;a href=&quot;graphicattribute&quot;&gt; &lt;code&gt;GraphicAttribute&lt;/code&gt; &lt;/a&gt;其绘制的图像&lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26f92023e5949c66d2da17553ce04c03b886aec5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; interface unifies streaming and file-based operations. An abstract base class, &lt;code&gt;ImageInputStreamImpl&lt;/code&gt; is provided to simplify writing a new &lt;code&gt;ImageInputStream&lt;/code&gt; class. Concrete implementation classes (&lt;code&gt;FileImageInputStream&lt;/code&gt;, &lt;code&gt;FileCacheImageInputStream&lt;/code&gt;, and &lt;code&gt;MemoryCacheImageInputStream&lt;/code&gt;) are provided that allow input to come from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;InputStream&lt;/code&gt; with or without the use of a temporary cache file.</source>
          <target state="translated">该 &lt;code&gt;ImageInputStream&lt;/code&gt; 的接口相结合流媒体和基于文件的操作。提供了一个抽象基类 &lt;code&gt;ImageInputStreamImpl&lt;/code&gt; ，以简化编写新的 &lt;code&gt;ImageInputStream&lt;/code&gt; 类的过程。提供了具体的实现类（ &lt;code&gt;FileImageInputStream&lt;/code&gt; ， &lt;code&gt;FileCacheImageInputStream&lt;/code&gt; 和 &lt;code&gt;MemoryCacheImageInputStream&lt;/code&gt; ），这些输入类允许在使用或不使用临时缓存文件的情况下，来自 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;InputStream&lt;/code&gt; 的输入。</target>
        </trans-unit>
        <trans-unit id="5e27b2d4d15fde0cbc962afad6131561435419d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; by &lt;code&gt;setInput&lt;/code&gt; and retrieved by &lt;code&gt;getInput&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setInput&lt;/code&gt; 的 &lt;code&gt;ImageInputStream&lt;/code&gt; 或其他 &lt;code&gt;Object&lt;/code&gt; ，并由 &lt;code&gt;getInput&lt;/code&gt; 检索。</target>
        </trans-unit>
        <trans-unit id="23787e7b0f5233202db60183744cb5ba7ec81a77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; by &lt;code&gt;setInput&lt;/code&gt; and retrieved by &lt;code&gt;getInput&lt;/code&gt;. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setInput&lt;/code&gt; 的 &lt;code&gt;ImageInputStream&lt;/code&gt; 或其他 &lt;code&gt;Object&lt;/code&gt; ，并由 &lt;code&gt;getInput&lt;/code&gt; 检索。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e870028a4bcce49d6ab74abb2d0fee3053be5245" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; interface performs an analogous function for output. An abstract base class, &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; is provided, along with concrete implementation classes (&lt;code&gt;FileImageOutputStream&lt;/code&gt;, &lt;code&gt;FileCacheImageOutputStream&lt;/code&gt;, and &lt;code&gt;MemoryCacheImageOutputStream&lt;/code&gt;) are provided that allow output to go to a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; with or without the use of a temporary cache file.</source>
          <target state="translated">所述 &lt;code&gt;ImageOutputStream&lt;/code&gt; 接口执行用于输出的类似的功能。提供了一个抽象基类 &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; ，并提供了具体的实现类（ &lt;code&gt;FileImageOutputStream&lt;/code&gt; ， &lt;code&gt;FileCacheImageOutputStream&lt;/code&gt; 和 &lt;code&gt;MemoryCacheImageOutputStream&lt;/code&gt; ），这些类允许在使用或不使用临时缓存文件的情况下，将输出转到 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;OutputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ddae3bbe537c1a0be71cf41804a28a5a81e4fb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; set by &lt;code&gt;setOutput&lt;/code&gt; and retrieved by &lt;code&gt;getOutput&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;setOutput&lt;/code&gt; 设置并由 &lt;code&gt;getOutput&lt;/code&gt; 检索的 &lt;code&gt;ImageOutputStream&lt;/code&gt; 或其他 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c654707cc8b01173251db888e4e9f1cadc54a60a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; set by &lt;code&gt;setOutput&lt;/code&gt; and retrieved by &lt;code&gt;getOutput&lt;/code&gt;. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;setOutput&lt;/code&gt; 设置并由 &lt;code&gt;getOutput&lt;/code&gt; 检索的 &lt;code&gt;ImageOutputStream&lt;/code&gt; 或其他 &lt;code&gt;Object&lt;/code&gt; 。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f70260567f0d2cbe6fe2d89e83724aa1bfc9a4e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageReaderSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists.</source>
          <target state="translated">实例化此对象的 &lt;code&gt;ImageReaderSpi&lt;/code&gt; ；如果未知其标识或不存在，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23d39dd66eefdd5b7e22c2d48611d45e7fe19e03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageReaderSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">实例化此对象的 &lt;code&gt;ImageReaderSpi&lt;/code&gt; ；如果未知其标识或不存在，则为 &lt;code&gt;null&lt;/code&gt; 。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4704057a1cfa23bc9c1120bc0abf4de7efb1c23e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageWriterSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists.</source>
          <target state="translated">实例化此对象的 &lt;code&gt;ImageWriterSpi&lt;/code&gt; ；如果未知其身份或不存在，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1558624413839f825eafd92b1012f6d775cab0ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageWriterSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">实例化此对象的 &lt;code&gt;ImageWriterSpi&lt;/code&gt; ；如果未知其标识或不存在，则为 &lt;code&gt;null&lt;/code&gt; 。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d333f5cf1777f22147d636bd072217b0f829b493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImagingOpException&lt;/code&gt; is thrown if one of the &lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;rasterop&quot;&gt;&lt;code&gt;RasterOp&lt;/code&gt;&lt;/a&gt; filter methods cannot process the image.</source>
          <target state="translated">如果&lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;rasterop&quot;&gt; &lt;code&gt;RasterOp&lt;/code&gt; &lt;/a&gt;筛选器方法之一无法处理图像， &lt;code&gt;ImagingOpException&lt;/code&gt; 引发ImagingOpException。</target>
        </trans-unit>
        <trans-unit id="4d20fc48554b076450f5bcbb366190a701c2f94a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values consisting of a single sample that is an index into a fixed colormap in the default sRGB color space.</source>
          <target state="translated">所述 &lt;code&gt;IndexColorModel&lt;/code&gt; 的类是一个 &lt;code&gt;ColorModel&lt;/code&gt; 的类，它使用由单个样本，其为索引到在默认sRGB颜色空间中固定colormap的像素值的作品。</target>
        </trans-unit>
        <trans-unit id="c39e7b4238b4a83b33e75a19112d55d420ed74fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IndexColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values consisting of a single sample that is an index into a fixed colormap in the default sRGB color space. The colormap specifies red, green, blue, and optional alpha components corresponding to each index. All components are represented in the colormap as 8-bit unsigned integral values. Some constructors allow the caller to specify &quot;holes&quot; in the colormap by indicating which colormap entries are valid and which represent unusable colors via the bits set in a &lt;code&gt;BigInteger&lt;/code&gt; object. This color model is similar to an X11 PseudoColor visual.</source>
          <target state="translated">所述 &lt;code&gt;IndexColorModel&lt;/code&gt; 的类是一个 &lt;code&gt;ColorModel&lt;/code&gt; 的类，它使用由单个样本，其为索引到在默认sRGB颜色空间中固定colormap的像素值的作品。颜色图指定了与每个索引相对应的红色，绿色，蓝色和可选的alpha分量。所有组件在色图中均表示为8位无符号整数值。一些构造函数允许调用者通过在 &lt;code&gt;BigInteger&lt;/code&gt; 对象中设置的位指示哪些颜色图条目有效以及哪些颜色表代表不可用的颜色，从而在颜色图中指定&amp;ldquo;孔&amp;rdquo; 。此颜色模型类似于X11 PseudoColor视觉效果。</target>
        </trans-unit>
        <trans-unit id="e251dbab4e4c6456b16648f06dec35662b5945d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputStream&lt;/code&gt; object that will be returned by the method &lt;code&gt;getAsciiStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">由 &lt;code&gt;getAsciiStream&lt;/code&gt; 方法返回的 &lt;code&gt;InputStream&lt;/code&gt; 对象，该方法在 &lt;code&gt;ResultSet&lt;/code&gt; 接口中指定。</target>
        </trans-unit>
        <trans-unit id="a1bc6fa075667b1fa7aa96914f9db9e346cff621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputStream&lt;/code&gt; object that will be returned by the method &lt;code&gt;getBinaryStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">由 &lt;code&gt;getBinaryStream&lt;/code&gt; 方法返回的 &lt;code&gt;InputStream&lt;/code&gt; 对象，该方法在 &lt;code&gt;ResultSet&lt;/code&gt; 接口中指定。</target>
        </trans-unit>
        <trans-unit id="caeca15b76441775ba23041b93cdbba02f7befa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InputStream&lt;/code&gt; object that will be returned by the method &lt;code&gt;getUnicodeStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">由 &lt;code&gt;getUnicodeStream&lt;/code&gt; 方法返回的 &lt;code&gt;InputStream&lt;/code&gt; 对象，该方法在 &lt;code&gt;ResultSet&lt;/code&gt; 接口中指定。</target>
        </trans-unit>
        <trans-unit id="c187ac2b0346d6275a729d49e9e4b70887e64296" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Integer&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;int&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Integer&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;int&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="62ec9068383653f569a3d3699ea099197809c35d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Integer&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;int&lt;/code&gt; in an object. An object of type &lt;code&gt;Integer&lt;/code&gt; contains a single field whose type is &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Integer&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;int&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Integer&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;int&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="e3cc2ea1e526b831184aee5221e0c845f7fee4f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JApplet&lt;/code&gt; class is slightly incompatible with &lt;code&gt;java.applet.Applet&lt;/code&gt;. &lt;code&gt;JApplet&lt;/code&gt; contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;code&gt;contentPane&lt;/code&gt; should be the parent of any children of the &lt;code&gt;JApplet&lt;/code&gt;. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to an applet as follows:</source>
          <target state="translated">该 &lt;code&gt;JApplet&lt;/code&gt; 的类是略有不符 &lt;code&gt;java.applet.Applet&lt;/code&gt; 中。 &lt;code&gt;JApplet&lt;/code&gt; 包含 &lt;code&gt;JRootPane&lt;/code&gt; 作为其唯一的子级。该 &lt;code&gt;contentPane&lt;/code&gt; 应该是任何儿童的父 &lt;code&gt;JApplet&lt;/code&gt; 的。为方便起见，此类的 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;setLayout&lt;/code&gt; 方法被覆盖，因此它们将调用委派给 &lt;code&gt;ContentPane&lt;/code&gt; 的相应方法。例如，可以将子组件添加到applet中，如下所示：</target>
        </trans-unit>
        <trans-unit id="c87e4f76b89a70ad69cce55f17acc2797e0c21d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JComponent&lt;/code&gt; class provides:</source>
          <target state="translated">该 &lt;code&gt;JComponent&lt;/code&gt; 的类提供：</target>
        </trans-unit>
        <trans-unit id="9664c24520dfd0acb583ed66d3f527d0092afdf0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDBCType&lt;/code&gt; constant</source>
          <target state="translated">该 &lt;code&gt;JDBCType&lt;/code&gt; 不变</target>
        </trans-unit>
        <trans-unit id="388596c6d2e1a4932d64b2200c1465e4d8741ed5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDIPermission&lt;/code&gt; class represents access rights to the &lt;code&gt;VirtualMachineManager&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;JDIPermission&lt;/code&gt; 类表示访问权限 &lt;code&gt;VirtualMachineManager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cefae284586aab944db856f3d455db32f414e442" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDIPermission&lt;/code&gt; class represents access rights to the &lt;code&gt;VirtualMachineManager&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;JDIPermission&lt;/code&gt; 类表示访问权限 &lt;code&gt;VirtualMachineManager&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2d717e6db87a9219209780dac2a1cd16fb18b02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDIPermission&lt;/code&gt; class represents access rights to the &lt;code&gt;VirtualMachineManager&lt;/code&gt;. This is the permission which the SecurityManager will check when code that is running with a SecurityManager requests access to the VirtualMachineManager, as defined in the Java Debug Interface (JDI) for the Java platform.</source>
          <target state="translated">该 &lt;code&gt;JDIPermission&lt;/code&gt; 类表示访问权限 &lt;code&gt;VirtualMachineManager&lt;/code&gt; 。这是SecurityManager将在与SecurityManager一起运行的代码请求访问VirtualMachineManager时检查的权限，如Java平台的Java调试接口（JDI）所定义。</target>
        </trans-unit>
        <trans-unit id="a831a7ab2166f42212b45436e662aa3eac54b072" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JDialog&lt;/code&gt; component contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;code&gt;contentPane&lt;/code&gt; should be the parent of any children of the &lt;code&gt;JDialog&lt;/code&gt;. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a dialog as follows:</source>
          <target state="translated">该 &lt;code&gt;JDialog&lt;/code&gt; 组件包含一个 &lt;code&gt;JRootPane&lt;/code&gt; 中作为其唯一的孩子。该 &lt;code&gt;contentPane&lt;/code&gt; 应该是任何儿童的家长 &lt;code&gt;JDialog&lt;/code&gt; 。为方便起见，此类的 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;setLayout&lt;/code&gt; 方法被覆盖，因此它们将调用委派给 &lt;code&gt;ContentPane&lt;/code&gt; 的相应方法。例如，可以将一个子组件添加到对话框中，如下所示：</target>
        </trans-unit>
        <trans-unit id="4c6f8bb9754f43f02a3b0b1938083fdf7b145a73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JFrame&lt;/code&gt; class is slightly incompatible with &lt;code&gt;Frame&lt;/code&gt;. Like all other JFC/Swing top-level containers, a &lt;code&gt;JFrame&lt;/code&gt; contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;b&gt;content pane&lt;/b&gt; provided by the root pane should, as a rule, contain all the non-menu components displayed by the &lt;code&gt;JFrame&lt;/code&gt;. This is different from the AWT &lt;code&gt;Frame&lt;/code&gt; case. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a frame as follows:</source>
          <target state="translated">该 &lt;code&gt;JFrame&lt;/code&gt; 的类是略有不符 &lt;code&gt;Frame&lt;/code&gt; 。像所有其他JFC / Swing顶级容器一样， &lt;code&gt;JFrame&lt;/code&gt; 包含 &lt;code&gt;JRootPane&lt;/code&gt; 作为其唯一的子级。根&lt;b&gt;窗格&lt;/b&gt;提供的&lt;b&gt;内容窗格&lt;/b&gt;通常应包含 &lt;code&gt;JFrame&lt;/code&gt; 显示的所有非菜单组件。这与AWT &lt;code&gt;Frame&lt;/code&gt; 情况不同。为方便起见，此类的 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;setLayout&lt;/code&gt; 方法被覆盖，因此它们将调用委派给 &lt;code&gt;ContentPane&lt;/code&gt; 的相应方法。例如，您可以将子组件添加到框架，如下所示：</target>
        </trans-unit>
        <trans-unit id="0d81a30c0184c34b3c691afdfe0e670e454d6d68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JInternalFrame&lt;/code&gt; content pane is where you add child components. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to an internal frame as follows:</source>
          <target state="translated">您可以在 &lt;code&gt;JInternalFrame&lt;/code&gt; 内容窗格中添加子组件。为方便起见，此类的 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;setLayout&lt;/code&gt; 方法被覆盖，因此它们将调用委派给 &lt;code&gt;ContentPane&lt;/code&gt; 的相应方法。例如，可以将子组件添加到内部框架，如下所示：</target>
        </trans-unit>
        <trans-unit id="c23196121f172d1a13c98018c082ac9f69ce7b6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JLayer&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;JLayer&lt;/code&gt; 重写此方法（在默认实现 &lt;code&gt;JComponent&lt;/code&gt; ）返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9fdfd0369de3e98d177d6c9f03bc43faf0e048f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JLayer&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return &lt;code&gt;false&lt;/code&gt;. This ensures that the drawing machinery will call the &lt;code&gt;JLayer&lt;/code&gt;'s &lt;code&gt;paint&lt;/code&gt; implementation rather than messaging the &lt;code&gt;JLayer&lt;/code&gt;'s children directly.</source>
          <target state="translated">该 &lt;code&gt;JLayer&lt;/code&gt; 重写此方法（在默认实现 &lt;code&gt;JComponent&lt;/code&gt; ）返回 &lt;code&gt;false&lt;/code&gt; 。这确保了绘图机制将调用 &lt;code&gt;JLayer&lt;/code&gt; 的 &lt;code&gt;paint&lt;/code&gt; 实现，而不是直接向 &lt;code&gt;JLayer&lt;/code&gt; 的子级传递消息。</target>
        </trans-unit>
        <trans-unit id="9b25ba63894710fd4b97499052886e621a382f62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JLayeredPane&lt;/code&gt; methods &lt;code&gt;moveToFront(Component)&lt;/code&gt;, &lt;code&gt;moveToBack(Component)&lt;/code&gt; and &lt;code&gt;setPosition&lt;/code&gt; can be used to reposition a component within its layer. The &lt;code&gt;setLayer&lt;/code&gt; method can also be used to change the component's current layer.</source>
          <target state="translated">所述 &lt;code&gt;JLayeredPane&lt;/code&gt; 的方法 &lt;code&gt;moveToFront(Component)&lt;/code&gt; ， &lt;code&gt;moveToBack(Component)&lt;/code&gt; 和 &lt;code&gt;setPosition&lt;/code&gt; 两种可用于它的层内重新定位的组分。该 &lt;code&gt;setLayer&lt;/code&gt; 方法也可以用来改变组件的当前层。</target>
        </trans-unit>
        <trans-unit id="3fa5f36d971e7676ba7ab51f2c1dff644147234e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JList&lt;/code&gt; pluggable look and feel delegate.</source>
          <target state="translated">该 &lt;code&gt;JList&lt;/code&gt; 的可插入外观代理。</target>
        </trans-unit>
        <trans-unit id="4049b86463133a049acc0748eb8f415baf880f7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JMenuItem&lt;/code&gt; subclasses only use &lt;code&gt;SMALL_ICON&lt;/code&gt;. All other buttons will use &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt;; if the value is &lt;code&gt;null&lt;/code&gt; they use &lt;code&gt;SMALL_ICON&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;JMenuItem&lt;/code&gt; 的子类只使用 &lt;code&gt;SMALL_ICON&lt;/code&gt; 。所有其他按钮将使用 &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; ; 如果值为 &lt;code&gt;null&lt;/code&gt; ,则使用 &lt;code&gt;SMALL_ICON&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bad30b8acbde953843755f85584b7f2c2c30a621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JRootPane&lt;/code&gt; instance that manages the &lt;code&gt;contentPane&lt;/code&gt; and optional &lt;code&gt;menuBar&lt;/code&gt; for this frame, as well as the &lt;code&gt;glassPane&lt;/code&gt;.</source>
          <target state="translated">管理此框架的 &lt;code&gt;contentPane&lt;/code&gt; 和可选 &lt;code&gt;menuBar&lt;/code&gt; 以及 &lt;code&gt;glassPane&lt;/code&gt; 的 &lt;code&gt;JRootPane&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="9e586e2a981f3a761025c512ea04c3022aef07c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JRootPane&lt;/code&gt; instance that manages the content pane and optional menu bar for this internal frame, as well as the glass pane.</source>
          <target state="translated">所述 &lt;code&gt;JRootPane&lt;/code&gt; 实例管理此内部框架内容窗格和可选的菜单栏，以及玻璃板。</target>
        </trans-unit>
        <trans-unit id="0d07b328936474f5cbbebe738dfdc36bb3225929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; can be set up to display any data model which implements the &lt;code&gt;TableModel&lt;/code&gt; interface with a couple of lines of code:</source>
          <target state="translated">所述 &lt;code&gt;JTable&lt;/code&gt; 可设置以显示它实现了任何数据模型 &lt;code&gt;TableModel&lt;/code&gt; 用几行代码的接口：</target>
        </trans-unit>
        <trans-unit id="a3d4d072368811da647b5501228f64bdae7b15e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; has many facilities that make it possible to customize its rendering and editing but provides defaults for these features so that simple tables can be set up easily. For example, to set up a table with 10 rows and 10 columns of numbers:</source>
          <target state="translated">该 &lt;code&gt;JTable&lt;/code&gt; 中有很多的设施，使得它可以定制它的渲染和编辑，但提供的默认值，这些特点使简单的表格，可以轻松设置。例如，要建立一个包含10行10列数字的表，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="d75024b5e7e8d1ed02fdad9eaac5c7a8ad84f616" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; is used to display and edit regular two-dimensional tables of cells.</source>
          <target state="translated">所述 &lt;code&gt;JTable&lt;/code&gt; 用于显示和编辑单元的规则的二维表。</target>
        </trans-unit>
        <trans-unit id="95c8ac8d733cd5732fb777b006412d36181496a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; is used to display and edit regular two-dimensional tables of cells. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html&quot;&gt;How to Use Tables&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for task-oriented documentation and examples of using &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;JTable&lt;/code&gt; 用于显示和编辑单元的规则的二维表。有关面向任务的文档和使用 &lt;code&gt;JTable&lt;/code&gt; 的示例，请参见&lt;em&gt;Java教程&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html&quot;&gt;如何使用表&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c56b0c42ec4f2e67652a49d5e1a2872f069470a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; is used to display and edit regular two-dimensional tables of cells. See &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html&quot;&gt;How to Use Tables&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for task-oriented documentation and examples of using &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;JTable&lt;/code&gt; 用于显示和编辑单元的规则的二维表。有关面向任务的文档和使用 &lt;code&gt;JTable&lt;/code&gt; 的示例，请参见&lt;em&gt;Java教程&lt;/em&gt;中&lt;em&gt;的&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html&quot;&gt;如何使用表&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52d2ad87ac37fdf47838a9cdfaacb2e8a02c95c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTable&lt;/code&gt; uses integers exclusively to refer to both the rows and the columns of the model that it displays. The &lt;code&gt;JTable&lt;/code&gt; simply takes a tabular range of cells and uses &lt;code&gt;getValueAt(int, int)&lt;/code&gt; to retrieve the values from the model during painting. It is important to remember that the column and row indexes returned by various &lt;code&gt;JTable&lt;/code&gt; methods are in terms of the &lt;code&gt;JTable&lt;/code&gt; (the view) and are not necessarily the same indexes used by the model.</source>
          <target state="translated">在 &lt;code&gt;JTable&lt;/code&gt; 中使用专有的整数来引用行和它所显示的模型的列两者。所述 &lt;code&gt;JTable&lt;/code&gt; 简单地取细胞的表格范围，并使用 &lt;code&gt;getValueAt(int, int)&lt;/code&gt; 在上漆时检索来自模型的值。重要的是要记住，各种 &lt;code&gt;JTable&lt;/code&gt; 方法返回的列索引和行索引是根据 &lt;code&gt;JTable&lt;/code&gt; （视图）而言的，不一定与模型使用的索引相同。</target>
        </trans-unit>
        <trans-unit id="ff3cf78ab641e58b2c5ec4479c84cee89110d041" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JTableHeader&lt;/code&gt; that is delegating the painting to this UI.</source>
          <target state="translated">将绘画委派给此UI的 &lt;code&gt;JTableHeader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eaa7c23e7e2bbbc13aa330255c3995984f627edd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JViewport&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return false.</source>
          <target state="translated">在 &lt;code&gt;JViewport&lt;/code&gt; 重写此方法（在默认实现 &lt;code&gt;JComponent&lt;/code&gt; ）返回false。</target>
        </trans-unit>
        <trans-unit id="ec409845719307e978c8e91fb5b03ac6a0c35b35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JViewport&lt;/code&gt; overrides the default implementation of this method (in &lt;code&gt;JComponent&lt;/code&gt;) to return false. This ensures that the drawing machinery will call the &lt;code&gt;Viewport&lt;/code&gt;'s &lt;code&gt;paint&lt;/code&gt; implementation rather than messaging the &lt;code&gt;JViewport&lt;/code&gt;'s children directly.</source>
          <target state="translated">在 &lt;code&gt;JViewport&lt;/code&gt; 重写此方法（在默认实现 &lt;code&gt;JComponent&lt;/code&gt; ）返回false。这确保了绘图机制将调用 &lt;code&gt;Viewport&lt;/code&gt; 的 &lt;code&gt;paint&lt;/code&gt; 实现，而不是直接向 &lt;code&gt;JViewport&lt;/code&gt; 的子级传递消息。</target>
        </trans-unit>
        <trans-unit id="364d8fc3bc9081a3dc1c6702ea2ad91b7e71cea4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JViewport&lt;/code&gt; provides a window, or &quot;viewport&quot; onto a data source -- for example, a text file. That data source is the &quot;scrollable client&quot; (aka data model) displayed by the &lt;code&gt;JViewport&lt;/code&gt; view. A &lt;code&gt;JScrollPane&lt;/code&gt; basically consists of &lt;code&gt;JScrollBar&lt;/code&gt;s, a &lt;code&gt;JViewport&lt;/code&gt;, and the wiring between them, as shown in the diagram at right.</source>
          <target state="translated">所述 &lt;code&gt;JViewport&lt;/code&gt; 提供了一个窗口，或&amp;ldquo;视口&amp;rdquo;到数据源-例如，一个文本文件。该数据源是 &lt;code&gt;JViewport&lt;/code&gt; 视图显示的&amp;ldquo;可滚动客户端&amp;rdquo;（又名数据模型）。甲 &lt;code&gt;JScrollPane&lt;/code&gt; 的基本上由 &lt;code&gt;JScrollBar&lt;/code&gt; 的S，A &lt;code&gt;JViewport&lt;/code&gt; ，以及它们之间的布线，如右图所示的图中</target>
        </trans-unit>
        <trans-unit id="911161a28dc237dab5002e98139e60480a1f84cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JWindow&lt;/code&gt; component contains a &lt;code&gt;JRootPane&lt;/code&gt; as its only child. The &lt;code&gt;contentPane&lt;/code&gt; should be the parent of any children of the &lt;code&gt;JWindow&lt;/code&gt;. As a convenience, the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods of this class are overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a window as follows:</source>
          <target state="translated">该 &lt;code&gt;JWindow&lt;/code&gt; 组件包含一个 &lt;code&gt;JRootPane&lt;/code&gt; 中作为其唯一的孩子。该 &lt;code&gt;contentPane&lt;/code&gt; 应该是任何儿童的家长 &lt;code&gt;JWindow&lt;/code&gt; 。为方便起见，此类的 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;setLayout&lt;/code&gt; 方法被覆盖，因此它们将调用委派给 &lt;code&gt;ContentPane&lt;/code&gt; 的相应方法。例如，您可以将子组件添加到窗口中，如下所示：</target>
        </trans-unit>
        <trans-unit id="10e129e33f3b53fc80b1e431c4205e048b0ed9d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;JarFile&lt;/code&gt; 类用于从任何可以使用打开的文件中读取jar文件的内容 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="7d1581e89607230d16b5c39df532a61304a21e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;. It extends the class &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry, and support for processing multi-release jar files. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the jar file and its entries.</source>
          <target state="translated">该 &lt;code&gt;JarFile&lt;/code&gt; 类用于从任何可以使用打开的文件中读取jar文件的内容 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 中。它扩展了类 &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; 的支持，以支持读取可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目，并支持处理多版本jar文件。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于指定有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="7fc173f631c97a9b4dcc50fc6b42b14623acad99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;. It extends the class &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the jar file and its entries.</source>
          <target state="translated">该 &lt;code&gt;JarFile&lt;/code&gt; 类用于从任何可以使用打开的文件中读取jar文件的内容 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 中。它扩展了类 &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; ,并支持读取可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于指定有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="9792439c8b85ffb254058fa07ee9e18ecd9179ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarInputStream&lt;/code&gt; class is used to read the contents of a JAR file from any input stream.</source>
          <target state="translated">所述 &lt;code&gt;JarInputStream&lt;/code&gt; 类用于从任何输入流读取JAR文件的内容。</target>
        </trans-unit>
        <trans-unit id="69fcbab6dd2a8326db4e277f74e623e45080d92f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarInputStream&lt;/code&gt; class is used to read the contents of a JAR file from any input stream. It extends the class &lt;code&gt;java.util.zip.ZipInputStream&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to store meta-information about the JAR file and its entries.</source>
          <target state="translated">所述 &lt;code&gt;JarInputStream&lt;/code&gt; 类用于从任何输入流读取JAR文件的内容。它扩展了类 &lt;code&gt;java.util.zip.ZipInputStream&lt;/code&gt; ,并支持读取可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于存储有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="b21ac43a5a90b457145ee7b48bcabedf9e126557" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarOutputStream&lt;/code&gt; class is used to write the contents of a JAR file to any output stream.</source>
          <target state="translated">所述 &lt;code&gt;JarOutputStream&lt;/code&gt; 类用于JAR文件的内容写入到任何输出流。</target>
        </trans-unit>
        <trans-unit id="8e11ba91a7108003e4972a4752848ed577893864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarOutputStream&lt;/code&gt; class is used to write the contents of a JAR file to any output stream. It extends the class &lt;code&gt;java.util.zip.ZipOutputStream&lt;/code&gt; with support for writing an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the JAR file and its entries.</source>
          <target state="translated">所述 &lt;code&gt;JarOutputStream&lt;/code&gt; 类用于JAR文件的内容写入到任何输出流。它扩展了 &lt;code&gt;java.util.zip.ZipOutputStream&lt;/code&gt; 类，并支持编写可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于指定有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="3aedd1952b22868e880c731ee5f88710d33b43b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JdbcRowSet&lt;/code&gt; describes a &lt;code&gt;RowSet&lt;/code&gt; object that &lt;b&gt;must&lt;/b&gt; always be connected to the originating data source. Implementations of the &lt;code&gt;JdbcRowSet&lt;/code&gt; should ensure that this connection is provided solely by a JDBC driver. Furthermore, &lt;code&gt;RowSet&lt;/code&gt; objects that are implementations of the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface and are therefore operating in a connected environment do not use the &lt;code&gt;SyncFactory&lt;/code&gt; to obtain a &lt;code&gt;RowSetReader&lt;/code&gt; object or a &lt;code&gt;RowSetWriter&lt;/code&gt; object. They can safely rely on the JDBC driver to supply their needs by virtue of the presence of an underlying updatable and scrollable &lt;code&gt;ResultSet&lt;/code&gt; implementation.</source>
          <target state="translated">所述 &lt;code&gt;JdbcRowSet&lt;/code&gt; 描述了一种 &lt;code&gt;RowSet&lt;/code&gt; 该对象&lt;b&gt;必须&lt;/b&gt;始终连接到原始数据源。 &lt;code&gt;JdbcRowSet&lt;/code&gt; 的实现应确保此连接仅由JDBC驱动程序提供。此外，作为 &lt;code&gt;JdbcRowSet&lt;/code&gt; 接口的实现并因此在连接的环境中运行的 &lt;code&gt;RowSet&lt;/code&gt; 对象不使用 &lt;code&gt;SyncFactory&lt;/code&gt; 来获取 &lt;code&gt;RowSetReader&lt;/code&gt; 对象或 &lt;code&gt;RowSetWriter&lt;/code&gt; 对象。由于存在底层可更新和可滚动的 &lt;code&gt;ResultSet&lt;/code&gt; 实现，因此他们可以安全地依靠JDBC驱动程序来满足他们的需求。</target>
        </trans-unit>
        <trans-unit id="93d19fc52241eaae58b0fd1278f2e42630f9be60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobImpressions&lt;/code&gt; attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the &lt;code&gt;JobImpressions&lt;/code&gt; attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the &lt;code&gt;JobImpressions&lt;/code&gt; attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the &lt;code&gt;JobImpressions&lt;/code&gt; attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">该 &lt;code&gt;JobImpressions&lt;/code&gt; 属性描述了作业的大小。此属性并非要用作计数器；如果知道的话，它是有用的路由和调度信息。如果&amp;ldquo;打印请求&amp;rdquo;中未提供 &lt;code&gt;JobImpressions&lt;/code&gt; 属性的值，则打印机可能会尝试计算该值。即使客户确实在&amp;ldquo;打印请求&amp;rdquo;中为 &lt;code&gt;JobImpressions&lt;/code&gt; 属性提供了一个值，但如果打印机能够计算出比客户提供的值更准确的值，则打印机也可以选择更改该值。打印机可能能够 &lt;code&gt;JobImpressions&lt;/code&gt; 在作业提交时或在以后的任何时间点为JobImpressions属性确定正确的值。</target>
        </trans-unit>
        <trans-unit id="e4bddb97de4263dfb682eb09a9a222bc995bd9ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; attribute describes the progress of the job. This attribute is intended to be a counter. That is, the &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;, the &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;ABORTED&lt;/code&gt; states, the &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; value is the final value for the job.</source>
          <target state="translated">该 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 属性描述了作业的进度。此属性旨在作为一个计数器。也就是说，尚未开始处理的作业的 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 值必须为0。当作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;PROCESSING&lt;/code&gt; 或 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 时， &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 值将在处理作业时增加；它指示查询打印作业的属性集时或报告打印作业事件时已处理的作业量。当作业进入 &lt;code&gt;COMPLETED&lt;/code&gt; ， &lt;code&gt;CANCELED&lt;/code&gt; 或 &lt;code&gt;ABORTED&lt;/code&gt; 状态时， &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 值是作业的最终值。</target>
        </trans-unit>
        <trans-unit id="9d42b11af45864561098fb5e73382d34ce4fcf25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctets&lt;/code&gt; attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the &lt;code&gt;JobKOctets&lt;/code&gt; attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the &lt;code&gt;JobKOctets&lt;/code&gt; attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the &lt;code&gt;JobKOctets&lt;/code&gt; attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">该 &lt;code&gt;JobKOctets&lt;/code&gt; 属性描述了作业的大小。此属性并非要用作计数器；如果知道的话，它是有用的路由和调度信息。如果&amp;ldquo;打印请求&amp;rdquo;中未提供 &lt;code&gt;JobKOctets&lt;/code&gt; 属性的值，则打印机可能会尝试计算该值。即使客户确实在&amp;ldquo;打印请求&amp;rdquo;中为 &lt;code&gt;JobKOctets&lt;/code&gt; 属性提供了一个值，但如果打印机能够计算出比客户提供的值更准确的值，则打印机也可以选择更改该值。打印机可能能够在作业提交时或在以后的任何时间点为 &lt;code&gt;JobKOctets&lt;/code&gt; 属性确定正确的值。</target>
        </trans-unit>
        <trans-unit id="f7855cd53d43de6e01d828f80467a04fb5f73419" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctets&lt;/code&gt; value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the size of the source document data, rather than a measure of the hardcopy output to be produced.</source>
          <target state="translated">由于嵌入在文档数据中的复制指令， &lt;code&gt;JobKOctets&lt;/code&gt; 值也必须不包含乘法因子。如果文档数据实际上包括文档数据的复制，则此值将包括此类复制。换句话说，此值始终是源文档数据的大小，而不是要生成的硬拷贝输出的度量。</target>
        </trans-unit>
        <trans-unit id="2f05f1d9f8bcaade508d2f1e15f4c164149584d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctets&lt;/code&gt; value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and indicates the size of the document(s) measured in K octets independent of the number of copies.</source>
          <target state="translated">所述 &lt;code&gt;JobKOctets&lt;/code&gt; 值不能包括贡献的由指定的份数的乘法因子&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性，独立的设备是否能够处理多个副本，而不需要通过作业或文档数据进行多道次的和独立的输出是否进行核对或不。因此，该值与实现方式无关，并且指示以K个八位位组为单位的文档大小（与份数无关）。</target>
        </trans-unit>
        <trans-unit id="0fc8388eff666e0318b26f69b533a081e5ec0d2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobKOctetsProcessed value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;, the &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;ABORTED&lt;/code&gt; states, the &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; value is the final value for the job.</source>
          <target state="translated">该 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 属性描述了作业的进度。此属性旨在作为一个计数器。也就是说，尚未开始处理的作业的JobKOctetsProcessed值必须为0。当作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;PROCESSING&lt;/code&gt; 或 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 时， &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 值将在处理作业时增加；否则，该值应为0 。它指示查询打印作业的属性集时或报告打印作业事件时已处理的作业量。当作业进入 &lt;code&gt;COMPLETED&lt;/code&gt; ， &lt;code&gt;CANCELED&lt;/code&gt; 或 &lt;code&gt;ABORTED&lt;/code&gt; 状态时， &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 价值是工作的最终价值。</target>
        </trans-unit>
        <trans-unit id="ab80f243ababcbf1f4897af7dc0b241257af280a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the &lt;code&gt;JobMediaSheets&lt;/code&gt; attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">该 &lt;code&gt;JobMediaSheets&lt;/code&gt; 属性描述了作业的大小。此属性并非要用作计数器；如果知道的话，它是有用的路由和调度信息。如果&amp;ldquo;打印请求&amp;rdquo;中未提供 &lt;code&gt;JobMediaSheets&lt;/code&gt; 属性的值，则打印机可能会尝试计算该值。即使客户确实在&amp;ldquo;打印请求&amp;rdquo;中为 &lt;code&gt;JobMediaSheets&lt;/code&gt; 属性提供了一个值，但如果打印机能够计算出比客户提供的值更准确的值，则打印机也可以选择更改该值。打印机可能能够在作业提交时或在以后的任何时间点为 &lt;code&gt;JobMediaSheets&lt;/code&gt; 属性确定正确的值。</target>
        </trans-unit>
        <trans-unit id="a54724fe6880322ea331b2b691cec67ddf2633f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; attribute describes the progress of the job. This attribute is intended to be a counter. That is, the &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt;, the &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the &lt;code&gt;COMPLETED&lt;/code&gt;, &lt;code&gt;CANCELED&lt;/code&gt;, or &lt;code&gt;ABORTED&lt;/code&gt; states, the &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; value is the final value for the job.</source>
          <target state="translated">该 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 属性描述了作业的进度。此属性旨在作为一个计数器。也就是说， &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 对于还没有开始处理必须是0。当作业的工作值&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;PROCESSING&lt;/code&gt; 或 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; ，该 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 值的目的是增加，因为处理作业; 它指示查询打印作业的属性集时或报告打印作业事件时已处理的作业量。当作业进入 &lt;code&gt;COMPLETED&lt;/code&gt; ， &lt;code&gt;CANCELED&lt;/code&gt; 或 &lt;code&gt;ABORTED&lt;/code&gt; 状态时， &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 值是作业的最终值。</target>
        </trans-unit>
        <trans-unit id="c444c9917a86296778e0e6b08a2e582e7061c85a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface makes it possible to get data from one or more &lt;code&gt;RowSet&lt;/code&gt; objects consolidated into one table without having to incur the expense of creating a connection to a database. It is therefore ideally suited for use by disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. Nevertheless, any &lt;code&gt;RowSet&lt;/code&gt; object &lt;b&gt;may&lt;/b&gt; implement this interface regardless of whether it is connected or disconnected. Note that a &lt;code&gt;JdbcRowSet&lt;/code&gt; object, being always connected to its data source, can become part of an SQL &lt;code&gt;JOIN&lt;/code&gt; directly without having to become part of a &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">该 &lt;code&gt;JoinRowSet&lt;/code&gt; 中接口使它可以从一个获取数据或更多 &lt;code&gt;RowSet&lt;/code&gt; 对象合并为一个表，不再需要在创建一个数据库连接的代价。因此，它非常适合断开的 &lt;code&gt;RowSet&lt;/code&gt; 对象使用。但是，任何 &lt;code&gt;RowSet&lt;/code&gt; 对象都&lt;b&gt;可以&lt;/b&gt;实现此接口，而不管其是连接还是断开连接。请注意，始终连接到其数据源的 &lt;code&gt;JdbcRowSet&lt;/code&gt; 对象可以直接成为SQL &lt;code&gt;JOIN&lt;/code&gt; 的一部分，而不必成为 &lt;code&gt;JoinRowSet&lt;/code&gt; 对象的一部分。</target>
        </trans-unit>
        <trans-unit id="f89488be2cadf79b9f6dad30abbc989807edfe33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface provides a mechanism for combining related data from different &lt;code&gt;RowSet&lt;/code&gt; objects into one &lt;code&gt;JoinRowSet&lt;/code&gt; object, which represents an SQL &lt;code&gt;JOIN&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;JoinRowSet&lt;/code&gt; 中界面提供用于从不同的相关数据相结合的机构 &lt;code&gt;RowSet&lt;/code&gt; 对象到一个 &lt;code&gt;JoinRowSet&lt;/code&gt; 中对象，它表示一个SQL &lt;code&gt;JOIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1857f2dbacd9a2f415961fff2f3fc95dd362417" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface provides a mechanism for combining related data from different &lt;code&gt;RowSet&lt;/code&gt; objects into one &lt;code&gt;JoinRowSet&lt;/code&gt; object, which represents an SQL &lt;code&gt;JOIN&lt;/code&gt;. In other words, a &lt;code&gt;JoinRowSet&lt;/code&gt; object acts as a container for the data from &lt;code&gt;RowSet&lt;/code&gt; objects that form an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship.</source>
          <target state="translated">所述 &lt;code&gt;JoinRowSet&lt;/code&gt; 中界面提供用于从不同的相关数据相结合的机构 &lt;code&gt;RowSet&lt;/code&gt; 对象到一个 &lt;code&gt;JoinRowSet&lt;/code&gt; 中对象，它表示一个SQL &lt;code&gt;JOIN&lt;/code&gt; 。换句话说， &lt;code&gt;JoinRowSet&lt;/code&gt; 对象充当来自 &lt;code&gt;RowSet&lt;/code&gt; 对象的数据的容器，这些数据形成SQL &lt;code&gt;JOIN&lt;/code&gt; 关系。</target>
        </trans-unit>
        <trans-unit id="7578c4dd8747a98c2f27b38c1875d232348cb143" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; interface supplies several methods for adding &lt;code&gt;RowSet&lt;/code&gt; objects and for getting information about the &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">该 &lt;code&gt;JoinRowSet&lt;/code&gt; 中的接口提供了多种方法来添加 &lt;code&gt;RowSet&lt;/code&gt; 对象和获取有关信息 &lt;code&gt;JoinRowSet&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="dc7199ca969d2a56a6e584a155cf8330e9b15154" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JoinRowSet&lt;/code&gt; object</source>
          <target state="translated">该 &lt;code&gt;JoinRowSet&lt;/code&gt; 中的对象</target>
        </trans-unit>
        <trans-unit id="7a61ffc158a0daba9a2c2610781cd68fa97c1b0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Joinable&lt;/code&gt; interface provides both connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects with the capability to be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object in an SQL &lt;code&gt;JOIN&lt;/code&gt; operation. A &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;Joinable&lt;/code&gt; interface can set a match column, retrieve a match column, or unset a match column. A &lt;code&gt;JoinRowSet&lt;/code&gt; object can then use the &lt;code&gt;RowSet&lt;/code&gt; object's match column as a basis for adding the &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;Joinable&lt;/code&gt; 接口提供两个连接和断开 &lt;code&gt;RowSet&lt;/code&gt; 与能力对象被添加到 &lt;code&gt;JoinRowSet&lt;/code&gt; 中在SQL对象 &lt;code&gt;JOIN&lt;/code&gt; 操作。甲 &lt;code&gt;RowSet&lt;/code&gt; 已经实现对象 &lt;code&gt;Joinable&lt;/code&gt; 界面可以设置匹配列，获取匹配列，或取消设置匹配列。然后， &lt;code&gt;JoinRowSet&lt;/code&gt; 对象可以使用 &lt;code&gt;RowSet&lt;/code&gt; 对象的match列作为添加 &lt;code&gt;RowSet&lt;/code&gt; 对象的基础。</target>
        </trans-unit>
        <trans-unit id="898a003c1a219e2ced5b5d58761137f53a86daf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Joinable&lt;/code&gt; interface provides the methods for getting and setting a match column, which is the basis for forming the SQL &lt;code&gt;JOIN&lt;/code&gt; formed by adding &lt;code&gt;RowSet&lt;/code&gt; objects to a &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;Joinable&lt;/code&gt; 接口提供用于获取和设置匹配列，其为用于形成SQL的基础方法的 &lt;code&gt;JOIN&lt;/code&gt; 通过加入形成 &lt;code&gt;RowSet&lt;/code&gt; 对象到一个 &lt;code&gt;JoinRowSet&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="6c98ed7a0aa6729127f3b5355f11517cb27023e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Joinable&lt;/code&gt; interface provides the methods for setting, retrieving, and unsetting a match column, the basis for establishing an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship. The match column may alternatively be set by supplying it to the appropriate version of the &lt;code&gt;JointRowSet&lt;/code&gt; method &lt;code&gt;addRowSet&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Joinable&lt;/code&gt; 接口提供用于设置，检索，和取消一个匹配列的方法中，用于建立一个SQL基础 &lt;code&gt;JOIN&lt;/code&gt; 关系。可以通过将匹配列提供给 &lt;code&gt;JointRowSet&lt;/code&gt; 方法 &lt;code&gt;addRowSet&lt;/code&gt; 的适当版本来设置匹配列。</target>
        </trans-unit>
        <trans-unit id="f1f4f673ec67c141b6306875c6fc5a1a9ed847e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Kernel&lt;/code&gt; class defines a matrix that describes how a specified pixel and its surrounding pixels affect the value computed for the pixel's position in the output image of a filtering operation.</source>
          <target state="translated">所述 &lt;code&gt;Kernel&lt;/code&gt; 类定义描述指定的像素及其周围像素如何影响过滤操作的输出图像中的像素的位置的值的矩阵。</target>
        </trans-unit>
        <trans-unit id="aed135fe5a2836a7febd759a0b7dd3615e9857fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Kernel&lt;/code&gt; class defines a matrix that describes how a specified pixel and its surrounding pixels affect the value computed for the pixel's position in the output image of a filtering operation. The X origin and Y origin indicate the kernel matrix element that corresponds to the pixel position for which an output value is being computed.</source>
          <target state="translated">所述 &lt;code&gt;Kernel&lt;/code&gt; 类定义描述指定的像素及其周围像素如何影响过滤操作的输出图像中的像素的位置的值的矩阵。X原点和Y原点表示与要为其计算输出值的像素位置相对应的核矩阵元素。</target>
        </trans-unit>
        <trans-unit id="dbb5aa603ed056efc13af2d1e9ede1198ceeff82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;KeyListener&lt;/code&gt; listens to events.</source>
          <target state="translated">该 &lt;code&gt;KeyListener&lt;/code&gt; 的监听事件。</target>
        </trans-unit>
        <trans-unit id="f7ba9fc1db8d36724267f1d6e78cc837f060c123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK&lt;/code&gt; element specifies a link to an external resource, and defines this document's relationship to that resource (or vice versa).</source>
          <target state="translated">的 &lt;code&gt;LINK&lt;/code&gt; 元素指定一个链接到外部资源，并且限定该文件的关系给该资源（或反之亦然）。</target>
        </trans-unit>
        <trans-unit id="21c303360ad460c3c97476f02a94fa6daca4191b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK&lt;/code&gt; element specifies a link to an external resource, and defines this document's relationship to that resource (or vice versa). See the LINK element definition in HTML 4.0 (see also the &lt;code&gt;LinkStyle&lt;/code&gt; interface in the module).</source>
          <target state="translated">的 &lt;code&gt;LINK&lt;/code&gt; 元素指定一个链接到外部资源，并且限定该文件的关系给该资源（或反之亦然）。请参见HTML 4.0中的LINK元素定义（另请参见模块中的 &lt;code&gt;LinkStyle&lt;/code&gt; 接口）。</target>
        </trans-unit>
        <trans-unit id="1ba6ae2f73582921151c31506b596f41216de90c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LONG&lt;/code&gt; number format style.</source>
          <target state="translated">该 &lt;code&gt;LONG&lt;/code&gt; 数字格式的风格。</target>
        </trans-unit>
        <trans-unit id="d6b5e428374ca40e15cacba872157456e91fd39f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; finishes to load the document. See also the definition of the &lt;code&gt;LSLoadEvent&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;LSParser&lt;/code&gt; 完成对文档的加载。另请参见 &lt;code&gt;LSLoadEvent&lt;/code&gt; 接口的定义。</target>
        </trans-unit>
        <trans-unit id="24fb60957485d297ee80a09e8ce85ca8ca0ba39b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; signals progress as data is parsed. This specification does not attempt to define exactly when progress events should be dispatched. That is intentionally left as implementation-dependent. Here is one example of how an application might dispatch progress events: Once the parser starts receiving data, a progress event is dispatched to indicate that the parsing starts. From there on, a progress event is dispatched for every 4096 bytes of data that is received and processed. This is only one example, though, and implementations can choose to dispatch progress events at any time while parsing, or not dispatch them at all. See also the definition of the &lt;code&gt;LSProgressEvent&lt;/code&gt; interface.</source>
          <target state="translated">所述 &lt;code&gt;LSParser&lt;/code&gt; 作为数据被解析信号进步。本规范未尝试准确定义何时应调度进度事件。故意将其保留为依赖于实现。这是应用程序可能如何调度进度事件的一个示例：解析器开始接收数据后，将调度进度事件以指示解析开始。从那里开始，对于接收和处理的每4096字节数据，将调度一个进度事件。但是，这只是一个示例，实现可以选择在解析时随时调度进度事件，也可以根本不调度它们。另请参见 &lt;code&gt;LSProgressEvent&lt;/code&gt; 接口的定义。</target>
        </trans-unit>
        <trans-unit id="b5684589f50bcba0622244d4195787b54fb19754" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; will call this method before opening any external resource, including the external DTD subset, external entities referenced within the DTD, and external entities referenced within the document element (however, the top-level document entity is not passed to this method). The application may then request that the &lt;code&gt;LSParser&lt;/code&gt; resolve the external resource itself, that it use an alternative URI, or that it use an entirely different input source.</source>
          <target state="translated">所述 &lt;code&gt;LSParser&lt;/code&gt; 将打开任何外部资源，包括外部DTD子集，在DTD中引用的外部实体，并且在文档元素（然而，顶级文档实体未被传递给此方法）内引用的外部实体之前调用此方法。然后，应用程序可以请求 &lt;code&gt;LSParser&lt;/code&gt; 自己解析外部资源，使用替代URI或使用完全不同的输入源。</target>
        </trans-unit>
        <trans-unit id="fdd3b33932c3d78818e6cfefc7e1379df1e81cc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; will then allow the application to intercept any external entities, including the external DTD subset and external parameter entities, before including them. The top-level document entity is never passed to the &lt;code&gt;resolveResource&lt;/code&gt; method.</source>
          <target state="translated">然后， &lt;code&gt;LSParser&lt;/code&gt; 将允许应用程序在包含它们之前拦截任何外部实体，包括外部DTD子集和外部参数实体。顶级文档实体永远不会传递给 &lt;code&gt;resolveResource&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="85452716c344379ce6f46987e158daa17b45c892" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSParser&lt;/code&gt; will use the &lt;code&gt;LSInput&lt;/code&gt; object to determine how to read data. The &lt;code&gt;LSParser&lt;/code&gt; will look at the different inputs specified in the &lt;code&gt;LSInput&lt;/code&gt; in the following order to know which one to read from, the first one that is not null and not an empty string will be used:</source>
          <target state="translated">该 &lt;code&gt;LSParser&lt;/code&gt; 将使用 &lt;code&gt;LSInput&lt;/code&gt; 中的对象来确定如何读取数据。该 &lt;code&gt;LSParser&lt;/code&gt; 将着眼于指定的不同的输入 &lt;code&gt;LSInput&lt;/code&gt; 中按以下顺序知道哪一个从，第一个是不为空，而不是一个空字符串将被用来阅读：</target>
        </trans-unit>
        <trans-unit id="8385bbcd998f782ed6e1f77152400b1721a89972" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LSSerializer&lt;/code&gt; will use the &lt;code&gt;LSOutput&lt;/code&gt; object to determine where to serialize the output to. The &lt;code&gt;LSSerializer&lt;/code&gt; will look at the different outputs specified in the &lt;code&gt;LSOutput&lt;/code&gt; in the following order to know which one to output to, the first one that is not null and not an empty string will be used:</source>
          <target state="translated">所述 &lt;code&gt;LSSerializer&lt;/code&gt; 将使用 &lt;code&gt;LSOutput&lt;/code&gt; 对象，以确定到所述输出序列化到。所述 &lt;code&gt;LSSerializer&lt;/code&gt; 将着眼于在指定的不同的输出 &lt;code&gt;LSOutput&lt;/code&gt; 以下顺序知道哪一个输出到，即不为空，而不是一个空字符串将被用于第一个：</target>
        </trans-unit>
        <trans-unit id="9290bae2dd98060748530a990a5b9934c224d813" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LayerUI&lt;/code&gt; differs from the UI delegates of the other components, because it is LookAndFeel independent and is not updated by default when the system LookAndFeel is changed.</source>
          <target state="translated">该 &lt;code&gt;LayerUI&lt;/code&gt; 不同于其它组件的UI委托，因为它的LookAndFeel独立的，默认情况下不更新时，系统的LookAndFeel改变。</target>
        </trans-unit>
        <trans-unit id="30a19dcac608ceb517d3a3561447251ee1e2014f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Line&lt;/code&gt; interface represents a mono or multi-channel audio feed.</source>
          <target state="translated">该 &lt;code&gt;Line&lt;/code&gt; 接口表示单声道或多声道音频馈送。</target>
        </trans-unit>
        <trans-unit id="c0a9c7f256b3eaca5dedae690146aa91b18206a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Line&lt;/code&gt; interface represents a mono or multi-channel audio feed. A line is an element of the digital audio &quot;pipeline,&quot; such as a mixer, an input or output port, or a data path into or out of a mixer.</source>
          <target state="translated">该 &lt;code&gt;Line&lt;/code&gt; 接口表示单声道或多声道音频馈送。线路是数字音频&amp;ldquo;管道&amp;rdquo;的元素，例如混频器，输入或输出端口或进入或流出混频器的数据路径。</target>
        </trans-unit>
        <trans-unit id="12ff24d6407a52b7dc2753e301cab6bdaa7ab15a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineBreakMeasurer&lt;/code&gt; class allows styled text to be broken into lines (or segments) that fit within a particular visual advance.</source>
          <target state="translated">所述 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 类允许样式化的文本被分成行（或段）的特定的可视advance配合。</target>
        </trans-unit>
        <trans-unit id="70b0f123d2e6f96d4d1b70fcd70bc4ae2d723f77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineBreakMeasurer&lt;/code&gt; class allows styled text to be broken into lines (or segments) that fit within a particular visual advance. This is useful for clients who wish to display a paragraph of text that fits within a specific width, called the &lt;b&gt;wrapping width&lt;/b&gt;.</source>
          <target state="translated">所述 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 类允许样式化的文本被分成行（或段）的特定的可视advance配合。这对于希望显示适合特定宽度（称为自动&lt;b&gt;换行宽度）&lt;/b&gt;的文本段落的客户很有用。</target>
        </trans-unit>
        <trans-unit id="5d3a35d12e8c0c113e33da5350a5b5580d8cb3c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops.</source>
          <target state="translated">该 &lt;code&gt;LineEvent&lt;/code&gt; 类封装某一行每次打开，关闭，启动或停止时向其侦听器发送。</target>
        </trans-unit>
        <trans-unit id="1757f3f9d53b925c75021680d8beaafc5e2dbd56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops. Each of these four state changes is represented by a corresponding type of event. A listener receives the event as a parameter to its &lt;a href=&quot;linelistener#update(javax.sound.sampled.LineEvent)&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; method. By querying the event, the listener can learn the type of event, the line responsible for the event, and how much data the line had processed when the event occurred.</source>
          <target state="translated">该 &lt;code&gt;LineEvent&lt;/code&gt; 类封装某一行每次打开，关闭，启动或停止时向其侦听器发送。这四个状态变化中的每一个都由相应的事件类型表示。侦听器将事件作为其&lt;a href=&quot;linelistener#update(javax.sound.sampled.LineEvent)&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;方法的参数来接收。通过查询事件，侦听器可以了解事件的类型，负责事件的行以及事件发生时该行已处理了多少数据。</target>
        </trans-unit>
        <trans-unit id="537f7328063a159d8e4878b6fccbf45636c737b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops. Each of these four state changes is represented by a corresponding type of event. A listener receives the event as a parameter to its &lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; method. By querying the event, the listener can learn the type of event, the line responsible for the event, and how much data the line had processed when the event occurred.</source>
          <target state="translated">该 &lt;code&gt;LineEvent&lt;/code&gt; 类封装某一行每次打开，关闭，启动或停止时向其侦听器发送。这四个状态变化中的每一个都由相应的事件类型表示。侦听器将事件作为其&lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;方法的参数来接收。通过查询事件，侦听器可以了解事件的类型，负责事件的行以及事件发生时该行已处理了多少数据。</target>
        </trans-unit>
        <trans-unit id="a317f9411bdfedbd114bb89ebf0f60e340b551a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineMetrics&lt;/code&gt; class allows access to the metrics needed to layout characters along a line and to layout of a set of lines.</source>
          <target state="translated">所述 &lt;code&gt;LineMetrics&lt;/code&gt; 类允许访问沿着线和一组线的布局所需要的布局字符的指标。</target>
        </trans-unit>
        <trans-unit id="c8c1ff382b3ddfcfd21eb439e247cc38410f25c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineMetrics&lt;/code&gt; class allows access to the metrics needed to layout characters along a line and to layout of a set of lines. A &lt;code&gt;LineMetrics&lt;/code&gt; object encapsulates the measurement information associated with a run of text.</source>
          <target state="translated">所述 &lt;code&gt;LineMetrics&lt;/code&gt; 类允许访问沿着线和一组线的布局所需要的布局字符的指标。甲 &lt;code&gt;LineMetrics&lt;/code&gt; 对象封装与文本串相关联的测量信息。</target>
        </trans-unit>
        <trans-unit id="ec210c5e83962b1ca145d61862892dacceb18265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearGradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern.</source>
          <target state="translated">所述 &lt;code&gt;LinearGradientPaint&lt;/code&gt; 类提供一种方法来填充&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;与线性颜色渐变图案。</target>
        </trans-unit>
        <trans-unit id="33c4bb6b8473c6e7b6f098a98815d32e62391d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinearGradientPaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a linear color gradient pattern. The user may specify two or more gradient colors, and this paint will provide an interpolation between each color. The user also specifies start and end points which define where in user space the color gradient should begin and end.</source>
          <target state="translated">所述 &lt;code&gt;LinearGradientPaint&lt;/code&gt; 类提供一种方法来填充&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;与线性颜色渐变图案。用户可以指定两种或多种渐变颜色，并且此绘画将在每种颜色之间提供插值。用户还指定起点和终点，这些起点和终点定义了用户空间中颜色渐变的起点和终点。</target>
        </trans-unit>
        <trans-unit id="590ddeb3999b2dcd7c427e16493246a3a0921d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinkStyle&lt;/code&gt; interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document.</source>
          <target state="translated">所述 &lt;code&gt;LinkStyle&lt;/code&gt; 接口提供了一个样式表可以从负责将它链接到一个文档节点被检索的机制。</target>
        </trans-unit>
        <trans-unit id="ae5dece67b75f3313ffc73047158c0bfd013b9ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LinkStyle&lt;/code&gt; interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the &lt;code&gt;LinkStyle&lt;/code&gt; interface can be obtained using binding-specific casting methods on an instance of a linking node (&lt;code&gt;HTMLLinkElement&lt;/code&gt;, &lt;code&gt;HTMLStyleElement&lt;/code&gt; or &lt;code&gt;ProcessingInstruction&lt;/code&gt; in DOM Level 2).</source>
          <target state="translated">所述 &lt;code&gt;LinkStyle&lt;/code&gt; 接口提供了一个样式表可以从负责将它链接到一个文档节点被检索的机制。所述的实例 &lt;code&gt;LinkStyle&lt;/code&gt; 可使用上的连接节点（的一个实例结合特异性铸造方法获得接口 &lt;code&gt;HTMLLinkElement&lt;/code&gt; ， &lt;code&gt;HTMLStyleElement&lt;/code&gt; 或 &lt;code&gt;ProcessingInstruction&lt;/code&gt; DOM级别2）。</target>
        </trans-unit>
        <trans-unit id="c21b1c3905ebd125a9dff4a98c4563b298e71acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; component presents the user with a scrolling list of text items.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 组件显示的文本项滚动列表中的用户。</target>
        </trans-unit>
        <trans-unit id="1cd681191d602e2ed6ce9e4db14238ca5d03680a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; component presents the user with a scrolling list of text items. The list can be set up so that the user can choose either one item or multiple items.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 组件显示的文本项滚动列表中的用户。可以设置列表，以便用户可以选择一项或多项。</target>
        </trans-unit>
        <trans-unit id="19683692a3cac37612a80dd55d3fd092b1967a4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface places additional stipulations, beyond those specified in the &lt;code&gt;Collection&lt;/code&gt; interface, on the contracts of the &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;hashCode&lt;/code&gt; methods. Declarations for other inherited methods are also included here for convenience.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 界面放置额外的约定，超过指定 &lt;code&gt;Collection&lt;/code&gt; 界面上的合同 &lt;code&gt;iterator&lt;/code&gt; ， &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;equals&lt;/code&gt; 和 &lt;code&gt;hashCode&lt;/code&gt; 方法。为方便起见，此处还包含其他继承方法的声明。</target>
        </trans-unit>
        <trans-unit id="a0ba9a5b693daac5c19b3fccbb0faf8853cdabbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides a special iterator, called a &lt;code&gt;ListIterator&lt;/code&gt;, that allows element insertion and replacement, and bidirectional access in addition to the normal operations that the &lt;code&gt;Iterator&lt;/code&gt; interface provides. A method is provided to obtain a list iterator that starts at a specified position in the list.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 界面提供了一个特殊的迭代器，称为 &lt;code&gt;ListIterator&lt;/code&gt; ，它允许元素插入和替换，以及除该正常操作的双向访问 &lt;code&gt;Iterator&lt;/code&gt; 接口提供。提供一种获取列表迭代器的方法，该列表迭代器从列表中的指定位置开始。</target>
        </trans-unit>
        <trans-unit id="2b090913d205b579f0fbce24a3f90785bc1ba625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides four methods for positional (indexed) access to list elements. Lists (like Java arrays) are zero based. Note that these operations may execute in time proportional to the index value for some implementations (the &lt;code&gt;LinkedList&lt;/code&gt; class, for example). Thus, iterating over the elements in a list is typically preferable to indexing through it if the caller does not know the implementation.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 接口提供用于位置（索引）访问列表元素四种方法。列表（如Java数组）从零开始。请注意，对于某些实现（例如， &lt;code&gt;LinkedList&lt;/code&gt; 类），这些操作可能在时间上与索引值成比例执行。因此，如果调用者不知道实现，则遍历列表中的元素通常比对其进行索引更可取。</target>
        </trans-unit>
        <trans-unit id="70355f014486445e2f19c1b1f444e1ecb381cd12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides two methods to efficiently insert and remove multiple elements at an arbitrary point in the list.</source>
          <target state="translated">的 &lt;code&gt;List&lt;/code&gt; 界面提供了两种方法高效地插入和在列表中的任意点移除多个元件。</target>
        </trans-unit>
        <trans-unit id="fe82cde6eede4b779cf568cf70079098275cd445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides two methods to search for a specified object. From a performance standpoint, these methods should be used with caution. In many implementations they will perform costly linear searches.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 界面提供了两种方法来搜索指定的对象。从性能的角度来看，应谨慎使用这些方法。在许多实现中，它们将执行昂贵的线性搜索。</target>
        </trans-unit>
        <trans-unit id="d5f5959f322b845c985e2f025760b04b9f414ef2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ListDataListener&lt;/code&gt; that's added to the &lt;code&gt;JLists&lt;/code&gt; model at &lt;code&gt;installUI time&lt;/code&gt;, and whenever the JList.model property changes.</source>
          <target state="translated">在 &lt;code&gt;installUI time&lt;/code&gt; 以及每当JList.model属性更改时，添加到 &lt;code&gt;JLists&lt;/code&gt; 模型的 &lt;code&gt;ListDataListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf00cf318d8d3e87e034ff374fa7601d594536b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ListSelectionModel&lt;/code&gt; of the table, used to keep track of row selections.</source>
          <target state="translated">表的 &lt;code&gt;ListSelectionModel&lt;/code&gt; ，用于跟踪行选择。</target>
        </trans-unit>
        <trans-unit id="80c3e343f9a3334aa90fca73bdf887fa22a1c873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class also supports an extension mechanism that can be used to identify a calendar system. The mechanism is a form of key-value pairs, where the calendar system has the key &quot;ca&quot;. For example, the locale &quot;en-JP-u-ca-japanese&quot; represents the English language as used in Japan with the Japanese calendar system.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类也支持可被用于识别一个日历系统的扩展机制。该机制是键-值对的一种形式，其中日历系统具有键&amp;ldquo; ca&amp;rdquo;。例如，语言环境&amp;ldquo; en-JP-u-ca-japanese&amp;rdquo;表示日语与日本日历系统一起使用的英语。</target>
        </trans-unit>
        <trans-unit id="df60f90896c3c9a6114af933224b8f6b6310599a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class also supports language codes up to 8 characters in length. Therefore, the list returned by this method does not contain ALL valid codes that can be used to create Locales.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类也支持语言代码长度最多为8个字符。因此，此方法返回的列表不包含可用于创建语言环境的所有有效代码。</target>
        </trans-unit>
        <trans-unit id="ff489719e325fe97b92428c9169b9fa65846b849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class implements IETF BCP 47 which is composed of &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 &quot;Matching of Language Tags&quot;&lt;/a&gt; and &lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646 &quot;Tags for Identifying Languages&quot;&lt;/a&gt; with support for the LDML (UTS#35, &quot;Unicode Locale Data Markup Language&quot;) BCP 47-compatible extensions for locale data exchange.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类实现IETF BCP 47，它由被&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647&amp;ldquo;语言标签的匹配&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646&amp;ldquo;标签用于识别语言&amp;rdquo;&lt;/a&gt;与支持用于LDML（UTS＃35，&amp;ldquo;Unicode语言环境数据标记语言&amp;rdquo;）BCP 47兼容语言环境数据交换的扩展。</target>
        </trans-unit>
        <trans-unit id="86ef8f8b1c2cc5e0c4e3c8be8198fdebfc6064b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class implements IETF BCP 47 which is composed of &lt;a href=&quot;https://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 &quot;Matching of Language Tags&quot;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646 &quot;Tags for Identifying Languages&quot;&lt;/a&gt; with support for the LDML (UTS#35, &quot;Unicode Locale Data Markup Language&quot;) BCP 47-compatible extensions for locale data exchange.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类实现IETF BCP 47，它由被&lt;a href=&quot;https://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647&amp;ldquo;语言标签的匹配&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646&amp;ldquo;标签用于识别语言&amp;rdquo;&lt;/a&gt;与支持用于LDML（UTS＃35，&amp;ldquo;Unicode语言环境数据标记语言&amp;rdquo;）BCP 47兼容语言环境数据交换的扩展。</target>
        </trans-unit>
        <trans-unit id="b49e579633330874272c018a016eeeecd34916da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class provides a number of convenient constants that you can use to create &lt;code&gt;Locale&lt;/code&gt; objects for commonly used locales. For example, the following creates a &lt;code&gt;Locale&lt;/code&gt; object for the United States:</source>
          <target state="translated">该 &lt;code&gt;Locale&lt;/code&gt; 类提供了一些便利的常量，你可以用它来创建 &lt;code&gt;Locale&lt;/code&gt; 对象为常用的语言环境。例如，以下代码为美国创建了一个 &lt;code&gt;Locale&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="fa1e07d1d615f3001a87ae91c2a0604617a8b571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class provides three constructors:</source>
          <target state="translated">该 &lt;code&gt;Locale&lt;/code&gt; 类提供三个构造函数：</target>
        </trans-unit>
        <trans-unit id="154dd3c2315f6100804c904415eeede9ad2a13fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Logger&lt;/code&gt; that has been specified for use by &lt;code&gt;SyncProvider&lt;/code&gt; implementations</source>
          <target state="translated">已指定供 &lt;code&gt;SyncProvider&lt;/code&gt; 实现使用的 &lt;code&gt;Logger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29f650595b9f348aa19ea69fc4ffab1e764aac3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoggerFinder&lt;/code&gt; service is responsible for creating, managing, and configuring loggers to the underlying framework it uses.</source>
          <target state="translated">该 &lt;code&gt;LoggerFinder&lt;/code&gt; 服务负责创建，管理和配置记录器，它使用的基本框架。</target>
        </trans-unit>
        <trans-unit id="d949a93c9d9a78edeb4d078a66d8ba0c9af79890" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoggerFinder&lt;/code&gt; service is responsible for creating, managing, and configuring loggers to the underlying framework it uses. A logger finder is a concrete implementation of this class that has a zero-argument constructor and implements the abstract methods defined by this class. The loggers returned from a logger finder are capable of routing log messages to the logging backend this provider supports. A given invocation of the Java Runtime maintains a single system-wide LoggerFinder instance that is loaded as follows:</source>
          <target state="translated">该 &lt;code&gt;LoggerFinder&lt;/code&gt; 服务负责创建，管理和配置记录器，它使用的基本框架。记录器查找器是此类的具体实现，该类具有零参数构造函数并实现由此类定义的抽象方法。从记录器查找器返回的记录器能够将日志消息路由到此提供程序支持的记录后端。给定的Java运行时调用将维护单个系统范围的LoggerFinder实例，该实例的加载方式如下：</target>
        </trans-unit>
        <trans-unit id="753e94e16d15c98e2261f7d3bdcddbdc2d027d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; class describes the basic methods used to authenticate Subjects and provides a way to develop an application independent of the underlying authentication technology.</source>
          <target state="translated">该 &lt;code&gt;LoginContext&lt;/code&gt; 的类描述用于验证对象的基本方法和提供一种方式来开发应用程序独立于基础的认证技术。</target>
        </trans-unit>
        <trans-unit id="98c21b51d0ddf913deb3a4a49b2303d25a261498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; class describes the basic methods used to authenticate Subjects and provides a way to develop an application independent of the underlying authentication technology. A &lt;code&gt;Configuration&lt;/code&gt; specifies the authentication technology, or &lt;code&gt;LoginModule&lt;/code&gt;, to be used with a particular application. Different LoginModules can be plugged in under an application without requiring any modifications to the application itself.</source>
          <target state="translated">该 &lt;code&gt;LoginContext&lt;/code&gt; 的类描述用于验证对象的基本方法和提供一种方式来开发应用程序独立于基础的认证技术。甲 &lt;code&gt;Configuration&lt;/code&gt; 指定认证技术，或 &lt;code&gt;LoginModule&lt;/code&gt; ，与特定应用中使用。可以在应用程序下插入不同的LoginModule，而无需对应用程序本身进行任何修改。</target>
        </trans-unit>
        <trans-unit id="24bd53fa001fd556da21468c145af7d9ff2e52d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; is responsible for reading the &lt;code&gt;Configuration&lt;/code&gt; and instantiating the appropriate LoginModules. Each &lt;code&gt;LoginModule&lt;/code&gt; is initialized with a &lt;code&gt;Subject&lt;/code&gt;, a &lt;code&gt;CallbackHandler&lt;/code&gt;, shared &lt;code&gt;LoginModule&lt;/code&gt; state, and LoginModule-specific options. The &lt;code&gt;Subject&lt;/code&gt; represents the &lt;code&gt;Subject&lt;/code&gt; currently being authenticated and is updated with relevant Credentials if authentication succeeds. LoginModules use the &lt;code&gt;CallbackHandler&lt;/code&gt; to communicate with users. The &lt;code&gt;CallbackHandler&lt;/code&gt; may be used to prompt for usernames and passwords, for example. Note that the &lt;code&gt;CallbackHandler&lt;/code&gt; may be null. LoginModules which absolutely require a &lt;code&gt;CallbackHandler&lt;/code&gt; to authenticate the &lt;code&gt;Subject&lt;/code&gt; may throw a &lt;code&gt;LoginException&lt;/code&gt;. LoginModules optionally use the shared state to share information or data among themselves.</source>
          <target state="translated">该 &lt;code&gt;LoginContext&lt;/code&gt; 将是负责读取 &lt;code&gt;Configuration&lt;/code&gt; 和实例相应的LoginModules。每个 &lt;code&gt;LoginModule&lt;/code&gt; 都使用 &lt;code&gt;Subject&lt;/code&gt; ， &lt;code&gt;CallbackHandler&lt;/code&gt; ，共享的 &lt;code&gt;LoginModule&lt;/code&gt; 状态和LoginModule特定的选项进行初始化。该 &lt;code&gt;Subject&lt;/code&gt; 代表了 &lt;code&gt;Subject&lt;/code&gt; 目前正在认证，如果认证成功，则与相关证书更新。 LoginModules使用 &lt;code&gt;CallbackHandler&lt;/code&gt; 与用户通信。例如， &lt;code&gt;CallbackHandler&lt;/code&gt; 可用于提示用户名和密码。请注意， &lt;code&gt;CallbackHandler&lt;/code&gt; 可以为null。绝对需要 &lt;code&gt;CallbackHandler&lt;/code&gt; 来验证 &lt;code&gt;Subject&lt;/code&gt; 的 LoginModule 可能会抛出 &lt;code&gt;LoginException&lt;/code&gt; 。LoginModules可以选择使用共享状态在彼此之间共享信息或数据。</target>
        </trans-unit>
        <trans-unit id="b21ebcd0d4d483586ab3807b4d68805315158ccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;
 long&lt;/code&gt; in an object.</source>
          <target state="translated">所述 &lt;code&gt;Long&lt;/code&gt; 类包装基本类型的值 &lt;code&gt; long&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="d90c04bbbf4599ac5901e7f0958b186b8247c1b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;
 long&lt;/code&gt; in an object. An object of type &lt;code&gt;Long&lt;/code&gt; contains a single field whose type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Long&lt;/code&gt; 类包装基本类型的值 &lt;code&gt; long&lt;/code&gt; 中的对象。 &lt;code&gt;Long&lt;/code&gt; 类型的对象包含一个 &lt;code&gt;long&lt;/code&gt; 类型的字段。</target>
        </trans-unit>
        <trans-unit id="7801867034780a1c5fff70e8cc7e32057101d13e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;long&lt;/code&gt; in an object.</source>
          <target state="translated">所述 &lt;code&gt;Long&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;long&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="e7f5fb0211de99c25185ee45c0d498d693daf127" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;long&lt;/code&gt; in an object. An object of type &lt;code&gt;Long&lt;/code&gt; contains a single field whose type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Long&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;long&lt;/code&gt; 中的对象。 &lt;code&gt;Long&lt;/code&gt; 类型的对象包含一个 &lt;code&gt;long&lt;/code&gt; 类型的字段。</target>
        </trans-unit>
        <trans-unit id="b73aaaf679d63a88eb466b691fdb58c718db13f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification.</source>
          <target state="translated">所述 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 类用于描述MBean射出，对于给定的Java类的通知不同的通知实例的特性。</target>
        </trans-unit>
        <trans-unit id="8c0d93d2a05b2c51593dc81a25c6a33e58b7c2f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification. If an MBean emits notifications that can be instances of different Java classes, then the metadata for that MBean should provide an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; object for each of these notification Java classes.</source>
          <target state="translated">所述 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 类用于描述MBean射出，对于给定的Java类的通知不同的通知实例的特性。如果MBean发出的通知可能是不同Java类的实例，则该MBean的元数据应为每个这些通知Java类提供一个 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="de572685114708d2dbbbf2708ab7dd9cc02d6fb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached.</source>
          <target state="translated">连接器服务器连接到的 &lt;code&gt;MBeanServer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d306b6b1cd1b367a72d76620a44c2997e616fcf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached. This is the last value passed to &lt;a href=&quot;#setMBeanServer(javax.management.MBeanServer)&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; on this object, or null if that method has never been called.</source>
          <target state="translated">连接器服务器连接到的 &lt;code&gt;MBeanServer&lt;/code&gt; 。这是在此对象&lt;a href=&quot;#setMBeanServer(javax.management.MBeanServer)&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt;的最后一个值；如果从未调用该方法，则为null。</target>
        </trans-unit>
        <trans-unit id="ba64fec83d48a2cbf38343d1715ffb0852ef3636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached. This is the last value passed to &lt;a href=&quot;rmiserverimpl#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; on this object, or null if that method has never been called.</source>
          <target state="translated">连接器服务器连接到的 &lt;code&gt;MBeanServer&lt;/code&gt; 。这是在此对象&lt;a href=&quot;rmiserverimpl#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt;的最后一个值；如果从未调用该方法，则为null。</target>
        </trans-unit>
        <trans-unit id="0a8a2b2991ac645b67698f44548fc7e282981c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MLET&lt;/code&gt; tag has the following syntax:</source>
          <target state="translated">该 &lt;code&gt;MLET&lt;/code&gt; 标记的语法如下：</target>
        </trans-unit>
        <trans-unit id="596a31ac86272faf93e710d63fa1745d1a5e9ca2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MODULE&lt;/code&gt; lookup mode serves to authenticate that the lookup object was created by code in the caller module (or derived from a lookup object originally created by the caller). A lookup object with the &lt;code&gt;MODULE&lt;/code&gt; lookup mode can be shared with trusted parties without giving away &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PACKAGE&lt;/code&gt; access to the caller.</source>
          <target state="translated">所述 &lt;code&gt;MODULE&lt;/code&gt; 的查找模式用于认证该查找目的通过代码呼叫者模块中创建（或从呼叫者最初创建的查找对象派生）。可以与受信方共享具有 &lt;code&gt;MODULE&lt;/code&gt; 查找模式的查找对象，而无需向调用者提供 &lt;code&gt;PRIVATE&lt;/code&gt; 和 &lt;code&gt;PACKAGE&lt;/code&gt; 访问权限。</target>
        </trans-unit>
        <trans-unit id="41d6128d4ea5a41adf8b5c56d1c50b772d8bb991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManagementFactory&lt;/code&gt; class is a factory class for getting managed beans for the Java platform.</source>
          <target state="translated">该 &lt;code&gt;ManagementFactory&lt;/code&gt; 类是获得托管Bean针对Java平台的工厂类。</target>
        </trans-unit>
        <trans-unit id="d71986942be1c54b6a6ae12607dd5829e664ceed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManagementFactory&lt;/code&gt; class is a factory class for getting managed beans for the Java platform. This class consists of static methods each of which returns one or more</source>
          <target state="translated">该 &lt;code&gt;ManagementFactory&lt;/code&gt; 类是获得托管Bean针对Java平台的工厂类。此类由静态方法组成，每个方法均返回一个或多个</target>
        </trans-unit>
        <trans-unit id="da35ea78eb0bbad93818f873018df137e9342c23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map.Entry&lt;/code&gt; elements traversed by the &lt;code&gt;iterator&lt;/code&gt; or &lt;code&gt;spliterator&lt;/code&gt; do &lt;em&gt;not&lt;/em&gt; support the &lt;code&gt;setValue&lt;/code&gt; operation.</source>
          <target state="translated">该 &lt;code&gt;Map.Entry&lt;/code&gt; 的由穿越元素 &lt;code&gt;iterator&lt;/code&gt; 或 &lt;code&gt;spliterator&lt;/code&gt; 做&lt;em&gt;不&lt;/em&gt;支持 &lt;code&gt;setValue&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="227699f0dce7484c6d17e1d7babad6ee5858c1d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; interface provides three</source>
          <target state="translated">该 &lt;code&gt;Map&lt;/code&gt; 界面提供了三种</target>
        </trans-unit>
        <trans-unit id="bc88794f3bfb66bef560415a38768466fee45791" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; object</source>
          <target state="translated">该 &lt;code&gt;Map&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="d3587321566f5e4b877578d4a8ea85fc41c24c79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">传递给 &lt;code&gt;JMXConnectorProvider&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 参数是一个新的只读 &lt;code&gt;Map&lt;/code&gt; ，它包含&lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;environment&lt;/code&gt; 参数中的所有条目（如果有的话）。此外，如果 &lt;code&gt;environment&lt;/code&gt; 参数中不存在 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 密钥，则会将其添加到新的只读 &lt;code&gt;Map&lt;/code&gt; 中。关联的值是调用线程的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="9428a88bd8c1667c06a6e1c738d06e6c61771810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">传递给 &lt;code&gt;JMXConnectorProvider&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 参数是一个新的只读 &lt;code&gt;Map&lt;/code&gt; ，它包含&lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;environment&lt;/code&gt; 参数中的所有条目（如果有）。此外，如果 &lt;code&gt;environment&lt;/code&gt; 参数中不存在 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 密钥，则会将其添加到新的只读 &lt;code&gt;Map&lt;/code&gt; 中。关联的值是调用线程的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="f3432ba54f4dce75c626f795ba794c66e77d0df3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">传递给 &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 参数是一个新的只读 &lt;code&gt;Map&lt;/code&gt; ，它包含&lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;environment&lt;/code&gt; 参数中的所有条目（如果有的话）。此外，如果 &lt;code&gt;environment&lt;/code&gt; 参数中不存在 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 密钥，则会将其添加到新的只读 &lt;code&gt;Map&lt;/code&gt; 中。关联的值是调用线程的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="fccf20df23e6200637aa7b23e7388c8a9a88bb06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">传递给 &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 参数是一个新的只读 &lt;code&gt;Map&lt;/code&gt; ，它包含&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;environment&lt;/code&gt; 参数中的所有条目（如果有）。此外，如果 &lt;code&gt;environment&lt;/code&gt; 参数中不存在 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 密钥，则会将其添加到新的只读 &lt;code&gt;Map&lt;/code&gt; 中。关联的值是调用线程的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="6c1109a26629152d8e80c4167284a5176959aab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt;-based constructor and &lt;code&gt;deriveFont&lt;/code&gt; APIs ignore the FONT attribute, and it is not retained by the Font; the static &lt;a href=&quot;#getFont(java.util.Map)&quot;&gt;&lt;code&gt;getFont(java.util.Map&amp;lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&amp;gt;)&lt;/code&gt;&lt;/a&gt; method should be used if the FONT attribute might be present. See &lt;a href=&quot;font/textattribute#FONT&quot;&gt;&lt;code&gt;TextAttribute.FONT&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">基于 &lt;code&gt;Map&lt;/code&gt; 的构造函数和 &lt;code&gt;deriveFont&lt;/code&gt; API会忽略FONT属性，并且Font不会保留它。如果可能存在FONT属性，则应使用静态&lt;a href=&quot;#getFont(java.util.Map)&quot;&gt; &lt;code&gt;getFont(java.util.Map&amp;lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&amp;gt;)&lt;/code&gt; &lt;/a&gt;方法。有关更多信息，请参见&lt;a href=&quot;font/textattribute#FONT&quot;&gt; &lt;code&gt;TextAttribute.FONT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8bbff55817a986779ffb6c9c66f822fff7985bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaList&lt;/code&gt; interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented.</source>
          <target state="translated">该 &lt;code&gt;MediaList&lt;/code&gt; 接口提供的媒体的有序集合的抽象，没有定义或约束如何实现此集合。</target>
        </trans-unit>
        <trans-unit id="3aad9781c06332bf9bcb0974dab7541fa53110ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaList&lt;/code&gt; interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium &lt;code&gt;&quot;all&quot;&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;MediaList&lt;/code&gt; 接口提供的媒体的有序集合的抽象，没有定义或约束如何实现此集合。空列表与包含媒介 &lt;code&gt;&quot;all&quot;&lt;/code&gt; 的列表相同。</target>
        </trans-unit>
        <trans-unit id="5865a336095d84a9779ddde69b513d49e053e443" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaSize&lt;/code&gt; is in turn used to locate the &lt;code&gt;MediaSizeName&lt;/code&gt; object. This method may return &lt;code&gt;null&lt;/code&gt; if the closest matching &lt;code&gt;MediaSize&lt;/code&gt; has no corresponding &lt;code&gt;Media&lt;/code&gt; instance.</source>
          <target state="translated">所述 &lt;code&gt;MediaSize&lt;/code&gt; 被反过来用于定位 &lt;code&gt;MediaSizeName&lt;/code&gt; 对象。如果最匹配的 &lt;code&gt;MediaSize&lt;/code&gt; 没有对应的 &lt;code&gt;Media&lt;/code&gt; 实例，则此方法可能返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a070dabcac26392a8318450e8b1d538eeddd0be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaTracker&lt;/code&gt; class is a utility class to track the status of a number of media objects.</source>
          <target state="translated">该 &lt;code&gt;MediaTracker&lt;/code&gt; 类是一个实用工具类，跟踪多种媒体对象的状态。</target>
        </trans-unit>
        <trans-unit id="17601962e75c98c387ad4765276e1cdfa2694759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MediaTracker&lt;/code&gt; class is a utility class to track the status of a number of media objects. Media objects could include audio clips as well as images, though currently only images are supported.</source>
          <target state="translated">该 &lt;code&gt;MediaTracker&lt;/code&gt; 类是一个实用工具类，跟踪多种媒体对象的状态。媒体对象可以包括音频剪辑和图像，尽管当前仅支持图像。</target>
        </trans-unit>
        <trans-unit id="8b01e42df4caf57c30334c7ef0ef0673760d8b60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given &lt;code&gt;pushLevel&lt;/code&gt; argument and buffer size argument are used.</source>
          <target state="translated">所述 &lt;code&gt;MemoryHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的 &lt;code&gt;pushLevel&lt;/code&gt; 参数和缓冲区大小参数被使用。</target>
        </trans-unit>
        <trans-unit id="5651aaa22c68d9ecf5c414f98e30a0e7dbf81cb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryMXBean&lt;/code&gt; object returned by &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; interface that allows a listener to be registered within the &lt;code&gt;MemoryMXBean&lt;/code&gt; as a notification listener. Below is an example code that registers a &lt;code&gt;MyListener&lt;/code&gt; to handle notification emitted by the &lt;code&gt;MemoryMXBean&lt;/code&gt;.</source>
          <target state="translated">由&lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;MemoryMXBean&lt;/code&gt; 对象实现了&lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;接口，该接口允许在 &lt;code&gt;MemoryMXBean&lt;/code&gt; 中将侦听器注册为通知侦听器。下面是注册的示例性代码 &lt;code&gt;MyListener&lt;/code&gt; 由发射手柄通知 &lt;code&gt;MemoryMXBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e6c1d6da906bc1b50ed3822bfcdb7ac20a1aee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryMXBean&lt;/code&gt; object returned by &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; interface that allows a listener to be registered within the &lt;code&gt;MemoryMXBean&lt;/code&gt; as a notification listener. Below is an example code that registers a &lt;code&gt;MyListener&lt;/code&gt; to handle notification emitted by the &lt;code&gt;MemoryMXBean&lt;/code&gt;.</source>
          <target state="translated">由&lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;MemoryMXBean&lt;/code&gt; 对象实现了&lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;接口，该接口允许在 &lt;code&gt;MemoryMXBean&lt;/code&gt; 中将侦听器注册为通知侦听器。下面是注册的示例性代码 &lt;code&gt;MyListener&lt;/code&gt; 由发射手柄通知 &lt;code&gt;MemoryMXBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33bb8679046b19786cafc3f83df011fe2fd08c26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MenuBar&lt;/code&gt; class encapsulates the platform's concept of a menu bar bound to a frame.</source>
          <target state="translated">在 &lt;code&gt;MenuBar&lt;/code&gt; 类封装绑定到框架的菜单栏的平台概念。</target>
        </trans-unit>
        <trans-unit id="14b089e0c21d4e5f4b76d1c03ed79e79cce03f7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MenuBar&lt;/code&gt; class encapsulates the platform's concept of a menu bar bound to a frame. In order to associate the menu bar with a &lt;code&gt;Frame&lt;/code&gt; object, call the frame's &lt;code&gt;setMenuBar&lt;/code&gt; method.</source>
          <target state="translated">在 &lt;code&gt;MenuBar&lt;/code&gt; 类封装绑定到框架的菜单栏的平台概念。为了将菜单栏与 &lt;code&gt;Frame&lt;/code&gt; 对象关联，请调用框架的 &lt;code&gt;setMenuBar&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="dc83b8a910473a027cff1f2424c20667476e8789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MenuShortcut&lt;/code&gt; class represents a keyboard accelerator for a MenuItem.</source>
          <target state="translated">该 &lt;code&gt;MenuShortcut&lt;/code&gt; 类表示菜单项键盘加速器。</target>
        </trans-unit>
        <trans-unit id="53c61256ecec8100f7f9a41d04960f58fac56df7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessageInfo&lt;/code&gt; class provides additional ancillary information about messages.</source>
          <target state="translated">所述 &lt;code&gt;MessageInfo&lt;/code&gt; 类提供有关消息的其他辅助信息。</target>
        </trans-unit>
        <trans-unit id="c0e62f9bd1ae525e07714ef0b4ef19ee8691114c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessageInfo&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; if this channel is in non-blocking mode and no messages are immediately available or the notification handler returns &lt;a href=&quot;handlerresult#RETURN&quot;&gt;&lt;code&gt;RETURN&lt;/code&gt;&lt;/a&gt; after handling a notification</source>
          <target state="translated">的 &lt;code&gt;MessageInfo&lt;/code&gt; ， &lt;code&gt;null&lt;/code&gt; 如果此信道是在非阻塞模式和没有消息可立即或通知处理程序返回&lt;a href=&quot;handlerresult#RETURN&quot;&gt; &lt;code&gt;RETURN&lt;/code&gt; &lt;/a&gt;处理的通知后</target>
        </trans-unit>
        <trans-unit id="600646097950dd1f186fdf48626c3f0e7f2ff708" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessageInfo&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; if this channel is in non-blocking mode and no messages are immediately available or the notification handler returns &lt;code&gt;RETURN&lt;/code&gt; after handling a notification</source>
          <target state="translated">的 &lt;code&gt;MessageInfo&lt;/code&gt; ， &lt;code&gt;null&lt;/code&gt; 如果此信道是在非阻塞模式和没有消息可立即或通知处理程序返回 &lt;code&gt;RETURN&lt;/code&gt; 处理的通知后</target>
        </trans-unit>
        <trans-unit id="82571554e721d419914c56f461c9899435b69ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a &lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;MetaEventListener&lt;/code&gt; 接口应由其实例需要在通知执行&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;处理了&lt;a href=&quot;metamessage&quot;&gt; &lt;code&gt;MetaMessage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b78a4c32d697abee0a6159e1d2a87909e03931ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a &lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;. To register a &lt;code&gt;MetaEventListener&lt;/code&gt; object to receive such notifications, pass it as the argument to the &lt;a href=&quot;sequencer#addMetaEventListener(javax.sound.midi.MetaEventListener)&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;MetaEventListener&lt;/code&gt; 接口应由其实例需要在通知执行&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;处理了&lt;a href=&quot;metamessage&quot;&gt; &lt;code&gt;MetaMessage&lt;/code&gt; &lt;/a&gt;。要注册 &lt;code&gt;MetaEventListener&lt;/code&gt; 对象以接收此类通知，请将其作为参数传递给 &lt;code&gt;Sequencer&lt;/code&gt; 的&lt;a href=&quot;sequencer#addMetaEventListener(javax.sound.midi.MetaEventListener)&quot;&gt; &lt;code&gt;addMetaEventListener&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="5864b743917b0ab45bb87ab5b12728c29a56a04c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has processed a &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;MetaEventListener&lt;/code&gt; 接口应由其实例需要在通知执行 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 处理了 &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91e79b4c499b3f35a4dda98bb1b312a4085719a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has processed a &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. To register a &lt;code&gt;MetaEventListener&lt;/code&gt; object to receive such notifications, pass it as the argument to the &lt;code&gt;&lt;a href=&quot;sequencer#addMetaEventListener-javax.sound.midi.MetaEventListener-&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;MetaEventListener&lt;/code&gt; 接口应由其实例需要在通知执行 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 处理了 &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。若要注册 &lt;code&gt;MetaEventListener&lt;/code&gt; 对象以接收此类通知，请将其作为参数传递给 &lt;code&gt;Sequencer&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;sequencer#addMetaEventListener-javax.sound.midi.MetaEventListener-&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d01c40b457907a7d5e20ffd74ad4b85ee2009577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MidiSystem&lt;/code&gt; class provides access to the installed MIDI system resources, including devices such as synthesizers, sequencers, and MIDI input and output ports.</source>
          <target state="translated">所述 &lt;code&gt;MidiSystem&lt;/code&gt; 类提供对已安装的MIDI系统资源，包括诸如合成器，定序器，和MIDI输入和输出端口。</target>
        </trans-unit>
        <trans-unit id="a80d68435a1b6165c900a036816b9bec6091ed82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MidiSystem&lt;/code&gt; class provides access to the installed MIDI system resources, including devices such as synthesizers, sequencers, and MIDI input and output ports. A typical simple MIDI application might begin by invoking one or more &lt;code&gt;MidiSystem&lt;/code&gt; methods to learn what devices are installed and to obtain the ones needed in that application.</source>
          <target state="translated">所述 &lt;code&gt;MidiSystem&lt;/code&gt; 类提供对已安装的MIDI系统资源，包括诸如合成器，定序器，和MIDI输入和输出端口。典型的简单MIDI应用程序可能始于调用一个或多个 &lt;code&gt;MidiSystem&lt;/code&gt; 方法以了解安装了哪些设备并获取该应用程序所需的设备。</target>
        </trans-unit>
        <trans-unit id="b52eb410a08736554d78710757e24ecd5480df64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description.</source>
          <target state="translated">该 &lt;code&gt;Mixer.Info&lt;/code&gt; 类表示关于音频混频器的信息，包括产品的名称，版本和供应商，以及文本描述。</target>
        </trans-unit>
        <trans-unit id="2413f98f580324031afa36fa47e305da2ad575eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description. This information may be retrieved through the &lt;a href=&quot;mixer#getMixerInfo()&quot;&gt;&lt;code&gt;getMixerInfo&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;Mixer&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;Mixer.Info&lt;/code&gt; 类表示关于音频混频器的信息，包括产品的名称，版本和供应商，以及文本描述。可以通过 &lt;code&gt;Mixer&lt;/code&gt; 接口的&lt;a href=&quot;mixer#getMixerInfo()&quot;&gt; &lt;code&gt;getMixerInfo&lt;/code&gt; &lt;/a&gt;方法检索此信息。</target>
        </trans-unit>
        <trans-unit id="e56a0592321beb830ad7682fabbd101887d52b64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description. This information may be retrieved through the &lt;a href=&quot;mixer#getMixerInfo--&quot;&gt;&lt;code&gt;getMixerInfo&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;Mixer&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;Mixer.Info&lt;/code&gt; 类表示关于音频混频器的信息，包括产品的名称，版本和供应商，以及文本描述。可以通过 &lt;code&gt;Mixer&lt;/code&gt; 接口的&lt;a href=&quot;mixer#getMixerInfo--&quot;&gt; &lt;code&gt;getMixerInfo&lt;/code&gt; &lt;/a&gt;方法检索此信息。</target>
        </trans-unit>
        <trans-unit id="cb9a70e7236c1e2ff693bd4d1a815405e4adcc77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseEvent&lt;/code&gt; interface provides specific contextual information associated with Mouse events.</source>
          <target state="translated">该 &lt;code&gt;MouseEvent&lt;/code&gt; 接口提供与鼠标事件相关联的特定上下文信息。</target>
        </trans-unit>
        <trans-unit id="29d1d5cbe4705a95fc4625d67c369d249af68cf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseListener&lt;/code&gt; listens to events.</source>
          <target state="translated">该 &lt;code&gt;MouseListener&lt;/code&gt; 的监听事件。</target>
        </trans-unit>
        <trans-unit id="58edd9693b150e70063bc2843ee9db0174fe97ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseMotionListener&lt;/code&gt; listens to events.</source>
          <target state="translated">该 &lt;code&gt;MouseMotionListener&lt;/code&gt; 监听事件。</target>
        </trans-unit>
        <trans-unit id="150ea102c83ed4ff8e936243516b257e232ff94f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MouseWheelEvent&lt;/code&gt; class includes methods for getting the number of &quot;clicks&quot; by which the mouse wheel is rotated. The &lt;a href=&quot;#getWheelRotation()&quot;&gt;&lt;code&gt;getWheelRotation()&lt;/code&gt;&lt;/a&gt; method returns the integer number of &quot;clicks&quot; corresponding to the number of notches by which the wheel was rotated. In addition to this method, the &lt;code&gt;MouseWheelEvent&lt;/code&gt; class provides the &lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt;&lt;code&gt;getPreciseWheelRotation()&lt;/code&gt;&lt;/a&gt; method which returns a double number of &quot;clicks&quot; in case a partial rotation occurred. The &lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt;&lt;code&gt;getPreciseWheelRotation()&lt;/code&gt;&lt;/a&gt; method is useful if a mouse supports a high-resolution wheel, such as a freely rotating wheel with no notches. Applications can benefit by using this method to process mouse wheel events more precisely, and thus, making visual perception smoother.</source>
          <target state="translated">所述 &lt;code&gt;MouseWheelEvent&lt;/code&gt; 类包括用于获取由鼠标滚轮旋转&amp;ldquo;点击&amp;rdquo;的次数的方法。&lt;a href=&quot;#getWheelRotation()&quot;&gt; &lt;code&gt;getWheelRotation()&lt;/code&gt; &lt;/a&gt;方法返回整数&amp;ldquo;喀哒声&amp;rdquo;，该&amp;ldquo;咔嗒声&amp;rdquo;与轮子旋转的凹口数相对应。除了此方法之外， &lt;code&gt;MouseWheelEvent&lt;/code&gt; 类还提供了&lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt; &lt;code&gt;getPreciseWheelRotation()&lt;/code&gt; &lt;/a&gt;方法，该方法将在出现部分旋转的情况下返回两倍的&amp;ldquo;点击次数&amp;rdquo;。所述&lt;a href=&quot;#getPreciseWheelRotation()&quot;&gt; &lt;code&gt;getPreciseWheelRotation()&lt;/code&gt; &lt;/a&gt;如果鼠标支持高分辨率车轮，如用无凹口的可自由旋转的轮子的方法是有用的。使用此方法可以更精确地处理鼠标滚轮事件，从而使视觉感知更流畅，从而使应用程序受益。</target>
        </trans-unit>
        <trans-unit id="7bdd496fed36950bc598bbd6ea56d02421a0688e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; class represents one-banded images and can pack multiple one-sample pixels into one data element.</source>
          <target state="translated">所述 &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; 中类表示一带状图像，并且可以将多个单样本像素到一个数据元素。</target>
        </trans-unit>
        <trans-unit id="11bb803e4faf382111d8da7958e2a0219f9b2f28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; class represents one-banded images and can pack multiple one-sample pixels into one data element. Pixels are not allowed to span data elements. The data type can be DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT. Each pixel must be a power of 2 number of bits and a power of 2 number of pixels must fit exactly in one data element. Pixel bit stride is equal to the number of bits per pixel. Scanline stride is in data elements and the last several data elements might be padded with unused pixels. Data bit offset is the offset in bits from the beginning of the &lt;a href=&quot;databuffer&quot;&gt;&lt;code&gt;DataBuffer&lt;/code&gt;&lt;/a&gt; to the first pixel and must be a multiple of pixel bit stride.</source>
          <target state="translated">所述 &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; 中类表示一带状图像，并且可以将多个单样本像素到一个数据元素。像素不允许跨越数据元素。数据类型可以是DataBuffer.TYPE_BYTE，DataBuffer.TYPE_USHORT或DataBuffer.TYPE_INT。每个像素必须具有2个位数的幂，并且2个像素的幂必须恰好适合一个数据元素。像素位跨距等于每个像素的位数。扫描线跨度位于数据元素中，最后几个数据元素可能会填充有未使用的像素。数据位偏移量是从&lt;a href=&quot;databuffer&quot;&gt; &lt;code&gt;DataBuffer&lt;/code&gt; &lt;/a&gt;的开头到第一个像素的位偏移量，并且必须是像素位跨度的倍数。</target>
        </trans-unit>
        <trans-unit id="48b5e8ca00e67ac4765345cf8cb60a38e463c497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultiResolutionImage&lt;/code&gt; interface should be implemented by any subclass of &lt;code&gt;java.awt.Image&lt;/code&gt; whose instances are intended to provide image resolution variants according to the given image width and height. For convenience, toolkit images obtained from &lt;code&gt;Toolkit.getImage(String name)&lt;/code&gt; and &lt;code&gt;Toolkit.getImage(URL url)&lt;/code&gt; will implement this interface on platforms that support naming conventions for resolution variants of stored image media and the &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; and &lt;code&gt;BaseMultiResolutionImage&lt;/code&gt; classes are provided to facilitate easy construction of custom multi-resolution images from a list of related images.</source>
          <target state="translated">所述 &lt;code&gt;MultiResolutionImage&lt;/code&gt; 接口应该由任何亚类来实现 &lt;code&gt;java.awt.Image&lt;/code&gt; 中，其实例旨在提供对图像分辨率根据给定的图像的宽度和高度的变体。为方便起见，从 &lt;code&gt;Toolkit.getImage(String name)&lt;/code&gt; 和 &lt;code&gt;Toolkit.getImage(URL url)&lt;/code&gt; 获得的工具箱图像将在支持存储图像媒体分辨率变体的命名约定的平台上实现此接口，并且提供 &lt;code&gt;AbstractMultiResolutionImage&lt;/code&gt; 和 &lt;code&gt;BaseMultiResolutionImage&lt;/code&gt; 类来简化操作。从相关图像列表中构建自定义多分辨率图像。</target>
        </trans-unit>
        <trans-unit id="91f095d99b6510976c34e8d18d1a314c4fbc5507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; instance to use for specifying that the job should be divided into separate, collated copies.</source>
          <target state="translated">用于指定应将作业分为单独的整理副本的 &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3fb976389c7192bf00db15408f20e07ee4b0f8f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; instance to use for specifying that the job should be divided into separate, uncollated copies.</source>
          <target state="translated">用于指定应将作业分为独立的非分页副本的 &lt;code&gt;MultipleDocumentHandlingType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="9b6e1370eae5cba21c51b71f67e35eac7aa4cee4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleMaster&lt;/code&gt; interface represents Type 1 Multiple Master fonts.</source>
          <target state="translated">该 &lt;code&gt;MultipleMaster&lt;/code&gt; 接口表示类型1 Multiple Master字体。</target>
        </trans-unit>
        <trans-unit id="6d994d997ce673ebe643101f39b0acec5af2dd85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MultipleMaster&lt;/code&gt; interface represents Type 1 Multiple Master fonts. A particular &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; object can implement this interface.</source>
          <target state="translated">该 &lt;code&gt;MultipleMaster&lt;/code&gt; 接口表示类型1 Multiple Master字体。特定的&lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;对象可以实现此接口。</target>
        </trans-unit>
        <trans-unit id="de5f6eded86ee9d71d197fd648730d9fa992e076" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MutationEvent&lt;/code&gt; interface provides specific contextual information associated with Mutation events.</source>
          <target state="translated">该 &lt;code&gt;MutationEvent&lt;/code&gt; 接口提供与突变事件相关的特定上下文信息。</target>
        </trans-unit>
        <trans-unit id="0480993326bc778542fae22556b604694f999249" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NClob&lt;/code&gt; interface extends the &lt;code&gt;Clob&lt;/code&gt; interface which provides methods for getting the length of an SQL &lt;code&gt;NCLOB&lt;/code&gt; value, for materializing a &lt;code&gt;NCLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;NCLOB&lt;/code&gt; object within a &lt;code&gt;NCLOB&lt;/code&gt; value. A &lt;code&gt;NClob&lt;/code&gt; object, just like a &lt;code&gt;Clob&lt;/code&gt; object, is valid for the duration of the transaction in which it was created. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt;&lt;code&gt;ResultSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt;&lt;code&gt;CallableStatement&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt;&lt;code&gt;PreparedStatement&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;getNClob&lt;/code&gt; and &lt;code&gt;setNClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;NCLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;NCLOB&lt;/code&gt; value.</source>
          <target state="translated">所述 &lt;code&gt;NClob&lt;/code&gt; 的接口扩展了 &lt;code&gt;Clob&lt;/code&gt; 界面，其提供了一种用于获得一个SQL的长度的方法 &lt;code&gt;NCLOB&lt;/code&gt; 值，物化一个 &lt;code&gt;NCLOB&lt;/code&gt; 值在客户端上，和用于搜索字符串或 &lt;code&gt;NCLOB&lt;/code&gt; 一个内对象 &lt;code&gt;NCLOB&lt;/code&gt; 值。一个 &lt;code&gt;NClob&lt;/code&gt; 的对象，就像一个 &lt;code&gt;Clob&lt;/code&gt; 对象，有效期为在它被创建的事务的持续时间。接口&lt;a href=&quot;resultset&quot;&gt; &lt;code&gt;ResultSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;callablestatement&quot;&gt; &lt;code&gt;CallableStatement&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;preparedstatement&quot;&gt; &lt;code&gt;PreparedStatement&lt;/code&gt; 中的方法&lt;/a&gt;（例如 &lt;code&gt;getNClob&lt;/code&gt; 和 &lt;code&gt;setNClob&lt;/code&gt; )允许程序员访问SQL &lt;code&gt;NCLOB&lt;/code&gt; 。价值。此外，此接口还包含用于更新 &lt;code&gt;NCLOB&lt;/code&gt; 值的方法。</target>
        </trans-unit>
        <trans-unit id="788c03b8eac033377287b7f6bcedc89c000e71cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; describes a hierarchical name composed of attributes, such as country name, and corresponding values, such as US. The type of the &lt;code&gt;AttributeValue&lt;/code&gt; component is determined by the &lt;code&gt;AttributeType&lt;/code&gt;; in general it will be a &lt;code&gt;directoryString&lt;/code&gt;. A &lt;code&gt;directoryString&lt;/code&gt; is usually one of &lt;code&gt;PrintableString&lt;/code&gt;, &lt;code&gt;TeletexString&lt;/code&gt; or &lt;code&gt;UniversalString&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Name&lt;/code&gt; 描述属性，如国名和对应的值，如美国组成的分层名称。的类型的 &lt;code&gt;AttributeValue&lt;/code&gt; 分量由确定 &lt;code&gt;AttributeType&lt;/code&gt; ; 通常它将是一个 &lt;code&gt;directoryString&lt;/code&gt; 。甲 &lt;code&gt;directoryString&lt;/code&gt; 通常之一 &lt;code&gt;PrintableString&lt;/code&gt; ， &lt;code&gt;TeletexString&lt;/code&gt; 或 &lt;code&gt;UniversalString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5c1c5d6176d58d28e9f865eee359984e02049b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; interface represents a generic name -- an ordered sequence of components.</source>
          <target state="translated">该 &lt;code&gt;Name&lt;/code&gt; 接口表示一个通用的名字-一个有序的组件序列。</target>
        </trans-unit>
        <trans-unit id="99d457ffbc6e55d6f5c1d1e7729fba20a1b311b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; interface represents a generic name -- an ordered sequence of components. It can be a composite name (names that span multiple namespaces), or a compound name (names that are used within individual hierarchical naming systems).</source>
          <target state="translated">该 &lt;code&gt;Name&lt;/code&gt; 接口表示一个通用的名字-一个有序的组件序列。它可以是复合名称（跨越多个名称空间的名称），也可以是复合名称（在各个层次命名系统中使用的名称）。</target>
        </trans-unit>
        <trans-unit id="305015d8407a5fa406fab5e1b3d6d830add7a693" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameList&lt;/code&gt; interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented.</source>
          <target state="translated">所述 &lt;code&gt;NameList&lt;/code&gt; 中接口提供平行对名称和名称空间值（可能是空值）的有序集合的抽象，没有定义或约束如何实现此集合。</target>
        </trans-unit>
        <trans-unit id="7454486b923bccb0760d5b56990b0bc5f47c72ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NameList&lt;/code&gt; interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented. The items in the &lt;code&gt;NameList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">所述 &lt;code&gt;NameList&lt;/code&gt; 中接口提供平行对名称和名称空间值（可能是空值）的有序集合的抽象，没有定义或约束如何实现此集合。可通过从0开始的整数索引访问 &lt;code&gt;NameList&lt;/code&gt; 中的项目。</target>
        </trans-unit>
        <trans-unit id="cbfe1e053acf3330335dc5b7d73c7cc97d1d6123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Naming&lt;/code&gt; class provides methods for storing and obtaining references to remote objects in a remote object registry.</source>
          <target state="translated">该 &lt;code&gt;Naming&lt;/code&gt; 类提供用于存储和在远程对象注册表获得对远程对象的引用的方法。</target>
        </trans-unit>
        <trans-unit id="789eb0afc298960a48962d09cc4750cf72e0303a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Naming&lt;/code&gt; class provides methods for storing and obtaining references to remote objects in a remote object registry. Each method of the &lt;code&gt;Naming&lt;/code&gt; class takes as one of its arguments a name that is a &lt;code&gt;java.lang.String&lt;/code&gt; in URL format (without the scheme component) of the form:</source>
          <target state="translated">该 &lt;code&gt;Naming&lt;/code&gt; 类提供用于存储和在远程对象注册表获得对远程对象的引用的方法。 &lt;code&gt;Naming&lt;/code&gt; 类的每个方法都将名称形式为 &lt;code&gt;java.lang.String&lt;/code&gt; 作为其参数之一，该形式为URL格式（不含方案组件），其形式为：</target>
        </trans-unit>
        <trans-unit id="7b6edeb494d6ac7e0b5caa00f1aa813d7ae827c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NamingEvent&lt;/code&gt;'s state consists of</source>
          <target state="translated">该 &lt;code&gt;NamingEvent&lt;/code&gt; 期间的状态由</target>
        </trans-unit>
        <trans-unit id="c86cac2e51c5a47693977a50e2b8c6b5729d2050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NetworkInterface&lt;/code&gt; this interface is attached to.</source>
          <target state="translated">此接口连接到的 &lt;code&gt;NetworkInterface&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ebb9005b08a0a47ae882894b81ab2da875ad354" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; at the corresponding position upon success. A value of &lt;code&gt;null&lt;/code&gt; is returned if the index is out of range.</source>
          <target state="translated">成功后， &lt;code&gt;Node&lt;/code&gt; 位于相应的位置。如果索引超出范围，则返回 &lt;code&gt;null&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="ec1a7f6d32baca20da17c927709e8d24c0aa30ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; interface is the primary datatype for the entire Document Object Model.</source>
          <target state="translated">的 &lt;code&gt;Node&lt;/code&gt; 接口是整个文档对象模型的主要数据类型。</target>
        </trans-unit>
        <trans-unit id="897563f996b4fd9e2640f2f9bbc27d935dea63b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. While all objects implementing the &lt;code&gt;Node&lt;/code&gt; interface expose methods for dealing with children, not all objects implementing the &lt;code&gt;Node&lt;/code&gt; interface may have children. For example, &lt;code&gt;Text&lt;/code&gt; nodes may not have children, and adding children to such nodes results in a &lt;code&gt;DOMException&lt;/code&gt; being raised.</source>
          <target state="translated">的 &lt;code&gt;Node&lt;/code&gt; 接口是整个文档对象模型的主要数据类型。它代表文档树中的单个节点。尽管所有实现 &lt;code&gt;Node&lt;/code&gt; 接口的对象都公开了用于处理子级的方法，但并非所有实现 &lt;code&gt;Node&lt;/code&gt; 接口的对象都可以具有子级。例如， &lt;code&gt;Text&lt;/code&gt; 节点可能没有子节点，将子节点添加到此类节点会引发 &lt;code&gt;DOMException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4f24312524d645707d6367d6e45b401e6f4d5c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; that led to the parsing error, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">导致解析错误的 &lt;code&gt;Node&lt;/code&gt; ，或者为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aef3bb11e429e313e89542fc0866ccc9dfce042f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; with a &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; attribute whose value corresponds to the specified string. Upon failure (e.g., no node with this name exists), returns &lt;code&gt;null&lt;/code&gt; .</source>
          <target state="translated">具有 &lt;code&gt;name&lt;/code&gt; 或 &lt;code&gt;id&lt;/code&gt; 属性的 &lt;code&gt;Node&lt;/code&gt; ，其值对应于指定的字符串。发生故障时（例如，不存在具有该名称的节点），返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d514acdf85277f67f4eec8dd90a565c433b8653d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeFilter&lt;/code&gt; used to screen nodes.</source>
          <target state="translated">用于筛选节点的 &lt;code&gt;NodeFilter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83084c208299fa879aacdf9ab332c5751f1d57bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeList&lt;/code&gt; interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented.</source>
          <target state="translated">该 &lt;code&gt;NodeList&lt;/code&gt; 接口提供对节点的有序集合的抽象，没有定义或约束如何实现此集合。</target>
        </trans-unit>
        <trans-unit id="98e77cd2d040a57b84c12a03ebf2efec6b739714" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NodeList&lt;/code&gt; interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. &lt;code&gt;NodeList&lt;/code&gt; objects in the DOM are live.</source>
          <target state="translated">该 &lt;code&gt;NodeList&lt;/code&gt; 接口提供对节点的有序集合的抽象，没有定义或约束如何实现此集合。DOM中的 &lt;code&gt;NodeList&lt;/code&gt; 对象处于活动状态。</target>
        </trans-unit>
        <trans-unit id="6e8cd1aac5ffc5b5216ef057ef34b1b290375af7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NoninvertibleTransformException&lt;/code&gt; class represents an exception that is thrown if an operation is performed requiring the inverse of an &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt; object but the &lt;code&gt;AffineTransform&lt;/code&gt; is in a non-invertible state.</source>
          <target state="translated">所述 &lt;code&gt;NoninvertibleTransformException&lt;/code&gt; 类表示如果进行的操作，要求一个的逆时引发一个例外&lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt;对象，但 &lt;code&gt;AffineTransform&lt;/code&gt; 处于非可逆状态。</target>
        </trans-unit>
        <trans-unit id="2b3873d2cdde65ea86bffbc4fce3ee8af89880c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;NotificationListeners&lt;/code&gt; 由这是由所述返回的ID标识&lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="1400dea5eb2e0f1d272329a6fddf1dde956ad2ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;NotificationListeners&lt;/code&gt; 由这是由所述返回的ID标识&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e9f0f1aa295652b71a3e12c32b29eaa12cfad79e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;NotificationListeners&lt;/code&gt; 由这是由所述返回的ID标识&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="ccce0d9a8a12b3a7a535b35383d383994618eac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Number&lt;/code&gt; return type attempts to coalesce the text of a node to a &lt;code&gt;double&lt;/code&gt; data type.</source>
          <target state="translated">该 &lt;code&gt;Number&lt;/code&gt; 返回类型尝试将节点的文本组合到 &lt;code&gt;double&lt;/code&gt; 数据类型。</target>
        </trans-unit>
        <trans-unit id="bc96d682dd5c52413c4fbf9e0e9e89a288bc4573" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NumericShaper&lt;/code&gt; class is used to convert Latin-1 (European) digits to other Unicode decimal digits.</source>
          <target state="translated">该 &lt;code&gt;NumericShaper&lt;/code&gt; 类用于将Latin-1（欧洲语）数字转换成其他Unicode十进制数字。</target>
        </trans-unit>
        <trans-unit id="b8d28052c532e291b766359b9a53299f626fbbd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NumericShaper&lt;/code&gt; class is used to convert Latin-1 (European) digits to other Unicode decimal digits. Users of this class will primarily be people who wish to present data using national digit shapes, but find it more convenient to represent the data internally using Latin-1 (European) digits. This does not interpret the deprecated numeric shape selector character (U+206E).</source>
          <target state="translated">该 &lt;code&gt;NumericShaper&lt;/code&gt; 类用于将Latin-1（欧洲语）数字转换成其他Unicode十进制数字。此类用户主要是希望使用国家数字形状来显示数据的人，但是他们发现更方便地使用Latin-1（欧洲）数字在内部表示数据。这不会解释不推荐使用的数字形状选择器字符（U + 206E）。</target>
        </trans-unit>
        <trans-unit id="2c9376e7cc0383d27533cd38986f773a0a05e444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will return a date-time with the specified offset. The local date-time is unaltered. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 区域将返回日期时间与指定的偏移。当地日期时间未更改。如果新的偏移值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1918dcc7fcc29b6bc425b2c6f7a8a0dcc372038d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will return a time with the specified offset. The local time is unaltered. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 场将返回一个时间，指定的偏移量。当地时间保持不变。如果新的偏移值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b99274c982da4f70821c4ca9b3b72ad4b9daf7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will typically be ignored. The offset of a &lt;code&gt;ZonedDateTime&lt;/code&gt; is controlled primarily by the time-zone. As such, changing the offset does not generally make sense, because there is only one valid offset for the local date-time and zone. If the zoned date-time is in a daylight savings overlap, then the offset is used to switch between the two valid offsets. In all other cases, the offset is ignored. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 场通常会被忽略。 &lt;code&gt;ZonedDateTime&lt;/code&gt; 的偏移量主要由时区控制。因此，更改偏移量通常没有意义，因为本地日期时间和区域只有一个有效偏移量。如果日期时间与夏令时重叠，则使用偏移量在两个有效偏移量之间切换。在所有其他情况下，将忽略偏移。如果新的偏移值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcf77ee080e78ac2d4bb93c007b8230ccb51fe01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; associated with a node that accepts enumerated values must be equal to one of the values returned by this method, as defined by the &lt;code&gt;==&lt;/code&gt; operator (as opposed to the &lt;code&gt;Object.equals&lt;/code&gt; method).</source>
          <target state="translated">与接受枚举值的节点关联的 &lt;code&gt;Object&lt;/code&gt; 必须等于此方法返回的值之一，该值由 &lt;code&gt;==&lt;/code&gt; 运算符定义（与 &lt;code&gt;Object.equals&lt;/code&gt; 方法相对）。</target>
        </trans-unit>
        <trans-unit id="fea5e3bfa1c2ff38c60f4081955464c2179176f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; is converted to a string using its &lt;code&gt;toString&lt;/code&gt; method and the result is used to label a &lt;code&gt;JButton&lt;/code&gt;.</source>
          <target state="translated">使用其 &lt;code&gt;toString&lt;/code&gt; 方法将 &lt;code&gt;Object&lt;/code&gt; 转换为字符串，并将结果用于标记 &lt;code&gt;JButton&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed616c574e37d462ce3dc1a59d27e3a04084fb6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; that encapsulates the result of evaluating the expression.</source>
          <target state="translated">封装评估表达式结果的 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="423a928bc882303e9119de621878e89bd3ee2d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; that is the result of evaluating the expression and converting the result to &lt;code&gt;returnType&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Object&lt;/code&gt; 是对表达式求值并将结果转换为 &lt;code&gt;returnType&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="0324a1f9879d4eda586224698a2a40120a519c02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;var&gt;name&lt;/var&gt; 所指定的MBean关联的 &lt;code&gt;ObjectInstance&lt;/code&gt; 。包含的 &lt;code&gt;ObjectName&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; ，包含的类名称是 &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .getClassName（）。</target>
        </trans-unit>
        <trans-unit id="b603e08da03f55ce9f9208ff360071d61f560e92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;var&gt;name&lt;/var&gt; 所指定的MBean关联的 &lt;code&gt;ObjectInstance&lt;/code&gt; 。包含的 &lt;code&gt;ObjectName&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; ，包含的类名称是 &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .getClassName（）。</target>
        </trans-unit>
        <trans-unit id="a1119954570aff30608ab91b67db57a1edb87ff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;var&gt;name&lt;/var&gt; 所指定的MBean关联的 &lt;code&gt;ObjectInstance&lt;/code&gt; 。包含的 &lt;code&gt;ObjectName&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; ，包含的类名是 &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .getClassName（）。</target>
        </trans-unit>
        <trans-unit id="b503bdd5bfbf40758607910f1e62bc31dd68e802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;var&gt;name&lt;/var&gt; 所指定的MBean关联的 &lt;code&gt;ObjectInstance&lt;/code&gt; 。包含的 &lt;code&gt;ObjectName&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; ，包含的类名是 &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .getClassName（）。</target>
        </trans-unit>
        <trans-unit id="c4bb59ef2d57c5a36b82e56b3ef8695a22a0311d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a garbage collector within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的垃圾收集器的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="0b9021e57442d401347cae33e09b53197bbb0b25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a memory manager within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的内存管理器的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="bb1a05072aa2847772982c43cf0d890c7cae913a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a memory pool within an &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">用于唯一标识 &lt;code&gt;MBeanServer&lt;/code&gt; 中的内存池MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="db98f30b0477805218b1ae4bdb074256518e5803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the class loading system within an &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">用于唯一标识 &lt;code&gt;MBeanServer&lt;/code&gt; 中的类加载系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="55e8342fd743f84bda60cd36babb3e068a2e6ec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the compilation system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的编译系统MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="70515004bb956a637a0eaf59af0413164c30fb86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the memory system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的内存系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="c1f16184d09f51af30331c1389e9013ddc4a17df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the operating system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中操作系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="07da8e2d7411da3d53f255c201b631c0ac856d81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the runtime system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中运行时系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="e9552b5b6f9a739364bfe6b9bdedc853e8972846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the thread system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中线程系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="8f8738e8ba429b9a8435d40f2c720f73710f949e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the diagnostic MXBean within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的诊断MXBean的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="9dcfa6a1fe8b9264f0661c006080ec7572ae4b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; class describes the management information of an</source>
          <target state="translated">该 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 类描述的管理信息</target>
        </trans-unit>
        <trans-unit id="b203a779783192d8423055b7a1a9da6d91af0f3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; class is the parent abstract class of all classes which describe the actual</source>
          <target state="translated">该 &lt;code&gt;OpenType&lt;/code&gt; 字体类是抽象父类，它描述实际的所有类的</target>
        </trans-unit>
        <trans-unit id="586067081baeca1b7bed47bc53574acbdf981084" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; interface represents OpenType and TrueType fonts.</source>
          <target state="translated">该 &lt;code&gt;OpenType&lt;/code&gt; 接口表示OpenType和TrueType字体。</target>
        </trans-unit>
        <trans-unit id="69a6dcd99d9214cc61611d6ad8120d0f1f893a75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; interface represents OpenType and TrueType fonts. This interface makes it possible to obtain</source>
          <target state="translated">该 &lt;code&gt;OpenType&lt;/code&gt; 接口表示OpenType和TrueType字体。该接口可以获取</target>
        </trans-unit>
        <trans-unit id="d1ddfa406472424e8cf5be6dc9b98f250e9362d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OperatingSystemMXBean&lt;/code&gt; object returned by &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getOperatingSystemMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; is an instance of the implementation class of this interface or &lt;a href=&quot;unixoperatingsystemmxbean&quot;&gt;&lt;code&gt;UnixOperatingSystemMXBean&lt;/code&gt;&lt;/a&gt; interface depending on its underlying operating system.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getOperatingSystemMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;OperatingSystemMXBean&lt;/code&gt; 对象是此接口或&lt;a href=&quot;unixoperatingsystemmxbean&quot;&gt; &lt;code&gt;UnixOperatingSystemMXBean&lt;/code&gt; &lt;/a&gt;接口的实现类的实例，具体取决于其底层操作系统。</target>
        </trans-unit>
        <trans-unit id="0d757ff4a6ac675a5b4871ec062085d8cdb8da98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard.</source>
          <target state="translated">所述 &lt;code&gt;PKIXReason&lt;/code&gt; 枚举潜在PKIX特定原因的X.509证书路径可以根据PKIX（RFC 3280）标准是无效的。</target>
        </trans-unit>
        <trans-unit id="42733b5171c383bf12f9d4a04e020e12857e5e60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard. These reasons are in addition to those of the &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; enumeration.</source>
          <target state="translated">所述 &lt;code&gt;PKIXReason&lt;/code&gt; 枚举潜在PKIX特定原因的X.509证书路径可以根据PKIX（RFC 3280）标准是无效的。这些原因是 &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; 枚举之外的原因。</target>
        </trans-unit>
        <trans-unit id="f124acf83d481115e57686fb8856022de3bb5ad5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 5280) standard.</source>
          <target state="translated">所述 &lt;code&gt;PKIXReason&lt;/code&gt; 枚举潜在PKIX特定原因的X.509证书路径可以根据PKIX（RFC 5280）标准是无效的。</target>
        </trans-unit>
        <trans-unit id="b371276a9e0ecfdae4ef1d34db216930ee628001" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 5280) standard. These reasons are in addition to those of the &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; enumeration.</source>
          <target state="translated">所述 &lt;code&gt;PKIXReason&lt;/code&gt; 枚举潜在PKIX特定原因的X.509证书路径可以根据PKIX（RFC 5280）标准是无效的。这些原因是 &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; 枚举之外的原因。</target>
        </trans-unit>
        <trans-unit id="b88e3cb7dd76f092b2f7b4a5b2cc4c9436fd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; corresponding to the given name, or &lt;code&gt;null&lt;/code&gt; if not found</source>
          <target state="translated">与给定名称相对应的 &lt;code&gt;Package&lt;/code&gt; ;如果找不到，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cea7f9c2881d4122c6fe3725e32d9d4186f7d6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; of the given name defined by the caller's class loader or its ancestors, or &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">由调用者的类加载器或其祖先定义的给定名称的 &lt;code&gt;Package&lt;/code&gt; ；如果找不到，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fd1cc3ac16334cb12b0c4423d000ccc75f52c4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; of the given name that has been defined by this class loader or its ancestors, or &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">由该类加载器或其祖先定义的给定名称的 &lt;code&gt;Package&lt;/code&gt; ，如果找不到，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd5390441ce6ec14e6a3933f1af826ecd94b5b2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; of the given name that has been defined by this class loader, or &lt;code&gt;null&lt;/code&gt; if not found</source>
          <target state="translated">由该类加载器定义的给定名称的 &lt;code&gt;Package&lt;/code&gt; ；如果找不到，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab4f5e9594dd010a91bd8b2874b0a810ea17e89a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PackedColorModel&lt;/code&gt; class is an abstract &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; class that works with pixel values which represent color and alpha information as separate samples and which pack all samples for a single pixel into a single int, short, or byte quantity.</source>
          <target state="translated">的 &lt;code&gt;PackedColorModel&lt;/code&gt; 类是一个抽象&lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt;类，与像素值代表颜色和alpha信息作为单独的样品和该作品包装为单个像素的所有采样到一个单一的整型，短整型，或字节数量。</target>
        </trans-unit>
        <trans-unit id="4bb1a00bbfc9f1dea7433acd9bcaca03b5f9b242" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PackedColorModel&lt;/code&gt; class is an abstract &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; class that works with pixel values which represent color and alpha information as separate samples and which pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used with an arbitrary &lt;a href=&quot;../color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;. The number of color samples in the pixel values must be the same as the number of color components in the &lt;code&gt;ColorSpace&lt;/code&gt;. There can be a single alpha sample. The array length is always 1 for those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;. The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</source>
          <target state="translated">的 &lt;code&gt;PackedColorModel&lt;/code&gt; 类是一个抽象&lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt;类，与像素值代表颜色和alpha信息作为单独的样品和该作品包装为单个像素的所有采样到一个单一的整型，短整型，或字节数量。此类可与任意&lt;a href=&quot;../color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; &lt;/a&gt;一起使用。像素值中的颜色样本数必须与 &lt;code&gt;ColorSpace&lt;/code&gt; 中的颜色分量数相同。可以有一个alpha样本。对于使用类型 &lt;code&gt;transferType&lt;/code&gt; 的原始数组像素表示形式的方法，数组长度始终为1。支持的传输类型为DataBuffer.TYPE_BYTE，DataBuffer.TYPE_USHORT和DataBuffer.TYPE_INT。颜色和Alpha样本以位掩码表示的位存储在数组的单个元素中。每个位掩码必须是连续的，并且掩码不能重叠。相同的蒙版适用于其他方法使用的单个int像素表示形式。遮罩和颜色/ alpha样本的对应关系如下：</target>
        </trans-unit>
        <trans-unit id="f4da8a295ef7ca55a2a21f98350ad99faeb3408c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PageFormat&lt;/code&gt; class describes the size and orientation of a page to be printed.</source>
          <target state="translated">该 &lt;code&gt;PageFormat&lt;/code&gt; 类描述要打印的页面的大小和方向。</target>
        </trans-unit>
        <trans-unit id="3fc0c1151979adab271a2d4c8566c09fd4940b98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pageable&lt;/code&gt; implementation represents a set of pages to be printed.</source>
          <target state="translated">在 &lt;code&gt;Pageable&lt;/code&gt; 实现表示要打印一组页面。</target>
        </trans-unit>
        <trans-unit id="798364ebe516c1f54256e5ef56a58c4cd49a63b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pageable&lt;/code&gt; implementation represents a set of pages to be printed. The &lt;code&gt;Pageable&lt;/code&gt; object returns the total number of pages in the set as well as the &lt;a href=&quot;pageformat&quot;&gt;&lt;code&gt;PageFormat&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; for a specified page.</source>
          <target state="translated">在 &lt;code&gt;Pageable&lt;/code&gt; 实现表示要打印一组页面。在 &lt;code&gt;Pageable&lt;/code&gt; 对象返回页面中设置的总数还有&lt;a href=&quot;pageformat&quot;&gt; &lt;code&gt;PageFormat&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt;的指定页面。</target>
        </trans-unit>
        <trans-unit id="51cf376b48f9b133d54960ed20a5a73b0da03e28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;PaintContext&lt;/code&gt; 接口定义封装的和优化的环境，以产生在设备空间中的颜色的图案，用于在填充或笔划操作&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ff20bc3121fcd0d6a6a114604f6c04390ebf621" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PaintContext&lt;/code&gt; interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;PaintContext&lt;/code&gt; provides the necessary colors for &lt;code&gt;Graphics2D&lt;/code&gt; operations in the form of a &lt;a href=&quot;image/raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt; associated with a &lt;a href=&quot;image/colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;PaintContext&lt;/code&gt; maintains state for a particular paint operation. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;paint&quot;&gt;&lt;code&gt;Paint&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;PaintContext&lt;/code&gt; 接口定义封装的和优化的环境，以产生在设备空间中的颜色的图案，用于在填充或笔划操作&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;。所述 &lt;code&gt;PaintContext&lt;/code&gt; 提供了必要的颜色 &lt;code&gt;Graphics2D&lt;/code&gt; 在一个形式操作&lt;a href=&quot;image/raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt;与相关联&lt;a href=&quot;image/colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt;。该 &lt;code&gt;PaintContext&lt;/code&gt; 保持特定的油漆工作状态。在多线程环境中，单个&lt;a href=&quot;paint&quot;&gt; &lt;code&gt;Paint&lt;/code&gt; &lt;/a&gt;对象可以同时存在多个上下文。</target>
        </trans-unit>
        <trans-unit id="6da600e11920a8b9946bd8cf3002f1b4c14a63cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Paper&lt;/code&gt; class describes the physical characteristics of a piece of paper.</source>
          <target state="translated">的 &lt;code&gt;Paper&lt;/code&gt; 类描述一张纸的物理特性。</target>
        </trans-unit>
        <trans-unit id="8e9f00d5d237f36cec15e4bb73bc5ff0ff6caccd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path2D&lt;/code&gt; class provides a simple, yet flexible shape which represents an arbitrary geometric path.</source>
          <target state="translated">该 &lt;code&gt;Path2D&lt;/code&gt; 类提供了一个简单的，它代表任意的几何路径而灵活的形状。</target>
        </trans-unit>
        <trans-unit id="7bb4be9fd3e9cc76024c763ef9710898d308c15f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path2D&lt;/code&gt; class provides a simple, yet flexible shape which represents an arbitrary geometric path. It can fully represent any path which can be iterated by the &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interface including all of its segment types and winding rules and it implements all of the basic hit testing methods of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;Path2D&lt;/code&gt; 类提供了一个简单的，它代表任意的几何路径而灵活的形状。它可以完全表示&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;接口可以迭代的任何路径，包括其所有段类型和缠绕规则，并且可以实现&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;接口的所有基本命中测试方法。</target>
        </trans-unit>
        <trans-unit id="918982e89f589b2e61abc622e3fc1c886b57d8c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; is obtained by invoking the &lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;filesystems#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Path&lt;/code&gt; 是通过调用&lt;a href=&quot;filesystems#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法获得的。</target>
        </trans-unit>
        <trans-unit id="90672781ed476b480c2d01bbaf4b2e5adafc4b2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; is obtained by invoking the &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Path&lt;/code&gt; 是通过调用&lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法获得的。</target>
        </trans-unit>
        <trans-unit id="c6a2d68919a75d0efae8c0507ff2d08e73f33e85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PathIterator&lt;/code&gt; interface provides the mechanism for objects that implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time.</source>
          <target state="translated">该 &lt;code&gt;PathIterator&lt;/code&gt; 接口提供了实现目标的机制&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;接口，允许呼叫者在同一时间检索边界段的路径返回其边界的几何形状。</target>
        </trans-unit>
        <trans-unit id="c4cb1555c85d26e99433230af73509a9363c4989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PathIterator&lt;/code&gt; interface provides the mechanism for objects that implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface to return the geometry of their boundary by allowing a caller to retrieve the path of that boundary a segment at a time. This interface allows these objects to retrieve the path of their boundary a segment at a time by using 1st through 3rd order B&amp;eacute;zier curves, which are lines and quadratic or cubic B&amp;eacute;zier splines.</source>
          <target state="translated">该 &lt;code&gt;PathIterator&lt;/code&gt; 接口提供了实现目标的机制&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;接口，允许呼叫者在同一时间检索边界段的路径返回其边界的几何形状。此接口允许这些对象使用1阶到3阶B&amp;eacute;zier曲线（它们是直线和二次或三次B&amp;eacute;zier样条曲线）一次检索一个段的边界路径。</target>
        </trans-unit>
        <trans-unit id="5c79b8bbdbc6232b5734fc46d1a5e28d6bbf32c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pattern&lt;/code&gt; engine performs traditional NFA-based matching with ordered alternation as occurs in Perl 5.</source>
          <target state="translated">该 &lt;code&gt;Pattern&lt;/code&gt; 如在Perl 5发生发动机执行与定购交替传统的基于NFA匹配。</target>
        </trans-unit>
        <trans-unit id="92995c19fa227cf2ab96897ff5eedb351ff466d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Permission&lt;/code&gt; class for link creation operations.</source>
          <target state="translated">链接创建操作的 &lt;code&gt;Permission&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="41e0cea64632e3ca5603c6f64f2ba33a33ea2503" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object is also registered with the platform &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;MBeanServer&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; within an MBeanServer is:</source>
          <target state="translated">该 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 目的也通过该平台注册&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;的MBeanServer&lt;/a&gt;。用于唯一标识MBeanServer中的 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 的&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;是：</target>
        </trans-unit>
        <trans-unit id="b15cfab53ee2a0eadd7dc3e89c6e3054abf67006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object is also registered with the platform &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;MBeanServer&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; within an MBeanServer is:</source>
          <target state="translated">该 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 目的也通过该平台注册&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;的MBeanServer&lt;/a&gt;。用于唯一标识MBeanServer中的 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 的&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;是：</target>
        </trans-unit>
        <trans-unit id="0255ebf80bbcc8c5a2f44e9f14adb8567abeb8d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point2D&lt;/code&gt; class defines a point representing a location in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">所述 &lt;code&gt;Point2D&lt;/code&gt; 类定义表示的位置处的点 &lt;code&gt;(x,y)&lt;/code&gt; 坐标空间。</target>
        </trans-unit>
        <trans-unit id="51fd15fd08c40e64c9f0a62e14caca8103322dfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point2D&lt;/code&gt; in the destination image that corresponds to the specified point in the source image.</source>
          <target state="translated">目标图像中与源图像中的指定点相对应的 &lt;code&gt;Point2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9db41020f8cfc583464f3b688783deb80a1748a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Point2D&lt;/code&gt; in the destination that corresponds to the specified point in the source.</source>
          <target state="translated">目标中与源中的指定点相对应的 &lt;code&gt;Point2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="176ebc50958434620dc6e1fc7aedbf4aa4c19395" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Policy&lt;/code&gt; object consults the local policy and returns and appropriate &lt;code&gt;Permissions&lt;/code&gt; object with the Permissions granted to the Principals associated with the provided</source>
          <target state="translated">该 &lt;code&gt;Policy&lt;/code&gt; 对象查询本地策略，且返回适当的 &lt;code&gt;Permissions&lt;/code&gt; 与被授予与所提供的相关的Principals的Permissions对象</target>
        </trans-unit>
        <trans-unit id="bc0f88823ab6ae735668139d74c93498b75f7a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Polygon&lt;/code&gt; class encapsulates a description of a closed, two-dimensional region within a coordinate space.</source>
          <target state="translated">的 &lt;code&gt;Polygon&lt;/code&gt; 类封装一个封闭的，两维区域的坐标空间内的描述。</target>
        </trans-unit>
        <trans-unit id="d773293caf0f8c7512617d0ff6853b4e434dbc33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Polygon&lt;/code&gt; class encapsulates a description of a closed, two-dimensional region within a coordinate space. This region is bounded by an arbitrary number of line segments, each of which is one side of the polygon. Internally, a polygon comprises of a list of &lt;code&gt;(x,y)&lt;/code&gt; coordinate pairs, where each pair defines a</source>
          <target state="translated">的 &lt;code&gt;Polygon&lt;/code&gt; 类封装一个封闭的，两维区域的坐标空间内的描述。该区域由任意数量的线段界定，每个线段都是多边形的一侧。在内部，多边形由 &lt;code&gt;(x,y)&lt;/code&gt; 个坐标对列表组成，其中每个坐标对定义一个</target>
        </trans-unit>
        <trans-unit id="8f660c48a5927de5d279d0b4033c4ae98a5108f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.</source>
          <target state="translated">该 &lt;code&gt;Port.Info&lt;/code&gt; 类扩展 &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 提供更多的信息具体到港口，包括端口的名称，无论是源还是其混频器的目标。</target>
        </trans-unit>
        <trans-unit id="e65eb7e482423171ada7c491ef4eeceb1029407b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer. By definition, a port acts as either a source or a target to its mixer, but not both. (Audio input ports are sources; audio output ports are targets.)</source>
          <target state="translated">该 &lt;code&gt;Port.Info&lt;/code&gt; 类扩展 &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 提供更多的信息具体到港口，包括端口的名称，无论是源还是其混频器的目标。根据定义，端口可以充当其混频器的源或目标，但不能同时充当两者。（音频输入端口是源；音频输出端口是目标。）</target>
        </trans-unit>
        <trans-unit id="5514700d1e658c5e68c6a9044f1218f55b233edd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;Line.Info&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.</source>
          <target state="translated">该 &lt;code&gt;Port.Info&lt;/code&gt; 类扩展 &lt;code&gt;Line.Info&lt;/code&gt; 提供更多的信息具体到港口，包括端口的名称，无论是源还是其混频器的目标。</target>
        </trans-unit>
        <trans-unit id="2b7466b90e627fdcb19a669e4837c462e6d9a2de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;Line.Info&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer. By definition, a port acts as either a source or a target to its mixer, but not both. (Audio input ports are sources; audio output ports are targets.)</source>
          <target state="translated">该 &lt;code&gt;Port.Info&lt;/code&gt; 类扩展 &lt;code&gt;Line.Info&lt;/code&gt; 提供更多的信息具体到港口，包括端口的名称，无论是源还是其混频器的目标。根据定义，端口可以充当其混频器的源或目标，但不能同时充当两者。（音频输入端口是源；音频输出端口是目标。）</target>
        </trans-unit>
        <trans-unit id="5ae842ea749d43311b4ec5700e9104dcbbe1e761" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Predicate&lt;/code&gt; interface is a standard interface that applications can implement to define the filter they wish to apply to a a &lt;code&gt;FilteredRowSet&lt;/code&gt; object. A &lt;code&gt;FilteredRowSet&lt;/code&gt; object consumes implementations of this interface and enforces the constraints defined in the implementation of the method &lt;code&gt;evaluate&lt;/code&gt;. A &lt;code&gt;FilteredRowSet&lt;/code&gt; object enforces the filter constraints in a bi-directional manner: It outputs only rows that are within the constraints of the filter; and conversely, it inserts, modifies, or updates only rows that are within the constraints of the filter.</source>
          <target state="translated">该 &lt;code&gt;Predicate&lt;/code&gt; 接口是标准接口，应用程序可以实现它来定义希望应用于AA过滤 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的对象。甲 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的对象使用此接口的实现，并执行该方法的实现所定义的约束 &lt;code&gt;evaluate&lt;/code&gt; 。甲 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的对象强制在一个双向的方式的过滤器的限制：它仅输出是过滤的约束内的行; 相反，它仅插入，修改或更新筛选器约束内的行。</target>
        </trans-unit>
        <trans-unit id="4c187a2ae24f6fe10978b472c34cc326cf74b873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation is located as follows:</source>
          <target state="translated">该 &lt;code&gt;PreferencesFactory&lt;/code&gt; 实现位于如下：</target>
        </trans-unit>
        <trans-unit id="b8bf7442319d0465fd61692705002688a0ac045b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PreparedStatement&lt;/code&gt; that is being closed or is invalid</source>
          <target state="translated">已关闭或无效的 &lt;code&gt;PreparedStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ae1e13889514879c41f4b82a2786cc0c9953e18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; can be requested in one of two printing modes. In both modes, it spreads table rows naturally in sequence across multiple pages, fitting as many rows as possible per page. &lt;code&gt;PrintMode.NORMAL&lt;/code&gt; specifies that the table be printed at its current size. In this mode, there may be a need to spread columns across pages in a similar manner to that of the rows. When the need arises, columns are distributed in an order consistent with the table's &lt;code&gt;ComponentOrientation&lt;/code&gt;. &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; specifies that the output be scaled smaller, if necessary, to fit the table's entire width (and thereby all columns) on each page. Width and height are scaled equally, maintaining the aspect ratio of the output.</source>
          <target state="translated">该 &lt;code&gt;Printable&lt;/code&gt; 可以要求在两种打印模式的一个。在这两种模式下，它自然地将表行顺序分布在多个页面上，每页尽可能多地容纳行。 &lt;code&gt;PrintMode.NORMAL&lt;/code&gt; 指定以当前大小打印表格。在这种模式下，可能需要以与行类似的方式在页面上分布列。当需要时，按与表的 &lt;code&gt;ComponentOrientation&lt;/code&gt; 一致的顺序分配列。 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 指定在必要时将输出缩放为较小，以适合每页上表格的整个宽度（从而适合所有列）。宽度和高度均等缩放，以保持输出的宽高比。</target>
        </trans-unit>
        <trans-unit id="d90b7c1279ee9905eabe7667575548c1be503720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; constrains what it draws to the printable area of each page that it prints. Under certain circumstances, it may find it impossible to fit all of a page's content into that area. In these cases the output may be clipped, but the implementation makes an effort to do something reasonable. Here are a few situations where this is known to occur, and how they may be handled by this particular implementation:</source>
          <target state="translated">该 &lt;code&gt;Printable&lt;/code&gt; 约束它即将它打印的每一页的可打印区域。在某些情况下，可能无法将页面的所有内容都放入该区域。在这些情况下，输出可能会被裁剪，但是实现会尽力做一些合理的事情。这是已知的几种情况，以及此特定实现可能如何处理它们：</target>
        </trans-unit>
        <trans-unit id="0e87b2cf55076570d0eef346208270663ceba3b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; heads the portion of table on each page with the appropriate section from the table's &lt;code&gt;JTableHeader&lt;/code&gt;, if it has one.</source>
          <target state="translated">该 &lt;code&gt;Printable&lt;/code&gt; 头表的每一页上从表中的相应部分中的部分 &lt;code&gt;JTableHeader&lt;/code&gt; 上，如果它有一个。</target>
        </trans-unit>
        <trans-unit id="62eaa3a13cc3c735099760a21c4a9cf9313e1105" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; interface is implemented by the &lt;code&gt;print&lt;/code&gt; methods of the current page painter, which is called by the printing system to render a page.</source>
          <target state="translated">该 &lt;code&gt;Printable&lt;/code&gt; 接口由实现 &lt;code&gt;print&lt;/code&gt; 当前页面的画家，这是由打印系统调用，以呈现页面的方法。</target>
        </trans-unit>
        <trans-unit id="e0f2e75e809287fcbcd5cb33c34ad66a05a8d318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Printable&lt;/code&gt; interface is implemented by the &lt;code&gt;print&lt;/code&gt; methods of the current page painter, which is called by the printing system to render a page. When building a &lt;a href=&quot;pageable&quot;&gt;&lt;code&gt;Pageable&lt;/code&gt;&lt;/a&gt;, pairs of &lt;a href=&quot;pageformat&quot;&gt;&lt;code&gt;PageFormat&lt;/code&gt;&lt;/a&gt; instances and instances that implement this interface are used to describe each page. The instance implementing &lt;code&gt;Printable&lt;/code&gt; is called to print the page's graphics.</source>
          <target state="translated">该 &lt;code&gt;Printable&lt;/code&gt; 接口由实现 &lt;code&gt;print&lt;/code&gt; 当前页面的画家，这是由打印系统调用，以呈现页面的方法。在构建&lt;a href=&quot;pageable&quot;&gt; &lt;code&gt;Pageable&lt;/code&gt; 时&lt;/a&gt;，将使用成对的&lt;a href=&quot;pageformat&quot;&gt; &lt;code&gt;PageFormat&lt;/code&gt; &lt;/a&gt;实例和实现此接口的实例来描述每个页面。调用实现 &lt;code&gt;Printable&lt;/code&gt; 的实例以打印页面的图形。</target>
        </trans-unit>
        <trans-unit id="ac0d71a3c6e84bf3a7b4ac2010bf6cb3d7c2f903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterAbortException&lt;/code&gt; class is a subclass of &lt;a href=&quot;printerexception&quot;&gt;&lt;code&gt;PrinterException&lt;/code&gt;&lt;/a&gt; and is used to indicate that a user or application has terminated the print job while it was in the process of printing.</source>
          <target state="translated">所述 &lt;code&gt;PrinterAbortException&lt;/code&gt; 类是的一个子类&lt;a href=&quot;printerexception&quot;&gt; &lt;code&gt;PrinterException&lt;/code&gt; &lt;/a&gt;并用于指示用户或应用程序终止打印作业，而这是在打印的过程中。</target>
        </trans-unit>
        <trans-unit id="8291fb13987bd51c6c24249e8d111d094c6d983f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterException&lt;/code&gt; class and its subclasses are used to indicate that an exceptional condition has occurred in the print system.</source>
          <target state="translated">该 &lt;code&gt;PrinterException&lt;/code&gt; 类及其子类用于指示发生在打印系统中的异常情况。</target>
        </trans-unit>
        <trans-unit id="d0286b3bdfead09b3ddabeab90a87f6c2dbe0b87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterGraphics&lt;/code&gt; interface is implemented by &lt;a href=&quot;../graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; objects that are passed to &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; objects to render a page.</source>
          <target state="translated">该 &lt;code&gt;PrinterGraphics&lt;/code&gt; 接口由实现&lt;a href=&quot;../graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt;传递给对象的&lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt;对象以呈现页面。</target>
        </trans-unit>
        <trans-unit id="7c7b23e4c9e1c4b2853d8d828e50835dc408b873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterGraphics&lt;/code&gt; interface is implemented by &lt;a href=&quot;../graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; objects that are passed to &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; objects to render a page. It allows an application to find the &lt;a href=&quot;printerjob&quot;&gt;&lt;code&gt;PrinterJob&lt;/code&gt;&lt;/a&gt; object that is controlling the printing.</source>
          <target state="translated">该 &lt;code&gt;PrinterGraphics&lt;/code&gt; 接口由实现&lt;a href=&quot;../graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt;传递给对象的&lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt;对象以呈现页面。它允许应用程序找到控制打印的&lt;a href=&quot;printerjob&quot;&gt; &lt;code&gt;PrinterJob&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="8c6e62b7cd391131d02c652075e5ac3c0a89e401" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterIOException&lt;/code&gt; class is a subclass of &lt;a href=&quot;printerexception&quot;&gt;&lt;code&gt;PrinterException&lt;/code&gt;&lt;/a&gt; and is used to indicate that an IO error of some sort has occurred while printing.</source>
          <target state="translated">该 &lt;code&gt;PrinterIOException&lt;/code&gt; 类的子类&lt;a href=&quot;printerexception&quot;&gt; &lt;code&gt;PrinterException&lt;/code&gt; &lt;/a&gt;，用来表示某种IO错误而发生的打印。</target>
        </trans-unit>
        <trans-unit id="82eaac5fa28704ebde927e11ea586b3e320c6f37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterJob&lt;/code&gt; class is the principal class that controls printing.</source>
          <target state="translated">所述 &lt;code&gt;PrinterJob&lt;/code&gt; 类是控制打印的主要类。</target>
        </trans-unit>
        <trans-unit id="4b4fd4b60af924b1ba0d3eed68d2cf8f47f320d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PrinterJob&lt;/code&gt; class is the principal class that controls printing. An application calls methods in this class to set up a job, optionally to invoke a print dialog with the user, and then to print the pages of the job.</source>
          <target state="translated">所述 &lt;code&gt;PrinterJob&lt;/code&gt; 类是控制打印的主要类。应用程序调用此类中的方法来设置作业，可以选择与用户调用打印对话框，然后打印作业的页面。</target>
        </trans-unit>
        <trans-unit id="933ffd1a10f5aa2494d07bcb8dab5fb76775151d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProcessHandle&lt;/code&gt; static factory methods return instances that are &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;, immutable and thread-safe. Use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on these instances of &lt;code&gt;ProcessHandle&lt;/code&gt; may have unpredictable results and should be avoided. Use &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#compareTo(java.lang.ProcessHandle)&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; methods to compare ProcessHandles.</source>
          <target state="translated">该 &lt;code&gt;ProcessHandle&lt;/code&gt; 静态工厂方法返回的情况下，&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;以价值为基础&lt;/a&gt;的，一成不变的和线程安全的。在这些 &lt;code&gt;ProcessHandle&lt;/code&gt; 实例上使用身份敏感的操作（包括引用等于（ &lt;code&gt;==&lt;/code&gt; ），身份哈希码或同步）可能会导致无法预料的结果，应避免使用。使用&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#compareTo(java.lang.ProcessHandle)&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt;方法比较ProcessHandles。</target>
        </trans-unit>
        <trans-unit id="f34d0e406b35812c5e47d2d1968756eab5ecfb45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProcessHandle&lt;/code&gt; static factory methods return instances that are &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;, immutable and thread-safe. Use of identity-sensitive operations (including reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, or synchronization) on these instances of &lt;code&gt;ProcessHandle&lt;/code&gt; may have unpredictable results and should be avoided. Use &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#compareTo(java.lang.ProcessHandle)&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; methods to compare ProcessHandles.</source>
          <target state="translated">该 &lt;code&gt;ProcessHandle&lt;/code&gt; 静态工厂方法返回的情况下，&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;以价值为基础&lt;/a&gt;的，一成不变的和线程安全的。在这些 &lt;code&gt;ProcessHandle&lt;/code&gt; 实例上使用身份敏感的操作（包括引用等于（ &lt;code&gt;==&lt;/code&gt; ），身份哈希码或同步）可能会导致无法预料的结果，应避免使用。使用&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#compareTo(java.lang.ProcessHandle)&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt;方法比较ProcessHandles。</target>
        </trans-unit>
        <trans-unit id="03f0e1b162793dcda086b30e64d17c70076f236a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProcessingInstruction&lt;/code&gt; interface represents a &quot;processing instruction&quot;, used in XML as a way to keep processor-specific information in the text of the document.</source>
          <target state="translated">所述 &lt;code&gt;ProcessingInstruction&lt;/code&gt; 接口表示&amp;ldquo;处理指令&amp;rdquo;，在XML用作一种方法来保持处理器的特定信息在该文档的文本。</target>
        </trans-unit>
        <trans-unit id="b1486c259ae3502fc3a329a70fbfe8ae9f08b495" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; argument can be used to pass arbitrary string tag/value pairs as connection arguments. Normally at least &quot;user&quot; and &quot;password&quot; properties should be included in the &lt;code&gt;Properties&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;Properties&lt;/code&gt; 参数可以用来传递任意字符串标记/值对作为连接参数。通常， &lt;code&gt;Properties&lt;/code&gt; 对象中至少应包括&amp;ldquo;用户&amp;rdquo;和&amp;ldquo;密码&amp;rdquo;属性。</target>
        </trans-unit>
        <trans-unit id="75282c40a85213c64330ab76483127cc3ec01312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class does not inherit the concept of a load factor from its superclass, &lt;code&gt;Hashtable&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Properties&lt;/code&gt; 类不从父，继承负载率的概念 &lt;code&gt;Hashtable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d166a34742a6c6490e21ca168d2e6d673987afa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of properties.</source>
          <target state="translated">该 &lt;code&gt;Properties&lt;/code&gt; 类代表一个持久的属性集。</target>
        </trans-unit>
        <trans-unit id="d09951cf74285f372797f262ca2d5541dfdf337c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of properties. The &lt;code&gt;Properties&lt;/code&gt; can be saved to a stream or loaded from a stream. Each key and its corresponding value in the property list is a string.</source>
          <target state="translated">该 &lt;code&gt;Properties&lt;/code&gt; 类代表一个持久的属性集。该 &lt;code&gt;Properties&lt;/code&gt; 可以被保存到一个流或从流中加载。属性列表中的每个键及其对应的值都是一个字符串。</target>
        </trans-unit>
        <trans-unit id="3b6c7ec85cd35e87cee3f3b62f08fa502097b985" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PropertyChangeListener&lt;/code&gt; must be from this context.</source>
          <target state="translated">该 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 必须来自这方面。</target>
        </trans-unit>
        <trans-unit id="41efb79d3a1eca9cb5d81533032efc9675bf375a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PropertyChangeSupport&lt;/code&gt; associated with this &lt;code&gt;BeanContextChildSupport&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;PropertyChangeSupport&lt;/code&gt; 与此相关 &lt;code&gt;BeanContextChildSupport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eace280cd8fbc57f7f7b6a31cb7bd7742834ba47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QuadCurve2D&lt;/code&gt; class defines a quadratic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">所述 &lt;code&gt;QuadCurve2D&lt;/code&gt; 类定义了在二次参数曲线段 &lt;code&gt;(x,y)&lt;/code&gt; 坐标空间。</target>
        </trans-unit>
        <trans-unit id="61720eb2d433a3c828940b196eeb9541a74e0646" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Queue&lt;/code&gt; interface does not define the</source>
          <target state="translated">的 &lt;code&gt;Queue&lt;/code&gt; 接口没有定义</target>
        </trans-unit>
        <trans-unit id="9d8e0ebf2afd9596c7284145e4756478b2f14fdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RGBColor&lt;/code&gt; interface is used to represent any RGB color value.</source>
          <target state="translated">的 &lt;code&gt;RGBColor&lt;/code&gt; 接口被用于表示任何RGB颜色值。</target>
        </trans-unit>
        <trans-unit id="ab87a46c6287473d39629ee90b5886a43245d004" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RGBColor&lt;/code&gt; interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; objects modify the style property.</source>
          <target state="translated">的 &lt;code&gt;RGBColor&lt;/code&gt; 接口被用于表示任何RGB颜色值。此接口反映基础样式属性中的值。因此，对 &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; 对象的修改将修改style属性。</target>
        </trans-unit>
        <trans-unit id="3c802a31a324ed954aac93983d5b047944141b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RIXMLProvider&lt;/code&gt; implementation uses the lowest level of synchronization and just writes &lt;code&gt;RowSet&lt;/code&gt; changes to the data source.</source>
          <target state="translated">该 &lt;code&gt;RIXMLProvider&lt;/code&gt; 实现使用同步的最低水平，只是写 &lt;code&gt;RowSet&lt;/code&gt; 更改数据源。</target>
        </trans-unit>
        <trans-unit id="ac0fe76fb8dd0ed97837541e8c347d6bc8203ec2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RadialGradientPaint&lt;/code&gt; class provides a way to fill a shape with a circular radial color gradient pattern.</source>
          <target state="translated">所述 &lt;code&gt;RadialGradientPaint&lt;/code&gt; 类提供一种方法来填充形状具有圆形径向颜色渐变图案。</target>
        </trans-unit>
        <trans-unit id="402bca490996bdd2abb2791c2ec477a47b69c5ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RadialGradientPaint&lt;/code&gt; class provides a way to fill a shape with a circular radial color gradient pattern. The user may specify 2 or more gradient colors, and this paint will provide an interpolation between each color.</source>
          <target state="translated">所述 &lt;code&gt;RadialGradientPaint&lt;/code&gt; 类提供一种方法来填充形状具有圆形径向颜色渐变图案。用户可以指定2种或2种以上渐变色，并且此绘画将在每种颜色之间提供插值。</target>
        </trans-unit>
        <trans-unit id="72a0a7aaeb78342dc06a7bdd5ddfc266a67e6825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Range&lt;/code&gt; enum replaces the traditional bit mask-based values (e.g., &lt;a href=&quot;numericshaper#ARABIC&quot;&gt;&lt;code&gt;NumericShaper.ARABIC&lt;/code&gt;&lt;/a&gt;), and supports more Unicode ranges than the bit mask-based ones. For example, the following code using the bit mask:</source>
          <target state="translated">的 &lt;code&gt;Range&lt;/code&gt; 枚举取代了传统的比特基于掩模的值（例如，&lt;a href=&quot;numericshaper#ARABIC&quot;&gt; &lt;code&gt;NumericShaper.ARABIC&lt;/code&gt; &lt;/a&gt;），并支持多个Unicode范围比位基于掩模的那些。例如，以下代码使用位掩码：</target>
        </trans-unit>
        <trans-unit id="0dd9840df06924282664fc3e67ddabe9defd6274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Raster&lt;/code&gt; being referenced.</source>
          <target state="translated">正在引用的 &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c6f82f0ae4c7c7b30125a9daf0c3db74dcf1b61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RasterFormatException&lt;/code&gt; is thrown if there is invalid layout information in the &lt;a href=&quot;raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;RasterFormatException&lt;/code&gt; 如果在无效的布局信息，则抛出&lt;a href=&quot;raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7d5ef2a80665b70e00f3dbb636dc72cbc088a21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; methods that read from the file throw &lt;code&gt;
 IOException&lt;/code&gt; if a malformed or unmappable byte sequence is read.</source>
          <target state="translated">如果 &lt;code&gt;Reader&lt;/code&gt; 了格式错误或不可映射的字节序列，则从文件读取的Reader方法将引发 &lt;code&gt; IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79a2cd06471b623d73bdbbd167ab48aee2097b40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; methods that read from the file throw &lt;code&gt;IOException&lt;/code&gt; if a malformed or unmappable byte sequence is read.</source>
          <target state="translated">如果 &lt;code&gt;Reader&lt;/code&gt; 了格式错误或不可映射的字节序列，则从文件读取的Reader方法将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="180637fe735f25114352ee626b0787d96e82163f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; object that will be returned by the method &lt;code&gt;getCharacterStream&lt;/code&gt;, which is specified in the &lt;code&gt;ResultSet&lt;/code&gt; interface.</source>
          <target state="translated">将由 &lt;code&gt;getCharacterStream&lt;/code&gt; 方法返回的 &lt;code&gt;Reader&lt;/code&gt; 对象，该方法在 &lt;code&gt;ResultSet&lt;/code&gt; 接口中指定。</target>
        </trans-unit>
        <trans-unit id="99baa6f6ac31a6957c69fb473938422fc78f374d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Reader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed94dab085ac4d412b73c8fd6b794e9b312fa6f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rect&lt;/code&gt; interface is used to represent any rect value.</source>
          <target state="translated">该 &lt;code&gt;Rect&lt;/code&gt; 接口被用于表示任何RECT值。</target>
        </trans-unit>
        <trans-unit id="995ce92c960435de8837694f0f78bec5fafefa46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rect&lt;/code&gt; interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; objects modify the style property.</source>
          <target state="translated">该 &lt;code&gt;Rect&lt;/code&gt; 接口被用于表示任何RECT值。此接口反映基础样式属性中的值。因此，对 &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; 对象的修改将修改style属性。</target>
        </trans-unit>
        <trans-unit id="63e032b900d34c7d460141383d0bab5c3879e7f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rectangle2D&lt;/code&gt; class describes a rectangle defined by a location &lt;code&gt;(x,y)&lt;/code&gt; and dimension &lt;code&gt;(w x h)&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Rectangle2D&lt;/code&gt; 类描述通过位置定义的矩形 &lt;code&gt;(x,y)&lt;/code&gt; 和尺寸 &lt;code&gt;(w x h)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48e440d18cbeb470c2e070567bac333946a54aba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rectangle2D&lt;/code&gt; representing the destination image's bounding box.</source>
          <target state="translated">表示目标图像边界框的 &lt;code&gt;Rectangle2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62ccf8df2768408a1c1674844bb46ef5f53b7825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rectangle2D&lt;/code&gt; representing the destination's bounding box.</source>
          <target state="translated">表示目的地边界框的 &lt;code&gt;Rectangle2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b09d8d74cfacaa1243813daf514eb38609152c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Registry&lt;/code&gt; instance is exported as if the static &lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int)&quot;&gt;&lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt;&lt;/a&gt; method is invoked, passing the &lt;code&gt;Registry&lt;/code&gt; instance and the specified &lt;code&gt;port&lt;/code&gt; as arguments, except that the &lt;code&gt;Registry&lt;/code&gt; instance is exported with a well-known object identifier, an &lt;a href=&quot;../server/objid&quot;&gt;&lt;code&gt;ObjID&lt;/code&gt;&lt;/a&gt; instance constructed with the value &lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt;&lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Registry&lt;/code&gt; 实例被导出为如果静态&lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int)&quot;&gt; &lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt; 中&lt;/a&gt;方法被调用时，使所述 &lt;code&gt;Registry&lt;/code&gt; 实例和指定 &lt;code&gt;port&lt;/code&gt; 作为参数，不同的是 &lt;code&gt;Registry&lt;/code&gt; 实例与公知的对象标识符，一个导出&lt;a href=&quot;../server/objid&quot;&gt; &lt;code&gt;ObjID&lt;/code&gt; &lt;/a&gt;与值构建的实例&lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt; &lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7544022a4002643648e99cb248dc3e1edf70eac7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Registry&lt;/code&gt; instance is exported as if the static &lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt;&lt;/a&gt; method is invoked, passing the &lt;code&gt;Registry&lt;/code&gt; instance, the specified &lt;code&gt;port&lt;/code&gt;, the specified &lt;code&gt;RMIClientSocketFactory&lt;/code&gt;, and the specified &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; as arguments, except that the &lt;code&gt;Registry&lt;/code&gt; instance is exported with a well-known object identifier, an &lt;a href=&quot;../server/objid&quot;&gt;&lt;code&gt;ObjID&lt;/code&gt;&lt;/a&gt; instance constructed with the value &lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt;&lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Registry&lt;/code&gt; 实例被导出为如果静态&lt;a href=&quot;../server/unicastremoteobject#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;UnicastRemoteObject.exportObject&lt;/code&gt; 中&lt;/a&gt;方法被调用时，使所述 &lt;code&gt;Registry&lt;/code&gt; 实例，指定的 &lt;code&gt;port&lt;/code&gt; ，指定 &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; ，和指定 &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; 作为参数，不同的是 &lt;code&gt;Registry&lt;/code&gt; 实例与公知的对象标识符导出，使用值&lt;a href=&quot;../server/objid#REGISTRY_ID&quot;&gt; &lt;code&gt;ObjID.REGISTRY_ID&lt;/code&gt; &lt;/a&gt;构造的&lt;a href=&quot;../server/objid&quot;&gt; &lt;code&gt;ObjID&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="a77e9ae2b2107d577c6cecf3ac83834ef29056d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine.</source>
          <target state="translated">该 &lt;code&gt;Remote&lt;/code&gt; 接口用于标识其方法可以从非本地虚拟机上调用的接口。</target>
        </trans-unit>
        <trans-unit id="79dd4ebe7717e3ca739dd65783e3b0cd2d2ad2b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Remote&lt;/code&gt; interface serves to identify interfaces whose methods may be invoked from a non-local virtual machine. Any object that is a remote object must directly or indirectly implement this interface. Only those methods specified in a &quot;remote interface&quot;, an interface that extends &lt;code&gt;java.rmi.Remote&lt;/code&gt; are available remotely.</source>
          <target state="translated">该 &lt;code&gt;Remote&lt;/code&gt; 接口用于标识其方法可以从非本地虚拟机上调用的接口。任何作为远程对象的对象都必须直接或间接实现此接口。远程只能使用&amp;ldquo;远程接口&amp;rdquo;（扩展 &lt;code&gt;java.rmi.Remote&lt;/code&gt; 的接口）中指定的那些方法。</target>
        </trans-unit>
        <trans-unit id="9e1abc4fd1fdb1df6457b5ff98ccc8aecec8c9b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteObject&lt;/code&gt; class implements the &lt;code&gt;java.lang.Object&lt;/code&gt; behavior for remote objects.</source>
          <target state="translated">本 &lt;code&gt;RemoteObject&lt;/code&gt; 类实现 &lt;code&gt;java.lang.Object&lt;/code&gt; 中远程对象的行为。</target>
        </trans-unit>
        <trans-unit id="a0d6869267dfac5f76fcc33b3143f3ae5d0a24f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteObject&lt;/code&gt; class implements the &lt;code&gt;java.lang.Object&lt;/code&gt; behavior for remote objects. &lt;code&gt;RemoteObject&lt;/code&gt; provides the remote semantics of Object by implementing methods for hashCode, equals, and toString.</source>
          <target state="translated">本 &lt;code&gt;RemoteObject&lt;/code&gt; 类实现 &lt;code&gt;java.lang.Object&lt;/code&gt; 中远程对象的行为。 &lt;code&gt;RemoteObject&lt;/code&gt; 通过实现hashCode，equals和toString的方法来提供Object的远程语义。</target>
        </trans-unit>
        <trans-unit id="b05077cbaa2115faf813b944cba45ca60c9c6de1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteServer&lt;/code&gt; class is the common superclass to server implementations and provides the framework to support a wide range of remote reference semantics.</source>
          <target state="translated">所述 &lt;code&gt;RemoteServer&lt;/code&gt; 类是公共超服务器实现，并提供支持大量远程引用语义的框架。</target>
        </trans-unit>
        <trans-unit id="792164c73f012a6eeb208eb8bd1c997b5b34f4ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteServer&lt;/code&gt; class is the common superclass to server implementations and provides the framework to support a wide range of remote reference semantics. Specifically, the functions needed to create and export remote objects (i.e. to make them remotely available) are provided abstractly by &lt;code&gt;RemoteServer&lt;/code&gt; and concretely by its subclass(es).</source>
          <target state="translated">所述 &lt;code&gt;RemoteServer&lt;/code&gt; 类是公共超服务器实现，并提供支持大量远程引用语义的框架。具体来说， &lt;code&gt;RemoteServer&lt;/code&gt; 会抽象地提供创建和导出远程对象（即使其可以远程使用）所需的功能，具体而言，其子类将提供这些功能。</target>
        </trans-unit>
        <trans-unit id="fa93b21177eae717f290dacea22a21f97b8f1d72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RemoteStub&lt;/code&gt; class is the common superclass of statically generated client stubs and provides the framework to support a wide range of remote reference semantics. Stub objects are surrogates that support exactly the same set of remote interfaces defined by the actual implementation of the remote object.</source>
          <target state="translated">所述 &lt;code&gt;RemoteStub&lt;/code&gt; 类是静态生成的客户机存根的公共超并提供支持大量远程引用语义的框架。存根对象是代理，它支持由远程对象的实际实现定义的完全相同的一组远程接口。</target>
        </trans-unit>
        <trans-unit id="9fb5c4efba8253cf833773d52f6ee715196af2f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderedImage&lt;/code&gt; being referenced.</source>
          <target state="translated">被引用的 &lt;code&gt;RenderedImage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff6444550237d5fb85d8a7c51d5efc98d5ae9185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; class defines and manages collections of keys and associated values which allow an application to provide input into the choice of algorithms used by other classes which perform rendering and image manipulation services.</source>
          <target state="translated">所述 &lt;code&gt;RenderingHints&lt;/code&gt; 类定义和管理密钥和相关联的值，其允许应用程序提供输入成由执行渲染和图像处理服务的其他类所使用的算法的选择的集合。</target>
        </trans-unit>
        <trans-unit id="9887a53bebe132f40788e0d2065e4ecd783e3235" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; class defines and manages collections of keys and associated values which allow an application to provide input into the choice of algorithms used by other classes which perform rendering and image manipulation services. The &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; class, and classes that implement &lt;a href=&quot;image/bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;image/rasterop&quot;&gt;&lt;code&gt;RasterOp&lt;/code&gt;&lt;/a&gt; all provide methods to get and possibly to set individual or groups of &lt;code&gt;RenderingHints&lt;/code&gt; keys and their associated values. When those implementations perform any rendering or image manipulation operations they should examine the values of any &lt;code&gt;RenderingHints&lt;/code&gt; that were requested by the caller and tailor the algorithms used accordingly and to the best of their ability.</source>
          <target state="translated">所述 &lt;code&gt;RenderingHints&lt;/code&gt; 类定义和管理密钥和相关联的值，其允许应用程序提供输入成由执行渲染和图像处理服务的其他类所使用的算法的选择的集合。该&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; 的&lt;/a&gt;实现类和类&lt;a href=&quot;image/bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; 中&lt;/a&gt;和&lt;a href=&quot;image/rasterop&quot;&gt; &lt;code&gt;RasterOp&lt;/code&gt; 的&lt;/a&gt;所有提供方法来获取并可能设置个人或团体 &lt;code&gt;RenderingHints&lt;/code&gt; 键及其关联值。当这些实现执行任何渲染或图像处理操作时，它们应检查调用方请求的任何 &lt;code&gt;RenderingHints&lt;/code&gt; 的值，并尽其所能调整相应使用的算法。</target>
        </trans-unit>
        <trans-unit id="698f6ce8695409c9c1d016b240fc277d2daf556f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; object associated with this op.</source>
          <target state="translated">与此操作关联的 &lt;code&gt;RenderingHints&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="77e24654175305f0a647c70b9c35f59becd0d1e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; object associated with this operation. Returns null if no hints have been set.</source>
          <target state="translated">与此操作关联的 &lt;code&gt;RenderingHints&lt;/code&gt; 对象。如果未设置任何提示，则返回null。</target>
        </trans-unit>
        <trans-unit id="dcb353570992b66e098ee6f81b7550b5c291b768" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderingHints&lt;/code&gt; object for this &lt;code&gt;BufferedImageOp&lt;/code&gt;. Returns null if no hints have been set.</source>
          <target state="translated">此 &lt;code&gt;BufferedImageOp&lt;/code&gt; 的 &lt;code&gt;RenderingHints&lt;/code&gt; 对象。如果未设置任何提示，则返回null。</target>
        </trans-unit>
        <trans-unit id="fb9d41c3fa3c99032ae09838bf89f6521b0c7d6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultSet&lt;/code&gt; interface provides</source>
          <target state="translated">该 &lt;code&gt;ResultSet&lt;/code&gt; 的接口提供</target>
        </trans-unit>
        <trans-unit id="09f27659fdc1b9513eeb6b0754213ec48f2fa7c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultSet&lt;/code&gt; is sorted by the NAME column</source>
          <target state="translated">该 &lt;code&gt;ResultSet&lt;/code&gt; 是由NAME列排序</target>
        </trans-unit>
        <trans-unit id="887b6c862a54810bed3530170ef96026c940d025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResultSet&lt;/code&gt; object that is returned has the following columns:</source>
          <target state="translated">返回的 &lt;code&gt;ResultSet&lt;/code&gt; 对象具有以下列：</target>
        </trans-unit>
        <trans-unit id="b9fc508b09fb91444f8aa155b416b9d56dbb1265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReverbType&lt;/code&gt; class provides methods for accessing various reverberation settings to be applied to an audio signal.</source>
          <target state="translated">所述 &lt;code&gt;ReverbType&lt;/code&gt; 类提供要被施加到的音频信号，用于访问各种回响设置方法。</target>
        </trans-unit>
        <trans-unit id="2cd9cf5f4a30505ba459be4135f61441e2ae2fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundRectangle2D&lt;/code&gt; class defines a rectangle with rounded corners defined by a location &lt;code&gt;(x,y)&lt;/code&gt;, a dimension &lt;code&gt;(w x h)&lt;/code&gt;, and the width and height of an arc with which to round the corners.</source>
          <target state="translated">所述 &lt;code&gt;RoundRectangle2D&lt;/code&gt; 类定义与由位置界定圆角的矩形 &lt;code&gt;(x,y)&lt;/code&gt; ，一个尺寸 &lt;code&gt;(w x h)&lt;/code&gt; ，并用其圆拐角的电弧的宽度和高度。</target>
        </trans-unit>
        <trans-unit id="afe97ee9c3219412d61628980fe8432b9daaba4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundingMode&lt;/code&gt; used for this DecimalFormat.</source>
          <target state="translated">用于此DecimalFormat 的 &lt;code&gt;RoundingMode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffe20390fecad2daec079563f89bb0ffa523a1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundingMode&lt;/code&gt; used for this NumberFormat.</source>
          <target state="translated">用于此NumberFormat 的 &lt;code&gt;RoundingMode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bf318326f683bc3130a7e47f41a597fb78b5f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface is unique in that it is intended to be implemented using the rest of the JDBC API. In other words, a &lt;code&gt;RowSet&lt;/code&gt; implementation is a layer of software that executes &quot;on top&quot; of a JDBC driver. Implementations of the &lt;code&gt;RowSet&lt;/code&gt; interface can be provided by anyone, including JDBC driver vendors who want to provide a &lt;code&gt;RowSet&lt;/code&gt; implementation as part of their JDBC products.</source>
          <target state="translated">该 &lt;code&gt;RowSet&lt;/code&gt; 接口是独特的，它的目的是使用JDBC API的其余部分实现。换句话说， &lt;code&gt;RowSet&lt;/code&gt; 实现是在JDBC驱动程序的&amp;ldquo;顶层&amp;rdquo;执行的软件层。任何人都可以提供 &lt;code&gt;RowSet&lt;/code&gt; 接口的实现，包括想要将 &lt;code&gt;RowSet&lt;/code&gt; 实现作为其JDBC产品的一部分提供的JDBC驱动程序供应商。</target>
        </trans-unit>
        <trans-unit id="6a660d92b53da40c64110ae03c4012f99aaf197b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface may be implemented in any number of ways, and anyone may write an implementation. Developers are encouraged to use their imaginations in coming up with new ways to use rowsets.</source>
          <target state="translated">该 &lt;code&gt;RowSet&lt;/code&gt; 接口可以以任何数量的方式来实现，任何人都可以写一个实现。鼓励开发人员利用他们的想象力提出使用行集的新方法。</target>
        </trans-unit>
        <trans-unit id="6e183ab9ec4067e3978fb0f51f24da4f320d25d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface provides a set of JavaBeans properties that allow a &lt;code&gt;RowSet&lt;/code&gt; instance to be configured to connect to a JDBC data source and read some data from the data source. A group of setter methods (&lt;code&gt;setInt&lt;/code&gt;, &lt;code&gt;setBytes&lt;/code&gt;, &lt;code&gt;setString&lt;/code&gt;, and so on) provide a way to pass input parameters to a rowset's command property. This command is the SQL query the rowset uses when it gets its data from a relational database, which is generally the case.</source>
          <target state="translated">的 &lt;code&gt;RowSet&lt;/code&gt; 接口提供一组JavaBeans属性，其允许的 &lt;code&gt;RowSet&lt;/code&gt; 实例被配置为从数据源连接到一个JDBC数据源和读取一些数据。一组setter方法（ &lt;code&gt;setInt&lt;/code&gt; ， &lt;code&gt;setBytes&lt;/code&gt; ， &lt;code&gt;setString&lt;/code&gt; 等）提供了一种将输入参数传递到行集的command属性的方法。该命令是行集从关系数据库获取数据时行使用的SQL查询，通常是这种情况。</target>
        </trans-unit>
        <trans-unit id="7f4204c54cc12e00930766d695bcc0a0d93d8f28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface supports JavaBeans events, allowing other components in an application to be notified when an event occurs on a rowset, such as a change in its value.</source>
          <target state="translated">的 &lt;code&gt;RowSet&lt;/code&gt; 接口支持的JavaBeans事件，从而允许其它组件在应用程序在事件上的行集发生时，如在其值的变化的通知。</target>
        </trans-unit>
        <trans-unit id="ff10a7bec4f9799f3f4222f05b3fb7ecfbe4c533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSet&lt;/code&gt; interface works with various other classes and interfaces behind the scenes. These can be grouped into three categories.</source>
          <target state="translated">该 &lt;code&gt;RowSet&lt;/code&gt; 接口可与各种其他类和接口的幕后。这些可以分为三类。</target>
        </trans-unit>
        <trans-unit id="ed7467c598f02f617b848f30e8afc44cd8eee80c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSetMetaData&lt;/code&gt; interface differs from the &lt;code&gt;ResultSetMetaData&lt;/code&gt; interface in two ways.</source>
          <target state="translated">该 &lt;code&gt;RowSetMetaData&lt;/code&gt; 的接口上不同于 &lt;code&gt;ResultSetMetaData&lt;/code&gt; 的方式有两种接口。</target>
        </trans-unit>
        <trans-unit id="842bdaad38403a9056358dfffb5fed12b8ad0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSetMetaData&lt;/code&gt; interface provides methods for setting the information about columns, but an application would not normally use these methods. When an application calls the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;execute&lt;/code&gt;, the &lt;code&gt;RowSet&lt;/code&gt; object will contain a new set of rows, and its &lt;code&gt;RowSetMetaData&lt;/code&gt; object will have been internally updated to contain information about the new columns.</source>
          <target state="translated">该 &lt;code&gt;RowSetMetaData&lt;/code&gt; 接口提供用于设置关于列的信息的方法，但是应用程序通常不使用这些方法。当应用程序调用 &lt;code&gt;RowSet&lt;/code&gt; 方法 &lt;code&gt;execute&lt;/code&gt; 时， &lt;code&gt;RowSet&lt;/code&gt; 对象将包含一组新的行，并且其 &lt;code&gt;RowSetMetaData&lt;/code&gt; 对象将在内部进行更新以包含有关新列的信息。</target>
        </trans-unit>
        <trans-unit id="6a2e4c6f5a9389501138281dd4f3af7406e50bb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowSetWarning&lt;/code&gt; class provides warnings that can be set on &lt;code&gt;RowSet&lt;/code&gt; implementations. Similar to &lt;a href=&quot;../../../../java.sql/java/sql/sqlwarning&quot;&gt;SQLWarning&lt;/a&gt; objects, &lt;code&gt;RowSetWarning&lt;/code&gt; objects are silently chained to the object whose method caused the warning to be thrown. All &lt;code&gt;RowSet&lt;/code&gt; implementations &lt;b&gt;should&lt;/b&gt; ensure that this chaining occurs if a warning is generated and also ensure that the warnings are available via the &lt;code&gt;getRowSetWarnings&lt;/code&gt; method defined in either the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface or the &lt;code&gt;CachedRowSet&lt;/code&gt; interface. After a warning has been retrieved with one of the &lt;code&gt;getRowSetWarnings&lt;/code&gt; methods, the &lt;code&gt;RowSetWarning&lt;/code&gt; method &lt;code&gt;getNextWarning&lt;/code&gt; can be called on it to retrieve any warnings that might be chained on it. If a warning is returned, &lt;code&gt;getNextWarning&lt;/code&gt; can be called on it, and so on until there are no more warnings.</source>
          <target state="translated">在 &lt;code&gt;RowSetWarning&lt;/code&gt; 类提供了一个可以设置警告 &lt;code&gt;RowSet&lt;/code&gt; 实现。与&lt;a href=&quot;../../../../java.sql/java/sql/sqlwarning&quot;&gt;SQLWarning&lt;/a&gt;对象类似， &lt;code&gt;RowSetWarning&lt;/code&gt; 对象以静默方式链接到其方法导致引发警告的对象。所有 &lt;code&gt;RowSet&lt;/code&gt; 实现&lt;b&gt;都应&lt;/b&gt;确保如果生成警告，则发生此链接，并且还应确保可以通过 &lt;code&gt;JdbcRowSet&lt;/code&gt; 接口或 &lt;code&gt;CachedRowSet&lt;/code&gt; 接口中定义的 &lt;code&gt;getRowSetWarnings&lt;/code&gt; 方法获得警告。使用 &lt;code&gt;getRowSetWarnings&lt;/code&gt; 方法之一检索到警告后， &lt;code&gt;RowSetWarning&lt;/code&gt; 可以在其上调用方法 &lt;code&gt;getNextWarning&lt;/code&gt; 来检索可能链接在其上的任何警告。如果返回警告， &lt;code&gt;getNextWarning&lt;/code&gt; 可以在其上调用getNextWarning，依此类推，直到没有其他警告为止。</target>
        </trans-unit>
        <trans-unit id="3ce1c50b3393b4ee8852b94258a4243c5413126c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RowsetMetaDataImpl&lt;/code&gt; class is a utility class that provides an implementation of the &lt;a href=&quot;../../../../java.sql/javax/sql/rowsetmetadata&quot;&gt;RowSetMetaData&lt;/a&gt; interface, supplying standard setter method implementations for metadata for both connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. All implementations are free to use this standard implementation but are not required to do so.</source>
          <target state="translated">所述 &lt;code&gt;RowsetMetaDataImpl&lt;/code&gt; 类是一个工具类，其提供的一种实现&lt;a href=&quot;../../../../java.sql/javax/sql/rowsetmetadata&quot;&gt;的RowSetMetaData&lt;/a&gt;接口，两个连接和断开供给元数据标准制定者的方法实现 &lt;code&gt;RowSet&lt;/code&gt; 的对象。所有实现均可免费使用此标准实现，但并非必须如此。</target>
        </trans-unit>
        <trans-unit id="9a6c5472e51dff7ede55a06c630f405c31babb27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RuleBasedCollator&lt;/code&gt; class is a concrete subclass of &lt;code&gt;Collator&lt;/code&gt; that provides a simple, data-driven, table collator.</source>
          <target state="translated">所述 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 类是的具体子类 &lt;code&gt;Collator&lt;/code&gt; ，提供了一个简单的，数据驱动的表collat​​or。</target>
        </trans-unit>
        <trans-unit id="2ed8190679df509541420fb54e8aaab97382d51f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RuleBasedCollator&lt;/code&gt; class is a concrete subclass of &lt;code&gt;Collator&lt;/code&gt; that provides a simple, data-driven, table collator. With this class you can create a customized table-based &lt;code&gt;Collator&lt;/code&gt;. &lt;code&gt;RuleBasedCollator&lt;/code&gt; maps characters to sort keys.</source>
          <target state="translated">所述 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 类是的具体子类 &lt;code&gt;Collator&lt;/code&gt; ，提供了一个简单的，数据驱动的表collat​​or。使用此类，您可以创建自定义的基于表的 &lt;code&gt;Collator&lt;/code&gt; 。 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 映射字符以对键进行排序。</target>
        </trans-unit>
        <trans-unit id="5098c81b7457412bf4917d02e9a1dfef85b5fe26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any class whose instances are intended to be executed by a thread.</source>
          <target state="translated">该 &lt;code&gt;Runnable&lt;/code&gt; 的接口应该由任何类，其实例旨在由一个线程执行来实现。</target>
        </trans-unit>
        <trans-unit id="d8f15f8d81c303338ba2b966d98884e4108ae0f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any class whose instances are intended to be executed by a thread. The class must define a method of no arguments called &lt;code&gt;run&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Runnable&lt;/code&gt; 的接口应该由任何类，其实例旨在由一个线程执行来实现。该类必须定义一个没有参数的方法，称为 &lt;code&gt;run&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ed109534b0233e529cda2e37e8cc9f0e3ad7221" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SCTPChannel&lt;/code&gt; returned by this method, if any, will be in blocking mode regardless of the blocking mode of this channel.</source>
          <target state="translated">无论此通道的阻塞模式如何，此方法返回的 &lt;code&gt;SCTPChannel&lt;/code&gt; （如果有）将处于阻塞模式。</target>
        </trans-unit>
        <trans-unit id="d3f808001c5fe1d02e1eabc6c93ae2430220e931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHORT&lt;/code&gt; number format style.</source>
          <target state="translated">该 &lt;code&gt;SHORT&lt;/code&gt; 数字格式的风格。</target>
        </trans-unit>
        <trans-unit id="d9f88a23d98de0fb1ab893f3f7409818a9bbc61d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SMART&lt;/code&gt; behaviour handles the common &quot;end of day&quot; 24:00 value. Processing in &lt;code&gt;LENIENT&lt;/code&gt; mode also produces the same result:</source>
          <target state="translated">该 &lt;code&gt;SMART&lt;/code&gt; 行为处理24:00价值常见的&amp;ldquo;一天结束&amp;rdquo;。在 &lt;code&gt;LENIENT&lt;/code&gt; 模式下处理也会产生相同的结果：</target>
        </trans-unit>
        <trans-unit id="41ead63f7c6236fad7e6307adb65902f694060ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLException&lt;/code&gt; the driver is about to throw</source>
          <target state="translated">驱动程序即将抛出的 &lt;code&gt;SQLException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1740ef1e8ee2276f649ff5e25da7294fc66b2bc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLInputImpl&lt;/code&gt; class provides a set of reader methods analogous to the &lt;code&gt;ResultSet&lt;/code&gt; getter methods. These methods make it possible to read the values in an &lt;code&gt;SQLInputImpl&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;SQLInputImpl&lt;/code&gt; 中类别提供一组的阅读器的方法类似于 &lt;code&gt;ResultSet&lt;/code&gt; 吸气剂的方法。这些方法使读取 &lt;code&gt;SQLInputImpl&lt;/code&gt; 对象中的值成为可能。</target>
        </trans-unit>
        <trans-unit id="7e31e968e4e78d48b334cc0a2fd729e775d78ea9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLInputImpl&lt;/code&gt; class provides a set of reader methods analogous to the &lt;code&gt;ResultSet&lt;/code&gt; getter methods. These methods make it possible to read the values in an &lt;code&gt;SQLInputImpl&lt;/code&gt; object. The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the last value read was SQL NULL.</source>
          <target state="translated">所述 &lt;code&gt;SQLInputImpl&lt;/code&gt; 中类别提供一组的阅读器的方法类似于 &lt;code&gt;ResultSet&lt;/code&gt; 吸气剂的方法。这些方法使读取 &lt;code&gt;SQLInputImpl&lt;/code&gt; 对象中的值成为可能。该方法 &lt;code&gt;wasNull&lt;/code&gt; 用于确定读取的最后一个值是否是SQL NULL。</target>
        </trans-unit>
        <trans-unit id="64049cd592e8eb0ec78aec4cd353b6f5aabba963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; completed the operation, and is available to process similar calls.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上完成了操作，并且可处理类似的调用。</target>
        </trans-unit>
        <trans-unit id="077b184f78f7e5525918d7fe92403baaa5f9a42d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; has just finished handshaking.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上刚刚结束握手。</target>
        </trans-unit>
        <trans-unit id="df118613b41d79c011b7a0bc6c7f48652d896d51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; is not currently handshaking.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的当前没有握手。</target>
        </trans-unit>
        <trans-unit id="1926ac57988ad07ff17731c0dbc1dd707e5b1e02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; must send data to the remote side before handshaking can continue, so &lt;code&gt;SSLEngine.wrap()&lt;/code&gt; should be called.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上必须将数据发送到远程端前握手可以继续，所以 &lt;code&gt;SSLEngine.wrap()&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="02fa5e3b89e2cea3ead9db69cbe845f18df35ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs the results of one (or more) delegated tasks before handshaking can continue.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的需要的一个（或多个）委派的任务结果前握手可以继续。</target>
        </trans-unit>
        <trans-unit id="082a3cd7613f1264f8b5206e5fbed35f61a0dff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs to receive data from the remote side before handshaking can continue.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的需要从远程端接收数据前握手可以继续。</target>
        </trans-unit>
        <trans-unit id="a7d5c985500f42653f476fc251500be91c49e1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs to unwrap before handshaking can continue.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的需要拆开包装前握手可以继续。</target>
        </trans-unit>
        <trans-unit id="d352a14052137339f442e35be68221c08d8d1336" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; produces/consumes complete SSL/TLS packets only, and does not store application data internally between calls to &lt;code&gt;wrap()/unwrap()&lt;/code&gt;. Thus input and output &lt;code&gt;ByteBuffer&lt;/code&gt;s must be sized appropriately to hold the maximum record that can be produced. Calls to &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; should be used to determine the appropriate buffer sizes. The size of the outbound application data buffer generally does not matter. If buffer conditions do not allow for the proper consumption/production of data, the application must determine (via &lt;a href=&quot;sslengineresult&quot;&gt;&lt;code&gt;SSLEngineResult&lt;/code&gt;&lt;/a&gt;) and correct the problem, and then try the call again.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的生产/只消耗完整的SSL / TLS包，并没有调用之间内部存储应用程序数据 &lt;code&gt;wrap()/unwrap()&lt;/code&gt; 。因此，必须适当调整输入和输出 &lt;code&gt;ByteBuffer&lt;/code&gt; 的大小，以容纳可以产生的最大记录。应当使用对&lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; 的&lt;/a&gt;调用来确定适当的缓冲区大小。出站应用程序数据缓冲区的大小通常无关紧要。如果缓冲区条件不允许正确使用/产生数据，则应用程序必须确定（通过&lt;a href=&quot;sslengineresult&quot;&gt; &lt;code&gt;SSLEngineResult&lt;/code&gt; &lt;/a&gt;）并纠正问题，然后再次尝试调用。</target>
        </trans-unit>
        <trans-unit id="d281a4755dd5b701c487bc1d549aca11bc928e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; produces/consumes complete SSL/TLS/DTLS packets only, and does not store application data internally between calls to &lt;code&gt;wrap()/unwrap()&lt;/code&gt;. Thus input and output &lt;code&gt;ByteBuffer&lt;/code&gt;s must be sized appropriately to hold the maximum record that can be produced. Calls to &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; should be used to determine the appropriate buffer sizes. The size of the outbound application data buffer generally does not matter. If buffer conditions do not allow for the proper consumption/production of data, the application must determine (via &lt;a href=&quot;sslengineresult&quot;&gt;&lt;code&gt;SSLEngineResult&lt;/code&gt;&lt;/a&gt;) and correct the problem, and then try the call again.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的生产/完整的SSL / TLS / DTLS数据包只消耗，并且不存储应用程序数据在内部调用之间 &lt;code&gt;wrap()/unwrap()&lt;/code&gt; 。因此，必须适当调整输入和输出 &lt;code&gt;ByteBuffer&lt;/code&gt; 的大小，以容纳可以产生的最大记录。应当使用对&lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; 的&lt;/a&gt;调用来确定适当的缓冲区大小。出站应用程序数据缓冲区的大小通常无关紧要。如果缓冲区条件不允许正确使用/产生数据，则应用程序必须确定（通过&lt;a href=&quot;sslengineresult&quot;&gt; &lt;code&gt;SSLEngineResult&lt;/code&gt; &lt;/a&gt;）并纠正问题，然后再次尝试调用。</target>
        </trans-unit>
        <trans-unit id="b752ac795479df72fea9b170d743467ba0f0cfba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to process the operation because there are not enough bytes available in the destination buffer to hold the result.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上无法因为没有目标缓冲区容纳结果提供足够的字节来处理操作。</target>
        </trans-unit>
        <trans-unit id="eaeaedd8a0decde5ead8adb6e73dcb183ff095c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to unwrap the incoming data because there were not enough source bytes available to make a complete packet.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上无法解开的输入数据，因为没有足够的源字节可以做一个完整的数据包。</target>
        </trans-unit>
        <trans-unit id="cbaeb5659c8aac8f7fee34b65d2504a15d654f38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLSocket&lt;/code&gt; class provides much of the same security functionality, but all of the inbound and outbound data is automatically transported using the underlying &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;, which by design uses a blocking model. While this is appropriate for many applications, this model does not provide the scalability required by large servers.</source>
          <target state="translated">所述 &lt;code&gt;SSLSocket&lt;/code&gt; 的类提供的几乎相同的安全功能，但所有的入站和出站数据的使用底层自动传送&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;，其通过设计采用了阻挡模型。尽管这对许多应用程序都适用，但是此模型不能提供大型服务器所需的可伸缩性。</target>
        </trans-unit>
        <trans-unit id="0096287b7ac27b301cefed5627b43cb896febf8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation is only required to support the &lt;a href=&quot;http://www.w3.org/TR/xmlschema-1&quot;&gt;W3C XML Schema 1.0&lt;/a&gt;, but may support additional &lt;a href=&quot;#schemaLanguage&quot;&gt;schema languages&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;SchemaFactory&lt;/code&gt; 的内置系统默认的实现只需要支持&lt;a href=&quot;http://www.w3.org/TR/xmlschema-1&quot;&gt;W3C XML模式1.0&lt;/a&gt;，但可能支持额外的&lt;a href=&quot;#schemaLanguage&quot;&gt;模式语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e2fbe337a7cccde43edff1b51bee0ae5e969a9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation is only required to support the &lt;a href=&quot;https://www.w3.org/TR/xmlschema-1&quot;&gt;W3C XML Schema 1.0&lt;/a&gt;, but may support additional &lt;a href=&quot;#schemaLanguage&quot;&gt;schema languages&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;SchemaFactory&lt;/code&gt; 的内置系统默认的实现只需要支持&lt;a href=&quot;https://www.w3.org/TR/xmlschema-1&quot;&gt;W3C XML模式1.0&lt;/a&gt;，但可能支持额外的&lt;a href=&quot;#schemaLanguage&quot;&gt;模式语言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67002f2853371825d4f380e6151673d61fd862c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngine&lt;/code&gt; implementation version.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngine&lt;/code&gt; 的实现版本。</target>
        </trans-unit>
        <trans-unit id="f25a0860dae0919f1e2c083b37f6094e4c1e6bad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngine&lt;/code&gt; that created this &lt;code&gt;CompiledScript&lt;/code&gt;</source>
          <target state="translated">创建此 &lt;code&gt;CompiledScript&lt;/code&gt; 的 &lt;code&gt;ScriptEngine&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e21343e7ca5145a39ccb5bfd47f5b581373d98e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineFactory&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 所</target>
        </trans-unit>
        <trans-unit id="b665ef5d411bf64411a13e786d5fc2ae59afce43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 实现了一个发现和实例化机制 &lt;code&gt;ScriptEngine&lt;/code&gt; 类和还保持存储由所有Manager创建的引擎所共享的状态键/值对的集合。</target>
        </trans-unit>
        <trans-unit id="bb930e4838810a193fdb5c27c289e1b3c97321a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager. This class uses the service provider mechanism described in the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class to enumerate all the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 实现了一个发现和实例化机制 &lt;code&gt;ScriptEngine&lt;/code&gt; 类和还保持存储由所有Manager创建的引擎所共享的状态键/值对的集合。此类使用&lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类中描述的服务提供程序机制来枚举 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 的所有实现。</target>
        </trans-unit>
        <trans-unit id="e8ac26f4b46b05f20c281cbfe3a63c1a0d4d63f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager. This class uses the service provider mechanism to enumerate all the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 实现了一个发现和实例化机制 &lt;code&gt;ScriptEngine&lt;/code&gt; 类和还保持存储由所有Manager创建的引擎所共享的状态键/值对的集合。此类使用服务提供者机制枚举 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 的所有实现。</target>
        </trans-unit>
        <trans-unit id="c8f5248bd1e6ed1326e622b205ee4a45bbc651cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; provides a method to return a list of all these factories as well as utility methods which look up factories on the basis of language name, file extension and mime type.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 提供返回所有这些工厂的名单，以及实用方法查找工厂语言名称，文件扩展名和MIME类型的基础上的方法。</target>
        </trans-unit>
        <trans-unit id="901dec5a90ef8a0878213de32ad7798df415e097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; uses the service provider mechanism described in the</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 使用中所描述的服务提供者机制</target>
        </trans-unit>
        <trans-unit id="c74549e06bd34285399a1ea925354aef44983aef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; uses the service-provider loader mechanism described in the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class to obtain instances of &lt;code&gt;ScriptEngineFactory&lt;/code&gt; instances. See &lt;a href=&quot;scriptenginemanager#%3Cinit%3E()&quot;&gt;&lt;code&gt;ScriptEngineManager()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scriptenginemanager#%3Cinit%3E(java.lang.ClassLoader)&quot;&gt;&lt;code&gt;ScriptEngineManager(java.lang.ClassLoader)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 使用在所描述的服务提供者装载机构&lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类获得的实例 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 所实例。请参见&lt;a href=&quot;scriptenginemanager#%3Cinit%3E()&quot;&gt; &lt;code&gt;ScriptEngineManager()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;scriptenginemanager#%3Cinit%3E(java.lang.ClassLoader)&quot;&gt; &lt;code&gt;ScriptEngineManager(java.lang.ClassLoader)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="932ad5c0b4a4f7d61a4d48e2e85b2a5aec990bf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Scrollbar&lt;/code&gt; class embodies a scroll bar, a familiar user-interface object.</source>
          <target state="translated">的 &lt;code&gt;Scrollbar&lt;/code&gt; 类描述了一个滚动条，一个熟悉的用户界面对象。</target>
        </trans-unit>
        <trans-unit id="5630c5e07781b19f55a9c82b7919e0cb4c1d7533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Scrollbar&lt;/code&gt; class embodies a scroll bar, a familiar user-interface object. A scroll bar provides a convenient means for allowing a user to select from a range of values. The following three vertical scroll bars could be used as slider controls to pick the red, green, and blue components of a color:</source>
          <target state="translated">的 &lt;code&gt;Scrollbar&lt;/code&gt; 类描述了一个滚动条，一个熟悉的用户界面对象。滚动条提供了一种方便的方法，用于允许用户从一系列值中进行选择。以下三个垂直滚动条可用作滑块控件，以选择颜色的红色，绿色和蓝色分量：</target>
        </trans-unit>
        <trans-unit id="43cb6349a89fc413e1dd0550d70890cc77d3e5a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SctpChannel&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;SctpChannel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcf2e0bf99eab15ad6a0fa15e39d7a6c2e33fef8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SearchResult&lt;/code&gt; may also contain attributes of the matching object if the &lt;code&gt;cons&lt;/code&gt; argument specifies that attributes be returned.</source>
          <target state="translated">的 &lt;code&gt;SearchResult&lt;/code&gt; 也可包含匹配对象的属性，如果 &lt;code&gt;cons&lt;/code&gt; 被返回参数指定属性。</target>
        </trans-unit>
        <trans-unit id="eabc9dbc1a3de0e0e126d5d1a67a58df32a7962f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SecurityManager&lt;/code&gt; class contains many methods with names that begin with the word &lt;code&gt;check&lt;/code&gt;. These methods are called by various methods in the Java libraries before those methods perform certain potentially sensitive operations. The invocation of such a &lt;code&gt;check&lt;/code&gt; method typically looks like this:</source>
          <target state="translated">在 &lt;code&gt;SecurityManager&lt;/code&gt; 类包含与字开头的名称很多方法 &lt;code&gt;check&lt;/code&gt; 。在这些方法执行某些潜在的敏感操作之前，这些方法会被Java库中的各种方法调用。这种 &lt;code&gt;check&lt;/code&gt; 方法的调用通常如下所示：</target>
        </trans-unit>
        <trans-unit id="cdf333c83d829b3401cd3328628d6c609f64f31a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Sequencer&lt;/code&gt; interface includes methods for the following basic MIDI sequencer operations:</source>
          <target state="translated">该 &lt;code&gt;Sequencer&lt;/code&gt; 接口包括用于以下基本MIDI音序器操作的方法：</target>
        </trans-unit>
        <trans-unit id="ca4629da4215ec3fb3d7c910ce572fca6f512771" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialArray&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialArray&lt;/code&gt; instance from an &lt;code&gt;Array&lt;/code&gt; object, methods for getting the base type and the SQL name for the base type, and methods for copying all or part of a &lt;code&gt;SerialArray&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;SerialArray&lt;/code&gt; 类提供一个构造用于创建 &lt;code&gt;SerialArray&lt;/code&gt; 从实例 &lt;code&gt;Array&lt;/code&gt; 对象，用于获取基本类型的，基本类型的SQL名称，和用于复制全部或一部分的方法的方法 &lt;code&gt;SerialArray&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="3613b9a6953562b14aa7159f20c01879def263ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialArray&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialArray&lt;/code&gt; instance from an Array object, methods for getting the base type and the SQL name for the base type, and methods for copying all or part of a &lt;code&gt;SerialArray&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;SerialArray&lt;/code&gt; 类提供一个构造用于创建 &lt;code&gt;SerialArray&lt;/code&gt; 从数组对象实例，用于获取基本类型的，基本类型的SQL名称，和用于复制全部或一部分的方法的方法 &lt;code&gt;SerialArray&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b2b0eceea94ee3adc7c8249de1bfdf76c94557a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialBlob&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Blob&lt;/code&gt; object. Note that the &lt;code&gt;Blob&lt;/code&gt; object should have brought the SQL &lt;code&gt;BLOB&lt;/code&gt; value's data over to the client before a &lt;code&gt;SerialBlob&lt;/code&gt; object is constructed from it. The data of an SQL &lt;code&gt;BLOB&lt;/code&gt; value can be materialized on the client as an array of bytes (using the method &lt;code&gt;Blob.getBytes&lt;/code&gt;) or as a stream of uninterpreted bytes (using the method &lt;code&gt;Blob.getBinaryStream&lt;/code&gt;).</source>
          <target state="translated">该 &lt;code&gt;SerialBlob&lt;/code&gt; 类提供了从创建实例的构造方法 &lt;code&gt;Blob&lt;/code&gt; 对象。请注意，在从该对象构造一个 &lt;code&gt;SerialBlob&lt;/code&gt; 对象之前，该 &lt;code&gt;Blob&lt;/code&gt; 对象应该已将SQL &lt;code&gt;BLOB&lt;/code&gt; 值的数据传递给客户端。可以在客户端上将SQL &lt;code&gt;BLOB&lt;/code&gt; 值的数据具体化为字节数组（使用方法 &lt;code&gt;Blob.getBytes&lt;/code&gt; ）或未解释字节流（使用方法 &lt;code&gt;Blob.getBinaryStream&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="daca7fc0c00803e3d344fe9e44d60a1abc8d188f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialBlob&lt;/code&gt; class provides a constructor for creating an instance from a Blob object. Note that the Blob object should have brought the SQL BLOB value's data over to the client before a &lt;code&gt;SerialBlob&lt;/code&gt; object is constructed from it. The data of an SQL BLOB value can be materialized on the client as an array of bytes (using the method &lt;code&gt;Blob.getBytes&lt;/code&gt;) or as a stream of uninterpreted bytes (using the method &lt;code&gt;Blob.getBinaryStream&lt;/code&gt;).</source>
          <target state="translated">该 &lt;code&gt;SerialBlob&lt;/code&gt; 类提供一个Blob对象创建实例的构造函数。请注意，在从该对象构造一个 &lt;code&gt;SerialBlob&lt;/code&gt; 对象之前，该Blob对象应该已将SQL BLOB值的数据传递给客户端。可以在客户端上将SQL BLOB值的数据具体化为字节数组（使用方法 &lt;code&gt;Blob.getBytes&lt;/code&gt; ）或未解释字节流（使用方法 &lt;code&gt;Blob.getBinaryStream&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a36b2be101ab96842813d3879e3c76a7ca051531" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialBlob&lt;/code&gt;class provides a constructor for creating an instance from a Blob object. Note that the Blob object should have brought the SQL BLOB value's data over to the client before a &lt;code&gt;SerialBlob&lt;/code&gt;object is constructed from it. The data of an SQL BLOB value can be materialized on the client as an array of bytes (using the method &lt;code&gt;Blob.getBytes&lt;/code&gt;) or as a stream of uninterpreted bytes (using the method &lt;code&gt;Blob.getBinaryStream&lt;/code&gt;).</source>
          <target state="translated">该 &lt;code&gt;SerialBlob&lt;/code&gt; 类提供一个Blob对象创建实例的构造函数。请注意，在从该对象构造一个 &lt;code&gt;SerialBlob&lt;/code&gt; 对象之前，该Blob对象应该已将SQL BLOB值的数据传递给客户端。可以在客户端上将SQL BLOB值的数据具体化为字节数组（使用方法 &lt;code&gt;Blob.getBytes&lt;/code&gt; ）或未解释字节流（使用方法 &lt;code&gt;Blob.getBinaryStream&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0878b5252f99568199e6ce8e7039ce8b4b616d65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialClob&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Clob&lt;/code&gt; object. Note that the &lt;code&gt;Clob&lt;/code&gt; object should have brought the SQL &lt;code&gt;CLOB&lt;/code&gt; value's data over to the client before a &lt;code&gt;SerialClob&lt;/code&gt; object is constructed from it. The data of an SQL &lt;code&gt;CLOB&lt;/code&gt; value can be materialized on the client as a stream of Unicode characters.</source>
          <target state="translated">该 &lt;code&gt;SerialClob&lt;/code&gt; 类提供了从创建实例的构造方法 &lt;code&gt;Clob&lt;/code&gt; 对象。请注意，在从 &lt;code&gt;Clob&lt;/code&gt; 对象构造 &lt;code&gt;SerialClob&lt;/code&gt; 对象之前，该对象应已将SQL &lt;code&gt;CLOB&lt;/code&gt; 值的数据传递给客户端。SQL &lt;code&gt;CLOB&lt;/code&gt; 值的数据可以作为Unicode字符流在客户端上实现。</target>
        </trans-unit>
        <trans-unit id="7407cdc2547618da6d7ac9d8e6b269f7ffc8487e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialClob&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Clob&lt;/code&gt; object. Note that the &lt;code&gt;Clob&lt;/code&gt; object should have brought the SQL CLOB value's data over to the client before a &lt;code&gt;SerialClob&lt;/code&gt; object is constructed from it. The data of an SQL CLOB value can be materialized on the client as a stream of Unicode characters.</source>
          <target state="translated">该 &lt;code&gt;SerialClob&lt;/code&gt; 类提供了从创建实例的构造方法 &lt;code&gt;Clob&lt;/code&gt; 对象。请注意，在从 &lt;code&gt;Clob&lt;/code&gt; 对象构造 &lt;code&gt;SerialClob&lt;/code&gt; 对象之前，该对象应已将SQL CLOB值的数据传递给客户端。SQL CLOB值的数据可以作为Unicode字符流在客户端上实现。</target>
        </trans-unit>
        <trans-unit id="531569263cbf3f2d83fdebfe2dd7a42eb6537822" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialRef&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialRef&lt;/code&gt; instance from a &lt;code&gt;Ref&lt;/code&gt; object and provides methods for getting and setting the &lt;code&gt;Ref&lt;/code&gt; object.</source>
          <target state="translated">该 &lt;code&gt;SerialRef&lt;/code&gt; 类提供一个构造函数用于创建 &lt;code&gt;SerialRef&lt;/code&gt; 从实例 &lt;code&gt;Ref&lt;/code&gt; 的对象，并提供了获取和设置方法 &lt;code&gt;Ref&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8a6014458943ef8b69cde5c3b67bcb9d35b9d8a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialRef&lt;/code&gt; class provides a constructor for creating a &lt;code&gt;SerialRef&lt;/code&gt; instance from a &lt;code&gt;Ref&lt;/code&gt; type and provides methods for getting and setting the &lt;code&gt;Ref&lt;/code&gt; object type.</source>
          <target state="translated">所述 &lt;code&gt;SerialRef&lt;/code&gt; 类提供一个构造用于创建 &lt;code&gt;SerialRef&lt;/code&gt; 从实例 &lt;code&gt;Ref&lt;/code&gt; 类型并提供用于获取和设置方法 &lt;code&gt;Ref&lt;/code&gt; 对象类型。</target>
        </trans-unit>
        <trans-unit id="331ac575055962225f9ade9cd92c609c9e5e6ec3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SerialStruct&lt;/code&gt; class provides a constructor for creating an instance from a &lt;code&gt;Struct&lt;/code&gt; object, a method for retrieving the SQL type name of the SQL structured type in the database, and methods for retrieving its attribute values.</source>
          <target state="translated">所述 &lt;code&gt;SerialStruct&lt;/code&gt; 类提供了用于从创建实例的构造 &lt;code&gt;Struct&lt;/code&gt; 对象，在所述数据库中检索的SQL结构类型的SQL类型名称的方法，以及用于检索其属性值的方法。</target>
        </trans-unit>
        <trans-unit id="e442aff7da1c49f449251d581aa63dde83a5af38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ServerSocket&lt;/code&gt; class defines convenience methods to set and get several socket options. This class also defines the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query socket options. A &lt;code&gt;ServerSocket&lt;/code&gt; supports the following options:</source>
          <target state="translated">该 &lt;code&gt;ServerSocket&lt;/code&gt; 的类定义方便的方法来设置和获取一些套接字选项。此类还定义了&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;方法以设置和查询套接字选项。一个 &lt;code&gt;ServerSocket&lt;/code&gt; 的支持下面的选项：</target>
        </trans-unit>
        <trans-unit id="2d6a25bea447e545dee0ec116fce9cf07f17df31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; interface places additional stipulations, beyond those inherited from the &lt;code&gt;Collection&lt;/code&gt; interface, on the contracts of all constructors and on the contracts of the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods. Declarations for other inherited methods are also included here for convenience. (The specifications accompanying these declarations have been tailored to the &lt;code&gt;Set&lt;/code&gt; interface, but they do not contain any additional stipulations.)</source>
          <target state="translated">除了从 &lt;code&gt;Collection&lt;/code&gt; 接口继承的规定之外， &lt;code&gt;Set&lt;/code&gt; 接口还对所有构造函数的协定以及 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;equals&lt;/code&gt; 和 &lt;code&gt;hashCode&lt;/code&gt; 方法的协定附加其他规定。为了方便起见，还包括其他继承方法的声明。（这些声明随附的规范是针对 &lt;code&gt;Set&lt;/code&gt; 接口量身定制的，但不包含任何其他规定。）</target>
        </trans-unit>
        <trans-unit id="ca2825253af57c9c2e6a3d7675526c2242a40a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; of Principals associated with this &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Set&lt;/code&gt; 与此相关的Principal &lt;code&gt;Subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="875fbbb93524788cbec9d10a7f9b1d4a78fcb3af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; object's value is actually stored in &quot;</source>
          <target state="translated">该 &lt;code&gt;SetOfIntegerSyntax&lt;/code&gt; 对象的值实际上存储在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="9603523cfc3ca1974d98e9c77fcd84e7643b7407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape.contains()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;false&lt;/code&gt; when:</source>
          <target state="translated">该 &lt;code&gt;Shape.contains()&lt;/code&gt; 方法允许 &lt;code&gt;Shape&lt;/code&gt; 实现谨慎地返回 &lt;code&gt;false&lt;/code&gt; 时：</target>
        </trans-unit>
        <trans-unit id="a8defc0421e314237795f3e16a9ee691e29653b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape.intersects()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;true&lt;/code&gt; when:</source>
          <target state="translated">该 &lt;code&gt;Shape.intersects()&lt;/code&gt; 方法允许 &lt;code&gt;Shape&lt;/code&gt; 实现谨慎地返回 &lt;code&gt;true&lt;/code&gt; 时：</target>
        </trans-unit>
        <trans-unit id="f3459b813a9488c53040b4772588afcffbba02ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape&lt;/code&gt; interface provides definitions for objects that represent some form of geometric shape.</source>
          <target state="translated">的 &lt;code&gt;Shape&lt;/code&gt; 接口提供了表示一些几何形状的对象的定义。</target>
        </trans-unit>
        <trans-unit id="5a0a83f1111db09d21b3f0665dcf9e3f26c253a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape&lt;/code&gt; interface provides definitions for objects that represent some form of geometric shape. The &lt;code&gt;Shape&lt;/code&gt; is described by a &lt;a href=&quot;geom/pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object, which can express the outline of the &lt;code&gt;Shape&lt;/code&gt; as well as a rule for determining how the outline divides the 2D plane into interior and exterior points. Each &lt;code&gt;Shape&lt;/code&gt; object provides callbacks to get the bounding box of the geometry, determine whether points or rectangles lie partly or entirely within the interior of the &lt;code&gt;Shape&lt;/code&gt;, and retrieve a &lt;code&gt;PathIterator&lt;/code&gt; object that describes the trajectory path of the &lt;code&gt;Shape&lt;/code&gt; outline.</source>
          <target state="translated">的 &lt;code&gt;Shape&lt;/code&gt; 接口提供了表示一些几何形状的对象的定义。该 &lt;code&gt;Shape&lt;/code&gt; 是由一个描述&lt;a href=&quot;geom/pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;对象，它可以表达的轮廓 &lt;code&gt;Shape&lt;/code&gt; ，用于确定以及一个规则如何轮廓划分的2D平面成内部和外部点。每个 &lt;code&gt;Shape&lt;/code&gt; 对象都提供回调，以获取几何图形的边界框，确定点或矩形是部分还是全部位于 &lt;code&gt;Shape&lt;/code&gt; 的内部，并检索描述 &lt;code&gt;Shape&lt;/code&gt; 轮廓的轨迹路径的 &lt;code&gt;PathIterator&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="91cb94f76bb487d7d5e8cf2114b6bb48e6030390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Shape&lt;/code&gt; is transformed from user space to device space using the current &lt;code&gt;Transform&lt;/code&gt; in the &lt;code&gt;Graphics2D&lt;/code&gt; context.</source>
          <target state="translated">的 &lt;code&gt;Shape&lt;/code&gt; 是从用户空间使用当前变换到设备空间 &lt;code&gt;Transform&lt;/code&gt; 在 &lt;code&gt;Graphics2D&lt;/code&gt; 的上下文。</target>
        </trans-unit>
        <trans-unit id="d9ff50c0bd145a3782f8a408ac09f816b6f9f1af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; class is an implementation of &lt;a href=&quot;graphicattribute&quot;&gt;&lt;code&gt;GraphicAttribute&lt;/code&gt;&lt;/a&gt; that draws shapes in a &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; 类是一个实现&lt;a href=&quot;graphicattribute&quot;&gt; &lt;code&gt;GraphicAttribute&lt;/code&gt; &lt;/a&gt;绘制形状在&lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="373802f5789bc9daaea49a79a19d0057b2e71fa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SheetCollate&lt;/code&gt; attribute interacts with the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute. The &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; attribute describes the collation of entire documents, and the &lt;code&gt;SheetCollate&lt;/code&gt; attribute describes the semantics of collating individual pages within a document.</source>
          <target state="translated">该 &lt;code&gt;SheetCollate&lt;/code&gt; 与属性相互作用&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt;属性。该&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; &lt;/a&gt;属性描述整个文件的整理和 &lt;code&gt;SheetCollate&lt;/code&gt; 属性描述整理文档中的单个页面的语义。</target>
        </trans-unit>
        <trans-unit id="82b5163b0072dd0db2fd3d68224c70635d6db4aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;
 short&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Short&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt; short&lt;/code&gt; 于一个对象。</target>
        </trans-unit>
        <trans-unit id="4d62b26c182893a6a548e476a18690b63d473252" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;
 short&lt;/code&gt; in an object. An object of type &lt;code&gt;Short&lt;/code&gt; contains a single field whose type is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Short&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt; short&lt;/code&gt; 于一个对象。类型为 &lt;code&gt;Short&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;short&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="61061520eba3a069412253fc6b718281a7764587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;short&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Short&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;short&lt;/code&gt; 于一个对象。</target>
        </trans-unit>
        <trans-unit id="5bd6d5314769fa94b169cf6fd6d3a5c0f5803d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;short&lt;/code&gt; in an object. An object of type &lt;code&gt;Short&lt;/code&gt; contains a single field whose type is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Short&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;short&lt;/code&gt; 于一个对象。类型为 &lt;code&gt;Short&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;short&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="e78848e4ddc01a11ae115fca5cd98b1816f40ede" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SidesType&lt;/code&gt; instance to use for specifying that consecutive job pages should be printed upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the long edge.</source>
          <target state="translated">所述 &lt;code&gt;SidesType&lt;/code&gt; 实例使用用于指定连续作业页面应当在连续介质纸张的前侧和后侧，被打印，使得每对的介质页上的取向将用于读取器是正确的，因为如果在长边装订。</target>
        </trans-unit>
        <trans-unit id="55cb688b8746b92ba5f7fe95abd002ba3e7f27dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SidesType&lt;/code&gt; instance to use for specifying that consecutive job pages should be printed upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the short edge.</source>
          <target state="translated">所述 &lt;code&gt;SidesType&lt;/code&gt; 实例使用用于指定连续作业页面应当在连续介质纸张的前侧和后侧，被打印，使得每对的介质页上的取向将用于读取器是正确的，因为如果在短边装订。</target>
        </trans-unit>
        <trans-unit id="6c8b634d32bf6d2741e1de3fa5ce509b4fe3413b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SidesType&lt;/code&gt; instance to use for specifying that consecutive job pages should be printed upon the same side of consecutive media sheets.</source>
          <target state="translated">该 &lt;code&gt;SidesType&lt;/code&gt; 实例使用指定连续作业页面应该在连续介质纸张的同一侧进行打印。</target>
        </trans-unit>
        <trans-unit id="cf5e4c26203f886b6a7a4f1b81f96c02a0a29697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SignedResultsControl&lt;/code&gt; class might be defined as follows:</source>
          <target state="translated">该 &lt;code&gt;SignedResultsControl&lt;/code&gt; 类可能被定义如下：</target>
        </trans-unit>
        <trans-unit id="3a917286530fabb04fa41fccacd2711f46f2bddd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleScriptContext&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;SimpleScriptContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca03fd6be029ed8ca889a60a8a508d0a4a1babe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;SimpleType&lt;/code&gt; 的类是</target>
        </trans-unit>
        <trans-unit id="f454eae06e8c8450f0d9941d0498c44514cf1e53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Boolean&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="639c3ab3a04fd48b0812edf7c08168f9b2abfe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Byte&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="6779cad3872976416b8715cdc2cae03f34516e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Character&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Character&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="ccc12a9229fa28b212383ee48e5d6d48b5829469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Double&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="3b4dbe56be7eeb7407783a82c785c69757959537" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Float&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="950ad58636d59dcea09852f3de50a8b54e4ec126" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Integer&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="38105e6f78986a670b722ab3d041a7ff3901722e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Long&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="a28cf8d0823e5eefc4a4e7fc0bee61dc5592a17e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Short&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="820c357e21a5bd82921b5bccd1f7a3db183c43be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.String&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="36b771fc8f2baca3d65ff467300137e5fa46b87f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Void&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="6dbd2a7b98eeeeb0df1e9367af1772ffa7a82ff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.math.BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.math.BigDecimal&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="98c8cbacf6c530dcd5198d36051672cced797c4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.math.BigInteger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.math.BigInteger&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="53ea91ec792b961906f05193441b86fc1c764ce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.util.Date&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.util.Date&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="b9f782c191b744e88038240ceea9bf9b47ef00d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;javax.management.ObjectName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;javax.management.ObjectName&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="5089a0cfc6b78ca8c8064c53b5b247055a7d6437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Skeleton&lt;/code&gt; interface is used solely by the RMI implementation.</source>
          <target state="translated">该 &lt;code&gt;Skeleton&lt;/code&gt; 接口由RMI实现单独使用。</target>
        </trans-unit>
        <trans-unit id="28d1ffacaa18f666268b6e526fc948c33dc19f19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Socket&lt;/code&gt; class defines convenience methods to set and get several socket options. This class also defines the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query socket options. A &lt;code&gt;Socket&lt;/code&gt; support the following options:</source>
          <target state="translated">该 &lt;code&gt;Socket&lt;/code&gt; 类定义方便的方法来设置和获取一些套接字选项。此类还定义了&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;方法以设置和查询套接字选项。一个 &lt;code&gt;Socket&lt;/code&gt; 支持以下选项：</target>
        </trans-unit>
        <trans-unit id="2f21653116680d7405660374ff050723b7344530" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SocketAddress&lt;/code&gt; that the socket is bound to, or the &lt;code&gt;SocketAddress&lt;/code&gt; representing the loopback address if denied by the security manager, or &lt;code&gt;null&lt;/code&gt; if the channel's socket is not bound</source>
          <target state="translated">在 &lt;code&gt;SocketAddress&lt;/code&gt; 的套接字绑定到，或 &lt;code&gt;SocketAddress&lt;/code&gt; 代表的环回地址，如果安全管理器，或拒绝 &lt;code&gt;null&lt;/code&gt; ，如果通道的套接字没有绑定</target>
        </trans-unit>
        <trans-unit id="ffa196c777d84951c5a2d919e8b5f1e36bdc950e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SourceDataLine&lt;/code&gt; interface provides a method for writing audio data to the data line's buffer. Applications that play or mix audio should write data to the source data line quickly enough to keep the buffer from underflowing (emptying), which could cause discontinuities in the audio that are perceived as clicks. Applications can use the &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. The amount of data which can be written to the buffer without blocking is the difference between the buffer size and the amount of queued data. If the delivery of audio output stops due to underflow, a &lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt; event is generated. A &lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt; event is generated when the audio output resumes.</source>
          <target state="translated">的 &lt;code&gt;SourceDataLine&lt;/code&gt; 的接口提供的音频数据写入到所述数据线的缓冲区的方法。播放或混合音频的应用程序应足够快地将数据写入源数据行，以防止缓冲区下溢（清空），这可能会导致音频中的不连续感（被视为喀哒声）。应用程序可以使用 &lt;code&gt;DataLine&lt;/code&gt; 接口中定义的&lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;方法来确定当前排队在数据线缓冲区中的数据量。在不阻塞的情况下可以写入缓冲区的数据量是缓冲区大小和排队的数据量之间的差。如果音频输出的传递由于下溢而&lt;a href=&quot;lineevent.type#STOP&quot;&gt; &lt;code&gt;STOP&lt;/code&gt; &lt;/a&gt;则会生成STOP事件。一个&lt;a href=&quot;lineevent.type#START&quot;&gt; &lt;code&gt;START&lt;/code&gt; &lt;/a&gt; 恢复音频输出时会生成事件。</target>
        </trans-unit>
        <trans-unit id="18e018252e244e834ac16d7592161dec68491d6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SourceDataLine&lt;/code&gt; interface provides a method for writing audio data to the data line's buffer. Applications that play or mix audio should write data to the source data line quickly enough to keep the buffer from underflowing (emptying), which could cause discontinuities in the audio that are perceived as clicks. Applications can use the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. The amount of data which can be written to the buffer without blocking is the difference between the buffer size and the amount of queued data. If the delivery of audio output stops due to underflow, a &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated. A &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated when the audio output resumes.</source>
          <target state="translated">的 &lt;code&gt;SourceDataLine&lt;/code&gt; 的接口提供的音频数据写入到所述数据线的缓冲区的方法。播放或混合音频的应用程序应足够快地将数据写入源数据线，以防止缓冲区下溢（清空），这可能会导致音频中的不连续感（被视为喀哒声）。应用程序可以使用 &lt;code&gt;DataLine&lt;/code&gt; 接口中定义的 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法来确定当前排队在数据线缓冲区中的数据量。在不阻塞的情况下可以写入缓冲区的数据量是缓冲区大小与排队数据量之间的差。如果音频输出的传递由于下溢而 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 则会生成STOP事件。一个 &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 恢复音频输出时会生成事件。</target>
        </trans-unit>
        <trans-unit id="bf9d261cb6bf1230f6b0ef1139ddd997740f585e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SplashScreen&lt;/code&gt; class provides the API for controlling the splash screen. This class may be used to close the splash screen, change the splash screen image, get the splash screen native window position/size, and paint in the splash screen. It cannot be used to create the splash screen. You should use the options provided by the Java implementation for that.</source>
          <target state="translated">该 &lt;code&gt;SplashScreen&lt;/code&gt; 类提供用于控制闪现屏幕的API。此类可用于关闭初始屏幕，更改初始屏幕图像，获取初始屏幕的原始窗口位置/大小以及在初始屏幕中绘画。它不能用于创建启动画面。您应该为此使用Java实现提供的选项。</target>
        </trans-unit>
        <trans-unit id="7d6c5c0e9a62febf84bbb9141ee81024ed231a73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 另外报告&lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5cd94ecb80a03490b99bcd80e701c14fac87925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism..</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 另外报告&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;和工具 &lt;code&gt;trySplit&lt;/code&gt; 允许有限的并行..</target>
        </trans-unit>
        <trans-unit id="af784776c0cdc3b45691af7e034f88ace154b36b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 工具 &lt;code&gt;trySplit&lt;/code&gt; 允许有限的并行性。</target>
        </trans-unit>
        <trans-unit id="bc4bc484d5f7374b739600d18f54719d380be19e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending order. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;，与被升序的顺序相遇。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="f2950b171471656d176973c0cdbe156c00f2950c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f29dd54a6792c7ed4529600d96348a75bdd9555a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="d956efee01ea55ce995f06c420101ace333173f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e199c4eef228c77de88efe1878bd4a7a2d489af1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbd59fa14ea73f85c3995572f64444c99c11f1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1e52439eecc198c689029f966c5a01b29d70971" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="a468b87aa57a000d104e16ad1ebfc71127bed7dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="6ebf9e7f0b30959249ec16fdfe821371d93a4d56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="5eb4148ceff758d730c061aadb07b3dfc29badab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="6117d3f9be68af61e863fb3ac62f3f48f2b55bd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="365bad875f0605d7a3f88de21373c4b2c02e8b6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="c76f2bcfdf2668373b751457d6ab6afa52733599" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;ORDERED&lt;/code&gt; 。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="56ca63602e1e9a18ab8f45fd2c61e5f3e26c4da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="b7a7b7355ffd0c2f2072bfc12a5dfa9d5724f300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="69d1d467a5fec847db2c8830bffb8575def22c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="6b2d2eb7eec8f743e4849d1097ca59c6f055d626" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spring&lt;/code&gt; object representing each constraint has a minimum, preferred, maximum, and current value. The current value of the spring is somewhere between the minimum and maximum values, according to the formula given in the &lt;a href=&quot;spring#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt;&lt;code&gt;Spring.sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt;&lt;/a&gt; method description. When the minimum, preferred, and maximum values are the same, the current value is always equal to them; this inflexible spring is called a &lt;em&gt;strut&lt;/em&gt;. You can create struts using the factory method &lt;a href=&quot;spring#constant(int)&quot;&gt;&lt;code&gt;Spring.constant(int)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Spring&lt;/code&gt; class also provides factory methods for creating other kinds of springs, including springs that depend on other springs.</source>
          <target state="translated">表示每个约束的 &lt;code&gt;Spring&lt;/code&gt; 对象具有最小值，首选值，最大值和当前值。根据&lt;a href=&quot;spring#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt; &lt;code&gt;Spring.sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt; &lt;/a&gt;方法描述中给出的公式，spring的当前值介于最小值和最大值之间。当最小值，首选值和最大值相同时，当前值始终等于它们；这种不灵活的弹簧被称为&lt;em&gt;支柱&lt;/em&gt;。您可以使用工厂方法&lt;a href=&quot;spring#constant(int)&quot;&gt; &lt;code&gt;Spring.constant(int)&lt;/code&gt; &lt;/a&gt;创建支撑。在 &lt;code&gt;Spring&lt;/code&gt; 类还提供了用于创建其他类型的弹簧，包括依赖于其他弹簧的弹簧工厂方法。</target>
        </trans-unit>
        <trans-unit id="a22bed6089a698314bd570d8dfea84ff3886d8de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stack&lt;/code&gt; class represents a last-in-first-out (LIFO) stack of objects.</source>
          <target state="translated">所述 &lt;code&gt;Stack&lt;/code&gt; 类表示对象的后进先出（LIFO）堆栈。</target>
        </trans-unit>
        <trans-unit id="725a4ea6b7a05d02133053cfe135e8b021c0e333" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stack&lt;/code&gt; class represents a last-in-first-out (LIFO) stack of objects. It extends class &lt;code&gt;Vector&lt;/code&gt; with five operations that allow a vector to be treated as a stack. The usual &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; operations are provided, as well as a method to &lt;code&gt;peek&lt;/code&gt; at the top item on the stack, a method to test for whether the stack is &lt;code&gt;empty&lt;/code&gt;, and a method to &lt;code&gt;search&lt;/code&gt; the stack for an item and discover how far it is from the top.</source>
          <target state="translated">所述 &lt;code&gt;Stack&lt;/code&gt; 类表示对象的后进先出（LIFO）堆栈。它通过五个操作扩展了 &lt;code&gt;Vector&lt;/code&gt; 类，这些操作允许将矢量视为堆栈。提供了通常的 &lt;code&gt;push&lt;/code&gt; 和 &lt;code&gt;pop&lt;/code&gt; 操作，以及一种 &lt;code&gt;peek&lt;/code&gt; 堆栈顶部项目的方法，一种用于测试堆栈是否为 &lt;code&gt;empty&lt;/code&gt; 的方法以及一种用于在堆栈中 &lt;code&gt;search&lt;/code&gt; 项目并发现其距离的方法。从顶部开始。</target>
        </trans-unit>
        <trans-unit id="fb03e73b86b7150e44b2730be4c2f42a308c7705" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StackFrame&lt;/code&gt; stream will be closed when this method returns. When a closed &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; object is reused, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该方法返回时， &lt;code&gt;StackFrame&lt;/code&gt; 流将关闭。当重用封闭的 &lt;code&gt;Stream&amp;lt;StackFrame&amp;gt;&lt;/code&gt; 对象时，将引发 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69d125feb060298f65a1bd48fbc45ef5e7d91c39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Statement.setQueryTimeout()&lt;/code&gt; timeout value is independent of the timeout value specified in &lt;code&gt;setNetworkTimeout&lt;/code&gt;. If the query timeout expires before the network timeout then the statement execution will be canceled. If the network is still active the result will be that both the statement and connection are still usable. However if the network timeout expires before the query timeout or if the statement timeout fails due to network problems, the connection will be marked as closed, any resources held by the connection will be released and both the connection and statement will be unusable.</source>
          <target state="translated">所述 &lt;code&gt;Statement.setQueryTimeout()&lt;/code&gt; 的超时值是独立于指定的超时值的 &lt;code&gt;setNetworkTimeout&lt;/code&gt; 。如果查询超时在网络超时之前到期，则语句执行将被取消。如果网络仍处于活动状态，则结果将是语句和连接仍然可用。但是，如果网络超时在查询超时之前到期，或者语句超时由于网络问题而失败，则该连接将被标记为已关闭，该连接所拥有的所有资源都将被释放，并且连接和语句都将不可用。</target>
        </trans-unit>
        <trans-unit id="f90f5bcdca074f31338e37b40ab96797b81c1b8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Status&lt;/code&gt; changes as the state changes. For example, creation of another snippet with &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; may resolve dependencies of this Snippet (or invalidate those dependencies), or &lt;a href=&quot;#OVERWRITTEN&quot;&gt;overwrite&lt;/a&gt; this Snippet changing its &lt;code&gt;Status&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Status&lt;/code&gt; 变化的状态变化。例如，使用&lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;创建另一个代码段可以解决此代码段的依赖性（或使那些依赖性无效），或&lt;a href=&quot;#OVERWRITTEN&quot;&gt;覆盖&lt;/a&gt;此代码段以更改其 &lt;code&gt;Status&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1390697c89353b590988a85571b01944397a5934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stream&lt;/code&gt; describing the content of the directory</source>
          <target state="translated">该 &lt;code&gt;Stream&lt;/code&gt; 描述目录的内容</target>
        </trans-unit>
        <trans-unit id="c78c42072e63ca70c7ecefe4c83c75776bdbcfbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamHandler&lt;/code&gt; first checks if there is an &lt;code&gt;OutputStream&lt;/code&gt; and if the given &lt;code&gt;LogRecord&lt;/code&gt; has at least the required log level. If not it silently returns. If so, it calls any associated &lt;code&gt;Filter&lt;/code&gt; to check if the record should be published. If so, it calls its &lt;code&gt;Formatter&lt;/code&gt; to format the record and then writes the result to the current output stream.</source>
          <target state="translated">所述 &lt;code&gt;StreamHandler&lt;/code&gt; 中首先检查是否存在一个 &lt;code&gt;OutputStream&lt;/code&gt; 和如果给定 &lt;code&gt;LogRecord&lt;/code&gt; 具有至少所需的日志级别。如果没有，它会默默地返回。如果是这样，它将调用任何关联的 &lt;code&gt;Filter&lt;/code&gt; 以检查记录是否应发布。如果是这样，它将调用其 &lt;code&gt;Formatter&lt;/code&gt; 格式化记录，然后将结果写入当前输出流。</target>
        </trans-unit>
        <trans-unit id="e6a8fe0d59891f6c0cc5fc356448e863867d876b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamTokenizer&lt;/code&gt; class takes an input stream and parses it into &quot;tokens&quot;, allowing the tokens to be read one at a time.</source>
          <target state="translated">所述 &lt;code&gt;StreamTokenizer&lt;/code&gt; 极类获取输入流和将其解析为&amp;ldquo;标记&amp;rdquo;，允许令牌是在一次读取。</target>
        </trans-unit>
        <trans-unit id="90790abff6838151ec89277ddea3efa96bd3fd1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamTokenizer&lt;/code&gt; class takes an input stream and parses it into &quot;tokens&quot;, allowing the tokens to be read one at a time. The parsing process is controlled by a table and a number of flags that can be set to various states. The stream tokenizer can recognize identifiers, numbers, quoted strings, and various comment styles.</source>
          <target state="translated">所述 &lt;code&gt;StreamTokenizer&lt;/code&gt; 极类获取输入流和将其解析为&amp;ldquo;标记&amp;rdquo;，允许令牌是在一次读取。解析过程由一个表和许多可以设置为各种状态的标志控制。流标记器可以识别标识符，数字，带引号的字符串和各种注释样式。</target>
        </trans-unit>
        <trans-unit id="cace10574531d43fd7350c7bbe816d7c0693ff93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class provides methods for dealing with Unicode code points (i.e., characters), in addition to those for dealing with Unicode code units (i.e., &lt;code&gt;char&lt;/code&gt; values).</source>
          <target state="translated">的 &lt;code&gt;String&lt;/code&gt; 类提供使用Unicode代码点（即，字符）处理，除了那些用于处理Unicode代码单元（即，方法 &lt;code&gt;char&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="0d78a761f2944c5a20f9f6d6f41f724d053b8054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class represents character strings.</source>
          <target state="translated">该 &lt;code&gt;String&lt;/code&gt; 类代表字符串。</target>
        </trans-unit>
        <trans-unit id="cfaf0978cdd4182db5fdb416c1be5b9a10ec7e9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class represents character strings. All string literals in Java programs, such as &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, are implemented as instances of this class.</source>
          <target state="translated">该 &lt;code&gt;String&lt;/code&gt; 类代表字符串。Java程序中的所有字符串文字（例如 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; ）都实现为此类的实例。</target>
        </trans-unit>
        <trans-unit id="bf9e88bafccff9dfb01a4ed99ca09de99632708e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; constructor, on the other hand, is perfectly predictable: writing &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is</source>
          <target state="translated">的 &lt;code&gt;String&lt;/code&gt; 的构造，在另一方面，是完全可以预测的：写 &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; 创建 &lt;code&gt;BigDecimal&lt;/code&gt; 这是</target>
        </trans-unit>
        <trans-unit id="eba1c9ced718a6fccfc3b47f5eccf166337b2690" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; constructor, on the other hand, is perfectly predictable: writing &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is &lt;em&gt;exactly&lt;/em&gt; equal to 0.1, as one would expect. Therefore, it is generally recommended that the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;String constructor&lt;/a&gt; be used in preference to this one.</source>
          <target state="translated">该 &lt;code&gt;String&lt;/code&gt; 的构造，在另一方面，是完全可以预知的：写入 &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; 创建 &lt;code&gt;BigDecimal&lt;/code&gt; 这&lt;em&gt;正好&lt;/em&gt;等于0.1，正如人们所期望的那样。因此，通常建议优先使用&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;String构造函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e9a1f48716d930234c4028b885dfc7d2e82b1bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; must specify a single paragraph of text, because an entire paragraph is required for the bidirectional algorithm.</source>
          <target state="translated">该 &lt;code&gt;String&lt;/code&gt; 必须指定单个文本段，因为整个段落需要双向算法。</target>
        </trans-unit>
        <trans-unit id="c55bf2e26b50af06c11b42ae679e92277246f4b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; return type is a convenience for retrieving the character data from a text node, attribute node, comment node, or processing-instruction node. When used on an element node, the value of the child text nodes is returned.</source>
          <target state="translated">的 &lt;code&gt;String&lt;/code&gt; 返回类型是用于从一个文本节点，属性节点，注释节点，或处理指令节点检索字符数据的便利性。在元素节点上使用时，将返回子文本节点的值。</target>
        </trans-unit>
        <trans-unit id="956bd9122850fa6f6d4d702653c39ab65927afc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; that is the result of evaluating the expression and converting the result to a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;String&lt;/code&gt; 即计算表达式并且将结果转换为的结果 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="823b29249d90cf89580a63e8a119c51fe8f500bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stroke&lt;/code&gt; interface allows a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object to obtain a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; that is the decorated outline, or stylistic representation of the outline, of the specified &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Stroke&lt;/code&gt; 接口允许&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;对象获得一个&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;是装饰轮廓，或该轮廓的风格表示，指定的 &lt;code&gt;Shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83bcf3d2b0817137e4811b4de84a7b0136064065" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stroke&lt;/code&gt; interface allows a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object to obtain a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; that is the decorated outline, or stylistic representation of the outline, of the specified &lt;code&gt;Shape&lt;/code&gt;. Stroking a &lt;code&gt;Shape&lt;/code&gt; is like tracing its outline with a marking pen of the appropriate size and shape. The area where the pen would place ink is the area enclosed by the outline &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Stroke&lt;/code&gt; 接口允许&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;对象获得一个&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;是装饰轮廓，或该轮廓的风格表示，指定的 &lt;code&gt;Shape&lt;/code&gt; 。抚摸 &lt;code&gt;Shape&lt;/code&gt; 就像用适当大小和形状的记号笔描画轮廓。笔放置墨水的区域是轮廓 &lt;code&gt;Shape&lt;/code&gt; 所包围的区域。</target>
        </trans-unit>
        <trans-unit id="b4cc02f2e0965ef6213178d0907daba1e038b4ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StyleSheet&lt;/code&gt; interface is the abstract base interface for any type of style sheet.</source>
          <target state="translated">该 &lt;code&gt;StyleSheet&lt;/code&gt; 接口为任何类型的样式表的抽象基本接口。</target>
        </trans-unit>
        <trans-unit id="0c250e7a17904fac5445cb3af01717a1efd8fe52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StyleSheet&lt;/code&gt; interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document. In HTML, the StyleSheet interface represents either an external style sheet, included via the HTML LINK element, or an inline STYLE element. In XML, this interface represents an external style sheet, included via a style sheet processing instruction.</source>
          <target state="translated">该 &lt;code&gt;StyleSheet&lt;/code&gt; 接口为任何类型的样式表的抽象基本接口。它表示与结构化文档关联的单个样式表。在HTML中，StyleSheet接口表示通过HTML LINK元素包含的外部样式表或嵌入式STYLE元素。在XML中，此接口表示外部样式表，该样式表通过样式表处理指令包括在内。</target>
        </trans-unit>
        <trans-unit id="b77d4eca45f653c379f408edadc1d1786bb45214" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StyleSheetList&lt;/code&gt; interface provides the abstraction of an ordered collection of style sheets.</source>
          <target state="translated">该 &lt;code&gt;StyleSheetList&lt;/code&gt; 接口提供样式表的有序集合的抽象。</target>
        </trans-unit>
        <trans-unit id="3321e8f0312f5858bda4ed64210f57798ee8885f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; checks this file and registers the &lt;code&gt;SyncProvider&lt;/code&gt; implementations that it contains. A developer or vendor can add other implementations to this file. For example, here is a possible addition:</source>
          <target state="translated">该 &lt;code&gt;SyncFactory&lt;/code&gt; 检查此文件，寄存器 &lt;code&gt;SyncProvider&lt;/code&gt; 实现，它包含的内容。开发人员或供应商可以向该文件添加其他实现。例如，这是可能的补充：</target>
        </trans-unit>
        <trans-unit id="1945e6ff1ad237ada972e0b52b7f53a60d373ca4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; class provides accessor methods to assist applications in determining which synchronization providers are currently registered with the &lt;code&gt;SyncFactory&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;SyncFactory&lt;/code&gt; 类提供的存取方法，以协助应用在确定哪些同步提供当前与注册 &lt;code&gt;SyncFactory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51bf79b59a85a53ec81dac29f70bcc5fab44290e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; class provides an internal registry of available synchronization provider implementations (&lt;code&gt;SyncProvider&lt;/code&gt; objects). This registry may be queried to determine which synchronization providers are available. The following line of code gets an enumeration of the providers currently registered.</source>
          <target state="translated">所述 &lt;code&gt;SyncFactory&lt;/code&gt; 类提供可用的同步提供者实现（的内部注册表 &lt;code&gt;SyncProvider&lt;/code&gt; 对象）。可以查询该注册表以确定哪些同步提供程序可用。下面的代码行获取当前注册的提供程序的枚举。</target>
        </trans-unit>
        <trans-unit id="cf8f6210713c173acff250f3a77234c48dec109c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncFactory&lt;/code&gt; generates a requested &lt;code&gt;SyncProvider&lt;/code&gt; object if the provider has been correctly registered. The following policies are adhered to when either a disconnected &lt;code&gt;RowSet&lt;/code&gt; object is instantiated with a specified &lt;code&gt;SyncProvider&lt;/code&gt; implementation or is reconfigured at runtime with an alternative &lt;code&gt;SyncProvider&lt;/code&gt; object.</source>
          <target state="translated">该 &lt;code&gt;SyncFactory&lt;/code&gt; 产生一个请求 &lt;code&gt;SyncProvider&lt;/code&gt; 如果提供者进行正确的登记对象。当使用指定的 &lt;code&gt;SyncProvider&lt;/code&gt; 实现实例化断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象或在运行时使用备用 &lt;code&gt;SyncProvider&lt;/code&gt; 对象重新配置断开的RowSet对象时，将遵循以下策略。</target>
        </trans-unit>
        <trans-unit id="219eedc9af737d15c74f22846580254e66b4f7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncProvider&lt;/code&gt; class provides three sets of constants that are used as return values or parameters for &lt;code&gt;SyncProvider&lt;/code&gt; methods. &lt;code&gt;SyncProvider&lt;/code&gt; objects may be implemented to perform synchronization between a &lt;code&gt;RowSet&lt;/code&gt; object and its underlying data source with varying degrees of care. The first group of constants indicate how synchronization is handled. For example, &lt;code&gt;GRADE_NONE&lt;/code&gt; indicates that a &lt;code&gt;SyncProvider&lt;/code&gt; object will not take any care to see what data is valid and will simply write the &lt;code&gt;RowSet&lt;/code&gt; data to the data source. &lt;code&gt;GRADE_MODIFIED_AT_COMMIT&lt;/code&gt; indicates that the provider will check only modified data for validity. Other grades check all data for validity or set locks when data is modified or loaded.</source>
          <target state="translated">所述 &lt;code&gt;SyncProvider&lt;/code&gt; 类提供三组被用作返回值或参数为常数 &lt;code&gt;SyncProvider&lt;/code&gt; 方法。 &lt;code&gt;SyncProvider&lt;/code&gt; 对象可以实现为以不同的关注程度在 &lt;code&gt;RowSet&lt;/code&gt; 对象与其基础数据源之间执行同步。第一组常量指示如何处理同步。例如， &lt;code&gt;GRADE_NONE&lt;/code&gt; 指示 &lt;code&gt;SyncProvider&lt;/code&gt; 对象将不小心查看有效的数据，而只会将 &lt;code&gt;RowSet&lt;/code&gt; 数据写入数据源。 &lt;code&gt;GRADE_MODIFIED_AT_COMMIT&lt;/code&gt; 指示提供者将仅检查修改后的数据的有效性。其他等级会检查所有数据的有效性，或在修改或加载数据时设置锁定。</target>
        </trans-unit>
        <trans-unit id="c5a4913f6da797e9bb309247a92d563053d59bb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncProvider&lt;/code&gt; interface defines four constants describing states that may occur. Three constants describe the type of operation (update, delete, or insert) that a &lt;code&gt;RowSet&lt;/code&gt; object was attempting to perform when a conflict was discovered, and the fourth indicates that there is no conflict. These constants are the possible return values when a &lt;code&gt;SyncResolver&lt;/code&gt; object calls the method &lt;code&gt;getStatus&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;SyncProvider&lt;/code&gt; 接口定义四个常数描述可能出现的状态。三个常数描述发现冲突时 &lt;code&gt;RowSet&lt;/code&gt; 对象试图执行的操作类型（更新，删除或插入），第四个指示没有冲突。当 &lt;code&gt;SyncResolver&lt;/code&gt; 对象调用方法 &lt;code&gt;getStatus&lt;/code&gt; 时，这些常量是可能的返回值。</target>
        </trans-unit>
        <trans-unit id="eda1e4a93fcf2aa13352f9f34dfd369c2d588252" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncResolver&lt;/code&gt; interface also provides methods for doing the following:</source>
          <target state="translated">该 &lt;code&gt;SyncResolver&lt;/code&gt; 的界面还提供了做了以下方法：</target>
        </trans-unit>
        <trans-unit id="b7a04ac54f8fd8b47f995cd926d12c087226c4ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SyncResolver&lt;/code&gt; object may be used to examine and resolve each conflict in a row and then go to the next row with a conflict to repeat the procedure.</source>
          <target state="translated">该 &lt;code&gt;SyncResolver&lt;/code&gt; 对象可用于检查并解析一个行中的每个冲突，然后转到下一行有冲突，以重复该过程。</target>
        </trans-unit>
        <trans-unit id="ce0b1740d93a2f7b9c8861c54d628a73ff28cb12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Synthesizer&lt;/code&gt; interface includes methods for loading and unloading instruments from soundbanks. An instrument is a specification for synthesizing a certain type of sound, whether that sound emulates a traditional instrument or is some kind of sound effect or other imaginary sound. A soundbank is a collection of instruments, organized by bank and program number (via the instrument's &lt;code&gt;Patch&lt;/code&gt; object). Different &lt;code&gt;Synthesizer&lt;/code&gt; classes might implement different sound-synthesis techniques, meaning that some instruments and not others might be compatible with a given synthesizer. Also, synthesizers may have a limited amount of memory for instruments, meaning that not every soundbank and instrument can be used by every synthesizer, even if the synthesis technique is compatible. To see whether the instruments from a certain soundbank can be played by a given synthesizer, invoke the &lt;a href=&quot;#isSoundbankSupported(javax.sound.midi.Soundbank)&quot;&gt;&lt;code&gt;isSoundbankSupported&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Synthesizer&lt;/code&gt; 接口包括用于从声音库装卸工具的方法。乐器是用于合成特定类型声音的规范，无论该声音是模仿传统乐器还是某种声音效果或其他虚构声音。音库是按库和程序号（通过乐器的 &lt;code&gt;Patch&lt;/code&gt; 对象）组织的乐器集合。不同的 &lt;code&gt;Synthesizer&lt;/code&gt; 类可能实现不同的声音合成技术，这意味着某些乐器而不是其他乐器可能与给定的合成器兼容。同样，合成器可能只具有有限的乐器存储空间，这意味着即使合成技术兼容，并非每个音色库和乐器都能被每个合成器使用。看是否从某个音库的仪器可以通过一个给定的合成器上播放，调用&lt;a href=&quot;#isSoundbankSupported(javax.sound.midi.Soundbank)&quot;&gt; &lt;code&gt;isSoundbankSupported&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;Synthesizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79d62a9c1d3d1d0435af40a0f1b27c3991ef6251" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Synthesizer&lt;/code&gt; interface includes methods for loading and unloading instruments from soundbanks. An instrument is a specification for synthesizing a certain type of sound, whether that sound emulates a traditional instrument or is some kind of sound effect or other imaginary sound. A soundbank is a collection of instruments, organized by bank and program number (via the instrument's &lt;code&gt;Patch&lt;/code&gt; object). Different &lt;code&gt;Synthesizer&lt;/code&gt; classes might implement different sound-synthesis techniques, meaning that some instruments and not others might be compatible with a given synthesizer. Also, synthesizers may have a limited amount of memory for instruments, meaning that not every soundbank and instrument can be used by every synthesizer, even if the synthesis technique is compatible. To see whether the instruments from a certain soundbank can be played by a given synthesizer, invoke the &lt;a href=&quot;synthesizer#isSoundbankSupported-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;isSoundbankSupported&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Synthesizer&lt;/code&gt; 接口包括用于从声音库装卸工具的方法。乐器是用于合成特定类型声音的规范，无论该声音是模仿传统乐器还是某种声音效果或其他虚构声音。音库是按库和程序号（通过乐器的 &lt;code&gt;Patch&lt;/code&gt; 对象）组织的乐器集合。不同的 &lt;code&gt;Synthesizer&lt;/code&gt; 类可能实现不同的声音合成技术，这意味着某些乐器而非其他乐器可能与给定的合成器兼容。而且，合成器可能只具有有限的乐器存储空间，这意味着即使合成技术兼容，并非每个音色库和乐器都可以被每个合成器使用。看是否从某个音库的仪器可以通过一个给定的合成器上播放，调用&lt;a href=&quot;synthesizer#isSoundbankSupported-javax.sound.midi.Soundbank-&quot;&gt; &lt;code&gt;isSoundbankSupported&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;Synthesizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfaf0a0f81bd0eca9825b951309b3216299181ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods.</source>
          <target state="translated">该 &lt;code&gt;System&lt;/code&gt; 类包含一些有用的类字段和方法。</target>
        </trans-unit>
        <trans-unit id="2e929acaa33491c9123dc823b9825fd21aa7ba63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods. It cannot be instantiated.</source>
          <target state="translated">该 &lt;code&gt;System&lt;/code&gt; 类包含一些有用的类字段和方法。无法实例化。</target>
        </trans-unit>
        <trans-unit id="d62073397ee12d67177fbddcc6b841987af0c0f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods. It cannot be instantiated. Among the facilities provided by the &lt;code&gt;System&lt;/code&gt; class are standard input, standard output, and error output streams; access to externally defined properties and environment variables; a means of loading files and libraries; and a utility method for quickly copying a portion of an array.</source>
          <target state="translated">该 &lt;code&gt;System&lt;/code&gt; 类包含一些有用的类字段和方法。它不能被实例化。 &lt;code&gt;System&lt;/code&gt; 类提供的功能包括标准输入，标准输出和错误输出流。访问外部定义的属性和环境变量；一种加载文件和库的方法；以及用于快速复制阵列的一部分的实用方法。</target>
        </trans-unit>
        <trans-unit id="71d124decf97343aaf190d7edff308e7f38aff09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt; class represents the system tray for a desktop.</source>
          <target state="translated">该 &lt;code&gt;SystemTray&lt;/code&gt; 类表示桌面的系统托盘。</target>
        </trans-unit>
        <trans-unit id="86e2face305fc605953bea15297d20a4c46b82a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt; class represents the system tray for a desktop. On Microsoft Windows it is referred to as the &quot;Taskbar Status Area&quot;, on Gnome it is referred to as the &quot;Notification Area&quot;, on KDE it is referred to as the &quot;System Tray&quot;. The system tray is shared by all applications running on the desktop.</source>
          <target state="translated">该 &lt;code&gt;SystemTray&lt;/code&gt; 类表示桌面的系统托盘。在Microsoft Windows上，它称为&amp;ldquo;任务栏状态区域&amp;rdquo;，在Gnome上，它称为&amp;ldquo;通知区域&amp;rdquo;，在KDE上，它称为&amp;ldquo;系统托盘&amp;rdquo;。系统托盘由桌面上运行的所有应用程序共享。</target>
        </trans-unit>
        <trans-unit id="29f19d736a226155ec6c7bf812e7c0d11e8db7d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt; may contain one or more &lt;a href=&quot;trayicon&quot;&gt;&lt;code&gt;TrayIcons&lt;/code&gt;&lt;/a&gt;, which are added to the tray using the &lt;a href=&quot;#add(java.awt.TrayIcon)&quot;&gt;&lt;code&gt;add(java.awt.TrayIcon)&lt;/code&gt;&lt;/a&gt; method, and removed when no longer needed, using the &lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt;&lt;code&gt;remove(java.awt.TrayIcon)&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;TrayIcon&lt;/code&gt; consists of an image, a popup menu and a set of associated listeners. Please see the &lt;a href=&quot;trayicon&quot;&gt;&lt;code&gt;TrayIcon&lt;/code&gt;&lt;/a&gt; class for details.</source>
          <target state="translated">所述 &lt;code&gt;SystemTray&lt;/code&gt; 可以包含一个或多个&lt;a href=&quot;trayicon&quot;&gt; &lt;code&gt;TrayIcons&lt;/code&gt; &lt;/a&gt;，其被添加到使用的托盘&lt;a href=&quot;#add(java.awt.TrayIcon)&quot;&gt; &lt;code&gt;add(java.awt.TrayIcon)&lt;/code&gt; &lt;/a&gt;方法，和取出时不再需要，可以使用&lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt; &lt;code&gt;remove(java.awt.TrayIcon)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;TrayIcon&lt;/code&gt; 由图像，弹出菜单和一组关联的侦听器组成。有关详细信息，请参见&lt;a href=&quot;trayicon&quot;&gt; &lt;code&gt;TrayIcon&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="c47132f451284747470a059592392ae52dd9e141" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SystemTray&lt;/code&gt;'s array of &lt;code&gt;TrayIcon&lt;/code&gt; objects. The array is accessed via the &lt;a href=&quot;#getTrayIcons()&quot;&gt;&lt;code&gt;getTrayIcons()&lt;/code&gt;&lt;/a&gt; method. This property is changed when a tray icon is added to (or removed from) the system tray. For example, this property is changed when the system tray becomes unavailable on the desktop and the tray icons are automatically removed.</source>
          <target state="translated">所述 &lt;code&gt;SystemTray&lt;/code&gt; 的阵列 &lt;code&gt;TrayIcon&lt;/code&gt; 对象。可通过&lt;a href=&quot;#getTrayIcons()&quot;&gt; &lt;code&gt;getTrayIcons()&lt;/code&gt; &lt;/a&gt;方法访问该数组。将任务栏图标添加到系统任务栏（或从中删除）后，此属性会更改。例如，当系统托盘在桌面上不可用并且托盘图标被自动删除时，将更改此属性。</target>
        </trans-unit>
        <trans-unit id="041eb452e80c2e1697db1fd8e4bf9a31fea37efe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; , and &lt;code&gt;TBODY&lt;/code&gt; elements.</source>
          <target state="translated">在 &lt;code&gt;THEAD&lt;/code&gt; ， &lt;code&gt;TFOOT&lt;/code&gt; 和 &lt;code&gt;TBODY&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="a06dce3576df2efc44a53e99f5b0156477fc0f70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TIFFTagSet&lt;/code&gt;s associated with this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;TIFFTagSet&lt;/code&gt; s与这相关的 &lt;code&gt;TIFFDirectory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90342a4ec5ebd367ca721e299022f4ba7c4abcba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPE_USE&lt;/code&gt; constant includes type declarations and type parameter declarations as a convenience for designers of type checkers which give semantics to annotation types. For example, if the annotation type &lt;code&gt;NonNull&lt;/code&gt; is meta-annotated with &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt;, then &lt;code&gt;@NonNull&lt;/code&gt;&lt;code&gt;class C {...}&lt;/code&gt; could be treated by a type checker as indicating that all variables of class &lt;code&gt;C&lt;/code&gt; are non-null, while still allowing variables of other classes to be non-null or not non-null based on whether &lt;code&gt;@NonNull&lt;/code&gt; appears at the variable's declaration.</source>
          <target state="translated">所述 &lt;code&gt;TYPE_USE&lt;/code&gt; 常数包括类型声明和类型参数声明为类型检查器的设计者这给语义注释类型便利。例如，如果注释类型 &lt;code&gt;NonNull&lt;/code&gt; 用 &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; 进行元注释，则类型检查器可以将 &lt;code&gt;@NonNull&lt;/code&gt; &lt;code&gt;class C {...}&lt;/code&gt; 视为指示类 &lt;code&gt;C&lt;/code&gt; 的所有变量都不为空。 ，同时仍根据 &lt;code&gt;@NonNull&lt;/code&gt; 是否出现在变量的声明中来允许其他类的变量为非null或非null 。</target>
        </trans-unit>
        <trans-unit id="a36f21255ac35c88f64ea122f094b24db294584b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabbedPane&lt;/code&gt; uses a &lt;code&gt;SingleSelectionModel&lt;/code&gt; to represent the set of tab indices and the currently selected index. If the tab count is greater than 0, then there will always be a selected index, which by default will be initialized to the first tab. If the tab count is 0, then the selected index will be -1.</source>
          <target state="translated">所述 &lt;code&gt;TabbedPane&lt;/code&gt; 使用 &lt;code&gt;SingleSelectionModel&lt;/code&gt; 来表示该组标签的索引和当前选择的索引。如果选项卡数大于0，则将始终有一个选定的索引，默认情况下它将被初始化为第一个选项卡。如果选项卡计数为0，则所选索引将为-1。</target>
        </trans-unit>
        <trans-unit id="aae188cb6fcd8f04afd29ffc5f91ebb63a2bec4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableCellRenderer&lt;/code&gt; is also responsible for rendering the the cell representing the table's current DnD drop location if it has one. If this renderer cares about rendering the DnD drop location, it should query the table directly to see if the given row and column represent the drop location:</source>
          <target state="translated">该 &lt;code&gt;TableCellRenderer&lt;/code&gt; 也负责呈现表示表的当前DND放置的位置，如果它有一个细胞。如果此渲染器关心渲染DnD放置位置，则应直接查询表以查看给定的行和列是否表示放置位置：</target>
        </trans-unit>
        <trans-unit id="62730552d1826f5457ce3b3a464a101205ca119b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableColumn&lt;/code&gt; stores the link between the columns in the &lt;code&gt;JTable&lt;/code&gt; and the columns in the &lt;code&gt;TableModel&lt;/code&gt;. The &lt;code&gt;modelIndex&lt;/code&gt; is the column in the &lt;code&gt;TableModel&lt;/code&gt;, which will be queried for the data values for the cells in this column. As the column moves around in the view this &lt;code&gt;modelIndex&lt;/code&gt; does not change.</source>
          <target state="translated">该 &lt;code&gt;TableColumn&lt;/code&gt; 的存储在列之间的链接 &lt;code&gt;JTable&lt;/code&gt; 中各列 &lt;code&gt;TableModel&lt;/code&gt; 。的 &lt;code&gt;modelIndex&lt;/code&gt; 是在该柱 &lt;code&gt;TableModel&lt;/code&gt; ，这将被查询用于该列中的单元中的数据值。当列在视图中移动时，此 &lt;code&gt;modelIndex&lt;/code&gt; 不会更改。</target>
        </trans-unit>
        <trans-unit id="513725efac09f3d3ebe41cdd1442b2526eb72e07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableColumnModel&lt;/code&gt; of the table header.</source>
          <target state="translated">表标题的 &lt;code&gt;TableColumnModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46b630f6f4ada6636db255ceeb6cbab86ddcc1d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableColumnModel&lt;/code&gt; of the table.</source>
          <target state="translated">表的 &lt;code&gt;TableColumnModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40e8319f916c9c16cc953beb17d6b51b25096178" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableHeader&lt;/code&gt; working with the table.</source>
          <target state="translated">该 &lt;code&gt;TableHeader&lt;/code&gt; 与表工作。</target>
        </trans-unit>
        <trans-unit id="1e1e1d2b9291e006ed2866178f2d5c50aeb49de2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableModel&lt;/code&gt; interface specifies the methods the &lt;code&gt;JTable&lt;/code&gt; will use to interrogate a tabular data model.</source>
          <target state="translated">该 &lt;code&gt;TableModel&lt;/code&gt; 接口指定的方法 &lt;code&gt;JTable&lt;/code&gt; 用于询问表格式数据模型。</target>
        </trans-unit>
        <trans-unit id="9b297dff16c915aa557f64cbedacf58ef1c27aa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TableModel&lt;/code&gt; of the table.</source>
          <target state="translated">表的 &lt;code&gt;TableModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ef83572b32113beb492c13117cd5dc2ac290774" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">所述 &lt;code&gt;TabularData&lt;/code&gt; 接口指定的复合物的特定类型的行为</target>
        </trans-unit>
        <trans-unit id="7724aaad4c815a2f3d25835048c64655b5a959e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;TabularDataSupport&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="d1a581b7f12d575f8065049692b39a4f8b425736" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;TabularType&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="085fc399b3650257a22561fd8dbc65d069110b4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TargetDataLine&lt;/code&gt; interface provides a method for reading the captured data from the target data line's buffer. Applications that record audio should read data from the target data line quickly enough to keep the buffer from overflowing, which could cause discontinuities in the captured data that are perceived as clicks. Applications can use the &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. If the buffer does overflow, the oldest queued data is discarded and replaced by new data.</source>
          <target state="translated">该 &lt;code&gt;TargetDataLine&lt;/code&gt; 的界面提供用于从目标数据行的缓冲区中读取所捕获的数据的方法。记录音频的应用程序应足够快地从目标数据线读取数据，以防止缓冲区溢出，这可能会导致捕获的数据中出现不连续现象，这些声音被视为喀哒声。应用程序可以使用 &lt;code&gt;DataLine&lt;/code&gt; 接口中定义的&lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;方法来确定当前排队在数据线缓冲区中的数据量。如果缓冲区确实溢出，则最早的排队数据将被丢弃，并由新数据替换。</target>
        </trans-unit>
        <trans-unit id="2b88d977d84dfecfb709ca75951d725a6ab95a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TargetDataLine&lt;/code&gt; interface provides a method for reading the captured data from the target data line's buffer.Applications that record audio should read data from the target data line quickly enough to keep the buffer from overflowing, which could cause discontinuities in the captured data that are perceived as clicks. Applications can use the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. If the buffer does overflow, the oldest queued data is discarded and replaced by new data.</source>
          <target state="translated">该 &lt;code&gt;TargetDataLine&lt;/code&gt; 的接口提供了一种从目标数据行的buffer.Applications读取捕获的数据记录音频应改为从目标数据线快速足够的数据来保持缓冲区溢出，这可能会导致被感知捕获的数据不连续性点击次数。应用程序可以使用 &lt;code&gt;DataLine&lt;/code&gt; 接口中定义的 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法来确定当前排队在数据线缓冲区中的数据量。如果缓冲区确实溢出，则最早的排队数据将被丢弃并由新数据替换。</target>
        </trans-unit>
        <trans-unit id="cd75a99a64bbe9c6e132833f8fb00cfec0994bdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Taskbar&lt;/code&gt; class allows a Java application to interact with the system task area (taskbar, Dock, etc.).</source>
          <target state="translated">在 &lt;code&gt;Taskbar&lt;/code&gt; 类允许Java应用程序与系统任务区域（任务栏，码头等）进行交互。</target>
        </trans-unit>
        <trans-unit id="019ba7c0388427e562540509ea17c83832b3dcd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetDateTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two date-times, the specified end date-time is normalized to have the same offset as this date-time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;OffsetDateTime&lt;/code&gt; 使用&lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两个日期时间之间的偏移量不同，则将指定的结束日期时间标准化为具有与此日期时间相同的偏移量。</target>
        </trans-unit>
        <trans-unit id="3e0b1acfd21178efdd1911606a8891da6c388408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetDateTime&lt;/code&gt; using &lt;a href=&quot;offsetdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two date-times, the specified end date-time is normalized to have the same offset as this date-time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;OffsetDateTime&lt;/code&gt; 使用&lt;a href=&quot;offsetdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两个日期时间之间的偏移量不同，则将指定的结束日期时间标准化为具有与此日期时间相同的偏移量。</target>
        </trans-unit>
        <trans-unit id="d95776a3e565ebe5ce70d5bf195dcf050020297d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two times, then the specified end time is normalized to have the same offset as this time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;OffsetTime&lt;/code&gt; 使用&lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两次之间的偏移量不同，则将指定的结束时间标准化为具有与此时间相同的偏移量。</target>
        </trans-unit>
        <trans-unit id="3e06b07abdd9c26452543a4ee27b98a4f883116f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetTime&lt;/code&gt; using &lt;a href=&quot;offsettime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two times, then the specified end time is normalized to have the same offset as this time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;OffsetTime&lt;/code&gt; 使用&lt;a href=&quot;offsettime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两次之间的偏移量不同，则将指定的结束时间标准化为具有与此时间相同的偏移量。</target>
        </trans-unit>
        <trans-unit id="16922692473cfbe52ef7b4a7d7019abc044672f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ZonedDateTime&lt;/code&gt; using &lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the time-zone differs between the two zoned date-times, the specified end date-time is normalized to have the same zone as this date-time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;ZonedDateTime&lt;/code&gt; 使用&lt;a href=&quot;#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两个分区的日期时间之间的时区不同，则将指定的结束日期时间标准化为具有与此日期时间相同的时区。</target>
        </trans-unit>
        <trans-unit id="137e87a41dd6513a254139c8feaaab1e66487d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ZonedDateTime&lt;/code&gt; using &lt;a href=&quot;zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the time-zone differs between the two zoned date-times, the specified end date-time is normalized to have the same zone as this date-time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;ZonedDateTime&lt;/code&gt; 使用&lt;a href=&quot;zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两个分区的日期时间之间的时区不同，则将指定的结束日期时间标准化为具有与此日期时间相同的时区。</target>
        </trans-unit>
        <trans-unit id="e5e2abe85585b946fe3143ade66a1eb51b565159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TemporalAdjuster&lt;/code&gt; is based on the low level &lt;code&gt;Temporal&lt;/code&gt; interface. This method allows an adjustment from &lt;code&gt;LocalDate&lt;/code&gt; to &lt;code&gt;LocalDate&lt;/code&gt; to be wrapped to match the temporal-based interface. This is provided for convenience to make user-written adjusters simpler.</source>
          <target state="translated">该 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 是基于低级别的 &lt;code&gt;Temporal&lt;/code&gt; 界面。此方法允许包装从 &lt;code&gt;LocalDate&lt;/code&gt; 到 &lt;code&gt;LocalDate&lt;/code&gt; 的调整以匹配基于时间的界面。提供此功能是为了方便使用户编写的调节器更简单。</target>
        </trans-unit>
        <trans-unit id="3abce6220a2a3d5ab9fef6cd6b43c0fc41bc4b97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TerminalFactory&lt;/code&gt; is initialized with the specified parameters Object. The type of parameters needed may vary between different types of &lt;code&gt;TerminalFactory&lt;/code&gt;s.</source>
          <target state="translated">所述 &lt;code&gt;TerminalFactory&lt;/code&gt; 初始化用指定参数对象。不同类型的 &lt;code&gt;TerminalFactory&lt;/code&gt; 所需的参数类型可能有所不同。</target>
        </trans-unit>
        <trans-unit id="19c02d28928b0971c51632836506fdb261eb44fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the textual content (termed &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;character data&lt;/a&gt; in XML) of an &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Text&lt;/code&gt; 从接口继承 &lt;code&gt;CharacterData&lt;/code&gt; 和表示文本内容（称为&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;字符数据&lt;/a&gt;的在XML） &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;Attr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="703823749842fef8a2c75cc8cb3164c39a004c62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the textual content (termed &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;character data&lt;/a&gt; in XML) of an &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;. If there is no markup inside an element's content, the text is contained in a single object implementing the &lt;code&gt;Text&lt;/code&gt; interface that is the only child of the element. If there is markup, it is parsed into the information items (elements, comments, etc.) and &lt;code&gt;Text&lt;/code&gt; nodes that form the list of children of the element.</source>
          <target state="translated">所述 &lt;code&gt;Text&lt;/code&gt; 从接口继承 &lt;code&gt;CharacterData&lt;/code&gt; 和表示文本内容（称为&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;字符数据&lt;/a&gt;的在XML） &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;Attr&lt;/code&gt; 。如果元素内容中没有标记，则文本包含在实现 &lt;code&gt;Text&lt;/code&gt; 接口的单个对象中，该对象是元素的唯一子元素。如果存在标记，则会将其解析为构成元素子级列表的信息项（元素，注释等）和 &lt;code&gt;Text&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="df9b2d38101dfed625badfabcb4a7f7bc503120d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the textual content (termed &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;character data&lt;/a&gt; in XML) of an &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Text&lt;/code&gt; 从接口继承 &lt;code&gt;CharacterData&lt;/code&gt; 和表示文本内容（称为&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;字符数据&lt;/a&gt;的在XML） &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;Attr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d0ca963e2fbcac0f1a779baefce79707291a6fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface inherits from &lt;code&gt;CharacterData&lt;/code&gt; and represents the textual content (termed &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;character data&lt;/a&gt; in XML) of an &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt;. If there is no markup inside an element's content, the text is contained in a single object implementing the &lt;code&gt;Text&lt;/code&gt; interface that is the only child of the element. If there is markup, it is parsed into the information items (elements, comments, etc.) and &lt;code&gt;Text&lt;/code&gt; nodes that form the list of children of the element.</source>
          <target state="translated">所述 &lt;code&gt;Text&lt;/code&gt; 从接口继承 &lt;code&gt;CharacterData&lt;/code&gt; 和表示文本内容（称为&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#syntax&quot;&gt;字符数据&lt;/a&gt;的在XML） &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;Attr&lt;/code&gt; 。如果元素内容中没有标记，则文本包含在实现 &lt;code&gt;Text&lt;/code&gt; 接口的单个对象中，该对象是元素的唯一子元素。如果存在标记，则会将其解析为构成元素子级列表的信息项（元素，注释等）和 &lt;code&gt;Text&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="0b427ffefca649d6c2fde1f2d87275cd3cac181c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; node created with the specified content.</source>
          <target state="translated">使用指定内容创建的 &lt;code&gt;Text&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="cca479076c75edc689dd6ce78a057c1b17b31465" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextArea&lt;/code&gt; class defines four integer constants that are used to specify which scroll bars are available. &lt;code&gt;TextArea&lt;/code&gt; has one constructor that gives the application discretion over scroll bars.</source>
          <target state="translated">所述 &lt;code&gt;TextArea&lt;/code&gt; 类定义了用于指定哪些滚动条四种可用的整数常数。 &lt;code&gt;TextArea&lt;/code&gt; 具有一个构造函数，该构造函数使应用程序可以自由选择滚动条。</target>
        </trans-unit>
        <trans-unit id="5d48388689d22e97176bfbb9fb1fc79899bb9234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextArea&lt;/code&gt; class defines several constants that can be supplied as values for the &lt;code&gt;scrollbars&lt;/code&gt; argument:</source>
          <target state="translated">所述 &lt;code&gt;TextArea&lt;/code&gt; 类定义了可以作为值被提供几个常数 &lt;code&gt;scrollbars&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="5336257f4025d0fea63716accbddc0218345d2f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextAttribute&lt;/code&gt; class defines attribute keys and attribute values used for text rendering.</source>
          <target state="translated">该 &lt;code&gt;TextAttribute&lt;/code&gt; 中类定义的属性用于文本渲染键和属性值。</target>
        </trans-unit>
        <trans-unit id="642b3c193ea2d3a105f24ceebe0c67d4450a709c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextComponent&lt;/code&gt; class is the superclass of any component that allows the editing of some text.</source>
          <target state="translated">该 &lt;code&gt;TextComponent&lt;/code&gt; 类是允许一些文本编辑的任何组件的超类。</target>
        </trans-unit>
        <trans-unit id="6e295e7fa9a8c0af844a002343da2aa129dfba05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextField&lt;/code&gt; class's &lt;code&gt;processEvent&lt;/code&gt; method examines the action event and passes it along to &lt;code&gt;processActionEvent&lt;/code&gt;. The latter method redirects the event to any &lt;code&gt;ActionListener&lt;/code&gt; objects that have registered to receive action events generated by this text field.</source>
          <target state="translated">该 &lt;code&gt;TextField&lt;/code&gt; 类的 &lt;code&gt;processEvent&lt;/code&gt; 方法方法检查操作事件，并将它传递给 &lt;code&gt;processActionEvent&lt;/code&gt; 方法。后一种方法将事件重定向到已注册为接收此文本字段生成的操作事件的任何 &lt;code&gt;ActionListener&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="22b360ff64d31b8f19b1d96768ca46578b5f564f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextHitInfo&lt;/code&gt; class represents a character position in a text model, and a &lt;b&gt;bias&lt;/b&gt;, or &quot;side,&quot; of the character.</source>
          <target state="translated">所述 &lt;code&gt;TextHitInfo&lt;/code&gt; 类表示文本模型中的字符位置，和一个&lt;b&gt;偏置&lt;/b&gt;的字符，或&amp;ldquo;边&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b2a90ad498f0fc0ba3728afdf8f9ce9b1048e36c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextHitInfo&lt;/code&gt; class represents a character position in a text model, and a &lt;b&gt;bias&lt;/b&gt;, or &quot;side,&quot; of the character. Biases are either &lt;em&gt;leading&lt;/em&gt; (the left edge, for a left-to-right character) or &lt;em&gt;trailing&lt;/em&gt; (the right edge, for a left-to-right character). Instances of &lt;code&gt;TextHitInfo&lt;/code&gt; are used to specify caret and insertion positions within text.</source>
          <target state="translated">所述 &lt;code&gt;TextHitInfo&lt;/code&gt; 类表示文本模型中的字符位置，和一个&lt;b&gt;偏置&lt;/b&gt;的字符，或&amp;ldquo;边&amp;rdquo;。偏移是&lt;em&gt;前导&lt;/em&gt;（左边缘，从左到右的字符）或&lt;em&gt;尾随&lt;/em&gt;（右边缘，从左到右的字符）。 &lt;code&gt;TextHitInfo&lt;/code&gt; 的实例用于指定文本中的插入符号和插入位置。</target>
        </trans-unit>
        <trans-unit id="c4b39e8c9816ef7ceb28fda873be1e28ff6d68cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextLayout&lt;/code&gt; instances returned by &lt;code&gt;LineBreakMeasurer&lt;/code&gt; treat tabs like 0-width spaces. Clients who wish to obtain tab-delimited segments for positioning should use the overload of &lt;code&gt;nextLayout&lt;/code&gt; which takes a limiting offset in the text. The limiting offset should be the first character after the tab. The &lt;code&gt;TextLayout&lt;/code&gt; objects returned from this method end at the limit provided (or before, if the text between the current position and the limit won't fit entirely within the wrapping width).</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; 返回的 &lt;code&gt;TextLayout&lt;/code&gt; 实例将制表符视为0宽度的空格。希望获得制表符分隔的段进行定位的客户应使用 &lt;code&gt;nextLayout&lt;/code&gt; 的重载，该重载在文本中具有限制的偏移量。限制偏移量应为制表符后的第一个字符。从此方法返回的 &lt;code&gt;TextLayout&lt;/code&gt; 对象以提供的限制结束（或在当前位置和限制之间的文本不能完全适合换行宽度的情况下）。</target>
        </trans-unit>
        <trans-unit id="e54ec1da816a0aac8f63c3f5100992dba76c1e48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextMeasurer&lt;/code&gt; class provides the primitive operations needed for line break: measuring up to a given advance, determining the advance of a range of characters, and generating a &lt;code&gt;TextLayout&lt;/code&gt; for a range of characters.</source>
          <target state="translated">该 &lt;code&gt;TextMeasurer&lt;/code&gt; 类提供换行所需的基本操作：测量到给定的预先确定范围内的字符的前进，并产生一个 &lt;code&gt;TextLayout&lt;/code&gt; 中为一定范围的字符。</target>
        </trans-unit>
        <trans-unit id="688cd5ad4fe72f4fb2a262796fd8215056bc8fb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextMeasurer&lt;/code&gt; class provides the primitive operations needed for line break: measuring up to a given advance, determining the advance of a range of characters, and generating a &lt;code&gt;TextLayout&lt;/code&gt; for a range of characters. It also provides methods for incremental editing of paragraphs.</source>
          <target state="translated">该 &lt;code&gt;TextMeasurer&lt;/code&gt; 类提供换行所需的基本操作：测量到给定的预先确定范围内的字符的前进，并产生一个 &lt;code&gt;TextLayout&lt;/code&gt; 中为一定范围的字符。它还提供了用于段落的增量编辑的方法。</target>
        </trans-unit>
        <trans-unit id="4e71e087399343a98483b9a617ee45738e959a19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TexturePaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a texture that is specified as a &lt;a href=&quot;image/bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;TexturePaint&lt;/code&gt; 类提供了一种方法来填充一个&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;与被指定为纹理&lt;a href=&quot;image/bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5dac04db526a9210cdabe62413aabab1e25b23f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TexturePaint&lt;/code&gt; class provides a way to fill a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; with a texture that is specified as a &lt;a href=&quot;image/bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;. The size of the &lt;code&gt;BufferedImage&lt;/code&gt; object should be small because the &lt;code&gt;BufferedImage&lt;/code&gt; data is copied by the &lt;code&gt;TexturePaint&lt;/code&gt; object. At construction time, the texture is anchored to the upper left corner of a &lt;a href=&quot;geom/rectangle2d&quot;&gt;&lt;code&gt;Rectangle2D&lt;/code&gt;&lt;/a&gt; that is specified in user space. Texture is computed for locations in the device space by conceptually replicating the specified &lt;code&gt;Rectangle2D&lt;/code&gt; infinitely in all directions in user space and mapping the &lt;code&gt;BufferedImage&lt;/code&gt; to each replicated &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;TexturePaint&lt;/code&gt; 类提供了一种方法来填充一个&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;与被指定为纹理&lt;a href=&quot;image/bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;BufferedImage&lt;/code&gt; 对象的大小应该很小，因为 &lt;code&gt;BufferedImage&lt;/code&gt; 数据是由 &lt;code&gt;TexturePaint&lt;/code&gt; 对象复制的。在构造时，纹理锚定到用户空间中指定的&lt;a href=&quot;geom/rectangle2d&quot;&gt; &lt;code&gt;Rectangle2D&lt;/code&gt; 的&lt;/a&gt;左上角。通过在概念上在用户空间的所有方向上无限地复制指定的 &lt;code&gt;Rectangle2D&lt;/code&gt; 并将 &lt;code&gt;BufferedImage&lt;/code&gt; 映射到每个复制的 &lt;code&gt;Rectangle2D&lt;/code&gt; ，可以在设备空间中的位置计算纹理。</target>
        </trans-unit>
        <trans-unit id="d01873bbcd9b0d6ed0700e4517af9e870acfb37f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadMXBean&lt;/code&gt; interface provides the &lt;a href=&quot;#findMonitorDeadlockedThreads()&quot;&gt;&lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#findDeadlockedThreads()&quot;&gt;&lt;code&gt;findDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; methods to find deadlocks in the running application.</source>
          <target state="translated">该 &lt;code&gt;ThreadMXBean&lt;/code&gt; 的接口提供了&lt;a href=&quot;#findMonitorDeadlockedThreads()&quot;&gt; &lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#findDeadlockedThreads()&quot;&gt; &lt;code&gt;findDeadlockedThreads()&lt;/code&gt; &lt;/a&gt;方法来查找在运行的应用程序死锁。</target>
        </trans-unit>
        <trans-unit id="179bee4e4045d3f40705d1a933596e56a91b3268" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadMXBean&lt;/code&gt; interface provides the &lt;a href=&quot;threadmxbean#findMonitorDeadlockedThreads--&quot;&gt;&lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt;&lt;code&gt;findDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; methods to find deadlocks in the running application.</source>
          <target state="translated">该 &lt;code&gt;ThreadMXBean&lt;/code&gt; 的接口提供了&lt;a href=&quot;threadmxbean#findMonitorDeadlockedThreads--&quot;&gt; &lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt; &lt;code&gt;findDeadlockedThreads()&lt;/code&gt; &lt;/a&gt;方法来查找在运行的应用程序死锁。</target>
        </trans-unit>
        <trans-unit id="39917ae27e9e1229d50311719d5d54222afebd7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language.</source>
          <target state="translated">该 &lt;code&gt;Throwable&lt;/code&gt; 的类是在Java语言中所有错误和异常的超类。</target>
        </trans-unit>
        <trans-unit id="9684e90dd9742fd93651a9cb50a8638d48f73ecd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java &lt;code&gt;throw&lt;/code&gt; statement. Similarly, only this class or one of its subclasses can be the argument type in a &lt;code&gt;catch&lt;/code&gt; clause. For the purposes of compile-time checking of exceptions, &lt;code&gt;
 Throwable&lt;/code&gt; and any subclass of &lt;code&gt;Throwable&lt;/code&gt; that is not also a subclass of either &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; are regarded as checked exceptions.</source>
          <target state="translated">该 &lt;code&gt;Throwable&lt;/code&gt; 的类是在Java语言中所有错误和异常的超类。Java虚拟机仅抛出属于此类（或其子类之一）的实例的对象，或者可由Java &lt;code&gt;throw&lt;/code&gt; 语句抛出。同样，在 &lt;code&gt;catch&lt;/code&gt; 子句中，只有此类或其子类之一可以作为参数类型。对于异常的编译时检查的目的， &lt;code&gt; Throwable&lt;/code&gt; 和任何子类 &lt;code&gt;Throwable&lt;/code&gt; ，是不是也无论是子类&lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;被视为检查的异常。</target>
        </trans-unit>
        <trans-unit id="08f3668a9e709259220f6210bae5df043abe1c67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java &lt;code&gt;throw&lt;/code&gt; statement. Similarly, only this class or one of its subclasses can be the argument type in a &lt;code&gt;catch&lt;/code&gt; clause. For the purposes of compile-time checking of exceptions, &lt;code&gt;Throwable&lt;/code&gt; and any subclass of &lt;code&gt;Throwable&lt;/code&gt; that is not also a subclass of either &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; are regarded as checked exceptions.</source>
          <target state="translated">该 &lt;code&gt;Throwable&lt;/code&gt; 的类是在Java语言中所有错误和异常的超类。Java虚拟机仅抛出属于此类（或其子类之一）实例的对象，或者Java &lt;code&gt;throw&lt;/code&gt; 语句可以抛出该对象。类似地，在 &lt;code&gt;catch&lt;/code&gt; 子句中，只有此类或其子类之一才能成为参数类型。对于异常的编译时检查的目的， &lt;code&gt;Throwable&lt;/code&gt; 和任何子类 &lt;code&gt;Throwable&lt;/code&gt; ，是不是也无论是子类&lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;被视为检查的异常。</target>
        </trans-unit>
        <trans-unit id="caaa27ee7d5ebe96563c4a7078bb2aeef3acb7d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method is overwritten by a &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">通过此方法设置的 &lt;code&gt;TimeZone&lt;/code&gt; 被&lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar&lt;/code&gt; &lt;/a&gt;调用覆盖。</target>
        </trans-unit>
        <trans-unit id="4424bacaff9f769c17cab48ed5095a39891ea9af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method is overwritten by a &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt;&lt;code&gt;setCalendar&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">通过此方法设置的 &lt;code&gt;TimeZone&lt;/code&gt; 被&lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt; &lt;code&gt;setCalendar&lt;/code&gt; &lt;/a&gt;调用覆盖。</target>
        </trans-unit>
        <trans-unit id="ab6ef098a0e2b11a35d0346ab8d1c75fce3fa93c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method may be overwritten as a result of a call to the parse method.</source>
          <target state="translated">调用parse方法的结果可能会覆盖此方法设置的 &lt;code&gt;TimeZone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b2b585ce3ba8eb3aebe12ba50db23bd93b1cd99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TopLevelWindowListener&lt;/code&gt; interface is used by the &lt;a href=&quot;eventqueuemonitor&quot;&gt;&lt;code&gt;EventQueueMonitor&lt;/code&gt;&lt;/a&gt; class to notify an interested party when a top level window is created or destroyed in the Java Virtual Machine.</source>
          <target state="translated">该 &lt;code&gt;TopLevelWindowListener&lt;/code&gt; 接口用于由&lt;a href=&quot;eventqueuemonitor&quot;&gt; &lt;code&gt;EventQueueMonitor&lt;/code&gt; &lt;/a&gt;类通知利害关系人创建或Java虚拟机毁人亡的顶级窗口时。</target>
        </trans-unit>
        <trans-unit id="f43a5c5d121ea26e7d3d11198748eb2ea44fc04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TopLevelWindowListener&lt;/code&gt; interface is used by the &lt;a href=&quot;eventqueuemonitor&quot;&gt;&lt;code&gt;EventQueueMonitor&lt;/code&gt;&lt;/a&gt; class to notify an interested party when a top level window is created or destroyed in the Java Virtual Machine. Classes wishing to express an interest in top level window events should implement this interface and register themselves with the &lt;code&gt;EventQueueMonitor&lt;/code&gt; by calling the &lt;a href=&quot;eventqueuemonitor#addTopLevelWindowListener(com.sun.java.accessibility.util.TopLevelWindowListener)&quot;&gt;&lt;code&gt;EventQueueMonitor.addTopLevelWindowListener&lt;/code&gt;&lt;/a&gt; class method.</source>
          <target state="translated">该 &lt;code&gt;TopLevelWindowListener&lt;/code&gt; 接口用于由&lt;a href=&quot;eventqueuemonitor&quot;&gt; &lt;code&gt;EventQueueMonitor&lt;/code&gt; &lt;/a&gt;类通知利害关系人创建或Java虚拟机毁人亡的顶级窗口时。希望对顶级窗口事件表示兴趣的类应实现此接口，并通过调用&lt;a href=&quot;eventqueuemonitor#addTopLevelWindowListener(com.sun.java.accessibility.util.TopLevelWindowListener)&quot;&gt; &lt;code&gt;EventQueueMonitor.addTopLevelWindowListener&lt;/code&gt; &lt;/a&gt;类方法向 &lt;code&gt;EventQueueMonitor&lt;/code&gt; 注册自己。</target>
        </trans-unit>
        <trans-unit id="64856a2ea07154d8aca40a14f0b2a8f2b6235c3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Track&lt;/code&gt; class provides methods to edit the track by adding or removing &lt;code&gt;MidiEvent&lt;/code&gt; objects from it. These operations keep the event list in the correct time order. Methods are also included to obtain the track's size, in terms of either the number of events it contains or its duration in ticks.</source>
          <target state="translated">的 &lt;code&gt;Track&lt;/code&gt; 类通过添加或移除提供方法来编辑轨迹 &lt;code&gt;MidiEvent&lt;/code&gt; 从它的对象。这些操作使事件列表按正确的时间顺序排列。还包括根据轨道包含的事件数或以滴答为单位的持续时间来获取轨道大小的方法。</target>
        </trans-unit>
        <trans-unit id="88c4d505c20b758c1cf067046de7a5f61b22c838" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TrailerFieldBC&lt;/code&gt; constant as defined in PKCS#1</source>
          <target state="translated">PKCS＃1中定义的 &lt;code&gt;TrailerFieldBC&lt;/code&gt; 常量</target>
        </trans-unit>
        <trans-unit id="337a73862454b4e4ce4630d25f83783780da6507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TransformAttribute&lt;/code&gt; class defines the constant &lt;a href=&quot;transformattribute#IDENTITY&quot;&gt;&lt;code&gt;IDENTITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;TransformAttribute&lt;/code&gt; 类定义了恒定&lt;a href=&quot;transformattribute#IDENTITY&quot;&gt; &lt;code&gt;IDENTITY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="242dd480e8d4e2f04c2a0aca2e1d2c2a437f9ab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TransformAttribute&lt;/code&gt; class provides an immutable wrapper for a transform so that it is safe to use as an attribute.</source>
          <target state="translated">该 &lt;code&gt;TransformAttribute&lt;/code&gt; 类为转换，以便它可以安全地作为属性使用一个不可变的包装。</target>
        </trans-unit>
        <trans-unit id="9a63fe4036fc39c3775af4983ad2d733adec1ad6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transient&lt;/code&gt; annotation may be be used in any of the methods that are involved in a &lt;a href=&quot;featuredescriptor&quot;&gt;&lt;code&gt;FeatureDescriptor&lt;/code&gt;&lt;/a&gt; subclass to identify the transient feature in the annotated class and its subclasses. Normally, the method that starts with &quot;get&quot; is the best place to put the annotation and it is this declaration that takes precedence in the case of multiple annotations being defined for the same feature.</source>
          <target state="translated">所述 &lt;code&gt;Transient&lt;/code&gt; 注释可以以任何的中涉及的一个的方法中可以使用&lt;a href=&quot;featuredescriptor&quot;&gt; &lt;code&gt;FeatureDescriptor&lt;/code&gt; &lt;/a&gt;子类来识别带注释类及其子类的瞬态特性。通常，以&amp;ldquo; get&amp;rdquo;开头的方法是放置注释的最佳位置，并且在为同一功能定义了多个注释的情况下，此声明优先。</target>
        </trans-unit>
        <trans-unit id="9e364de330948156d7b30fb226ad141e51151b6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transient&lt;/code&gt; annotation may be used in any of the methods that are involved in a &lt;a href=&quot;featuredescriptor&quot;&gt;&lt;code&gt;FeatureDescriptor&lt;/code&gt;&lt;/a&gt; subclass to identify the transient feature in the annotated class and its subclasses. Normally, the method that starts with &quot;get&quot; is the best place to put the annotation and it is this declaration that takes precedence in the case of multiple annotations being defined for the same feature.</source>
          <target state="translated">所述 &lt;code&gt;Transient&lt;/code&gt; 注释可以以任何所涉及的方法中使用&lt;a href=&quot;featuredescriptor&quot;&gt; &lt;code&gt;FeatureDescriptor&lt;/code&gt; &lt;/a&gt;子类来识别带注释类及其子类的瞬态特性。通常，以&amp;ldquo; get&amp;rdquo;开头的方法是放置注释的最佳位置，并且在为同一功能定义了多个注释的情况下，此声明优先。</target>
        </trans-unit>
        <trans-unit id="b848d9d5ef1337d4e50a78e0c88451fd5136dafe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Translator&lt;/code&gt; class provides a translation to interface &lt;a href=&quot;../../../../../../java.desktop/javax/accessibility/accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt; for objects that do not implement interface &lt;code&gt;Accessible&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Translator&lt;/code&gt; 类提供了翻译接口&lt;a href=&quot;../../../../../../java.desktop/javax/accessibility/accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;的未实现接口的对象 &lt;code&gt;Accessible&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6373ddbc83a467395284392d51d836baa47b3de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Translator&lt;/code&gt; class provides a translation to interface &lt;a href=&quot;../../../../../../java.desktop/javax/accessibility/accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt; for objects that do not implement interface &lt;code&gt;Accessible&lt;/code&gt;. Assistive technologies can use the &lt;a href=&quot;#getAccessible(java.lang.Object)&quot;&gt;&lt;code&gt;getAccessible&lt;/code&gt;&lt;/a&gt; class method of &lt;code&gt;Translator&lt;/code&gt; to obtain an object that implements interface &lt;code&gt;Accessible&lt;/code&gt;. If the object passed in already implements interface &lt;code&gt;Accessible&lt;/code&gt;, &lt;code&gt;getAccessible&lt;/code&gt; merely returns the object.</source>
          <target state="translated">该 &lt;code&gt;Translator&lt;/code&gt; 类提供了翻译接口&lt;a href=&quot;../../../../../../java.desktop/javax/accessibility/accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;的未实现接口的对象 &lt;code&gt;Accessible&lt;/code&gt; 。辅助技术可以使用 &lt;code&gt;Translator&lt;/code&gt; 的&lt;a href=&quot;#getAccessible(java.lang.Object)&quot;&gt; &lt;code&gt;getAccessible&lt;/code&gt; &lt;/a&gt;类方法获取实现接口 &lt;code&gt;Accessible&lt;/code&gt; 的对象。如果传入的对象已经实现了 &lt;code&gt;Accessible&lt;/code&gt; 接口，则 &lt;code&gt;getAccessible&lt;/code&gt; 仅返回该对象。</target>
        </trans-unit>
        <trans-unit id="c2b4f4a819eabca9398ff09bcfb81fad4870d846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transparency&lt;/code&gt; interface defines the common transparency modes for implementing classes.</source>
          <target state="translated">的 &lt;code&gt;Transparency&lt;/code&gt; 接口定义用于实现类的通用透明模式。</target>
        </trans-unit>
        <trans-unit id="670b265b3329f65feda03a613696faba69159109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TreeCellRenderer&lt;/code&gt; is also responsible for rendering the the cell representing the tree's current DnD drop location if it has one. If this renderer cares about rendering the DnD drop location, it should query the tree directly to see if the given row represents the drop location:</source>
          <target state="translated">该 &lt;code&gt;TreeCellRenderer&lt;/code&gt; 也负责呈现表示树当前的DND放置的位置，如果它有一个细胞。如果此渲染器关心渲染DnD放置位置，则应直接查询树以查看给定的行是否表示放置位置：</target>
        </trans-unit>
        <trans-unit id="f50af3967242881f5d0eaaa88b167baaa991e4f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TreeMap&lt;/code&gt; type of collection guarantees that the map will be in ascending key order, sorted according to the natural order for the key's class. Each key references a &lt;code&gt;Vector&lt;/code&gt; object that corresponds to one row of a &lt;code&gt;RowSet&lt;/code&gt; object. Therefore, the size of each &lt;code&gt;Vector&lt;/code&gt; object must be exactly equal to the number of columns in the &lt;code&gt;RowSet&lt;/code&gt; object. The key used by the &lt;code&gt;TreeMap&lt;/code&gt; collection is determined by the implementation, which may choose to leverage a set key that is available within the internal &lt;code&gt;RowSet&lt;/code&gt; tabular structure by virtue of a key already set either on the &lt;code&gt;RowSet&lt;/code&gt; object itself or on the underlying SQL data.</source>
          <target state="translated">该 &lt;code&gt;TreeMap&lt;/code&gt; 的集合担保类型，地图将在按键的升序，按自然顺序为重点的类进行排序。每个键都引用一个 &lt;code&gt;Vector&lt;/code&gt; 对象，该对象与 &lt;code&gt;RowSet&lt;/code&gt; 对象的一行相对应。因此，每个 &lt;code&gt;Vector&lt;/code&gt; 对象的大小必须完全等于 &lt;code&gt;RowSet&lt;/code&gt; 对象中的列数。 &lt;code&gt;TreeMap&lt;/code&gt; 集合使用的键由实现决定，实现可以选择利用内部 &lt;code&gt;RowSet&lt;/code&gt; 表格结构中可用的设置键，因为该键已在 &lt;code&gt;RowSet&lt;/code&gt; 对象本身或基础SQL数据上设置。</target>
        </trans-unit>
        <trans-unit id="9bcd29228e53625367d091097491a39f7a4ef896" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeInfo&lt;/code&gt; interface represents a type referenced from &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt; nodes, specified in the schemas associated with the document.</source>
          <target state="translated">的 &lt;code&gt;TypeInfo&lt;/code&gt; 接口表示从引用的类型 &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;Attr&lt;/code&gt; 节点，在与文档相关联的模式指定。</target>
        </trans-unit>
        <trans-unit id="7f72026f83b83008f230de60a8ad4d2f4f72a6f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TypeInfo&lt;/code&gt; interface represents a type referenced from &lt;code&gt;Element&lt;/code&gt; or &lt;code&gt;Attr&lt;/code&gt; nodes, specified in the schemas associated with the document. The type is a pair of a namespace URI and name properties, and depends on the document's schema.</source>
          <target state="translated">的 &lt;code&gt;TypeInfo&lt;/code&gt; 接口表示从引用的类型 &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;Attr&lt;/code&gt; 节点，在与文档相关联的模式指定。该类型是一对名称空间URI和名称属性，并且取决于文档的架构。</target>
        </trans-unit>
        <trans-unit id="62f28efbdf19e84d13677fbf535fa72f87f95a0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UIEvent&lt;/code&gt; interface provides specific contextual information associated with User Interface events.</source>
          <target state="translated">所述 &lt;code&gt;UIEvent&lt;/code&gt; 接口提供与用户接口事件相关联的特定上下文信息。</target>
        </trans-unit>
        <trans-unit id="56b910f29830f7a046163f6e535cb7ed1fc9dd25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URI&lt;/code&gt; passed as an argument specifies the intended use for the cookies. In particular the scheme should reflect whether the cookies will be sent over http, https or used in another context like javascript. The host part should reflect either the destination of the cookies or their origin in the case of javascript.</source>
          <target state="translated">作为参数传递的 &lt;code&gt;URI&lt;/code&gt; 指定cookie的预期用途。特别是，该方案应反映cookie是通过http，https发送还是用于其他上下文（如javascript）中。对于javascript，主机部分应反映cookie的目的地或它们的来源。</target>
        </trans-unit>
        <trans-unit id="4ba34cdf99e04c2d36d3c24cfdbaca9cd7b39e21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; instance is used to construct a stream protocol handler from a protocol name.</source>
          <target state="translated">该 &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; 实例用于构造从一个协议名称的流协议处理程序。</target>
        </trans-unit>
        <trans-unit id="1d60c3045667966fd5b30a25092dd1ae85ace600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets are specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt;; the transformation formats upon which they are based are specified in Amendment 1 of ISO 10646-1 and are also described in the &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;UTF-16&lt;/code&gt; 字符集是由指定的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt; ; 它们所基于的转换格式在ISO 10646-1的修订1中指定，并且在&lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode标准&lt;/i&gt;&lt;/a&gt;中也有描述。</target>
        </trans-unit>
        <trans-unit id="1212ff587f8530505864d4db8b63d2ce30fe0bc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets are specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt;; the transformation formats upon which they are based are specified in Amendment 1 of ISO 10646-1 and are also described in the &lt;a href=&quot;https://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;UTF-16&lt;/code&gt; 字符集是由指定的&lt;a href=&quot;https://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt; ; 它们所基于的转换格式在ISO 10646-1的修订1中指定，并且在&lt;a href=&quot;https://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode标准&lt;/i&gt;&lt;/a&gt;中也有描述。</target>
        </trans-unit>
        <trans-unit id="e562ee77a3c77e7c3517890b43d086ebf2121c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets use sixteen-bit quantities and are therefore sensitive to byte order. In these encodings the byte order of a stream may be indicated by an initial</source>
          <target state="translated">在 &lt;code&gt;UTF-16&lt;/code&gt; 字符集使用十六位量，因此对字节顺序敏感。在这些编码中，流的字节顺序可以由首字母表示</target>
        </trans-unit>
        <trans-unit id="cf273b4ec9d4f261c426075182f01ae5218ee7da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-8&lt;/code&gt; charset is specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt;; the transformation format upon which it is based is specified in Amendment 2 of ISO 10646-1 and is also described in the &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;UTF-8&lt;/code&gt; 字符集是由指定的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt; ; 它所基于的转换格式在ISO 10646-1的修订2中指定，并且在&lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode标准中&lt;/i&gt;&lt;/a&gt;也有描述。</target>
        </trans-unit>
        <trans-unit id="b637061293d6e15703a8ce9105d000feac5d5537" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-8&lt;/code&gt; charset is specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt;; the transformation format upon which it is based is specified in Amendment 2 of ISO 10646-1 and is also described in the &lt;a href=&quot;https://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;UTF-8&lt;/code&gt; 字符集是由指定的&lt;a href=&quot;https://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt; ; 它所基于的转换格式在ISO 10646-1的修订2中指定，并且在&lt;a href=&quot;https://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode标准中&lt;/i&gt;&lt;/a&gt;也有描述。</target>
        </trans-unit>
        <trans-unit id="40e82979aa5d5e239e732f4633c110c90f289973" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UndefinedProperty&lt;/code&gt; object should be returned whenever a property which was not defined for a particular image is fetched.</source>
          <target state="translated">所述 &lt;code&gt;UndefinedProperty&lt;/code&gt; 每当获得不是为特定图像定义的属性时取出对象应返回。</target>
        </trans-unit>
        <trans-unit id="4d98c83e8fcbc979fcd257731475f0094c62618b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UndoManager&lt;/code&gt; makes use of &lt;code&gt;isSignificant&lt;/code&gt; to determine how many edits should be undone or redone. The &lt;code&gt;UndoManager&lt;/code&gt; will undo or redo all insignificant edits (&lt;code&gt;isSignificant&lt;/code&gt; returns false) between the current edit and the last or next significant edit. &lt;code&gt;addEdit&lt;/code&gt; and &lt;code&gt;replaceEdit&lt;/code&gt; can be used to treat multiple edits as a single edit, returning false from &lt;code&gt;isSignificant&lt;/code&gt; allows for treating can be used to have many smaller edits undone or redone at once. Similar functionality can also be done using the &lt;code&gt;addEdit&lt;/code&gt; method.</source>
          <target state="translated">该 &lt;code&gt;UndoManager&lt;/code&gt; 的利用了 &lt;code&gt;isSignificant&lt;/code&gt; 确定许多编辑应该如何撤消或重做。该 &lt;code&gt;UndoManager&lt;/code&gt; 的将撤消或恢复所有无效编辑（ &lt;code&gt;isSignificant&lt;/code&gt; 当前编辑和一个或下一个显著编辑之间返回false）。 &lt;code&gt;addEdit&lt;/code&gt; 和 &lt;code&gt;replaceEdit&lt;/code&gt; 可用于将多个编辑视为单个编辑，从 &lt;code&gt;isSignificant&lt;/code&gt; 返回false允许处理可用于一次撤消或重做许多较小的编辑。也可以使用 &lt;code&gt;addEdit&lt;/code&gt; 方法完成类似的功能。</target>
        </trans-unit>
        <trans-unit id="f3746255404c7a2b3ecfdce90d4c067951094108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeBlock&lt;/code&gt; instance identified by &lt;code&gt;blockName&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;UnicodeBlock&lt;/code&gt; 通过鉴定实例 &lt;code&gt;blockName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d896f7ed14163beb92e5724cc9e8050c6b43c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeBlock&lt;/code&gt; instance representing the Unicode block of which this character is a member, or &lt;code&gt;null&lt;/code&gt; if the character is not a member of any Unicode block</source>
          <target state="translated">代表该字符所属的Unicode块的 &lt;code&gt;UnicodeBlock&lt;/code&gt; 实例；如果该字符不是任何Unicode块的成员，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3da0426647b35089008f837fbe22d127f746d93b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeScript&lt;/code&gt; constant identified by &lt;code&gt;scriptName&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;UnicodeScript&lt;/code&gt; 通过鉴定恒 &lt;code&gt;scriptName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="361aa86ab23e083f317e898d7085e206739f58ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeScript&lt;/code&gt; constant representing the Unicode script of which this character is assigned to.</source>
          <target state="translated">该 &lt;code&gt;UnicodeScript&lt;/code&gt; 常数，表示其中的这个角色被分配到Unicode的脚本。</target>
        </trans-unit>
        <trans-unit id="dff70a6a25ac748bc050f9064cb9cc771e6ae57b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Url&lt;/code&gt; property will be &lt;code&gt;null&lt;/code&gt; if the underlying data source is a non-SQL data source, such as a spreadsheet or an XML data source.</source>
          <target state="translated">的 &lt;code&gt;Url&lt;/code&gt; 属性将是 &lt;code&gt;null&lt;/code&gt; ，如果基础数据源是一种非SQL数据源，如电子表格或XML数据源。</target>
        </trans-unit>
        <trans-unit id="6b22e15bc413740c6b41cef56f96b20ebfc3c2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; for this file system</source>
          <target state="translated">此文件系统的 &lt;code&gt;UserPrincipalLookupService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c0c0ad3a9196627434d4da0577e73a19e9ed982" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ValueExp&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ValueExp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95f12ecc4c931b6cd52c7c8712c089eb1f901958" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; class implements a growable array of objects.</source>
          <target state="translated">的 &lt;code&gt;Vector&lt;/code&gt; 类实现可增长的对象阵列。</target>
        </trans-unit>
        <trans-unit id="4aeeb9de325145d9de793fc5e171c818d3209bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a &lt;code&gt;Vector&lt;/code&gt; can grow or shrink as needed to accommodate adding and removing items after the &lt;code&gt;Vector&lt;/code&gt; has been created.</source>
          <target state="translated">的 &lt;code&gt;Vector&lt;/code&gt; 类实现可增长的对象阵列。像数组一样，它包含可以使用整数索引访问的组件。但是， &lt;code&gt;Vector&lt;/code&gt; 的大小可以根据需要增大或缩小，以适应创建 &lt;code&gt;Vector&lt;/code&gt; 之后添加和删除项目的需要。</target>
        </trans-unit>
        <trans-unit id="4a2a2d34e6edf9a736c688c4e496fc8f413e787d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; of &lt;code&gt;Vectors&lt;/code&gt; of &lt;code&gt;Object&lt;/code&gt; values.</source>
          <target state="translated">该 &lt;code&gt;Vector&lt;/code&gt; 的 &lt;code&gt;Vectors&lt;/code&gt; 的 &lt;code&gt;Object&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="c51ed8f23325be7432bcd95a2fad8327dd3a6c7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; of column identifiers.</source>
          <target state="translated">列标识符的 &lt;code&gt;Vector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef38f50778470be314c350ac1236d4ae66252c2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VetoableChangeSupport&lt;/code&gt; associated with this &lt;code&gt;BeanContextChildSupport&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;BeanContextChildSupport&lt;/code&gt; 关联的 &lt;code&gt;VetoableChangeSupport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20a05157c7add57e69ed4b84eda43d3b9471dac5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Void&lt;/code&gt; class is an uninstantiable placeholder class to hold a reference to the &lt;code&gt;Class&lt;/code&gt; object representing the Java keyword void.</source>
          <target state="translated">的 &lt;code&gt;Void&lt;/code&gt; 类是一个不可实例占位符类保持到一个参考 &lt;code&gt;Class&lt;/code&gt; 表示Java对象关键字void。</target>
        </trans-unit>
        <trans-unit id="b7201fbe9821d111b8e7310e2e9e5f50d2f9f0fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebRowSetImpl&lt;/code&gt; provides the standard reference implementation, which may be extended if required.</source>
          <target state="translated">所述 &lt;code&gt;WebRowSetImpl&lt;/code&gt; 提供标准参考实现，如果需要的话其可以被延长。</target>
        </trans-unit>
        <trans-unit id="9727e0ed3037aaa46ce224bd1fe010383f3480c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Window&lt;/code&gt; and its subcomponents can be made displayable again by rebuilding the native resources with a subsequent call to &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt;. The states of the recreated &lt;code&gt;Window&lt;/code&gt; and its subcomponents will be identical to the states of these objects at the point where the &lt;code&gt;Window&lt;/code&gt; was disposed (not accounting for additional modifications between those actions).</source>
          <target state="translated">该 &lt;code&gt;Window&lt;/code&gt; 及其子组件可以通过后续调用重建原生资源变得可以显示再次 &lt;code&gt;pack&lt;/code&gt; 或 &lt;code&gt;show&lt;/code&gt; 。重新创建的 &lt;code&gt;Window&lt;/code&gt; 及其子组件的状态将与放置 &lt;code&gt;Window&lt;/code&gt; 时这些对象的状态相同（不考虑这些动作之间的其他修改）。</target>
        </trans-unit>
        <trans-unit id="9e95df5176a50ee550434605ecd3ba4571d76304" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Window&lt;/code&gt; class and the &lt;code&gt;Applet&lt;/code&gt; class are the validate roots in AWT. Swing introduces more validate roots.</source>
          <target state="translated">该 &lt;code&gt;Window&lt;/code&gt; 类和 &lt;code&gt;Applet&lt;/code&gt; 类是AWT的验证根。Swing引入了更多验证根。</target>
        </trans-unit>
        <trans-unit id="dcf547c8c4952ee62719999861c70718ea329248" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Window&lt;/code&gt; meets the requirements outlined in the &lt;a href=&quot;#isFocusableWindow()&quot;&gt;&lt;code&gt;isFocusableWindow()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该 &lt;code&gt;Window&lt;/code&gt; 满足该规定的要求&lt;a href=&quot;#isFocusableWindow()&quot;&gt; &lt;code&gt;isFocusableWindow()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="704045f5a2599d8a137d2e74c9f85efdab2b97d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;autoRequestFocus&lt;/code&gt; property is of the &lt;code&gt;true&lt;/code&gt; value.</source>
          <target state="translated">该 &lt;code&gt;Window&lt;/code&gt; 的 &lt;code&gt;autoRequestFocus&lt;/code&gt; 属性是的 &lt;code&gt;true&lt;/code&gt; 价值。</target>
        </trans-unit>
        <trans-unit id="26d20b795a509ccf345f4880f86bffc5ff46ea07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Writer&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;Writer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77fb3bff5f49c42c2161c3e19062b5010a06389f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Writer&lt;/code&gt; methods to write text throw &lt;code&gt;IOException&lt;/code&gt; if the text cannot be encoded using the specified charset.</source>
          <target state="translated">如果无法使用指定的字符集对文本进行编码，则用于编写文本的 &lt;code&gt;Writer&lt;/code&gt; 方法将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5df6357d2d9dd77291511c1a5a3bbe7008f4a76d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Writer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Writer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d0b59a3f7afdfb200daf7c7684da04108a0ed23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XAConnection&lt;/code&gt; interface is derived from the &lt;code&gt;PooledConnection&lt;/code&gt; interface, so what applies to a pooled connection also applies to a connection that is part of a distributed transaction. A transaction manager in the middle tier handles everything transparently. The only change in application code is that an application cannot do anything that would interfere with the transaction manager's handling of the transaction. Specifically, an application cannot call the methods &lt;code&gt;Connection.commit&lt;/code&gt; or &lt;code&gt;Connection.rollback&lt;/code&gt;, and it cannot set the connection to be in auto-commit mode (that is, it cannot call &lt;code&gt;Connection.setAutoCommit(true)&lt;/code&gt;).</source>
          <target state="translated">该 &lt;code&gt;XAConnection&lt;/code&gt; 接口是从派生 &lt;code&gt;PooledConnection&lt;/code&gt; 接口，所以什么适用于连接池也适用于这是一个分布式事务一部分的连接。中间层的事务管理器透明地处理所有事务。应用程序代码的唯一变化是，应用程序无法执行任何会干扰事务管理器对事务处理的操作。具体来说，应用程序无法调用方法 &lt;code&gt;Connection.commit&lt;/code&gt; 或 &lt;code&gt;Connection.rollback&lt;/code&gt; ，也无法将连接设置为自动提交模式（即，它不能调用 &lt;code&gt;Connection.setAutoCommit(true)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2fdc5e90dac380c583a94ac10964401cbc1bff2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLDecoder&lt;/code&gt; class is used to read XML documents created using the &lt;code&gt;XMLEncoder&lt;/code&gt; and is used just like the &lt;code&gt;ObjectInputStream&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;XMLDecoder&lt;/code&gt; 类用于读取使用创建的XML文档 &lt;code&gt;XMLEncoder&lt;/code&gt; 和使用就像 &lt;code&gt;ObjectInputStream&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="4c73680d790e9f555b97eb4fbffb24cd26c3ccca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLDecoder&lt;/code&gt; class is used to read XML documents created using the &lt;code&gt;XMLEncoder&lt;/code&gt; and is used just like the &lt;code&gt;ObjectInputStream&lt;/code&gt;. For example, one can use the following fragment to read the first object defined in an XML document written by the &lt;code&gt;XMLEncoder&lt;/code&gt; class:</source>
          <target state="translated">该 &lt;code&gt;XMLDecoder&lt;/code&gt; 类用于读取使用创建的XML文档 &lt;code&gt;XMLEncoder&lt;/code&gt; 和使用就像 &lt;code&gt;ObjectInputStream&lt;/code&gt; 的。例如，可以使用以下片段读取 &lt;code&gt;XMLEncoder&lt;/code&gt; 类编写的XML文档中定义的第一个对象：</target>
        </trans-unit>
        <trans-unit id="b40fba744abf8f8cdfdbf7823211e024611a2005" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLEncoder&lt;/code&gt; class is a complementary alternative to the &lt;code&gt;ObjectOutputStream&lt;/code&gt; and can used to generate a textual representation of a &lt;em&gt;JavaBean&lt;/em&gt; in the same way that the &lt;code&gt;ObjectOutputStream&lt;/code&gt; can be used to create binary representation of &lt;code&gt;Serializable&lt;/code&gt; objects.</source>
          <target state="translated">所述 &lt;code&gt;XMLEncoder&lt;/code&gt; 类是互补替代 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 并可以用于生成的文本表示&lt;em&gt;的JavaBean&lt;/em&gt;以相同的方式，该 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 中可用于创建的二进制表示 &lt;code&gt;Serializable&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="bc93ab4e94e8fd32e113d65a55be49ef42b7d783" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLEncoder&lt;/code&gt; class is a complementary alternative to the &lt;code&gt;ObjectOutputStream&lt;/code&gt; and can used to generate a textual representation of a &lt;em&gt;JavaBean&lt;/em&gt; in the same way that the &lt;code&gt;ObjectOutputStream&lt;/code&gt; can be used to create binary representation of &lt;code&gt;Serializable&lt;/code&gt; objects. For example, the following fragment can be used to create a textual representation the supplied &lt;em&gt;JavaBean&lt;/em&gt; and all its properties:</source>
          <target state="translated">所述 &lt;code&gt;XMLEncoder&lt;/code&gt; 类是互补替代 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 并可以用于生成的文本表示&lt;em&gt;的JavaBean&lt;/em&gt;以相同的方式，该 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 中可用于创建的二进制表示 &lt;code&gt;Serializable&lt;/code&gt; 的对象。例如，以下片段可用于创建所提供的&lt;em&gt;JavaBean&lt;/em&gt;及其所有属性的文本表示形式：</target>
        </trans-unit>
        <trans-unit id="baee72131905882a77a0b4ca9b76ace184c77c99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLEncoder&lt;/code&gt; class provides a default denotation for &lt;em&gt;JavaBean&lt;/em&gt;s in which they are represented as XML documents complying with version 1.0 of the XML specification and the UTF-8 character encoding of the Unicode/ISO 10646 character set. The XML documents produced by the &lt;code&gt;XMLEncoder&lt;/code&gt; class are:</source>
          <target state="translated">&lt;code&gt;XMLEncoder&lt;/code&gt; 类为&lt;em&gt;JavaBean&lt;/em&gt;提供了默认的符号表示，其中将它们表示为符合XML规范版本1.0和Unicode / ISO 10646字符集的UTF-8字符编码的XML文档。 &lt;code&gt;XMLEncoder&lt;/code&gt; 类生成的XML文档是：</target>
        </trans-unit>
        <trans-unit id="773745b0980b73ae3cf7133fbf0740a9e51a6976" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLStreamReader&lt;/code&gt; or &lt;code&gt;XMLEventReader&lt;/code&gt; used to construct this &lt;code&gt;StAXSource&lt;/code&gt; is queried to determine the system identifier of the XML source.</source>
          <target state="translated">查询用于构造此 &lt;code&gt;StAXSource&lt;/code&gt; 的 &lt;code&gt;XMLStreamReader&lt;/code&gt; 或 &lt;code&gt;XMLEventReader&lt;/code&gt; ，以确定XML源的系统标识符。</target>
        </trans-unit>
        <trans-unit id="5e8ba5718ccb5dddefc8fcb9ef5b222f271f2b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathEvaluationResult&lt;/code&gt; interface represents the result of the evaluation of an XPath expression within the context of a particular node.</source>
          <target state="translated">所述 &lt;code&gt;XPathEvaluationResult&lt;/code&gt; 接口表示特定节点的上下文中的XPath表达式的求值的结果。</target>
        </trans-unit>
        <trans-unit id="7979524a823b2b3c2152adeae36a863101800820" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathEvaluationResult&lt;/code&gt; interface represents the result of the evaluation of an XPath expression within the context of a particular node. The evaluation of an XPath expression can result in various result types as defined in XML Path Language (XPath) Version 1.0.</source>
          <target state="translated">所述 &lt;code&gt;XPathEvaluationResult&lt;/code&gt; 接口表示特定节点的上下文中的XPath表达式的求值的结果。XPath表达式的求值可以导致XML路径语言（XPath）版本1.0中定义的各种结果类型。</target>
        </trans-unit>
        <trans-unit id="fd7e2381f00dc37c671ca1b95d78f182b4a9d8c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathExpression&lt;/code&gt; interface represents a parsed and resolved XPath expression.</source>
          <target state="translated">所述 &lt;code&gt;XPathExpression&lt;/code&gt; 接口表示解析并解决XPath表达式。</target>
        </trans-unit>
        <trans-unit id="864adcf3b012bbba70056106a86d52bf42863eff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathFactory&lt;/code&gt; builtin system-default implementation is only required to support the &lt;a href=&quot;#DEFAULT_OBJECT_MODEL_URI&quot;&gt;&lt;code&gt;default object model&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;../../../org/w3c/dom/package-summary&quot;&gt;W3C DOM&lt;/a&gt;, but may support additional object models.</source>
          <target state="translated">该 &lt;code&gt;XPathFactory&lt;/code&gt; 是否内置系统默认的实现只需要支持&lt;a href=&quot;#DEFAULT_OBJECT_MODEL_URI&quot;&gt; &lt;code&gt;default object model&lt;/code&gt; &lt;/a&gt;，在&lt;a href=&quot;../../../org/w3c/dom/package-summary&quot;&gt;W3C DOM&lt;/a&gt;，但可以支持额外的对象模型。</target>
        </trans-unit>
        <trans-unit id="f9ce9690ea5d8f3d35027cfba07990e65b3fa285" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathNSResolver&lt;/code&gt; interface permit &lt;code&gt;prefix&lt;/code&gt; strings in the expression to be properly bound to &lt;code&gt;namespaceURI&lt;/code&gt; strings.</source>
          <target state="translated">所述 &lt;code&gt;XPathNSResolver&lt;/code&gt; 接口许可证 &lt;code&gt;prefix&lt;/code&gt; 在表达式字符串被正确绑定到 &lt;code&gt;namespaceURI&lt;/code&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="464770db069d98604c0813c2d629cb661ff7a426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathNSResolver&lt;/code&gt; interface permit &lt;code&gt;prefix&lt;/code&gt; strings in the expression to be properly bound to &lt;code&gt;namespaceURI&lt;/code&gt; strings. &lt;code&gt;XPathEvaluator&lt;/code&gt; can construct an implementation of &lt;code&gt;XPathNSResolver&lt;/code&gt; from a node, or the interface may be implemented by any application.</source>
          <target state="translated">所述 &lt;code&gt;XPathNSResolver&lt;/code&gt; 接口许可证 &lt;code&gt;prefix&lt;/code&gt; 在表达式字符串被正确绑定到 &lt;code&gt;namespaceURI&lt;/code&gt; 字符串。 &lt;code&gt;XPathEvaluator&lt;/code&gt; 可以构造的实施 &lt;code&gt;XPathNSResolver&lt;/code&gt; 从节点，或者该接口可以被任何应用程序来实现。</target>
        </trans-unit>
        <trans-unit id="30c24a58ce8f83955520baaac9ee2788a5837651" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathNamespace&lt;/code&gt; interface is returned by &lt;code&gt;XPathResult&lt;/code&gt; interfaces to represent the XPath namespace node type that DOM lacks.</source>
          <target state="translated">所述 &lt;code&gt;XPathNamespace&lt;/code&gt; 接口由返回 &lt;code&gt;XPathResult&lt;/code&gt; 接口来表示的XPath命名空间节点类型DOM缺乏。</target>
        </trans-unit>
        <trans-unit id="668ded359ece8d2b5275905cdbb1f7919b101575" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathNamespace&lt;/code&gt; interface is returned by &lt;code&gt;XPathResult&lt;/code&gt; interfaces to represent the XPath namespace node type that DOM lacks. There is no public constructor for this node type. Attempts to place it into a hierarchy or a NamedNodeMap result in a &lt;code&gt;DOMException&lt;/code&gt; with the code &lt;code&gt;HIERARCHY_REQUEST_ERR&lt;/code&gt; . This node is read only, so methods or setting of attributes that would mutate the node result in a DOMException with the code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;XPathNamespace&lt;/code&gt; 接口由返回 &lt;code&gt;XPathResult&lt;/code&gt; 接口来表示的XPath命名空间节点类型DOM缺乏。该节点类型没有公共构造函数。尝试将其放入层次结构或NamedNodeMap中会导致 &lt;code&gt;DOMException&lt;/code&gt; ，其代码为 &lt;code&gt;HIERARCHY_REQUEST_ERR&lt;/code&gt; 。该节点是只读的，因此会使该节点发生变异的方法或属性设置会导致DOMException，其代码为 &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d653050c0bbc219e35952bc3cf4f5c4e2ea3d3d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathResult&lt;/code&gt; interface represents the result of the evaluation of an XPath 1.0 expression within the context of a particular node.</source>
          <target state="translated">所述 &lt;code&gt;XPathResult&lt;/code&gt; 接口表示特定节点的上下文中的XPath 1.0表达式的求值的结果。</target>
        </trans-unit>
        <trans-unit id="bed61e9ab59fdaac051379b01910e15ccf293b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathResult&lt;/code&gt; interface represents the result of the evaluation of an XPath 1.0 expression within the context of a particular node. Since evaluation of an XPath expression can result in various result types, this object makes it possible to discover and manipulate the type and value of the result.</source>
          <target state="translated">所述 &lt;code&gt;XPathResult&lt;/code&gt; 接口表示特定节点的上下文中的XPath 1.0表达式的求值的结果。由于对XPath表达式的求值可以导致各种结果类型，因此该对象使发现和操纵结果的类型和值成为可能。</target>
        </trans-unit>
        <trans-unit id="1579758fa332f4ff09bb6a3a0a884344e634c7db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XPathVariableResolver&lt;/code&gt; and the XPath evaluator must adhere to a contract that cannot be directly enforced by the API. Although variables may be mutable, that is, an application may wish to evaluate the same XPath expression more than once with different variable values, in the course of evaluating any single XPath expression, a variable's value &lt;strong&gt;&lt;em&gt;must&lt;/em&gt;&lt;/strong&gt; not change.</source>
          <target state="translated">该 &lt;code&gt;XPathVariableResolver&lt;/code&gt; 和XPath计算器必须坚持不能由API直接执行的合同。虽然变量可以是可变的，即，一个应用程序可能希望用不同的变量值超过一次评估相同的XPath表达式，评估任何单个XPath表达式的过程中，一个变量的值&lt;strong&gt;&lt;em&gt;必须&lt;/em&gt;&lt;/strong&gt;不改变。</target>
        </trans-unit>
        <trans-unit id="dc6626b4ce56edf5eec0e4e7f1f6d83d431a9d81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[ ]&lt;/code&gt; characters are a</source>
          <target state="translated">在 &lt;code&gt;[ ]&lt;/code&gt; 的字符是一个</target>
        </trans-unit>
        <trans-unit id="a2448ee443a37bfe2270b1cc58275c79e860c644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aCommand&lt;/code&gt; will be set in the delivered event if specified.</source>
          <target state="translated">该 &lt;code&gt;aCommand&lt;/code&gt; 将在传递的事件，如果指定的设置。</target>
        </trans-unit>
        <trans-unit id="7c55d0ff61eb4e937c515821a0807c8069fecf30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aCondition&lt;/code&gt; can be one of:</source>
          <target state="translated">该 &lt;code&gt;aCondition&lt;/code&gt; 可以是一个：</target>
        </trans-unit>
        <trans-unit id="b980e0f175dba221828f4b57f7dd907c4fe4a7d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accessible&lt;/code&gt; flag when &lt;code&gt;true&lt;/code&gt; suppresses Java language access control checks to only enable &lt;a href=&quot;#get(java.lang.Object)&quot;&gt;&lt;em&gt;read&lt;/em&gt;&lt;/a&gt; access to these non-modifiable final fields.</source>
          <target state="translated">当 &lt;code&gt;true&lt;/code&gt; 时， &lt;code&gt;accessible&lt;/code&gt; 标志禁止Java语言访问控制检查，以仅启用对这些不可修改的final字段的&lt;a href=&quot;#get(java.lang.Object)&quot;&gt;&lt;em&gt;读取&lt;/em&gt;&lt;/a&gt;访问。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5fbe9edcb70b42859b844ed294f412b8dd98d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accessible&lt;/code&gt; flag when &lt;code&gt;true&lt;/code&gt; suppresses Java language access control checks to only enable &lt;a href=&quot;field#get(java.lang.Object)&quot;&gt;&lt;em&gt;read&lt;/em&gt;&lt;/a&gt; access to these non-modifiable final fields.</source>
          <target state="translated">当 &lt;code&gt;true&lt;/code&gt; 时， &lt;code&gt;accessible&lt;/code&gt; 标志禁止Java语言访问控制检查，以仅启用对这些不可修改的final字段的&lt;a href=&quot;field#get(java.lang.Object)&quot;&gt;&lt;em&gt;读取&lt;/em&gt;&lt;/a&gt;访问。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbec44aca0eff7c0fd9d646cfb96819a5b4c572f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accumulator&lt;/code&gt; function must be an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associative&lt;/a&gt; function.</source>
          <target state="translated">该 &lt;code&gt;accumulator&lt;/code&gt; 功能必须是&lt;a href=&quot;package-summary#Associativity&quot;&gt;关联&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="4185fd67e39e58987d681ed4e049cb9068cef055" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; argument is of the same format as the &lt;code&gt;eventPropertyName&lt;/code&gt; argument where the last property name identifies either a method name or writable property.</source>
          <target state="translated">的 &lt;code&gt;action&lt;/code&gt; 参数是相同的格式的 &lt;code&gt;eventPropertyName&lt;/code&gt; 参数，其中最后一个属性名称标识任一个方法名或可写属性。</target>
        </trans-unit>
        <trans-unit id="31404f4484a67d5901851525c58dad6c4c563d5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;agentmain&lt;/code&gt; method has one of two possible signatures. The JVM first attempts to invoke the following method on the agent class:</source>
          <target state="translated">该 &lt;code&gt;agentmain&lt;/code&gt; 方法有两种可能的签名之一。JVM首先尝试在代理类上调用以下方法：</target>
        </trans-unit>
        <trans-unit id="cc78d234a40aa6ddd38f2300973ad58dbc9f2403" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;agentmain&lt;/code&gt; method should do any necessary initialization required to start the agent and return. If the agent cannot be started, for example the agent class cannot be loaded, the agent class does not define a conformant &lt;code&gt;agentmain&lt;/code&gt; method, or the &lt;code&gt;agentmain&lt;/code&gt; method throws an uncaught exception or error, the JVM will abort.</source>
          <target state="translated">该 &lt;code&gt;agentmain&lt;/code&gt; 方法应该做启动代理和返回所需的任何必要的初始化。如果无法启动代理，例如无法加载代理类，或者该代理类未定义一致的 &lt;code&gt;agentmain&lt;/code&gt; 方法，或者 &lt;code&gt;agentmain&lt;/code&gt; 方法抛出未捕获的异常或错误，则JVM将中止。</target>
        </trans-unit>
        <trans-unit id="e39ec8f12fac3e1235b57830cba8b781dedf715e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;agentmain&lt;/code&gt; method should do any necessary initialization required to start the agent. When startup is complete the method should return. If the agent cannot be started (for example, because the agent class cannot be loaded, or because the agent class does not have a conformant &lt;code&gt;agentmain&lt;/code&gt; method), the JVM will not abort. If the &lt;code&gt;agentmain&lt;/code&gt; method throws an uncaught exception it will be ignored (but may be logged by the JVM for troubleshooting purposes).</source>
          <target state="translated">该 &lt;code&gt;agentmain&lt;/code&gt; 方法应该做启动代理所需的任何必要的初始化。启动完成后，该方法应返回。如果无法启动代理（例如，因为无法加载代理类，或者因为代理类没有一致的 &lt;code&gt;agentmain&lt;/code&gt; 方法），则JVM不会中止。如果 &lt;code&gt;agentmain&lt;/code&gt; 方法抛出未捕获的异常，它将被忽略（但JVM可能会记录该日志以进行故障排除）。</target>
        </trans-unit>
        <trans-unit id="4200792e507990527888853e33e39555b27217a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; parameter identifies the attribute to be read and takes the form:</source>
          <target state="translated">的 &lt;code&gt;attribute&lt;/code&gt; 被读取参数标识属性和采取以下形式：</target>
        </trans-unit>
        <trans-unit id="e13622be0932a01b09ea0231195ad9dee2d891a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; parameter identifies the attribute to be set and takes the form:</source>
          <target state="translated">的 &lt;code&gt;attribute&lt;/code&gt; 参数标识所述属性被设置并采用以下形式：</target>
        </trans-unit>
        <trans-unit id="9300dec972e233c14dfee6f24a1437eb62d16c5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter identifies the attributes to be read and takes the form:</source>
          <target state="translated">的 &lt;code&gt;attributes&lt;/code&gt; 参数标识要读取的属性和采取以下形式：</target>
        </trans-unit>
        <trans-unit id="e891f2a34d3ff9a18061c78c854c7a39d310fd9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt;&lt;code&gt;NamedNodeMaps&lt;/code&gt; are equal. This is: they are both &lt;code&gt;null&lt;/code&gt;, or they have the same length and for each node that exists in one map there is a node that exists in the other map and is equal, although not necessarily at the same index.</source>
          <target state="translated">该 &lt;code&gt;attributes&lt;/code&gt; &lt;code&gt;NamedNodeMaps&lt;/code&gt; 是相等的。这是：它们都为 &lt;code&gt;null&lt;/code&gt; ，或者它们具有相同的长度，并且对于一个映射中存在的每个节点，在另一个映射中都存在一个节点，并且该节点是相等的，尽管不一定具有相同的索引。</target>
        </trans-unit>
        <trans-unit id="71ec10680a515404dcea83dc93b34a00ae544957" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is an optional array of file &lt;a href=&quot;../file/attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file.</source>
          <target state="translated">所述 &lt;code&gt;attrs&lt;/code&gt; 参数是文件的可选阵列&lt;a href=&quot;../file/attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;创建文件时设置原子。</target>
        </trans-unit>
        <trans-unit id="aa73d718a6e84fdffc4666766b8c6f4155f86290" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the link. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;/a&gt;创建链接时设置原子。每个属性均由其&lt;a href=&quot;attribute/fileattribute#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="f5d11588e62ee6ecee510a144a13ae053b7ded0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the link. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;/a&gt;创建链接时设置原子。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="6a9611129a94268b694e7f0a6870f3b072a950a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when a new file is created.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;创建一个新的文件时，原子设置。</target>
        </trans-unit>
        <trans-unit id="9a59843ac8ffdbb8b27a7af904c73b09addfd665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the directory. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建目录时。每个属性均由其&lt;a href=&quot;attribute/fileattribute#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="1530cb7be2e1a90d2e32e41b80f5181fbd3c409a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the directory. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建目录时。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="a2eafb0f18e2c0f90cfaa47597137720724d74ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建文件时。每个属性均由其&lt;a href=&quot;attribute/fileattribute#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="09484803eed7eb220bb9cee3c89264c72f6e5064" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored. When no file attributes are specified, then the resulting file may have more restrictive access permissions to files created by the &lt;a href=&quot;../../io/file#createTempFile(java.lang.String,java.lang.String,java.io.File)&quot;&gt;&lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建文件时。每个属性均由其&lt;a href=&quot;attribute/fileattribute#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。如果未指定文件属性，则生成的文件可能对&lt;a href=&quot;../../io/file#createTempFile(java.lang.String,java.lang.String,java.io.File)&quot;&gt; &lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt; &lt;/a&gt;方法创建的文件具有更多的限制性访问权限。</target>
        </trans-unit>
        <trans-unit id="ad9b07c9e2205e3502079d33de386fcf7c13ff4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建文件时。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="3d4f30d19e092c8b774921588c985e988e8af3fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored. When no file attributes are specified, then the resulting file may have more restrictive access permissions to files created by the &lt;a href=&quot;../../io/file#createTempFile-java.lang.String-java.lang.String-java.io.File-&quot;&gt;&lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建文件时。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。如果未指定文件属性，则生成的文件可能对&lt;a href=&quot;../../io/file#createTempFile-java.lang.String-java.lang.String-java.io.File-&quot;&gt; &lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt; &lt;/a&gt;方法创建的文件具有更多的限制性访问权限。</target>
        </trans-unit>
        <trans-unit id="b269fdea6c6d809695550b9428ade177ba1ea0ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the nonexistent directories. Each file attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;来创建不存在的目录时设置原子。每个文件属性都通过&lt;a href=&quot;attribute/fileattribute#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;来标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="eac58af08c25e30b8096bbec06d65d5969d2351b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the nonexistent directories. Each file attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;来创建不存在的目录时设置原子。每个文件属性都通过&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;来标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="9310f8ddf2f2e1abe2704763c0d8698944c86a52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;available&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; always returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;available&lt;/code&gt; 方法始终返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07e935be2d00da600d82b1459bdd0645c167a8af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;available&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; always returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;available&lt;/code&gt; 方法始终返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a223f99a73adb8d4155acdcdbe953d90137df1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;available&lt;/code&gt; method of the underlying stream returns zero, indicating that further input requests would block.</source>
          <target state="translated">基础流的 &lt;code&gt;available&lt;/code&gt; 方法返回零，指示其他输入请求将被阻止。</target>
        </trans-unit>
        <trans-unit id="3e1885899fe620f932f25aade18693cc40c3bf9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogether. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="translated">在 &lt;code&gt;backlog&lt;/code&gt; 参数是套接字上挂起连接的请求的最大数量。它的确切语义是特定于实现的。特别地，一种实现可以施加最大长度，或者可以选择完全忽略该参数。提供的值应大于 &lt;code&gt;0&lt;/code&gt; 。如果它小于或等于 &lt;code&gt;0&lt;/code&gt; ，那么将使用特定于实现的默认值。</target>
        </trans-unit>
        <trans-unit id="c19d6f589a03480c7507cbcf9ea41e93f9410bd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="translated">在 &lt;code&gt;backlog&lt;/code&gt; 参数是套接字上挂起连接的请求的最大数量。它的确切语义是特定于实现的。特别地，实现可以施加最大长度或可以选择完全忽略该参数。提供的值应大于 &lt;code&gt;0&lt;/code&gt; 。如果它小于或等于 &lt;code&gt;0&lt;/code&gt; ，那么将使用特定于实现的默认值。</target>
        </trans-unit>
        <trans-unit id="29ad9363012d93283f3d04ff689ea4b529ac1006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; argument must be a positive value greater than 0. If the value passed if equal or less than 0, then the default value will be assumed.</source>
          <target state="translated">的 &lt;code&gt;backlog&lt;/code&gt; 参数必须是一个正的值大于0。如果该值传递如果等于或小于0，则默认值将假定。</target>
        </trans-unit>
        <trans-unit id="b04fd34021527ffa6eec03ad117996148e622e5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; parameter is the maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. If the &lt;code&gt;backlog&lt;/code&gt; parameter has the value &lt;code&gt;0&lt;/code&gt;, or a negative value, then an implementation specific default is used.</source>
          <target state="translated">的 &lt;code&gt;backlog&lt;/code&gt; 参数是在插座上挂起连接的最大数目。它的确切语义是特定于实现的。特别地，一种实现可以施加最大长度，或者可以选择完全忽略该参数。如果 &lt;code&gt;backlog&lt;/code&gt; 参数的值为 &lt;code&gt;0&lt;/code&gt; 或负值，则使用特定于实现的默认值。</target>
        </trans-unit>
        <trans-unit id="9758dfb7f206fee802af2ff421e244af4ed6b224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beginIndex&lt;/code&gt; and &lt;code&gt;endIndex&lt;/code&gt; parameters specify the subsequence of name elements. The name that is &lt;em&gt;closest&lt;/em&gt; to the root in the directory hierarchy has index &lt;code&gt;0&lt;/code&gt;. The name that is &lt;em&gt;farthest&lt;/em&gt; from the root has index &lt;a href=&quot;#getNameCount()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-1&lt;/code&gt;. The returned &lt;code&gt;Path&lt;/code&gt; object has the name elements that begin at &lt;code&gt;beginIndex&lt;/code&gt; and extend to the element at index &lt;code&gt;
 endIndex-1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;beginIndex&lt;/code&gt; 和 &lt;code&gt;endIndex&lt;/code&gt; 的参数指定名称的元素的序列。在目录层次结构中&lt;em&gt;最接近&lt;/em&gt;根的名称具有索引 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;离&lt;/em&gt;根&lt;em&gt;最远&lt;/em&gt;的名称的索引&lt;a href=&quot;#getNameCount()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-1&lt;/code&gt; 。返回的 &lt;code&gt;Path&lt;/code&gt; 对象具有名称元素，这些名称元素始于 &lt;code&gt;beginIndex&lt;/code&gt; 并扩展到索引 &lt;code&gt; endIndex-1&lt;/code&gt; 处的元素。</target>
        </trans-unit>
        <trans-unit id="038e82ed2e83821157222aec4b1425ddc2acdb2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beginIndex&lt;/code&gt; and &lt;code&gt;endIndex&lt;/code&gt; parameters specify the subsequence of name elements. The name that is &lt;em&gt;closest&lt;/em&gt; to the root in the directory hierarchy has index &lt;code&gt;0&lt;/code&gt;. The name that is &lt;em&gt;farthest&lt;/em&gt; from the root has index &lt;a href=&quot;path#getNameCount--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-1&lt;/code&gt;. The returned &lt;code&gt;Path&lt;/code&gt; object has the name elements that begin at &lt;code&gt;beginIndex&lt;/code&gt; and extend to the element at index &lt;code&gt;endIndex-1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;beginIndex&lt;/code&gt; 和 &lt;code&gt;endIndex&lt;/code&gt; 的参数指定名称的元素的序列。在目录层次结构中&lt;em&gt;最接近&lt;/em&gt;根的名称具有索引 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;离&lt;/em&gt;根&lt;em&gt;最远&lt;/em&gt;的名称的索引&lt;a href=&quot;path#getNameCount--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-1&lt;/code&gt; 。返回的 &lt;code&gt;Path&lt;/code&gt; 对象具有名称元素，这些名称元素始于 &lt;code&gt;beginIndex&lt;/code&gt; 并扩展到索引 &lt;code&gt;endIndex-1&lt;/code&gt; 处的元素。</target>
        </trans-unit>
        <trans-unit id="23cf20e6e7ba36d73ecb53fccee07162da8d920d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;body&lt;/code&gt; handle must not be &lt;code&gt;null&lt;/code&gt;; its type must be of the form &lt;code&gt;(V A...)V&lt;/code&gt;, where &lt;code&gt;V&lt;/code&gt; is non-&lt;code&gt;void&lt;/code&gt;, or else &lt;code&gt;(A...)void&lt;/code&gt;. (In the &lt;code&gt;void&lt;/code&gt; case, we assign the type &lt;code&gt;void&lt;/code&gt; to the name &lt;code&gt;V&lt;/code&gt;, and we will write &lt;code&gt;(V A...)V&lt;/code&gt; with the understanding that a &lt;code&gt;void&lt;/code&gt; type &lt;code&gt;V&lt;/code&gt; is quietly dropped from the parameter list, leaving &lt;code&gt;(A...)V&lt;/code&gt;.)</source>
          <target state="translated">在 &lt;code&gt;body&lt;/code&gt; 手柄决不能 &lt;code&gt;null&lt;/code&gt; ; 其类型必须为 &lt;code&gt;(V A...)V&lt;/code&gt; 的形式，其中 &lt;code&gt;V&lt;/code&gt; 为非 &lt;code&gt;void&lt;/code&gt; ，否则为 &lt;code&gt;(A...)void&lt;/code&gt; 。（在 &lt;code&gt;void&lt;/code&gt; 的情况下，我们将 &lt;code&gt;void&lt;/code&gt; 类型分配给名称 &lt;code&gt;V&lt;/code&gt; ，我们将写 &lt;code&gt;(V A...)V&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; 是要从参数列表中静默删除void类型 &lt;code&gt;V&lt;/code&gt; ，从而留下 &lt;code&gt;(A...)V&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="87c334e233d7c15dbce8f02769f49f0543984685" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;body&lt;/code&gt; handle must not be &lt;code&gt;null&lt;/code&gt;; its type must be of the form &lt;code&gt;(V I A...)V&lt;/code&gt;, where &lt;code&gt;V&lt;/code&gt; is non-&lt;code&gt;void&lt;/code&gt;, or else &lt;code&gt;(I A...)void&lt;/code&gt;. (In the &lt;code&gt;void&lt;/code&gt; case, we assign the type &lt;code&gt;void&lt;/code&gt; to the name &lt;code&gt;V&lt;/code&gt;, and we will write &lt;code&gt;(V I A...)V&lt;/code&gt; with the understanding that a &lt;code&gt;void&lt;/code&gt; type &lt;code&gt;V&lt;/code&gt; is quietly dropped from the parameter list, leaving &lt;code&gt;(I A...)V&lt;/code&gt;.)</source>
          <target state="translated">在 &lt;code&gt;body&lt;/code&gt; 手柄决不能 &lt;code&gt;null&lt;/code&gt; ; 其类型必须为 &lt;code&gt;(V I A...)V&lt;/code&gt; 的形式，其中 &lt;code&gt;V&lt;/code&gt; 为非 &lt;code&gt;void&lt;/code&gt; ，否则为 &lt;code&gt;(I A...)void&lt;/code&gt; 。（在 &lt;code&gt;void&lt;/code&gt; 的情况下，我们将 &lt;code&gt;void&lt;/code&gt; 类型分配给名称 &lt;code&gt;V&lt;/code&gt; ，我们将编写 &lt;code&gt;(V I A...)V&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; 是要从参数列表中静默删除void类型 &lt;code&gt;V&lt;/code&gt; ，从而留下 &lt;code&gt;(I A...)V&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="1e3ecb1f1c113d7459558edaafd1c22e159c798c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;body&lt;/code&gt; handle must not be &lt;code&gt;null&lt;/code&gt;; its type must be of the form &lt;code&gt;(V T A...)V&lt;/code&gt;, where &lt;code&gt;V&lt;/code&gt; is non-&lt;code&gt;void&lt;/code&gt;, or else &lt;code&gt;(T A...)void&lt;/code&gt;. (In the &lt;code&gt;void&lt;/code&gt; case, we assign the type &lt;code&gt;void&lt;/code&gt; to the name &lt;code&gt;V&lt;/code&gt;, and we will write &lt;code&gt;(V T A...)V&lt;/code&gt; with the understanding that a &lt;code&gt;void&lt;/code&gt; type &lt;code&gt;V&lt;/code&gt; is quietly dropped from the parameter list, leaving &lt;code&gt;(T A...)V&lt;/code&gt;.)</source>
          <target state="translated">在 &lt;code&gt;body&lt;/code&gt; 手柄决不能 &lt;code&gt;null&lt;/code&gt; ; 其类型必须为 &lt;code&gt;(V T A...)V&lt;/code&gt; 的形式，其中 &lt;code&gt;V&lt;/code&gt; 为非 &lt;code&gt;void&lt;/code&gt; ，否则为 &lt;code&gt;(T A...)void&lt;/code&gt; 。（在 &lt;code&gt;void&lt;/code&gt; 的情况下，我们将 &lt;code&gt;void&lt;/code&gt; 类型分配给名称 &lt;code&gt;V&lt;/code&gt; ，我们将编写 &lt;code&gt;(V T A...)V&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; 是要从参数列表中静默删除void类型 &lt;code&gt;V&lt;/code&gt; ，从而保留 &lt;code&gt;(T A...)V&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="2607bcf7e52a949a9098498708e7ed0874e36f9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bytes&lt;/code&gt; parameter is the class bytes of a valid class file (as defined by the &lt;em&gt;The Java Virtual Machine Specification&lt;/em&gt;) with a class name in the same package as the lookup class.</source>
          <target state="translated">的 &lt;code&gt;bytes&lt;/code&gt; 参数是类字节的有效类文件（如由所定义&lt;em&gt;的Java虚拟机规范&lt;/em&gt;与在同一个包作为查找类的类名称）。</target>
        </trans-unit>
        <trans-unit id="ce830a6dc99fa048ff691c489beb4b6f9e5a2ab8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;caller&lt;/code&gt; parameter must be a &lt;code&gt;WebRowSet&lt;/code&gt; object whose &lt;code&gt;XmlWriter&lt;/code&gt; field contains a reference to this &lt;code&gt;XmlWriter&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;caller&lt;/code&gt; 参数必须是 &lt;code&gt;WebRowSet&lt;/code&gt; 的对象，其 &lt;code&gt;XmlWriter&lt;/code&gt; 字段包含该基准 &lt;code&gt;XmlWriter&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="549d3c0cc45d126bfe6b339f4e7d396df73338b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cause&lt;/code&gt; is not initialized.</source>
          <target state="translated">在 &lt;code&gt;cause&lt;/code&gt; 未初始化。</target>
        </trans-unit>
        <trans-unit id="a0fdf3dc80a013dc8c4afe2a38389db91bc45e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cert.provider.x509v1&lt;/code&gt; property is set to a default implementation for X.509 such as:</source>
          <target state="translated">该 &lt;code&gt;cert.provider.x509v1&lt;/code&gt; 属性被设置为默认实施这样X.509：</target>
        </trans-unit>
        <trans-unit id="51472b90fccbf1d42ba6001caf6f52c8f72d01a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;changeFlags&lt;/code&gt; parameter of any &lt;code&gt;HierarchyEvent&lt;/code&gt; instance takes one of the following values:</source>
          <target state="translated">任何 &lt;code&gt;HierarchyEvent&lt;/code&gt; 实例的 &lt;code&gt;changeFlags&lt;/code&gt; 参数采用以下值之一：</target>
        </trans-unit>
        <trans-unit id="7e2379eb6107205000a967e604f084a77bb6b353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;changeListener&lt;/code&gt; is the listener we add to the model.</source>
          <target state="translated">该 &lt;code&gt;changeListener&lt;/code&gt; 是添加到模型中的侦听。</target>
        </trans-unit>
        <trans-unit id="312b7fe1366e0a3c03057bcb7caeef6dc182a366" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;char&lt;/code&gt; data type (and therefore the value that a &lt;code&gt;Character&lt;/code&gt; object encapsulates) are based on the original Unicode specification, which defined characters as fixed-width 16-bit entities. The Unicode Standard has since been changed to allow for characters whose representation requires more than 16 bits. The range of legal &lt;em&gt;code point&lt;/em&gt;s is now U+0000 to U+10FFFF, known as &lt;em&gt;Unicode scalar value&lt;/em&gt;. (Refer to the &lt;a href=&quot;http://www.unicode.org/reports/tr27/#notation&quot;&gt;&lt;i&gt; definition&lt;/i&gt;&lt;/a&gt; of the U+</source>
          <target state="translated">的 &lt;code&gt;char&lt;/code&gt; 数据类型（以及因此一个值 &lt;code&gt;Character&lt;/code&gt; 对象封装）是基于原始Unicode规范，其定义字符为固定宽度的16位实体。此后，对Unicode标准进行了更改，以允许其表示需要超过16位的字符。合法&lt;em&gt;代码点&lt;/em&gt; s的范围现在为U + 0000到U + 10FFFF，即&lt;em&gt;Unicode标量值&lt;/em&gt;。（请参阅U + 的&lt;a href=&quot;http://www.unicode.org/reports/tr27/#notation&quot;&gt;&lt;i&gt;定义&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff4d9d45c7f6a6e3cf9fa2efa7e3c3623f753d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;char&lt;/code&gt; data type (and therefore the value that a &lt;code&gt;Character&lt;/code&gt; object encapsulates) are based on the original Unicode specification, which defined characters as fixed-width 16-bit entities. The Unicode Standard has since been changed to allow for characters whose representation requires more than 16 bits. The range of legal &lt;em&gt;code point&lt;/em&gt;s is now U+0000 to U+10FFFF, known as &lt;em&gt;Unicode scalar value&lt;/em&gt;. (Refer to the &lt;a href=&quot;https://www.unicode.org/reports/tr27/#notation&quot;&gt;&lt;i&gt; definition&lt;/i&gt;&lt;/a&gt; of the U+</source>
          <target state="translated">的 &lt;code&gt;char&lt;/code&gt; 数据类型（以及因此一个值 &lt;code&gt;Character&lt;/code&gt; 对象封装）是基于原始Unicode规范，其定义字符为固定宽度的16位实体。此后，对Unicode标准进行了更改，以允许其表示需要超过16位的字符。合法&lt;em&gt;代码点&lt;/em&gt;s的范围现在为U + 0000到U + 10FFFF，即&lt;em&gt;Unicode标量值&lt;/em&gt;。（请参阅U +的&lt;a href=&quot;https://www.unicode.org/reports/tr27/#notation&quot;&gt;&lt;i&gt;定义&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="159881b528b95151218ddcf06070876dc2535a5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checkAccess&lt;/code&gt; method of the parent thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">父线程组的 &lt;code&gt;checkAccess&lt;/code&gt; 方法不带参数调用；这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="98813f94bb2ecfd8b901aa13def3a342737037f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checkImage&lt;/code&gt; method of &lt;code&gt;Component&lt;/code&gt; calls its peer's &lt;code&gt;checkImage&lt;/code&gt; method to calculate the flags. If this component does not yet have a peer, the component's toolkit's &lt;code&gt;checkImage&lt;/code&gt; method is called instead.</source>
          <target state="translated">该 &lt;code&gt;checkImage&lt;/code&gt; 的方法， &lt;code&gt;Component&lt;/code&gt; 调用其同位体的 &lt;code&gt;checkImage&lt;/code&gt; 方法来计算标志。如果此组件还没有同级，则调用该组件工具箱的 &lt;code&gt;checkImage&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5e8a72d273e2359cf1503e1f34724cc9c2dc1f67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checkPermission&lt;/code&gt; method that takes a context object in addition to a permission makes access decisions based on that context, rather than on that of the current execution thread. Code within a different context can thus call that method, passing the permission and the previously-saved context object. A sample call, using the SecurityManager &lt;code&gt;sm&lt;/code&gt; obtained as in the previous example, is the following:</source>
          <target state="translated">除权限外还采用上下文对象的 &lt;code&gt;checkPermission&lt;/code&gt; 方法根据该上下文而不是当前执行线程的上下文做出访问决策。因此，不同上下文中的代码可以调用该方法，并传递权限和先前保存的上下文对象。以下是使用如上一个示例中获得的SecurityManager &lt;code&gt;sm&lt;/code&gt; 进行的示例调用：</target>
        </trans-unit>
        <trans-unit id="fc365efffcfa5fe96ee6d3621be5f1681a395b54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childNodes&lt;/code&gt;&lt;code&gt;NodeLists&lt;/code&gt; are equal. This is: they are both &lt;code&gt;null&lt;/code&gt;, or they have the same length and contain equal nodes at the same index. Note that normalization can affect equality; to avoid this, nodes should be normalized before being compared.</source>
          <target state="translated">子 &lt;code&gt;childNodes&lt;/code&gt; &lt;code&gt;NodeLists&lt;/code&gt; 相等。这是：它们都为 &lt;code&gt;null&lt;/code&gt; ，或者它们具有相同的长度，并且在相同的索引处包含相等的节点。注意规范化会影响相等性。为了避免这种情况，应该在比较节点之前对节点进行标准化。</target>
        </trans-unit>
        <trans-unit id="3a5d909660d723c346a03d0f41bd75687e11de0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cleanup&lt;/code&gt; handle will be passed one or two additional leading arguments. The first is the exception thrown during the execution of the &lt;code&gt;target&lt;/code&gt; handle, or &lt;code&gt;null&lt;/code&gt; if no exception was thrown. The second is the result of the execution of the &lt;code&gt;target&lt;/code&gt; handle, or, if it throws an exception, a &lt;code&gt;null&lt;/code&gt;, zero, or &lt;code&gt;false&lt;/code&gt; value of the required type is supplied as a placeholder. The second argument is not present if the &lt;code&gt;target&lt;/code&gt; handle has a &lt;code&gt;void&lt;/code&gt; return type. (Note that, except for argument type conversions, combinators represent &lt;code&gt;void&lt;/code&gt; values in parameter lists by omitting the corresponding paradoxical arguments, not by inserting &lt;code&gt;null&lt;/code&gt; or zero values.)</source>
          <target state="translated">该 &lt;code&gt;cleanup&lt;/code&gt; 句柄将被传递的一个或两个额外的领先参数。第一个是在执行 &lt;code&gt;target&lt;/code&gt; 句柄期间引发的异常；如果未引发任何异常，则为 &lt;code&gt;null&lt;/code&gt; 。第二个是 &lt;code&gt;target&lt;/code&gt; 句柄执行的结果，或者，如果抛出异常，则将所需类型的 &lt;code&gt;null&lt;/code&gt; ，零或 &lt;code&gt;false&lt;/code&gt; 值作为占位符提供。如果 &lt;code&gt;target&lt;/code&gt; 句柄具有 &lt;code&gt;void&lt;/code&gt; 返回类型，则不存在第二个参数。（请注意，除了参数类型转换外，组合符还代表 &lt;code&gt;void&lt;/code&gt; 通过省略相应的自相矛盾的参数，而不是通过插入 &lt;code&gt;null&lt;/code&gt; 或零值来获得参数列表中的值。）</target>
        </trans-unit>
        <trans-unit id="8a37143162f383e40541a3c536a0bad8cdbdac3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear&lt;/code&gt; method sets calendar field(s) undefined. &lt;code&gt;GregorianCalendar&lt;/code&gt; uses the following default value for each calendar field if its value is undefined.</source>
          <target state="translated">的 &lt;code&gt;clear&lt;/code&gt; 未定义的方法集日历字段（一个或多个）。如果未定义， &lt;code&gt;GregorianCalendar&lt;/code&gt; 将为每个日历字段使用以下默认值。</target>
        </trans-unit>
        <trans-unit id="23c5d3ad8f50c87806bd51026f62bd3f83bef13e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clientProperty&lt;/code&gt; dictionary is not intended to support large scale extensions to JComponent nor should be it considered an alternative to subclassing when designing a new component.</source>
          <target state="translated">该 &lt;code&gt;clientProperty&lt;/code&gt; 字典是不是为了支持大规模的扩展JComponent的，也不应该是它视为一种替代设计新组件时继承。</target>
        </trans-unit>
        <trans-unit id="eca26951481b1fa79d4de62013b67d4d4f363ce7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clockSequence&lt;/code&gt; value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.</source>
          <target state="translated">所述 &lt;code&gt;clockSequence&lt;/code&gt; 值仅在基于时间的UUID，其具有版本类型1。如果此UUID不是基于时间的UUID，则此方法抛出UnsupportedOperationException有意义。</target>
        </trans-unit>
        <trans-unit id="17c69f5047e8b8edc7675c7afa6d967e75c7e9a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;CipherInputStream&lt;/code&gt; calls the &lt;code&gt;close&lt;/code&gt; method of its underlying input stream.</source>
          <target state="translated">该 &lt;code&gt;close&lt;/code&gt; 的方法 &lt;code&gt;CipherInputStream&lt;/code&gt; 调用 &lt;code&gt;close&lt;/code&gt; 其底层输入流的方法。</target>
        </trans-unit>
        <trans-unit id="8d16e59d74dedefbb9dca52dccbe54c8fd4fa9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls its &lt;code&gt;flush&lt;/code&gt; method, and then calls the &lt;code&gt;close&lt;/code&gt; method of its underlying output stream.</source>
          <target state="translated">&lt;code&gt;FilterOutputStream&lt;/code&gt; 的 &lt;code&gt;close&lt;/code&gt; 方法调用其 &lt;code&gt;flush&lt;/code&gt; 方法，然后调用其基础输出流的 &lt;code&gt;close&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7e09c5caa8f665f3b57f5f5f897465a41503642c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;close&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="b8a4c592a0ecb263805a474537d609748a764ffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; 的 &lt;code&gt;close&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="d2531be3b89a10105b22c29564d26639ca4a592a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;color&lt;/code&gt; corresponds to a hex &lt;code&gt;String&lt;/code&gt; as understood by &lt;code&gt;Color.decode&lt;/code&gt;. For example, one of the &lt;code&gt;name-color&lt;/code&gt; pairs is &lt;code&gt;
 &quot;desktop&quot;-&quot;#005C5C&quot;&lt;/code&gt;. This corresponds to the &lt;code&gt;
 SystemColor&lt;/code&gt; field &lt;code&gt;desktop&lt;/code&gt;, with a color value of &lt;code&gt;new Color(0x005C5C)&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;color&lt;/code&gt; 对应于十六进制 &lt;code&gt;String&lt;/code&gt; 通过理解 &lt;code&gt;Color.decode&lt;/code&gt; 。例如， &lt;code&gt;name-color&lt;/code&gt; 对之一是 &lt;code&gt; &quot;desktop&quot;-&quot;#005C5C&quot;&lt;/code&gt; 。这对应于 &lt;code&gt; SystemColor&lt;/code&gt; 字段 &lt;code&gt;desktop&lt;/code&gt; ，其颜色值为 &lt;code&gt;new Color(0x005C5C)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afcf8a2a1d1719caacb80cda4d490e70edec9e26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;com.sun.jndi.dns.timeout.initial&lt;/code&gt; property, if set, specifies the number of milliseconds to use as the initial timeout period (i.e., before any doubling). If this property has not been set, the default initial timeout is 1000 milliseconds.</source>
          <target state="translated">的 &lt;code&gt;com.sun.jndi.dns.timeout.initial&lt;/code&gt; 属性，如果设置，指定毫秒到用作初始超时时段的数量（即，任何加倍之前）。如果尚未设置此属性，则默认初始超时为1000毫秒。</target>
        </trans-unit>
        <trans-unit id="745458c6629b6652e699dc150f6db6c585c3e422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;com.sun.jndi.dns.timeout.retries&lt;/code&gt; property, if set, specifies the number of times to retry each server using the exponential backoff algorithm described previously. If this property has not been set, the default number of retries is 4.</source>
          <target state="translated">的 &lt;code&gt;com.sun.jndi.dns.timeout.retries&lt;/code&gt; 属性，如果设置，指定的次数使用指数退避算法先前描述的重试每个服务器。如果尚未设置此属性，则默认重试次数为4。</target>
        </trans-unit>
        <trans-unit id="272a141fe34e23fe1ed9cd1611d645995f50e5bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;combine&lt;/code&gt; method investigates the two input arrays of ProtectionDomains and returns a single array containing the updated ProtectionDomains. In the simplest case, the &lt;code&gt;combine&lt;/code&gt; method merges the two stacks into one. In more complex cases, the &lt;code&gt;combine&lt;/code&gt; method returns a modified stack of ProtectionDomains. The modification may have added new ProtectionDomains, removed certain ProtectionDomains, or simply updated existing ProtectionDomains. Re-ordering and other optimizations to the ProtectionDomains are also permitted. Typically the &lt;code&gt;combine&lt;/code&gt; method bases its updates on the information encapsulated in the &lt;code&gt;DomainCombiner&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;combine&lt;/code&gt; 方法调查的ProtectionDomains的两个输入数组，并返回包含更新的ProtectionDomains单个阵列。在最简单的情况下， &lt;code&gt;combine&lt;/code&gt; 方法将两个堆栈合并为一个。在更复杂的情况下， &lt;code&gt;combine&lt;/code&gt; 方法返回修改后的ProtectionDomains堆栈。该修改可能添加了新的ProtectionDomain，删除了某些ProtectionDomain或仅更新了现有ProtectionDomain。还可以对ProtectionDomain进行重新排序和其他优化。通常， &lt;code&gt;combine&lt;/code&gt; 方法的更新基于 &lt;code&gt;DomainCombiner&lt;/code&gt; 中封装的信息。</target>
        </trans-unit>
        <trans-unit id="44c35d21bf67cf9c4f42525ec0fe6621b0e16aaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;command&lt;/code&gt; property may not be needed if the &lt;code&gt;RowSet&lt;/code&gt; object gets its data from a source that does not support commands, such as a spreadsheet or other tabular file. Thus, this property is optional and may be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;command&lt;/code&gt; ，如果可能不需要属性 &lt;code&gt;RowSet&lt;/code&gt; 对象从一个不支持的命令，诸如电子表格或其他表格文件中的源获取其数据。因此，此属性是可选的，并且可以为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="928da17633454632f0bf287b021e570d64611c36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;completed&lt;/code&gt; argument to the &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method tells whether or not the I/O operation actually completed, that is, whether it had any effect that would be visible to the invoker. In the case of an operation that reads bytes, for example, this argument should be &lt;code&gt;true&lt;/code&gt; if, and only if, some bytes were actually transferred into the invoker's target buffer.</source>
          <target state="translated">&lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法的 &lt;code&gt;completed&lt;/code&gt; 参数指示I / O操作是否实际完成，即它是否具有对调用者可见的效果。例如，在读取字节的操作的情况下，仅当将某些字节实际传输到调用者的目标缓冲区中时，此参数才应为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a90cfbc00ca33b6d145e6807e96aa2002b85303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;completed&lt;/code&gt; argument to the &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method tells whether or not the I/O operation actually completed, that is, whether it had any effect that would be visible to the invoker. In the case of an operation that reads bytes, for example, this argument should be &lt;code&gt;true&lt;/code&gt; if, and only if, some bytes were actually transferred into the invoker's target buffer.</source>
          <target state="translated">&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法的 &lt;code&gt;completed&lt;/code&gt; 参数指示I / O操作是否实际完成，即它是否具有对调用者可见的效果。例如，在操作读取字节的情况下，仅当将某些字节实际传输到调用程序的目标缓冲区中时，此参数才应为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5d94cf564353166be1db9cb4e8271b8ded55663" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;components&lt;/code&gt; array.</source>
          <target state="translated">该 &lt;code&gt;components&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="15e9d479711030667ddbf21dea87568e74553c2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; and &lt;code&gt;intersects&lt;/code&gt; methods consider the interior of a &lt;code&gt;Shape&lt;/code&gt; to be the area it encloses as if it were filled. This means that these methods consider unclosed shapes to be implicitly closed for the purpose of determining if a shape contains or intersects a rectangle or if a shape contains a point.</source>
          <target state="translated">在 &lt;code&gt;contains&lt;/code&gt; 和 &lt;code&gt;intersects&lt;/code&gt; 方法考虑的内部 &lt;code&gt;Shape&lt;/code&gt; 为它围住，就好像它充满的区域。这意味着这些方法将未闭合的形状视为隐式闭合，以便确定形状是否包含或与矩形相交或形状是否包含点。</target>
        </trans-unit>
        <trans-unit id="3114ba8be141b590dba202ffb1a396b416bb2f2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentPane&lt;/code&gt; fills the entire viewable area, minus the &lt;code&gt;menuBar&lt;/code&gt;, if present.</source>
          <target state="translated">该 &lt;code&gt;contentPane&lt;/code&gt; 填充了整个可查看区域，减去 &lt;code&gt;menuBar&lt;/code&gt; ，如果存在的话。</target>
        </trans-unit>
        <trans-unit id="f41c89acf8d6260cc4c3edf1c8a3be1a487a118d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;countMatches&lt;/code&gt; operation can be invoked as follows:</source>
          <target state="translated">该 &lt;code&gt;countMatches&lt;/code&gt; 操作可以调用如下：</target>
        </trans-unit>
        <trans-unit id="72616ce87a153d98c6a948602b30731bd218fc29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createMBeanServer&lt;/code&gt; permission implies the &lt;code&gt;newMBeanServer&lt;/code&gt; permission.</source>
          <target state="translated">该 &lt;code&gt;createMBeanServer&lt;/code&gt; 许可意味着 &lt;code&gt;newMBeanServer&lt;/code&gt; 许可。</target>
        </trans-unit>
        <trans-unit id="367254891eef16003973d17f79d44e07bdd79f5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;d.width&lt;/code&gt; and &lt;code&gt;d.height&lt;/code&gt; values are automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;d.width&lt;/code&gt; 和 &lt;code&gt;d.height&lt;/code&gt; 值小于上一次调用 &lt;code&gt;setMinimumSize&lt;/code&gt; 所指定的最小大小，则d.width和d.height值将自动放大。</target>
        </trans-unit>
        <trans-unit id="bdee408adddec1cc773279770c4eb9ef77c9c337" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; is always a legal UTF-16 sequence.</source>
          <target state="translated">该 &lt;code&gt;data&lt;/code&gt; 始终是一个合法的UTF-16序列。</target>
        </trans-unit>
        <trans-unit id="f4549daee89cce421917747661b9b9dbdbc5d4cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deregister&lt;/code&gt; method is intended only to be used by JDBC Drivers and not by applications. JDBC drivers are recommended to not implement &lt;code&gt;DriverAction&lt;/code&gt; in a public class. If there are active connections to the database at the time that the &lt;code&gt;deregister&lt;/code&gt; method is called, it is implementation specific as to whether the connections are closed or allowed to continue. Once this method is called, it is implementation specific as to whether the driver may limit the ability to create new connections to the database, invoke other &lt;code&gt;Driver&lt;/code&gt; methods or throw a &lt;code&gt;SQLException&lt;/code&gt;. Consult your JDBC driver's documentation for additional information on its behavior.</source>
          <target state="translated">的 &lt;code&gt;deregister&lt;/code&gt; 方法仅旨在由JDBC驱动，而不是由应用程序使用。建议JDBC驱动程序不要在公共类中实现 &lt;code&gt;DriverAction&lt;/code&gt; 。如果在调用 &lt;code&gt;deregister&lt;/code&gt; 方法时有到数据库的活动连接，则具体取决于连接是关闭还是允许继续。调用此方法后，驱动程序是否会限制与数据库建立新连接，调用其他 &lt;code&gt;Driver&lt;/code&gt; 方法或抛出 &lt;code&gt;SQLException&lt;/code&gt; 的能力是特定于实现的。有关其行为的其他信息，请查阅JDBC驱动程序的文档。</target>
        </trans-unit>
        <trans-unit id="5b8e66ca8dcc60e252a66649960d4c45b1465623" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;descriptor&lt;/code&gt; can contain entries that will define the values returned by certain methods of this class, as explained in the &lt;a href=&quot;package-summary#constraints&quot;&gt; package description&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;descriptor&lt;/code&gt; 可以包含将定义由这个类的某些方法返回的值，如在解释条目&lt;a href=&quot;package-summary#constraints&quot;&gt;包描述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e74408bd8afc062ff7d9cfe3aab2c13ea6f53b21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dest&lt;/code&gt; argument refers to an object that is not an array.</source>
          <target state="translated">所述 &lt;code&gt;dest&lt;/code&gt; 参数指的对象不是阵列。</target>
        </trans-unit>
        <trans-unit id="8294f1f3beefad7591b5cc3ea0551866cab7aae2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destPos&lt;/code&gt; argument is negative.</source>
          <target state="translated">该 &lt;code&gt;destPos&lt;/code&gt; 参数为负。</target>
        </trans-unit>
        <trans-unit id="71160060862e661265f3fd734b0330aa232357eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;detail&lt;/code&gt; attribute inherited from &lt;code&gt;UIEvent&lt;/code&gt; indicates the number of times a mouse button has been pressed and released over the same screen location during a user action. The attribute value is 1 when the user begins this action and increments by 1 for each full sequence of pressing and releasing. If the user moves the mouse between the mousedown and mouseup the value will be set to 0, indicating that no click is occurring.</source>
          <target state="translated">从 &lt;code&gt;UIEvent&lt;/code&gt; 继承的 &lt;code&gt;detail&lt;/code&gt; 属性指示在用户操作期间在同一屏幕位置上按下和释放鼠标按钮的次数。当用户开始执行此操作时，该属性值为1，并且对于每个完整的按下和释放序列，此属性值均增加1。如果用户在mousedown和mouseup之间移动鼠标，则该值将设置为0，表示没有单击。</target>
        </trans-unit>
        <trans-unit id="2a960f617370308fb92badef083ce1edd73bfd82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;digest&lt;/code&gt; method can be called once for a given number of updates. After &lt;code&gt;digest&lt;/code&gt; has been called, the MessageDigest object is reset to its initialized state.</source>
          <target state="translated">该 &lt;code&gt;digest&lt;/code&gt; 方法可以被调用一次更新的给定数。调用 &lt;code&gt;digest&lt;/code&gt; 之后，MessageDigest对象将重置为其初始化状态。</target>
        </trans-unit>
        <trans-unit id="e1dde7d27adbf8e6cef3b9bbcdbc4cbcc2ad96bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;double&lt;/code&gt; format can represent all consecutive integers in the range -2&lt;sup&gt;53&lt;/sup&gt; to 2&lt;sup&gt;53&lt;/sup&gt;. If the pipeline has more than 2&lt;sup&gt;53&lt;/sup&gt; values, the divisor in the average computation will saturate at 2&lt;sup&gt;53&lt;/sup&gt;, leading to additional numerical errors.</source>
          <target state="translated">该 &lt;code&gt;double&lt;/code&gt; 格式可以表示所有连续整数的范围-2 &lt;sup&gt;53&lt;/sup&gt;到2 &lt;sup&gt;53&lt;/sup&gt;。如果流水线具有超过2 &lt;sup&gt;53个&lt;/sup&gt;值，则平均计算中的除数将在2 &lt;sup&gt;53&lt;/sup&gt;处饱和，从而导致其他数值误差。</target>
        </trans-unit>
        <trans-unit id="cad4be16e75ad0f3392aac98141ceaed42bece6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;double&lt;/code&gt; value that is closer than any other to</source>
          <target state="translated">比其他任何值都更接近的 &lt;code&gt;double&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="1e3ae85b07a531401bb2890e79fc22f20146cf1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;draw3DRect&lt;/code&gt; and &lt;code&gt;fill3DRect&lt;/code&gt; methods were implemented in terms of the &lt;code&gt;drawLine&lt;/code&gt; and &lt;code&gt;fillRect&lt;/code&gt; methods in the &lt;code&gt;Graphics&lt;/code&gt; class which would predicate their behavior upon the current &lt;code&gt;Stroke&lt;/code&gt; and &lt;code&gt;Paint&lt;/code&gt; objects in a &lt;code&gt;Graphics2D&lt;/code&gt; context. This class overrides those implementations with versions that use the current &lt;code&gt;Color&lt;/code&gt; exclusively, overriding the current &lt;code&gt;Paint&lt;/code&gt; and which uses &lt;code&gt;fillRect&lt;/code&gt; to describe the exact same behavior as the preexisting methods regardless of the setting of the current &lt;code&gt;Stroke&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;draw3DRect&lt;/code&gt; 和 &lt;code&gt;fill3DRect&lt;/code&gt; 方法是在条款实施 &lt;code&gt;drawLine&lt;/code&gt; 和 &lt;code&gt;fillRect&lt;/code&gt; 方法在 &lt;code&gt;Graphics&lt;/code&gt; 类会在当前谓语他们的行为 &lt;code&gt;Stroke&lt;/code&gt; 和 &lt;code&gt;Paint&lt;/code&gt; 中的对象 &lt;code&gt;Graphics2D&lt;/code&gt; 上下文。此类使用仅使用当前 &lt;code&gt;Color&lt;/code&gt; 的版本覆盖这些实现，覆盖当前的 &lt;code&gt;Paint&lt;/code&gt; 并使用 &lt;code&gt;fillRect&lt;/code&gt; 来描述与先前存在的方法完全相同的行为，而与当前 &lt;code&gt;Stroke&lt;/code&gt; 的设置无关。</target>
        </trans-unit>
        <trans-unit id="6f02492238ec3eeb18bc396353d14b09af775519" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;charsequence#length()&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">的 &lt;code&gt;dstOffset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;charsequence#length()&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="99457e6b4813c6110cd28c3bdc215ba87cac93e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuffer#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">的 &lt;code&gt;dstOffset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuffer#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="cf3f3c8673cb205a88acf65cbe9d481cc7bd21e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuilder#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">的 &lt;code&gt;dstOffset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuilder#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="57b48e0bd69c0d96f6dab5758abac0f4d57b113a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoded&lt;/code&gt; argument is illegal if it:</source>
          <target state="translated">该 &lt;code&gt;encoded&lt;/code&gt; 论点是，如果它违法：</target>
        </trans-unit>
        <trans-unit id="7f825d64728b91255aebca414eb9e4365aeec903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endOfInput&lt;/code&gt; parameter advises this method as to whether the invoker can provide further input beyond that contained in the given input buffer. If there is a possibility of providing additional input then the invoker should pass &lt;code&gt;false&lt;/code&gt; for this parameter; if there is no possibility of providing further input then the invoker should pass &lt;code&gt;true&lt;/code&gt;. It is not erroneous, and in fact it is quite common, to pass &lt;code&gt;false&lt;/code&gt; in one invocation and later discover that no further input was actually available. It is critical, however, that the final invocation of this method in a sequence of invocations always pass &lt;code&gt;true&lt;/code&gt; so that any remaining undecoded input will be treated as being malformed.</source>
          <target state="translated">所述 &lt;code&gt;endOfInput&lt;/code&gt; 参数建议此方法作为给调用是否可提供进一步的输入超出了包含在给定输入缓冲区。如果有可能提供其他输入，则调用者应为此参数传递 &lt;code&gt;false&lt;/code&gt; ；如果不可能提供进一步的输入，则调用者应传递 &lt;code&gt;true&lt;/code&gt; 。在一次调用中传递 &lt;code&gt;false&lt;/code&gt; 并随后发现实际上没有进一步的输入是不错误的，并且实际上很普遍。但是，至关重要的是，在一系列调用中对该方法的最终调用必须始终为 &lt;code&gt;true&lt;/code&gt; ,以便将任何剩余的未解码输入视为格式错误。</target>
        </trans-unit>
        <trans-unit id="fabf47fc50497b896963aa9019b8b35e3fbde409" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endOfInput&lt;/code&gt; parameter advises this method as to whether the invoker can provide further input beyond that contained in the given input buffer. If there is a possibility of providing additional input then the invoker should pass &lt;code&gt;false&lt;/code&gt; for this parameter; if there is no possibility of providing further input then the invoker should pass &lt;code&gt;true&lt;/code&gt;. It is not erroneous, and in fact it is quite common, to pass &lt;code&gt;false&lt;/code&gt; in one invocation and later discover that no further input was actually available. It is critical, however, that the final invocation of this method in a sequence of invocations always pass &lt;code&gt;true&lt;/code&gt; so that any remaining unencoded input will be treated as being malformed.</source>
          <target state="translated">所述 &lt;code&gt;endOfInput&lt;/code&gt; 参数建议此方法作为给调用是否可提供进一步的输入超出了包含在给定输入缓冲区。如果有可能提供其他输入，则调用者应为此参数传递 &lt;code&gt;false&lt;/code&gt; ；如果不可能提供进一步的输入，则调用者应传递 &lt;code&gt;true&lt;/code&gt; 。在一次调用中传递 &lt;code&gt;false&lt;/code&gt; 并随后发现实际上没有进一步的输入是不错误的，并且实际上很普遍。但是，至关重要的是，此方法在一系列调用中的最终调用必须始终为 &lt;code&gt;true&lt;/code&gt; ,以便将所有剩余的未编码输入视为格式错误。</target>
        </trans-unit>
        <trans-unit id="ec11602184cb13ced71453ae56dda30935562022" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entities&lt;/code&gt;&lt;code&gt;NamedNodeMaps&lt;/code&gt; are equal.</source>
          <target state="translated">该 &lt;code&gt;entities&lt;/code&gt; &lt;code&gt;NamedNodeMaps&lt;/code&gt; 是相等的。</target>
        </trans-unit>
        <trans-unit id="ec561af054842027cb5a40ad05b4b5c7e68a8699" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entry&lt;/code&gt; argument is valid only for the duration of the invocation. Using &lt;code&gt;entry&lt;/code&gt; after the call returns results in undefined behavior.</source>
          <target state="translated">本 &lt;code&gt;entry&lt;/code&gt; 参数只在调用期间有效。调用返回后使用 &lt;code&gt;entry&lt;/code&gt; 会导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="759ffc9229118351f3a52e836520820e1dc112e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals()&lt;/code&gt; method for an enumeration class just does a test for identical objects (&lt;code&gt;==&lt;/code&gt;).</source>
          <target state="translated">枚举类的 &lt;code&gt;equals()&lt;/code&gt; 方法仅对相同的对象（ &lt;code&gt;==&lt;/code&gt; ）进行测试。</target>
        </trans-unit>
        <trans-unit id="b29ad1a11acf214b8866d6a3f630b101a0ca3675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals&lt;/code&gt; method for class &lt;code&gt;Object&lt;/code&gt; implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, this method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; refer to the same object (&lt;code&gt;x == y&lt;/code&gt; has the value &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">类 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;equals&lt;/code&gt; 方法在对象上实现了最有区别的对等关系。也就是说，对于任何非空参考值 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; ，当且仅当 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 引用相同的对象（ &lt;code&gt;x == y&lt;/code&gt; 的值为 &lt;code&gt;true&lt;/code&gt; ）时，此方法才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="387966673ba7ec974b34376b9ba2a99dc7f3ff88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals&lt;/code&gt; method implements an equivalence relation on non-null object references:</source>
          <target state="translated">该 &lt;code&gt;equals&lt;/code&gt; 方法实现对非空对象引用的一个等价关系：</target>
        </trans-unit>
        <trans-unit id="5611c44255183f5d91cb4e6ea30bca9c8f5bc511" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;estimateDepth&lt;/code&gt; specifies the estimate number of stack frames this &lt;code&gt;StackWalker&lt;/code&gt; will traverse that the &lt;code&gt;StackWalker&lt;/code&gt; could use as a hint for the buffer size.</source>
          <target state="translated">所述 &lt;code&gt;estimateDepth&lt;/code&gt; 指定堆栈帧此的估计数目 &lt;code&gt;StackWalker&lt;/code&gt; 将遍历该 &lt;code&gt;StackWalker&lt;/code&gt; 可以作为缓冲器大小的提示使用。</target>
        </trans-unit>
        <trans-unit id="542970e582dd284bb20814dd3b131537943f85a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eventPropertyName&lt;/code&gt; string is used to extract a value from the incoming event object that is passed to the target method. The common case is the target method takes no arguments, in which case a value of null should be used for the &lt;code&gt;eventPropertyName&lt;/code&gt;. Alternatively if you want the incoming event object passed directly to the target method use the empty string. The format of the &lt;code&gt;eventPropertyName&lt;/code&gt; string is a sequence of methods or properties where each method or property is applied to the value returned by the preceding method starting from the incoming event object. The syntax is: &lt;code&gt;propertyName{.propertyName}*&lt;/code&gt; where &lt;code&gt;propertyName&lt;/code&gt; matches a method or property. For example, to extract the &lt;code&gt;point&lt;/code&gt; property from a &lt;code&gt;MouseEvent&lt;/code&gt;, you could use either &lt;code&gt;&quot;point&quot;&lt;/code&gt; or &lt;code&gt;&quot;getPoint&quot;&lt;/code&gt; as the &lt;code&gt;eventPropertyName&lt;/code&gt;. To extract the &quot;text&quot; property from a &lt;code&gt;MouseEvent&lt;/code&gt; with a &lt;code&gt;JLabel&lt;/code&gt; source use any of the following as &lt;code&gt;eventPropertyName&lt;/code&gt;: &lt;code&gt;&quot;source.text&quot;&lt;/code&gt;, &lt;code&gt;&quot;getSource.text&quot; &quot;getSource.getText&quot;&lt;/code&gt; or &lt;code&gt;&quot;source.getText&quot;&lt;/code&gt;. If a method can not be found, or an exception is generated as part of invoking a method a &lt;code&gt;RuntimeException&lt;/code&gt; will be thrown at dispatch time. For example, if the incoming event object is null, and &lt;code&gt;eventPropertyName&lt;/code&gt; is non-null and not empty, a &lt;code&gt;RuntimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">在 &lt;code&gt;eventPropertyName&lt;/code&gt; 串被用于提取从被传递给目标方法的传入事件对象的值。常见的情况是target方法不带参数，在这种情况下， &lt;code&gt;eventPropertyName&lt;/code&gt; 应该使用null值。或者，如果希望将传入事件对象直接传递给目标方法，请使用空字符串。 &lt;code&gt;eventPropertyName&lt;/code&gt; 字符串的格式是方法或属性的序列，其中每个方法或属性都将从传入的事件对象开始应用于从前一个方法返回的值。语法为： &lt;code&gt;propertyName{.propertyName}*&lt;/code&gt; ，其中 &lt;code&gt;propertyName&lt;/code&gt; 与方法或属性匹配。例如，提取 &lt;code&gt;point&lt;/code&gt; 从属性 &lt;code&gt;MouseEvent&lt;/code&gt; ，你可以使用任何 &lt;code&gt;&quot;point&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;getPoint&quot;&lt;/code&gt; 作为 &lt;code&gt;eventPropertyName&lt;/code&gt; 。要从具有 &lt;code&gt;JLabel&lt;/code&gt; 源的 &lt;code&gt;MouseEvent&lt;/code&gt; 中提取&amp;ldquo; text&amp;rdquo;属性，请使用以下任意一种作为 &lt;code&gt;eventPropertyName&lt;/code&gt; ： &lt;code&gt;&quot;source.text&quot;&lt;/code&gt; ， &lt;code&gt;&quot;getSource.text&quot; &quot;getSource.getText&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;source.getText&quot;&lt;/code&gt; 。如果找不到方法，或者在调用方法时生成了异常，则将在调度时抛出 &lt;code&gt;RuntimeException&lt;/code&gt; 。例如，如果传入事件对象为null， &lt;code&gt;eventPropertyName&lt;/code&gt; &lt;code&gt;RuntimeException&lt;/code&gt; 将抛出RuntimeException。</target>
        </trans-unit>
        <trans-unit id="979f15807ff26fd3232fc39f57a589f6474444ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eventPropertyName&lt;/code&gt; string is used to extract a value from the incoming event object that is passed to the target method. The common case is the target method takes no arguments, in which case a value of null should be used for the &lt;code&gt;eventPropertyName&lt;/code&gt;. Alternatively if you want the incoming event object passed directly to the target method use the empty string. The format of the &lt;code&gt;eventPropertyName&lt;/code&gt; string is a sequence of methods or properties where each method or property is applied to the value returned by the preceding method starting from the incoming event object. The syntax is: &lt;code&gt;propertyName{.propertyName}*&lt;/code&gt; where &lt;code&gt;propertyName&lt;/code&gt; matches a method or property. For example, to extract the &lt;code&gt;point&lt;/code&gt; property from a &lt;code&gt;MouseEvent&lt;/code&gt;, you could use either &lt;code&gt;&quot;point&quot;&lt;/code&gt; or &lt;code&gt;&quot;getPoint&quot;&lt;/code&gt; as the &lt;code&gt;eventPropertyName&lt;/code&gt;. To extract the &quot;text&quot; property from a &lt;code&gt;MouseEvent&lt;/code&gt; with a &lt;code&gt;JLabel&lt;/code&gt; source use any of the following as &lt;code&gt;eventPropertyName&lt;/code&gt;: &lt;code&gt;&quot;source.text&quot;&lt;/code&gt;, &lt;code&gt;&quot;getSource.text&quot;&lt;/code&gt;&lt;code&gt;&quot;getSource.getText&quot;&lt;/code&gt; or &lt;code&gt;&quot;source.getText&quot;&lt;/code&gt;. If a method can not be found, or an exception is generated as part of invoking a method a &lt;code&gt;RuntimeException&lt;/code&gt; will be thrown at dispatch time. For example, if the incoming event object is null, and &lt;code&gt;eventPropertyName&lt;/code&gt; is non-null and not empty, a &lt;code&gt;RuntimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">在 &lt;code&gt;eventPropertyName&lt;/code&gt; 串被用于提取从被传递给目标方法的传入事件对象的值。常见的情况是target方法不带参数，在这种情况下， &lt;code&gt;eventPropertyName&lt;/code&gt; 应该使用null 值。或者，如果您希望将传入事件对象直接传递给目标方法，请使用空字符串。 &lt;code&gt;eventPropertyName&lt;/code&gt; 字符串的格式是方法或属性的序列，其中每个方法或属性都将从传入的事件对象开始应用于从前一个方法返回的值。语法为： &lt;code&gt;propertyName{.propertyName}*&lt;/code&gt; ，其中 &lt;code&gt;propertyName&lt;/code&gt; 与方法或属性匹配。例如，提取 &lt;code&gt;point&lt;/code&gt; 来自 &lt;code&gt;MouseEvent&lt;/code&gt; 的属性，您可以使用 &lt;code&gt;&quot;point&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;getPoint&quot;&lt;/code&gt; 作为 &lt;code&gt;eventPropertyName&lt;/code&gt; 。要从具有 &lt;code&gt;JLabel&lt;/code&gt; 源的 &lt;code&gt;MouseEvent&lt;/code&gt; 中提取&amp;ldquo; text&amp;rdquo;属性，请使用以下任意一种作为 &lt;code&gt;eventPropertyName&lt;/code&gt; ： &lt;code&gt;&quot;source.text&quot;&lt;/code&gt; ， &lt;code&gt;&quot;getSource.text&quot;&lt;/code&gt; &lt;code&gt;&quot;getSource.getText&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;source.getText&quot;&lt;/code&gt; 。如果找不到方法，或者在调用方法时生成了异常，则会在调度时抛出 &lt;code&gt;RuntimeException&lt;/code&gt; 。例如，如果传入事件对象为null，则 &lt;code&gt;eventPropertyName&lt;/code&gt; 如果为非null且不为空，则将抛出 &lt;code&gt;RuntimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11b7dfa61c07755540a7b91b193348ac328193f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method executes an SQL statement and indicates the form of the first result. You must then use the methods &lt;code&gt;getResultSet&lt;/code&gt; or &lt;code&gt;getUpdateCount&lt;/code&gt; to retrieve the result, and &lt;code&gt;getMoreResults&lt;/code&gt; to move to any subsequent result(s).</source>
          <target state="translated">该 &lt;code&gt;execute&lt;/code&gt; 方法执行SQL语句并指示第一个结果的形式。然后，您必须使用方法 &lt;code&gt;getResultSet&lt;/code&gt; 或 &lt;code&gt;getUpdateCount&lt;/code&gt; 检索结果，并使用 &lt;code&gt;getMoreResults&lt;/code&gt; 移至任何后续结果。</target>
        </trans-unit>
        <trans-unit id="05464faee96a489e25104ce5867b437da02b7e6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method finds a method whose name is the same as the &lt;code&gt;methodName&lt;/code&gt; property, and invokes the method on the target.</source>
          <target state="translated">所述 &lt;code&gt;execute&lt;/code&gt; 方法找到，其名称是相同的方法 &lt;code&gt;methodName&lt;/code&gt; 属性，并在目标上调用的方法。</target>
        </trans-unit>
        <trans-unit id="881d0e5738f41f203ab7920ce95659722dd4768f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method finds a method whose name is the same as the &lt;code&gt;methodName&lt;/code&gt; property, and invokes the method on the target. When the target's class defines many methods with the given name the implementation should choose the most specific method using the algorithm specified in the Java Language Specification (15.11). The dynamic class of the target and arguments are used in place of the compile-time type information and, like the &lt;a href=&quot;../../../java.base/java/lang/reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; class itself, conversion between primitive values and their associated wrapper classes is handled internally.</source>
          <target state="translated">所述 &lt;code&gt;execute&lt;/code&gt; 方法找到，其名称是相同的方法 &lt;code&gt;methodName&lt;/code&gt; 属性，并在目标上调用的方法。当目标类使用给定名称定义许多方法时，实现应使用Java语言规范（15.11）中指定的算法选择最具体的方法。使用目标和参数的动态类代替编译时类型信息，并且像&lt;a href=&quot;../../../java.base/java/lang/reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;类本身一样，在内部处理原始值及其关联的包装器类之间的转换。</target>
        </trans-unit>
        <trans-unit id="7b4b06ad05dfb91d784c6607e33529a4e06af587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method finds a method whose name is the same as the &lt;code&gt;methodName&lt;/code&gt; property, and invokes the method on the target. When the target's class defines many methods with the given name the implementation should choose the most specific method using the algorithm specified in the Java Language Specification (15.11). The dynamic class of the target and arguments are used in place of the compile-time type information and, like the &lt;a href=&quot;../lang/reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; class itself, conversion between primitive values and their associated wrapper classes is handled internally.</source>
          <target state="translated">所述 &lt;code&gt;execute&lt;/code&gt; 方法找到，其名称是相同的方法 &lt;code&gt;methodName&lt;/code&gt; 属性，并在目标上调用的方法。当目标类使用给定名称定义许多方法时，实现应使用Java语言规范（15.11）中指定的算法选择最特定的方法。使用目标和参数的动态类代替编译时类型信息，并且像&lt;a href=&quot;../lang/reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;类本身一样，在内部处理原始值及其关联的包装器类之间的转换。</target>
        </trans-unit>
        <trans-unit id="8ad6c0c213db0ee82bf11ddff27fdf95642bb749" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method may use the following properties to create a connection for reading data: url, data source name, user name, password, transaction isolation, and type map. The &lt;code&gt;execute&lt;/code&gt; method may use the following properties to create a statement to execute a command: command, read only, maximum field size, maximum rows, escape processing, and query timeout.</source>
          <target state="translated">所述 &lt;code&gt;execute&lt;/code&gt; 方法可以使用下面的属性来创建用于读取数据的连接：URL，数据源名，用户名，密码，事务隔离，以及类型图。所述 &lt;code&gt;execute&lt;/code&gt; 方法可以使用下面的属性来创建语句执行的命令：命令，只读，最大字段大小，最大行数，转义处理和查询超时。</target>
        </trans-unit>
        <trans-unit id="d2e86b01e43a8878ea8710bd314038dcf77ab8f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method returns a &lt;code&gt;boolean&lt;/code&gt; to indicate the form of the first result. You must call either the method &lt;code&gt;getResultSet&lt;/code&gt; or &lt;code&gt;getUpdateCount&lt;/code&gt; to retrieve the result; you must call &lt;code&gt;getMoreResults&lt;/code&gt; to move to any subsequent result(s).</source>
          <target state="translated">所述 &lt;code&gt;execute&lt;/code&gt; 方法返回一个 &lt;code&gt;boolean&lt;/code&gt; 以指示第一结果的形式。您必须调用方法 &lt;code&gt;getResultSet&lt;/code&gt; 或 &lt;code&gt;getUpdateCount&lt;/code&gt; 来检索结果。您必须调用 &lt;code&gt;getMoreResults&lt;/code&gt; 才能移至任何后续结果。</target>
        </trans-unit>
        <trans-unit id="721571d52ff7950b67b214b688c61b64a75961c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is an &lt;code&gt;ExecutorService&lt;/code&gt; that creates new threads as needed to execute tasks that are submitted to handle I/O events and dispatch completion results for operations initiated on asynchronous channels in the group. It may reuse previously constructed threads when they are available.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是一个 &lt;code&gt;ExecutorService&lt;/code&gt; 的，作为执行提交到处理的I /该组中异步通道启动的操作O事件调度完成结果任务需要创建新线程。当它们可能可用时，它可以重用以前构造的线程。</target>
        </trans-unit>
        <trans-unit id="ec1467cb33e94fd2c0bb533c599fa01ae6a0656e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is an &lt;code&gt;ExecutorService&lt;/code&gt; that executes tasks submitted to dispatch completion results for operations initiated on asynchronous channels in the group.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是一个 &lt;code&gt;ExecutorService&lt;/code&gt; 的执行任务提交给调度完成结果这一组的异步通道启动的操作。</target>
        </trans-unit>
        <trans-unit id="340e8f3277e0a9554138eaf4e4d1386486ab2daf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is the &lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; to which tasks are submitted to handle I/O events and dispatch completion results for operations initiated on resulting channel. The nature of these tasks is highly implementation specific and so care should be taken when configuring the &lt;code&gt;Executor&lt;/code&gt;. Minimally it should support an unbounded work queue and should not run tasks on the caller thread of the &lt;a href=&quot;../../util/concurrent/executor#execute(java.lang.Runnable)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; method. Shutting down the executor service while the channel is open results in unspecified behavior.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是&lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 的&lt;/a&gt;，其任务提交到处理I /上产生的通道启动的操作O事件调度完成的结果。这些任务的性质是高度特定于实现的，因此在配置 &lt;code&gt;Executor&lt;/code&gt; 时应格外小心。它至少应支持无限制的工作队列，并且不应在&lt;a href=&quot;../../util/concurrent/executor#execute(java.lang.Runnable)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt;方法的调用者线程上运行任务。通道打开时关闭执行程序服务会导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="f3b206390268e595a7543c9f72d6571233bef9fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is the &lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; to which tasks are submitted to handle I/O events and dispatch completion results for operations initiated on resulting channel. The nature of these tasks is highly implementation specific and so care should be taken when configuring the &lt;code&gt;Executor&lt;/code&gt;. Minimally it should support an unbounded work queue and should not run tasks on the caller thread of the &lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; method. Shutting down the executor service while the channel is open results in unspecified behavior.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是&lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 的&lt;/a&gt;，其任务提交到处理I /上产生的通道启动的操作O事件调度完成的结果。这些任务的性质是高度特定于实现的，因此在配置 &lt;code&gt;Executor&lt;/code&gt; 时应格外小心。它至少应支持无限制的工作队列，并且不应在&lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt;方法的调用者线程上运行任务。通道打开时关闭执行程序服务会导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="9a348a5e6c50ba5a16fcb50db730eca7f5277712" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exit&lt;/code&gt; method of class &lt;code&gt;Runtime&lt;/code&gt; has been called and the security manager has permitted the exit operation to take place.</source>
          <target state="translated">已调用类 &lt;code&gt;Runtime&lt;/code&gt; 的 &lt;code&gt;exit&lt;/code&gt; 方法，并且安全管理器已允许进行退出操作。</target>
        </trans-unit>
        <trans-unit id="54da7fdc8d08868a250106136d8727592f95e4ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extraExports&lt;/code&gt; parameter is the map of additional packages to export. The &lt;code&gt;extraOpens&lt;/code&gt; parameter is the map of additional packages to open. In both cases, the map key is the fully-qualified name of the package as defined in section 6.5.3 of</source>
          <target state="translated">该 &lt;code&gt;extraExports&lt;/code&gt; 参数的附加包地图输出。该 &lt;code&gt;extraOpens&lt;/code&gt; 参数的附加软件包地图打开。在这两种情况下，映射密钥都是包装的全限定名称，如第6.5.3节中所定义。</target>
        </trans-unit>
        <trans-unit id="7fa94cd8aa6c313051f5bdb81ee487e8d422730c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extraProvides&lt;/code&gt; parameter is the additional service providers for the module to provide. The map key is the service type. The map value is the non-empty list of implementation types, each of which is a member of the module and an implementation of the service.</source>
          <target state="translated">所述 &lt;code&gt;extraProvides&lt;/code&gt; 参数是其他服务提供商的模块，以提供。映射键是服务类型。映射值是实现类型的非空列表，每个实现类型都是模块的成员和服务的实现。</target>
        </trans-unit>
        <trans-unit id="676f7c17aac8c78e797db6e7abb083ffd0ff7492" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;failure&lt;/code&gt; callback is invoked when the RMI runtime is unable to create a &lt;code&gt;ServerSocket&lt;/code&gt; via the &lt;code&gt;RMISocketFactory&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;failure&lt;/code&gt; 时RMI运行时无法创建一个回调被调用 &lt;code&gt;ServerSocket&lt;/code&gt; 通过 &lt;code&gt;RMISocketFactory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969956ed69e8a6235531b9a7241b70965fe5c99b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;failure&lt;/code&gt; callback is invoked when the RMI runtime is unable to create a &lt;code&gt;ServerSocket&lt;/code&gt; via the &lt;code&gt;RMISocketFactory&lt;/code&gt;. An &lt;code&gt;RMIFailureHandler&lt;/code&gt; is registered via a call to &lt;code&gt;RMISocketFacotry.setFailureHandler&lt;/code&gt;. If no failure handler is installed, the default behavior is to attempt to re-create the ServerSocket.</source>
          <target state="translated">该 &lt;code&gt;failure&lt;/code&gt; 时RMI运行时无法创建一个回调被调用 &lt;code&gt;ServerSocket&lt;/code&gt; 通过 &lt;code&gt;RMISocketFactory&lt;/code&gt; 。一个 &lt;code&gt;RMIFailureHandler&lt;/code&gt; 通过将呼叫注册 &lt;code&gt;RMISocketFacotry.setFailureHandler&lt;/code&gt; 。如果未安装任何故障处理程序，则默认行为是尝试重新创建ServerSocket。</target>
        </trans-unit>
        <trans-unit id="59e0247c987779ab17259f2d9c40552dc79dbfdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;failure&lt;/code&gt; callback is invoked when the RMI runtime is unable to create a &lt;code&gt;ServerSocket&lt;/code&gt; via the &lt;code&gt;RMISocketFactory&lt;/code&gt;. An &lt;code&gt;RMIFailureHandler&lt;/code&gt; is registered via a call to &lt;code&gt;RMISocketFactory.setFailureHandler&lt;/code&gt;. If no failure handler is installed, the default behavior is to attempt to re-create the ServerSocket.</source>
          <target state="translated">该 &lt;code&gt;failure&lt;/code&gt; 时RMI运行时无法创建一个回调被调用 &lt;code&gt;ServerSocket&lt;/code&gt; 通过 &lt;code&gt;RMISocketFactory&lt;/code&gt; 。一个 &lt;code&gt;RMIFailureHandler&lt;/code&gt; 通过将呼叫注册 &lt;code&gt;RMISocketFactory.setFailureHandler&lt;/code&gt; 。如果未安装任何故障处理程序，则默认行为是尝试重新创建ServerSocket。</target>
        </trans-unit>
        <trans-unit id="1a61775a7139e096b9fd0be3d2ad7ac6f1c956f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;family&lt;/code&gt; parameter is used to specify the &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt;. If the datagram channel is to be used for IP multicasting then this should correspond to the address type of the multicast groups that this channel will join.</source>
          <target state="translated">该 &lt;code&gt;family&lt;/code&gt; 参数用于指定&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;。如果数据报通道将用于IP多播，则它应对应于该通道将加入的多播组的地址类型。</target>
        </trans-unit>
        <trans-unit id="f08c1804c0526409a1ecb2988cff36a97dc47de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; parameters may be null if and only if they are null in a listener to be removed.</source>
          <target state="translated">所述 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;handback&lt;/code&gt; 参数可以为空，当且仅当它们是空在听众被移除。</target>
        </trans-unit>
        <trans-unit id="e2e6442675b7f51f69f821df5212aa778b1fe932" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filtering()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, such as downstream of a &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. For example, given a stream of &lt;code&gt;Employee&lt;/code&gt;, to accumulate the employees in each department that have a salary above a certain threshold:</source>
          <target state="translated">当在多级归约中（例如 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 的下游 &lt;code&gt;filtering()&lt;/code&gt; 使用时，filtering（）收集器最有用。例如，给定 &lt;code&gt;Employee&lt;/code&gt; 的流，以累积每个部门中薪水高于特定阈值的员工：</target>
        </trans-unit>
        <trans-unit id="e696db23567885b82ff4f03850097e84169fd88a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated and will be removed.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用，将被删除。</target>
        </trans-unit>
        <trans-unit id="097d5634e76c7fdc3a50dea30921ddef17371844" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated and will be removed. It is implemented as a no-op. Subclasses that override &lt;code&gt;finalize&lt;/code&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method. The recommended cleanup for compressor is to explicitly call &lt;code&gt;end&lt;/code&gt; method when it is no longer in use. If the &lt;code&gt;end&lt;/code&gt; is not invoked explicitly the resource of the compressor will be released when the instance becomes unreachable,</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用，将被删除。它被实现为无操作。为了执行清除而覆盖 &lt;code&gt;finalize&lt;/code&gt; 的子类应进行修改，以使用替代的清除机制并删除覆盖的 &lt;code&gt;finalize&lt;/code&gt; 方法。对于压缩器，建议的清理方法是在不再使用 &lt;code&gt;end&lt;/code&gt; 方法时显式调用end方法。如果未明确调用 &lt;code&gt;end&lt;/code&gt; 则在实例变得不可访问时将释放压缩器的资源，</target>
        </trans-unit>
        <trans-unit id="47b79383bcae3e922204d5ea86fccfb170bfe2e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated and will be removed. It is implemented as a no-op. Subclasses that override &lt;code&gt;finalize&lt;/code&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms and to remove the overriding &lt;code&gt;finalize&lt;/code&gt; method. The recommended cleanup for ZipFile object is to explicitly invoke &lt;code&gt;close&lt;/code&gt; method when it is no longer in use, or use try-with-resources. If the &lt;code&gt;close&lt;/code&gt; is not invoked explicitly the resources held by this object will be released when the instance becomes unreachable.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用，将被删除。它被实现为无操作。为了执行清除而覆盖 &lt;code&gt;finalize&lt;/code&gt; 的子类应进行修改，以使用替代的清除机制并删除覆盖的 &lt;code&gt;finalize&lt;/code&gt; 方法。对于ZipFile对象，建议的清除方法是在不再使用 &lt;code&gt;close&lt;/code&gt; 方法时显式调用close方法，或使用try-with-resources。如果未显式调用 &lt;code&gt;close&lt;/code&gt; 则在实例变得不可访问时，将释放此对象拥有的资源。</target>
        </trans-unit>
        <trans-unit id="7f87f25a450e774218ae842f94ecc4f8e21a6230" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated and will be removed. It is implemented as a no-op. Subclasses that override &lt;code&gt;finalize&lt;/code&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms and to remove the overriding &lt;code&gt;finalize&lt;/code&gt; method. The recommended cleanup for compressor is to explicitly call &lt;code&gt;end&lt;/code&gt; method when it is no longer in use. If the &lt;code&gt;end&lt;/code&gt; is not invoked explicitly the resource of the compressor will be released when the instance becomes unreachable.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用，将被删除。它被实现为无操作。为了执行清除而覆盖 &lt;code&gt;finalize&lt;/code&gt; 的子类应进行修改，以使用替代的清除机制并删除覆盖的 &lt;code&gt;finalize&lt;/code&gt; 方法。对于压缩器，建议的清理方法是在不再使用 &lt;code&gt;end&lt;/code&gt; 方法时显式调用end方法。如果未显式调用 &lt;code&gt;end&lt;/code&gt; 则当实例变得不可访问时，将释放压缩器的资源。</target>
        </trans-unit>
        <trans-unit id="a5781f1fe78b11db626c54005d97fda3c5e9dc2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated and will be removed. Subclasses that override &lt;code&gt;finalize&lt;/code&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms and to remove the overriding &lt;code&gt;finalize&lt;/code&gt; method. When overriding the &lt;code&gt;finalize&lt;/code&gt; method, its implementation must explicitly ensure that &lt;code&gt;super.finalize()&lt;/code&gt; is invoked as described in &lt;a href=&quot;../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt;. See the specification for &lt;a href=&quot;../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; for further information about migration options.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用，将被删除。为了执行清除而覆盖 &lt;code&gt;finalize&lt;/code&gt; 的子类应进行修改，以使用替代的清除机制并删除覆盖的 &lt;code&gt;finalize&lt;/code&gt; 方法。覆盖 &lt;code&gt;finalize&lt;/code&gt; 方法时，其实现必须明确确保按&lt;a href=&quot;../lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; 中的&lt;/a&gt;描述调用 &lt;code&gt;super.finalize()&lt;/code&gt; （）。有关迁移选项的更多信息，请参见&lt;a href=&quot;../lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt;的规范。</target>
        </trans-unit>
        <trans-unit id="a42af659e94273af1e3e71c3f847d665f87c7926" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用。</target>
        </trans-unit>
        <trans-unit id="301938edcbcee8912bd33f8f0d3d67fd77b6a355" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated. Subclasses that override &lt;code&gt;finalize&lt;/code&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms and to remove the overriding &lt;code&gt;finalize&lt;/code&gt; method. When overriding the &lt;code&gt;finalize&lt;/code&gt; method, its implementation must explicitly ensure that &lt;code&gt;super.finalize()&lt;/code&gt; is invoked as described in &lt;a href=&quot;../../../../java.base/java/lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt;. See the specification for &lt;a href=&quot;../../../../java.base/java/lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; for further information about migration options.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用。为了执行清除而覆盖 &lt;code&gt;finalize&lt;/code&gt; 的子类应进行修改，以使用替代的清除机制并删除覆盖的 &lt;code&gt;finalize&lt;/code&gt; 方法。覆盖 &lt;code&gt;finalize&lt;/code&gt; 方法时，其实现必须明确确保按&lt;a href=&quot;../../../../java.base/java/lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; 中的&lt;/a&gt;描述调用 &lt;code&gt;super.finalize()&lt;/code&gt; （）。有关迁移选项的更多信息，请参见&lt;a href=&quot;../../../../java.base/java/lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt;的规范。</target>
        </trans-unit>
        <trans-unit id="3cf6ab10b27945f3cea37844915cc05f3c74248d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method has been deprecated. Subclasses that override &lt;code&gt;finalize&lt;/code&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms and to remove the overriding &lt;code&gt;finalize&lt;/code&gt; method. When overriding the &lt;code&gt;finalize&lt;/code&gt; method, its implementation must explicitly ensure that &lt;code&gt;super.finalize()&lt;/code&gt; is invoked as described in &lt;a href=&quot;../../../java.base/java/lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt;. See the specification for &lt;a href=&quot;../../../java.base/java/lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; for further information about migration options.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法已被弃用。为了执行清除而覆盖 &lt;code&gt;finalize&lt;/code&gt; 的子类应进行修改，以使用替代的清除机制并删除覆盖的 &lt;code&gt;finalize&lt;/code&gt; 方法。覆盖 &lt;code&gt;finalize&lt;/code&gt; 方法时，其实现必须明确确保按&lt;a href=&quot;../../../java.base/java/lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; 中的&lt;/a&gt;描述调用 &lt;code&gt;super.finalize()&lt;/code&gt; （）。有关迁移选项的更多信息，请参见&lt;a href=&quot;../../../java.base/java/lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt;的规范。</target>
        </trans-unit>
        <trans-unit id="acfa3270c433f7fbeb166904731784b7ab01474e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method is never invoked more than once by a Java virtual machine for any given object.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法永远不会对任何给定对象多次调用由Java虚拟机。</target>
        </trans-unit>
        <trans-unit id="36550a7fe4b3770df4940e5d45c14dff3f4cb361" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method of class &lt;code&gt;Object&lt;/code&gt; performs no special action; it simply returns normally. Subclasses of &lt;code&gt;Object&lt;/code&gt; may override this definition.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 类的 &lt;code&gt;finalize&lt;/code&gt; 方法不执行任何特殊操作；它只是正常返回。 &lt;code&gt;Object&lt;/code&gt; 的子类可以覆盖此定义。</target>
        </trans-unit>
        <trans-unit id="290eeab6379b679af729a0f7d139a6b6afebf8ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findSystemClass&lt;/code&gt; method in class &lt;code&gt;ClassLoader&lt;/code&gt; .</source>
          <target state="translated">类 &lt;code&gt;ClassLoader&lt;/code&gt; 中的 &lt;code&gt;findSystemClass&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b78d49371e443cbd3adbfb51ffc64676bde68d8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatMap()&lt;/code&gt; operation has the effect of applying a one-to-many transformation to the elements of the stream, and then flattening the resulting elements into a new stream.</source>
          <target state="translated">所述 &lt;code&gt;flatMap()&lt;/code&gt; 操作具有施加一个到许多变换以流的元素，然后压扁所得的元件到一个新的流的效果。</target>
        </trans-unit>
        <trans-unit id="296d9a4aaa513be61985bb6776a603e7a0774231" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatMapping()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, such as downstream of a &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. For example, given a stream of &lt;code&gt;Order&lt;/code&gt;, to accumulate the set of line items for each customer:</source>
          <target state="translated">所述 &lt;code&gt;flatMapping()&lt;/code&gt; 在多级降低使用时，诸如下游收集器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。例如，给定 &lt;code&gt;Order&lt;/code&gt; 流，以累积每个客户的订单项集：</target>
        </trans-unit>
        <trans-unit id="ee0bb92de803847414b86012236c4f48f3910542" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush()&lt;/code&gt; method does nothing.</source>
          <target state="translated">该 &lt;code&gt;flush()&lt;/code&gt; 方法不起作用。</target>
        </trans-unit>
        <trans-unit id="9794be29838cb64627abe081d7728e6987d9e44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; method of &lt;code&gt;DataOutputStream&lt;/code&gt; calls the &lt;code&gt;flush&lt;/code&gt; method of its underlying output stream.</source>
          <target state="translated">该 &lt;code&gt;flush&lt;/code&gt; 的方法 &lt;code&gt;DataOutputStream&lt;/code&gt; 类调用 &lt;code&gt;flush&lt;/code&gt; 其基础输出流的方法。</target>
        </trans-unit>
        <trans-unit id="195ffa6218dd9b603f2e4ca8f61c877be833e3ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;flush&lt;/code&gt; method of its underlying output stream.</source>
          <target state="translated">该 &lt;code&gt;flush&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用 &lt;code&gt;flush&lt;/code&gt; 其基础输出流的方法。</target>
        </trans-unit>
        <trans-unit id="68aa9823b85500f33061dc1eb4258756e15e005f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; 的 &lt;code&gt;flush&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="708bb18e269a3b497919640ccb7a50b14533bedd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forName&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;Class&lt;/code&gt; 中的 &lt;code&gt;forName&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="1e830c12e2148cec99c8883588bf6d4b50000667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; flag specifies the order that certificates will be passed to the &lt;a href=&quot;#check(java.security.cert.Certificate)&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; method (forward or reverse).</source>
          <target state="translated">的 &lt;code&gt;forward&lt;/code&gt; 标志指定证书将被传递到的顺序&lt;a href=&quot;#check(java.security.cert.Certificate)&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法（正向或反向）。</target>
        </trans-unit>
        <trans-unit id="4c26146099bd6b8ccdb37b5c47095892a4be4161" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; flag specifies the order that certificates will be passed to the &lt;a href=&quot;#check(java.security.cert.Certificate,java.util.Collection)&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; method (forward or reverse). A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;&lt;b&gt;must&lt;/b&gt; support reverse checking and &lt;b&gt;may&lt;/b&gt; support forward checking.</source>
          <target state="translated">的 &lt;code&gt;forward&lt;/code&gt; 标志指定证书将被传递到的顺序&lt;a href=&quot;#check(java.security.cert.Certificate,java.util.Collection)&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法（正向或反向）。一 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; &lt;b&gt;必须&lt;/b&gt;支持反向检查和&lt;b&gt;可以&lt;/b&gt;支持正向检查。</target>
        </trans-unit>
        <trans-unit id="8de3dc96d234b55e125cd365d4c69d5d74e9de59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; flag specifies the order that certificates will be passed to the &lt;a href=&quot;certpathchecker#check-java.security.cert.Certificate-&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; method (forward or reverse).</source>
          <target state="translated">的 &lt;code&gt;forward&lt;/code&gt; 标志指定证书将被传递到的顺序&lt;a href=&quot;certpathchecker#check-java.security.cert.Certificate-&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法（正向或反向）。</target>
        </trans-unit>
        <trans-unit id="7f3a1ac72ca4c5a5aab4a7ea8026300ca9e9a65d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; flag specifies the order that certificates will be passed to the &lt;a href=&quot;pkixcertpathchecker#check-java.security.cert.Certificate-java.util.Collection-&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; method (forward or reverse). A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;&lt;b&gt;must&lt;/b&gt; support reverse checking and &lt;b&gt;may&lt;/b&gt; support forward checking.</source>
          <target state="translated">的 &lt;code&gt;forward&lt;/code&gt; 标志指定证书将被传递到的顺序&lt;a href=&quot;pkixcertpathchecker#check-java.security.cert.Certificate-java.util.Collection-&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法（正向或反向）。一 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; &lt;b&gt;必须&lt;/b&gt;支持反向检查和&lt;b&gt;可以&lt;/b&gt;支持正向检查。</target>
        </trans-unit>
        <trans-unit id="c29abf69126019dfa340a81cfcd7917ddb6a1954" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fractionalDigits&lt;/code&gt; parameter allows the output of the fractional second to be controlled. Specifying zero will cause no fractional digits to be output. From 1 to 9 will output an increasing number of digits, using zero right-padding if necessary. The special value -1 is used to output as many digits as necessary to avoid any trailing zeroes.</source>
          <target state="translated">所述 &lt;code&gt;fractionalDigits&lt;/code&gt; 参数允许第二分数的输出被控制。指定零将不会输出小数位。从1到9将输出越来越多的数字，必要时使用零右填充。特殊值-1用于输出所需的尽可能多的数字，以避免任何尾随零。</target>
        </trans-unit>
        <trans-unit id="7b74f2d1a70560572c42c19ad803e17b40cd8b5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get/putClientProperty&lt;/code&gt; methods provide access to a small per-instance hashtable. Callers can use get/putClientProperty to annotate components that were created by another module. For example, a layout manager might store per child constraints this way. For example:</source>
          <target state="translated">该 &lt;code&gt;get/putClientProperty&lt;/code&gt; 方法提供访问小每个实例的哈希表。调用者可以使用get / putClientProperty注释由另一个模块创建的组件。例如，布局管理器可能以此方式存储每个子约束。例如：</target>
        </trans-unit>
        <trans-unit id="cb20f3bf6b3942d976c6a027783a762e2ac8bebb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get/putProperty&lt;/code&gt; methods provide access to a small per-instance map. This is &lt;b&gt;not&lt;/b&gt; to be confused with &lt;a href=&quot;../../../../../java.base/java/util/properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;get/putProperty&lt;/code&gt; 方法可以访问每个实例的小型映射。这是&lt;b&gt;不是&lt;/b&gt;与混淆&lt;a href=&quot;../../../../../java.base/java/util/properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="854b032e913f227ca9315dfb23f41c9eee3500bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getAWTEventListeners&lt;/code&gt; method of &lt;code&gt;Toolkit&lt;/code&gt; can return a mixture of &lt;code&gt;AWTEventListener&lt;/code&gt; and &lt;code&gt;AWTEventListenerProxy&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Toolkit&lt;/code&gt; 的 &lt;code&gt;getAWTEventListeners&lt;/code&gt; 方法可以返回 &lt;code&gt;AWTEventListener&lt;/code&gt; 和 &lt;code&gt;AWTEventListenerProxy&lt;/code&gt; 对象的混合。</target>
        </trans-unit>
        <trans-unit id="23ff0ed130fbcc2ffd5daaf1ed441144839e0f30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getBundle&lt;/code&gt; factory methods with no &lt;code&gt;Control&lt;/code&gt; parameter locate and load resource bundles from &lt;a href=&quot;spi/resourcebundleprovider&quot;&gt;service providers&lt;/a&gt;. It may continue the search as if calling &lt;a href=&quot;../lang/module#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;Module.getResourceAsStream(String)&lt;/code&gt;&lt;/a&gt; to find the named resource from a given module and calling &lt;a href=&quot;../lang/classloader#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getResourceAsStream(String)&lt;/code&gt;&lt;/a&gt;; refer to the specification of the &lt;code&gt;getBundle&lt;/code&gt; method for details. Only non-encapsulated resource bundles of &quot;&lt;code&gt;java.class&lt;/code&gt;&quot; or &quot;&lt;code&gt;java.properties&lt;/code&gt;&quot; format are searched.</source>
          <target state="translated">没有 &lt;code&gt;Control&lt;/code&gt; 参数的 &lt;code&gt;getBundle&lt;/code&gt; 工厂方法可从&lt;a href=&quot;spi/resourcebundleprovider&quot;&gt;服务提供商处&lt;/a&gt;定位并加载资源束。它可能会继续搜索，就像调用&lt;a href=&quot;../lang/module#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;Module.getResourceAsStream(String)&lt;/code&gt; &lt;/a&gt;从给定模块中查找命名资源并调用&lt;a href=&quot;../lang/classloader#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getResourceAsStream(String)&lt;/code&gt; 一样&lt;/a&gt;；有关详细信息，请参考 &lt;code&gt;getBundle&lt;/code&gt; 方法的规范。仅搜索&amp;ldquo; &lt;code&gt;java.class&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;java.properties&lt;/code&gt; &amp;rdquo;格式的未封装资源包。</target>
        </trans-unit>
        <trans-unit id="dd64d876b826e032eea9ddf5b6c247d57ce3fd4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; and &lt;code&gt;
 getMinimalDaysInFirstWeek()&lt;/code&gt; values are initialized using locale-dependent resources when constructing a &lt;code&gt;
 GregorianCalendar&lt;/code&gt;. &lt;a id=&quot;iso8601_compatible_setting&quot;&gt;The week determination is compatible&lt;/a&gt; with the ISO 8601 standard when &lt;code&gt;
 getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;
 getMinimalDaysInFirstWeek()&lt;/code&gt; is 4, which values are used in locales where the standard is preferred. These values can explicitly be set by calling &lt;a href=&quot;calendar#setFirstDayOfWeek(int)&quot;&gt;&lt;code&gt;setFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#setMinimalDaysInFirstWeek(int)&quot;&gt;&lt;code&gt;setMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 和 &lt;code&gt; getMinimalDaysInFirstWeek()&lt;/code&gt; 值被构建在使用区域设置相关的资源初始化 &lt;code&gt; GregorianCalendar&lt;/code&gt; 的。当 &lt;code&gt; getFirstDayOfWeek()&lt;/code&gt; 为 &lt;code&gt;MONDAY&lt;/code&gt; 且 &lt;code&gt; getMinimalDaysInFirstWeek()&lt;/code&gt; 为4时，&lt;a id=&quot;iso8601_compatible_setting&quot;&gt;星期确定&lt;/a&gt;与ISO 8601标准兼容，该值在首选该标准的语言环境中使用。可以通过调用&lt;a href=&quot;calendar#setFirstDayOfWeek(int)&quot;&gt; &lt;code&gt;setFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;calendar#setMinimalDaysInFirstWeek(int)&quot;&gt; &lt;code&gt;setMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;显式设置这些值。</target>
        </trans-unit>
        <trans-unit id="0f3e1d9782b5c32d63d7b0cc83ee2c191412bb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; values are initialized using locale-dependent resources when constructing a &lt;code&gt;GregorianCalendar&lt;/code&gt;. &lt;a name=&quot;iso8601_compatible_setting&quot;&gt;The week determination is compatible&lt;/a&gt; with the ISO 8601 standard when &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4, which values are used in locales where the standard is preferred. These values can explicitly be set by calling &lt;a href=&quot;calendar#setFirstDayOfWeek-int-&quot;&gt;&lt;code&gt;setFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#setMinimalDaysInFirstWeek-int-&quot;&gt;&lt;code&gt;setMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 和 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 值被构建在使用区域设置相关的资源初始化 &lt;code&gt;GregorianCalendar&lt;/code&gt; 的。当 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 为 &lt;code&gt;MONDAY&lt;/code&gt; 且 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 为4时，&lt;a name=&quot;iso8601_compatible_setting&quot;&gt;星期确定&lt;/a&gt;与ISO 8601标准兼容，该值在首选该标准的语言环境中使用。可以通过调用&lt;a href=&quot;calendar#setFirstDayOfWeek-int-&quot;&gt; &lt;code&gt;setFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;calendar#setMinimalDaysInFirstWeek-int-&quot;&gt; &lt;code&gt;setMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;显式设置这些值。</target>
        </trans-unit>
        <trans-unit id="56523d844e395cab10ecde9ba8b570825460b5cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getInstance&lt;/code&gt; factory method of the &lt;code&gt;Cipher&lt;/code&gt; engine class follows these rules in order to instantiate a provider's implementation of &lt;code&gt;CipherSpi&lt;/code&gt; for a transformation of the form &quot;</source>
          <target state="translated">&lt;code&gt;Cipher&lt;/code&gt; 引擎类的 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法遵循以下规则，以便实例化提供程序的 &lt;code&gt;CipherSpi&lt;/code&gt; 实现，以实现&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f09e308477567f7fb18f8db544516ee32916e1fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getNotifTypes&lt;/code&gt; method returns an array of strings containing the notification types that the MBean may emit. The notification type is a dot-notation string which describes what the emitted notification is about, not the Java class of the notification. A single generic notification class can be used to send notifications of several types. All of these types are returned in the string array result of the &lt;code&gt;getNotifTypes&lt;/code&gt; method.</source>
          <target state="translated">该 &lt;code&gt;getNotifTypes&lt;/code&gt; 方法返回包含所述通知类型的MBean可发出一个字符串数组。通知类型是点符号字符串，它描述发出的通知的含义，而不是通知的Java类。单个通用通知类可用于发送几种类型的通知。所有这些类型均在 &lt;code&gt;getNotifTypes&lt;/code&gt; 方法的字符串数组结果中返回。</target>
        </trans-unit>
        <trans-unit id="058e0ca7376a98eb437efbc0aef64d1a8a108d0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getObjectInstance()&lt;/code&gt; method of an object factory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="translated">对象工厂的 &lt;code&gt;getObjectInstance()&lt;/code&gt; 方法可能使用不同的参数多次调用。该实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="6a8501111fcfea5e31cfee8d6894af584ff150ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOptionType&lt;/code&gt; method returns this value if this &lt;code&gt;ConfirmationCallback&lt;/code&gt; was instantiated with &lt;code&gt;options&lt;/code&gt; instead of an &lt;code&gt;optionType&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;getOptionType&lt;/code&gt; 如果此方法将返回该值 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 与实例化的 &lt;code&gt;options&lt;/code&gt; ，而不是 &lt;code&gt;optionType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ef280ce3c722336b80c7679d86c41831204a952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOverrideStyle&lt;/code&gt; method provides a mechanism through which a DOM author could effect immediate change to the style of an element without modifying the explicitly linked style sheets of a document or the inline style of elements in the style sheets. This style sheet comes after the author style sheet in the cascade algorithm and is called override style sheet. The override style sheet takes precedence over author style sheets. An &quot;!important&quot; declaration still takes precedence over a normal declaration. Override, author, and user style sheets all may contain &quot;!important&quot; declarations. User &quot;!important&quot; rules take precedence over both override and author &quot;!important&quot; rules, and override &quot;!important&quot; rules take precedence over author &quot;!important&quot; rules.</source>
          <target state="translated">该 &lt;code&gt;getOverrideStyle&lt;/code&gt; 方法提供通过该DOM作者可能影响立即改变到一个元件的样式，而无需修改的文件或在样式表元素的内嵌样式的显式链接的样式表的机制。此样式表位于级联算法中的作者样式表之后，称为覆盖样式表。覆盖样式表优先于作者样式表。&amp;ldquo;！important&amp;rdquo;声明仍然优先于普通声明。覆盖，作者和用户样式表都可能包含&amp;ldquo;！important&amp;rdquo;声明。用户&amp;ldquo;！important&amp;rdquo;规则优先于覆盖规则和作者&amp;ldquo;！important&amp;rdquo;规则，而覆盖&amp;ldquo;！important&amp;rdquo;规则则优先于作者&amp;ldquo;！important&amp;rdquo;规则。</target>
        </trans-unit>
        <trans-unit id="c8a70b914e02ddbca33ccc8428f3eed3b38dd996" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getPropertyInfo&lt;/code&gt; method is intended to allow a generic GUI tool to discover what properties it should prompt a human for in order to get enough information to connect to a database. Note that depending on the values the human has supplied so far, additional values may become necessary, so it may be necessary to iterate though several calls to the &lt;code&gt;getPropertyInfo&lt;/code&gt; method.</source>
          <target state="translated">该 &lt;code&gt;getPropertyInfo&lt;/code&gt; 方法旨在允许一个通用的GUI工具发现哪些属性它应该为了获得足够的信息来连接到数据库提示人类的。请注意，根据人类到目前为止提供的值，可能需要附加值，因此可能有必要通过对 &lt;code&gt;getPropertyInfo&lt;/code&gt; 方法的多次调用进行迭代。</target>
        </trans-unit>
        <trans-unit id="6ebc4bc14d6647d69c5c4a4fb63fb8fd2ffdfd9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getResources&lt;/code&gt; method of the context &lt;code&gt;ClassLoader&lt;/code&gt; is used locate JAR files containing files named &lt;code&gt;META-INF/services/javax.imageio.spi.&lt;/code&gt;</source>
          <target state="translated">上下文 &lt;code&gt;ClassLoader&lt;/code&gt; 的 &lt;code&gt;getResources&lt;/code&gt; 方法用于查找包含名为 &lt;code&gt;META-INF/services/javax.imageio.spi.&lt;/code&gt; 文件的JAR文件。</target>
        </trans-unit>
        <trans-unit id="b2b6b51bd170eb65242dd9c81805d8ac434ccc43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getStateToBind()&lt;/code&gt; method of a state factory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="translated">状态工厂的 &lt;code&gt;getStateToBind()&lt;/code&gt; 方法可能会使用不同的参数多次调用。该实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="4133bc1ef355b2f7d534eacc6206c1d3c4756a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;glassPane&lt;/code&gt; and &lt;code&gt;contentPane&lt;/code&gt; have the same bounds, which means &lt;code&gt;JRootPane&lt;/code&gt; does not tiles its children and this should return false.</source>
          <target state="translated">该 &lt;code&gt;glassPane&lt;/code&gt; 和 &lt;code&gt;contentPane&lt;/code&gt; 中具有相同的边界，这意味着 &lt;code&gt;JRootPane&lt;/code&gt; 中并不对其子级平铺，应返回假。</target>
        </trans-unit>
        <trans-unit id="ee344936fcd60a44c7aadfe704fe188c2bf05a14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;glassPane&lt;/code&gt; and &lt;code&gt;contentPane&lt;/code&gt; have the same bounds, which means &lt;code&gt;JRootPane&lt;/code&gt; does not tiles its children and this should return false. On the other hand, the &lt;code&gt;glassPane&lt;/code&gt; is normally not visible, and so this can return true if the &lt;code&gt;glassPane&lt;/code&gt; isn't visible. Therefore, the return value here depends upon the visibility of the &lt;code&gt;glassPane&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;glassPane&lt;/code&gt; 和 &lt;code&gt;contentPane&lt;/code&gt; 中具有相同的边界，这意味着 &lt;code&gt;JRootPane&lt;/code&gt; 中并不对其子级平铺，应返回假。另一方面， &lt;code&gt;glassPane&lt;/code&gt; 通常是不可见的，因此，如果 &lt;code&gt;glassPane&lt;/code&gt; 不可见，则可以返回true 。因此，此处的返回值取决于 &lt;code&gt;glassPane&lt;/code&gt; 的可见性。</target>
        </trans-unit>
        <trans-unit id="c64b9cd519193ff182ca1d2c0d0b61365f9b46ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;glassPane&lt;/code&gt; fills the entire viewable area of the &lt;code&gt;JRootPane&lt;/code&gt; (bounds - insets).</source>
          <target state="translated">该 &lt;code&gt;glassPane&lt;/code&gt; 填充的整个可视区域 &lt;code&gt;JRootPane&lt;/code&gt; （边界- insets）。</target>
        </trans-unit>
        <trans-unit id="303f1b7ffcb897ac198d0b32c1e4690dd69e7d53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;glassPane&lt;/code&gt; sits on top of all other components in the &lt;code&gt;JRootPane&lt;/code&gt;. That provides a convenient place to draw above all other components, and makes it possible to intercept mouse events, which is useful both for dragging and for drawing. Developers can use &lt;code&gt;setVisible&lt;/code&gt; on the &lt;code&gt;glassPane&lt;/code&gt; to control when the &lt;code&gt;glassPane&lt;/code&gt; displays over the other children. By default the &lt;code&gt;glassPane&lt;/code&gt; is not visible.</source>
          <target state="translated">该 &lt;code&gt;glassPane&lt;/code&gt; 坐在中的所有其它组件之上 &lt;code&gt;JRootPane&lt;/code&gt; 。这提供了一个方便的位置来绘制所有其他组件，并且可以拦截鼠标事件，这对于拖动和绘制都是有用的。开发人员可以在 &lt;code&gt;glassPane&lt;/code&gt; 上使用 &lt;code&gt;setVisible&lt;/code&gt; 来控制何时 &lt;code&gt;glassPane&lt;/code&gt; 在其他子项上显示。默认情况下， &lt;code&gt;glassPane&lt;/code&gt; 不可见。</target>
        </trans-unit>
        <trans-unit id="f433eca03b2eb0f32d07fb7e2e68b92fac6f3c89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle&lt;/code&gt; method implementation checks the instance(s) of the &lt;code&gt;Callback&lt;/code&gt; object(s) passed in to retrieve or display the requested information. The following example is provided to help demonstrate what an &lt;code&gt;handle&lt;/code&gt; method implementation might look like. This example code is for guidance only. Many details, including proper error handling, are left out for simplicity.</source>
          <target state="translated">该 &lt;code&gt;handle&lt;/code&gt; 的方法实现检查实例（多个） &lt;code&gt;Callback&lt;/code&gt; 中传递的对象（一个或多个）来检索或显示所请求的信息。提供以下示例，以帮助演示 &lt;code&gt;handle&lt;/code&gt; 方法实现的外观。此示例代码仅供参考。为了简单起见，省略了许多细节，包括适当的错误处理。</target>
        </trans-unit>
        <trans-unit id="78806b6c0d8e3a500425fd33fe6be57433f2f45a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hashCode&lt;/code&gt; method of the returned set returns the sum of the</source>
          <target state="translated">返回集的 &lt;code&gt;hashCode&lt;/code&gt; 方法返回</target>
        </trans-unit>
        <trans-unit id="2f587f428ba9d70c513a6f20faefa7737e3169e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hashCode&lt;/code&gt; method uses the underlying &lt;code&gt;java.util.Date&lt;/code&gt; implementation and therefore does not include nanos in its computation.</source>
          <target state="translated">所述 &lt;code&gt;hashCode&lt;/code&gt; 方法使用底层 &lt;code&gt;java.util.Date&lt;/code&gt; 执行和因此不包括在其计算毫微秒。</target>
        </trans-unit>
        <trans-unit id="fd1ec688b3211b62ec6deea7903a4e5a33c5b1e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hostname&lt;/code&gt; argument is illegal if it:</source>
          <target state="translated">该 &lt;code&gt;hostname&lt;/code&gt; 的说法是，如果它违法：</target>
        </trans-unit>
        <trans-unit id="0e43ec7f450994678afac7d3d20f221033df02a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hostnameVerifier&lt;/code&gt; for this object.</source>
          <target state="translated">此对象的 &lt;code&gt;hostnameVerifier&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a0862b9286e778fa946553866f62a5a21c32639" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iconOnly&lt;/code&gt; value.</source>
          <target state="translated">该 &lt;code&gt;iconOnly&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="daad7e8488e5cfcb51dabab10521abe9fa406690" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iconifyFrame()&lt;/code&gt; code calls this to determine the proper bounds for the desktopIcon.</source>
          <target state="translated">该 &lt;code&gt;iconifyFrame()&lt;/code&gt; 代码调用此以确定desktopIcon的适当边界。</target>
        </trans-unit>
        <trans-unit id="51e65210412db39a03c74c582c66b807b1845931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;icons&lt;/code&gt; list can contain &lt;code&gt;MultiResolutionImage&lt;/code&gt; images also. Suitable image depending on screen resolution is extracted from base &lt;code&gt;MultiResolutionImage&lt;/code&gt; image and added to the icons list while base resolution image is removed from list. The &lt;code&gt;icons&lt;/code&gt; list is scanned for the images of most appropriate dimensions from the beginning. If the list contains several images of the same size, the first will be used.</source>
          <target state="translated">该 &lt;code&gt;icons&lt;/code&gt; 列表可以包含 &lt;code&gt;MultiResolutionImage&lt;/code&gt; 图像也。从基本 &lt;code&gt;MultiResolutionImage&lt;/code&gt; 图像中提取取决于屏幕分辨率的合适图像，并将其添加到图标列表中，同时从列表中删除基本分辨率图像。该 &lt;code&gt;icons&lt;/code&gt; 列表进行扫描从一开始就最合适的尺寸的图像。如果列表中包含几张相同尺寸的图像，则将使用第一张。</target>
        </trans-unit>
        <trans-unit id="3a3a03a08373e3a4eb0d5649cfecb26445106e34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; value must be an identity for the accumulator function. This means that for all &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;accumulator.apply(identity, t)&lt;/code&gt; is equal to &lt;code&gt;t&lt;/code&gt;. The &lt;code&gt;accumulator&lt;/code&gt; function must be an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associative&lt;/a&gt; function.</source>
          <target state="translated">的 &lt;code&gt;identity&lt;/code&gt; 值必须是蓄能器功能的标识。这意味着对于所有 &lt;code&gt;t&lt;/code&gt; ， &lt;code&gt;accumulator.apply(identity, t)&lt;/code&gt; 等于 &lt;code&gt;t&lt;/code&gt; 。该 &lt;code&gt;accumulator&lt;/code&gt; 功能必须是&lt;a href=&quot;package-summary#Associativity&quot;&gt;关联&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="15d70cdc09c9191c55557a009f3a78afb163bfc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; value must be an identity for the accumulator function. This means that for all &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;accumulator.apply(identity, x)&lt;/code&gt; is equal to &lt;code&gt;x&lt;/code&gt;. The &lt;code&gt;accumulator&lt;/code&gt; function must be an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associative&lt;/a&gt; function.</source>
          <target state="translated">的 &lt;code&gt;identity&lt;/code&gt; 值必须是蓄能器功能的标识。这意味着对于所有 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;accumulator.apply(identity, x)&lt;/code&gt; 等于 &lt;code&gt;x&lt;/code&gt; 。该 &lt;code&gt;accumulator&lt;/code&gt; 功能必须是&lt;a href=&quot;package-summary#Associativity&quot;&gt;关联&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="c7c434e8ee038c0b3fcfe01a6456babfb2b633e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; value must be an identity for the combiner function. This means that for all &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;combiner(identity, u)&lt;/code&gt; is equal to &lt;code&gt;u&lt;/code&gt;. Additionally, the &lt;code&gt;combiner&lt;/code&gt; function must be compatible with the &lt;code&gt;accumulator&lt;/code&gt; function; for all &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;, the following must hold:</source>
          <target state="translated">该 &lt;code&gt;identity&lt;/code&gt; 值必须是组合功能的身份。这意味着对于所有 &lt;code&gt;u&lt;/code&gt; ， &lt;code&gt;combiner(identity, u)&lt;/code&gt; 等于 &lt;code&gt;u&lt;/code&gt; 。此外， &lt;code&gt;combiner&lt;/code&gt; 功能必须与 &lt;code&gt;accumulator&lt;/code&gt; 功能兼容；对于所有 &lt;code&gt;u&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; ，必须满足以下条件：</target>
        </trans-unit>
        <trans-unit id="cb7b6822fbfe6353745706addd58f9b58b682324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ifAddress&lt;/code&gt; argument can be used on a multi-homed host for a &lt;code&gt;ServerSocket&lt;/code&gt; that will only accept connect requests to one of its addresses. If &lt;code&gt;ifAddress&lt;/code&gt; is null, it will accept connections on all local addresses. The socket is configured with the socket options (such as accept timeout) given to this factory.</source>
          <target state="translated">该 &lt;code&gt;ifAddress&lt;/code&gt; 参数可以多宿主主机的上使用 &lt;code&gt;ServerSocket&lt;/code&gt; 仅接受连接请求其地址之一。如果 &lt;code&gt;ifAddress&lt;/code&gt; 为null，它将接受所有本地地址上的连接。套接字配置有为此工厂提供的套接字选项（例如接受超时）。</target>
        </trans-unit>
        <trans-unit id="9d4aa0ca4766a00288d0853e4d6293a48f65d87d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignoreMetadata&lt;/code&gt; parameter, if set to &lt;code&gt;true&lt;/code&gt;, allows the reader to disregard any metadata encountered during the read. Subsequent calls to the &lt;code&gt;getStreamMetadata&lt;/code&gt; and &lt;code&gt;getImageMetadata&lt;/code&gt; methods may return &lt;code&gt;null&lt;/code&gt;, and an &lt;code&gt;IIOImage&lt;/code&gt; returned from &lt;code&gt;readAll&lt;/code&gt; may return &lt;code&gt;null&lt;/code&gt; from their &lt;code&gt;getMetadata&lt;/code&gt; method. Setting this parameter may allow the reader to work more efficiently. The reader may choose to disregard this setting and return metadata normally.</source>
          <target state="translated">如果将 &lt;code&gt;ignoreMetadata&lt;/code&gt; 参数设置为 &lt;code&gt;true&lt;/code&gt; ，则允许读者忽略读取过程中遇到的任何元数据。在后续调用 &lt;code&gt;getStreamMetadata&lt;/code&gt; 和 &lt;code&gt;getImageMetadata&lt;/code&gt; 方法可能返回 &lt;code&gt;null&lt;/code&gt; ，以及 &lt;code&gt;IIOImage&lt;/code&gt; 的从返回 &lt;code&gt;readAll&lt;/code&gt; 可能返回 &lt;code&gt;null&lt;/code&gt; 从他们 &lt;code&gt;getMetadata&lt;/code&gt; 方法。设置此参数可以使阅读器更有效地工作。读者可以选择忽略此设置并正常返回元数据。</target>
        </trans-unit>
        <trans-unit id="74a61b8b43c5d10d1b00563be9b1b6cef6be194e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;imageUpdate&lt;/code&gt; method of &lt;code&gt;Component&lt;/code&gt; incrementally draws an image on the component as more of the bits of the image are available.</source>
          <target state="translated">当图像的更多位可用时， &lt;code&gt;Component&lt;/code&gt; 的 &lt;code&gt;imageUpdate&lt;/code&gt; 方法将在该组件上递增绘制图像。</target>
        </trans-unit>
        <trans-unit id="fd6a40388fc0550eb7dfd1739f418989dfe9f308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;implies&lt;/code&gt; method is used by the AccessController to determine whether or not a requested permission is implied by another permission that is known to be valid in the current execution context.</source>
          <target state="translated">该 &lt;code&gt;implies&lt;/code&gt; 方法用于由AccessController以确定所请求的许可是否是由被称为是在当前执行上下文有效另一许可暗示。</target>
        </trans-unit>
        <trans-unit id="99323cb09ca7a1b5b3ed49e52564ae4467d979f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inactiveObject&lt;/code&gt; call informs the &lt;code&gt;ActivationMonitor&lt;/code&gt; that the remote object reference it holds for the object with the activation identifier, &lt;code&gt;id&lt;/code&gt;, is no longer valid. The monitor considers the reference associated with &lt;code&gt;id&lt;/code&gt; as a stale reference. Since the reference is considered stale, a subsequent &lt;code&gt;activate&lt;/code&gt; call for the same activation identifier results in re-activating the remote object.</source>
          <target state="translated">所述 &lt;code&gt;inactiveObject&lt;/code&gt; 将呼叫通知 &lt;code&gt;ActivationMonitor&lt;/code&gt; 远程对象引用它适用于具有激活标识符目的， &lt;code&gt;id&lt;/code&gt; ，不再有效。监视器将与 &lt;code&gt;id&lt;/code&gt; 关联的引用视为过时的引用。由于该参考被认为是陈旧的，因此对同一激活标识符的后续 &lt;code&gt;activate&lt;/code&gt; 调用会导致重新激活远程对象。</target>
        </trans-unit>
        <trans-unit id="dc20171b44b44f5f3758ac37b7d5a7ded6f19e83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; is defined to be out of bounds if any of the following inequalities is true:</source>
          <target state="translated">该 &lt;code&gt;index&lt;/code&gt; 被定义为出界如果任何下列不等式是真实的：</target>
        </trans-unit>
        <trans-unit id="5f5eaf7ade6f853439e4b56543435a4f43f085fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; parameter is the index of the name element to return. The element that is &lt;em&gt;closest&lt;/em&gt; to the root in the directory hierarchy has index &lt;code&gt;0&lt;/code&gt;. The element that is &lt;em&gt;farthest&lt;/em&gt; from the root has index &lt;a href=&quot;#getNameCount()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;index&lt;/code&gt; 参数是name元素来回报指数。在目录层次结构中&lt;em&gt;最接近&lt;/em&gt;根的元素的索引为 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;离&lt;/em&gt;根&lt;em&gt;最远&lt;/em&gt;的元素的索引&lt;a href=&quot;#getNameCount()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64642e3202227bf1eb96b4d1dcff39ebc286b611" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; parameter is the index of the name element to return. The element that is &lt;em&gt;closest&lt;/em&gt; to the root in the directory hierarchy has index &lt;code&gt;0&lt;/code&gt;. The element that is &lt;em&gt;farthest&lt;/em&gt; from the root has index &lt;a href=&quot;path#getNameCount--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;index&lt;/code&gt; 参数是name元素来回报指数。在目录层次结构中&lt;em&gt;最接近&lt;/em&gt;根的元素的索引为 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;离&lt;/em&gt;根&lt;em&gt;最远&lt;/em&gt;的元素的索引&lt;a href=&quot;path#getNameCount--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ba30d2da47964c5ec7ffd415d13cac0e4683bed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;infoflags&lt;/code&gt; argument should be the bitwise inclusive &lt;b&gt;OR&lt;/b&gt; of the following flags: &lt;code&gt;WIDTH&lt;/code&gt;, &lt;code&gt;HEIGHT&lt;/code&gt;, &lt;code&gt;PROPERTIES&lt;/code&gt;, &lt;code&gt;SOMEBITS&lt;/code&gt;, &lt;code&gt;FRAMEBITS&lt;/code&gt;, &lt;code&gt;ALLBITS&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;ABORT&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;infoflags&lt;/code&gt; 参数应该是按位&lt;b&gt;或&lt;/b&gt;以下标志： &lt;code&gt;WIDTH&lt;/code&gt; ， &lt;code&gt;HEIGHT&lt;/code&gt; ， &lt;code&gt;PROPERTIES&lt;/code&gt; ， &lt;code&gt;SOMEBITS&lt;/code&gt; ， &lt;code&gt;FRAMEBITS&lt;/code&gt; ， &lt;code&gt;ALLBITS&lt;/code&gt; ， &lt;code&gt;ERROR&lt;/code&gt; ， &lt;code&gt;ABORT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd34925c76b9aa7f124b7924e51f96a4065ec4cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;init&lt;/code&gt; handle describes the initial value of an additional optional loop-local variable. In each iteration, this loop-local variable, if present, will be passed to the &lt;code&gt;body&lt;/code&gt; and updated with the value returned from its invocation. The result of loop execution will be the final value of the additional loop-local variable (if present).</source>
          <target state="translated">该 &lt;code&gt;init&lt;/code&gt; 手柄描述了一种附加的可选循环局部变量的初始值。在每次迭代中，此循环局部变量（如果存在）将被传递给 &lt;code&gt;body&lt;/code&gt; 并使用其调用返回的值进行更新。循环执行的结果将是附加循环局部变量（如果存在）的最终值。</target>
        </trans-unit>
        <trans-unit id="ff497b3e440002ae66c4cff8239b566deecf6970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;init&lt;/code&gt;, and &lt;code&gt;marshalParams&lt;/code&gt; methods of &lt;code&gt;TransformService&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; and &lt;code&gt;DOMCryptoContext&lt;/code&gt; types.</source>
          <target state="translated">&lt;code&gt;TransformService&lt;/code&gt; 的 &lt;code&gt;init&lt;/code&gt; 和 &lt;code&gt;marshalParams&lt;/code&gt; 方法务必支持 &lt;code&gt;DOMStructure&lt;/code&gt; 和 &lt;code&gt;DOMCryptoContext&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="a4d191b328a1c5a3fb19ebaef345b041450f0653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initEvent&lt;/code&gt; method is used to initialize the value of an &lt;code&gt;Event&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;initEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;Event&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="e980ab2973cbdf463d4df8c8ce1591af9572002f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initEvent&lt;/code&gt; method is used to initialize the value of an &lt;code&gt;Event&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface. This method may only be called before the &lt;code&gt;Event&lt;/code&gt; has been dispatched via the &lt;code&gt;dispatchEvent&lt;/code&gt; method, though it may be called multiple times during that phase if necessary. If called multiple times the final invocation takes precedence. If called from a subclass of &lt;code&gt;Event&lt;/code&gt; interface only the values specified in the &lt;code&gt;initEvent&lt;/code&gt; method are modified, all other attributes are left unchanged.</source>
          <target state="translated">该 &lt;code&gt;initEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;Event&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。只能在通过 &lt;code&gt;dispatchEvent&lt;/code&gt; 方法调度 &lt;code&gt;Event&lt;/code&gt; 之前调用此方法，但是如有必要，可以在该阶段中多次调用此方法。如果多次调用，则最终调用优先。如果仅从 &lt;code&gt;Event&lt;/code&gt; 接口的子类调用，则仅修改 &lt;code&gt;initEvent&lt;/code&gt; 方法中指定的值，所有其他属性保持不变。</target>
        </trans-unit>
        <trans-unit id="2e79e9c0595f3db6eb879c2cd4bff42c0c8821e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initMouseEvent&lt;/code&gt; method is used to initialize the value of a &lt;code&gt;MouseEvent&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;initMouseEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;MouseEvent&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="fbeef5c0517fc941e5840401645ff8bb1740d90c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initMouseEvent&lt;/code&gt; method is used to initialize the value of a &lt;code&gt;MouseEvent&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface. This method may only be called before the &lt;code&gt;MouseEvent&lt;/code&gt; has been dispatched via the &lt;code&gt;dispatchEvent&lt;/code&gt; method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence.</source>
          <target state="translated">该 &lt;code&gt;initMouseEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;MouseEvent&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。只能在通过 &lt;code&gt;dispatchEvent&lt;/code&gt; 方法调度 &lt;code&gt;MouseEvent&lt;/code&gt; 之前调用此方法，但是如有必要，可以在该阶段中多次调用此方法。如果多次调用，则最终调用优先。</target>
        </trans-unit>
        <trans-unit id="625a8b0abe6c5b47d1eefb61955bc931458fce29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initMutationEvent&lt;/code&gt; method is used to initialize the value of a &lt;code&gt;MutationEvent&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;initMutationEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;MutationEvent&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="254b29b2d9aabd1ae0ea96ab048a74c10af149c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initMutationEvent&lt;/code&gt; method is used to initialize the value of a &lt;code&gt;MutationEvent&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface. This method may only be called before the &lt;code&gt;MutationEvent&lt;/code&gt; has been dispatched via the &lt;code&gt;dispatchEvent&lt;/code&gt; method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence.</source>
          <target state="translated">该 &lt;code&gt;initMutationEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;MutationEvent&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。仅在通过 &lt;code&gt;dispatchEvent&lt;/code&gt; 方法调度 &lt;code&gt;MutationEvent&lt;/code&gt; 之前，才可以调用此方法，尽管在必要时可以在该阶段多次调用此方法。如果多次调用，则最终调用优先。</target>
        </trans-unit>
        <trans-unit id="0031ccc968fa433b9c0ee69137ad1acff5549339" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initUIEvent&lt;/code&gt; method is used to initialize the value of a &lt;code&gt;UIEvent&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;initUIEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;UIEvent&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="f5e2a52bd2dedb43955ead95d35976c3258ced77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initUIEvent&lt;/code&gt; method is used to initialize the value of a &lt;code&gt;UIEvent&lt;/code&gt; created through the &lt;code&gt;DocumentEvent&lt;/code&gt; interface. This method may only be called before the &lt;code&gt;UIEvent&lt;/code&gt; has been dispatched via the &lt;code&gt;dispatchEvent&lt;/code&gt; method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence.</source>
          <target state="translated">该 &lt;code&gt;initUIEvent&lt;/code&gt; 方法用于初始化的值 &lt;code&gt;UIEvent&lt;/code&gt; 通过创建 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口。只能在通过 &lt;code&gt;dispatchEvent&lt;/code&gt; 方法调度 &lt;code&gt;UIEvent&lt;/code&gt; 之前调用此方法，但是如有必要，可以在该阶段中多次调用此方法。如果多次调用，则最终调用优先。</target>
        </trans-unit>
        <trans-unit id="178fa46f7783f7ca8be10feb795a8f432e6ce094" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialSize&lt;/code&gt; parameter may be used by the implementation as a &lt;em&gt;hint&lt;/em&gt; as to the initial number of tasks it may submit. For example, it may be used to indicate the initial number of threads that wait on I/O events.</source>
          <target state="translated">该实现可以将 &lt;code&gt;initialSize&lt;/code&gt; 参数用作有关它可能提交的任务的初始数量的&lt;em&gt;提示&lt;/em&gt;。例如，它可以用于指示等待I / O事件的线程的初始数量。</target>
        </trans-unit>
        <trans-unit id="1bd09b116084a74e12383d4253d1c5f87a806306" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; methods may each be called any number of times. If no &lt;code&gt;initialize&lt;/code&gt; method is called on a DSAKeyPairGenerator, each provider that implements this interface should supply (and document) a default initialization. Note that defaults may vary across different providers. Additionally, the default value for a provider may change in a future version. Therefore, it is recommended to explicitly initialize the DSAKeyPairGenerator instead of relying on provider-specific defaults.</source>
          <target state="translated">所述 &lt;code&gt;initialize&lt;/code&gt; 方法的每一个可以被称为任意次数。如果没有在DSAKeyPairGenerator上调用任何 &lt;code&gt;initialize&lt;/code&gt; 方法，则实现此接口的每个提供程序都应提供（并记录）默认的初始化。请注意，默认值在不同的提供程序中可能有所不同。此外，提供者的默认值可能会在将来的版本中更改。因此，建议显式初始化DSAKeyPairGenerator而不是依赖于提供程序特定的默认值。</target>
        </trans-unit>
        <trans-unit id="8e1910412b5ab4f4360c75fcf4e4c4f981f39033" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; methods may each be called any number of times. If no &lt;code&gt;initialize&lt;/code&gt; method is called on a DSAKeyPairGenerator, the default is to generate 1024-bit keys, using precomputed p, q and g parameters and an instance of SecureRandom as the random bit source.</source>
          <target state="translated">所述 &lt;code&gt;initialize&lt;/code&gt; 方法的每一个可以被称为任意次数。如果没有在DSAKeyPairGenerator上调用任何 &lt;code&gt;initialize&lt;/code&gt; 方法，则默认值为使用预计算的p，q和g参数以及SecureRandom实例作为随机位源来生成1024位密钥。</target>
        </trans-unit>
        <trans-unit id="e89c947619670b6f05ed77c9eb43708ff984ab4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;abstract&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;abstract&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="57a2bf2f87f99f529f820792d0d9541859c36200" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;final&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;final&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="b83b91795fa9f3dd467562df8b850ad43ca35b18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;interface&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;interface&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="6e6129e278d1c31b1641cf76868b23a7ccbc053b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;native&lt;/code&gt; modifier.</source>
          <target state="translated">表示本 &lt;code&gt;native&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="9487f7c45da0d56c561a74e7e315aad283ae33db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;private&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;private&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="d998015ddde224da2f2e242d06b1b5cda8342b93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;protected&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;protected&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="1ab9b738d34103d531a4ba5cdf4833da76ab4445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;public&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;public&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="cb450909d14452e1607d3359ccbe310b15e65773" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;static&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;static&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e48ba12a5c869896a959b271934ece28496f4515" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;strictfp&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;strictfp&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="ab15ce0d3f3e80624e13e8b8f7afdae7f2cc31b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;synchronized&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;synchronized&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="47c273abe027c89df6d6ce37e4c65a5d5f445ccc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;transient&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;transient&lt;/code&gt; 修改器的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="75d6fc286ca2b46ac7f2dfbb0cff289b6c5d7d46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;volatile&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;volatile&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="cfd98033227ef6b3a7f984e0cf8a786a155a86aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;interface&lt;/code&gt; modifier discussed in this class is not a true modifier in the Java language and it appears after all other modifiers listed by this method. This method may return a string of modifiers that are not valid modifiers of a Java entity; in other words, no checking is done on the possible validity of the combination of modifiers represented by the input. Note that to perform such checking for a known kind of entity, such as a constructor or method, first AND the argument of &lt;code&gt;toString&lt;/code&gt; with the appropriate mask from a method like &lt;a href=&quot;#constructorModifiers()&quot;&gt;&lt;code&gt;constructorModifiers()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#methodModifiers()&quot;&gt;&lt;code&gt;methodModifiers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类中讨论的 &lt;code&gt;interface&lt;/code&gt; 修饰符在Java语言中不是真正的修饰符，它出现在此方法列出的所有其他修饰符之后。此方法可能会返回不是Java实体的有效修饰符的修饰符字符串。换句话说，不检查输入代表的修饰符组合的可能有效性。请注意，要对已知类型的实体（例如构造函数或方法）执行此类检查，请首先将 &lt;code&gt;toString&lt;/code&gt; 的参数与来自诸如&lt;a href=&quot;#constructorModifiers()&quot;&gt; &lt;code&gt;constructorModifiers()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#methodModifiers()&quot;&gt; &lt;code&gt;methodModifiers()&lt;/code&gt; 之&lt;/a&gt;类的方法的适当掩码进行&amp;ldquo;与&amp;rdquo;运算。</target>
        </trans-unit>
        <trans-unit id="cfcd94506157aeb895a9c9c21b22d64a6d79a08a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;interface&lt;/code&gt; modifier discussed in this class is not a true modifier in the Java language and it appears after all other modifiers listed by this method. This method may return a string of modifiers that are not valid modifiers of a Java entity; in other words, no checking is done on the possible validity of the combination of modifiers represented by the input. Note that to perform such checking for a known kind of entity, such as a constructor or method, first AND the argument of &lt;code&gt;toString&lt;/code&gt; with the appropriate mask from a method like &lt;a href=&quot;modifier#constructorModifiers--&quot;&gt;&lt;code&gt;constructorModifiers()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;modifier#methodModifiers--&quot;&gt;&lt;code&gt;methodModifiers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类中讨论的 &lt;code&gt;interface&lt;/code&gt; 修饰符在Java语言中不是真正的修饰符，它出现在此方法列出的所有其他修饰符之后。此方法可能返回不是Java实体的有效修饰符的修饰符字符串。换句话说，不检查输入代表的修饰符组合的可能有效性。请注意，要对已知种类的实体（例如构造函数或方法）执行此类检查，请首先将 &lt;code&gt;toString&lt;/code&gt; 的参数与来自诸如&lt;a href=&quot;modifier#constructorModifiers--&quot;&gt; &lt;code&gt;constructorModifiers()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;modifier#methodModifiers--&quot;&gt; &lt;code&gt;methodModifiers()&lt;/code&gt; 之&lt;/a&gt;类的方法的适当掩码进行&amp;ldquo;与&amp;rdquo; 运算。</target>
        </trans-unit>
        <trans-unit id="58627a573928318b0e86229e8345a42317bf4581" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invokedynamic&lt;/code&gt; instruction makes use of bootstrap &lt;code&gt;MethodHandle&lt;/code&gt; constants to dynamically resolve &lt;code&gt;CallSite&lt;/code&gt; objects for custom method invocation behavior.</source>
          <target state="translated">该 &lt;code&gt;invokedynamic&lt;/code&gt; 指令利用自举的 &lt;code&gt;MethodHandle&lt;/code&gt; 常数来动态地解析 &lt;code&gt;CallSite&lt;/code&gt; 对象的自定义方法调用的行为。</target>
        </trans-unit>
        <trans-unit id="665a37a65bad1ed4e2e3237e067bfa95f31eb667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isContainer&lt;/code&gt;&lt;a href=&quot;../../java/beans/featuredescriptor#getValue(java.lang.String)&quot;&gt;&lt;code&gt;feature attribute&lt;/code&gt;&lt;/a&gt; was introduced primarily for the Swing library. All Swing components extend the &lt;a href=&quot;../../java/awt/container&quot;&gt;&lt;code&gt;Container&lt;/code&gt;&lt;/a&gt; class by design, so the builder tool assumes that all Swing components are containers. The &lt;a href=&quot;../../java/beans/beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt; classes with the &lt;code&gt;isContainer&lt;/code&gt; attribute allow to directly specify whether a Swing component is a container or not.</source>
          <target state="translated">该 &lt;code&gt;isContainer&lt;/code&gt; &lt;a href=&quot;../../java/beans/featuredescriptor#getValue(java.lang.String)&quot;&gt; &lt;code&gt;feature attribute&lt;/code&gt; &lt;/a&gt;引入主要是为了Swing库。所有Swing组件都通过设计扩展了&lt;a href=&quot;../../java/awt/container&quot;&gt; &lt;code&gt;Container&lt;/code&gt; &lt;/a&gt;类，因此构建器工具假定所有Swing组件都是容器。具有 &lt;code&gt;isContainer&lt;/code&gt; 属性的&lt;a href=&quot;../../java/beans/beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt;类允许直接指定Swing组件是否为容器。</target>
        </trans-unit>
        <trans-unit id="fbbe4efb7b82c12416112b91d882adb2461b3096" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isEnabled&lt;/code&gt; method</source>
          <target state="translated">该 &lt;code&gt;isEnabled&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="f254cbd5db1e9d15f5755ade659caa4db237d900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isMixerSupported&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for all the info objects returned by this method. The corresponding mixer instances for the info objects are returned by the &lt;code&gt;getMixer&lt;/code&gt; method.</source>
          <target state="translated">对于 &lt;code&gt;isMixerSupported&lt;/code&gt; 方法返回的所有信息对象，isMixerSupported方法均返回 &lt;code&gt;true&lt;/code&gt; 。信息对象的相应混合器实例由 &lt;code&gt;getMixer&lt;/code&gt; 方法返回。</target>
        </trans-unit>
        <trans-unit id="cc647a7047b23398301d649428d6203301b91e91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iterations&lt;/code&gt; handle must not be &lt;code&gt;null&lt;/code&gt;, and must return the type &lt;code&gt;int&lt;/code&gt;, referred to here as &lt;code&gt;I&lt;/code&gt; in parameter type lists.</source>
          <target state="translated">该 &lt;code&gt;iterations&lt;/code&gt; 的句柄不得 &lt;code&gt;null&lt;/code&gt; ，且必须返回类型 &lt;code&gt;int&lt;/code&gt; ，这里称为 &lt;code&gt;I&lt;/code&gt; 在参数类型列表。</target>
        </trans-unit>
        <trans-unit id="faab6cad1b99da33b71348933be79609cd1c2d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.awt.TextArea&lt;/code&gt; could be monitored for changes by adding a &lt;code&gt;TextListener&lt;/code&gt; for &lt;code&gt;TextEvent&lt;/code&gt;s. In the &lt;code&gt;JTextComponent&lt;/code&gt; based components, changes are broadcasted from the model via a &lt;code&gt;DocumentEvent&lt;/code&gt; to &lt;code&gt;DocumentListeners&lt;/code&gt;. The &lt;code&gt;DocumentEvent&lt;/code&gt; gives the location of the change and the kind of change if desired. The code fragment might look something like:</source>
          <target state="translated">该 &lt;code&gt;java.awt.TextArea&lt;/code&gt; 中可以更改通过添加一个被监控 &lt;code&gt;TextListener&lt;/code&gt; 为 &lt;code&gt;TextEvent&lt;/code&gt; ,并将秒。在基于 &lt;code&gt;JTextComponent&lt;/code&gt; 的组件中，更改从模型通过 &lt;code&gt;DocumentEvent&lt;/code&gt; 广播到 &lt;code&gt;DocumentListeners&lt;/code&gt; 。该 &lt;code&gt;DocumentEvent&lt;/code&gt; 给出了更改的位置，如果需要更改的类型。该代码片段可能类似于：</target>
        </trans-unit>
        <trans-unit id="55efcc9383d4d056ce334accbd6b2bac39494936" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.awt.TextArea&lt;/code&gt; has the ability to do line wrapping. This was controlled by the horizontal scrolling policy. Since scrolling is not done by &lt;code&gt;JTextArea&lt;/code&gt; directly, backward compatibility must be provided another way. &lt;code&gt;JTextArea&lt;/code&gt; has a bound property for line wrapping that controls whether or not it will wrap lines. By default, the line wrapping property is set to false (not wrapped).</source>
          <target state="translated">该 &lt;code&gt;java.awt.TextArea&lt;/code&gt; 中必须做自动换行的能力。这由水平滚动策略控制。由于滚动不是由 &lt;code&gt;JTextArea&lt;/code&gt; 直接完成的，因此必须以另一种方式提供向后兼容性。 &lt;code&gt;JTextArea&lt;/code&gt; 具有用于换行的bound属性，该属性控制是否换行。默认情况下，自动换行属性设置为false（不自动换行）。</target>
        </trans-unit>
        <trans-unit id="c0fcfe43cbce6a18be4a70c21673c0e92d35fccc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.awt.TextArea&lt;/code&gt; internally handles scrolling. &lt;code&gt;JTextArea&lt;/code&gt; is different in that it doesn't manage scrolling, but implements the swing &lt;code&gt;Scrollable&lt;/code&gt; interface. This allows it to be placed inside a &lt;code&gt;JScrollPane&lt;/code&gt; if scrolling behavior is desired, and used directly if scrolling is not desired.</source>
          <target state="translated">该 &lt;code&gt;java.awt.TextArea&lt;/code&gt; 中的内部处理滚动。 &lt;code&gt;JTextArea&lt;/code&gt; 的不同之处在于，它不管理滚动，但是实现了Swing &lt;code&gt;Scrollable&lt;/code&gt; 接口。如果需要滚动行为，则可以将其放置在 &lt;code&gt;JScrollPane&lt;/code&gt; 内部；如果不需要滚动，则可以将其直接使用。</target>
        </trans-unit>
        <trans-unit id="0db34ffc0a9406c8096ce234b9fa75533ba4eff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.awt.TextField&lt;/code&gt; could be monitored for changes by adding a &lt;code&gt;TextListener&lt;/code&gt; for &lt;code&gt;TextEvent&lt;/code&gt;'s. In the &lt;code&gt;JTextComponent&lt;/code&gt; based components, changes are broadcasted from the model via a &lt;code&gt;DocumentEvent&lt;/code&gt; to &lt;code&gt;DocumentListeners&lt;/code&gt;. The &lt;code&gt;DocumentEvent&lt;/code&gt; gives the location of the change and the kind of change if desired. The code fragment might look something like:</source>
          <target state="translated">该 &lt;code&gt;java.awt.TextField&lt;/code&gt; 中可以更改通过添加一个被监控 &lt;code&gt;TextListener&lt;/code&gt; 用于 &lt;code&gt;TextEvent&lt;/code&gt; ,并将的。在基于 &lt;code&gt;JTextComponent&lt;/code&gt; 的组件中，更改从模型通过 &lt;code&gt;DocumentEvent&lt;/code&gt; 广播到 &lt;code&gt;DocumentListeners&lt;/code&gt; 。该 &lt;code&gt;DocumentEvent&lt;/code&gt; 给出了更改的位置，如果需要更改的类型。该代码片段可能类似于：</target>
        </trans-unit>
        <trans-unit id="bec8b9be4298b00c09430efa2b0f3eff6e4f2e07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.lang.invoke&lt;/code&gt; package contains dynamic language support provided directly by the Java core class libraries and virtual machine.</source>
          <target state="translated">该 &lt;code&gt;java.lang.invoke&lt;/code&gt; 包中包含的Java核心类库和虚拟机直接提供动态语言的支持。</target>
        </trans-unit>
        <trans-unit id="b0a41816ff2f5ea5a0a95f8f418989d42132101f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.lang.invoke&lt;/code&gt; package provides low-level primitives for interacting with the Java Virtual Machine.</source>
          <target state="translated">该 &lt;code&gt;java.lang.invoke&lt;/code&gt; 包提供低级原与Java虚拟机交互。</target>
        </trans-unit>
        <trans-unit id="8f060dd8b6798a7705664964cbd779c5052966d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.lang.runtime&lt;/code&gt; package provides low-level runtime support for the Java language.</source>
          <target state="translated">该 &lt;code&gt;java.lang.runtime&lt;/code&gt; 包提供了Java语言低级运行时的支持。</target>
        </trans-unit>
        <trans-unit id="e2e6b7ef82a944f100ddc377e04a645035f44c50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.nio&lt;/code&gt; package defines the buffer classes, which are used throughout the NIO APIs. The charset API is defined in the &lt;a href=&quot;charset/package-summary&quot;&gt;&lt;code&gt;java.nio.charset&lt;/code&gt;&lt;/a&gt; package, and the channel and selector APIs are defined in the &lt;a href=&quot;channels/package-summary&quot;&gt;&lt;code&gt;java.nio.channels&lt;/code&gt;&lt;/a&gt; package. Each of these subpackages has its own service-provider (SPI) subpackage, the contents of which can be used to extend the platform's default implementations or to construct alternative implementations.</source>
          <target state="translated">所述 &lt;code&gt;java.nio&lt;/code&gt; 包定义了缓冲器类，它们在整个NIO API的使用。字符集API在&lt;a href=&quot;charset/package-summary&quot;&gt; &lt;code&gt;java.nio.charset&lt;/code&gt; &lt;/a&gt;包中定义，而通道和选择器API在&lt;a href=&quot;channels/package-summary&quot;&gt; &lt;code&gt;java.nio.channels&lt;/code&gt; &lt;/a&gt;包中定义。这些子程序包中的每一个都有其自己的服务提供商（SPI）子程序包，其内容可用于扩展平台的默认实现或构建替代实现。</target>
        </trans-unit>
        <trans-unit id="169158b25e43c0b1b051996b7d7ecf8990270082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.security.ProtectionDomain&lt;/code&gt; of a proxy class is the same as that of system classes loaded by the bootstrap class loader, such as &lt;code&gt;java.lang.Object&lt;/code&gt;, because the code for a proxy class is generated by trusted system code. This protection domain will typically be granted &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">代理类的 &lt;code&gt;java.security.ProtectionDomain&lt;/code&gt; 与引导类加载器加载的系统类的 &lt;code&gt;java.lang.Object&lt;/code&gt; 相同，因为代理类的代码是由受信任的系统代码生成的。通常会将此保护域授予 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9813f685206a1823081b6d834a2cc39d317ab3f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.security.acl &lt;/code&gt; package provides the interfaces to the ACL and related data structures (ACL entries, groups, permissions, etc.), and the &lt;code&gt;sun.security.acl &lt;/code&gt; classes provide a default implementation of the interfaces. For example, &lt;code&gt;java.security.acl.Acl &lt;/code&gt; provides the interface to an ACL and the &lt;code&gt;sun.security.acl.AclImpl &lt;/code&gt; class provides the default implementation of the interface.</source>
          <target state="translated">的 &lt;code&gt;java.security.acl &lt;/code&gt; 中包提供接口到ACL和相关数据结构（ACL条目，组，权限等），和 &lt;code&gt;sun.security.acl &lt;/code&gt; 类提供接口的一个默认的实现。例如， &lt;code&gt;java.security.acl.Acl &lt;/code&gt; 提供ACL的接口，而 &lt;code&gt;sun.security.acl.AclImpl &lt;/code&gt; 类提供接口的默认实现。</target>
        </trans-unit>
        <trans-unit id="cfb4c2fdc7d8d17ba626b9a63de7a2721320820c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.security.acl.Acl &lt;/code&gt; interface extends the &lt;code&gt;java.security.acl.Owner &lt;/code&gt; interface. The Owner interface is used to maintain a list of owners for each ACL. Only owners are allowed to modify an ACL. For example, only an owner can call the ACL's &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry to the ACL.</source>
          <target state="translated">该 &lt;code&gt;java.security.acl.Acl &lt;/code&gt; 中的接口扩展了 &lt;code&gt;java.security.acl.Owner &lt;/code&gt; 接口。所有者接口用于维护每个ACL的所有者列表。只允许所有者修改ACL。例如，只有所有者可以调用ACL的 &lt;code&gt;addEntry&lt;/code&gt; 方法来向ACL添加新的ACL条目。</target>
        </trans-unit>
        <trans-unit id="784b90ba50939cbb669846b289f22423e455bd4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.sql&lt;/code&gt; package contains API for the following:</source>
          <target state="translated">该 &lt;code&gt;java.sql&lt;/code&gt; 中的包中包含了以下API：</target>
        </trans-unit>
        <trans-unit id="c584f80333ee86bf0587299c7f49da992c3a95b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.time.chrono&lt;/code&gt; package contains the calendar neutral API &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chrono/chronolocaldatetime&quot;&gt;&lt;code&gt;ChronoLocalDateTime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chrono/chronozoneddatetime&quot;&gt;&lt;code&gt;ChronoZonedDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chrono/era&quot;&gt;&lt;code&gt;Era&lt;/code&gt;&lt;/a&gt;. This is intended for use by applications that need to use localized calendars. It is recommended that applications use the ISO-8601 date and time classes from this package across system boundaries, such as to the database or across the network. The calendar neutral API should be reserved for interactions with users.</source>
          <target state="translated">该 &lt;code&gt;java.time.chrono&lt;/code&gt; 包包含日历中立API &lt;a href=&quot;chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;chrono/chronolocaldatetime&quot;&gt; &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;chrono/chronozoneddatetime&quot;&gt; &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;chrono/era&quot;&gt; &lt;code&gt;Era&lt;/code&gt; &lt;/a&gt;。该文件供需要使用本地化日历的应用程序使用。建议应用程序跨系统边界（例如到数据库或跨网络）使用此程序包中的ISO-8601日期和时间类。日历中性API应该保留用于与用户进行交互。</target>
        </trans-unit>
        <trans-unit id="03e8a4f31755534e88e5baa019171c02ab0e0e1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.util.jar&lt;/code&gt; package is based on the following specifications:</source>
          <target state="translated">该 &lt;code&gt;java.util.jar&lt;/code&gt; 中的包基于以下规范：</target>
        </trans-unit>
        <trans-unit id="dd3f9283b71471748cf9a84dacce07bc07e230bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.imageio.spi&lt;/code&gt; package contains service provider interfaces for reading, writing, and transcoding images, and obtaining image input and output streams, as well as a run-time registry that discovers installed instances of Image I/O service providers and allows new instances to be registered dynamically.</source>
          <target state="translated">的 &lt;code&gt;javax.imageio.spi&lt;/code&gt; 中包中包含的服务提供商接口，用于读，写，和转码的图像，并获得图像输入和输出流，以及一个运行时的注册表，安装发现的I / O服务提供商图像实例，并允许新的实例进行动态注册。</target>
        </trans-unit>
        <trans-unit id="31f5723f716d2e10c3dc95d349885c1c4063b2cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.imageio.spi&lt;/code&gt; package contains service provider interfaces for reading, writing, and transcoding images, and obtaining input and output streams, as well as a run-time registry that discovers installed service provider instances and allows new instances to be registered dynamically.</source>
          <target state="translated">该 &lt;code&gt;javax.imageio.spi&lt;/code&gt; 中的包中包含用于读取，写入和转码图像，并获得输入和输出流服务提供者接口，以及所安装发现的服务提供商实例，并允许新的实例动态地注册一个运行时注册表。</target>
        </trans-unit>
        <trans-unit id="2f9893bf2cb21c5852d399c228329581eed4bc85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.print.attribute&lt;/code&gt; package describes the types of attributes and how they can be collected into sets. The &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; package enumerates all of the standard attributes supported by the API, most of which are implementations of attributes specified in the IETF Specification, &lt;a href=&quot;http://www.ietf.org/rfc/rfc2911.txt&quot;&gt; RFC 2911 Internet Printing Protocol, 1.1: Model and Semantics&lt;/a&gt;, dated September 2000. The attributes specified in &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; include common capabilities, such as: resolution, copies, media sizes, job priority, and page ranges.</source>
          <target state="translated">该 &lt;code&gt;javax.print.attribute&lt;/code&gt; 中的包描述了属性类型，以及它们如何被收集到集。的 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中包枚举所有由API支持的标准属性，其中大部分是在IETF规范中指定的属性的实现的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2911.txt&quot;&gt;RFC 2911网络打印协议，1.1：模型和语义&lt;/a&gt;，日期为2000年9月 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中指定的属性包括一些常用功能，例如：分辨率，副本，介质尺寸，作业优先级和页面范围。</target>
        </trans-unit>
        <trans-unit id="c52c82c2dc7611fe0c69651dc489e948a8470acb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.print.attribute&lt;/code&gt; package describes the types of attributes and how they can be collected into sets. The &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; package enumerates all of the standard attributes supported by the API, most of which are implementations of attributes specified in the IETF Specification, &lt;a href=&quot;http://www.ietf.org/rfc/rfc2911.txt&quot;&gt;RFC 2911 Internet Printing Protocol, 1.1: Model and Semantics&lt;/a&gt;, dated September 2000. The attributes specified in &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; include common capabilities, such as: resolution, copies, media sizes, job priority, and page ranges.</source>
          <target state="translated">该 &lt;code&gt;javax.print.attribute&lt;/code&gt; 中的包描述了属性类型，以及它们如何被收集到集。的 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中包枚举所有由API支持的标准属性，其中大部分是在IETF规范中指定的属性的实现的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2911.txt&quot;&gt;RFC 2911网络打印协议，1.1：模型和语义&lt;/a&gt;，日期为2000年9月 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中指定的属性包括一些常用功能，例如：分辨率，副本，介质尺寸，作业优先级和页面范围。</target>
        </trans-unit>
        <trans-unit id="f2cf594265efb7b9fc2edd8226233f1ddb5455a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.print.attribute&lt;/code&gt; package describes the types of attributes and how they can be collected into sets. The &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; package enumerates all of the standard attributes supported by the API, most of which are implementations of attributes specified in the IETF Specification, &lt;a href=&quot;https://www.ietf.org/rfc/rfc2911.txt&quot;&gt;RFC 2911 Internet Printing Protocol, 1.1: Model and Semantics&lt;/a&gt;, dated September 2000. The attributes specified in &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; include common capabilities, such as: resolution, copies, media sizes, job priority, and page ranges.</source>
          <target state="translated">该 &lt;code&gt;javax.print.attribute&lt;/code&gt; 中的包描述了属性类型，以及它们如何被收集到集。的 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中包枚举所有由API支持的标准属性，其中大部分是在IETF规范中指定的属性的实现的&lt;a href=&quot;https://www.ietf.org/rfc/rfc2911.txt&quot;&gt;RFC 2911网络打印协议，1.1：模型和语义&lt;/a&gt;，日期为2000年9月 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中指定的属性包括一些常用功能，例如：分辨率，副本，介质尺寸，作业优先级和页面范围。</target>
        </trans-unit>
        <trans-unit id="f1ac81c4983fd4e99cf0a56e6178b754e13e7442" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.print.attribute&lt;/code&gt; package includes &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt; as a concrete implementation of the attribute set interface. &lt;code&gt;HashAttributeSet&lt;/code&gt; provides an attribute set based on a hash map. You can use this implementation or provide your own implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;javax.print.attribute&lt;/code&gt; 中封装包括&lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt;作为一个具体实现该属性集的接口。 &lt;code&gt;HashAttributeSet&lt;/code&gt; 提供基于哈希图的属性集。您可以使用此实现，也可以提供自己的 &lt;code&gt;AttributeSet&lt;/code&gt; 接口实现。</target>
        </trans-unit>
        <trans-unit id="ce40bf00e14dc3ae69324c9a349e2c2ebf3d4866" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.sql&lt;/code&gt; package provides for the following:</source>
          <target state="translated">所述 &lt;code&gt;javax.sql&lt;/code&gt; 包提供了以下情况：</target>
        </trans-unit>
        <trans-unit id="054bef0e67b4c84386043a510c836ef1eefccd8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.sql&lt;/code&gt; package provides the preferred way to make a connection with a data source. The &lt;code&gt;DriverManager&lt;/code&gt; class, the original mechanism, is still valid, and code using it will continue to run. However, the newer &lt;code&gt;DataSource&lt;/code&gt; mechanism is preferred because it offers many advantages over the &lt;code&gt;DriverManager&lt;/code&gt; mechanism.</source>
          <target state="translated">的 &lt;code&gt;javax.sql&lt;/code&gt; 中包提供的优选的方式，使与数据源的连接。在 &lt;code&gt;DriverManager&lt;/code&gt; 的类，原有的实现机制，仍然是有效的，并使用它的代码将继续运行。但是，较新的 &lt;code&gt;DataSource&lt;/code&gt; 机制是首选的，因为它与 &lt;code&gt;DriverManager&lt;/code&gt; 机制相比具有许多优点。</target>
        </trans-unit>
        <trans-unit id="78270c76347c7770cb655e4c785215d8bdb0d512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.xml.catalog.defer&lt;/code&gt; property as described in item &lt;a href=&quot;catalogfeatures#DEFER&quot;&gt;DEFER&lt;/a&gt; of the Catalog Features table.</source>
          <target state="translated">如Catalog Features表的&lt;a href=&quot;catalogfeatures#DEFER&quot;&gt;DEFER&lt;/a&gt;项目中所述的 &lt;code&gt;javax.xml.catalog.defer&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="15d2ad6f93e03730ebc25b9f11249586e69ac782" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property as described in item &lt;a href=&quot;catalogfeatures#FILES&quot;&gt;FILES&lt;/a&gt; of the Catalog Features table.</source>
          <target state="translated">如Catalog Features表的&lt;a href=&quot;catalogfeatures#FILES&quot;&gt;FILES&lt;/a&gt;项中所述的 &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="9fc2f2e095ade91fa2f052d206896d8dfe4877e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.xml.catalog.prefer&lt;/code&gt; property as described in item &lt;a href=&quot;catalogfeatures#PREFER&quot;&gt;PREFER&lt;/a&gt; of the Catalog Features table.</source>
          <target state="translated">&amp;ldquo; Catalog Features&amp;rdquo;表的&amp;ldquo; &lt;a href=&quot;catalogfeatures#PREFER&quot;&gt;PREFER&lt;/a&gt; &amp;rdquo;项中描述的 &lt;code&gt;javax.xml.catalog.prefer&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="db3821d6c87a43457aa9b8813d01a7019a6129e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; property as described in item &lt;a href=&quot;catalogfeatures#RESOLVE&quot;&gt;RESOLVE&lt;/a&gt; of the Catalog Features table.</source>
          <target state="translated">如Catalog Features表的&lt;a href=&quot;catalogfeatures#RESOLVE&quot;&gt;RESOLVE&lt;/a&gt;项中所述的 &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="93789cdb1067b60dea1052c68162e9476ca283fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jaxp.properties&lt;/code&gt; file is typically in the conf directory of the Java installation. The file is read only once by the JAXP implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any properties in &lt;code&gt;jaxp.properties&lt;/code&gt; after it has been read.</source>
          <target state="translated">该 &lt;code&gt;jaxp.properties&lt;/code&gt; 文件通常在Java安装的conf目录。JAXP实现仅对该文件读取一次，然后将其值缓存以备将来使用。如果在第一次尝试从文件读取时文件不存在，则不会再尝试检查其是否存在。 &lt;code&gt;jaxp.properties&lt;/code&gt; 中的任何属性的值在读取后都无法更改。</target>
        </trans-unit>
        <trans-unit id="e2a7485770f758bc31860b6c07b8541a8b9eeb14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jdbc.drivers&lt;/code&gt; system property which contains a colon separated list of fully qualified class names of JDBC drivers. Each driver is loaded using the &lt;a href=&quot;../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt;:</source>
          <target state="translated">该 &lt;code&gt;jdbc.drivers&lt;/code&gt; 中包含一个冒号系统属性分开的JDBC驱动程序的完全限定类名的列表。每个驱动程序都使用&lt;a href=&quot;../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;系统类加载器加载&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a71eaf9975dc38ac7aef813701422744379f589d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jpackage&lt;/code&gt; tool is not thread-safe. An application should not call either of the &lt;a href=&quot;../java.base/java/util/spi/toolprovider&quot;&gt;&lt;code&gt;ToolProvider&lt;/code&gt;&lt;/a&gt;&lt;code&gt;run&lt;/code&gt; methods concurrently, even with separate &lt;code&gt;&quot;jpackage&quot;&lt;/code&gt;&lt;code&gt;ToolProvider&lt;/code&gt; instances, or undefined behavior may result.</source>
          <target state="translated">该 &lt;code&gt;jpackage&lt;/code&gt; 的工具是不是线程安全的。即使使用单独的 &lt;code&gt;&quot;jpackage&quot;&lt;/code&gt; &lt;code&gt;ToolProvider&lt;/code&gt; 实例，应用程序也不应同时调用这两个&lt;a href=&quot;../java.base/java/util/spi/toolprovider&quot;&gt; &lt;code&gt;ToolProvider&lt;/code&gt; &lt;/a&gt; &lt;code&gt;run&lt;/code&gt; 方法，否则可能会导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="a4512a267bf8a4a8b628ff06249f45a97a9013e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kind&lt;/code&gt; of a directive.</source>
          <target state="translated">指令的 &lt;code&gt;kind&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="766e65fec5bf118351de7f21179d89ba7379dbda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kind&lt;/code&gt; of an element.</source>
          <target state="translated">元素的 &lt;code&gt;kind&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="583ea0cb6650b486f04f1d06cd030a009d684d42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;krb5.conf&lt;/code&gt; file is formatted in the Windows INI file style, which contains a series of relations grouped into different sections. Each relation contains a key and a value, the value can be an arbitrary string or a boolean value. A boolean value can be one of &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, or &quot;no&quot;, and values are case-insensitive.</source>
          <target state="translated">该 &lt;code&gt;krb5.conf&lt;/code&gt; 的文件在Windows INI文件的风格，其中包含了一系列组合成不同的部分关系的格式化。每个关系都包含一个键和一个值，该值可以是任意字符串或布尔值。布尔值可以是&amp;ldquo; true&amp;rdquo;，&amp;ldquo; false&amp;rdquo;，&amp;ldquo; yes&amp;rdquo;或&amp;ldquo; no&amp;rdquo;之一，并且值不区分大小写。</target>
        </trans-unit>
        <trans-unit id="fbe5ef5eb552727a780a36060063e8f5dc9148f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;layeredPane&lt;/code&gt; fills the entire viewable area of the &lt;code&gt;JRootPane&lt;/code&gt;. (bounds - insets)</source>
          <target state="translated">该 &lt;code&gt;layeredPane&lt;/code&gt; 填充的整个可视区域 &lt;code&gt;JRootPane&lt;/code&gt; 。（界限-插图）</target>
        </trans-unit>
        <trans-unit id="3cfb47b698c324c8e60c3a7f81085135ef605f6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;layeredPane&lt;/code&gt; is the parent of all children in the &lt;code&gt;JRootPane&lt;/code&gt; -- both as the direct parent of the menu and the grandparent of all components added to the &lt;code&gt;contentPane&lt;/code&gt;. It is an instance of &lt;code&gt;JLayeredPane&lt;/code&gt;, which provides the ability to add components at several layers. This capability is very useful when working with menu popups, dialog boxes, and dragging -- situations in which you need to place a component on top of all other components in the pane.</source>
          <target state="translated">该 &lt;code&gt;layeredPane&lt;/code&gt; 是在所有儿童家长 &lt;code&gt;JRootPane&lt;/code&gt; -既是菜单的直接父，并添加到所有组件的祖父 &lt;code&gt;contentPane&lt;/code&gt; 。它是 &lt;code&gt;JLayeredPane&lt;/code&gt; 的实例，它提供了在多个层添加组件的功能。当使用菜单弹出窗口，对话框和拖动时，此功能非常有用。在这种情况下，您需要将组件放置在窗格中所有其他组件的顶部。</target>
        </trans-unit>
        <trans-unit id="bbb82873975dbeba0e74c27fbee85cbfbbfbdc0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ldc&lt;/code&gt; instruction makes use of bootstrap &lt;code&gt;MethodHandle&lt;/code&gt; constants to dynamically resolve custom constant values.</source>
          <target state="translated">该 &lt;code&gt;ldc&lt;/code&gt; 指令利用自举的 &lt;code&gt;MethodHandle&lt;/code&gt; 常数来动态地解析定制的恒定值。</target>
        </trans-unit>
        <trans-unit id="a5fbfe70cef778b32594cced3a732339cbc1acf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; argument is negative.</source>
          <target state="translated">所述 &lt;code&gt;length&lt;/code&gt; 参数为负。</target>
        </trans-unit>
        <trans-unit id="5c30faee739e118e9dbf221fbacf126dc2e548ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; argument must be less than or equal to &lt;code&gt;buf.length&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;length&lt;/code&gt; 参数必须是小于或等于 &lt;code&gt;buf.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1ab860b5d9fdfdc8cacefe29fa6bee88d721891" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; parameter controls the number of times the pattern is applied and therefore affects the length of the resulting array.</source>
          <target state="translated">的 &lt;code&gt;limit&lt;/code&gt; 参数控制的被施加图案的次数，并因此影响所得阵列的长度。</target>
        </trans-unit>
        <trans-unit id="a20aaa21bfe3d598720524fef65f51974af49fb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; parameter controls the number of times the pattern is applied and therefore affects the length of the resulting array. If the limit</source>
          <target state="translated">的 &lt;code&gt;limit&lt;/code&gt; 参数控制的被施加图案的次数，并因此影响所得阵列的长度。如果极限</target>
        </trans-unit>
        <trans-unit id="7227cc8a8f47600f7a135282736709ff73dd62b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; parameter locates the directory entry to create. The &lt;code&gt;existing&lt;/code&gt; parameter is the path to an existing file. This method creates a new directory entry for the file so that it can be accessed using &lt;code&gt;link&lt;/code&gt; as the path. On some file systems this is known as creating a &quot;hard link&quot;. Whether the file attributes are maintained for the file or for each directory entry is file system specific and therefore not specified. Typically, a file system requires that all links (directory entries) for a file be on the same file system. Furthermore, on some platforms, the Java virtual machine may require to be started with implementation specific privileges to create hard links or to create links to directories.</source>
          <target state="translated">该 &lt;code&gt;link&lt;/code&gt; 参数所在的目录项创建。在 &lt;code&gt;existing&lt;/code&gt; 参数是路径到现有文件。此方法为文件创建一个新的目录条目，以便可以使用 &lt;code&gt;link&lt;/code&gt; 作为路径对其进行访问。在某些文件系统上，这被称为创建&amp;ldquo;硬链接&amp;rdquo;。为文件还是为每个目录条目维护文件属性是特定于文件系统的，因此未指定。通常，文件系统要求文件的所有链接（目录条目）都在同一文件系统上。此外，在某些平台上，可能需要使用实现特定的特权来启动Java虚拟机，以创建硬链接或创建指向目录的链接。</target>
        </trans-unit>
        <trans-unit id="9d151fce3015e4ed9e5cd20051237afb5cefea88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listIterator(int)&lt;/code&gt; method returns a &quot;wrapper object&quot; over a list iterator on the backing list, which is created with the corresponding method on the backing list. The &lt;code&gt;iterator&lt;/code&gt; method merely returns &lt;code&gt;listIterator()&lt;/code&gt;, and the &lt;code&gt;size&lt;/code&gt; method merely returns the subclass's &lt;code&gt;size&lt;/code&gt; field.</source>
          <target state="translated">所述 &lt;code&gt;listIterator(int)&lt;/code&gt; 方法返回一个&amp;ldquo;包装对象&amp;rdquo;在该支持列表，其与背衬列表上的相应的方法所建立的列表迭代。所述 &lt;code&gt;iterator&lt;/code&gt; 的方法仅仅是返回 &lt;code&gt;listIterator()&lt;/code&gt; ，并且 &lt;code&gt;size&lt;/code&gt; 方法仅返回子类的 &lt;code&gt;size&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="2c77410030181476fea1a68458124459ebc9a9bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; listens to property changes only in this context.</source>
          <target state="translated">该 &lt;code&gt;listener&lt;/code&gt; 监听只有在这种情况下属性的更改。</target>
        </trans-unit>
        <trans-unit id="1fedd930e38f5398c449c705300b0fc17b0566c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadClass&lt;/code&gt; method in class &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;ClassLoader&lt;/code&gt; 中的 &lt;code&gt;loadClass&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="df54bb2871f3875ee6a1a7f2fe8a7beb4fbe0bd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locate&lt;/code&gt; method of &lt;code&gt;Component&lt;/code&gt; simply returns the component itself if the (</source>
          <target state="translated">的 &lt;code&gt;locate&lt;/code&gt; 的方法 &lt;code&gt;Component&lt;/code&gt; 简单地返回组件本身，如果（</target>
        </trans-unit>
        <trans-unit id="9577d55fc0aa6d8010723707a44862242076491d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lookupEndpoints&lt;/code&gt; method of each provider, if instantiated, is invoked once with a combination of each of the URLs in the the &lt;code&gt;java.naming.provider.url&lt;/code&gt; property and the environment until a provider returns non-empty or all providers have been exhausted. If none of the &lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;LdapDnsProviders&lt;/a&gt; return a non-empty &lt;a href=&quot;../ldap/spi/ldapdnsproviderresult&quot;&gt;result&lt;/a&gt; then the implementation will make a best-effort attempt to determine an endpoint. A &lt;a href=&quot;../../../../java.base/java/util/serviceconfigurationerror&quot;&gt;ServiceConfigurationError&lt;/a&gt;, &lt;code&gt;Error&lt;/code&gt; or &lt;code&gt;RuntimeException&lt;/code&gt; thrown when loading or calling an &lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;LdapDnsProvider&lt;/a&gt;, if encountered, will be propagated to the calling thread.</source>
          <target state="translated">如果实例化了每个提供程序的 &lt;code&gt;lookupEndpoints&lt;/code&gt; 方法，则使用 &lt;code&gt;java.naming.provider.url&lt;/code&gt; 属性和环境中的每个URL的组合调用一次，直到提供程序返回非空的或所有的提供程序已用尽。如果没有&lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;LdapDnsProviders&lt;/a&gt;返回非空&lt;a href=&quot;../ldap/spi/ldapdnsproviderresult&quot;&gt;结果，&lt;/a&gt;则实现将尽最大努力尝试确定端点。一个&lt;a href=&quot;../../../../java.base/java/util/serviceconfigurationerror&quot;&gt;ServiceConfigurationError&lt;/a&gt;， &lt;code&gt;Error&lt;/code&gt; 或 &lt;code&gt;RuntimeException&lt;/code&gt; 的甩负荷时，或者调用&lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;LdapDnsProvider&lt;/a&gt;，如果遇到，将传播到调用线程。</target>
        </trans-unit>
        <trans-unit id="6c9b144092edff275e75b32f1dca016975180187" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapper&lt;/code&gt; function passed to &lt;code&gt;flatMap&lt;/code&gt; splits a line, using a simple regular expression, into an array of words, and then creates a stream of words from that array.</source>
          <target state="translated">传递给 &lt;code&gt;flatMap&lt;/code&gt; 的 &lt;code&gt;mapper&lt;/code&gt; 函数使用简单的正则表达式将一行分割为单词数组，然后从该数组创建单词流。</target>
        </trans-unit>
        <trans-unit id="e7777926bab037130e9c4b41941f7d725a543594" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapping()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, such as downstream of a &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to accumulate the set of last names in each city:</source>
          <target state="translated">当在多级归约中（例如 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 的下游 &lt;code&gt;mapping()&lt;/code&gt; 使用时，mapping（）收集器最有用。例如，给定 &lt;code&gt;Person&lt;/code&gt; 流，以累积每个城市的姓氏集：</target>
        </trans-unit>
        <trans-unit id="903b585e02a8cfe6d8af38444d4c285b4ecfdab9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;InflaterInputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;InflaterInputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="0371bac823202240bd6c72d5e06eb31b731df75c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="7e02e9dcce04c471816e17e93a8e7c8612865389" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; remembers the current line number in a private variable, and then calls the &lt;code&gt;mark&lt;/code&gt; method of the underlying input stream.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法会记住私有变量中的当前行号，然后调用基础输入流的 &lt;code&gt;mark&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9baaba468b2b9ec943dee5d33e382f44cbd16e98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;PushbackInputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;PushbackInputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="266811666f451efbcca8485179044d44787aa53c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;markSupported()&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;mark()&lt;/code&gt; and &lt;code&gt;reset()&lt;/code&gt; methods throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;markSupported()&lt;/code&gt; 方法返回 &lt;code&gt;false&lt;/code&gt; 。该 &lt;code&gt;mark()&lt;/code&gt; 和 &lt;code&gt;reset()&lt;/code&gt; 方法抛出 &lt;code&gt;IOException&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="24e3553f60a435975160a122db551ded68bc69d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;markSupported()&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;mark()&lt;/code&gt; method does nothing, and the &lt;code&gt;reset()&lt;/code&gt; method throws &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;markSupported()&lt;/code&gt; 方法返回 &lt;code&gt;false&lt;/code&gt; 。该 &lt;code&gt;mark()&lt;/code&gt; 方法什么也不做，和 &lt;code&gt;reset()&lt;/code&gt; 方法抛出 &lt;code&gt;IOException&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="6554f1607ef695c0c64cabf2785fd9a958b83486" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;marshal&lt;/code&gt; method of &lt;code&gt;KeyInfo&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; and &lt;code&gt;DOMCryptoContext&lt;/code&gt; parameter types.</source>
          <target state="translated">&lt;code&gt;KeyInfo&lt;/code&gt; 的 &lt;code&gt;marshal&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMStructure&lt;/code&gt; 和 &lt;code&gt;DOMCryptoContext&lt;/code&gt; 参数类型。</target>
        </trans-unit>
        <trans-unit id="77e5480e00ffc1e7db2c7cde3ede487453a10255" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDepth&lt;/code&gt; parameter is the maximum number of levels of directories to visit. A value of &lt;code&gt;0&lt;/code&gt; means that only the starting file is visited, unless denied by the security manager. A value of &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; may be used to indicate that all levels should be visited.</source>
          <target state="translated">该 &lt;code&gt;maxDepth&lt;/code&gt; 参数是要访问的目录层次的最大数量。值为 &lt;code&gt;0&lt;/code&gt; 表示仅访问起始文件，除非安全管理器拒绝。值&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt;可用于指示应访问所有级别。</target>
        </trans-unit>
        <trans-unit id="18e28bc41e209ebe6c61a493b6c9622bd4b0c37d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDepth&lt;/code&gt; parameter is the maximum number of levels of directories to visit. A value of &lt;code&gt;0&lt;/code&gt; means that only the starting file is visited, unless denied by the security manager. A value of &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; may be used to indicate that all levels should be visited. The &lt;code&gt;visitFile&lt;/code&gt; method is invoked for all files, including directories, encountered at &lt;code&gt;maxDepth&lt;/code&gt;, unless the basic file attributes cannot be read, in which case the &lt;code&gt;
 visitFileFailed&lt;/code&gt; method is invoked.</source>
          <target state="translated">该 &lt;code&gt;maxDepth&lt;/code&gt; 参数是要访问的目录层次的最大数量。值为 &lt;code&gt;0&lt;/code&gt; 表示仅访问起始文件，除非安全管理器拒绝。值&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt;可用于指示应访问所有级别。该 &lt;code&gt;visitFile&lt;/code&gt; 方法被调用的所有文件，包括目录，在遇到 &lt;code&gt;maxDepth&lt;/code&gt; ，除非基本的文件属性不能被读取，在这种情况下， &lt;code&gt; visitFileFailed&lt;/code&gt; 方法被调用。</target>
        </trans-unit>
        <trans-unit id="259fe46dcadeee76b1ff944baef9fa3edc7fae57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDepth&lt;/code&gt; parameter is the maximum number of levels of directories to visit. A value of &lt;code&gt;0&lt;/code&gt; means that only the starting file is visited, unless denied by the security manager. A value of &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; may be used to indicate that all levels should be visited. The &lt;code&gt;visitFile&lt;/code&gt; method is invoked for all files, including directories, encountered at &lt;code&gt;maxDepth&lt;/code&gt;, unless the basic file attributes cannot be read, in which case the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked.</source>
          <target state="translated">该 &lt;code&gt;maxDepth&lt;/code&gt; 参数是要访问的目录层次的最大数量。值为 &lt;code&gt;0&lt;/code&gt; 表示仅访问起始文件，除非安全管理器拒绝。值&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt;可用于指示应访问所有级别。对于在 &lt;code&gt;maxDepth&lt;/code&gt; 遇到的所有文件（包括目录），都会调用 &lt;code&gt;visitFile&lt;/code&gt; 方法，除非无法读取基本文件属性，在这种情况下，会调用 &lt;code&gt;visitFileFailed&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e7185a792bfbe5991a400ad88da03cbdb0d16fb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxOutStreams&lt;/code&gt; and &lt;code&gt;maxInStreams&lt;/code&gt; parameters represent the maximum number of streams that the application wishes to be able to send to and receive from. They are negotiated with the remote peer and may be limited by the operating system.</source>
          <target state="translated">该 &lt;code&gt;maxOutStreams&lt;/code&gt; 和 &lt;code&gt;maxInStreams&lt;/code&gt; 参数表示该应用程序希望能够发送并接收来自流的最大数量。它们是与远程对等方协商的，并且可能受操作系统的限制。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
