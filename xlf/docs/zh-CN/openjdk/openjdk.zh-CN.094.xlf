<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="bbfd99ba588f66e15505e0eb986425f28cf349b2" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the &lt;code&gt;setPixels&lt;/code&gt; method of the &lt;code&gt;ImageConsumer&lt;/code&gt; interface which takes an array of bytes.</source>
          <target state="translated">过滤 &lt;code&gt;ImageConsumer&lt;/code&gt; 接口的 &lt;code&gt;setPixels&lt;/code&gt; 方法中提供的信息，该方法采用字节数组。</target>
        </trans-unit>
        <trans-unit id="de708fc87bee9aaf793c9478f7840fd50996140a" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the &lt;code&gt;setPixels&lt;/code&gt; method of the &lt;code&gt;ImageConsumer&lt;/code&gt; interface which takes an array of integers.</source>
          <target state="translated">过滤 &lt;code&gt;ImageConsumer&lt;/code&gt; 接口的 &lt;code&gt;setPixels&lt;/code&gt; 方法中提供的信息，该方法采用整数数组。</target>
        </trans-unit>
        <trans-unit id="d5f14b24f98dd4f772eee5ea861cd0a440297198" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the imageComplete method of the ImageConsumer interface.</source>
          <target state="translated">过滤ImageConsumer接口的imageComplete方法中提供的信息。</target>
        </trans-unit>
        <trans-unit id="4849d2b54fc7a694db4a063335500e9fd761ae25" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the setDimensions method of the ImageConsumer interface.</source>
          <target state="translated">过滤ImageConsumer接口的setDimensions方法中提供的信息。</target>
        </trans-unit>
        <trans-unit id="26849e5a729a76aefe0255900edbaaebef595545" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the setHints method of the ImageConsumer interface.</source>
          <target state="translated">过滤ImageConsumer接口的setHints方法中提供的信息。</target>
        </trans-unit>
        <trans-unit id="01ab3a4c405639716b2baecb367a803dd35d042e" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the setPixels method of the ImageConsumer interface which takes an array of bytes.</source>
          <target state="translated">过滤ImageConsumer接口的setPixels方法中提供的信息,该方法需要一个字节数组。</target>
        </trans-unit>
        <trans-unit id="27fa86e7d3faca3f485d2091bfd0ad01fd90a48c" translate="yes" xml:space="preserve">
          <source>Filters the information provided in the setPixels method of the ImageConsumer interface which takes an array of integers.</source>
          <target state="translated">过滤ImageConsumer接口的setPixels方法中提供的信息,该方法接收一个整数组。</target>
        </trans-unit>
        <trans-unit id="4654b2a5f2578ac85eb620c7f87d7844f6e0bb05" translate="yes" xml:space="preserve">
          <source>Finalization</source>
          <target state="translated">Finalization</target>
        </trans-unit>
        <trans-unit id="be1e7d2cd79629fe5f4302c1b06959de946a9324" translate="yes" xml:space="preserve">
          <source>Finalization may occur whenever the virtual machine detects that no reference to an object will ever be stored in the heap: The garbage collector may reclaim an object even if the fields of that object are still in use, so long as the object has otherwise become unreachable. This may have surprising and undesirable effects in cases such as the following example in which the bookkeeping associated with a class is managed through array indices. Here, method &lt;code&gt;action&lt;/code&gt; uses a &lt;code&gt;reachabilityFence&lt;/code&gt; to ensure that the &lt;code&gt;Resource&lt;/code&gt; object is not reclaimed before bookkeeping on an associated &lt;code&gt;ExternalResource&lt;/code&gt; has been performed; in particular here, to ensure that the array slot holding the &lt;code&gt;ExternalResource&lt;/code&gt; is not nulled out in method &lt;a href=&quot;../object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt;, which may otherwise run concurrently.</source>
          <target state="translated">每当虚拟机检测到没有对对象的引用将被存储在堆中时，都可能发生终结处理：即使该对象的字段仍在使用中，垃圾收集器也可以回收该对象，只要该对象否则无法访问即可。 。在下面的示例（其中与类关联的簿记通过数组索引管理）的情况下，这可能会产生令人惊讶的不良后果。这里，方法 &lt;code&gt;action&lt;/code&gt; 使用 &lt;code&gt;reachabilityFence&lt;/code&gt; 来确保在执行关联的 &lt;code&gt;ExternalResource&lt;/code&gt; 上的簿记之前不回收 &lt;code&gt;Resource&lt;/code&gt; 对象。特别是在这里，以确保包含 &lt;code&gt;ExternalResource&lt;/code&gt; 的阵列插槽在&lt;a href=&quot;../object#finalize()&quot;&gt; &lt;code&gt;Object.finalize()&lt;/code&gt; &lt;/a&gt;方法中不为空，否则该方法可以同时运行。</target>
        </trans-unit>
        <trans-unit id="7e83457b8aefa33399f66d661bddf342a31d36a4" translate="yes" xml:space="preserve">
          <source>Finalizes the equals method</source>
          <target state="translated">最后确定等价法</target>
        </trans-unit>
        <trans-unit id="153c512da0e847f315731026f1ab5bc427b8a0b3" translate="yes" xml:space="preserve">
          <source>Finalizes the hashCode method</source>
          <target state="translated">最后确定哈希码方法</target>
        </trans-unit>
        <trans-unit id="cfe457d08f7c01e9f94d440991dd5261dcb33431" translate="yes" xml:space="preserve">
          <source>Finalizes the hashcode method.</source>
          <target state="translated">最后确定哈希码方法。</target>
        </trans-unit>
        <trans-unit id="9636a65a84ce592adcf6e088f6d495cae86cce24" translate="yes" xml:space="preserve">
          <source>Finalizes this object prior to garbage collection. The &lt;code&gt;close&lt;/code&gt; method is called to close any open input source. This method should not be called from application code.</source>
          <target state="translated">在垃圾回收之前完成此对象的确定。的 &lt;code&gt;close&lt;/code&gt; 方法被调用以关闭所有打开的输入源。不应从应用程序代码中调用此方法。</target>
        </trans-unit>
        <trans-unit id="2b6cb309a7d300043997318fe1755a2856633c4c" translate="yes" xml:space="preserve">
          <source>Finalizes this object prior to garbage collection. The &lt;code&gt;deregisterAll&lt;/code&gt; method is called to deregister all currently registered service providers. This method should not be called from application code.</source>
          <target state="translated">在垃圾回收之前完成此对象的确定。该 &lt;code&gt;deregisterAll&lt;/code&gt; 方法被调用来注销所有当前注册的服务商。不应从应用程序代码中调用此方法。</target>
        </trans-unit>
        <trans-unit id="728731fcb5958047321b3d8b72b9bc35f95ee31d" translate="yes" xml:space="preserve">
          <source>Finally blocks are not executed.</source>
          <target state="translated">最后块不执行。</target>
        </trans-unit>
        <trans-unit id="dfb2bede2d73d211c31ff6bd374f481db54b2992" translate="yes" xml:space="preserve">
          <source>Finally, a shorthand pattern, mostly compatible with &lt;code&gt;java.text.SimpleDateFormat SimpleDateFormat&lt;/code&gt; can be used, see &lt;a href=&quot;#appendPattern(java.lang.String)&quot;&gt;&lt;code&gt;appendPattern(String)&lt;/code&gt;&lt;/a&gt;. In practice, this simply parses the pattern and calls other methods on the builder.</source>
          <target state="translated">最后，可以使用一种简写模式，该模式通常与 &lt;code&gt;java.text.SimpleDateFormat SimpleDateFormat&lt;/code&gt; 兼容，请参见&lt;a href=&quot;#appendPattern(java.lang.String)&quot;&gt; &lt;code&gt;appendPattern(String)&lt;/code&gt; &lt;/a&gt;。实际上，这只是解析模式并在构建器上调用其他方法。</target>
        </trans-unit>
        <trans-unit id="b51122d4501917841e86ed691f5ba4be385ed25d" translate="yes" xml:space="preserve">
          <source>Finally, a shorthand pattern, mostly compatible with &lt;code&gt;java.text.SimpleDateFormat SimpleDateFormat&lt;/code&gt; can be used, see &lt;a href=&quot;datetimeformatterbuilder#appendPattern-java.lang.String-&quot;&gt;&lt;code&gt;appendPattern(String)&lt;/code&gt;&lt;/a&gt;. In practice, this simply parses the pattern and calls other methods on the builder.</source>
          <target state="translated">最后，可以使用一种速记模式，该模式通常与 &lt;code&gt;java.text.SimpleDateFormat SimpleDateFormat&lt;/code&gt; 兼容，请参见&lt;a href=&quot;datetimeformatterbuilder#appendPattern-java.lang.String-&quot;&gt; &lt;code&gt;appendPattern(String)&lt;/code&gt; &lt;/a&gt;。实际上，这只是解析模式并在构建器上调用其他方法。</target>
        </trans-unit>
        <trans-unit id="bb029c5c36dfa818d8df59878a59ea73ca8e3978" translate="yes" xml:space="preserve">
          <source>Finally, an instance of the &lt;code&gt;ImageReader&lt;/code&gt; class associated with this service provider may be obtained by calling the &lt;code&gt;createReaderInstance&lt;/code&gt; method. Any heavyweight initialization, such as the loading of native libraries or creation of large tables, should be deferred at least until the first invocation of this method.</source>
          <target state="translated">最后，可以通过调用 &lt;code&gt;createReaderInstance&lt;/code&gt; 方法获取与此服务提供者关联的 &lt;code&gt;ImageReader&lt;/code&gt; 类的实例。任何重量级的初始化（例如加载本机库或创建大型表）都应至少推迟到首次调用此方法之前。</target>
        </trans-unit>
        <trans-unit id="7d3eace5afa2972c98205e7308ffc1024b67b5ef" translate="yes" xml:space="preserve">
          <source>Finally, an instance of the &lt;code&gt;ImageWriter&lt;/code&gt; class associated with this service provider may be obtained by calling the &lt;code&gt;createWriterInstance&lt;/code&gt; method. Any heavyweight initialization, such as the loading of native libraries or creation of large tables, should be deferred at least until the first invocation of this method.</source>
          <target state="translated">最后，可以通过调用 &lt;code&gt;createWriterInstance&lt;/code&gt; 方法获取与此服务提供者关联的 &lt;code&gt;ImageWriter&lt;/code&gt; 类的实例。任何重量级的初始化（例如加载本机库或创建大型表）都应至少推迟到首次调用此方法之前。</target>
        </trans-unit>
        <trans-unit id="00053cff79e4b4f9a04a2731ae230d6fc93074da" translate="yes" xml:space="preserve">
          <source>Finally, an instance of the stub class is constructed with a &lt;a href=&quot;remoteref&quot;&gt;&lt;code&gt;RemoteRef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，用&lt;a href=&quot;remoteref&quot;&gt; &lt;code&gt;RemoteRef&lt;/code&gt; &lt;/a&gt;构造存根类的实例。</target>
        </trans-unit>
        <trans-unit id="485b347847e8d7b655f5d4b05f3a05f5a9694592" translate="yes" xml:space="preserve">
          <source>Finally, an object is &lt;em&gt;unreachable&lt;/em&gt;, and therefore eligible for reclamation, when it is not reachable in any of the above ways.</source>
          <target state="translated">最后，当对象&lt;em&gt;无法&lt;/em&gt;通过上述任何一种方式到达时，它是不可到达的，因此有资格回收。</target>
        </trans-unit>
        <trans-unit id="65e1d0a31ebbb72fc78d2e0aaee3a59ec5383b7a" translate="yes" xml:space="preserve">
          <source>Finally, attempting to read a member whose definition has evolved incompatibly will result in a &lt;a href=&quot;../annotation/annotationtypemismatchexception&quot;&gt;&lt;code&gt;AnnotationTypeMismatchException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../annotation/incompleteannotationexception&quot;&gt;&lt;code&gt;IncompleteAnnotationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，尝试读取其定义不兼容演变的成员将导致&lt;a href=&quot;../annotation/annotationtypemismatchexception&quot;&gt; &lt;code&gt;AnnotationTypeMismatchException&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../annotation/incompleteannotationexception&quot;&gt; &lt;code&gt;IncompleteAnnotationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9cacee9c6296b40dbc455f4489780f9804089adb" translate="yes" xml:space="preserve">
          <source>Finally, character case is ignored for all of the valid block name forms. For example, &quot;BASIC_LATIN&quot; and &quot;basic_latin&quot; are both valid block names. The en_US locale's case mapping rules are used to provide case-insensitive string comparisons for block name validation.</source>
          <target state="translated">最后,对于所有有效的块名形式,字符大小写都会被忽略。例如,&quot;BASIC_LATIN &quot;和 &quot;basic_latin &quot;都是有效的块名。en_US的大小写映射规则被用来为块名验证提供不区分大小写的字符串比较。</target>
        </trans-unit>
        <trans-unit id="9d36295b55b76f19f47499620ced9e4dbd283157" translate="yes" xml:space="preserve">
          <source>Finally, different mechanism providers might place different security restrictions on using GSS-API contexts. These will be documented by the mechanism provider. The application will need to ensure that it has the appropriate permissions if such checks are made in the mechanism layer.</source>
          <target state="translated">最后,不同的机制提供者可能会对使用GSS-API上下文施加不同的安全限制。机制提供者将对这些限制进行记录。如果在机制层进行这种检查,应用程序将需要确保它有适当的权限。</target>
        </trans-unit>
        <trans-unit id="bf688e14545def4fcb5134a8a38c4702fc84f98c" translate="yes" xml:space="preserve">
          <source>Finally, every module &quot;reads&quot; itself.</source>
          <target state="translated">最后,每个模块都要 &quot;读 &quot;自己。</target>
        </trans-unit>
        <trans-unit id="8ec56dc3acfd24017e2a9e5175e1bb86468c33ff" translate="yes" xml:space="preserve">
          <source>Finally, if a fragment is given then a hash character (&lt;code&gt;'#'&lt;/code&gt;) is appended to the string, followed by the fragment. Any character that is not a legal URI character is quoted.</source>
          <target state="translated">最后，如果给出了片段，则在字符串后附加一个哈希字符（ &lt;code&gt;'#'&lt;/code&gt; ），然后是该片段。引用了不是合法URI字符的任何字符。</target>
        </trans-unit>
        <trans-unit id="376cec0de8e5971c40dd244c8b76bb1215992a0b" translate="yes" xml:space="preserve">
          <source>Finally, if a fragment is given then a hash character (&lt;code&gt;'#'&lt;/code&gt;) is appended, followed by the fragment. Any character that is not a legal URI character is quoted.</source>
          <target state="translated">最后，如果给出了一个片段，则将附加一个哈希字符（ &lt;code&gt;'#'&lt;/code&gt; ），然后是该片段。引用了不是合法URI字符的任何字符。</target>
        </trans-unit>
        <trans-unit id="709d30b2369164b47f5cd9f1cc43077f5bdd1953" translate="yes" xml:space="preserve">
          <source>Finally, if neither the above-mentioned system property nor an extension jar file is provided, then the system-wide default &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation for the underlying platform is loaded and instantiated.</source>
          <target state="translated">最后，如果既不提供上述系统属性也不提供扩展jar文件，则将加载并实例化基础平台的系统范围的默认 &lt;code&gt;PreferencesFactory&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="91cbfcdfa8a31d2a72e1e2aa061d171b9172f0fb" translate="yes" xml:space="preserve">
          <source>Finally, if no provider has been specified by any of the above means then the system-default provider class is instantiated and the result is returned.</source>
          <target state="translated">最后,如果没有通过上述任何一种方式指定提供者,那么将实例化系统默认的提供者类,并返回结果。</target>
        </trans-unit>
        <trans-unit id="e08aa885f3ab1f11f2128c9d1b72f40153bb11a5" translate="yes" xml:space="preserve">
          <source>Finally, if the &lt;code&gt;name&lt;/code&gt; argument is null, another &lt;code&gt;MBeanPermission&lt;/code&gt; check is made using the &lt;code&gt;ObjectName&lt;/code&gt; returned by &lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;MBeanRegistration.preRegister&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，如果 &lt;code&gt;name&lt;/code&gt; 参数为null，则使用&lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;MBeanRegistration.preRegister&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;ObjectName&lt;/code&gt; 进行另一个 &lt;code&gt;MBeanPermission&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="1bd403b0fab80da8e165ed2d1917fc561e2a6a78" translate="yes" xml:space="preserve">
          <source>Finally, if the &lt;code&gt;name&lt;/code&gt; argument is null, another &lt;code&gt;MBeanPermission&lt;/code&gt; check is made using the &lt;code&gt;ObjectName&lt;/code&gt; returned by &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanRegistration.preRegister&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，如果 &lt;code&gt;name&lt;/code&gt; 参数为null，则使用&lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanRegistration.preRegister&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;ObjectName&lt;/code&gt; 进行另一个 &lt;code&gt;MBeanPermission&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="44ff280b814fd779016d9aa442ab7aa617d53dc4" translate="yes" xml:space="preserve">
          <source>Finally, if the class loader is not an instance of &lt;code&gt;URLClassLoader&lt;/code&gt;, then the value of the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property (or possibly an earlier cached value) is returned, or &lt;code&gt;null&lt;/code&gt; is returned if that property is not set.</source>
          <target state="translated">最后，如果类加载器不是 &lt;code&gt;URLClassLoader&lt;/code&gt; 的实例，则返回 &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; 属性的值（或者可能是更早的缓存值），如果未设置该属性，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eda3740833a0ccc1c380f473cae06c67eb1e3845" translate="yes" xml:space="preserve">
          <source>Finally, in all other cases, we say that a memory access operation is &lt;em&gt;misaligned&lt;/em&gt;; in such cases an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown, irrespective of the access mode being used.</source>
          <target state="translated">最后，在所有其他情况下，我们说内存访问操作&lt;em&gt;未对齐&lt;/em&gt;；在这种情况下，无论使用 &lt;code&gt;IllegalStateException&lt;/code&gt; 访问方式，都将抛出IllegalStateException。</target>
        </trans-unit>
        <trans-unit id="03c432c3a74db519771d346742f42400451f0784" translate="yes" xml:space="preserve">
          <source>Finally, it calls &lt;a href=&quot;#cacheMBeanInfo(javax.management.MBeanInfo)&quot;&gt;&lt;code&gt;cacheMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to cache the new MBeanInfo.</source>
          <target state="translated">最后，它调用&lt;a href=&quot;#cacheMBeanInfo(javax.management.MBeanInfo)&quot;&gt; &lt;code&gt;cacheMBeanInfo()&lt;/code&gt; &lt;/a&gt;以便缓存新的MBeanInfo。</target>
        </trans-unit>
        <trans-unit id="3879cfa8cbc7e3a87068c88c7368ca301136bc24" translate="yes" xml:space="preserve">
          <source>Finally, it calls &lt;a href=&quot;standardmbean#cacheMBeanInfo-javax.management.MBeanInfo-&quot;&gt;&lt;code&gt;cacheMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to cache the new MBeanInfo.</source>
          <target state="translated">最后，它调用&lt;a href=&quot;standardmbean#cacheMBeanInfo-javax.management.MBeanInfo-&quot;&gt; &lt;code&gt;cacheMBeanInfo()&lt;/code&gt; &lt;/a&gt;以便缓存新的MBeanInfo。</target>
        </trans-unit>
        <trans-unit id="3a108dbb8a4e31b80b79817359d6421d671947d6" translate="yes" xml:space="preserve">
          <source>Finally, it is also possible to obtain a memory segment backed by a memory-mapped file using the factory method &lt;a href=&quot;#mapFromPath(java.nio.file.Path,long,long,java.nio.channels.FileChannel.MapMode)&quot;&gt;&lt;code&gt;mapFromPath(Path, long, long, FileChannel.MapMode)&lt;/code&gt;&lt;/a&gt;. Such memory segments are called &lt;em&gt;mapped memory segments&lt;/em&gt; (see &lt;a href=&quot;mappedmemorysegment&quot;&gt;&lt;code&gt;MappedMemorySegment&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">最后，还可以使用工厂方法&lt;a href=&quot;#mapFromPath(java.nio.file.Path,long,long,java.nio.channels.FileChannel.MapMode)&quot;&gt; &lt;code&gt;mapFromPath(Path, long, long, FileChannel.MapMode)&lt;/code&gt; &lt;/a&gt;获得由内存映射文件支持的内存段。这样的内存段称为&lt;em&gt;映射内存段&lt;/em&gt;（请参见&lt;a href=&quot;mappedmemorysegment&quot;&gt; &lt;code&gt;MappedMemorySegment&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="63b5797fab6b0dcffb978221546e69dc07f834e6" translate="yes" xml:space="preserve">
          <source>Finally, it is guaranteed that the named node has not been returned by a previous invocation of this method or &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(java.lang.String)&lt;/code&gt;&lt;/a&gt; after the last time that it was removed. In other words, a cached value will always be used in preference to invoking this method. (The implementor needn't maintain his own cache of previously returned children if he chooses to override this method.)</source>
          <target state="translated">最后，可以确保在上次删除此方法或&lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(java.lang.String)&lt;/code&gt; &lt;/a&gt;之后，先前对该方法或childSpi（java.lang.String）的调用未返回该命名节点。换句话说，将始终优先使用缓存的值来调用此方法。（如果实现者选择覆盖此方法，则无需维护自己对以前返回的子代的缓存。）</target>
        </trans-unit>
        <trans-unit id="964c7fa9fade1e81a76ae0b266db62d89cbaaa41" translate="yes" xml:space="preserve">
          <source>Finally, it is guaranteed that the named node has not been returned by a previous invocation of this method or &lt;a href=&quot;#getChild(java.lang.String)&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; after the last time that it was removed. In other words, a cached value will always be used in preference to invoking this method. Subclasses need not maintain their own cache of previously returned children.</source>
          <target state="translated">最后，可以确保在上次删除此方法或&lt;a href=&quot;#getChild(java.lang.String)&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt;之后，先前对该方法或getChild（String）的调用未返回该命名节点。换句话说，将始终优先使用缓存的值来调用此方法。子类不需要维护自己自己的先前返回的子代的缓存。</target>
        </trans-unit>
        <trans-unit id="e6ca85b168e9afae32d453e30029f7127f0c2c86" translate="yes" xml:space="preserve">
          <source>Finally, it is guaranteed that the named node has not been returned by a previous invocation of this method or &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(java.lang.String)&lt;/code&gt;&lt;/a&gt; after the last time that it was removed. In other words, a cached value will always be used in preference to invoking this method. (The implementor needn't maintain his own cache of previously returned children if he chooses to override this method.)</source>
          <target state="translated">最后，可以确保在上次删除此方法或&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(java.lang.String)&lt;/code&gt; &lt;/a&gt;之后，先前对该方法或childSpi（java.lang.String）的调用未返回该命名节点。换句话说，将始终优先使用缓存的值来调用此方法。（如果实现者选择覆盖此方法，则无需维护自己对以前返回的子代的缓存。）</target>
        </trans-unit>
        <trans-unit id="d5c4cafd6ed5ef265849eff8715923be359d7c30" translate="yes" xml:space="preserve">
          <source>Finally, it is guaranteed that the named node has not been returned by a previous invocation of this method or &lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt;&lt;code&gt;getChild(String)&lt;/code&gt;&lt;/a&gt; after the last time that it was removed. In other words, a cached value will always be used in preference to invoking this method. Subclasses need not maintain their own cache of previously returned children.</source>
          <target state="translated">最后，可以确保在最后一次删除此方法或&lt;a href=&quot;abstractpreferences#getChild-java.lang.String-&quot;&gt; &lt;code&gt;getChild(String)&lt;/code&gt; &lt;/a&gt;之后，先前对该方法或getChild（String）的调用未返回该命名节点。换句话说，将始终优先使用缓存的值来调用此方法。子类不需要维护自己的先前返回的子代的缓存。</target>
        </trans-unit>
        <trans-unit id="a1d57b63f5d5e49fd3a0de6b03d16768bb02e5f5" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments specify the width and height that the &lt;code&gt;Painter&lt;/code&gt; should paint into. More specifically, the specified width and height instruct the painter that it should paint fully within this width and height. Any specified clip on the &lt;code&gt;g&lt;/code&gt; param will further constrain the region.</source>
          <target state="translated">最后， &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 参数指定 &lt;code&gt;Painter&lt;/code&gt; 应该绘制到的宽度和高度。更具体地说，指定的宽度和高度指示画家应在该宽度和高度内完全绘画。 &lt;code&gt;g&lt;/code&gt; 参数上的任何指定剪辑都会进一步限制该区域。</target>
        </trans-unit>
        <trans-unit id="87fa494eccb334229e5f2a97452e71927a4b484a" translate="yes" xml:space="preserve">
          <source>Finally, the entire string is prefixed by a minus sign character &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;) if the unscaled value is less than zero. No sign character is prefixed if the unscaled value is zero or positive.</source>
          <target state="translated">最后，如果未缩放的值小于零，则整个字符串以减号字符 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002D'&lt;/code&gt; ）为前缀。如果未缩放的值为零或正数，则不带符号字符前缀。</target>
        </trans-unit>
        <trans-unit id="79dd46780abf7bab05a970eb3ff842e052a80c88" translate="yes" xml:space="preserve">
          <source>Finally, the implementor must ensure that &lt;code&gt;compare(x, y)==0&lt;/code&gt; implies that &lt;code&gt;sgn(compare(x, z))==sgn(compare(y, z))&lt;/code&gt; for all &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">最后，实现者必须确保 &lt;code&gt;compare(x, y)==0&lt;/code&gt; 意味着所有 &lt;code&gt;z&lt;/code&gt; 的 &lt;code&gt;sgn(compare(x, z))==sgn(compare(y, z))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47bc928dfee57fe6c067b746b2802a7ddcb5fbcb" translate="yes" xml:space="preserve">
          <source>Finally, the implementor must ensure that &lt;code&gt;x.compareTo(y)==0&lt;/code&gt; implies that &lt;code&gt;sgn(x.compareTo(z)) == sgn(y.compareTo(z))&lt;/code&gt;, for all &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">最后，实现者必须确保对于所有 &lt;code&gt;z&lt;/code&gt; ， &lt;code&gt;x.compareTo(y)==0&lt;/code&gt; 意味着 &lt;code&gt;sgn(x.compareTo(z)) == sgn(y.compareTo(z))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f08328a8fb8f0411163045200d0979de698c054" translate="yes" xml:space="preserve">
          <source>Finally, the lines are joined into a new string, using the LF character &lt;code&gt;&quot;\n&quot;&lt;/code&gt; (U+000A) to separate lines.</source>
          <target state="translated">最后，使用LF字符 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; （U + 000A）将各行连接成一个新字符串。</target>
        </trans-unit>
        <trans-unit id="705ad9958feadfa877bad17b3ad54433f8372ae8" translate="yes" xml:space="preserve">
          <source>Finally, the source samples of each pixel are mapped into destination bands according to the algorithm described in the comment for &lt;code&gt;setDestinationBands&lt;/code&gt;.</source>
          <target state="translated">最后，根据注释中针对 &lt;code&gt;setDestinationBands&lt;/code&gt; 所述的算法，将每个像素的源样本映射到目标频带。</target>
        </trans-unit>
        <trans-unit id="0077ca131446cbf19f56ba8aa44d330997527c58" translate="yes" xml:space="preserve">
          <source>Finally, there are a set of convenience methods for use in the very simplest cases, when a developer simply wants to log a simple string at a given log level. These methods are named after the standard Level names (&quot;severe&quot;, &quot;warning&quot;, &quot;info&quot;, etc.) and take a single argument, a message string.</source>
          <target state="translated">最后,有一组方便的方法可以在最简单的情况下使用,当开发人员只是想在给定的日志级别上记录一个简单的字符串。这些方法以标准的级别名称(&quot;严重&quot;、&quot;警告&quot;、&quot;信息 &quot;等)命名,只接受一个参数,即消息字符串。</target>
        </trans-unit>
        <trans-unit id="7c53f03fe4bf951e07b59d71bbc7dc1b4fb912d6" translate="yes" xml:space="preserve">
          <source>Finally, this method invokes the &lt;a href=&quot;activationgroup#activeObject(java.rmi.activation.ActivationID,java.rmi.Remote)&quot;&gt;&lt;code&gt;activeObject&lt;/code&gt;&lt;/a&gt; method on the activation group in this VM with the activation identifier and the specified remote object, and returns the activation identifier to the caller.</source>
          <target state="translated">最后，此方法使用激活标识符和指定的远程对象在此VM的激活组上调用&lt;a href=&quot;activationgroup#activeObject(java.rmi.activation.ActivationID,java.rmi.Remote)&quot;&gt; &lt;code&gt;activeObject&lt;/code&gt; &lt;/a&gt;方法，并将激活标识符返回给调用方。</target>
        </trans-unit>
        <trans-unit id="e67d13789d65f2babac3be8d1e787d80e63d64e7" translate="yes" xml:space="preserve">
          <source>Finally, two hierarchical URIs with identical schemes and authority components are ordered according to the ordering of their paths; if their paths are identical then they are ordered according to the ordering of their queries; if the queries are identical then they are ordered according to the order of their fragments.</source>
          <target state="translated">最后,对两个方案和权限成分相同的分级URI,按照它们的路径排序;如果它们的路径相同,则按照它们的查询排序;如果查询相同,则按照它们的片段排序。</target>
        </trans-unit>
        <trans-unit id="23c7379182123225e6b05fcc47fb51e8d9a9fe3f" translate="yes" xml:space="preserve">
          <source>Finally, you can use the &lt;code&gt;setIconTextGap&lt;/code&gt; method to specify how many pixels should appear between the text and the image. The default is 4 pixels.</source>
          <target state="translated">最后，可以使用 &lt;code&gt;setIconTextGap&lt;/code&gt; 方法指定在文本和图像之间应显示多少像素。默认值为4像素。</target>
        </trans-unit>
        <trans-unit id="508ed53ff7582d90d5d2cf1df5030ee854604326" translate="yes" xml:space="preserve">
          <source>Find a function in the set of available functions.</source>
          <target state="translated">在可用函数集中找到一个函数。</target>
        </trans-unit>
        <trans-unit id="4bf59d23cec5208aee2edc1763cb500d2d26c5d7" translate="yes" xml:space="preserve">
          <source>Find a package by name in the callers &lt;code&gt;ClassLoader&lt;/code&gt; instance. The callers &lt;code&gt;ClassLoader&lt;/code&gt; instance is used to find the package instance corresponding to the named class. If the callers &lt;code&gt;ClassLoader&lt;/code&gt; instance is null then the set of packages loaded by the system &lt;code&gt;ClassLoader&lt;/code&gt; instance is searched to find the named package.</source>
          <target state="translated">在调用者 &lt;code&gt;ClassLoader&lt;/code&gt; 实例中按名称查找包。调用者 &lt;code&gt;ClassLoader&lt;/code&gt; 实例用于查找与命名类相对应的包实例。如果调用方 &lt;code&gt;ClassLoader&lt;/code&gt; 实例为null，则将搜索系统 &lt;code&gt;ClassLoader&lt;/code&gt; 实例加载的软件包集，以找到命名的软件包。</target>
        </trans-unit>
        <trans-unit id="c8ba8b629948f2aa83574191e11425efd61f1ff6" translate="yes" xml:space="preserve">
          <source>Find a resource of the specified name from the search path used to load classes.</source>
          <target state="translated">从用于加载类的搜索路径中找到指定名称的资源。</target>
        </trans-unit>
        <trans-unit id="082f9d1972c27d7fbbb95a012661e0dabe014e46" translate="yes" xml:space="preserve">
          <source>Find a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;#getSystemClassLoader()&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">从用于加载类的搜索路径中找到具有指定名称的资源。此方法通过系统类加载器查找资源（请参见&lt;a href=&quot;#getSystemClassLoader()&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9ea172b7eec3f5f0b81470ae67435f6d468e7665" translate="yes" xml:space="preserve">
          <source>Find a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">从用于加载类的搜索路径中找到具有指定名称的资源。此方法通过系统类加载器查找资源（请参见&lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e513373fba434dcf4016fec16ccde712697d7e4a" translate="yes" xml:space="preserve">
          <source>Find a translator for this class.</source>
          <target state="translated">找一个本班的翻译。</target>
        </trans-unit>
        <trans-unit id="b11b04d4748dc3a4424baa5dfd870e48c5d42796" translate="yes" xml:space="preserve">
          <source>Find a translator for this class. If one doesn't exist for this class explicitly, try its superclass and so on.</source>
          <target state="translated">为这个类找到一个翻译器。如果这个类没有明确的翻译器,就试试它的超类,以此类推。</target>
        </trans-unit>
        <trans-unit id="06def4f824d0101f792b8087f4312c30c14cbc81" translate="yes" xml:space="preserve">
          <source>Find a variable in the set of available variables.</source>
          <target state="translated">在可用变量集合中找到一个变量。</target>
        </trans-unit>
        <trans-unit id="38c82c92e8e61b769291664f51f72ff64a91c33e" translate="yes" xml:space="preserve">
          <source>Find an MBeanServer with a given name, or all MBeanServers in this JVM, using the method &lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用方法&lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt;查找具有给定名称的MBeanServer或此JVM中的所有MBeanServer 。</target>
        </trans-unit>
        <trans-unit id="143fb3b0f3014eb3a425dfc9e1d72174ef6e3fc1" translate="yes" xml:space="preserve">
          <source>Find an MBeanServer with a given name, or all MBeanServers in this JVM, using the method &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用方法&lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt;查找具有给定名称的MBeanServer或此JVM中的所有MBeanServer 。</target>
        </trans-unit>
        <trans-unit id="23c95a684a4ef6e95365fe5d05112bed0124d8b9" translate="yes" xml:space="preserve">
          <source>Find or create a logger for a named subsystem.</source>
          <target state="translated">为一个命名的子系统查找或创建一个记录器。</target>
        </trans-unit>
        <trans-unit id="e25e1d08d5edcf5ee65c41a7c10f2e97a4afc61e" translate="yes" xml:space="preserve">
          <source>Find or create a logger for a named subsystem. If a logger has already been created with the given name it is returned. Otherwise a new logger is created.</source>
          <target state="translated">为指定的子系统查找或创建记录仪。如果已经以给定的名称创建了记录仪,则将返回该记录仪。否则将创建一个新的记录仪。</target>
        </trans-unit>
        <trans-unit id="bb8d1805e4876c9e126c966285fe34d4e505b938" translate="yes" xml:space="preserve">
          <source>Find the descriptor for a class that can be serialized.</source>
          <target state="translated">找到一个可以序列化的类的描述符。</target>
        </trans-unit>
        <trans-unit id="83b0dfddf9a03c8956ac68d15dfc528830ca8054" translate="yes" xml:space="preserve">
          <source>Find the descriptor for a class that can be serialized. Creates an ObjectStreamClass instance if one does not exist yet for class. Null is returned if the specified class does not implement java.io.Serializable or java.io.Externalizable.</source>
          <target state="translated">找到一个可以序列化的类的描述符。如果类中还没有ObjectStreamClass实例,则创建一个ObjectStreamClass实例。如果指定的类没有实现java.io.Serializable或java.io.Externalizable,则返回Null。</target>
        </trans-unit>
        <trans-unit id="69f8e8e772d56be479b5fc7ce318dc12a215d5ee" translate="yes" xml:space="preserve">
          <source>Find the next word:</source>
          <target state="translated">找下一个词。</target>
        </trans-unit>
        <trans-unit id="695a17bec2c9c6b5a2b8a6612b97264614ce5a20" translate="yes" xml:space="preserve">
          <source>FindException</source>
          <target state="translated">FindException</target>
        </trans-unit>
        <trans-unit id="59de19c8479dabc7fdf16a0df24bc55ce7c4027a" translate="yes" xml:space="preserve">
          <source>Finders created by this method are lazy and do not eagerly check that the given file paths are directories or packaged modules. Consequently, the &lt;code&gt;find&lt;/code&gt; or &lt;code&gt;findAll&lt;/code&gt; methods will only fail if invoking these methods results in searching a directory or packaged module and an error is encountered.</source>
          <target state="translated">用这种方法创建的查找器很懒，并且不急于检查给定的文件路径是目录还是打包的模块。因此，仅当调用这些方法导致搜索目录或打包的模块并遇到错误时， &lt;code&gt;find&lt;/code&gt; 或 &lt;code&gt;findAll&lt;/code&gt; 方法才会失败。</target>
        </trans-unit>
        <trans-unit id="be63a53e967b72e7cd925aa9831dbf72679457f4" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;localvariable&quot;&gt;&lt;code&gt;LocalVariable&lt;/code&gt;&lt;/a&gt; that matches the given name and is visible at the current frame location.</source>
          <target state="translated">查找与给定名称匹配并且在当前框架位置可见的&lt;a href=&quot;localvariable&quot;&gt; &lt;code&gt;LocalVariable&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab958fb0b202dfba6ccb0fde3833ac055f405a2b" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;localvariable&quot;&gt;&lt;code&gt;LocalVariable&lt;/code&gt;&lt;/a&gt; that matches the given name and is visible at the current frame location. See &lt;a href=&quot;#visibleVariables()&quot;&gt;&lt;code&gt;visibleVariables()&lt;/code&gt;&lt;/a&gt; for more information on visibility.</source>
          <target state="translated">查找与给定名称匹配并且在当前框架位置可见的&lt;a href=&quot;localvariable&quot;&gt; &lt;code&gt;LocalVariable&lt;/code&gt; &lt;/a&gt;。有关可见性的更多信息，请参见&lt;a href=&quot;#visibleVariables()&quot;&gt; &lt;code&gt;visibleVariables()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fd148aa9f1739c5e301cba94aad1904591987a4" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for a static field.</source>
          <target state="translated">查找静态字段的&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cbf3eee5b6a50f18be9366ec2e9b62b83fee66c" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for an array type.</source>
          <target state="translated">查找数组类型的&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae431bcde51fb5aba1c248b30622ac84b2cd1502" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for an instance field.</source>
          <target state="translated">查找实例字段的&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fad7c1cd7647785389946cd154feb4d731b87ea" translate="yes" xml:space="preserve">
          <source>Finds a class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;, loading it if necessary.</source>
          <target state="translated">查找具有指定&lt;a href=&quot;#binary-name&quot;&gt;二进制名称&lt;/a&gt;的类，如有必要，将其加载。</target>
        </trans-unit>
        <trans-unit id="e26ddf6d350805d46a4eababd014f4909e7b7f70" translate="yes" xml:space="preserve">
          <source>Finds a class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;, loading it if necessary.</source>
          <target state="translated">查找具有指定&lt;a href=&quot;#name&quot;&gt;二进制名称&lt;/a&gt;的类，如有必要，将其加载。</target>
        </trans-unit>
        <trans-unit id="af57f9d6d3fad481c4e24d676d0af5fff1455505" translate="yes" xml:space="preserve">
          <source>Finds a color in the system properties.</source>
          <target state="translated">在系统属性中查找颜色。</target>
        </trans-unit>
        <trans-unit id="6d14b2650a84a8bb8e450bd9dab3317e7299564c" translate="yes" xml:space="preserve">
          <source>Finds a package by &lt;a href=&quot;#binary-name&quot;&gt;name&lt;/a&gt; in this class loader and its ancestors.</source>
          <target state="translated">在此类加载器及其祖先中按&lt;a href=&quot;#binary-name&quot;&gt;名称&lt;/a&gt;查找包。</target>
        </trans-unit>
        <trans-unit id="bc3c065513369b108e136f6ac6676bbd9f9ed1ef" translate="yes" xml:space="preserve">
          <source>Finds a package by name in the caller's class loader and its ancestors.</source>
          <target state="translated">在调用者的类加载器中按名称查找一个包及其祖先。</target>
        </trans-unit>
        <trans-unit id="5e28f68c44bc53461701f2bc09fdd27d2ead26e3" translate="yes" xml:space="preserve">
          <source>Finds a reference to a module of a given name.</source>
          <target state="translated">查找给定名称的模块的引用。</target>
        </trans-unit>
        <trans-unit id="9e3215b349d72286642469e7aa8b6255181f6da6" translate="yes" xml:space="preserve">
          <source>Finds a resolved module in this configuration, or if not in this configuration, the &lt;a href=&quot;#parents()&quot;&gt;parent&lt;/a&gt; configurations.</source>
          <target state="translated">在此配置中查找已解析的模块，如果不在此配置中，则查找&lt;a href=&quot;#parents()&quot;&gt;父&lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="a897b351634179262b62bd1ff305280ca2957a51" translate="yes" xml:space="preserve">
          <source>Finds a resolved module in this configuration, or if not in this configuration, the &lt;a href=&quot;#parents()&quot;&gt;parent&lt;/a&gt; configurations. Finding a module in parent configurations is equivalent to invoking &lt;code&gt;findModule&lt;/code&gt; on each parent, in search order, until the module is found or all parents have been searched. In a &lt;em&gt;tree of configurations&lt;/em&gt; then this is equivalent to a depth-first search.</source>
          <target state="translated">在此配置中查找已解析的模块，如果不在此配置中，则查找&lt;a href=&quot;#parents()&quot;&gt;父&lt;/a&gt;配置。在父级配置中查找模块等效于按照搜索顺序在每个父 &lt;code&gt;findModule&lt;/code&gt; 上调用findModule，直到找到该模块或已搜索到所有父级。在&lt;em&gt;配置树中，&lt;/em&gt;这等效于深度优先搜索。</target>
        </trans-unit>
        <trans-unit id="7011250bbf1d68f0ad3f18892e0e52dea53b38ac" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name.</source>
          <target state="translated">查找具有给定名称的资源。</target>
        </trans-unit>
        <trans-unit id="5970b75c030be5858ee00a25ea7e6d0137d03f22" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name. The rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找具有给定名称的资源。搜索与给定类关联的资源的规则由&lt;a href=&quot;classloader&quot;&gt;该类&lt;/a&gt;的定义类加载器实现。此方法委派给该对象的类加载器。如果此对象是由引导类加载器加载的，则该方法将委托给&lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8c457aaf68742eb22c2c958d2a00771c3d3a2af" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name. The rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResourceAsStream-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找具有给定名称的资源。搜索与给定类关联的资源的规则由&lt;a href=&quot;classloader&quot;&gt;该类&lt;/a&gt;的定义类加载器实现。此方法委派给该对象的类加载器。如果此对象是由引导类加载器加载的，则该方法将委托给&lt;a href=&quot;classloader#getSystemResourceAsStream-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b5372a55ce3d26862d39626b3b9d3b969ad0169" translate="yes" xml:space="preserve">
          <source>Finds a resource, returning a URI to the resource in the module.</source>
          <target state="translated">找到一个资源,返回模块中资源的URI。</target>
        </trans-unit>
        <trans-unit id="ed8cb43bcaeb95ee97efb8215e1cda76cf74e245" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes.</source>
          <target state="translated">从用于加载类的搜索路径中查找指定名称的所有资源。</target>
        </trans-unit>
        <trans-unit id="c9f19df81fb6e096d5d9f2e170ac68ddf1f51e15" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an &lt;a href=&quot;../util/enumeration&quot;&gt;&lt;code&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">从用于加载类的搜索路径中查找指定名称的所有资源。作为这样找到的资源返回&lt;a href=&quot;../util/enumeration&quot;&gt; &lt;code&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="6db65724c0dcdf134606fcdb6f8d33703eea8aaf" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an &lt;a href=&quot;../util/enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">从用于加载类的搜索路径中查找指定名称的所有资源。作为这样找到的资源返回&lt;a href=&quot;../util/enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="55a4bac4e50df2c17deef8eb3caf2d5ba110c183" translate="yes" xml:space="preserve">
          <source>Finds all the applets in the document represented by this applet context.</source>
          <target state="translated">查找该小程序上下文所代表的文档中的所有小程序。</target>
        </trans-unit>
        <trans-unit id="1b5321ba487dd1a106c9c22d79eb3596b75366a1" translate="yes" xml:space="preserve">
          <source>Finds all the keys of the streams in this applet context.</source>
          <target state="translated">在这个applet上下文中查找流的所有键。</target>
        </trans-unit>
        <trans-unit id="39f5d82eb3d7b11a3d8ac86b88d2a2df6ee8cef9" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name.</source>
          <target state="translated">查找所有带有名字的资源。</target>
        </trans-unit>
        <trans-unit id="d5124138e515f2e5c141692f1b3bc3ccb6938cee" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code.</source>
          <target state="translated">查找所有给定名称的资源。资源是指一些可以被类代码访问的数据(图片、音频、文本等),其访问方式与代码的位置无关。</target>
        </trans-unit>
        <trans-unit id="38436b42de21930361f85514ca109e320b5247b6" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a &quot;/&quot;-separated path name that identifies the resource.</source>
          <target state="translated">查找所有给定名称的资源。资源是一些数据(图像、音频、文本等),可以通过独立于代码位置的方式被类代码访问。资源的名称是一个以&quot;/&quot;分隔的路径名,用来标识资源。</target>
        </trans-unit>
        <trans-unit id="4b1ce48837e6850260c79968ed0b2269cf2e69f8" translate="yes" xml:space="preserve">
          <source>Finds and loads the class with the specified name from the URL search path.</source>
          <target state="translated">从URL搜索路径中查找并加载指定名称的类。</target>
        </trans-unit>
        <trans-unit id="df29b59cb9718467c1be69b8d2b3d351189ed29b" translate="yes" xml:space="preserve">
          <source>Finds and loads the class with the specified name from the URL search path. Any URLs referring to JAR files are loaded and opened as needed until the class is found.</source>
          <target state="translated">从URL搜索路径中查找并加载指定名称的类。任何引用JAR文件的URL都会根据需要被加载和打开,直到找到该类。</target>
        </trans-unit>
        <trans-unit id="734fb3f929fe6c595373476e9b396277ea9acb50" translate="yes" xml:space="preserve">
          <source>Finds and returns the applet in the document represented by this applet context with the given name.</source>
          <target state="translated">在这个applet上下文所代表的文档中找到并返回给定名称的applet。</target>
        </trans-unit>
        <trans-unit id="6efa1c7133de00c902292f849e42cab66c2bf30f" translate="yes" xml:space="preserve">
          <source>Finds and returns the applet in the document represented by this applet context with the given name. The name can be set in the HTML tag by setting the &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="translated">使用给定名称在此applet上下文表示的文档中查找并返回applet。可以通过设置 &lt;code&gt;name&lt;/code&gt; 属性在HTML标记中设置名称。</target>
        </trans-unit>
        <trans-unit id="826006ce6b0bfbc05eef882e73ef3f4a88a02467" translate="yes" xml:space="preserve">
          <source>Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf.</source>
          <target state="translated">查找并返回这个节点的第一个叶子--这个节点或其第一个子节点的第一个叶子。</target>
        </trans-unit>
        <trans-unit id="2e81f88949c37c07f3655207654c6f1ff02ea557" translate="yes" xml:space="preserve">
          <source>Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf. Returns this node if it is a leaf.</source>
          <target state="translated">查找并返回这个节点的第一个叶子--这个节点或它第一个子节点的第一个叶子。如果是叶子,则返回这个节点。</target>
        </trans-unit>
        <trans-unit id="0dfe7ea429e898df4747e82380842367dfe7822a" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;Object&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="a1de64908a138ac2b969512261217a2f9b89a4c4" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;Object&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="471824617a02d7401e06edbf2cba89621eaf157b" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;boolean&lt;/code&gt; 数组之间第一个不匹配的索引，否则，如果未找到不匹配，则返回-1。</target>
        </trans-unit>
        <trans-unit id="16bd850905ee68a007cb8a2024360fbc0a2e3b9c" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;boolean&lt;/code&gt; 数组之间第一个不匹配的索引，否则，如果未找到不匹配，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="8af1b65e52b521319028673f12e78182856f0d7f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;byte&lt;/code&gt; 数组之间第一个不匹配的索引，否则，如果未找到不匹配，则返回-1。</target>
        </trans-unit>
        <trans-unit id="6c23c8b7c711b2ffaae82ef10428489bad839b8d" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;byte&lt;/code&gt; 数组之间第一个不匹配的索引，否则，如果未找到不匹配，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="eaed9c61269fc091d9f1c226a2ff5394434efe0f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;char&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="feaf4fa9a9c4db3540e98915c5fbb1133c126fd4" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;char&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="77caa5c4612949a9484309e089874cf165c4944b" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;double&lt;/code&gt; 精度数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="3ca55a946dae5d5567dd9ab37dc5bfea350cb56f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;double&lt;/code&gt; 精度数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="405070cadac309cec50ee953e8534c2a521e2ed6" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;float&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="ab12e15abef69acc8cb421ab25f399e2bf479ddf" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;float&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="6bb2edff1699617616a3a6252b05db8339216864" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;int&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="cf2cd8f73e9f0df443831e4decf67e8302ceca44" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;int&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="7640ecb391799ea47ce0a05fac90ebd2d4406e33" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;long&lt;/code&gt; 数组之间第一个不匹配的索引，否则，如果未找到不匹配，则返回-1。</target>
        </trans-unit>
        <trans-unit id="c387d49b98f035053dbb5044ea3928e42d130094" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;long&lt;/code&gt; 数组之间第一个不匹配的索引，否则，如果未找到不匹配，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="31d349f985f332d3adfc72eabc82e0873a2cff72" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;short&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="83efe8766b037cf2dbedd5ee02ebda531c264b9e" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">查找并返回两个 &lt;code&gt;short&lt;/code&gt; 数组之间的第一个不匹配项的索引，否则，如果未找到不匹配项，则返回-1。索引的范围是0（含）到较小数组的长度（含）。</target>
        </trans-unit>
        <trans-unit id="cd6ce7ae94e00786707c70ed422726fd0ba20fd1" translate="yes" xml:space="preserve">
          <source>Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf.</source>
          <target state="translated">查找并返回这个节点的最后一片叶子--这个节点或其最后一个子节点的最后一片叶子。</target>
        </trans-unit>
        <trans-unit id="164439e198c3039e6e880a85f9d4d01631fd6809" translate="yes" xml:space="preserve">
          <source>Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf. Returns this node if it is a leaf.</source>
          <target state="translated">查找并返回这个节点的最后一个叶子--这个节点或它最后一个子节点的最后一个叶子。如果这个节点是叶子,则返回这个节点。</target>
        </trans-unit>
        <trans-unit id="647b2a16f025254fb0bd9e745f4cc24e8cdef324" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner.</source>
          <target state="translated">从扫描器中找到并返回下一个完整的标记。</target>
        </trans-unit>
        <trans-unit id="b536d4be1e6419e284bb6980b9f4ac3ede52c086" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">查找并返回此扫描仪的下一个完整令牌。完整的标记在其前面，然后是与定界符模式匹配的输入。即使先前调用&lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; ，此方法也可能在等待输入扫描时阻塞。</target>
        </trans-unit>
        <trans-unit id="e03192b0758390c8721c03d454b5a28fca29e38d" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">查找并返回此扫描仪的下一个完整令牌。完整的标记在其前面，然后是与定界符模式匹配的输入。即使先前调用&lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; ，该方法也可能在等待输入扫描时阻塞。</target>
        </trans-unit>
        <trans-unit id="0a7f4e6baf18b340afad4b611a79fa216ceaf924" translate="yes" xml:space="preserve">
          <source>Finds and returns the offset, in bytes, of the first mismatch between this segment and a given other segment.</source>
          <target state="translated">查找并返回此段与其他段之间的第一个不匹配的偏移量,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="85a5f2fd6447660d847e036913ef39a78c0172fa" translate="yes" xml:space="preserve">
          <source>Finds and returns the offset, in bytes, of the first mismatch between this segment and a given other segment. The offset is relative to the &lt;a href=&quot;#baseAddress()&quot;&gt;&lt;code&gt;base address&lt;/code&gt;&lt;/a&gt; of each segment and will be in the range of 0 (inclusive) up to the &lt;a href=&quot;#byteSize()&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; (in bytes) of the smaller memory segment (exclusive).</source>
          <target state="translated">查找并返回此段与给定其他段之间的第一个不匹配的偏移量（以字节为单位）。偏移量相对于每个段的&lt;a href=&quot;#baseAddress()&quot;&gt; &lt;code&gt;base address&lt;/code&gt; &lt;/a&gt;，并且将在0（含）范围内，直至较小的内存段（不含）的&lt;a href=&quot;#byteSize()&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="b88493535824a41777147b9a978706b41af10e99" translate="yes" xml:space="preserve">
          <source>Finds and returns the position of the first mismatched byte in the content of two files, or &lt;code&gt;-1L&lt;/code&gt; if there is no mismatch.</source>
          <target state="translated">查找并返回两个文件内容中第一个不匹配字节的位置，如果没有不匹配，则返回 &lt;code&gt;-1L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3717ed7419c46bd2f32619cef4b586c218ffc288" translate="yes" xml:space="preserve">
          <source>Finds and returns the position of the first mismatched byte in the content of two files, or &lt;code&gt;-1L&lt;/code&gt; if there is no mismatch. The position will be in the inclusive range of &lt;code&gt;0L&lt;/code&gt; up to the size (in bytes) of the smaller file.</source>
          <target state="translated">查找并返回两个文件内容中第一个不匹配字节的位置，如果没有不匹配，则返回 &lt;code&gt;-1L&lt;/code&gt; 。该位置将在 &lt;code&gt;0L&lt;/code&gt; 的范围内，直至较小文件的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="36999fe6ae7c20759462e855faabaf02188c07bc" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between this buffer and a given buffer.</source>
          <target state="translated">查找并返回该缓冲区与给定缓冲区之间第一个不匹配的相对索引。</target>
        </trans-unit>
        <trans-unit id="3dd73180deca8608e4e6d7c807bfba4d221faed7" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between this buffer and a given buffer. The index is relative to the &lt;a href=&quot;buffer#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of each buffer and will be in the range of 0 (inclusive) up to the smaller of the &lt;a href=&quot;buffer#remaining()&quot;&gt;&lt;code&gt;remaining&lt;/code&gt;&lt;/a&gt; elements in each buffer (exclusive).</source>
          <target state="translated">查找并返回此缓冲区与给定缓冲区之间的第一个不匹配项的相对索引。索引相对于每个缓冲区的&lt;a href=&quot;buffer#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;，并且将在0（含）范围内，直至每个缓冲区中的&lt;a href=&quot;buffer#remaining()&quot;&gt; &lt;code&gt;remaining&lt;/code&gt; &lt;/a&gt;元素中的较小者（不含）。</target>
        </trans-unit>
        <trans-unit id="b58da2a9789bc8ef8f638d1ca6b0c57fbb5c55a7" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;Object&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="1a0287ca1c0041aa1ca56d3a6a48fc095e7d1c1a" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;Object&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="f051a554b3f50c21a3b76df3a905f6eec0fd69d0" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;boolean&lt;/code&gt; 数组之间第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="2115d772c75d3acca93c1ec517a5903ec1a651fe" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;boolean&lt;/code&gt; 数组之间第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="37734ee09887b82545bc12a1e9b1548f34118173" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;byte&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="4b5c861244fdb5c6bb8bad1d921aaeae48027e21" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;byte&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="888c8c8641d8a0e9e3dd78a08743e472d3744da6" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;char&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="c0d2939699ae0c46ba0d1082748bf6759200f74e" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;char&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="2879008d864fe91c23b3c64742d0bb06a08d3b01" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;double&lt;/code&gt; 精度数组之间第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="aa3650596a381c8ee41386b2e78ed1fdceea72b6" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;double&lt;/code&gt; 精度数组之间第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="f49404472cb21761bc1db025594e532d93fe8461" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;float&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="5db3c7377d896994590d3861d19d256ba1ccc519" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;float&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="206d0d2b16198bfdacaabdc35dd27611dc40b8a4" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;int&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="5afb6c2e85e54ec1129faad09602f0734b2a9584" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;int&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="575f005b6d315f1e0df25da7400db2dd886d9510" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;long&lt;/code&gt; 数组之间第一个不匹配的相对索引，否则，如果未找到不匹配，则返回-1。</target>
        </trans-unit>
        <trans-unit id="b8b2370ccc8193c2d134a36e7241bd91f7ed4b57" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;long&lt;/code&gt; 数组之间第一个不匹配的相对索引，否则，如果未找到不匹配，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="7285d0a8c39c024e8f8c609d179d28652b3b6a12" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;short&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。</target>
        </trans-unit>
        <trans-unit id="d69fabd445a4c966dbdcfd85252fd55dc9ba46eb" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">查找并返回指定范围内两个 &lt;code&gt;short&lt;/code&gt; 数组之间的第一个不匹配项的相对索引，否则，如果未找到不匹配项，则返回-1。索引将在0（含）范围内，直至较小范围的长度（含）范围内。</target>
        </trans-unit>
        <trans-unit id="651f0b1588d16672d6f790bc02ce852d03f535f0" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;.</source>
          <target state="translated">查找处于死锁状态的线程周期，这些线程等待获取对象监视器或可&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;拥有的同步器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="234d87c20314c8931be84d95b143bc1fe38bcb98" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;. Threads are &lt;em&gt;deadlocked&lt;/em&gt; in a cycle waiting for a lock of these two types if each thread owns one lock while trying to acquire another lock already held by another thread in the cycle.</source>
          <target state="translated">查找处于死锁状态并等待获取对象监视器或可&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;拥有的同步&lt;/a&gt;器的线程周期。如果每个线程拥有一个锁，同时试图获取该周期中另一个线程已经持有的另一个锁，则线程在一个周期中处于&lt;em&gt;死锁状态&lt;/em&gt;，等待这两种类型的锁。</target>
        </trans-unit>
        <trans-unit id="bb4e00b92009f6d879bb1b9b7ae8ae9bc1457107" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors.</source>
          <target state="translated">查找处于死锁中等待获取对象监控器的线程周期。</target>
        </trans-unit>
        <trans-unit id="f54f22922dc2809f07bd2d19da5ead6188f6a3c4" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</source>
          <target state="translated">查找处于死锁状态的线程周期，以获取对象监视器。即，被阻塞的线程在&lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;调用之后等待进入同步块或等待重新进入同步块，其中每个线程拥有一个监视器，同时试图获取一个周期中另一个线程已经拥有的另一个监视器。</target>
        </trans-unit>
        <trans-unit id="31a84b61eb1780643e1cf34b4b4c9457428f23fb" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</source>
          <target state="translated">查找处于死锁状态的线程周期，以获取对象监视器。也就是说，被阻塞的线程在&lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;调用之后等待进入同步块或等待重新进入同步块，其中每个线程拥有一个监视器，同时试图获取一个周期中另一个线程已经拥有的另一个监视器。</target>
        </trans-unit>
        <trans-unit id="2d348b1500d0bda42ac53aca4fc67227171af78e" translate="yes" xml:space="preserve">
          <source>Finds or creates a call site descriptor that only differs in its method type from this descriptor.</source>
          <target state="translated">查找或创建一个调用站点描述符,该描述符的方法类型仅与该描述符不同。</target>
        </trans-unit>
        <trans-unit id="a0783b346dbcab216cdadc5e656b34ae3f06a89c" translate="yes" xml:space="preserve">
          <source>Finds or creates a call site descriptor that only differs in its method type from this descriptor. Invokes &lt;a href=&quot;#changeMethodTypeInternal(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;changeMethodTypeInternal(MethodType)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建一个呼叫站点描述符，该描述符的方法类型仅与此描述符不同。调用&lt;a href=&quot;#changeMethodTypeInternal(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;changeMethodTypeInternal(MethodType)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cda4d1505516a811b2b3e03aa47f7c27fabec5e" translate="yes" xml:space="preserve">
          <source>Finds or creates a call site descriptor that only differs in its method type from this descriptor. Subclasses must override this method to return an object of their exact class. If an overridden method changes something other than the method type in the descriptor (its class, lookup, or operation), or returns null, an &lt;code&gt;AssertionError&lt;/code&gt; will be thrown from &lt;a href=&quot;#changeMethodType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;changeMethodType(MethodType)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建一个呼叫站点描述符，该描述符的方法类型仅与此描述符不同。子类必须重写此方法以返回其确切类的对象。如果重写的方法更改了描述符中的方法类型（其类，查找或操作）以外的其他方法，或者返回null，则将从&lt;a href=&quot;#changeMethodType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;changeMethodType(MethodType)&lt;/code&gt; &lt;/a&gt;抛出 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e066c1a33b9b0ca8b514db08c300d46df0c5c74d" translate="yes" xml:space="preserve">
          <source>Finds or creates a call site descriptor that only differs in its operation from this descriptor.</source>
          <target state="translated">查找或创建一个调用站点描述符,该描述符仅在操作上与本描述符不同。</target>
        </trans-unit>
        <trans-unit id="805ee872efc8e9c4e30ad93760bad903eeb2548f" translate="yes" xml:space="preserve">
          <source>Finds or creates a call site descriptor that only differs in its operation from this descriptor. Invokes &lt;a href=&quot;#changeOperationInternal(jdk.dynalink.Operation)&quot;&gt;&lt;code&gt;changeOperationInternal(Operation)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建一个呼叫站点描述符，该描述符的操作仅与此描述符不同。调用&lt;a href=&quot;#changeOperationInternal(jdk.dynalink.Operation)&quot;&gt; &lt;code&gt;changeOperationInternal(Operation)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20a29227adef8f75455f3338c1a42a4a86fc4081" translate="yes" xml:space="preserve">
          <source>Finds or creates a call site descriptor that only differs in its operation from this descriptor. Subclasses must override this method to return an object of their exact class. If an overridden method changes something other than the operation in the descriptor (its class, lookup, or method type), or returns null, an &lt;code&gt;AssertionError&lt;/code&gt; will be thrown from &lt;a href=&quot;#changeOperation(jdk.dynalink.Operation)&quot;&gt;&lt;code&gt;changeOperation(Operation)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建一个呼叫站点描述符，该描述符的操作仅与此描述符不同。子类必须重写此方法以返回其确切类的对象。如果重写的方法更改了描述符中的操作（其类，查找或方法类型）以外的其他操作，或者返回null，则将从&lt;a href=&quot;#changeOperation(jdk.dynalink.Operation)&quot;&gt; &lt;code&gt;changeOperation(Operation)&lt;/code&gt; &lt;/a&gt;抛出 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba7611e54b6204b2f8a3dec3bf1df20fc07ecbe1" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array.</source>
          <target state="translated">寻找或创建，其分量是方法类型的 &lt;code&gt;Object&lt;/code&gt; 带有可选尾随 &lt;code&gt;Object[]&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="3ff7a212ff7f7a09ea59a45a827e4ffe7a5f3f5d" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt;, except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt;.</source>
          <target state="translated">寻找或创建，其分量是方法类型的 &lt;code&gt;Object&lt;/code&gt; 带有可选尾随 &lt;code&gt;Object[]&lt;/code&gt; 数组。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。所有参数和返回类型将是 &lt;code&gt;Object&lt;/code&gt; ，除了最后的阵列参数如果有的话，这将是 &lt;code&gt;Object[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45d3ea261afc387a1647f2c5b77dc8ed3332e8fb" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt;, except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt;.</source>
          <target state="translated">寻找或创建，其分量是方法类型的 &lt;code&gt;Object&lt;/code&gt; 带有可选尾随 &lt;code&gt;Object[]&lt;/code&gt; 数组。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。所有参数和返回类型将是 &lt;code&gt;Object&lt;/code&gt; ，除了最后的阵列参数如果有的话，这将是 &lt;code&gt;Object[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="755a8a94c7a9ab2907842e0dfee1f16e4d53df3e" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">查找或创建其组成部分均为 &lt;code&gt;Object&lt;/code&gt; 的方法类型。</target>
        </trans-unit>
        <trans-unit id="0d6b3c78bbcb4400626c4bfa63f2c773c0deb337" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be Object.</source>
          <target state="translated">查找或创建其组成部分均为 &lt;code&gt;Object&lt;/code&gt; 的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。所有参数和返回类型均为Object。</target>
        </trans-unit>
        <trans-unit id="caec14e6ef50c8bf4fe8d7fb1bcde78604a44123" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be Object.</source>
          <target state="translated">查找或创建其组成部分均为 &lt;code&gt;Object&lt;/code&gt; 的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。所有参数和返回类型均为Object。</target>
        </trans-unit>
        <trans-unit id="f824399e52e4632197517ead0221bb98a004c902" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type.</source>
          <target state="translated">查找或创建一个具有不同返回类型的方法类型。</target>
        </trans-unit>
        <trans-unit id="f3c0b789090627249297e2ae876e09afa0acb458" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建具有不同返回类型的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="0a9a1f5d26c21c354b1653b215b25e0546272e13" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建具有不同返回类型的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="eac98585bca72a958f2f37bc86968d2acc943624" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type.</source>
          <target state="translated">查找或创建一个具有单一不同参数类型的方法类型。</target>
        </trans-unit>
        <trans-unit id="8028b74b7f92e3122ccb97bc0336386637297566" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建具有单个不同参数类型的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="2dd68a0e1c7f55f2ff719c1d2dddb6aaa215bd79" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建具有单个不同参数类型的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="a1c99958d01f0f97cb10abd374a0167e0d21f888" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types.</source>
          <target state="translated">查找或创建一个带有附加参数类型的方法类型。</target>
        </trans-unit>
        <trans-unit id="e5c6a19c8f2602a136a7293cd2b2f3b131a424fd" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建带有其他参数类型的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="bbd506dbecbb276790f829d0e64de83eba036633" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建带有其他参数类型的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="7b98e7dffd01824793c8528912738e7b4124b6c6" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted.</source>
          <target state="translated">查找或创建一个方法类型,其中省略了一些参数类型。</target>
        </trans-unit>
        <trans-unit id="bf0c0da371470fb5e60e235a385e8402c62509f3" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建省略了某些参数类型的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="54b87d121a8607e43933bceecb002602a25badd9" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建省略了某些参数类型的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="f884b03a5b33b1e32bad90a97235a0de49081b82" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components.</source>
          <target state="translated">用给定的组件查找或创建一个方法类型。</target>
        </trans-unit>
        <trans-unit id="1b02e6de98c28a9037e421b9fa1490b2feb2fa1d" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="e5af1ab6ed6484b3382fc7cd88a58813fbd016bf" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The leading parameter type is prepended to the remaining array.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。前导参数类型位于其余数组的前面。</target>
        </trans-unit>
        <trans-unit id="4675fcda352ad3f6aeeae071dd9a837bb7671506" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has no parameter types.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。生成的方法没有参数类型。</target>
        </trans-unit>
        <trans-unit id="41506aaeb882e9ec798c68b65f2e56a0ab0331db" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt;, and the specified return type.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。生成的方法具有与 &lt;code&gt;ptypes&lt;/code&gt; 相同的参数类型，并具有指定的返回类型。</target>
        </trans-unit>
        <trans-unit id="8611060ff08d24c9119ef98b7f64fb7d05825946" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the single given parameter type.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。生成的方法具有单个给定的参数类型。</target>
        </trans-unit>
        <trans-unit id="1c0153e37c9ed7069a0bb24c0086ac2d215a54ea" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。</target>
        </trans-unit>
        <trans-unit id="c751ba9d98f6a923a0919f62d20a3afdd914b9eb" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The leading parameter type is prepended to the remaining array.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。前导参数类型位于其余数组的前面。</target>
        </trans-unit>
        <trans-unit id="f9889c23b91b52f3101495e7cded108684d8c29b" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has no parameter types.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。结果方法没有参数类型。</target>
        </trans-unit>
        <trans-unit id="6de7eea09a64e013bd0a48c8be64c9529b3cc848" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt;, and the specified return type.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。生成的方法具有与 &lt;code&gt;ptypes&lt;/code&gt; 相同的参数类型，并具有指定的返回类型。</target>
        </trans-unit>
        <trans-unit id="ced68f4971421ced1d3f730ac43b178eec70ffde" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the single given parameter type.</source>
          <target state="translated">查找或创建具有给定组件的方法类型。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。结果方法具有单个给定的参数类型。</target>
        </trans-unit>
        <trans-unit id="44b3377984b9cb8741b25065174d56ab64617290" translate="yes" xml:space="preserve">
          <source>Finds or creates a named operation that differs from this one only in the name.</source>
          <target state="translated">查找或创建一个命名的操作,它与这个操作只有名称上的不同。</target>
        </trans-unit>
        <trans-unit id="e0054a38edd4bfc307f8a3961f084d14173e32b7" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor.</source>
          <target state="translated">查找或创建一个方法类型的实例,给定其字节码描述符的拼写。</target>
        </trans-unit>
        <trans-unit id="153a9dcaa8d7c983c86317eabbd8828f54846cea" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; on the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">在给定其字节码描述符的拼写的情况下，查找或创建方法类型的实例。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。可以通过在给定的加载器上调用&lt;a href=&quot;../classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt; &lt;/a&gt;来解析描述符字符串中嵌入的任何类或接口名称（如果为null，则在系统类加载器上）。</target>
        </trans-unit>
        <trans-unit id="ee25862dfddd4568d81b00e409dd2476efd74559" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">在给定其字节码描述符的拼写的情况下，查找或创建方法类型的实例。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。描述符字符串中嵌入的任何类或接口名称都将由给定的加载器解析（如果为null，则在系统类加载器上解析）。</target>
        </trans-unit>
        <trans-unit id="a14ed07f8800d1efe9366408a9e41bdecbbcd3dd" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; on the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">给定其字节码描述符的拼写，查找或创建方法类型的实例。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; 的&lt;/a&gt;便捷方法。可以通过在给定的加载器上调用&lt;a href=&quot;../classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt; &lt;/a&gt;来解析描述符字符串中嵌入的任何类或接口名称（如果为null，则在系统类加载器上）。</target>
        </trans-unit>
        <trans-unit id="d93f29ea75efef748d866f0da49f213c0e9f5ac7" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of the given method type.</source>
          <target state="translated">查找或创建一个指定方法类型的实例。</target>
        </trans-unit>
        <trans-unit id="569e9b52ae1ebdf9aa57f2038fa2d8126ed7ae0a" translate="yes" xml:space="preserve">
          <source>Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader.</source>
          <target state="translated">在为此类加载器定义的模块中查找具有给定&lt;a href=&quot;#binary-name&quot;&gt;二进制名称的&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="9c718b496a10f106690a3ed497808864ed26f125" translate="yes" xml:space="preserve">
          <source>Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader. Class loader implementations that support loading from modules should override this method.</source>
          <target state="translated">在为此类加载器定义的模块中查找具有给定&lt;a href=&quot;#binary-name&quot;&gt;二进制名称的&lt;/a&gt;类。支持从模块加载的类加载器实现应重写此方法。</target>
        </trans-unit>
        <trans-unit id="bd05c7e1ea365c2fd6afc2000bf12d4d55a3ec91" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</source>
          <target state="translated">查找具有指定&lt;a href=&quot;#binary-name&quot;&gt;二进制名称&lt;/a&gt;的类。</target>
        </trans-unit>
        <trans-unit id="16dea6a554a463b648694922297ca1a5e84ce68b" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method after checking the parent class loader for the requested class.</source>
          <target state="translated">查找具有指定&lt;a href=&quot;#binary-name&quot;&gt;二进制名称&lt;/a&gt;的类。该方法应由遵循用于加载类的委托模型的类加载器实现重写，并且在检查父类加载器中所请求的类之后，将由&lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;方法调用此方法。</target>
        </trans-unit>
        <trans-unit id="f5a871460eb19c436997b177615c5e7039668f5e" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method after checking the parent class loader for the requested class. The default implementation throws a &lt;code&gt;ClassNotFoundException&lt;/code&gt;.</source>
          <target state="translated">查找具有指定&lt;a href=&quot;#name&quot;&gt;二进制名称&lt;/a&gt;的类。该方法应由遵循用于加载类的委托模型的类加载器实现重写，并且将在检查父类加载器中的所请求类之后由&lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法调用。默认实现抛出 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2338a10197ea3d57784348c2e45f704a3ac4e87" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified binary name.</source>
          <target state="translated">查找具有指定二进制名称的类。</target>
        </trans-unit>
        <trans-unit id="7a08fb26c5b79da3a6185bed5bce5c9a4cffe54d" translate="yes" xml:space="preserve">
          <source>Finds the column for a character position.</source>
          <target state="translated">查找字符位置的列。</target>
        </trans-unit>
        <trans-unit id="996f97255c420b1ce4572fe1077c4c3576605028" translate="yes" xml:space="preserve">
          <source>Finds the column for a character position. Tab characters preceding the position on the same line will be expanded when calculating the column number.</source>
          <target state="translated">查找字符位置的列。计算列号时,同一行的位置前的制表符将被展开。</target>
        </trans-unit>
        <trans-unit id="a8c6ec34de5c0fbb0d83a91eba95b2eea61b8e53" translate="yes" xml:space="preserve">
          <source>Finds the greatest double less than &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">找到小于 &lt;code&gt;d&lt;/code&gt; 的最大两倍。</target>
        </trans-unit>
        <trans-unit id="a8df7423e6f70ccdd28b0c907eca102e98c4984e" translate="yes" xml:space="preserve">
          <source>Finds the greatest double less than &lt;code&gt;d&lt;/code&gt;. If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">找到小于 &lt;code&gt;d&lt;/code&gt; 的最大两倍。如果为 &lt;code&gt;NaN&lt;/code&gt; ，则返回相同的值。</target>
        </trans-unit>
        <trans-unit id="18a3710ff91d58cbca313d6f1f004f0b7bb471b7" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">查找大于 &lt;code&gt;d&lt;/code&gt; 的最小双精度数（如果 &lt;code&gt;positive&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ），或者小于 &lt;code&gt;d&lt;/code&gt; 的最大双精度数（如果 &lt;code&gt;positive&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7e85cb16e0275307112d08f73a57bb8b46a1cb08" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;). If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">查找大于 &lt;code&gt;d&lt;/code&gt; 的最小双精度数（如果 &lt;code&gt;positive&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ），或者小于 &lt;code&gt;d&lt;/code&gt; 的最大双精度数（如果 &lt;code&gt;positive&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ）。如果为 &lt;code&gt;NaN&lt;/code&gt; ，则返回相同的值。</target>
        </trans-unit>
        <trans-unit id="2eb38973e2c36f4d61719edd6f74236d73c6d18d" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;). If &lt;code&gt;NaN&lt;/code&gt;, returns same value. Does not affect floating-point flags, provided these member functions do not: Double.longBitsToDouble(long) Double.doubleToLongBits(double) Double.isNaN(double)</source>
          <target state="translated">查找大于 &lt;code&gt;d&lt;/code&gt; 的最小双精度数（如果 &lt;code&gt;positive&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ），或者小于 &lt;code&gt;d&lt;/code&gt; 的最大双精度数（如果 &lt;code&gt;positive&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ）。如果为 &lt;code&gt;NaN&lt;/code&gt; ，则返回相同的值。只要不影响这些成员函数，就不会影响浮点标志：Double.longBitsToDouble（long）Double.doubleToLongBits（double）Double.isNaN（double）</target>
        </trans-unit>
        <trans-unit id="fbe1e5e36b4f252382813559f64ee9ed227ae281" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">查找大于 &lt;code&gt;d&lt;/code&gt; 的最小两倍。</target>
        </trans-unit>
        <trans-unit id="5a9b77e9ccd9b30fd33d9d77ccc1bda8c29689f9" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt;. If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">查找大于 &lt;code&gt;d&lt;/code&gt; 的最小两倍。如果为 &lt;code&gt;NaN&lt;/code&gt; ，则返回相同的值。</target>
        </trans-unit>
        <trans-unit id="edeb02780dff02bcc45570d6a80c9c5d02401214" translate="yes" xml:space="preserve">
          <source>Finds the line containing a position; a line termination character is on the line it terminates.</source>
          <target state="translated">查找包含位置的行;行终止符在其终止的行上。</target>
        </trans-unit>
        <trans-unit id="2f44af75d9a63cc78ef7a212aaff2e3ec7ac94a9" translate="yes" xml:space="preserve">
          <source>Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt;, starting at offset &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">查找文档中下一个具有 &lt;code&gt;string&lt;/code&gt; 字符的字符，从offset &lt;code&gt;start&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="2303bad62024759df50ac8556ea8880a8bd8bb9b" translate="yes" xml:space="preserve">
          <source>Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt;, starting at offset &lt;code&gt;start&lt;/code&gt;. If there are no characters found, -1 will be returned.</source>
          <target state="translated">查找文档中下一个具有 &lt;code&gt;string&lt;/code&gt; 字符的字符，从offset &lt;code&gt;start&lt;/code&gt; 开始。如果找不到字符，将返回-1。</target>
        </trans-unit>
        <trans-unit id="553d7d48a10b65c06587ef089c4f5d89effff2d0" translate="yes" xml:space="preserve">
          <source>Finds the position corresponding to a (line,column).</source>
          <target state="translated">查找(行、列)对应的位置。</target>
        </trans-unit>
        <trans-unit id="a9bad9d05a61ad1610d085ed42eeeebc9ca3099d" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name.</source>
          <target state="translated">查找给定名称的资源。</target>
        </trans-unit>
        <trans-unit id="f95713d67a08f050d9ae3fd6ef313052ef9a316e" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code.</source>
          <target state="translated">查找给定名称的资源。资源是指一些可以被类代码访问的数据(图像、音频、文本等),其访问方式与代码的位置无关。</target>
        </trans-unit>
        <trans-unit id="781d4b515ca95fefadfde75c483c77560536603b" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a &quot;/&quot;-separated path name that identifies the resource.</source>
          <target state="translated">查找给定名称的资源。资源是一些数据(图像、音频、文本等),可以通过独立于代码位置的方式被类代码访问。资源的名称是一个以&quot;/&quot;分隔的路径名,用来标识资源。</target>
        </trans-unit>
        <trans-unit id="e48458ef6aafb5d40a3929be0d4826c7d1c93d2b" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. Class loader implementations should override this method to specify where to find resources.</source>
          <target state="translated">查找具有给定名称的资源。类加载器实现应该重载这个方法来指定在哪里查找资源。</target>
        </trans-unit>
        <trans-unit id="eb9a8a55a872ddd255aa5b300065d4935a31d282" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. Class loader implementations should override this method.</source>
          <target state="translated">查找给定名称的资源。类加载器的实现应该覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="cb6e13171ee3f9ef6b8e543d5e324426393d3511" translate="yes" xml:space="preserve">
          <source>Finds the resource with the specified name on the URL search path.</source>
          <target state="translated">在URL搜索路径上找到指定名称的资源。</target>
        </trans-unit>
        <trans-unit id="a70cc5049212a09770596ed10f8101cf332bf6d6" translate="yes" xml:space="preserve">
          <source>Finds the start position of a line.</source>
          <target state="translated">找到一条线的起始位置。</target>
        </trans-unit>
        <trans-unit id="e42778267befaa6d106f23e88a4e3f80b99d2de5" translate="yes" xml:space="preserve">
          <source>Finds the visible &lt;a href=&quot;field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; with the given non-ambiguous name.</source>
          <target state="translated">查找具有给定非歧义名称的可见&lt;a href=&quot;field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d09079fa89aef8cd4a41ddd54476309b454cb6b4" translate="yes" xml:space="preserve">
          <source>Finds the visible &lt;a href=&quot;field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; with the given non-ambiguous name. This method follows the inheritance rules specified in the JLS (8.3.3) to determine visibility.</source>
          <target state="translated">查找具有给定非歧义名称的可见&lt;a href=&quot;field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;。此方法遵循JLS（8.3.3）中指定的继承规则来确定可见性。</target>
        </trans-unit>
        <trans-unit id="71541cfc98e9ab7dae08a661637647155ce4bac0" translate="yes" xml:space="preserve">
          <source>Finds using &lt;a href=&quot;#findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;findSpecial(Class, String, MethodType)&lt;/code&gt;&lt;/a&gt; a method on that lookup's class.</source>
          <target state="translated">使用&lt;a href=&quot;#findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;findSpecial(Class, String, MethodType)&lt;/code&gt; &lt;/a&gt;查找该查找类的方法。</target>
        </trans-unit>
        <trans-unit id="8ae4a59ae9595aa0a12f4a8e4ab446fc53cea0ac" translate="yes" xml:space="preserve">
          <source>Finds using &lt;a href=&quot;#findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;findSpecial(Class, String, MethodType)&lt;/code&gt;&lt;/a&gt; a method on that lookup's class. Useful in classes' code for convenient linking to their own privates. It's also more convenient than &lt;code&gt;findSpecial&lt;/code&gt; in that you can just list the parameter types, and don't have to specify lookup class.</source>
          <target state="translated">使用&lt;a href=&quot;#findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;findSpecial(Class, String, MethodType)&lt;/code&gt; &lt;/a&gt;查找该查找类的方法。在类的代码中很有用，可方便地链接到自己的私有对象。它也比 &lt;code&gt;findSpecial&lt;/code&gt; 更方便，因为您只需列出参数类型，而不必指定查找类。</target>
        </trans-unit>
        <trans-unit id="3240a05d4e37ca1d36366027783c9290f6d6441f" translate="yes" xml:space="preserve">
          <source>Finds using &lt;a href=&quot;#findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;findStatic(Class, String, MethodType)&lt;/code&gt;&lt;/a&gt; a method on that lookup's class.</source>
          <target state="translated">使用&lt;a href=&quot;#findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;findStatic(Class, String, MethodType)&lt;/code&gt; &lt;/a&gt;查找该查找类的方法。</target>
        </trans-unit>
        <trans-unit id="755b7779d6765ed81136c861cb331e5ca80e92c8" translate="yes" xml:space="preserve">
          <source>Finds using &lt;a href=&quot;#findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;findStatic(Class, String, MethodType)&lt;/code&gt;&lt;/a&gt; a method on that lookup's class. Useful in classes' code for convenient linking to their own privates. It's easier to use than &lt;code&gt;findStatic&lt;/code&gt; in that you can just list the parameter types, and don't have to specify lookup class.</source>
          <target state="translated">使用&lt;a href=&quot;#findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;findStatic(Class, String, MethodType)&lt;/code&gt; &lt;/a&gt;查找该查找类的方法。在类的代码中很有用，可方便地链接到自己的私有对象。它比 &lt;code&gt;findStatic&lt;/code&gt; 更易于使用，因为您只需列出参数类型，而不必指定查找类。</target>
        </trans-unit>
        <trans-unit id="4ac987e36c94cd1a424c394fd2e53f3d45f6c901" translate="yes" xml:space="preserve">
          <source>Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; immediately after this method.</source>
          <target state="translated">可以通过两种方式对间隙和重叠进行更精细的控制。如果您只是想在重叠处使用更高的偏移量，请在此方法之后立即调用&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44c6084b01b445cf12e7e4c28f535b70a5b3a288" translate="yes" xml:space="preserve">
          <source>Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; immediately after this method.</source>
          <target state="translated">可以通过两种方式对间隙和重叠进行更精细的控制。如果您只是想在重叠处使用更高的偏移量，请在此方法之后立即调用&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c29493a34a4dd5c58c02ca32396105a6340fd8a" translate="yes" xml:space="preserve">
          <source>Finer control over the WebSocket Opening Handshake can be achieved by using a custom &lt;code&gt;HttpClient&lt;/code&gt;.</source>
          <target state="translated">通过使用自定义 &lt;code&gt;HttpClient&lt;/code&gt; 可以更好地控制WebSocket打开握手。</target>
        </trans-unit>
        <trans-unit id="7d6315fcd4e1f21d6c5e8ddfedb5c0d2367da837" translate="yes" xml:space="preserve">
          <source>Finishes a multiple-part encryption or decryption operation, depending on how this cipher was initialized.</source>
          <target state="translated">根据这个密码的初始化方式,完成多部分的加密或解密操作。</target>
        </trans-unit>
        <trans-unit id="5ac0306b0ad5993f87d84296e6e19b711bd7f410" translate="yes" xml:space="preserve">
          <source>Finishes the MAC operation.</source>
          <target state="translated">完成MAC操作。</target>
        </trans-unit>
        <trans-unit id="3b39857f6b67ccd1155138cd5b904de0cf317e58" translate="yes" xml:space="preserve">
          <source>Finishes the process of connecting a socket channel.</source>
          <target state="translated">完成连接插座通道的过程。</target>
        </trans-unit>
        <trans-unit id="886aaf850fdf9b9af36ee4f66492c97ee21b7578" translate="yes" xml:space="preserve">
          <source>Finishes the process of connecting an SCTP channel.</source>
          <target state="translated">完成连接SCTP通道的过程。</target>
        </trans-unit>
        <trans-unit id="0c5e8e9fdc708156343f8313826cac87b252a6b0" translate="yes" xml:space="preserve">
          <source>Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">完成签名操作，并将生成的签名字节存储在提供的缓冲区 &lt;code&gt;outbuf&lt;/code&gt; 中，从 &lt;code&gt;offset&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="55822bdee2f9fef91204ece6141d244e5a1799c3" translate="yes" xml:space="preserve">
          <source>Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;. The format of the signature depends on the underlying signature scheme.</source>
          <target state="translated">完成签名操作，并将生成的签名字节存储在提供的缓冲区 &lt;code&gt;outbuf&lt;/code&gt; 中，从 &lt;code&gt;offset&lt;/code&gt; 开始。签名的格式取决于基础签名方案。</target>
        </trans-unit>
        <trans-unit id="fdd7ec97e8964605068427812b100a1e9dac6121" translate="yes" xml:space="preserve">
          <source>Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">完成此签名操作，并将生成的签名字节存储在提供的缓冲区 &lt;code&gt;outbuf&lt;/code&gt; 中，从 &lt;code&gt;offset&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="664444316115d431c1788278996ab50a5022028c" translate="yes" xml:space="preserve">
          <source>Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;. The format of the signature depends on the underlying signature scheme.</source>
          <target state="translated">完成此签名操作，并将结果签名字节从 &lt;code&gt;offset&lt;/code&gt; 开始存储在提供的缓冲区 &lt;code&gt;outbuf&lt;/code&gt; 中。签名的格式取决于基础签名方案。</target>
        </trans-unit>
        <trans-unit id="84838ca2a969d7b013a01fee8917ab060f79232d" translate="yes" xml:space="preserve">
          <source>Finishes writing compressed data to the output stream without closing the underlying stream.</source>
          <target state="translated">在不关闭底层流的情况下,完成向输出流写入压缩数据。</target>
        </trans-unit>
        <trans-unit id="c78d72a268ed639674d9989dffe4bab9dbd346f3" translate="yes" xml:space="preserve">
          <source>Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">在不关闭底层流的情况下,完成将压缩数据写入输出流。当对同一输出流连续应用多个过滤器时,请使用此方法。</target>
        </trans-unit>
        <trans-unit id="f8adba988e7c013ccb0eb762f6cf5eeed903e3f8" translate="yes" xml:space="preserve">
          <source>Finishes writing the contents of the ZIP output stream without closing the underlying stream.</source>
          <target state="translated">在不关闭底层流的情况下,完成ZIP输出流的内容写入。</target>
        </trans-unit>
        <trans-unit id="ad1b71c11246b0b6713d9ea2eb36b6cf4f329a8e" translate="yes" xml:space="preserve">
          <source>Finishes writing the contents of the ZIP output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">在不关闭底层流的情况下,完成ZIP输出流的内容写入。当对同一输出流连续应用多个过滤器时,请使用此方法。</target>
        </trans-unit>
        <trans-unit id="f5bb460836a561078aab2dda62c0c063c0f8bd42" translate="yes" xml:space="preserve">
          <source>Finishes writing uncompressed data to the output stream without closing the underlying stream.</source>
          <target state="translated">在不关闭底层流的情况下,完成向输出流写入未压缩的数据。</target>
        </trans-unit>
        <trans-unit id="26f022245e2c68d8c1c43250ca56653f380f197f" translate="yes" xml:space="preserve">
          <source>Finishes writing uncompressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">在不关闭底层流的情况下,完成向输出流写入未压缩数据。当对同一输出流连续应用多个过滤器时,请使用此方法。</target>
        </trans-unit>
        <trans-unit id="47bf70ea26f1d56954d9d56dceffc42023159f37" translate="yes" xml:space="preserve">
          <source>Finishings</source>
          <target state="translated">Finishings</target>
        </trans-unit>
        <trans-unit id="613845f04d4258d53ec965e5ad21bbe27e9b3457" translate="yes" xml:space="preserve">
          <source>Finishings.getCategory()</source>
          <target state="translated">Finishings.getCategory()</target>
        </trans-unit>
        <trans-unit id="e267c2aa2ff11c4414aa4d45d764b04da2288d05" translate="yes" xml:space="preserve">
          <source>Finishings.getEnumValueTable()</source>
          <target state="translated">Finishings.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="aaa82961c4da64e927622cf2142e00c401f42f81" translate="yes" xml:space="preserve">
          <source>Finishings.getName()</source>
          <target state="translated">Finishings.getName()</target>
        </trans-unit>
        <trans-unit id="5b15b4c91296746e3b2afd503a32d07b02cd825c" translate="yes" xml:space="preserve">
          <source>Finishings.getOffset()</source>
          <target state="translated">Finishings.getOffset()</target>
        </trans-unit>
        <trans-unit id="c3ae27c44b2b5d021db8ee2080b698465cc55fe5" translate="yes" xml:space="preserve">
          <source>Finishings.getStringTable()</source>
          <target state="translated">Finishings.getStringTable()</target>
        </trans-unit>
        <trans-unit id="7eef80d93d788314330426331bc223ed843e0b0e" translate="yes" xml:space="preserve">
          <source>Fire &lt;code&gt;PropertyChange&lt;/code&gt; listener, if one is registered, when children are added or removed.</source>
          <target state="translated">添加或删除子项时，触发 &lt;code&gt;PropertyChange&lt;/code&gt; 侦听器（如果已注册）。</target>
        </trans-unit>
        <trans-unit id="57ad4ef75f7f2853dc5f7ec8695be63b2c37c0e1" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when children added/removed.</source>
          <target state="translated">当添加/删除子代时,如果注册了PropertyChange监听器,则启动该监听器。</target>
        </trans-unit>
        <trans-unit id="31ba180507c66427d34679b2fbf4e571699f61b4" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when focus events happen</source>
          <target state="translated">当焦点事件发生时,如果注册了PropertyChange监听器,则会触发该监听器。</target>
        </trans-unit>
        <trans-unit id="fcb8d557480a7ee672901611680f258737cf3936" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when shown/hidden..</source>
          <target state="translated">当显示/隐藏时,如果有注册的PropertyChange监听器,则会触发该监听器。</target>
        </trans-unit>
        <trans-unit id="09c71b029c9bf07168317bfb4ae358cc9e8148dd" translate="yes" xml:space="preserve">
          <source>Fire a BeanContextshipEvent on the BeanContextMembershipListener interface</source>
          <target state="translated">在BeanContextMembershipListener接口上启动BeanContextshipEvent。</target>
        </trans-unit>
        <trans-unit id="0aa3a904c5ae23735f848b24a71f336108a09eee" translate="yes" xml:space="preserve">
          <source>Fire a visible data property change notification.</source>
          <target state="translated">发射一个可见的数据属性变化通知。</target>
        </trans-unit>
        <trans-unit id="72e5526ef5cbbe55f1ef6e3b276cadbf88924a85" translate="yes" xml:space="preserve">
          <source>Fire a visible data property change notification. A 'visible' data property is one that represents something about the way the component appears on the display, where that appearance isn't bound to any other property. It notifies screen readers that the visual appearance of the component has changed, so they can notify the user.</source>
          <target state="translated">发出可见的数据属性更改通知。可见的 &quot;数据属性是指一个代表组件在显示器上显示方式的属性,它的外观不与任何其他属性绑定。它通知屏幕阅读器组件的视觉外观发生了变化,因此他们可以通知用户。</target>
        </trans-unit>
        <trans-unit id="103cdcb81226678781c9b0730e47e90332c7adf2" translate="yes" xml:space="preserve">
          <source>Fire accessible property change events when the state of the toggle button changes.</source>
          <target state="translated">当切换按钮的状态改变时,发射可访问的属性改变事件。</target>
        </trans-unit>
        <trans-unit id="f14775246233654a4a799ecb2452e052e32512ad" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; indicating that a new service has become available.</source>
          <target state="translated">触发一个 &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; ,指示新服务已变得可用。</target>
        </trans-unit>
        <trans-unit id="06abccd3849a5f91d1b6a7e9ac89b35962c48a5d" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; notifying of a new service.</source>
          <target state="translated">触发一个 &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; 通知新服务。</target>
        </trans-unit>
        <trans-unit id="503df8a64c51c652c242e07836048d4e0b429689" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; notifying of a service being revoked.</source>
          <target state="translated">触发一个 &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; ,通知已撤销的服务。</target>
        </trans-unit>
        <trans-unit id="bd34decd0218e3d4c1125508671afd92c9d2e750" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; indicating that a particular service is no longer available.</source>
          <target state="translated">触发一个 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; ,指示特定的服务不再可用。</target>
        </trans-unit>
        <trans-unit id="3f3d2a19df8052d9da98f7fd62dc3439975abed1" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a bound property.</source>
          <target state="translated">响应绑定属性的变化而触发PropertyChangeEvent。</target>
        </trans-unit>
        <trans-unit id="e9446dd2a1169cbdbaecb1f508d827a91e6ae858" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a bound property. The event will be delivered to all registered PropertyChangeListeners. No event will be delivered if oldValue and newValue are the same.</source>
          <target state="translated">响应一个绑定属性的变化而触发一个 PropertyChangeEvent。该事件将被传递给所有注册的PropertyChangeListeners。如果oldValue和newValue是相同的,则不会发送事件。</target>
        </trans-unit>
        <trans-unit id="a957a72b34aec00b972da201a946e1431607e82f" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a vetoable property.</source>
          <target state="translated">当可否决属性发生变化时,触发PropertyChangeEvent。</target>
        </trans-unit>
        <trans-unit id="986cd3a235352958182fd166c7bf37c930dc945e" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a vetoable property. The event will be delivered to all registered VetoableChangeListeners. If a VetoableChangeListener throws a PropertyVetoException, a new event is fired reverting all VetoableChangeListeners to the old value and the exception is then rethrown. No event will be delivered if oldValue and newValue are the same.</source>
          <target state="translated">当一个可否决属性发生变化时,触发一个PropertyChangeEvent。该事件将被传递给所有注册的VetoableChangeListeners。如果一个VetoableChangeListener抛出一个PropertyVetoException,一个新的事件会被触发,将所有的VetoableChangeListeners恢复到旧的值,然后重新抛出异常。如果oldValue和newValue是相同的,则不会传递任何事件。</target>
        </trans-unit>
        <trans-unit id="0272e05986be98da0beab49be185a4045f3b55f6" translate="yes" xml:space="preserve">
          <source>Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="translated">向已注册的监听器发射属性变更事件,以跟踪所有属性或指定名称的属性的更新。</target>
        </trans-unit>
        <trans-unit id="fb3b178ed64e3669aa41e0d31c4e41b078ca585c" translate="yes" xml:space="preserve">
          <source>Fires a property change for the INVOKES_STOP_CELL_EDITING_PROPERTY.</source>
          <target state="translated">触发INVOKES_STOP_CELL_EDITING_PROPERTY的属性变化。</target>
        </trans-unit>
        <trans-unit id="2ab9d718e99020efac9e65bbfce54a784c540be5" translate="yes" xml:space="preserve">
          <source>Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation.</source>
          <target state="translated">触发 &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; 事件，然后执行内部框架的默认关闭操作指定的操作。</target>
        </trans-unit>
        <trans-unit id="968363cc64c7c990ddd76a14502d95e3f36c269c" translate="yes" xml:space="preserve">
          <source>Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation. This method is typically invoked by the look-and-feel-implemented action handler for the internal frame's close button.</source>
          <target state="translated">触发 &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; 事件，然后执行内部框架的默认关闭操作指定的操作。通常由外观框架的关闭按钮的外观实现动作处理程序调用此方法。</target>
        </trans-unit>
        <trans-unit id="b02cae2b2657360ceee054992ea59480141cb69c" translate="yes" xml:space="preserve">
          <source>Fires an internal frame event.</source>
          <target state="translated">发射一个内部框架事件。</target>
        </trans-unit>
        <trans-unit id="89c568029389405c57e9dea492e5cd3bb5c9b9f1" translate="yes" xml:space="preserve">
          <source>Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt;s at specified intervals.</source>
          <target state="translated">以指定的时间间隔触发一个或多个 &lt;code&gt;ActionEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="559c22a99a880d37fdcacb440db810f4efae3bc8" translate="yes" xml:space="preserve">
          <source>Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt;s at specified intervals. An example use is an animation object that uses a &lt;code&gt;Timer&lt;/code&gt; as the trigger for drawing its frames.</source>
          <target state="translated">以指定的时间间隔触发一个或多个 &lt;code&gt;ActionEvent&lt;/code&gt; 。一个示例用途是一个动画对象，该对象使用 &lt;code&gt;Timer&lt;/code&gt; 作为触发绘制其帧的触发器。</target>
        </trans-unit>
        <trans-unit id="aff8f470ff4d85acb0ffa60c7430fe9d00f9abd6" translate="yes" xml:space="preserve">
          <source>First Element (Head)</source>
          <target state="translated">第一要素(头)</target>
        </trans-unit>
        <trans-unit id="c00bead1c81e91e54625c2709aaa9b013a2b0de5" translate="yes" xml:space="preserve">
          <source>First Week</source>
          <target state="translated">第一周</target>
        </trans-unit>
        <trans-unit id="71d34940343df5fe917e10802c850a4a1560494d" translate="yes" xml:space="preserve">
          <source>First a list is created consisting of two strings: &quot;one&quot; and &quot;two&quot;. Then a stream is created from that list. Next the list is modified by adding a third string: &quot;three&quot;. Finally the elements of the stream are collected and joined together. Since the list was modified before the terminal &lt;code&gt;collect&lt;/code&gt; operation commenced the result will be a string of &quot;one two three&quot;. All the streams returned from JDK collections, and most other JDK classes, are well-behaved in this manner; for streams generated by other libraries, see &lt;a href=&quot;package-summary#StreamSources&quot;&gt;Low-level stream construction&lt;/a&gt; for requirements for building well-behaved streams.</source>
          <target state="translated">首先，创建一个由两个字符串组成的列表：&amp;ldquo;一个&amp;rdquo;和&amp;ldquo;两个&amp;rdquo;。然后从该列表创建一个流。接下来，通过添加第三个字符串&amp;ldquo;三&amp;rdquo;来修改列表。最终，将流中的元素收集起来并结合在一起。由于列表是在终端 &lt;code&gt;collect&lt;/code&gt; 操作开始之前被修改的，因此结果将是字符串&amp;ldquo;一二三&amp;rdquo;。从JDK集合返回的所有流以及大多数其他JDK类都以这种方式表现良好。有关其他库生成的流的信息，请参阅&lt;a href=&quot;package-summary#StreamSources&quot;&gt;低级流构建&lt;/a&gt;以了解构建行为良好的流的要求。</target>
        </trans-unit>
        <trans-unit id="a4976839981b7259ef12f8c95835462246377c8c" translate="yes" xml:space="preserve">
          <source>First a list is created consisting of two strings: &quot;one&quot;; and &quot;two&quot;. Then a stream is created from that list. Next the list is modified by adding a third string: &quot;three&quot;. Finally the elements of the stream are collected and joined together. Since the list was modified before the terminal &lt;code&gt;collect&lt;/code&gt; operation commenced the result will be a string of &quot;one two three&quot;. All the streams returned from JDK collections, and most other JDK classes, are well-behaved in this manner; for streams generated by other libraries, see &lt;a href=&quot;package-summary#StreamSources&quot;&gt;Low-level stream construction&lt;/a&gt; for requirements for building well-behaved streams.</source>
          <target state="translated">首先，创建一个由两个字符串组成的列表：&amp;ldquo; one&amp;rdquo;;和&amp;ldquo;两个&amp;rdquo;。然后从该列表创建一个流。接下来，通过添加第三个字符串&amp;ldquo;三&amp;rdquo;来修改列表。最后，将流中的元素收集起来并结合在一起。由于列表是在终端 &lt;code&gt;collect&lt;/code&gt; 操作开始之前修改的，因此结果将是字符串&amp;ldquo;一二三&amp;rdquo;。从JDK集合返回的所有流以及大多数其他JDK类都以这种方式表现良好。有关其他库生成的流的信息，请参阅&lt;a href=&quot;package-summary#StreamSources&quot;&gt;低级流构建&lt;/a&gt;以了解构建行为良好的流的要求。</target>
        </trans-unit>
        <trans-unit id="39b07f53f07df567f05d16e0e9893b4691140fd1" translate="yes" xml:space="preserve">
          <source>First day: Monday</source>
          <target state="translated">第一天 星期一</target>
        </trans-unit>
        <trans-unit id="4e19c31cb79791e4145b98235bbf3558ea85be48" translate="yes" xml:space="preserve">
          <source>First it finds any custom &lt;code&gt;LoggerFinder&lt;/code&gt; provider using the &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; facility with the &lt;a href=&quot;classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt;.</source>
          <target state="translated">首先，它使用&lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;工具和&lt;a href=&quot;classloader#getSystemClassLoader()&quot;&gt;系统类加载器&lt;/a&gt;查找任何自定义 &lt;code&gt;LoggerFinder&lt;/code&gt; 提供程序。</target>
        </trans-unit>
        <trans-unit id="d4c478e34da09cdfa9e1505ccf9f2c5cb7d8a64d" translate="yes" xml:space="preserve">
          <source>First tag value.</source>
          <target state="translated">第一个标签值。</target>
        </trans-unit>
        <trans-unit id="1029f6b364a8a29e356b09dc711eef15ac82d32a" translate="yes" xml:space="preserve">
          <source>First the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">首先，不带参数调用此线程的 &lt;code&gt;checkAccess&lt;/code&gt; 方法。这可能导致抛出 &lt;code&gt;SecurityException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="758ee2de5be3bc458e3bd5ada5df83a699dc7690" translate="yes" xml:space="preserve">
          <source>First the value of the attribute</source>
          <target state="translated">首先是属性的值</target>
        </trans-unit>
        <trans-unit id="41d531b50057258f52a83c10f4ebe55993a48c35" translate="yes" xml:space="preserve">
          <source>First wire handle to be assigned.</source>
          <target state="translated">第一个要分配的线柄。</target>
        </trans-unit>
        <trans-unit id="60c563401af656126385313287022f70e55351b3" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;getBundle&lt;/code&gt; tries loading a resource bundle in the following sequence.</source>
          <target state="translated">首先， &lt;code&gt;getBundle&lt;/code&gt; 尝试按以下顺序加载资源束。</target>
        </trans-unit>
        <trans-unit id="a54b1c1f9ec4ef87f59dee759620de770d67eb72" translate="yes" xml:space="preserve">
          <source>First, an object of a subclass of &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; is required, to export the connector server through RMI:</source>
          <target state="translated">首先，需要&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt;子类的对象才能通过RMI导出连接器服务器：</target>
        </trans-unit>
        <trans-unit id="9461c5c263d4215758929229f19d75328b0ed69e" translate="yes" xml:space="preserve">
          <source>First, if a security manager exists, its &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is removed.</source>
          <target state="translated">首先，如果存在安全管理器，则使用 &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; 方法。这可能会导致引发SecurityException。如果没有抛出异常，则删除指定的属性。</target>
        </trans-unit>
        <trans-unit id="5919a9ab86c2bfa79c63f16130d9e204af75ed76" translate="yes" xml:space="preserve">
          <source>First, if a security manager exists, its &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is set to the given value.</source>
          <target state="translated">首先，如果存在安全管理器，则使用 &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; 方法。这可能会导致引发SecurityException。如果没有抛出异常，则将指定的属性设置为给定值。</target>
        </trans-unit>
        <trans-unit id="630cec87c3fe44b8627bf17e36681c50123374a9" translate="yes" xml:space="preserve">
          <source>First, if the parent is not &lt;code&gt;null&lt;/code&gt;, the &lt;code&gt;checkAccess&lt;/code&gt; method of the parent thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">首先，如果父级不为 &lt;code&gt;null&lt;/code&gt; ，则不带任何参数调用父级线程组的 &lt;code&gt;checkAccess&lt;/code&gt; 方法。这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="7532f9af652d35ab51ddf5cb2ea52ae6efb5b3dd" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkLink&lt;/code&gt; method is called with the &lt;code&gt;filename&lt;/code&gt; as its argument. This may result in a security exception.</source>
          <target state="translated">首先，如果有安全管理器，则以 &lt;code&gt;filename&lt;/code&gt; 作为参数调用其 &lt;code&gt;checkLink&lt;/code&gt; 方法。这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="5a538643b35041ff23eafe84a5ba6a62d3f17d2c" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkLink&lt;/code&gt; method is called with the &lt;code&gt;libname&lt;/code&gt; as its argument. This may result in a security exception.</source>
          <target state="translated">首先，如果有安全管理器， &lt;code&gt;checkLink&lt;/code&gt; 方法被称为与 &lt;code&gt;libname&lt;/code&gt; 作为其参数。这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="da67ed31dd77ca2507f91362c6d50c04b87cc285" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;requestPasswordAuthentication&quot;)&lt;/code&gt; permission. This may result in a java.lang.SecurityException.</source>
          <target state="translated">首先，如果存在安全管理器，则使用 &lt;code&gt;NetPermission(&quot;requestPasswordAuthentication&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法。这可能会导致java.lang.SecurityException。</target>
        </trans-unit>
        <trans-unit id="e92bf33f401e22ad0ecd59d2145290ed31c93e94" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;setDefaultAuthenticator&quot;)&lt;/code&gt; permission. This may result in a java.lang.SecurityException.</source>
          <target state="translated">首先，如果存在安全管理器，则使用 &lt;code&gt;NetPermission(&quot;setDefaultAuthenticator&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法。这可能会导致java.lang.SecurityException。</target>
        </trans-unit>
        <trans-unit id="7df8a0d0b6353e40a34478ed736682764f8e4215" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a0db3136da99e70ab98ef55d4f04adf040acbbf0" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; error output stream.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法，以查看是否可以重新分配&amp;ldquo;标准&amp;rdquo;错误输出流。</target>
        </trans-unit>
        <trans-unit id="3286657453eb5380ab0e600fb164deee9c401b19" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; input stream.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法，以查看是否可以重新分配&amp;ldquo;标准&amp;rdquo;输入流。</target>
        </trans-unit>
        <trans-unit id="8f14129c78c7cdc361a044b07bb94220d3ada946" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; output stream.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法，以查看是否可以重新分配&amp;ldquo;标准&amp;rdquo;输出流。</target>
        </trans-unit>
        <trans-unit id="b817255be7810ed41874fb7dcec80f29e4821283" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;java.security.SecurityPermission(&quot;getProperty.&quot;+key)&lt;/code&gt; permission to see if it's ok to retrieve the specified security property value..</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;java.security.SecurityPermission(&quot;getProperty.&quot;+key)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法，以查看是否可以检索指定的安全属性值。</target>
        </trans-unit>
        <trans-unit id="4940590aa7a1771db205809b7f83aab538ac2e95" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;java.security.SecurityPermission(&quot;setProperty.&quot;+key)&lt;/code&gt; permission to see if it's ok to set the specified security property value.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;java.security.SecurityPermission(&quot;setProperty.&quot;+key)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法，以查看是否可以设置指定的安全属性值。</target>
        </trans-unit>
        <trans-unit id="7c9a3e471a0ae2be601b4ce824281ae03928419f" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;listenToAllAWTEvents&quot;)&lt;/code&gt; permission. This may result in a SecurityException.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;AWTPermission(&quot;listenToAllAWTEvents&quot;)&lt;/code&gt; 权限调用其 &lt;code&gt;checkPermission&lt;/code&gt; 方法。这可能会导致SecurityException。</target>
        </trans-unit>
        <trans-unit id="194e4ab2ae30c7d0955502c66727b6b7e5e58bd7" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called with no arguments. This may result in a security exception.</source>
          <target state="translated">首先，如果有安全管理器，则不带任何参数调用其 &lt;code&gt;checkPropertiesAccess&lt;/code&gt; 方法。这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="99dc959cc03b1ab4772a53690e57b6c39ceb865d" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a SecurityException.</source>
          <target state="translated">首先，如果有安全管理器，则调用其 &lt;code&gt;checkPropertiesAccess&lt;/code&gt; 方法。这可能会导致SecurityException。</target>
        </trans-unit>
        <trans-unit id="b2519f0af4c0bcba466e23def0138c59b105fbcf" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertyAccess&lt;/code&gt; method is called with the &lt;code&gt;key&lt;/code&gt; as its argument.</source>
          <target state="translated">首先，如果有安全管理器，则将其 &lt;code&gt;key&lt;/code&gt; 作为参数调用其 &lt;code&gt;checkPropertyAccess&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="630da8e247c9d17ef272d4b3fa1fb7ed11938729" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertyAccess&lt;/code&gt; method is called with the key as its argument. This may result in a SecurityException.</source>
          <target state="translated">首先，如果有安全管理器，则将其密钥作为参数调用其 &lt;code&gt;checkPropertyAccess&lt;/code&gt; 方法。这可能会导致SecurityException。</target>
        </trans-unit>
        <trans-unit id="657cb1cbf04c321e29cc58b264339b9d12a9d4a1" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument to ensure the read is allowed.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;name&lt;/code&gt; 参数作为其参数来调用其 &lt;code&gt;checkRead&lt;/code&gt; 方法，以确保允许读取。</target>
        </trans-unit>
        <trans-unit id="52905e51dc583591ba87eca8817ee992cbffb075" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;name&lt;/code&gt; 参数作为其参数来调用其 &lt;code&gt;checkRead&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="473d56a2bda4b3966a1d72f9b1c60220f588cdea" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the path represented by the &lt;code&gt;file&lt;/code&gt; argument as its argument.</source>
          <target state="translated">首先，如果有安全管理器，则以 &lt;code&gt;file&lt;/code&gt; 参数表示的路径作为参数来调用其 &lt;code&gt;checkRead&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="94e9e5d9e9067f29b5dd912c5fdcac71153c9d3c" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;addIdentityCertificate&quot;&lt;/code&gt; as its argument to see if it's ok to add a certificate.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;&quot;addIdentityCertificate&quot;&lt;/code&gt; 作为其参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以添加证书。</target>
        </trans-unit>
        <trans-unit id="38bceb007d596b6a72fc43c8cf3b1a3304e72e21" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;getSignerPrivateKey&quot;&lt;/code&gt; as its argument to see if it's ok to return the private key.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;&quot;getSignerPrivateKey&quot;&lt;/code&gt; 作为其参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以返回私钥。</target>
        </trans-unit>
        <trans-unit id="59acb77573a122551f3db25d0017430c0b9b30b8" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;printIdentity&quot;&lt;/code&gt; as its argument to see if it's ok to return the string.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;&quot;printIdentity&quot;&lt;/code&gt; 作为其参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以返回字符串。</target>
        </trans-unit>
        <trans-unit id="cf73e1d184a9d2367a5bb8fcc91d574de2a00b1d" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;removeIdentityCertificate&quot;&lt;/code&gt; as its argument to see if it's ok to remove a certificate.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;&quot;removeIdentityCertificate&quot;&lt;/code&gt; 作为其参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以删除证书。</target>
        </trans-unit>
        <trans-unit id="f793765cb10d48ed64717ce7cbb51d56b767abda" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setIdentityInfo&quot;&lt;/code&gt; as its argument to see if it's ok to specify the information string.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;&quot;setIdentityInfo&quot;&lt;/code&gt; 作为其参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以指定信息字符串。</target>
        </trans-unit>
        <trans-unit id="c87c263023a59975761f675bdcedffbfe57062f5" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setIdentityPublicKey&quot;&lt;/code&gt; as its argument to see if it's ok to set the public key.</source>
          <target state="translated">首先，如果有安全管理器，则使用 &lt;code&gt;&quot;setIdentityPublicKey&quot;&lt;/code&gt; 作为其参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以设置公钥。</target>
        </trans-unit>
        <trans-unit id="952d106b7ff29e446761b2d68c0a6f473fe5d171" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setSignerKeyPair&quot;&lt;/code&gt; as its argument to see if it's ok to set the key pair.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用 &lt;code&gt;&quot;setSignerKeyPair&quot;&lt;/code&gt; 作为参数来调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以设置密钥对。</target>
        </trans-unit>
        <trans-unit id="b0ac355f70651dacb8131ceb59db569ac54740ea" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt; as its argument to see if it's ok to set the identity scope.</source>
          <target state="translated">首先，如果有一个安全管理器， &lt;code&gt;checkSecurityAccess&lt;/code&gt; &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt; 作为参数来调用其checkSecurityAccess方法，以查看是否可以设置身份范围。</target>
        </trans-unit>
        <trans-unit id="f8e14dbbd770d43dbcb3e6320e80f3b32d07de5e" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; to see if it's ok to remove the provider. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (i.e., that method is not overridden), then this will result in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">首先，如果有一个安全管理器，则使用字符串 &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; 调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以删除该提供程序。如果使用 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 的默认实现（即未重写该方法），则将导致以 &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; 权限调用安全管理器的 &lt;code&gt;checkPermission&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7d0bf73da91d8cfc94d82050edfe45f9d01b3614" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; to see if it's ok to remove the provider. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (i.e., that method is not overriden), then this will result in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">首先，如果有安全管理器，则使用字符串 &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; 调用其 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 方法，以查看是否可以删除该提供程序。如果使用 &lt;code&gt;checkSecurityAccess&lt;/code&gt; 的默认实现（即未重写该方法），则将导致调用具有 &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; 权限的安全管理器的 &lt;code&gt;checkPermission&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="22a4113dc4a14a2306af36babbe1bc3ff089e43b" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with &lt;code&gt;name&lt;/code&gt; as its argument.</source>
          <target state="translated">首先，如果有安全管理器， &lt;code&gt;checkWrite&lt;/code&gt; 其 &lt;code&gt;name&lt;/code&gt; 用作参数来调用其checkWrite方法。</target>
        </trans-unit>
        <trans-unit id="f305859298b74b0523f1f7783b57d1fea6765597" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with the file descriptor &lt;code&gt;fdObj&lt;/code&gt; argument as its argument.</source>
          <target state="translated">首先，如果有安全管理器，则使用文件描述符 &lt;code&gt;fdObj&lt;/code&gt; 参数作为其参数来调用其 &lt;code&gt;checkWrite&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c91cf76104035d5f20d39bf441da9990fe191720" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with the path represented by the &lt;code&gt;file&lt;/code&gt; argument as its argument.</source>
          <target state="translated">首先，如果有一个安全管理器， &lt;code&gt;checkWrite&lt;/code&gt; &lt;code&gt;file&lt;/code&gt; 参数表示的路径作为参数来调用其checkWrite方法。</target>
        </trans-unit>
        <trans-unit id="49d686dae693880915d81f78ccfb7ef226a56f6e" translate="yes" xml:space="preserve">
          <source>First, if there is no security manager (&lt;a href=&quot;../../../java.base/java/lang/system#getSecurityManager()&quot;&gt;&lt;code&gt;System.getSecurityManager()&lt;/code&gt;&lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</source>
          <target state="translated">首先，如果没有安全管理器（&lt;a href=&quot;../../../java.base/java/lang/system#getSecurityManager()&quot;&gt; &lt;code&gt;System.getSecurityManager()&lt;/code&gt; &lt;/a&gt;为null），则此接口的实现可以自由进行而不进行任何检查。</target>
        </trans-unit>
        <trans-unit id="5ff6bcbc69f646bb306774a8ae8cabbf8883fe7a" translate="yes" xml:space="preserve">
          <source>First, if there is no security manager (&lt;a href=&quot;../../java/lang/system#getSecurityManager--&quot;&gt;&lt;code&gt;System.getSecurityManager()&lt;/code&gt;&lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</source>
          <target state="translated">首先，如果没有安全管理器（&lt;a href=&quot;../../java/lang/system#getSecurityManager--&quot;&gt; &lt;code&gt;System.getSecurityManager()&lt;/code&gt; &lt;/a&gt;为null），则此接口的实现可以自由进行而不进行任何检查。</target>
        </trans-unit>
        <trans-unit id="f35979a367457b1544d5cf7bd4da6b524097b0ef" translate="yes" xml:space="preserve">
          <source>First, it attempts to load a class using the generated class name. If such a class can be found and loaded using the specified class loader, is assignment compatible with ResourceBundle, is accessible from ResourceBundle, and can be instantiated, &lt;code&gt;getBundle&lt;/code&gt; creates a new instance of this class and uses it as the &lt;em&gt;result resource bundle&lt;/em&gt;.</source>
          <target state="translated">首先，它尝试使用生成的类名加载类。如果可以使用指定的类加载器找到并加载此类，并且与ResourceBundle分配兼容，可以从ResourceBundle进行访问并可以实例化，则 &lt;code&gt;getBundle&lt;/code&gt; 会创建该类的新实例并将其用作&lt;em&gt;结果资源包&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="944986d74c391d612b43a794fce1f8a9dcb3f396" translate="yes" xml:space="preserve">
          <source>First, readability is determined by the 'requires' directives of the enumerated modules, disregarding any 'transitive' modifiers:</source>
          <target state="translated">首先,可读性是由列举模块的 &quot;要求 &quot;指令决定的,而不考虑任何 &quot;转义 &quot;修饰词。</target>
        </trans-unit>
        <trans-unit id="d99765296e192a63c910f44512f4635e342a8286" translate="yes" xml:space="preserve">
          <source>First, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt; mechanism tries to locate an &lt;code&gt;InitialContextFactory&lt;/code&gt; provider using the current thread's context class loader</source>
          <target state="translated">首先，&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt;机制尝试使用当前线程的上下文类加载器查找 &lt;code&gt;InitialContextFactory&lt;/code&gt; 提供程序</target>
        </trans-unit>
        <trans-unit id="66bf81650c523b8db8eea22c47f21929bf349b8f" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">首先，不带任何参数调用此线程组的 &lt;code&gt;checkAccess&lt;/code&gt; 方法。这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="c38ee250de2500fd72f5925088d85d9d33e0f785" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException &lt;/code&gt;(in the current thread).</source>
          <target state="translated">首先，不带参数调用此线程的 &lt;code&gt;checkAccess&lt;/code&gt; 方法。这可能会导致引发 &lt;code&gt;SecurityException &lt;/code&gt; （在当前线程中）。</target>
        </trans-unit>
        <trans-unit id="cc35e5ec48d279e2585b81784dce722712712473" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt; (in the current thread).</source>
          <target state="translated">首先，不带参数调用此线程的 &lt;code&gt;checkAccess&lt;/code&gt; 方法。这可能会导致引发 &lt;code&gt;SecurityException&lt;/code&gt; （在当前线程中）。</target>
        </trans-unit>
        <trans-unit id="c2932d6f24b1a513b787ae22039ed91a161c2815" translate="yes" xml:space="preserve">
          <source>First, the individual lines of this string are extracted. A</source>
          <target state="translated">首先,提取这个字符串的各个行。A</target>
        </trans-unit>
        <trans-unit id="a2f75f91b664508cf39891be5690ca58a1eda8ff" translate="yes" xml:space="preserve">
          <source>First, the total number of bytes needed to represent all the characters of &lt;code&gt;s&lt;/code&gt; is calculated. If this number is larger than &lt;code&gt;65535&lt;/code&gt;, then a &lt;code&gt;UTFDataFormatException&lt;/code&gt; is thrown. Otherwise, this length is written to the output stream in exactly the manner of the &lt;code&gt;writeShort&lt;/code&gt; method; after this, the one-, two-, or three-byte representation of each character in the string &lt;code&gt;s&lt;/code&gt; is written.</source>
          <target state="translated">首先，计算代表 &lt;code&gt;s&lt;/code&gt; 的所有字符所需的字节总数。如果此数字大于 &lt;code&gt;65535&lt;/code&gt; ，则将引发 &lt;code&gt;UTFDataFormatException&lt;/code&gt; 。否则，将按照 &lt;code&gt;writeShort&lt;/code&gt; 方法的确切方式将此长度写入输出流。之后，将写入字符串 &lt;code&gt;s&lt;/code&gt; 中每个字符的一，二或三字节表示形式。</target>
        </trans-unit>
        <trans-unit id="5576952ad05c79cdff45ccd75bd727bb61e387db" translate="yes" xml:space="preserve">
          <source>First, two bytes are read and used to construct an unsigned 16-bit integer in exactly the manner of the &lt;code&gt;readUnsignedShort&lt;/code&gt; method . This integer value is called the</source>
          <target state="translated">首先，读取两个字节，并使用它们完全以 &lt;code&gt;readUnsignedShort&lt;/code&gt; 方法的方式构造一个无符号的16位整数。这个整数值称为</target>
        </trans-unit>
        <trans-unit id="3310c837424fc2a64773f638b21cd61d75246a54" translate="yes" xml:space="preserve">
          <source>First, two bytes are read and used to construct an unsigned 16-bit integer in the manner of the &lt;code&gt;readUnsignedShort&lt;/code&gt; method, using network byte order (regardless of the current byte order setting). This integer value is called the</source>
          <target state="translated">首先，读取两个字节，并以 &lt;code&gt;readUnsignedShort&lt;/code&gt; 方法的方式使用网络字节顺序（无论当前字节顺序设置如何）来构造一个无符号的16位整数。这个整数值称为</target>
        </trans-unit>
        <trans-unit id="f7bf74e719e176a13a50c8569b4ca65a8258806f" translate="yes" xml:space="preserve">
          <source>First, two bytes are written to the file, starting at the current file pointer, as if by the &lt;code&gt;writeShort&lt;/code&gt; method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for each character.</source>
          <target state="translated">首先，从当前文件指针开始，将两个字节写入文件，就像通过 &lt;code&gt;writeShort&lt;/code&gt; 方法给出要跟随的字节数一样。该值是实际写入的字节数，而不是字符串的长度。按照长度，使用针对每个字符的修改后的UTF-8编码，依次输出字符串的每个字符。</target>
        </trans-unit>
        <trans-unit id="6924aef3403af6247bca950768385f32f61338e7" translate="yes" xml:space="preserve">
          <source>First, two bytes are written to the output stream as if by the &lt;code&gt;writeShort&lt;/code&gt; method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of &lt;code&gt;str&lt;/code&gt;, and at most two plus thrice the length of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">首先，将两个字节写入输出流，就像通过 &lt;code&gt;writeShort&lt;/code&gt; 方法给出要跟随的字节数一样。该值是实际写入的字节数，而不是字符串的长度。按照长度，使用修改后的字符的UTF-8编码，依次输出字符串的每个字符。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加写入输出流的字节总数。这将是至少两个加上 &lt;code&gt;str&lt;/code&gt; 的长度，并且最多两个加上三分之一的 &lt;code&gt;str&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="d97044dedbadf530d0bd6da36ba87b841638467d" translate="yes" xml:space="preserve">
          <source>FirstLineIndent</source>
          <target state="translated">FirstLineIndent</target>
        </trans-unit>
        <trans-unit id="ef75ab4cef3bee225daeae7c84fa629260137b77" translate="yes" xml:space="preserve">
          <source>Firstly, we can assume that two &lt;code&gt;Duration&lt;/code&gt;s to be added are both positive without losing generality (i.e., &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt;, &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt;, &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt;)</source>
          <target state="translated">首先，我们可以假设要添加的两个 &lt;code&gt;Duration&lt;/code&gt; 均为正数而不失一般性（即 &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt; ， &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt; ， &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="03fb6987ef6f416132f91721e60bb320ad4e9758" translate="yes" xml:space="preserve">
          <source>Five classes aid common special-purpose synchronization idioms.</source>
          <target state="translated">五类辅助常见的特殊用途同步习语。</target>
        </trans-unit>
        <trans-unit id="c499dc3174957bc11f63a94cd3b51f32f168868c" translate="yes" xml:space="preserve">
          <source>Five implementations in &lt;code&gt;java.util.concurrent&lt;/code&gt; support the extended &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; interface, that defines blocking versions of put and take: &lt;a href=&quot;linkedblockingqueue&quot;&gt;&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;arrayblockingqueue&quot;&gt;&lt;code&gt;ArrayBlockingQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priorityblockingqueue&quot;&gt;&lt;code&gt;PriorityBlockingQueue&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;delayqueue&quot;&gt;&lt;code&gt;DelayQueue&lt;/code&gt;&lt;/a&gt;. The different classes cover the most common usage contexts for producer-consumer, messaging, parallel tasking, and related concurrent designs.</source>
          <target state="translated">&lt;code&gt;java.util.concurrent&lt;/code&gt; 中的五个实现支持扩展的&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;接口，该接口定义了放置和获取的阻塞版本：&lt;a href=&quot;linkedblockingqueue&quot;&gt; &lt;code&gt;LinkedBlockingQueue&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;arrayblockingqueue&quot;&gt; &lt;code&gt;ArrayBlockingQueue&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;priorityblockingqueue&quot;&gt; &lt;code&gt;PriorityBlockingQueue&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;delayqueue&quot;&gt; &lt;code&gt;DelayQueue&lt;/code&gt; &lt;/a&gt;。不同的类涵盖了生产者－消费者，消息传递，并行任务和相关并发设计的最常见用法上下文。</target>
        </trans-unit>
        <trans-unit id="5182904775d6a9caceb2e77b6ff5708c038126c9" translate="yes" xml:space="preserve">
          <source>Five of the rounding modes declared in this class correspond to rounding direction attributes defined in the</source>
          <target state="translated">该类中声明的五种四舍五入模式对应于在</target>
        </trans-unit>
        <trans-unit id="30c899a6368172355aa4e751e2b43b474a43498b" translate="yes" xml:space="preserve">
          <source>Five parsing methods are supplied by this class. Four of these perform both the parse and resolve phases. The fifth method, &lt;a href=&quot;#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt;&lt;/a&gt;, only performs the first phase, leaving the result unresolved. As such, it is essentially a low-level operation.</source>
          <target state="translated">此类提供了五种解析方法。其中四个执行解析和解析阶段。第五个方法&lt;a href=&quot;#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt; &lt;/a&gt;仅执行第一阶段，而结果尚未解决。因此，它本质上是低级别的操作。</target>
        </trans-unit>
        <trans-unit id="266d742b034f86cdbf1e3af6d7aa446a4d5fa143" translate="yes" xml:space="preserve">
          <source>Five parsing methods are supplied by this class. Four of these perform both the parse and resolve phases. The fifth method, &lt;a href=&quot;datetimeformatter#parseUnresolved-java.lang.CharSequence-java.text.ParsePosition-&quot;&gt;&lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt;&lt;/a&gt;, only performs the first phase, leaving the result unresolved. As such, it is essentially a low-level operation.</source>
          <target state="translated">此类提供了五种解析方法。其中四个执行解析和解析阶段。第五个方法&lt;a href=&quot;datetimeformatter#parseUnresolved-java.lang.CharSequence-java.text.ParsePosition-&quot;&gt; &lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt; &lt;/a&gt;仅执行第一阶段，而结果尚未解决。因此，它本质上是低级别的操作。</target>
        </trans-unit>
        <trans-unit id="3cd49b1790f8f462c34f62232f2e710068d65a5f" translate="yes" xml:space="preserve">
          <source>Fixed offsets - a fully resolved offset from UTC/Greenwich, that uses the same offset for all local date-times</source>
          <target state="translated">固定偏移--从UTC/格林威治完全解决的偏移,对所有本地日期时间使用相同的偏移。</target>
        </trans-unit>
        <trans-unit id="17b625c3f165dbce3544c5563f571a11c9e6772c" translate="yes" xml:space="preserve">
          <source>Fixed sizes.</source>
          <target state="translated">固定尺寸。</target>
        </trans-unit>
        <trans-unit id="389f64651a23b9b2dce928cdef441e73382c58f1" translate="yes" xml:space="preserve">
          <source>Fixed width for content.</source>
          <target state="translated">内容的固定宽度。</target>
        </trans-unit>
        <trans-unit id="b9af63c46f9e0ae5f75ef3f5e9002f5891a2a7ff" translate="yes" xml:space="preserve">
          <source>Fixed width for content. See the width attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">内容的固定宽度。参见HTML 4.0中的width属性定义。此属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="4936236b35e1a80fafa0b7f11bec661a7570a9f2" translate="yes" xml:space="preserve">
          <source>Fixed-delay execution is appropriate for recurring activities that require &quot;smoothness.&quot; In other words, it is appropriate for activities where it is more important to keep the frequency accurate in the short run than in the long run. This includes most animation tasks, such as blinking a cursor at regular intervals. It also includes tasks wherein regular activity is performed in response to human input, such as automatically repeating a character as long as a key is held down.</source>
          <target state="translated">定延时执行适合于要求 &quot;平稳性 &quot;的重复性活动。换句话说,它适用于那些在短期内保持频率准确比长期更重要的活动。这包括大多数的动画任务,例如以固定的时间间隔闪烁光标。它还包括对人的输入进行有规律的活动的任务,例如只要按住一个键就会自动重复一个字符。</target>
        </trans-unit>
        <trans-unit id="e73111ec10a33d7de6d320af72b7ff5790705b65" translate="yes" xml:space="preserve">
          <source>Fixed-rate execution is appropriate for recurring activities that are sensitive to</source>
          <target state="translated">固定费率执行适合于对以下问题敏感的经常性活动:</target>
        </trans-unit>
        <trans-unit id="06ca7b5e1b7d5713ec8c7a2e35f2930732d9d2f2" translate="yes" xml:space="preserve">
          <source>FixedHeightLayoutCache</source>
          <target state="translated">FixedHeightLayoutCache</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="249e37d98641310b76b95040cb8b584e80b7cbe4" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed attribute.</source>
          <target state="translated">表示改变观察到的属性后发生了通知的标志。</target>
        </trans-unit>
        <trans-unit id="8f3fc560d56c36d9c10087965b68e233893310b1" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed attribute. This flag is used to check that the new observed attribute belongs to the observed object at the time of the first notification.</source>
          <target state="translated">表示改变观察到的属性后发生了通知的标志。该标志用于检查新的观察属性是否属于第一次通知时的观察对象。</target>
        </trans-unit>
        <trans-unit id="442675306660e623c00f3a09c60d6e132dfae5ba" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute.</source>
          <target state="translated">表示改变观察对象或观察属性后发生通知的标志。</target>
        </trans-unit>
        <trans-unit id="f9663640a984c89bbddc90d68957a27398238f04" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute. This flag is used to check that the observed attribute type is correct (depending on the monitor in use) at the time of the first notification.</source>
          <target state="translated">标志表示在改变观察对象或观察属性后发生了通知。该标志用于检查在第一次通知时观察到的属性类型是否正确(取决于使用的监视器)。</target>
        </trans-unit>
        <trans-unit id="9a244019aa93d00c6e861311b0bafe3d482fd5d3" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute. This flag is used to notify any exception (except the cases described above) when trying to get the value of the observed attribute at the time of the first notification.</source>
          <target state="translated">表示改变观察对象或观察属性后发生了通知的标志。该标志用于通知任何在第一次通知时试图获取观察到的属性值时的异常(上述情况除外)。</target>
        </trans-unit>
        <trans-unit id="66289b852a66954ad44c7d84ba15a80fdcf1bc6f" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object.</source>
          <target state="translated">表示改变观察对象后发生通知的标志。</target>
        </trans-unit>
        <trans-unit id="6b097f053bc3a7a8cd11507e5b8a3b26f9a35af0" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object. This flag is used to check that the new observed object is registered in the MBean server at the time of the first notification.</source>
          <target state="translated">表示改变观察对象后发生了通知的标志。该标志用于检查在第一次通知时,新的观察对象是否在MBean服务器中注册。</target>
        </trans-unit>
        <trans-unit id="954537201eea2efcfc35f04f2d76a1caffce234a" translate="yes" xml:space="preserve">
          <source>Flag for 16 bit signed integers.</source>
          <target state="translated">16位有符号整数的标志。</target>
        </trans-unit>
        <trans-unit id="eec33029a243bcf359f53a00fdeb45ab9b4ff1bb" translate="yes" xml:space="preserve">
          <source>Flag for 16 bit unsigned integers.</source>
          <target state="translated">16位无符号整数的标志。</target>
        </trans-unit>
        <trans-unit id="4f489196890a50c07effdaf77c5df7115980a1db" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit IEEE floats.</source>
          <target state="translated">32位IEEE浮点数的标志。</target>
        </trans-unit>
        <trans-unit id="355d8427312503b299a143e7a1a2e402cae7d00c" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit signed integers.</source>
          <target state="translated">32位有符号整数的标志。</target>
        </trans-unit>
        <trans-unit id="09c3f8131183712e4fb56e5256b793ef6e3230d3" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit unsigned integers.</source>
          <target state="translated">32位无符号整数的标志。</target>
        </trans-unit>
        <trans-unit id="a38456224796dd1803e946331b5901bc52a9f1aa" translate="yes" xml:space="preserve">
          <source>Flag for 64 bit IEEE doubles.</source>
          <target state="translated">64位IEEE双工的标志。</target>
        </trans-unit>
        <trans-unit id="07c7475f89607142580cf1aad5e9548d5a40d7c4" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit signed integers.</source>
          <target state="translated">8位有符号整数的标志。</target>
        </trans-unit>
        <trans-unit id="8dd24db9b4ea3b54f8a363ae0a45a302ba23d056" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit uninterpreted bytes.</source>
          <target state="translated">8位未解释字节的标志。</target>
        </trans-unit>
        <trans-unit id="9aa0a4d96516a68f4c4738ccf1b78f0802d63adb" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit unsigned integers.</source>
          <target state="translated">8位无符号整数的标志。</target>
        </trans-unit>
        <trans-unit id="d34298b953abbece38110be10aa932e48f484838" translate="yes" xml:space="preserve">
          <source>Flag for IFD pointer defined in TIFF Tech Note 1 in TIFF Specification Supplement 1.</source>
          <target state="translated">TIFF规范补充文件1中TIFF技术说明1中定义的IFD指针的标志。</target>
        </trans-unit>
        <trans-unit id="a3e8f2fa2b4ac8aedc7938d7924194e939449d09" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object implements other marker interfaces besides Serializable</source>
          <target state="translated">交替元工厂的标志,表明lambda对象实现了除Serializable之外的其他标记接口。</target>
        </trans-unit>
        <trans-unit id="dbea46ad84ceef99f2d91ffa5461c277a9aa9151" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object must be serializable</source>
          <target state="translated">表示lambda对象必须是可序列化的替代元工厂的标志。</target>
        </trans-unit>
        <trans-unit id="638d813638a6d21acd50c749b8bc4c2fa5a98c91" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object requires additional bridge methods</source>
          <target state="translated">替代的元工厂的标志,表明lambda对象需要额外的桥接方法。</target>
        </trans-unit>
        <trans-unit id="b87b1fab3b9826f8c44a4e32136cc53d33d9d85f" translate="yes" xml:space="preserve">
          <source>Flag for null-terminated ASCII strings.</source>
          <target state="translated">以ASCII码结尾的空字符串的标志。</target>
        </trans-unit>
        <trans-unit id="d05feadaf04fed5d12a57886c799171c5d646b0e" translate="yes" xml:space="preserve">
          <source>Flag for pairs of 32 bit signed integers.</source>
          <target state="translated">32位有符号整数对的标志。</target>
        </trans-unit>
        <trans-unit id="f3c53c4a8530a3fd149885cfcae3313ba7e8c1e0" translate="yes" xml:space="preserve">
          <source>Flag for pairs of 32 bit unsigned integers.</source>
          <target state="translated">32位无符号整数对的标志。</target>
        </trans-unit>
        <trans-unit id="bcd9de13d9aa1fde04840c1edc10361e2986703b" translate="yes" xml:space="preserve">
          <source>Flag indicating that media is currently being loaded.</source>
          <target state="translated">表示当前正在加载媒体的标志。</target>
        </trans-unit>
        <trans-unit id="d18e467bafc4a6a9285385b8c6e81ee569155390" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media encountered an error.</source>
          <target state="translated">表示下载媒体时遇到错误的标志。</target>
        </trans-unit>
        <trans-unit id="65f311700d8e5e80070126f0ce1837723d2ef826" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media was aborted.</source>
          <target state="translated">表示媒体下载中止的标志。</target>
        </trans-unit>
        <trans-unit id="6fc6da142d7edcc6088f06230a800d9b1ecb7a71" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media was completed successfully.</source>
          <target state="translated">表示成功完成媒体下载的标志。</target>
        </trans-unit>
        <trans-unit id="2dd7d1ada841526baea309912fd29b956955ea29" translate="yes" xml:space="preserve">
          <source>Flag to allow processing of unassigned code points</source>
          <target state="translated">允许处理未分配码点的标志。</target>
        </trans-unit>
        <trans-unit id="488d7de1ac571f1cf63434bf32b98bc636da9568" translate="yes" xml:space="preserve">
          <source>Flag to indicate that partial returns are valid.</source>
          <target state="translated">标志表示部分返回有效。</target>
        </trans-unit>
        <trans-unit id="5f2f04fca4158f80583f1781008f7805fdabc4a6" translate="yes" xml:space="preserve">
          <source>Flag to indicate that partial returns are valid. If the flag is true, an implementation of the interface method Document.getText(position,length,Segment) should return as much text as possible without making a copy. The default state of the flag is false which will cause Document.getText(position,length,Segment) to provide the same return behavior it always had, which may or may not make a copy of the text depending upon the request.</source>
          <target state="translated">标志,用于指示部分返回有效。如果该标志为true,接口方法Document.getText(position,length,Segment)的实现应该尽可能多地返回文本,而不进行复制。该标志的默认状态是false,这将导致Document.getText(position,length,Segment)提供与以往相同的返回行为,根据请求的不同,可能会也可能不会复制文本。</target>
        </trans-unit>
        <trans-unit id="0234fbef2f85a75951f2544e11df24a613e63a88" translate="yes" xml:space="preserve">
          <source>Flag to indicate to ignore all beaninfo.</source>
          <target state="translated">标志表示要忽略所有的beaninfo。</target>
        </trans-unit>
        <trans-unit id="83d2e548861ebc37b92cd79d10945dd5d180fc5f" translate="yes" xml:space="preserve">
          <source>Flag to indicate to ignore immediate beaninfo.</source>
          <target state="translated">标志表示要忽略即时的beaninfo。</target>
        </trans-unit>
        <trans-unit id="6f194e90d75868e9a43492eb79e6a19ed441b674" translate="yes" xml:space="preserve">
          <source>Flag to indicate to use of all beaninfo.</source>
          <target state="translated">标志表示使用所有beaninfo。</target>
        </trans-unit>
        <trans-unit id="b811657548f08b33bd13bfd325e5cca70894c154" translate="yes" xml:space="preserve">
          <source>Flag to turn on the check against STD-3 ASCII rules</source>
          <target state="translated">启用STD-3 ASCII规则检查的标志。</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="aa433aa09aacf9ddc26d2b3a4aba3c0064a0b701" translate="yes" xml:space="preserve">
          <source>Flags model changes.</source>
          <target state="translated">旗帜模式改变。</target>
        </trans-unit>
        <trans-unit id="7d908299c4184636b8f4f67a3426cb40d26ee9c1" translate="yes" xml:space="preserve">
          <source>Flags model changes. This is called whenever the model has changed. It is implemented to rebuild the view hierarchy to represent the default root element of the associated model.</source>
          <target state="translated">标志模型变化。每当模型发生变化时,就会调用这个函数,它的实现是为了重建视图层次结构来表示相关模型的默认根元素。它的实现是为了重建视图层次结构以表示相关模型的默认根元素。</target>
        </trans-unit>
        <trans-unit id="9556f1a2ab6b3547bf6cc9e60e3683854b4e0a84" translate="yes" xml:space="preserve">
          <source>Flags, width, and precision are not applicable. If any are provided an &lt;a href=&quot;illegalformatflagsexception&quot;&gt;&lt;code&gt;IllegalFormatFlagsException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;illegalformatwidthexception&quot;&gt;&lt;code&gt;IllegalFormatWidthException&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt;, respectively will be thrown.</source>
          <target state="translated">标志，宽度和精度不适用。如果提供任何&lt;a href=&quot;illegalformatflagsexception&quot;&gt; &lt;code&gt;IllegalFormatFlagsException&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;illegalformatwidthexception&quot;&gt; &lt;code&gt;IllegalFormatWidthException&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;，将分别引发。</target>
        </trans-unit>
        <trans-unit id="317a87f9a0b4a7214175a593b098e52ee141ad05" translate="yes" xml:space="preserve">
          <source>Flash graphics operations.</source>
          <target state="translated">Flash图形操作。</target>
        </trans-unit>
        <trans-unit id="5671b22f9860283a7ec69bec60c6c9daccbb3e97" translate="yes" xml:space="preserve">
          <source>FlatteningPathIterator</source>
          <target state="translated">FlatteningPathIterator</target>
        </trans-unit>
        <trans-unit id="aa4003618da66550bf758dea6f56a1d3d0c246bf" translate="yes" xml:space="preserve">
          <source>FlavorEvent</source>
          <target state="translated">FlavorEvent</target>
        </trans-unit>
        <trans-unit id="38d0037690897042dd388136b25b7841186bfeef" translate="yes" xml:space="preserve">
          <source>FlavorException</source>
          <target state="translated">FlavorException</target>
        </trans-unit>
        <trans-unit id="566fa480303e91c572631ff49631693221c1fefa" translate="yes" xml:space="preserve">
          <source>FlavorException. If the document has a flavor not supported by this print job.</source>
          <target state="translated">FlavorException(风味异常)。如果该文档具有该打印作业不支持的风味,则会出现异常。</target>
        </trans-unit>
        <trans-unit id="b24a23c59215ce28b4ca8c6dcfeadd5f56f89079" translate="yes" xml:space="preserve">
          <source>FlavorException.getUnsupportedFlavors()</source>
          <target state="translated">FlavorException.getUnsupportedFlavors()</target>
        </trans-unit>
        <trans-unit id="d7c6c7593242c9e771c51f7eec4a0b504eb7f5a8" translate="yes" xml:space="preserve">
          <source>FlavorListener</source>
          <target state="translated">FlavorListener</target>
        </trans-unit>
        <trans-unit id="dd0434f5851357e0820262e82da2a06e4fdf9b9d" translate="yes" xml:space="preserve">
          <source>FlavorMap</source>
          <target state="translated">FlavorMap</target>
        </trans-unit>
        <trans-unit id="77d5bbdf49e3bfddf3da4f172a6230e1665cb5a1" translate="yes" xml:space="preserve">
          <source>FlavorTable</source>
          <target state="translated">FlavorTable</target>
        </trans-unit>
        <trans-unit id="d30feb154c9bd8eb5ccd426ea112b69dcfddca54" translate="yes" xml:space="preserve">
          <source>Flavors are first sorted by their MIME types in the following order:</source>
          <target state="translated">味道首先按其MIME类型进行排序,顺序如下。</target>
        </trans-unit>
        <trans-unit id="422742f76751414a3ccc39e638647281df118762" translate="yes" xml:space="preserve">
          <source>Flight Recorder can be configured in the following ways:</source>
          <target state="translated">飞行记录仪可以通过以下方式进行配置。</target>
        </trans-unit>
        <trans-unit id="cd2da437605da2018a629b93e3909ffc265b4545" translate="yes" xml:space="preserve">
          <source>Flight Recorder can be controlled locally by using the &lt;code&gt;jcmd&lt;/code&gt; command line tool or remotely by using the &lt;code&gt;FlightRecorderMXBean&lt;/code&gt; interface, registered in the platform MBeanServer. When direct programmatic access is needed, a Flight Recorder instance can be obtained by invoking &lt;a href=&quot;flightrecorder#getFlightRecorder()&quot;&gt;&lt;code&gt;FlightRecorder.getFlightRecorder()&lt;/code&gt;&lt;/a&gt; and a recording created by using &lt;a href=&quot;recording&quot;&gt;&lt;code&gt;Recording&lt;/code&gt;&lt;/a&gt; class, from which the amount of data to record is configured.</source>
          <target state="translated">可以使用 &lt;code&gt;jcmd&lt;/code&gt; 命令行工具在本地控制Flight Recorder，也可以使用在平台MBeanServer中注册的 &lt;code&gt;FlightRecorderMXBean&lt;/code&gt; 接口进行远程控制。当需要直接编程访问时，可以通过调用&lt;a href=&quot;flightrecorder#getFlightRecorder()&quot;&gt; &lt;code&gt;FlightRecorder.getFlightRecorder()&lt;/code&gt; &lt;/a&gt;和使用&lt;a href=&quot;recording&quot;&gt; &lt;code&gt;Recording&lt;/code&gt; &lt;/a&gt;类创建的记录来获取Flight Recorder实例，并从中配置要记录的数据量。</target>
        </trans-unit>
        <trans-unit id="2eb9c30062c266562c9650a4c85eaa195d80fb56" translate="yes" xml:space="preserve">
          <source>Flight Recorder collects data as events. An event has a time stamp, duration and usually an application-specific payload, useful for diagnosing the running application up to the failure or crash.</source>
          <target state="translated">飞行记录仪以事件的形式收集数据。一个事件有一个时间戳、持续时间,通常还有一个特定的应用程序的有效载荷,对于诊断正在运行的应用程序直到故障或崩溃都很有用。</target>
        </trans-unit>
        <trans-unit id="a8a8d3e950ec205e684e05fe8c5735a1d0dd0198" translate="yes" xml:space="preserve">
          <source>FlightRecorder</source>
          <target state="translated">FlightRecorder</target>
        </trans-unit>
        <trans-unit id="742f4e289b606629bbdfc626347ed574ebc7b69a" translate="yes" xml:space="preserve">
          <source>FlightRecorderListener</source>
          <target state="translated">FlightRecorderListener</target>
        </trans-unit>
        <trans-unit id="240cac93cf8b2f9217f2fe22338fa5eaaf4bb9f7" translate="yes" xml:space="preserve">
          <source>FlightRecorderMXBean</source>
          <target state="translated">FlightRecorderMXBean</target>
        </trans-unit>
        <trans-unit id="d8c2c0d113153ba941883d10df2848821570ce6d" translate="yes" xml:space="preserve">
          <source>FlightRecorderPermission</source>
          <target state="translated">FlightRecorderPermission</target>
        </trans-unit>
        <trans-unit id="78ff5508778116114853e80c61596b58b8492efe" translate="yes" xml:space="preserve">
          <source>FlipBufferStrategy</source>
          <target state="translated">FlipBufferStrategy</target>
        </trans-unit>
        <trans-unit id="9fd658f5f9af419891bcb5665f27d4a97af8b92f" translate="yes" xml:space="preserve">
          <source>Flipping moves the contents of the back buffer to the front buffer, either by copying or by moving the video pointer.</source>
          <target state="translated">通过复制或移动视频指针,翻转将后缓冲区的内容移动到前缓冲区。</target>
        </trans-unit>
        <trans-unit id="f9430f5d4c5f00efa95596f2c28edf9f7f97924b" translate="yes" xml:space="preserve">
          <source>Flips this buffer.</source>
          <target state="translated">翻转这个缓冲区。</target>
        </trans-unit>
        <trans-unit id="4383afa5e388392dcdacdb218541d78e4b31a225" translate="yes" xml:space="preserve">
          <source>Flips this buffer. The limit is set to the current position and then the position is set to zero. If the mark is defined then it is discarded.</source>
          <target state="translated">翻转该缓冲区。限值被设置为当前位置,然后位置被设置为零。如果定义了标记,那么它将被丢弃。</target>
        </trans-unit>
        <trans-unit id="9a10d9eeec807f5e5b91db35d6c151a38e18b245" translate="yes" xml:space="preserve">
          <source>Flips to the component that was added to this layout with the specified &lt;code&gt;name&lt;/code&gt;, using &lt;code&gt;addLayoutComponent&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;addLayoutComponent&lt;/code&gt; 翻转到使用指定 &lt;code&gt;name&lt;/code&gt; 添加到此布局的组件。</target>
        </trans-unit>
        <trans-unit id="d2926c8b85048e10b722e6e88fe2d7ba43f41c82" translate="yes" xml:space="preserve">
          <source>Flips to the component that was added to this layout with the specified &lt;code&gt;name&lt;/code&gt;, using &lt;code&gt;addLayoutComponent&lt;/code&gt;. If no such component exists, then nothing happens.</source>
          <target state="translated">使用 &lt;code&gt;addLayoutComponent&lt;/code&gt; 翻转到使用指定 &lt;code&gt;name&lt;/code&gt; 添加到此布局的组件。如果不存在这样的组件，则什么也不会发生。</target>
        </trans-unit>
        <trans-unit id="d237a00563f45f4632208fd4843dad681898ab10" translate="yes" xml:space="preserve">
          <source>Flips to the first card of the container.</source>
          <target state="translated">翻到容器的第一张牌。</target>
        </trans-unit>
        <trans-unit id="48817d06d0818a52115a2864ec45eda0ae67a11f" translate="yes" xml:space="preserve">
          <source>Flips to the last card of the container.</source>
          <target state="translated">翻到容器的最后一张牌。</target>
        </trans-unit>
        <trans-unit id="3784a77751abbd2726c05b89792e383c343f533b" translate="yes" xml:space="preserve">
          <source>Flips to the next card of the specified container.</source>
          <target state="translated">翻转到指定容器的下一张牌。</target>
        </trans-unit>
        <trans-unit id="ca9583200f86339e03ecc0a76903ab746059c3cf" translate="yes" xml:space="preserve">
          <source>Flips to the next card of the specified container. If the currently visible card is the last one, this method flips to the first card in the layout.</source>
          <target state="translated">翻转到指定容器的下一张卡。如果当前可见的卡是最后一张,则此方法翻转到布局中的第一张卡。</target>
        </trans-unit>
        <trans-unit id="1e8099358aa9de9d6b784f6f8333b1eee02eefba" translate="yes" xml:space="preserve">
          <source>Flips to the previous card of the specified container.</source>
          <target state="translated">翻转到指定容器的上一张卡。</target>
        </trans-unit>
        <trans-unit id="c091724bf1722dece68013b73b36a1b94fbc6c31" translate="yes" xml:space="preserve">
          <source>Flips to the previous card of the specified container. If the currently visible card is the first one, this method flips to the last card in the layout.</source>
          <target state="translated">翻转到指定容器的前一张卡。如果当前可见的卡是第一张,则此方法翻转到布局中的最后一张卡。</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="81bec51e308dda0147ad093a32f7aa270f1a51a4" translate="yes" xml:space="preserve">
          <source>Float buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(float%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing float array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">浮点缓冲区可以通过以下方式创建：&lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;（为缓冲区的内容分配空间），将现有的浮点数组&lt;a href=&quot;#wrap(float%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;到缓冲区中或创建现有的字节缓冲区的&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;视图&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ddcdd0a33166329f127772cf3793ed300f93806" translate="yes" xml:space="preserve">
          <source>Float buffers can be created either by &lt;a href=&quot;floatbuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;floatbuffer#wrap-float:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing float array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">浮点缓冲区可以通过以下方法创建：&lt;a href=&quot;floatbuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;（为缓冲区的内容分配空间），将现有的浮点数组&lt;a href=&quot;floatbuffer#wrap-float:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;到缓冲区中或创建现有字节缓冲区的&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;视图&lt;/i&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c30b25cd724ad3cf3629d8549e8ac93931d38bc6" translate="yes" xml:space="preserve">
          <source>Float.byteValue()</source>
          <target state="translated">Float.byteValue()</target>
        </trans-unit>
        <trans-unit id="14b1c6d8e92795f3e38f41e2194c4effe03cfef2" translate="yes" xml:space="preserve">
          <source>Float.compare()</source>
          <target state="translated">Float.compare()</target>
        </trans-unit>
        <trans-unit id="4bc244a2f30dfa6752cad0eff6199ead3c60d367" translate="yes" xml:space="preserve">
          <source>Float.compareTo()</source>
          <target state="translated">Float.compareTo()</target>
        </trans-unit>
        <trans-unit id="ec9afe0390d115a5afd1ec29015a1115800da905" translate="yes" xml:space="preserve">
          <source>Float.doubleValue()</source>
          <target state="translated">Float.doubleValue()</target>
        </trans-unit>
        <trans-unit id="0a7435636ce70fa2140b15f815285bfb690253ba" translate="yes" xml:space="preserve">
          <source>Float.equals()</source>
          <target state="translated">Float.equals()</target>
        </trans-unit>
        <trans-unit id="89174f0a622d0819abf8079639212bcf61b17fb3" translate="yes" xml:space="preserve">
          <source>Float.floatToIntBits()</source>
          <target state="translated">Float.floatToIntBits()</target>
        </trans-unit>
        <trans-unit id="f88ceba2288dd52ad7c83a84d4a8ee6924a83a8e" translate="yes" xml:space="preserve">
          <source>Float.floatToRawIntBits()</source>
          <target state="translated">Float.floatToRawIntBits()</target>
        </trans-unit>
        <trans-unit id="1df4bc67926f07271c6e77d1bf2588ee71ad7dc6" translate="yes" xml:space="preserve">
          <source>Float.floatValue()</source>
          <target state="translated">Float.floatValue()</target>
        </trans-unit>
        <trans-unit id="978fe295cde8b13e1c69d5e8345f4503ecc63712" translate="yes" xml:space="preserve">
          <source>Float.hashCode()</source>
          <target state="translated">Float.hashCode()</target>
        </trans-unit>
        <trans-unit id="367885fdf1b04be5f3fd45725a9878b9e0d1e3ce" translate="yes" xml:space="preserve">
          <source>Float.intBitsToFloat()</source>
          <target state="translated">Float.intBitsToFloat()</target>
        </trans-unit>
        <trans-unit id="a678b5dc633d9584f35b1b48dacf0088197519be" translate="yes" xml:space="preserve">
          <source>Float.intValue()</source>
          <target state="translated">Float.intValue()</target>
        </trans-unit>
        <trans-unit id="7a5a879567b1e23dc5e85b7048f9b91bab834e2f" translate="yes" xml:space="preserve">
          <source>Float.isFinite()</source>
          <target state="translated">Float.isFinite()</target>
        </trans-unit>
        <trans-unit id="ecb53d5b3ddb28521550db45d7061cfc41458bb2" translate="yes" xml:space="preserve">
          <source>Float.isInfinite()</source>
          <target state="translated">Float.isInfinite()</target>
        </trans-unit>
        <trans-unit id="4cbb87ead6e58d9373ac3b0711d0f263c2cb8d7a" translate="yes" xml:space="preserve">
          <source>Float.isNaN()</source>
          <target state="translated">Float.isNaN()</target>
        </trans-unit>
        <trans-unit id="a88a671253565394fa2d74a24f8b69442ff0a7c5" translate="yes" xml:space="preserve">
          <source>Float.longValue()</source>
          <target state="translated">Float.longValue()</target>
        </trans-unit>
        <trans-unit id="60f2fbd103f521349406f2c47ac8dee00f9c12b0" translate="yes" xml:space="preserve">
          <source>Float.max()</source>
          <target state="translated">Float.max()</target>
        </trans-unit>
        <trans-unit id="deec23bf69ee572670f0db6ac40a04bbc01b9eed" translate="yes" xml:space="preserve">
          <source>Float.min()</source>
          <target state="translated">Float.min()</target>
        </trans-unit>
        <trans-unit id="b2b8cb2c905a03e7c15da392a38007b972a25f64" translate="yes" xml:space="preserve">
          <source>Float.parseFloat()</source>
          <target state="translated">Float.parseFloat()</target>
        </trans-unit>
        <trans-unit id="01755d4d59dcf64b32a407cde1adc7736197ef11" translate="yes" xml:space="preserve">
          <source>Float.shortValue()</source>
          <target state="translated">Float.shortValue()</target>
        </trans-unit>
        <trans-unit id="8d78998e2c129f04c590030d31e46539b4b14d3c" translate="yes" xml:space="preserve">
          <source>Float.sum()</source>
          <target state="translated">Float.sum()</target>
        </trans-unit>
        <trans-unit id="af8bf58af43421e316889dd37bb4f7bc400e32b5" translate="yes" xml:space="preserve">
          <source>Float.toHexString()</source>
          <target state="translated">Float.toHexString()</target>
        </trans-unit>
        <trans-unit id="c0e7194c54ad276ebd3053d684640de11b132a6b" translate="yes" xml:space="preserve">
          <source>Float.toString()</source>
          <target state="translated">Float.toString()</target>
        </trans-unit>
        <trans-unit id="5a3257a4ed6bcce8ba7f697ab53f02cf94112a97" translate="yes" xml:space="preserve">
          <source>Float.valueOf()</source>
          <target state="translated">Float.valueOf()</target>
        </trans-unit>
        <trans-unit id="a078475bd3c3f6681da8efeea5d12fc88f1442ca" translate="yes" xml:space="preserve">
          <source>FloatBuffer</source>
          <target state="translated">FloatBuffer</target>
        </trans-unit>
        <trans-unit id="662469c7c30b5a90e6232907decc04e1f1ae6180" translate="yes" xml:space="preserve">
          <source>FloatBuffer.allocate()</source>
          <target state="translated">FloatBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="0e6a9f838eeb6a6192fa21a6d8450eee8624406f" translate="yes" xml:space="preserve">
          <source>FloatBuffer.array()</source>
          <target state="translated">FloatBuffer.array()</target>
        </trans-unit>
        <trans-unit id="e8afa6a7790440e6c43800ad9e6f37d4a1a72902" translate="yes" xml:space="preserve">
          <source>FloatBuffer.arrayOffset()</source>
          <target state="translated">FloatBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="23110c414735803cb2e9524b09c1d614546ddba4" translate="yes" xml:space="preserve">
          <source>FloatBuffer.asReadOnlyBuffer()</source>
          <target state="translated">FloatBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="c90275a459bf6eea63b763ff19741fb75697405c" translate="yes" xml:space="preserve">
          <source>FloatBuffer.compact()</source>
          <target state="translated">FloatBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="d65614aa06519f781803884867cd2eaf4031dd89" translate="yes" xml:space="preserve">
          <source>FloatBuffer.compareTo()</source>
          <target state="translated">FloatBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="032b9be98aa33e7c3465da1e4e6c0714d073f0d9" translate="yes" xml:space="preserve">
          <source>FloatBuffer.duplicate()</source>
          <target state="translated">FloatBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="d983005f4d3313b2bde165553c781812b0583600" translate="yes" xml:space="preserve">
          <source>FloatBuffer.equals()</source>
          <target state="translated">FloatBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="3bfbbfd6d48123dc19850f18a86ea1363e254c70" translate="yes" xml:space="preserve">
          <source>FloatBuffer.get()</source>
          <target state="translated">FloatBuffer.get()</target>
        </trans-unit>
        <trans-unit id="09d679c6857fd82d096421671c9824a2002dd733" translate="yes" xml:space="preserve">
          <source>FloatBuffer.hasArray()</source>
          <target state="translated">FloatBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="17eb569ec3032a73b52f1c117117780618f0b862" translate="yes" xml:space="preserve">
          <source>FloatBuffer.hashCode()</source>
          <target state="translated">FloatBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="4ef712753b6ddb07edec569f32b38756195ead3d" translate="yes" xml:space="preserve">
          <source>FloatBuffer.isDirect()</source>
          <target state="translated">FloatBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="15f8cb8b9426afcbc2b92ee89ce25893a13cb85a" translate="yes" xml:space="preserve">
          <source>FloatBuffer.order()</source>
          <target state="translated">FloatBuffer.order()</target>
        </trans-unit>
        <trans-unit id="31a814ac430f94178b07082da2f86be6868e03b0" translate="yes" xml:space="preserve">
          <source>FloatBuffer.put()</source>
          <target state="translated">FloatBuffer.put()</target>
        </trans-unit>
        <trans-unit id="51aef77aa749b14b9a34a0aebb89749f822b2bec" translate="yes" xml:space="preserve">
          <source>FloatBuffer.slice()</source>
          <target state="translated">FloatBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="ebe57cd70a949001ab9a64844e2ce614bb6f66ee" translate="yes" xml:space="preserve">
          <source>FloatBuffer.toString()</source>
          <target state="translated">FloatBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2af868fa3d593cc47c448727ae6561f7d00e8998" translate="yes" xml:space="preserve">
          <source>FloatBuffer.wrap()</source>
          <target state="translated">FloatBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="b9940e4d919de9a734b46912d8d615ccc47b17b9" translate="yes" xml:space="preserve">
          <source>FloatControl</source>
          <target state="translated">FloatControl</target>
        </trans-unit>
        <trans-unit id="b95bb0034e6d73bf3676fed52f5c11865577dce9" translate="yes" xml:space="preserve">
          <source>FloatControl.Type</source>
          <target state="translated">FloatControl.Type</target>
        </trans-unit>
        <trans-unit id="2cdb3cc6753dd220a35bf2ae855aba619dc1835d" translate="yes" xml:space="preserve">
          <source>FloatControl.getMaxLabel()</source>
          <target state="translated">FloatControl.getMaxLabel()</target>
        </trans-unit>
        <trans-unit id="9ea1faa0323c70342cb4d8b492ec6d96f3a8ec52" translate="yes" xml:space="preserve">
          <source>FloatControl.getMaximum()</source>
          <target state="translated">FloatControl.getMaximum()</target>
        </trans-unit>
        <trans-unit id="ec2b847e81332eaba5e13170625befe227eb347c" translate="yes" xml:space="preserve">
          <source>FloatControl.getMidLabel()</source>
          <target state="translated">FloatControl.getMidLabel()</target>
        </trans-unit>
        <trans-unit id="4544578bac83afd097f4e5d619f0286265315efa" translate="yes" xml:space="preserve">
          <source>FloatControl.getMinLabel()</source>
          <target state="translated">FloatControl.getMinLabel()</target>
        </trans-unit>
        <trans-unit id="b195afe07fd542779f317c908aa20edbbf9a9b55" translate="yes" xml:space="preserve">
          <source>FloatControl.getMinimum()</source>
          <target state="translated">FloatControl.getMinimum()</target>
        </trans-unit>
        <trans-unit id="11adf7d9747a6f021f96d453e1a764264d54266d" translate="yes" xml:space="preserve">
          <source>FloatControl.getPrecision()</source>
          <target state="translated">FloatControl.getPrecision()</target>
        </trans-unit>
        <trans-unit id="25c6e16344b81f3e918c181f49797b653dbd72bc" translate="yes" xml:space="preserve">
          <source>FloatControl.getUnits()</source>
          <target state="translated">FloatControl.getUnits()</target>
        </trans-unit>
        <trans-unit id="7ce8918f337e55babf56437630f4c87202d3c05d" translate="yes" xml:space="preserve">
          <source>FloatControl.getUpdatePeriod()</source>
          <target state="translated">FloatControl.getUpdatePeriod()</target>
        </trans-unit>
        <trans-unit id="ceb190f8b30bd5e90e3af329a4ac8d095ba92573" translate="yes" xml:space="preserve">
          <source>FloatControl.getValue()</source>
          <target state="translated">FloatControl.getValue()</target>
        </trans-unit>
        <trans-unit id="866c81043de2591d960891a0ba063b3d3224d3c4" translate="yes" xml:space="preserve">
          <source>FloatControl.setValue()</source>
          <target state="translated">FloatControl.setValue()</target>
        </trans-unit>
        <trans-unit id="44c641254be897c8d35dfa2ac9368d4249302fd5" translate="yes" xml:space="preserve">
          <source>FloatControl.shift()</source>
          <target state="translated">FloatControl.shift()</target>
        </trans-unit>
        <trans-unit id="e58b80cd394c1080c32f50afff5b493b00de7aaf" translate="yes" xml:space="preserve">
          <source>FloatControl.toString()</source>
          <target state="translated">FloatControl.toString()</target>
        </trans-unit>
        <trans-unit id="92da811b9a3d7c68bfa296081dcfcdfb4bd198fd" translate="yes" xml:space="preserve">
          <source>FloatType</source>
          <target state="translated">FloatType</target>
        </trans-unit>
        <trans-unit id="9b89761c1275fbd86f5d8bdac914c12c58e930fa" translate="yes" xml:space="preserve">
          <source>FloatTypeSuffix</source>
          <target state="translated">FloatTypeSuffix</target>
        </trans-unit>
        <trans-unit id="c519d710264ca57131c8c72af46f62f0392a4fb0" translate="yes" xml:space="preserve">
          <source>FloatValue</source>
          <target state="translated">FloatValue</target>
        </trans-unit>
        <trans-unit id="47bbc397e99f332b6e509e454f6ed930e81824fb" translate="yes" xml:space="preserve">
          <source>FloatValue:</source>
          <target state="translated">FloatValue:</target>
        </trans-unit>
        <trans-unit id="f980f6669a99ae97aa471b598c62ac0c3e1f823b" translate="yes" xml:space="preserve">
          <source>Floating Point</source>
          <target state="translated">浮点数</target>
        </trans-unit>
        <trans-unit id="b8800852afd836b0863fdad8639bae3a755b7144" translate="yes" xml:space="preserve">
          <source>Floating-point Value</source>
          <target state="translated">浮点值</target>
        </trans-unit>
        <trans-unit id="a212716cbe7ed0298003bab7a55d994d07404503" translate="yes" xml:space="preserve">
          <source>FloatingPointLiteral</source>
          <target state="translated">FloatingPointLiteral</target>
        </trans-unit>
        <trans-unit id="95289a2227c75696577d36f038adc0563446af93" translate="yes" xml:space="preserve">
          <source>Floppy drive icon</source>
          <target state="translated">软盘驱动器图标</target>
        </trans-unit>
        <trans-unit id="86eff8eb789b097ddca83f2c9c4617ed23605105" translate="yes" xml:space="preserve">
          <source>Flow</source>
          <target state="translated">Flow</target>
        </trans-unit>
        <trans-unit id="1fbdd67b9ee3d58b6bcf4dadfff2bdda23adb642" translate="yes" xml:space="preserve">
          <source>Flow layouts are typically used to arrange buttons in a panel. It arranges buttons horizontally until no more buttons fit on the same line. The line alignment is determined by the &lt;code&gt;align&lt;/code&gt; property. The possible values are:</source>
          <target state="translated">流布局通常用于在面板中排列按钮。它水平排列按钮，直到没有更多的按钮适合同一行。线的对齐方式由 &lt;code&gt;align&lt;/code&gt; 属性确定。可能的值为：</target>
        </trans-unit>
        <trans-unit id="2199b0cc3ce6827177790e92c8dfd87f12245232" translate="yes" xml:space="preserve">
          <source>Flow.Processor</source>
          <target state="translated">Flow.Processor</target>
        </trans-unit>
        <trans-unit id="b4b853b62f1db0fa10f778a5f431231badd0cc9b" translate="yes" xml:space="preserve">
          <source>Flow.Publisher</source>
          <target state="translated">Flow.Publisher</target>
        </trans-unit>
        <trans-unit id="8eb46e10251c4a40e3fef81fc36b45494ff273ab" translate="yes" xml:space="preserve">
          <source>Flow.Subscriber</source>
          <target state="translated">Flow.Subscriber</target>
        </trans-unit>
        <trans-unit id="ade1c535401a1a8ca35c509f3d865c6bb7293372" translate="yes" xml:space="preserve">
          <source>Flow.Subscription</source>
          <target state="translated">Flow.Subscription</target>
        </trans-unit>
        <trans-unit id="a8c8dce78b088d35b593f92e653757928bd6950e" translate="yes" xml:space="preserve">
          <source>FlowLayout</source>
          <target state="translated">FlowLayout</target>
        </trans-unit>
        <trans-unit id="048463aa094e8a9922d49cb85017526021c9deb1" translate="yes" xml:space="preserve">
          <source>FlowStrategy</source>
          <target state="translated">FlowStrategy</target>
        </trans-unit>
        <trans-unit id="4b826e5a95cf8b9714b4859644ecf5d31fabfb59" translate="yes" xml:space="preserve">
          <source>FlowView</source>
          <target state="translated">FlowView</target>
        </trans-unit>
        <trans-unit id="1ebfb4f924dcfdd9aedd4771c15c8e117f0bb6c8" translate="yes" xml:space="preserve">
          <source>FlowView.FlowStrategy</source>
          <target state="translated">FlowView.FlowStrategy</target>
        </trans-unit>
        <trans-unit id="59037e28fcb90ff90d7b474f438663c6b045f64d" translate="yes" xml:space="preserve">
          <source>Flush all of the Introspector's internal caches.</source>
          <target state="translated">清空所有Introspector的内部缓存。</target>
        </trans-unit>
        <trans-unit id="cf3ee4aa344fd9439d7a23eed724ed1c7b819697" translate="yes" xml:space="preserve">
          <source>Flush all of the Introspector's internal caches. This method is not normally required. It is normally only needed by advanced tools that update existing &quot;Class&quot; objects in-place and need to make the Introspector re-analyze existing Class objects.</source>
          <target state="translated">刷新所有Introspector的内部缓存。通常不需要这个方法。通常只有在原地更新现有的 &quot;类 &quot;对象,并且需要让Introspector重新分析现有的Class对象的高级工具才需要。</target>
        </trans-unit>
        <trans-unit id="58ca7a5d25df440512599cf0142b9f49cb875f4c" translate="yes" xml:space="preserve">
          <source>Flush any buffered messages.</source>
          <target state="translated">刷新任何缓冲的消息。</target>
        </trans-unit>
        <trans-unit id="cbdbf4f52aca9b56567adba9fa2a32b0f8f121bf" translate="yes" xml:space="preserve">
          <source>Flush any buffered output.</source>
          <target state="translated">冲洗任何缓冲输出。</target>
        </trans-unit>
        <trans-unit id="f2a37ad75daf9994928e4a49c47e338e6a246bf3" translate="yes" xml:space="preserve">
          <source>Flush the Introspector's internal cached information for a given class.</source>
          <target state="translated">刷新给定类的Introspector的内部缓存信息。</target>
        </trans-unit>
        <trans-unit id="dd43b9352fe5975b1d492527a9453c5ad462ec1d" translate="yes" xml:space="preserve">
          <source>Flush the Introspector's internal cached information for a given class. This method is not normally required. It is normally only needed by advanced tools that update existing &quot;Class&quot; objects in-place and need to make the Introspector re-analyze an existing Class object. Note that only the direct state associated with the target Class object is flushed. We do not flush state for other Class objects with the same name, nor do we flush state for any related Class objects (such as subclasses), even though their state may include information indirectly obtained from the target Class object.</source>
          <target state="translated">清空给定类的Introspector的内部缓存信息。通常不需要这个方法。通常只有那些在原地更新现有 &quot;类 &quot;对象的高级工具才需要它,并且需要让Introspector重新分析现有的Class对象。请注意,只有与目标Class对象相关联的直接状态才会被刷新。我们不会刷新其他同名Class对象的状态,也不会刷新任何相关Class对象(如子类)的状态,即使它们的状态可能包括从目标Class对象间接获得的信息。</target>
        </trans-unit>
        <trans-unit id="edc3fd57810a894c7625b9a523573427c6dd958a" translate="yes" xml:space="preserve">
          <source>Flush the stream.</source>
          <target state="translated">冲刷流。</target>
        </trans-unit>
        <trans-unit id="32abf43af3e0eb214d706849ff8f9b42087c2a4a" translate="yes" xml:space="preserve">
          <source>Flush3DBorder</source>
          <target state="translated">Flush3DBorder</target>
        </trans-unit>
        <trans-unit id="1d9f36d8dcf7e660b911e13417de562962fae133" translate="yes" xml:space="preserve">
          <source>Flushable</source>
          <target state="translated">Flushable</target>
        </trans-unit>
        <trans-unit id="0d8e5de7e8be561cedb7fbaca801fd5980979d91" translate="yes" xml:space="preserve">
          <source>Flushable.flush()</source>
          <target state="translated">Flushable.flush()</target>
        </trans-unit>
        <trans-unit id="42875ff7501e0088b91534939ee2eb7e7e2a0d54" translate="yes" xml:space="preserve">
          <source>Flushes all data prior to the given position to the underlying destination, such as an &lt;code&gt;OutputStream&lt;/code&gt; or &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">将给定位置之前的所有数据刷新到基础目标，例如 &lt;code&gt;OutputStream&lt;/code&gt; 或 &lt;code&gt;File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e03356e53cd4b45d147e1714ac4698e16f5f4e5" translate="yes" xml:space="preserve">
          <source>Flushes all data prior to the given position to the underlying destination, such as an &lt;code&gt;OutputStream&lt;/code&gt; or &lt;code&gt;File&lt;/code&gt;. Attempting to seek to the flushed portion of the stream will result in an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;.</source>
          <target state="translated">将给定位置之前的所有数据刷新到基础目标，例如 &lt;code&gt;OutputStream&lt;/code&gt; 或 &lt;code&gt;File&lt;/code&gt; 。尝试搜索流的刷新部分将导致 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ae8e631c0fc5969fe26283b445f1116611ef1f0" translate="yes" xml:space="preserve">
          <source>Flushes all reconstructable resources being used by this Image object.</source>
          <target state="translated">清空该图像对象正在使用的所有可重构资源。</target>
        </trans-unit>
        <trans-unit id="3e25942a94de4bb3ad34202a7dcfcd620755f6ce" translate="yes" xml:space="preserve">
          <source>Flushes all reconstructable resources being used by this Image object. This includes any pixel data that is being cached for rendering to the screen as well as any system resources that are being used to store data or pixels for the image if they can be recreated. The image is reset to a state similar to when it was first created so that if it is again rendered, the image data will have to be recreated or fetched again from its source.</source>
          <target state="translated">刷新此Image对象使用的所有可重构资源。这包括为渲染到屏幕而缓存的任何像素数据,以及用于存储数据或图像像素的任何系统资源(如果它们可以被重新创建)。图像被重置为类似于第一次创建时的状态,因此如果再次渲染,图像数据将不得不重新创建或从其源头重新获取。</target>
        </trans-unit>
        <trans-unit id="a483c218f4ede88511a568ec3515f6a659538396" translate="yes" xml:space="preserve">
          <source>Flushes any resources opened for output by this file manager directly or indirectly.</source>
          <target state="translated">刷新该文件管理器直接或间接为输出打开的任何资源。</target>
        </trans-unit>
        <trans-unit id="5c301973568b1010ffc4abeb3890c49223cf556b" translate="yes" xml:space="preserve">
          <source>Flushes any resources opened for output by this file manager directly or indirectly. Flushing a closed file manager has no effect.</source>
          <target state="translated">刷新该文件管理器直接或间接为输出而打开的任何资源。刷新关闭的文件管理器没有任何效果。</target>
        </trans-unit>
        <trans-unit id="b41792b8a406dde8752d03242f965cef4652900a" translate="yes" xml:space="preserve">
          <source>Flushes queued data from the line.</source>
          <target state="translated">从行中刷新排队数据。</target>
        </trans-unit>
        <trans-unit id="e2b40fdd5484676ce39ad94b7bd8775a5ff1c7d2" translate="yes" xml:space="preserve">
          <source>Flushes queued data from the line. The flushed data is discarded. In some cases, not all queued data can be discarded. For example, a mixer can flush data from the buffer for a specific input line, but any unplayed data already in the output buffer (the result of the mix) will still be played. You can invoke this method after pausing a line (the normal case) if you want to skip the &quot;stale&quot; data when you restart playback or capture. (It is legal to flush a line that is not stopped, but doing so on an active line is likely to cause a discontinuity in the data, resulting in a perceptible click.)</source>
          <target state="translated">从行中刷新排队的数据。冲洗后的数据会被丢弃。在某些情况下,并不是所有的排队数据都可以被丢弃。例如,混音器可以从缓冲区中刷新特定输入行的数据,但任何已经在输出缓冲区中的未播放数据(混音器的结果)仍将被播放。如果您想在重新开始播放或捕获时跳过 &quot;陈旧 &quot;的数据,您可以在暂停一行后调用该方法(正常情况)。(冲洗未停止的行是合法的,但在活动的行上这样做很可能会导致数据的不连续,从而导致可察觉的点击)。</target>
        </trans-unit>
        <trans-unit id="e2f9819660d4e0302415b9142f9b771239cc2dd4" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream.</source>
          <target state="translated">冲洗压缩后的输出流。</target>
        </trans-unit>
        <trans-unit id="923f5d0e0f120941c4098720b1b419ccc25ef8f7" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream. If &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.util.zip.Deflater,int,boolean)&quot;&gt;&lt;code&gt;syncFlush&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; when this compressed output stream is constructed, this method first flushes the underlying &lt;code&gt;compressor&lt;/code&gt; with the flush mode &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the &lt;code&gt;compressor&lt;/code&gt;.</source>
          <target state="translated">刷新压缩的输出流。如果在构造此压缩输出流时&lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.util.zip.Deflater,int,boolean)&quot;&gt; &lt;code&gt;syncFlush&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; ，则此方法首先使用刷新模式&lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt; &lt;/a&gt;刷新基础 &lt;code&gt;compressor&lt;/code&gt; ，以强制将所有待处理数据刷新到输出流，然后刷新输出流。否则，此方法仅冲洗输出流，而不冲洗 &lt;code&gt;compressor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22c98069e18f742f97177b77228dbcec905df571" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream. If &lt;a href=&quot;deflateroutputstream#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-&quot;&gt;&lt;code&gt;syncFlush&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; when this compressed output stream is constructed, this method first flushes the underlying &lt;code&gt;compressor&lt;/code&gt; with the flush mode &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the &lt;code&gt;compressor&lt;/code&gt;.</source>
          <target state="translated">刷新压缩的输出流。如果在构造此压缩输出流时&lt;a href=&quot;deflateroutputstream#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-&quot;&gt; &lt;code&gt;syncFlush&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; ，则此方法首先使用冲洗模式&lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt; &lt;/a&gt;冲洗基础 &lt;code&gt;compressor&lt;/code&gt; ，以强制将所有待处理数据冲洗到输出流，然后冲洗输出流。否则，此方法仅冲洗输出流，而不冲洗 &lt;code&gt;compressor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b15e249d4b5f7a1e25fae529068f2d7263b626f" translate="yes" xml:space="preserve">
          <source>Flushes the console and forces any buffered output to be written immediately .</source>
          <target state="translated">刷新控制台并强制立即写入任何缓冲输出。</target>
        </trans-unit>
        <trans-unit id="172701747f93b1a49565bcb3bd048ea44d742223" translate="yes" xml:space="preserve">
          <source>Flushes the stream and checks its error state.</source>
          <target state="translated">刷新流并检查其错误状态。</target>
        </trans-unit>
        <trans-unit id="917793f660fae575f902dcfdcd2ad4d72b9730c1" translate="yes" xml:space="preserve">
          <source>Flushes the stream and checks its error state. The internal error state is set to &lt;code&gt;true&lt;/code&gt; when the underlying output stream throws an &lt;code&gt;IOException&lt;/code&gt; other than &lt;code&gt;InterruptedIOException&lt;/code&gt;, and when the &lt;code&gt;setError&lt;/code&gt; method is invoked. If an operation on the underlying output stream throws an &lt;code&gt;InterruptedIOException&lt;/code&gt;, then the &lt;code&gt;PrintStream&lt;/code&gt; converts the exception back into an interrupt by doing:</source>
          <target state="translated">刷新流并检查其错误状态。当基础输出流抛出除 &lt;code&gt;InterruptedIOException&lt;/code&gt; 之外的 &lt;code&gt;IOException&lt;/code&gt; 时，以及调用 &lt;code&gt;setError&lt;/code&gt; 方法时，内部错误状态将设置为 &lt;code&gt;true&lt;/code&gt; 。如果对基础输出流的操作抛出 &lt;code&gt;InterruptedIOException&lt;/code&gt; ，则 &lt;code&gt;PrintStream&lt;/code&gt; 通过执行以下操作将异常转换回中断：</target>
        </trans-unit>
        <trans-unit id="e1d1a01e00649a56e4be3c6877ec77afc38fdb1a" translate="yes" xml:space="preserve">
          <source>Flushes the stream if it's not closed and checks its error state.</source>
          <target state="translated">如果流没有被关闭,则刷新流并检查其错误状态。</target>
        </trans-unit>
        <trans-unit id="4f18707bcfd581256c925c8ceb7a6b0e579c29e8" translate="yes" xml:space="preserve">
          <source>Flushes the stream.</source>
          <target state="translated">冲刷溪流。</target>
        </trans-unit>
        <trans-unit id="27549ded09a673f27fce36a1c79b36720812fffc" translate="yes" xml:space="preserve">
          <source>Flushes the stream. If the stream has saved any characters from the various write() methods in a buffer, write them immediately to their intended destination. Then, if that destination is another character or byte stream, flush it. Thus one flush() invocation will flush all the buffers in a chain of Writers and OutputStreams.</source>
          <target state="translated">清空流。如果流已经从各种write()方法中保存了任何字符在缓冲区中,则立即将它们写到预定的目的地。然后,如果该目标是另一个字符或字节流,则将其刷新。因此,一次flush()调用将刷新Writer和OutputStreams链中的所有缓冲区。</target>
        </trans-unit>
        <trans-unit id="baa04d112254e1b279bc1c47018931f7571ce551" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This is done by writing any buffered output bytes to the underlying output stream and then flushing that stream.</source>
          <target state="translated">刷新流。这是通过将任何缓冲的输出字节写入底层输出流,然后刷新该流来完成的。</target>
        </trans-unit>
        <trans-unit id="be9d6adb6b1406398b401ae6a4672f858e7a78df" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This will write any buffered output bytes and flush through to the underlying stream.</source>
          <target state="translated">刷新流。这将写入任何缓冲的输出字节并刷新到底层流。</target>
        </trans-unit>
        <trans-unit id="7d0c9b5f55e5caf2896bd7d20cc4e2b514cdfdc9" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This will write any buffered output bytes.</source>
          <target state="translated">刷新流。这将写入所有缓冲的输出字节。</target>
        </trans-unit>
        <trans-unit id="639cf25194be2f753156a201750666c8f0420631" translate="yes" xml:space="preserve">
          <source>Flushes this buffered output stream.</source>
          <target state="translated">刷新这个缓冲输出流。</target>
        </trans-unit>
        <trans-unit id="85496fb5b4f23f6bd6da20fc6355dc0af0445c1a" translate="yes" xml:space="preserve">
          <source>Flushes this buffered output stream. This forces any buffered output bytes to be written out to the underlying output stream.</source>
          <target state="translated">刷新这个缓冲的输出流。这将强制任何缓冲的输出字节写入底层输出流。</target>
        </trans-unit>
        <trans-unit id="bcc966acb52d0f68f32a9eb2e2e2acf535260b41" translate="yes" xml:space="preserve">
          <source>Flushes this data output stream.</source>
          <target state="translated">刷新此数据输出流。</target>
        </trans-unit>
        <trans-unit id="099deb41fdb7d97c649c6bd0906433b9fd4384a4" translate="yes" xml:space="preserve">
          <source>Flushes this data output stream. This forces any buffered output bytes to be written out to the stream.</source>
          <target state="translated">刷新这个数据输出流。这将强制将所有缓冲的输出字节写入流中。</target>
        </trans-unit>
        <trans-unit id="b4f55b8f266ef408ebda709c34943453f2920da5" translate="yes" xml:space="preserve">
          <source>Flushes this decoder.</source>
          <target state="translated">刷新这个解码器。</target>
        </trans-unit>
        <trans-unit id="a58378208cf39afe752e3f5ea5a2b90a44d200fd" translate="yes" xml:space="preserve">
          <source>Flushes this encoder.</source>
          <target state="translated">冲洗这个编码器。</target>
        </trans-unit>
        <trans-unit id="31d005aeb46638a01a212c34ef8ebcc2e7447e73" translate="yes" xml:space="preserve">
          <source>Flushes this formatter.</source>
          <target state="translated">刷新这个格式器。</target>
        </trans-unit>
        <trans-unit id="324812d4d8236eb7df771889d3aa4cca5bead978" translate="yes" xml:space="preserve">
          <source>Flushes this formatter. If the destination implements the &lt;a href=&quot;../io/flushable&quot;&gt;&lt;code&gt;Flushable&lt;/code&gt;&lt;/a&gt; interface, its &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">刷新此格式化程序。如果目标实现&lt;a href=&quot;../io/flushable&quot;&gt; &lt;code&gt;Flushable&lt;/code&gt; &lt;/a&gt;接口，则将调用其 &lt;code&gt;flush&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8a7b8695f698b7994fd7ead006b2734c41a847fd" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out to the stream.</source>
          <target state="translated">刷新这个输出流,并强制将任何缓冲的输出字节写入流中。</target>
        </trans-unit>
        <trans-unit id="db79f82cc6dec498148212763f561f450d0a091c" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out.</source>
          <target state="translated">刷新这个输出流,并强制写出任何缓冲的输出字节。</target>
        </trans-unit>
        <trans-unit id="a7d347580d93037b72c655bbbd27b6c3c4b04c93" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out. The general contract of &lt;code&gt;flush&lt;/code&gt; is that calling it is an indication that, if any bytes previously written have been buffered by the implementation of the output stream, such bytes should immediately be written to their intended destination.</source>
          <target state="translated">刷新此输出流，并强制写出所有缓冲的输出字节。 &lt;code&gt;flush&lt;/code&gt; 的一般约定是，调用它的指示是，如果先前写入的任何字节已由输出流的实现缓冲，则应立即将这些字节写入其预期的目标。</target>
        </trans-unit>
        <trans-unit id="88a445d926ff76766416fa1d70ac5b897cd48596" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out. This will notify any readers that bytes are waiting in the pipe.</source>
          <target state="translated">清空此输出流并强制写出任何缓冲的输出字节。这将通知任何读者,管道中的字节正在等待。</target>
        </trans-unit>
        <trans-unit id="c9444a8ef8681cfdf7bc6090df80c2af2cd48913" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output characters to be written out.</source>
          <target state="translated">刷新这个输出流,并强制写出任何缓冲的输出字符。</target>
        </trans-unit>
        <trans-unit id="a3d361ce221bdc3f10a930aee652587351f2bbe9" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output characters to be written out. This will notify any readers that characters are waiting in the pipe.</source>
          <target state="translated">冲洗此输出流,并强制写出任何缓冲的输出字符。这将通知任何读者,字符正在管道中等待。</target>
        </trans-unit>
        <trans-unit id="d15ef9dff7afa4e9ffbd2cd4be187394d0163b84" translate="yes" xml:space="preserve">
          <source>Flushes this output stream by forcing any buffered output bytes that have already been processed by the encapsulated cipher object to be written out.</source>
          <target state="translated">通过强制写出任何已经被封装的密码对象处理过的缓冲输出字节来刷新这个输出流。</target>
        </trans-unit>
        <trans-unit id="1c102df522805bafa3e28cc92589ff2b9b16f37d" translate="yes" xml:space="preserve">
          <source>Flushes this output stream, forcing any pending buffered output bytes to be written.</source>
          <target state="translated">刷新此输出流,强制写入任何待缓冲的输出字节。</target>
        </trans-unit>
        <trans-unit id="ae9c3c6d0ca6e8fa4dc383b3ed1e35dfc088a0ec" translate="yes" xml:space="preserve">
          <source>Flushes this stream by writing any buffered output to the underlying stream.</source>
          <target state="translated">通过向底层流写入任何缓冲输出来刷新这个流。</target>
        </trans-unit>
        <trans-unit id="db13de4337e3f12fedae33632035682f751d41c8" translate="yes" xml:space="preserve">
          <source>Flushing a formatter writes any buffered output in the destination to the underlying stream.</source>
          <target state="translated">刷新formatter将目标中的任何缓冲输出写入底层流。</target>
        </trans-unit>
        <trans-unit id="d9d1999ec742ec9c8a7f5a6758157b8951cb525a" translate="yes" xml:space="preserve">
          <source>Focus Specification</source>
          <target state="translated">焦点规格</target>
        </trans-unit>
        <trans-unit id="7ac876985aa1e6c02d04ed096b1e57a1ff3f1aab" translate="yes" xml:space="preserve">
          <source>Focus change listener</source>
          <target state="translated">聚焦改变倾听者</target>
        </trans-unit>
        <trans-unit id="9f5feabe1f193ea4f5922e67f59c5a9c3b66a4ea" translate="yes" xml:space="preserve">
          <source>Focus color</source>
          <target state="translated">焦点颜色</target>
        </trans-unit>
        <trans-unit id="636f78d5a4637ec48796807d50f5d7e5046e71c0" translate="yes" xml:space="preserve">
          <source>Focus events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;.</source>
          <target state="translated">焦点事件是通过 &lt;code&gt;enableEvents&lt;/code&gt; 启用的。</target>
        </trans-unit>
        <trans-unit id="e2a86206b707c6d81fcdb08c90ca1b33f284a70f" translate="yes" xml:space="preserve">
          <source>Focus insets</source>
          <target state="translated">焦点插页</target>
        </trans-unit>
        <trans-unit id="1173063445e407d3b621d72d2d27d16f243662fd" translate="yes" xml:space="preserve">
          <source>Focus listener</source>
          <target state="translated">焦点听众</target>
        </trans-unit>
        <trans-unit id="fc12069cb4f4ef4583280f6686a03d0d49ab95ef" translate="yes" xml:space="preserve">
          <source>Focus rectangle</source>
          <target state="translated">焦点矩形</target>
        </trans-unit>
        <trans-unit id="e41232b9888cba114762dfe3f2f216b07976808d" translate="yes" xml:space="preserve">
          <source>Focus-change listener.</source>
          <target state="translated">焦点变化的倾听者。</target>
        </trans-unit>
        <trans-unit id="1b0798a755e08db0b68088f32fc9c919423a98a7" translate="yes" xml:space="preserve">
          <source>FocusAdapter</source>
          <target state="translated">FocusAdapter</target>
        </trans-unit>
        <trans-unit id="00f8899238763ba20231d7e00139237ba2f8d7ae" translate="yes" xml:space="preserve">
          <source>FocusEvent</source>
          <target state="translated">FocusEvent</target>
        </trans-unit>
        <trans-unit id="e9975367ce509a5cb25902dfe7396138a21a82e8" translate="yes" xml:space="preserve">
          <source>FocusEvent.Cause</source>
          <target state="translated">FocusEvent.Cause</target>
        </trans-unit>
        <trans-unit id="993d5eb57ad03fe31977653e476ef50f67701c9e" translate="yes" xml:space="preserve">
          <source>FocusHandler</source>
          <target state="translated">FocusHandler</target>
        </trans-unit>
        <trans-unit id="aaaa28970cae06f17f6f2622815b85a3e11f4ed0" translate="yes" xml:space="preserve">
          <source>FocusListener</source>
          <target state="translated">FocusListener</target>
        </trans-unit>
        <trans-unit id="f6162ef30458f0b1d33486fff4233c782b625dd2" translate="yes" xml:space="preserve">
          <source>FocusManager</source>
          <target state="translated">FocusManager</target>
        </trans-unit>
        <trans-unit id="d7e332038b8cf05d9f2268d983c5f779dd00b235" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy</source>
          <target state="translated">FocusTraversalPolicy</target>
        </trans-unit>
        <trans-unit id="d58a30daaf93c9d521ed2cf39dc5d9838cd5e47a" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy takes into account &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;focus traversal policy providers&lt;/a&gt;. When searching for first/last/next/previous Component, if a focus traversal policy provider is encountered, its focus traversal policy is used to perform the search operation.</source>
          <target state="translated">FocusTraversalPolicy考虑了&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;焦点遍历策略提供程序&lt;/a&gt;。在搜索第一个/最后一个/下一个/上一个组件时，如果遇到焦点遍历策略提供程序，则将其焦点遍历策略用于执行搜索操作。</target>
        </trans-unit>
        <trans-unit id="4f40497d8c23fb4d75de589c703e96a0f0ff93e6" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy takes into account &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;focus traversal policy providers&lt;/a&gt;. When searching for first/last/next/previous Component, if a focus traversal policy provider is encountered, its focus traversal policy is used to perform the search operation.</source>
          <target state="translated">FocusTraversalPolicy考虑了&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;焦点遍历策略提供程序&lt;/a&gt;。在搜索第一个/最后一个/下一个/上一个组件时，如果遇到焦点遍历策略提供程序，则将其焦点遍历策略用于执行搜索操作。</target>
        </trans-unit>
        <trans-unit id="6b04a17bd8b73a2fdb3f249ee6ec2d85b37573c5" translate="yes" xml:space="preserve">
          <source>Focused</source>
          <target state="translated">Focused</target>
        </trans-unit>
        <trans-unit id="85eb876d327e7ad98bdd20df524d4dd17ee968bd" translate="yes" xml:space="preserve">
          <source>Focuses the Component after aComponent, typically based on a FocusTraversalPolicy.</source>
          <target state="translated">在一个Component之后聚焦组件,通常基于FocusTraversalPolicy。</target>
        </trans-unit>
        <trans-unit id="33d90710892a8435d44964b568a7e1e9d5ddf8ef" translate="yes" xml:space="preserve">
          <source>Focuses the Component after the current focus owner.</source>
          <target state="translated">将该组件聚焦在当前焦点所有者之后。</target>
        </trans-unit>
        <trans-unit id="2346fe180eb8c83a68d5c50b727888f616f591dc" translate="yes" xml:space="preserve">
          <source>Focuses the Component before aComponent, typically based on a FocusTraversalPolicy.</source>
          <target state="translated">将组件聚焦在一个Component之前,通常基于FocusTraversalPolicy。</target>
        </trans-unit>
        <trans-unit id="8965277ff87e0848e3164f24baa01a31bfe9a7ba" translate="yes" xml:space="preserve">
          <source>Focuses the Component before the current focus owner.</source>
          <target state="translated">将该组件聚焦在当前焦点所有者之前。</target>
        </trans-unit>
        <trans-unit id="4253cdf20f3655b6e47ffc34dc54e8dcfd8efabd" translate="yes" xml:space="preserve">
          <source>FolderIcon16</source>
          <target state="translated">FolderIcon16</target>
        </trans-unit>
        <trans-unit id="56e2f7fb41aa73be737248418ba5c0e5eb5fc6a8" translate="yes" xml:space="preserve">
          <source>Follow symbolic links.</source>
          <target state="translated">按照符号链接。</target>
        </trans-unit>
        <trans-unit id="e17dbd79a84a54f559996c59b0712e0b95f8dcb9" translate="yes" xml:space="preserve">
          <source>Following full type-safety to its ultimate conclusion might also argue for a separate class for each field in date-time, such as a class for HourOfDay and another for DayOfMonth. This approach was tried, but was excessively complicated in the Java language, lacking usability. A similar problem occurs with periods. There is a case for a separate class for each period unit, such as a type for Years and a type for Minutes. However, this yields a lot of classes and a problem of type conversion. Thus, the set of date-time types provided is a compromise between purity and practicality.</source>
          <target state="translated">按照完全类型安全的最终结论,也可能会主张为日期-时间中的每个字段建立一个单独的类,比如为HourOfDay建立一个类,为DayOfMonth建立一个类。这种方法曾被尝试过,但在Java语言中过于复杂,缺乏可用性。类似的问题也发生在句号上。有一种情况是为每个周期单位单独建立一个类,比如为Years建立一个类型,为Minutes建立一个类型。然而,这样做会产生大量的类,并且存在类型转换的问题。因此,所提供的一套日期-时间类型是在纯粹性和实用性之间的折中。</target>
        </trans-unit>
        <trans-unit id="8b23f8f2777a10912c1c9e7876566aa3d45b9d0b" translate="yes" xml:space="preserve">
          <source>FomattableFlags are passed to the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;.</source>
          <target state="translated">将FomattableFlags传递给&lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;方法，并为&lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;修改输出格式。</target>
        </trans-unit>
        <trans-unit id="ca05bba3a397f29864c65816f78ff6246577d5ea" translate="yes" xml:space="preserve">
          <source>FomattableFlags are passed to the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;. Implementations of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; are responsible for interpreting and validating any flags.</source>
          <target state="translated">将FomattableFlags传递给&lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;方法，并为&lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;修改输出格式。&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; 的&lt;/a&gt;实现负责解释和验证任何标志。</target>
        </trans-unit>
        <trans-unit id="b97c4d4cddf23ec47395af460f9e28df2a0f9b04" translate="yes" xml:space="preserve">
          <source>Font</source>
          <target state="translated">Font</target>
        </trans-unit>
        <trans-unit id="a8daab2008e4b169bd06f1ba63fc83f51d45cedf" translate="yes" xml:space="preserve">
          <source>Font Faces and Names</source>
          <target state="translated">字体面和名称</target>
        </trans-unit>
        <trans-unit id="f4480fe27751ad87cd93ceec7f8f841941adf210" translate="yes" xml:space="preserve">
          <source>Font Style</source>
          <target state="translated">字体风格</target>
        </trans-unit>
        <trans-unit id="92d4b24c379731693154f310745277af77d1b97c" translate="yes" xml:space="preserve">
          <source>Font and TextAttribute</source>
          <target state="translated">字体和TextAttribute</target>
        </trans-unit>
        <trans-unit id="4336af0fef973aa8e959b559231e4eebe9118ef0" translate="yes" xml:space="preserve">
          <source>Font color.</source>
          <target state="translated">字体颜色。</target>
        </trans-unit>
        <trans-unit id="efe4bfa9d8f95d9e1eb7132e1949cb642c9fcd0e" translate="yes" xml:space="preserve">
          <source>Font color. See the color attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">字体颜色。参见HTML 4.0中的color属性定义。这个属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="7d370a8d01236c2dfeba295d3a02e1eb3f85d6b5" translate="yes" xml:space="preserve">
          <source>Font descriptors.</source>
          <target state="translated">字体描述符:</target>
        </trans-unit>
        <trans-unit id="bcc5e8823531691226582a43485ef3d46f2e4dd1" translate="yes" xml:space="preserve">
          <source>Font descriptors. Table tag &quot;fdsc&quot; in the Open Type Specification.</source>
          <target state="translated">字体描述符。Open Type Specification中的表标签 &quot;fdsc&quot;。</target>
        </trans-unit>
        <trans-unit id="58ff409578649d9ee7cfc10e63ebd91bf672d9a5" translate="yes" xml:space="preserve">
          <source>Font face identifier.</source>
          <target state="translated">脸部识别。</target>
        </trans-unit>
        <trans-unit id="418cce5a8f34d55569855b9acb46b1711fedb67c" translate="yes" xml:space="preserve">
          <source>Font face identifier. See the face attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">字体面标识符。参见HTML 4.0中face属性的定义。这个属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="53263bb8840c65a4ba07f68e7b4c3df7f30eed88" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint key.</source>
          <target state="translated">字体小数指标提示键。</target>
        </trans-unit>
        <trans-unit id="86d90ee427b44cf4b728975fec68744c1d9a66e2" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint key. The &lt;code&gt;FRACTIONALMETRICS&lt;/code&gt; hint controls whether the positioning of individual character glyphs takes into account the sub-pixel accuracy of the scaled character advances of the font or whether such advance vectors are rounded to an integer number of whole device pixels. This hint only recommends how much accuracy should be used to position the glyphs and does not specify or recommend whether or not the actual rasterization or pixel bounds of the glyph should be modified to match.</source>
          <target state="translated">字体小数指标提示键。所述 &lt;code&gt;FRACTIONALMETRICS&lt;/code&gt; 提示控制单个字符字形的定位是否考虑了字体的或者是否这种预先矢量缩放字符预付款的亚像素精度是圆形的，以整个装置的像素的一个整数。该提示仅建议应使用多少精度来定位字形，而没有指定或建议是否应修改字形的实际光栅化或像素边界以匹配。</target>
        </trans-unit>
        <trans-unit id="58a28025d0f6185055c58789557fe5ef5dfcae20" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with accuracy chosen by the implementation.</source>
          <target state="translated">字体小数度量提示值--字符字形的定位精度由实现选择。</target>
        </trans-unit>
        <trans-unit id="300138316b7a5f8f6a7fff691a96f8ada3dc73b5" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with advance widths rounded to pixel boundaries.</source>
          <target state="translated">字体小数度量提示值--字符字形的定位,提前宽度四舍五入到像素边界。</target>
        </trans-unit>
        <trans-unit id="0b9a130ab1b845f84cb215be8acab5d36215d38f" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with sub-pixel accuracy.</source>
          <target state="translated">字体小数指标提示值--字符字形以亚像素精度定位。</target>
        </trans-unit>
        <trans-unit id="e085c3b29b8b4669a6ee3c1593d627d5629b9359" translate="yes" xml:space="preserve">
          <source>Font header.</source>
          <target state="translated">字体头。</target>
        </trans-unit>
        <trans-unit id="bac1bf70db7d497b27f641cf617f7eaba5acba86" translate="yes" xml:space="preserve">
          <source>Font header. Table tag &quot;head&quot; in the Open Type Specification.</source>
          <target state="translated">字体头。Open Type Specification中的表标签 &quot;head&quot;。</target>
        </trans-unit>
        <trans-unit id="9f0283be0b670244684fa95aa1c56632f2a76b79" translate="yes" xml:space="preserve">
          <source>Font metrics are baseline-relative, meaning that they are generally independent of the rotation applied to the font (modulo possible grid hinting effects). See &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">字体度量是相对于基线的，这意味着它们通常与应用于字体的旋转无关（对可能的网格提示效果进行取模）。参见&lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a5d8e030693754f85636095e8997259dbd226a6" translate="yes" xml:space="preserve">
          <source>Font metrics for the current font.</source>
          <target state="translated">当前字体的字体指标。</target>
        </trans-unit>
        <trans-unit id="1c76bd5295cfb4df84b2c61817964297f1cc929a" translate="yes" xml:space="preserve">
          <source>Font metrics.</source>
          <target state="translated">字体指标。</target>
        </trans-unit>
        <trans-unit id="1f037791fcbbd93b36c443328680f7b0cbb50edb" translate="yes" xml:space="preserve">
          <source>Font metrics. Table tag &quot;fmtx&quot; in the Open Type Specification.</source>
          <target state="translated">字体度量。Open Type Specification中的表标签 &quot;fmtx&quot;。</target>
        </trans-unit>
        <trans-unit id="d3ace9f5c49a90fb92717f303ef978d265c04a22" translate="yes" xml:space="preserve">
          <source>Font name lookup is case insensitive, using the case folding rules of the US locale.</source>
          <target state="translated">字体名称查询不区分大小写,使用美国地区的大小写折叠规则。</target>
        </trans-unit>
        <trans-unit id="c884ceb423e891c8b4965add2a59a925e8be5f9d" translate="yes" xml:space="preserve">
          <source>Font program.</source>
          <target state="translated">字体程序。</target>
        </trans-unit>
        <trans-unit id="442ef6ea18c9171f76c6672f5fd738e01aec9f5d" translate="yes" xml:space="preserve">
          <source>Font program. Table tag &quot;fpgm&quot; in the Open Type Specification.</source>
          <target state="translated">字体程序。Open Type Specification中的表标签 &quot;fpgm&quot;。</target>
        </trans-unit>
        <trans-unit id="be3439f528b18a7b47e6ad0c7ca19205ea93ee35" translate="yes" xml:space="preserve">
          <source>Font size.</source>
          <target state="translated">字体大小:</target>
        </trans-unit>
        <trans-unit id="cd26f04abe12562e25318195d2172be83cf1437c" translate="yes" xml:space="preserve">
          <source>Font size. See the size attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">字体大小。参见HTML 4.0中的size属性定义。这个属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="e68d07bfa47a695dcd953b4631287056c134cc34" translate="yes" xml:space="preserve">
          <source>Font to paint with, &lt;code&gt;null&lt;/code&gt; indicates font of renderer is to be used.</source>
          <target state="translated">要使用的字体， &lt;code&gt;null&lt;/code&gt; 表示将使用渲染器的字体。</target>
        </trans-unit>
        <trans-unit id="547e23c9c59db6aa511ca8d42984197fe41f24a0" translate="yes" xml:space="preserve">
          <source>Font to render with</source>
          <target state="translated">要渲染的字体</target>
        </trans-unit>
        <trans-unit id="836ebd209b63dd95ce6a6180e309a843624d420a" translate="yes" xml:space="preserve">
          <source>Font variation.</source>
          <target state="translated">字体变化。</target>
        </trans-unit>
        <trans-unit id="0de36fe2c09c30a66fefaf954a3b2a7b5dd26157" translate="yes" xml:space="preserve">
          <source>Font variation. Table tag &quot;fvar&quot; in the Open Type Specification.</source>
          <target state="translated">字体变化。Open Type Specification中的表标签 &quot;fvar&quot;。</target>
        </trans-unit>
        <trans-unit id="9d28b9f6efd3ff57225119df4d0dc37f5c5c5918" translate="yes" xml:space="preserve">
          <source>FontFamily</source>
          <target state="translated">FontFamily</target>
        </trans-unit>
        <trans-unit id="86cae6a7a6beb3715636cd18e086f6111dec9973" translate="yes" xml:space="preserve">
          <source>FontFamilyAction</source>
          <target state="translated">FontFamilyAction</target>
        </trans-unit>
        <trans-unit id="8e7b98069d151f9c3b12f632f7628911a3d3315d" translate="yes" xml:space="preserve">
          <source>FontFormatException</source>
          <target state="translated">FontFormatException</target>
        </trans-unit>
        <trans-unit id="6d1199d6668860b258b5ad7487278035e79808f6" translate="yes" xml:space="preserve">
          <source>FontMetrics</source>
          <target state="translated">FontMetrics</target>
        </trans-unit>
        <trans-unit id="34edf210c152ecc6f10bafa39913598711b2e704" translate="yes" xml:space="preserve">
          <source>FontMetrics are not used for glyph rendering when running in the JDK.</source>
          <target state="translated">在JDK中运行时,FontMetrics不用于字形渲染。</target>
        </trans-unit>
        <trans-unit id="8e5fb10ca665b0aa4182ebc1229225f53d9e682d" translate="yes" xml:space="preserve">
          <source>FontRenderContext</source>
          <target state="translated">FontRenderContext</target>
        </trans-unit>
        <trans-unit id="33447ebba2307df9a3ef38542c564fa066cf782a" translate="yes" xml:space="preserve">
          <source>FontSize</source>
          <target state="translated">FontSize</target>
        </trans-unit>
        <trans-unit id="6966778008f3ff09377d11c8e2f3e839b7585034" translate="yes" xml:space="preserve">
          <source>FontSizeAction</source>
          <target state="translated">FontSizeAction</target>
        </trans-unit>
        <trans-unit id="1d5cf198c7755047ab060c50974f64edba427bae" translate="yes" xml:space="preserve">
          <source>FontUIResource</source>
          <target state="translated">FontUIResource</target>
        </trans-unit>
        <trans-unit id="70731b0e70dbdc40d8ecf45f7123fca5bd9498ad" translate="yes" xml:space="preserve">
          <source>Fonts can have different metrics for different ranges of characters. The &lt;code&gt;getLineMetrics&lt;/code&gt; methods of &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; take some text as an argument and return a &lt;code&gt;LineMetrics&lt;/code&gt; object describing the metrics of the initial number of characters in that text, as returned by &lt;a href=&quot;#getNumChars()&quot;&gt;&lt;code&gt;getNumChars()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于不同的字符范围，字体可以具有不同的度量标准。&lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;getLineMetrics&lt;/code&gt; 方法将一些文本用作参数，并返回一个 &lt;code&gt;LineMetrics&lt;/code&gt; 对象，该对象描述该文本中初始字符数的度量，由&lt;a href=&quot;#getNumChars()&quot;&gt; &lt;code&gt;getNumChars()&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="558e6cd283a156ce5070afa87f014ad813d33f9f" translate="yes" xml:space="preserve">
          <source>FooSocket. On return from implAccept the FooSocket will be connected to a client.</source>
          <target state="translated">FooSocket。从 implAccept 返回时,FooSocket 将连接到客户端。</target>
        </trans-unit>
        <trans-unit id="0678db1b06d3165ac1ff98fac04681f3be01258e" translate="yes" xml:space="preserve">
          <source>For &quot;DOM Walker&quot; style parsers, which ignore their &lt;em&gt;parser.parse()&lt;/em&gt; parameters, this is used to specify the DOM (sub)tree being walked by the parser. The Object must implement the &lt;em&gt;org.w3c.dom.Node&lt;/em&gt; interface.</source>
          <target state="translated">对于忽略其&lt;em&gt;parser.parse（）&lt;/em&gt;参数的&amp;ldquo; DOM Walker&amp;rdquo;样式解析器，此&lt;em&gt;属性&lt;/em&gt;用于指定解析器要&lt;em&gt;遍历&lt;/em&gt;的DOM（子）树。该对象必须实现&lt;em&gt;org.w3c.dom.Node&lt;/em&gt;接口。</target>
        </trans-unit>
        <trans-unit id="8b6a5fead27a8845709947c1be05f584168760eb" translate="yes" xml:space="preserve">
          <source>For &quot;text/&amp;lt;other&amp;gt;&quot; MIME types, the first time the JRE needs to determine whether the MIME type supports the charset parameter, it will check whether the parameter is explicitly listed in an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt; which uses that MIME type. If so, the JRE will assume from that point on that the MIME type supports the charset parameter and will not check again. If the parameter is not explicitly listed, the JRE will assume from that point on that the MIME type does not support the charset parameter and will not check again. Because this check is performed on an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt;, developers must ensure that all &lt;code&gt;DataFlavor&lt;/code&gt;s with a &quot;text/&amp;lt;other&amp;gt;&quot; MIME type specify the charset parameter if it is supported by that MIME type. Developers should never rely on the JRE to substitute the platform's default charset for a &quot;text/&amp;lt;other&amp;gt;&quot; DataFlavor. Failure to adhere to this restriction will lead to undefined behavior.</source>
          <target state="translated">对于&amp;ldquo;文本/ &amp;lt;other&amp;gt;&amp;rdquo; MIME类型，JRE第一次需要确定MIME类型是否支持charset参数时，它将检查是否在使用该MIME类型的任意选择的 &lt;code&gt;DataFlavor&lt;/code&gt; 中明确列出了该参数。如果是这样，JRE从那时起将假定MIME类型支持charset参数，并且将不再进行检查。如果未显式列出该参数，则JRE从那时起将假定MIME类型不支持charset参数，并且将不再进行检查。由于此检查是在任意选择的 &lt;code&gt;DataFlavor&lt;/code&gt; 上执行的，因此开发人员必须确保所有 &lt;code&gt;DataFlavor&lt;/code&gt; 如果MIME类型支持MIME类型为text / &amp;lt;other&amp;gt;的s，请指定ch​​arset参数。开发人员永远不要依赖JRE来将平台的默认字符集替换为&amp;ldquo; text / &amp;lt;other&amp;gt;&amp;rdquo; DataFlavor。不遵守此限制将导致不确定的行为。</target>
        </trans-unit>
        <trans-unit id="cb8dab71273657bae02c16971fcf4a6095bcfebb" translate="yes" xml:space="preserve">
          <source>For 1.1, the following font names are deprecated (the replacement name follows):</source>
          <target state="translated">在1.1版本中,以下字体名称已被废弃(替换名称如下)。</target>
        </trans-unit>
        <trans-unit id="2a0f06ae6280a7c8588949f5be2ed398426658f1" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;snippet.status#RECOVERABLE_DEFINED&quot;&gt;&lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;snippet.status#RECOVERABLE_NOT_DEFINED&quot;&gt;&lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt;&lt;/a&gt; declarations, the names of current unresolved dependencies for the snippet.</source>
          <target state="translated">对于&lt;a href=&quot;snippet.status#RECOVERABLE_DEFINED&quot;&gt; &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;snippet.status#RECOVERABLE_NOT_DEFINED&quot;&gt; &lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt; &lt;/a&gt;声明，该片段的当前未解析依赖项的名称。</target>
        </trans-unit>
        <trans-unit id="bed8cb83836690d69cdfdb9c1840d59ec01576a7" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;snippet.status#RECOVERABLE_DEFINED&quot;&gt;&lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;snippet.status#RECOVERABLE_NOT_DEFINED&quot;&gt;&lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt;&lt;/a&gt; declarations, the names of current unresolved dependencies for the snippet. The returned value of this method, for a given method may change when an &lt;code&gt;eval()&lt;/code&gt; or &lt;code&gt;drop()&lt;/code&gt; of another snippet causes an update of a dependency.</source>
          <target state="translated">对于&lt;a href=&quot;snippet.status#RECOVERABLE_DEFINED&quot;&gt; &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;snippet.status#RECOVERABLE_NOT_DEFINED&quot;&gt; &lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt; &lt;/a&gt;声明，该片段的当前未解析依赖项的名称。对于给定的方法，当另一个代码段的 &lt;code&gt;eval()&lt;/code&gt; 或 &lt;code&gt;drop()&lt;/code&gt; 导致依赖关系更新时，此方法的返回值可能会更改。</target>
        </trans-unit>
        <trans-unit id="59db0b4e14cce56d902a4ded8bb4f60e9a96365c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;sourcecodeanalysis#wrapper(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;wrapper(Snippet)&lt;/code&gt;&lt;/a&gt;, this is &lt;a href=&quot;snippet#source()&quot;&gt;&lt;code&gt;Snippet.source()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;sourcecodeanalysis#wrapper(jdk.jshell.Snippet)&quot;&gt; &lt;code&gt;wrapper(Snippet)&lt;/code&gt; &lt;/a&gt;，这是&lt;a href=&quot;snippet#source()&quot;&gt; &lt;code&gt;Snippet.source()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f2744c30d7556bf3016eca2708da42d9104784e" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a &lt;code&gt;URL&lt;/code&gt; for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</source>
          <target state="translated">对于&lt;b&gt;客户端格式化的打印数据&lt;/b&gt;，客户端确定或知道打印数据格式。例如，客户端可能具有JPEG编码的图像，HTML代码的 &lt;code&gt;URL&lt;/code&gt; 或包含某种编码的纯文本的磁盘文件（可能从外部来源获得），并且需要一种方法来描述打印服务的数据格式。</target>
        </trans-unit>
        <trans-unit id="330234038655b3b67f3184a6e42e55e51f6d8052" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a URL for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</source>
          <target state="translated">对于&lt;b&gt;客户端格式化的打印数据&lt;/b&gt;，客户端确定或知道打印数据格式。例如，客户端可能具有JPEG编码的图像，HTML代码的URL或包含某种编码的纯文本的磁盘文件（可能从外部来源获得），并且需要一种方法来描述打印服务的数据格式。</target>
        </trans-unit>
        <trans-unit id="e9d64bb664ba10590a2e753bd93d33d98f8da3b6" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;service formatted print data&lt;/b&gt;, the Java Print Service instance determines the print data format. The doc flavor's representation class denotes an interface whose methods the &lt;code&gt;DocPrintJob&lt;/code&gt; invokes to determine the content to be printed -- such as a renderable image interface or a Java printable interface. The doc flavor's MIME type is the special value &lt;code&gt;&quot;application/x-java-jvm-local-objectref&quot;&lt;/code&gt; indicating the client will supply a reference to a Java object that implements the interface named as the representation class. This MIME type is just a placeholder; what's important is the print data representation class.</source>
          <target state="translated">对于&lt;b&gt;服务格式的打印数据&lt;/b&gt;，Java Print Service实例确定打印数据格式。 DocFlavor的表示形式类表示一个接口，该接口的 &lt;code&gt;DocPrintJob&lt;/code&gt; 调用该方法以确定要打印的内容-例如可渲染的图像接口或Java可打印的接口。文档类型的MIME类型是特殊值 &lt;code&gt;&quot;application/x-java-jvm-local-objectref&quot;&lt;/code&gt; 指示客户端将提供对Java对象的引用，该Java对象实现名为表示形式类的接口。此MIME类型只是一个占位符；重要的是打印数据表示形式类。</target>
        </trans-unit>
        <trans-unit id="a6d170425897997b503b4050b3faa9af6d3eeca9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;BufferedImages&lt;/code&gt;, the transfer type of its &lt;code&gt;Raster&lt;/code&gt; and of the &lt;code&gt;Raster&lt;/code&gt; object's &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getTransferType&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt;. The number of elements in an array representing a pixel for the &lt;code&gt;Raster&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getNumDataElements&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;BufferedImages&lt;/code&gt; ，其 &lt;code&gt;Raster&lt;/code&gt; 和 &lt;code&gt;Raster&lt;/code&gt; 对象的 &lt;code&gt;SampleModel&lt;/code&gt; 的传输类型（可从这些类的 &lt;code&gt;getTransferType&lt;/code&gt; 方法获得）必须与 &lt;code&gt;ColorModel&lt;/code&gt; 的传输类型匹配。表示 &lt;code&gt;Raster&lt;/code&gt; 和 &lt;code&gt;SampleModel&lt;/code&gt; 的像素的数组中的元素数（可从这些类的 &lt;code&gt;getNumDataElements&lt;/code&gt; 方法获得）必须与 &lt;code&gt;ColorModel&lt;/code&gt; 的元素数匹配。</target>
        </trans-unit>
        <trans-unit id="915b18f26b26ee8c0fd892d4ff7f159ef12fc646" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;CallableStatement&lt;/code&gt; objects or for statements that return multiple results, the statement is complete when all of the associated result sets have been closed, and all update counts and output parameters have been retrieved.</source>
          <target state="translated">对于 &lt;code&gt;CallableStatement&lt;/code&gt; 对象或返回多个结果的语句，当所有关联的结果集都已关闭且所有更新计数和输出参数均已获取时，该语句完成。</target>
        </trans-unit>
        <trans-unit id="d1b3c7c7a1f06a3ed25919250a4a526d039ca2eb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Container&lt;/code&gt;s it returns a non-null value if the mouse is above the &lt;code&gt;Container&lt;/code&gt; itself or above any of its descendants. Use &lt;a href=&quot;container#getMousePosition(boolean)&quot;&gt;&lt;code&gt;Container.getMousePosition(boolean)&lt;/code&gt;&lt;/a&gt; if you need to exclude children.</source>
          <target state="translated">对于 &lt;code&gt;Container&lt;/code&gt; ，如果鼠标位于 &lt;code&gt;Container&lt;/code&gt; 自身上方或其任何后代之上，则它将返回非null值。如果需要排除子项，请使用&lt;a href=&quot;container#getMousePosition(boolean)&quot;&gt; &lt;code&gt;Container.getMousePosition(boolean)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e9a0189efceb380ef7c4d80d50d597dcc0c32e5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataLine&lt;/code&gt;'s, if the &lt;code&gt;DataLine.Info&lt;/code&gt; object which was used to retrieve the line, specifies at least one fully qualified audio format, the last one will be used as the default format.</source>
          <target state="translated">对于 &lt;code&gt;DataLine&lt;/code&gt; ，如果用于检索行的 &lt;code&gt;DataLine.Info&lt;/code&gt; 对象指定至少一种完全限定的音频格式，则最后一种将用作默认格式。</target>
        </trans-unit>
        <trans-unit id="28598f569638649a3f52c769c3a476bfa89564bc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt;, this value will be an insert index, as described above, or &lt;code&gt;-1&lt;/code&gt; if the drop occurred over the path itself.</source>
          <target state="translated">对于 &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt; ，此值将是如上所述的插入索引，如果放置发生在路径本身上，则该值为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e3ecd3f62908302c23242217931dd52873e3efb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Locale(&quot;zh&quot;, &quot;TW&quot;)&lt;/code&gt;, the candidate list will be:</source>
          <target state="translated">对于 &lt;code&gt;Locale(&quot;zh&quot;, &quot;TW&quot;)&lt;/code&gt; ，候选列表将为：</target>
        </trans-unit>
        <trans-unit id="2ac60fe5573ac88de61af47d357949dfefad31f9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks.</source>
          <target state="translated">对于 &lt;code&gt;MOUSE_DOWN&lt;/code&gt; 事件，此字段指示连续点击的次数。</target>
        </trans-unit>
        <trans-unit id="e31b88ac7ecb49b2e8afe18460bbc2e01561b3b7" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks. For other events, its value is &lt;code&gt;0&lt;/code&gt;. This field has been replaced by MouseEvent.getClickCount().</source>
          <target state="translated">对于 &lt;code&gt;MOUSE_DOWN&lt;/code&gt; 事件，此字段指示连续点击的次数。对于其他事件，其值为 &lt;code&gt;0&lt;/code&gt; 。此字段已由MouseEvent.getClickCount（）代替。</target>
        </trans-unit>
        <trans-unit id="b1c6c72fc3676c2f9a27372532a0d36dc3dda943" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Raster&lt;/code&gt; objects, the number of bands in the source must be equal to the number of bands in the destination.</source>
          <target state="translated">对于 &lt;code&gt;Raster&lt;/code&gt; 对象，源中的波段数必须等于目标中的波段数。</target>
        </trans-unit>
        <trans-unit id="be56eb9397c66564b620cc3c46827a32fec7d1ef" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;CachedRowSet&lt;/code&gt;, which operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used may leverage the fetch size to poll the data source and retrieve a number of rows that do not exceed the fetch size and that may form a subset of the actual rows returned by the original query. This is an implementation variance determined by the specific &lt;code&gt;SyncProvider&lt;/code&gt; object employed by the disconnected &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">对于在断开连接的环境中运行的 &lt;code&gt;RowSet&lt;/code&gt; 实现（例如 &lt;code&gt;CachedRowSet&lt;/code&gt; )，正在使用的 &lt;code&gt;SyncProvider&lt;/code&gt; 对象可以利用访存大小来轮询数据源，并检索不超过访存大小并且可能构成该子集的一部分的行。原始查询返回的实际行。这是由断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象使用的特定 &lt;code&gt;SyncProvider&lt;/code&gt; 对象确定的实现差异。</target>
        </trans-unit>
        <trans-unit id="51aa56243ca89f0469d553b7cf006c177225d4de" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</source>
          <target state="translated">对于在断开连接的环境中运行的 &lt;code&gt;RowSet&lt;/code&gt; 实现（例如 &lt;code&gt;CachedRowSet&lt;/code&gt; )，使用的 &lt;code&gt;SyncProvider&lt;/code&gt; 对象提供了互补的锁定和数据完整性选项。下述选项仅与连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象（ &lt;code&gt;JdbcRowSet&lt;/code&gt; 对象）相关。</target>
        </trans-unit>
        <trans-unit id="26978a2656b24192291060a84625f6a2943a1afc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</source>
          <target state="translated">对于在断开连接的环境中运行的 &lt;code&gt;RowSet&lt;/code&gt; 实现（例如 &lt;code&gt;CachedRowSet&lt;/code&gt; )， &lt;code&gt;SyncProvider&lt;/code&gt; 对象提供了互补的锁定和数据完整性选项。下述选项仅与连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象（ &lt;code&gt;JdbcRowSet&lt;/code&gt; 对象）相关。</target>
        </trans-unit>
        <trans-unit id="71afde344e25420fb6ecb50c10d4bcde14d8a765" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SctpChannel&lt;/code&gt;, this controls the amount of data the SCTP stack may have waiting in internal buffers to be sent. This option therefore bounds the maximum size of data that can be sent in a single send call.</source>
          <target state="translated">对于 &lt;code&gt;SctpChannel&lt;/code&gt; ，这控制SCTP堆栈可能在内部缓冲区中等待发送的数据量。因此，此选项限制了可以在单个发送调用中发送的最大数据大小。</target>
        </trans-unit>
        <trans-unit id="2778d64cc42fcb85e785a4536108c28ff0b107fb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SctpChannel&lt;/code&gt;, this controls the receiver window size.</source>
          <target state="translated">对于 &lt;code&gt;SctpChannel&lt;/code&gt; ，这控制接收器窗口的大小。</target>
        </trans-unit>
        <trans-unit id="7232e60bba05e4d8e5b98e5139c7def6a9e82cc6" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SctpMultiChannel&lt;/code&gt;, the effect is the same as for &lt;code&gt;
 SctpChannel&lt;/code&gt;, except that it applies to all associations. The option applies to each association's window size separately.</source>
          <target state="translated">对于 &lt;code&gt;SctpMultiChannel&lt;/code&gt; ，其效果与 &lt;code&gt; SctpChannel&lt;/code&gt; 相同，不同之处在于它适用于所有关联。该选项分别适用于每个关联的窗口大小。</target>
        </trans-unit>
        <trans-unit id="452a2be5323131595dafbbbbd82c5f4d0d27bc5e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;SctpMultiChannel&lt;/code&gt;, the meaning is implementation dependent. It might control the receive buffer for each association bound to the socket descriptor or it might control the receive buffer for the whole socket.</source>
          <target state="translated">对于 &lt;code&gt;SctpMultiChannel&lt;/code&gt; ，其含义取决于实现。它可以控制绑定到套接字描述符的每个关联的接收缓冲区，也可以控制整个套接字的接收缓冲区。</target>
        </trans-unit>
        <trans-unit id="f7274322aa239a9feb73bcc543b20424608df817" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window.</source>
          <target state="translated">对于 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 事件，返回窗口的新状态。</target>
        </trans-unit>
        <trans-unit id="0f8cb0c350a4b682405caf4641d217f32ce5e36a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window. The state is represented as a bitwise mask.</source>
          <target state="translated">对于 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 事件，返回窗口的新状态。该状态表示为按位掩码。</target>
        </trans-unit>
        <trans-unit id="d590f99f52cb6c6a2781e8bc61bf20cac84795d0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window.</source>
          <target state="translated">对于 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 事件，返回窗口的先前状态。</target>
        </trans-unit>
        <trans-unit id="dcfb0529351c9aae11c9ed2812d9fa3bb3932f22" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window. The state is represented as a bitwise mask.</source>
          <target state="translated">对于 &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; 事件，返回窗口的先前状态。该状态表示为按位掩码。</target>
        </trans-unit>
        <trans-unit id="a260b5b1e1e63f842b8db0f461e7c2eaca7cfec7" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;
      maxValue&lt;/code&gt;, the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt;, or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</source>
          <target state="translated">为 &lt;code&gt;defaultValue&lt;/code&gt; ， &lt;code&gt;minValue&lt;/code&gt; (最小值)，并且 &lt;code&gt; maxValue&lt;/code&gt; ，相关联的值必须是对应于该Java类型 &lt;code&gt;openType&lt;/code&gt; ，或者是能够被转换成类型的字符串。如果找到一个，则转换使用静态方法 &lt;code&gt;valueOf(String)&lt;/code&gt; ；否则，将使用静态方法valueOf（String）。否则，只有一个 &lt;code&gt;String&lt;/code&gt; 参数的构造函数（如果找到）；否则为false。否则失败。</target>
        </trans-unit>
        <trans-unit id="4530bda67f131f5f34a16a617bdaea1d3f4f7461" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt;, or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</source>
          <target state="translated">为 &lt;code&gt;defaultValue&lt;/code&gt; ， &lt;code&gt;minValue&lt;/code&gt; (最小值)，并且 &lt;code&gt;maxValue&lt;/code&gt; ，相关联的值必须是对应于该Java类型 &lt;code&gt;openType&lt;/code&gt; ，或者是能够被转换成类型的字符串。如果找到一个，则转换使用静态方法 &lt;code&gt;valueOf(String)&lt;/code&gt; ；否则，将使用静态方法valueOf（String）。否则，只有一个 &lt;code&gt;String&lt;/code&gt; 参数的构造函数找到它；否则失败。</target>
        </trans-unit>
        <trans-unit id="aa25baeb85527242f11d5e87c3523c6ec25ccebb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;fill&lt;/code&gt; operations, including &lt;code&gt;fillRect&lt;/code&gt;, &lt;code&gt;fillRoundRect&lt;/code&gt;, &lt;code&gt;fillOval&lt;/code&gt;, &lt;code&gt;fillArc&lt;/code&gt;, &lt;code&gt;fillPolygon&lt;/code&gt;, and &lt;code&gt;clearRect&lt;/code&gt;, &lt;a href=&quot;#fill(java.awt.Shape)&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt; can now be called with the desired &lt;code&gt;Shape&lt;/code&gt;. For example, when filling a rectangle:</source>
          <target state="translated">对于 &lt;code&gt;fill&lt;/code&gt; 操作，包括 &lt;code&gt;fillRect&lt;/code&gt; ， &lt;code&gt;fillRoundRect&lt;/code&gt; ， &lt;code&gt;fillOval&lt;/code&gt; ， &lt;code&gt;fillArc&lt;/code&gt; ， &lt;code&gt;fillPolygon&lt;/code&gt; 和 &lt;code&gt;clearRect&lt;/code&gt; ，&lt;a href=&quot;#fill(java.awt.Shape)&quot;&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/a&gt;现在可以与所需称为 &lt;code&gt;Shape&lt;/code&gt; 。例如，当填充一个矩形时：</target>
        </trans-unit>
        <trans-unit id="7735067132e49435c502ac1c91d49e144e93e07f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;host&lt;/code&gt; specified in</source>
          <target state="translated">对于在中指定的 &lt;code&gt;host&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9de1e4d9b868482565745441ba41e44b255f55af" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;host&lt;/code&gt; specified in literal IPv6 address, either the form defined in RFC 2732 or the literal IPv6 address format defined in RFC 2373 is accepted. IPv6 scoped addresses are also supported. See &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt; for a description of IPv6 scoped addresses.</source>
          <target state="translated">对于以文字IPv6地址指定的 &lt;code&gt;host&lt;/code&gt; ，可接受RFC 2732中定义的格式或RFC 2373中定义的文字IPv6地址格式。还支持IPv6范围的地址。有关IPv6范围地址的说明，请参见&lt;a href=&quot;inet6address#scoped&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e38a1a19e5894ccb2cf644282825ddeb0200dfd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;legalValues&lt;/code&gt;, the associated value must be either an array or a &lt;code&gt;Set&lt;/code&gt;, and the elements of the array or set must be convertible as described for &lt;code&gt;defaultValue&lt;/code&gt; etc.</source>
          <target state="translated">对于 &lt;code&gt;legalValues&lt;/code&gt; ，关联值必须是数组或 &lt;code&gt;Set&lt;/code&gt; ，并且数组或set的元素必须可转换，如对 &lt;code&gt;defaultValue&lt;/code&gt; 等所述。</target>
        </trans-unit>
        <trans-unit id="f9f2a700cc13dc4e63747523ce097168cd8536d8" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has good splitting properties, assuming the file contains a regular sequence of lines. Good splitting properties can result in good parallel stream performance. The spliterator for a &lt;em&gt;line-optimal&lt;/em&gt; charset takes advantage of the charset properties (a line feed or a carriage return being efficient identifiable) such that when splitting it can approximately divide the number of covered lines in half.</source>
          <target state="translated">对于&lt;em&gt;行最佳&lt;/em&gt;字符集，假设文件包含规则的行序列，则流源的拆分器具有良好的拆分属性。良好的拆分属性可导致良好的并行流性能。用于&lt;em&gt;行最佳&lt;/em&gt;字符集的分隔符利用了字符集属性（可以高效识别换行或回车），以便在拆分时可以将覆盖行的数目大致分成两半。</target>
        </trans-unit>
        <trans-unit id="88ef468247477df828d66d215450b2eee8434eb7" translate="yes" xml:space="preserve">
          <source>For BufferedImages, if the ColorSpace of the source BufferedImage does not match the requirements of the first profile in the array, the first conversion is to an appropriate ColorSpace. If the requirements of the last profile in the array are not met by the ColorSpace of the destination BufferedImage, the last conversion is to the destination's ColorSpace.</source>
          <target state="translated">对于BufferedImages,如果源BufferedImage的ColorSpace不符合数组中第一个配置文件的要求,则第一次转换为合适的ColorSpace。如果数组中最后一个配置文件的要求不符合目标BufferedImage的ColorSpace,则最后一次转换为目标的ColorSpace。</target>
        </trans-unit>
        <trans-unit id="0297a3a15e6a2cb9e7e1e8e53b704530f78c54db" translate="yes" xml:space="preserve">
          <source>For BufferedImages, rescaling operates on color and alpha components. The number of sets of scaling constants may be one, in which case the same constants are applied to all color (but not alpha) components. Otherwise, the number of sets of scaling constants may equal the number of Source color components, in which case no rescaling of the alpha component (if present) is performed. If neither of these cases apply, the number of sets of scaling constants must equal the number of Source color components plus alpha components, in which case all color and alpha components are rescaled.</source>
          <target state="translated">对于BufferedImages,重新缩放操作是针对颜色和alpha组件的。缩放常数的组数可以是一个,在这种情况下,相同的常数被应用于所有颜色(但不是alpha)组件。否则,缩放常数的组数可能等于源颜色组件的数量,在这种情况下,不会对alpha组件(如果存在)进行重新缩放。如果这两种情况都不适用,那么缩放常数的组数必须等于源颜色组件加上alpha组件的数量,在这种情况下,所有颜色和alpha组件都会被重新缩放。</target>
        </trans-unit>
        <trans-unit id="12e29238a774ac40b3348e908ea760e7c021ea28" translate="yes" xml:space="preserve">
          <source>For BufferedImages, the lookup operates on color and alpha components. The number of lookup arrays may be one, in which case the same array is applied to all color (but not alpha) components. Otherwise, the number of lookup arrays may equal the number of Source color components, in which case no lookup of the alpha component (if present) is performed. If neither of these cases apply, the number of lookup arrays must equal the number of Source color components plus alpha components, in which case lookup is performed for all color and alpha components. This allows non-uniform rescaling of multi-band BufferedImages.</source>
          <target state="translated">对于BufferedImages,查找操作是针对颜色和alpha组件的。查找数组的数量可以是一个,在这种情况下,相同的数组会应用于所有颜色(但不是alpha)组件。否则,查找数组的数量可能等于源颜色组件的数量,在这种情况下,不执行alpha组件(如果存在)的查找。如果这两种情况都不适用,那么查找数组的数量必须等于源颜色组件加上alpha组件的数量,在这种情况下,会对所有颜色和alpha组件进行查找。这允许多波段BufferedImages的非均匀重缩放。</target>
        </trans-unit>
        <trans-unit id="b1aa9b4cd03568424ee163ee4cf505a41549f961" translate="yes" xml:space="preserve">
          <source>For ByteBuffers backed by an accessible byte array.</source>
          <target state="translated">对于由一个可访问的字节数组支持的ByteBuffers。</target>
        </trans-unit>
        <trans-unit id="5e1ca4acc505662eb0ed9a40f901edd46086ef87" translate="yes" xml:space="preserve">
          <source>For ByteBuffers not backed by an accessible byte array.</source>
          <target state="translated">对于未被可访问的字节数组支持的ByteBuffers。</target>
        </trans-unit>
        <trans-unit id="3c451692bdf99cd8b31e04742a1111ee3757beb5" translate="yes" xml:space="preserve">
          <source>For DML statements, such as Insert, Update or Delete, and DDL statements, the statement is complete as soon as it has finished executing.</source>
          <target state="translated">对于DML语句,如Insert、Update或Delete,以及DDL语句,一旦执行完毕,该语句即为完成。</target>
        </trans-unit>
        <trans-unit id="4c2df44d14a8ceaf346d4ff6b01e4eddb069d567" translate="yes" xml:space="preserve">
          <source>For DTLS protocols, the first 16 bits of the sequence number is a counter value (epoch) that is incremented on every cipher state change. The remaining 48 bits on the right side of the sequence number represents the sequence of the record, which is maintained separately for each epoch.</source>
          <target state="translated">对于DTLS协议,序列号的前16位是一个计数器值(epoch),在每次密码状态变化时递增。序列号右侧剩余的48位代表记录的序列,每一个纪元都会单独维护。</target>
        </trans-unit>
        <trans-unit id="aae39ae71503d6b0412eb10be75f99287813f3f4" translate="yes" xml:space="preserve">
          <source>For Gaps, the general strategy is that if the local date-time falls in the middle of a Gap, then the resulting zoned date-time will have a local date-time shifted forwards by the length of the Gap, resulting in a date-time in the later offset, typically &quot;summer&quot; time.</source>
          <target state="translated">对于Gap,一般的策略是,如果当地的日期时间落在Gap的中间,那么产生的分区日期时间将按Gap的长度将当地的日期时间前移,产生的日期时间在后面的偏移,通常是 &quot;夏季 &quot;时间。</target>
        </trans-unit>
        <trans-unit id="47602a4734e43c194873be68402cb62c3ccb993d" translate="yes" xml:space="preserve">
          <source>For IPv4 address format, please refer to &lt;a href=&quot;inet4address#format&quot;&gt;Inet4Address#format&lt;/a&gt;; For IPv6 address format, please refer to &lt;a href=&quot;inet6address#format&quot;&gt;Inet6Address#format&lt;/a&gt;.</source>
          <target state="translated">有关IPv4地址格式，请参阅&lt;a href=&quot;inet4address#format&quot;&gt;Inet4Address＃format&lt;/a&gt; ; 有关IPv6地址格式，请参阅&lt;a href=&quot;inet6address#format&quot;&gt;Inet6Address＃format&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32d46c6ea44bdc9156a63d0abe51018483f88d1c" translate="yes" xml:space="preserve">
          <source>For Internet Protocol v4 the value consists of an &lt;code&gt;integer&lt;/code&gt;, the least significant 8 bits of which represent the value of the TOS octet in IP packets sent by the socket. RFC 1349 defines the TOS values as follows:</source>
          <target state="translated">对于Internet协议v4，该值由一个 &lt;code&gt;integer&lt;/code&gt; 组成，该整数的最低有效8位代表套接字发送的IP数据包中TOS八位位组的值。RFC 1349定义了TOS值，如下所示：</target>
        </trans-unit>
        <trans-unit id="3f2eae4e6dd20e42323be6ff8ab3ddd498ced00a" translate="yes" xml:space="preserve">
          <source>For Internet Protocol v6 &lt;code&gt;tc&lt;/code&gt; is the value that would be placed into the sin6_flowinfo field of the IP header.</source>
          <target state="translated">对于Internet协议v6， &lt;code&gt;tc&lt;/code&gt; 是将放置在IP标头的sin6_flowinfo字段中的值。</target>
        </trans-unit>
        <trans-unit id="fdd92d08da24ad9dcd084f2963cc368886d94250" translate="yes" xml:space="preserve">
          <source>For Java 2 platform v1.3, a &lt;code&gt;KeyStroke&lt;/code&gt; can be associated with more than one condition. For example, 'a' could be bound for the two conditions &lt;code&gt;WHEN_FOCUSED&lt;/code&gt; and &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; condition.</source>
          <target state="translated">对于Java 2平台v1.3， &lt;code&gt;KeyStroke&lt;/code&gt; 可以与多个条件相关联。例如，可以为两个条件 &lt;code&gt;WHEN_FOCUSED&lt;/code&gt; 和 &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; 条件绑定&amp;ldquo; a&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="fac8dbfb74c279aab3f0b040bbf12a4e3c5e15cd" translate="yes" xml:space="preserve">
          <source>For MBeans referenced in such relation, nothing will be done,</source>
          <target state="translated">对于这种关系中引用的MBeans,将不做任何处理。</target>
        </trans-unit>
        <trans-unit id="0df500d83e75a486cc7488acc15cde4c6a58a19f" translate="yes" xml:space="preserve">
          <source>For Microsoft Windows platforms, the prefix of a pathname that contains a drive specifier consists of the drive letter followed by &lt;code&gt;&quot;:&quot;&lt;/code&gt; and possibly followed by &lt;code&gt;&quot;\\&quot;&lt;/code&gt; if the pathname is absolute. The prefix of a UNC pathname is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;; the hostname and the share name are the first two names in the name sequence. A relative pathname that does not specify a drive has no prefix.</source>
          <target state="translated">对于Microsoft Windows平台，包含驱动器说明符的路径名的前缀由驱动器号组成，后跟 &lt;code&gt;&quot;:&quot;&lt;/code&gt; ，如果路径名是绝对的，则可能后跟 &lt;code&gt;&quot;\\&quot;&lt;/code&gt; 。 UNC路径名的前缀为 &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; ；主机名和共享名是名称序列中的前两个名称。未指定驱动器的相对路径名没有前缀。</target>
        </trans-unit>
        <trans-unit id="e28e2ad3a676ea5fec786b5d4f16481efefbbb2d" translate="yes" xml:space="preserve">
          <source>For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;#withEarlierOffsetAtOverlap()&quot;&gt;&lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt;, help manage the case of an overlap.</source>
          <target state="translated">对于&amp;ldquo;重叠&amp;rdquo;，一般的策略是，如果本地日期时间落在&amp;ldquo;重叠&amp;rdquo;的中间，则将保留以前的偏移量。如果没有先前的偏移量，或者先前的偏移量无效，那么将使用较早的偏移量，通常是&amp;ldquo;夏令时&amp;rdquo;。两个附加方法&lt;a href=&quot;#withEarlierOffsetAtOverlap()&quot;&gt; &lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;有助于管理重叠的情况。</target>
        </trans-unit>
        <trans-unit id="a727367a481c4d2b3f8a5feb6fd0dd5c0602e315" translate="yes" xml:space="preserve">
          <source>For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;zoneddatetime#withEarlierOffsetAtOverlap--&quot;&gt;&lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt;, help manage the case of an overlap.</source>
          <target state="translated">对于&amp;ldquo;重叠&amp;rdquo;，一般的策略是，如果本地日期时间落在&amp;ldquo;重叠&amp;rdquo;的中间，则将保留以前的偏移量。如果没有先前的偏移量，或者先前的偏移量无效，那么将使用较早的偏移量，通常是&amp;ldquo;夏令时&amp;rdquo;时间。两个附加方法&lt;a href=&quot;zoneddatetime#withEarlierOffsetAtOverlap--&quot;&gt; &lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;有助于管理重叠的情况。</target>
        </trans-unit>
        <trans-unit id="4784f0d3a9af62eb3ebfc6f737d12c7774e84b6a" translate="yes" xml:space="preserve">
          <source>For RELAX NG, this method must throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;schemas.length!=1&lt;/code&gt;.</source>
          <target state="translated">对于RELAX NG，如果 &lt;code&gt;schemas.length!=1&lt;/code&gt; ，则此方法必须抛出&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7fab9d7fe9b663fc7a55e0d1c0fc72d4cab1cdb" translate="yes" xml:space="preserve">
          <source>For Rasters, rescaling operates on bands. The number of sets of scaling constants may be one, in which case the same constants are applied to all bands, or it must equal the number of Source Raster bands.</source>
          <target state="translated">对于光栅来说,重新缩放是在波段上进行的。缩放常数的组数可以是一个,在这种情况下,相同的常数适用于所有波段,或者它必须等于源光栅波段的数量。</target>
        </trans-unit>
        <trans-unit id="92389cc1157ad3878bb7c38e3b8a1bb1c8d06c44" translate="yes" xml:space="preserve">
          <source>For Rasters, the lookup operates on bands. The number of lookup arrays may be one, in which case the same array is applied to all bands, or it must equal the number of Source Raster bands.</source>
          <target state="translated">对于栅格,查找的操作是在频带上进行的。查找数组的数量可以是一个,在这种情况下,同一个数组应用于所有的带,或者它必须等于源光栅带的数量。</target>
        </trans-unit>
        <trans-unit id="37a0362b48bdd5ec7bc1b7aa645ebcafbae5eb26" translate="yes" xml:space="preserve">
          <source>For Rasters, the number of bands in the source Raster must match the requirements of the first profile in the array, and the number of bands in the destination Raster must match the requirements of the last profile in the array. The array must have at least two elements or calling the filter method for Rasters will throw an IllegalArgumentException.</source>
          <target state="translated">对于栅格,源栅格中的波段数必须符合数组中第一个轮廓的要求,而目标栅格中的波段数必须符合数组中最后一个轮廓的要求。数组必须至少有两个元素,否则调用Raster的filter方法将抛出一个IllegalArgumentException。</target>
        </trans-unit>
        <trans-unit id="9855cbf9d64cd6c04cc435b5d6fc1d9d25c6b203" translate="yes" xml:space="preserve">
          <source>For SSL/TLS connections, the underlying SSL/TLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type.</source>
          <target state="translated">对于SSL/TLS连接,底层SSL/TLS提供者可以为某一服务器名类型指定一个默认值。在客户机模式下,建议在默认情况下,只要能够通过支持的服务器名称类型找到服务器,提供者就应该包含服务器名称指示。</target>
        </trans-unit>
        <trans-unit id="c55e9f96a30383e78fbd420c04bcb6b5cbc4878f" translate="yes" xml:space="preserve">
          <source>For SSL/TLS/DTLS connections, the underlying SSL/TLS/DTLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type.</source>
          <target state="translated">对于SSL/TLS/DTLS连接,底层的SSL/TLS/DTLS提供者可以为某个服务器名类型指定一个默认值。在客户端模式下,建议在默认情况下,只要能通过支持的服务器名类型找到服务器,提供者就应该包含服务器名指示。</target>
        </trans-unit>
        <trans-unit id="a76b6379a9426be3b8a70c33a688fc19d56e282f" translate="yes" xml:space="preserve">
          <source>For SSL/TLS/DTLS connections, the underlying provider should calculate and specify the implicit value of the maximum expected network packet size if it is not configured explicitly. For any connection populated object, this method should never return &lt;code&gt;0&lt;/code&gt; so that applications can retrieve the actual implicit size of the underlying implementation.</source>
          <target state="translated">对于SSL / TLS / DTLS连接，如果未明确配置，则基础提供程序应计算并指定最大预期网络数据包大小的隐式值。对于任何连接填充的对象，此方法都不应返回 &lt;code&gt;0&lt;/code&gt; ,以便应用程序可以检索基础实现的实际隐式大小。</target>
        </trans-unit>
        <trans-unit id="4215888e3982e3de15d57f415656bd905f924bed" translate="yes" xml:space="preserve">
          <source>For Select statements, the statement is complete when the associated result set is closed.</source>
          <target state="translated">对于Select语句,当相关的结果集关闭时,该语句才算完成。</target>
        </trans-unit>
        <trans-unit id="20553bda21b7c5c3be557a2fc22c40bfb8714881" translate="yes" xml:space="preserve">
          <source>For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt;&lt;code&gt;MulticastSocket&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于UDP套接字，可能有必要将多个套接字绑定到同一套接字地址。这通常是为了接收多播数据包（请参见&lt;a href=&quot;multicastsocket&quot;&gt; &lt;code&gt;MulticastSocket&lt;/code&gt; &lt;/a&gt;）。所述 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 插座选项允许如果多个套接字被绑定到相同的套接字地址 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 套接字选项之前结合使用套接字启用&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddc210dbbba2ad354a2722f241cf948fa56bd99c" translate="yes" xml:space="preserve">
          <source>For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt;&lt;code&gt;MulticastSocket&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;datagramsocket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于UDP套接字，可能有必要将多个套接字绑定到同一套接字地址。这通常是为了接收多播数据包（请参见&lt;a href=&quot;multicastsocket&quot;&gt; &lt;code&gt;MulticastSocket&lt;/code&gt; &lt;/a&gt;）。所述 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 插座选项允许如果多个套接字被绑定到相同的套接字地址 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 套接字选项之前结合使用套接字启用&lt;a href=&quot;datagramsocket#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd8c93074e3853223ea38f1e9e8a1bad3535bc99" translate="yes" xml:space="preserve">
          <source>For UNIX platforms, the prefix of an absolute pathname is always &lt;code&gt;&quot;/&quot;&lt;/code&gt;. Relative pathnames have no prefix. The abstract pathname denoting the root directory has the prefix &lt;code&gt;&quot;/&quot;&lt;/code&gt; and an empty name sequence.</source>
          <target state="translated">对于UNIX平台，绝对路径名的前缀始终为 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 。相对路径名没有前缀。表示根目录的抽象路径名带有前缀 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 和空名称序列。</target>
        </trans-unit>
        <trans-unit id="134f568b646f7b9198a3e9b333aae84cf2eb28df" translate="yes" xml:space="preserve">
          <source>For XML 1.0 compliance an XML processor must pass the identifiers of declared unparsed entities, notation declarations and their associated identifiers to the application. This information is provided through the property API on this interface. The following two properties allow access to this information: javax.xml.stream.notations and javax.xml.stream.entities. When the current event is a DTD the following call will return a list of Notations &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.notations&quot;);&lt;/code&gt; The following call will return a list of entity declarations: &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.entities&quot;);&lt;/code&gt; These properties can only be accessed during a DTD event and are defined to return null if the information is not available.</source>
          <target state="translated">为了符合XML 1.0，XML处理器必须将已声明的未解析实体的标识符，符号声明及其关联的标识符传递给应用程序。此信息通过此接口上的属性API提供。以下两个属性允许访问此信息：javax.xml.stream.notations和javax.xml.stream.entities。当当前事件为DTD时，以下调用将返回Notations &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.notations&quot;);&lt;/code&gt; 以下调用将返回实体声明的列表： &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.entities&quot;);&lt;/code&gt; 这些属性只能在DTD事件期间访问，并且定义为在信息不可用时返回null。</target>
        </trans-unit>
        <trans-unit id="81ee812082aae7f26b9641e21fc97a0bd43f8e91" translate="yes" xml:space="preserve">
          <source>For XML Schema, this method creates a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object that performs validation by using location hints specified in documents.</source>
          <target state="translated">对于XML Schema，此方法创建一个&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;对象，该对象通过使用文档中指定的位置提示来执行验证。</target>
        </trans-unit>
        <trans-unit id="ac8b5bf5a407d708f91b5f710669495108d4ab3a" translate="yes" xml:space="preserve">
          <source>For XML processing errors, a SAX driver must use this interface in preference to throwing an exception: it is up to the application to decide whether to throw an exception for different types of errors and warnings. Note, however, that there is no requirement that the parser continue to report additional errors after a call to &lt;a href=&quot;#fatalError(org.xml.sax.SAXParseException)&quot;&gt;&lt;code&gt;fatalError&lt;/code&gt;&lt;/a&gt;. In other words, a SAX driver class may throw an exception after reporting any fatalError. Also parsers may throw appropriate exceptions for non-XML errors. For example, &lt;a href=&quot;xmlreader#parse(org.xml.sax.InputSource)&quot;&gt;&lt;code&gt;XMLReader.parse()&lt;/code&gt;&lt;/a&gt; would throw an IOException for errors accessing entities or the document.</source>
          <target state="translated">对于XML处理错误，SAX驱动程序必须优先使用此接口以引发异常：由应用程序决定是否针对不同类型的错误和警告引发异常。但是请注意，不要求解析器在调用&lt;a href=&quot;#fatalError(org.xml.sax.SAXParseException)&quot;&gt; &lt;code&gt;fatalError&lt;/code&gt; &lt;/a&gt;之后继续报告其他错误。换句话说，SAX驱动程序类在报告任何fatalError之后可能会引发异常。解析器还可能为非XML错误引发适当的异常。例如，&lt;a href=&quot;xmlreader#parse(org.xml.sax.InputSource)&quot;&gt; &lt;code&gt;XMLReader.parse()&lt;/code&gt; &lt;/a&gt;会因访问实体或文档的错误而引发IOException。</target>
        </trans-unit>
        <trans-unit id="97576d9728eb03d27acde72957e208d72ca1b49e" translate="yes" xml:space="preserve">
          <source>For XSLT, &lt;a href=&quot;http://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;Attribute Value Templates&lt;/a&gt; attribute values will be returned unexpanded (since there is no context at this point). The namespace prefixes inside Attribute Value Templates will be unexpanded, so that they remain valid XPath values.</source>
          <target state="translated">对于XSLT，&amp;ldquo;&lt;a href=&quot;http://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;属性值模板&amp;rdquo;&lt;/a&gt;属性值将以未扩展的形式返回（因为此时没有上下文）。属性值模板中的名称空间前缀将不扩展，以便它们保持有效的XPath值。</target>
        </trans-unit>
        <trans-unit id="cb139dc952bdcd4ca383994b6a6cf1b9d7e3a42f" translate="yes" xml:space="preserve">
          <source>For XSLT, &lt;a href=&quot;https://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;Attribute Value Templates&lt;/a&gt; attribute values will be returned unexpanded (since there is no context at this point). The namespace prefixes inside Attribute Value Templates will be unexpanded, so that they remain valid XPath values.</source>
          <target state="translated">对于XSLT，&amp;ldquo;&lt;a href=&quot;https://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;属性值模板&amp;rdquo;&lt;/a&gt;属性值将以未扩展的形式返回（因为此时没有上下文）。属性值模板中的名称空间前缀将不扩展，以便它们保持有效的XPath值。</target>
        </trans-unit>
        <trans-unit id="6dad4526f56df9fff00c924610d84c66d81a2fd8" translate="yes" xml:space="preserve">
          <source>For a Kerberized server the action is &quot;accept&quot;. For example, the permission necessary to access and use the secret key of the Kerberized &quot;host&quot; service (telnet and the likes) would be constructed as follows:</source>
          <target state="translated">对于 Kerberized 服务器来说,操作是 &quot;accept&quot;。例如,访问和使用 Kerberized &quot;host&quot; 服务 (telnet 等)的秘钥所需的权限如下。</target>
        </trans-unit>
        <trans-unit id="73f45b640d4ed9d91b00b255631883b34668492f" translate="yes" xml:space="preserve">
          <source>For a channel that is ready for at least one such operation, the ready-operation set of the channel's key is set to identify exactly the operations for which the channel is ready and the</source>
          <target state="translated">对于至少有一个这样的操作已经准备好的通道,通道的密钥的准备操作集被设置为确切地标识该通道准备好的操作和</target>
        </trans-unit>
        <trans-unit id="9f6c2cc7d79d63c1f14bdd18d5f81576c63d58f2" translate="yes" xml:space="preserve">
          <source>For a class to be retransformed, &lt;a href=&quot;#isRetransformClassesSupported()&quot;&gt;&lt;code&gt;isRetransformClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;#isRedefineClassesSupported()&quot;&gt;&lt;code&gt;isRedefineClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</source>
          <target state="translated">对于要重新转换的类，&lt;a href=&quot;#isRetransformClassesSupported()&quot;&gt; &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; &lt;/a&gt;也必须为true。但是 &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; 的值不影响此函数返回的值。对于要重新定义的类，&lt;a href=&quot;#isRedefineClassesSupported()&quot;&gt; &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; &lt;/a&gt;也必须为true。但是 &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; 的值不影响此函数返回的值。</target>
        </trans-unit>
        <trans-unit id="11846a346d2ab60d036859287229666998ffb89d" translate="yes" xml:space="preserve">
          <source>For a class to be retransformed, &lt;a href=&quot;instrumentation#isRetransformClassesSupported--&quot;&gt;&lt;code&gt;isRetransformClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;instrumentation#isRedefineClassesSupported--&quot;&gt;&lt;code&gt;isRedefineClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</source>
          <target state="translated">对于要重新转换的类，&lt;a href=&quot;instrumentation#isRetransformClassesSupported--&quot;&gt; &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; &lt;/a&gt;也必须为true。但是 &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; 的值不会影响此函数返回的值。对于要重新定义的类，&lt;a href=&quot;instrumentation#isRedefineClassesSupported--&quot;&gt; &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; &lt;/a&gt;也必须为true。但是 &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; 的值不会影响此函数返回的值。</target>
        </trans-unit>
        <trans-unit id="c5b39595c299e68d6c5a7b61856830d8b4761e7e" translate="yes" xml:space="preserve">
          <source>For a classic example, here is a task computing Fibonacci numbers:</source>
          <target state="translated">对于一个经典的例子,这里有一个计算斐波那契数的任务。</target>
        </trans-unit>
        <trans-unit id="048a413e62191e1579b1312264cda5145063d780" translate="yes" xml:space="preserve">
          <source>For a connector client, the source is a reference to the connector client object, an instance of a class implementing &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于连接器客户端，源是对连接器客户端对象的引用，该对象是实现&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt;的类的实例。</target>
        </trans-unit>
        <trans-unit id="e954a136069f610e1d348ed2aae8a3833f52a5f6" translate="yes" xml:space="preserve">
          <source>For a connector server, if it is registered in an MBean server, the source is the &lt;a href=&quot;../objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; under which it is registered. Otherwise, it is a reference to the connector server object itself, an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于连接器服务器，如果它在MBean服务器中注册，则源是在其下注册它的&lt;a href=&quot;../objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;。否则，它是对连接器服务器对象本身（&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt;的子类的实例）的引用。</target>
        </trans-unit>
        <trans-unit id="2ce500b7d65aa27215f98ffce87929769e912a5b" translate="yes" xml:space="preserve">
          <source>For a custom handler, e.g. com.foo.MyHandler, the properties would be:</source>
          <target state="translated">对于一个自定义的处理程序,例如com.foo.MyHandler,其属性将是。</target>
        </trans-unit>
        <trans-unit id="97e10d9e8ecfe0fa32192fd60cf92de7a07ca3a0" translate="yes" xml:space="preserve">
          <source>For a disconnected &lt;code&gt;RowSet&lt;/code&gt; object, custom mapping can be done only when a &lt;code&gt;Map&lt;/code&gt; object is passed to the method or constructor that will be doing the custom mapping. The situation is different for connected &lt;code&gt;RowSet&lt;/code&gt; objects because they maintain a connection with the data source. A method that does custom mapping and is called by a disconnected &lt;code&gt;RowSet&lt;/code&gt; object may use the &lt;code&gt;Map&lt;/code&gt; object that is associated with the &lt;code&gt;Connection&lt;/code&gt; object being used. So, in other words, if no map is specified, the connection's type map can be used by default.</source>
          <target state="translated">对于断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象，仅当将 &lt;code&gt;Map&lt;/code&gt; 对象传递到将要执行自定义映射的方法或构造函数时，才能完成自定义映射。对于已连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象，情况有所不同，因为它们维护与数据源的连接。执行自定义映射并由断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象调用的方法可以使用与正在使用的 &lt;code&gt;Connection&lt;/code&gt; 对象关联的 &lt;code&gt;Map&lt;/code&gt; 对象。因此，换句话说，如果未指定映射，则默认情况下可以使用连接的类型映射。</target>
        </trans-unit>
        <trans-unit id="48a4faa0d8a364248711da4f681304622c126f91" translate="yes" xml:space="preserve">
          <source>For a discussion of the relative advantages and disadvantages of using physical or logical fonts, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/2d/text/fonts.html#advantages-and-disadvantages&quot;&gt; Physical and Logical Fonts&lt;/a&gt; in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/index.html&quot;&gt;The Java Tutorials&lt;/a&gt; document.</source>
          <target state="translated">对于相对优势，利用物理或逻辑字体的优缺点的讨论，请参阅&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/2d/text/fonts.html#advantages-and-disadvantages&quot;&gt;物理和逻辑的字体&lt;/a&gt;在&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/index.html&quot;&gt;Java教程&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="3342c591a6453fd80126d968b78a70f1efc1ffac" translate="yes" xml:space="preserve">
          <source>For a discussion on how newlines are handled, see &lt;a href=&quot;defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</source>
          <target state="translated">有关如何处理换行符的讨论，请参见&lt;a href=&quot;defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a499a77ba116ed68bdb9e3d0de7588f1280289b" translate="yes" xml:space="preserve">
          <source>For a discussion on how newlines are handled, see &lt;a href=&quot;text/defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</source>
          <target state="translated">有关如何处理换行符的讨论，请参见&lt;a href=&quot;text/defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46276d7f1f5784016e3a29da6b195107485d4658" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed call site, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;MethodType&lt;/code&gt;, and the types of any static arguments; the return type is &lt;code&gt;CallSite&lt;/code&gt;.</source>
          <target state="translated">对于动态计算的呼叫站点，将使用参数类型 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; ， &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;MethodType&lt;/code&gt; 以及任何静态参数的类型来调用bootstrap方法。返回类型为 &lt;code&gt;CallSite&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c910a3cd492312cb98d83bdc46c9ad694abe02a" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed call site, the returned result must be a non-null reference to a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt;. The type of the call site's target must be exactly equal to the type derived from the invocation's type descriptor and passed to the bootstrap method. If these conditions are not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the call site then becomes permanently linked to the &lt;code&gt;invokedynamic&lt;/code&gt; instruction.</source>
          <target state="translated">对于动态计算的呼叫站点，返回的结果必须是对&lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;的非null引用。呼叫站点目标的类型必须与从调用的类型描述符派生并传递给bootstrap方法的类型完全相同。如果不满足这些条件，则会引发 &lt;code&gt;BootstrapMethodError&lt;/code&gt; 。成功后，呼叫站点将永久链接到 &lt;code&gt;invokedynamic&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="a470de0ccdda48f11f7b1042a4bc4b15b2fea1aa" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed constant, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, and the types of any static arguments; the return type is the type represented by the &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">对于动态计算的常量，将使用参数类型 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; ， &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Class&lt;/code&gt; 和任何静态参数的类型来调用bootstrap方法。返回类型是 &lt;code&gt;Class&lt;/code&gt; 表示的类型。</target>
        </trans-unit>
        <trans-unit id="c3d940c188e2e8b37e7cc38c2c024a1e36e08123" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed constant, the first parameter of the bootstrap method must be assignable to &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;. If this condition is not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the result of the bootstrap method is cached as the resolved constant value.</source>
          <target state="translated">对于动态计算的常数，bootstrap方法的第一个参数必须可分配给 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; 。如果不满足此条件，则会引发 &lt;code&gt;BootstrapMethodError&lt;/code&gt; 。成功执行后，引导方法的结果将作为解析的常量值进行缓存。</target>
        </trans-unit>
        <trans-unit id="eb87cd9382f91a25882dc582ffbc03922acc6816" translate="yes" xml:space="preserve">
          <source>For a given abstract pathname</source>
          <target state="translated">对于一个给定的抽象路径名</target>
        </trans-unit>
        <trans-unit id="4467bdb7dd0b7f98749bbc835ec442ee3c213e7c" translate="yes" xml:space="preserve">
          <source>For a high resolution display where there is a scaling transform, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have two image variants:</source>
          <target state="translated">对于具有缩放变换的高分辨率显示， &lt;code&gt;MultiResolutionImage&lt;/code&gt; 将具有两个图像变体：</target>
        </trans-unit>
        <trans-unit id="941ac0e517a49f3228852350502448606d2c37f8" translate="yes" xml:space="preserve">
          <source>For a list of all grandfathered tags, see the IANA Language Subtag Registry (search for &quot;Type: grandfathered&quot;).</source>
          <target state="translated">有关所有不溯既往标签的列表,请参见IANA语言子标签注册表(搜索 &quot;类型:不溯既往&quot;)。</target>
        </trans-unit>
        <trans-unit id="985f6c1fef14acb945d8f93c159d909201239b40" translate="yes" xml:space="preserve">
          <source>For a matcher</source>
          <target state="translated">匹配器</target>
        </trans-unit>
        <trans-unit id="fab762ed05291a6e794cbd5c274e121d082536fc" translate="yes" xml:space="preserve">
          <source>For a modifiable list the programmer should additionally implement the list iterator's &lt;code&gt;set&lt;/code&gt; method. For a variable-size list the programmer should additionally implement the list iterator's &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">对于可修改的列表，程序员应该另外实现列表迭代器的 &lt;code&gt;set&lt;/code&gt; 方法。对于可变大小的列表，程序员应该另外实现列表迭代器的 &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;add&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5eec30ef7ebd4eb227c935d9e3da65a08840d5f5" translate="yes" xml:space="preserve">
          <source>For a module-oriented location, a file object is contained in the location if there exists a module that may be obtained by the call:</source>
          <target state="translated">对于一个面向模块的位置,如果存在一个可以通过调用获得的模块,则该位置中包含一个文件对象。</target>
        </trans-unit>
        <trans-unit id="26155ef85ec3b61790a4ccaeb70b4f7e4e2faec4" translate="yes" xml:space="preserve">
          <source>For a more detailed description of URL parsing, refer to RFC2396.</source>
          <target state="translated">关于URL解析的更详细描述,请参考RFC2396。</target>
        </trans-unit>
        <trans-unit id="34285ef3a4ebc953564eb44fa61313cabbb675e1" translate="yes" xml:space="preserve">
          <source>For a more precise description of the behavior of regular expression constructs, please see &lt;a href=&quot;http://www.oreilly.com/catalog/regex3/&quot;&gt; &lt;i&gt;Mastering Regular Expressions, 3nd Edition&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 2006.&lt;/a&gt;</source>
          <target state="translated">有关正则表达式构造的行为的更精确描述，请参见&lt;a href=&quot;http://www.oreilly.com/catalog/regex3/&quot;&gt;&lt;i&gt;Mastering Regular Expressions，第三版&lt;/i&gt;&lt;/a&gt;，Jeffrey EF Friedl，O'Reilly and Associates，2006。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="97ee30cac39946892772a7f75bad3497c7918208" translate="yes" xml:space="preserve">
          <source>For a more precise description of the behavior of regular expression constructs, please see &lt;a href=&quot;https://www.oreilly.com/catalog/regex3/&quot;&gt; &lt;i&gt;Mastering Regular Expressions, 3rd Edition&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 2006.&lt;/a&gt;</source>
          <target state="translated">有关正则表达式构造的行为的更精确描述，请参阅&lt;a href=&quot;https://www.oreilly.com/catalog/regex3/&quot;&gt;&lt;i&gt;Mastering Regular Expressions，第3版&lt;/i&gt;&lt;/a&gt;，Jeffrey EF Friedl，O'Reilly and Associates，2006年。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="bac44005781412fcf2cf3e8a91edf1885c22f18b" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;#getValue()&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; method returns the value corresponding to the type returned by this method.</source>
          <target state="translated">对于多值RDN，类型/值对没有定义任何特定顺序。在这种情况下，此方法返回类型/值对之一的类型。所述&lt;a href=&quot;#getValue()&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt;对应于类型的值方法返回此方法返回的。</target>
        </trans-unit>
        <trans-unit id="4c4b6b1cf0941b3a2e1e6929568f2554294cf98a" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;rdn#getValue--&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; method returns the value corresponding to the type returned by this method.</source>
          <target state="translated">对于多值RDN，类型/值对没有定义特定的顺序。在这种情况下，此方法返回类型/值对之一的类型。所述&lt;a href=&quot;rdn#getValue--&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt;对应于类型的值方法返回此方法返回的。</target>
        </trans-unit>
        <trans-unit id="3fc02c7aa14808f5d41b6dcefc79adb17372d2bf" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;#getType()&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">对于多值RDN，此方法返回与&lt;a href=&quot;#getType()&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;方法返回的类型相对应的值。</target>
        </trans-unit>
        <trans-unit id="ce5a8e611f88fc4a57f454effdea1ddccd2bbcad" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;rdn#getType--&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">对于多值RDN，此方法返回与&lt;a href=&quot;rdn#getType--&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;方法返回的类型相对应的值。</target>
        </trans-unit>
        <trans-unit id="e0d49b963fdd1ed27cbb5376de257af68d40bf1b" translate="yes" xml:space="preserve">
          <source>For a non-scaled display, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have one image variant:</source>
          <target state="translated">对于非缩放显示， &lt;code&gt;MultiResolutionImage&lt;/code&gt; 将具有一个图像变体：</target>
        </trans-unit>
        <trans-unit id="aebb0baaa40878766cd56c083732376ae8549e67" translate="yes" xml:space="preserve">
          <source>For a one time comparison, this method has the best performance. If a given String will be involved in multiple comparisons, CollationKey.compareTo has the best performance. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">对于一次性比较,这个方法的性能最好。如果一个给定的字符串将参与多次比较,CollationKey.compareTo的性能最好。请参阅Collator类的描述,了解使用CollationKeys的例子。</target>
        </trans-unit>
        <trans-unit id="76c56be1aaa760afea88dffb5f467c4dccf07377" translate="yes" xml:space="preserve">
          <source>For a package-oriented location, a file object is contained in the location if there exist values for</source>
          <target state="translated">对于一个面向包的位置,如果存在以下值,该位置就包含一个文件对象</target>
        </trans-unit>
        <trans-unit id="27e9dd7224fc389b9e7f30eed575e7bda33f40c7" translate="yes" xml:space="preserve">
          <source>For a particular &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;, g, one can reset the transformation to create such a mapping by using the following pseudocode:</source>
          <target state="translated">对于特定的&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;，可以使用以下伪代码重置转换以创建此类映射：</target>
        </trans-unit>
        <trans-unit id="dba5eed5c622b60caf7ec484699093a1ab22d756" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is either empty or a &lt;em&gt;class name pattern&lt;/em&gt;. A class name pattern is a string following the Java conventions for dot-separated class names. It may end with &quot;&lt;code&gt;.*&lt;/code&gt;&quot; meaning that the permission grants access to any class that begins with the string preceding &quot;&lt;code&gt;.*&lt;/code&gt;&quot;. For instance, &quot;&lt;code&gt;javax.management.*&lt;/code&gt;&quot; grants access to &lt;code&gt;javax.management.MBeanServerDelegate&lt;/code&gt; and &lt;code&gt;javax.management.timer.Timer&lt;/code&gt;, among other classes.</source>
          <target state="translated">对于您拥有的权限，它可以为空或&lt;em&gt;类名模式&lt;/em&gt;。类名模式是遵循Java约定的以点分隔的类名的字符串。它可以以&amp;ldquo; &lt;code&gt;.*&lt;/code&gt; &amp;rdquo; 结尾，这意味着权限授予对以&amp;ldquo; &lt;code&gt;.*&lt;/code&gt; &amp;rdquo; 之前的字符串开头的任何类的访问权限。例如，&amp;ldquo; &lt;code&gt;javax.management.*&lt;/code&gt; &amp;rdquo;授予对 &lt;code&gt;javax.management.MBeanServerDelegate&lt;/code&gt; 和 &lt;code&gt;javax.management.timer.Timer&lt;/code&gt; 以及其他类的访问权限。</target>
        </trans-unit>
        <trans-unit id="7bd8e055602b0b09f980c766e8d59803df5383ba" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is either the name of an attribute or operation you can access, or it is empty or the single character &quot;&lt;code&gt;*&lt;/code&gt;&quot;, both of which grant access to any member.</source>
          <target state="translated">对于您拥有的权限，这是您可以访问的属性或操作的名称，或者为空或单个字符&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;，这两个字符都授予对任何成员的访问权限。</target>
        </trans-unit>
        <trans-unit id="1acfd8f7dcf69d39ed31ec974c16b00c8bb84748" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; of the MBean or MBeans you can access. It may be an object name pattern to grant access to all MBeans whose names match the pattern. It may also be empty, which grants access to all MBeans whatever their name.</source>
          <target state="translated">对于您拥有的权限，这是您可以访问的一个或多个MBean 的&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;。可以授予对象名称与模式匹配的所有MBean访问权限的对象名称模式。它也可能是空的，这将授予对所有MBean的访问权限，无论其名称如何。</target>
        </trans-unit>
        <trans-unit id="a879233e1d115311b9ab98b47332e72587d921ae" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; of the MBean you are accessing. For operations that do not reference a single MBean, it is null. It is never an object name pattern.</source>
          <target state="translated">为了获得所需的权限，这是您正在访问的MBean 的&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;。对于不引用单个MBean的操作，它为null。它绝不是对象名称模式。</target>
        </trans-unit>
        <trans-unit id="4392da557e3be8db027e85b72c0308a6ceff3ddf" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt;&lt;code&gt;getClassName()&lt;/code&gt;&lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</source>
          <target state="translated">为了获得所需的权限，这是您正在访问的MBean的类名，由&lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt; &lt;/a&gt;返回。&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt; &lt;code&gt;getClassName()&lt;/code&gt; &lt;/a&gt;。某些操作不引用类名，在这种情况下，类名为null。</target>
        </trans-unit>
        <trans-unit id="a277b0acb0118e4a7691d55119b800a002dc9cd2" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt;&lt;code&gt;getClassName()&lt;/code&gt;&lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</source>
          <target state="translated">为了获得所需的权限，这是您正在访问的MBean的类名，由&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt; &lt;/a&gt;返回。&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt; &lt;code&gt;getClassName()&lt;/code&gt; &lt;/a&gt;。某些操作不引用类名，在这种情况下，类名为null。</target>
        </trans-unit>
        <trans-unit id="8c7845a5b03ddc3c0be5ac844e352635076127bb" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the name of the attribute or operation you are accessing. For operations that do not reference an attribute or operation, the member is null.</source>
          <target state="translated">对于你需要的权限,这是你要访问的属性或操作的名称。对于不引用属性或操作的操作,该成员为空。</target>
        </trans-unit>
        <trans-unit id="47e6fbe126c9387e2231f2b0971f9007e98fd739" translate="yes" xml:space="preserve">
          <source>For a positive or zero ordinal, the algorithm is equivalent to finding the first day-of-week that matches within the month and then adding a number of weeks to it. For a negative ordinal, the algorithm is equivalent to finding the last day-of-week that matches within the month and then subtracting a number of weeks to it. The ordinal number of weeks is not validated and is interpreted leniently according to this algorithm. This definition means that an ordinal of zero finds the last matching day-of-week in the previous month.</source>
          <target state="translated">对于正序数或零序数,该算法相当于找到当月内符合条件的第一周的第一天,然后将其加上若干周。对于负数的序数,算法等同于找到该月内最后一天的周数,然后减去一个周数。周数的序数没有经过验证,根据这个算法,对周数的解释很宽松。这个定义的意思是,序数为零,可以找到上个月最后一个匹配的周数。</target>
        </trans-unit>
        <trans-unit id="613c431443448b62834c04fd8cf000262bd0691b" translate="yes" xml:space="preserve">
          <source>For a qualified &lt;code&gt;Opens&lt;/code&gt;, returns the non-empty and immutable set of the module names to which the package is open.</source>
          <target state="translated">对于合格的 &lt;code&gt;Opens&lt;/code&gt; ，返回打开包的模块名称的非空且不变的集合。</target>
        </trans-unit>
        <trans-unit id="4c9a418d97ac540b9a9d0e0915019047cb9e128c" translate="yes" xml:space="preserve">
          <source>For a qualified &lt;code&gt;Opens&lt;/code&gt;, returns the non-empty and immutable set of the module names to which the package is open. For an unqualified &lt;code&gt;Opens&lt;/code&gt;, returns an empty set.</source>
          <target state="translated">对于合格的 &lt;code&gt;Opens&lt;/code&gt; ，返回打开包的模块名称的非空且不变的集合。对于不合格的 &lt;code&gt;Opens&lt;/code&gt; ，返回一个空集。</target>
        </trans-unit>
        <trans-unit id="8b197eb8130f26084a41da1e9ffc09230536c41b" translate="yes" xml:space="preserve">
          <source>For a qualified export, returns the non-empty and immutable set of the module names to which the package is exported.</source>
          <target state="translated">对于限定的导出,返回导出包的非空和不可更改的模块名集合。</target>
        </trans-unit>
        <trans-unit id="5706c82c73c3023f7f4226927a159d05f9e75ee6" translate="yes" xml:space="preserve">
          <source>For a qualified export, returns the non-empty and immutable set of the module names to which the package is exported. For an unqualified export, returns an empty set.</source>
          <target state="translated">对于限定的导出,返回导出包的模块名的非空和不可更改的集合。对于非限定的导出,返回一个空的集合。</target>
        </trans-unit>
        <trans-unit id="c3ff2005fc31c61febbd08651a00c2320cd0c323" translate="yes" xml:space="preserve">
          <source>For a qualified opens, returns the non-empty and immutable set of the module names to which the package is open.</source>
          <target state="translated">对于限定的打开,返回包打开的模块名的非空和不可更改的集合。</target>
        </trans-unit>
        <trans-unit id="32606560ede9387413ed7ca5823003a0597fd6d2" translate="yes" xml:space="preserve">
          <source>For a qualified opens, returns the non-empty and immutable set of the module names to which the package is open. For an unqualified opens, returns an empty set.</source>
          <target state="translated">对于限定的打开,返回包所打开的模块名的非空和不可更改的集合。对于一个非限定的打开,返回一个空的集合。</target>
        </trans-unit>
        <trans-unit id="312f91b25e7e2207bee0c9dc9628a326d0088cae" translate="yes" xml:space="preserve">
          <source>For a read-only mapping, this channel must have been opened for reading; for a read/write or private mapping, this channel must have been opened for both reading and writing.</source>
          <target state="translated">对于只读映射,该通道必须为读打开;对于读/写或私有映射,该通道必须为读和写打开。</target>
        </trans-unit>
        <trans-unit id="580c9df1ffd5acf062f271b1401c3788f3ddee75" translate="yes" xml:space="preserve">
          <source>For a rotating set of files, as each file reaches a given size limit, it is closed, rotated out, and a new file opened. Successively older files are named by adding &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, etc. into the base filename.</source>
          <target state="translated">对于一组轮换的文件,当每个文件达到给定的大小限制时,它被关闭,轮换出来,然后打开一个新的文件。连续的旧文件通过在基本文件名中添加 &quot;0&quot;、&quot;1&quot;、&quot;2 &quot;等来命名。</target>
        </trans-unit>
        <trans-unit id="e37bf1d5d080c7425aab6250223dd3753ab4c106" translate="yes" xml:space="preserve">
          <source>For a selection model of &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; any time the paths are changed (&lt;code&gt;setSelectionPath&lt;/code&gt;, &lt;code&gt;addSelectionPath&lt;/code&gt; ...) the TreePaths are again checked to make they are contiguous. A check of the TreePaths can also be forced by invoking &lt;code&gt;resetRowSelection&lt;/code&gt;. How a set of discontiguous TreePaths is mapped to a contiguous set is left to implementors of this interface to enforce a particular policy.</source>
          <target state="translated">对于 &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; 的选择模型，无论何时更改路径（ &lt;code&gt;setSelectionPath&lt;/code&gt; ， &lt;code&gt;addSelectionPath&lt;/code&gt; ...），都将再次检查TreePath以使其连续。也可以通过调用 &lt;code&gt;resetRowSelection&lt;/code&gt; 强制检查TreePath 。如何将一组不连续的TreePaths映射到一个连续的集合，留给该接口的实现者实施特定的策略。</target>
        </trans-unit>
        <trans-unit id="1e8a63f99e8e63ed1864a35be23bc90bbbc49e4f" translate="yes" xml:space="preserve">
          <source>For a serializable &lt;code&gt;Entry&lt;/code&gt;, see &lt;a href=&quot;abstractmap.simpleentry&quot;&gt;&lt;code&gt;AbstractMap.SimpleEntry&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;abstractmap.simpleimmutableentry&quot;&gt;&lt;code&gt;AbstractMap.SimpleImmutableEntry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关可序列化的 &lt;code&gt;Entry&lt;/code&gt; ，请参见&lt;a href=&quot;abstractmap.simpleentry&quot;&gt; &lt;code&gt;AbstractMap.SimpleEntry&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;abstractmap.simpleimmutableentry&quot;&gt; &lt;code&gt;AbstractMap.SimpleImmutableEntry&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f907fd2fa666e4e8e93d91cfed3ef0d634af220" translate="yes" xml:space="preserve">
          <source>For a tutorial and programming guide with examples of use of the collections framework, please see:</source>
          <target state="translated">关于使用集合框架的教程和编程指南,请参见:</target>
        </trans-unit>
        <trans-unit id="cfcb01272d1e879bd2db579e039d3def51787f14" translate="yes" xml:space="preserve">
          <source>For a user-defined parameter, the fully-qualified SQL type name of the parameter should also be given, while a &lt;code&gt;REF&lt;/code&gt; parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters. Although it is intended for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-defined or &lt;code&gt;REF&lt;/code&gt; type, the</source>
          <target state="translated">对于用户定义的参数，还应该给出参数的完全限定的SQL类型名称，而 &lt;code&gt;REF&lt;/code&gt; 参数要求给出所引用类型的完全限定的类型名称。不需要类型代码和类型名称信息的JDBC驱动程序可以忽略它。但是，为了便于移植，应用程序应始终为用户定义的参数和 &lt;code&gt;REF&lt;/code&gt; 参数提供这些值。尽管它用于用户定义的参数和 &lt;code&gt;REF&lt;/code&gt; 参数，但该方法可用于注册任何JDBC类型的参数。如果参数不具有用户定义或 &lt;code&gt;REF&lt;/code&gt; 类型，则</target>
        </trans-unit>
        <trans-unit id="83db4de63f9bc5fb49eb970004951aeb102efaf4" translate="yes" xml:space="preserve">
          <source>For a user-named parameter the fully-qualified SQL type name of the parameter should also be given, while a REF parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-named and REF parameters. Although it is intended for user-named and REF parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-named or REF type, the typeName parameter is ignored.</source>
          <target state="translated">对于用户命名的参数,还应该给出参数的完全限定的SQL类型名,而REF参数则要求给出引用类型的完全限定的类型名。不需要类型代码和类型名信息的JDBC驱动程序可以忽略它。然而,为了可移植性,应用程序应该始终为用户命名和REF参数提供这些值。虽然本方法是针对用户命名和REF参数的,但是本方法可以用于注册任何JDBC类型的参数。如果参数没有用户命名或REF类型,typeName参数将被忽略。</target>
        </trans-unit>
        <trans-unit id="46471aadd599914bd627b9907250a4504ff64e19" translate="yes" xml:space="preserve">
          <source>For access to heterogeneous binary data, that is, sequences of values of different types, this class defines a family of absolute and relative</source>
          <target state="translated">对于异构二进制数据的访问,即不同类型的值序列,该类定义了一个绝对和相对的家族。</target>
        </trans-unit>
        <trans-unit id="c7da068617acdf9b7c61fac878688b1af0c7245b" translate="yes" xml:space="preserve">
          <source>For access to homogeneous binary data, that is, sequences of values of the same type, this class defines methods that can create</source>
          <target state="translated">为了访问同质二进制数据,也就是相同类型的值序列,这个类定义了可以创建</target>
        </trans-unit>
        <trans-unit id="0f404a7a6cf52ddd90c2f4ceb0bc31691b95f048" translate="yes" xml:space="preserve">
          <source>For adding specific actions, overide &lt;code&gt;installKeyboardActions&lt;/code&gt; to add actions in response to KeyStroke bindings. See the article &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;How to Use Key Bindings&lt;/a&gt;</source>
          <target state="translated">要添加特定操作，请覆盖 &lt;code&gt;installKeyboardActions&lt;/code&gt; 以添加响应KeyStroke绑定的操作。请参阅文章&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;如何使用键绑定&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b6f84ac2f551571eba7ff83f9161c71bfc9584f" translate="yes" xml:space="preserve">
          <source>For adding specific actions, overide &lt;code&gt;installKeyboardActions&lt;/code&gt; to add actions in response to KeyStroke bindings. See the article &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;How to Use Key Bindings&lt;/a&gt;</source>
          <target state="translated">要添加特定操作，请覆盖 &lt;code&gt;installKeyboardActions&lt;/code&gt; 以添加响应KeyStroke绑定的操作。请参阅文章&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;如何使用键绑定&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4e31f21b77cc61c27c5db3b1c62f525194382db" translate="yes" xml:space="preserve">
          <source>For all arithmetic operators , the operation is carried out as though an exact intermediate result were first calculated and then rounded to the number of digits specified by the precision setting (if necessary), using the selected rounding mode. If the exact result is not returned, some digit positions of the exact result are discarded. When rounding increases the magnitude of the returned result, it is possible for a new digit position to be created by a carry propagating to a leading &quot;9&quot; digit. For example, rounding the value 999.9 to three digits rounding up would be numerically equal to one thousand, represented as 100&amp;times;10&lt;sup&gt;1&lt;/sup&gt;. In such cases, the new &quot;1&quot; is the leading digit position of the returned result.</source>
          <target state="translated">对于所有算术运算符，将执行运算，就好像首先要计算出精确的中间结果，然后使用选定的舍入模式将其舍入到精度设置指定的位数（如有必要）。如果未返回精确结果，则会丢弃精确结果的某些数字位置。当四舍五入增加了返回结果的大小时，有可能通过传播到前导&amp;ldquo; 9&amp;rdquo;位数的进位来创建新的位数位置。例如，将值999.9舍入到三位数字舍入将在数值上等于一千，表示为100&amp;times;10 &lt;sup&gt;1&lt;/sup&gt;。在这种情况下，新的&amp;ldquo; 1&amp;rdquo;是返回结果的前导数字位置。</target>
        </trans-unit>
        <trans-unit id="95440fbaf64d2e446d28dc29889cc94b0d69dd9f" translate="yes" xml:space="preserve">
          <source>For all arithmetic operators, the operation is carried out as though an exact intermediate result were first calculated and then rounded to the number of digits specified by the precision setting (if necessary), using the selected rounding mode. If the exact result is not returned, some digit positions of the exact result are discarded. When rounding increases the magnitude of the returned result, it is possible for a new digit position to be created by a carry propagating to a leading &quot;9&quot; digit. For example, rounding the value 999.9 to three digits rounding up would be numerically equal to one thousand, represented as 100&amp;times;10&lt;sup&gt;1&lt;/sup&gt;. In such cases, the new &quot;1&quot; is the leading digit position of the returned result.</source>
          <target state="translated">对于所有算术运算符，都将执行运算，就好像首先要计算出精确的中间结果，然后使用选定的舍入模式将其舍入到精度设置指定的位数（如有必要）。如果未返回精确结果，则将丢弃精确结果的某些数字位置。当四舍五入增加了返回结果的大小时，有可能通过传播到前导&amp;ldquo; 9&amp;rdquo;位数的进位来创建新的位数位置。例如，将值999.9舍入为三位舍入将在数值上等于一千，表示为100&amp;times;10 &lt;sup&gt;1&lt;/sup&gt;。在这种情况下，新的&amp;ldquo; 1&amp;rdquo;是返回结果的前导数字位置。</target>
        </trans-unit>
        <trans-unit id="ee3fe161c58cb31cfb98f3531662564b65b76541" translate="yes" xml:space="preserve">
          <source>For all directions, components are arranged in the same order as they were added to the container.</source>
          <target state="translated">对于所有的方向,组件的排列顺序与它们被添加到容器中的顺序相同。</target>
        </trans-unit>
        <trans-unit id="9a58862580f80db556a0b45a94eae2108f857b7a" translate="yes" xml:space="preserve">
          <source>For all events, except treeStructureChanged, returns the parent of the changed nodes.</source>
          <target state="translated">对于所有的事件,除了 treeStructureChanged,都会返回被改变的节点的父节点。</target>
        </trans-unit>
        <trans-unit id="3a7b4dbead32d2c320fa770520ecd503cf1fe80f" translate="yes" xml:space="preserve">
          <source>For all events, except treeStructureChanged, returns the parent of the changed nodes. For treeStructureChanged events, returns the ancestor of the structure that has changed. This and &lt;code&gt;getChildIndices&lt;/code&gt; are used to get a list of the effected nodes.</source>
          <target state="translated">对于除treeStructureChanged之外的所有事件，返回已更改节点的父节点。对于treeStructureChanged事件，返回已更改结构的祖先。此和 &lt;code&gt;getChildIndices&lt;/code&gt; 用于获取受影响节点的列表。</target>
        </trans-unit>
        <trans-unit id="288ffb6ae2c3c2170584c8e6d3a3fc12ca35cdc2" translate="yes" xml:space="preserve">
          <source>For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to &lt;code&gt;null&lt;/code&gt;. The root logger's level is set to &lt;code&gt;Level.INFO&lt;/code&gt;.</source>
          <target state="translated">对于所有命名记录器，reset操作将删除并关闭所有处理程序，并且（除了根记录器）将级别设置为 &lt;code&gt;null&lt;/code&gt; 。根记录器的级别设置为 &lt;code&gt;Level.INFO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e82599dd6fcb52a65725f8c6350a2730f871102" translate="yes" xml:space="preserve">
          <source>For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to null. The root logger's level is set to Level.INFO.</source>
          <target state="translated">对于所有命名的记录仪,重置操作将删除和关闭所有处理程序,并(除根记录仪外)将级别设为空。根记录仪的级别被设置为 Level.INFO。</target>
        </trans-unit>
        <trans-unit id="dd4038d8d24624f3cd29de1d0e2c4f5451989f5a" translate="yes" xml:space="preserve">
          <source>For all nodes, importing a node creates a node object owned by the importing document, with attribute values identical to the source node's &lt;code&gt;nodeName&lt;/code&gt; and &lt;code&gt;nodeType&lt;/code&gt;, plus the attributes related to namespaces (&lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;localName&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt;). As in the &lt;code&gt;cloneNode&lt;/code&gt; operation, the source node is not altered. User data associated to the imported node is not carried over. However, if any &lt;code&gt;UserDataHandlers&lt;/code&gt; has been specified along with the associated data these handlers will be called with the appropriate parameters before this method returns.</source>
          <target state="translated">对于所有节点，导入节点都会创建一个导入文档所拥有的节点对象，其属性值与源节点的 &lt;code&gt;nodeName&lt;/code&gt; 和 &lt;code&gt;nodeType&lt;/code&gt; 相同，加上与名称空间相关的属性（ &lt;code&gt;prefix&lt;/code&gt; ， &lt;code&gt;localName&lt;/code&gt; 和 &lt;code&gt;namespaceURI&lt;/code&gt; ）。与 &lt;code&gt;cloneNode&lt;/code&gt; 操作中一样，源节点不会更改。与导入的节点关联的用户数据不会保留。但是，如果已指定任何 &lt;code&gt;UserDataHandlers&lt;/code&gt; 及其关联的数据，则在此方法返回之前，将使用适当的参数调用这些处理程序。</target>
        </trans-unit>
        <trans-unit id="e357a499c5cf0f8c9cfe49bc09db22d8eaaaf4d1" translate="yes" xml:space="preserve">
          <source>For all record classes, the following invariant must hold: if a record R's components are &lt;code&gt;c1, c2, ... cn&lt;/code&gt;, then if a record instance is copied as follows:</source>
          <target state="translated">对于所有记录类，必须满足以下不变式：如果记录R的成分是 &lt;code&gt;c1, c2, ... cn&lt;/code&gt; ，则复制记录实例的方式如下：</target>
        </trans-unit>
        <trans-unit id="fff19286ba16ce8c5ee3fad0096b6268cca888dc" translate="yes" xml:space="preserve">
          <source>For all standard look and feels shipped with Java, the popup list portion of combo box is implemented as a &lt;code&gt;JPopupMenu&lt;/code&gt;. A custom look and feel may not implement it this way and will therefore not receive the notification.</source>
          <target state="translated">对于Java附带的所有标准外观，组合框的弹出列表部分实现为 &lt;code&gt;JPopupMenu&lt;/code&gt; 。自定义外观可能无法以这种方式实现，因此将不会收到通知。</target>
        </trans-unit>
        <trans-unit id="d5f49a747ab61666aaa19b73ef2d730ad3979e34" translate="yes" xml:space="preserve">
          <source>For all the methods in this interface that write bytes, it is generally true that if a byte cannot be written for any reason, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">对于此接口中所有写入字节的方法，通常可以确定，如果由于某种原因而无法写入字节，则将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d895b967cb0b9c5d244b8f97e42c9eae87f40273" translate="yes" xml:space="preserve">
          <source>For an &lt;a href=&quot;sctpchannel&quot;&gt;&lt;code&gt;SctpChannel&lt;/code&gt;&lt;/a&gt; this option may only be used to change the number of inbound/outbound streams prior to connecting.</source>
          <target state="translated">对于&lt;a href=&quot;sctpchannel&quot;&gt; &lt;code&gt;SctpChannel&lt;/code&gt; ,&lt;/a&gt;此选项仅可用于在连接之前更改入站/出站流的数量。</target>
        </trans-unit>
        <trans-unit id="c26c68e3d44f926204526d91345e881ebfc21b36" translate="yes" xml:space="preserve">
          <source>For an &lt;a href=&quot;sctpmultichannel&quot;&gt;&lt;code&gt;SctpMultiChannel&lt;/code&gt;&lt;/a&gt; this option determines the maximum number of inbound/outbound streams new associations setup on the channel will be prepared to support.</source>
          <target state="translated">对于&lt;a href=&quot;sctpmultichannel&quot;&gt; &lt;code&gt;SctpMultiChannel&lt;/code&gt; ,&lt;/a&gt;此选项确定将准备支持该通道上的新关联的最大入站/出站流数量。</target>
        </trans-unit>
        <trans-unit id="c9016248d378ecea0e9760bb99ecde305f052178" translate="yes" xml:space="preserve">
          <source>For an &lt;a href=&quot;sctpserverchannel&quot;&gt;&lt;code&gt;SctpServerChannel&lt;/code&gt;&lt;/a&gt; this option determines the maximum number of inbound/outbound streams accepted sockets will negotiate with their connecting peer.</source>
          <target state="translated">对于&lt;a href=&quot;sctpserverchannel&quot;&gt; &lt;code&gt;SctpServerChannel&lt;/code&gt; ,&lt;/a&gt;此选项确定接受的套接字将与其连接对等方协商的最大入站/出站流数量。</target>
        </trans-unit>
        <trans-unit id="a1d8562753037dc3765edd632190008e36ebc975" translate="yes" xml:space="preserve">
          <source>For an enumerated attribute that is not a notation, the parser will report the type as &quot;NMTOKEN&quot;.</source>
          <target state="translated">对于不是记号的枚举属性,解析器将把类型报告为 &quot;NMTOKEN&quot;。</target>
        </trans-unit>
        <trans-unit id="e639711714e682a35eeaff0dc11893d2ea350fd1" translate="yes" xml:space="preserve">
          <source>For an example implementation of a simple file view, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt;. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关简单文件视图的示例实现，请参见 &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt; 。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;如何使用文件选择器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f4d3786fb19615b15adffb71db047aa600feab3b" translate="yes" xml:space="preserve">
          <source>For an example implementation of a simple file view, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt;. For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">有关简单文件视图的示例实现，请参见 &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt; 。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;如何使用文件选择器&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e63e0bc775ed05efaa64a6b228224ab786776ced" translate="yes" xml:space="preserve">
          <source>For an example of how the setting controls are defined, see &lt;a href=&quot;settingcontrol&quot;&gt;&lt;code&gt;SettingControl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关如何定义设置控件的示例，请参见&lt;a href=&quot;settingcontrol&quot;&gt; &lt;code&gt;SettingControl&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="020289f3dd3403c4bcc33a4ae44e8a65e5d11873" translate="yes" xml:space="preserve">
          <source>For an example of specifying custom bounded range models used by sliders, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/architecture-142923.html#separable&quot;&gt;Separable model architecture&lt;/a&gt; in &lt;em&gt;A Swing Architecture Overview.&lt;/em&gt;</source>
          <target state="translated">用于指定由滑块使用的自定义界定范围模型示例，请参见&lt;a href=&quot;http://www.oracle.com/technetwork/java/architecture-142923.html#separable&quot;&gt;可分离模型架构&lt;/a&gt;中&lt;em&gt;的摆动架构概述。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06208486ae9eecd5757942a7e65903f3d3de5ea1" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a non-empty script value, append candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the final component up to language, then append candidates generated from the &lt;code&gt;Locale&lt;/code&gt; with country and variant restored:</source>
          <target state="translated">用于将输入 &lt;code&gt;Locale&lt;/code&gt; 具有非空值的脚本，追加候补 &lt;code&gt;Locale&lt;/code&gt; S按省略最终部件高达语言，从所生成的再附加候选 &lt;code&gt;Locale&lt;/code&gt; 与国家和变量恢复：</target>
        </trans-unit>
        <trans-unit id="f24e11a909288b53c92f020d081b5941027a9a2b" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt;s with the full variant value in the original list. For example, if the the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</source>
          <target state="translated">对于具有由下划线分隔的多个子标记组成的变体值的输入 &lt;code&gt;Locale&lt;/code&gt; ，通过一一忽略变体子标记来生成候选 &lt;code&gt;Locale&lt;/code&gt; ，然后在原始列表中具有完整变体值的每次 &lt;code&gt; Locale&lt;/code&gt; 出现后插入它们。例如，如果变体包含两个子标签&lt;em&gt;V1&lt;/em&gt;和&lt;em&gt;V2&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d400172b9de026958a8a6177cb13b5b1342bf935" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt;s with the full variant value in the original list. For example, if the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</source>
          <target state="translated">对于具有由下划线分隔的多个子标记组成的变体值的输入 &lt;code&gt;Locale&lt;/code&gt; ，通过一一忽略变体子标记来生成候选 &lt;code&gt;Locale&lt;/code&gt; ，然后在原始列表中具有完整变体值的 &lt;code&gt; Locale&lt;/code&gt; 每次出现后插入它们。例如，如果变体包含两个子标签&lt;em&gt;V1&lt;/em&gt;和&lt;em&gt;V2&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="5554f28ba351ad9f2739f3b06ab5e78a02202f66" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with an empty script value, append candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the final component one by one as below:</source>
          <target state="translated">对于具有空脚本值的输入 &lt;code&gt;Locale&lt;/code&gt; ，通过逐个省略最后一个组件来追加候选 &lt;code&gt;Locale&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="31165b31091c89e2fd334bb1aeff719d666b51eb" translate="yes" xml:space="preserve">
          <source>For an invocation of &lt;code&gt;get[Declared]AnnotationsByType( Class &amp;lt;
 T &amp;gt;)&lt;/code&gt;, the order of annotations which are directly or indirectly present on an element</source>
          <target state="translated">对于 &lt;code&gt;get[Declared]AnnotationsByType( Class &amp;lt; T &amp;gt;)&lt;/code&gt; 的调用，直接或间接出现在元素上的注释的顺序</target>
        </trans-unit>
        <trans-unit id="f73cb7ae84d34be306d40ac193e22e1a6554f2a3" translate="yes" xml:space="preserve">
          <source>For an invocation of &lt;code&gt;get[Declared]AnnotationsByType(Class &amp;lt;T&amp;gt;)&lt;/code&gt;, the order of annotations which are directly or indirectly present on an element</source>
          <target state="translated">对于 &lt;code&gt;get[Declared]AnnotationsByType(Class &amp;lt;T&amp;gt;)&lt;/code&gt; 的调用，直接或间接出现在元素上的注释的顺序</target>
        </trans-unit>
        <trans-unit id="e404249bab7df0d9f0bfdf9d7675a615c61bed52" translate="yes" xml:space="preserve">
          <source>For an object to be selected, each attribute in &lt;code&gt;matchingAttributes&lt;/code&gt; must match some attribute of the object. If &lt;code&gt;matchingAttributes&lt;/code&gt; is empty or null, all objects in the target context are returned.</source>
          <target state="translated">对于要选择的对象， &lt;code&gt;matchingAttributes&lt;/code&gt; 中的每个属性必须与该对象的某些属性匹配。如果 &lt;code&gt;matchingAttributes&lt;/code&gt; 为空或为null，则返回目标上下文中的所有对象。</target>
        </trans-unit>
        <trans-unit id="9855e9d601457081720c097bc874dce1c6849911" translate="yes" xml:space="preserve">
          <source>For an online tutorial on using Java GSS-API, please see &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Introduction to JAAS and Java GSS-API&lt;/a&gt;.</source>
          <target state="translated">有关使用Java GSS-API的在线教程，请参阅&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;JAAS和Java GSS-API简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1695e50b38967e03ed9d5f91ca77d368a7c4cc92" translate="yes" xml:space="preserve">
          <source>For an online tutorial on using Java GSS-API, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Introduction to JAAS and Java GSS-API&lt;/a&gt;.</source>
          <target state="translated">有关使用Java GSS-API的在线教程，请参阅&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;JAAS和Java GSS-API简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="672bc788ec93ca82f67bd27cfd38341ecdffcf48" translate="yes" xml:space="preserve">
          <source>For an option that has a notion of on and off, and requires a non-boolean parameter, setting its value to anything other than</source>
          <target state="translated">对于一个有开启和关闭概念的选项,并且需要一个非布尔值的参数,将其值设置为除了</target>
        </trans-unit>
        <trans-unit id="47a2e8dcbeb920d5c4463c83794d2144225623e9" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the  Java Logging Overview.</source>
          <target state="translated">有关控制流的概述,请参考Java日志概述。</target>
        </trans-unit>
        <trans-unit id="deb140a231ea336668e47f720090ea96ecbf5847" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview&lt;/a&gt;</source>
          <target state="translated">有关控制流的概述，请参阅&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b3cc5049557f2a0ba9631abbd655dc628ca214a" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview&lt;/a&gt;</source>
          <target state="translated">有关控制流的概述，请参阅&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91e6254ad7f3187beb07deedc7152811a9b226c5" translate="yes" xml:space="preserve">
          <source>For an overview, API outline, and design rationale, please see:</source>
          <target state="translated">有关概述、API概要和设计原理,请参见。</target>
        </trans-unit>
        <trans-unit id="dd7ca935a2ead39c5e628b5614647f54e1fa8e1b" translate="yes" xml:space="preserve">
          <source>For any TimeUnit &lt;code&gt;unit&lt;/code&gt;, &lt;code&gt;unit.convert(Duration.ofNanos(n))&lt;/code&gt; is equivalent to &lt;code&gt;unit.convert(n, NANOSECONDS)&lt;/code&gt;, and &lt;code&gt;unit.convert(Duration.of(n, unit.toChronoUnit()))&lt;/code&gt; is equivalent to &lt;code&gt;n&lt;/code&gt; (in the absence of overflow).</source>
          <target state="translated">对于任何TimeUnit &lt;code&gt;unit&lt;/code&gt; ， &lt;code&gt;unit.convert(Duration.ofNanos(n))&lt;/code&gt; 等效于 &lt;code&gt;unit.convert(n, NANOSECONDS)&lt;/code&gt; ，而 &lt;code&gt;unit.convert(Duration.of(n, unit.toChronoUnit()))&lt;/code&gt; 等效于 &lt;code&gt;n&lt;/code&gt; （在没有溢出的情况下）。</target>
        </trans-unit>
        <trans-unit id="f9bb1854efb2037b61a2381563ca86cef944af4f" translate="yes" xml:space="preserve">
          <source>For any URI</source>
          <target state="translated">对于任何URI</target>
        </trans-unit>
        <trans-unit id="15869691dfda7153f19720f10e40b12cb9c1361f" translate="yes" xml:space="preserve">
          <source>For any given &lt;code&gt;ZoneRules&lt;/code&gt;, this list contains the transition rules for years beyond those years that have been fully defined. These rules typically refer to future daylight saving time rule changes.</source>
          <target state="translated">对于任何给定的 &lt;code&gt;ZoneRules&lt;/code&gt; ，此列表均包含已完全定义的年份以外的年份的转换规则。这些规则通常是指将来的​​夏时制规则更改。</target>
        </trans-unit>
        <trans-unit id="a5920c7d4c6dce56729e14f9ea7a334529f36c3e" translate="yes" xml:space="preserve">
          <source>For any given &lt;em&gt;J&lt;/em&gt;, the following rules are consulted to determine how to reconstruct instances of &lt;em&gt;J&lt;/em&gt; from &lt;code&gt;CompositeData&lt;/code&gt;. The first applicable rule in the list is the one that will be used.</source>
          <target state="translated">对于任何给定的&lt;em&gt;J&lt;/em&gt;，请参考以下规则来确定如何从 &lt;code&gt;CompositeData&lt;/code&gt; 重构&lt;em&gt;J的&lt;/em&gt;实例。列表中的第一个适用规则是将要使用的规则。</target>
        </trans-unit>
        <trans-unit id="f9a3d499ad5719ec12b5122ad9ea8dea7bfd468b" translate="yes" xml:space="preserve">
          <source>For any given caller class &lt;code&gt;C&lt;/code&gt;, the lookup object returned by this call has equivalent capabilities to any lookup object supplied by the JVM to the bootstrap method of an &lt;a href=&quot;package-summary#indyinsn&quot;&gt;invokedynamic instruction&lt;/a&gt; executing in the same caller class &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">对于任何给定的调用者类 &lt;code&gt;C&lt;/code&gt; ，此调用返回的查找对象具有与JVM提供给在同一调用者类 &lt;code&gt;C&lt;/code&gt; 中执行的&lt;a href=&quot;package-summary#indyinsn&quot;&gt;invokedynamic指令&lt;/a&gt;的bootstrap方法的任何查找对象相同的功能。</target>
        </trans-unit>
        <trans-unit id="9c1f31057dd8317785675f53700838ecaa796cec" translate="yes" xml:space="preserve">
          <source>For any non-null reference value &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x.equals(null)&lt;/code&gt; should return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">对于任何非null参考值 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;x.equals(null)&lt;/code&gt; 应该返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c97665dbad552eb3f7ddd81577b124767987cf43" translate="yes" xml:space="preserve">
          <source>For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;#getDelegatedTask()&quot;&gt;&lt;code&gt;getDelegatedTask()&lt;/code&gt;&lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</source>
          <target state="translated">对于任何可能阻塞的操作， &lt;code&gt;SSLEngine&lt;/code&gt; 将创建一个&lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;委托任务。当 &lt;code&gt;SSLEngineResult&lt;/code&gt; 指示需要委托任务结果时，应用程序必须调用&lt;a href=&quot;#getDelegatedTask()&quot;&gt; &lt;code&gt;getDelegatedTask()&lt;/code&gt; &lt;/a&gt;以获得未完成的委托任务，并调用其&lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法（根据计算策略可能使用其他线程）。应用程序应继续获取委派的任务，直到不再存在任务为止，然后再次尝试原始操作。</target>
        </trans-unit>
        <trans-unit id="d3a43fcb61e7d55a42e559584605cc4e5de48fb5" translate="yes" xml:space="preserve">
          <source>For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;sslengine#getDelegatedTask--&quot;&gt;&lt;code&gt;getDelegatedTask()&lt;/code&gt;&lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</source>
          <target state="translated">对于任何可能阻塞的操作， &lt;code&gt;SSLEngine&lt;/code&gt; 将创建一个&lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;委托任务。当 &lt;code&gt;SSLEngineResult&lt;/code&gt; 指示需要委托任务结果时，应用程序必须调用&lt;a href=&quot;sslengine#getDelegatedTask--&quot;&gt; &lt;code&gt;getDelegatedTask()&lt;/code&gt; &lt;/a&gt;以获得未完成的委托任务并调用其&lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法（根据计算策略可能使用其他线程）。应用程序应继续获取委派的任务，直到不再存在为止，然后再次尝试原始操作。</target>
        </trans-unit>
        <trans-unit id="303f6d979b65ea5b20387f8d0d52177ce7aece89" translate="yes" xml:space="preserve">
          <source>For any possible combination of properties, it must be the case that either (a) there are no applicable constructors, or (b) there is exactly one applicable constructor, or (c) one of the applicable constructors names a proper superset of the properties named by each other applicable constructor. (In other words, there should never be ambiguity over which constructor to choose.) If this condition is not true, then &lt;em&gt;J&lt;/em&gt; is not reconstructible.</source>
          <target state="translated">对于任何可能的属性组合，必须是（a）没有适用的构造函数，或者（b）恰好有一个适用的构造函数，或者（c）适用的构造函数之一命名属性的适当超集的情况由其他适用的构造函数命名。（换句话说，在选择哪个构造函数时绝不应该含糊。）如果此条件不成立，则&lt;em&gt;J&lt;/em&gt;是不可重构的。</target>
        </trans-unit>
        <trans-unit id="bddc8af9dd10e096d924d66436e9ef54cc935cc8" translate="yes" xml:space="preserve">
          <source>For any set of member methods of the specified interfaces that have the same signature:</source>
          <target state="translated">对于指定接口的任何一组具有相同签名的成员方法。</target>
        </trans-unit>
        <trans-unit id="56442df5927179f1a6098b0fb71e28daadccff02" translate="yes" xml:space="preserve">
          <source>For any two &lt;a href=&quot;#normalize()&quot;&gt;&lt;code&gt;normalized&lt;/code&gt;&lt;/a&gt; paths</source>
          <target state="translated">对于任何两个&lt;a href=&quot;#normalize()&quot;&gt; &lt;code&gt;normalized&lt;/code&gt; &lt;/a&gt;路径</target>
        </trans-unit>
        <trans-unit id="3e41f32017f7ee715d47faca8dd77871008af685" translate="yes" xml:space="preserve">
          <source>For any two &lt;a href=&quot;path#normalize--&quot;&gt;&lt;code&gt;normalized&lt;/code&gt;&lt;/a&gt; paths</source>
          <target state="translated">对于任何两个&lt;a href=&quot;path#normalize--&quot;&gt; &lt;code&gt;normalized&lt;/code&gt; &lt;/a&gt;路径</target>
        </trans-unit>
        <trans-unit id="517a45648675ff4a8ec5f16ff462f43183929a6b" translate="yes" xml:space="preserve">
          <source>For any two arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;Arrays.deepEquals(a, b)&lt;/code&gt;, it is also the case that &lt;code&gt;Arrays.deepHashCode(a) == Arrays.deepHashCode(b)&lt;/code&gt;.</source>
          <target state="translated">对于任何两个阵列 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，使得 &lt;code&gt;Arrays.deepEquals(a, b)&lt;/code&gt; ，它也是情况 &lt;code&gt;Arrays.deepHashCode(a) == Arrays.deepHashCode(b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7f039f4ee8f8c7899d92fe740d72a7ceecc652f" translate="yes" xml:space="preserve">
          <source>For any two arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;Arrays.equals(a, b)&lt;/code&gt;, it is also the case that &lt;code&gt;Arrays.hashCode(a) == Arrays.hashCode(b)&lt;/code&gt;.</source>
          <target state="translated">对于任何两个阵列 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，使得 &lt;code&gt;Arrays.equals(a, b)&lt;/code&gt; ，它也是情况 &lt;code&gt;Arrays.hashCode(a) == Arrays.hashCode(b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50c13d4d9a4a05c66127be14d162123493eb1960" translate="yes" xml:space="preserve">
          <source>For applications that require separate or custom pools, a &lt;code&gt;
 ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; interface enables extension of the kinds of synchronization accommodated. The default policies may be overridden using a constructor with parameters corresponding to those documented in class &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于需要单独或自定义池的应用程序，可以使用给定的目标并行度级别构造一个 &lt;code&gt; ForkJoinPool&lt;/code&gt; 。默认情况下，等于可用处理器的数量。池尝试通过动态添加，挂起或恢复内部工作线程来维护足够的活动（或可用）线程，即使某些任务因等待加入其他任务而停滞不前。但是，面对阻塞的I / O或其他不受管理的同步，不能保证这样的调整。嵌套的&lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt;接口可扩展所容纳的同步类型。可以使用构造函数覆盖默认策略，该构造函数的参数与&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;类中记录的参数相对应。</target>
        </trans-unit>
        <trans-unit id="38c95ac0e5ee06e24fd22793e2ce4273207b6f1b" translate="yes" xml:space="preserve">
          <source>For applications that require separate or custom pools, a &lt;code&gt;ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; interface enables extension of the kinds of synchronization accommodated.</source>
          <target state="translated">对于需要单独或自定义池的应用程序，可以使用给定的目标并行度来构造一个 &lt;code&gt;ForkJoinPool&lt;/code&gt; 。默认情况下，等于可用处理器的数量。池尝试通过动态添加，暂停或恢复内部工作线程来维护足够的活动（或可用）线程，即使某些任务因等待加入其他任务而停滞不前。但是，面对阻塞的I / O或其他非托管同步，无法保证此类调整。嵌套的&lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt;接口可扩展所容纳的同步类型。</target>
        </trans-unit>
        <trans-unit id="835be040d5003f55ce4b8e7a5b1baf05c3812875" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, AbsentInformationException is always thrown.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，始终会抛出AbsentInformationException。</target>
        </trans-unit>
        <trans-unit id="225743720eb922177a310b9c6afbb772f37180e7" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, the return value is always true.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，返回值始终为true。</target>
        </trans-unit>
        <trans-unit id="c8572cc6d929a0b75d3a47611be86e03aff1aee1" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, the return value is undefined.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，返回值是不确定的。</target>
        </trans-unit>
        <trans-unit id="a06e8ce41aa965b3d2e2b0da8c7edd52f8eb8762" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, the returned list is always empty.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，返回的列表始终为空。</target>
        </trans-unit>
        <trans-unit id="ee488ae17ea07fd31bd98e19da5e736114a0a656" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, the returned list is always empty. For interfaces (&lt;a href=&quot;interfacetype&quot;&gt;&lt;code&gt;InterfaceType&lt;/code&gt;&lt;/a&gt;), the returned list will be non-empty only if the interface has executable code in its class initialization at the specified line number. An empty list will be returned if there is no executable code at the specified line number.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，返回的列表始终为空。对于interface（&lt;a href=&quot;interfacetype&quot;&gt; &lt;code&gt;InterfaceType&lt;/code&gt; &lt;/a&gt;），仅当接口在其类初始化中的指定行号上具有可执行代码时，返回的列表才会为非空。如果指定的行号上没有可执行代码，则将返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="30d365048523bed4fc1081d3319c20e8accf9d5f" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, the returned list is always empty. For interfaces (&lt;a href=&quot;interfacetype&quot;&gt;&lt;code&gt;InterfaceType&lt;/code&gt;&lt;/a&gt;), the returned list will be non-empty only if the interface has executable code in its class initialization.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，返回的列表始终为空。对于接口（&lt;a href=&quot;interfacetype&quot;&gt; &lt;code&gt;InterfaceType&lt;/code&gt; &lt;/a&gt;），仅当接口在其类初始化中具有可执行代码时，返回的列表才会为非空。</target>
        </trans-unit>
        <trans-unit id="4b43d16d62afd06d1f6212a715284f26abdaafa4" translate="yes" xml:space="preserve">
          <source>For arrays (&lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;) and primitive classes, the returned value is always null.</source>
          <target state="translated">对于数组（&lt;a href=&quot;arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt;）和基本类，返回值始终为null。</target>
        </trans-unit>
        <trans-unit id="4f91bee41b9f0f38479a69127829658c3bf0fdc4" translate="yes" xml:space="preserve">
          <source>For attribute deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对于属性删除， &lt;code&gt;oldValue&lt;/code&gt; 是一个 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; ,用于指定已删除的属性，而 &lt;code&gt;newValue&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de4a1a4fc7bcc7759e5169bb4e3695aebd6d72a1" translate="yes" xml:space="preserve">
          <source>For attribute insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were inserted.</source>
          <target state="translated">对于属性插入， &lt;code&gt;oldValue&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，而 &lt;code&gt;newValue&lt;/code&gt; 是一个 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; ,用于指定要插入的属性。</target>
        </trans-unit>
        <trans-unit id="7b797d58d23f752dad3874f09960108a8631712e" translate="yes" xml:space="preserve">
          <source>For attribute replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the old attributes and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the new attributes.</source>
          <target state="translated">对于属性替换，该 &lt;code&gt;oldValue&lt;/code&gt; 是 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; 指定旧属性和 &lt;code&gt;newValue&lt;/code&gt; 是 &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; 指定新的属性。</target>
        </trans-unit>
        <trans-unit id="c1ec5918a6d9f50e0141b230359e5a36edff1550" translate="yes" xml:space="preserve">
          <source>For attributes that do not have a value, eg in the html string &lt;code&gt;&amp;lt;foo blah&amp;gt;&lt;/code&gt; the attribute &lt;code&gt;blah&lt;/code&gt; does not have a value, there are two possible values that will be placed in the AttributeSet's value:</source>
          <target state="translated">对于没有值的属性，例如在html字符串 &lt;code&gt;&amp;lt;foo blah&amp;gt;&lt;/code&gt; 中，属性 &lt;code&gt;blah&lt;/code&gt; 没有值，将在AttributeSet的值中放置两个可能的值：</target>
        </trans-unit>
        <trans-unit id="95ed3f80aff525e72ff7e832911773bbc97584d8" translate="yes" xml:space="preserve">
          <source>For attributes with simple types like &lt;code&gt;String&lt;/code&gt;, the code is the same. But for attributes with complex types, the Standard MBean code requires the client to know the model-specific class &lt;code&gt;MemoryUsage&lt;/code&gt;, while the MXBean code requires no non-standard classes.</source>
          <target state="translated">对于具有简单类型（如 &lt;code&gt;String&lt;/code&gt; ）的属性，代码是相同的。但是对于具有复杂类型的属性，Standard MBean代码要求客户端知道特定于模型的类 &lt;code&gt;MemoryUsage&lt;/code&gt; ，而MXBean代码不需要任何非标准类。</target>
        </trans-unit>
        <trans-unit id="c4fab09feb3e54113c9216a1e3ca7fa7048e7079" translate="yes" xml:space="preserve">
          <source>For automatic resolution, the JVM will attempt:</source>
          <target state="translated">对于自动解析,JVM将尝试。</target>
        </trans-unit>
        <trans-unit id="d871cfa6c9c9f6c82792af65fcf7d3606b93ca9e" translate="yes" xml:space="preserve">
          <source>For backward compatibility only.</source>
          <target state="translated">仅供后向兼容。</target>
        </trans-unit>
        <trans-unit id="2dbf16ba6cc26b54f2c6512e1d8ce287b0e62968" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, this constructor does not make any syntactic checks on the input.</source>
          <target state="translated">出于向后兼容的原因,这个构造函数不对输入进行任何语法检查。</target>
        </trans-unit>
        <trans-unit id="05c30d7bf617454fd8352c370ce9f9f50b74ec49" translate="yes" xml:space="preserve">
          <source>For backwards compatibility with java.awt.Scrollbar.</source>
          <target state="translated">为了向后兼容java.awt.Scrollbar。</target>
        </trans-unit>
        <trans-unit id="8a6bf3c30b081b88a860bdb2bd21000efb904e7f" translate="yes" xml:space="preserve">
          <source>For best effect the array of images should be sorted with each image being both wider and taller than the previous image. The base image need not be the first image in the array. No exception will be thrown if the images are not sorted as suggested.</source>
          <target state="translated">为了达到最好的效果,图像阵列应该进行排序,每个图像都要比前一个图像更宽更高。基础图像不需要是数组中的第一张图像。如果图像没有按照建议的顺序排列,也不会出现异常。</target>
        </trans-unit>
        <trans-unit id="17835bd9b9354b2892a0048837e748fcfe653316" translate="yes" xml:space="preserve">
          <source>For best performance with DirectByteBuffer and other ByteBuffer implementations without a backing array implementers of this interface should override this method.</source>
          <target state="translated">为了使DirectByteBuffer和其他没有支持数组的ByteBuffer实现获得最佳性能,该接口的实现者应该覆盖该方法。</target>
        </trans-unit>
        <trans-unit id="073bbe5e1b66df166e9794a39c7b6f884c662cc0" translate="yes" xml:space="preserve">
          <source>For better interoperability, providers generally will not define default matchers so that by default servers will ignore the SNI extension and continue the handshake.</source>
          <target state="translated">为了更好的互操作性,提供商一般不会定义默认的匹配器,这样默认情况下服务器会忽略SNI扩展,继续握手。</target>
        </trans-unit>
        <trans-unit id="cca08cc09febef93d032435d9c4255a6e6e18ba0" translate="yes" xml:space="preserve">
          <source>For both cases, the</source>
          <target state="translated">在这两种情况下,</target>
        </trans-unit>
        <trans-unit id="c4d463bbf2fe5789f5217439ba539c52ab170002" translate="yes" xml:space="preserve">
          <source>For both the glob and regex syntaxes, the matching details, such as whether the matching is case sensitive, are implementation-dependent and therefore not specified.</source>
          <target state="translated">对于 glob 和 regex 语法,匹配的细节,例如匹配是否区分大小写,都是依赖于实现的,因此没有指定。</target>
        </trans-unit>
        <trans-unit id="f4f7996d01312f8239e8f1c9e505592ed105c276" translate="yes" xml:space="preserve">
          <source>For byte print data where the doc flavor's MIME type does not include a &lt;code&gt;charset&lt;/code&gt; parameter, the Java Print Service instance assumes the US-ASCII character set by default. This is in accordance with &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;, which says the default character set is US-ASCII. Note that US-ASCII is a subset of UTF-8, so in the future this may be widened if a future RFC endorses UTF-8 as the default in a compatible manner.</source>
          <target state="translated">对于DocFlavor的MIME类型不包含 &lt;code&gt;charset&lt;/code&gt; 参数的字节打印数据，Java Print Service实例默认情况下采用US-ASCII字符集。这符合&lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046的&lt;/a&gt;规定，RFC 2046表示默认字符集为US-ASCII。请注意，US-ASCII是UTF-8的子集，因此，如果将来的RFC以兼容的方式认可UTF-8作为默认值，则将来可能会扩大。</target>
        </trans-unit>
        <trans-unit id="0125caaf84b7048e72d93b154bec1d2f8d9f4ea4" translate="yes" xml:space="preserve">
          <source>For byte print data where the doc flavor's MIME type does not include a &lt;code&gt;charset&lt;/code&gt; parameter, the Java Print Service instance assumes the US-ASCII character set by default. This is in accordance with &lt;a href=&quot;https://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;, which says the default character set is US-ASCII. Note that US-ASCII is a subset of UTF-8, so in the future this may be widened if a future RFC endorses UTF-8 as the default in a compatible manner.</source>
          <target state="translated">对于DocFlavor的MIME类型不包含 &lt;code&gt;charset&lt;/code&gt; 参数的字节打印数据，Java Print Service实例默认情况下采用US-ASCII字符集。这符合&lt;a href=&quot;https://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046的&lt;/a&gt;规定，RFC 2046表示默认字符集为US-ASCII。请注意，US-ASCII是UTF-8的子集，因此，如果将来的RFC以兼容的方式认可UTF-8作为默认值，则将来可能会扩大。</target>
        </trans-unit>
        <trans-unit id="ac581c88bc40b5cf6864e589bc43b4587632243f" translate="yes" xml:space="preserve">
          <source>For case 1, the standard defines 6 External Identifier Entries:</source>
          <target state="translated">对于情况1,标准定义了6个外部标识符条目。</target>
        </trans-unit>
        <trans-unit id="9efdffa93539464449aca1c9678e01dd5f04e2f5" translate="yes" xml:space="preserve">
          <source>For case with kind &lt;a href=&quot;casetree.casekind#RULE&quot;&gt;CaseTree.CaseKind.RULE&lt;/a&gt;, returns the statement or expression after the arrow.</source>
          <target state="translated">对于类型为&lt;a href=&quot;casetree.casekind#RULE&quot;&gt;CaseTree.CaseKind.RULE的情况&lt;/a&gt;，返回箭头之后的语句或表达式。</target>
        </trans-unit>
        <trans-unit id="58b335ce7891d854dcfbeae8ad02e16cb0f0e6bb" translate="yes" xml:space="preserve">
          <source>For case with kind &lt;a href=&quot;casetree.casekind#RULE&quot;&gt;CaseTree.CaseKind.RULE&lt;/a&gt;, returns the statement or expression after the arrow. Returns &lt;code&gt;null&lt;/code&gt; for case with kind &lt;a href=&quot;casetree.casekind#STATEMENT&quot;&gt;CaseTree.CaseKind.STATEMENT&lt;/a&gt;.</source>
          <target state="translated">对于类型为&lt;a href=&quot;casetree.casekind#RULE&quot;&gt;CaseTree.CaseKind.RULE的情况&lt;/a&gt;，返回箭头之后的语句或表达式。对于类型为&lt;a href=&quot;casetree.casekind#STATEMENT&quot;&gt;CaseTree.CaseKind.STATEMENT的&lt;/a&gt;案例，返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d69ca1586c6892eb7970117fbacab7a8eda3337" translate="yes" xml:space="preserve">
          <source>For case with kind &lt;a href=&quot;casetree.casekind#STATEMENT&quot;&gt;CaseTree.CaseKind.STATEMENT&lt;/a&gt;, returns the statements labeled by the case.</source>
          <target state="translated">对于类型为&lt;a href=&quot;casetree.casekind#STATEMENT&quot;&gt;CaseTree.CaseKind.STATEMENT的案例&lt;/a&gt;，返回用案例标记的语句。</target>
        </trans-unit>
        <trans-unit id="4bf9d7b241086dc0261e7602120871c5f73c6460" translate="yes" xml:space="preserve">
          <source>For case with kind &lt;a href=&quot;casetree.casekind#STATEMENT&quot;&gt;CaseTree.CaseKind.STATEMENT&lt;/a&gt;, returns the statements labeled by the case. Returns &lt;code&gt;null&lt;/code&gt; for case with kind &lt;a href=&quot;casetree.casekind#RULE&quot;&gt;CaseTree.CaseKind.RULE&lt;/a&gt;.</source>
          <target state="translated">对于类型为&lt;a href=&quot;casetree.casekind#STATEMENT&quot;&gt;CaseTree.CaseKind.STATEMENT的案例&lt;/a&gt;，返回用案例标记的语句。对于类型为&lt;a href=&quot;casetree.casekind#RULE&quot;&gt;CaseTree.CaseKind.RULE的&lt;/a&gt;案例，返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2158e4905738669493d41aa356ae5a26a31c5fb5" translate="yes" xml:space="preserve">
          <source>For category</source>
          <target state="translated">类别</target>
        </trans-unit>
        <trans-unit id="493fb455f79d6f5a46952719d20ecc6eeb7f5fdc" translate="yes" xml:space="preserve">
          <source>For changes, the indexes in the model correspond exactly to the indexes of items currently displayed in the UI. As a result, it is not really critical if the indexes are not in their exact order. But after multiple inserts or deletes, the items currently in the UI no longer correspond to the items in the model. It is therefore critical to specify the indexes properly for inserts and deletes.</source>
          <target state="translated">对于变化,模型中的索引与当前显示在UI中的项目的索引完全对应。因此,如果索引的顺序不准确,其实并不关键。但是在多次插入或删除之后,当前在UI中的项目不再与模型中的项目相对应。因此,正确指定插入和删除的索引是至关重要的。</target>
        </trans-unit>
        <trans-unit id="fef748ac030e30703db542a8e771c10aa0800fe8" translate="yes" xml:space="preserve">
          <source>For character, integral, and date/time argument types and the percent and line separator conversions, the precision is not applicable; if a precision is provided, an exception will be thrown.</source>
          <target state="translated">对于字符、积分、日期/时间参数类型以及百分数和换行符,精度是不适用的;如果提供了精度,就会抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="d28b3cb820593d18d0522bb723602638bfcf56b2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Chromaticity&lt;/code&gt;, the category is the class &lt;code&gt;Chromaticity&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Chromaticity&lt;/code&gt; 类，类别是 &lt;code&gt;Chromaticity&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="d415c9cccb331a919c9a37503f45b493a42ee157" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Chromaticity&lt;/code&gt;, the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;Chromaticity&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a08bb5776b9cfe8be5d8a3756ef83386fadad9a2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ColorSupported&lt;/code&gt;, the category is class &lt;code&gt;ColorSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;ColorSupported&lt;/code&gt; ，类别本身是类 &lt;code&gt;ColorSupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0ce571c7a663ed5d52b97d295749ba27179815c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ColorSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;</source>
          <target state="translated">对于类 &lt;code&gt;ColorSupported&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64ae434f2d5d4a3fff36f72140166915fe0f0670" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Compression&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Compression&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Compression&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;Compression&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="3594b927522dc78dd96dca67fce427013a38c26b" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Compression&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;compression&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;Compression&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;compression&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9227b8c83270facc8092f5849402e0baf4b41db" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Copies&lt;/code&gt;, the category is class &lt;code&gt;Copies&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Copies&lt;/code&gt; 类，类别为 &lt;code&gt;Copies&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="ba4b1762cf51ed962a6816d2e83c8a8782ab842a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Copies&lt;/code&gt;, the category name is &lt;code&gt;&quot;copies&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;Copies&lt;/code&gt; ，类别名称是 &lt;code&gt;&quot;copies&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60808f90322f0f05d6f6603e8f2eb346176b5e18" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;CopiesSupported&lt;/code&gt;, the category is class &lt;code&gt;CopiesSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;CopiesSupported&lt;/code&gt; 类，类别本身就是 &lt;code&gt;CopiesSupported&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="1132b95eebdf19ac3a9f165b390a05fff19cff48" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;CopiesSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;CopiesSupported&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e43e6051f2371e24c9a3a4bb6f3e6f735df0db3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; ，类别本身就是类 &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="655d759164ec3857f08b7fa6d47937f94a784819" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14656bb248336a5257496932a8eb2cd29b5fd33d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCreation&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtCreation&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;DateTimeAtCreation&lt;/code&gt; ，类别为类 &lt;code&gt;DateTimeAtCreation&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="0792d5ec956eac683ab95ef01d19d3b57855f6e9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCreation&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;DateTimeAtCreation&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11c8f45cf11b552c8f2c8a016730c3593e230ca4" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; ，类别本身是类 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bf5ac1ab73b2e92a88287c9eb0414c6a61e482e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4942219f21a4207883d87d7930b7431fa3b29072" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Destination&lt;/code&gt;, the category is class &lt;code&gt;Destination&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Destination&lt;/code&gt; 类，类别为 &lt;code&gt;Destination&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="deda631a067c22149233cccdffe59c6d75c76dac" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Destination&lt;/code&gt;, the category name is &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;Destination&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf29dceddc85483e8af252e66f736091d61a382c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogOwner&lt;/code&gt;, the category is class &lt;code&gt;DialogOwner&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;DialogOwner&lt;/code&gt; 类，类别是 &lt;code&gt;DialogOwner&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="03a2149e1712fe5a603a98d083af6dc9c9ed17de" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogOwner&lt;/code&gt;, the category name is &lt;code&gt;&quot;dialog-owner&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;DialogOwner&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;dialog-owner&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acf904161ed76860c0994b62c896138bdf5f4973" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogTypeSelection&lt;/code&gt; the category is class &lt;code&gt;DialogTypeSelection&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;DialogTypeSelection&lt;/code&gt; 类，类别是 &lt;code&gt;DialogTypeSelection&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="04fe5a1fb70f631502839130f0cde6c12cc2e684" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogTypeSelection&lt;/code&gt; the category name is &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;DialogTypeSelection&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3df1ed3889799f0cc9000cb73a0aa67f508f66c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DocumentName&lt;/code&gt;, the category is class &lt;code&gt;DocumentName&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;DocumentName&lt;/code&gt; ，类别是类 &lt;code&gt;DocumentName&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b384f9bcb81973d3bd2377c3c549638f655ae155" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DocumentName&lt;/code&gt;, the category name is &lt;code&gt;&quot;document-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;DocumentName&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;document-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dffb5f5542b491af975e49f95d2d9bf5cabd7af5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Fidelity&lt;/code&gt; the category is class &lt;code&gt;Fidelity&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Fidelity&lt;/code&gt; 类，类别是 &lt;code&gt;Fidelity&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="20969333ff4d78bf1acc7bbc4fe3839c7ceb38ad" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Fidelity&lt;/code&gt; the category name is &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;Fidelity&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bcae80a55ba301caeba9a167edbd76f27ec2cfb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Finishings&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Finishings&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Finishings&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;Finishings&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="f502df05b02df1a6fad24fdec36a0ba73f4b360f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Finishings&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;finishings&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;Finishings&lt;/code&gt; 类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;finishings&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9138edb232c7d25c27fb0cbb8514a33c89e0d4fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobHoldUntil&lt;/code&gt;, the category is class &lt;code&gt;JobHoldUntil&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobHoldUntil&lt;/code&gt; 类，类别本身是 &lt;code&gt;JobHoldUntil&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="59255afcdf5b62648f96e2d898de04879aca04dc" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobHoldUntil&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobHoldUntil&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b733eec5c34e5514fce56f36f45c32a1b7621e3d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressions&lt;/code&gt;, the category is class &lt;code&gt;JobImpressions&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobImpressions&lt;/code&gt; 类，类别为 &lt;code&gt;JobImpressions&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b22164745904bdffe4012dbef01071d3be958f1c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressions&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobImpressions&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9dc34015ab6092445747ed527c8de64f3e6d68b5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt;, the category is class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 类，类别本身是 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="808bd0a53e48fe942deb6fc6a1395db0c8e956e2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58fb14ac702a12646d5a3f94cbd4e196aed09157" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobImpressionsSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobImpressionsSupported&lt;/code&gt; 类，类别本身就是 &lt;code&gt;JobImpressionsSupported&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="fc05e148fb4f5d33943f34ab554bb2ebc93fad13" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobImpressionsSupported&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b7866559e50650c0ea85dbe42ae498d16cc3590" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctets&lt;/code&gt;, the category is class &lt;code&gt;JobKOctets&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobKOctets&lt;/code&gt; 类，类别本身是 &lt;code&gt;JobKOctets&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="816150e3208cca1801c018306f1a3295f575c31d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctets&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobKOctets&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efbba27aa0018ded888c154729d5e098d6b69e94" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt;, the category is class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; ，类别本身是类 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="213c08dccfdc04e5d7c6e47adf67da8362fea255" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db99a1ab1fb34e0c66669d2d3b6ccfb8953374b6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobKOctetsSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobKOctetsSupported&lt;/code&gt; ，类别本身就是类 &lt;code&gt;JobKOctetsSupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="645fa31556f47a99fdd4eb2cf90983ea3450ba2c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobKOctetsSupported&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83160315cc75fd1c9b5dd70f74d4dcc9daa54ce8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheets&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobMediaSheets&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobMediaSheets&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;JobMediaSheets&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="c99112f52ab7cb24d955b8bcf5130eb8ac030fe9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheets&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobMediaSheets&lt;/code&gt; 类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecf4fe34811ac21bd597a213357327f2ba6dc9b4" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt;, the category is class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 类，类别本身是 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="b5630d7c9c62f2e8906936d4aebf54f72936caad" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb328c0c04306f5ee9e8e69fdcd5663001bd35fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; ，类别本身就是类 &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0981fc2a2845325cf4fbec85e53a83736471f12f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a1f965c47d82a5bd4255b3c08bff75ebe3067cb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMessageFromOperator&lt;/code&gt;, the category is class &lt;code&gt;JobMessageFromOperator&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; ，类别是类 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="15ca4e1a2ef02625373afb3a8ea48784b55afd51" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMessageFromOperator&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7014dc1746ed2d70fbe8eb9e241f0fe183904c57" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobName&lt;/code&gt;, the category is class &lt;code&gt;JobName&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobName&lt;/code&gt; ，类别是类 &lt;code&gt;JobName&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="7709f8dbe2a0c960b7ea245541c77e973c122773" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobName&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobName&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7cc545d10342f25edb19988907e1a3f84a83b37" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobOriginatingUserName&lt;/code&gt;, the category is class &lt;code&gt;JobOriginatingUserName&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobOriginatingUserName&lt;/code&gt; ，类别是类 &lt;code&gt;JobOriginatingUserName&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="c4c8d6a361320e7c77bd8ca0a37c7de1c3e11651" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobOriginatingUserName&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobOriginatingUserName&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ca3d32dcec276c163dc2bb82a9485e442017910" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPriority&lt;/code&gt;, the category is class &lt;code&gt;JobPriority&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobPriority&lt;/code&gt; ，类别是类 &lt;code&gt;JobPriority&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="dbd937057ae3d2e3b6da932fe824766faf8ed666" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPriority&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobPriority&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="337f5fb950aed492131369272a4028563cc4f5c0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPrioritySupported&lt;/code&gt;, the category is class &lt;code&gt;JobPrioritySupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;JobPrioritySupported&lt;/code&gt; ，类别本身就是类 &lt;code&gt;JobPrioritySupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9909364a2e07ee3d588288da910a3ae210eb639a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPrioritySupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;JobPrioritySupported&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ff202a7cdfa19a262a89fc6db7ccd86dbc9467c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobSheets&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobSheets&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobSheets&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;JobSheets&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="f27538ed1ddb73ce5056ae4bbb1c4e1028ec49c3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobSheets&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobSheets&lt;/code&gt; 类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d6e2bf39b838c441356fb9c2f2a6321554ebdb0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobState&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobState&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobState&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;JobState&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="7948091150cb89dcf8610ba89354a6f66b6195cb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobState&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobState&lt;/code&gt; 类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db5aec678b04c5f093d19482dc31ea3599a71d1d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReason&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobStateReason&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;JobStateReason&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;JobStateReason&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="ddabdfadd6db301e8c14cf75c850b9f73495247d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReason&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;JobStateReason&lt;/code&gt; 类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2d4c85ced765ba9420d8235aaceec753f47d678" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReasons&lt;/code&gt;, the category is class JobStateReasons itself.</source>
          <target state="translated">对于 &lt;code&gt;JobStateReasons&lt;/code&gt; 类，类别本身是JobStateReasons类。</target>
        </trans-unit>
        <trans-unit id="4ce0bcf24cc33aee46a2745b9353c2ec9699d8cc" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Media&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Media&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Media&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;Media&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="8b9dcb85907a52aa8c61ed87a8d7bfaaeeb7a334" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Media&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;Media&lt;/code&gt; 类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;media&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6af424ef24c2cc298a45af9f744641ceb796aa4a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaPrintableArea&lt;/code&gt;, the category is class &lt;code&gt;MediaPrintableArea&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;MediaPrintableArea&lt;/code&gt; ，类别是类 &lt;code&gt;MediaPrintableArea&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="bd581e9be565e27401828a839897dc8509d3ae60" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaPrintableArea&lt;/code&gt;, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;MediaPrintableArea&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f14c05573e4e4e0f005253421a5eea87e5fb21e1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaSize&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;MediaSize&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;MediaSize&lt;/code&gt; 类和任何供应商定义的子类，类别为 &lt;code&gt;MediaSize&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="2e54d922083cba58a63325fada3809515733f0b8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaSize&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;MediaSize&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f7cdf1a7a906e2bad80da5ed77640a6d4efa70a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 和任何供应商定义的子类，类别为类 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="88543f947d8d2cac51efea0463708890b1a9d7e7" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1edde13f7f0675ff291dfa8a2be552a3ac2f9cde" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfDocuments&lt;/code&gt;, the category is class &lt;code&gt;NumberOfDocuments&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;NumberOfDocuments&lt;/code&gt; ，类别是类 &lt;code&gt;NumberOfDocuments&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="65358eb4b3a8d71da5c918602b60db56780bf3d8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfDocuments&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;NumberOfDocuments&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b5d1dec37ff2c59ff91b25e4d08c2e91cf29825" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt;, the category is class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; ，类别是类 &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="f4d1c75eddb30112fdcc815455d71357baedf59c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16f9f116d9b8c668a9e4dec8ab4f8f9a123efd81" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUp&lt;/code&gt;, the category is class &lt;code&gt;NumberUp&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;NumberUp&lt;/code&gt; ，类别是类 &lt;code&gt;NumberUp&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="cdaea036c5015e82aa6f74ab8b8250e5a90467c0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUp&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;NumberUp&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db3ad675fb50e8ab6bbb56c5e52ef3fd946d6859" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUpSupported&lt;/code&gt;, the category is class &lt;code&gt;NumberUpSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;NumberUpSupported&lt;/code&gt; ，类别本身是类 &lt;code&gt;NumberUpSupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42d8a46fe7900b17b3e05c3875c84620be08542d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUpSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;NumberUpSupported&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="094fbf2a4e844c3c2c32bbeee1b82ff5aba57b90" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OrientationRequested&lt;/code&gt;, the category is class &lt;code&gt;OrientationRequested&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;OrientationRequested&lt;/code&gt; 类，类别本身就是 &lt;code&gt;OrientationRequested&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="4b62c93b27193c1b3037d8c97009083498563176" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OrientationRequested&lt;/code&gt;, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;OrientationRequested&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="320df60bfe89f09ecd197b1122d42da77bc5f614" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt;, the category is class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; ，类别本身是类 &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc786fb2a1e0624d80b47c9d7b6ed6b170a60708" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt;, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c14542e34aa6f9011496e8c6ea0a2b80e155e0c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PDLOverrideSupported&lt;/code&gt; 和任何供应商定义的子类，类别本身是类 &lt;code&gt;PDLOverrideSupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="956aafd90394517a584b8a6306788fdcbbbcfeda" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PDLOverrideSupported&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87a47d44264349bbe07ace50838fc97777fdc2ea" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PageRanges&lt;/code&gt;, the category is class &lt;code&gt;PageRanges&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PageRanges&lt;/code&gt; ，类别是类 &lt;code&gt;PageRanges&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="c8a339d7d653e44875b291f65edc488d2969009f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PageRanges&lt;/code&gt;, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PageRanges&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="115eddcdc42a3b60e89212ee76ad7ff19fd0a780" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinute&lt;/code&gt;, the category is class &lt;code&gt;PagesPerMinute&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PagesPerMinute&lt;/code&gt; ，类别是类 &lt;code&gt;PagesPerMinute&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="7e622c30e20df7b5298a59ab398e0e9e3e446ce6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinute&lt;/code&gt;, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PagesPerMinute&lt;/code&gt; ，类别名称是 &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28500e2397d2df5af3f078bfca882ca66ab9b4b1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt;, the category is class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; ，类别是类 &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="9a9e1ccf0ceca5d1bcdb42b35e5b5e0d52a7c419" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt;, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; ，类别名称是 &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00959ba0ab72d526bab12adfd055ad63926868d6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PresentationDirection&lt;/code&gt; the category is class &lt;code&gt;PresentationDirection&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;PresentationDirection&lt;/code&gt; 类，类别本身是 &lt;code&gt;PresentationDirection&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="6f17f1e5db63d85c5d350134c5ca25284b295805" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PresentationDirection&lt;/code&gt; the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;PresentationDirection&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="981266fd31ec32217d65c3b871e9dcb8aa2889ec" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrintQuality&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrintQuality&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrintQuality&lt;/code&gt; 和任何供应商定义的子类，类别为类 &lt;code&gt;PrintQuality&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="096e5bfdc0150ee1a32d02b01844bf2eb131775f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrintQuality&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrintQuality&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ae9b92f6c62741b602403c234fd05021be6c9f5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterInfo&lt;/code&gt;, the category is class &lt;code&gt;PrinterInfo&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterInfo&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterInfo&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="ea4467ffc8eb4e3675540439235243624d532f1e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterInfo&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterInfo&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f52ca5f9b7fa4f1e5c6c014121228c991b611178" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt;, the category is class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="04639f95e4cba4098a6af5ece8ed55d54554fdc2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bc5fbaaf05325545a21fec29284f6bb18d6e299" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterLocation&lt;/code&gt;, the category is class &lt;code&gt;PrinterLocation&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterLocation&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterLocation&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b48061d1d9b4f07e8663e29e12fcc992d280f005" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterLocation&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterLocation&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0466ffcaed2552569f4058ad0aed42632a5904c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt;, the category is class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="bb0209d756a3df05f51dd111c7a97ce67755fa9e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd37715e5a97491707bc78044ed8560f007c8599" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt;, the category is class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="59e46641735175bb438057d752641acfbdfc932c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e54e601e49b39715d26242ff2e36a5377c3c10d2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfo&lt;/code&gt;, the category is class &lt;code&gt;PrinterMoreInfo&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMoreInfo&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterMoreInfo&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="562b18dc3df2d86018273600219b9224ee65925d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfo&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMoreInfo&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87e6261a14b558d62e92a7574730af701e2a77b3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;, the category is class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b128b3f601d31a9fed02bf997242828c9ef17b9c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0177a37ebc3971ca01f3ebc2d7b1a343cd066f1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterName&lt;/code&gt;, the category is class &lt;code&gt;PrinterName&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterName&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterName&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="e41cc43259baf0e8d291cc8c60f60063e52bc227" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterName&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterName&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93033efa411651c9c82bb05cbf7b51f7667deac1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterResolution&lt;/code&gt;, the category is class &lt;code&gt;PrinterResolution&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterResolution&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterResolution&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="5b71ccef80b2709a36fa21680f1058e357266cef" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterResolution&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterResolution&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83b314e1253f9fcc958220395220b8d24a7d35b1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterState&lt;/code&gt;, the category is class &lt;code&gt;PrinterState&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterState&lt;/code&gt; ，类别是类 &lt;code&gt;PrinterState&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="e4a91740778e2ea8ceb6d494e6b727792db09454" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterState&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterState&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10a9debf4fa883f23ed603ace0c7306c7202c6c8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReason&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrinterStateReason&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterStateReason&lt;/code&gt; 和任何供应商定义的子类，类别为 &lt;code&gt;PrinterStateReason&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="0ba9247d7b0fd0bcd77a9d48b2c567b1b6596386" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReason&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterStateReason&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d45c3e696d17f1d57d2e2b9b8399c52298c0d4e2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReasons&lt;/code&gt;, the category is class &lt;code&gt;PrinterStateReasons&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterStateReasons&lt;/code&gt; ，类别本身是类 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="106d22eb7c0114f9308e920977b99bf643ee60c9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReasons&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterStateReasons&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b046c0ce0226444bbf3a129ac27e3b80e8a258ef" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterURI&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrinterURI&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterURI&lt;/code&gt; 和任何供应商定义的子类，类别为类 &lt;code&gt;PrinterURI&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="b6ebd48868937e30a8d5fcf9f1bb9231109f26eb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterURI&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;PrinterURI&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80d86bdcdc0b6f31ba19a1d809650a5cc19cb95f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;QueuedJobCount&lt;/code&gt;, the category is class &lt;code&gt;QueuedJobCount&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;QueuedJobCount&lt;/code&gt; 类，类别为 &lt;code&gt;QueuedJobCount&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="b98309c92978d8e0a9ac179a3faa4a096f1e0038" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;QueuedJobCount&lt;/code&gt;, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;QueuedJobCount&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30f7aa4e2338e2e7148dabafb81ddbbfd93da7fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 和任何供应商定义的子类，类别本身是类 &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="840fc27a3d9b1d6f704a32a1dddc8f95b096d909" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1e7f3b059656d4f2ff6b28b20cc87a142bea915" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;RequestingUserName&lt;/code&gt;, the category is class &lt;code&gt;RequestingUserName&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;RequestingUserName&lt;/code&gt; ，类别是类 &lt;code&gt;RequestingUserName&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="d20f8a71ccf1e045cf6888df43b41358dec22085" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;RequestingUserName&lt;/code&gt;, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;RequestingUserName&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9ba32caeef489048fa4488170877fd65e1e98e0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Severity&lt;/code&gt;, the category is class &lt;code&gt;Severity&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;Severity&lt;/code&gt; 类，类别是 &lt;code&gt;Severity&lt;/code&gt; 类本身。</target>
        </trans-unit>
        <trans-unit id="cb18adea534a448a6f7f71636e8e1048df54cba2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Severity&lt;/code&gt;, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;Severity&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;severity&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="068893aaa345b0934cf6b04443696125f0f09efb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;SheetCollate&lt;/code&gt;, the category is class &lt;code&gt;SheetCollate&lt;/code&gt; itself.</source>
          <target state="translated">对于 &lt;code&gt;SheetCollate&lt;/code&gt; 类，类别本身就是 &lt;code&gt;SheetCollate&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="35d7e7b93a1099a46fb8580bcedb8d9fa76e2e18" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;SheetCollate&lt;/code&gt;, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;SheetCollate&lt;/code&gt; 类，类别名称为 &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f4fffb8875c80f5383599a79b7eebdc442a1514" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Sides&lt;/code&gt;, the category is class &lt;code&gt;Sides&lt;/code&gt; itself.</source>
          <target state="translated">对于类 &lt;code&gt;Sides&lt;/code&gt; ，类别是类 &lt;code&gt;Sides&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="bf931919a6c408dd027cc758002facf190de42d6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Sides&lt;/code&gt;, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类 &lt;code&gt;Sides&lt;/code&gt; ，类别名称为 &lt;code&gt;&quot;sides&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5648c3e8105f10d35eb80098924d18a37f7091d" translate="yes" xml:space="preserve">
          <source>For class Chromaticity, the category is the class Chromaticity itself.</source>
          <target state="translated">对于类色度来说,类别就是类色度本身。</target>
        </trans-unit>
        <trans-unit id="108c1dc27fdbdded9fcdf4a1834817f795fb00cd" translate="yes" xml:space="preserve">
          <source>For class Chromaticity, the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt; 类，类别名称为&amp;ldquo;色度&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2a39f1eef25f18ccbc61b64eb319f52340e01059" translate="yes" xml:space="preserve">
          <source>For class ColorSupported, the category is class ColorSupported itself.</source>
          <target state="translated">对于类ColorSupported,类别就是类ColorSupported本身。</target>
        </trans-unit>
        <trans-unit id="ff00115704149d68dd8049554c74a33a4809381f" translate="yes" xml:space="preserve">
          <source>For class ColorSupported, the category name is &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类ColorSupported，类别名称为 &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6841c351659dffecdee476f9d976c7bad52f4cfb" translate="yes" xml:space="preserve">
          <source>For class Compression and any vendor-defined subclasses, the category is class Compression itself.</source>
          <target state="translated">对于类 Compression 和任何厂商定义的子类,类别就是类 Compression 本身。</target>
        </trans-unit>
        <trans-unit id="d729d0565837f2cbe34af3ab43c8185785856634" translate="yes" xml:space="preserve">
          <source>For class Compression and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;compression&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类Compression和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;compression&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa23b4a89f45a7c95055fc175887b5e4546faa1f" translate="yes" xml:space="preserve">
          <source>For class Copies, the category is class Copies itself.</source>
          <target state="translated">对于类Copies,类别就是类Copies本身。</target>
        </trans-unit>
        <trans-unit id="1c3b5a32d1d86538da8be3869f27f2f3fae01303" translate="yes" xml:space="preserve">
          <source>For class Copies, the category name is &lt;code&gt;&quot;copies&quot;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;&quot;copies&quot;&lt;/code&gt; 类，类别名称为&amp;ldquo; copies&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e9ad24ebaa9d2bbd6c6810c848b3f07c9d64ad75" translate="yes" xml:space="preserve">
          <source>For class CopiesSupported, the category is class CopiesSupported itself.</source>
          <target state="translated">对于类CopiesSupported,类别就是类CopiesSupported本身。</target>
        </trans-unit>
        <trans-unit id="e90e4814b2b84639ae07fb1fa1c5de162ce2633e" translate="yes" xml:space="preserve">
          <source>For class CopiesSupported, the category name is &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于CopiesSupported类，类别名称为 &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9fb488767eb1e03e046cc6b9129359083fd7e81" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCompleted, the category is class DateTimeAtCompleted itself.</source>
          <target state="translated">对于类DateTimeAtCompleted来说,类别就是类DateTimeAtCompleted本身。</target>
        </trans-unit>
        <trans-unit id="0aa0c50cf51c142b1338e3884c76c0f4308158cf" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCompleted, the category name is &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类DateTimeAtCompleted，类别名称为 &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d72e63612ff9b0b9e0c5df81b2fbfa5244b420a8" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCreation, the category is class DateTimeAtCreation itself.</source>
          <target state="translated">对于类DateTimeAtCreation来说,类别就是类DateTimeAtCreation本身。</target>
        </trans-unit>
        <trans-unit id="9ffdc086db7b7f83c7202ddde482fa984134a1bf" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCreation, the category name is &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类DateTimeAtCreation，类别名称为 &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bb8163507239d55563a9971e7bef6dcbdf2740d" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtProcessing, the category is class DateTimeAtProcessing itself.</source>
          <target state="translated">对于类DateTimeAtProcessing来说,类别就是类DateTimeAtProcessing本身。</target>
        </trans-unit>
        <trans-unit id="2df77ccb07ad51751cd6f1ef440abc4db57d994c" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtProcessing, the category name is &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类DateTimeAtProcessing，类别名称为 &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe6e42ec6c63048fdce164f7d6643bdc40fe87bb" translate="yes" xml:space="preserve">
          <source>For class Destination, the category is class Destination itself.</source>
          <target state="translated">对于类Destination,类别就是类Destination本身。</target>
        </trans-unit>
        <trans-unit id="d0d9faf2ddfcd290fafc07e72901de35be14f36d" translate="yes" xml:space="preserve">
          <source>For class Destination, the category name is &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt;.</source>
          <target state="translated">对于Destination类，类别名称为 &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01ee9f15d74d9403c6f26efa52fcb02871b59554" translate="yes" xml:space="preserve">
          <source>For class DialogTypeSelection the category is class DialogTypeSelection itself.</source>
          <target state="translated">对于类DialogTypeSelection的类别是类DialogTypeSelection本身。</target>
        </trans-unit>
        <trans-unit id="642fa2af2eb683de8bcd81a8b9b443fedab0ba84" translate="yes" xml:space="preserve">
          <source>For class DialogTypeSelection the category name is &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt;.</source>
          <target state="translated">对于DialogTypeSelection类，类别名称是 &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60f14abbf1de6231274552162be52f779347f3ce" translate="yes" xml:space="preserve">
          <source>For class DocumentName, the category is class DocumentName itself.</source>
          <target state="translated">对于类DocumentName来说,类别就是类DocumentName本身。</target>
        </trans-unit>
        <trans-unit id="830ced725afc984767a2835c456e086919af3378" translate="yes" xml:space="preserve">
          <source>For class DocumentName, the category name is &lt;code&gt;&quot;document-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类DocumentName，类别名称为 &lt;code&gt;&quot;document-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caed1e6577cea6150d76ee55b8099ae194884ffd" translate="yes" xml:space="preserve">
          <source>For class Fidelity the category is class Fidelity itself.</source>
          <target state="translated">对于类富达来说,类别就是类富达本身。</target>
        </trans-unit>
        <trans-unit id="72b5ca593603250a92503220ff5235518e303788" translate="yes" xml:space="preserve">
          <source>For class Fidelity the category name is &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt;.</source>
          <target state="translated">对于Fidelity类，类别名称是 &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e68a4f3ea42523f4fb43117aeb9975dc9a43c21c" translate="yes" xml:space="preserve">
          <source>For class Finishings and any vendor-defined subclasses, the category is class Finishings itself.</source>
          <target state="translated">对于类Finishings和任何厂商定义的子类,类别就是类Finishings本身。</target>
        </trans-unit>
        <trans-unit id="072c553018aa7a054a2c949c1715c7c4ebc299a5" translate="yes" xml:space="preserve">
          <source>For class Finishings and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;finishings&quot;&lt;/code&gt;.</source>
          <target state="translated">对于Finishings类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;finishings&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1f72f98ea9f48ec133fcad772e4204ccb5d8347" translate="yes" xml:space="preserve">
          <source>For class JobHoldUntil, the category is class JobHoldUntil itself.</source>
          <target state="translated">对于类JobHoldUntil来说,类别就是类JobHoldUntil本身。</target>
        </trans-unit>
        <trans-unit id="57fc18fed0e561d81a33486ad4422d45550bdad9" translate="yes" xml:space="preserve">
          <source>For class JobHoldUntil, the category name is &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobHoldUntil类，类别名称为 &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f87388d84c0cd1cd502b8c68cb111b2c9b91ed2a" translate="yes" xml:space="preserve">
          <source>For class JobImpressions, the category is class JobImpressions itself.</source>
          <target state="translated">对于类JobImpressions来说,类别就是类JobImpressions本身。</target>
        </trans-unit>
        <trans-unit id="a96a56d6666c4e5440f41152ab488f26f2b42211" translate="yes" xml:space="preserve">
          <source>For class JobImpressions, the category name is &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobImpressions类，类别名称为 &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3dab7fc1f5a61485f3d310a640183120e2ad5dce" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsCompleted, the category is class JobImpressionsCompleted itself.</source>
          <target state="translated">对于类JobImpressionsCompleted来说,类别就是类JobImpressionsCompleted本身。</target>
        </trans-unit>
        <trans-unit id="5bb94f9b9e7eb12e2fbdb0554263847e34fd6c7b" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsCompleted, the category name is &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobImpressionsCompleted，类别名称为 &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2029d43e377c9cd467e1c54f3a31db20467c2f54" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsSupported, the category is class JobImpressionsSupported itself.</source>
          <target state="translated">对于类JobImpressionsSupported,类别是类JobImpressionsSupported本身。</target>
        </trans-unit>
        <trans-unit id="1bdb26f5642486fcdce0f7b936a35850818cc5cf" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsSupported, the category name is &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobImpressionsSupported类，类别名称为 &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d250895f59ad6e992d0e5d73e1347e9543dea90" translate="yes" xml:space="preserve">
          <source>For class JobKOctets, the category is class JobKOctets itself.</source>
          <target state="translated">对于类JobKOctets来说,类别就是类JobKOctets本身。</target>
        </trans-unit>
        <trans-unit id="eeccbba1a19328125b0a65d5e7ac7661f4a7691d" translate="yes" xml:space="preserve">
          <source>For class JobKOctets, the category name is &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobKOctets，类别名称为 &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e36add3298154dae97ea9d7edb3d8f9ed151824" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsProcessed, the category is class JobKOctetsProcessed itself.</source>
          <target state="translated">对于类JobKOctetsProcessed来说,类别就是类JobKOctetsProcessed本身。</target>
        </trans-unit>
        <trans-unit id="c7217f2aeb7187b638c8fe9275ce38671a0c54d4" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsProcessed, the category name is &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobKOctetsProcessed类，类别名称为 &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="277761b4bb7736fe7d84fc442aa2477e16cadd2e" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsSupported, the category is class JobKOctetsSupported itself.</source>
          <target state="translated">对于类JobKOctetsSupported,类别是类JobKOctetsSupported本身。</target>
        </trans-unit>
        <trans-unit id="81f1df5ec312d750080964f5858176ea6699e751" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsSupported, the category name is &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobKOctetsSupported，类别名称为 &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83879756c441ec6aa9ec68c5376e07ab19d87175" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheets and any vendor-defined subclasses, the category is class JobMediaSheets itself.</source>
          <target state="translated">对于类JobMediaSheets和任何厂商定义的子类,类别是类JobMediaSheets本身。</target>
        </trans-unit>
        <trans-unit id="839ddc60e912395e6ec39e66f1d9e8be69ebe9b3" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobMediaSheets类和任何供应商定义的子类，类别名称为 &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72031f84675b63fbd5c5611982a0745c20e13834" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsCompleted, the category is class JobMediaSheetsCompleted itself.</source>
          <target state="translated">对于类JobMediaSheetsCompleted来说,类别就是类JobMediaSheetsCompleted本身。</target>
        </trans-unit>
        <trans-unit id="d31e00461dae435c9e5673020b363aada5bdb12f" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsCompleted, the category name is &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobMediaSheetsCompleted，类别名称为 &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dda8ee7e3c54ebc779b8ce4b0974e5dcf20c93f" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsSupported, the category is class JobMediaSheetsSupported itself.</source>
          <target state="translated">对于类JobMediaSheetsSupported来说,类别就是类JobMediaSheetsSupported本身。</target>
        </trans-unit>
        <trans-unit id="3c7de85d18c607ebfca61b06434fe4ca9f17d56a" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsSupported, the category name is &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobMediaSheetsSupported，类别名称为 &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b136e5a2b0e75b390435d00967defe1aadb4fcce" translate="yes" xml:space="preserve">
          <source>For class JobMessageFromOperator, the category is class JobMessageFromOperator itself.</source>
          <target state="translated">对于类JobMessageFromOperator来说,类别是类JobMessageFromOperator本身。</target>
        </trans-unit>
        <trans-unit id="dfd0912c1635fd736d9bd773edea20b754970dab" translate="yes" xml:space="preserve">
          <source>For class JobMessageFromOperator, the category name is &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobMessageFromOperator，类别名称为 &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b26e19c92d09f2a21f892100a4ce3ba1afe7195" translate="yes" xml:space="preserve">
          <source>For class JobName, the category is class JobName itself.</source>
          <target state="translated">对于类JobName,类别就是类JobName本身。</target>
        </trans-unit>
        <trans-unit id="1ff6b5618e3eea85578b89c260a2d70593970b46" translate="yes" xml:space="preserve">
          <source>For class JobName, the category name is &lt;code&gt;&quot;job-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobName类，类别名称为 &lt;code&gt;&quot;job-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d136061f06a6eb64e17fd79f01a59636540321e" translate="yes" xml:space="preserve">
          <source>For class JobOriginatingUserName, the category is class JobOriginatingUserName itself.</source>
          <target state="translated">对于类JobOriginatingUserName来说,类别就是类JobOriginatingUserName本身。</target>
        </trans-unit>
        <trans-unit id="ae8079d08471672e9fcf735403adad4f4f24c6c7" translate="yes" xml:space="preserve">
          <source>For class JobOriginatingUserName, the category name is &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">对于JobOriginatingUserName类，类别名称为 &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a05f171ac5f709f2cd7d09a32b6a05afc1f6907c" translate="yes" xml:space="preserve">
          <source>For class JobPriority, the category is class JobPriority itself.</source>
          <target state="translated">对于类JobPriority,类别就是类JobPriority本身。</target>
        </trans-unit>
        <trans-unit id="8777ec4ed750ff80f83b39defbe79e536f44eb5f" translate="yes" xml:space="preserve">
          <source>For class JobPriority, the category name is &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobPriority，类别名称为 &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce89f591c0067b7a68b741b72cc42339698a78d7" translate="yes" xml:space="preserve">
          <source>For class JobPrioritySupported, the category is class JobPrioritySupported itself.</source>
          <target state="translated">对于类JobPrioritySupported,类别就是类JobPrioritySupported本身。</target>
        </trans-unit>
        <trans-unit id="654e506ea040f608f4dc353c2d822c054cc8dceb" translate="yes" xml:space="preserve">
          <source>For class JobPrioritySupported, the category name is &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">对于类JobPrioritySupported，类别名称为 &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
