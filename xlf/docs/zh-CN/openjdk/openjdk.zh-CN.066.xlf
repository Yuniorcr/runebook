<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="dddd1a800000dae101aac1e89fcdec3b08c15ac2" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready to accept a new socket connection.</source>
          <target state="translated">测试该键的通道是否准备好接受新的socket连接。</target>
        </trans-unit>
        <trans-unit id="5d878c471adbc9b2c8a9fa6dbce748ad8cd28072" translate="yes" xml:space="preserve">
          <source>Tests whether this thread has been interrupted. The</source>
          <target state="translated">测试该线程是否被中断。该</target>
        </trans-unit>
        <trans-unit id="3392e47c46aa945b753998473d535e85a39484fd" translate="yes" xml:space="preserve">
          <source>Tests whether two &lt;code&gt;TypeMirror&lt;/code&gt; objects represent the same type.</source>
          <target state="translated">测试两个 &lt;code&gt;TypeMirror&lt;/code&gt; 对象是否表示相同的类型。</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="890e885d9e116b52f69e2ef63c1003d7d11c8d34" translate="yes" xml:space="preserve">
          <source>Text - the textual equivalent for the value</source>
          <target state="translated">文本--价值的文本等价物</target>
        </trans-unit>
        <trans-unit id="2cd4f4ad22e30894dfd760bd655d6ca0d4086566" translate="yes" xml:space="preserve">
          <source>Text of notification.</source>
          <target state="translated">通知的案文:</target>
        </trans-unit>
        <trans-unit id="84b5008a43352c30bd5e7e53bc20f84945a7b7b7" translate="yes" xml:space="preserve">
          <source>Text styles define three sizes for the formatted text - 'full', 'short' and 'narrow'. Each of these three sizes is available in both 'standard' and 'stand-alone' variations.</source>
          <target state="translated">文本样式为格式化的文本定义了三种尺寸--&quot;全&quot;、&quot;短 &quot;和 &quot;窄&quot;。这三种尺寸都有 &quot;标准 &quot;和 &quot;独立 &quot;两种变化。</target>
        </trans-unit>
        <trans-unit id="c0a019987906550410814728141e87a01dcb706d" translate="yes" xml:space="preserve">
          <source>TextInputCallback</source>
          <target state="translated">TextInputCallback</target>
        </trans-unit>
        <trans-unit id="3fde12722a72456d8e4d6445b0a9a4654cb73300" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getDefaultText()</source>
          <target state="translated">TextInputCallback.getDefaultText()</target>
        </trans-unit>
        <trans-unit id="0a5e8244825ced667ef0950c3decd6960ad62616" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getPrompt()</source>
          <target state="translated">TextInputCallback.getPrompt()</target>
        </trans-unit>
        <trans-unit id="97cad89ebd01bcfd907d406cd9142c54409b192f" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getText()</source>
          <target state="translated">TextInputCallback.getText()</target>
        </trans-unit>
        <trans-unit id="628928dea47b979f7fd4227e346208d91c210955" translate="yes" xml:space="preserve">
          <source>TextInputCallback.setText()</source>
          <target state="translated">TextInputCallback.setText()</target>
        </trans-unit>
        <trans-unit id="588e445a7fb8a62cfbfe07fc7da7e4c3fa53c998" translate="yes" xml:space="preserve">
          <source>TextOutputCallback</source>
          <target state="translated">TextOutputCallback</target>
        </trans-unit>
        <trans-unit id="252f4df0a0cc7ef6d63b2964239d75a8cd935edb" translate="yes" xml:space="preserve">
          <source>TextOutputCallback.getMessage()</source>
          <target state="translated">TextOutputCallback.getMessage()</target>
        </trans-unit>
        <trans-unit id="04a3dc5e3172617d279fa04f4074aa7941b269e8" translate="yes" xml:space="preserve">
          <source>TextOutputCallback.getMessageType()</source>
          <target state="translated">TextOutputCallback.getMessageType()</target>
        </trans-unit>
        <trans-unit id="9730e5eb39c447a1781ba61855df2714772d7751" translate="yes" xml:space="preserve">
          <source>TextStyle</source>
          <target state="translated">TextStyle</target>
        </trans-unit>
        <trans-unit id="f4dca53ffd389401b79d872c5e632fd324076eef" translate="yes" xml:space="preserve">
          <source>TextStyle.asNormal()</source>
          <target state="translated">TextStyle.asNormal()</target>
        </trans-unit>
        <trans-unit id="1ef9942c75cd5e393a8ead0a76131c8945ad5e66" translate="yes" xml:space="preserve">
          <source>TextStyle.asStandalone()</source>
          <target state="translated">TextStyle.asStandalone()</target>
        </trans-unit>
        <trans-unit id="0d128dd8c9acf7ee1c4c113528b8714efd712df9" translate="yes" xml:space="preserve">
          <source>TextStyle.isStandalone()</source>
          <target state="translated">TextStyle.isStandalone()</target>
        </trans-unit>
        <trans-unit id="c83b71a023441b2dec3ae28c844e030a94a564ce" translate="yes" xml:space="preserve">
          <source>TextStyle.valueOf()</source>
          <target state="translated">TextStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="a36d687140d6a14d13a30df1289134c5a96887bf" translate="yes" xml:space="preserve">
          <source>TextStyle.values()</source>
          <target state="translated">TextStyle.values()</target>
        </trans-unit>
        <trans-unit id="4ba1cb88f64bee051232816580fd6cb2672c9cf0" translate="yes" xml:space="preserve">
          <source>TextSyntax</source>
          <target state="translated">TextSyntax</target>
        </trans-unit>
        <trans-unit id="a0e31d45ecd3597bc9c201242058dd0894346074" translate="yes" xml:space="preserve">
          <source>TextSyntax.equals()</source>
          <target state="translated">TextSyntax.equals()</target>
        </trans-unit>
        <trans-unit id="01a8db3991f8df738125e4291a8f08e2dd90e0dd" translate="yes" xml:space="preserve">
          <source>TextSyntax.getLocale()</source>
          <target state="translated">TextSyntax.getLocale()</target>
        </trans-unit>
        <trans-unit id="36257532531c5aca445403e9ee18a7e5d3a9316c" translate="yes" xml:space="preserve">
          <source>TextSyntax.getValue()</source>
          <target state="translated">TextSyntax.getValue()</target>
        </trans-unit>
        <trans-unit id="cbae53268b404fa9327fcac8b160936d3d73e4f8" translate="yes" xml:space="preserve">
          <source>TextSyntax.hashCode()</source>
          <target state="translated">TextSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="fab8c00792aa8223f14e1550d15267c9fe32de52" translate="yes" xml:space="preserve">
          <source>TextSyntax.toString()</source>
          <target state="translated">TextSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="35e814370946e73a4be7cae92516751937de9ac7" translate="yes" xml:space="preserve">
          <source>Textual representation of IP addresses</source>
          <target state="translated">IP地址的文字表述</target>
        </trans-unit>
        <trans-unit id="117803293fc433375561793178e0696f42010099" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv4 address used as input to methods takes one of the following forms:</source>
          <target state="translated">用来作为方法输入的IPv4地址的文本表示形式有以下几种。</target>
        </trans-unit>
        <trans-unit id="7b4628af40961c1f376a18d8c40b6de5d38b2404" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv6 address used as input to methods takes one of the following forms:</source>
          <target state="translated">作为方法输入的IPv6地址的文字表示有以下几种形式。</target>
        </trans-unit>
        <trans-unit id="8c4d1dd6105f0bc77857401185e81ff007acd88e" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv6 scoped addresses</source>
          <target state="translated">IPv6范围内地址的文字表示</target>
        </trans-unit>
        <trans-unit id="fc7e4006758ef1304dbc8a17ff24569b5872cba2" translate="yes" xml:space="preserve">
          <source>Thai Buddhist leap years occur exactly in line with ISO leap years. This method does not validate the year passed in, and only has a well-defined result for years in the supported range.</source>
          <target state="translated">泰国佛教的闰年与ISO的闰年完全一致。本方法不验证传入的年份,只对支持范围内的年份有一个明确的结果。</target>
        </trans-unit>
        <trans-unit id="a3a88c31fc847e5975ca0d481465a31d6c2afb88" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology</source>
          <target state="translated">ThaiBuddhistChronology</target>
        </trans-unit>
        <trans-unit id="9f4e098c159feb8a1aaa3489340db7b582b8a923" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.date()</source>
          <target state="translated">ThaiBuddhistChronology.date()</target>
        </trans-unit>
        <trans-unit id="81a9c9b5b80bdfdae92d38adf091b7f3c1052eff" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateEpochDay()</source>
          <target state="translated">ThaiBuddhistChronology.dateEpochDay()</target>
        </trans-unit>
        <trans-unit id="23605069d3ce7143eb2a0a9211ed2c62103e6714" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateNow()</source>
          <target state="translated">ThaiBuddhistChronology.dateNow()</target>
        </trans-unit>
        <trans-unit id="af7b1ba8e6be27d0b854cb3a4d57c40d2446899f" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateYearDay()</source>
          <target state="translated">ThaiBuddhistChronology.dateYearDay()</target>
        </trans-unit>
        <trans-unit id="93910146fe36db4c0613d18ce6c1f9117ddaf7c2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.eraOf()</source>
          <target state="translated">ThaiBuddhistChronology.eraOf()</target>
        </trans-unit>
        <trans-unit id="9cdaba971e2dea5eb16dff0e2ef133360ef742de" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.eras()</source>
          <target state="translated">ThaiBuddhistChronology.eras()</target>
        </trans-unit>
        <trans-unit id="8e2878dd01a7e76600e403a321b5ac1650f4749c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getCalendarType()</source>
          <target state="translated">ThaiBuddhistChronology.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="5951fdcb7eaad658dd8f305149f76d4e28ab97cc" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getId()</source>
          <target state="translated">ThaiBuddhistChronology.getId()</target>
        </trans-unit>
        <trans-unit id="5dc3d69674033a15206befd7f6f1f0bd82e1f586" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.isLeapYear()</source>
          <target state="translated">ThaiBuddhistChronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="0ca9e1ad57b9dc845e3c7a8290592d23191a4c7c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.localDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="62c58c7a6de0785fc1963f4cdc3f687a137b9c8a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.prolepticYear()</source>
          <target state="translated">ThaiBuddhistChronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="84dec28471d39425c7517074060ef484dc960f5b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.range()</source>
          <target state="translated">ThaiBuddhistChronology.range()</target>
        </trans-unit>
        <trans-unit id="6f1b85d9c539b822fc2c329e721c9f10d3615fda" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.resolveDate()</source>
          <target state="translated">ThaiBuddhistChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="ef04f245e01dd1ed7ca48833a62e0cf965f8b9c8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.zonedDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.zonedDateTime()</target>
        </trans-unit>
        <trans-unit id="56cacb065b48fc5b20d838fbbe8bde43dbb623ac" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate</source>
          <target state="translated">ThaiBuddhistDate</target>
        </trans-unit>
        <trans-unit id="db18fff8c5f1eba899d8e2fec3b841757b2c64a3" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.atTime()</source>
          <target state="translated">ThaiBuddhistDate.atTime()</target>
        </trans-unit>
        <trans-unit id="9d6dc83ae18f9c046ce1ca0c1c1858d808569894" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.equals()</source>
          <target state="translated">ThaiBuddhistDate.equals()</target>
        </trans-unit>
        <trans-unit id="a1d0a76834da9825dbe7a22b7df411265b938345" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.from()</source>
          <target state="translated">ThaiBuddhistDate.from()</target>
        </trans-unit>
        <trans-unit id="631ff9458cac35099e69a03f2c39b78d3177d43d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getChronology()</source>
          <target state="translated">ThaiBuddhistDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="867efbd62bb34492da2f93784ae9940be543f6e8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getEra()</source>
          <target state="translated">ThaiBuddhistDate.getEra()</target>
        </trans-unit>
        <trans-unit id="b20965a16ab7d753daa15fdd1445726a4b4bc735" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getLong()</source>
          <target state="translated">ThaiBuddhistDate.getLong()</target>
        </trans-unit>
        <trans-unit id="1d08e48b0f31e7d132dcf2513888d58482f93533" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.hashCode()</source>
          <target state="translated">ThaiBuddhistDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="05c327da97b723029b77d71ab87e5769aa49376d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.lengthOfMonth()</source>
          <target state="translated">ThaiBuddhistDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="83339f429fc8d1032f157bfa1a6f48584818ee22" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.minus()</source>
          <target state="translated">ThaiBuddhistDate.minus()</target>
        </trans-unit>
        <trans-unit id="1772e94bfa441b9d316fb8029d2e0a2880c086e9" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.now()</source>
          <target state="translated">ThaiBuddhistDate.now()</target>
        </trans-unit>
        <trans-unit id="eee511f518f709d927b64f0cf053d2bc3abdf547" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.of()</source>
          <target state="translated">ThaiBuddhistDate.of()</target>
        </trans-unit>
        <trans-unit id="6e5182152bdca111eee82cfccedeccac50e6be2b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.plus()</source>
          <target state="translated">ThaiBuddhistDate.plus()</target>
        </trans-unit>
        <trans-unit id="3caf1e8127398daabc0daecbc7a3899bc28bf097" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.range()</source>
          <target state="translated">ThaiBuddhistDate.range()</target>
        </trans-unit>
        <trans-unit id="c9251bd315b835c130709c2bd5ad364ffcd087a2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toEpochDay()</source>
          <target state="translated">ThaiBuddhistDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="e14e21c8865db3adeb700749d14718da3c6d5c12" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toString()</source>
          <target state="translated">ThaiBuddhistDate.toString()</target>
        </trans-unit>
        <trans-unit id="b5d685fb3d918cd886b757988fe0097b71da0c52" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.until()</source>
          <target state="translated">ThaiBuddhistDate.until()</target>
        </trans-unit>
        <trans-unit id="0891bb4c3ac498e3de588a3b988abfe28bd45b3a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.with()</source>
          <target state="translated">ThaiBuddhistDate.with()</target>
        </trans-unit>
        <trans-unit id="0c6f18d03a0410128636e15c4276fb431889de55" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra</source>
          <target state="translated">ThaiBuddhistEra</target>
        </trans-unit>
        <trans-unit id="1e44ae46b9f83afcc5d0dd91bd2ba339e3ffe2e6" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.getValue()</source>
          <target state="translated">ThaiBuddhistEra.getValue()</target>
        </trans-unit>
        <trans-unit id="1f8b419c0c527a193ab6d599bd7ec00e696ce392" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.of()</source>
          <target state="translated">ThaiBuddhistEra.of()</target>
        </trans-unit>
        <trans-unit id="551e2de4fb34142d0eff47396c16cf09f916c035" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.valueOf()</source>
          <target state="translated">ThaiBuddhistEra.valueOf()</target>
        </trans-unit>
        <trans-unit id="5ec30eac149daa0ab70fa50291d1ae80950de39a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.values()</source>
          <target state="translated">ThaiBuddhistEra.values()</target>
        </trans-unit>
        <trans-unit id="8a430b0436fbafd13ff3f8f793fd3a22f31a2926" translate="yes" xml:space="preserve">
          <source>That</source>
          <target state="translated">That</target>
        </trans-unit>
        <trans-unit id="383a080e9d69d6f722f57039b9091b9f29317036" translate="yes" xml:space="preserve">
          <source>That a selection key indicates that its channel is ready for some operation is a hint, but not a guarantee, that such an operation can be performed by a thread without causing the thread to block. It is imperative that code that performs multiplexed I/O be written so as to ignore these hints when they prove to be incorrect.</source>
          <target state="translated">一个选择键表明它的通道已经准备好进行某些操作,这是一个提示,但不是保证,这样的操作可以由一个线程执行,而不会导致线程阻塞。在编写执行多路I/O的代码时,当这些提示被证明是不正确的时候,必须要忽略这些提示。</target>
        </trans-unit>
        <trans-unit id="2e116fde30bfce6bc219f98a723200588db818f4" translate="yes" xml:space="preserve">
          <source>That a selection key's ready set indicates that its channel is ready for some operation category is a hint, but not a guarantee, that an operation in such a category may be performed by a thread without causing the thread to block. A ready set is most likely to be accurate immediately after the completion of a selection operation. It is likely to be made inaccurate by external events and by I/O operations that are invoked upon the corresponding channel.</source>
          <target state="translated">一个选择键的就绪集表示它的通道已经为某种操作类别做好了准备,这是一种提示,但不是保证,这种类别的操作可以由线程执行而不会导致线程阻塞。准备好的集合最有可能在选择操作完成后立即准确。它很可能因为外部事件和在相应通道上调用的I/O操作而变得不准确。</target>
        </trans-unit>
        <trans-unit id="afcead73a580f282a044b63d246784dd77d66756" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt;.</source>
          <target state="translated">即 &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="006efee9935d1d56869e21b1bac583a106240016" translate="yes" xml:space="preserve">
          <source>That this method returns &lt;code&gt;false&lt;/code&gt; does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte sequence without fixing on a particular charset.</source>
          <target state="translated">此方法返回 &lt;code&gt;false&lt;/code&gt; 并不意味着尚未解码任何字节。一些自动检测解码器能够在不固定特定字符集的情况下解码部分或全部输入字节序列。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="d28a162efe56d735c7f674ab51f90529f140fe99" translate="yes" xml:space="preserve">
          <source>The &quot;&amp;lt;hostname&amp;gt;&quot; is an ASCII representation of the hostname, which may contains A-labels. For example, a returned value of an pseudo hostname may look like:</source>
          <target state="translated">&amp;ldquo; &amp;lt;主机名&amp;gt;&amp;rdquo;是主机名的ASCII表示形式，其中可能包含A标签。例如，伪主机名的返回值可能类似于：</target>
        </trans-unit>
        <trans-unit id="761b12883375956b1fd5c3659aa381596b01fdaa" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">与该程序包中某些类一起使用的&amp;ldquo;并发&amp;rdquo;前缀是一种速记，表示与类似的&amp;ldquo;同步&amp;rdquo;类有所不同。例如， &lt;code&gt;java.util.Hashtable&lt;/code&gt; 和 &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; 已同步。但是&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;是&amp;ldquo;并发&amp;rdquo;。并发集合是线程安全的，但不受单个排除锁的约束。在ConcurrentHashMap的特定情况下，它安全地允许任意数量的并发读取以及可调数量的并发写入。当需要阻止通过单个锁对集合的所有访问时，&amp;ldquo;同步&amp;rdquo;类可能很有用，但代价是可伸缩性较差。在期望多个线程访问一个公共集合的其他情况下，通常最好使用&amp;ldquo;并发&amp;rdquo;版本。当未共享的集合或仅在持有其他锁时才可访问的集合时，不同步的集合是更可取的。</target>
        </trans-unit>
        <trans-unit id="5c92ed0ed7f44357d29a0d93b7d5e34400a5966a" translate="yes" xml:space="preserve">
          <source>The &quot;class&quot; attribute is used to specify the target of a static method or constructor explicitly; its value being the fully qualified name of the class.</source>
          <target state="translated">&quot;类 &quot;属性用于显式指定静态方法或构造函数的目标;其值是类的全称。</target>
        </trans-unit>
        <trans-unit id="99b714dc607d2a32a9e5ae18a28845a9ad7f9870" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; algorithms contained in this class, that is, the algorithms that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the collection does not support the appropriate mutation primitive(s), such as the &lt;code&gt;set&lt;/code&gt; method. These algorithms may, but are not required to, throw this exception if an invocation would have no effect on the collection. For example, invoking the &lt;code&gt;sort&lt;/code&gt; method on an unmodifiable list that is already sorted may or may not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">如果该集合不支持适当的突变原语（例如 &lt;code&gt;set&lt;/code&gt; 方法），则指定该类中包含的&amp;ldquo;破坏性&amp;rdquo;算法，即修改其操作的集合的算法，以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。如果调用对集合没有影响，则这些算法可能会（但不是必需）引发此异常。例如，在已排序的不可修改列表上调用 &lt;code&gt;sort&lt;/code&gt; 方法可能会或可能不会抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3799b0d99e9f9ae8ba59928fbe544b7e50ada4f" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this collection does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the collection. For example, invoking the &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll(Collection)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable collection may, but is not required to, throw the exception if the collection to be added is empty.</source>
          <target state="translated">如果此集合不支持该操作，则指定该接口中包含的&amp;ldquo;破坏性&amp;rdquo;方法，即修改其操作的集合的方法，以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。在这种情况下，如果调用对集合没有影响，则这些方法可能会（但不是必需）引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。例如，如果要添加的集合为空，则对一个不可修改的集合调用&lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll(Collection)&lt;/code&gt; &lt;/a&gt;方法可能（但并非必须）引发异常。</target>
        </trans-unit>
        <trans-unit id="523d08144b8e0cc24e5d2b715228e9abf2df6508" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">如果此映射不支持该操作，则指定该接口中包含的&amp;ldquo;破坏性&amp;rdquo;方法（即修改其操作的映射的方法）以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。在这种情况下，如果调用对地图没有影响，则这些方法可能会（但不是必需）引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。例如，如果要&amp;ldquo;叠加&amp;rdquo;映射的映射为空，则在但不可更改的映射上调用&lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;方法可能会（但并非必须）引发异常。</target>
        </trans-unit>
        <trans-unit id="eae4891e98416f7d88cd670a3c2c7ffcf50a66c3" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">专家 &quot;标志用于区分为专家用户设计的功能和为普通用户设计的功能。</target>
        </trans-unit>
        <trans-unit id="53de2781ee0e7ac40066ecc66400a0280e82b151" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">专家 &quot;标志用于区分那些为专家用户设计的功能和为普通用户设计的功能。</target>
        </trans-unit>
        <trans-unit id="96db2ea0542daeff5fb771b914acf904d52fda1e" translate="yes" xml:space="preserve">
          <source>The &quot;global&quot; Logger object is provided as a convenience to developers who are making casual use of the Logging package. Developers who are making serious use of the logging package (for example in products) should create and use their own Logger objects, with appropriate names, so that logging can be controlled on a suitable per-Logger granularity. Developers also need to keep a strong reference to their Logger objects to prevent them from being garbage collected.</source>
          <target state="translated">全局 &quot;日志记录器对象是为了方便那些随意使用日志记录包的开发人员而提供的。认真使用记录包的开发人员(例如在产品中)应该创建和使用自己的记录器对象,并使用适当的名称,这样就可以在每个记录器的适当粒度上控制记录。开发者还需要对他们的Logger对象保持一个强有力的引用,以防止它们被垃圾收集。</target>
        </trans-unit>
        <trans-unit id="3c8addeccbf7f5e85580dfc2361b06f37794364c" translate="yes" xml:space="preserve">
          <source>The &quot;hidden&quot; flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.</source>
          <target state="translated">&quot;隐藏 &quot;标志用于识别只供工具使用的特征,这些特征不应暴露在人类面前。</target>
        </trans-unit>
        <trans-unit id="a488d2b6590253541ee7f92e1ac3dd1986e06a1b" translate="yes" xml:space="preserve">
          <source>The &quot;host_name&quot; type representing of a DNS hostname (see &lt;a href=&quot;snihostname&quot;&gt;&lt;code&gt;SNIHostName&lt;/code&gt;&lt;/a&gt;) in a Server Name Indication (SNI) extension.</source>
          <target state="translated">服务器名称指示（SNI）扩展名中代表DNS主机名的&amp;ldquo; host_name&amp;rdquo;类型（请参阅&lt;a href=&quot;snihostname&quot;&gt; &lt;code&gt;SNIHostName&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d5ee252810cba0d533bf7f76c20a67b32a87cd3a" translate="yes" xml:space="preserve">
          <source>The &quot;listen&quot; action is only meaningful when used with &quot;localhost&quot; and means the ability to bind to a specified port. The &quot;resolve&quot; action is implied when any of the other actions are present. The action &quot;resolve&quot; refers to host/ip name service lookups.</source>
          <target state="translated">&quot;listen &quot;操作只有在与 &quot;localhost &quot;一起使用时才有意义,它意味着绑定到指定端口的能力。当其他任何一个动作存在时,&quot;resolve &quot;动作都是隐含的。动作 &quot;resolve &quot;指的是主机/ip名服务查找。</target>
        </trans-unit>
        <trans-unit id="34537c0a9b18a5b97ca9dba2fc6ccb6e06339c2a" translate="yes" xml:space="preserve">
          <source>The &quot;no offset&quot; text controls what text is printed when the total amount of the offset fields to be output is zero. Example values would be 'Z', '+00:00', 'UTC' or 'GMT'. Three formats are accepted for parsing UTC - the &quot;no offset&quot; text, and the plus and minus versions of zero defined by the pattern.</source>
          <target state="translated">无偏移 &quot;文本控制当要输出的偏移字段总数为零时打印什么文本。示例值是'Z'、'+00:00'、'UTC'或'GMT'。解析UTC有三种格式--&quot;无偏移 &quot;文本,以及由模式定义的零的正负版本。</target>
        </trans-unit>
        <trans-unit id="0039eb18c439a8fe0ded6f996e270014f44833ff" translate="yes" xml:space="preserve">
          <source>The &quot;object&quot; tag denotes an &lt;em&gt;expression&lt;/em&gt; whose value is to be used as the argument to the enclosing element.</source>
          <target state="translated">&amp;ldquo;对象&amp;rdquo;标签表示一个&lt;em&gt;表达式，&lt;/em&gt;其值将用作封闭元素的参数。</target>
        </trans-unit>
        <trans-unit id="8b7ed3f19fc82e3673167bf96934264dcec09b2d" translate="yes" xml:space="preserve">
          <source>The &quot;preferred&quot; flag is used to identify features that are particularly important for presenting to humans.</source>
          <target state="translated">&quot;首选 &quot;标志是用来识别那些对呈现给人类特别重要的特征。</target>
        </trans-unit>
        <trans-unit id="e52ae4af20949258e854e3591de7eb4159275419" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use. In Beans 1.0 the sole requirement is that if a listener catches a PropertyChangeEvent and then fires a PropertyChangeEvent of its own, then it should make sure that it propagates the propagationId field from its incoming event to its outgoing event.</source>
          <target state="translated">&quot;propagationId &quot;字段是为了将来使用而保留的。在Beans 1.0中,唯一的要求是,如果一个监听器捕获了一个PropertyChangeEvent,然后发射了自己的PropertyChangeEvent,那么它应该确保将传播Id字段从它的传入事件传播到它的传出事件。</target>
        </trans-unit>
        <trans-unit id="448f901e9880ca6676ec228309500276a588387c" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream. This stream is already open and ready to accept output data.</source>
          <target state="translated">标准 &quot;错误输出流。该流已经打开并准备接受输出数据。</target>
        </trans-unit>
        <trans-unit id="9b0fa7082ba453aa32dcb16ac03daf1ba9c65c4f" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream. This stream is already open and ready to supply input data. Typically this stream corresponds to keyboard input or another input source specified by the host environment or user.</source>
          <target state="translated">标准 &quot;输入流。这个流已经打开并准备好提供输入数据。通常这个流对应键盘输入或主机环境或用户指定的其他输入源。</target>
        </trans-unit>
        <trans-unit id="8d594a48963bd0f322bbb684e19620412a6932c8" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream. This stream is already open and ready to accept output data. Typically this stream corresponds to display output or another output destination specified by the host environment or user.</source>
          <target state="translated">标准 &quot;输出流。该流已经打开并准备接受输出数据。通常情况下,该流对应于显示输出或主机环境或用户指定的其他输出目的地。</target>
        </trans-unit>
        <trans-unit id="542ceac497d888731f108f54134d87b43e6e1e87" translate="yes" xml:space="preserve">
          <source>The &quot;void&quot; tag denotes a &lt;em&gt;statement&lt;/em&gt; which will be executed, but whose result will not be used as an argument to the enclosing method.</source>
          <target state="translated">&amp;ldquo; void&amp;rdquo;标记表示将要执行的&lt;em&gt;语句&lt;/em&gt;，但是其结果将不会用作封闭方法的参数。</target>
        </trans-unit>
        <trans-unit id="5413cb19ad08d0c83ec83a25d94198413a07db11" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="translated">前面显示的&amp;ldquo;窗口小部件&amp;rdquo;示例显示了减少操作如何与其他操作结合使用，以批量操作代替循环。如果 &lt;code&gt;widgets&lt;/code&gt; 是具有 &lt;code&gt;getWeight&lt;/code&gt; 方法的 &lt;code&gt;Widget&lt;/code&gt; 对象的集合，则可以使用以下命令找到最重的小部件：</target>
        </trans-unit>
        <trans-unit id="dd51a31f2fb3c35a53c40953e7b137610fa538ba" translate="yes" xml:space="preserve">
          <source>The '*' and '-' may only be specified in the final segment of a path and must be the only character in that segment. Any query or fragment components of the url are ignored when constructing URLPermissions.</source>
          <target state="translated">'*'和'-'只能在路径的最后一段指定,并且必须是该段中唯一的字符。当构建URLPermissions时,url的任何查询或片段组件都会被忽略。</target>
        </trans-unit>
        <trans-unit id="c3dd2c4f47449a4544b3de80cb83d745f1361cb0" translate="yes" xml:space="preserve">
          <source>The '*' character refers to all resources in the same &quot;directory&quot; - in other words all resources with the same number of path components, and which only differ in the final path component, represented by the '*'.</source>
          <target state="translated">'*'字符指的是同一 &quot;目录 &quot;中的所有资源--换句话说,所有资源的路径组件数量相同,只是最后的路径组件不同,用'*'表示。</target>
        </trans-unit>
        <trans-unit id="5b1a4b786fce275a14542316145f1ffc6265c6f2" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (eg. http://www.oracle.com/a/b/c/d/e.html matches this example).</source>
          <target state="translated">'-'字符指的是前面路径下面的所有资源(例如,http://www.oracle.com/a/b/c/d/e.html 与本例匹配)。</target>
        </trans-unit>
        <trans-unit id="2d3d7549dcf0d83ed68ff060f89f99b12e4561e6" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">该组在上一次匹配期间捕获的（可能为空）子序列；如果该组未能匹配输入的一部分，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f610b577e0d0c1aa68c7de09df91b0c3b1792629" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the named group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">命名组在上一次匹配期间捕获的（可能为空）子序列；如果该组未能匹配输入的一部分，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b452ff3f7cd68722baf21b3005843847575b9ad" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence matched by the previous match, in string form</source>
          <target state="translated">前一个匹配项所匹配的(可能是空的)子序列,以字符串的形式出现。</target>
        </trans-unit>
        <trans-unit id="db8c98f744455c4ea33c3652417a8d4d6babb38a" translate="yes" xml:space="preserve">
          <source>The +90 direction was chosen because simple finishing on the long edge is the same edge whether portrait or landscape.</source>
          <target state="translated">之所以选择+90的方向,是因为在长边上进行简单的修饰,无论纵向还是横向都是一样的边。</target>
        </trans-unit>
        <trans-unit id="dc75f82aa609831b4e45d1280715e643c1e08fde" translate="yes" xml:space="preserve">
          <source>The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID.</source>
          <target state="translated">14位的时钟序列值由该UUID的时钟序列字段构造而成。时钟序列字段用于保证基于时间的UUID的时间唯一性。</target>
        </trans-unit>
        <trans-unit id="9244f80a9a7b954470832171ad15b5298b7c6027" translate="yes" xml:space="preserve">
          <source>The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness.</source>
          <target state="translated">48位的节点值由该UUID的节点字段构造而成。该字段旨在保存生成该UUID的机器的IEEE 802地址,以保证空间上的唯一性。</target>
        </trans-unit>
        <trans-unit id="cf62656bdd2342ac213b17c11186efa9fdef0697" translate="yes" xml:space="preserve">
          <source>The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this &lt;code&gt;UUID&lt;/code&gt;. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC.</source>
          <target state="translated">60位时间戳值是根据此 &lt;code&gt;UUID&lt;/code&gt; 的time_low，time_mid和time_hi字段构造的。自1582年10月15日午夜以来，所得的时间戳以100纳秒为单位进行测量。</target>
        </trans-unit>
        <trans-unit id="5148f442500cb2e7c77d69481afbed4f322b7043" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8种基本Java类型（ &lt;code&gt;boolean&lt;/code&gt; ， &lt;code&gt;byte&lt;/code&gt; ， &lt;code&gt;short&lt;/code&gt; ， &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;double&lt;/code&gt; ， &lt;code&gt;char&lt;/code&gt; ）被映射到相应的盒装类型从 &lt;code&gt;java.lang&lt;/code&gt; 中，即 &lt;code&gt;Boolean&lt;/code&gt; ， &lt;code&gt;Byte&lt;/code&gt; 等的开放类型是相应的 &lt;code&gt;SimpleType&lt;/code&gt; 的。因此，&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;SimpleType.LONG&lt;/code&gt; ，&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;java.lang.Long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="190f5e4e1c44c5bff240e5e10541bfc811769ca9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#floatdFlags&quot;&gt;default behavior&lt;/a&gt; when no flags are given is the same as for Float and Double.</source>
          <target state="translated">没有给出标志时的&lt;a href=&quot;#floatdFlags&quot;&gt;默认行为&lt;/a&gt;与Float和Double相同。</target>
        </trans-unit>
        <trans-unit id="bc51dcb232ef7f25e91fae041a5e61191866e752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface for logging within the &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">唯一标识用于在 &lt;code&gt;MBeanServer&lt;/code&gt; 中记录的管理接口的&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;是：</target>
        </trans-unit>
        <trans-unit id="9a85bd907f559c9802535fa51f23ef29d3d95c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">的&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类定义了&lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;方法构造一个&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;通过转换由表示的抽象路径 &lt;code&gt;java.io.File&lt;/code&gt; 对象。生成的 &lt;code&gt;Path&lt;/code&gt; 可用于与 &lt;code&gt;File&lt;/code&gt; 对象在同一文件上进行操作。的 &lt;code&gt;Path&lt;/code&gt; 规范提供了关于所述另外的信息&lt;a href=&quot;path#interop&quot;&gt;互操作性&lt;/a&gt;之间 &lt;code&gt;Path&lt;/code&gt; 和 &lt;code&gt;java.io.File&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="d5be3abde35d6105d79ad74bc634371ab99a05a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt; 返回的&lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="134ad8107ae31bdb06239d777265c61dbef39bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../java/util/locale#toString--&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/locale#toString--&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;返回的此 &lt;code&gt;MBeanInfo&lt;/code&gt; ， &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 等中的描述的&lt;a href=&quot;../../java/util/locale&quot;&gt;语言环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1ec0c7d3ac150a1e7303b1353c79b5a3e266162" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">通道套接字的&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;与平台（可能还有配置）有关，因此未指定。的&lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;允许打开一个数据报通道时将被选择的协议族，并且应该被用于意图用于互联网协议多播数据报开放通道。</target>
        </trans-unit>
        <trans-unit id="17b844a7bf6569487aadb2b841362d26db2df769" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">该&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;选项应该先启用&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;插座。这是允许组中的多个成员绑定到同一地址所必需的。</target>
        </trans-unit>
        <trans-unit id="8cce448bf1e954b21943bc931e3a7ed24ae93fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class provide access to a range of information useful for localizing an application. This includes the language and region, such as &quot;en-GB&quot; for English as used in Great Britain.</source>
          <target state="translated">的&lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;类提供访问的范围内的用于定位的应用有用的信息。这包括语言和地区，例如英国使用的英语&amp;ldquo; en-GB&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f7bcc13ad5cb486576996f847be7d97aa0930b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法还可以用于读或更新的所有者。在这种情况下，所有者属性由名称 &lt;code&gt;&quot;owner&quot;&lt;/code&gt; 标识，并且该属性的值是&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c2baff7408e5ad54d49ec829c03c8add1ffdf24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用以读取任何这些属性的&lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e42fb0b1ed94cf5c272dbff37a665442f101c72a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以被用来读取这些属性，或通过任何定义的属性的&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;仿佛通过调用&lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="cc5e5360eedff08a35975f0e9a9480502f02b841" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以被用来读取这些属性，或通过任何定义的属性的&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;仿佛通过调用&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="52e7fac281b42fd7fe7452e241108ef2d5dcf7d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用来读取或ACL所有者属性&lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="1bfa9ca3b01e08a940097655d13c2a85724d95de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用来更新ACL或所有者属性&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="c435d3e3c46a4b9a0beff2ad2d5cec4c6ab7aa83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于更新该文件的上次修改时间，最后访问时间或者通过定义创建时间属性&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。它也可以用于更新DOS属性，就像分别调用&lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="eda9c31c1c567716843eb27dfd24c5d17ae4a65a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于更新该文件的上次修改时间，最后访问时间或者通过定义创建时间属性&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。它也可以用来更新权限，所有者或组所有者，就像分别调用&lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="a691ef8b98d41f4420b4aefb065db958be6429d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用来更新文件的最后修改时间，最后访问时间或者通过调用创建时间的属性，如果&lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="580a6d6beeb8ffe4eb2d62290bc22802acbffaee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">该&lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; &lt;/a&gt;方法可被用来测试一个具体&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;支持用户定义的属性的存储。</target>
        </trans-unit>
        <trans-unit id="0ee89249aaebf2f1fc5eeda71bacdd03058fa195" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get--&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">所述&lt;a href=&quot;../function/supplier#get--&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;方法将在供应商被调用不超过一次，并且仅流管道正式动工的终端操作之后。</target>
        </trans-unit>
        <trans-unit id="142dbbdea20e0ff6bd9b8a5f8d0a573aae47a0f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mappedbytebuffer&quot;&gt;&lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; returned by this method will have a position of zero and a limit and capacity of &lt;code&gt;size&lt;/code&gt;; its mark will be undefined. The buffer and the mapping that it represents will remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">此方法返回的&lt;a href=&quot;../mappedbytebuffer&quot;&gt; &lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;的位置为零， &lt;code&gt;size&lt;/code&gt; 的限制和容量；其标记将是不确定的。缓冲区及其表示的映射将保持有效，直到缓冲区本身被垃圾回收为止。</target>
        </trans-unit>
        <trans-unit id="48db05c222075f07f78662388844eeb5f6f1bc01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返回通道的&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将始终等于由&lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;方法返回的此对象的文件指针偏移量。无论是显式更改还是通过读取或写入字节来更改此对象的文件指针偏移量，都会更改通道的位置，反之亦然。通过此对象更改文件的长度将更改通过文件通道看到的长度，反之亦然。</target>
        </trans-unit>
        <trans-unit id="1b7577f54ca9ebadbf67e174ed9fc74807c65a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;是在文件属性包括文件权限操作类中定义的方法。当需要对文件权限进行更精细的操作时，可以使用此方法。</target>
        </trans-unit>
        <trans-unit id="3185bf54751cfa5bf1ebba53d67faccb98bf6516" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; &lt;/a&gt;方法提供了一种替代方法，以在临时文件目录的空文件。用该方法创建的文件可能对用此方法创建的文件具有更严格的访问权限，因此可能更适合对安全性要求较高的应用程序。</target>
        </trans-unit>
        <trans-unit id="d1cd2dbce708c6940c8cf8ba35f1bba1e58ac0ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; &lt;/a&gt;包定义接口和类Java虚拟机访问的文件，文件属性和文件系统。可以使用该API来克服 &lt;code&gt;java.io.File&lt;/code&gt; 类的许多限制。该&lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;方法可以被用于获得&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;，使用由A表示的抽象路径 &lt;code&gt;File&lt;/code&gt; 对象查找文件。生成的 &lt;code&gt;Path&lt;/code&gt; 可以与&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;类一起使用，以提供对其他文件操作，文件属性和I / O异常的更有效，更广泛的访问，以帮助在文件操作失败时诊断错误。</target>
        </trans-unit>
        <trans-unit id="6e1a4cbb02bf6c03d5a44b8766a6b75e3bd7ef2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">该&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt;是一个简单的递增的天数，其中0天1970-01-01（ISO）。此定义对于所有年代都是相同的，从而可以进行转换。</target>
        </trans-unit>
        <trans-unit id="5e38b37aeff6c0bffbe4d4c7f1f5d153a7812a9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time. This field is used for both formatting and parsing.</source>
          <target state="translated">该&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;用于计算日期-时间域和时间的即时实例。此字段用于格式化和解析。</target>
        </trans-unit>
        <trans-unit id="bde57531a30d3dd5f7c37db7a69c3a1d61935c91" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。这不是ISO-8601标准的一部分。解析区分大小写。</target>
        </trans-unit>
        <trans-unit id="d3169944a88bbb1bad97a1a30cd73363ef99816c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">没有冒号或秒的&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。零偏移量使用&amp;ldquo; GMT&amp;rdquo;。不处理北美区域名称和军事区域名称。</target>
        </trans-unit>
        <trans-unit id="ccd8df3518a4d9b943302ee23512831c55573aa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">没有冒号的&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="ef469acd11a9914f386735c8a07ac2ef3e1fdbdb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。</target>
        </trans-unit>
        <trans-unit id="7eb4562aec376d8a60cf8842edb8d8443f0a1248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="fbbeb22d9b7e39547534480fe8598ea8d98e6e22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; class serves as a useful superclass for defining locks and other synchronizers that rely on queuing blocked threads. The &lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt;&lt;/a&gt; class provides the same functionality but extends support to 64 bits of synchronization state. Both extend class &lt;a href=&quot;abstractownablesynchronizer&quot;&gt;&lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt;&lt;/a&gt;, a simple class that helps record the thread currently holding exclusive synchronization. The &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; class provides lower-level blocking and unblocking support that is useful for those developers implementing their own customized lock classes.</source>
          <target state="translated">该&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; &lt;/a&gt;类用作定义锁以及依赖于排队阻塞线程的其他同步器有用的超类。所述&lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt; &lt;/a&gt;类提供相同的功能，而是延伸到同步状态的64位的支持。两者都扩展了类&lt;a href=&quot;abstractownablesynchronizer&quot;&gt; &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; &lt;/a&gt;，这是一个简单的类，可以帮助记录当前正在进行独占同步的线程。该&lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; &lt;/a&gt;类提供了更低级别的阻塞和解除阻塞支持，是为那些实现自己的定制锁类的开发人员非常有用。</target>
        </trans-unit>
        <trans-unit id="cfef7de48d524821a8ec7c9579af151f13cdc049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">所述&lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;方法确定由指定的许可指示的访问请求是否应当被准许或拒绝。下面会出现一个示例调用。在此示例中， &lt;code&gt;checkPermission&lt;/code&gt; 将确定是否授予对&amp;ldquo; / temp&amp;rdquo;目录中名为&amp;ldquo; testFile&amp;rdquo;的文件的&amp;ldquo;读取&amp;rdquo;访问权限。</target>
        </trans-unit>
        <trans-unit id="7af739ac4d097cac2c6f5ee5bae27b0834134652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">该&lt;a href=&quot;aclentry#flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;组件是一组&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;指示条目如何继承和传播</target>
        </trans-unit>
        <trans-unit id="69c9b8c45ab29ebc4b01d4e76c2c7f6f5bb01e81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">的&lt;a href=&quot;aclentry#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;组件是一组&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4243500d113a1e8dca92fc8e0626cf084b1c7810" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#principal--&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">的&lt;a href=&quot;aclentry#principal--&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;成分，有时也被称为&amp;ldquo;谁&amp;rdquo;组成部分，是一个&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;对应身份的条目授予或拒绝访问</target>
        </trans-unit>
        <trans-unit id="f2f5e00fa6ae64b393f6e7d80594412fecc00383" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#type--&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">该&lt;a href=&quot;aclentry#type--&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;组件确定如果该条目授予或拒绝访问。</target>
        </trans-unit>
        <trans-unit id="f7f010146e9231a02191ac41817da03a8fd8aa8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; &lt;/a&gt;类定义的方法来读取和写入的访问控制列表（ACL）文件属性。此文件属性视图使用的ACL模型基于&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：网络文件系统（NFS）版本4协议&lt;/i&gt;&lt;/a&gt;定义的模型。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="d757646f4f57b621bdd66e46c7cc777a0dd7b6f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">所述&lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;的方法支持元件上的多个相同类型的注释。如果任一方法的参数都是可重复的注释类型（JLS 9.6），则该方法将&amp;ldquo;浏览&amp;rdquo;容器注释（JLS 9.7）（如果存在），并返回容器内部的所有注释。可以在编译时生成容器注释，以包装参数类型的多个注释。</target>
        </trans-unit>
        <trans-unit id="5538279924c592259bec4c32883911ad4ee9986c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">该&lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法用于启动一个&lt;em&gt;有序地关闭&lt;/em&gt;一组。顺序关闭会将该组标记为关闭；进一步尝试构造绑定到组的通道将引发&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;。可以使用&lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;方法测试是否关闭组。一旦关闭，该组&lt;em&gt;将&lt;/em&gt;在关闭所有绑定到该组的异步通道，所有正在执行的完成处理程序运行完毕并释放该组使用的资源时终止。没有尝试停止或中断正在执行完成处理程序的线程。该&lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; &lt;/a&gt;方法用于测试如果组已经终止，并且&lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;在组终止之前，可以使用 awaitTermination方法进行阻止。</target>
        </trans-unit>
        <trans-unit id="b514369062ab3b9e80aad31b822e6bf912e55f38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; &lt;/a&gt;方法可用于发起&lt;em&gt;有力关闭&lt;/em&gt;该组。除了通过有序关闭执行的操作外， &lt;code&gt;shutdownNow&lt;/code&gt; 方法还会关闭组中所有打开的通道，就像通过调用&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="b0ba63e1a3f588adc27a9ff386437373fd12a3c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">此类定义的&lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法允许在启动读取或写入操作时指定超时。如果在操作完成之前已超时，则操作将以&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt;异常完成。超时可能会使通道或基础连接处于不一致状态。如果实现无法保证尚未从通道读取字节，则它将通道置于实现特定的&lt;em&gt;错误状态&lt;/em&gt;。随后尝试启动 &lt;code&gt;read&lt;/code&gt; 操作会引发未指定的运行时异常。同样，如果 &lt;code&gt;write&lt;/code&gt; 操作超时，实现无法保证未将字节写入通道，然后进一步尝试 &lt;code&gt;write&lt;/code&gt; 通道会引发未指定的运行时异常。当超时过去时，则不会定义I / O操作的&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;或缓冲区序列的状态。应该丢弃缓冲区，或者至少要小心确保在通道保持打开状态时不访问缓冲区。所有接受超时参数的方法都将其值视为小于或等于零，以表示I / O操作不会超时。</target>
        </trans-unit>
        <trans-unit id="ff23faa6b9710e7149b05774884ffc2d0c84dc55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements, which is not supported for ordinary arrays.</source>
          <target state="translated">的&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; &lt;/a&gt;类进一步扩展到这些类型的数组原子操作的支持。这些类还为它们的数组元素提供了 &lt;code&gt;volatile&lt;/code&gt; 访问语义，而普通数组不支持这些语义。</target>
        </trans-unit>
        <trans-unit id="154013ac578d40011c0e881853d2d1cf4c7084e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicmarkablereference&quot;&gt;&lt;code&gt;AtomicMarkableReference&lt;/code&gt;&lt;/a&gt; class associates a single boolean with a reference. For example, this bit might be used inside a data structure to mean that the object being referenced has logically been deleted. The &lt;a href=&quot;atomicstampedreference&quot;&gt;&lt;code&gt;AtomicStampedReference&lt;/code&gt;&lt;/a&gt; class associates an integer value with a reference. This may be used for example, to represent version numbers corresponding to series of updates.</source>
          <target state="translated">所述&lt;a href=&quot;atomicmarkablereference&quot;&gt; &lt;code&gt;AtomicMarkableReference&lt;/code&gt; &lt;/a&gt;类与引用关联的单个布尔值。例如，此位可能在数据结构内使用，表示被引用的对象在逻辑上已被删除。所述&lt;a href=&quot;atomicstampedreference&quot;&gt; &lt;code&gt;AtomicStampedReference&lt;/code&gt; &lt;/a&gt;类与引用关联的整数值。例如，这可以用于表示与一系列更新相对应的版本号。</target>
        </trans-unit>
        <trans-unit id="4e0bb33867e93c786974aecb9c28853d1fb48aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; is required to be supported and therefore the set contains at least one element, &quot;basic&quot;.</source>
          <target state="translated">所述&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;需要被支持，因此该组包含的至少一种元素，&amp;ldquo;基本的&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="42fec1b7f85b596fee4ca045a99c27b6e05ae27f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; packages define print attributes, which describe the capabilities of a print service, specify the requirements of a print job, and track the progress of a print job.</source>
          <target state="translated">该&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute&lt;/code&gt; 中&lt;/a&gt;和&lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中的&lt;/a&gt;包定义打印属性，它描述了一个打印服务的能力，指定的打印作业的要求，并跟踪打印作业的进度。</target>
        </trans-unit>
        <trans-unit id="5ac6194267d0e25c2097930b8f5fbaf32e490bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and update a &lt;em&gt;basic&lt;/em&gt; set of file attributes that are common to many file systems.</source>
          <target state="translated">该&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;类定义的方法来读取和更新&lt;em&gt;基本&lt;/em&gt;集共有的许多文件系统文件属性。</target>
        </trans-unit>
        <trans-unit id="9008207e38a099728a1e599c9fd10ddfa22dae76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">所述&lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;方法可用于在工程符号指数的数，并且&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt;可用于舍入的方法 &lt;code&gt;BigDecimal&lt;/code&gt; 因此它具有的小数点后的数字已知数量。</target>
        </trans-unit>
        <trans-unit id="e2929b7aad495e34766a177c1e114f9cc3750748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blockingdeque&quot;&gt;&lt;code&gt;BlockingDeque&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BlockingQueue&lt;/code&gt; to support both FIFO and LIFO (stack-based) operations. Class &lt;a href=&quot;linkedblockingdeque&quot;&gt;&lt;code&gt;LinkedBlockingDeque&lt;/code&gt;&lt;/a&gt; provides an implementation.</source>
          <target state="translated">所述&lt;a href=&quot;blockingdeque&quot;&gt; &lt;code&gt;BlockingDeque&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;BlockingQueue&lt;/code&gt; 支持FIFO和LIFO（基于堆栈的）操作。类&lt;a href=&quot;linkedblockingdeque&quot;&gt; &lt;code&gt;LinkedBlockingDeque&lt;/code&gt; &lt;/a&gt;提供了一个实现。</target>
        </trans-unit>
        <trans-unit id="b2fd22bc1464c414a0571863354563eb9bb6d8fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;calendar#set-int-int-&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">该&lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;calendar#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;字段的独立处理和&lt;a href=&quot;#time_resolution&quot;&gt;为一天中的时间分辨率规则&lt;/a&gt;被应用。清除其中一个字段不会重置此 &lt;code&gt;Calendar&lt;/code&gt; 的一天中的小时值。使用&lt;a href=&quot;calendar#set-int-int-&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;重置小时值。</target>
        </trans-unit>
        <trans-unit id="f04591de46efc6d10158813651253c9ef9e12e5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">使用&lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;方法，应用程序可以在检查证书的吊销状态时指定 &lt;code&gt;CertPathBuilder&lt;/code&gt; 使用的其他特定于算法的参数和选项。这是一个示例，演示如何与PKIX算法一起使用：</target>
        </trans-unit>
        <trans-unit id="c2fe006c42d37a0e6b495c7077cf3ce1bbd6e97e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">使用&lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;方法，应用程序可以在检查证书的吊销状态时指定 &lt;code&gt;CertPathValidator&lt;/code&gt; 使用的其他特定于算法的参数和选项。这是一个示例，演示如何与PKIX算法一起使用：</target>
        </trans-unit>
        <trans-unit id="353391e89ff7caccf4fa0ecf1b6ada580292d90f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces.</source>
          <target state="translated">该&lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;接口是由其他几个接口扩展。</target>
        </trans-unit>
        <trans-unit id="13bd1e29b4330451ff38da9cb77e5dbd6672f0ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">的&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;工具类定义了支持的流类的互操作的静态方法 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 包与此包的信道的类。可以从&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;构造适当的通道，相反，可以从通道构造&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;。可以构造一个使用给定字符集的&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;来解码给定可读字节通道中的字节，相反，可以构造一个&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;来使用给定字符集将字符编码为字节并将其写入给定可写字节通道。</target>
        </trans-unit>
        <trans-unit id="0f057642b4bb486cc33d79cbc367d51cb24e2bda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class defines methods for creating coders for a given charset and for retrieving the various names associated with a charset. It also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine.</source>
          <target state="translated">该&lt;a href=&quot;charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;类定义创建一个给定的charset编码器和用于检索与字符集相关联的各种名称的方法。它还定义了静态方法，用于测试是否支持特定的字符集，按名称查找字符集实例，以及构造包含每个字符集的映射，该映射包含当前Java虚拟机中对其提供支持的每个字符集。</target>
        </trans-unit>
        <trans-unit id="a67cff32a8cc7c58f69e3c11acfe781fdb3c37d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;concurrentlinkedqueue&quot;&gt;&lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt;&lt;/a&gt; class supplies an efficient scalable thread-safe non-blocking FIFO queue. The &lt;a href=&quot;concurrentlinkeddeque&quot;&gt;&lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt;&lt;/a&gt; class is similar, but additionally supports the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">该&lt;a href=&quot;concurrentlinkedqueue&quot;&gt; &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; &lt;/a&gt;类用品的高效可扩展的线程安全的非阻塞FIFO队列。所述&lt;a href=&quot;concurrentlinkeddeque&quot;&gt; &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; &lt;/a&gt;类是类似的，但附加地支持&lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="8f05e709096b93b1da433f74acd77bc05bb25621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; interface describes condition variables that may be associated with Locks. These are similar in usage to the implicit monitors accessed using &lt;code&gt;Object.wait&lt;/code&gt;, but offer extended capabilities. In particular, multiple &lt;code&gt;Condition&lt;/code&gt; objects may be associated with a single &lt;code&gt;Lock&lt;/code&gt;. To avoid compatibility issues, the names of &lt;code&gt;Condition&lt;/code&gt; methods are different from the corresponding &lt;code&gt;Object&lt;/code&gt; versions.</source>
          <target state="translated">该&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;接口描述了可能会与锁有关条件变量。这些用法与使用 &lt;code&gt;Object.wait&lt;/code&gt; 访问的隐式监视器类似，但是提供了扩展功能。特别是，多个 &lt;code&gt;Condition&lt;/code&gt; 对象可以与一个 &lt;code&gt;Lock&lt;/code&gt; 关联。为避免兼容性问题， &lt;code&gt;Condition&lt;/code&gt; 方法的名称与相应的 &lt;code&gt;Object&lt;/code&gt; 版本不同。</target>
        </trans-unit>
        <trans-unit id="9e8041c88b3dcafc9b4f4c5eb63f4ac4c547288c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e9dd68445d5385bb05545d5acae99f43bf46af4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd9235cbf846fb05154c7fff0a0c527bea890016" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aeff022cca7462b1d24d181862f8642f26d64d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75e1a69d924196bb7f31b2df6ac058a6b61c95bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">所述&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;其中瞬间从转换&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;UTC&lt;/code&gt; 偏移。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="7bbd020b4b15b4b357c33b60139663bc5ab3a2b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式化重写年表。如果被覆盖，则日期时间值将在格式化之前转换为时间顺序。在解析过程中，日期时间值在返回之前先转换为时间顺序。</target>
        </trans-unit>
        <trans-unit id="c2be0f0e5c7bfb256821fc337fa24120b0dbdc22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; &lt;/a&gt;。DecimalStyle符号用于格式化和解析。</target>
        </trans-unit>
        <trans-unit id="65e1e451917eff1d1ca40b8cd181f08037d85fa5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖的区域设置。语言环境会影响格式和解析的某些方面。例如，&lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;提供了使用区域设置特定日期格式的格式化程序。</target>
        </trans-unit>
        <trans-unit id="ac11e4705d1cea60755dd413e0d7e05004a9574f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;参数允许设置将要解决的解决开始前被过滤领域。例如，如果格式化程序已解析了年，月，月日和年月日，则有两种方法可以解析日期：（年+月+月日）和（年+一年中的一天）。分解程序字段允许选择两种方法之一。如果未设置解析器字段，则两种方法都必须得到相同的日期。</target>
        </trans-unit>
        <trans-unit id="c56041ee24c2e62e6514b35eb7cc04f16f5b0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖的区域。如果被覆盖，则在格式化之前，日期时间值将使用请求的ZoneId转换为ZonedDateTime。在解析期间，将在返回值之前应用ZoneId。</target>
        </trans-unit>
        <trans-unit id="cd859580f99613136d80c7938719b23f4da700bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for all of the &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, and &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects contained in the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;openType&lt;/code&gt; whose value is the &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt; specified by the mapping rules above. So even when &lt;code&gt;getType()&lt;/code&gt; is &quot;&lt;code&gt;int&lt;/code&gt;&quot;, &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; will be &lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;的所有的 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; ， &lt;code&gt;MBeanParameterInfo&lt;/code&gt; 和 &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 对象包含在所述 &lt;code&gt;MBeanInfo&lt;/code&gt; 将有一个字段 &lt;code&gt;openType&lt;/code&gt; ，其值是&lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt;通过上述映射规则指定。因此，即使当 &lt;code&gt;getType()&lt;/code&gt; 为&amp;ldquo; &lt;code&gt;int&lt;/code&gt; &amp;rdquo;， &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; 将&lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83d652f00d8a04827d939d634a6f87310e7e3196" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt; class represents the print data format, such as JPEG or PostScript. A &lt;code&gt;DocFlavor&lt;/code&gt; object consists of a MIME type, which describes the format, and a document representation class name that indicates how the document is delivered to the printer or output stream. An application uses the &lt;code&gt;DocFlavor&lt;/code&gt; and an attribute set to find printers that can print the document type specified by the &lt;code&gt;DocFlavor&lt;/code&gt; and have the capabilities specified by the attribute set.</source>
          <target state="translated">所述&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; 的&lt;/a&gt;类表示的打印数据格式，如JPEG或PostScript。甲 &lt;code&gt;DocFlavor&lt;/code&gt; 的对象由MIME类型，其描述的格式，并指示所述文档的传送到打印机或输出流文档表示的类名。应用程序使用 &lt;code&gt;DocFlavor&lt;/code&gt; 和属性集来查找可以打印 &lt;code&gt;DocFlavor&lt;/code&gt; 指定的文档类型并具有该属性集指定的功能的打印机。</target>
        </trans-unit>
        <trans-unit id="4a2a33b021a508069e12369db4ed8235c23dd820" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Tabl (FAT), commonly used in consumer devices.</source>
          <target state="translated">该&lt;a href=&quot;dosfileattributeview&quot;&gt; &lt;code&gt;DosFileAttributeView&lt;/code&gt; &lt;/a&gt;类扩展 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 通过定义方法来访问&amp;ldquo;DOS&amp;rdquo;文件属性支持文件系统，如文件分配TABL（FAT），在消费电子设备中常用的遗产。</target>
        </trans-unit>
        <trans-unit id="7ab5e9ce6e03076464956d6cf8e9e21635c83e58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class contains utility methods to convert from other common forms to &lt;code&gt;Callable&lt;/code&gt; classes.</source>
          <target state="translated">该&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类包含的实用方法，从其他普通形式转换 &lt;code&gt;Callable&lt;/code&gt; 的类。</target>
        </trans-unit>
        <trans-unit id="8883df3bd964eac1086fd88dfe3a79b6d06f9e71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for the ScheduledExecutorService implementations provided in this package.</source>
          <target state="translated">的&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类提供此包中提供的ScheduledExecutorService的实现方便工厂方法。</target>
        </trans-unit>
        <trans-unit id="e042e1e41822ebb3dc29ae27670b8475a6541a52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides factory methods for the executor services provided in this package.</source>
          <target state="translated">该&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类提供此包中提供的执行程序服务的工厂方法。</target>
        </trans-unit>
        <trans-unit id="89123dab0161f270435efa4f546d779073bf8797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">所述&lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;方法提供了一种更简单的有用实施方式中，该套返回之前创建的线程上下文来已知值。</target>
        </trans-unit>
        <trans-unit id="452f568b1f5309f7b11b0f0b96affb2b04cc97db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; interface represents the value of an attribute for cases where the attribute value is required to be set atomically when creating an object in the file system.</source>
          <target state="translated">所述&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; &lt;/a&gt;接口表示的属性的用于创建其中在文件系统中的对象时，需要的属性值都以原子设置的情况下的值。</target>
        </trans-unit>
        <trans-unit id="44a89ca3f8f23eed63e4ec0b6a8bbaea5d50e095" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class supports the usual operations of reading bytes from, and writing bytes to, a channel connected to a file, as well as those of querying and modifying the current file position and truncating the file to a specific size. It defines methods for acquiring locks on the whole file or on a specific region of a file; these methods return instances of the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; class. Finally, it defines methods for forcing updates to the file to be written to the storage device that contains it, for efficiently transferring bytes between the file and other channels, and for mapping a region of the file directly into memory.</source>
          <target state="translated">的&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类支持从读取字节通常的操作，以及写入字节到，连接到文件中的信道，以及那些查询和修改当前文件位置和截断文件到一个特定的尺寸。它定义了获取整个文件或文件特定区域上的锁的方法。这些方法返回&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt;类的实例。最后，它定义了以下方法：强制对文件进行更新以写入包含该文件的存储设备，有效地在文件和其他通道之间传输字节，以及将文件的区域直接映射到内存中。</target>
        </trans-unit>
        <trans-unit id="7eca07bd746a1861a27802a596cf1b4a71de4344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">所述&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法可用于读取或更新的文件的所有者。</target>
        </trans-unit>
        <trans-unit id="73d3f705da9ee89357307dce73865b84f0d0035f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; interface discusses restrictions on how processors can operate on files.</source>
          <target state="translated">该&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt;界面讨论如何处理器能够对文件进行操作的限制。</target>
        </trans-unit>
        <trans-unit id="b4b3f7c632fcbbe9935cc6379723468392ffc252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">所述&lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; &lt;/a&gt;方法可用于测试，如果底层&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;支持文件属性由文件属性视图标识。</target>
        </trans-unit>
        <trans-unit id="f8cb4d9733bf198a655b4589202cc06dace82870" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#getFileStores--&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; &lt;/a&gt;方法返回在底层的迭代器&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfd644bf38b0bb664dee5219ee6298f48860e300" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">所述&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法转换一个依赖于系统的&lt;em&gt;路径字符串&lt;/em&gt;，返回一个&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;可被用于定位和访问的文件对象。</target>
        </trans-unit>
        <trans-unit id="85bb054fbeaeb496dcbb5f7913fdc2da38a5d8df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法被用来创建一个&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;执行匹配的路径的操作。</target>
        </trans-unit>
        <trans-unit id="5a69e75d4d560b20f800838bf2f2879aa7b27302" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;方法返回&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;按名称查找用户或组。</target>
        </trans-unit>
        <trans-unit id="6f447288e7932d315836b220e40a38ac2e592a02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#newWatchService--&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#newWatchService--&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; &lt;/a&gt;方法创建一个&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;可用于观看的变化和事件的对象。</target>
        </trans-unit>
        <trans-unit id="0df1d883900393179ef6a938286fb977dcd966a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">具有语言环境参数的该对象的&lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;方法不会更改此值。</target>
        </trans-unit>
        <trans-unit id="e68fc7c4ce0ce129079a142bdf3e6ba5e50c5128" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt; class is an implementation of &lt;code&gt;Future&lt;/code&gt; that implements &lt;code&gt;Runnable&lt;/code&gt;, and so may be executed by an &lt;code&gt;Executor&lt;/code&gt;. For example, the above construction with &lt;code&gt;submit&lt;/code&gt; could be replaced by:</source>
          <target state="translated">的&lt;a href=&quot;futuretask&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;/a&gt;类是的实现 &lt;code&gt;Future&lt;/code&gt; 实现 &lt;code&gt;Runnable&lt;/code&gt; ，所以可以由执行 &lt;code&gt;Executor&lt;/code&gt; 。例如，上面带有 &lt;code&gt;submit&lt;/code&gt; 构造可以替换为：</target>
        </trans-unit>
        <trans-unit id="761513f2b0bbba586605e4294850b23aff51188d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">所述&lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;如果仅源削波需要，可以使用方法。</target>
        </trans-unit>
        <trans-unit id="1eedddde68bb46978d525f7790711dd02e0ebfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inet6address#lform&quot;&gt;full uncompressed form&lt;/a&gt; of an IPv6 literal address is also valid.</source>
          <target state="translated">IPv6文字地址的&lt;a href=&quot;inet6address#lform&quot;&gt;完全未压缩形式&lt;/a&gt;也是有效的。</target>
        </trans-unit>
        <trans-unit id="89aa71069d9b64ba38bde1b7ed22da8a98a99b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inetaddress&quot;&gt;&lt;code&gt;InetAddress&lt;/code&gt;&lt;/a&gt; class is the abstraction representing an IP (Internet Protocol) address. It has two subclasses:</source>
          <target state="translated">该&lt;a href=&quot;inetaddress&quot;&gt; &lt;code&gt;InetAddress&lt;/code&gt; &lt;/a&gt;类是表示IP（互联网协议）地址的抽象。它具有两个子类：</target>
        </trans-unit>
        <trans-unit id="63af60ec9959bd5779b0337a24c9f2bd2daa5ff3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1 Later era is numbered 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;), only Meiji and later eras are supported.</source>
          <target state="translated">包含1970-01-01（ISO日历系统）的&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;时代的值为1。更高的时代编号为2（&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。较早的时代编号为0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;），-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;），仅支持明治及更高时代。</target>
        </trans-unit>
        <trans-unit id="5ad4c9f7c1d38ff17eed005c539f21753e0ecc72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">包含1970-01-01（ISO日历系统）的&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;时代的值为1。以后的时代从2（&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）开始编号。早期时代，编号为0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;））。</target>
        </trans-unit>
        <trans-unit id="53e05d8dddbec45eaf69a1abeb3e0b1d8a3d4dde" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">所述&lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;方法可以被重写以强加一个策略，用于当新映射添加到地图自动除去失效的映射。</target>
        </trans-unit>
        <trans-unit id="685e9f05827cafac5b9700afb54eb83f6c776e78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface supports locking disciplines that differ in semantics (reentrant, fair, etc), and that can be used in non-block-structured contexts including hand-over-hand and lock reordering algorithms. The main implementation is &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;接口支持锁定在语义（折返，公平，等等）不同的学科，并且可在非块结构的上下文，包括交接手和锁定重排序算法一起使用。主要实现是&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3180b0ec0d45d09638da4a7e022ef32c09072ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory&quot;&gt;&lt;code&gt;ManagementFactory&lt;/code&gt;&lt;/a&gt; class is the management factory class for the Java platform. This class provides a set of static factory methods to obtain the MXBeans for the Java platform to allow an application to access the MXBeans directly.</source>
          <target state="translated">该&lt;a href=&quot;managementfactory&quot;&gt; &lt;code&gt;ManagementFactory&lt;/code&gt; &lt;/a&gt;类是Java平台的管理工厂类。此类提供了一组静态工厂方法来获取Java平台的MXBean，以允许应用程序直接访问MXBean。</target>
        </trans-unit>
        <trans-unit id="6aee927bc4b4fd7e8464ec83c8eda0aa86fccfbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">该&lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;方法返回在Java虚拟机包括下面的表以及通过JDK实现扩展管理接口中列出的标准管理接口，所支持的所有管理接口。</target>
        </trans-unit>
        <trans-unit id="c882421782dfc7080f4d7ba69c0672ccbaee2976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">该&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法扫描寻找与模式匹配的下一个子输入序列。</target>
        </trans-unit>
        <trans-unit id="f8f9d8ffa3354e5ea114ec9c9eecd670dfa20d2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#lookingAt--&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">该&lt;a href=&quot;matcher#lookingAt--&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;方法企图以匹配输入序列，起始于开始时，对所述图案。</target>
        </trans-unit>
        <trans-unit id="81a4840468c5585768ffd0339442ff61c0e3f495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">该&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;方法的尝试来匹配图案中的整个输入序列。</target>
        </trans-unit>
        <trans-unit id="3b536101e87b34402f5a75ef5e45b85b8065447c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">所述&lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;方法提供了存储器池的当前使用情况的估计。对于垃圾回收的内存池，已用内存量包括池中所有对象（包括&lt;em&gt;可&lt;/em&gt;&lt;em&gt;访问&lt;/em&gt;对象和&lt;em&gt;不可访问&lt;/em&gt;对象）占用的内存。</target>
        </trans-unit>
        <trans-unit id="2917cba2196f42068511cb8866976f8cefd8ba43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">所述&lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否支持该功能。</target>
        </trans-unit>
        <trans-unit id="00777c593762897a62ff30f882e9e994e0fd4435" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; correspond to all major use cases for methods, constructors, and fields. These use cases may be distinguished using small integers as follows:</source>
          <target state="translated">在&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;查找工厂方法&lt;/a&gt;符合所有主要的用例方法，构造函数和字段。可以使用小整数来区分这些用例，如下所示：</target>
        </trans-unit>
        <trans-unit id="803a5dc5363ca39a6c192f06387b9fe75f794ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">在&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;方法用于加入组和接收发送到该组的所有多播数据报。一个通道可以加入多个组播组，也可以在多个&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;上加入同一个组。通过在返回的&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;上调用&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法来删除成员资格。如果基础平台支持源过滤，则可以使用&lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;方法来阻止或取消阻止来自特定源地址的多播数据报。</target>
        </trans-unit>
        <trans-unit id="586959a334aab9367192bda3b22ae8905ccfbfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">在&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法被用于开始接收发送到其源地址给定的源地址相匹配的一组数据报。如果基础平台不支持源筛选，则此方法将引发&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。成员资格是&lt;em&gt;累积性的&lt;/em&gt;，可以使用相同的组和接口再次调用此方法，以允许从其他源地址接收数据报。该方法返回一个&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;，该成员表示代表从给定源地址接收数据报的成员资格。调用键的&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法会删除成员资格，这样就无法再接收来自源地址的数据报。</target>
        </trans-unit>
        <trans-unit id="ea1666c946dbc92e3963a08d51b7fe1ff2e05b97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">该&lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; &lt;/a&gt;操作提供了一种方法来强制线程接受一个新的目标值，即使没有其他的同步。</target>
        </trans-unit>
        <trans-unit id="86bc696e481ab25ea679a816f2b2344f73e99298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">该&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;接口指定的方法来&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;通道的插座，获取该socket绑定的地址和方法来&lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;套接字选项。该&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; &lt;/a&gt;接口指定的方法来连接Internet协议（IP）多播组。</target>
        </trans-unit>
        <trans-unit id="97e5a8c6cebdfee9806373945502b19fe12625e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">指定不具有返回值的&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;方法以返回在其上调用它们的网络通道。这使方法调用可以链接在一起。此接口的实现应专用于返回类型，以便可以链接实现类上的方法调用。</target>
        </trans-unit>
        <trans-unit id="2aae4de2a8761dadc1703ebe8bd9d27e209c3303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; class provides APIs to browse and query all the networking interfaces (e.g. ethernet connection or PPP endpoint) of the local machine. It is through that class that you can check if any of the local interfaces is configured to support IPv6.</source>
          <target state="translated">该&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; 的&lt;/a&gt;类提供API以浏览和查询所有的网络接口在本地机器（例如以太网连接或PPP端点）。通过该类，您可以检查是否有任何本地接口配置为支持IPv6。</target>
        </trans-unit>
        <trans-unit id="1d4398a2182ad9d3d156c72bc1e1b46b563498d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;方法应在运行时返回的子类的实例的数组&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;它实现了&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; &lt;/a&gt;接口（通常为&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce3b1f0ce29ed84d089633cd109fcedd10fa19a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">实现类的&lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;方法应在运行时分别返回&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;的子类的实例数组，它们分别实现&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="fc59af9de6b925c7a001de9e0cda1335db8b9216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;方法应在运行时返回的子类的实例的数组&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;它实现了&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; &lt;/a&gt;接口（通常为&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4744c29d66c9935d41a7b7e162f4709ec4bf036a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">该&lt;a href=&quot;posixfileattributes#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性是一组访问权限。该文件属性视图提供对&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;类定义的九个权限的访问。这九个权限位确定文件所有者，组和其他文件的&lt;em&gt;读取&lt;/em&gt;，&lt;em&gt;写入&lt;/em&gt;和&lt;em&gt;执行&lt;/em&gt;访问权限（其他含义是所有者和组成员以外的身份）。某些操作系统和文件系统可能会提供其他权限位，但是在此版本中，此类未定义对这些其他位的访问。</target>
        </trans-unit>
        <trans-unit id="9d75e18b4bb9f537656575df11977b7323415855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the file attributes commonly used by file systems and operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">所述&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 通过定义方法来访问文件属性常用的文件系统和操作实现的标准便携式操作系统接口（POSIX）的家庭系统。</target>
        </trans-unit>
        <trans-unit id="6738d407658008666bc1a5053dfbc19962272b6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner--&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group--&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">该&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法用于读取文件的属性。文件&lt;a href=&quot;posixfileattributes#owner--&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;由&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;表示，UserPrincipal是用于访问控制的文件所有者的身份。该&lt;a href=&quot;posixfileattributes#group--&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;，用a表示&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt;，是组拥有者，其中一组是用于管理目的创建的，以便确定该组的成员的存取权的身份的身份。</target>
        </trans-unit>
        <trans-unit id="f5cae7f82ee146d950bad36b2028281d1616c695" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfilepermissions&quot;&gt;&lt;code&gt;PosixFilePermissions&lt;/code&gt;&lt;/a&gt; class defines methods for manipulating set of permissions.</source>
          <target state="translated">所述&lt;a href=&quot;posixfilepermissions&quot;&gt; &lt;code&gt;PosixFilePermissions&lt;/code&gt; &lt;/a&gt;类定义用于操纵权限的集合的方法。</target>
        </trans-unit>
        <trans-unit id="1c860f3bbab8e3f481494dd988c7bd96d51b73be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">所述&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;方法创建本机过程并返回的子类的实例 &lt;code&gt;Process&lt;/code&gt; 可用于控制该过程，并获得关于它的信息。</target>
        </trans-unit>
        <trans-unit id="b1cb6821609bfac1723d508b0bb91d2d757fd59e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it. The class &lt;code&gt;Process&lt;/code&gt; provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</source>
          <target state="translated">所述&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;方法创建本机过程并返回的子类的实例 &lt;code&gt;Process&lt;/code&gt; 可用于控制该过程，并获得关于它的信息。 &lt;code&gt;Process&lt;/code&gt; 类提供了一些方法，用于执行来自流程的输入，执行至流程的输出，等待流程完成，检查流程的退出状态以及销毁（杀死）流程。</target>
        </trans-unit>
        <trans-unit id="ea844c85f1e3f45d0fbdf528232a86e15887b986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">所述&lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;从和向基于字符的流中的一个简单的面向行的格式的方法加载和存储属性规定如下。所述&lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;的方法的工作方式为负载（读取器）/存储（作家，字符串）一对相同的，除了输入/输出流在ISO 8859-1字符编码进行编码。不能使用此编码直接表示的字符可以使用Unicode转义来编写，如第3.3节中所定义</target>
        </trans-unit>
        <trans-unit id="43359c708823c69498cdd32a1f027924e4c33c67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">所述&lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;在一个简单的XML格式方法加载和存储属性。默认情况下，使用UTF-8字符编码，但是如果需要，可以指定特定的编码。需要支持UTF-8和UTF-16的实现，并且可能支持其他编码。XML属性文档具有以下DOCTYPE声明：</target>
        </trans-unit>
        <trans-unit id="f8f6297aee07864a86e2bb6a0ea3ccd94df49256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method will return true if it is passed a proxy class-- a class returned by &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; or the class of an object returned by &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;-- and false otherwise.</source>
          <target state="translated">该&lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; &lt;/a&gt;如果通过分类-通过返回的类代理方法将返回true &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 或类通过返回的对象的 &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; ，否则为假- 。</target>
        </trans-unit>
        <trans-unit id="82b9b6df8d0389635e3baf324194adaf4d0a9535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#element--&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">该&lt;a href=&quot;queue#element--&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;方法返回，但不移除，队列的头。</target>
        </trans-unit>
        <trans-unit id="b3de824965777891d01ab953cb9a6bb37bc267d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">所述&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;如果可能的方法插入一个元件，否则返回 &lt;code&gt;false&lt;/code&gt; 。这不同于&lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;方法，后者只能通过抛出未经检查的异常来添加元素。该 &lt;code&gt;offer&lt;/code&gt; 的方法设计用于当故障是正常的，而不是特殊的发生，例如，在固定容量（或&amp;ldquo;有界&amp;rdquo;）队列。</target>
        </trans-unit>
        <trans-unit id="e8d4e252e82e3c4010bc6f24536b3c8e384a7a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;queue#remove--&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;方法可移除和返回队列的头。确切地说，从队列中删除了哪个元素是队列的排序策略的函数，每个实现的实现方式不同。的 &lt;code&gt;remove()&lt;/code&gt; 和 &lt;code&gt;poll()&lt;/code&gt; 方法仅区别在于它们的行为，当该队列是空的：在 &lt;code&gt;remove()&lt;/code&gt; 方法抛出异常，而 &lt;code&gt;poll()&lt;/code&gt; 方法返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78e6516c0dec9e8c202d246bc450ed434c84f25b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size--&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定&lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法从通道进入一个缓冲器读取字节;类似地，&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定一种&lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法，该方法将字节从缓冲区写入通道。对于可以同时读取和写入字节的通道的常见情况，&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; &lt;/a&gt;接口将这两个接口统一起来。所述&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;ByteChannel&lt;/code&gt; 与方法，以接口&lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;该通道的当前位置，并且它的&lt;a href=&quot;seekablebytechannel#size--&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c2ccfc4344d98344bac10a3d0beeebc75678f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interface similarly defines locks that may be shared among readers but are exclusive to writers. Only a single implementation, &lt;a href=&quot;reentrantreadwritelock&quot;&gt;&lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;&lt;/a&gt;, is provided, since it covers most standard usage contexts. But programmers may create their own implementations to cover nonstandard requirements.</source>
          <target state="translated">所述&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; 中&lt;/a&gt;接口类似地定义了可以阅读器之间共享，但专用于作家锁。仅提供了一个实现&lt;a href=&quot;reentrantreadwritelock&quot;&gt; &lt;code&gt;ReentrantReadWriteLock&lt;/code&gt; &lt;/a&gt;，因为它涵盖了大多数标准用法上下文。但是程序员可以创建自己的实现来满足非标准要求。</target>
        </trans-unit>
        <trans-unit id="ccb2a8fa5c45fda8065dbaad7a3c71bba458a361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; &lt;/a&gt;是一个枚举是提供了三种不同的方法，严谨，聪明和宽容。智能选项是默认选项。可以使用&lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;进行设置。</target>
        </trans-unit>
        <trans-unit id="a61c3fe4bcefb9096a8ca84cf773684b1d6df713" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt;解析器风格&lt;/a&gt;对即时分析没有影响。结束时间&amp;ldquo; 24:00&amp;rdquo;在第二天开始时的午夜处理。在某种程度上处理了&amp;ldquo; 23:59:59&amp;rdquo;的秒时间，有关完整详细信息，请参见&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffbf4748dbac126c5220a08777eb15c9fdb0572e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt;解析器风格&lt;/a&gt;对即时分析没有影响。结束时间&amp;ldquo; 24:00&amp;rdquo;在第二天开始时的午夜处理。在某种程度上可以处理'23：59：60'的秒时间，有关完整详细信息，请参见&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="844b2132f1798e9d55cc9c339a4149469ad05e5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">所述&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;类提供了由执行包加载进程必需的信息 &lt;code&gt;getBundle&lt;/code&gt; 称取一个工厂方法 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 实例。您可以实现自己的子类，以启用非标准资源包格式，更改搜索策略或定义缓存参数。有关详细信息，请参见类的描述和&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;工厂方法。</target>
        </trans-unit>
        <trans-unit id="5b1b140c56a442f57e62e38c4c78a04d61105b58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; &lt;/a&gt;方法被称为与目标区域获得的名单&lt;em&gt;候选 &lt;code&gt;Locale&lt;/code&gt; 小号&lt;/em&gt;的资源包中搜索它。</target>
        </trans-unit>
        <trans-unit id="772adc8499f04f3dfcd1f7ee081e85fbe1b93725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; &lt;/a&gt;方法被调用来获得一个备用的区域（替代目前的目标语言环境），以进一步尝试找到一个资源包。如果该方法返回一个非null的语言环境，它将成为下一个目标语言环境，并且加载过程将从步骤3重新开始。否则，如果找到了基本包并在上一个步骤5中将其保留，则将其返回给调用方现在。否则，将抛出MissingResourceException。</target>
        </trans-unit>
        <trans-unit id="635f440f4fb0dc3df8028007964f525ee541d99c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; &lt;/a&gt;方法被调用，以获得资源包格式，产生包或资源名称。字符串 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 指定基于类和基于&lt;a href=&quot;propertyresourcebundle&quot;&gt;属性&lt;/a&gt;的资源束。其他以 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 开头的字符串。为将来的扩展保留，并且不得用于应用程序定义的格式。其他字符串指定应用程序定义的格式。</target>
        </trans-unit>
        <trans-unit id="143061f5a7fc551c0ad375aa5616ef6082a571b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法被调用来实例化 &lt;code&gt;ResourceBundle&lt;/code&gt; 基本包名称，候选区域设置，以及格式。 （请参阅下面有关缓存查找的注释。）在候选语​​言环境和格式的所有组合上重复执行此步骤，直到 &lt;code&gt;newBundle&lt;/code&gt; 方法返回 &lt;code&gt;ResourceBundle&lt;/code&gt; 实例或迭代用尽了所有组合。例如，如果候选语言环境是 &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; ， &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 和 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; ，格式是 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; ，然后是用于调用的语言环境格式组合的顺序 &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10eb909f57a9444304efbbfb4230e34732f3b9b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">所述&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;，并&lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt;的方法的定界符图案的独立操作。这些方法将尝试匹配指定的模式而与输入中的分隔符无关，因此可以在分隔符不相关的特殊情况下使用。这些方法可能会阻止等待更多输入。</target>
        </trans-unit>
        <trans-unit id="348c28db8b27cc9f18897b329f01ff9a7695b683" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their primitive-type companion methods (such as &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNextInt--&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next&lt;/code&gt; method will block.</source>
          <target state="translated">的&lt;a href=&quot;scanner#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;方法及其基本类型companion方法（如&lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;scanner#hasNextInt--&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;）首先跳过与分隔符模式匹配的任何输入，然后尝试返回下一个标记。既 &lt;code&gt;hasNext&lt;/code&gt; 和 &lt;code&gt;next&lt;/code&gt; 方法可阻塞等待进一步的输入。 &lt;code&gt;hasNext&lt;/code&gt; 方法是否阻塞与其关联的 &lt;code&gt;next&lt;/code&gt; 方法是否将阻塞无关。</target>
        </trans-unit>
        <trans-unit id="21137fd05c9ebb8f424df8db033cf26db6b1b34b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">在&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;接口延长&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;分别接口，，加入&lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;该采取缓冲区序列而不是单个缓冲器的方法。</target>
        </trans-unit>
        <trans-unit id="07cb8eb23ad928e28854d19141c00b90056152a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">指定没有返回值的&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;方法以返回在其上调用它们的通道。这使方法调用可以链接在一起。此接口的实现应专用于返回类型，以便可以链接实现类上的方法调用。</target>
        </trans-unit>
        <trans-unit id="90a51280115503dcf1e905f60856aff6ffe205d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and all three key sets in the same order as in a selection operation.</source>
          <target state="translated">的&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法同步上的选择，并且所有三个密钥集以相同的顺序在选择操作。</target>
        </trans-unit>
        <trans-unit id="d451b4a4efe00d347a54add6cb0af761ff11af1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">此类定义的每个套接字选项的&lt;a href=&quot;socketoption#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;都是其字段名称。</target>
        </trans-unit>
        <trans-unit id="277deff41b631710526c3be6a8bce3fa73e5a350" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcharsets&quot;&gt;&lt;code&gt;StandardCharsets&lt;/code&gt;&lt;/a&gt; class defines constants for each of the standard charsets.</source>
          <target state="translated">所述&lt;a href=&quot;standardcharsets&quot;&gt; &lt;code&gt;StandardCharsets&lt;/code&gt; &lt;/a&gt;类定义为每个标准字符集的常数。</target>
        </trans-unit>
        <trans-unit id="a8dd9a9fec27603d78ed08617b0bdfc6d7c235da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcopyoption&quot;&gt;&lt;code&gt;StandardCopyOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">所述&lt;a href=&quot;standardcopyoption&quot;&gt; &lt;code&gt;StandardCopyOption&lt;/code&gt; &lt;/a&gt;枚举类型定义</target>
        </trans-unit>
        <trans-unit id="80c99f93b54d2734b5913704c3b7bc58ac7bd819" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption&quot;&gt;&lt;code&gt;StandardOpenOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">所述&lt;a href=&quot;standardopenoption&quot;&gt; &lt;code&gt;StandardOpenOption&lt;/code&gt; &lt;/a&gt;枚举类型定义</target>
        </trans-unit>
        <trans-unit id="3d74cb4498be8f94cc5abccf92b10b83b8240700" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">在&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;打开文件时使用的选项，要求更新文件同步地写入基础存储设备。在默认的提供者，并且该文件驻留在本地存储设备上，并且的情况下，&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;的信道被连接到使用这些选项之一打开的文件，则的调用&lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法只保证当所有返回该调用对文件所做的更改已写入设备。这些选项对于确保在系统崩溃时不会丢失关键信息很有用。如果文件不在本地设备上，则不做任何保证。其他&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;是否可以提供此保证 实现是特定于提供程序的。</target>
        </trans-unit>
        <trans-unit id="65632e3304ce8a7430971d425d4ea6f5d7041352" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">该&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt;是一个简单的递增的天数，其中0天1970-01-01（ISO）。此定义对于所有时序都是相同的，从而可以进行转换。</target>
        </trans-unit>
        <trans-unit id="5fe0b0a62926df5a411799abadea12e26424d776" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt; class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">该&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;类包含了一套标准的调节器，可以作为静态方法。这些包括：</target>
        </trans-unit>
        <trans-unit id="8ee0d1305c6ed8ac73c630b5768c7fd55bebbf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface models amounts of relative time.</source>
          <target state="translated">该&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt;接口的型号数量的相对时间。</target>
        </trans-unit>
        <trans-unit id="d603049ad9b812aec8a4461ab35e3fdfaf4b0a9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; interface provides another mechanism for querying temporal objects. That interface is limited to returning a &lt;code&gt;long&lt;/code&gt;. By contrast, queries can return any type.</source>
          <target state="translated">所述&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;接口提供了另一种机制，用于查询的时间对象。该接口仅限于返回 &lt;code&gt;long&lt;/code&gt; 。相比之下，查询可以返回任何类型。</target>
        </trans-unit>
        <trans-unit id="da0f2490753f88004eeaececd77ced0e3d26d3b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">该&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;顶级错误处理程序&lt;/a&gt;，如果没有打印出一条消息 &lt;code&gt;ThreadDeath&lt;/code&gt; 是从来没有抓到。</target>
        </trans-unit>
        <trans-unit id="90e1d925999c201c8dd68d8ed236e67286b0b5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">所述&lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持线程争用监视。默认情况下，线程争用监视处于禁用状态。所述&lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;方法可用于启用线程争用监视。</target>
        </trans-unit>
        <trans-unit id="ed0642ec4c21f239693011a0d808e0a9a5551dee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">所述&lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持测量的CPU时间的任何线程。所述&lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持当前线程测量的CPU时间。支持任何线程的CPU时间测量的Java虚拟机实现也将支持当前线程的时间。</target>
        </trans-unit>
        <trans-unit id="126515b65a295f042897ee7ca24299c10de24ac2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">所述&lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;方法被调用在新创建的抛出初始化堆栈跟踪数据。</target>
        </trans-unit>
        <trans-unit id="f545a31d332fd214f9259a9d88e64957c2997f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;timeunit&quot;&gt;&lt;code&gt;TimeUnit&lt;/code&gt;&lt;/a&gt; class provides multiple granularities (including nanoseconds) for specifying and controlling time-out based operations. Most classes in the package contain operations based on time-outs in addition to indefinite waits. In all cases that time-outs are used, the time-out specifies the minimum time that the method should wait before indicating that it timed-out. Implementations make a &quot;best effort&quot; to detect time-outs as soon as possible after they occur. However, an indefinite amount of time may elapse between a time-out being detected and a thread actually executing again after that time-out. All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all. To wait &quot;forever&quot;, you can use a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;timeunit&quot;&gt; &lt;code&gt;TimeUnit&lt;/code&gt; &lt;/a&gt;类提供了用于指定和控制超时基于操作的多个粒度（包括毫微秒）。包中的大多数类除了不确定的等待时间以外，还包含基于超时的操作。在所有使用超时的情况下，超时都指定方法在指示其超时之前应等待的最短时间。实现会尽最大努力在超时发生后尽快检测到超时。但是，在检测到超时与在该超时之后再次实际执行线程之间可能会经过不确定的时间量。所有接受超时参数的方法都将小于或等于零的值视为完全不等待。要&amp;ldquo;永远&amp;rdquo;等待，可以使用 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="8b0e3a5fd66bb193d4396df91f7f330610d51100" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">该&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;单参数的构造函数&lt;/a&gt;，需要在它的参数中的任何非法字符被引用，并保留任何转义八位字节</target>
        </trans-unit>
        <trans-unit id="96d3a6675116e768726d899ee3f398538f8d3f5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">在&lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;多参数构造&lt;/a&gt;所要求的在它们出现的部件引用非法字符。百分号（ &lt;code&gt;'%'&lt;/code&gt; ）始终由这些构造函数引用。任何</target>
        </trans-unit>
        <trans-unit id="a5b18837b67d6da8cf5f631b9ddf3619afc39652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getRawUserInfo--&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawPath--&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawQuery--&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawFragment--&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawAuthority--&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">的&lt;a href=&quot;uri#getRawUserInfo--&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawPath--&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawQuery--&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawFragment--&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawAuthority--&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;方法返回原始形式及其相应的分量的值，而不用解释任何转义八位组。这些方法返回的字符串可能包含转义八位字节和</target>
        </trans-unit>
        <trans-unit id="c86bed47bbda7f711ebae1c96c0ca26487893480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getUserInfo--&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getPath--&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getQuery--&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getFragment--&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getAuthority--&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">的&lt;a href=&quot;uri#getUserInfo--&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getPath--&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getQuery--&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getFragment--&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getAuthority--&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;方法是以其相应的部件解码任何转义八位组。这些方法返回的字符串可能包含</target>
        </trans-unit>
        <trans-unit id="05633b3838426efa3462c8db4d61636d5eac4d0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toASCIIString--&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">该&lt;a href=&quot;uri#toASCIIString--&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; &lt;/a&gt;方法返回一个不包含任何一个完全引用和编码的URI字符串</target>
        </trans-unit>
        <trans-unit id="f7da3d6193bb224a3c925ce28355ba647aa44c83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toString--&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">该&lt;a href=&quot;uri#toString--&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;方法返回一个URI字符串所有必要的报价，其中可能包含</target>
        </trans-unit>
        <trans-unit id="483ec9540b5f90a13d5603b20efcda8d93a44c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;urlencoder&quot;&gt;&lt;code&gt;URLEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;urldecoder&quot;&gt;&lt;code&gt;URLDecoder&lt;/code&gt;&lt;/a&gt; classes can also be used, but only for HTML form encoding, which is not the same as the encoding scheme defined in RFC2396.</source>
          <target state="translated">的&lt;a href=&quot;urlencoder&quot;&gt; &lt;code&gt;URLEncoder&lt;/code&gt; 的&lt;/a&gt;和&lt;a href=&quot;urldecoder&quot;&gt; &lt;code&gt;URLDecoder&lt;/code&gt; &lt;/a&gt;类也可以使用，但只为HTML形式的编码，这是不一样的在RFC2396中定义的编码方案。</target>
        </trans-unit>
        <trans-unit id="71f571d649e61ad2b45c6192eeeb015dbbe1495a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; interfaces represent an identity or group identity.</source>
          <target state="translated">的&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt;接口表示的身份或组标识。</target>
        </trans-unit>
        <trans-unit id="86bc860478e690457692e5c83357667c82fd5795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; interface defines methods to lookup user or group principals.</source>
          <target state="translated">所述&lt;a href=&quot;userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;接口定义的方法来查找用户或组主体。</target>
        </trans-unit>
        <trans-unit id="ef147a7a54d7b0102550cbd209ac533ffc64556d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">这些事件的&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;是此路径所定位的目录与查找已创建，删除或修改的目录条目的路径之间的相对路径。</target>
        </trans-unit>
        <trans-unit id="bee2859efc1d0c9a918dc390dc05a7a666d1a2e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">此事件的&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;是特定于实现的，并且可以为 &lt;code&gt;null&lt;/code&gt; 。事件&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;可能大于 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7c6261bea4e77bf60d69292cc3f4a55c729b9b2" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt;&lt;code&gt;isWhitespace&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">扫描仪使用的&lt;a name=&quot;default-delimiter&quot;&gt;默认空格分隔符&lt;/a&gt;由&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;识别。&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt; &lt;code&gt;isWhitespace&lt;/code&gt; &lt;/a&gt;。该&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;不管它以前是否改变方法将重置扫描器的分隔符为默认空白分隔符的值。</target>
        </trans-unit>
        <trans-unit id="cdf992b6452b5c0645142b8150d07e858f599985" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a name=&quot;floatDWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。这包括任何符号，数字，分组分隔符，小数点分隔符，指数符号，基数指示符，括号以及表示无穷大和NaN的字符串（如果适用）。如果转换后的值的长度小于宽度，则输出将用空格（ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于width。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="8a0cfd7eb208b940d0fafb3de1697cf536161c15" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;' '&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a name=&quot;genWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。如果转换后的值的长度小于宽度，则输出将用 &lt;code&gt;' '&lt;/code&gt; （ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于宽度为止。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="8fa9d205d462a4bfb3a26d4bc78316084693aa53" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a name=&quot;intWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。这包括任何符号，数字，分组分隔符，基数指示符和括号。如果转换后的值的长度小于宽度，则输出将用空格（ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于width。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="3e560a63da168303203b2b0de0e18b952b740b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">该&lt;a name=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;一个参数指定的文件是要打开的访问模式。允许的值及其含义为：</target>
        </trans-unit>
        <trans-unit id="d70755c800c2b720f9b2a4d9f93470f170f35163" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;all-at-once&lt;/b&gt; pattern: Get the doc from the current multidoc, and save the doc in a list. Get the next multidoc from the current multidoc, and repeat until there are no more. Then iterate over the list of saved docs. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Go to the next doc in the list, and repeat until there are no more.</source>
          <target state="translated">该&lt;b&gt;全在一次&lt;/b&gt;模式：从当前multidoc中的文档，并保存文档在列表中。从当前多文档中获取下一个多文档，然后重复进行直到没有更多。然后遍历已保存文档的列表。从当前文档获取打印数据表示对象。从打印数据表示对象获取所有打印数据。转到列表中的下一个文档，然后重复直到没有更多。</target>
        </trans-unit>
        <trans-unit id="14f6267fa804e0d76a0763676c42485e1a9ce366" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interleaved&lt;/b&gt; pattern: Get the doc from the current multidoc. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Get the next multidoc from the current multidoc, and repeat until there are no more. (The code example above uses the interleaved pattern.)</source>
          <target state="translated">在&lt;b&gt;交错的&lt;/b&gt;模式：从当前multidoc中的文档。从当前文档获取打印数据表示对象。从打印数据表示对象获取所有打印数据。从当前多文档中获取下一个多文档，然后重复进行直到没有更多。（上面的代码示例使用交错模式。）</target>
        </trans-unit>
        <trans-unit id="80231fb01cbd9eea6cac573462b78797a00356f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;javax.management.builder.initial&lt;/b&gt; system property is consulted every time a new MBeanServer needs to be created, and the class pointed to by that property is loaded. If that class is different from that of the current MBeanServerBuilder, then a new MBeanServerBuilder is created. Otherwise, the MBeanServerFactory may create a new MBeanServerBuilder or reuse the current one.</source>
          <target state="translated">该&lt;b&gt;javax.management.builder.initial&lt;/b&gt;系统属性咨询每一个新的MBeanServer需要创建时间，并通过该属性指向的类加载。如果该类与当前MBeanServerBuilder的类不同，则将创建一个新的MBeanServerBuilder。否则，MBeanServerFactory可能会创建一个新的MBeanServerBuilder或重用当前的MBeanServerBuilder。</target>
        </trans-unit>
        <trans-unit id="133b14a15ab9a0721c864334bb5dcba8749ddb42" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-1935722590756516193L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-1935722590756516193L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="622f4eec33d97ed2e8edad4e862e2ca5e8fc31cb" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-279985518429862552L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-279985518429862552L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59d67311624b4fef95e26ff51e0a9c6b2312c3c6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-48350262537070138L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-48350262537070138L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab26041362e68fa2964d28d4745de355c08d29de" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6292969195866300415L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-6292969195866300415L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f922ee070b5cc5ace54d4a0b9d3f07682e92469" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6304063118040985512L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;是 &lt;code&gt;-6304063118040985512L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93f104d7169f5ba748ac71dc420f8f2b3490fac9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6871117877523310399L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-6871117877523310399L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c85e9f3228eea1cfaf1477d918140c111a3aa28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7445681389570207141L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;是 &lt;code&gt;-7445681389570207141L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffe47f8e6b033a46b369815e41c457527afba987" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7516092053498031989L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-7516092053498031989L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e41f3c2dd2562ef1b180a361f4b55bf634bff02" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1081892073854801359L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;1081892073854801359L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ca4312b85a226720a17b2d5c731f010931d260d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1190536278266811217L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;1190536278266811217L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="072aec20483bdd007929c428e915e721c5ac25ae" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2504952983494636987L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;2504952983494636987L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="836dfd3926b378790fd6604b2d4b322a25a61a21" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2605900539589789736L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;2605900539589789736L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5105ab01988b46bcdb2ad68ccb972b352bbbf14f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3176664577895105181L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;3176664577895105181L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63b961dbc4cf57cb42fe0df92a55437c8ee74ba1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3862947819818064362L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;3862947819818064362L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="194f95466a78a370966f9e904fcacd1a20dcddc8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;4611072955724144607L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;4611072955724144607L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f6ceca5a91a116ea11f104aaac88adefc6f654d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6181543027787327345L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;是 &lt;code&gt;6181543027787327345L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ab50df0639c6c2a445f4eb42deaf59f57cd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6532732096650090465L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;6532732096650090465L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf7d7ffcce3e481d53bebd9cf2aa7b4afe92bff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; TooManyListenersException &lt;/code&gt; Exception is used as part of the Java Event model to annotate and implement a unicast special case of a multicast Event Source.</source>
          <target state="translated">该 &lt;code&gt; TooManyListenersException &lt;/code&gt; 异常用作Java事件模型来注释的一部分，并实现多播Event Source的单播特例。</target>
        </trans-unit>
        <trans-unit id="140c233f5b711ea49784f7bc7d8f708ede025961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; mode can be used to reduce the number of I/O operations performed. Using &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; only requires updates to the file's content to be written to storage; using &lt;code&gt;&quot;rws&quot;&lt;/code&gt; requires updates to both the file's content and its metadata to be written, which generally requires at least one more low-level I/O operation.</source>
          <target state="translated">所述 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 模式可被用于减少对I / O操作数执行。使用 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 仅需要更新文件内容即可将其写入存储；使用 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; 需要更新文件的内容及其要写入的元数据，这通常至少需要至少一个低级别的I / O操作。</target>
        </trans-unit>
        <trans-unit id="0cfa334fcd18f47df7a744728a735885661d2393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">该 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 模式下工作很像&lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt;的方法&lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类，传递的参数 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 分别，但他们总是适用于每一个I / O操作，因此往往更有效。如果文件位于本地存储设备上，则在返回此类的方法的调用时，可以确保通过该调用对文件所做的所有更改都将被写入该设备。这对于确保在系统崩溃时不会丢失关键信息很有用。如果文件不在本地设备上，则不做任何保证。</target>
        </trans-unit>
        <trans-unit id="5aac2f6058d827131417bfcfef8dc2eb4bdbda46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 关系不能在所有的双精度值提供一个总次序： &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;Double.NaN&lt;/code&gt; 值既不小于比较，大于，也不等于任何值，甚至本身。此方法使用方法&lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt;施加的总顺序： &lt;code&gt;-0.0d&lt;/code&gt; 被视为小于值 &lt;code&gt;0.0d&lt;/code&gt; ,并且 &lt;code&gt;Double.NaN&lt;/code&gt; 被认为大于任何其他值，并且所有 &lt;code&gt;Double.NaN&lt;/code&gt; 值都被视为被认为是平等的。</target>
        </trans-unit>
        <trans-unit id="6758eacaf6eafc7546dec5d6a98b3ed7630fdb8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 关系不能在所有浮点值提供一个总次序： &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;Float.NaN&lt;/code&gt; 值既不小于比较，大于，也不等于任何值，甚至本身。此方法使用方法&lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt;施加的总顺序： &lt;code&gt;-0.0f&lt;/code&gt; 被视为小于值 &lt;code&gt;0.0f&lt;/code&gt; ,并且 &lt;code&gt;Float.NaN&lt;/code&gt; 被认为大于任何其他值，并且所有 &lt;code&gt;Float.NaN&lt;/code&gt; 值都为被认为是平等的。</target>
        </trans-unit>
        <trans-unit id="566defc53a29dd2c6f74968329502b0e504d1e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If any other flags are provided, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">为&lt;a href=&quot;#dFlags&quot;&gt;常规转换&lt;/a&gt;定义的 &lt;code&gt;'-'&lt;/code&gt; 标志适用。如果提供了任何其他标志，&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt;引发FormatFlagsConversionMismatchException。</target>
        </trans-unit>
        <trans-unit id="ea48ab5aaeaf4194edab0eb91c4845bbde6ed392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If the &lt;code&gt;'#'&lt;/code&gt; flag is given, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">为&lt;a href=&quot;#dFlags&quot;&gt;常规转换&lt;/a&gt;定义的 &lt;code&gt;'-'&lt;/code&gt; 标志适用。如果给出 &lt;code&gt;'#'&lt;/code&gt; 标志，&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt;引发FormatFlagsConversionMismatchException。</target>
        </trans-unit>
        <trans-unit id="803c87810da3137c31c3b9569aa0cdd88a5236f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**&lt;/code&gt; characters matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; crossing directory boundaries.</source>
          <target state="translated">该 &lt;code&gt;**&lt;/code&gt; 字符匹配零个或多个&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt;穿越目录边界。</target>
        </trans-unit>
        <trans-unit id="bdc9ec98d6c3e53fb7a51d01e995f914de002527" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName-int-&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">在 &lt;code&gt;*&lt;/code&gt; 字符零个或多个匹配&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; a的&lt;a href=&quot;path#getName-int-&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;成分不跨越界限的目录。</target>
        </trans-unit>
        <trans-unit id="56b1e692364ff3d0377ffb97e33a6452576a382f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">所述 &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类包括用于确定音频文件的格式，从音频文件获得音频输入流，和写入从音频输入流的音频文件的方法。</target>
        </trans-unit>
        <trans-unit id="bb56cab0d387af77b98e49727a7446f08b61aa9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该 &lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="b7e40741bd63e3e4d4e34f6ccfaaa185c2f108df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; is any additional text that the connector server adds when creating the client id. At a minimum, it must be enough to distinguish this connection ID from the ID of any other connection currently opened by this connector server.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; 是连接器服务器创建客户端ID时添加任何额外的文本。至少必须足以将此连接ID与该连接器服务器当前打开的任何其他连接的ID区分开。</target>
        </trans-unit>
        <trans-unit id="57252451ad18df2276d94648faafb4c4918a4f22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; is the address and port of the connecting client, if these can be determined, otherwise nothing. The &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; is the Internet address of the host that the client is connecting from, in numeric or DNS form. Numeric IPv6 addresses are enclosed in square brackets &lt;code&gt;[]&lt;/code&gt;. The &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; is the decimal port number that the client is connecting from.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; 是地址和连接客户端的端口，如果这些可以判断，否则什么都没有。该 &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; 是客户端是从，连接在数字或DNS形式的主机的Internet地址。IPv6地址数字括在方括号 &lt;code&gt;[]&lt;/code&gt; 中。该 &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; 是客户端从连接的十进制端口号。</target>
        </trans-unit>
        <trans-unit id="531c08ac15a131c27029679adeb81cf5ad5bec7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName--&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">所述 &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; 是客户端实体的身份，典型地通过返回的字符串&lt;a href=&quot;jmxprincipal#getName--&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt;。该字符串不能包含空格。</target>
        </trans-unit>
        <trans-unit id="e5ea1882020edd1476b0a71f1c9d73fd0f805d1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; is a protocol that would be recognized by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; 是&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;可以识别的协议。</target>
        </trans-unit>
        <trans-unit id="b824fdb77864355409db5ed994fa82e5b5e6ca93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; can be omitted. The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; cannot be supplied without a &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 可以省略。该 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 不能没有被供给 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a12722721e439b6dff600477a13341187efa0475" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is optional. If present, it is copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; but otherwise ignored. If absent, the generated &lt;code&gt;JXMServiceURL&lt;/code&gt; will have the local host name.</source>
          <target state="translated">用户提供的 &lt;code&gt;serviceURL&lt;/code&gt; 中的 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 是可选的。如果存在，它将被复制到生成的 &lt;code&gt;JMXServiceURL&lt;/code&gt; 中，否则将被忽略。如果不存在，则生成的 &lt;code&gt;JXMServiceURL&lt;/code&gt; 将具有本地主机名。</target>
        </trans-unit>
        <trans-unit id="bfa23af48503c6623afb1ad1711fefdb1632d2c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; is a host name, an IPv4 numeric host address, or an IPv6 numeric address enclosed in square brackets.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 是主机名，IPv4的数字主机地址，或方括号括起来的IPv6数字地址。</target>
        </trans-unit>
        <trans-unit id="2b0d7cc7b25ad83d3037b4dc212df848a1f89cd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回字符串的 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 部分是&lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;返回的值。如果该值指定一个数字IPv6地址，则将其括在方括号 &lt;code&gt;[]&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="55c0575a0a5f3a8a03451fbe7153260d3ab2702e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is also optional. If present, it is also copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt;; otherwise, the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; has no port. For an &lt;code&gt;serviceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; protocol, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt;, if present, indicates what port the generated remote object should be exported on. It has no other effect.</source>
          <target state="translated">用户提供的 &lt;code&gt;serviceURL&lt;/code&gt; 中的 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 也是可选的。如果存在，它还将被复制到生成的 &lt;code&gt;JMXServiceURL&lt;/code&gt; ;中。否则，生成的 &lt;code&gt;JMXServiceURL&lt;/code&gt; 没有端口。对于使用 &lt;code&gt;rmi&lt;/code&gt; 协议的 &lt;code&gt;serviceURL&lt;/code&gt; ， &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; （如果存在）指示应将生成的远程对象导出到哪个端口。它没有其他作用。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f0c8f3bfcebe38f9f7e404fcfe049e036b34bcb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; is a decimal port number. 0 means a default or anonymous port, depending on the protocol.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 是十进制端口号。0表示默认或匿名端口，具体取决于协议。</target>
        </trans-unit>
        <trans-unit id="aed5089fcc06d0b24df1a0c3d314b9e78f48e5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">返回字符串的 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 部分是&lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt;以最短十进制形式返回的值。如果值为零，则将其省略。</target>
        </trans-unit>
        <trans-unit id="44dcc40e6319d73e55e0506b2a02c88d015d6e90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; is a series of two or more non-negative integers separated by periods (&lt;code&gt;.&lt;/code&gt;). An implementation of the version described by this documentation must use the string &lt;code&gt;1.0&lt;/code&gt; here.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; 是一系列的两个或更多个非负整数由句点分隔（ &lt;code&gt;.&lt;/code&gt; ）。本文档描述的版本的实现必须在此处使用字符串 &lt;code&gt;1.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51e5d21d788500cd8258dd52116920bb8d78aa5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt;, if any, begins with a slash (&lt;code&gt;/&lt;/code&gt;) or a semicolon (&lt;code&gt;;&lt;/code&gt;) and continues to the end of the address. It can contain attributes using the semicolon syntax specified in RFC 2609. Those attributes are not parsed by this class and incorrect attribute syntax is not detected.</source>
          <target state="translated">的 &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; ，如果有的话，便从斜线（ &lt;code&gt;/&lt;/code&gt; ）或分号（ &lt;code&gt;;&lt;/code&gt; ），并持续到地址的末端。它可以使用RFC 2609中指定的分号语法包含属性。此类无法解析这些属性，并且不会检测到错误的属性语法。</target>
        </trans-unit>
        <trans-unit id="0cfefc52ce748f9328afa9b5dc72829a45465fa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;?&lt;/code&gt; character matches exactly one character of a name component.</source>
          <target state="translated">的 &lt;code&gt;?&lt;/code&gt; 字符完全匹配名称组件的一个字符。</target>
        </trans-unit>
        <trans-unit id="86179c7113b7ca3e72607b93d89e62c19020820b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessControlContext&lt;/code&gt; may contain many Subjects (from nested &lt;code&gt;doAs&lt;/code&gt; calls). In this situation, the most recent &lt;code&gt;Subject&lt;/code&gt; associated with the &lt;code&gt;AccessControlContext&lt;/code&gt; is returned.</source>
          <target state="translated">该 &lt;code&gt;AccessControlContext&lt;/code&gt; 的可能包含许多科目（从嵌套 &lt;code&gt;doAs&lt;/code&gt; 调用）。在这种情况下，将返回与 &lt;code&gt;AccessControlContext&lt;/code&gt; 关联的最新 &lt;code&gt;Subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b449118f305afa855458cabeb18c4cb51488d864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm.</source>
          <target state="translated">所述 &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 类用于生成一组参数，以具有一定的算法中使用。</target>
        </trans-unit>
        <trans-unit id="21b1b496ebb21c6a19e568343413c663744b5d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm. Parameter generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">所述 &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 类用于生成一组参数，以具有一定的算法中使用。使用 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法（返回给定类实例的静态方法）构造参数生成器。</target>
        </trans-unit>
        <trans-unit id="60cf335e88d209716971b2d6c6b97342cea6ef52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; class provides static methods to dynamically create and access Java arrays.</source>
          <target state="translated">该 &lt;code&gt;Array&lt;/code&gt; 类提供静态方法动态创建和访问Java数组。</target>
        </trans-unit>
        <trans-unit id="e11780a48e0c2628760a60beb9af58fed7a0350b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;ArrayType&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="abaabe6886264c20f473fa5053a5d55bc337750d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node that was removed.</source>
          <target state="translated">已删除的 &lt;code&gt;Attr&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="5ef50051305c491e51d826eece91f5a67a7debbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified attribute local name and namespace URI or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">具有指定属性本地名称和名称空间URI 的 &lt;code&gt;Attr&lt;/code&gt; 节点，如果没有这样的属性，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7652a895a29f2647e0b2dd18893f6b4dc0e428cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified name ( &lt;code&gt;nodeName&lt;/code&gt;) or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">具有指定名称（ &lt;code&gt;nodeName&lt;/code&gt; ）的 &lt;code&gt;Attr&lt;/code&gt; 节点，如果没有这样的属性，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a69dfdb305ce85fbed13fda0e8e19810074205f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; value as a string, or the empty string if that attribute does not have a specified or default value.</source>
          <target state="translated">该 &lt;code&gt;Attr&lt;/code&gt; 值作为一个字符串，或空字符串，如果该属性没有指定或默认值。</target>
        </trans-unit>
        <trans-unit id="f3aadc19c893a1efadaa932321d03e00dc3fdf32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributeSet&lt;/code&gt; interface is similar to the &lt;a href=&quot;../../../java/util/map&quot;&gt;Map&lt;/a&gt; interface: it provides a map of key to values, in which each key is unique and can contain no more than one value. However, the &lt;code&gt;AttributeSet&lt;/code&gt; interface is designed to specifically support the needs of the Java Print Service API. An &lt;code&gt;AttributeSet&lt;/code&gt; requires that:</source>
          <target state="translated">所述 &lt;code&gt;AttributeSet&lt;/code&gt; 接口类似于&lt;a href=&quot;../../../java/util/map&quot;&gt;地图&lt;/a&gt;接口：它提供地图密钥的将值，其中每个密钥都是唯一的，并且可以包含不超过一个值。但是， &lt;code&gt;AttributeSet&lt;/code&gt; 接口旨在专门支持Java Print Service API的需求。一个 &lt;code&gt;AttributeSet&lt;/code&gt; 中的要求：</target>
        </trans-unit>
        <trans-unit id="8af784200eedb9bf3ff696e5dfcb898cc72bbe54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioFormat&lt;/code&gt; class accommodates a number of common sound-file encoding techniques, including pulse-code modulation (PCM), mu-law encoding, and a-law encoding. These encoding techniques are predefined, but service providers can create new encoding types. The encoding that a specific format uses is named by its &lt;code&gt;encoding&lt;/code&gt; field.</source>
          <target state="translated">所述 &lt;code&gt;AudioFormat&lt;/code&gt; 类容纳了一些共同的声音文件的编码技术，包括脉冲编码调制（PCM），&amp;mu;律编码，和a-law编码。这些编码技术是预定义的，但是服务提供商可以创建新的编码类型。特定格式使用的 &lt;code&gt;encoding&lt;/code&gt; 由其编码字段命名。</target>
        </trans-unit>
        <trans-unit id="d7fd077369e0845cac37ae324fe142bf62bb88be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources.</source>
          <target state="translated">该 &lt;code&gt;AudioPermission&lt;/code&gt; 类表示访问权限的音响系统资源。</target>
        </trans-unit>
        <trans-unit id="663f73601babca7fe9a3f57db471ad6b7380920c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources. An &lt;code&gt;AudioPermission&lt;/code&gt; contains a target name but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">该 &lt;code&gt;AudioPermission&lt;/code&gt; 类表示访问权限的音响系统资源。一个 &lt;code&gt;AudioPermission&lt;/code&gt; 包含一个目标名称，但是没有动作列表; 您要么具有命名权限，要么没有。</target>
        </trans-unit>
        <trans-unit id="64530a02f14561a54d873e43c58fb4f8735319fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources.</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类充当入口点采样的音频系统资源。</target>
        </trans-unit>
        <trans-unit id="a212ac4197ad27334cc250327922918495c0a587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类充当入口点采样的音频系统资源。此类可让您查询和访问系统上安装的混合器。 &lt;code&gt;AudioSystem&lt;/code&gt; 包含多种方法，可用于在不同格式之间转换音频数据，以及在音频文件和流之间进行转换。它还提供了一种直接从 &lt;code&gt;AudioSystem&lt;/code&gt; 获取 &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 而不用明确处理混音器的方法。</target>
        </trans-unit>
        <trans-unit id="7af5ce7a31e2d4a27612651aee35e3f53a096d39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class includes many methods that manipulate &lt;code&gt;AudioInputStream&lt;/code&gt; objects. For example, the methods let you:</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类包括许多操作方法 &lt;code&gt;AudioInputStream&lt;/code&gt; 对象。例如，这些方法可让您：</target>
        </trans-unit>
        <trans-unit id="79cdc8d9c9f62ce1ec249481a0aed83f0d424285" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicAttribute&lt;/code&gt; class by default uses &lt;code&gt;Object.equals()&lt;/code&gt; to determine equality of attribute values when testing for equality or when searching for values, &lt;em&gt;except&lt;/em&gt; when the value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can make use of schema information when doing similar equality checks by overriding methods in which such use of schema is meaningful. Similarly, the &lt;code&gt;BasicAttribute&lt;/code&gt; class by default returns the values passed to its constructor and/or manipulated using the add/remove methods. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can override &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;getAll()&lt;/code&gt; to get the values dynamically from the directory (or implement the &lt;code&gt;Attribute&lt;/code&gt; interface directly instead of subclassing &lt;code&gt;BasicAttribute&lt;/code&gt;).</source>
          <target state="translated">默认情况下， &lt;code&gt;BasicAttribute&lt;/code&gt; 类使用 &lt;code&gt;Object.equals()&lt;/code&gt; 来确定属性值的相等性，以进行相等性测试或搜索值时（值是数组时&lt;em&gt;除外）&lt;/em&gt;。对于数组，使用 &lt;code&gt;Object.equals()&lt;/code&gt; 检查数组的每个元素。当进行类似的相等性检查时， &lt;code&gt;BasicAttribute&lt;/code&gt; 的子类可以通过覆盖其中有意义的模式使用方法来使用模式信息。同样，默认情况下， &lt;code&gt;BasicAttribute&lt;/code&gt; 类返回传递给其构造函数和/或使用add / remove方法进行操作的值。 &lt;code&gt;BasicAttribute&lt;/code&gt; 的子类可以覆盖 &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;getAll()&lt;/code&gt; 从目录动态获取值（或直接实现 &lt;code&gt;Attribute&lt;/code&gt; 接口，而不是对 &lt;code&gt;BasicAttribute&lt;/code&gt; 进行子类化）。</target>
        </trans-unit>
        <trans-unit id="1e0315176a90eb1a609d30f4d425382cc748e5d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; from which this event was propagated</source>
          <target state="translated">传播此事件的 &lt;code&gt;BeanContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe4221cd8e13142dfdb7397e431e92d56077adb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; in which this &lt;code&gt;BeanContextChild&lt;/code&gt; is nested.</source>
          <target state="translated">该 &lt;code&gt;BeanContext&lt;/code&gt; 在此 &lt;code&gt;BeanContextChild&lt;/code&gt; 中的嵌套。</target>
        </trans-unit>
        <trans-unit id="7971f5d644f18176b75055fa2a5ace4dd309fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is largely obsolete; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">该 &lt;code&gt;BigDecimal&lt;/code&gt; 的类给出了舍入行为的用户完全控制。如果未指定舍入模式并且无法表示确切结果，则会引发异常；否则，将抛出异常。否则，可以通过向运算提供适当的&lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt;对象，以选定的精度和舍入模式进行计算。无论哪种情况，都提供了八种&lt;em&gt;舍入模式&lt;/em&gt;用于控制舍入。使用此类中的整数字段（例如&lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;）来表示舍入模式已经过时了。应该改用 &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; 的枚举值（例如&lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5fc7942056b3dd79609c5265cf98ecc9a0e3f371" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;bigdecimal#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BigDecimal&lt;/code&gt; 类提供操作用于算术，比例操作，舍入，比较，散列和格式转换。所述&lt;a href=&quot;bigdecimal#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法提供了的规范表示 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df5a7760f638121c128fa1a36ad30ea0b851b272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class is actually a subclass of &lt;code&gt;NameClassPair&lt;/code&gt;, which consists simply of the object's name and the object's class name. The &lt;code&gt;NameClassPair&lt;/code&gt; is useful when you only want information about the object's class and do not want to pay the extra cost of getting the object.</source>
          <target state="translated">该 &lt;code&gt;Binding&lt;/code&gt; 类实际上是一个子类 &lt;code&gt;NameClassPair&lt;/code&gt; 的，它由简单对象的名称和对象的类名。当您只需要有关对象类的信息，而又不想为获取该对象支付额外费用时， &lt;code&gt;NameClassPair&lt;/code&gt; 很有用。</target>
        </trans-unit>
        <trans-unit id="0103dabbd8fe15655d49de0baddfafb3b9137bae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class represents a name-to-object binding. It is a tuple containing the name of the bound object, the name of the object's class, and the object itself.</source>
          <target state="translated">该 &lt;code&gt;Binding&lt;/code&gt; 类表示一个名称到对象的绑定。它是一个元组，其中包含绑定对象的名称，对象的类的名称以及对象本身。</target>
        </trans-unit>
        <trans-unit id="b8bb72f6e0722cb808bbfd786520a48b7182c75e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; instances that are returned must be identical to those returned by the &lt;code&gt;getBindings&lt;/code&gt; method of &lt;code&gt;ScriptContext&lt;/code&gt; called with corresponding arguments on the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">返回的 &lt;code&gt;Bindings&lt;/code&gt; 实例必须与 &lt;code&gt;ScriptContext&lt;/code&gt; 的 &lt;code&gt;getBindings&lt;/code&gt; 方法返回的实例相同，并 &lt;code&gt;ScriptEngine&lt;/code&gt; 的默认 &lt;code&gt;ScriptContext&lt;/code&gt; 上的相应参数进行调用。</target>
        </trans-unit>
        <trans-unit id="05940c6482bc9cee8cceaf4e697300ed0675d5d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; of key/value pairs, referred to as the &quot;Global Scope&quot; maintained by the manager is available to all instances of &lt;code&gt;ScriptEngine&lt;/code&gt; created by the &lt;code&gt;ScriptEngineManager&lt;/code&gt;. The values in the &lt;code&gt;Bindings&lt;/code&gt; are generally exposed in all scripts.</source>
          <target state="translated">由管理器维护的键/值对的 &lt;code&gt;Bindings&lt;/code&gt; （称为&amp;ldquo;全局范围&amp;rdquo;）可用于 &lt;code&gt;ScriptEngine&lt;/code&gt; Manager创建的 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 所有实例。 &lt;code&gt;Bindings&lt;/code&gt; 中的值通常在所有脚本中公开。</target>
        </trans-unit>
        <trans-unit id="c8872d0f95cad30df2b43f31fb08168cf4e82b4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; with the specified scope.</source>
          <target state="translated">具有指定范围的 &lt;code&gt;Bindings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d60a6b49fd7f6573e55ea030a9ceb3013e12f74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">对应于原始值 &lt;code&gt;false&lt;/code&gt; 的 &lt;code&gt;Boolean&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="aa5f6e88af022d56af88b562fb37e5a9055bbd43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">对应于原始值 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;Boolean&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8e5bd3e90c98cafc96c3bffb7cdb5902ec05efc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text.</source>
          <target state="translated">该 &lt;code&gt;BreakIterator&lt;/code&gt; 类实现方法用于查找文本中边界位置。</target>
        </trans-unit>
        <trans-unit id="da13029d818efd6f3b22a9f5835a453fd292a681" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text. Instances of &lt;code&gt;BreakIterator&lt;/code&gt; maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, &lt;code&gt;BreakIterator&lt;/code&gt; scans text using a &lt;code&gt;CharacterIterator&lt;/code&gt;, and is thus able to scan text held by any object implementing that protocol. A &lt;code&gt;StringCharacterIterator&lt;/code&gt; is used to scan &lt;code&gt;String&lt;/code&gt; objects passed to &lt;code&gt;setText&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;BreakIterator&lt;/code&gt; 类实现方法用于查找文本中边界位置。 &lt;code&gt;BreakIterator&lt;/code&gt; 的实例保持当前位置并扫描文本，以返回出现边界的字符的索引。在内部， &lt;code&gt;BreakIterator&lt;/code&gt; 使用 &lt;code&gt;CharacterIterator&lt;/code&gt; 扫描文本，因此能够扫描由实现该协议的任何对象保存的文本。一个 &lt;code&gt;StringCharacterIterator&lt;/code&gt; 用于扫描 &lt;code&gt;String&lt;/code&gt; 对象传递给 &lt;code&gt;setText&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8175672c5ab8c55357d73bfb557350df91b702a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; instances returned by the factory methods of this class are intended for use with natural languages only, not for programming language text. It is however possible to define subclasses that tokenize a programming language.</source>
          <target state="translated">此类的工厂方法返回的 &lt;code&gt;BreakIterator&lt;/code&gt; 实例仅适用于自然语言，而不适用于编程语言文本。但是，可以定义标记编程语言的子类。</target>
        </trans-unit>
        <trans-unit id="26575ce7aa6f5dba044d1067a9237fc3d869b533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Byte&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;byte&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="daee07dd88e16b4a70774f8e2ee84b6a66a8d825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object. An object of type &lt;code&gt;Byte&lt;/code&gt; contains a single field whose type is &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Byte&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;byte&lt;/code&gt; 中的对象。 &lt;code&gt;Byte&lt;/code&gt; 类型的对象包含一个类型为 &lt;code&gt;byte&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="c827bcb764af6d14358870b4c02cf9f314c2a1cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week.</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 类是一个抽象类，可以为在某一特定时刻和一组之间的转换的方法&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;如 &lt;code&gt;YEAR&lt;/code&gt; ， &lt;code&gt;MONTH&lt;/code&gt; ， &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; ， &lt;code&gt;HOUR&lt;/code&gt; ，等等，以及用于操纵该日历字段，如获取的日期下周的。</target>
        </trans-unit>
        <trans-unit id="e16a5c9a51c0c49e784ca00cfe336ed3439953f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 类是一个抽象类，可以为在某一特定时刻和一组之间的转换的方法&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;如 &lt;code&gt;YEAR&lt;/code&gt; ， &lt;code&gt;MONTH&lt;/code&gt; ， &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; ， &lt;code&gt;HOUR&lt;/code&gt; ，等等，以及用于操纵该日历字段，如获取的日期下周的。时间的瞬间可以用毫秒值表示，该值是从1970年1月1日格林尼治标准时间（Gregorian）到&lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;的偏移量。</target>
        </trans-unit>
        <trans-unit id="46f676ce0c4f91d6ea5cdaa0c0eeb686651fe70a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; parameters are the values represented by the &lt;code&gt;isLenient&lt;/code&gt;, &lt;code&gt;getFirstDayOfWeek&lt;/code&gt;, &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; and &lt;code&gt;getTimeZone&lt;/code&gt; methods. If there is any difference in those parameters between the two &lt;code&gt;Calendar&lt;/code&gt;s, this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 参数是由表示的值 &lt;code&gt;isLenient&lt;/code&gt; ， &lt;code&gt;getFirstDayOfWeek&lt;/code&gt; ， &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; 和 &lt;code&gt;getTimeZone&lt;/code&gt; 获取方法。如果两个 &lt;code&gt;Calendar&lt;/code&gt; 之间的这些参数存在任何差异，则此方法返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03f65fae6f6d35c57712e1b5d06c5ce4521fef51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Callable&lt;/code&gt; interface is similar to &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;, in that both are designed for classes whose instances are potentially executed by another thread. A &lt;code&gt;Runnable&lt;/code&gt;, however, does not return a result and cannot throw a checked exception.</source>
          <target state="translated">的 &lt;code&gt;Callable&lt;/code&gt; 接口类似于&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;，在这两个被设计为一个其实例潜在地由另一个线程执行。一个 &lt;code&gt;Runnable&lt;/code&gt; ，但是，不会返回结果并不能抛出checked异常。</target>
        </trans-unit>
        <trans-unit id="2fd30e66fda8ef1c3878a705a006694493584387" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertPath&lt;/code&gt; specified must be of a type that is supported by the validation algorithm, otherwise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; will be thrown. For example, a &lt;code&gt;CertPathValidator&lt;/code&gt; that implements the PKIX algorithm validates &lt;code&gt;CertPath&lt;/code&gt; objects of type X.509.</source>
          <target state="translated">指定的 &lt;code&gt;CertPath&lt;/code&gt; 必须是验证算法支持的类型，否则将引发 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 。例如，一个 &lt;code&gt;CertPathValidator&lt;/code&gt; 实现该算法PKIX验证 &lt;code&gt;CertPath&lt;/code&gt; 对象类型X.509的。</target>
        </trans-unit>
        <trans-unit id="36926f67fdea989d87063408fa653e4dfdb427d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s. Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is cloned.</source>
          <target state="translated">该 &lt;code&gt;CertStore&lt;/code&gt; 返回的初始化与指定 &lt;code&gt;CertStoreParameters&lt;/code&gt; 。在不同类型的 &lt;code&gt;CertStore&lt;/code&gt; 之间，所需的参数类型可能会有所不同。请注意，将克隆指定的 &lt;code&gt;CertStoreParameters&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="101822df3975adbcac61dad375ef170c3dd3f9ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Character&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;char&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="806bb96887766953bebd866e27ce9d8da08b4334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of type &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Character&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;char&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Character&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;char&lt;/code&gt; 的单个字段。</target>
        </trans-unit>
        <trans-unit id="ba3268238d079e4b2a6a12991e41beae19670cb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date and time fields are re-resolved. This allows fields in step four to produce &lt;code&gt;ChronoField&lt;/code&gt; values and have them be processed into dates and times.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 日期和时间字段重新解决。这使第四步中的字段可以产生 &lt;code&gt;ChronoField&lt;/code&gt; 值，并将它们处理为日期和时间。</target>
        </trans-unit>
        <trans-unit id="96e6680c1b998ca327d4d17aedbccdccc167dbcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 日期字段都解决了。这是使用&lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt;。有关字段解析的文档位于 &lt;code&gt;Chronology&lt;/code&gt; 的实现中。</target>
        </trans-unit>
        <trans-unit id="89d1beeae57332f5351b6ab29fde209df635e987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; time fields are resolved. This is documented on &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; and is the same for all chronologies.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 时间字段得到解决。在&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;上有记录，并且对于所有时间顺序都相同。</target>
        </trans-unit>
        <trans-unit id="82381a07b897d845e38a8fb6d968a572a981dcd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; instance provides a set of methods to create &lt;code&gt;ChronoLocalDate&lt;/code&gt; instances. The date classes are used to manipulate specific dates.</source>
          <target state="translated">该 &lt;code&gt;Chronology&lt;/code&gt; 实例提供了一组方法来创建 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 实例。日期类用于操纵特定日期。</target>
        </trans-unit>
        <trans-unit id="b67dfb19ed132a488f7220fb4dc014c909b089ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">该 &lt;code&gt;Chronology&lt;/code&gt; 代表使用的日历系统。ISO-8601日历系统是当今世界大多数地方使用的现代民用日历系统。它等效于多用的格里高利历系统，该系统在今天一直适用today年的规则。</target>
        </trans-unit>
        <trans-unit id="4197e57743f21fd2a15f8483e9ed9b922aac9ed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The era and other fields in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; are defined by the chronology.</source>
          <target state="translated">该 &lt;code&gt;Chronology&lt;/code&gt; 代表使用的日历系统。&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中的纪元和其他字段由年表定义。</target>
        </trans-unit>
        <trans-unit id="9ec2677d771f2243453abd3744eafeaaa8cc23f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;byte&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c5d8434bc0489103ac32d773f7b0d5d3c71265f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;char&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c0b196d2877a10ae544eb517c91cdc98d354fe55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;double&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3fc9063456a087c6ae2a09f36b8c79ce72af8fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;float&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="843262d0d1248a1926078c82957df1906c06c701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;int&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="f85e50e9d096ed50998edbe6558f68b79f3e5d09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">表示基本类型 &lt;code&gt;long&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="06ed2f03cfacda7175bed94156559a38e6923b0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;short&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="0bddc54347ed58d9c0c85b45c41a02b37fd779ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and optional &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">根据数据创建的 &lt;code&gt;Class&lt;/code&gt; 对象，以及可选的 &lt;code&gt;ProtectionDomain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e690995fffbb2c3b6c4761982fccbec41cd68fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object for the specified &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">指定 &lt;code&gt;name&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="23dcb43f82d588ed515276419645673633932ecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object representing the pseudo-type corresponding to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">表示与关键字 &lt;code&gt;void&lt;/code&gt; 对应的伪类型的 &lt;code&gt;Class&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="d08a4d00bff7d8642e575b877c58fa1bcc6f66c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that represents the runtime class of this object.</source>
          <target state="translated">的 &lt;code&gt;Class&lt;/code&gt; 对象，表示运行时类此对象。</target>
        </trans-unit>
        <trans-unit id="1a36611cde5a9560399b57b3e163d1767e367923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data</source>
          <target state="translated">从指定的类数据创建的 &lt;code&gt;Class&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="f80f806d21a19e64a5fdd872d0ac53f89e33de6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data.</source>
          <target state="translated">从指定的类数据创建的 &lt;code&gt;Class&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="4584f55b815597f64d3b967ed1a51e3f17ff42f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt; if the class has not been loaded</source>
          <target state="translated">的 &lt;code&gt;Class&lt;/code&gt; 对象，或 &lt;code&gt;null&lt;/code&gt; 如果类尚未加载</target>
        </trans-unit>
        <trans-unit id="53769dc20c24f269ab332a337f22729fbb2a017c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself. The virtual machine's built-in class loader, called the &quot;bootstrap class loader&quot;, does not itself have a parent but may serve as the parent of a &lt;code&gt;ClassLoader&lt;/code&gt; instance.</source>
          <target state="translated">该 &lt;code&gt;ClassLoader&lt;/code&gt; 类使用委托模型来搜索类和资源。每个 &lt;code&gt;ClassLoader&lt;/code&gt; 实例都有一个关联的父类加载器。当请求查找类或资源时， &lt;code&gt;ClassLoader&lt;/code&gt; 实例会将对类或资源的搜索委托给其父类加载器，然后再尝试查找类或资源本身。虚拟机的内置类加载器（称为&amp;ldquo;引导类加载器&amp;rdquo;）本身没有父级，但可以用作 &lt;code&gt;ClassLoader&lt;/code&gt; 实例的父级。</target>
        </trans-unit>
        <trans-unit id="7baf7494690c1ab3f8e2f12b250cac6e80e44abb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clip&lt;/code&gt; interface represents a special kind of data line whose audio data can be loaded prior to playback, instead of being streamed in real time.</source>
          <target state="translated">的 &lt;code&gt;Clip&lt;/code&gt; 接口表示一种特殊的数据线的音频数据可以事先被加载到播放，而不是被流式传输的实时性。</target>
        </trans-unit>
        <trans-unit id="07dd3f9173350c44103b58ad3909560986b18dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CodecSet&lt;/code&gt; class creates and saves a single service instance at initialization:</source>
          <target state="translated">该 &lt;code&gt;CodecSet&lt;/code&gt; 类创建和初始化时节省了一个服务实例：</target>
        </trans-unit>
        <trans-unit id="cf493d6742a6c242a0b1d360dfba83fb4b87d243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string.</source>
          <target state="translated">该 &lt;code&gt;CollationElementIterator&lt;/code&gt; 类用作一个迭代器通过国际字符串的每个字符行走。</target>
        </trans-unit>
        <trans-unit id="46ce50a913e7c2a368bfe8ae348e20f4b0760cdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string. Use the iterator to return the ordering priority of the positioned character. The ordering priority of a character, which we refer to as a key, defines how a character is collated in the given collation object.</source>
          <target state="translated">该 &lt;code&gt;CollationElementIterator&lt;/code&gt; 类用作一个迭代器通过国际字符串的每个字符行走。使用迭代器返回定位字符的排序优先级。字符的排序优先级（我们称为键）定义了如何在给定的整理对象中整理字符。</target>
        </trans-unit>
        <trans-unit id="7933f59bdf875c37eb441af7f9a60a666a8d3fcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison.</source>
          <target state="translated">该 &lt;code&gt;Collator&lt;/code&gt; 类执行区分语言环境 &lt;code&gt;String&lt;/code&gt; 比较。</target>
        </trans-unit>
        <trans-unit id="bb398f128eef70308b7f92e45e6eb18ce6533c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison. You use this class to build searching and sorting routines for natural language text.</source>
          <target state="translated">该 &lt;code&gt;Collator&lt;/code&gt; 类执行区分语言环境 &lt;code&gt;String&lt;/code&gt; 比较。您可以使用此类为自然语言文本构建搜索和排序例程。</target>
        </trans-unit>
        <trans-unit id="ff9824bbcacb67b79596d130b57096444e5903bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collection&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; copied. Instead, a reference is used. This allows the caller to subsequently add or remove &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s from the &lt;code&gt;Collection&lt;/code&gt;, thus changing the set of &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s available to the Collection &lt;code&gt;CertStore&lt;/code&gt;. The Collection &lt;code&gt;CertStore&lt;/code&gt; will not modify the contents of the &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Collection&lt;/code&gt; 是&lt;b&gt;不是&lt;/b&gt;复制。而是使用参考。这允许调用者随后从 &lt;code&gt;Collection&lt;/code&gt; 添加或删除 &lt;code&gt;Certificates&lt;/code&gt; 或 &lt;code&gt;CRL&lt;/code&gt; ，从而更改可用于集合 &lt;code&gt;CertStore&lt;/code&gt; 的 &lt;code&gt;Certificates&lt;/code&gt; 或 &lt;code&gt;CRL&lt;/code&gt; 的集合。集合 &lt;code&gt;CertStore&lt;/code&gt; 不会修改 &lt;code&gt;Collection&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="7e13ccfa1d055a7b6b34e9e36830f7d323272c74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be used as a prototype.</source>
          <target state="translated">用作原型的 &lt;code&gt;ColorModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c82336186c250b7812d70c226ebe5d94f5b9c56d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services.</source>
          <target state="translated">该 &lt;code&gt;Compiler&lt;/code&gt; 类主要支持Java到本机代码的编译器及相关服务。</target>
        </trans-unit>
        <trans-unit id="5baf789bd5f3f16f61d707fd5b133cbba7948544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation.</source>
          <target state="translated">该 &lt;code&gt;Compiler&lt;/code&gt; 类主要支持Java到本机代码的编译器及相关服务。按照设计， &lt;code&gt;Compiler&lt;/code&gt; 类不执行任何操作。它充当JIT编译器实现的占位符。</target>
        </trans-unit>
        <trans-unit id="7a10136967e2d7cca0ff7de90479711b3afa89dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">所述 &lt;code&gt;CompositeData&lt;/code&gt; 接口指定的复合物的特定类型的行为</target>
        </trans-unit>
        <trans-unit id="430611e20757b0f69b3d3c4ac8a5e89a65ae2e00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="b09b9ac999e11e7f7254865f0fdfb600871077d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;CompositeType&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="c17feb321bde2a79f87864039c7202bea866d7a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; that will appear in the &lt;code&gt;openType&lt;/code&gt; field of the &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for an attribute or operation of this type will show only the &lt;code&gt;units&lt;/code&gt; item, but the actual &lt;code&gt;CompositeData&lt;/code&gt; that is generated will have both &lt;code&gt;units&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;CompositeType&lt;/code&gt; 将出现在所述 &lt;code&gt;openType&lt;/code&gt; 所述的字段&lt;a href=&quot;../descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;为这种类型的属性或操作中，只显示 &lt;code&gt;units&lt;/code&gt; 的项目，但实际 &lt;code&gt;CompositeData&lt;/code&gt; 所生成将具有两个 &lt;code&gt;units&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4f8fc7d40062e4c808ea460664fdc3d048a2824" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConsoleHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values).</source>
          <target state="translated">所述 &lt;code&gt;ConsoleHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值）。</target>
        </trans-unit>
        <trans-unit id="468370b0a51ca057342fdb1fe58204389f4fdab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Constructor&lt;/code&gt; object for the constructor with the specified parameter list</source>
          <target state="translated">具有指定参数列表的构造函数的 &lt;code&gt;Constructor&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="bfe2741b9b06f16764928ba36a45cb667f568913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type</source>
          <target state="translated">所述 &lt;code&gt;ContentHandlerFactory&lt;/code&gt; 实例用于从内容类型构造内容处理程序</target>
        </trans-unit>
        <trans-unit id="6e23ef999b2d94dd091ae6002a808cf050bfabb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">该 &lt;code&gt;ControllerEventListener&lt;/code&gt; 接口应由其实例需要在一个通知来实现 &lt;code&gt;Sequencer&lt;/code&gt; 已经处理MIDI控制更改事件的请求类型。</target>
        </trans-unit>
        <trans-unit id="f48b495c5fff66a44f844b4e81d54ec584a1e19d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">该 &lt;code&gt;ControllerEventListener&lt;/code&gt; 接口应由其实例需要在一个通知来实现 &lt;code&gt;Sequencer&lt;/code&gt; 已经处理MIDI控制更改事件的请求类型。要注册 &lt;code&gt;ControllerEventListener&lt;/code&gt; 对象以接收此类通知，请调用 &lt;code&gt;Sequencer&lt;/code&gt; 的&lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt;方法，并指定要获取其控制更改通知所感兴趣的MIDI控制器的类型。</target>
        </trans-unit>
        <trans-unit id="8c1e7fd606cd7d58420cac08a722d5a8762857c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CyclicBarrier&lt;/code&gt; uses an all-or-none breakage model for failed synchronization attempts: If a thread leaves a barrier point prematurely because of interruption, failure, or timeout, all other threads waiting at that barrier point will also leave abnormally via &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../lang/interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt; if they too were interrupted at about the same time).</source>
          <target state="translated">该 &lt;code&gt;CyclicBarrier&lt;/code&gt; 使用了失败的同步尝试全或无破损模式：如果一个线程叶子过早，因为中断，失败，或者超时的屏障点，其他所有线程在该屏障点等待也通过留下异常&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;../../lang/interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; 的&lt;/a&gt;如果他们也大约同时被打断了）。</target>
        </trans-unit>
        <trans-unit id="f41cc015a47378ec64cceb98239ef99d458497d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types.</source>
          <target state="translated">所述 &lt;code&gt;DataInput&lt;/code&gt; 接口提供用于从二进制流中读取的字节和在任何Java基本类型的从中数据重建。</target>
        </trans-unit>
        <trans-unit id="713665bba38945d968dff6d6d30215a3f4b01909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types. There is also a facility for reconstructing a &lt;code&gt;String&lt;/code&gt; from data in &lt;a href=&quot;#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format.</source>
          <target state="translated">所述 &lt;code&gt;DataInput&lt;/code&gt; 接口提供用于从二进制流中读取的字节和在任何Java基本类型的从中数据重建。还有一种功能可以从&lt;a href=&quot;#modified-utf-8&quot;&gt;UTF-8修改版&lt;/a&gt;格式的数据中重建 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55a2923cd40c06c6ccaeab383d62605e85c6dfc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream.</source>
          <target state="translated">所述 &lt;code&gt;DataOutput&lt;/code&gt; 中界面提供用于从任何Java基本类型的将数据转换成一系列字节的和写入这些字节到二进制流。</target>
        </trans-unit>
        <trans-unit id="b1c1a548a4fef08005d8b50ede7de089c4162ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream. There is also a facility for converting a &lt;code&gt;String&lt;/code&gt; into &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format and writing the resulting series of bytes.</source>
          <target state="translated">所述 &lt;code&gt;DataOutput&lt;/code&gt; 中界面提供用于从任何Java基本类型的将数据转换成一系列字节的和写入这些字节到二进制流。还有一种用于将 &lt;code&gt;String&lt;/code&gt; 转换为&lt;a href=&quot;datainput#modified-utf-8&quot;&gt;修改后的UTF-8&lt;/a&gt;格式并写入结果字节序列的工具。</target>
        </trans-unit>
        <trans-unit id="bae5d85b0a42eaf39decbc0f3619a5ca6e1c5bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available.</source>
          <target state="translated">该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 是一个具体的实现抽象的 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 类是类哪些没有信息可供默认使用的委托。</target>
        </trans-unit>
        <trans-unit id="75831a1da7576e44d5307c7a6c20301c7e176c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available. The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides, version resilient, public API-based persistence for classes that follow the JavaBeans&amp;trade; conventions without any class specific configuration.</source>
          <target state="translated">该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 是一个具体的实现抽象的 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 类是类哪些没有信息可供默认使用的委托。该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 提供，对于遵循JavaBeans&amp;trade;约定，没有任何类特定的配置类的版本有弹性，公众基于API的持久性。</target>
        </trans-unit>
        <trans-unit id="19c0a619c4b42fee2219550878c9a024c390cb05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DependsOn&lt;/code&gt; example might be coded as follows.</source>
          <target state="translated">该 &lt;code&gt;DependsOn&lt;/code&gt; 例如可以按如下进行编码。</target>
        </trans-unit>
        <trans-unit id="65ab9904319fac8d824298c966242d71776b1070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for each of these objects will also have a field &lt;code&gt;originalType&lt;/code&gt; that is a string representing the Java type that appeared in the MXBean interface. The format of this string is described in the section &lt;a href=&quot;#type-names&quot;&gt;Type Names&lt;/a&gt; below.</source>
          <target state="translated">每个对象的 &lt;code&gt;Descriptor&lt;/code&gt; 还将具有一个字段 &lt;code&gt;originalType&lt;/code&gt; ，该字段是一个字符串，表示出现在MXBean接口中的Java类型。该字符串的格式在下面的&amp;ldquo; &lt;a href=&quot;#type-names&quot;&gt;类型名称&lt;/a&gt; &amp;rdquo;部分中进行了描述。</target>
        </trans-unit>
        <trans-unit id="6f443be3508a6b4f42f8d8c9fdea432ec155aa3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;mxbean&lt;/code&gt; whose value is the string &quot;&lt;code&gt;true&lt;/code&gt;&quot;.</source>
          <target state="translated">该 &lt;code&gt;Descriptor&lt;/code&gt; 的 &lt;code&gt;MBeanInfo&lt;/code&gt; 的将有一个字段 &lt;code&gt;mxbean&lt;/code&gt; ，它的值是字符串&amp;ldquo; &lt;code&gt;true&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4f7dec71d977b06ccc515422e0d73eebb02b25d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values.</source>
          <target state="translated">的 &lt;code&gt;Dictionary&lt;/code&gt; 类是任何类，如抽象父 &lt;code&gt;Hashtable&lt;/code&gt; ，将键映射到的值。</target>
        </trans-unit>
        <trans-unit id="699c289ae38cf13e2c3626e341eabeb096b9a84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values. Every key and every value is an object. In any one &lt;code&gt;Dictionary&lt;/code&gt; object, every key is associated with at most one value. Given a &lt;code&gt;Dictionary&lt;/code&gt; and a key, the associated element can be looked up. Any non-&lt;code&gt;null&lt;/code&gt; object can be used as a key and as a value.</source>
          <target state="translated">的 &lt;code&gt;Dictionary&lt;/code&gt; 类是任何类，如抽象父 &lt;code&gt;Hashtable&lt;/code&gt; ，将键映射到的值。每个键和每个值都是一个对象。在任何一个 &lt;code&gt;Dictionary&lt;/code&gt; 对象中，每个键最多与一个值关联。给定一个 &lt;code&gt;Dictionary&lt;/code&gt; 和一个key，就可以查找相关的元素。任何非 &lt;code&gt;null&lt;/code&gt; 对象都可以用作键和值。</target>
        </trans-unit>
        <trans-unit id="ac8ca23a09be9f2d05c779e843421c46aa3ea44e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirContext&lt;/code&gt; interface represents a &lt;em&gt;directory context&lt;/em&gt;. It defines methods for examining and updating attributes associated with a &lt;em&gt;directory object&lt;/em&gt;, or &lt;em&gt;directory entry&lt;/em&gt; as it is sometimes called.</source>
          <target state="translated">的 &lt;code&gt;DirContext&lt;/code&gt; 接口表示&lt;em&gt;目录上下文&lt;/em&gt;。它定义了检查和更新与&lt;em&gt;目录对象&lt;/em&gt;或有时称为&lt;em&gt;目录条目的&lt;/em&gt;属性相关联的方法。</target>
        </trans-unit>
        <trans-unit id="f0d66cda55834a4404c6ebd9f0fc24fcb8fcd600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;double&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="d119dbf666fc6ea150e2c28f463b377c7a4b4f23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object. An object of type &lt;code&gt;Double&lt;/code&gt; contains a single field whose type is &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;double&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Double&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;double&lt;/code&gt; 的单个字段。</target>
        </trans-unit>
        <trans-unit id="bd923e66451c09da1d3d4e1f6626a2df5c8337ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the &lt;code&gt;ScriptContext&lt;/code&gt; contains the bindings of scripting variables to application objects to be used during this script execution.</source>
          <target state="translated">该 &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; 了的 &lt;code&gt;ScriptContext&lt;/code&gt; 中包含此脚本执行期间使用脚本变量的应用对象的绑定。</target>
        </trans-unit>
        <trans-unit id="7ac2a2597218d88488760abbe3572d583515c44b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ERA&lt;/code&gt; field returns a range for the one valid Hijrah era.</source>
          <target state="translated">在 &lt;code&gt;ERA&lt;/code&gt; 字段返回为一个有效的伊历时代范围。</target>
        </trans-unit>
        <trans-unit id="0000711917ddc5bd5d5eb440dd34fe945066b5e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class is static, so that all &lt;code&gt;AudioFormat&lt;/code&gt; objects that have the same encoding will refer to the same object (rather than different instances of the same class). This allows matches to be made by checking that two format's encodings are equal.</source>
          <target state="translated">的 &lt;code&gt;Encoding&lt;/code&gt; 类是静态的，以使所有 &lt;code&gt;AudioFormat&lt;/code&gt; 具有相同的编码对象将是指相同的对象（而不是同一类的不同实例）。这样可以通过检查两种格式的编码是否相等来进行匹配。</target>
        </trans-unit>
        <trans-unit id="1a1ea0fb7e3f89b73df59f57bc0a3bb25057d04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class names the specific type of data representation used for an audio stream.</source>
          <target state="translated">的 &lt;code&gt;Encoding&lt;/code&gt; 类名称用于音频流的数据表示的具体类型。</target>
        </trans-unit>
        <trans-unit id="579a96ad9bfb2cbe0dbb67099e0bc3e08f52c25e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Encoding&lt;/code&gt; class names the specific type of data representation used for an audio stream. The encoding includes aspects of the sound format other than the number of channels, sample rate, sample size, frame rate, frame size, and byte order.</source>
          <target state="translated">的 &lt;code&gt;Encoding&lt;/code&gt; 类名称用于音频流的数据表示的具体类型。除了通道数，采样率，采样大小，帧速率，帧大小和字节顺序之外，编码还包括声音格式的各个方面。</target>
        </trans-unit>
        <trans-unit id="c57bc9aa7ce02ee33576a9afbd97413544332913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventContext&lt;/code&gt; instance on which you invoke the registration methods is the &lt;em&gt;event source&lt;/em&gt; of the events that are (potentially) generated. The source is &lt;em&gt;not necessarily&lt;/em&gt; the object named by the target. Only when the target is the empty name is the object named by the target the source. In other words, the target, along with the scope parameter, are used to identify the object(s) that the listener is interested in, but the event source is the &lt;code&gt;EventContext&lt;/code&gt; instance with which the listener has registered.</source>
          <target state="translated">在其上调用注册方法的 &lt;code&gt;EventContext&lt;/code&gt; 实例是（可能）生成的事件的&lt;em&gt;事件源&lt;/em&gt;。源&lt;em&gt;不一定&lt;/em&gt;是目标命名的对象。仅当目标为空名称时，目标才为源命名对象。换句话说，目标与scope参数一起用于标识侦听器感兴趣的对象，但是事件源是侦听器已向其注册的 &lt;code&gt;EventContext&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="0401b3ef0ddcd75a11b4100c749b173a19fed9a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventHandler&lt;/code&gt; class is intended to be used by interactive tools, such as application builders, that allow developers to make connections between beans. Typically connections are made from a user interface bean (the event &lt;em&gt;source&lt;/em&gt;) to an application logic bean (the &lt;em&gt;target&lt;/em&gt;). The most effective connections of this kind isolate the application logic from the user interface. For example, the &lt;code&gt;EventHandler&lt;/code&gt; for a connection from a &lt;code&gt;JCheckBox&lt;/code&gt; to a method that accepts a boolean value can deal with extracting the state of the check box and passing it directly to the method so that the method is isolated from the user interface layer.</source>
          <target state="translated">该 &lt;code&gt;EventHandler&lt;/code&gt; 类旨在通过互动工具，如应用程序构建，它允许开发人员在bean之间建立连接使用。通常，连接是从用户界面Bean（事件&lt;em&gt;源&lt;/em&gt;）到应用程序逻辑Bean（&lt;em&gt;目标&lt;/em&gt;）建立的。这种最有效的连接将应用程序逻辑与用户界面隔离开。例如，用于从 &lt;code&gt;JCheckBox&lt;/code&gt; 到接受布尔值的方法的连接的 &lt;code&gt;EventHandler&lt;/code&gt; 可以处理提取复选框的状态并将其直接传递给该方法，以便该方法与用户界面层隔离。</target>
        </trans-unit>
        <trans-unit id="0a0c2cb5421950ae7ac855868e35820ff6dd57b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventHandler&lt;/code&gt; class provides support for dynamically generating event listeners whose methods execute a simple statement involving an incoming event object and a target object.</source>
          <target state="translated">的 &lt;code&gt;EventHandler&lt;/code&gt; 类提供了动态生成事件侦听器的方法执行涉及传入事件对象和目标对象的简单语句。</target>
        </trans-unit>
        <trans-unit id="18ab01a7844cde2885367a84cc967515963ae74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Executable&lt;/code&gt; declaring this parameter.</source>
          <target state="translated">声明此参数的 &lt;code&gt;Executable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="748442734a6da04d6ba765d11eb14f744d0ff842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Executor&lt;/code&gt; implementations provided in this package implement &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt;, which is a more extensive interface. The &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; class provides an extensible thread pool implementation. The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for these Executors.</source>
          <target state="translated">此程序包中提供的 &lt;code&gt;Executor&lt;/code&gt; 实现实现&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;/a&gt;，这是一个更广泛的接口。该&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;类提供一个可扩展的线程池实现。该&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类为这些Executor提供了便捷的工厂方法。</target>
        </trans-unit>
        <trans-unit id="104e889b683697e2a1535a79c04ec73d00af897b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; can either write to a specified file, or it can write to a rotating set of files.</source>
          <target state="translated">该 &lt;code&gt;FileHandler&lt;/code&gt; 可以到指定的文件要么写，也可以写入文件轮换集的。</target>
        </trans-unit>
        <trans-unit id="c629d1686ef85f09a631d3c6d79e16eb2130db7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to no limit, and the file count is set to one.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置为没有限制，并且将文件计数设置为1。</target>
        </trans-unit>
        <trans-unit id="1630482434078ed5febe3695c2cacb2c6ab11a76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to no limit, the file count is set to one, and the append mode is set to the given &lt;code&gt;append&lt;/code&gt; argument.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置为没有限制的，该文件计数设置为一个，并且附加模式是集给定的 &lt;code&gt;append&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="87b15897d52aed2848665ab23e99dca1351949cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument, and the append mode is set to the given &lt;code&gt;append&lt;/code&gt; argument.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置到极限参数，该文件计数设置为给定的计数参数，并将append模式设置为给定的 &lt;code&gt;append&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="a5f603ee32e4c43503a06a42f3d23eed55051d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given pattern argument is used as the filename pattern, the file limit is set to the limit argument, and the file count is set to the given count argument.</source>
          <target state="translated">所述 &lt;code&gt;FileHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的模式参数用作文件名模式中，文件限制设置到极限参数，该文件计数设置为给定的计数参数。</target>
        </trans-unit>
        <trans-unit id="d9aef651c660cc7e3ebf06c721651629cdc87d53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;float&lt;/code&gt; in an object.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;float&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="faf56435fef80020d3a74b994d56ec27fef71d7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Float&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;float&lt;/code&gt; in an object. An object of type &lt;code&gt;Float&lt;/code&gt; contains a single field whose type is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Float&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;float&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Float&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;float&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="ff1bf80c3497af61acd8a7e490e0a49fe5769bad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FloatControl&lt;/code&gt; abstract class provides methods to set and get the control's current floating-point value. Other methods obtain the possible range of values and the control's resolution (the smallest increment between returned values). Some float controls allow ramping to a new value over a specified period of time. &lt;code&gt;FloatControl&lt;/code&gt; also includes methods that return string labels for the minimum, maximum, and midpoint positions of the control.</source>
          <target state="translated">该 &lt;code&gt;FloatControl&lt;/code&gt; 抽象类提供设置和获取控件的当前浮点值。其他方法可以获取可能的值范围和控件的分辨率（返回值之间的最小增量）。一些浮动控件允许在指定的时间段内斜升到新值。 &lt;code&gt;FloatControl&lt;/code&gt; 还包括一些方法，这些方法返回控件的最小，最大和中点位置的字符串标签。</target>
        </trans-unit>
        <trans-unit id="1cd58efa168d666747712c3d3c73a1908978fecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FloatControl&lt;/code&gt; class has methods to impose a maximum and minimum allowable value for gain. However, because an audio signal might already be at a high amplitude, the maximum setting does not guarantee that the signal will be undistorted when the gain is applied to it (unless the maximum is zero or negative). To avoid numeric overflow from excessively large gain settings, a gain control can implement clipping, meaning that the signal's amplitude will be limited to the maximum value representable by its audio format, instead of wrapping around.</source>
          <target state="translated">该 &lt;code&gt;FloatControl&lt;/code&gt; 类有方法的最大和最小允许值施加增益。但是，由于音频信号可能已经处于高振幅，因此最大设置不能保证在对其施加增益时信号不会失真（除非最大值为零或负）。为了避免过大的增益设置引起数值溢出，增益控制可以实现削波，这意味着信号的幅度将被限制为其音频格式可表示的最大值，而不是回绕。</target>
        </trans-unit>
        <trans-unit id="85f7d029dde3a2e7afbc7ce6cee578e8429c56f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Formattable&lt;/code&gt; 接口必须由任何类需要执行自定义使用格式来实现 &lt;code&gt;'s'&lt;/code&gt; 的转换指定&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fdc2f6ed9da54144faf7ffc672bbd4b1c6864d1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formattable&lt;/code&gt; interface must be implemented by any class that needs to perform custom formatting using the &lt;code&gt;'s'&lt;/code&gt; conversion specifier of &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;. This interface allows basic control for formatting arbitrary objects. For example, the following class prints out different representations of a stock's name depending on the flags and length constraints: &lt;code&gt;import java.nio.CharBuffer;
   import java.util.Formatter;
   import java.util.Formattable;
   import java.util.Locale;
   import static java.util.FormattableFlags.*;

  ...

   public class StockName implements Formattable {
       private String symbol, companyName, frenchCompanyName;
       public StockName(String symbol, String companyName,
                        String frenchCompanyName) {
           ...
       }

       ...

       public void formatTo(Formatter fmt, int f, int width, int precision) {
           StringBuilder sb = new StringBuilder();

           // decide form of name
           String name = companyName;
           if (fmt.locale().equals(Locale.FRANCE))
               name = frenchCompanyName;
           boolean alternate = (f &amp;amp; ALTERNATE) == ALTERNATE;
           boolean usesymbol = alternate || (precision != -1 &amp;amp;&amp;amp; precision &amp;lt; 10);
           String out = (usesymbol ? symbol : name);

           // apply precision
           if (precision == -1 || out.length() &amp;lt; precision) {
               // write it all
               sb.append(out);
           } else {
               sb.append(out.substring(0, precision - 1)).append('*');
           }

           // apply width and justification
           int len = sb.length();
           if (len &amp;lt; width)
               for (int i = 0; i &amp;lt; width - len; i++)
                   if ((f &amp;amp; LEFT_JUSTIFY) == LEFT_JUSTIFY)
                       sb.append(' ');
                   else
                       sb.insert(0, ' ');

           fmt.format(sb.toString());
       }

       public String toString() {
           return String.format(&quot;%s - %s&quot;, symbol, companyName);
       }
   }
 &lt;/code&gt;</source>
          <target state="translated">所述 &lt;code&gt;Formattable&lt;/code&gt; 接口必须由任何类需要执行自定义使用格式来实现 &lt;code&gt;'s'&lt;/code&gt; 的转换指定&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。该接口允许对格式化任意对象进行基本控制。例如，以下类根据标志和长度限制来打印出股票名称的不同表示形式： &lt;code&gt;import java.nio.CharBuffer; import java.util.Formatter; import java.util.Formattable; import java.util.Locale; import static java.util.FormattableFlags.*; ... public class StockName implements Formattable { private String symbol, companyName, frenchCompanyName; public StockName(String symbol, String companyName, String frenchCompanyName) { ... } ... public void formatTo(Formatter fmt, int f, int width, int precision) { StringBuilder sb = new StringBuilder(); // decide form of name String name = companyName; if (fmt.locale().equals(Locale.FRANCE)) name = frenchCompanyName; boolean alternate = (f &amp;amp; ALTERNATE) == ALTERNATE; boolean usesymbol = alternate || (precision != -1 &amp;amp;&amp;amp; precision &amp;lt; 10); String out = (usesymbol ? symbol : name); // apply precision if (precision == -1 || out.length() &amp;lt; precision) { // write it all sb.append(out); } else { sb.append(out.substring(0, precision - 1)).append('*'); } // apply width and justification int len = sb.length(); if (len &amp;lt; width) for (int i = 0; i &amp;lt; width - len; i++) if ((f &amp;amp; LEFT_JUSTIFY) == LEFT_JUSTIFY) sb.append(' '); else sb.insert(0, ' '); fmt.format(sb.toString()); } public String toString() { return String.format(&quot;%s - %s&quot;, symbol, companyName); } } &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded1b8b780654793fea0795f740f95473dfc0b75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Formatter&lt;/code&gt;'s &quot;tail&quot; string is written to the stream before it is closed. In addition, if the &lt;code&gt;Formatter&lt;/code&gt;'s &quot;head&quot; string has not yet been written to the stream, it will be written before the &quot;tail&quot; string.</source>
          <target state="translated">在关闭流之前，将 &lt;code&gt;Formatter&lt;/code&gt; 的&amp;ldquo; tail&amp;rdquo;字符串写入流中。另外，如果尚未将 &lt;code&gt;Formatter&lt;/code&gt; 的&amp;ldquo; head&amp;rdquo;字符串写入流中，则将其写入&amp;ldquo; tail&amp;rdquo;字符串之前。</target>
        </trans-unit>
        <trans-unit id="5f0017742b86bb525c52b44a372868ba47f8c805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Future&lt;/code&gt; interface defines the &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method to cancel execution. This causes all threads waiting on the result of the I/O operation to throw &lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;. Whether the underlying I/O operation can be cancelled is highly implementation specific and therefore not specified. Where cancellation leaves the channel, or the entity to which it is connected, in an inconsistent state, then the channel is put into an implementation specific &lt;em&gt;error state&lt;/em&gt; that prevents further attempts to initiate I/O operations that are</source>
          <target state="translated">在 &lt;code&gt;Future&lt;/code&gt; 接口定义的&lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;方法来取消执行。这将导致所有等待I / O操作结果的线程都抛出&lt;a href=&quot;../../util/concurrent/cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;。是否可以取消基础I / O操作是高度特定于实现的，因此未指定。如果取消操作使通道或其所连接的实体处于不一致状态，则通道将进入特定于实现的&lt;em&gt;错误状态&lt;/em&gt;，该&lt;em&gt;错误状态&lt;/em&gt;将阻止进一步尝试启动I / O操作。</target>
        </trans-unit>
        <trans-unit id="0794b1416bd199f56af33739272b109badf5de09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GeneralSecurityException&lt;/code&gt; class is a generic security exception class that provides type safety for all the security-related exception classes that extend from it.</source>
          <target state="translated">该 &lt;code&gt;GeneralSecurityException&lt;/code&gt; 类是一个一般安全异常类，提供类型安全为所有从其扩展的与安全有关的异常类。</target>
        </trans-unit>
        <trans-unit id="8c32683bb604a52bbbd12a72cd3f38b11977a353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GetTimeRequest&lt;/code&gt; and &lt;code&gt;GetTimeResponse&lt;/code&gt; classes might be defined as follows:</source>
          <target state="translated">该 &lt;code&gt;GetTimeRequest&lt;/code&gt; 和 &lt;code&gt;GetTimeResponse&lt;/code&gt; 之类可能被定义如下：</target>
        </trans-unit>
        <trans-unit id="7b3db553a343fd330b52da577c5515316776d097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Handler&lt;/code&gt; is responsible for formatting the message, when and if necessary. The formatting should include localization.</source>
          <target state="translated">该 &lt;code&gt;Handler&lt;/code&gt; 是负责格式化消息时，如果必要的。格式应包括本地化。</target>
        </trans-unit>
        <trans-unit id="91085e13e25b56334d0136ad6a6a3aeb2acef937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOByteBuffer&lt;/code&gt; class provides an alternative way to perform reads of sequences of bytes that reduces the amount of internal data copying.</source>
          <target state="translated">所述 &lt;code&gt;IIOByteBuffer&lt;/code&gt; 类提供了可降低内部数据复制的量的字节序列来执行的另一种方式读出。</target>
        </trans-unit>
        <trans-unit id="a9e351d66bd62ad441f8bd1a17f3defde63a80bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOMetadataController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOMetadata&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This value overrides any default controller, even when &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;IIOMetadataController&lt;/code&gt; 将被用于此提供的设置 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象时 &lt;code&gt;activateController&lt;/code&gt; 方法被调用。该值将覆盖所有默认控制器，即使为 &lt;code&gt;null&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="f17066ba75d42abb02e2b439c5a64a255a531a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOParamController&lt;/code&gt; that will be used to provide settings for this &lt;code&gt;IIOParam&lt;/code&gt; object when the &lt;code&gt;activateController&lt;/code&gt; method is called. This value overrides any default controller, even when null.</source>
          <target state="translated">所述 &lt;code&gt;IIOParamController&lt;/code&gt; 将被用于此提供的设置 &lt;code&gt;IIOParam&lt;/code&gt; 所有对象时 &lt;code&gt;activateController&lt;/code&gt; 方法被调用。该值将覆盖所有默认控制器，即使为null也不例外。</target>
        </trans-unit>
        <trans-unit id="1373fac41a2c0fd6a7088e2e48cb2f69a0a7c602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadProgressListener&lt;/code&gt; interface allows for notification of the percentage of an image that has been read successfully.</source>
          <target state="translated">该 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 接口允许已成功读取图像的百分比的通知。</target>
        </trans-unit>
        <trans-unit id="8efd925d40fc2c06f26f62362d2f5ad61bf84a89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; interface allows for notification of the portions of an image that have been read. This is useful, for example, for implementing dynamic display of an image as it is loaded.</source>
          <target state="translated">所述 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 供界面允许对已经读取的图像的部分的通知。例如，这对于在加载图像时实现图像的动态显示很有用。</target>
        </trans-unit>
        <trans-unit id="d9b45fe43fb5e8f36d95b122d8bc0cf608973ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOReadWarningListener&lt;/code&gt; interface allows for notification of non-fatal errors during reading.</source>
          <target state="translated">该 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 供接口允许非致命错误的通知读书期间。</target>
        </trans-unit>
        <trans-unit id="b149ec0010741dabc593484f5a58f1f5bb765802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; and &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; interfaces perform analogous functions for writers.</source>
          <target state="translated">该 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 和 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 供接口作家执行类似的功能。</target>
        </trans-unit>
        <trans-unit id="5ebe107cde1d3bd9a79d28a4e17587461ce4d493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; field will return a date-time with the specified instant. The offset and nano-of-second are unchanged. If the new instant value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 区域将返回日期时间与指定的瞬间。偏移和毫微秒不变。如果新的即时值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2471418c65939f74253b34d90116b39570d73512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; field will return a date-time with the specified instant. The zone and nano-of-second are unchanged. The result will have an offset derived from the new instant and original zone. If the new instant value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 区域将返回日期时间与指定的瞬间。区域和毫微秒不变。结果将具有从新的即时区域和原始区域得出的偏移量。如果新的即时值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26f92023e5949c66d2da17553ce04c03b886aec5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; interface unifies streaming and file-based operations. An abstract base class, &lt;code&gt;ImageInputStreamImpl&lt;/code&gt; is provided to simplify writing a new &lt;code&gt;ImageInputStream&lt;/code&gt; class. Concrete implementation classes (&lt;code&gt;FileImageInputStream&lt;/code&gt;, &lt;code&gt;FileCacheImageInputStream&lt;/code&gt;, and &lt;code&gt;MemoryCacheImageInputStream&lt;/code&gt;) are provided that allow input to come from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;InputStream&lt;/code&gt; with or without the use of a temporary cache file.</source>
          <target state="translated">该 &lt;code&gt;ImageInputStream&lt;/code&gt; 的接口相结合流媒体和基于文件的操作。提供了一个抽象基类 &lt;code&gt;ImageInputStreamImpl&lt;/code&gt; ，以简化编写新的 &lt;code&gt;ImageInputStream&lt;/code&gt; 类的过程。提供了具体的实现类（ &lt;code&gt;FileImageInputStream&lt;/code&gt; ， &lt;code&gt;FileCacheImageInputStream&lt;/code&gt; 和 &lt;code&gt;MemoryCacheImageInputStream&lt;/code&gt; ），这些输入类允许在使用或不使用临时缓存文件的情况下，来自 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;InputStream&lt;/code&gt; 的输入。</target>
        </trans-unit>
        <trans-unit id="23787e7b0f5233202db60183744cb5ba7ec81a77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageInputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; by &lt;code&gt;setInput&lt;/code&gt; and retrieved by &lt;code&gt;getInput&lt;/code&gt;. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setInput&lt;/code&gt; 的 &lt;code&gt;ImageInputStream&lt;/code&gt; 或其他 &lt;code&gt;Object&lt;/code&gt; ，并由 &lt;code&gt;getInput&lt;/code&gt; 检索。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e870028a4bcce49d6ab74abb2d0fee3053be5245" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; interface performs an analogous function for output. An abstract base class, &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; is provided, along with concrete implementation classes (&lt;code&gt;FileImageOutputStream&lt;/code&gt;, &lt;code&gt;FileCacheImageOutputStream&lt;/code&gt;, and &lt;code&gt;MemoryCacheImageOutputStream&lt;/code&gt;) are provided that allow output to go to a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; with or without the use of a temporary cache file.</source>
          <target state="translated">所述 &lt;code&gt;ImageOutputStream&lt;/code&gt; 接口执行用于输出的类似的功能。提供了一个抽象基类 &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; ，并提供了具体的实现类（ &lt;code&gt;FileImageOutputStream&lt;/code&gt; ， &lt;code&gt;FileCacheImageOutputStream&lt;/code&gt; 和 &lt;code&gt;MemoryCacheImageOutputStream&lt;/code&gt; ），这些类允许在使用或不使用临时缓存文件的情况下，将输出转到 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;OutputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c654707cc8b01173251db888e4e9f1cadc54a60a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageOutputStream&lt;/code&gt; or other &lt;code&gt;Object&lt;/code&gt; set by &lt;code&gt;setOutput&lt;/code&gt; and retrieved by &lt;code&gt;getOutput&lt;/code&gt;. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;setOutput&lt;/code&gt; 设置并由 &lt;code&gt;getOutput&lt;/code&gt; 检索的 &lt;code&gt;ImageOutputStream&lt;/code&gt; 或其他 &lt;code&gt;Object&lt;/code&gt; 。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23d39dd66eefdd5b7e22c2d48611d45e7fe19e03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageReaderSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">实例化此对象的 &lt;code&gt;ImageReaderSpi&lt;/code&gt; ；如果未知其标识或不存在，则为 &lt;code&gt;null&lt;/code&gt; 。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1558624413839f825eafd92b1012f6d775cab0ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ImageWriterSpi&lt;/code&gt; that instantiated this object, or &lt;code&gt;null&lt;/code&gt; if its identity is not known or none exists. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">实例化此对象的 &lt;code&gt;ImageWriterSpi&lt;/code&gt; ；如果未知其标识或不存在，则为 &lt;code&gt;null&lt;/code&gt; 。默认情况下，它初始化为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c187ac2b0346d6275a729d49e9e4b70887e64296" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Integer&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;int&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Integer&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;int&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="62ec9068383653f569a3d3699ea099197809c35d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Integer&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;int&lt;/code&gt; in an object. An object of type &lt;code&gt;Integer&lt;/code&gt; contains a single field whose type is &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Integer&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;int&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Integer&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;int&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="10e129e33f3b53fc80b1e431c4205e048b0ed9d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;JarFile&lt;/code&gt; 类用于从任何可以使用打开的文件中读取jar文件的内容 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="7fc173f631c97a9b4dcc50fc6b42b14623acad99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarFile&lt;/code&gt; class is used to read the contents of a jar file from any file that can be opened with &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt;. It extends the class &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the jar file and its entries.</source>
          <target state="translated">该 &lt;code&gt;JarFile&lt;/code&gt; 类用于从任何可以使用打开的文件中读取jar文件的内容 &lt;code&gt;java.io.RandomAccessFile&lt;/code&gt; 中。它扩展了类 &lt;code&gt;java.util.zip.ZipFile&lt;/code&gt; ,并支持读取可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于指定有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="9792439c8b85ffb254058fa07ee9e18ecd9179ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarInputStream&lt;/code&gt; class is used to read the contents of a JAR file from any input stream.</source>
          <target state="translated">所述 &lt;code&gt;JarInputStream&lt;/code&gt; 类用于从任何输入流读取JAR文件的内容。</target>
        </trans-unit>
        <trans-unit id="69fcbab6dd2a8326db4e277f74e623e45080d92f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarInputStream&lt;/code&gt; class is used to read the contents of a JAR file from any input stream. It extends the class &lt;code&gt;java.util.zip.ZipInputStream&lt;/code&gt; with support for reading an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to store meta-information about the JAR file and its entries.</source>
          <target state="translated">所述 &lt;code&gt;JarInputStream&lt;/code&gt; 类用于从任何输入流读取JAR文件的内容。它扩展了类 &lt;code&gt;java.util.zip.ZipInputStream&lt;/code&gt; ,并支持读取可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于存储有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="b21ac43a5a90b457145ee7b48bcabedf9e126557" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarOutputStream&lt;/code&gt; class is used to write the contents of a JAR file to any output stream.</source>
          <target state="translated">所述 &lt;code&gt;JarOutputStream&lt;/code&gt; 类用于JAR文件的内容写入到任何输出流。</target>
        </trans-unit>
        <trans-unit id="8e11ba91a7108003e4972a4752848ed577893864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JarOutputStream&lt;/code&gt; class is used to write the contents of a JAR file to any output stream. It extends the class &lt;code&gt;java.util.zip.ZipOutputStream&lt;/code&gt; with support for writing an optional &lt;code&gt;Manifest&lt;/code&gt; entry. The &lt;code&gt;Manifest&lt;/code&gt; can be used to specify meta-information about the JAR file and its entries.</source>
          <target state="translated">所述 &lt;code&gt;JarOutputStream&lt;/code&gt; 类用于JAR文件的内容写入到任何输出流。它扩展了 &lt;code&gt;java.util.zip.ZipOutputStream&lt;/code&gt; 类，并支持编写可选的 &lt;code&gt;Manifest&lt;/code&gt; 条目。该 &lt;code&gt;Manifest&lt;/code&gt; 可用于指定有关JAR文件及其条目的元信息。</target>
        </trans-unit>
        <trans-unit id="30a19dcac608ceb517d3a3561447251ee1e2014f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Line&lt;/code&gt; interface represents a mono or multi-channel audio feed.</source>
          <target state="translated">该 &lt;code&gt;Line&lt;/code&gt; 接口表示单声道或多声道音频馈送。</target>
        </trans-unit>
        <trans-unit id="c0a9c7f256b3eaca5dedae690146aa91b18206a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Line&lt;/code&gt; interface represents a mono or multi-channel audio feed. A line is an element of the digital audio &quot;pipeline,&quot; such as a mixer, an input or output port, or a data path into or out of a mixer.</source>
          <target state="translated">该 &lt;code&gt;Line&lt;/code&gt; 接口表示单声道或多声道音频馈送。线路是数字音频&amp;ldquo;管道&amp;rdquo;的元素，例如混频器，输入或输出端口或进入或流出混频器的数据路径。</target>
        </trans-unit>
        <trans-unit id="5d3a35d12e8c0c113e33da5350a5b5580d8cb3c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops.</source>
          <target state="translated">该 &lt;code&gt;LineEvent&lt;/code&gt; 类封装某一行每次打开，关闭，启动或停止时向其侦听器发送。</target>
        </trans-unit>
        <trans-unit id="537f7328063a159d8e4878b6fccbf45636c737b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LineEvent&lt;/code&gt; class encapsulates information that a line sends its listeners whenever the line opens, closes, starts, or stops. Each of these four state changes is represented by a corresponding type of event. A listener receives the event as a parameter to its &lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; method. By querying the event, the listener can learn the type of event, the line responsible for the event, and how much data the line had processed when the event occurred.</source>
          <target state="translated">该 &lt;code&gt;LineEvent&lt;/code&gt; 类封装某一行每次打开，关闭，启动或停止时向其侦听器发送。这四个状态变化中的每一个都由相应的事件类型表示。侦听器将事件作为其&lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;方法的参数来接收。通过查询事件，侦听器可以了解事件的类型，负责事件的行以及事件发生时该行已处理了多少数据。</target>
        </trans-unit>
        <trans-unit id="19683692a3cac37612a80dd55d3fd092b1967a4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface places additional stipulations, beyond those specified in the &lt;code&gt;Collection&lt;/code&gt; interface, on the contracts of the &lt;code&gt;iterator&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;hashCode&lt;/code&gt; methods. Declarations for other inherited methods are also included here for convenience.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 界面放置额外的约定，超过指定 &lt;code&gt;Collection&lt;/code&gt; 界面上的合同 &lt;code&gt;iterator&lt;/code&gt; ， &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;equals&lt;/code&gt; 和 &lt;code&gt;hashCode&lt;/code&gt; 方法。为方便起见，此处还包含其他继承方法的声明。</target>
        </trans-unit>
        <trans-unit id="a0ba9a5b693daac5c19b3fccbb0faf8853cdabbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides a special iterator, called a &lt;code&gt;ListIterator&lt;/code&gt;, that allows element insertion and replacement, and bidirectional access in addition to the normal operations that the &lt;code&gt;Iterator&lt;/code&gt; interface provides. A method is provided to obtain a list iterator that starts at a specified position in the list.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 界面提供了一个特殊的迭代器，称为 &lt;code&gt;ListIterator&lt;/code&gt; ，它允许元素插入和替换，以及除该正常操作的双向访问 &lt;code&gt;Iterator&lt;/code&gt; 接口提供。提供一种获取列表迭代器的方法，该列表迭代器从列表中的指定位置开始。</target>
        </trans-unit>
        <trans-unit id="2b090913d205b579f0fbce24a3f90785bc1ba625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides four methods for positional (indexed) access to list elements. Lists (like Java arrays) are zero based. Note that these operations may execute in time proportional to the index value for some implementations (the &lt;code&gt;LinkedList&lt;/code&gt; class, for example). Thus, iterating over the elements in a list is typically preferable to indexing through it if the caller does not know the implementation.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 接口提供用于位置（索引）访问列表元素四种方法。列表（如Java数组）从零开始。请注意，对于某些实现（例如， &lt;code&gt;LinkedList&lt;/code&gt; 类），这些操作可能在时间上与索引值成比例执行。因此，如果调用者不知道实现，则遍历列表中的元素通常比对其进行索引更可取。</target>
        </trans-unit>
        <trans-unit id="70355f014486445e2f19c1b1f444e1ecb381cd12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides two methods to efficiently insert and remove multiple elements at an arbitrary point in the list.</source>
          <target state="translated">的 &lt;code&gt;List&lt;/code&gt; 界面提供了两种方法高效地插入和在列表中的任意点移除多个元件。</target>
        </trans-unit>
        <trans-unit id="fe82cde6eede4b779cf568cf70079098275cd445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;List&lt;/code&gt; interface provides two methods to search for a specified object. From a performance standpoint, these methods should be used with caution. In many implementations they will perform costly linear searches.</source>
          <target state="translated">该 &lt;code&gt;List&lt;/code&gt; 界面提供了两种方法来搜索指定的对象。从性能的角度来看，应谨慎使用这些方法。在许多实现中，它们将执行昂贵的线性搜索。</target>
        </trans-unit>
        <trans-unit id="80c3e343f9a3334aa90fca73bdf887fa22a1c873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class also supports an extension mechanism that can be used to identify a calendar system. The mechanism is a form of key-value pairs, where the calendar system has the key &quot;ca&quot;. For example, the locale &quot;en-JP-u-ca-japanese&quot; represents the English language as used in Japan with the Japanese calendar system.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类也支持可被用于识别一个日历系统的扩展机制。该机制是键-值对的一种形式，其中日历系统具有键&amp;ldquo; ca&amp;rdquo;。例如，语言环境&amp;ldquo; en-JP-u-ca-japanese&amp;rdquo;表示日语与日本日历系统一起使用的英语。</target>
        </trans-unit>
        <trans-unit id="df60f90896c3c9a6114af933224b8f6b6310599a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class also supports language codes up to 8 characters in length. Therefore, the list returned by this method does not contain ALL valid codes that can be used to create Locales.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类也支持语言代码长度最多为8个字符。因此，此方法返回的列表不包含可用于创建语言环境的所有有效代码。</target>
        </trans-unit>
        <trans-unit id="ff489719e325fe97b92428c9169b9fa65846b849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class implements IETF BCP 47 which is composed of &lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647 &quot;Matching of Language Tags&quot;&lt;/a&gt; and &lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646 &quot;Tags for Identifying Languages&quot;&lt;/a&gt; with support for the LDML (UTS#35, &quot;Unicode Locale Data Markup Language&quot;) BCP 47-compatible extensions for locale data exchange.</source>
          <target state="translated">的 &lt;code&gt;Locale&lt;/code&gt; 类实现IETF BCP 47，它由被&lt;a href=&quot;http://tools.ietf.org/html/rfc4647&quot;&gt;RFC 4647&amp;ldquo;语言标签的匹配&amp;rdquo;&lt;/a&gt;和&lt;a href=&quot;http://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646&amp;ldquo;标签用于识别语言&amp;rdquo;&lt;/a&gt;与支持用于LDML（UTS＃35，&amp;ldquo;Unicode语言环境数据标记语言&amp;rdquo;）BCP 47兼容语言环境数据交换的扩展。</target>
        </trans-unit>
        <trans-unit id="b49e579633330874272c018a016eeeecd34916da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class provides a number of convenient constants that you can use to create &lt;code&gt;Locale&lt;/code&gt; objects for commonly used locales. For example, the following creates a &lt;code&gt;Locale&lt;/code&gt; object for the United States:</source>
          <target state="translated">该 &lt;code&gt;Locale&lt;/code&gt; 类提供了一些便利的常量，你可以用它来创建 &lt;code&gt;Locale&lt;/code&gt; 对象为常用的语言环境。例如，以下代码为美国创建了一个 &lt;code&gt;Locale&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="fa1e07d1d615f3001a87ae91c2a0604617a8b571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Locale&lt;/code&gt; class provides three constructors:</source>
          <target state="translated">该 &lt;code&gt;Locale&lt;/code&gt; 类提供三个构造函数：</target>
        </trans-unit>
        <trans-unit id="753e94e16d15c98e2261f7d3bdcddbdc2d027d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; class describes the basic methods used to authenticate Subjects and provides a way to develop an application independent of the underlying authentication technology.</source>
          <target state="translated">该 &lt;code&gt;LoginContext&lt;/code&gt; 的类描述用于验证对象的基本方法和提供一种方式来开发应用程序独立于基础的认证技术。</target>
        </trans-unit>
        <trans-unit id="98c21b51d0ddf913deb3a4a49b2303d25a261498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; class describes the basic methods used to authenticate Subjects and provides a way to develop an application independent of the underlying authentication technology. A &lt;code&gt;Configuration&lt;/code&gt; specifies the authentication technology, or &lt;code&gt;LoginModule&lt;/code&gt;, to be used with a particular application. Different LoginModules can be plugged in under an application without requiring any modifications to the application itself.</source>
          <target state="translated">该 &lt;code&gt;LoginContext&lt;/code&gt; 的类描述用于验证对象的基本方法和提供一种方式来开发应用程序独立于基础的认证技术。甲 &lt;code&gt;Configuration&lt;/code&gt; 指定认证技术，或 &lt;code&gt;LoginModule&lt;/code&gt; ，与特定应用中使用。可以在应用程序下插入不同的LoginModule，而无需对应用程序本身进行任何修改。</target>
        </trans-unit>
        <trans-unit id="24bd53fa001fd556da21468c145af7d9ff2e52d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoginContext&lt;/code&gt; is responsible for reading the &lt;code&gt;Configuration&lt;/code&gt; and instantiating the appropriate LoginModules. Each &lt;code&gt;LoginModule&lt;/code&gt; is initialized with a &lt;code&gt;Subject&lt;/code&gt;, a &lt;code&gt;CallbackHandler&lt;/code&gt;, shared &lt;code&gt;LoginModule&lt;/code&gt; state, and LoginModule-specific options. The &lt;code&gt;Subject&lt;/code&gt; represents the &lt;code&gt;Subject&lt;/code&gt; currently being authenticated and is updated with relevant Credentials if authentication succeeds. LoginModules use the &lt;code&gt;CallbackHandler&lt;/code&gt; to communicate with users. The &lt;code&gt;CallbackHandler&lt;/code&gt; may be used to prompt for usernames and passwords, for example. Note that the &lt;code&gt;CallbackHandler&lt;/code&gt; may be null. LoginModules which absolutely require a &lt;code&gt;CallbackHandler&lt;/code&gt; to authenticate the &lt;code&gt;Subject&lt;/code&gt; may throw a &lt;code&gt;LoginException&lt;/code&gt;. LoginModules optionally use the shared state to share information or data among themselves.</source>
          <target state="translated">该 &lt;code&gt;LoginContext&lt;/code&gt; 将是负责读取 &lt;code&gt;Configuration&lt;/code&gt; 和实例相应的LoginModules。每个 &lt;code&gt;LoginModule&lt;/code&gt; 都使用 &lt;code&gt;Subject&lt;/code&gt; ， &lt;code&gt;CallbackHandler&lt;/code&gt; ，共享的 &lt;code&gt;LoginModule&lt;/code&gt; 状态和LoginModule特定的选项进行初始化。该 &lt;code&gt;Subject&lt;/code&gt; 代表了 &lt;code&gt;Subject&lt;/code&gt; 目前正在认证，如果认证成功，则与相关证书更新。 LoginModules使用 &lt;code&gt;CallbackHandler&lt;/code&gt; 与用户通信。例如， &lt;code&gt;CallbackHandler&lt;/code&gt; 可用于提示用户名和密码。请注意， &lt;code&gt;CallbackHandler&lt;/code&gt; 可以为null。绝对需要 &lt;code&gt;CallbackHandler&lt;/code&gt; 来验证 &lt;code&gt;Subject&lt;/code&gt; 的 LoginModule 可能会抛出 &lt;code&gt;LoginException&lt;/code&gt; 。LoginModules可以选择使用共享状态在彼此之间共享信息或数据。</target>
        </trans-unit>
        <trans-unit id="7801867034780a1c5fff70e8cc7e32057101d13e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;long&lt;/code&gt; in an object.</source>
          <target state="translated">所述 &lt;code&gt;Long&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;long&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="e7f5fb0211de99c25185ee45c0d498d693daf127" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Long&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;long&lt;/code&gt; in an object. An object of type &lt;code&gt;Long&lt;/code&gt; contains a single field whose type is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;Long&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;long&lt;/code&gt; 中的对象。 &lt;code&gt;Long&lt;/code&gt; 类型的对象包含一个 &lt;code&gt;long&lt;/code&gt; 类型的字段。</target>
        </trans-unit>
        <trans-unit id="b73aaaf679d63a88eb466b691fdb58c718db13f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification.</source>
          <target state="translated">所述 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 类用于描述MBean射出，对于给定的Java类的通知不同的通知实例的特性。</target>
        </trans-unit>
        <trans-unit id="8c0d93d2a05b2c51593dc81a25c6a33e58b7c2f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; class is used to describe the characteristics of the different notification instances emitted by an MBean, for a given Java class of notification. If an MBean emits notifications that can be instances of different Java classes, then the metadata for that MBean should provide an &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; object for each of these notification Java classes.</source>
          <target state="translated">所述 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 类用于描述MBean射出，对于给定的Java类的通知不同的通知实例的特性。如果MBean发出的通知可能是不同Java类的实例，则该MBean的元数据应为每个这些通知Java类提供一个 &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ba64fec83d48a2cbf38343d1715ffb0852ef3636" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MBeanServer&lt;/code&gt; to which this connector server is attached. This is the last value passed to &lt;a href=&quot;rmiserverimpl#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; on this object, or null if that method has never been called.</source>
          <target state="translated">连接器服务器连接到的 &lt;code&gt;MBeanServer&lt;/code&gt; 。这是在此对象&lt;a href=&quot;rmiserverimpl#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt;的最后一个值；如果从未调用该方法，则为null。</target>
        </trans-unit>
        <trans-unit id="0a8a2b2991ac645b67698f44548fc7e282981c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MLET&lt;/code&gt; tag has the following syntax:</source>
          <target state="translated">该 &lt;code&gt;MLET&lt;/code&gt; 标记的语法如下：</target>
        </trans-unit>
        <trans-unit id="41d6128d4ea5a41adf8b5c56d1c50b772d8bb991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManagementFactory&lt;/code&gt; class is a factory class for getting managed beans for the Java platform.</source>
          <target state="translated">该 &lt;code&gt;ManagementFactory&lt;/code&gt; 类是获得托管Bean针对Java平台的工厂类。</target>
        </trans-unit>
        <trans-unit id="d71986942be1c54b6a6ae12607dd5829e664ceed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ManagementFactory&lt;/code&gt; class is a factory class for getting managed beans for the Java platform. This class consists of static methods each of which returns one or more</source>
          <target state="translated">该 &lt;code&gt;ManagementFactory&lt;/code&gt; 类是获得托管Bean针对Java平台的工厂类。此类由静态方法组成，每个方法均返回一个或多个</target>
        </trans-unit>
        <trans-unit id="da35ea78eb0bbad93818f873018df137e9342c23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map.Entry&lt;/code&gt; elements traversed by the &lt;code&gt;iterator&lt;/code&gt; or &lt;code&gt;spliterator&lt;/code&gt; do &lt;em&gt;not&lt;/em&gt; support the &lt;code&gt;setValue&lt;/code&gt; operation.</source>
          <target state="translated">该 &lt;code&gt;Map.Entry&lt;/code&gt; 的由穿越元素 &lt;code&gt;iterator&lt;/code&gt; 或 &lt;code&gt;spliterator&lt;/code&gt; 做&lt;em&gt;不&lt;/em&gt;支持 &lt;code&gt;setValue&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="227699f0dce7484c6d17e1d7babad6ee5858c1d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; interface provides three</source>
          <target state="translated">该 &lt;code&gt;Map&lt;/code&gt; 界面提供了三种</target>
        </trans-unit>
        <trans-unit id="9428a88bd8c1667c06a6e1c738d06e6c61771810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">传递给 &lt;code&gt;JMXConnectorProvider&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 参数是一个新的只读 &lt;code&gt;Map&lt;/code&gt; ，它包含&lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;JMXConnectorFactory.newJMXConnector&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;environment&lt;/code&gt; 参数中的所有条目（如果有）。此外，如果 &lt;code&gt;environment&lt;/code&gt; 参数中不存在 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 密钥，则会将其添加到新的只读 &lt;code&gt;Map&lt;/code&gt; 中。关联的值是调用线程的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="fccf20df23e6200637aa7b23e7388c8a9a88bb06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Map&lt;/code&gt; parameter passed to the &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; is a new read-only &lt;code&gt;Map&lt;/code&gt; that contains all the entries that were in the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;, if there was one. Additionally, if the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, it is added to the new read-only &lt;code&gt;Map&lt;/code&gt;. The associated value is the calling thread's context class loader.</source>
          <target state="translated">传递给 &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; 的 &lt;code&gt;Map&lt;/code&gt; 参数是一个新的只读 &lt;code&gt;Map&lt;/code&gt; ，它包含&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;environment&lt;/code&gt; 参数中的所有条目（如果有）。此外，如果 &lt;code&gt;environment&lt;/code&gt; 参数中不存在 &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; 密钥，则会将其添加到新的只读 &lt;code&gt;Map&lt;/code&gt; 中。关联的值是调用线程的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="8b01e42df4caf57c30334c7ef0ef0673760d8b60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values) except that the given &lt;code&gt;pushLevel&lt;/code&gt; argument and buffer size argument are used.</source>
          <target state="translated">所述 &lt;code&gt;MemoryHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值），除了给定的 &lt;code&gt;pushLevel&lt;/code&gt; 参数和缓冲区大小参数被使用。</target>
        </trans-unit>
        <trans-unit id="8e6c1d6da906bc1b50ed3822bfcdb7ac20a1aee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MemoryMXBean&lt;/code&gt; object returned by &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; implements the &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; interface that allows a listener to be registered within the &lt;code&gt;MemoryMXBean&lt;/code&gt; as a notification listener. Below is an example code that registers a &lt;code&gt;MyListener&lt;/code&gt; to handle notification emitted by the &lt;code&gt;MemoryMXBean&lt;/code&gt;.</source>
          <target state="translated">由&lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;MemoryMXBean&lt;/code&gt; 对象实现了&lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;接口，该接口允许在 &lt;code&gt;MemoryMXBean&lt;/code&gt; 中将侦听器注册为通知侦听器。下面是注册的示例性代码 &lt;code&gt;MyListener&lt;/code&gt; 由发射手柄通知 &lt;code&gt;MemoryMXBean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5864b743917b0ab45bb87ab5b12728c29a56a04c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has processed a &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;MetaEventListener&lt;/code&gt; 接口应由其实例需要在通知执行 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 处理了 &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91e79b4c499b3f35a4dda98bb1b312a4085719a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MetaEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has processed a &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. To register a &lt;code&gt;MetaEventListener&lt;/code&gt; object to receive such notifications, pass it as the argument to the &lt;code&gt;&lt;a href=&quot;sequencer#addMetaEventListener-javax.sound.midi.MetaEventListener-&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;MetaEventListener&lt;/code&gt; 接口应由其实例需要在通知执行 &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 处理了 &lt;code&gt;&lt;a href=&quot;metamessage&quot;&gt;&lt;code&gt;MetaMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。若要注册 &lt;code&gt;MetaEventListener&lt;/code&gt; 对象以接收此类通知，请将其作为参数传递给 &lt;code&gt;Sequencer&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;sequencer#addMetaEventListener-javax.sound.midi.MetaEventListener-&quot;&gt;&lt;code&gt;addMetaEventListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d01c40b457907a7d5e20ffd74ad4b85ee2009577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MidiSystem&lt;/code&gt; class provides access to the installed MIDI system resources, including devices such as synthesizers, sequencers, and MIDI input and output ports.</source>
          <target state="translated">所述 &lt;code&gt;MidiSystem&lt;/code&gt; 类提供对已安装的MIDI系统资源，包括诸如合成器，定序器，和MIDI输入和输出端口。</target>
        </trans-unit>
        <trans-unit id="a80d68435a1b6165c900a036816b9bec6091ed82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MidiSystem&lt;/code&gt; class provides access to the installed MIDI system resources, including devices such as synthesizers, sequencers, and MIDI input and output ports. A typical simple MIDI application might begin by invoking one or more &lt;code&gt;MidiSystem&lt;/code&gt; methods to learn what devices are installed and to obtain the ones needed in that application.</source>
          <target state="translated">所述 &lt;code&gt;MidiSystem&lt;/code&gt; 类提供对已安装的MIDI系统资源，包括诸如合成器，定序器，和MIDI输入和输出端口。典型的简单MIDI应用程序可能始于调用一个或多个 &lt;code&gt;MidiSystem&lt;/code&gt; 方法以了解安装了哪些设备并获取该应用程序所需的设备。</target>
        </trans-unit>
        <trans-unit id="b52eb410a08736554d78710757e24ecd5480df64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description.</source>
          <target state="translated">该 &lt;code&gt;Mixer.Info&lt;/code&gt; 类表示关于音频混频器的信息，包括产品的名称，版本和供应商，以及文本描述。</target>
        </trans-unit>
        <trans-unit id="e56a0592321beb830ad7682fabbd101887d52b64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mixer.Info&lt;/code&gt; class represents information about an audio mixer, including the product's name, version, and vendor, along with a textual description. This information may be retrieved through the &lt;a href=&quot;mixer#getMixerInfo--&quot;&gt;&lt;code&gt;getMixerInfo&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;Mixer&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;Mixer.Info&lt;/code&gt; 类表示关于音频混频器的信息，包括产品的名称，版本和供应商，以及文本描述。可以通过 &lt;code&gt;Mixer&lt;/code&gt; 接口的&lt;a href=&quot;mixer#getMixerInfo--&quot;&gt; &lt;code&gt;getMixerInfo&lt;/code&gt; &lt;/a&gt;方法检索此信息。</target>
        </trans-unit>
        <trans-unit id="788c03b8eac033377287b7f6bcedc89c000e71cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; describes a hierarchical name composed of attributes, such as country name, and corresponding values, such as US. The type of the &lt;code&gt;AttributeValue&lt;/code&gt; component is determined by the &lt;code&gt;AttributeType&lt;/code&gt;; in general it will be a &lt;code&gt;directoryString&lt;/code&gt;. A &lt;code&gt;directoryString&lt;/code&gt; is usually one of &lt;code&gt;PrintableString&lt;/code&gt;, &lt;code&gt;TeletexString&lt;/code&gt; or &lt;code&gt;UniversalString&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Name&lt;/code&gt; 描述属性，如国名和对应的值，如美国组成的分层名称。的类型的 &lt;code&gt;AttributeValue&lt;/code&gt; 分量由确定 &lt;code&gt;AttributeType&lt;/code&gt; ; 通常它将是一个 &lt;code&gt;directoryString&lt;/code&gt; 。甲 &lt;code&gt;directoryString&lt;/code&gt; 通常之一 &lt;code&gt;PrintableString&lt;/code&gt; ， &lt;code&gt;TeletexString&lt;/code&gt; 或 &lt;code&gt;UniversalString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5c1c5d6176d58d28e9f865eee359984e02049b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; interface represents a generic name -- an ordered sequence of components.</source>
          <target state="translated">该 &lt;code&gt;Name&lt;/code&gt; 接口表示一个通用的名字-一个有序的组件序列。</target>
        </trans-unit>
        <trans-unit id="99d457ffbc6e55d6f5c1d1e7729fba20a1b311b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Name&lt;/code&gt; interface represents a generic name -- an ordered sequence of components. It can be a composite name (names that span multiple namespaces), or a compound name (names that are used within individual hierarchical naming systems).</source>
          <target state="translated">该 &lt;code&gt;Name&lt;/code&gt; 接口表示一个通用的名字-一个有序的组件序列。它可以是复合名称（跨越多个名称空间的名称），也可以是复合名称（在各个层次命名系统中使用的名称）。</target>
        </trans-unit>
        <trans-unit id="7b6edeb494d6ac7e0b5caa00f1aa813d7ae827c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NamingEvent&lt;/code&gt;'s state consists of</source>
          <target state="translated">该 &lt;code&gt;NamingEvent&lt;/code&gt; 期间的状态由</target>
        </trans-unit>
        <trans-unit id="c86cac2e51c5a47693977a50e2b8c6b5729d2050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NetworkInterface&lt;/code&gt; this interface is attached to.</source>
          <target state="translated">此接口连接到的 &lt;code&gt;NetworkInterface&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4f24312524d645707d6367d6e45b401e6f4d5c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Node&lt;/code&gt; that led to the parsing error, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">导致解析错误的 &lt;code&gt;Node&lt;/code&gt; ，或者为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1400dea5eb2e0f1d272329a6fddf1dde956ad2ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;NotificationListeners&lt;/code&gt; 由这是由所述返回的ID标识&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e9f0f1aa295652b71a3e12c32b29eaa12cfad79e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NotificationListeners&lt;/code&gt; are identified by the IDs which were returned by the &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[],
 Subject[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述 &lt;code&gt;NotificationListeners&lt;/code&gt; 由这是由所述返回的ID标识&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2c9376e7cc0383d27533cd38986f773a0a05e444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will return a date-time with the specified offset. The local date-time is unaltered. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 区域将返回日期时间与指定的偏移。当地日期时间未更改。如果新的偏移值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1918dcc7fcc29b6bc425b2c6f7a8a0dcc372038d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will return a time with the specified offset. The local time is unaltered. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 场将返回一个时间，指定的偏移量。当地时间保持不变。如果新的偏移值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b99274c982da4f70821c4ca9b3b72ad4b9daf7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field will typically be ignored. The offset of a &lt;code&gt;ZonedDateTime&lt;/code&gt; is controlled primarily by the time-zone. As such, changing the offset does not generally make sense, because there is only one valid offset for the local date-time and zone. If the zoned date-time is in a daylight savings overlap, then the offset is used to switch between the two valid offsets. In all other cases, the offset is ignored. If the new offset value is outside the valid range then a &lt;code&gt;DateTimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; 场通常会被忽略。 &lt;code&gt;ZonedDateTime&lt;/code&gt; 的偏移量主要由时区控制。因此，更改偏移量通常没有意义，因为本地日期时间和区域只有一个有效偏移量。如果日期时间与夏令时重叠，则使用偏移量在两个有效偏移量之间切换。在所有其他情况下，将忽略偏移。如果新的偏移值超出有效范围，则将引发 &lt;code&gt;DateTimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcf77ee080e78ac2d4bb93c007b8230ccb51fe01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Object&lt;/code&gt; associated with a node that accepts enumerated values must be equal to one of the values returned by this method, as defined by the &lt;code&gt;==&lt;/code&gt; operator (as opposed to the &lt;code&gt;Object.equals&lt;/code&gt; method).</source>
          <target state="translated">与接受枚举值的节点关联的 &lt;code&gt;Object&lt;/code&gt; 必须等于此方法返回的值之一，该值由 &lt;code&gt;==&lt;/code&gt; 运算符定义（与 &lt;code&gt;Object.equals&lt;/code&gt; 方法相对）。</target>
        </trans-unit>
        <trans-unit id="a1119954570aff30608ab91b67db57a1edb87ff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;var&gt;name&lt;/var&gt; 所指定的MBean关联的 &lt;code&gt;ObjectInstance&lt;/code&gt; 。包含的 &lt;code&gt;ObjectName&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; ，包含的类名是 &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .getClassName（）。</target>
        </trans-unit>
        <trans-unit id="b503bdd5bfbf40758607910f1e62bc31dd68e802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectInstance&lt;/code&gt; associated with the MBean specified by &lt;var&gt;name&lt;/var&gt;. The contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;name&lt;/code&gt; and the contained class name is &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;var&gt;name&lt;/var&gt; 所指定的MBean关联的 &lt;code&gt;ObjectInstance&lt;/code&gt; 。包含的 &lt;code&gt;ObjectName&lt;/code&gt; 是 &lt;code&gt;name&lt;/code&gt; ，包含的类名是 &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .getClassName（）。</target>
        </trans-unit>
        <trans-unit id="c4bb59ef2d57c5a36b82e56b3ef8695a22a0311d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a garbage collector within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的垃圾收集器的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="0b9021e57442d401347cae33e09b53197bbb0b25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a memory manager within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的内存管理器的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="bb1a05072aa2847772982c43cf0d890c7cae913a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for a memory pool within an &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">用于唯一标识 &lt;code&gt;MBeanServer&lt;/code&gt; 中的内存池MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="db98f30b0477805218b1ae4bdb074256518e5803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the class loading system within an &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">用于唯一标识 &lt;code&gt;MBeanServer&lt;/code&gt; 中的类加载系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="55e8342fd743f84bda60cd36babb3e068a2e6ec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the compilation system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的编译系统MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="70515004bb956a637a0eaf59af0413164c30fb86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the memory system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的内存系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="c1f16184d09f51af30331c1389e9013ddc4a17df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the operating system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中操作系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="07da8e2d7411da3d53f255c201b631c0ac856d81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the runtime system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中运行时系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="e9552b5b6f9a739364bfe6b9bdedc853e8972846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ObjectName&lt;/code&gt; for uniquely identifying the MXBean for the thread system within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中线程系统的MXBean 的 &lt;code&gt;ObjectName&lt;/code&gt; 是：</target>
        </trans-unit>
        <trans-unit id="9dcfa6a1fe8b9264f0661c006080ec7572ae4b83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; class describes the management information of an</source>
          <target state="translated">该 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 类描述的管理信息</target>
        </trans-unit>
        <trans-unit id="b203a779783192d8423055b7a1a9da6d91af0f3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenType&lt;/code&gt; class is the parent abstract class of all classes which describe the actual</source>
          <target state="translated">该 &lt;code&gt;OpenType&lt;/code&gt; 字体类是抽象父类，它描述实际的所有类的</target>
        </trans-unit>
        <trans-unit id="0d757ff4a6ac675a5b4871ec062085d8cdb8da98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard.</source>
          <target state="translated">所述 &lt;code&gt;PKIXReason&lt;/code&gt; 枚举潜在PKIX特定原因的X.509证书路径可以根据PKIX（RFC 3280）标准是无效的。</target>
        </trans-unit>
        <trans-unit id="42733b5171c383bf12f9d4a04e020e12857e5e60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PKIXReason&lt;/code&gt; enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard. These reasons are in addition to those of the &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; enumeration.</source>
          <target state="translated">所述 &lt;code&gt;PKIXReason&lt;/code&gt; 枚举潜在PKIX特定原因的X.509证书路径可以根据PKIX（RFC 3280）标准是无效的。这些原因是 &lt;code&gt;CertPathValidatorException.BasicReason&lt;/code&gt; 枚举之外的原因。</target>
        </trans-unit>
        <trans-unit id="b88e3cb7dd76f092b2f7b4a5b2cc4c9436fd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; corresponding to the given name, or &lt;code&gt;null&lt;/code&gt; if not found</source>
          <target state="translated">与给定名称相对应的 &lt;code&gt;Package&lt;/code&gt; ;如果找不到，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90672781ed476b480c2d01bbaf4b2e5adafc4b2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; is obtained by invoking the &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Path&lt;/code&gt; 是通过调用&lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法获得的。</target>
        </trans-unit>
        <trans-unit id="5c79b8bbdbc6232b5734fc46d1a5e28d6bbf32c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Pattern&lt;/code&gt; engine performs traditional NFA-based matching with ordered alternation as occurs in Perl 5.</source>
          <target state="translated">该 &lt;code&gt;Pattern&lt;/code&gt; 如在Perl 5发生发动机执行与定购交替传统的基于NFA匹配。</target>
        </trans-unit>
        <trans-unit id="92995c19fa227cf2ab96897ff5eedb351ff466d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Permission&lt;/code&gt; class for link creation operations.</source>
          <target state="translated">链接创建操作的 &lt;code&gt;Permission&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="b15cfab53ee2a0eadd7dc3e89c6e3054abf67006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object is also registered with the platform &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;MBeanServer&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; within an MBeanServer is:</source>
          <target state="translated">该 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 目的也通过该平台注册&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;的MBeanServer&lt;/a&gt;。用于唯一标识MBeanServer中的 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 的&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;是：</target>
        </trans-unit>
        <trans-unit id="176ebc50958434620dc6e1fc7aedbf4aa4c19395" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Policy&lt;/code&gt; object consults the local policy and returns and appropriate &lt;code&gt;Permissions&lt;/code&gt; object with the Permissions granted to the Principals associated with the provided</source>
          <target state="translated">该 &lt;code&gt;Policy&lt;/code&gt; 对象查询本地策略，且返回适当的 &lt;code&gt;Permissions&lt;/code&gt; 与被授予与所提供的相关的Principals的Permissions对象</target>
        </trans-unit>
        <trans-unit id="8f660c48a5927de5d279d0b4033c4ae98a5108f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer.</source>
          <target state="translated">该 &lt;code&gt;Port.Info&lt;/code&gt; 类扩展 &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 提供更多的信息具体到港口，包括端口的名称，无论是源还是其混频器的目标。</target>
        </trans-unit>
        <trans-unit id="e65eb7e482423171ada7c491ef4eeceb1029407b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Port.Info&lt;/code&gt; class extends &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with additional information specific to ports, including the port's name and whether it is a source or a target for its mixer. By definition, a port acts as either a source or a target to its mixer, but not both. (Audio input ports are sources; audio output ports are targets.)</source>
          <target state="translated">该 &lt;code&gt;Port.Info&lt;/code&gt; 类扩展 &lt;code&gt;&lt;a href=&quot;line.info&quot;&gt;&lt;code&gt;Line.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 提供更多的信息具体到港口，包括端口的名称，无论是源还是其混频器的目标。根据定义，端口可以充当其混频器的源或目标，但不能同时充当两者。（音频输入端口是源；音频输出端口是目标。）</target>
        </trans-unit>
        <trans-unit id="d166a34742a6c6490e21ca168d2e6d673987afa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of properties.</source>
          <target state="translated">该 &lt;code&gt;Properties&lt;/code&gt; 类代表一个持久的属性集。</target>
        </trans-unit>
        <trans-unit id="d09951cf74285f372797f262ca2d5541dfdf337c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Properties&lt;/code&gt; class represents a persistent set of properties. The &lt;code&gt;Properties&lt;/code&gt; can be saved to a stream or loaded from a stream. Each key and its corresponding value in the property list is a string.</source>
          <target state="translated">该 &lt;code&gt;Properties&lt;/code&gt; 类代表一个持久的属性集。该 &lt;code&gt;Properties&lt;/code&gt; 可以被保存到一个流或从流中加载。属性列表中的每个键及其对应的值都是一个字符串。</target>
        </trans-unit>
        <trans-unit id="41efb79d3a1eca9cb5d81533032efc9675bf375a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PropertyChangeSupport&lt;/code&gt; associated with this &lt;code&gt;BeanContextChildSupport&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;PropertyChangeSupport&lt;/code&gt; 与此相关 &lt;code&gt;BeanContextChildSupport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61720eb2d433a3c828940b196eeb9541a74e0646" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Queue&lt;/code&gt; interface does not define the</source>
          <target state="translated">的 &lt;code&gt;Queue&lt;/code&gt; 接口没有定义</target>
        </trans-unit>
        <trans-unit id="0dd9840df06924282664fc3e67ddabe9defd6274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Raster&lt;/code&gt; being referenced.</source>
          <target state="translated">正在引用的 &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79a2cd06471b623d73bdbbd167ab48aee2097b40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt; methods that read from the file throw &lt;code&gt;IOException&lt;/code&gt; if a malformed or unmappable byte sequence is read.</source>
          <target state="translated">如果 &lt;code&gt;Reader&lt;/code&gt; 了格式错误或不可映射的字节序列，则从文件读取的Reader方法将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99baa6f6ac31a6957c69fb473938422fc78f374d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Reader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fb5c4efba8253cf833773d52f6ee715196af2f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RenderedImage&lt;/code&gt; being referenced.</source>
          <target state="translated">被引用的 &lt;code&gt;RenderedImage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9fc508b09fb91444f8aa155b416b9d56dbb1265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ReverbType&lt;/code&gt; class provides methods for accessing various reverberation settings to be applied to an audio signal.</source>
          <target state="translated">所述 &lt;code&gt;ReverbType&lt;/code&gt; 类提供要被施加到的音频信号，用于访问各种回响设置方法。</target>
        </trans-unit>
        <trans-unit id="afe97ee9c3219412d61628980fe8432b9daaba4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundingMode&lt;/code&gt; used for this DecimalFormat.</source>
          <target state="translated">用于此DecimalFormat 的 &lt;code&gt;RoundingMode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffe20390fecad2daec079563f89bb0ffa523a1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RoundingMode&lt;/code&gt; used for this NumberFormat.</source>
          <target state="translated">用于此NumberFormat 的 &lt;code&gt;RoundingMode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a6c5472e51dff7ede55a06c630f405c31babb27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RuleBasedCollator&lt;/code&gt; class is a concrete subclass of &lt;code&gt;Collator&lt;/code&gt; that provides a simple, data-driven, table collator.</source>
          <target state="translated">所述 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 类是的具体子类 &lt;code&gt;Collator&lt;/code&gt; ，提供了一个简单的，数据驱动的表collat​​or。</target>
        </trans-unit>
        <trans-unit id="2ed8190679df509541420fb54e8aaab97382d51f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RuleBasedCollator&lt;/code&gt; class is a concrete subclass of &lt;code&gt;Collator&lt;/code&gt; that provides a simple, data-driven, table collator. With this class you can create a customized table-based &lt;code&gt;Collator&lt;/code&gt;. &lt;code&gt;RuleBasedCollator&lt;/code&gt; maps characters to sort keys.</source>
          <target state="translated">所述 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 类是的具体子类 &lt;code&gt;Collator&lt;/code&gt; ，提供了一个简单的，数据驱动的表collat​​or。使用此类，您可以创建自定义的基于表的 &lt;code&gt;Collator&lt;/code&gt; 。 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 映射字符以对键进行排序。</target>
        </trans-unit>
        <trans-unit id="5098c81b7457412bf4917d02e9a1dfef85b5fe26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any class whose instances are intended to be executed by a thread.</source>
          <target state="translated">该 &lt;code&gt;Runnable&lt;/code&gt; 的接口应该由任何类，其实例旨在由一个线程执行来实现。</target>
        </trans-unit>
        <trans-unit id="d8f15f8d81c303338ba2b966d98884e4108ae0f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Runnable&lt;/code&gt; interface should be implemented by any class whose instances are intended to be executed by a thread. The class must define a method of no arguments called &lt;code&gt;run&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Runnable&lt;/code&gt; 的接口应该由任何类，其实例旨在由一个线程执行来实现。该类必须定义一个没有参数的方法，称为 &lt;code&gt;run&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9f88a23d98de0fb1ab893f3f7409818a9bbc61d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SMART&lt;/code&gt; behaviour handles the common &quot;end of day&quot; 24:00 value. Processing in &lt;code&gt;LENIENT&lt;/code&gt; mode also produces the same result:</source>
          <target state="translated">该 &lt;code&gt;SMART&lt;/code&gt; 行为处理24:00价值常见的&amp;ldquo;一天结束&amp;rdquo;。在 &lt;code&gt;LENIENT&lt;/code&gt; 模式下处理也会产生相同的结果：</target>
        </trans-unit>
        <trans-unit id="64049cd592e8eb0ec78aec4cd353b6f5aabba963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; completed the operation, and is available to process similar calls.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上完成了操作，并且可处理类似的调用。</target>
        </trans-unit>
        <trans-unit id="077b184f78f7e5525918d7fe92403baaa5f9a42d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; has just finished handshaking.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上刚刚结束握手。</target>
        </trans-unit>
        <trans-unit id="df118613b41d79c011b7a0bc6c7f48652d896d51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; is not currently handshaking.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的当前没有握手。</target>
        </trans-unit>
        <trans-unit id="1926ac57988ad07ff17731c0dbc1dd707e5b1e02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; must send data to the remote side before handshaking can continue, so &lt;code&gt;SSLEngine.wrap()&lt;/code&gt; should be called.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上必须将数据发送到远程端前握手可以继续，所以 &lt;code&gt;SSLEngine.wrap()&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="02fa5e3b89e2cea3ead9db69cbe845f18df35ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs the results of one (or more) delegated tasks before handshaking can continue.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的需要的一个（或多个）委派的任务结果前握手可以继续。</target>
        </trans-unit>
        <trans-unit id="082a3cd7613f1264f8b5206e5fbed35f61a0dff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; needs to receive data from the remote side before handshaking can continue.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的需要从远程端接收数据前握手可以继续。</target>
        </trans-unit>
        <trans-unit id="d352a14052137339f442e35be68221c08d8d1336" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; produces/consumes complete SSL/TLS packets only, and does not store application data internally between calls to &lt;code&gt;wrap()/unwrap()&lt;/code&gt;. Thus input and output &lt;code&gt;ByteBuffer&lt;/code&gt;s must be sized appropriately to hold the maximum record that can be produced. Calls to &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; should be used to determine the appropriate buffer sizes. The size of the outbound application data buffer generally does not matter. If buffer conditions do not allow for the proper consumption/production of data, the application must determine (via &lt;a href=&quot;sslengineresult&quot;&gt;&lt;code&gt;SSLEngineResult&lt;/code&gt;&lt;/a&gt;) and correct the problem, and then try the call again.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 的生产/只消耗完整的SSL / TLS包，并没有调用之间内部存储应用程序数据 &lt;code&gt;wrap()/unwrap()&lt;/code&gt; 。因此，必须适当调整输入和输出 &lt;code&gt;ByteBuffer&lt;/code&gt; 的大小，以容纳可以产生的最大记录。应当使用对&lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; 的&lt;/a&gt;调用来确定适当的缓冲区大小。出站应用程序数据缓冲区的大小通常无关紧要。如果缓冲区条件不允许正确使用/产生数据，则应用程序必须确定（通过&lt;a href=&quot;sslengineresult&quot;&gt; &lt;code&gt;SSLEngineResult&lt;/code&gt; &lt;/a&gt;）并纠正问题，然后再次尝试调用。</target>
        </trans-unit>
        <trans-unit id="b752ac795479df72fea9b170d743467ba0f0cfba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to process the operation because there are not enough bytes available in the destination buffer to hold the result.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上无法因为没有目标缓冲区容纳结果提供足够的字节来处理操作。</target>
        </trans-unit>
        <trans-unit id="eaeaedd8a0decde5ead8adb6e73dcb183ff095c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLEngine&lt;/code&gt; was not able to unwrap the incoming data because there were not enough source bytes available to make a complete packet.</source>
          <target state="translated">该 &lt;code&gt;SSLEngine&lt;/code&gt; 上无法解开的输入数据，因为没有足够的源字节可以做一个完整的数据包。</target>
        </trans-unit>
        <trans-unit id="cbaeb5659c8aac8f7fee34b65d2504a15d654f38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SSLSocket&lt;/code&gt; class provides much of the same security functionality, but all of the inbound and outbound data is automatically transported using the underlying &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;, which by design uses a blocking model. While this is appropriate for many applications, this model does not provide the scalability required by large servers.</source>
          <target state="translated">所述 &lt;code&gt;SSLSocket&lt;/code&gt; 的类提供的几乎相同的安全功能，但所有的入站和出站数据的使用底层自动传送&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;，其通过设计采用了阻挡模型。尽管这对许多应用程序都适用，但是此模型不能提供大型服务器所需的可伸缩性。</target>
        </trans-unit>
        <trans-unit id="67002f2853371825d4f380e6151673d61fd862c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngine&lt;/code&gt; implementation version.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngine&lt;/code&gt; 的实现版本。</target>
        </trans-unit>
        <trans-unit id="f25a0860dae0919f1e2c083b37f6094e4c1e6bad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngine&lt;/code&gt; that created this &lt;code&gt;CompiledScript&lt;/code&gt;</source>
          <target state="translated">创建此 &lt;code&gt;CompiledScript&lt;/code&gt; 的 &lt;code&gt;ScriptEngine&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e21343e7ca5145a39ccb5bfd47f5b581373d98e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineFactory&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 所</target>
        </trans-unit>
        <trans-unit id="b665ef5d411bf64411a13e786d5fc2ae59afce43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 实现了一个发现和实例化机制 &lt;code&gt;ScriptEngine&lt;/code&gt; 类和还保持存储由所有Manager创建的引擎所共享的状态键/值对的集合。</target>
        </trans-unit>
        <trans-unit id="e8ac26f4b46b05f20c281cbfe3a63c1a0d4d63f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; implements a discovery and instantiation mechanism for &lt;code&gt;ScriptEngine&lt;/code&gt; classes and also maintains a collection of key/value pairs storing state shared by all engines created by the Manager. This class uses the service provider mechanism to enumerate all the implementations of &lt;code&gt;ScriptEngineFactory&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 实现了一个发现和实例化机制 &lt;code&gt;ScriptEngine&lt;/code&gt; 类和还保持存储由所有Manager创建的引擎所共享的状态键/值对的集合。此类使用服务提供者机制枚举 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 的所有实现。</target>
        </trans-unit>
        <trans-unit id="c8f5248bd1e6ed1326e622b205ee4a45bbc651cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; provides a method to return a list of all these factories as well as utility methods which look up factories on the basis of language name, file extension and mime type.</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 提供返回所有这些工厂的名单，以及实用方法查找工厂语言名称，文件扩展名和MIME类型的基础上的方法。</target>
        </trans-unit>
        <trans-unit id="901dec5a90ef8a0878213de32ad7798df415e097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScriptEngineManager&lt;/code&gt; uses the service provider mechanism described in the</source>
          <target state="translated">该 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 使用中所描述的服务提供者机制</target>
        </trans-unit>
        <trans-unit id="dcf2e0bf99eab15ad6a0fa15e39d7a6c2e33fef8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SearchResult&lt;/code&gt; may also contain attributes of the matching object if the &lt;code&gt;cons&lt;/code&gt; argument specifies that attributes be returned.</source>
          <target state="translated">的 &lt;code&gt;SearchResult&lt;/code&gt; 也可包含匹配对象的属性，如果 &lt;code&gt;cons&lt;/code&gt; 被返回参数指定属性。</target>
        </trans-unit>
        <trans-unit id="eabc9dbc1a3de0e0e126d5d1a67a58df32a7962f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SecurityManager&lt;/code&gt; class contains many methods with names that begin with the word &lt;code&gt;check&lt;/code&gt;. These methods are called by various methods in the Java libraries before those methods perform certain potentially sensitive operations. The invocation of such a &lt;code&gt;check&lt;/code&gt; method typically looks like this:</source>
          <target state="translated">在 &lt;code&gt;SecurityManager&lt;/code&gt; 类包含与字开头的名称很多方法 &lt;code&gt;check&lt;/code&gt; 。在这些方法执行某些潜在的敏感操作之前，这些方法会被Java库中的各种方法调用。这种 &lt;code&gt;check&lt;/code&gt; 方法的调用通常如下所示：</target>
        </trans-unit>
        <trans-unit id="cdf333c83d829b3401cd3328628d6c609f64f31a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Sequencer&lt;/code&gt; interface includes methods for the following basic MIDI sequencer operations:</source>
          <target state="translated">该 &lt;code&gt;Sequencer&lt;/code&gt; 接口包括用于以下基本MIDI音序器操作的方法：</target>
        </trans-unit>
        <trans-unit id="2d6a25bea447e545dee0ec116fce9cf07f17df31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; interface places additional stipulations, beyond those inherited from the &lt;code&gt;Collection&lt;/code&gt; interface, on the contracts of all constructors and on the contracts of the &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods. Declarations for other inherited methods are also included here for convenience. (The specifications accompanying these declarations have been tailored to the &lt;code&gt;Set&lt;/code&gt; interface, but they do not contain any additional stipulations.)</source>
          <target state="translated">除了从 &lt;code&gt;Collection&lt;/code&gt; 接口继承的规定之外， &lt;code&gt;Set&lt;/code&gt; 接口还对所有构造函数的协定以及 &lt;code&gt;add&lt;/code&gt; ， &lt;code&gt;equals&lt;/code&gt; 和 &lt;code&gt;hashCode&lt;/code&gt; 方法的协定附加其他规定。为了方便起见，还包括其他继承方法的声明。（这些声明随附的规范是针对 &lt;code&gt;Set&lt;/code&gt; 接口量身定制的，但不包含任何其他规定。）</target>
        </trans-unit>
        <trans-unit id="ca2825253af57c9c2e6a3d7675526c2242a40a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Set&lt;/code&gt; of Principals associated with this &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Set&lt;/code&gt; 与此相关的Principal &lt;code&gt;Subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61061520eba3a069412253fc6b718281a7764587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;short&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Short&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;short&lt;/code&gt; 于一个对象。</target>
        </trans-unit>
        <trans-unit id="5bd6d5314769fa94b169cf6fd6d3a5c0f5803d61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Short&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;short&lt;/code&gt; in an object. An object of type &lt;code&gt;Short&lt;/code&gt; contains a single field whose type is &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Short&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;short&lt;/code&gt; 于一个对象。类型为 &lt;code&gt;Short&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;short&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="cf5e4c26203f886b6a7a4f1b81f96c02a0a29697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SignedResultsControl&lt;/code&gt; class might be defined as follows:</source>
          <target state="translated">该 &lt;code&gt;SignedResultsControl&lt;/code&gt; 类可能被定义如下：</target>
        </trans-unit>
        <trans-unit id="3a917286530fabb04fa41fccacd2711f46f2bddd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleScriptContext&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;SimpleScriptContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca03fd6be029ed8ca889a60a8a508d0a4a1babe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;SimpleType&lt;/code&gt; 的类是</target>
        </trans-unit>
        <trans-unit id="f454eae06e8c8450f0d9941d0498c44514cf1e53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Boolean&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="639c3ab3a04fd48b0812edf7c08168f9b2abfe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Byte&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="6779cad3872976416b8715cdc2cae03f34516e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Character&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Character&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="ccc12a9229fa28b212383ee48e5d6d48b5829469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Double&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="3b4dbe56be7eeb7407783a82c785c69757959537" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Float&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="950ad58636d59dcea09852f3de50a8b54e4ec126" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Integer&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="38105e6f78986a670b722ab3d041a7ff3901722e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Long&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="a28cf8d0823e5eefc4a4e7fc0bee61dc5592a17e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Short&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="820c357e21a5bd82921b5bccd1f7a3db183c43be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.String&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="36b771fc8f2baca3d65ff467300137e5fa46b87f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.lang.Void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.lang.Void&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="6dbd2a7b98eeeeb0df1e9367af1772ffa7a82ff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.math.BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.math.BigDecimal&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="98c8cbacf6c530dcd5198d36051672cced797c4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.math.BigInteger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.math.BigInteger&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="53ea91ec792b961906f05193441b86fc1c764ce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;java.util.Date&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;java.util.Date&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="b9f782c191b744e88038240ceea9bf9b47ef00d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SimpleType&lt;/code&gt; instance describing values whose Java class name is &lt;code&gt;javax.management.ObjectName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleType&lt;/code&gt; 实例，该实例描述其Java类名称为 &lt;code&gt;javax.management.ObjectName&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="2f21653116680d7405660374ff050723b7344530" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SocketAddress&lt;/code&gt; that the socket is bound to, or the &lt;code&gt;SocketAddress&lt;/code&gt; representing the loopback address if denied by the security manager, or &lt;code&gt;null&lt;/code&gt; if the channel's socket is not bound</source>
          <target state="translated">在 &lt;code&gt;SocketAddress&lt;/code&gt; 的套接字绑定到，或 &lt;code&gt;SocketAddress&lt;/code&gt; 代表的环回地址，如果安全管理器，或拒绝 &lt;code&gt;null&lt;/code&gt; ，如果通道的套接字没有绑定</target>
        </trans-unit>
        <trans-unit id="18e018252e244e834ac16d7592161dec68491d6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SourceDataLine&lt;/code&gt; interface provides a method for writing audio data to the data line's buffer. Applications that play or mix audio should write data to the source data line quickly enough to keep the buffer from underflowing (emptying), which could cause discontinuities in the audio that are perceived as clicks. Applications can use the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. The amount of data which can be written to the buffer without blocking is the difference between the buffer size and the amount of queued data. If the delivery of audio output stops due to underflow, a &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated. A &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated when the audio output resumes.</source>
          <target state="translated">的 &lt;code&gt;SourceDataLine&lt;/code&gt; 的接口提供的音频数据写入到所述数据线的缓冲区的方法。播放或混合音频的应用程序应足够快地将数据写入源数据线，以防止缓冲区下溢（清空），这可能会导致音频中的不连续感（被视为喀哒声）。应用程序可以使用 &lt;code&gt;DataLine&lt;/code&gt; 接口中定义的 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法来确定当前排队在数据线缓冲区中的数据量。在不阻塞的情况下可以写入缓冲区的数据量是缓冲区大小与排队数据量之间的差。如果音频输出的传递由于下溢而 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 则会生成STOP事件。一个 &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 恢复音频输出时会生成事件。</target>
        </trans-unit>
        <trans-unit id="7d6c5c0e9a62febf84bbb9141ee81024ed231a73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 另外报告&lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5cd94ecb80a03490b99bcd80e701c14fac87925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism..</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 另外报告&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;和工具 &lt;code&gt;trySplit&lt;/code&gt; 允许有限的并行..</target>
        </trans-unit>
        <trans-unit id="af784776c0cdc3b45691af7e034f88ace154b36b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 工具 &lt;code&gt;trySplit&lt;/code&gt; 允许有限的并行性。</target>
        </trans-unit>
        <trans-unit id="bc4bc484d5f7374b739600d18f54719d380be19e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending order. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;，与被升序的顺序相遇。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="f2950b171471656d176973c0cdbe156c00f2950c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f29dd54a6792c7ed4529600d96348a75bdd9555a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="d956efee01ea55ce995f06c420101ace333173f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e199c4eef228c77de88efe1878bd4a7a2d489af1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbd59fa14ea73f85c3995572f64444c99c11f1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;../spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1e52439eecc198c689029f966c5a01b29d70971" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="a468b87aa57a000d104e16ad1ebfc71127bed7dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="6ebf9e7f0b30959249ec16fdfe821371d93a4d56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="5eb4148ceff758d730c061aadb07b3dfc29badab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="6117d3f9be68af61e863fb3ac62f3f48f2b55bd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="365bad875f0605d7a3f88de21373c4b2c02e8b6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="c76f2bcfdf2668373b751457d6ab6afa52733599" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;. Implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;ORDERED&lt;/code&gt; 。实施应记录附加特征值的报告。</target>
        </trans-unit>
        <trans-unit id="56ca63602e1e9a18ab8f45fd2c61e5f3e26c4da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="b7a7b7355ffd0c2f2072bfc12a5dfa9d5724f300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="69d1d467a5fec847db2c8830bffb8575def22c59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spliterator&lt;/code&gt; reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;. Overriding implementations should document the reporting of additional characteristic values.</source>
          <target state="translated">该 &lt;code&gt;Spliterator&lt;/code&gt; 报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;。首要实现应记录其他特征值的报告。</target>
        </trans-unit>
        <trans-unit id="a22bed6089a698314bd570d8dfea84ff3886d8de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stack&lt;/code&gt; class represents a last-in-first-out (LIFO) stack of objects.</source>
          <target state="translated">所述 &lt;code&gt;Stack&lt;/code&gt; 类表示对象的后进先出（LIFO）堆栈。</target>
        </trans-unit>
        <trans-unit id="725a4ea6b7a05d02133053cfe135e8b021c0e333" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stack&lt;/code&gt; class represents a last-in-first-out (LIFO) stack of objects. It extends class &lt;code&gt;Vector&lt;/code&gt; with five operations that allow a vector to be treated as a stack. The usual &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; operations are provided, as well as a method to &lt;code&gt;peek&lt;/code&gt; at the top item on the stack, a method to test for whether the stack is &lt;code&gt;empty&lt;/code&gt;, and a method to &lt;code&gt;search&lt;/code&gt; the stack for an item and discover how far it is from the top.</source>
          <target state="translated">所述 &lt;code&gt;Stack&lt;/code&gt; 类表示对象的后进先出（LIFO）堆栈。它通过五个操作扩展了 &lt;code&gt;Vector&lt;/code&gt; 类，这些操作允许将矢量视为堆栈。提供了通常的 &lt;code&gt;push&lt;/code&gt; 和 &lt;code&gt;pop&lt;/code&gt; 操作，以及一种 &lt;code&gt;peek&lt;/code&gt; 堆栈顶部项目的方法，一种用于测试堆栈是否为 &lt;code&gt;empty&lt;/code&gt; 的方法以及一种用于在堆栈中 &lt;code&gt;search&lt;/code&gt; 项目并发现其距离的方法。从顶部开始。</target>
        </trans-unit>
        <trans-unit id="1390697c89353b590988a85571b01944397a5934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stream&lt;/code&gt; describing the content of the directory</source>
          <target state="translated">该 &lt;code&gt;Stream&lt;/code&gt; 描述目录的内容</target>
        </trans-unit>
        <trans-unit id="c78c42072e63ca70c7ecefe4c83c75776bdbcfbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamHandler&lt;/code&gt; first checks if there is an &lt;code&gt;OutputStream&lt;/code&gt; and if the given &lt;code&gt;LogRecord&lt;/code&gt; has at least the required log level. If not it silently returns. If so, it calls any associated &lt;code&gt;Filter&lt;/code&gt; to check if the record should be published. If so, it calls its &lt;code&gt;Formatter&lt;/code&gt; to format the record and then writes the result to the current output stream.</source>
          <target state="translated">所述 &lt;code&gt;StreamHandler&lt;/code&gt; 中首先检查是否存在一个 &lt;code&gt;OutputStream&lt;/code&gt; 和如果给定 &lt;code&gt;LogRecord&lt;/code&gt; 具有至少所需的日志级别。如果没有，它会默默地返回。如果是这样，它将调用任何关联的 &lt;code&gt;Filter&lt;/code&gt; 以检查记录是否应发布。如果是这样，它将调用其 &lt;code&gt;Formatter&lt;/code&gt; 格式化记录，然后将结果写入当前输出流。</target>
        </trans-unit>
        <trans-unit id="e6a8fe0d59891f6c0cc5fc356448e863867d876b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamTokenizer&lt;/code&gt; class takes an input stream and parses it into &quot;tokens&quot;, allowing the tokens to be read one at a time.</source>
          <target state="translated">所述 &lt;code&gt;StreamTokenizer&lt;/code&gt; 极类获取输入流和将其解析为&amp;ldquo;标记&amp;rdquo;，允许令牌是在一次读取。</target>
        </trans-unit>
        <trans-unit id="90790abff6838151ec89277ddea3efa96bd3fd1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;StreamTokenizer&lt;/code&gt; class takes an input stream and parses it into &quot;tokens&quot;, allowing the tokens to be read one at a time. The parsing process is controlled by a table and a number of flags that can be set to various states. The stream tokenizer can recognize identifiers, numbers, quoted strings, and various comment styles.</source>
          <target state="translated">所述 &lt;code&gt;StreamTokenizer&lt;/code&gt; 极类获取输入流和将其解析为&amp;ldquo;标记&amp;rdquo;，允许令牌是在一次读取。解析过程由一个表和许多可以设置为各种状态的标志控制。流标记器可以识别标识符，数字，带引号的字符串和各种注释样式。</target>
        </trans-unit>
        <trans-unit id="cace10574531d43fd7350c7bbe816d7c0693ff93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class provides methods for dealing with Unicode code points (i.e., characters), in addition to those for dealing with Unicode code units (i.e., &lt;code&gt;char&lt;/code&gt; values).</source>
          <target state="translated">的 &lt;code&gt;String&lt;/code&gt; 类提供使用Unicode代码点（即，字符）处理，除了那些用于处理Unicode代码单元（即，方法 &lt;code&gt;char&lt;/code&gt; 值）。</target>
        </trans-unit>
        <trans-unit id="0d78a761f2944c5a20f9f6d6f41f724d053b8054" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class represents character strings.</source>
          <target state="translated">该 &lt;code&gt;String&lt;/code&gt; 类代表字符串。</target>
        </trans-unit>
        <trans-unit id="cfaf0978cdd4182db5fdb416c1be5b9a10ec7e9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; class represents character strings. All string literals in Java programs, such as &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, are implemented as instances of this class.</source>
          <target state="translated">该 &lt;code&gt;String&lt;/code&gt; 类代表字符串。Java程序中的所有字符串文字（例如 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; ）都实现为此类的实例。</target>
        </trans-unit>
        <trans-unit id="bf9e88bafccff9dfb01a4ed99ca09de99632708e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; constructor, on the other hand, is perfectly predictable: writing &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is</source>
          <target state="translated">的 &lt;code&gt;String&lt;/code&gt; 的构造，在另一方面，是完全可以预测的：写 &lt;code&gt;new BigDecimal(&quot;0.1&quot;)&lt;/code&gt; 创建 &lt;code&gt;BigDecimal&lt;/code&gt; 这是</target>
        </trans-unit>
        <trans-unit id="79d62a9c1d3d1d0435af40a0f1b27c3991ef6251" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Synthesizer&lt;/code&gt; interface includes methods for loading and unloading instruments from soundbanks. An instrument is a specification for synthesizing a certain type of sound, whether that sound emulates a traditional instrument or is some kind of sound effect or other imaginary sound. A soundbank is a collection of instruments, organized by bank and program number (via the instrument's &lt;code&gt;Patch&lt;/code&gt; object). Different &lt;code&gt;Synthesizer&lt;/code&gt; classes might implement different sound-synthesis techniques, meaning that some instruments and not others might be compatible with a given synthesizer. Also, synthesizers may have a limited amount of memory for instruments, meaning that not every soundbank and instrument can be used by every synthesizer, even if the synthesis technique is compatible. To see whether the instruments from a certain soundbank can be played by a given synthesizer, invoke the &lt;a href=&quot;synthesizer#isSoundbankSupported-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;isSoundbankSupported&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Synthesizer&lt;/code&gt; 接口包括用于从声音库装卸工具的方法。乐器是用于合成特定类型声音的规范，无论该声音是模仿传统乐器还是某种声音效果或其他虚构声音。音库是按库和程序号（通过乐器的 &lt;code&gt;Patch&lt;/code&gt; 对象）组织的乐器集合。不同的 &lt;code&gt;Synthesizer&lt;/code&gt; 类可能实现不同的声音合成技术，这意味着某些乐器而非其他乐器可能与给定的合成器兼容。而且，合成器可能只具有有限的乐器存储空间，这意味着即使合成技术兼容，并非每个音色库和乐器都可以被每个合成器使用。看是否从某个音库的仪器可以通过一个给定的合成器上播放，调用&lt;a href=&quot;synthesizer#isSoundbankSupported-javax.sound.midi.Soundbank-&quot;&gt; &lt;code&gt;isSoundbankSupported&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;Synthesizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfaf0a0f81bd0eca9825b951309b3216299181ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods.</source>
          <target state="translated">该 &lt;code&gt;System&lt;/code&gt; 类包含一些有用的类字段和方法。</target>
        </trans-unit>
        <trans-unit id="2e929acaa33491c9123dc823b9825fd21aa7ba63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;System&lt;/code&gt; class contains several useful class fields and methods. It cannot be instantiated.</source>
          <target state="translated">该 &lt;code&gt;System&lt;/code&gt; 类包含一些有用的类字段和方法。无法实例化。</target>
        </trans-unit>
        <trans-unit id="90342a4ec5ebd367ca721e299022f4ba7c4abcba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPE_USE&lt;/code&gt; constant includes type declarations and type parameter declarations as a convenience for designers of type checkers which give semantics to annotation types. For example, if the annotation type &lt;code&gt;NonNull&lt;/code&gt; is meta-annotated with &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt;, then &lt;code&gt;@NonNull&lt;/code&gt;&lt;code&gt;class C {...}&lt;/code&gt; could be treated by a type checker as indicating that all variables of class &lt;code&gt;C&lt;/code&gt; are non-null, while still allowing variables of other classes to be non-null or not non-null based on whether &lt;code&gt;@NonNull&lt;/code&gt; appears at the variable's declaration.</source>
          <target state="translated">所述 &lt;code&gt;TYPE_USE&lt;/code&gt; 常数包括类型声明和类型参数声明为类型检查器的设计者这给语义注释类型便利。例如，如果注释类型 &lt;code&gt;NonNull&lt;/code&gt; 用 &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; 进行元注释，则类型检查器可以将 &lt;code&gt;@NonNull&lt;/code&gt; &lt;code&gt;class C {...}&lt;/code&gt; 视为指示类 &lt;code&gt;C&lt;/code&gt; 的所有变量都不为空。 ，同时仍根据 &lt;code&gt;@NonNull&lt;/code&gt; 是否出现在变量的声明中来允许其他类的变量为非null或非null 。</target>
        </trans-unit>
        <trans-unit id="3ef83572b32113beb492c13117cd5dc2ac290774" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">所述 &lt;code&gt;TabularData&lt;/code&gt; 接口指定的复合物的特定类型的行为</target>
        </trans-unit>
        <trans-unit id="7724aaad4c815a2f3d25835048c64655b5a959e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;TabularDataSupport&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="d1a581b7f12d575f8065049692b39a4f8b425736" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TabularType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;TabularType&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="2b88d977d84dfecfb709ca75951d725a6ab95a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TargetDataLine&lt;/code&gt; interface provides a method for reading the captured data from the target data line's buffer.Applications that record audio should read data from the target data line quickly enough to keep the buffer from overflowing, which could cause discontinuities in the captured data that are perceived as clicks. Applications can use the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method defined in the &lt;code&gt;DataLine&lt;/code&gt; interface to determine the amount of data currently queued in the data line's buffer. If the buffer does overflow, the oldest queued data is discarded and replaced by new data.</source>
          <target state="translated">该 &lt;code&gt;TargetDataLine&lt;/code&gt; 的接口提供了一种从目标数据行的buffer.Applications读取捕获的数据记录音频应改为从目标数据线快速足够的数据来保持缓冲区溢出，这可能会导致被感知捕获的数据不连续性点击次数。应用程序可以使用 &lt;code&gt;DataLine&lt;/code&gt; 接口中定义的 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法来确定当前排队在数据线缓冲区中的数据量。如果缓冲区确实溢出，则最早的排队数据将被丢弃并由新数据替换。</target>
        </trans-unit>
        <trans-unit id="3e0b1acfd21178efdd1911606a8891da6c388408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetDateTime&lt;/code&gt; using &lt;a href=&quot;offsetdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two date-times, the specified end date-time is normalized to have the same offset as this date-time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;OffsetDateTime&lt;/code&gt; 使用&lt;a href=&quot;offsetdatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两个日期时间之间的偏移量不同，则将指定的结束日期时间标准化为具有与此日期时间相同的偏移量。</target>
        </trans-unit>
        <trans-unit id="3e06b07abdd9c26452543a4ee27b98a4f883116f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;OffsetTime&lt;/code&gt; using &lt;a href=&quot;offsettime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the offset differs between the two times, then the specified end time is normalized to have the same offset as this time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;OffsetTime&lt;/code&gt; 使用&lt;a href=&quot;offsettime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两次之间的偏移量不同，则将指定的结束时间标准化为具有与此时间相同的偏移量。</target>
        </trans-unit>
        <trans-unit id="137e87a41dd6513a254139c8feaaab1e66487d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Temporal&lt;/code&gt; passed to this method is converted to a &lt;code&gt;ZonedDateTime&lt;/code&gt; using &lt;a href=&quot;zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt;. If the time-zone differs between the two zoned date-times, the specified end date-time is normalized to have the same zone as this date-time.</source>
          <target state="translated">的 &lt;code&gt;Temporal&lt;/code&gt; 传递给此方法被转换为 &lt;code&gt;ZonedDateTime&lt;/code&gt; 使用&lt;a href=&quot;zoneddatetime#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;。如果两个分区的日期时间之间的时区不同，则将指定的结束日期时间标准化为具有与此日期时间相同的时区。</target>
        </trans-unit>
        <trans-unit id="e5e2abe85585b946fe3143ade66a1eb51b565159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TemporalAdjuster&lt;/code&gt; is based on the low level &lt;code&gt;Temporal&lt;/code&gt; interface. This method allows an adjustment from &lt;code&gt;LocalDate&lt;/code&gt; to &lt;code&gt;LocalDate&lt;/code&gt; to be wrapped to match the temporal-based interface. This is provided for convenience to make user-written adjusters simpler.</source>
          <target state="translated">该 &lt;code&gt;TemporalAdjuster&lt;/code&gt; 是基于低级别的 &lt;code&gt;Temporal&lt;/code&gt; 界面。此方法允许包装从 &lt;code&gt;LocalDate&lt;/code&gt; 到 &lt;code&gt;LocalDate&lt;/code&gt; 的调整以匹配基于时间的界面。提供此功能是为了方便使用户编写的调节器更简单。</target>
        </trans-unit>
        <trans-unit id="179bee4e4045d3f40705d1a933596e56a91b3268" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ThreadMXBean&lt;/code&gt; interface provides the &lt;a href=&quot;threadmxbean#findMonitorDeadlockedThreads--&quot;&gt;&lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt;&lt;code&gt;findDeadlockedThreads()&lt;/code&gt;&lt;/a&gt; methods to find deadlocks in the running application.</source>
          <target state="translated">该 &lt;code&gt;ThreadMXBean&lt;/code&gt; 的接口提供了&lt;a href=&quot;threadmxbean#findMonitorDeadlockedThreads--&quot;&gt; &lt;code&gt;findMonitorDeadlockedThreads()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt; &lt;code&gt;findDeadlockedThreads()&lt;/code&gt; &lt;/a&gt;方法来查找在运行的应用程序死锁。</target>
        </trans-unit>
        <trans-unit id="39917ae27e9e1229d50311719d5d54222afebd7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language.</source>
          <target state="translated">该 &lt;code&gt;Throwable&lt;/code&gt; 的类是在Java语言中所有错误和异常的超类。</target>
        </trans-unit>
        <trans-unit id="08f3668a9e709259220f6210bae5df043abe1c67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Throwable&lt;/code&gt; class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java &lt;code&gt;throw&lt;/code&gt; statement. Similarly, only this class or one of its subclasses can be the argument type in a &lt;code&gt;catch&lt;/code&gt; clause. For the purposes of compile-time checking of exceptions, &lt;code&gt;Throwable&lt;/code&gt; and any subclass of &lt;code&gt;Throwable&lt;/code&gt; that is not also a subclass of either &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; are regarded as checked exceptions.</source>
          <target state="translated">该 &lt;code&gt;Throwable&lt;/code&gt; 的类是在Java语言中所有错误和异常的超类。Java虚拟机仅抛出属于此类（或其子类之一）实例的对象，或者Java &lt;code&gt;throw&lt;/code&gt; 语句可以抛出该对象。类似地，在 &lt;code&gt;catch&lt;/code&gt; 子句中，只有此类或其子类之一才能成为参数类型。对于异常的编译时检查的目的， &lt;code&gt;Throwable&lt;/code&gt; 和任何子类 &lt;code&gt;Throwable&lt;/code&gt; ，是不是也无论是子类&lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;被视为检查的异常。</target>
        </trans-unit>
        <trans-unit id="4424bacaff9f769c17cab48ed5095a39891ea9af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method is overwritten by a &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt;&lt;code&gt;setCalendar&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">通过此方法设置的 &lt;code&gt;TimeZone&lt;/code&gt; 被&lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt; &lt;code&gt;setCalendar&lt;/code&gt; &lt;/a&gt;调用覆盖。</target>
        </trans-unit>
        <trans-unit id="ab6ef098a0e2b11a35d0346ab8d1c75fce3fa93c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TimeZone&lt;/code&gt; set by this method may be overwritten as a result of a call to the parse method.</source>
          <target state="translated">调用parse方法的结果可能会覆盖此方法设置的 &lt;code&gt;TimeZone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64856a2ea07154d8aca40a14f0b2a8f2b6235c3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Track&lt;/code&gt; class provides methods to edit the track by adding or removing &lt;code&gt;MidiEvent&lt;/code&gt; objects from it. These operations keep the event list in the correct time order. Methods are also included to obtain the track's size, in terms of either the number of events it contains or its duration in ticks.</source>
          <target state="translated">的 &lt;code&gt;Track&lt;/code&gt; 类通过添加或移除提供方法来编辑轨迹 &lt;code&gt;MidiEvent&lt;/code&gt; 从它的对象。这些操作使事件列表按正确的时间顺序排列。还包括根据轨道包含的事件数或以滴答为单位的持续时间来获取轨道大小的方法。</target>
        </trans-unit>
        <trans-unit id="9a63fe4036fc39c3775af4983ad2d733adec1ad6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Transient&lt;/code&gt; annotation may be be used in any of the methods that are involved in a &lt;a href=&quot;featuredescriptor&quot;&gt;&lt;code&gt;FeatureDescriptor&lt;/code&gt;&lt;/a&gt; subclass to identify the transient feature in the annotated class and its subclasses. Normally, the method that starts with &quot;get&quot; is the best place to put the annotation and it is this declaration that takes precedence in the case of multiple annotations being defined for the same feature.</source>
          <target state="translated">所述 &lt;code&gt;Transient&lt;/code&gt; 注释可以以任何的中涉及的一个的方法中可以使用&lt;a href=&quot;featuredescriptor&quot;&gt; &lt;code&gt;FeatureDescriptor&lt;/code&gt; &lt;/a&gt;子类来识别带注释类及其子类的瞬态特性。通常，以&amp;ldquo; get&amp;rdquo;开头的方法是放置注释的最佳位置，并且在为同一功能定义了多个注释的情况下，此声明优先。</target>
        </trans-unit>
        <trans-unit id="56b910f29830f7a046163f6e535cb7ed1fc9dd25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URI&lt;/code&gt; passed as an argument specifies the intended use for the cookies. In particular the scheme should reflect whether the cookies will be sent over http, https or used in another context like javascript. The host part should reflect either the destination of the cookies or their origin in the case of javascript.</source>
          <target state="translated">作为参数传递的 &lt;code&gt;URI&lt;/code&gt; 指定cookie的预期用途。特别是，该方案应反映cookie是通过http，https发送还是用于其他上下文（如javascript）中。对于javascript，主机部分应反映cookie的目的地或它们的来源。</target>
        </trans-unit>
        <trans-unit id="4ba34cdf99e04c2d36d3c24cfdbaca9cd7b39e21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; instance is used to construct a stream protocol handler from a protocol name.</source>
          <target state="translated">该 &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; 实例用于构造从一个协议名称的流协议处理程序。</target>
        </trans-unit>
        <trans-unit id="1d60c3045667966fd5b30a25092dd1ae85ace600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets are specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt;; the transformation formats upon which they are based are specified in Amendment 1 of ISO 10646-1 and are also described in the &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;UTF-16&lt;/code&gt; 字符集是由指定的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;&lt;i&gt;RFC 2781&lt;/i&gt;&lt;/a&gt; ; 它们所基于的转换格式在ISO 10646-1的修订1中指定，并且在&lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode标准&lt;/i&gt;&lt;/a&gt;中也有描述。</target>
        </trans-unit>
        <trans-unit id="e562ee77a3c77e7c3517890b43d086ebf2121c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-16&lt;/code&gt; charsets use sixteen-bit quantities and are therefore sensitive to byte order. In these encodings the byte order of a stream may be indicated by an initial</source>
          <target state="translated">在 &lt;code&gt;UTF-16&lt;/code&gt; 字符集使用十六位量，因此对字节顺序敏感。在这些编码中，流的字节顺序可以由首字母表示</target>
        </trans-unit>
        <trans-unit id="cf273b4ec9d4f261c426075182f01ae5218ee7da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UTF-8&lt;/code&gt; charset is specified by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt;; the transformation format upon which it is based is specified in Amendment 2 of ISO 10646-1 and is also described in the &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode Standard&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;UTF-8&lt;/code&gt; 字符集是由指定的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;&lt;i&gt;RFC 2279&lt;/i&gt;&lt;/a&gt; ; 它所基于的转换格式在ISO 10646-1的修订2中指定，并且在&lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;Unicode标准中&lt;/i&gt;&lt;/a&gt;也有描述。</target>
        </trans-unit>
        <trans-unit id="f3746255404c7a2b3ecfdce90d4c067951094108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeBlock&lt;/code&gt; instance identified by &lt;code&gt;blockName&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;UnicodeBlock&lt;/code&gt; 通过鉴定实例 &lt;code&gt;blockName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d896f7ed14163beb92e5724cc9e8050c6b43c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeBlock&lt;/code&gt; instance representing the Unicode block of which this character is a member, or &lt;code&gt;null&lt;/code&gt; if the character is not a member of any Unicode block</source>
          <target state="translated">代表该字符所属的Unicode块的 &lt;code&gt;UnicodeBlock&lt;/code&gt; 实例；如果该字符不是任何Unicode块的成员，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3da0426647b35089008f837fbe22d127f746d93b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeScript&lt;/code&gt; constant identified by &lt;code&gt;scriptName&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;UnicodeScript&lt;/code&gt; 通过鉴定恒 &lt;code&gt;scriptName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="361aa86ab23e083f317e898d7085e206739f58ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UnicodeScript&lt;/code&gt; constant representing the Unicode script of which this character is assigned to.</source>
          <target state="translated">该 &lt;code&gt;UnicodeScript&lt;/code&gt; 常数，表示其中的这个角色被分配到Unicode的脚本。</target>
        </trans-unit>
        <trans-unit id="6b22e15bc413740c6b41cef56f96b20ebfc3c2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; for this file system</source>
          <target state="translated">此文件系统的 &lt;code&gt;UserPrincipalLookupService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c0c0ad3a9196627434d4da0577e73a19e9ed982" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ValueExp&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ValueExp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95f12ecc4c931b6cd52c7c8712c089eb1f901958" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; class implements a growable array of objects.</source>
          <target state="translated">的 &lt;code&gt;Vector&lt;/code&gt; 类实现可增长的对象阵列。</target>
        </trans-unit>
        <trans-unit id="4aeeb9de325145d9de793fc5e171c818d3209bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a &lt;code&gt;Vector&lt;/code&gt; can grow or shrink as needed to accommodate adding and removing items after the &lt;code&gt;Vector&lt;/code&gt; has been created.</source>
          <target state="translated">的 &lt;code&gt;Vector&lt;/code&gt; 类实现可增长的对象阵列。像数组一样，它包含可以使用整数索引访问的组件。但是， &lt;code&gt;Vector&lt;/code&gt; 的大小可以根据需要增大或缩小，以适应创建 &lt;code&gt;Vector&lt;/code&gt; 之后添加和删除项目的需要。</target>
        </trans-unit>
        <trans-unit id="ef38f50778470be314c350ac1236d4ae66252c2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VetoableChangeSupport&lt;/code&gt; associated with this &lt;code&gt;BeanContextChildSupport&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;BeanContextChildSupport&lt;/code&gt; 关联的 &lt;code&gt;VetoableChangeSupport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20a05157c7add57e69ed4b84eda43d3b9471dac5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Void&lt;/code&gt; class is an uninstantiable placeholder class to hold a reference to the &lt;code&gt;Class&lt;/code&gt; object representing the Java keyword void.</source>
          <target state="translated">的 &lt;code&gt;Void&lt;/code&gt; 类是一个不可实例占位符类保持到一个参考 &lt;code&gt;Class&lt;/code&gt; 表示Java对象关键字void。</target>
        </trans-unit>
        <trans-unit id="26d20b795a509ccf345f4880f86bffc5ff46ea07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Writer&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;Writer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77fb3bff5f49c42c2161c3e19062b5010a06389f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Writer&lt;/code&gt; methods to write text throw &lt;code&gt;IOException&lt;/code&gt; if the text cannot be encoded using the specified charset.</source>
          <target state="translated">如果无法使用指定的字符集对文本进行编码，则用于编写文本的 &lt;code&gt;Writer&lt;/code&gt; 方法将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5df6357d2d9dd77291511c1a5a3bbe7008f4a76d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Writer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Writer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fdc5e90dac380c583a94ac10964401cbc1bff2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLDecoder&lt;/code&gt; class is used to read XML documents created using the &lt;code&gt;XMLEncoder&lt;/code&gt; and is used just like the &lt;code&gt;ObjectInputStream&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;XMLDecoder&lt;/code&gt; 类用于读取使用创建的XML文档 &lt;code&gt;XMLEncoder&lt;/code&gt; 和使用就像 &lt;code&gt;ObjectInputStream&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="4c73680d790e9f555b97eb4fbffb24cd26c3ccca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLDecoder&lt;/code&gt; class is used to read XML documents created using the &lt;code&gt;XMLEncoder&lt;/code&gt; and is used just like the &lt;code&gt;ObjectInputStream&lt;/code&gt;. For example, one can use the following fragment to read the first object defined in an XML document written by the &lt;code&gt;XMLEncoder&lt;/code&gt; class:</source>
          <target state="translated">该 &lt;code&gt;XMLDecoder&lt;/code&gt; 类用于读取使用创建的XML文档 &lt;code&gt;XMLEncoder&lt;/code&gt; 和使用就像 &lt;code&gt;ObjectInputStream&lt;/code&gt; 的。例如，可以使用以下片段读取 &lt;code&gt;XMLEncoder&lt;/code&gt; 类编写的XML文档中定义的第一个对象：</target>
        </trans-unit>
        <trans-unit id="b40fba744abf8f8cdfdbf7823211e024611a2005" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLEncoder&lt;/code&gt; class is a complementary alternative to the &lt;code&gt;ObjectOutputStream&lt;/code&gt; and can used to generate a textual representation of a &lt;em&gt;JavaBean&lt;/em&gt; in the same way that the &lt;code&gt;ObjectOutputStream&lt;/code&gt; can be used to create binary representation of &lt;code&gt;Serializable&lt;/code&gt; objects.</source>
          <target state="translated">所述 &lt;code&gt;XMLEncoder&lt;/code&gt; 类是互补替代 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 并可以用于生成的文本表示&lt;em&gt;的JavaBean&lt;/em&gt;以相同的方式，该 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 中可用于创建的二进制表示 &lt;code&gt;Serializable&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="bc93ab4e94e8fd32e113d65a55be49ef42b7d783" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLEncoder&lt;/code&gt; class is a complementary alternative to the &lt;code&gt;ObjectOutputStream&lt;/code&gt; and can used to generate a textual representation of a &lt;em&gt;JavaBean&lt;/em&gt; in the same way that the &lt;code&gt;ObjectOutputStream&lt;/code&gt; can be used to create binary representation of &lt;code&gt;Serializable&lt;/code&gt; objects. For example, the following fragment can be used to create a textual representation the supplied &lt;em&gt;JavaBean&lt;/em&gt; and all its properties:</source>
          <target state="translated">所述 &lt;code&gt;XMLEncoder&lt;/code&gt; 类是互补替代 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 并可以用于生成的文本表示&lt;em&gt;的JavaBean&lt;/em&gt;以相同的方式，该 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 中可用于创建的二进制表示 &lt;code&gt;Serializable&lt;/code&gt; 的对象。例如，以下片段可用于创建所提供的&lt;em&gt;JavaBean&lt;/em&gt;及其所有属性的文本表示形式：</target>
        </trans-unit>
        <trans-unit id="baee72131905882a77a0b4ca9b76ace184c77c99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XMLEncoder&lt;/code&gt; class provides a default denotation for &lt;em&gt;JavaBean&lt;/em&gt;s in which they are represented as XML documents complying with version 1.0 of the XML specification and the UTF-8 character encoding of the Unicode/ISO 10646 character set. The XML documents produced by the &lt;code&gt;XMLEncoder&lt;/code&gt; class are:</source>
          <target state="translated">&lt;code&gt;XMLEncoder&lt;/code&gt; 类为&lt;em&gt;JavaBean&lt;/em&gt;提供了默认的符号表示，其中将它们表示为符合XML规范版本1.0和Unicode / ISO 10646字符集的UTF-8字符编码的XML文档。 &lt;code&gt;XMLEncoder&lt;/code&gt; 类生成的XML文档是：</target>
        </trans-unit>
        <trans-unit id="dc6626b4ce56edf5eec0e4e7f1f6d83d431a9d81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[ ]&lt;/code&gt; characters are a</source>
          <target state="translated">在 &lt;code&gt;[ ]&lt;/code&gt; 的字符是一个</target>
        </trans-unit>
        <trans-unit id="cbec44aca0eff7c0fd9d646cfb96819a5b4c572f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accumulator&lt;/code&gt; function must be an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associative&lt;/a&gt; function.</source>
          <target state="translated">该 &lt;code&gt;accumulator&lt;/code&gt; 功能必须是&lt;a href=&quot;package-summary#Associativity&quot;&gt;关联&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="4185fd67e39e58987d681ed4e049cb9068cef055" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; argument is of the same format as the &lt;code&gt;eventPropertyName&lt;/code&gt; argument where the last property name identifies either a method name or writable property.</source>
          <target state="translated">的 &lt;code&gt;action&lt;/code&gt; 参数是相同的格式的 &lt;code&gt;eventPropertyName&lt;/code&gt; 参数，其中最后一个属性名称标识任一个方法名或可写属性。</target>
        </trans-unit>
        <trans-unit id="4200792e507990527888853e33e39555b27217a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; parameter identifies the attribute to be read and takes the form:</source>
          <target state="translated">的 &lt;code&gt;attribute&lt;/code&gt; 被读取参数标识属性和采取以下形式：</target>
        </trans-unit>
        <trans-unit id="e13622be0932a01b09ea0231195ad9dee2d891a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attribute&lt;/code&gt; parameter identifies the attribute to be set and takes the form:</source>
          <target state="translated">的 &lt;code&gt;attribute&lt;/code&gt; 参数标识所述属性被设置并采用以下形式：</target>
        </trans-unit>
        <trans-unit id="9300dec972e233c14dfee6f24a1437eb62d16c5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter identifies the attributes to be read and takes the form:</source>
          <target state="translated">的 &lt;code&gt;attributes&lt;/code&gt; 参数标识要读取的属性和采取以下形式：</target>
        </trans-unit>
        <trans-unit id="71ec10680a515404dcea83dc93b34a00ae544957" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is an optional array of file &lt;a href=&quot;../file/attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file.</source>
          <target state="translated">所述 &lt;code&gt;attrs&lt;/code&gt; 参数是文件的可选阵列&lt;a href=&quot;../file/attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;创建文件时设置原子。</target>
        </trans-unit>
        <trans-unit id="f5d11588e62ee6ecee510a144a13ae053b7ded0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the link. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;/a&gt;创建链接时设置原子。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="6a9611129a94268b694e7f0a6870f3b072a950a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when a new file is created.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;创建一个新的文件时，原子设置。</target>
        </trans-unit>
        <trans-unit id="1530cb7be2e1a90d2e32e41b80f5181fbd3c409a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the directory. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建目录时。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="ad9b07c9e2205e3502079d33de386fcf7c13ff4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建文件时。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="3d4f30d19e092c8b774921588c985e988e8af3fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the file. Each attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored. When no file attributes are specified, then the resulting file may have more restrictive access permissions to files created by the &lt;a href=&quot;../../io/file#createTempFile-java.lang.String-java.lang.String-java.io.File-&quot;&gt;&lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;设置原子创建文件时。每个属性都由其&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。如果未指定文件属性，则生成的文件可能对&lt;a href=&quot;../../io/file#createTempFile-java.lang.String-java.lang.String-java.io.File-&quot;&gt; &lt;code&gt;File.createTempFile(String,String,File)&lt;/code&gt; &lt;/a&gt;方法创建的文件具有更多的限制性访问权限。</target>
        </trans-unit>
        <trans-unit id="eac58af08c25e30b8096bbec06d65d5969d2351b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attrs&lt;/code&gt; parameter is optional &lt;a href=&quot;attribute/fileattribute&quot;&gt;&lt;code&gt;file-attributes&lt;/code&gt;&lt;/a&gt; to set atomically when creating the nonexistent directories. Each file attribute is identified by its &lt;a href=&quot;attribute/fileattribute#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.</source>
          <target state="translated">该 &lt;code&gt;attrs&lt;/code&gt; 参数是可选的&lt;a href=&quot;attribute/fileattribute&quot;&gt; &lt;code&gt;file-attributes&lt;/code&gt; &lt;/a&gt;来创建不存在的目录时设置原子。每个文件属性都通过&lt;a href=&quot;attribute/fileattribute#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;来标识。如果数组中包含多个同名属性，则将忽略除最后一次出现以外的所有属性。</target>
        </trans-unit>
        <trans-unit id="9310f8ddf2f2e1abe2704763c0d8698944c86a52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;available&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; always returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;available&lt;/code&gt; 方法始终返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a223f99a73adb8d4155acdcdbe953d90137df1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;available&lt;/code&gt; method of the underlying stream returns zero, indicating that further input requests would block.</source>
          <target state="translated">基础流的 &lt;code&gt;available&lt;/code&gt; 方法返回零，指示其他输入请求将被阻止。</target>
        </trans-unit>
        <trans-unit id="c19d6f589a03480c7507cbcf9ea41e93f9410bd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="translated">在 &lt;code&gt;backlog&lt;/code&gt; 参数是套接字上挂起连接的请求的最大数量。它的确切语义是特定于实现的。特别地，实现可以施加最大长度或可以选择完全忽略该参数。提供的值应大于 &lt;code&gt;0&lt;/code&gt; 。如果它小于或等于 &lt;code&gt;0&lt;/code&gt; ，那么将使用特定于实现的默认值。</target>
        </trans-unit>
        <trans-unit id="29ad9363012d93283f3d04ff689ea4b529ac1006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; argument must be a positive value greater than 0. If the value passed if equal or less than 0, then the default value will be assumed.</source>
          <target state="translated">的 &lt;code&gt;backlog&lt;/code&gt; 参数必须是一个正的值大于0。如果该值传递如果等于或小于0，则默认值将假定。</target>
        </trans-unit>
        <trans-unit id="b04fd34021527ffa6eec03ad117996148e622e5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backlog&lt;/code&gt; parameter is the maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. If the &lt;code&gt;backlog&lt;/code&gt; parameter has the value &lt;code&gt;0&lt;/code&gt;, or a negative value, then an implementation specific default is used.</source>
          <target state="translated">的 &lt;code&gt;backlog&lt;/code&gt; 参数是在插座上挂起连接的最大数目。它的确切语义是特定于实现的。特别地，一种实现可以施加最大长度，或者可以选择完全忽略该参数。如果 &lt;code&gt;backlog&lt;/code&gt; 参数的值为 &lt;code&gt;0&lt;/code&gt; 或负值，则使用特定于实现的默认值。</target>
        </trans-unit>
        <trans-unit id="038e82ed2e83821157222aec4b1425ddc2acdb2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beginIndex&lt;/code&gt; and &lt;code&gt;endIndex&lt;/code&gt; parameters specify the subsequence of name elements. The name that is &lt;em&gt;closest&lt;/em&gt; to the root in the directory hierarchy has index &lt;code&gt;0&lt;/code&gt;. The name that is &lt;em&gt;farthest&lt;/em&gt; from the root has index &lt;a href=&quot;path#getNameCount--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-1&lt;/code&gt;. The returned &lt;code&gt;Path&lt;/code&gt; object has the name elements that begin at &lt;code&gt;beginIndex&lt;/code&gt; and extend to the element at index &lt;code&gt;endIndex-1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;beginIndex&lt;/code&gt; 和 &lt;code&gt;endIndex&lt;/code&gt; 的参数指定名称的元素的序列。在目录层次结构中&lt;em&gt;最接近&lt;/em&gt;根的名称具有索引 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;离&lt;/em&gt;根&lt;em&gt;最远&lt;/em&gt;的名称的索引&lt;a href=&quot;path#getNameCount--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-1&lt;/code&gt; 。返回的 &lt;code&gt;Path&lt;/code&gt; 对象具有名称元素，这些名称元素始于 &lt;code&gt;beginIndex&lt;/code&gt; 并扩展到索引 &lt;code&gt;endIndex-1&lt;/code&gt; 处的元素。</target>
        </trans-unit>
        <trans-unit id="a0fdf3dc80a013dc8c4afe2a38389db91bc45e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cert.provider.x509v1&lt;/code&gt; property is set to a default implementation for X.509 such as:</source>
          <target state="translated">该 &lt;code&gt;cert.provider.x509v1&lt;/code&gt; 属性被设置为默认实施这样X.509：</target>
        </trans-unit>
        <trans-unit id="312b7fe1366e0a3c03057bcb7caeef6dc182a366" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;char&lt;/code&gt; data type (and therefore the value that a &lt;code&gt;Character&lt;/code&gt; object encapsulates) are based on the original Unicode specification, which defined characters as fixed-width 16-bit entities. The Unicode Standard has since been changed to allow for characters whose representation requires more than 16 bits. The range of legal &lt;em&gt;code point&lt;/em&gt;s is now U+0000 to U+10FFFF, known as &lt;em&gt;Unicode scalar value&lt;/em&gt;. (Refer to the &lt;a href=&quot;http://www.unicode.org/reports/tr27/#notation&quot;&gt;&lt;i&gt; definition&lt;/i&gt;&lt;/a&gt; of the U+</source>
          <target state="translated">的 &lt;code&gt;char&lt;/code&gt; 数据类型（以及因此一个值 &lt;code&gt;Character&lt;/code&gt; 对象封装）是基于原始Unicode规范，其定义字符为固定宽度的16位实体。此后，对Unicode标准进行了更改，以允许其表示需要超过16位的字符。合法&lt;em&gt;代码点&lt;/em&gt; s的范围现在为U + 0000到U + 10FFFF，即&lt;em&gt;Unicode标量值&lt;/em&gt;。（请参阅U + 的&lt;a href=&quot;http://www.unicode.org/reports/tr27/#notation&quot;&gt;&lt;i&gt;定义&lt;/i&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="159881b528b95151218ddcf06070876dc2535a5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checkAccess&lt;/code&gt; method of the parent thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">父线程组的 &lt;code&gt;checkAccess&lt;/code&gt; 方法不带参数调用；这可能会导致安全异常。</target>
        </trans-unit>
        <trans-unit id="5e8a72d273e2359cf1503e1f34724cc9c2dc1f67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checkPermission&lt;/code&gt; method that takes a context object in addition to a permission makes access decisions based on that context, rather than on that of the current execution thread. Code within a different context can thus call that method, passing the permission and the previously-saved context object. A sample call, using the SecurityManager &lt;code&gt;sm&lt;/code&gt; obtained as in the previous example, is the following:</source>
          <target state="translated">除权限外还采用上下文对象的 &lt;code&gt;checkPermission&lt;/code&gt; 方法根据该上下文而不是当前执行线程的上下文做出访问决策。因此，不同上下文中的代码可以调用该方法，并传递权限和先前保存的上下文对象。以下是使用如上一个示例中获得的SecurityManager &lt;code&gt;sm&lt;/code&gt; 进行的示例调用：</target>
        </trans-unit>
        <trans-unit id="8a37143162f383e40541a3c536a0bad8cdbdac3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear&lt;/code&gt; method sets calendar field(s) undefined. &lt;code&gt;GregorianCalendar&lt;/code&gt; uses the following default value for each calendar field if its value is undefined.</source>
          <target state="translated">的 &lt;code&gt;clear&lt;/code&gt; 未定义的方法集日历字段（一个或多个）。如果未定义， &lt;code&gt;GregorianCalendar&lt;/code&gt; 将为每个日历字段使用以下默认值。</target>
        </trans-unit>
        <trans-unit id="eca26951481b1fa79d4de62013b67d4d4f363ce7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clockSequence&lt;/code&gt; value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.</source>
          <target state="translated">所述 &lt;code&gt;clockSequence&lt;/code&gt; 值仅在基于时间的UUID，其具有版本类型1。如果此UUID不是基于时间的UUID，则此方法抛出UnsupportedOperationException有意义。</target>
        </trans-unit>
        <trans-unit id="17c69f5047e8b8edc7675c7afa6d967e75c7e9a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;CipherInputStream&lt;/code&gt; calls the &lt;code&gt;close&lt;/code&gt; method of its underlying input stream.</source>
          <target state="translated">该 &lt;code&gt;close&lt;/code&gt; 的方法 &lt;code&gt;CipherInputStream&lt;/code&gt; 调用 &lt;code&gt;close&lt;/code&gt; 其底层输入流的方法。</target>
        </trans-unit>
        <trans-unit id="8d16e59d74dedefbb9dca52dccbe54c8fd4fa9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls its &lt;code&gt;flush&lt;/code&gt; method, and then calls the &lt;code&gt;close&lt;/code&gt; method of its underlying output stream.</source>
          <target state="translated">&lt;code&gt;FilterOutputStream&lt;/code&gt; 的 &lt;code&gt;close&lt;/code&gt; 方法调用其 &lt;code&gt;flush&lt;/code&gt; 方法，然后调用其基础输出流的 &lt;code&gt;close&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7e09c5caa8f665f3b57f5f5f897465a41503642c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;close&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="b8a4c592a0ecb263805a474537d609748a764ffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; 的 &lt;code&gt;close&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="272a141fe34e23fe1ed9cd1611d645995f50e5bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;combine&lt;/code&gt; method investigates the two input arrays of ProtectionDomains and returns a single array containing the updated ProtectionDomains. In the simplest case, the &lt;code&gt;combine&lt;/code&gt; method merges the two stacks into one. In more complex cases, the &lt;code&gt;combine&lt;/code&gt; method returns a modified stack of ProtectionDomains. The modification may have added new ProtectionDomains, removed certain ProtectionDomains, or simply updated existing ProtectionDomains. Re-ordering and other optimizations to the ProtectionDomains are also permitted. Typically the &lt;code&gt;combine&lt;/code&gt; method bases its updates on the information encapsulated in the &lt;code&gt;DomainCombiner&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;combine&lt;/code&gt; 方法调查的ProtectionDomains的两个输入数组，并返回包含更新的ProtectionDomains单个阵列。在最简单的情况下， &lt;code&gt;combine&lt;/code&gt; 方法将两个堆栈合并为一个。在更复杂的情况下， &lt;code&gt;combine&lt;/code&gt; 方法返回修改后的ProtectionDomains堆栈。该修改可能添加了新的ProtectionDomain，删除了某些ProtectionDomain或仅更新了现有ProtectionDomain。还可以对ProtectionDomain进行重新排序和其他优化。通常， &lt;code&gt;combine&lt;/code&gt; 方法的更新基于 &lt;code&gt;DomainCombiner&lt;/code&gt; 中封装的信息。</target>
        </trans-unit>
        <trans-unit id="7a90cfbc00ca33b6d145e6807e96aa2002b85303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;completed&lt;/code&gt; argument to the &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method tells whether or not the I/O operation actually completed, that is, whether it had any effect that would be visible to the invoker. In the case of an operation that reads bytes, for example, this argument should be &lt;code&gt;true&lt;/code&gt; if, and only if, some bytes were actually transferred into the invoker's target buffer.</source>
          <target state="translated">&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法的 &lt;code&gt;completed&lt;/code&gt; 参数指示I / O操作是否实际完成，即它是否具有对调用者可见的效果。例如，在操作读取字节的情况下，仅当将某些字节实际传输到调用程序的目标缓冲区中时，此参数才应为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f41c89acf8d6260cc4c3edf1c8a3be1a487a118d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;countMatches&lt;/code&gt; operation can be invoked as follows:</source>
          <target state="translated">该 &lt;code&gt;countMatches&lt;/code&gt; 操作可以调用如下：</target>
        </trans-unit>
        <trans-unit id="72616ce87a153d98c6a948602b30731bd218fc29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createMBeanServer&lt;/code&gt; permission implies the &lt;code&gt;newMBeanServer&lt;/code&gt; permission.</source>
          <target state="translated">该 &lt;code&gt;createMBeanServer&lt;/code&gt; 许可意味着 &lt;code&gt;newMBeanServer&lt;/code&gt; 许可。</target>
        </trans-unit>
        <trans-unit id="5b8e66ca8dcc60e252a66649960d4c45b1465623" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;descriptor&lt;/code&gt; can contain entries that will define the values returned by certain methods of this class, as explained in the &lt;a href=&quot;package-summary#constraints&quot;&gt; package description&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;descriptor&lt;/code&gt; 可以包含将定义由这个类的某些方法返回的值，如在解释条目&lt;a href=&quot;package-summary#constraints&quot;&gt;包描述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e74408bd8afc062ff7d9cfe3aab2c13ea6f53b21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dest&lt;/code&gt; argument refers to an object that is not an array.</source>
          <target state="translated">所述 &lt;code&gt;dest&lt;/code&gt; 参数指的对象不是阵列。</target>
        </trans-unit>
        <trans-unit id="8294f1f3beefad7591b5cc3ea0551866cab7aae2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destPos&lt;/code&gt; argument is negative.</source>
          <target state="translated">该 &lt;code&gt;destPos&lt;/code&gt; 参数为负。</target>
        </trans-unit>
        <trans-unit id="2a960f617370308fb92badef083ce1edd73bfd82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;digest&lt;/code&gt; method can be called once for a given number of updates. After &lt;code&gt;digest&lt;/code&gt; has been called, the MessageDigest object is reset to its initialized state.</source>
          <target state="translated">该 &lt;code&gt;digest&lt;/code&gt; 方法可以被调用一次更新的给定数。调用 &lt;code&gt;digest&lt;/code&gt; 之后，MessageDigest对象将重置为其初始化状态。</target>
        </trans-unit>
        <trans-unit id="e1dde7d27adbf8e6cef3b9bbcdbc4cbcc2ad96bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;double&lt;/code&gt; format can represent all consecutive integers in the range -2&lt;sup&gt;53&lt;/sup&gt; to 2&lt;sup&gt;53&lt;/sup&gt;. If the pipeline has more than 2&lt;sup&gt;53&lt;/sup&gt; values, the divisor in the average computation will saturate at 2&lt;sup&gt;53&lt;/sup&gt;, leading to additional numerical errors.</source>
          <target state="translated">该 &lt;code&gt;double&lt;/code&gt; 格式可以表示所有连续整数的范围-2 &lt;sup&gt;53&lt;/sup&gt;到2 &lt;sup&gt;53&lt;/sup&gt;。如果流水线具有超过2 &lt;sup&gt;53个&lt;/sup&gt;值，则平均计算中的除数将在2 &lt;sup&gt;53&lt;/sup&gt;处饱和，从而导致其他数值误差。</target>
        </trans-unit>
        <trans-unit id="cad4be16e75ad0f3392aac98141ceaed42bece6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;double&lt;/code&gt; value that is closer than any other to</source>
          <target state="translated">比其他任何值都更接近的 &lt;code&gt;double&lt;/code&gt; 值</target>
        </trans-unit>
        <trans-unit id="99457e6b4813c6110cd28c3bdc215ba87cac93e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuffer#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">的 &lt;code&gt;dstOffset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuffer#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="cf3f3c8673cb205a88acf65cbe9d481cc7bd21e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuilder#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">的 &lt;code&gt;dstOffset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuilder#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="57b48e0bd69c0d96f6dab5758abac0f4d57b113a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encoded&lt;/code&gt; argument is illegal if it:</source>
          <target state="translated">该 &lt;code&gt;encoded&lt;/code&gt; 论点是，如果它违法：</target>
        </trans-unit>
        <trans-unit id="7f825d64728b91255aebca414eb9e4365aeec903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endOfInput&lt;/code&gt; parameter advises this method as to whether the invoker can provide further input beyond that contained in the given input buffer. If there is a possibility of providing additional input then the invoker should pass &lt;code&gt;false&lt;/code&gt; for this parameter; if there is no possibility of providing further input then the invoker should pass &lt;code&gt;true&lt;/code&gt;. It is not erroneous, and in fact it is quite common, to pass &lt;code&gt;false&lt;/code&gt; in one invocation and later discover that no further input was actually available. It is critical, however, that the final invocation of this method in a sequence of invocations always pass &lt;code&gt;true&lt;/code&gt; so that any remaining undecoded input will be treated as being malformed.</source>
          <target state="translated">所述 &lt;code&gt;endOfInput&lt;/code&gt; 参数建议此方法作为给调用是否可提供进一步的输入超出了包含在给定输入缓冲区。如果有可能提供其他输入，则调用者应为此参数传递 &lt;code&gt;false&lt;/code&gt; ；如果不可能提供进一步的输入，则调用者应传递 &lt;code&gt;true&lt;/code&gt; 。在一次调用中传递 &lt;code&gt;false&lt;/code&gt; 并随后发现实际上没有进一步的输入是不错误的，并且实际上很普遍。但是，至关重要的是，在一系列调用中对该方法的最终调用必须始终为 &lt;code&gt;true&lt;/code&gt; ,以便将任何剩余的未解码输入视为格式错误。</target>
        </trans-unit>
        <trans-unit id="fabf47fc50497b896963aa9019b8b35e3fbde409" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endOfInput&lt;/code&gt; parameter advises this method as to whether the invoker can provide further input beyond that contained in the given input buffer. If there is a possibility of providing additional input then the invoker should pass &lt;code&gt;false&lt;/code&gt; for this parameter; if there is no possibility of providing further input then the invoker should pass &lt;code&gt;true&lt;/code&gt;. It is not erroneous, and in fact it is quite common, to pass &lt;code&gt;false&lt;/code&gt; in one invocation and later discover that no further input was actually available. It is critical, however, that the final invocation of this method in a sequence of invocations always pass &lt;code&gt;true&lt;/code&gt; so that any remaining unencoded input will be treated as being malformed.</source>
          <target state="translated">所述 &lt;code&gt;endOfInput&lt;/code&gt; 参数建议此方法作为给调用是否可提供进一步的输入超出了包含在给定输入缓冲区。如果有可能提供其他输入，则调用者应为此参数传递 &lt;code&gt;false&lt;/code&gt; ；如果不可能提供进一步的输入，则调用者应传递 &lt;code&gt;true&lt;/code&gt; 。在一次调用中传递 &lt;code&gt;false&lt;/code&gt; 并随后发现实际上没有进一步的输入是不错误的，并且实际上很普遍。但是，至关重要的是，此方法在一系列调用中的最终调用必须始终为 &lt;code&gt;true&lt;/code&gt; ,以便将所有剩余的未编码输入视为格式错误。</target>
        </trans-unit>
        <trans-unit id="759ffc9229118351f3a52e836520820e1dc112e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals()&lt;/code&gt; method for an enumeration class just does a test for identical objects (&lt;code&gt;==&lt;/code&gt;).</source>
          <target state="translated">枚举类的 &lt;code&gt;equals()&lt;/code&gt; 方法仅对相同的对象（ &lt;code&gt;==&lt;/code&gt; ）进行测试。</target>
        </trans-unit>
        <trans-unit id="b29ad1a11acf214b8866d6a3f630b101a0ca3675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals&lt;/code&gt; method for class &lt;code&gt;Object&lt;/code&gt; implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, this method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; refer to the same object (&lt;code&gt;x == y&lt;/code&gt; has the value &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">类 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;equals&lt;/code&gt; 方法在对象上实现了最有区别的对等关系。也就是说，对于任何非空参考值 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; ，当且仅当 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 引用相同的对象（ &lt;code&gt;x == y&lt;/code&gt; 的值为 &lt;code&gt;true&lt;/code&gt; ）时，此方法才返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="387966673ba7ec974b34376b9ba2a99dc7f3ff88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals&lt;/code&gt; method implements an equivalence relation on non-null object references:</source>
          <target state="translated">该 &lt;code&gt;equals&lt;/code&gt; 方法实现对非空对象引用的一个等价关系：</target>
        </trans-unit>
        <trans-unit id="979f15807ff26fd3232fc39f57a589f6474444ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eventPropertyName&lt;/code&gt; string is used to extract a value from the incoming event object that is passed to the target method. The common case is the target method takes no arguments, in which case a value of null should be used for the &lt;code&gt;eventPropertyName&lt;/code&gt;. Alternatively if you want the incoming event object passed directly to the target method use the empty string. The format of the &lt;code&gt;eventPropertyName&lt;/code&gt; string is a sequence of methods or properties where each method or property is applied to the value returned by the preceding method starting from the incoming event object. The syntax is: &lt;code&gt;propertyName{.propertyName}*&lt;/code&gt; where &lt;code&gt;propertyName&lt;/code&gt; matches a method or property. For example, to extract the &lt;code&gt;point&lt;/code&gt; property from a &lt;code&gt;MouseEvent&lt;/code&gt;, you could use either &lt;code&gt;&quot;point&quot;&lt;/code&gt; or &lt;code&gt;&quot;getPoint&quot;&lt;/code&gt; as the &lt;code&gt;eventPropertyName&lt;/code&gt;. To extract the &quot;text&quot; property from a &lt;code&gt;MouseEvent&lt;/code&gt; with a &lt;code&gt;JLabel&lt;/code&gt; source use any of the following as &lt;code&gt;eventPropertyName&lt;/code&gt;: &lt;code&gt;&quot;source.text&quot;&lt;/code&gt;, &lt;code&gt;&quot;getSource.text&quot;&lt;/code&gt;&lt;code&gt;&quot;getSource.getText&quot;&lt;/code&gt; or &lt;code&gt;&quot;source.getText&quot;&lt;/code&gt;. If a method can not be found, or an exception is generated as part of invoking a method a &lt;code&gt;RuntimeException&lt;/code&gt; will be thrown at dispatch time. For example, if the incoming event object is null, and &lt;code&gt;eventPropertyName&lt;/code&gt; is non-null and not empty, a &lt;code&gt;RuntimeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">在 &lt;code&gt;eventPropertyName&lt;/code&gt; 串被用于提取从被传递给目标方法的传入事件对象的值。常见的情况是target方法不带参数，在这种情况下， &lt;code&gt;eventPropertyName&lt;/code&gt; 应该使用null 值。或者，如果您希望将传入事件对象直接传递给目标方法，请使用空字符串。 &lt;code&gt;eventPropertyName&lt;/code&gt; 字符串的格式是方法或属性的序列，其中每个方法或属性都将从传入的事件对象开始应用于从前一个方法返回的值。语法为： &lt;code&gt;propertyName{.propertyName}*&lt;/code&gt; ，其中 &lt;code&gt;propertyName&lt;/code&gt; 与方法或属性匹配。例如，提取 &lt;code&gt;point&lt;/code&gt; 来自 &lt;code&gt;MouseEvent&lt;/code&gt; 的属性，您可以使用 &lt;code&gt;&quot;point&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;getPoint&quot;&lt;/code&gt; 作为 &lt;code&gt;eventPropertyName&lt;/code&gt; 。要从具有 &lt;code&gt;JLabel&lt;/code&gt; 源的 &lt;code&gt;MouseEvent&lt;/code&gt; 中提取&amp;ldquo; text&amp;rdquo;属性，请使用以下任意一种作为 &lt;code&gt;eventPropertyName&lt;/code&gt; ： &lt;code&gt;&quot;source.text&quot;&lt;/code&gt; ， &lt;code&gt;&quot;getSource.text&quot;&lt;/code&gt; &lt;code&gt;&quot;getSource.getText&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;source.getText&quot;&lt;/code&gt; 。如果找不到方法，或者在调用方法时生成了异常，则会在调度时抛出 &lt;code&gt;RuntimeException&lt;/code&gt; 。例如，如果传入事件对象为null，则 &lt;code&gt;eventPropertyName&lt;/code&gt; 如果为非null且不为空，则将抛出 &lt;code&gt;RuntimeException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b4b06ad05dfb91d784c6607e33529a4e06af587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method finds a method whose name is the same as the &lt;code&gt;methodName&lt;/code&gt; property, and invokes the method on the target. When the target's class defines many methods with the given name the implementation should choose the most specific method using the algorithm specified in the Java Language Specification (15.11). The dynamic class of the target and arguments are used in place of the compile-time type information and, like the &lt;a href=&quot;../lang/reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; class itself, conversion between primitive values and their associated wrapper classes is handled internally.</source>
          <target state="translated">所述 &lt;code&gt;execute&lt;/code&gt; 方法找到，其名称是相同的方法 &lt;code&gt;methodName&lt;/code&gt; 属性，并在目标上调用的方法。当目标类使用给定名称定义许多方法时，实现应使用Java语言规范（15.11）中指定的算法选择最特定的方法。使用目标和参数的动态类代替编译时类型信息，并且像&lt;a href=&quot;../lang/reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;类本身一样，在内部处理原始值及其关联的包装器类之间的转换。</target>
        </trans-unit>
        <trans-unit id="721571d52ff7950b67b214b688c61b64a75961c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is an &lt;code&gt;ExecutorService&lt;/code&gt; that creates new threads as needed to execute tasks that are submitted to handle I/O events and dispatch completion results for operations initiated on asynchronous channels in the group. It may reuse previously constructed threads when they are available.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是一个 &lt;code&gt;ExecutorService&lt;/code&gt; 的，作为执行提交到处理的I /该组中异步通道启动的操作O事件调度完成结果任务需要创建新线程。当它们可能可用时，它可以重用以前构造的线程。</target>
        </trans-unit>
        <trans-unit id="ec1467cb33e94fd2c0bb533c599fa01ae6a0656e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is an &lt;code&gt;ExecutorService&lt;/code&gt; that executes tasks submitted to dispatch completion results for operations initiated on asynchronous channels in the group.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是一个 &lt;code&gt;ExecutorService&lt;/code&gt; 的执行任务提交给调度完成结果这一组的异步通道启动的操作。</target>
        </trans-unit>
        <trans-unit id="f3b206390268e595a7543c9f72d6571233bef9fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;executor&lt;/code&gt; parameter is the &lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; to which tasks are submitted to handle I/O events and dispatch completion results for operations initiated on resulting channel. The nature of these tasks is highly implementation specific and so care should be taken when configuring the &lt;code&gt;Executor&lt;/code&gt;. Minimally it should support an unbounded work queue and should not run tasks on the caller thread of the &lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; method. Shutting down the executor service while the channel is open results in unspecified behavior.</source>
          <target state="translated">在 &lt;code&gt;executor&lt;/code&gt; 参数是&lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 的&lt;/a&gt;，其任务提交到处理I /上产生的通道启动的操作O事件调度完成的结果。这些任务的性质是高度特定于实现的，因此在配置 &lt;code&gt;Executor&lt;/code&gt; 时应格外小心。它至少应支持无限制的工作队列，并且不应在&lt;a href=&quot;../../util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt;方法的调用者线程上运行任务。通道打开时关闭执行程序服务会导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="9a348a5e6c50ba5a16fcb50db730eca7f5277712" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exit&lt;/code&gt; method of class &lt;code&gt;Runtime&lt;/code&gt; has been called and the security manager has permitted the exit operation to take place.</source>
          <target state="translated">已调用类 &lt;code&gt;Runtime&lt;/code&gt; 的 &lt;code&gt;exit&lt;/code&gt; 方法，并且安全管理器已允许进行退出操作。</target>
        </trans-unit>
        <trans-unit id="1a61775a7139e096b9fd0be3d2ad7ac6f1c956f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;family&lt;/code&gt; parameter is used to specify the &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt;. If the datagram channel is to be used for IP multicasting then this should correspond to the address type of the multicast groups that this channel will join.</source>
          <target state="translated">该 &lt;code&gt;family&lt;/code&gt; 参数用于指定&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;。如果数据报通道将用于IP多播，则它应对应于该通道将加入的多播组的地址类型。</target>
        </trans-unit>
        <trans-unit id="f08c1804c0526409a1ecb2988cff36a97dc47de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; parameters may be null if and only if they are null in a listener to be removed.</source>
          <target state="translated">所述 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;handback&lt;/code&gt; 参数可以为空，当且仅当它们是空在听众被移除。</target>
        </trans-unit>
        <trans-unit id="acfa3270c433f7fbeb166904731784b7ab01474e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method is never invoked more than once by a Java virtual machine for any given object.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 方法永远不会对任何给定对象多次调用由Java虚拟机。</target>
        </trans-unit>
        <trans-unit id="36550a7fe4b3770df4940e5d45c14dff3f4cb361" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method of class &lt;code&gt;Object&lt;/code&gt; performs no special action; it simply returns normally. Subclasses of &lt;code&gt;Object&lt;/code&gt; may override this definition.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 类的 &lt;code&gt;finalize&lt;/code&gt; 方法不执行任何特殊操作；它只是正常返回。 &lt;code&gt;Object&lt;/code&gt; 的子类可以覆盖此定义。</target>
        </trans-unit>
        <trans-unit id="290eeab6379b679af729a0f7d139a6b6afebf8ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;findSystemClass&lt;/code&gt; method in class &lt;code&gt;ClassLoader&lt;/code&gt; .</source>
          <target state="translated">类 &lt;code&gt;ClassLoader&lt;/code&gt; 中的 &lt;code&gt;findSystemClass&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b78d49371e443cbd3adbfb51ffc64676bde68d8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatMap()&lt;/code&gt; operation has the effect of applying a one-to-many transformation to the elements of the stream, and then flattening the resulting elements into a new stream.</source>
          <target state="translated">所述 &lt;code&gt;flatMap()&lt;/code&gt; 操作具有施加一个到许多变换以流的元素，然后压扁所得的元件到一个新的流的效果。</target>
        </trans-unit>
        <trans-unit id="9794be29838cb64627abe081d7728e6987d9e44a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; method of &lt;code&gt;DataOutputStream&lt;/code&gt; calls the &lt;code&gt;flush&lt;/code&gt; method of its underlying output stream.</source>
          <target state="translated">该 &lt;code&gt;flush&lt;/code&gt; 的方法 &lt;code&gt;DataOutputStream&lt;/code&gt; 类调用 &lt;code&gt;flush&lt;/code&gt; 其基础输出流的方法。</target>
        </trans-unit>
        <trans-unit id="195ffa6218dd9b603f2e4ca8f61c877be833e3ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;flush&lt;/code&gt; method of its underlying output stream.</source>
          <target state="translated">该 &lt;code&gt;flush&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用 &lt;code&gt;flush&lt;/code&gt; 其基础输出流的方法。</target>
        </trans-unit>
        <trans-unit id="68aa9823b85500f33061dc1eb4258756e15e005f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; 的 &lt;code&gt;flush&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="708bb18e269a3b497919640ccb7a50b14533bedd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forName&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;Class&lt;/code&gt; 中的 &lt;code&gt;forName&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8de3dc96d234b55e125cd365d4c69d5d74e9de59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; flag specifies the order that certificates will be passed to the &lt;a href=&quot;certpathchecker#check-java.security.cert.Certificate-&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; method (forward or reverse).</source>
          <target state="translated">的 &lt;code&gt;forward&lt;/code&gt; 标志指定证书将被传递到的顺序&lt;a href=&quot;certpathchecker#check-java.security.cert.Certificate-&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法（正向或反向）。</target>
        </trans-unit>
        <trans-unit id="7f3a1ac72ca4c5a5aab4a7ea8026300ca9e9a65d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; flag specifies the order that certificates will be passed to the &lt;a href=&quot;pkixcertpathchecker#check-java.security.cert.Certificate-java.util.Collection-&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; method (forward or reverse). A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;&lt;b&gt;must&lt;/b&gt; support reverse checking and &lt;b&gt;may&lt;/b&gt; support forward checking.</source>
          <target state="translated">的 &lt;code&gt;forward&lt;/code&gt; 标志指定证书将被传递到的顺序&lt;a href=&quot;pkixcertpathchecker#check-java.security.cert.Certificate-java.util.Collection-&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法（正向或反向）。一 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; &lt;b&gt;必须&lt;/b&gt;支持反向检查和&lt;b&gt;可以&lt;/b&gt;支持正向检查。</target>
        </trans-unit>
        <trans-unit id="c29abf69126019dfa340a81cfcd7917ddb6a1954" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fractionalDigits&lt;/code&gt; parameter allows the output of the fractional second to be controlled. Specifying zero will cause no fractional digits to be output. From 1 to 9 will output an increasing number of digits, using zero right-padding if necessary. The special value -1 is used to output as many digits as necessary to avoid any trailing zeroes.</source>
          <target state="translated">所述 &lt;code&gt;fractionalDigits&lt;/code&gt; 参数允许第二分数的输出被控制。指定零将不会输出小数位。从1到9将输出越来越多的数字，必要时使用零右填充。特殊值-1用于输出所需的尽可能多的数字，以避免任何尾随零。</target>
        </trans-unit>
        <trans-unit id="0f3e1d9782b5c32d63d7b0cc83ee2c191412bb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; values are initialized using locale-dependent resources when constructing a &lt;code&gt;GregorianCalendar&lt;/code&gt;. &lt;a name=&quot;iso8601_compatible_setting&quot;&gt;The week determination is compatible&lt;/a&gt; with the ISO 8601 standard when &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4, which values are used in locales where the standard is preferred. These values can explicitly be set by calling &lt;a href=&quot;calendar#setFirstDayOfWeek-int-&quot;&gt;&lt;code&gt;setFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#setMinimalDaysInFirstWeek-int-&quot;&gt;&lt;code&gt;setMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 和 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 值被构建在使用区域设置相关的资源初始化 &lt;code&gt;GregorianCalendar&lt;/code&gt; 的。当 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 为 &lt;code&gt;MONDAY&lt;/code&gt; 且 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 为4时，&lt;a name=&quot;iso8601_compatible_setting&quot;&gt;星期确定&lt;/a&gt;与ISO 8601标准兼容，该值在首选该标准的语言环境中使用。可以通过调用&lt;a href=&quot;calendar#setFirstDayOfWeek-int-&quot;&gt; &lt;code&gt;setFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;calendar#setMinimalDaysInFirstWeek-int-&quot;&gt; &lt;code&gt;setMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;显式设置这些值。</target>
        </trans-unit>
        <trans-unit id="56523d844e395cab10ecde9ba8b570825460b5cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getInstance&lt;/code&gt; factory method of the &lt;code&gt;Cipher&lt;/code&gt; engine class follows these rules in order to instantiate a provider's implementation of &lt;code&gt;CipherSpi&lt;/code&gt; for a transformation of the form &quot;</source>
          <target state="translated">&lt;code&gt;Cipher&lt;/code&gt; 引擎类的 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法遵循以下规则，以便实例化提供程序的 &lt;code&gt;CipherSpi&lt;/code&gt; 实现，以实现&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f09e308477567f7fb18f8db544516ee32916e1fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getNotifTypes&lt;/code&gt; method returns an array of strings containing the notification types that the MBean may emit. The notification type is a dot-notation string which describes what the emitted notification is about, not the Java class of the notification. A single generic notification class can be used to send notifications of several types. All of these types are returned in the string array result of the &lt;code&gt;getNotifTypes&lt;/code&gt; method.</source>
          <target state="translated">该 &lt;code&gt;getNotifTypes&lt;/code&gt; 方法返回包含所述通知类型的MBean可发出一个字符串数组。通知类型是点符号字符串，它描述发出的通知的含义，而不是通知的Java类。单个通用通知类可用于发送几种类型的通知。所有这些类型均在 &lt;code&gt;getNotifTypes&lt;/code&gt; 方法的字符串数组结果中返回。</target>
        </trans-unit>
        <trans-unit id="058e0ca7376a98eb437efbc0aef64d1a8a108d0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getObjectInstance()&lt;/code&gt; method of an object factory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="translated">对象工厂的 &lt;code&gt;getObjectInstance()&lt;/code&gt; 方法可能使用不同的参数多次调用。该实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="6a8501111fcfea5e31cfee8d6894af584ff150ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOptionType&lt;/code&gt; method returns this value if this &lt;code&gt;ConfirmationCallback&lt;/code&gt; was instantiated with &lt;code&gt;options&lt;/code&gt; instead of an &lt;code&gt;optionType&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;getOptionType&lt;/code&gt; 如果此方法将返回该值 &lt;code&gt;ConfirmationCallback&lt;/code&gt; 与实例化的 &lt;code&gt;options&lt;/code&gt; ，而不是 &lt;code&gt;optionType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ebc4bc14d6647d69c5c4a4fb63fb8fd2ffdfd9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getResources&lt;/code&gt; method of the context &lt;code&gt;ClassLoader&lt;/code&gt; is used locate JAR files containing files named &lt;code&gt;META-INF/services/javax.imageio.spi.&lt;/code&gt;</source>
          <target state="translated">上下文 &lt;code&gt;ClassLoader&lt;/code&gt; 的 &lt;code&gt;getResources&lt;/code&gt; 方法用于查找包含名为 &lt;code&gt;META-INF/services/javax.imageio.spi.&lt;/code&gt; 文件的JAR文件。</target>
        </trans-unit>
        <trans-unit id="b2b6b51bd170eb65242dd9c81805d8ac434ccc43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getStateToBind()&lt;/code&gt; method of a state factory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="translated">状态工厂的 &lt;code&gt;getStateToBind()&lt;/code&gt; 方法可能会使用不同的参数多次调用。该实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="f433eca03b2eb0f32d07fb7e2e68b92fac6f3c89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle&lt;/code&gt; method implementation checks the instance(s) of the &lt;code&gt;Callback&lt;/code&gt; object(s) passed in to retrieve or display the requested information. The following example is provided to help demonstrate what an &lt;code&gt;handle&lt;/code&gt; method implementation might look like. This example code is for guidance only. Many details, including proper error handling, are left out for simplicity.</source>
          <target state="translated">该 &lt;code&gt;handle&lt;/code&gt; 的方法实现检查实例（多个） &lt;code&gt;Callback&lt;/code&gt; 中传递的对象（一个或多个）来检索或显示所请求的信息。提供以下示例，以帮助演示 &lt;code&gt;handle&lt;/code&gt; 方法实现的外观。此示例代码仅供参考。为了简单起见，省略了许多细节，包括适当的错误处理。</target>
        </trans-unit>
        <trans-unit id="78806b6c0d8e3a500425fd33fe6be57433f2f45a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hashCode&lt;/code&gt; method of the returned set returns the sum of the</source>
          <target state="translated">返回集的 &lt;code&gt;hashCode&lt;/code&gt; 方法返回</target>
        </trans-unit>
        <trans-unit id="fd1ec688b3211b62ec6deea7903a4e5a33c5b1e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hostname&lt;/code&gt; argument is illegal if it:</source>
          <target state="translated">该 &lt;code&gt;hostname&lt;/code&gt; 的说法是，如果它违法：</target>
        </trans-unit>
        <trans-unit id="0e43ec7f450994678afac7d3d20f221033df02a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hostnameVerifier&lt;/code&gt; for this object.</source>
          <target state="translated">此对象的 &lt;code&gt;hostnameVerifier&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a3a03a08373e3a4eb0d5649cfecb26445106e34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; value must be an identity for the accumulator function. This means that for all &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;accumulator.apply(identity, t)&lt;/code&gt; is equal to &lt;code&gt;t&lt;/code&gt;. The &lt;code&gt;accumulator&lt;/code&gt; function must be an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associative&lt;/a&gt; function.</source>
          <target state="translated">的 &lt;code&gt;identity&lt;/code&gt; 值必须是蓄能器功能的标识。这意味着对于所有 &lt;code&gt;t&lt;/code&gt; ， &lt;code&gt;accumulator.apply(identity, t)&lt;/code&gt; 等于 &lt;code&gt;t&lt;/code&gt; 。该 &lt;code&gt;accumulator&lt;/code&gt; 功能必须是&lt;a href=&quot;package-summary#Associativity&quot;&gt;关联&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="15d70cdc09c9191c55557a009f3a78afb163bfc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; value must be an identity for the accumulator function. This means that for all &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;accumulator.apply(identity, x)&lt;/code&gt; is equal to &lt;code&gt;x&lt;/code&gt;. The &lt;code&gt;accumulator&lt;/code&gt; function must be an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associative&lt;/a&gt; function.</source>
          <target state="translated">的 &lt;code&gt;identity&lt;/code&gt; 值必须是蓄能器功能的标识。这意味着对于所有 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;accumulator.apply(identity, x)&lt;/code&gt; 等于 &lt;code&gt;x&lt;/code&gt; 。该 &lt;code&gt;accumulator&lt;/code&gt; 功能必须是&lt;a href=&quot;package-summary#Associativity&quot;&gt;关联&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="c7c434e8ee038c0b3fcfe01a6456babfb2b633e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; value must be an identity for the combiner function. This means that for all &lt;code&gt;u&lt;/code&gt;, &lt;code&gt;combiner(identity, u)&lt;/code&gt; is equal to &lt;code&gt;u&lt;/code&gt;. Additionally, the &lt;code&gt;combiner&lt;/code&gt; function must be compatible with the &lt;code&gt;accumulator&lt;/code&gt; function; for all &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;, the following must hold:</source>
          <target state="translated">该 &lt;code&gt;identity&lt;/code&gt; 值必须是组合功能的身份。这意味着对于所有 &lt;code&gt;u&lt;/code&gt; ， &lt;code&gt;combiner(identity, u)&lt;/code&gt; 等于 &lt;code&gt;u&lt;/code&gt; 。此外， &lt;code&gt;combiner&lt;/code&gt; 功能必须与 &lt;code&gt;accumulator&lt;/code&gt; 功能兼容；对于所有 &lt;code&gt;u&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; ，必须满足以下条件：</target>
        </trans-unit>
        <trans-unit id="cb7b6822fbfe6353745706addd58f9b58b682324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ifAddress&lt;/code&gt; argument can be used on a multi-homed host for a &lt;code&gt;ServerSocket&lt;/code&gt; that will only accept connect requests to one of its addresses. If &lt;code&gt;ifAddress&lt;/code&gt; is null, it will accept connections on all local addresses. The socket is configured with the socket options (such as accept timeout) given to this factory.</source>
          <target state="translated">该 &lt;code&gt;ifAddress&lt;/code&gt; 参数可以多宿主主机的上使用 &lt;code&gt;ServerSocket&lt;/code&gt; 仅接受连接请求其地址之一。如果 &lt;code&gt;ifAddress&lt;/code&gt; 为null，它将接受所有本地地址上的连接。套接字配置有为此工厂提供的套接字选项（例如接受超时）。</target>
        </trans-unit>
        <trans-unit id="9d4aa0ca4766a00288d0853e4d6293a48f65d87d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ignoreMetadata&lt;/code&gt; parameter, if set to &lt;code&gt;true&lt;/code&gt;, allows the reader to disregard any metadata encountered during the read. Subsequent calls to the &lt;code&gt;getStreamMetadata&lt;/code&gt; and &lt;code&gt;getImageMetadata&lt;/code&gt; methods may return &lt;code&gt;null&lt;/code&gt;, and an &lt;code&gt;IIOImage&lt;/code&gt; returned from &lt;code&gt;readAll&lt;/code&gt; may return &lt;code&gt;null&lt;/code&gt; from their &lt;code&gt;getMetadata&lt;/code&gt; method. Setting this parameter may allow the reader to work more efficiently. The reader may choose to disregard this setting and return metadata normally.</source>
          <target state="translated">如果将 &lt;code&gt;ignoreMetadata&lt;/code&gt; 参数设置为 &lt;code&gt;true&lt;/code&gt; ，则允许读者忽略读取过程中遇到的任何元数据。在后续调用 &lt;code&gt;getStreamMetadata&lt;/code&gt; 和 &lt;code&gt;getImageMetadata&lt;/code&gt; 方法可能返回 &lt;code&gt;null&lt;/code&gt; ，以及 &lt;code&gt;IIOImage&lt;/code&gt; 的从返回 &lt;code&gt;readAll&lt;/code&gt; 可能返回 &lt;code&gt;null&lt;/code&gt; 从他们 &lt;code&gt;getMetadata&lt;/code&gt; 方法。设置此参数可以使阅读器更有效地工作。读者可以选择忽略此设置并正常返回元数据。</target>
        </trans-unit>
        <trans-unit id="fd6a40388fc0550eb7dfd1739f418989dfe9f308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;implies&lt;/code&gt; method is used by the AccessController to determine whether or not a requested permission is implied by another permission that is known to be valid in the current execution context.</source>
          <target state="translated">该 &lt;code&gt;implies&lt;/code&gt; 方法用于由AccessController以确定所请求的许可是否是由被称为是在当前执行上下文有效另一许可暗示。</target>
        </trans-unit>
        <trans-unit id="64642e3202227bf1eb96b4d1dcff39ebc286b611" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; parameter is the index of the name element to return. The element that is &lt;em&gt;closest&lt;/em&gt; to the root in the directory hierarchy has index &lt;code&gt;0&lt;/code&gt;. The element that is &lt;em&gt;farthest&lt;/em&gt; from the root has index &lt;a href=&quot;path#getNameCount--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;index&lt;/code&gt; 参数是name元素来回报指数。在目录层次结构中&lt;em&gt;最接近&lt;/em&gt;根的元素的索引为 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;离&lt;/em&gt;根&lt;em&gt;最远&lt;/em&gt;的元素的索引&lt;a href=&quot;path#getNameCount--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="178fa46f7783f7ca8be10feb795a8f432e6ce094" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialSize&lt;/code&gt; parameter may be used by the implementation as a &lt;em&gt;hint&lt;/em&gt; as to the initial number of tasks it may submit. For example, it may be used to indicate the initial number of threads that wait on I/O events.</source>
          <target state="translated">该实现可以将 &lt;code&gt;initialSize&lt;/code&gt; 参数用作有关它可能提交的任务的初始数量的&lt;em&gt;提示&lt;/em&gt;。例如，它可以用于指示等待I / O事件的线程的初始数量。</target>
        </trans-unit>
        <trans-unit id="8e1910412b5ab4f4360c75fcf4e4c4f981f39033" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; methods may each be called any number of times. If no &lt;code&gt;initialize&lt;/code&gt; method is called on a DSAKeyPairGenerator, the default is to generate 1024-bit keys, using precomputed p, q and g parameters and an instance of SecureRandom as the random bit source.</source>
          <target state="translated">所述 &lt;code&gt;initialize&lt;/code&gt; 方法的每一个可以被称为任意次数。如果没有在DSAKeyPairGenerator上调用任何 &lt;code&gt;initialize&lt;/code&gt; 方法，则默认值为使用预计算的p，q和g参数以及SecureRandom实例作为随机位源来生成1024位密钥。</target>
        </trans-unit>
        <trans-unit id="e89c947619670b6f05ed77c9eb43708ff984ab4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;abstract&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;abstract&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="57a2bf2f87f99f529f820792d0d9541859c36200" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;final&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;final&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="b83b91795fa9f3dd467562df8b850ad43ca35b18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;interface&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;interface&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="6e6129e278d1c31b1641cf76868b23a7ccbc053b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;native&lt;/code&gt; modifier.</source>
          <target state="translated">表示本 &lt;code&gt;native&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="9487f7c45da0d56c561a74e7e315aad283ae33db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;private&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;private&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="d998015ddde224da2f2e242d06b1b5cda8342b93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;protected&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;protected&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="1ab9b738d34103d531a4ba5cdf4833da76ab4445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;public&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;public&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="cb450909d14452e1607d3359ccbe310b15e65773" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;static&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;static&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e48ba12a5c869896a959b271934ece28496f4515" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;strictfp&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;strictfp&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="ab15ce0d3f3e80624e13e8b8f7afdae7f2cc31b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;synchronized&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;synchronized&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="47c273abe027c89df6d6ce37e4c65a5d5f445ccc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;transient&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;transient&lt;/code&gt; 修改器的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="75d6fc286ca2b46ac7f2dfbb0cff289b6c5d7d46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; value representing the &lt;code&gt;volatile&lt;/code&gt; modifier.</source>
          <target state="translated">表示 &lt;code&gt;volatile&lt;/code&gt; 修饰符的 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="cfcd94506157aeb895a9c9c21b22d64a6d79a08a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;interface&lt;/code&gt; modifier discussed in this class is not a true modifier in the Java language and it appears after all other modifiers listed by this method. This method may return a string of modifiers that are not valid modifiers of a Java entity; in other words, no checking is done on the possible validity of the combination of modifiers represented by the input. Note that to perform such checking for a known kind of entity, such as a constructor or method, first AND the argument of &lt;code&gt;toString&lt;/code&gt; with the appropriate mask from a method like &lt;a href=&quot;modifier#constructorModifiers--&quot;&gt;&lt;code&gt;constructorModifiers()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;modifier#methodModifiers--&quot;&gt;&lt;code&gt;methodModifiers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类中讨论的 &lt;code&gt;interface&lt;/code&gt; 修饰符在Java语言中不是真正的修饰符，它出现在此方法列出的所有其他修饰符之后。此方法可能返回不是Java实体的有效修饰符的修饰符字符串。换句话说，不检查输入代表的修饰符组合的可能有效性。请注意，要对已知种类的实体（例如构造函数或方法）执行此类检查，请首先将 &lt;code&gt;toString&lt;/code&gt; 的参数与来自诸如&lt;a href=&quot;modifier#constructorModifiers--&quot;&gt; &lt;code&gt;constructorModifiers()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;modifier#methodModifiers--&quot;&gt; &lt;code&gt;methodModifiers()&lt;/code&gt; 之&lt;/a&gt;类的方法的适当掩码进行&amp;ldquo;与&amp;rdquo; 运算。</target>
        </trans-unit>
        <trans-unit id="f254cbd5db1e9d15f5755ade659caa4db237d900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isMixerSupported&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for all the info objects returned by this method. The corresponding mixer instances for the info objects are returned by the &lt;code&gt;getMixer&lt;/code&gt; method.</source>
          <target state="translated">对于 &lt;code&gt;isMixerSupported&lt;/code&gt; 方法返回的所有信息对象，isMixerSupported方法均返回 &lt;code&gt;true&lt;/code&gt; 。信息对象的相应混合器实例由 &lt;code&gt;getMixer&lt;/code&gt; 方法返回。</target>
        </trans-unit>
        <trans-unit id="bec8b9be4298b00c09430efa2b0f3eff6e4f2e07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.lang.invoke&lt;/code&gt; package contains dynamic language support provided directly by the Java core class libraries and virtual machine.</source>
          <target state="translated">该 &lt;code&gt;java.lang.invoke&lt;/code&gt; 包中包含的Java核心类库和虚拟机直接提供动态语言的支持。</target>
        </trans-unit>
        <trans-unit id="e2e6b7ef82a944f100ddc377e04a645035f44c50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.nio&lt;/code&gt; package defines the buffer classes, which are used throughout the NIO APIs. The charset API is defined in the &lt;a href=&quot;charset/package-summary&quot;&gt;&lt;code&gt;java.nio.charset&lt;/code&gt;&lt;/a&gt; package, and the channel and selector APIs are defined in the &lt;a href=&quot;channels/package-summary&quot;&gt;&lt;code&gt;java.nio.channels&lt;/code&gt;&lt;/a&gt; package. Each of these subpackages has its own service-provider (SPI) subpackage, the contents of which can be used to extend the platform's default implementations or to construct alternative implementations.</source>
          <target state="translated">所述 &lt;code&gt;java.nio&lt;/code&gt; 包定义了缓冲器类，它们在整个NIO API的使用。字符集API在&lt;a href=&quot;charset/package-summary&quot;&gt; &lt;code&gt;java.nio.charset&lt;/code&gt; &lt;/a&gt;包中定义，而通道和选择器API在&lt;a href=&quot;channels/package-summary&quot;&gt; &lt;code&gt;java.nio.channels&lt;/code&gt; &lt;/a&gt;包中定义。这些子程序包中的每一个都有其自己的服务提供商（SPI）子程序包，其内容可用于扩展平台的默认实现或构建替代实现。</target>
        </trans-unit>
        <trans-unit id="169158b25e43c0b1b051996b7d7ecf8990270082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.security.ProtectionDomain&lt;/code&gt; of a proxy class is the same as that of system classes loaded by the bootstrap class loader, such as &lt;code&gt;java.lang.Object&lt;/code&gt;, because the code for a proxy class is generated by trusted system code. This protection domain will typically be granted &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">代理类的 &lt;code&gt;java.security.ProtectionDomain&lt;/code&gt; 与引导类加载器加载的系统类的 &lt;code&gt;java.lang.Object&lt;/code&gt; 相同，因为代理类的代码是由受信任的系统代码生成的。通常会将此保护域授予 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9813f685206a1823081b6d834a2cc39d317ab3f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.security.acl &lt;/code&gt; package provides the interfaces to the ACL and related data structures (ACL entries, groups, permissions, etc.), and the &lt;code&gt;sun.security.acl &lt;/code&gt; classes provide a default implementation of the interfaces. For example, &lt;code&gt;java.security.acl.Acl &lt;/code&gt; provides the interface to an ACL and the &lt;code&gt;sun.security.acl.AclImpl &lt;/code&gt; class provides the default implementation of the interface.</source>
          <target state="translated">的 &lt;code&gt;java.security.acl &lt;/code&gt; 中包提供接口到ACL和相关数据结构（ACL条目，组，权限等），和 &lt;code&gt;sun.security.acl &lt;/code&gt; 类提供接口的一个默认的实现。例如， &lt;code&gt;java.security.acl.Acl &lt;/code&gt; 提供ACL的接口，而 &lt;code&gt;sun.security.acl.AclImpl &lt;/code&gt; 类提供接口的默认实现。</target>
        </trans-unit>
        <trans-unit id="cfb4c2fdc7d8d17ba626b9a63de7a2721320820c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.security.acl.Acl &lt;/code&gt; interface extends the &lt;code&gt;java.security.acl.Owner &lt;/code&gt; interface. The Owner interface is used to maintain a list of owners for each ACL. Only owners are allowed to modify an ACL. For example, only an owner can call the ACL's &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry to the ACL.</source>
          <target state="translated">该 &lt;code&gt;java.security.acl.Acl &lt;/code&gt; 中的接口扩展了 &lt;code&gt;java.security.acl.Owner &lt;/code&gt; 接口。所有者接口用于维护每个ACL的所有者列表。只允许所有者修改ACL。例如，只有所有者可以调用ACL的 &lt;code&gt;addEntry&lt;/code&gt; 方法来向ACL添加新的ACL条目。</target>
        </trans-unit>
        <trans-unit id="c584f80333ee86bf0587299c7f49da992c3a95b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;java.time.chrono&lt;/code&gt; package contains the calendar neutral API &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chrono/chronolocaldatetime&quot;&gt;&lt;code&gt;ChronoLocalDateTime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;chrono/chronozoneddatetime&quot;&gt;&lt;code&gt;ChronoZonedDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chrono/era&quot;&gt;&lt;code&gt;Era&lt;/code&gt;&lt;/a&gt;. This is intended for use by applications that need to use localized calendars. It is recommended that applications use the ISO-8601 date and time classes from this package across system boundaries, such as to the database or across the network. The calendar neutral API should be reserved for interactions with users.</source>
          <target state="translated">该 &lt;code&gt;java.time.chrono&lt;/code&gt; 包包含日历中立API &lt;a href=&quot;chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;chrono/chronolocaldatetime&quot;&gt; &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;chrono/chronozoneddatetime&quot;&gt; &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;chrono/era&quot;&gt; &lt;code&gt;Era&lt;/code&gt; &lt;/a&gt;。该文件供需要使用本地化日历的应用程序使用。建议应用程序跨系统边界（例如到数据库或跨网络）使用此程序包中的ISO-8601日期和时间类。日历中性API应该保留用于与用户进行交互。</target>
        </trans-unit>
        <trans-unit id="31f5723f716d2e10c3dc95d349885c1c4063b2cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.imageio.spi&lt;/code&gt; package contains service provider interfaces for reading, writing, and transcoding images, and obtaining input and output streams, as well as a run-time registry that discovers installed service provider instances and allows new instances to be registered dynamically.</source>
          <target state="translated">该 &lt;code&gt;javax.imageio.spi&lt;/code&gt; 中的包中包含用于读取，写入和转码图像，并获得输入和输出流服务提供者接口，以及所安装发现的服务提供商实例，并允许新的实例动态地注册一个运行时注册表。</target>
        </trans-unit>
        <trans-unit id="2f9893bf2cb21c5852d399c228329581eed4bc85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javax.print.attribute&lt;/code&gt; package describes the types of attributes and how they can be collected into sets. The &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; package enumerates all of the standard attributes supported by the API, most of which are implementations of attributes specified in the IETF Specification, &lt;a href=&quot;http://www.ietf.org/rfc/rfc2911.txt&quot;&gt; RFC 2911 Internet Printing Protocol, 1.1: Model and Semantics&lt;/a&gt;, dated September 2000. The attributes specified in &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; include common capabilities, such as: resolution, copies, media sizes, job priority, and page ranges.</source>
          <target state="translated">该 &lt;code&gt;javax.print.attribute&lt;/code&gt; 中的包描述了属性类型，以及它们如何被收集到集。的 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中包枚举所有由API支持的标准属性，其中大部分是在IETF规范中指定的属性的实现的&lt;a href=&quot;http://www.ietf.org/rfc/rfc2911.txt&quot;&gt;RFC 2911网络打印协议，1.1：模型和语义&lt;/a&gt;，日期为2000年9月 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中指定的属性包括一些常用功能，例如：分辨率，副本，介质尺寸，作业优先级和页面范围。</target>
        </trans-unit>
        <trans-unit id="766e65fec5bf118351de7f21179d89ba7379dbda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kind&lt;/code&gt; of an element.</source>
          <target state="translated">元素的 &lt;code&gt;kind&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5fbfe70cef778b32594cced3a732339cbc1acf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; argument is negative.</source>
          <target state="translated">所述 &lt;code&gt;length&lt;/code&gt; 参数为负。</target>
        </trans-unit>
        <trans-unit id="5c30faee739e118e9dbf221fbacf126dc2e548ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; argument must be less than or equal to &lt;code&gt;buf.length&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;length&lt;/code&gt; 参数必须是小于或等于 &lt;code&gt;buf.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a20aaa21bfe3d598720524fef65f51974af49fb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; parameter controls the number of times the pattern is applied and therefore affects the length of the resulting array. If the limit</source>
          <target state="translated">的 &lt;code&gt;limit&lt;/code&gt; 参数控制的被施加图案的次数，并因此影响所得阵列的长度。如果极限</target>
        </trans-unit>
        <trans-unit id="7227cc8a8f47600f7a135282736709ff73dd62b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; parameter locates the directory entry to create. The &lt;code&gt;existing&lt;/code&gt; parameter is the path to an existing file. This method creates a new directory entry for the file so that it can be accessed using &lt;code&gt;link&lt;/code&gt; as the path. On some file systems this is known as creating a &quot;hard link&quot;. Whether the file attributes are maintained for the file or for each directory entry is file system specific and therefore not specified. Typically, a file system requires that all links (directory entries) for a file be on the same file system. Furthermore, on some platforms, the Java virtual machine may require to be started with implementation specific privileges to create hard links or to create links to directories.</source>
          <target state="translated">该 &lt;code&gt;link&lt;/code&gt; 参数所在的目录项创建。在 &lt;code&gt;existing&lt;/code&gt; 参数是路径到现有文件。此方法为文件创建一个新的目录条目，以便可以使用 &lt;code&gt;link&lt;/code&gt; 作为路径对其进行访问。在某些文件系统上，这被称为创建&amp;ldquo;硬链接&amp;rdquo;。为文件还是为每个目录条目维护文件属性是特定于文件系统的，因此未指定。通常，文件系统要求文件的所有链接（目录条目）都在同一文件系统上。此外，在某些平台上，可能需要使用实现特定的特权来启动Java虚拟机，以创建硬链接或创建指向目录的链接。</target>
        </trans-unit>
        <trans-unit id="9d151fce3015e4ed9e5cd20051237afb5cefea88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listIterator(int)&lt;/code&gt; method returns a &quot;wrapper object&quot; over a list iterator on the backing list, which is created with the corresponding method on the backing list. The &lt;code&gt;iterator&lt;/code&gt; method merely returns &lt;code&gt;listIterator()&lt;/code&gt;, and the &lt;code&gt;size&lt;/code&gt; method merely returns the subclass's &lt;code&gt;size&lt;/code&gt; field.</source>
          <target state="translated">所述 &lt;code&gt;listIterator(int)&lt;/code&gt; 方法返回一个&amp;ldquo;包装对象&amp;rdquo;在该支持列表，其与背衬列表上的相应的方法所建立的列表迭代。所述 &lt;code&gt;iterator&lt;/code&gt; 的方法仅仅是返回 &lt;code&gt;listIterator()&lt;/code&gt; ，并且 &lt;code&gt;size&lt;/code&gt; 方法仅返回子类的 &lt;code&gt;size&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="1fedd930e38f5398c449c705300b0fc17b0566c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadClass&lt;/code&gt; method in class &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;ClassLoader&lt;/code&gt; 中的 &lt;code&gt;loadClass&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6c9b144092edff275e75b32f1dca016975180187" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapper&lt;/code&gt; function passed to &lt;code&gt;flatMap&lt;/code&gt; splits a line, using a simple regular expression, into an array of words, and then creates a stream of words from that array.</source>
          <target state="translated">传递给 &lt;code&gt;flatMap&lt;/code&gt; 的 &lt;code&gt;mapper&lt;/code&gt; 函数使用简单的正则表达式将一行分割为单词数组，然后从该数组创建单词流。</target>
        </trans-unit>
        <trans-unit id="e7777926bab037130e9c4b41941f7d725a543594" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapping()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, such as downstream of a &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to accumulate the set of last names in each city:</source>
          <target state="translated">当在多级归约中（例如 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 的下游 &lt;code&gt;mapping()&lt;/code&gt; 使用时，mapping（）收集器最有用。例如，给定 &lt;code&gt;Person&lt;/code&gt; 流，以累积每个城市的姓氏集：</target>
        </trans-unit>
        <trans-unit id="903b585e02a8cfe6d8af38444d4c285b4ecfdab9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;InflaterInputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;InflaterInputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="0371bac823202240bd6c72d5e06eb31b731df75c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="7e02e9dcce04c471816e17e93a8e7c8612865389" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; remembers the current line number in a private variable, and then calls the &lt;code&gt;mark&lt;/code&gt; method of the underlying input stream.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法会记住私有变量中的当前行号，然后调用基础输入流的 &lt;code&gt;mark&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9baaba468b2b9ec943dee5d33e382f44cbd16e98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark&lt;/code&gt; method of &lt;code&gt;PushbackInputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">&lt;code&gt;PushbackInputStream&lt;/code&gt; 的 &lt;code&gt;mark&lt;/code&gt; 方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="77e5480e00ffc1e7db2c7cde3ede487453a10255" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDepth&lt;/code&gt; parameter is the maximum number of levels of directories to visit. A value of &lt;code&gt;0&lt;/code&gt; means that only the starting file is visited, unless denied by the security manager. A value of &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; may be used to indicate that all levels should be visited.</source>
          <target state="translated">该 &lt;code&gt;maxDepth&lt;/code&gt; 参数是要访问的目录层次的最大数量。值为 &lt;code&gt;0&lt;/code&gt; 表示仅访问起始文件，除非安全管理器拒绝。值&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt;可用于指示应访问所有级别。</target>
        </trans-unit>
        <trans-unit id="259fe46dcadeee76b1ff944baef9fa3edc7fae57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDepth&lt;/code&gt; parameter is the maximum number of levels of directories to visit. A value of &lt;code&gt;0&lt;/code&gt; means that only the starting file is visited, unless denied by the security manager. A value of &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;MAX_VALUE&lt;/code&gt;&lt;/a&gt; may be used to indicate that all levels should be visited. The &lt;code&gt;visitFile&lt;/code&gt; method is invoked for all files, including directories, encountered at &lt;code&gt;maxDepth&lt;/code&gt;, unless the basic file attributes cannot be read, in which case the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked.</source>
          <target state="translated">该 &lt;code&gt;maxDepth&lt;/code&gt; 参数是要访问的目录层次的最大数量。值为 &lt;code&gt;0&lt;/code&gt; 表示仅访问起始文件，除非安全管理器拒绝。值&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;MAX_VALUE&lt;/code&gt; &lt;/a&gt;可用于指示应访问所有级别。对于在 &lt;code&gt;maxDepth&lt;/code&gt; 遇到的所有文件（包括目录），都会调用 &lt;code&gt;visitFile&lt;/code&gt; 方法，除非无法读取基本文件属性，在这种情况下，会调用 &lt;code&gt;visitFileFailed&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6af76e421d8e057e7b7d9ff20dd9e09a4d087b85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metaData&lt;/code&gt; parameter can be used to limit the number of I/O operations that this method is required to perform. Passing &lt;code&gt;false&lt;/code&gt; for this parameter indicates that only updates to the file's content need be written to storage; passing &lt;code&gt;true&lt;/code&gt; indicates that updates to both the file's content and metadata must be written, which generally requires at least one more I/O operation. Whether this parameter actually has any effect is dependent upon the underlying operating system and is therefore unspecified.</source>
          <target state="translated">的 &lt;code&gt;metaData&lt;/code&gt; 参数可以被用于限制所要求此方法来执行I / O操作的数目。为该参数传递 &lt;code&gt;false&lt;/code&gt; 表示仅需要将文件内容的更新写入存储；传递 &lt;code&gt;true&lt;/code&gt; 表示必须同时写入文件内容和元数据的更新，这通常需要至少执行一次I / O操作。此参数实际上是否有效取决于底层操作系统，因此未指定。</target>
        </trans-unit>
        <trans-unit id="74be4dfd459c69d6c5eed0336db7d26406e6421b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minimumCapacity&lt;/code&gt; argument.</source>
          <target state="translated">该 &lt;code&gt;minimumCapacity&lt;/code&gt; 说法。</target>
        </trans-unit>
        <trans-unit id="890e9f6e189646766e2f576b109ba30702568602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; argument specifies the access mode with which the file is to be opened. The permitted values and their meanings are as specified for the &lt;a href=&quot;#mode&quot;&gt;&lt;code&gt;RandomAccessFile(File,String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;mode&lt;/code&gt; 参数指定与该文件是要打开的访问模式。允许的值及其含义与为&lt;a href=&quot;#mode&quot;&gt; &lt;code&gt;RandomAccessFile(File,String)&lt;/code&gt; &lt;/a&gt;构造函数指定的值相同。</target>
        </trans-unit>
        <trans-unit id="8d634c96d7b7dc8c2283b2dc960c9bfb6ad5d16f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modifiers&lt;/code&gt; parameter specifies &lt;em&gt;modifiers&lt;/em&gt; that qualify how the directory is registered. This release does not define any &lt;em&gt;standard&lt;/em&gt; modifiers. It may contain implementation specific modifiers.</source>
          <target state="translated">该 &lt;code&gt;modifiers&lt;/code&gt; 参数指定&lt;em&gt;修饰符&lt;/em&gt;有资格如何目录登记。此版本未定义任何&lt;em&gt;标准&lt;/em&gt;修饰符。它可能包含实现特定的修饰符。</target>
        </trans-unit>
        <trans-unit id="1c71b33fd5b314e171d4df0723194294f0896265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;msg&lt;/code&gt; string is localized using the given resource bundle. If the resource bundle is &lt;code&gt;null&lt;/code&gt;, then the &lt;code&gt;msg&lt;/code&gt; string is not localized.</source>
          <target state="translated">使用给定的资源包对 &lt;code&gt;msg&lt;/code&gt; 字符串进行本地化。如果资源包为 &lt;code&gt;null&lt;/code&gt; ，则 &lt;code&gt;msg&lt;/code&gt; 字符串未本地化。</target>
        </trans-unit>
        <trans-unit id="3ad795f1c708af7880ff420b8fad93daa8b2155f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;n&lt;/code&gt; parameter may be negative, even though the &lt;code&gt;skip&lt;/code&gt; method of the &lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; superclass throws an exception in this case. If &lt;code&gt;n&lt;/code&gt; is negative, then this method does nothing and returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;n&lt;/code&gt; 参数可以是负的，即使 &lt;code&gt;skip&lt;/code&gt; 所述的方法&lt;a href=&quot;reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;超抛出在这种情况下的异常。如果 &lt;code&gt;n&lt;/code&gt; 为负，则此方法不执行任何操作并返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dff9aa267101b80032f4f16286856df7bec91f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;environment&lt;/code&gt; 参数由调用者所有。该实现不会修改这些对象或保留对其的引用，尽管它可能保留对克隆或副本的引用。</target>
        </trans-unit>
        <trans-unit id="30d43ffbfe8d9be7ac13f65149aa0271dd8dbc00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. &lt;code&gt;name&lt;/code&gt; is the name of the object, relative to context &lt;code&gt;nameCtx&lt;/code&gt;. This information could be useful to the object factory or to the object implementation. If there are several possible contexts from which the object could be named -- as will often be the case -- it is up to the caller to select one. A good rule of thumb is to select the &quot;deepest&quot; context available. If &lt;code&gt;nameCtx&lt;/code&gt; is null, &lt;code&gt;name&lt;/code&gt; is relative to the default initial context. If no name is being specified, the &lt;code&gt;name&lt;/code&gt; parameter should be null.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。 &lt;code&gt;name&lt;/code&gt; 是对象的名称，相对于上下文 &lt;code&gt;nameCtx&lt;/code&gt; 。此信息可能对对象工厂或对象实现很有用。如果可以在几种可能的上下文中命名对象（通常是这样），则由调用者选择。一个好的经验法则是选择可用的&amp;ldquo;最深&amp;rdquo;上下文。如果 &lt;code&gt;nameCtx&lt;/code&gt; 为null，则 &lt;code&gt;name&lt;/code&gt; 是相对于默认初始上下文的。如果未指定 &lt;code&gt;name&lt;/code&gt; ，则name参数应为null。</target>
        </trans-unit>
        <trans-unit id="f70a327d5594e9f181a40f5c6ca0cd8e025505b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。有关详细信息，请参见&lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;中&amp;ldquo;名称和上下文参数&amp;rdquo; 的描述。</target>
        </trans-unit>
        <trans-unit id="d4c006afdb1b3d49e58c74bd4a0ffd732b023002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details. If a factory uses &lt;code&gt;nameCtx&lt;/code&gt; it should synchronize its use against concurrent access, since context implementations are not guaranteed to be thread-safe.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。有关详细信息，请参见&lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;中&amp;ldquo;名称和上下文参数&amp;rdquo; 的描述。如果工厂使用 &lt;code&gt;nameCtx&lt;/code&gt; ，则应将其使用与并发访问同步，因为不能保证上下文实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="6b3818f758723f19e7f19461448d70ae40bd144a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;attrs&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;attrs&lt;/code&gt; ，和 &lt;code&gt;environment&lt;/code&gt; 参数由调用者所有。该实现不会修改这些对象或保留对其的引用，尽管它可能保留对克隆或副本的引用。</target>
        </trans-unit>
        <trans-unit id="48161fbd495af11311a77e82a4acb8a1f70aaa4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;inAttrs&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies. The object returned by this method is owned by the caller. The implementation will not subsequently modify it. It will contain either a new &lt;code&gt;Attributes&lt;/code&gt; object that is likewise owned by the caller, or a reference to the original &lt;code&gt;inAttrs&lt;/code&gt; parameter.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;inAttrs&lt;/code&gt; 和 &lt;code&gt;environment&lt;/code&gt; 参数由调用者所有。该实现不会修改这些对象或保留对其的引用，尽管它可能保留对克隆或副本的引用。此方法返回的对象归调用者所有。该实现随后将不会对其进行修改。它将包含同样由调用者拥有的新 &lt;code&gt;Attributes&lt;/code&gt; 对象，或对原始 &lt;code&gt;inAttrs&lt;/code&gt; 参数的引用。</target>
        </trans-unit>
        <trans-unit id="ef2e6b4b4d41262649d36998a45ab4a554e41dd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;X500Principal&lt;/code&gt;s.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 的 &lt;code&gt;X500Principal&lt;/code&gt; 的秒。</target>
        </trans-unit>
        <trans-unit id="f5c100cec826504d35586ac2749c0d0f50484e21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of names. Each name is a &lt;code&gt;String&lt;/code&gt; or a byte array representing a distinguished name (in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; or ASN.1 DER encoded form, respectively). If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no issuerNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 的名字。每个名称都是代表专有名称的 &lt;code&gt;String&lt;/code&gt; 或字节数组（分别以&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;或ASN.1 DER编码的形式）。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则不会执行issuerNames检查。</target>
        </trans-unit>
        <trans-unit id="10f8926ca6dbdca434f3cdffa8eda26510a88124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the pathToNames criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no pathToNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 一起被列入pathToNames标准为每名一个条目。每个条目都是一个 &lt;code&gt;List&lt;/code&gt; ,其第一个条目为 &lt;code&gt;Integer&lt;/code&gt; （名称类型，0-8），第二个条目为 &lt;code&gt;String&lt;/code&gt; 或字节数组（名称分别为字符串或ASN.1 DER编码形式）。可以有多个相同类型的名称。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则不会执行pathToNames检查。</target>
        </trans-unit>
        <trans-unit id="b7f614fb779c50df2c64620e5af3100fbb23fe19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the subject alternative name criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no subjectAlternativeNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 一起被包含在使用者替代名称标准为每名一个条目。每个条目都是一个 &lt;code&gt;List&lt;/code&gt; ,其第一个条目为 &lt;code&gt;Integer&lt;/code&gt; （名称类型，0-8），第二个条目为 &lt;code&gt;String&lt;/code&gt; 或字节数组（名称分别为字符串或ASN.1 DER编码形式）。可以有多个相同类型的名称。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则将不执行subjectAlternativeNames检查。</target>
        </trans-unit>
        <trans-unit id="86f6973623e34ae41d0cb380cd7a6687a04a283e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network interface&lt;/code&gt; and &lt;code&gt;ttl&lt;/code&gt; parameters let the caller specify which network interface the test will go through and the maximum number of hops the packets should go through. A negative value for the &lt;code&gt;ttl&lt;/code&gt; will result in an IllegalArgumentException being thrown.</source>
          <target state="translated">该 &lt;code&gt;network interface&lt;/code&gt; 和 &lt;code&gt;ttl&lt;/code&gt; 参数让调用者指定的网络接口测试将通过和啤酒花的最大数量的数据包应该去。如果 &lt;code&gt;ttl&lt;/code&gt; 为负值，则将引发IllegalArgumentException。</target>
        </trans-unit>
        <trans-unit id="8b09e54aa5c847f44721e53e1758b993160bcd0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newLength&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;newLength&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd6f3c9ed9744a178a240c4efe334b44144e9408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize&lt;/code&gt; method helps solve these problems by transforming text into the canonical composed and decomposed forms as shown in the first example above. In addition, you can have it perform compatibility decompositions so that you can treat compatibility characters the same as their equivalents. Finally, the &lt;code&gt;normalize&lt;/code&gt; method rearranges accents into the proper canonical order, so that you do not have to worry about accent rearrangement on your own.</source>
          <target state="translated">的 &lt;code&gt;normalize&lt;/code&gt; 方法有助于通过将文本转换成由与如上面的第一个例子中分解形式的规范解决这些问题。另外，您可以让它执行兼容性分解，以便您可以将兼容性字符与它们的等效字符一样对待。最后， &lt;code&gt;normalize&lt;/code&gt; 方法将重音重排为正确的规范顺序，因此您不必担心重音重排。</target>
        </trans-unit>
        <trans-unit id="63cf4faf44647d95951cea7798d0b85f615c45ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ns&lt;/code&gt; parameter may be negative, even though the &lt;code&gt;skip&lt;/code&gt; method of the &lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; superclass throws an exception in this case. Negative values of &lt;code&gt;ns&lt;/code&gt; cause the stream to skip backwards. Negative return values indicate a skip backwards. It is not possible to skip backwards past the beginning of the string.</source>
          <target state="translated">所述 &lt;code&gt;ns&lt;/code&gt; 参数可以是负的，即使 &lt;code&gt;skip&lt;/code&gt; 的方法&lt;a href=&quot;reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;超抛出在这种情况下的异常。 &lt;code&gt;ns&lt;/code&gt; 的负值会导致流向后跳过。负的返回值表示向后跳过。向后跳过字符串的开头是不可能的。</target>
        </trans-unit>
        <trans-unit id="e0fcc06e98814dd87a3c62b985949fba60bdb550" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first byte of the subarray, and the &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数是子阵列的第一个字节的索引，并且 &lt;code&gt;count&lt;/code&gt; 参数指定子阵列的长度。</target>
        </trans-unit>
        <trans-unit id="baa0351e008899618db6b64da0e758694ddf41eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first character of the subarray. The &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the returned string.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数是子阵列的第一个字符的索引。的 &lt;code&gt;count&lt;/code&gt; 参数指定子阵列的长度。子数组的内容被复制；字符数组的后续修改不会影响返回的字符串。</target>
        </trans-unit>
        <trans-unit id="7d930134c90bf6d49ed3db167b3ffa23d64e6b5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuffer#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuffer#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="5649ec97e26cd383b62037dbe7726158b1b2a542" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuilder#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuilder#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="4b47fbce935f5d028b77339d1ef9818c0b7586f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt;, &lt;code&gt;openOperations&lt;/code&gt; and &lt;code&gt;notifications&lt;/code&gt; array parameters are internally copied, so that subsequent changes to the arrays referenced by these parameters have no effect on this instance.</source>
          <target state="translated">的 &lt;code&gt;openAttributes&lt;/code&gt; ， &lt;code&gt;openConstructors&lt;/code&gt; ， &lt;code&gt;openOperations&lt;/code&gt; 和 &lt;code&gt;notifications&lt;/code&gt; 阵列参数内部复制，以便后续由这些参数所引用的阵列的变化对这种情况下没有影响。</target>
        </trans-unit>
        <trans-unit id="d6983d2110c5fe985de448c67aa2a3f5fba3481e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled by the resulting file attribute view for the case that the file is a symbolic link. By default, symbolic links are followed. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed. This option is ignored by implementations that do not support symbolic links.</source>
          <target state="translated">对于文件是符号链接的情况， &lt;code&gt;options&lt;/code&gt; 数组可用于指示结果文件属性视图如何处理符号链接。默认情况下，遵循符号链接。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。不支持符号链接的实现将忽略此选项。</target>
        </trans-unit>
        <trans-unit id="e205a1262affb513a2bd877857ae965e9d442d7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 阵列可用于指示链接如何象征意义，该文件是一个符号链接的情况下进行处理。默认情况下，遵循符号链接，并且读取链接最终目标的文件属性。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="07b7edf8d716c1c078bf2b1c0f91fb4940940f39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is set. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 阵列可用于指示链接如何象征意义，该文件是一个符号链接的情况下进行处理。默认情况下，遵循符号链接，并设置链接最终目标的文件属性。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="d06342b773fea6549bc89fc2462a7083b70f4fb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled. By default, symbolic links are resolved to their final target. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then this method does not resolve symbolic links. Some implementations allow special names such as &quot;&lt;code&gt;..&lt;/code&gt;&quot; to refer to the parent directory. When deriving the &lt;em&gt;real path&lt;/em&gt;, and a &quot;&lt;code&gt;..&lt;/code&gt;&quot; (or equivalent) is preceded by a non-&quot;&lt;code&gt;..&lt;/code&gt;&quot; name then an implementation will typically cause both names to be removed. When not resolving symbolic links and the preceding name is a symbolic link then the names are only removed if it guaranteed that the resulting path will locate the same file as this path.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 阵列可用于指示链接如何象征性的处理方式。默认情况下，符号链接被解析为其最终目标。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则此方法不会解析符号链接。一些实现允许特殊名称（例如&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;）引用父目录。当推导&lt;em&gt;真实路径时&lt;/em&gt;，在&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;（或等效名称）后加上非&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;名称，则实现通常会导致两个名称都被删除。当不解析符号链接并且前面的名称是符号链接时，只有在保证结果路径将与该路径定位相同文件的情况下，才删除名称。</target>
        </trans-unit>
        <trans-unit id="0bc9bb7ec20a4fcc37fab92a84728a3be6a3d529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. If no options are present then it is equivalent to opening the file with the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option. In addition to the &lt;code&gt;READ&lt;/code&gt; option, an implementation may also support additional implementation specific options.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。如果没有选项，则相当于使用&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;选项打开文件。除了 &lt;code&gt;READ&lt;/code&gt; 选项外，实现还可以支持其他特定于实现的选项。</target>
        </trans-unit>
        <trans-unit id="feb5d322a388c3217a1ff698a06ad00e166739fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;../file/standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determine if the file should be opened for reading and/or writing. If neither option (or the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option) is contained in the array then the file is opened for reading. By default reading or writing commences at the beginning of the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。在&lt;a href=&quot;../file/standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项确定文件是否应打开供读取和/或写入。如果数组中未包含任何选项（或&lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;选项），则将打开文件以供读取。默认情况下，读取或写入从文件的开头开始。</target>
        </trans-unit>
        <trans-unit id="c735a8e347a9d0b0ecd22343769651f2ac14125f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;../file/standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determines if the file should be opened for reading and/or writing. If neither option is contained in the array then an existing file is opened for reading.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。在&lt;a href=&quot;../file/standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项确定是否应将文件打开供读取和/或写入。如果阵列中均未包含任何选项，则将打开一个现有文件以供读取。</target>
        </trans-unit>
        <trans-unit id="70441efdb55fa14107d32cb84dfbb03932007cdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determine if the file should be opened for reading and/or writing. If neither option (or the &lt;a href=&quot;standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option) is present then the file is opened for reading. By default reading or writing commence at the beginning of the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。在&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项确定文件是否应打开供读取和/或写入。如果两个选项（或&lt;a href=&quot;standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;选项）都不存在，则打开文件进行读取。默认情况下，读取或写入从文件的开头开始。</target>
        </trans-unit>
        <trans-unit id="adaafaa0c2c26b989f9f5f2e8716f29c6f11b35c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 的参数可用于指示链接如何象征意义，该文件是一个符号链接的情况下进行处理。默认情况下，遵循符号链接。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="e88e22b5339b7c784d561d64428df97e00625dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may include any of the following:</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数可以包括以下任一：</target>
        </trans-unit>
        <trans-unit id="6c00a59ba94adcb6905e3dd085514e8e2f27d12a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. The method ensures that the file is closed when all lines have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数指定如何创建或打开该文件。如果不存在任何选项，则此方法就像存在&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项一样工作。换句话说，它打开文件进行写入，如果不存在则创建文件，或者首先将现有的&lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;截断为 &lt;code&gt;0&lt;/code&gt; 。该方法确保在写入所有行后（或者引发I / O错误或其他运行时异常）关闭文件。如果发生I / O错误，则可以在创建或截断文件后或在将某些字节写入文件后执行此操作。</target>
        </trans-unit>
        <trans-unit id="d38cc57bdb401fa5458030b8203d68a47b6b87cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputMimeType&lt;/code&gt; parameter describes the document type that you want to create, whereas the &lt;code&gt;flavor&lt;/code&gt; parameter describes the format in which the input data will be provided by the application to the &lt;code&gt;StreamPrintService&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;outputMimeType&lt;/code&gt; 参数描述了要创建的，而文档类型 &lt;code&gt;flavor&lt;/code&gt; 参数描述在其中输入数据将被应用到提供的格式 &lt;code&gt;StreamPrintService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64a8995d9ac05171aede64481f740265b7613585" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseURL&lt;/code&gt; method of &lt;code&gt;URLStreamHandler&lt;/code&gt; parses the string representation as if it were an &lt;code&gt;http&lt;/code&gt; specification. Most URL protocol families have a similar parsing. A stream protocol handler for a protocol that has a different syntax must override this routine.</source>
          <target state="translated">&lt;code&gt;URLStreamHandler&lt;/code&gt; 的 &lt;code&gt;parseURL&lt;/code&gt; 方法将字符串表示形式解析为 &lt;code&gt;http&lt;/code&gt; 规范。大多数URL协议系列都有类似的解析。具有不同语法的协议的流协议处理程序必须重写此例程。</target>
        </trans-unit>
        <trans-unit id="2221038019d4be2cb2f88fab060218d2d5a02e57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; parameter is associated with a &lt;code&gt;FileSystem&lt;/code&gt; that supports the &lt;a href=&quot;attribute/posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt;. This attribute view provides access to file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">该 &lt;code&gt;path&lt;/code&gt; 参数与相关联的 &lt;code&gt;FileSystem&lt;/code&gt; 支持&lt;a href=&quot;attribute/posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;。该属性视图提供对文件属性的访问，这些文件属性通常与实现便携式操作系统接口（POSIX）系列标准的操作系统所使用的文件系统上的文件相关联。</target>
        </trans-unit>
        <trans-unit id="b249e9a3d9c0f37793a768ee4c126d9c0f3b49e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; parameter is associated with a file system that supports &lt;a href=&quot;attribute/fileownerattributeview&quot;&gt;&lt;code&gt;FileOwnerAttributeView&lt;/code&gt;&lt;/a&gt;. This file attribute view provides access to a file attribute that is the owner of the file.</source>
          <target state="translated">该 &lt;code&gt;path&lt;/code&gt; 参数与支持的文件系统相关&lt;a href=&quot;attribute/fileownerattributeview&quot;&gt; &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; &lt;/a&gt;。该文件属性视图提供对作为文件所有者的文件属性的访问。</target>
        </trans-unit>
        <trans-unit id="5493aef38945eeedee66c785a93a8e949626fc4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;perms&lt;/code&gt; parameter is a &lt;code&gt;String&lt;/code&gt; representing the permissions. It has 9 characters that are interpreted as three sets of three. The first set refers to the owner's permissions; the next to the group permissions and the last to others. Within each set, the first character is &lt;code&gt;'r'&lt;/code&gt; to indicate permission to read, the second character is &lt;code&gt;'w'&lt;/code&gt; to indicate permission to write, and the third character is &lt;code&gt;'x'&lt;/code&gt; for execute permission. Where a permission is not set then the corresponding character is set to &lt;code&gt;'-'&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;perms&lt;/code&gt; 参数是一个 &lt;code&gt;String&lt;/code&gt; 表示的权限。它有9个字符，被解释为三组，每组三个。第一组是指所有者的权限；第二组是所有者的权限。组权限旁边，最后一个其他权限。在每个集合中，第一个字符为 &lt;code&gt;'r'&lt;/code&gt; 表示允许读取，第二个字符为 &lt;code&gt;'w'&lt;/code&gt; 表示允许写入，第三个字符为 &lt;code&gt;'x'&lt;/code&gt; 表示执行权限。如果未设置许可，则将相应的字符设置为 &lt;code&gt;'-'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9d482d82a8c67b95f55d10ab3dda1aad0c96b7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persistPolicy&lt;/code&gt; and &lt;code&gt;currencyTimeLimit&lt;/code&gt; fields are meaningless for constructors, but are not considered invalid.</source>
          <target state="translated">该 &lt;code&gt;persistPolicy&lt;/code&gt; 和 &lt;code&gt;currencyTimeLimit&lt;/code&gt; 字段是无意义的构造函数，但不被视为无效。</target>
        </trans-unit>
        <trans-unit id="822e7053ed501794bcb73e078de627432ea24760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pos&lt;/code&gt; argument may range between zero and</source>
          <target state="translated">该 &lt;code&gt;pos&lt;/code&gt; 参数可以在零和之间的范围内</target>
        </trans-unit>
        <trans-unit id="0d4b8df143426535636c3d9fcf5d259dd494e8ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pos&lt;/code&gt; argument selects which parameters are to be bound. It may range between zero and</source>
          <target state="translated">所述 &lt;code&gt;pos&lt;/code&gt; 参数选择哪些参数被约束。范围是零到</target>
        </trans-unit>
        <trans-unit id="3295278a86db378f96ef38915c5399dfa8f46eb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; argument must be at least three characters long. It is recommended that the prefix be a short, meaningful string such as &lt;code&gt;&quot;hjb&quot;&lt;/code&gt; or &lt;code&gt;&quot;mail&quot;&lt;/code&gt;. The &lt;code&gt;suffix&lt;/code&gt; argument may be &lt;code&gt;null&lt;/code&gt;, in which case the suffix &lt;code&gt;&quot;.tmp&quot;&lt;/code&gt; will be used.</source>
          <target state="translated">该 &lt;code&gt;prefix&lt;/code&gt; 长参数必须是至少有三个字符。建议前缀是短而有意义的字符串，例如 &lt;code&gt;&quot;hjb&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;mail&quot;&lt;/code&gt; 。所述 &lt;code&gt;suffix&lt;/code&gt; 参数可以为 &lt;code&gt;null&lt;/code&gt; ，在这种情况下，后缀 &lt;code&gt;&quot;.tmp&quot;&lt;/code&gt; 将被使用。</target>
        </trans-unit>
        <trans-unit id="e5caea50061710cec044d7be43530e50e1eb551a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; argument is valid if it is greater than or equal to &lt;code&gt;MIN_RADIX&lt;/code&gt; and less than or equal to &lt;code&gt;MAX_RADIX&lt;/code&gt;. The &lt;code&gt;digit&lt;/code&gt; argument is valid if &lt;code&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;radix&lt;/code&gt; 参数大于或等于 &lt;code&gt;MIN_RADIX&lt;/code&gt; 且小于或等于 &lt;code&gt;MAX_RADIX&lt;/code&gt; ,则有效。的 &lt;code&gt;digit&lt;/code&gt; 参数是有效的，如果 &lt;code&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b33942ad43fbe9d22cb9d95c4c4908fdaa08301" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; is either smaller than &lt;a href=&quot;character#MIN_RADIX&quot;&gt;&lt;code&gt;Character.MIN_RADIX&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;character#MAX_RADIX&quot;&gt;&lt;code&gt;Character.MAX_RADIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;radix&lt;/code&gt; 是比任一较小&lt;a href=&quot;character#MIN_RADIX&quot;&gt; &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; &lt;/a&gt;大于或更大&lt;a href=&quot;character#MAX_RADIX&quot;&gt; &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d785142e5ab58037a089cd9e5a386011f0b7e09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ranges&lt;/code&gt; to be given can take one of the following forms:</source>
          <target state="translated">给出的 &lt;code&gt;ranges&lt;/code&gt; 可以采用以下形式之一：</target>
        </trans-unit>
        <trans-unit id="1259bcaaf2e03d5637399a403f2eed4bcb0658f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; has the same effect as:</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 类的 &lt;code&gt;read(b)&lt;/code&gt; 方法具有以下效果：</target>
        </trans-unit>
        <trans-unit id="4604e99f767c72aaa96525bf29f68941bb283ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b)&lt;/code&gt; method has the same effect as:</source>
          <target state="translated">的 &lt;code&gt;read(b)&lt;/code&gt; 的方法具有相同的效果为：</target>
        </trans-unit>
        <trans-unit id="d053108594714cc2e678b8a8b8bcae476c059c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; simply calls the method &lt;code&gt;read()&lt;/code&gt; repeatedly. If the first such call results in an &lt;code&gt;IOException&lt;/code&gt;, that exception is returned from the call to the &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method. If any subsequent call to &lt;code&gt;read()&lt;/code&gt; results in a &lt;code&gt;IOException&lt;/code&gt;, the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into &lt;code&gt;b&lt;/code&gt; and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data &lt;code&gt;len&lt;/code&gt; has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.</source>
          <target state="translated">类 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; 方法简单地重复调用方法 &lt;code&gt;read()&lt;/code&gt; 。如果第一个此类调用导致 &lt;code&gt;IOException&lt;/code&gt; ，则该异常从调用返回到 &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; 方法。如果对 &lt;code&gt;read()&lt;/code&gt; 的任何后续调用都导致 &lt;code&gt;IOException&lt;/code&gt; ，则捕获该异常并将其视为文件结束；到该点为止读取的字节存储在 &lt;code&gt;b&lt;/code&gt; 中,并返回发生异常之前读取的字节数。该方法的默认实现将阻塞，直到输入数据的请求数量 &lt;code&gt;len&lt;/code&gt; 为止。已被读取，检测到文件结尾或引发了异常。鼓励子类提供此方法的更有效实现。</target>
        </trans-unit>
        <trans-unit id="d73e15d99486a3edb623a542384b22544dac32ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; calls the &lt;code&gt;read&lt;/code&gt; method of three arguments with the arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;read&lt;/code&gt; 的方法 &lt;code&gt;InputStream&lt;/code&gt; 调用 &lt;code&gt;read&lt;/code&gt; 的三个参数与参数方法 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;b.length&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="7efed5a820d4dabed25b8a28bd1df6414d7e77e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; calls the &lt;code&gt;read&lt;/code&gt; method of the underlying input stream. It checks for carriage returns and newline characters in the input, and modifies the current line number as appropriate. A carriage-return character or a carriage return followed by a newline character are both converted into a single newline character.</source>
          <target state="translated">该 &lt;code&gt;read&lt;/code&gt; 的方法 &lt;code&gt;LineNumberInputStream&lt;/code&gt; 调用 &lt;code&gt;read&lt;/code&gt; 基础输入流的方法。它检查输入中的回车符和换行符，并适当地修改当前行号。回车符或回车符后跟换行符都将转换为单个换行符。</target>
        </trans-unit>
        <trans-unit id="4d12f1e1c60d3ded7ff55ddd8ec9fa42dcbe1312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; repeatedly calls the &lt;code&gt;read&lt;/code&gt; method of zero arguments to fill in the byte array.</source>
          <target state="translated">该 &lt;code&gt;read&lt;/code&gt; 的方法 &lt;code&gt;LineNumberInputStream&lt;/code&gt; 反复调用 &lt;code&gt;read&lt;/code&gt; 的零个参数方法来填充字节数组英寸</target>
        </trans-unit>
        <trans-unit id="9c073aae985b3b46c91c5b9276bb615fd3d6afcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;SequenceInputStream&lt;/code&gt; tries to read the data from the current substream. If it fails to read any characters because the substream has reached the end of the stream, it calls the &lt;code&gt;close&lt;/code&gt; method of the current substream and begins reading from the next substream.</source>
          <target state="translated">&lt;code&gt;SequenceInputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法尝试从当前子流中读取数据。如果由于子流已到达流的末尾而无法读取任何字符，它将调用当前子流的 &lt;code&gt;close&lt;/code&gt; 方法并开始从下一个子流读取。</target>
        </trans-unit>
        <trans-unit id="266c4f3bc071054256173e68adbd4a6e7656ec4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;StringBufferInputStream&lt;/code&gt; cannot block. It copies the low eight bits from the characters in this input stream's buffer into the byte array argument.</source>
          <target state="translated">&lt;code&gt;StringBufferInputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法无法阻止。它将来自此输入流缓冲区中字符的低八位复制到字节数组参数中。</target>
        </trans-unit>
        <trans-unit id="e61745f20485b6632a27794087bfb013bec50ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;StringBufferInputStream&lt;/code&gt; cannot block. It returns the low eight bits of the next character in this input stream's buffer.</source>
          <target state="translated">&lt;code&gt;StringBufferInputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法无法阻止。它返回此输入流缓冲区中下一个字符的低八位。</target>
        </trans-unit>
        <trans-unit id="b68abbad5ba6fb28f94eaadf9085c6dda28742eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of the underlying stream returns &lt;code&gt;-1&lt;/code&gt;, indicating end-of-file, or</source>
          <target state="translated">基础流的 &lt;code&gt;read&lt;/code&gt; 方法返回 &lt;code&gt;-1&lt;/code&gt; ，指示文件结束，或者</target>
        </trans-unit>
        <trans-unit id="6ff4f563e5b69d4b6268d50e4aa9d51aa5725103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">如果在基础通道处于非阻塞模式时调用了结果流的 &lt;code&gt;read&lt;/code&gt; 方法，则将抛出&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;。流将不会被缓冲，并且将不支持&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;方法。流可以安全地被多个并发线程访问。关闭流将导致通道关闭。</target>
        </trans-unit>
        <trans-unit id="3b7ea7159daa93e13abc58f5ee72d1aa9624ff2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the returned &lt;code&gt;InputStream&lt;/code&gt; will throw &lt;code&gt;IOException&lt;/code&gt; when reading bytes that cannot be decoded.</source>
          <target state="translated">当读取无法解码的字节时，返回的 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b52f6c80e4a3c11df2890b54a5a8b3b1218aeabd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readlimit&lt;/code&gt; argument tells this input stream to allow that many bytes to be read before the mark position gets invalidated.</source>
          <target state="translated">该 &lt;code&gt;readlimit&lt;/code&gt; 参数告知此输入流，以允许标记位置变为非法前要读取的字节数。</target>
        </trans-unit>
        <trans-unit id="f523a2bdf73035ee44a575de3e5dff08d7683039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readlimit&lt;/code&gt; arguments tells this input stream to allow that many bytes to be read before the mark position gets invalidated.</source>
          <target state="translated">该 &lt;code&gt;readlimit&lt;/code&gt; 参数告知此输入流，以允许标记位置变为非法前要读取的字节数。</target>
        </trans-unit>
        <trans-unit id="26aa2e19c94981b7af3edb0fd924e85788e560ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; method of the underlying stream returns &lt;code&gt;false&lt;/code&gt;, indicating that further input requests would block.</source>
          <target state="translated">基础流的 &lt;code&gt;ready&lt;/code&gt; 方法返回 &lt;code&gt;false&lt;/code&gt; ，指示其他输入请求将被阻塞。</target>
        </trans-unit>
        <trans-unit id="165873d7f5551dc1377b152568842b2aacddf487" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple map-reduce on a stream, use &lt;a href=&quot;stream#map-java.util.function.Function-&quot;&gt;&lt;code&gt;Stream.map(Function)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的map-reduce，请改用&lt;a href=&quot;stream#map-java.util.function.Function-&quot;&gt; &lt;code&gt;Stream.map(Function)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e64fcbf48d32ed9f489fe7ed817a63867533729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的还原，请改用&lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; }。</target>
        </trans-unit>
        <trans-unit id="331f2b86728595fcc490eed59b6a8eb8cea11e3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的还原，请改用&lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6e4a1cfb3d954ef8dc93a66017c84659865340e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refresh&lt;/code&gt; method causes the policy object to refresh/reload its data. This operation is implementation-dependent. For example, if the policy object stores its data in configuration files, calling &lt;code&gt;refresh&lt;/code&gt; will cause it to re-read the configuration policy files. If a refresh operation is not supported, this method does nothing. Note that refreshed policy may not have an effect on classes in a particular ProtectionDomain. This is dependent on the Policy provider's implementation of the &lt;code&gt;implies&lt;/code&gt; method and its PermissionCollection caching strategy.</source>
          <target state="translated">该 &lt;code&gt;refresh&lt;/code&gt; 方法会导致策略对象刷新/重载其数据。此操作取决于实现。例如，如果策略对象将其数据存储在配置文件中，则调用 &lt;code&gt;refresh&lt;/code&gt; 将导致其重新读取配置策略文件。如果不支持刷新操作，则此方法不执行任何操作。请注意，刷新的策略可能不会对特定ProtectionDomain中的类产生影响。这取决于策略提供程序对 &lt;code&gt;implies&lt;/code&gt; 方法的实现及其PermissionCollection缓存策略。</target>
        </trans-unit>
        <trans-unit id="b92536f2a5a0e1a3b6f9a0f2c5c546403063f5bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerMBean&lt;/code&gt; method is simpler for local use, but cannot be used remotely. The &lt;code&gt;createMBean&lt;/code&gt; method can be used remotely, but sometimes requires attention to class loading issues.</source>
          <target state="translated">该 &lt;code&gt;registerMBean&lt;/code&gt; 方法对于本地使用较为简单，但不能远程使用。在 &lt;code&gt;createMBean&lt;/code&gt; 方法可以远程使用，但有时需要注意类加载问题。</target>
        </trans-unit>
        <trans-unit id="dec43624de062d1e7493f56cb68ff2515b4d245d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reset&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; resets the line number to be the line number at the time the &lt;code&gt;mark&lt;/code&gt; method was called, and then calls the &lt;code&gt;reset&lt;/code&gt; method of the underlying input stream.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; 的 &lt;code&gt;reset&lt;/code&gt; 方法将行号重置为调用 &lt;code&gt;mark&lt;/code&gt; 方法时的行号，然后调用基础输入流的 &lt;code&gt;reset&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9e487af727a443b2fc09683914bf955d5aed101d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schedule&lt;/code&gt; methods create tasks with various delays and return a task object that can be used to cancel or check execution. The &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; and &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; methods create and execute tasks that run periodically until cancelled.</source>
          <target state="translated">该 &lt;code&gt;schedule&lt;/code&gt; 方法创建各种延迟任务，并返回一个可用于取消或检查执行任务的对象。该 &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; 和 &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; 方法创建并执行定期运行，直到取消的任务。</target>
        </trans-unit>
        <trans-unit id="275b9770ecb642dad5739bf9b860015b219e5bc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;seekForwardOnly&lt;/code&gt; parameter controls whether the value returned by &lt;code&gt;getMinIndex&lt;/code&gt; will be increased as each image (or thumbnail, or image metadata) is read. If &lt;code&gt;seekForwardOnly&lt;/code&gt; is true, then a call to &lt;code&gt;read(index)&lt;/code&gt; will throw an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; if &lt;code&gt;index &amp;lt; this.minIndex&lt;/code&gt;; otherwise, the value of &lt;code&gt;minIndex&lt;/code&gt; will be set to &lt;code&gt;index&lt;/code&gt;. If &lt;code&gt;seekForwardOnly&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;minIndex&lt;/code&gt; will remain 0 regardless of any read operations.</source>
          <target state="translated">的 &lt;code&gt;seekForwardOnly&lt;/code&gt; 参数控制是否由返回的值 &lt;code&gt;getMinIndex&lt;/code&gt; 将作为各图像（或缩略图或图像元数据）来增加被读取。如果 &lt;code&gt;seekForwardOnly&lt;/code&gt; 为true，则如果 &lt;code&gt;index &amp;lt; this.minIndex&lt;/code&gt; ; 对 &lt;code&gt;read(index)&lt;/code&gt; 的调用将引发 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 。否则， &lt;code&gt;minIndex&lt;/code&gt; 的值将设置为 &lt;code&gt;index&lt;/code&gt; 。如果 &lt;code&gt;seekForwardOnly&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则无论任何读取操作， &lt;code&gt;minIndex&lt;/code&gt; 的值都将保持为0。</target>
        </trans-unit>
        <trans-unit id="76ca7bc87a7a645eee5be869e5f2afee6e7546a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signature&lt;/code&gt; array parameter is internally copied, so that subsequent changes to the array referenced by &lt;code&gt;signature&lt;/code&gt; have no effect on this instance.</source>
          <target state="translated">的 &lt;code&gt;signature&lt;/code&gt; 数组参数在内部复制，以便后续通过引用的数组变化 &lt;code&gt;signature&lt;/code&gt; 对这种情况下没有影响。</target>
        </trans-unit>
        <trans-unit id="4ab62abd8dea24de7feab17efb96ab240af801b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;isEmpty&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, and &lt;code&gt;listIterator&lt;/code&gt; operations run in constant time. The &lt;code&gt;add&lt;/code&gt; operation runs in</source>
          <target state="translated">在 &lt;code&gt;size&lt;/code&gt; ， &lt;code&gt;isEmpty&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;iterator&lt;/code&gt; 和 &lt;code&gt;listIterator&lt;/code&gt; 操作在固定时间内运行。该 &lt;code&gt;add&lt;/code&gt; 运行在运行</target>
        </trans-unit>
        <trans-unit id="a4a7eb3594e941fdb97e903210733646c272b12a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is negative, the method will try to skip backwards. In case the backing file does not support backward skip at its current position, an &lt;code&gt;IOException&lt;/code&gt; is thrown. The actual number of bytes skipped is returned. If it skips forwards, it returns a positive value. If it skips backwards, it returns a negative value.</source>
          <target state="translated">的 &lt;code&gt;skip&lt;/code&gt; 方法，可有多种原因，最终跳过一些较小的字节数，可能 &lt;code&gt;0&lt;/code&gt; 。如果 &lt;code&gt;n&lt;/code&gt; 为负，则该方法将尝试向后跳过。如果备份文件在其当前位置不支持向后跳过，则将抛出 &lt;code&gt;IOException&lt;/code&gt; 。返回跳过的实际字节数。如果向前跳过，它将返回一个正值。如果向后跳过，则返回负值。</target>
        </trans-unit>
        <trans-unit id="66c38c1c54f362c964143fb2033b1ddc5a7e0a28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; 的 &lt;code&gt;skip&lt;/code&gt; 方法创建一个字节数组，然后重复读取该字节数组，直到已读取 &lt;code&gt;n&lt;/code&gt; 个字节或到达流的末尾。</target>
        </trans-unit>
        <trans-unit id="6a923526e0376b2377270933dbe7190607b0ff31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of &lt;code&gt;PushbackInputStream&lt;/code&gt; first skips over the bytes in the pushback buffer, if any. It then calls the &lt;code&gt;skip&lt;/code&gt; method of the underlying input stream if more bytes need to be skipped. The actual number of bytes skipped is returned.</source>
          <target state="translated">&lt;code&gt;PushbackInputStream&lt;/code&gt; 的 &lt;code&gt;skip&lt;/code&gt; 方法首先跳过推回缓冲区中的字节（如果有）。然后，如果需要跳过更多字节，它将调用基础输入流的 &lt;code&gt;skip&lt;/code&gt; 方法。返回跳过的实际字节数。</target>
        </trans-unit>
        <trans-unit id="c16533536dab6e2f9b65c6a5002fc87433ad4e31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of this class creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached. Subclasses are encouraged to provide a more efficient implementation of this method. For instance, the implementation may depend on the ability to seek.</source>
          <target state="translated">此类的 &lt;code&gt;skip&lt;/code&gt; 方法创建一个字节数组，然后重复读取该字节数组，直到已读取 &lt;code&gt;n&lt;/code&gt; 个字节或到达流的末尾为止。鼓励子类提供此方法的更有效实现。例如，实施可能取决于寻找的能力。</target>
        </trans-unit>
        <trans-unit id="48bb13788e4dffd1bf5c784a19fc6b8edec85d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument and &lt;code&gt;dest&lt;/code&gt; argument refer to arrays whose component types are different primitive types.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数和 &lt;code&gt;dest&lt;/code&gt; 参数指阵列，其部件类型是不同的原始类型。</target>
        </trans-unit>
        <trans-unit id="2ded185c55f988e1ab8aa4ba594d8425c8a39394" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an array with a primitive component type and the &lt;code&gt;dest&lt;/code&gt; argument refers to an array with a reference component type.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数指的是具有基本组件类型的数组和 &lt;code&gt;dest&lt;/code&gt; 参数指的是与基准组件类型的数组。</target>
        </trans-unit>
        <trans-unit id="9b64842c9ed7d557d1d18f19836d86fd1cadc9b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an array with a reference component type and the &lt;code&gt;dest&lt;/code&gt; argument refers to an array with a primitive component type.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数指的是与基准组件类型的数组和 &lt;code&gt;dest&lt;/code&gt; 参数指的是具有基本组件类型的数组。</target>
        </trans-unit>
        <trans-unit id="17390f5ec2c7023bf41b502643c3390be1470837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an object that is not an array.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数指的对象不是阵列。</target>
        </trans-unit>
        <trans-unit id="32cf5d4487a70ff5b3296fb66460f51ac7c6a160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcPos&lt;/code&gt; argument is negative.</source>
          <target state="translated">该 &lt;code&gt;srcPos&lt;/code&gt; 参数为负。</target>
        </trans-unit>
        <trans-unit id="345b6d87d178ad048ca717372d6308e35699c398" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stream&lt;/code&gt; walks the file tree as elements are consumed. The &lt;code&gt;Stream&lt;/code&gt; returned is guaranteed to have at least one element, the starting file itself. For each file visited, the stream attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is a directory and can be opened successfully, entries in the directory, and their &lt;em&gt;descendants&lt;/em&gt; will follow the directory in the stream as they are encountered. When all entries have been visited, then the directory is closed. The file tree walk then continues at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">当元素被消耗时， &lt;code&gt;stream&lt;/code&gt; 遍历文件树。返回的 &lt;code&gt;Stream&lt;/code&gt; 保证至少包含一个元素，即起始文件本身。对于每个访问的文件，流将尝试读取其&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;。如果文件是目录并且可以成功打开，则目录中的条目及其&lt;em&gt;后代&lt;/em&gt;将在遇到流时跟随该目录。访问完所有条目后，目录将关闭。然后，文件树遍历在目录的下一个&lt;em&gt;同级&lt;/em&gt;处继续。</target>
        </trans-unit>
        <trans-unit id="bbed603ba13286eef01f00c49ed0143e560232fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;system&lt;/code&gt; factory methods provide clocks based on the best available system clock This may use &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">该 &lt;code&gt;system&lt;/code&gt; 工厂方法提供基于现有的最佳系统时钟，这可能使用时钟&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;，或更高分辨率的时钟（如果可用）。</target>
        </trans-unit>
        <trans-unit id="fc9c79ee1df025d55ac0b05752be64291c34d35f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; and the &lt;code&gt;methodName&lt;/code&gt; values should not be &lt;code&gt;null&lt;/code&gt;. Otherwise an attempt to execute this &lt;code&gt;Expression&lt;/code&gt; will result in a &lt;code&gt;NullPointerException&lt;/code&gt;. If the &lt;code&gt;arguments&lt;/code&gt; value is &lt;code&gt;null&lt;/code&gt;, an empty array is used as the value of the &lt;code&gt;arguments&lt;/code&gt; property.</source>
          <target state="translated">的 &lt;code&gt;target&lt;/code&gt; 和 &lt;code&gt;methodName&lt;/code&gt; 值不能 &lt;code&gt;null&lt;/code&gt; 。否则，尝试执行此 &lt;code&gt;Expression&lt;/code&gt; 将导致 &lt;code&gt;NullPointerException&lt;/code&gt; 。如果 &lt;code&gt;arguments&lt;/code&gt; 值为 &lt;code&gt;null&lt;/code&gt; ，则将一个空数组用作 &lt;code&gt;arguments&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="643140ef281b03db8ff1987c73ac0c49fd06dd1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; parameter is the target of the link. It may be an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; or relative path and may not exist. When the target is a relative path then file system operations on the resulting link are relative to the path of the link.</source>
          <target state="translated">该 &lt;code&gt;target&lt;/code&gt; 参数是链接的目标。它可能是&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;路径或相对路径，可能不存在。当目标是相对路径时，则结果链接上的文件系统操作将相对于链接路径。</target>
        </trans-unit>
        <trans-unit id="0009c69a4dc15a49dcbf1a0c8eae01039c7c4a96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt; objects.</source>
          <target state="translated">该 &lt;code&gt;thumbnails&lt;/code&gt; 参数必须是 &lt;code&gt;null&lt;/code&gt; 或者只包含 &lt;code&gt;BufferedImage&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="a0e9ab517d625c7c2deaf59529ad7e0219c013fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeStamp&lt;/code&gt; of the notification is a time value (consistent with &lt;a href=&quot;../../../java/lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;) indicating when the notification was constructed.</source>
          <target state="translated">通知的 &lt;code&gt;timeStamp&lt;/code&gt; 是一个时间值（与&lt;a href=&quot;../../../java/lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;一致），指示何时构造通知。</target>
        </trans-unit>
        <trans-unit id="b2dc1977f789016cfbe08995493b9abe10ad9cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString&lt;/code&gt; method for class &lt;code&gt;Object&lt;/code&gt; returns a string consisting of the name of the class of which the object is an instance, the at-sign character `&lt;code&gt;@&lt;/code&gt;', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 类的 &lt;code&gt;toString&lt;/code&gt; 方法返回一个字符串，该字符串包括该对象是其实例的类的名称，符号字符' &lt;code&gt;@&lt;/code&gt; '以及该对象的哈希码的无符号十六进制表示形式。换句话说，此方法返回的字符串等于：</target>
        </trans-unit>
        <trans-unit id="bc716b32be2e2ea2d617e608d9ff17039ae30d19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; argument should be a valid value for the byte that follows the status byte in the &lt;code&gt;MetaMessage&lt;/code&gt;. The &lt;code&gt;data&lt;/code&gt; argument should contain all the subsequent bytes of the &lt;code&gt;MetaMessage&lt;/code&gt;. In other words, the byte that specifies the type of &lt;code&gt;MetaMessage&lt;/code&gt; is not considered a data byte.</source>
          <target state="translated">该 &lt;code&gt;type&lt;/code&gt; 参数应该是为接下来的状态字节中的字节的有效值 &lt;code&gt;MetaMessage&lt;/code&gt; 。该 &lt;code&gt;data&lt;/code&gt; 参数应包含的所有后续字节 &lt;code&gt;MetaMessage&lt;/code&gt; 。换句话说，指定 &lt;code&gt;MetaMessage&lt;/code&gt; 类型的字节不被视为数据字节。</target>
        </trans-unit>
        <trans-unit id="714e35a3944791dcc0a21aa2cfb1cc1a672a4844" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attributes required and this method returns an instance of that type if supported. All implementations support a basic set of file attributes and so invoking this method with a &lt;code&gt;type&lt;/code&gt; parameter of &lt;code&gt;BasicFileAttributes.class&lt;/code&gt; will not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数是所需的属性的类型，并且如果支持此方法返回该类型的一个实例。所有实现都支持一组基本的文件属性，因此使用 &lt;code&gt;BasicFileAttributes.class&lt;/code&gt; 的 &lt;code&gt;type&lt;/code&gt; 参数调用此方法不会抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1056213ec4dbb35ecbc5b5160831677aa11a47e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is typically a class, but it may be any type, such as an interface, a primitive type (like &lt;code&gt;int.class&lt;/code&gt;), or &lt;code&gt;void.class&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数典型地是一类，但它可以是任何类型，例如一个接口，一个原语类型（如 &lt;code&gt;int.class&lt;/code&gt; ），或 &lt;code&gt;void.class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d0f557c7ffa69e938b51901e39f9567f456bb67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeName&lt;/code&gt; here is determined by the &lt;a href=&quot;#type-names&quot;&gt; type name rules&lt;/a&gt; detailed below.</source>
          <target state="translated">这里的 &lt;code&gt;typeName&lt;/code&gt; 由下面详细描述的&lt;a href=&quot;#type-names&quot;&gt;类型名称规则&lt;/a&gt;确定。</target>
        </trans-unit>
        <trans-unit id="b34f44d7ea255df3fe2a501bc7503f396e8bcc57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uncaughtException&lt;/code&gt; method of &lt;code&gt;ThreadGroup&lt;/code&gt; does the following:</source>
          <target state="translated">&lt;code&gt;ThreadGroup&lt;/code&gt; 的 &lt;code&gt;uncaughtException&lt;/code&gt; 方法执行以下操作：</target>
        </trans-unit>
        <trans-unit id="ba8b125bbe0fb10254e8b4e3a983a07e8dccd3bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; parameter is an absolute, hierarchical URI, with a scheme equal (without regard to case) to the scheme supported by this provider. The exact form of the URI is highly provider dependent. The &lt;code&gt;env&lt;/code&gt; parameter is a map of provider specific properties to configure the file system.</source>
          <target state="translated">该 &lt;code&gt;uri&lt;/code&gt; 参数是绝对的，分层URI，与由该提供者所支持的方案的方案等于（不考虑情况）。URI的确切形式高度依赖于提供者。该 &lt;code&gt;env&lt;/code&gt; 参数是地图提供特定属性的配置文件系统。</target>
        </trans-unit>
        <trans-unit id="8d5265eccd53a8174604390135889708c5fc5e2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useOrdering&lt;/code&gt; argument controls the ordering of the results using the same rules as &lt;code&gt;getServiceProviders(Class, boolean)&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;useOrdering&lt;/code&gt; 参数控制的结果的使用相同的规则的排序 &lt;code&gt;getServiceProviders(Class, boolean)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf3c577a872e1c1751d1a92167097db6476c0ae8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; can be retrieved by calling the &lt;code&gt;get&lt;/code&gt; method with a &lt;code&gt;key&lt;/code&gt; that is equal to the original &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">可以通过使用等于原始 &lt;code&gt;key&lt;/code&gt; 的 &lt;code&gt;key&lt;/code&gt; 调用 &lt;code&gt;get&lt;/code&gt; 方法来检索该 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb6cc5d83f6f060e6206ee4432cd2838d953df43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wrap()&lt;/code&gt; and &lt;code&gt;unwrap()&lt;/code&gt; methods may execute concurrently of each other.</source>
          <target state="translated">的 &lt;code&gt;wrap()&lt;/code&gt; 和 &lt;code&gt;unwrap()&lt;/code&gt; 方法可以彼此并发执行。</target>
        </trans-unit>
        <trans-unit id="b6ac35afc51c676f6acfb59fbb66aebb7fd7dffe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;CipherOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of three arguments with the three arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;CipherOutputStream&lt;/code&gt; 调用 &lt;code&gt;write&lt;/code&gt; 的三个参数与三个参数的方法 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;b.length&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="b444208efa76dded6db1c12df1b7df685049876c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls its &lt;code&gt;write&lt;/code&gt; method of three arguments with the arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用它 &lt;code&gt;write&lt;/code&gt; 的三个参数与参数方法 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;b.length&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="4d273be569b8b30933a05fc498292c5402a93de3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of its underlying output stream, that is, it performs &lt;code&gt;out.write(b)&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用 &lt;code&gt;write&lt;/code&gt; 它的基本输出流，即的方法，它执行 &lt;code&gt;out.write(b)&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="5b52d117ddcb1aaf2483d386c55d430f15571498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of one argument on each &lt;code&gt;byte&lt;/code&gt; to output.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用 &lt;code&gt;write&lt;/code&gt; 一个参数的每个方法 &lt;code&gt;byte&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="f6b5bd7ff632f357b485afe4736af5f2318b4eb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; calls the write method of one argument on each of the bytes to be written out. Subclasses are encouraged to override this method and provide a more efficient implementation.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;OutputStream&lt;/code&gt; 调用写出在每个字节中的一个参数的写入方法。鼓励子类重写此方法并提供更有效的实现。</target>
        </trans-unit>
        <trans-unit id="4052734952517729cae634a4334fbfe7bc56b79a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">如果在基础通道处于非阻塞模式下调用，则结果流的 &lt;code&gt;write&lt;/code&gt; 方法将引发&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;。流将不会被缓冲。流可以安全地被多个并发线程访问。关闭流将导致通道关闭。</target>
        </trans-unit>
        <trans-unit id="7aeccac65dd62b076d4abb5d4c775615877d46ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by a &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation. Although this method is not final, it should not need to be subclassed under normal circumstances.</source>
          <target state="translated">所述 &lt;code&gt;writeObject&lt;/code&gt; 是一个单一的入口点的持久性和用于以一种 &lt;code&gt;Encoder&lt;/code&gt; 在一行的传统模式。尽管此方法不是最终方法，但在正常情况下不必将其子类化。</target>
        </trans-unit>
        <trans-unit id="65972030b222838810b7ba8b656c7648e06077d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeUTF&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt; may be used to write data that is suitable for reading by this method.</source>
          <target state="translated">接口 &lt;code&gt;DataOutput&lt;/code&gt; 的 &lt;code&gt;writeUTF&lt;/code&gt; 方法可用于写入适合通过此方法读取的数据。</target>
        </trans-unit>
        <trans-unit id="ecdfdf55c3e6233c34db1e9797ae4ac06e60e0e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{ }&lt;/code&gt; characters are a group of subpatterns, where the group matches if any subpattern in the group matches. The &lt;code&gt;&quot;,&quot;&lt;/code&gt; character is used to separate the subpatterns. Groups cannot be nested.</source>
          <target state="translated">的 &lt;code&gt;{ }&lt;/code&gt; 字符是一组子模式，其中该组匹配，如果在该组匹配的任何的子模式。的 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 字符被用来将子模式分离。组不能嵌套。</target>
        </trans-unit>
        <trans-unit id="4383cedf66c99d541142d23205794e9fbe074f11" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;action&lt;/em&gt;. For a permission you need, this is one of the actions in the list &lt;a href=&quot;#action-list&quot;&gt;below&lt;/a&gt;. For a permission you have, this is a comma-separated list of those actions, or &lt;code&gt;*&lt;/code&gt;, representing all actions.</source>
          <target state="translated">该&lt;em&gt;行动&lt;/em&gt;。要获得您所需的许可，这是&lt;a href=&quot;#action-list&quot;&gt;下面&lt;/a&gt;列表中的操作之一。对于您拥有的权限，这是这些操作的逗号分隔列表，或 &lt;code&gt;*&lt;/code&gt; ，表示所有操作。</target>
        </trans-unit>
        <trans-unit id="4203e1844ba2358b9cf99e65861fc5814fcbd135" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;canonical key property list&lt;/em&gt; is the same string as described for &lt;a href=&quot;objectname#getCanonicalKeyPropertyListString--&quot;&gt;&lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;规范的键属性列表&lt;/em&gt;是作为描述的相同字符串&lt;a href=&quot;objectname#getCanonicalKeyPropertyListString--&quot;&gt; &lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0da932c873e0a87699cfc16c3ea52c0b2e0de4c0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;class name&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;类名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b34ed1bdfeb4a02859cb87fc0dd3c70da93cc4ac" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;domain&lt;/em&gt; is a string of characters not including the character colon (&lt;code&gt;:&lt;/code&gt;). It is recommended that the domain should not contain the string &quot;&lt;code&gt;//&lt;/code&gt;&quot;, which is reserved for future use.</source>
          <target state="translated">所述&lt;em&gt;域&lt;/em&gt;是字符不包括字符结肠的一个字符串（ &lt;code&gt;:&lt;/code&gt; ）。建议该域不应包含字符串&amp;ldquo; &lt;code&gt;//&lt;/code&gt; &amp;rdquo;，该字符串保留供将来使用。</target>
        </trans-unit>
        <trans-unit id="4031de43ef1c59b0c68ad4834eee900eefebe3c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;head&lt;/em&gt; of this queue is the &lt;em&gt;least&lt;/em&gt; element with respect to the specified ordering. If multiple elements are tied for least value, the head is one of those elements -- ties are broken arbitrarily. The queue retrieval operations &lt;code&gt;poll&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;peek&lt;/code&gt;, and &lt;code&gt;element&lt;/code&gt; access the element at the head of the queue.</source>
          <target state="translated">就指定的顺序而言，此队列的&lt;em&gt;头&lt;/em&gt;是&lt;em&gt;最小的&lt;/em&gt;元素。如果多个元素的价值最小，那么头就是那些元素之一-领带被任意打破。队列检索操作 &lt;code&gt;poll&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;peek&lt;/code&gt; 和 &lt;code&gt;element&lt;/code&gt; 访问队列开头的元素。</target>
        </trans-unit>
        <trans-unit id="132748ef7ce7edd118fa2aec50bbb6b7013d4a04" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;key properties&lt;/em&gt; are an unordered set of keys and associated values.</source>
          <target state="translated">所述&lt;em&gt;关键属性&lt;/em&gt;是一组无序密钥和相关联的值。</target>
        </trans-unit>
        <trans-unit id="49b6c7b812bfb37bbfa829d277662d381281a9fd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mapped&lt;/em&gt; Java type, &lt;em&gt;opendata(J)&lt;/em&gt;, which is always the same for any given &lt;em&gt;opentype(J)&lt;/em&gt;. This is a Java class.</source>
          <target state="translated">所述&lt;em&gt;映射的&lt;/em&gt; Java类型，&lt;em&gt;将opendata（J） &lt;/em&gt;，这始终是对于任何给定的相同&lt;em&gt;的OpenType（J） &lt;/em&gt;。这是一个Java类。</target>
        </trans-unit>
        <trans-unit id="bbb454761775dc1a414464798499aeee43da2b26" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;member&lt;/em&gt;.</source>
          <target state="translated">该&lt;em&gt;成员&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="074cbd71c6bb024356bb7396d0de2ecfe45082b5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; of the permission can also denote a list of one or more comma-separated operations. Spaces are allowed at the beginning and end of the &lt;em&gt;name&lt;/em&gt; and before and after commas.</source>
          <target state="translated">权限的&lt;em&gt;名称&lt;/em&gt;也可以表示一个或多个逗号分隔的操作的列表。&lt;em&gt;名称&lt;/em&gt;的开头和结尾以及逗号前后可以使用空格。</target>
        </trans-unit>
        <trans-unit id="9480872eca819a401a143d99801ef4a81e78cc7a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object name&lt;/em&gt;.</source>
          <target state="translated">该&lt;em&gt;对象名称&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f0e83e021e240eac4fd2981ea6d32868e52f81d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname consists of the pathname's prefix, if any, and each name in the pathname's name sequence except for the last. If the name sequence is empty then the pathname does not name a parent directory.</source>
          <target state="translated">抽象路径名的&lt;em&gt;父级&lt;/em&gt;由路径名的前缀（如果有）以及路径名的名称序列中的每个名称（最后一个除外）组成。如果名称序列为空，则路径名不会命名父目录。</target>
        </trans-unit>
        <trans-unit id="d0528ba347878b821ba42755b3a17661463c339f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname may be obtained by invoking the &lt;a href=&quot;file#getParent--&quot;&gt;&lt;code&gt;getParent()&lt;/code&gt;&lt;/a&gt; method of this class and consists of the pathname's prefix and each name in the pathname's name sequence except for the last. Each directory's absolute pathname is an ancestor of any &lt;code&gt;File&lt;/code&gt; object with an absolute abstract pathname which begins with the directory's absolute pathname. For example, the directory denoted by the abstract pathname &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; is an ancestor of the directory denoted by the pathname &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">可以通过调用此类的&lt;a href=&quot;file#getParent--&quot;&gt; &lt;code&gt;getParent()&lt;/code&gt; &lt;/a&gt;方法获得抽象路径名的&lt;em&gt;父级&lt;/em&gt;，该&lt;em&gt;父&lt;/em&gt;路径名由路径名的前缀和路径名的名称序列中的每个名称（最后一个除外）组成。每个目录的绝对路径名是具有绝对抽象路径名的任何 &lt;code&gt;File&lt;/code&gt; 对象的祖先，该绝对抽象路径名以目录的绝对路径名开头。例如，抽象路径名 &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; 表示的目录是路径名 &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt; 表示的目录的祖先。</target>
        </trans-unit>
        <trans-unit id="3219f3facb21696d1ed20d4e54a6c99ee13262e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pattern indication&lt;/em&gt; is:</source>
          <target state="translated">的&lt;em&gt;图案指示&lt;/em&gt;是：</target>
        </trans-unit>
        <trans-unit id="e24706d6569ad24b7b450fbbe13dd7ea6ed5e827" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;time-to-live&lt;/em&gt; for Internet Protocol (IP) multicast datagrams</source>
          <target state="translated">的&lt;em&gt;时间到现场&lt;/em&gt;的互联网协议（IP）多播数据报</target>
        </trans-unit>
        <trans-unit id="2a0f0d9a04c7aa959de016e80e8a27f487dc3d88" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;time-to-live&lt;/em&gt; for Internet Protocol (IP) multicast datagrams.</source>
          <target state="translated">的&lt;em&gt;时间到现场&lt;/em&gt;的互联网协议（IP）多播数据报。</target>
        </trans-unit>
        <trans-unit id="a5cbd78bbaec3014307f658d756d06fe19f45c6b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;outer&lt;/var&gt; parameter is a pointer to the MBeanServer that should be passed to the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface when registering MBeans inside the MBeanServer. If &lt;var&gt;outer&lt;/var&gt; is &lt;code&gt;null&lt;/code&gt;, then the MBeanServer implementation must use its own &lt;code&gt;this&lt;/code&gt; reference when invoking the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">所述 &lt;var&gt;outer&lt;/var&gt; 参数是一个指向应该被传递到所述的MBeanServer &lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;登记的MBeanServer内部的MBean当接口。如果 &lt;var&gt;outer&lt;/var&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则在调用&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;接口时，MBeanServer实现必须使用其自身的 &lt;code&gt;this&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="f59eba20773f5628795f2594c47e23e68f64a277" translate="yes" xml:space="preserve">
          <source>The ACL Entries in each ACL observe the following rules:</source>
          <target state="translated">每个ACL中的ACL条目遵守以下规则。</target>
        </trans-unit>
        <trans-unit id="8bff27e96b6704d8f87499203e5a6ae8eb995398" translate="yes" xml:space="preserve">
          <source>The ACL entry represented by this class is based on the ACL model specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. Each entry has four components as follows:</source>
          <target state="translated">此类表示的ACL条目基于&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：网络文件系统（NFS）版本4协议中&lt;/i&gt;&lt;/a&gt;指定的ACL模型。每个条目具有四个组成部分，如下所示：</target>
        </trans-unit>
        <trans-unit id="36548e1972814e3b9960a257ac0e7fefe094719d" translate="yes" xml:space="preserve">
          <source>The API has a relatively large surface area in terms of number of methods. This is made manageable through the use of consistent method prefixes.</source>
          <target state="translated">API在方法数量上有一个相对较大的表面积。通过使用一致的方法前缀,这一点是可以管理的。</target>
        </trans-unit>
        <trans-unit id="dbd68d7bbcc6cfd76b2979294dc860ef940a8a77" translate="yes" xml:space="preserve">
          <source>The API has been designed to reject null early and to be clear about this behavior. A key exception is any method that takes an object and returns a boolean, for the purpose of checking or validating, will generally return false for null.</source>
          <target state="translated">API的设计是为了尽早拒绝null,并明确这种行为。一个关键的例外是,任何接受一个对象并返回一个布尔值的方法,出于检查或验证的目的,一般都会为null返回false。</target>
        </trans-unit>
        <trans-unit id="5d2d1219bb89c1b00654a21e6d21d64a9c99c7dd" translate="yes" xml:space="preserve">
          <source>The API includes remote access, so a remote management program can interact with a running application for these purposes.</source>
          <target state="translated">API包括远程访问,因此远程管理程序可以与正在运行的应用程序进行交互,达到这些目的。</target>
        </trans-unit>
        <trans-unit id="0ddb46698ab6320ca268f051f9fdff93cea456dc" translate="yes" xml:space="preserve">
          <source>The API is also designed for user extensibility, as there are many ways of calculating time. The &lt;a href=&quot;temporal/temporalfield&quot;&gt;field&lt;/a&gt; and &lt;a href=&quot;temporal/temporalunit&quot;&gt;unit&lt;/a&gt; API, accessed via &lt;a href=&quot;temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt; provide considerable flexibility to applications. In addition, the &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; interfaces provide day-to-day power, allowing code to read close to business requirements:</source>
          <target state="translated">该API还为用户扩展性而设计，因为有许多计算时间的方法。通过&lt;a href=&quot;temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;temporal/temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; &lt;/a&gt;访问的&lt;a href=&quot;temporal/temporalfield&quot;&gt;字段&lt;/a&gt;和&lt;a href=&quot;temporal/temporalunit&quot;&gt;单元&lt;/a&gt; API 为应用程序提供了相当大的灵活性。另外，&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;temporal/temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;接口提供日常功能，允许代码读取接近业务需求的代码：</target>
        </trans-unit>
        <trans-unit id="14204c857d829d56ea62ee7c57aa99da1a8c1fa8" translate="yes" xml:space="preserve">
          <source>The API is designed to be type-safe where reasonable in the main high-level API. Thus, there are separate classes for the distinct concepts of date, time and date-time, plus variants for offset and time-zone. This can seem like a lot of classes, but most applications can begin with just five date/time types.</source>
          <target state="translated">在主要的高级API中,API被设计成在合理的情况下是类型安全的,因此,有单独的类用于日期、时间和日期-时间的不同概念,还有偏移和时区的变体。因此,日期、时间和日期-时间这些不同的概念都有单独的类,还有偏移和时区的变体。这看起来好像有很多类,但大多数应用程序可以从五个日期/时间类型开始。</target>
        </trans-unit>
        <trans-unit id="1d7455826253bffa39b78615725dcdd563f19a04" translate="yes" xml:space="preserve">
          <source>The API requires every print service to support certain attributes; other attributes are optional and the service can choose whether or not to support them. Each attribute has a set of values that it accepts. The API requires every print service to support certain values for certain attributes; other attribute values are optional and the service can choose whether or not to support them. These support requirements are recorded in the documentation for each attribute class.</source>
          <target state="translated">API 要求每个打印服务都支持某些属性;其他属性是可选的,服务可以选择是否支持这些属性。每个属性都有一组可接受的值。API 要求每个打印服务支持某些属性的特定值;其他属性值是可选的,服务可以选择是否支持它们。这些支持要求记录在每个属性类的文档中。</target>
        </trans-unit>
        <trans-unit id="98bf436512bc6abd974a2733430a3d5b5a388d6c" translate="yes" xml:space="preserve">
          <source>The APIs added in 1.7 map between the old and new language codes, maintaining the old codes internal to Locale (so that &lt;code&gt;getLanguage&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; reflect the old code), but using the new codes in the BCP 47 language tag APIs (so that &lt;code&gt;toLanguageTag&lt;/code&gt; reflects the new one). This preserves the equivalence between Locales no matter which code or API is used to construct them. Java's default resource bundle lookup mechanism also implements this mapping, so that resources can be named using either convention, see &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">1.7中添加的API在新旧语言代码之间进行映射，从而维护Locale内部的旧代码（以便 &lt;code&gt;getLanguage&lt;/code&gt; 和 &lt;code&gt;toString&lt;/code&gt; 反映旧代码），但在BCP 47语言标签API中使用新代码（以便 &lt;code&gt;toLanguageTag&lt;/code&gt; 反映新的那一个）。无论使用哪种代码或API构造语言环境，都可以保留语言环境之间的等效性。Java的默认资源包查找机制也实现了此映射，因此可以使用任何一种约定来命名&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;，请参见ResourceBundle.Control。</target>
        </trans-unit>
        <trans-unit id="1e8aa36e1e31661c0e8ce5465a873be7b0631796" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition for this is:</source>
          <target state="translated">ASN.1对此的定义是:</target>
        </trans-unit>
        <trans-unit id="943be2a0bc4bf87f26928040bf4bf42222a1a4d3" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition is as follows:</source>
          <target state="translated">ASN.1的定义如下:</target>
        </trans-unit>
        <trans-unit id="47734034dda78f218c309ac08628f954c60425f3" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;GeneralNames&lt;/code&gt; is defined in &lt;a href=&quot;x509certificate#getSubjectAlternativeNames--&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GeneralNames&lt;/code&gt; 的ASN.1定义在&lt;a href=&quot;x509certificate#getSubjectAlternativeNames--&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; 中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="8d4394df37dee40fdf32c164d9e7675520b84225" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;tbsCertList&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;tbsCertList&lt;/code&gt; 的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="f3b0786ad17cd85c2406e5dec048d22519850b47" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;tbsCertificate&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;tbsCertificate&lt;/code&gt; 的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="ef48af476f938c6dbaa3d39664736786a596b706" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of the &lt;code&gt;IssuerAltName&lt;/code&gt; extension is:</source>
          <target state="translated">&lt;code&gt;IssuerAltName&lt;/code&gt; 扩展的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="f3bfe2daf1a8d1055520bbddc7ce3310410386b4" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of the &lt;code&gt;SubjectAltName&lt;/code&gt; extension is:</source>
          <target state="translated">&lt;code&gt;SubjectAltName&lt;/code&gt; 扩展的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="0669e573aa756da1edc3404f2ca12e839dcd44e2" translate="yes" xml:space="preserve">
          <source>The AccessControlContext of the thread that created the instance of URLClassLoader will be used when subsequently loading classes and resources.</source>
          <target state="translated">当后续加载类和资源时,将使用创建URLClassLoader实例的线程的AccessControlContext。</target>
        </trans-unit>
        <trans-unit id="b36f05d0d881d326a4ca7052f41c11e7cb29b4d8" translate="yes" xml:space="preserve">
          <source>The AccessController class is used for access control operations and decisions.</source>
          <target state="translated">AccessController类用于访问控制操作和决策。</target>
        </trans-unit>
        <trans-unit id="e44ca12442a1e7b0c2ea9c89fdb764999e8954ae" translate="yes" xml:space="preserve">
          <source>The AccessibleObject class is the base class for Field, Method and Constructor objects.</source>
          <target state="translated">AccessibleObject 类是 Field、Method 和 Constructor 对象的基类。</target>
        </trans-unit>
        <trans-unit id="6a4566430ddc25f7244284392e568dac22b82186" translate="yes" xml:space="preserve">
          <source>The AccessibleObject class is the base class for Field, Method and Constructor objects. It provides the ability to flag a reflected object as suppressing default Java language access control checks when it is used. The access checks--for public, default (package) access, protected, and private members--are performed when Fields, Methods or Constructors are used to set or get fields, to invoke methods, or to create and initialize new instances of classes, respectively.</source>
          <target state="translated">AccessibleObject 类是 Field、Method 和 Constructor 对象的基类。它提供了在使用反射对象时将其标记为抑制默认的Java语言访问控制检查的能力。当使用Field、Method或Constructors分别设置或获取字段、调用方法或创建和初始化类的新实例时,就会执行访问控制检查--对于公共的、默认的(包)访问、受保护的和私有的成员。</target>
        </trans-unit>
        <trans-unit id="6784e3abc090fab94e5244fcbe90ade6d9424123" translate="yes" xml:space="preserve">
          <source>The AllPermission is a permission that implies all other permissions.</source>
          <target state="translated">AllPermission是一个意味着其他所有权限的权限。</target>
        </trans-unit>
        <trans-unit id="e40e5d487b331e1f7f4c2477322a84662ea1dcde" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming</source>
          <target state="translated">计算机编程的艺术</target>
        </trans-unit>
        <trans-unit id="3e916cc17dff2d73e810c4085e8846b18e562a3e" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming,</source>
          <target state="translated">计算机编程的艺术。</target>
        </trans-unit>
        <trans-unit id="d69bacd54b669ff7d878e60414c2d1f8611ca3a2" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming, Volume 2</source>
          <target state="translated">计算机编程艺术》第二卷</target>
        </trans-unit>
        <trans-unit id="545bef1b9e1299301bb2907b1e213bfe088b7b67" translate="yes" xml:space="preserve">
          <source>The Attribute with attrID that was previous in this attribute set; null if no such attribute existed.</source>
          <target state="translated">此属性集中之前的attrID的属性;如果不存在这样的属性,则为空。</target>
        </trans-unit>
        <trans-unit id="86989bf0d4a1d404f5eef67b394b9e8347a4cb82" translate="yes" xml:space="preserve">
          <source>The Attribute with the same ID as attr that was previous in this attribute set; null if no such attribute existed.</source>
          <target state="translated">与此属性集中之前的attr相同ID的属性;如果不存在这样的属性,则为空。</target>
        </trans-unit>
        <trans-unit id="188be4b00e3695b200467797aef29ec1a27bdb7b" translate="yes" xml:space="preserve">
          <source>The Attribute with the same ID as attrID that was previous in the attribute set; null if no such attribute existed.</source>
          <target state="translated">属性集中与attrID相同ID的属性;如果不存在这样的属性,则为空。</target>
        </trans-unit>
        <trans-unit id="17831de708d75ed43f9af6c62286f3a3d590fbe3" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values.</source>
          <target state="translated">Attributes类将Manifest属性名映射到相关的字符串值。</target>
        </trans-unit>
        <trans-unit id="11106864e8cece63f4df274160f30c89327ce115" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</source>
          <target state="translated">Attributes类将Manifest属性名映射到相关的字符串值。有效的属性名不区分大小写,限制在ASCII字符集[0-9a-zA-Z_-]中,长度不能超过70个字符。属性值可以包含任何字符,并在写入输出流时进行UTF8编码。有关有效属性名和值的更多信息,请参见JAR文件规范。</target>
        </trans-unit>
        <trans-unit id="5b1b32f55e754aebc8c66e80e5a265f6ce9b4d29" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map.</source>
          <target state="translated">Attributes.Name类表示存储在这个Map中的属性名。</target>
        </trans-unit>
        <trans-unit id="130d29f5e1935938287de918b31d59eac532adc8" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</source>
          <target state="translated">Attributes.Name类表示存储在该Map中的属性名。有效的属性名不区分大小写,限制在[0-9a-zA-Z_-]集合中的ASCII字符,长度不能超过70个字符。属性值可以包含任何字符,并在写入输出流时进行UTF8编码。有关有效属性名和值的更多信息,请参见JAR文件规范。</target>
        </trans-unit>
        <trans-unit id="933c13e97de653f311c0095da4356feb1ef9aa07" translate="yes" xml:space="preserve">
          <source>The BIDI_EMBEDDING attribute in the text, if present, represents embedding level information. Negative values from -1 to -62 indicate overrides at the absolute value of the level. Positive values from 1 to 62 indicate embeddings. Where values are zero or not defined, the base embedding level as determined by the base direction is assumed.</source>
          <target state="translated">文本中的BIDI_EMBEDDING属性,如果存在,表示嵌入水平信息。从-1到-62的负值表示以级别的绝对值覆盖。从1到62的正值表示嵌入。当值为零或未定义时,则假定为基本方向确定的基本嵌入级别。</target>
        </trans-unit>
        <trans-unit id="479b03243c34870565e01fcb4d8b7558405fd430" translate="yes" xml:space="preserve">
          <source>The Base64 padding character &lt;code&gt;'='&lt;/code&gt; is accepted and interpreted as the end of the encoded byte data, but is not required. So if the final unit of the encoded byte data only has two or three Base64 characters (without the corresponding padding character(s) padded), they are decoded as if followed by padding character(s). If there is a padding character present in the final unit, the correct number of padding character(s) must be present, otherwise &lt;code&gt;IllegalArgumentException&lt;/code&gt; ( &lt;code&gt;IOException&lt;/code&gt; when reading from a Base64 stream) is thrown during decoding.</source>
          <target state="translated">Base64填充字符 &lt;code&gt;'='&lt;/code&gt; 被接受并解释为已编码字节数据的末尾，但不是必需的。因此，如果编码的字节数据的最后单元仅包含两个或三个Base64字符（没有填充相应的填充字符），则将它们解码为如同后面跟着填充字符一样。如果最终单元中存在填充字符，则必须存在正确数量的填充字符，否则在解码过程中会抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; （从Base64流中读取时为 &lt;code&gt;IOException&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7f2fa42fffaffc455185b2641418acb565381be2" translate="yes" xml:space="preserve">
          <source>The BasicPermission class extends the Permission class, and can be used as the base class for permissions that want to follow the same naming convention as BasicPermission.</source>
          <target state="translated">BasicPermission类是Permission类的扩展,可以作为希望遵循与BasicPermission相同命名惯例的权限的基类。</target>
        </trans-unit>
        <trans-unit id="d8109724094de0721a57a12d33075bebc3a6c1d9" translate="yes" xml:space="preserve">
          <source>The BasicReason enumerates the potential reasons that a certification path of any type may be invalid.</source>
          <target state="translated">BasicReason列举了任何类型的认证路径可能无效的潜在原因。</target>
        </trans-unit>
        <trans-unit id="7f2f07330207c79bdf9b8035cdfc8c33b0b86b6f" translate="yes" xml:space="preserve">
          <source>The BeanContext acts a logical hierarchical container for JavaBeans.</source>
          <target state="translated">BeanContext作为JavaBeans的逻辑层次容器。</target>
        </trans-unit>
        <trans-unit id="db9f214e6794613d1af4a4bd16aca364a324671d" translate="yes" xml:space="preserve">
          <source>The BeanContextServices interface provides a mechanism for a BeanContext to expose generic &quot;services&quot; to the BeanContextChild objects within.</source>
          <target state="translated">BeanContextServices接口为BeanContext提供了一种机制,用于向其中的BeanContextChild对象公开通用的 &quot;服务&quot;。</target>
        </trans-unit>
        <trans-unit id="61f473874cda4877ad49e4b4e18b2669d648bcfa" translate="yes" xml:space="preserve">
          <source>The BigInteger constant one.</source>
          <target state="translated">BigInteger常数一。</target>
        </trans-unit>
        <trans-unit id="4fe20da433bea836e2620a8e5bd24465caa34b0d" translate="yes" xml:space="preserve">
          <source>The BigInteger constant ten.</source>
          <target state="translated">大整数常数十。</target>
        </trans-unit>
        <trans-unit id="eaa19daee6ceb68fa207da723944fc65078e9b5c" translate="yes" xml:space="preserve">
          <source>The BigInteger constant zero.</source>
          <target state="translated">BigInteger常数为零。</target>
        </trans-unit>
        <trans-unit id="f2abfa8bc11f1cc0906af68cb43302c5e56e7dbc" translate="yes" xml:space="preserve">
          <source>The Boolean class wraps a value of the primitive type &lt;code&gt;boolean&lt;/code&gt; in an object.</source>
          <target state="translated">布尔类将原始类型 &lt;code&gt;boolean&lt;/code&gt; 的值包装在对象中。</target>
        </trans-unit>
        <trans-unit id="d66eb41900b1a53b5e15c061f84c26f96aec8f20" translate="yes" xml:space="preserve">
          <source>The Boolean class wraps a value of the primitive type &lt;code&gt;boolean&lt;/code&gt; in an object. An object of type &lt;code&gt;Boolean&lt;/code&gt; contains a single field whose type is &lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">布尔类将原始类型 &lt;code&gt;boolean&lt;/code&gt; 的值包装在对象中。 &lt;code&gt;Boolean&lt;/code&gt; 类型的对象包含一个类型为 &lt;code&gt;boolean&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="730ba74f50d3f28436fa29f532e375e6c0695ab2" translate="yes" xml:space="preserve">
          <source>The CPU time provided by this interface has nanosecond precision but not necessarily nanosecond accuracy.</source>
          <target state="translated">这个接口提供的CPU时间有纳秒级的精度,但不一定有纳秒级的精度。</target>
        </trans-unit>
        <trans-unit id="e8f7f2f7ff227a32e7a5531eecf91cf56365cd7f" translate="yes" xml:space="preserve">
          <source>The CRL or OCSP response cannot be obtained because of a network error.</source>
          <target state="translated">由于网络错误,无法获得CRL或OCSP响应。</target>
        </trans-unit>
        <trans-unit id="b4d351c3db241b4d379234c7ac2cb5765fab41d2" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt; RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">CRLReason枚举指定了证书被吊销的原因，如&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280：Internet X.509公钥基础结构证书和CRL配置文件所定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33f1a9e451f535334439b331e5952fb5eceaa417" translate="yes" xml:space="preserve">
          <source>The Character Encoding is not supported.</source>
          <target state="translated">不支持字符编码。</target>
        </trans-unit>
        <trans-unit id="5a47ec8afb6ab11bcf60e2a316aaa05ee5d6f88e" translate="yes" xml:space="preserve">
          <source>The Class Loader Repository used by the given MBeanServer.</source>
          <target state="translated">给定的MBeanServer使用的类加载器存储库。</target>
        </trans-unit>
        <trans-unit id="004f0206b3d3d849c825f918d9b68ef429b3b940" translate="yes" xml:space="preserve">
          <source>The Class object for the bean's customizer. This may be null if the bean doesn't have a customizer.</source>
          <target state="translated">bean的自定义器的类对象。如果Bean没有自定义器,这个对象可能为空。</target>
        </trans-unit>
        <trans-unit id="537754527d3370203382836d7cb800a91b8ee729" translate="yes" xml:space="preserve">
          <source>The Class object for the bean.</source>
          <target state="translated">bean的Class对象。</target>
        </trans-unit>
        <trans-unit id="df1481dabe3eac178ff1405ee9b4259ce1e6e7a5" translate="yes" xml:space="preserve">
          <source>The Class object for the target interface that will get invoked when the event is fired.</source>
          <target state="translated">目标接口的Class对象,当事件被触发时,目标接口将被调用。</target>
        </trans-unit>
        <trans-unit id="7eac5b9958cd8cfff4271334618aee040eeba806" translate="yes" xml:space="preserve">
          <source>The Class object representing the primitive type boolean.</source>
          <target state="translated">表示基元类型boolean的Class对象。</target>
        </trans-unit>
        <trans-unit id="d40630063d92d99c85238befefd749074cac2197" translate="yes" xml:space="preserve">
          <source>The ClassLoader used for that MBean. If &lt;var&gt;l&lt;/var&gt; is the MBean's actual ClassLoader, and &lt;var&gt;r&lt;/var&gt; is the returned value, then either:</source>
          <target state="translated">用于该MBean的ClassLoader。如果 &lt;var&gt;l&lt;/var&gt; 是MBean的实际ClassLoader，而 &lt;var&gt;r&lt;/var&gt; 是返回值，则可以：</target>
        </trans-unit>
        <trans-unit id="66051b6d430a30f6ea7fd611d6e0df14e41ad561" translate="yes" xml:space="preserve">
          <source>The ClassLoaderRepository for this MBeanServer.</source>
          <target state="translated">该MBeanServer的ClassLoaderRepository。</target>
        </trans-unit>
        <trans-unit id="2fd3574d8c10f0ef7d993b723f5632e342d0a6ee" translate="yes" xml:space="preserve">
          <source>The CodeBase and Signedby components of the triplet name/value pairs are optional. If they are not present, then any any codebase will match, and any signer (including unsigned code) will match. For Example,</source>
          <target state="translated">三联名/值对的CodeBase和Signedby组件是可选的。如果它们不存在,那么任何代码库都会匹配,任何签名者(包括无符号代码)都会匹配。例如</target>
        </trans-unit>
        <trans-unit id="2ced5dc3156a8a4a80da644c296c6141e4689e3c" translate="yes" xml:space="preserve">
          <source>The DTD specification is provided as Appendix A to the Java Logging APIs specification.</source>
          <target state="translated">DTD规范作为Java日志API规范的附录A提供。</target>
        </trans-unit>
        <trans-unit id="c016969447ee027a7d4e0c0671983d0d54d60bd4" translate="yes" xml:space="preserve">
          <source>The Descriptor fields contributed in this way by different annotations on the same program element must be consistent. That is, two different annotations, or two members of the same annotation, must not define a different value for the same Descriptor field. Fields from annotations on a getter method must also be consistent with fields from annotations on the corresponding setter method.</source>
          <target state="translated">同一程序元素上的不同注解以这种方式贡献的 Descriptor 字段必须一致。也就是说,两个不同的注解,或者同一个注解的两个成员,不能为同一个Descriptor字段定义不同的值。来自getter方法上的注解的字段也必须与来自对应setter方法上的注解的字段一致。</target>
        </trans-unit>
        <trans-unit id="6bee60701b79c62232ecee0abd5ca5f3df40a69c" translate="yes" xml:space="preserve">
          <source>The Descriptor resulting from these annotations will be merged with any Descriptor fields provided by the implementation, such as the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;immutableInfo&lt;/code&gt;&lt;/a&gt; field for an MBean. The fields from the annotations must be consistent with these fields provided by the implementation.</source>
          <target state="translated">这些注释产生的Descriptor将与实现提供的任何Descriptor字段合并，例如MBean 的&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt;immutableInfo&lt;/code&gt; &lt;/a&gt;字段。批注中的字段必须与实现提供的这些字段一致。</target>
        </trans-unit>
        <trans-unit id="c9d5aea86dc06f534995783c5eed783935bbadb9" translate="yes" xml:space="preserve">
          <source>The Directory Context</source>
          <target state="translated">目录上下文</target>
        </trans-unit>
        <trans-unit id="9467ddc0b1822e3f422eef8fbcd692138357cb1f" translate="yes" xml:space="preserve">
          <source>The ErrorManager's &quot;error&quot; method will be invoked if any errors occur while using this Handler.</source>
          <target state="translated">如果在使用该处理程序时发生任何错误,ErrorManager的 &quot;error &quot;方法将被调用。</target>
        </trans-unit>
        <trans-unit id="4d4c7427ed03e2196382cf762ac3a454fd9aad30" translate="yes" xml:space="preserve">
          <source>The FeatureDescriptor class is the common baseclass for PropertyDescriptor, EventSetDescriptor, and MethodDescriptor, etc.</source>
          <target state="translated">FeatureDescriptor类是PropertyDescriptor、EventSetDescriptor和MethodDescriptor等的通用基类。</target>
        </trans-unit>
        <trans-unit id="6e02d9b92b748aa46a1fe40c56191a70c2db37b1" translate="yes" xml:space="preserve">
          <source>The ForkJoinTask class is not usually directly subclassed. Instead, you subclass one of the abstract classes that support a particular style of fork/join processing, typically &lt;a href=&quot;recursiveaction&quot;&gt;&lt;code&gt;RecursiveAction&lt;/code&gt;&lt;/a&gt; for most computations that do not return results, &lt;a href=&quot;recursivetask&quot;&gt;&lt;code&gt;RecursiveTask&lt;/code&gt;&lt;/a&gt; for those that do, and &lt;a href=&quot;countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt; for those in which completed actions trigger other actions. Normally, a concrete ForkJoinTask subclass declares fields comprising its parameters, established in a constructor, and then defines a &lt;code&gt;compute&lt;/code&gt; method that somehow uses the control methods supplied by this base class.</source>
          <target state="translated">ForkJoinTask类通常不直接子类化。相反，你的子类，支持叉的特定风格的抽象类的一个/连接处理，通常&lt;a href=&quot;recursiveaction&quot;&gt; &lt;code&gt;RecursiveAction&lt;/code&gt; &lt;/a&gt;对于不返回结果大多数计算，&lt;a href=&quot;recursivetask&quot;&gt; &lt;code&gt;RecursiveTask&lt;/code&gt; &lt;/a&gt;对于那些做的，&lt;a href=&quot;countedcompleter&quot;&gt; &lt;code&gt;CountedCompleter&lt;/code&gt; &lt;/a&gt;对于那些在已完成的操作触发其它动作。通常，具体的ForkJoinTask子类声明在构造函数中建立的包含其参数的字段，然后定义一个以某种方式使用此基类提供的控制方法的 &lt;code&gt;compute&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b623035f5596637c9505afc931878e7c86c5b5b2" translate="yes" xml:space="preserve">
          <source>The GCM specification states that &lt;code&gt;tLen&lt;/code&gt; may only have the values {128, 120, 112, 104, 96}, or {64, 32} for certain applications. Other values can be specified for this class, but not all CSP implementations will support them.</source>
          <target state="translated">GCM规范指出，对于某些应用， &lt;code&gt;tLen&lt;/code&gt; 可能仅具有值{ 128、120、112、104、96 }或{64、32}。可以为此类指定其他值，但并非所有CSP实现都将支持它们。</target>
        </trans-unit>
        <trans-unit id="21c0818ef96710144df08a551d7b266882d023aa" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in guarantees lossless writing for images which meet the following requirements:</source>
          <target state="translated">GIF图像编写插件可以保证满足以下要求的图像的无损编写。</target>
        </trans-unit>
        <trans-unit id="69631d7c8bd6040a091b247bf1496d5ed878fb6f" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format  javax_imageio_gif_stream_1.0  or the standard metadata format  javax_imageio_1.0, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format  javax_imageio_gif_image_1.0  or the standard metadata format javax_imageio_1.0. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables  here .</source>
          <target state="translated">GIF图像写作者插件支持将提供给写作者的元数据设置为原生GIF流元数据格式javax_imageio_gif_stream_1.0或标准元数据格式javax_imageio_1.0,并将提供给写作者的元数据设置为原生GIF图像元数据格式javax_imageio_gif_image_1.0或标准元数据格式javax_imageio_1.0。标准元数据格式与GIF原生流和图像元数据格式的映射在这里的表格中给出。</target>
        </trans-unit>
        <trans-unit id="5fe47dfc42c1004ae9afdedd5c749c38a37ee470" translate="yes" xml:space="preserve">
          <source>The GIF writer plug-in supports the creation of animated GIF images through the standard sequence writing methods defined in the &lt;code&gt;ImageWriter&lt;/code&gt; class.</source>
          <target state="translated">GIF编写器插件支持通过 &lt;code&gt;ImageWriter&lt;/code&gt; 类中定义的标准序列编写方法来创建动画GIF图像。</target>
        </trans-unit>
        <trans-unit id="7c0eb54612e1b91b3d550046715cc18734cac067" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated.</source>
          <target state="translated">生成注解用于标记已经生成的源代码。</target>
        </trans-unit>
        <trans-unit id="e14d8067e3c65f5d662592905874e96a639ba661" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated. It can also be used to differentiate user written code from generated code in a single file. When used, the value element must have the name of the code generator. The recommended convention is to use the fully qualified name of the code generator in the value field .</source>
          <target state="translated">生成注解用于标记已经生成的源代码,也可以用来区分单个文件中用户编写的代码和生成的代码。它也可以用来区分单个文件中用户编写的代码和生成的代码。使用时,值元素必须有代码生成器的名称。推荐的惯例是在值域中使用代码生成器的全称。</target>
        </trans-unit>
        <trans-unit id="034f52c179ed2f285aff346a1a725164486ab642" translate="yes" xml:space="preserve">
          <source>The HTTP cookie management in java.net package looks like:</source>
          <target state="translated">java.net包中的HTTP cookie管理是这样的。</target>
        </trans-unit>
        <trans-unit id="7b3a512be37bd12625c3a8628efd22b37676aac1" translate="yes" xml:space="preserve">
          <source>The HTTP method (GET,POST,PUT,etc.).</source>
          <target state="translated">HTTP方法(GET,POST,PUT等)。</target>
        </trans-unit>
        <trans-unit id="2d94af71e4f20cb6dbee51f81cf708d34fd43e9a" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers Proxy settings as well as  various other settings.</source>
          <target state="translated">HTTP协议处理程序有一些设置,可以通过系统属性访问。这包括代理设置以及其他各种设置。</target>
        </trans-unit>
        <trans-unit id="0965d22a7cf7456f138f50ade9b626d2ce1a8ce8" translate="yes" xml:space="preserve">
          <source>The HTTP response message.</source>
          <target state="translated">HTTP响应信息。</target>
        </trans-unit>
        <trans-unit id="76c37afd4ebfca43ecc7113a9e735aed8c4a4c59" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar has a different total of days in a year than Gregorian calendar, and the length of each month is based on the period of a complete revolution of the moon around the earth (as between successive new moons). Refer to the &lt;a href=&quot;hijrahchronology&quot;&gt;&lt;code&gt;HijrahChronology&lt;/code&gt;&lt;/a&gt; for details of supported variants.</source>
          <target state="translated">希拉（Hijrah）日历一年中的总天数与格里高利历不同，并且每个月的长度基于月球绕地球完整公转的周期（在连续的新月之间）。有关支持的变体的详细信息，请参考&lt;a href=&quot;hijrahchronology&quot;&gt; &lt;code&gt;HijrahChronology&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cbb0a5265ed2b32362a56646ea33dae11e8ddd1" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar is a lunar calendar supporting Islamic calendars.</source>
          <target state="translated">Hijrah历是支持伊斯兰历法的农历。</target>
        </trans-unit>
        <trans-unit id="5ef062b6d3746a7faa9fd4ff82681d5f88437d55" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar system has one era, 'AH', defined by &lt;a href=&quot;hijrahera&quot;&gt;&lt;code&gt;HijrahEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hijrah日历系统有一个时代，即&lt;a href=&quot;hijrahera&quot;&gt; &lt;code&gt;HijrahEra&lt;/code&gt; &lt;/a&gt;定义的&amp;ldquo; AH&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="e597c41e9fa5f54ee9b2548de5fc25d85b9400b7" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar system has only one era covering the proleptic years greater than zero.</source>
          <target state="translated">Hijrah历法只有一个时代,涵盖大于零的逍遥年。</target>
        </trans-unit>
        <trans-unit id="8c7bf054691c4990879f32b517b7eb5c7c8f7c31" translate="yes" xml:space="preserve">
          <source>The Hijrah property resource is a set of properties that describe the calendar. The syntax is defined by &lt;code&gt;java.util.Properties#load(Reader)&lt;/code&gt;.</source>
          <target state="translated">Hijrah属性资源是描述日历的一组属性。语法由 &lt;code&gt;java.util.Properties#load(Reader)&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="2d5f51089d0f9a89148d7f6f56fbc17a08c3c7dd" translate="yes" xml:space="preserve">
          <source>The HijrahChronology follows the rules of the Hijrah calendar system. The Hijrah calendar has several variants based on differences in when the new moon is determined to have occurred and where the observation is made. In some variants the length of each month is computed algorithmically from the astronomical data for the moon and earth and in others the length of the month is determined by an authorized sighting of the new moon. For the algorithmically based calendars the calendar can project into the future. For sighting based calendars only historical data from past sightings is available.</source>
          <target state="translated">HijrahChronology遵循Hijrah日历系统的规则。Hijrah历法根据确定新月发生的时间和观测地点的不同,有几种变体。在一些变体中,每个月的长度是根据月球和地球的天文数据以算法计算出来的,而在其他变体中,一个月的长度是由经授权的新月观测结果决定的。对于以算法为基础的日历,日历可以预测到未来。对于以观测为基础的日历,只能提供过去观测的历史数据。</target>
        </trans-unit>
        <trans-unit id="b30101cf2f801668711691b72956c848b7ff79c7" translate="yes" xml:space="preserve">
          <source>The IANA charset registry does change over time, and so the canonical name and the aliases of a particular charset may also change over time. To ensure compatibility it is recommended that no alias ever be removed from a charset, and that if the canonical name of a charset is changed then its previous canonical name be made into an alias.</source>
          <target state="translated">IANA字符集注册表确实会随着时间的推移而改变,因此特定字符集的规范名称和别名也可能会随着时间的推移而改变。为了确保兼容性,建议永远不要从一个字符集中删除别名,如果一个字符集的规范名称被改变,那么它以前的规范名称就会变成一个别名。</target>
        </trans-unit>
        <trans-unit id="a09a7c491e42ec0ccd6087606b59441de1f0715c" translate="yes" xml:space="preserve">
          <source>The ID is minor variation to the standard ISO-8601 formatted string for the offset. There are three formats:</source>
          <target state="translated">ID是标准ISO-8601格式化字符串的小变化,用于偏移。有三种格式:</target>
        </trans-unit>
        <trans-unit id="d29cb73c296776b288211b97e00b807749e9b2d0" translate="yes" xml:space="preserve">
          <source>The ID is unique within the system. There are three types of ID.</source>
          <target state="translated">ID在系统内是唯一的。ID有三种类型。</target>
        </trans-unit>
        <trans-unit id="ae854760d3f4276cd755511e493cc5a51b830e12" translate="yes" xml:space="preserve">
          <source>The ID of the listener to which the notification is targeted.</source>
          <target state="translated">通知所针对的监听者的ID。</target>
        </trans-unit>
        <trans-unit id="61fd4732cbe2e01752b6c8cf6a30f14f6ab40119" translate="yes" xml:space="preserve">
          <source>The ID of the returned offset will be normalized to one of the formats described by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回的偏移量的ID将被规范化为&lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; &lt;/a&gt;描述的格式之一。</target>
        </trans-unit>
        <trans-unit id="7c8cb46fd48547fa630e300fcba11829a98c4159" translate="yes" xml:space="preserve">
          <source>The ID of the thread that owns the object that the thread is blocked.</source>
          <target state="translated">线程被封锁的对象的ID。</target>
        </trans-unit>
        <trans-unit id="fd6d60e60fa86ec5a78289385fee6d0f6bc1bdd6" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ID唯一地标识 &lt;code&gt;Chronology&lt;/code&gt; 。它可以用于使用&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;查找 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cafcec37d18d1f40c55857c337e84b388be6a4b" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ID唯一地标识 &lt;code&gt;Chronology&lt;/code&gt; 。它可以用于使用&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;查找 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eec3d7c57ef5447e9bdebab954ee90700a2a652d" translate="yes" xml:space="preserve">
          <source>The IP address of the remote end of this socket.</source>
          <target state="translated">该套接字远端的IP地址。</target>
        </trans-unit>
        <trans-unit id="510660eb55dda01e452a05872bd22f9cfe584483" translate="yes" xml:space="preserve">
          <source>The IPv6-address is a literal IPv6 address as described above. The</source>
          <target state="translated">IPv6-address是一个如上所述的IPv6字面地址。而</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
