<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f39034bf48af4a2a7e0007af959e946b8879dbb4" translate="yes" xml:space="preserve">
          <source>AppReopenedListener</source>
          <target state="translated">AppReopenedListener</target>
        </trans-unit>
        <trans-unit id="9873539fcb88f7ee0879938f9466d38e937cdb68" translate="yes" xml:space="preserve">
          <source>Append the result of the parse operation as children of the context node.</source>
          <target state="translated">将解析操作的结果追加为上下文节点的子节点。</target>
        </trans-unit>
        <trans-unit id="15c56a67e3dda4c7838f309123141818a20ad999" translate="yes" xml:space="preserve">
          <source>Append the result of the parse operation as children of the context node. For this action to work, the context node must be an &lt;code&gt;Element&lt;/code&gt; or a &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">将解析操作的结果附加为上下文节点的子代。为了执行此操作，上下文节点必须是 &lt;code&gt;Element&lt;/code&gt; 或 &lt;code&gt;DocumentFragment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a31784e9c8345c607c1c12178975f37bc948add9" translate="yes" xml:space="preserve">
          <source>Append the string to the end of the character data of the node.</source>
          <target state="translated">将字符串附加到节点的字符数据的末尾。</target>
        </trans-unit>
        <trans-unit id="3917518f5c9fea6b1131ac35ce9e11bb2cc20d36" translate="yes" xml:space="preserve">
          <source>Append the string to the end of the character data of the node. Upon success, &lt;code&gt;data&lt;/code&gt; provides access to the concatenation of &lt;code&gt;data&lt;/code&gt; and the &lt;code&gt;DOMString&lt;/code&gt; specified.</source>
          <target state="translated">将字符串追加到节点的字符数据的末尾。成功后， &lt;code&gt;data&lt;/code&gt; 提供对 &lt;code&gt;data&lt;/code&gt; 和指定的 &lt;code&gt;DOMString&lt;/code&gt; 的串联的访问。</target>
        </trans-unit>
        <trans-unit id="e96335f31dca923971fca83bb7d266b9f6649b68" translate="yes" xml:space="preserve">
          <source>Appendable</source>
          <target state="translated">Appendable</target>
        </trans-unit>
        <trans-unit id="11a860f1c6b7689ad6a213a9174bafe276cbd0d1" translate="yes" xml:space="preserve">
          <source>Appendable.append()</source>
          <target state="translated">Appendable.append()</target>
        </trans-unit>
        <trans-unit id="d53172897c9eb8037d26348365a16f64403f724a" translate="yes" xml:space="preserve">
          <source>Appendables are not necessarily safe for multithreaded access. Thread safety is the responsibility of classes that extend and implement this interface.</source>
          <target state="translated">对于多线程访问来说,Appendables不一定是安全的。线程安全是扩展和实现这个接口的类的责任。</target>
        </trans-unit>
        <trans-unit id="b09231380953cd773284db8286106f113bc2ca0e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array.</source>
          <target state="translated">将 &lt;code&gt;aColumn&lt;/code&gt; 追加到 &lt;code&gt;tableColumns&lt;/code&gt; 数组的末尾。</target>
        </trans-unit>
        <trans-unit id="1688fd5bea0983b4b83dfd3baaa4d7720e1d952d" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array. This method also posts the &lt;code&gt;columnAdded&lt;/code&gt; event to its listeners.</source>
          <target state="translated">将 &lt;code&gt;aColumn&lt;/code&gt; 追加到 &lt;code&gt;tableColumns&lt;/code&gt; 数组的末尾。此方法还将 &lt;code&gt;columnAdded&lt;/code&gt; 事件发布到其侦听器。</target>
        </trans-unit>
        <trans-unit id="476900224e8db0b4b4f41494325e92b48ca6273c" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array. This method posts a &lt;code&gt;columnAdded&lt;/code&gt; event to its listeners.</source>
          <target state="translated">将 &lt;code&gt;aColumn&lt;/code&gt; 追加到 &lt;code&gt;tableColumns&lt;/code&gt; 数组的末尾。此方法将 &lt;code&gt;columnAdded&lt;/code&gt; 事件发布到其侦听器。</target>
        </trans-unit>
        <trans-unit id="ac2e41223a5c3cc2e0a60d340e62a21e0747258e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the array of columns held by this &lt;code&gt;JTable&lt;/code&gt;'s column model.</source>
          <target state="translated">将 &lt;code&gt;aColumn&lt;/code&gt; 附加到此 &lt;code&gt;JTable&lt;/code&gt; 的列模型所保存的列的数组的末尾。</target>
        </trans-unit>
        <trans-unit id="f157f9c6e2ae9b0e021c2ef3135d57f3d7e45417" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the array of columns held by this &lt;code&gt;JTable&lt;/code&gt;'s column model. If the column name of &lt;code&gt;aColumn&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, sets the column name of &lt;code&gt;aColumn&lt;/code&gt; to the name returned by &lt;code&gt;getModel().getColumnName()&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;aColumn&lt;/code&gt; 附加到此 &lt;code&gt;JTable&lt;/code&gt; 的列模型所保存的列的数组的末尾。如果列名称 &lt;code&gt;aColumn&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，设置的列名 &lt;code&gt;aColumn&lt;/code&gt; 追加到返回的名称 &lt;code&gt;getModel().getColumnName()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3567a175fb0562baf41d927b02a10bc057a7dc2" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this &lt;code&gt;Book&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;numPages&lt;/code&gt; 页追加到 &lt;code&gt;Book&lt;/code&gt; 的末尾。</target>
        </trans-unit>
        <trans-unit id="d963ea9ab0cdb9378e2ac779b39f6651a5f9f417" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this &lt;code&gt;Book&lt;/code&gt;. Each of the pages is associated with &lt;code&gt;page&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;numPages&lt;/code&gt; 页追加到 &lt;code&gt;Book&lt;/code&gt; 的末尾。每个页面都与 &lt;code&gt;page&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="8f98fb3d99eb6387339869d14cad794715865769" translate="yes" xml:space="preserve">
          <source>Appends a character literal to the formatter.</source>
          <target state="translated">在格式化器上添加一个字符文字。</target>
        </trans-unit>
        <trans-unit id="6077317e32c454c82c629234a15fe3257661a4b8" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output.</source>
          <target state="translated">添加一个完整的图像流,包括一个带有默认元数据和缩略图的单个图像到输出。</target>
        </trans-unit>
        <trans-unit id="281820819f429504ff3a6174eb989801d1b94191" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt;.</source>
          <target state="translated">将由具有默认元数据和缩略图的单个图像组成的完整图像流追加到输出。此方法是 &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt; 的简写。</target>
        </trans-unit>
        <trans-unit id="b394e8311dbe84884c0c6a05ef5d485f0b50e3f4" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output.</source>
          <target state="translated">将包含单个图像和相关联的流以及图像元数据和缩略图的完整图像流添加到输出中。</target>
        </trans-unit>
        <trans-unit id="082ed2fbeb6ea36a03039ae30cc1f13d37c03cf6" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output. Any necessary header information is included. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, its existing contents prior to the current seek position are not affected, and need not be readable or writable.</source>
          <target state="translated">将包含单个图像和相关流以及图像元数据和缩略图的完整图像流追加到输出。包括任何必要的标头信息。如果输出是 &lt;code&gt;ImageOutputStream&lt;/code&gt; ，则其在当前搜索位置之前的现有内容不会受到影响，并且不需要可读或可写。</target>
        </trans-unit>
        <trans-unit id="0bc06e5906435d3b2053668b21081e0932a459aa" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output.</source>
          <target state="translated">将一个包含有默认元数据和缩略图的完整图像流添加到输出中。</target>
        </trans-unit>
        <trans-unit id="18ebb8ee6ccf16d140e00b450c04c71131d11a2b" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, image, null)&lt;/code&gt;.</source>
          <target state="translated">将包含单个图像和默认元数据和缩略图的完整图像流追加到输出。此方法是 &lt;code&gt;write(null, image, null)&lt;/code&gt; 的简写。</target>
        </trans-unit>
        <trans-unit id="a941db26292911f29d227015e8b2cb9bcadbb060" translate="yes" xml:space="preserve">
          <source>Appends a component to the end of this menu.</source>
          <target state="translated">将一个组件添加到这个菜单的末尾。</target>
        </trans-unit>
        <trans-unit id="808ac411923619c4b90b8bd0ac2575ed6da65d24" translate="yes" xml:space="preserve">
          <source>Appends a component to the end of this menu. Returns the component added.</source>
          <target state="translated">将一个组件添加到这个菜单的末尾。返回添加的组件。</target>
        </trans-unit>
        <trans-unit id="abca56478705acafda5962bca0f06124d244612d" translate="yes" xml:space="preserve">
          <source>Appends a default value for a field to the formatter for use in parsing.</source>
          <target state="translated">将字段的默认值添加到formatter中,以便在解析时使用。</target>
        </trans-unit>
        <trans-unit id="6d0408587bdab66748506d5ccffef80210dda614" translate="yes" xml:space="preserve">
          <source>Appends a formatter to the builder which will optionally format/parse.</source>
          <target state="translated">将格式化器添加到生成器中,它可以选择格式化/解析。</target>
        </trans-unit>
        <trans-unit id="bb68160d57d05f66cb98ca9aaf61f00cc94fc06a" translate="yes" xml:space="preserve">
          <source>Appends a localized date-time pattern to the formatter.</source>
          <target state="translated">将一个局部的日期-时间模式添加到格式化器中。</target>
        </trans-unit>
        <trans-unit id="1217504978e2795be7500740649dfe70a7b13e32" translate="yes" xml:space="preserve">
          <source>Appends a menu item to the end of this menu.</source>
          <target state="translated">在此菜单的末尾添加一个菜单项。</target>
        </trans-unit>
        <trans-unit id="b4b3ed5abd41c4c60aeac7fd96fdd7ac2b4c42c8" translate="yes" xml:space="preserve">
          <source>Appends a menu item to the end of this menu. Returns the menu item added.</source>
          <target state="translated">将一个菜单项添加到这个菜单的末尾。返回添加的菜单项。</target>
        </trans-unit>
        <trans-unit id="69a66bcc78d7ab6960539eb87b2e7c284c5faf97" translate="yes" xml:space="preserve">
          <source>Appends a new menu item to the end of the menu which dispatches the specified &lt;code&gt;Action&lt;/code&gt; object.</source>
          <target state="translated">在菜单的末尾追加一个新的菜单项，该菜单项将分派指定的 &lt;code&gt;Action&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="a2e9e468420caf2ebccb84f1a57d9ce3d161a486" translate="yes" xml:space="preserve">
          <source>Appends a new separator at the end of the menu.</source>
          <target state="translated">在菜单末尾添加一个新的分隔符。</target>
        </trans-unit>
        <trans-unit id="b19f1cad37d90822685ed81c99d8cf72dabc9b8d" translate="yes" xml:space="preserve">
          <source>Appends a new separator to the end of the menu.</source>
          <target state="translated">在菜单末尾添加一个新的分隔符。</target>
        </trans-unit>
        <trans-unit id="d2ecd751a6b29f51496d9df2f46576cc0ad6758f" translate="yes" xml:space="preserve">
          <source>Appends a separator of a specified size to the end of the tool bar.</source>
          <target state="translated">在工具栏的末端添加一个指定大小的分隔符。</target>
        </trans-unit>
        <trans-unit id="5e0b21445319456c84c04eb01921af34bb5d2f57" translate="yes" xml:space="preserve">
          <source>Appends a separator of default size to the end of the tool bar.</source>
          <target state="translated">在工具栏的末端添加一个默认大小的分隔符。</target>
        </trans-unit>
        <trans-unit id="6d55718779625090d2139598847a3396a06b2336" translate="yes" xml:space="preserve">
          <source>Appends a separator of default size to the end of the tool bar. The default size is determined by the current look and feel.</source>
          <target state="translated">在工具栏的末端添加一个默认大小的分隔符。默认大小由当前的外观和感觉决定。</target>
        </trans-unit>
        <trans-unit id="c23cc498bc3000b0c783d67f3bcbeae4de95b95e" translate="yes" xml:space="preserve">
          <source>Appends a single child view.</source>
          <target state="translated">添加一个单一的子视图。</target>
        </trans-unit>
        <trans-unit id="cd121f6528c5a509555f199c51d3705ccdc31c89" translate="yes" xml:space="preserve">
          <source>Appends a single child view. This is a convenience call to &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="translated">附加单个子视图。这是一个方便的 &lt;code&gt;replace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f928a001c97be018da4b9e617c36c02b4a7c574b" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output.</source>
          <target state="translated">将单个图像以及可能关联的元数据和缩略图添加到输出中。</target>
        </trans-unit>
        <trans-unit id="7246f1a135cf1661873c64195d4d1ddf2e277ebc" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the existing contents of the output prior to the current seek position may be flushed, and need not be readable or writable, unless the plug-in needs to be able to patch up the header information when &lt;code&gt;endWriteSequence&lt;/code&gt; is called (</source>
          <target state="translated">将单个图像以及可能关联的元数据和缩略图附加到输出。如果输出是 &lt;code&gt;ImageOutputStream&lt;/code&gt; ，则可能会刷新当前查找位置之前的输出的现有内容，并且不需要可读或可写，除非在调用 &lt;code&gt;endWriteSequence&lt;/code&gt; 时插件需要能够修补标头信息（</target>
        </trans-unit>
        <trans-unit id="1f5864b4be5e5e7f2cf21d57d680ea8ccba362f9" translate="yes" xml:space="preserve">
          <source>Appends a single page to the end of this &lt;code&gt;Book&lt;/code&gt;.</source>
          <target state="translated">将单页追加到这 &lt;code&gt;Book&lt;/code&gt; 的末尾。</target>
        </trans-unit>
        <trans-unit id="32d3b6c48828d9d8a5d3b4841f37611b121fbd03" translate="yes" xml:space="preserve">
          <source>Appends a string literal to the formatter.</source>
          <target state="translated">向格式化器添加一个字符串文字。</target>
        </trans-unit>
        <trans-unit id="f3de7accc40cc007982752ee97a632514266c812" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified &lt;code&gt;CharSequence&lt;/code&gt; to this sequence.</source>
          <target state="translated">将指定 &lt;code&gt;CharSequence&lt;/code&gt; 的子序列追加到此序列。</target>
        </trans-unit>
        <trans-unit id="0e356f7ac511797cc61434da9df3dfdcd3a70dd3" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">将指定字符序列的子序列追加到此 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7befa15893242af110648efcab30eacc7923163f" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this buffer</source>
          <target state="translated">将指定的字符序列的子序列添加到这个缓冲区。</target>
        </trans-unit>
        <trans-unit id="c3cf7e5ef845ab525de4a8d21ed77f112d2fe332" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this output stream.</source>
          <target state="translated">将指定的字符序列的子序列附加到这个输出流中。</target>
        </trans-unit>
        <trans-unit id="f81662094bc46ddeeaa6f7e0f83ca0ae28c7e885" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer.</source>
          <target state="translated">将指定的字符序列的子序列添加到这个写入器中。</target>
        </trans-unit>
        <trans-unit id="277fcdbc9374c81d3075ff361cb702c1a8a0e406" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer. &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">将指定字符序列的子序列追加到此编写器。 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="201900c26f23aec90ffceb602d72d0077dd68d68" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator.</source>
          <target state="translated">将指定Collection中的所有元素按照指定Collection的迭代器返回的顺序追加到这个Vector的末尾。</target>
        </trans-unit>
        <trans-unit id="0574c7f0a86f5650f0f8ef583a0603eae42daad2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator. The behavior of this operation is undefined if the specified Collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified Collection is this Vector, and this Vector is nonempty.)</source>
          <target state="translated">按照指定的集合的迭代器返回的顺序,将指定的集合中的所有元素加到这个向量的末尾。如果指定的集合在操作过程中被修改,那么这个操作的行为是未定义的。这意味着,如果指定的Collection是这个Vector,并且这个Vector是非空的,那么这个调用的行为是未定义的)。</target>
        </trans-unit>
        <trans-unit id="bb43596870d59b0e0d3cf29a0529c953b660e5d6" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中所有尚未包含在这个列表中的元素添加到这个列表的末尾。</target>
        </trans-unit>
        <trans-unit id="aea405c8cb63d25bc7f6636c9d53ff5bac903ed1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">按照指定集合迭代器返回的顺序,将指定集合中的所有元素添加到这个deque的末尾。</target>
        </trans-unit>
        <trans-unit id="dcda93a6791cda5e9c4f7954cfea2259b46bfd83" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a deque to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">按照指定集合的​​迭代器返回的顺序，将指定集合中的所有元素追加到此双端队列的末尾。尝试将 &lt;code&gt;addAll&lt;/code&gt; 双端队列添加到自身会导致 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4d846522feb2c1927702595ce16b699ee76751f" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator.</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中的所有元素添加到这个列表的末尾。</target>
        </trans-unit>
        <trans-unit id="397d3730ee19812406d353adf8610e6cd03599c1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified collection is this list, and this list is nonempty.)</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中的所有元素添加到列表的末尾。如果指定的集合在操作过程中被修改,那么这个操作的行为是未定义的。这意味着如果指定的集合是这个列表,并且这个列表是非空的,那么这个调用的行为是未定义的)。</target>
        </trans-unit>
        <trans-unit id="c17ff44c3173f7dfe8e30253d0f04ed6b1630484" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation).</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中的所有元素添加到这个列表的末尾(可选操作)。</target>
        </trans-unit>
        <trans-unit id="95d62f71c6304dbb7e65e70d817dc7c858d790ce" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation). The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中的所有元素添加到这个列表的末尾(可选操作)。如果指定的集合在操作过程中被修改,那么这个操作的行为将不被定义。(注意,如果指定的集合是这个列表,并且它是非空的,就会发生这种情况。)</target>
        </trans-unit>
        <trans-unit id="849f59f09a7e7d4b1d5f159fb019f744f182b6f2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中的所有元素添加到这个列表的末尾。</target>
        </trans-unit>
        <trans-unit id="50dc125948b2483e5ca1254bc5728d97989acc9b" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">按照指定集合的迭代器返回的顺序,将指定集合中的所有元素添加到这个列表的末尾。如果指定的集合在操作过程中被修改,那么这个操作的行为是未定义的。请注意,如果指定的集合是这个列表,并且它是非空的,那么这种情况就会发生。</target>
        </trans-unit>
        <trans-unit id="b2e8ea05b088e4e262c2838e587c14ebed395923" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">将指定集合中的所有元素按照指定集合迭代器返回的顺序追加到队列的末尾。</target>
        </trans-unit>
        <trans-unit id="fc09be9b9a0a1d52de670a92bd12013c7ad6f7f3" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a queue to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">按照指定集合的​​迭代器返回的顺序，将指定集合中的所有元素追加到此队列的末尾。尝试 &lt;code&gt;addAll&lt;/code&gt; 一个队列本身导致 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fe0cf973e8832dacac57cf537cd2dab762e757b" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the &lt;code&gt;AttributeList&lt;/code&gt; specified to the end of the list, in the order in which they are returned by the Iterator of the &lt;code&gt;AttributeList&lt;/code&gt; specified.</source>
          <target state="translated">在追加的所有元素 &lt;code&gt;AttributeList&lt;/code&gt; 指定到列表的末尾，在它们被迭代器返回的顺序 &lt;code&gt;AttributeList&lt;/code&gt; 的规定。</target>
        </trans-unit>
        <trans-unit id="c7ac69fdd545a8295e9282388ba7c224995c8342" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleList specified.</source>
          <target state="translated">将RoleList中的所有元素按照RoleList的迭代器返回的顺序添加到列表的最后。</target>
        </trans-unit>
        <trans-unit id="b6eae929bd5fa510fc8fc2b75f2780993eb58230" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleUnresolvedList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.</source>
          <target state="translated">按照指定的RoleUnresolvedList的迭代器返回的顺序,将指定的RoleUnresolvedList中的所有元素追加到列表的末尾。</target>
        </trans-unit>
        <trans-unit id="45f1980f0df46580be48f61880766db0755d50d9" translate="yes" xml:space="preserve">
          <source>Appends all the elements of a formatter to the builder.</source>
          <target state="translated">将formatter的所有元素添加到builder中。</target>
        </trans-unit>
        <trans-unit id="31b641689af075ef5c48a0639be6ca8ac79d50a2" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter with control over the number of fractional digits.</source>
          <target state="translated">使用ISO-8601将一个瞬间添加到格式化器中,并控制小数位的数量。</target>
        </trans-unit>
        <trans-unit id="57800dac739f3809ff175f6143b1b045f21851d4" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter, formatting fractional digits in groups of three.</source>
          <target state="translated">使用ISO-8601向格式化器添加一个瞬时,将小数位的格式化为三组。</target>
        </trans-unit>
        <trans-unit id="b8b255024c76d062ff8b118ac6eca861d7631194" translate="yes" xml:space="preserve">
          <source>Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.</source>
          <target state="translated">将年表ID(如'ISO'或'ThaiBuddhist')添加到格式化器中。</target>
        </trans-unit>
        <trans-unit id="37cdd5a8434d4d4e821fd8cc820f46ad90144d63" translate="yes" xml:space="preserve">
          <source>Appends the chronology name to the formatter.</source>
          <target state="translated">将年表名称添加到表格中。</target>
        </trans-unit>
        <trans-unit id="0c71eddcbc6b0d34240cdfe59e9946e4d6649e1f" translate="yes" xml:space="preserve">
          <source>Appends the element, if not present.</source>
          <target state="translated">如果不存在,则添加该元素。</target>
        </trans-unit>
        <trans-unit id="6b894f08dc1016bbdc27bc779c7964129fbe006d" translate="yes" xml:space="preserve">
          <source>Appends the elements defined by the specified pattern to the builder.</source>
          <target state="translated">将指定模式定义的元素添加到构建器中。</target>
        </trans-unit>
        <trans-unit id="e38b63f8db7af830809ba065e424033c6009df43" translate="yes" xml:space="preserve">
          <source>Appends the fractional value of a date-time field to the formatter.</source>
          <target state="translated">将日期-时间字段的小数值添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="ca79df163842e89277b503f9e16670dc70a94ee7" translate="yes" xml:space="preserve">
          <source>Appends the generic time-zone name, such as 'Pacific Time', to the formatter.</source>
          <target state="translated">将通用时区名称(如 &quot;太平洋时间&quot;)添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="b115ddbe12a96262baae96eb719e21b0e9300014" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment.</source>
          <target state="translated">将指定的&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;对象的几何图形追加到路径，可能将新几何图形通过线段连接到现有路径段。</target>
        </trans-unit>
        <trans-unit id="58cf85acb76194155c4c6ba58cfda8c9daa2bb52" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment. If the &lt;code&gt;connect&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt; and the path is not empty then any initial &lt;code&gt;moveTo&lt;/code&gt; in the geometry of the appended &lt;code&gt;Shape&lt;/code&gt; is turned into a &lt;code&gt;lineTo&lt;/code&gt; segment. If the destination coordinates of such a connecting &lt;code&gt;lineTo&lt;/code&gt; segment match the ending coordinates of a currently open subpath then the segment is omitted as superfluous. The winding rule of the specified &lt;code&gt;Shape&lt;/code&gt; is ignored and the appended geometry is governed by the winding rule specified for this path.</source>
          <target state="translated">将指定的&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;对象的几何图形追加到路径，可能将新几何图形通过线段连接到现有路径段。如果 &lt;code&gt;connect&lt;/code&gt; 参数为 &lt;code&gt;true&lt;/code&gt; 并且路径不为空，则附加 &lt;code&gt;Shape&lt;/code&gt; 的几何图形中的所有初始 &lt;code&gt;moveTo&lt;/code&gt; 都将变为 &lt;code&gt;lineTo&lt;/code&gt; 线段。如果此类连接 &lt;code&gt;lineTo&lt;/code&gt; 线段的目标坐标与当前打开的子路径的结束坐标匹配，则该线段将被省去。指定 &lt;code&gt;Shape&lt;/code&gt; 的绕线规则将被忽略，附加的几何图形将为此路径指定绕线规则。</target>
        </trans-unit>
        <trans-unit id="5f507763da8834f1035539ee1d697fe9174b721e" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;code&gt;Shape&lt;/code&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment.</source>
          <target state="translated">将指定 &lt;code&gt;Shape&lt;/code&gt; 对象的几何图形追加到路径，可能会将新几何图形通过线段连接到现有路径段。</target>
        </trans-unit>
        <trans-unit id="4d45717ffd1956dece97af594637a5042761e9da" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;code&gt;Shape&lt;/code&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment. If the &lt;code&gt;connect&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt; and the path is not empty then any initial &lt;code&gt;moveTo&lt;/code&gt; in the geometry of the appended &lt;code&gt;Shape&lt;/code&gt; is turned into a &lt;code&gt;lineTo&lt;/code&gt; segment. If the destination coordinates of such a connecting &lt;code&gt;lineTo&lt;/code&gt; segment match the ending coordinates of a currently open subpath then the segment is omitted as superfluous. The winding rule of the specified &lt;code&gt;Shape&lt;/code&gt; is ignored and the appended geometry is governed by the winding rule specified for this path.</source>
          <target state="translated">将指定 &lt;code&gt;Shape&lt;/code&gt; 对象的几何图形追加到路径，可能会将新几何图形通过线段连接到现有路径段。如果 &lt;code&gt;connect&lt;/code&gt; 参数为 &lt;code&gt;true&lt;/code&gt; 并且路径不为空，则附加 &lt;code&gt;Shape&lt;/code&gt; 的几何图形中的所有初始 &lt;code&gt;moveTo&lt;/code&gt; 都将变为 &lt;code&gt;lineTo&lt;/code&gt; 线段。如果此类连接 &lt;code&gt;lineTo&lt;/code&gt; 线段的目标坐标与当前打开的子路径的结束坐标匹配，则该线段将被省去。指定 &lt;code&gt;Shape&lt;/code&gt; 的绕线规则将被忽略，附加的几何图形将为此路径指定绕线规则。</target>
        </trans-unit>
        <trans-unit id="aee95d38f44b67f4da37bd848a96f3178d59e5a8" translate="yes" xml:space="preserve">
          <source>Appends the given text to the end of the document.</source>
          <target state="translated">将给定的文本添加到文档的末尾。</target>
        </trans-unit>
        <trans-unit id="374f5fe01edbae6815e4ed307b24e4dbd22508c6" translate="yes" xml:space="preserve">
          <source>Appends the given text to the end of the document. Does nothing if the model is null or the string is null or empty.</source>
          <target state="translated">将给定的文本添加到文档的末尾。如果模型为空或字符串为空或空,则不做任何操作。</target>
        </trans-unit>
        <trans-unit id="fbe1e3e6ccbf0420c766b7d5fe40a86470a1d25d" translate="yes" xml:space="preserve">
          <source>Appends the given text to the text area's current text.</source>
          <target state="translated">将给定的文本添加到文本区域的当前文本中。</target>
        </trans-unit>
        <trans-unit id="97d46862568414c0b9e367d4cdf281bea3e7e493" translate="yes" xml:space="preserve">
          <source>Appends the localized zone offset, such as 'GMT+01:00', to the formatter.</source>
          <target state="translated">将本地化的区域偏移量,如'GMT+01:00',添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="fd286ce1d15d7645892b282499aa1ecce4aa925e" translate="yes" xml:space="preserve">
          <source>Appends the reduced value of a date-time field to the formatter.</source>
          <target state="translated">将日期-时间字段的缩减值附加到格式器中。</target>
        </trans-unit>
        <trans-unit id="d23820a391259610c6b7bb21a498a57e376f2b05" translate="yes" xml:space="preserve">
          <source>Appends the specified &lt;code&gt;CharSequence&lt;/code&gt; to this sequence.</source>
          <target state="translated">将指定的 &lt;code&gt;CharSequence&lt;/code&gt; 追加到此序列。</target>
        </trans-unit>
        <trans-unit id="403adf760efb7fe7cb1aa666063d328faf97f09e" translate="yes" xml:space="preserve">
          <source>Appends the specified &lt;code&gt;StringBuffer&lt;/code&gt; to this sequence.</source>
          <target state="translated">将指定的 &lt;code&gt;StringBuffer&lt;/code&gt; 附加到此序列。</target>
        </trans-unit>
        <trans-unit id="5892314ebff890abad54a7a7be692ff3ea762427" translate="yes" xml:space="preserve">
          <source>Appends the specified URL to the list of URLs to search for classes and resources.</source>
          <target state="translated">将指定的URL添加到URL列表中以搜索类和资源。</target>
        </trans-unit>
        <trans-unit id="73915bea68ba19ae72f33dc4bfdcc44636bc7108" translate="yes" xml:space="preserve">
          <source>Appends the specified char to this buffer</source>
          <target state="translated">将指定的字符添加到这个缓冲区。</target>
        </trans-unit>
        <trans-unit id="f10b41fc51842242ba117d2c4f767a409a2c964a" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">将指定的字符序列附加到此 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3075ba4f49ae6a67e39b472af9bf812da0b2253e" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this buffer</source>
          <target state="translated">将指定的字符序列添加到该缓冲区。</target>
        </trans-unit>
        <trans-unit id="e9b0b9ea35093bbab5cb3a27f2b9ffa8024c499c" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this output stream.</source>
          <target state="translated">将指定的字符序列添加到该输出流中。</target>
        </trans-unit>
        <trans-unit id="887bf872fc6b7ed418b5e718d6b3a0388c2bead1" translate="yes" xml:space="preserve">
          <source>Appends the specified character sequence to this writer.</source>
          <target state="translated">将指定的字符序列添加到此写入器中。</target>
        </trans-unit>
        <trans-unit id="ef647ab518b3e2a40fedf796692416afcaca78e0" translate="yes" xml:space="preserve">
          <source>Appends the specified character to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">将指定字符追加到此 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ea8d81001eaf82780b763ae2e6dacaefa1698ce" translate="yes" xml:space="preserve">
          <source>Appends the specified character to this output stream.</source>
          <target state="translated">将指定的字符添加到这个输出流中。</target>
        </trans-unit>
        <trans-unit id="3d1e8b2d88ae00633bf4795273c255496c85aafe" translate="yes" xml:space="preserve">
          <source>Appends the specified character to this writer.</source>
          <target state="translated">将指定的字符添加到此写入器中。</target>
        </trans-unit>
        <trans-unit id="4093a0c9df3c2371bdf1c791854d0fce03c9d058" translate="yes" xml:space="preserve">
          <source>Appends the specified component to the end of this container.</source>
          <target state="translated">将指定的组件添加到这个容器的末端。</target>
        </trans-unit>
        <trans-unit id="877038f4a6f17ee2b8a7500f552ddacacbc994a8" translate="yes" xml:space="preserve">
          <source>Appends the specified component to the end of this container. This is a convenience method for &lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt;&lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将指定的组件追加到此容器的末尾。这是&lt;a href=&quot;#addImpl(java.awt.Component,java.lang.Object,int)&quot;&gt; &lt;code&gt;addImpl(java.awt.Component, java.lang.Object, int)&lt;/code&gt; &lt;/a&gt;的便捷方法。</target>
        </trans-unit>
        <trans-unit id="c67c0539bfb73ed763f5009a1fa3babf42790093" translate="yes" xml:space="preserve">
          <source>Appends the specified coordinates to this &lt;code&gt;Polygon&lt;/code&gt;.</source>
          <target state="translated">将指定的坐标附加到此 &lt;code&gt;Polygon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d6377ba64cf7e458515159c18b80a0099538be1" translate="yes" xml:space="preserve">
          <source>Appends the specified element to the end of this Vector.</source>
          <target state="translated">将指定的元素添加到这个向量的末尾。</target>
        </trans-unit>
        <trans-unit id="c349afe5e41baabf619d250f973de2631a819363" translate="yes" xml:space="preserve">
          <source>Appends the specified element to the end of this list (optional operation).</source>
          <target state="translated">将指定的元素添加到这个列表的末尾(可选操作)。</target>
        </trans-unit>
        <trans-unit id="e786e7cc0f0900809cfabc8dff37ab88f2b0c507" translate="yes" xml:space="preserve">
          <source>Appends the specified element to the end of this list.</source>
          <target state="translated">将指定的元素添加到列表的末尾。</target>
        </trans-unit>
        <trans-unit id="79a02db15553112578bc583213992e5af537660d" translate="yes" xml:space="preserve">
          <source>Appends the specified exception to the exceptions that were suppressed in order to deliver this exception.</source>
          <target state="translated">将指定的异常附加到为了传递这个异常而被抑制的异常上。</target>
        </trans-unit>
        <trans-unit id="89e15512a891a8fbf4db2f5714182d60f58c57f4" translate="yes" xml:space="preserve">
          <source>Appends the specified exception to the exceptions that were suppressed in order to deliver this exception. This method is thread-safe and typically called (automatically and implicitly) by the &lt;code&gt;try&lt;/code&gt;-with-resources statement.</source>
          <target state="translated">将指定的异常附加到为了传递此异常而被抑制的异常。此方法是线程安全的，通常由 &lt;code&gt;try&lt;/code&gt; -with-resources语句（自动和隐式）调用。</target>
        </trans-unit>
        <trans-unit id="e9b937fc9361f9718ac900d4b93f787db5572ad7" translate="yes" xml:space="preserve">
          <source>Appends the specified menu item to the end of this menu.</source>
          <target state="translated">将指定的菜单项添加到该菜单的末尾。</target>
        </trans-unit>
        <trans-unit id="c6c97272e1c7e1340478d0cd77ecaa2732904de7" translate="yes" xml:space="preserve">
          <source>Appends the specified menu to the end of the menu bar.</source>
          <target state="translated">将指定的菜单添加到菜单栏的末端。</target>
        </trans-unit>
        <trans-unit id="088a1f0d499d8b31f5099362a31c3a6d9606e250" translate="yes" xml:space="preserve">
          <source>Appends the specified string to this character sequence.</source>
          <target state="translated">将指定的字符串添加到这个字符序列中。</target>
        </trans-unit>
        <trans-unit id="2f191e8e601e6a0d6d9bd5bf4260185658ef46f9" translate="yes" xml:space="preserve">
          <source>Appends the string representation of a subarray of the &lt;code&gt;char&lt;/code&gt; array argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;char&lt;/code&gt; 数组参数的子数组的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="db66fd97a079558f509cf7046555fa67ead53369" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;Object&lt;/code&gt; argument.</source>
          <target state="translated">追加 &lt;code&gt;Object&lt;/code&gt; 参数的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="fdcfe0a57ccfd59aff3e13b380b34851f14bb38c" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;boolean&lt;/code&gt; argument to the sequence.</source>
          <target state="translated">将 &lt;code&gt;boolean&lt;/code&gt; 参数的字符串表示形式追加到序列中。</target>
        </trans-unit>
        <trans-unit id="f1b024e4927c67af8f6fae9e55ee4a8f6dae7b79" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;char&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;char&lt;/code&gt; 参数的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="74119a37c1afbfc043dc9e471cf7fb1a05613fd6" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;char&lt;/code&gt; array argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;char&lt;/code&gt; 数组参数的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="01ef91fecec989cf22290887f3826204d3d68916" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;codePoint&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;codePoint&lt;/code&gt; 参数的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="163ff8bd37d249d282af7c101be46c5e84506eaa" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;double&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;double&lt;/code&gt; 参数的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="2ea5a8324ac302b185027ecfd9539501689e5aca" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;float&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;float&lt;/code&gt; 参数的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="f57211745a2b4498fd6b12988fc604c40d01fadb" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;int&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;int&lt;/code&gt; 参数的字符串表示形式附加到此序列。</target>
        </trans-unit>
        <trans-unit id="8841ab004de348406bc2339572b5dacb3dfabf83" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the &lt;code&gt;long&lt;/code&gt; argument to this sequence.</source>
          <target state="translated">将 &lt;code&gt;long&lt;/code&gt; 参数的字符串表示形式追加到此序列。</target>
        </trans-unit>
        <trans-unit id="b76372942da5bbdb7456c730eef6450037742063" translate="yes" xml:space="preserve">
          <source>Appends the text of a date-time field to the formatter using the full text style.</source>
          <target state="translated">使用全文样式将日期-时间字段的文本添加到表格中。</target>
        </trans-unit>
        <trans-unit id="6de64cb1814bcaa101564c20928a648a625492b9" translate="yes" xml:space="preserve">
          <source>Appends the text of a date-time field to the formatter using the specified map to supply the text.</source>
          <target state="translated">使用指定的映射来提供文本,将日期-时间字段的文本添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="47624b2d52e60838e636d54e86d8d936e7a86c02" translate="yes" xml:space="preserve">
          <source>Appends the text of a date-time field to the formatter.</source>
          <target state="translated">将日期-时间字段的文本添加到格式化器中。</target>
        </trans-unit>
        <trans-unit id="e144089807b8aec12ca52afc817e29d9c32a1ef6" translate="yes" xml:space="preserve">
          <source>Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter, using the best available zone ID.</source>
          <target state="translated">使用最佳的时区ID将时区ID(如 &quot;Europe/Paris &quot;或 &quot;+02:00&quot;)添加到formatter中。</target>
        </trans-unit>
        <trans-unit id="c62c30d255541630177a168af30674da0f2bf39a" translate="yes" xml:space="preserve">
          <source>Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter.</source>
          <target state="translated">将时区ID,如'Europe/Paris'或'+02:00',添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="ebec0377fec25d4e0ded182c38d98da4043d0b5a" translate="yes" xml:space="preserve">
          <source>Appends the time-zone name, such as 'British Summer Time', to the formatter.</source>
          <target state="translated">将时区名称(如 &quot;英国夏令时&quot;)添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="fce4d833a5294e5be507295337076318cc55f391" translate="yes" xml:space="preserve">
          <source>Appends the time-zone region ID, such as 'Europe/Paris', to the formatter, rejecting the zone ID if it is a &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">将时区区域ID（例如&amp;ldquo; Europe / Paris&amp;rdquo;）追加到格式化程序，如果它是 &lt;code&gt;ZoneOffset&lt;/code&gt; ，则拒绝该区域ID 。</target>
        </trans-unit>
        <trans-unit id="46b5c41f6878511d79dc2357225f0f3c59199147" translate="yes" xml:space="preserve">
          <source>Appends the value of a date-time field to the formatter providing full control over formatting.</source>
          <target state="translated">将日期-时间字段的值添加到格式器中,提供对格式的完全控制。</target>
        </trans-unit>
        <trans-unit id="4c16af480b92b45ba43b0fc2b238944f9add2fe0" translate="yes" xml:space="preserve">
          <source>Appends the value of a date-time field to the formatter using a fixed width, zero-padded approach.</source>
          <target state="translated">使用固定宽度、零填充的方法将日期-时间字段的值添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="186f7ffe827c5f1a49eb2f747df751f27687bbe4" translate="yes" xml:space="preserve">
          <source>Appends the value of a date-time field to the formatter using a normal output style.</source>
          <target state="translated">使用普通的输出样式将日期-时间字段的值添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="db208587cb329f41f68ab69d38d81b63d7b0e039" translate="yes" xml:space="preserve">
          <source>Appends the zone offset, such as '+01:00', to the formatter.</source>
          <target state="translated">将区域偏移量(如'+01:00')添加到格式器中。</target>
        </trans-unit>
        <trans-unit id="18b2b60a1a07cab1060e2d47172cbe32a0b7f89d" translate="yes" xml:space="preserve">
          <source>Applet</source>
          <target state="translated">Applet</target>
        </trans-unit>
        <trans-unit id="c8d76e1c8736bdcb6f20c99b29ccce6172a71aff" translate="yes" xml:space="preserve">
          <source>Applet class file.</source>
          <target state="translated">小程序类文件。</target>
        </trans-unit>
        <trans-unit id="963066d05e2225e3d080a032b57dc82df1fc2137" translate="yes" xml:space="preserve">
          <source>Applet class file. See the &lt;code&gt;code&lt;/code&gt; attribute for HTMLAppletElement.</source>
          <target state="translated">Applet类文件。请参阅HTMLAppletElement的 &lt;code&gt;code&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="2d06ebecfeca5761c9195e06966b26ea1e152d82" translate="yes" xml:space="preserve">
          <source>Applet class file. See the code attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">小程序类文件。参见HTML 4.0中的代码属性定义。此属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="3aa2e09a94b226303351ddc50dae9e64eadf1838" translate="yes" xml:space="preserve">
          <source>Applet.AccessibleApplet</source>
          <target state="translated">Applet.AccessibleApplet</target>
        </trans-unit>
        <trans-unit id="4fc1edd5ee53c250311ccc5208b107f025a4b8b7" translate="yes" xml:space="preserve">
          <source>AppletContext</source>
          <target state="translated">AppletContext</target>
        </trans-unit>
        <trans-unit id="488b0304818d795d79ef00b876ed6c33abb17a19" translate="yes" xml:space="preserve">
          <source>AppletInitializer</source>
          <target state="translated">AppletInitializer</target>
        </trans-unit>
        <trans-unit id="a0e9a59fc6a8081eea334fc91e80fc293bfdb9d3" translate="yes" xml:space="preserve">
          <source>AppletInitializer.activate()</source>
          <target state="translated">AppletInitializer.activate()</target>
        </trans-unit>
        <trans-unit id="00640ab6965f79d693f1a39c2c2b63fe4721b903" translate="yes" xml:space="preserve">
          <source>AppletInitializer.initialize()</source>
          <target state="translated">AppletInitializer.initialize()</target>
        </trans-unit>
        <trans-unit id="f5415147ecdcf531d4510ec0ec67e6b5a749dcf6" translate="yes" xml:space="preserve">
          <source>AppletStub</source>
          <target state="translated">AppletStub</target>
        </trans-unit>
        <trans-unit id="1dff35ce41c1c847b6d220332d1bd7905bee5db1" translate="yes" xml:space="preserve">
          <source>Applets typically run in a container that already has a security manager, so there is generally no need for applets to set a security manager. If you have a standalone application, you might need to set a &lt;code&gt;SecurityManager&lt;/code&gt; in order to enable class downloading. This can be done by adding the following to your code. (It needs to be executed before RMI can download code from remote hosts, so it most likely needs to appear in the &lt;code&gt;main&lt;/code&gt; method of your application.)</source>
          <target state="translated">小程序通常在已经具有安全管理器的容器中运行，因此通常不需要小程序设置安全管理器。如果您有独立的应用程序，则可能需要设置 &lt;code&gt;SecurityManager&lt;/code&gt; 才能启用类下载。这可以通过将以下内容添加到您的代码中来完成。（它需要在RMI可以从远程主机下载代码之前执行，因此它很可能需要出现在应用程序的 &lt;code&gt;main&lt;/code&gt; 方法中。）</target>
        </trans-unit>
        <trans-unit id="71ca9b44d558b98a70fafc048cc860bce54dfcd5" translate="yes" xml:space="preserve">
          <source>Applicable only if the event is dynamically defined using the &lt;code&gt;EventFactory&lt;/code&gt; class.</source>
          <target state="translated">仅在使用 &lt;code&gt;EventFactory&lt;/code&gt; 类动态定义事件时适用。</target>
        </trans-unit>
        <trans-unit id="1e49f01f985d37daacd5c2ac45cd785f57acc910" translate="yes" xml:space="preserve">
          <source>Application Data - Once the communication parameters have been established and the handshake is complete, application data may flow through the &lt;code&gt;SSLEngine&lt;/code&gt;. Outbound application messages are encrypted and integrity protected, and inbound messages reverse the process.</source>
          <target state="translated">应用程序数据-建立通信参数并完成握手后，应用程序数据可能会流经 &lt;code&gt;SSLEngine&lt;/code&gt; 。出站应用程序消息经过加密和完整性保护，而入站消息则逆转该过程。</target>
        </trans-unit>
        <trans-unit id="1c01bfbc616afd5a098ddde578a275ebbbf2b372" translate="yes" xml:space="preserve">
          <source>Application Resource Files</source>
          <target state="translated">应用资源文件</target>
        </trans-unit>
        <trans-unit id="3c888e08801297fc7c9a8c9e3373ba0d954cc1a4" translate="yes" xml:space="preserve">
          <source>Application code can also create a new MBean Server, or access already-created MBean Servers, using the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">应用程序代码还可以使用&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;类创建新的MBean服务器，或访问已创建的MBean服务器。</target>
        </trans-unit>
        <trans-unit id="f0ddafcb009f60a8abcaf2a35a101c3eda97ef79" translate="yes" xml:space="preserve">
          <source>Application code can directly subclass Configuration to provide a custom implementation. In addition, an instance of a Configuration object can be constructed by invoking one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods with a standard type. The default policy type is &quot;JavaLoginConfig&quot;. See the Configuration section in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#configuration-types&quot;&gt; Java Security Standard Algorithm Names Specification&lt;/a&gt; for a list of standard Configuration types.</source>
          <target state="translated">应用程序代码可以直接将Configuration子类化以提供自定义实现。另外，可以通过调用标准类型的 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法之一来构造Configuration对象的实例。默认策略类型为&amp;ldquo; JavaLoginConfig&amp;rdquo;。有关标准配置类型的列表，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#configuration-types&quot;&gt;Java安全标准算法名称规范&lt;/a&gt;中的&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="c24d780492c7941b88aeeb278320787b7ebd9bf3" translate="yes" xml:space="preserve">
          <source>Application code can directly subclass Configuration to provide a custom implementation. In addition, an instance of a Configuration object can be constructed by invoking one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods with a standard type. The default policy type is &quot;JavaLoginConfig&quot;. See the Configuration section in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#configuration-types&quot;&gt; Java Security Standard Algorithm Names Specification&lt;/a&gt; for a list of standard Configuration types.</source>
          <target state="translated">应用程序代码可以直接将Configuration子类化以提供自定义实现。另外，可以通过调用标准类型的 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法之一来构造Configuration对象的实例。默认策略类型为&amp;ldquo; JavaLoginConfig&amp;rdquo;。有关标准配置类型的列表，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#configuration-types&quot;&gt;Java安全标准算法名称规范&lt;/a&gt;中的&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="ecf48d008bc04c9fba8077398c4acbc137fa56a1" translate="yes" xml:space="preserve">
          <source>Application code can directly subclass Configuration to provide a custom implementation. In addition, an instance of a Configuration object can be constructed by invoking one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods with a standard type. The default policy type is &quot;JavaLoginConfig&quot;. See the Configuration section in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Configuration&quot;&gt; Java Cryptography Architecture Standard Algorithm Name Documentation&lt;/a&gt; for a list of standard Configuration types.</source>
          <target state="translated">应用程序代码可以直接将Configuration子类化以提供自定义实现。另外，可以通过调用标准类型的 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法之一来构造Configuration对象的实例。默认策略类型为&amp;ldquo; JavaLoginConfig&amp;rdquo;。有关标准配置类型的列表，请参见&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Configuration&quot;&gt;Java密码体系结构标准算法名称文档&lt;/a&gt;中的&amp;ldquo;配置&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="9d2e568ff7065c4954d0ca7cf3c6b38197e77f6e" translate="yes" xml:space="preserve">
          <source>Application code can directly subclass Policy to provide a custom implementation. In addition, an instance of a Policy object can be constructed by invoking one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods with a standard type. The default policy type is &quot;JavaPolicy&quot;.</source>
          <target state="translated">应用程序代码可以直接将Policy子类化以提供自定义实现。此外，可以通过调用标准类型的 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法之一来构造Policy对象的实例。默认策略类型为&amp;ldquo; JavaPolicy&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e2e089e05cf66fff329ca5e8678168e19dc8bf7f" translate="yes" xml:space="preserve">
          <source>Application code will not use these methods explicitly, they are used internally by &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">应用程序代码不会显式使用这些方法，它们由 &lt;code&gt;JTable&lt;/code&gt; 在内部使用。</target>
        </trans-unit>
        <trans-unit id="e4f463c504e79280da5308b67af94a7fd194d269" translate="yes" xml:space="preserve">
          <source>Application code will not use these methods explicitly, they are used internally by JTable.</source>
          <target state="translated">应用程序代码不会显式地使用这些方法,它们由JTable内部使用。</target>
        </trans-unit>
        <trans-unit id="f3a6e6614cf26b872cd28ba7e7296063689eae53" translate="yes" xml:space="preserve">
          <source>Application code will not use this method explicitly, it is used internally by the column dragging mechanism.</source>
          <target state="translated">应用程序代码不会显式地使用该方法,它是由列拖动机制在内部使用的。</target>
        </trans-unit>
        <trans-unit id="1b79f5649db950b57931a71da3a2d588807ae702" translate="yes" xml:space="preserve">
          <source>Application code will not use this method explicitly, it is used internally by the column sizing mechanism.</source>
          <target state="translated">应用程序代码不会显式地使用这个方法,它是由列大小机制在内部使用的。</target>
        </trans-unit>
        <trans-unit id="771f3f889ff6ba3070f745a76dc87772ecf1dd69" translate="yes" xml:space="preserve">
          <source>Application data (also known as plaintext or cleartext) is data which is produced or consumed by an application. Its counterpart is network data, which consists of either handshaking and/or ciphertext (encrypted) data, and destined to be transported via an I/O mechanism. Inbound data is data which has been received from the peer, and outbound data is destined for the peer.</source>
          <target state="translated">应用数据(也称为明文或清文)是由应用程序产生或消耗的数据。与之相对应的是网络数据,它由握手和/或密文(加密)数据组成,注定要通过I/O机制进行传输。入站数据是指从对等体接收的数据,出站数据是为对等体准备的。</target>
        </trans-unit>
        <trans-unit id="ecafbb5ea26d556e3932ebfbf003adb3f9f935d5" translate="yes" xml:space="preserve">
          <source>Application developers should refer to their provider's documentation to find out which key specifications are supported by the &lt;a href=&quot;#generateSecret(java.security.spec.KeySpec)&quot;&gt;&lt;code&gt;generateSecret&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getKeySpec(javax.crypto.SecretKey,java.lang.Class)&quot;&gt;&lt;code&gt;getKeySpec&lt;/code&gt;&lt;/a&gt; methods. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">应用程序开发人员应参考其提供商的文档，以找出&lt;a href=&quot;#generateSecret(java.security.spec.KeySpec)&quot;&gt; &lt;code&gt;generateSecret&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getKeySpec(javax.crypto.SecretKey,java.lang.Class)&quot;&gt; &lt;code&gt;getKeySpec&lt;/code&gt; &lt;/a&gt;方法支持哪些关键规范。例如，&amp;ldquo; SunJCE&amp;rdquo;提供程序提供的DES密钥工厂支持 &lt;code&gt;DESKeySpec&lt;/code&gt; 作为DES密钥的透明表示，而该提供商的Triple DES密钥的秘密工厂支持 &lt;code&gt;DESedeKeySpec&lt;/code&gt; 作为Triple DES密钥的透明表示。</target>
        </trans-unit>
        <trans-unit id="c53ca5e7b4b3c64b0c479b972af9b830d8e1445a" translate="yes" xml:space="preserve">
          <source>Application developers should refer to their provider's documentation to find out which key specifications are supported by the &lt;a href=&quot;#generateSecret(java.security.spec.KeySpec)&quot;&gt;&lt;code&gt;generateSecret&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getKeySpec(javax.crypto.SecretKey,java.lang.Class)&quot;&gt;&lt;code&gt;getKeySpec&lt;/code&gt;&lt;/a&gt; methods. For example, the DESede (Triple DES) secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">应用程序开发人员应参考其提供商的文档，以找出&lt;a href=&quot;#generateSecret(java.security.spec.KeySpec)&quot;&gt; &lt;code&gt;generateSecret&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getKeySpec(javax.crypto.SecretKey,java.lang.Class)&quot;&gt; &lt;code&gt;getKeySpec&lt;/code&gt; &lt;/a&gt;方法支持哪些关键规范。例如，&amp;ldquo; SunJCE&amp;rdquo;提供程序提供的DESede（三重DES）秘密密钥工厂支持 &lt;code&gt;DESedeKeySpec&lt;/code&gt; 作为三重DES密钥的透明表示。</target>
        </trans-unit>
        <trans-unit id="e4731649856f6c1954ff4144c23e30b90b9f5f89" translate="yes" xml:space="preserve">
          <source>Application developers should refer to their provider's documentation to find out which key specifications are supported by the &lt;a href=&quot;secretkeyfactory#generateSecret-java.security.spec.KeySpec-&quot;&gt;&lt;code&gt;generateSecret&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;secretkeyfactory#getKeySpec-javax.crypto.SecretKey-java.lang.Class-&quot;&gt;&lt;code&gt;getKeySpec&lt;/code&gt;&lt;/a&gt; methods. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">应用程序开发人员应参考其提供商的文档，以找出&lt;a href=&quot;secretkeyfactory#generateSecret-java.security.spec.KeySpec-&quot;&gt; &lt;code&gt;generateSecret&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;secretkeyfactory#getKeySpec-javax.crypto.SecretKey-java.lang.Class-&quot;&gt; &lt;code&gt;getKeySpec&lt;/code&gt; &lt;/a&gt;方法支持哪些关键规范。例如，&amp;ldquo; SunJCE&amp;rdquo;提供程序提供的DES密钥工厂支持 &lt;code&gt;DESKeySpec&lt;/code&gt; 作为DES密钥的透明表示，而该提供程序的Triple DES密钥的秘密工厂支持 &lt;code&gt;DESedeKeySpec&lt;/code&gt; 作为Triple DES密钥的透明表示。</target>
        </trans-unit>
        <trans-unit id="05a10d262c8adc401cafe34e37c1a23c2b26d366" translate="yes" xml:space="preserve">
          <source>Application servers are not required to support any particular form or type of mapped name, nor the ability to use mapped names. The mapped name is product-dependent and often installation-dependent. No use of a mapped name is portable.</source>
          <target state="translated">应用服务器不需要支持任何特定形式或类型的映射名,也不需要使用映射名的能力。映射名依赖于产品,通常依赖于安装。映射名的使用是不可移植的。</target>
        </trans-unit>
        <trans-unit id="7334dcab4d38450f3344a48c3f61759e7e00a671" translate="yes" xml:space="preserve">
          <source>Application writers can extend this class when they need to implement only part of an interface; parser writers can instantiate this class to provide default handlers when the application has not supplied its own.</source>
          <target state="translated">当应用程序编写者只需要实现一个接口的一部分时,可以扩展这个类;当应用程序没有提供自己的接口时,解析器编写者可以实例化这个类来提供默认的处理程序。</target>
        </trans-unit>
        <trans-unit id="b47220c84b69e328fec122d9b191c8ae39356d29" translate="yes" xml:space="preserve">
          <source>Application writers can use this method to redirect external system identifiers to secure and/or local URI, to look up public identifiers in a catalogue, or to read an entity from a database or other input source (including, for example, a dialog box).</source>
          <target state="translated">应用程序编写者可以使用这种方法将外部系统标识符重定向到安全的和/或本地的URI,在目录中查找公共标识符,或从数据库或其他输入源(包括,例如,对话框)读取实体。</target>
        </trans-unit>
        <trans-unit id="ad99f1ff92befdc42409538a4a9dd6dcb1ee33e7" translate="yes" xml:space="preserve">
          <source>Application writers can use this method to redirect external system identifiers to secure and/or local URIs, to look up public identifiers in a catalogue, or to read an entity from a database or other input source (including, for example, a dialog box). Neither XML nor SAX specifies a preferred policy for using public or system IDs to resolve resources. However, SAX specifies how to interpret any InputSource returned by this method, and that if none is returned, then the system ID will be dereferenced as a URL.</source>
          <target state="translated">应用程序编写者可以使用这种方法将外部系统标识符重定向到安全的和/或本地的URI,在目录中查找公共标识符,或者从数据库或其他输入源(包括,例如,对话框)中读取一个实体。XML和SAX都没有指定使用公共或系统ID来解析资源的首选策略。然而,SAX指定了如何解释该方法返回的任何InputSource,如果没有返回任何InputSource,那么系统ID将被解引用为一个URL。</target>
        </trans-unit>
        <trans-unit id="6981b8a3830b95086056c91236e685d7623bc901" translate="yes" xml:space="preserve">
          <source>Application writers should use setSystemId() to provide a base for resolving relative URIs, and may use setPublicId to include a public identifier.</source>
          <target state="translated">应用程序编写者应该使用setSystemId()为解析相对URI提供基础,并可以使用setPublicId来包含一个公共标识符。</target>
        </trans-unit>
        <trans-unit id="83e4c4088ad948a1e43bb6e90ccf8258db578ba3" translate="yes" xml:space="preserve">
          <source>Application writers should use setSystemId() to provide a base for resolving relative URIs, may use setPublicId to include a public identifier, and may use setEncoding to specify the object's character encoding.</source>
          <target state="translated">应用程序编写者应该使用setSystemId()为解析相对的URI提供基础,可以使用setPublicId来包含公共标识符,可以使用setEncoding来指定对象的字符编码。</target>
        </trans-unit>
        <trans-unit id="a62ecdac430fdfde2451dea4ff330e4cd5656ec5" translate="yes" xml:space="preserve">
          <source>Application writers who do not want to implement the entire interface can derive a class from HandlerBase, which implements the default functionality; parser writers can instantiate HandlerBase to obtain a default handler. The application can find the location of any document event using the Locator interface supplied by the Parser through the setDocumentLocator method.</source>
          <target state="translated">不想实现整个接口的应用程序编写者可以从HandlerBase派生一个类,该类实现了默认的功能;解析器编写者可以实例化HandlerBase来获得一个默认的处理程序。应用程序可以通过setDocumentLocator方法使用解析器提供的Locator接口找到任何文档事件的位置。</target>
        </trans-unit>
        <trans-unit id="53b6e2473f35ddd610a148601726bc65198ce010" translate="yes" xml:space="preserve">
          <source>Application-specified source of randomness.</source>
          <target state="translated">应用指定的随机性来源。</target>
        </trans-unit>
        <trans-unit id="aa746d6603ea64f1223d3ba28adfac00d22e42b8" translate="yes" xml:space="preserve">
          <source>ApplicationName - The name of the application currently utilizing the connection</source>
          <target state="translated">ApplicationName-当前使用该连接的应用程序的名称。</target>
        </trans-unit>
        <trans-unit id="132e90c01e41cbf711e24fb6067cf1406ce4cfbe" translate="yes" xml:space="preserve">
          <source>Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should rely on the &lt;code&gt;implies&lt;/code&gt; method to perform policy checks.</source>
          <target state="translated">不鼓励应用程序调用此方法，因为并非所有策略实现都支持此操作。应用程序应依靠 &lt;code&gt;implies&lt;/code&gt; 方法执行策略检查。</target>
        </trans-unit>
        <trans-unit id="e723e9edd551fe7209bf1873036ec2ae65fd9842" translate="yes" xml:space="preserve">
          <source>Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should solely rely on the &lt;code&gt;implies&lt;/code&gt; method to perform policy checks. If an application absolutely must call a getPermissions method, it should call &lt;code&gt;getPermissions(ProtectionDomain)&lt;/code&gt;.</source>
          <target state="translated">不鼓励应用程序调用此方法，因为并非所有策略实现都支持此操作。应用程序应仅依靠 &lt;code&gt;implies&lt;/code&gt; 方法执行策略检查。如果应用程序绝对必须调用getPermissions方法，则应调用 &lt;code&gt;getPermissions(ProtectionDomain)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57a30a3fedb6b3250c115b3fe69d364bce20f841" translate="yes" xml:space="preserve">
          <source>Applications are not expected to use this class directly. A remote object exported to use a dynamic proxy with &lt;a href=&quot;unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../activation/activatable&quot;&gt;&lt;code&gt;Activatable&lt;/code&gt;&lt;/a&gt; has an instance of this class as that proxy's invocation handler.</source>
          <target state="translated">不应期望应用程序直接使用此类。导出的远程对象可以与&lt;a href=&quot;unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../activation/activatable&quot;&gt; &lt;code&gt;Activatable&lt;/code&gt; &lt;/a&gt;一起使用动态代理，具有此类的实例作为该代理的调用处理程序。</target>
        </trans-unit>
        <trans-unit id="bc38f60d3ad17a4c6657603cf5a58c9520bb195b" translate="yes" xml:space="preserve">
          <source>Applications can apply a degree of filtering to determine the level of synchronization that a &lt;code&gt;SyncProvider&lt;/code&gt; implementation offers. The following criteria determine whether a provider is made available to a &lt;code&gt;RowSet&lt;/code&gt; object:</source>
          <target state="translated">应用程序可以应用一定程度的筛选来确定 &lt;code&gt;SyncProvider&lt;/code&gt; 实现提供的同步级别。以下条件确定提供者是否可用于 &lt;code&gt;RowSet&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="44e4145573d0b541941799c9f70c0f0bcbcebc91" translate="yes" xml:space="preserve">
          <source>Applications can call this method even during a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; is being parsed.</source>
          <target state="translated">即使在解析&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;期间，应用程序也可以调用此方法。</target>
        </trans-unit>
        <trans-unit id="153f84eb324e14ccfa14a7560ce2acdf23ea121b" translate="yes" xml:space="preserve">
          <source>Applications can determine if an object supports the &lt;code&gt;AccessibleExtendedText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is an instance of &lt;code&gt;AccessibleExtendedText&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">应用程序可确定对象是否支持 &lt;code&gt;AccessibleExtendedText&lt;/code&gt; 通过首先获得其界面 &lt;code&gt;AccessibleContext&lt;/code&gt; （参见&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;AccessibleContext&lt;/code&gt; 。如果返回值是 &lt;code&gt;AccessibleExtendedText&lt;/code&gt; 的实例，则该对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="c6a911fb9ffbfbfbcf5b7408fbd2cb67176b9e9b" translate="yes" xml:space="preserve">
          <source>Applications can determine if an object supports the AccessibleAction interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the &lt;code&gt;getAccessibleAction&lt;/code&gt; method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">应用程序可确定是否一个目的是通过先获取支持的AccessibleAction接口&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;（参见&lt;a href=&quot;#Accessible&quot;&gt;无障碍&lt;/a&gt;），然后调用 &lt;code&gt;getAccessibleAction&lt;/code&gt; 的方法&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="4176bff2e5f1378ad37d1b8d07311f3665e58076" translate="yes" xml:space="preserve">
          <source>Applications can determine if an object supports the AccessibleComponent interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the &lt;code&gt;getAccessibleComponent&lt;/code&gt; method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">应用程序能够确定一个对象是否支持AccessibleComponent接口通过首先获得其&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;（参见&lt;a href=&quot;#Accessible&quot;&gt;无障碍&lt;/a&gt;），然后调用 &lt;code&gt;getAccessibleComponent&lt;/code&gt; 的方法&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="805f6e698e4e5a778689babdaaef18b2c9a9a771" translate="yes" xml:space="preserve">
          <source>Applications can determine if an object supports the AccessibleSelection interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the &lt;code&gt;getAccessibleSelection&lt;/code&gt; method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">应用程序可确定是否一个目的是通过先获取支持AccessibleSelection接口&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;（参见&lt;a href=&quot;#Accessible&quot;&gt;无障碍&lt;/a&gt;），然后调用 &lt;code&gt;getAccessibleSelection&lt;/code&gt; 的方法&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="d9bef358388a33dfb6045c18f6c5fcfcb395e149" translate="yes" xml:space="preserve">
          <source>Applications can determine if an object supports the AccessibleText interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the &lt;code&gt;getAccessibleText&lt;/code&gt; method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">应用程序可确定是否一个目的是通过先获取支持AccessibleText接口&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;（参见&lt;a href=&quot;#Accessible&quot;&gt;无障碍&lt;/a&gt;），然后调用 &lt;code&gt;getAccessibleText&lt;/code&gt; 的方法&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="cb769fe735c3907709ceb6b86e554b1edfc1f302" translate="yes" xml:space="preserve">
          <source>Applications can determine if an object supports the AccessibleValue interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the &lt;code&gt;getAccessibleValue&lt;/code&gt; method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">应用程序可确定是否一个目的是通过先获取支持的AccessibleValue接口&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;（参见&lt;a href=&quot;#Accessible&quot;&gt;无障碍&lt;/a&gt;），然后调用 &lt;code&gt;getAccessibleValue&lt;/code&gt; 的方法&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="6c566cba08b160bf81fb42960c8496da9c9443bf" translate="yes" xml:space="preserve">
          <source>Applications can form a &lt;code&gt;WebRowSet&lt;/code&gt; object from the &lt;code&gt;CachedRowSet&lt;/code&gt; object returned by this method in order to export the &lt;code&gt;RowSet&lt;/code&gt; schema definition to XML for future use.</source>
          <target state="translated">应用程序可以从此方法返回的 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象中形成 &lt;code&gt;WebRowSet&lt;/code&gt; 对象，以便将 &lt;code&gt;RowSet&lt;/code&gt; 模式定义导出到XML以供将来使用。</target>
        </trans-unit>
        <trans-unit id="848d5fe4fb8d8437ee08a3a497b4e4987d7d51dd" translate="yes" xml:space="preserve">
          <source>Applications can obtain instances of this class by calling &lt;a href=&quot;terminalfactory#terminals()&quot;&gt;TerminalFactory.terminals()&lt;/a&gt;.</source>
          <target state="translated">应用程序可以通过调用&lt;a href=&quot;terminalfactory#terminals()&quot;&gt;TerminalFactory.terminals（）&lt;/a&gt;获得此类的实例。</target>
        </trans-unit>
        <trans-unit id="99ab44a57e9dc2d6d20f4b64c0c5db1c3f3f24ee" translate="yes" xml:space="preserve">
          <source>Applications can override this method in subclasses of &lt;code&gt;ThreadGroup&lt;/code&gt; to provide alternative handling of uncaught exceptions.</source>
          <target state="translated">应用程序可以在 &lt;code&gt;ThreadGroup&lt;/code&gt; 的子类中重写此方法，以提供未捕获异常的替代处理。</target>
        </trans-unit>
        <trans-unit id="dc4b7664066003d5d1a8c56793978b9e21b5defa" translate="yes" xml:space="preserve">
          <source>Applications can send and receive per-message ancillary information through &lt;a href=&quot;messageinfo&quot;&gt;&lt;code&gt;MessageInfo&lt;/code&gt;&lt;/a&gt;. For example, the stream number that the message it is to be sent or received from. The SCTP stack is event driven and applications can receive notifications of certain SCTP events by invoking the &lt;code&gt;receive&lt;/code&gt; method of the SCTP channel with an appropriate &lt;a href=&quot;notificationhandler&quot;&gt;&lt;code&gt;notification handler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">应用程序可以通过&lt;a href=&quot;messageinfo&quot;&gt; &lt;code&gt;MessageInfo&lt;/code&gt; &lt;/a&gt;发送和接收每个消息的辅助信息。例如，发送或接收消息的流号。SCTP堆栈是事件驱动的，应用程序可以通过使用适当的&lt;a href=&quot;notificationhandler&quot;&gt; &lt;code&gt;notification handler&lt;/code&gt; &lt;/a&gt;调用SCTP通道的 &lt;code&gt;receive&lt;/code&gt; 方法来接收某些SCTP事件的通知。</target>
        </trans-unit>
        <trans-unit id="3ed1edc0226a5b9fdb98ea718f5c59aef398e3b0" translate="yes" xml:space="preserve">
          <source>Applications can specify &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances returned by the &lt;code&gt;getControl&lt;/code&gt; factory methods or created from a subclass of &lt;code&gt;ResourceBundle.Control&lt;/code&gt; to customize the bundle loading process. The following are examples of changing the default bundle loading process.</source>
          <target state="translated">应用程序可以指定 &lt;code&gt;getControl&lt;/code&gt; 工厂方法返回的或从 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 的子类创建的 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 实例，以自定义捆绑包加载过程。以下是更改默认捆绑软件加载过程的示例。</target>
        </trans-unit>
        <trans-unit id="c0f4b582b88b3d6f1c2968f7d0f433534f21b7f4" translate="yes" xml:space="preserve">
          <source>Applications can subclass this class to indicate similar exceptions.</source>
          <target state="translated">应用程序可以将该类子类化,以表示类似的异常。</target>
        </trans-unit>
        <trans-unit id="b5639adf96080f7fa0d069edeab3220011ef933f" translate="yes" xml:space="preserve">
          <source>Applications can use a &lt;code&gt;StreamPrintService&lt;/code&gt; obtained from a factory in place of a &lt;code&gt;PrintService&lt;/code&gt; which represents a physical printer device.</source>
          <target state="translated">应用程序可以使用从工厂获得的 &lt;code&gt;StreamPrintService&lt;/code&gt; 代替代表物理打印机设备的 &lt;code&gt;PrintService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a0deb30755c5eafb7d8d8ce8df9ecc03af2ede9" translate="yes" xml:space="preserve">
          <source>Applications have to ensure that exclusive access is correctly released. This can be achieved by executing the &lt;code&gt;beginExclusive()&lt;/code&gt; and &lt;code&gt;endExclusive&lt;/code&gt; calls in a &lt;code&gt;try ... finally&lt;/code&gt; block.</source>
          <target state="translated">应用程序必须确保独占访问已正确释放。这可以通过在 &lt;code&gt;try ... finally&lt;/code&gt; 块中执行 &lt;code&gt;beginExclusive()&lt;/code&gt; 和 &lt;code&gt;endExclusive&lt;/code&gt; 调用来实现。</target>
        </trans-unit>
        <trans-unit id="3963cd69ff2fadde570d87ead539525be2c79bb1" translate="yes" xml:space="preserve">
          <source>Applications implement subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; in order to extend the manner in which the Java virtual machine dynamically loads classes.</source>
          <target state="translated">应用程序实现 &lt;code&gt;ClassLoader&lt;/code&gt; 的子类，以扩展Java虚拟机动态加载类的方式。</target>
        </trans-unit>
        <trans-unit id="be8a4811cc1fccfd081cd55755b371f53d7a6c32" translate="yes" xml:space="preserve">
          <source>Applications locate instances of this class by calling the &lt;a href=&quot;#lookupStreamPrintServiceFactories(javax.print.DocFlavor,java.lang.String)&quot;&gt;&lt;code&gt;lookupStreamPrintServiceFactories(DocFlavor, String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">应用程序通过调用&lt;a href=&quot;#lookupStreamPrintServiceFactories(javax.print.DocFlavor,java.lang.String)&quot;&gt; &lt;code&gt;lookupStreamPrintServiceFactories(DocFlavor, String)&lt;/code&gt; &lt;/a&gt;方法来定位此类的实例。</target>
        </trans-unit>
        <trans-unit id="3c4bc5621eb479f9d5877f4770a5ce46653ea10b" translate="yes" xml:space="preserve">
          <source>Applications locate instances of this class by calling the &lt;a href=&quot;streamprintservicefactory#lookupStreamPrintServiceFactories-javax.print.DocFlavor-java.lang.String-&quot;&gt;&lt;code&gt;lookupStreamPrintServiceFactories(DocFlavor, String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">应用程序通过调用&lt;a href=&quot;streamprintservicefactory#lookupStreamPrintServiceFactories-javax.print.DocFlavor-java.lang.String-&quot;&gt; &lt;code&gt;lookupStreamPrintServiceFactories(DocFlavor, String)&lt;/code&gt; &lt;/a&gt;方法来定位此类的实例。</target>
        </trans-unit>
        <trans-unit id="493c346b5bac7af3f7bdee8467d56ce170c93671" translate="yes" xml:space="preserve">
          <source>Applications may not invoke this method while a parse is in progress (they should create a new Parser instead for each additional XML document). Once a parse is complete, an application may reuse the same Parser object, possibly with a different input source.</source>
          <target state="translated">在解析过程中,应用程序不可以调用这个方法(他们应该为每个额外的XML文档创建一个新的Parser)。一旦解析完成,应用程序可以重复使用同一个Parser对象,可能会使用不同的输入源。</target>
        </trans-unit>
        <trans-unit id="7d09f696befdb9d57275ea4e57836585e74b89fd" translate="yes" xml:space="preserve">
          <source>Applications may not invoke this method while a parse is in progress (they should create a new XMLReader instead for each nested XML document). Once a parse is complete, an application may reuse the same XMLReader object, possibly with a different input source. Configuration of the XMLReader object (such as handler bindings and values established for feature flags and properties) is unchanged by completion of a parse, unless the definition of that aspect of the configuration explicitly specifies other behavior. (For example, feature flags or properties exposing characteristics of the document being parsed.)</source>
          <target state="translated">在解析过程中,应用程序不能调用该方法(他们应该为每个嵌套的 XML 文档创建一个新的 XMLReader)。一旦解析完成,应用程序可以重复使用同一个 XMLReader 对象,可能使用不同的输入源。XMLReader 对象的配置(如处理程序绑定和为特征标志和属性建立的值)在解析完成后不会改变,除非配置的那个方面的定义明确指定了其他行为。例如,暴露被解析文档特性的特征标志或属性)。</target>
        </trans-unit>
        <trans-unit id="e78e65ff374391f1ab4f62a14ea9dc6e2e303832" translate="yes" xml:space="preserve">
          <source>Applications may override any default GUIs and provide their own controllers embedded in their own framework. All that is required is that the &lt;code&gt;activate&lt;/code&gt; method behave modally (not returning until either cancelled or committed), though it need not put up an explicitly modal dialog. Such a non-modal GUI component would be coded roughly as follows:</source>
          <target state="translated">应用程序可以覆盖任何默认的GUI，并在其自己的框架中嵌入自己的控制器。所需要做的就是，尽管不需要建立一个显式的模态对话框，但是 &lt;code&gt;activate&lt;/code&gt; 方法的行为是模态的（直到取消或提交后才返回）。这样的非模式GUI组件将大致编码如下：</target>
        </trans-unit>
        <trans-unit id="4b587573b858a58a96fa5abac5ee6d8933768d15" translate="yes" xml:space="preserve">
          <source>Applications may override any default GUIs and provide their own controllers embedded in their own framework. All that is required is that the&lt;code&gt;activate&lt;/code&gt; method behave modally (not returning until either cancelled or committed), though it need not put up an explicitly modal dialog. Such a non-modal GUI component would be coded roughly as follows:</source>
          <target state="translated">应用程序可以覆盖任何默认的GUI，并在其自己的框架中嵌入自己的控制器。所需要做的就是，尽管不需要建立一个显式的模态对话框，但是 &lt;code&gt;activate&lt;/code&gt; 方法的行为是模态的（直到取消或提交后才返回）。这样的非模式GUI组件将大致编码如下：</target>
        </trans-unit>
        <trans-unit id="12e0a28eb3da6b82bdbca83b99663ba8b878dc31" translate="yes" xml:space="preserve">
          <source>Applications may register a new or different entity resolver in the middle of a parse, and the SAX parser must begin using the new resolver immediately.</source>
          <target state="translated">应用程序可以在解析过程中注册一个新的或不同的实体解析器,SAX解析器必须立即开始使用新的解析器。</target>
        </trans-unit>
        <trans-unit id="cb83f4c4e3f9ac4e3ace42a53002fec40835c90b" translate="yes" xml:space="preserve">
          <source>Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.</source>
          <target state="translated">应用程序可以在解析中间注册一个新的或不同的处理程序,SAX解析器必须立即开始使用新的处理程序。</target>
        </trans-unit>
        <trans-unit id="d5ea9e7d4716fdd3b357b22b1ab31a181081d121" translate="yes" xml:space="preserve">
          <source>Applications may register a new or different resolver in the middle of a parse, and the SAX parser must begin using the new resolver immediately.</source>
          <target state="translated">应用程序可以在解析过程中注册一个新的或不同的解析器,SAX解析器必须立即开始使用新的解析器。</target>
        </trans-unit>
        <trans-unit id="8479d65a0cb75ab17ac2952d57865056d13ec785" translate="yes" xml:space="preserve">
          <source>Applications may use setPublicId to include a public identifier as well, or setEncoding to specify the character encoding, if known.</source>
          <target state="translated">应用程序可以使用setPublicId来包含一个公共标识符,或者使用setEncoding来指定字符编码(如果已知)。</target>
        </trans-unit>
        <trans-unit id="f1ab22008fe450339467853779a771cc39c1b147" translate="yes" xml:space="preserve">
          <source>Applications may use the &lt;code&gt;DatabaseMetaData.getClientInfoProperties&lt;/code&gt; method to determine the client info properties supported by the driver and the maximum length that may be specified for each property.</source>
          <target state="translated">应用程序可以使用 &lt;code&gt;DatabaseMetaData.getClientInfoProperties&lt;/code&gt; 方法来确定驱动程序支持的客户端信息属性以及可以为每个属性指定的最大长度。</target>
        </trans-unit>
        <trans-unit id="86abca252c8dc1fc986531ce260cb232f29e5150" translate="yes" xml:space="preserve">
          <source>Applications may use the &lt;code&gt;DatabaseMetaData.getClientInfoProperties&lt;/code&gt; method to determine the client info properties supported by the driver.</source>
          <target state="translated">应用程序可以使用 &lt;code&gt;DatabaseMetaData.getClientInfoProperties&lt;/code&gt; 方法来确定驱动程序支持的客户端信息属性。</target>
        </trans-unit>
        <trans-unit id="f8c1f1a0575644de66b4266591eea42ecef57ba2" translate="yes" xml:space="preserve">
          <source>Applications might choose to process delegated tasks in different threads. When an &lt;code&gt;SSLEngine&lt;/code&gt; is created, the current &lt;a href=&quot;../../../java/security/accesscontrolcontext&quot;&gt;&lt;code&gt;AccessControlContext&lt;/code&gt;&lt;/a&gt; is saved. All future delegated tasks will be processed using this context: that is, all access control decisions will be made using the context captured at engine creation.</source>
          <target state="translated">应用程序可能选择在不同的线程中处理委派的任务。当 &lt;code&gt;SSLEngine&lt;/code&gt; 的创建，当前&lt;a href=&quot;../../../java/security/accesscontrolcontext&quot;&gt; &lt;code&gt;AccessControlContext&lt;/code&gt; &lt;/a&gt;被保存。将来所有委托的任务都将使用此上下文进行处理：也就是说，所有访问控制决策都将使用在引擎创建时捕获的上下文来做出。</target>
        </trans-unit>
        <trans-unit id="2c21b853c91398004c3c0d3991f71ec0b5c8541a" translate="yes" xml:space="preserve">
          <source>Applications must ensure that &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../../../org/xml/sax/contenthandler#startPrefixMapping(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.startPrefixMapping(String,String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../org/xml/sax/contenthandler#endPrefixMapping(java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.endPrefixMapping(String)&lt;/code&gt;&lt;/a&gt; are invoked properly. Similarly, the user-specified &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; will receive startPrefixMapping/endPrefixMapping events. If the &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; introduces additional namespace bindings, the user-specified &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; will receive additional startPrefixMapping/endPrefixMapping events.</source>
          <target state="translated">应用程序必须确保&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../../org/xml/sax/contenthandler#startPrefixMapping(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.startPrefixMapping(String,String)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../org/xml/sax/contenthandler#endPrefixMapping(java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.endPrefixMapping(String)&lt;/code&gt; &lt;/a&gt;被正确调用。同样，用户指定的&lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;将接收startPrefixMapping / endPrefixMapping事件。如果&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;引入了其他名称空间绑定，则用户指定的&lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;将收到其他startPrefixMapping / endPrefixMapping事件。</target>
        </trans-unit>
        <trans-unit id="a4f08185d62df49415723581536be4829452fc6a" translate="yes" xml:space="preserve">
          <source>Applications needing to implement custom handling for external resources can implement this interface and register their implementation by setting the &quot;resource-resolver&quot; parameter of &lt;code&gt;DOMConfiguration&lt;/code&gt; objects attached to &lt;code&gt;LSParser&lt;/code&gt; and &lt;code&gt;LSSerializer&lt;/code&gt;. It can also be register on &lt;code&gt;DOMConfiguration&lt;/code&gt; objects attached to &lt;code&gt;Document&lt;/code&gt; if the &quot;LS&quot; feature is supported.</source>
          <target state="translated">需要实现对外部资源的自定义处理的应用程序可以通过设置连接到 &lt;code&gt;LSParser&lt;/code&gt; 和 &lt;code&gt;LSSerializer&lt;/code&gt; 的 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象的&amp;ldquo; resource-resolver&amp;rdquo;参数来实现此接口并注册其实现。如果支持&amp;ldquo; LS&amp;rdquo;功能，也可以在附加到 &lt;code&gt;Document&lt;/code&gt; 的 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象上注册它。</target>
        </trans-unit>
        <trans-unit id="4272d2b9f815f524c6f692c44d6448c0e43bc509" translate="yes" xml:space="preserve">
          <source>Applications or applets that use an exemption mechanism may be granted stronger encryption capabilities than those which don't.</source>
          <target state="translated">使用豁免机制的应用程序或小程序可能会被授予比不使用豁免机制的应用程序或小程序更强的加密功能。</target>
        </trans-unit>
        <trans-unit id="d34e45e56b7625b178f394ccedba2bf275358f9a" translate="yes" xml:space="preserve">
          <source>Applications should normally obtain an instance from &lt;a href=&quot;zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt;. This factory is only intended for use when creating &lt;a href=&quot;zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">应用程序通常应从&lt;a href=&quot;zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; &lt;/a&gt;获取实例。该工厂仅在创建&lt;a href=&quot;zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; &lt;/a&gt;时使用。</target>
        </trans-unit>
        <trans-unit id="856e62d7222e9db0956537129ad5bbf3467b3d25" translate="yes" xml:space="preserve">
          <source>Applications should not add children directly to the scrollpane.</source>
          <target state="translated">应用程序不应直接在滚动窗格中添加子女。</target>
        </trans-unit>
        <trans-unit id="962732fa9130bc39a7c591ac82bbfe99253b366a" translate="yes" xml:space="preserve">
          <source>Applications should not create their own file descriptors.</source>
          <target state="translated">应用程序不应创建自己的文件描述符。</target>
        </trans-unit>
        <trans-unit id="011adffeaaf1e10d2cacbfcf3b993f3a66b5e494" translate="yes" xml:space="preserve">
          <source>Applications should not normally invoke this method directly.</source>
          <target state="translated">应用程序一般不应直接调用该方法。</target>
        </trans-unit>
        <trans-unit id="bff34b849d467e1176772314869bdf7c54563ef2" translate="yes" xml:space="preserve">
          <source>Applications should throw instances of this class to indicate other illegal uses of the &lt;code&gt;null&lt;/code&gt; object. &lt;code&gt;NullPointerException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">应用程序应抛出此类的实例，以指示对 &lt;code&gt;null&lt;/code&gt; 对象的其他非法使用。虚拟机可以构造 &lt;code&gt;NullPointerException&lt;/code&gt; 对象，就像&lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;禁用抑制和/或堆栈跟踪不可写一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c6a7fe42dc9ff4200bf574b34466584498c0fd3" translate="yes" xml:space="preserve">
          <source>Applications should throw instances of this class to indicate other illegal uses of the &lt;code&gt;null&lt;/code&gt; object. &lt;code&gt;NullPointerException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">应用程序应抛出此类的实例，以指示对 &lt;code&gt;null&lt;/code&gt; 对象的其他非法使用。虚拟机可以构造 &lt;code&gt;NullPointerException&lt;/code&gt; 对象，就像&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;禁用抑制和/或堆栈跟踪不可写一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe25f35fb35beeb62ad61ab8f11a46b5fdc2ce40" translate="yes" xml:space="preserve">
          <source>Applications that need to define a subclass of &lt;code&gt;InputStream&lt;/code&gt; must always provide a method that returns the next byte of input.</source>
          <target state="translated">需要定义 &lt;code&gt;InputStream&lt;/code&gt; 的子类的应用程序必须始终提供一种返回输入的下一个字节的方法。</target>
        </trans-unit>
        <trans-unit id="31880f2fe972133fb48d5fdc09b7d923da0cb8a5" translate="yes" xml:space="preserve">
          <source>Applications that need to define a subclass of &lt;code&gt;OutputStream&lt;/code&gt; must always provide at least a method that writes one byte of output.</source>
          <target state="translated">需要定义 &lt;code&gt;OutputStream&lt;/code&gt; 子类的应用程序必须始终至少提供一种写入一个字节输出的方法。</target>
        </trans-unit>
        <trans-unit id="e8847b03a0b6b50f755539e3509745b4d6d7a081" translate="yes" xml:space="preserve">
          <source>Applications that override the &lt;code&gt;clone&lt;/code&gt; method can also throw this exception to indicate that an object could not or should not be cloned.</source>
          <target state="translated">覆盖 &lt;code&gt;clone&lt;/code&gt; 方法的应用程序也可能引发此异常，以指示无法或不应克隆对象。</target>
        </trans-unit>
        <trans-unit id="0130a94bc9bd195ae61ee9f02357e4650f694ab4" translate="yes" xml:space="preserve">
          <source>Applications that use Robot for purposes other than self-testing should handle these error conditions gracefully.</source>
          <target state="translated">使用Robot进行自我测试以外的其他目的的应用程序应优雅地处理这些错误条件。</target>
        </trans-unit>
        <trans-unit id="bdfc5456438722c57e4af0077c329cc9dc195e2e" translate="yes" xml:space="preserve">
          <source>Applications that want a stricter policy should override this method. If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the &lt;code&gt;RuntimePermission(&quot;modifyThread&quot;)&lt;/code&gt; permission, and if so, return silently. This is to ensure that code granted that permission (such as the JDK itself) is allowed to manipulate any thread.</source>
          <target state="translated">需要更严格策略的应用程序应重写此方法。如果重写此方法，则重写它的方法还应该检查调用线程是否具有 &lt;code&gt;RuntimePermission(&quot;modifyThread&quot;)&lt;/code&gt; 权限，如果有，则静默返回。这是为了确保授予该权限的代码（例如JDK本身）被允许操纵任何线程。</target>
        </trans-unit>
        <trans-unit id="34e2d7454bea95269be25ddc380b555451ae0748" translate="yes" xml:space="preserve">
          <source>Applications that want a stricter policy should override this method. If this method is overridden, the method that overrides it should additionally check to see if the calling thread has the &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; permission, and if so, return silently. This is to ensure that code granted that permission (such as the JDK itself) is allowed to manipulate any thread.</source>
          <target state="translated">需要更严格策略的应用程序应重写此方法。如果重写了此方法，则重写该方法的方法还应该检查调用线程是否具有 &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; 权限，如果有，则静默返回。这是为了确保授予该权限的代码（例如JDK本身）被允许操纵任何线程。</target>
        </trans-unit>
        <trans-unit id="c5fcbc2973f8b1d1a961945bac1ca8ebc1df910f" translate="yes" xml:space="preserve">
          <source>Applications use only the static methods of this abstract class. The instance methods are implemented by a service provider in a subclass and the unification of the results from all installed lookup classes are reported by the static methods of this class when called by the application.</source>
          <target state="translated">应用程序只使用这个抽象类的静态方法。实例方法由服务提供者在子类中实现,当应用程序调用该类的静态方法时,所有安装的查找类的结果统一由该类的静态方法报告。</target>
        </trans-unit>
        <trans-unit id="71f0645594ce5b298e9e02a37a9af1da7ec30fa8" translate="yes" xml:space="preserve">
          <source>Applications use the &lt;code&gt;DataSource&lt;/code&gt; and &lt;code&gt;RowSet&lt;/code&gt; APIs directly, but the connection pooling and distributed transaction APIs are used internally by the middle-tier infrastructure.</source>
          <target state="translated">应用程序直接使用 &lt;code&gt;DataSource&lt;/code&gt; 和 &lt;code&gt;RowSet&lt;/code&gt; API，但是中间层基础结构在内部使用连接池和分布式事务API。</target>
        </trans-unit>
        <trans-unit id="0b3abfab5d4a29aa5145237a84cef9c01d1b2a62" translate="yes" xml:space="preserve">
          <source>Applications use this class by overriding &lt;a href=&quot;#getPasswordAuthentication()&quot;&gt;&lt;code&gt;getPasswordAuthentication()&lt;/code&gt;&lt;/a&gt; in a sub-class. This method will typically use the various getXXX() accessor methods to get information about the entity requesting authentication. It must then acquire a username and password either by interacting with the user or through some other non-interactive means. The credentials are then returned as a &lt;a href=&quot;passwordauthentication&quot;&gt;&lt;code&gt;PasswordAuthentication&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="translated">应用程序通过重写子类中的&lt;a href=&quot;#getPasswordAuthentication()&quot;&gt; &lt;code&gt;getPasswordAuthentication()&lt;/code&gt; &lt;/a&gt;来使用此类。此方法通常将使用各种getXXX（）访问器方法来获取有关请求身份验证的实体的信息。然后，它必须通过与用户交互或通过其他一些非交互方式来获取用户名和密码。然后，将凭据作为&lt;a href=&quot;passwordauthentication&quot;&gt; &lt;code&gt;PasswordAuthentication&lt;/code&gt; &lt;/a&gt;返回值返回。</target>
        </trans-unit>
        <trans-unit id="8085b2ec40f77a6963a9d772f8821a4a760738cb" translate="yes" xml:space="preserve">
          <source>Applications use this class by overriding &lt;a href=&quot;authenticator#getPasswordAuthentication--&quot;&gt;&lt;code&gt;getPasswordAuthentication()&lt;/code&gt;&lt;/a&gt; in a sub-class. This method will typically use the various getXXX() accessor methods to get information about the entity requesting authentication. It must then acquire a username and password either by interacting with the user or through some other non-interactive means. The credentials are then returned as a &lt;a href=&quot;passwordauthentication&quot;&gt;&lt;code&gt;PasswordAuthentication&lt;/code&gt;&lt;/a&gt; return value.</source>
          <target state="translated">应用程序通过重写子类中的&lt;a href=&quot;authenticator#getPasswordAuthentication--&quot;&gt; &lt;code&gt;getPasswordAuthentication()&lt;/code&gt; &lt;/a&gt;来使用此类。此方法通常将使用各种getXXX（）访问器方法来获取有关请求身份验证的实体的信息。然后，它必须通过与用户交互或通过其他一些非交互方式来获取用户名和密码。然后，将凭据作为&lt;a href=&quot;passwordauthentication&quot;&gt; &lt;code&gt;PasswordAuthentication&lt;/code&gt; &lt;/a&gt;返回值返回。</target>
        </trans-unit>
        <trans-unit id="d9af378508928918978a91b776f2d39c8dbd80a3" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing hints for an internal session reuse strategy.</source>
          <target state="translated">使用该工厂方法的应用程序正在为内部会话重用策略提供提示。</target>
        </trans-unit>
        <trans-unit id="a41b269f9b80c25739f1b1837b9eea19b5c0ff21" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, &lt;a href=&quot;#createSSLEngine(java.lang.String,int)&quot;&gt;&lt;code&gt;createSSLEngine(String, int)&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">使用此工厂方法的应用程序没有提供有关内部会话重用策略的提示。如果需要提示，&lt;a href=&quot;#createSSLEngine(java.lang.String,int)&quot;&gt; &lt;code&gt;createSSLEngine(String, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2e3472131ccf5e729e75486c663694dc0281794" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, &lt;a href=&quot;#engineCreateSSLEngine(java.lang.String,int)&quot;&gt;&lt;code&gt;engineCreateSSLEngine(String, int)&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">使用此工厂方法的应用程序没有提供有关内部会话重用策略的提示。如果需要提示，&lt;a href=&quot;#engineCreateSSLEngine(java.lang.String,int)&quot;&gt; &lt;code&gt;engineCreateSSLEngine(String, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed7bfe89dc2287b744eafdd591732d2e9fb94e52" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, &lt;a href=&quot;sslcontext#createSSLEngine-java.lang.String-int-&quot;&gt;&lt;code&gt;createSSLEngine(String, int)&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">使用此工厂方法的应用程序没有提供有关内部会话重用策略的提示。如果需要提示，&lt;a href=&quot;sslcontext#createSSLEngine-java.lang.String-int-&quot;&gt; &lt;code&gt;createSSLEngine(String, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6739fbed1280ca989694c5498cfd3c0394faccc4" translate="yes" xml:space="preserve">
          <source>Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, &lt;a href=&quot;sslcontextspi#engineCreateSSLEngine-java.lang.String-int-&quot;&gt;&lt;code&gt;engineCreateSSLEngine(String, int)&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">使用此工厂方法的应用程序没有提供有关内部会话重用策略的提示。如果需要提示，&lt;a href=&quot;sslcontextspi#engineCreateSSLEngine-java.lang.String-int-&quot;&gt; &lt;code&gt;engineCreateSSLEngine(String, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="174371772db23b6e9faea3024b79602067942aaa" translate="yes" xml:space="preserve">
          <source>Applications will create a credential object passing the desired parameters. The application can then use the query methods to obtain specific information about the instantiated credential object. When the credential is no longer needed, the application should call the &lt;a href=&quot;#dispose()&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; method to release any resources held by the credential object and to destroy any cryptographically sensitive information.</source>
          <target state="translated">应用程序将创建一个传递所需参数的凭证对象。然后，应用程序可以使用查询方法来获取有关实例化凭证对象的特定信息。当不再需要凭证时，应用程序应调用&lt;a href=&quot;#dispose()&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt;方法以释放凭证对象拥有的所有资源，并销毁任何对密码敏感的信息。</target>
        </trans-unit>
        <trans-unit id="6ad0bc9700b7c348c0ae0c2e93eee2621ce05f25" translate="yes" xml:space="preserve">
          <source>Applications working with file paths and file URIs should take great care to use the appropriate methods to convert between the two. The &lt;a href=&quot;../nio/file/path#of(java.net.URI)&quot;&gt;&lt;code&gt;Path.of(URI)&lt;/code&gt;&lt;/a&gt; factory method and the &lt;a href=&quot;../io/file#%3Cinit%3E(java.net.URI)&quot;&gt;&lt;code&gt;File(URI)&lt;/code&gt;&lt;/a&gt; constructor can be used to create &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects from a file URI. &lt;a href=&quot;../nio/file/path#toUri()&quot;&gt;&lt;code&gt;Path.toUri()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/file#toURI()&quot;&gt;&lt;code&gt;File.toURI()&lt;/code&gt;&lt;/a&gt; can be used to create a &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; from a file path, which can be converted to URL using &lt;a href=&quot;uri#toURL()&quot;&gt;&lt;code&gt;URI.toURL()&lt;/code&gt;&lt;/a&gt;. Applications should never try to &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;construct&lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;parse&lt;/a&gt; a &lt;code&gt;URL&lt;/code&gt; from the direct string representation of a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Path&lt;/code&gt; instance.</source>
          <target state="translated">使用文件路径和文件URI的应用程序应格外小心，以使用适当的方法在两者之间进行转换。所述&lt;a href=&quot;../nio/file/path#of(java.net.URI)&quot;&gt; &lt;code&gt;Path.of(URI)&lt;/code&gt; &lt;/a&gt;工厂方法和&lt;a href=&quot;../io/file#%3Cinit%3E(java.net.URI)&quot;&gt; &lt;code&gt;File(URI)&lt;/code&gt; &lt;/a&gt;的构造可用于创建&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;从一个文件的URI的对象。&lt;a href=&quot;../nio/file/path#toUri()&quot;&gt; &lt;code&gt;Path.toUri()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../io/file#toURI()&quot;&gt; &lt;code&gt;File.toURI()&lt;/code&gt; &lt;/a&gt;可用于从文件路径创建&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;，可使用&lt;a href=&quot;uri#toURL()&quot;&gt; &lt;code&gt;URI.toURL()&lt;/code&gt; &lt;/a&gt;将其转换为URL 。应用程序不应该试图&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;构建&lt;/a&gt;或&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;解析&lt;/a&gt;一个 &lt;code&gt;URL&lt;/code&gt; 从直接字符串表示 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;Path&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="bcd42fa637702403f195edee13144d1173a8ef22" translate="yes" xml:space="preserve">
          <source>Applications working with file paths and file URIs should take great care to use the appropriate methods to convert between the two. The &lt;a href=&quot;../nio/file/path#of(java.net.URI)&quot;&gt;&lt;code&gt;Path.of(URI)&lt;/code&gt;&lt;/a&gt; factory method and the &lt;a href=&quot;../io/file#%3Cinit%3E(java.net.URI)&quot;&gt;&lt;code&gt;File(URI)&lt;/code&gt;&lt;/a&gt; constructor can be used to create &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects from a file URI. &lt;a href=&quot;../nio/file/path#toUri()&quot;&gt;&lt;code&gt;Path.toUri()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../io/file#toURI()&quot;&gt;&lt;code&gt;File.toURI()&lt;/code&gt;&lt;/a&gt; can be used to create a &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; from a file path. Applications should never try to &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;construct&lt;/a&gt;, &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;parse&lt;/a&gt;, or &lt;a href=&quot;#resolve(java.lang.String)&quot;&gt;resolve&lt;/a&gt; a &lt;code&gt;URI&lt;/code&gt; from the direct string representation of a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;Path&lt;/code&gt; instance.</source>
          <target state="translated">使用文件路径和文件URI的应用程序应格外小心，以使用适当的方法在两者之间进行转换。所述&lt;a href=&quot;../nio/file/path#of(java.net.URI)&quot;&gt; &lt;code&gt;Path.of(URI)&lt;/code&gt; &lt;/a&gt;工厂方法和&lt;a href=&quot;../io/file#%3Cinit%3E(java.net.URI)&quot;&gt; &lt;code&gt;File(URI)&lt;/code&gt; &lt;/a&gt;的构造可用于创建&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;从一个文件的URI的对象。&lt;a href=&quot;../nio/file/path#toUri()&quot;&gt; &lt;code&gt;Path.toUri()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../io/file#toURI()&quot;&gt; &lt;code&gt;File.toURI()&lt;/code&gt; &lt;/a&gt;可用于从文件路径创建&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;。应用程序不应该试图&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;构建&lt;/a&gt;，&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;解析&lt;/a&gt;，或&lt;a href=&quot;#resolve(java.lang.String)&quot;&gt;解决&lt;/a&gt;一个 &lt;code&gt;URI&lt;/code&gt; 从直接字符串表示 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;Path&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="7887c222c6fe399a39e8e8a65758153aeb03db5e" translate="yes" xml:space="preserve">
          <source>Applies SSLParameters to newly accepted connections.</source>
          <target state="translated">将SSLParameters应用于新接受的连接。</target>
        </trans-unit>
        <trans-unit id="79ba78d7bcdd2ef1aa6315a8bc3d5a4431396b29" translate="yes" xml:space="preserve">
          <source>Applies SSLParameters to this engine.</source>
          <target state="translated">将SSLParameters应用于此引擎。</target>
        </trans-unit>
        <trans-unit id="e85201a8248d6af8e821fba56acc7387166ad503" translate="yes" xml:space="preserve">
          <source>Applies SSLParameters to this socket.</source>
          <target state="translated">将SSLParameters应用于此套接字。</target>
        </trans-unit>
        <trans-unit id="a7589e9feb0956faa7e2cd8d1076a095a2bc0a62" translate="yes" xml:space="preserve">
          <source>Applies a conversion from a source type to a destination type.</source>
          <target state="translated">将源类型转换为目的类型。</target>
        </trans-unit>
        <trans-unit id="0b85f712b61c24db5923e83d81bcc03c037eb36a" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this directive.</source>
          <target state="translated">将访问者应用于此指令。</target>
        </trans-unit>
        <trans-unit id="f70e5aa14b98d061b144c57c1d08e4e87dea1418" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this element.</source>
          <target state="translated">将一个访问者应用到这个元素上。</target>
        </trans-unit>
        <trans-unit id="69489835c4b5d6eb7e6d279c3ea83008ccf5e5c3" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this type.</source>
          <target state="translated">将访客应用于此类型。</target>
        </trans-unit>
        <trans-unit id="1411b1eda0cd57f82271f22c2d75ff3043a054c4" translate="yes" xml:space="preserve">
          <source>Applies a visitor to this value.</source>
          <target state="translated">将访问者应用于此值。</target>
        </trans-unit>
        <trans-unit id="1f7a321f950b56b1d86afe6dff8ec36119d0fc48" translate="yes" xml:space="preserve">
          <source>Applies argument filters to both the invocation and the guard (if it exists and has at least &lt;code&gt;pos + 1&lt;/code&gt; parameters) with &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;&lt;code&gt;MethodHandles.filterArguments(MethodHandle, int, MethodHandle...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将参数过滤器通过&lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt; &lt;code&gt;MethodHandles.filterArguments(MethodHandle, int, MethodHandle...)&lt;/code&gt; &lt;/a&gt;应用于调用和防护（如果存在且至少具有 &lt;code&gt;pos + 1&lt;/code&gt; 参数）。</target>
        </trans-unit>
        <trans-unit id="e8e3598101e8440656d941dd38f4235e12b1316f" translate="yes" xml:space="preserve">
          <source>Applies capture conversion to a type.</source>
          <target state="translated">应用捕获转换到一个类型。</target>
        </trans-unit>
        <trans-unit id="5cf560b44948d66af3e69c3ef06fa9ba31c7cb6c" translate="yes" xml:space="preserve">
          <source>Applies per-message security services over the established security context using streams. The method will return a token with the application supplied data and a cryptographic MIC over it. The data may be encrypted if confidentiality (privacy) was requested. This method is equivalent to the byte array based &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">使用流在已建立的安全上下文上应用按邮件的安全服务。该方法将返回一个令牌，其中包含应用程序提供的数据和其上的加密MIC。如果请求机密性（保密性），则数据可以被加密。此方法等效于基于字节数组的&lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="d50cd1691b9234a78c92d28bb0b2c107c36c943c" translate="yes" xml:space="preserve">
          <source>Applies per-message security services over the established security context.</source>
          <target state="translated">在已建立的安全上下文上应用每条消息的安全服务。</target>
        </trans-unit>
        <trans-unit id="9b0ac9b16527196413ad532b5060c5eb8219b1e0" translate="yes" xml:space="preserve">
          <source>Applies per-message security services over the established security context. The method will return a token with the application supplied data and a cryptographic MIC over it. The data may be encrypted if confidentiality (privacy) was requested.</source>
          <target state="translated">在已建立的安全上下文上应用每条消息的安全服务。该方法将返回一个包含应用程序提供的数据和加密MIC的令牌。如果要求保密(隐私),数据可能会被加密。</target>
        </trans-unit>
        <trans-unit id="c3d959679821060b0a8dda5f78ba65f52b2da2c7" translate="yes" xml:space="preserve">
          <source>Applies the &lt;code&gt;AttributeValueExp&lt;/code&gt; on an MBean.</source>
          <target state="translated">将 &lt;code&gt;AttributeValueExp&lt;/code&gt; 应用于MBean。</target>
        </trans-unit>
        <trans-unit id="22c9e18e5a5fe0b138e9c7059d5c927f19cffe9b" translate="yes" xml:space="preserve">
          <source>Applies the &lt;code&gt;AttributeValueExp&lt;/code&gt; on an MBean. This method calls &lt;a href=&quot;#getAttribute(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getAttribute(name)&lt;/code&gt;&lt;/a&gt; and wraps the result as a &lt;code&gt;ValueExp&lt;/code&gt;. The value returned by &lt;code&gt;getAttribute&lt;/code&gt; must be a &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, or &lt;code&gt;Boolean&lt;/code&gt;; otherwise this method throws a &lt;code&gt;BadAttributeValueExpException&lt;/code&gt;, which will cause the containing query to be false for this &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;AttributeValueExp&lt;/code&gt; 应用于MBean。此方法调用&lt;a href=&quot;#getAttribute(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getAttribute(name)&lt;/code&gt; &lt;/a&gt;并将结果包装为 &lt;code&gt;ValueExp&lt;/code&gt; 。 &lt;code&gt;getAttribute&lt;/code&gt; 返回的值必须是 &lt;code&gt;Number&lt;/code&gt; ， &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Boolean&lt;/code&gt; ；否则，此方法将抛出 &lt;code&gt;BadAttributeValueExpException&lt;/code&gt; ，这将导致包含该 &lt;code&gt;name&lt;/code&gt; 查询为false 。</target>
        </trans-unit>
        <trans-unit id="90ba83081f32c8fadaa4c2055d819807f1fe71e0" translate="yes" xml:space="preserve">
          <source>Applies the &lt;code&gt;AttributeValueExp&lt;/code&gt; on an MBean. This method calls &lt;a href=&quot;attributevalueexp#getAttribute-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getAttribute(name)&lt;/code&gt;&lt;/a&gt; and wraps the result as a &lt;code&gt;ValueExp&lt;/code&gt;. The value returned by &lt;code&gt;getAttribute&lt;/code&gt; must be a &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, or &lt;code&gt;Boolean&lt;/code&gt;; otherwise this method throws a &lt;code&gt;BadAttributeValueExpException&lt;/code&gt;, which will cause the containing query to be false for this &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;AttributeValueExp&lt;/code&gt; 应用于MBean。此方法调用&lt;a href=&quot;attributevalueexp#getAttribute-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getAttribute(name)&lt;/code&gt; &lt;/a&gt;并将结果包装为 &lt;code&gt;ValueExp&lt;/code&gt; 。 &lt;code&gt;getAttribute&lt;/code&gt; 返回的值必须是 &lt;code&gt;Number&lt;/code&gt; ， &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Boolean&lt;/code&gt; ；否则，此方法将抛出 &lt;code&gt;BadAttributeValueExpException&lt;/code&gt; ，这将导致包含该 &lt;code&gt;name&lt;/code&gt; 查询为false 。</target>
        </trans-unit>
        <trans-unit id="3f54a850faf032d7ed918850b33bbeda8b2dd173" translate="yes" xml:space="preserve">
          <source>Applies the QueryExp on an MBean.</source>
          <target state="translated">在一个MBean上应用QueryExp。</target>
        </trans-unit>
        <trans-unit id="a94f537ce9ac93295258fdd4457c71a11f2f575a" translate="yes" xml:space="preserve">
          <source>Applies the ValueExp on a MBean.</source>
          <target state="translated">在MBean上应用ValueExp。</target>
        </trans-unit>
        <trans-unit id="56486964cd814481b6bf81aa7aec5bbd43188a97" translate="yes" xml:space="preserve">
          <source>Applies the given &lt;code&gt;Predicate&lt;/code&gt; object to this &lt;code&gt;FilteredRowSet&lt;/code&gt; object.</source>
          <target state="translated">将给定的 &lt;code&gt;Predicate&lt;/code&gt; 对象应用于此 &lt;code&gt;FilteredRowSet&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="733b5fca05a0efaf1bbfcaf0a96624fd1615014c" translate="yes" xml:space="preserve">
          <source>Applies the given &lt;code&gt;Predicate&lt;/code&gt; object to this &lt;code&gt;FilteredRowSet&lt;/code&gt; object. The filter applies controls both to inbound and outbound views, constraining which rows are visible and which rows can be manipulated.</source>
          <target state="translated">将给定的 &lt;code&gt;Predicate&lt;/code&gt; 对象应用于此 &lt;code&gt;FilteredRowSet&lt;/code&gt; 对象。筛选器将控件应用于入站和出站视图，从而限制了哪些行是可见的以及哪些行可以被操纵。</target>
        </trans-unit>
        <trans-unit id="435f7d09af7ca8afbabdf439428f18a6d6f1b3ad" translate="yes" xml:space="preserve">
          <source>Applies the given attributes to character content.</source>
          <target state="translated">将给定的属性应用于字符内容。</target>
        </trans-unit>
        <trans-unit id="6eadd3e7034c7bed306e72eb53d5a4cbc1d23dbd" translate="yes" xml:space="preserve">
          <source>Applies the given attributes to character content. If there is a selection, the attributes are applied to the selection range. If there is no selection, the attributes are applied to the input attribute set which defines the attributes for any new text that gets inserted.</source>
          <target state="translated">将给定的属性应用于字符内容。如果有选择,属性被应用到选择范围。如果没有选择,则将属性应用于输入属性集,该属性集定义了任何被插入的新文本的属性。</target>
        </trans-unit>
        <trans-unit id="e1c5a7a8b1e5c1f8a6e8e37e307f22a11ca31c0f" translate="yes" xml:space="preserve">
          <source>Applies the given attributes to paragraphs.</source>
          <target state="translated">将给定的属性应用于段落。</target>
        </trans-unit>
        <trans-unit id="2f8651bf3405a1d9ccef675a7c94e72753149f9e" translate="yes" xml:space="preserve">
          <source>Applies the given attributes to paragraphs. If there is a selection, the attributes are applied to the paragraphs that intersect the selection. If there is no selection, the attributes are applied to the paragraph at the current caret position.</source>
          <target state="translated">将给定的属性应用于段落。如果有选区,则将属性应用于与选区相交的段落。如果没有选择,则将属性应用于当前斜线位置的段落。</target>
        </trans-unit>
        <trans-unit id="fce093abc16868f06fa6d0cf14fcf88a3bd80de1" translate="yes" xml:space="preserve">
          <source>Applies the given attributes to paragraphs. If there is a selection, the attributes are applied to the paragraphs that intersect the selection. if there is no selection, the attributes are applied to the paragraph at the current caret position.</source>
          <target state="translated">将给定的属性应用于段落。如果有选区,则将属性应用到与选区相交的段落上;如果没有选区,则将属性应用到当前斜线位置的段落上。</target>
        </trans-unit>
        <trans-unit id="5431418c913d0cd8d58500882e9a196a6df9ac82" translate="yes" xml:space="preserve">
          <source>Applies the given function to the stream of &lt;code&gt;StackFrame&lt;/code&gt;s for the current thread, traversing from the top frame of the stack, which is the method calling this &lt;code&gt;walk&lt;/code&gt; method.</source>
          <target state="translated">将给定函数应用于当前线程的 &lt;code&gt;StackFrame&lt;/code&gt; 的流，从堆栈的顶部框架开始遍历，这是调用此 &lt;code&gt;walk&lt;/code&gt; 方法的方法。</target>
        </trans-unit>
        <trans-unit id="68ea95622c17c3501a71d389933a811f354722ff" translate="yes" xml:space="preserve">
          <source>Applies the given localized pattern string to this date format.</source>
          <target state="translated">将给定的本地化模式字符串应用于此日期格式。</target>
        </trans-unit>
        <trans-unit id="97ba7da6b18d975571d7145878622f49090f5a6c" translate="yes" xml:space="preserve">
          <source>Applies the given pattern string to this date format.</source>
          <target state="translated">将给定的模式字符串应用于此日期格式。</target>
        </trans-unit>
        <trans-unit id="092f9872dea41f81d6bea1b5c9bf378fd0d9503d" translate="yes" xml:space="preserve">
          <source>Applies this function to the given argument.</source>
          <target state="translated">将此函数应用于给定参数。</target>
        </trans-unit>
        <trans-unit id="465e66a74ccd22473b9e814ef500f5fd24a7056c" translate="yes" xml:space="preserve">
          <source>Applies this function to the given arguments.</source>
          <target state="translated">将此函数应用于给定参数。</target>
        </trans-unit>
        <trans-unit id="1c1cc9ca4c4938bb046e1f73de81d33c228fa5b1" translate="yes" xml:space="preserve">
          <source>Applies this operator to the given operand.</source>
          <target state="translated">将此运算符应用于给定操作数。</target>
        </trans-unit>
        <trans-unit id="09e5471b52d0066b4fed63fbe930ae9e7f66a7de" translate="yes" xml:space="preserve">
          <source>Applies this operator to the given operands.</source>
          <target state="translated">将此运算符应用于给定的操作数。</target>
        </trans-unit>
        <trans-unit id="dd284bad21c47b1ab995e58d8cf866b44c9948b5" translate="yes" xml:space="preserve">
          <source>Apply the colors to the destination drawing surface using the current &lt;a href=&quot;composite&quot;&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/a&gt; attribute in the &lt;code&gt;Graphics2D&lt;/code&gt; context.</source>
          <target state="translated">使用 &lt;code&gt;Graphics2D&lt;/code&gt; 上下文中的当前&lt;a href=&quot;composite&quot;&gt; &lt;code&gt;Composite&lt;/code&gt; &lt;/a&gt;属性将颜色应用于目标绘图表面。</target>
        </trans-unit>
        <trans-unit id="7ebe72edbd46e861f2348adfa7a6d4c1ff878e69" translate="yes" xml:space="preserve">
          <source>Apply the given pattern to this Format object.</source>
          <target state="translated">将给定的模式应用于此格式对象。</target>
        </trans-unit>
        <trans-unit id="40ea6f9cf1dd9e76881f086c503ed2233392c4f8" translate="yes" xml:space="preserve">
          <source>Apply the given pattern to this Format object. A pattern is a short-hand specification for the various formatting properties. These properties can also be changed individually through the various setter methods.</source>
          <target state="translated">将给定的模式应用于此格式对象。模式是对各种格式化属性的简短说明。这些属性也可以通过各种设置器方法单独改变。</target>
        </trans-unit>
        <trans-unit id="d3394fe6ba8781f349e9d2e8a1f85bedbb590239" translate="yes" xml:space="preserve">
          <source>Apply the given pattern to this Format object. The pattern is assumed to be in a localized notation. A pattern is a short-hand specification for the various formatting properties. These properties can also be changed individually through the various setter methods.</source>
          <target state="translated">将给定的模式应用于该格式对象。假设该模式是以局部符号表示的。模式是各种格式化属性的简明规范。这些属性也可以通过各种设置器方法单独改变。</target>
        </trans-unit>
        <trans-unit id="922f6429d4f7117b2c682bfb171c71edd287e775" translate="yes" xml:space="preserve">
          <source>Apply the supplied configuration argument to this provider instance and return the configured provider.</source>
          <target state="translated">将提供的配置参数应用于这个提供者实例,并返回配置的提供者。</target>
        </trans-unit>
        <trans-unit id="64987bb6636dbcd6239708a68cc6f3df34a0054e" translate="yes" xml:space="preserve">
          <source>Apply the supplied configuration argument to this provider instance and return the configured provider. Note that if this provider cannot be configured in-place, a new provider will be created and returned. Therefore, callers should always use the returned provider.</source>
          <target state="translated">将所提供的配置参数应用于此提供者实例,并返回已配置的提供者。请注意,如果不能就地配置该提供者,将创建并返回一个新的提供者。因此,调用者应始终使用返回的提供者。</target>
        </trans-unit>
        <trans-unit id="a46eaa3873ca34a730dd7803b181407b1e7e2807" translate="yes" xml:space="preserve">
          <source>Applying the Blending Equation</source>
          <target state="translated">应用混合公式</target>
        </trans-unit>
        <trans-unit id="473fe811ab475410322782e93567dece51e0b8ff" translate="yes" xml:space="preserve">
          <source>Applying the method &lt;a href=&quot;character#toLowerCase-char-&quot;&gt;&lt;code&gt;Character.toLowerCase(char)&lt;/code&gt;&lt;/a&gt; to each character produces the same result</source>
          <target state="translated">将方法&lt;a href=&quot;character#toLowerCase-char-&quot;&gt; &lt;code&gt;Character.toLowerCase(char)&lt;/code&gt; &lt;/a&gt;应用于每个字符会产生相同的结果</target>
        </trans-unit>
        <trans-unit id="c0925034ed84c1ba3f4ae2dd1afbf8cc66850ac7" translate="yes" xml:space="preserve">
          <source>Applying the method &lt;a href=&quot;character#toUpperCase-char-&quot;&gt;&lt;code&gt;Character.toUpperCase(char)&lt;/code&gt;&lt;/a&gt; to each character produces the same result</source>
          <target state="translated">将&lt;a href=&quot;character#toUpperCase-char-&quot;&gt; &lt;code&gt;Character.toUpperCase(char)&lt;/code&gt; &lt;/a&gt;方法应用于每个字符会产生相同的结果</target>
        </trans-unit>
        <trans-unit id="327ed8d0a0963022714273723ba29db94c41fa04" translate="yes" xml:space="preserve">
          <source>ApproveSelectionAction</source>
          <target state="translated">ApproveSelectionAction</target>
        </trans-unit>
        <trans-unit id="af4f4762f9bd3f0f4a10caf5b6e63dc4ce543724" translate="yes" xml:space="preserve">
          <source>Arabic</source>
          <target state="translated">Arabic</target>
        </trans-unit>
        <trans-unit id="93bf622408a77306c1298867e5c4e0bd5ddde2b1" translate="yes" xml:space="preserve">
          <source>Arbitrary &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_ldap_gl_prop&quot;&gt;&quot;JNDI properties&quot;&lt;/a&gt; may also be specified in the &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;. They are added to the environment and passed to the LDAP provider. Note that the following four JNDI properties are set by this module directly and are ignored if also present in the configuration:</source>
          <target state="translated">也可以在&lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; 中&lt;/a&gt;指定任意的&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_ldap_gl_prop&quot;&gt;&amp;ldquo; JNDI属性&amp;rdquo;&lt;/a&gt;。它们被添加到环境中并传递给LDAP提供程序。请注意，以下四个JNDI属性由该模块直接设置，并且如果配置中也存在，则将被忽略：</target>
        </trans-unit>
        <trans-unit id="7a64dc99a10d9b589bd9de24024a282c12818436" translate="yes" xml:space="preserve">
          <source>Arbitrary transformations of the contained value are provided both by low-level read-modify-write operations such as &lt;code&gt;compareAndSet&lt;/code&gt; and by higher-level methods such as &lt;code&gt;getAndUpdate&lt;/code&gt;.</source>
          <target state="translated">包含的值的任意转换既可以通过低级的读取，修改，写入操作（例如 &lt;code&gt;compareAndSet&lt;/code&gt; )，也可以通过更高级别的方法（例如 &lt;code&gt;getAndUpdate&lt;/code&gt; )来提供。</target>
        </trans-unit>
        <trans-unit id="d94e713358cbb21a94171519afdcff3ba1724459" translate="yes" xml:space="preserve">
          <source>Arc2D</source>
          <target state="translated">Arc2D</target>
        </trans-unit>
        <trans-unit id="24a0cfb01e2d18f1c87ef242b3756832c5c434f8" translate="yes" xml:space="preserve">
          <source>Arc2D.Double</source>
          <target state="translated">Arc2D.Double</target>
        </trans-unit>
        <trans-unit id="219b544d41c812c11908bc255bebcda2fd70e19c" translate="yes" xml:space="preserve">
          <source>Arc2D.Float</source>
          <target state="translated">Arc2D.Float</target>
        </trans-unit>
        <trans-unit id="81774a3777584c094447787ba12a1651af131e47" translate="yes" xml:space="preserve">
          <source>Architectural issues to consider</source>
          <target state="translated">需要考虑的建筑问题</target>
        </trans-unit>
        <trans-unit id="d2c998f8c52ee46eb198cc61d9a35814cb097ee3" translate="yes" xml:space="preserve">
          <source>Are lines horizontal?</source>
          <target state="translated">线条是水平的吗?</target>
        </trans-unit>
        <trans-unit id="2cf778fed5e58155d336586ba78713d083e28830" translate="yes" xml:space="preserve">
          <source>Are lines horizontal? This will return true for horizontal, left-to-right writing systems such as Roman.</source>
          <target state="translated">线条是否水平?对于水平的、从左到右的书写系统(如罗马字),这将返回true。</target>
        </trans-unit>
        <trans-unit id="440a4ad2c19eec40d8595d1f1bf68e3a2ba95e5d" translate="yes" xml:space="preserve">
          <source>Are the allocations for the children still valid?</source>
          <target state="translated">子女的分配还有效吗?</target>
        </trans-unit>
        <trans-unit id="2745debaa64a20eedb49d9f14a0b807c87aa2d2a" translate="yes" xml:space="preserve">
          <source>Area</source>
          <target state="translated">Area</target>
        </trans-unit>
        <trans-unit id="6f52d283c8455ded1590131b78149b805d2402ff" translate="yes" xml:space="preserve">
          <source>AreaAction</source>
          <target state="translated">AreaAction</target>
        </trans-unit>
        <trans-unit id="e81d51c0e9c58d1f20dd4217287950af66b03f67" translate="yes" xml:space="preserve">
          <source>AreaAveragingScaleFilter</source>
          <target state="translated">AreaAveragingScaleFilter</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="6dee7863f0914f6588e2684aa82d8c428b414ed9" translate="yes" xml:space="preserve">
          <source>Argument Category</source>
          <target state="translated">论证类</target>
        </trans-unit>
        <trans-unit id="c572b8e5f06f5529375df62562cb7b867061a307" translate="yes" xml:space="preserve">
          <source>Argument Index</source>
          <target state="translated">论据索引</target>
        </trans-unit>
        <trans-unit id="3b22ce472a26848501b86f89d1acecdd7ba7743e" translate="yes" xml:space="preserve">
          <source>Argument lists are padded out by &lt;a href=&quot;#dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int)&quot;&gt;dropping unused trailing arguments&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;#dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int)&quot;&gt;删除未使用的尾随参数&lt;/a&gt;来填充参数列表。</target>
        </trans-unit>
        <trans-unit id="1cf417639cd88dca5ed348977db444c372780174" translate="yes" xml:space="preserve">
          <source>ArgumentIndex</source>
          <target state="translated">ArgumentIndex</target>
        </trans-unit>
        <trans-unit id="1a4ae3fef371487f78d2f69c8740337873fcf7e7" translate="yes" xml:space="preserve">
          <source>Arguments that appear in the argument list for &lt;a href=&quot;#metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; have the same specification as in that method. The additional arguments are interpreted as follows:</source>
          <target state="translated">出现在元&lt;a href=&quot;#metafactory(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt;的参数列表中的参数（MethodHandles.Lookup，String，MethodType，MethodType，MethodHandle，MethodType）具有与该方法相同的规范。附加参数解释如下：</target>
        </trans-unit>
        <trans-unit id="2e5bfc7efad8b45cdc934f7fa43f90adf2a2ea6e" translate="yes" xml:space="preserve">
          <source>Arguments that appear in the argument list for &lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt;&lt;/a&gt; have the same specification as in that method. The additional arguments are interpreted as follows:</source>
          <target state="translated">出现在元&lt;a href=&quot;lambdametafactory#metafactory-java.lang.invoke.MethodHandles.Lookup-java.lang.String-java.lang.invoke.MethodType-java.lang.invoke.MethodType-java.lang.invoke.MethodHandle-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;metafactory(MethodHandles.Lookup, String, MethodType, MethodType, MethodHandle, MethodType)&lt;/code&gt; &lt;/a&gt;的参数列表中的参数（MethodHandles.Lookup，String，MethodType，MethodType，MethodHandle，MethodType）具有与该方法相同的规范。附加参数解释如下：</target>
        </trans-unit>
        <trans-unit id="acf9d5ef3ca8bfb95db6ab809773c5a98582c787" translate="yes" xml:space="preserve">
          <source>Arguments used to pass a completion result (that is, for parameters of type &lt;code&gt;T&lt;/code&gt;) for methods accepting them may be null, but passing a null value for any other parameter will result in a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">用于接受完成结果的方法（即，对于 &lt;code&gt;T&lt;/code&gt; 类型的参数）用于传递接受它们的方法的参数可能为null，但是为其他任何参数传递null值将导致引发&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2259330fb77de2bd8dc1911ad15baf0ac1663381" translate="yes" xml:space="preserve">
          <source>ArithmeticException</source>
          <target state="translated">ArithmeticException</target>
        </trans-unit>
        <trans-unit id="6705be38307e0ff0e31175e8f380d6014e23948e" translate="yes" xml:space="preserve">
          <source>Arity limits</source>
          <target state="translated">人数限制</target>
        </trans-unit>
        <trans-unit id="02e3b97ab015096a3b53dd7591b690f3d33f15d5" translate="yes" xml:space="preserve">
          <source>Arrange async execution</source>
          <target state="translated">安排异步执行</target>
        </trans-unit>
        <trans-unit id="3d56281f7929720ab8951cd1b5aa1de1a5698b01" translate="yes" xml:space="preserve">
          <source>Arrange exec and obtain Future</source>
          <target state="translated">安排执行并获得未来</target>
        </trans-unit>
        <trans-unit id="ddaa41333e9d65ededfb5ce00db0f24147833e1c" translate="yes" xml:space="preserve">
          <source>ArrangeGrid</source>
          <target state="translated">ArrangeGrid</target>
        </trans-unit>
        <trans-unit id="e6033304ba65c2bf03ba37405ffb4242d91c1c5f" translate="yes" xml:space="preserve">
          <source>Arranges for (asynchronous) execution of the given task.</source>
          <target state="translated">安排(异步)执行给定任务。</target>
        </trans-unit>
        <trans-unit id="ef4aaa5d407375c225b8697d59217a548d1bc776" translate="yes" xml:space="preserve">
          <source>Arranges to asynchronously execute this task in the pool the current task is running in, if applicable, or using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; if not &lt;a href=&quot;#inForkJoinPool()&quot;&gt;&lt;code&gt;inForkJoinPool()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">安排在当前任务正在运行的池中异步执行此任务（如果适用），或者如果不是&lt;a href=&quot;#inForkJoinPool()&quot;&gt; &lt;code&gt;inForkJoinPool()&lt;/code&gt; &lt;/a&gt;则使用&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="2491dfc5f0c04c431d7776873e47d40497b07f23" translate="yes" xml:space="preserve">
          <source>Arranges to asynchronously execute this task in the pool the current task is running in, if applicable, or using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; if not &lt;a href=&quot;#inForkJoinPool()&quot;&gt;&lt;code&gt;inForkJoinPool()&lt;/code&gt;&lt;/a&gt;. While it is not necessarily enforced, it is a usage error to fork a task more than once unless it has completed and been reinitialized. Subsequent modifications to the state of this task or any data it operates on are not necessarily consistently observable by any thread other than the one executing it unless preceded by a call to &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; or related methods, or a call to &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;
 true&lt;/code&gt;.</source>
          <target state="translated">安排在当前任务正在运行的池中异步执行此任务（如果适用），或者如果不是&lt;a href=&quot;#inForkJoinPool()&quot;&gt; &lt;code&gt;inForkJoinPool()&lt;/code&gt; &lt;/a&gt;则使用&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;（）。尽管不一定要强制执行它，但如果任务已完成并重新初始化，则多次分叉任务是使用错误。除非对&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;或相关方法的调用，或对&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;的调用，对此任务的状态或对其执行操作的任何数据的后续修改不一定都可由执行该线程的线程以外的任何线程始终观察到。返回 &lt;code&gt; true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71cba7686e4af3c9e7770e896be81d3174386480" translate="yes" xml:space="preserve">
          <source>Arranges to asynchronously execute this task in the pool the current task is running in, if applicable, or using the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; if not &lt;a href=&quot;forkjointask#inForkJoinPool--&quot;&gt;&lt;code&gt;inForkJoinPool()&lt;/code&gt;&lt;/a&gt;. While it is not necessarily enforced, it is a usage error to fork a task more than once unless it has completed and been reinitialized. Subsequent modifications to the state of this task or any data it operates on are not necessarily consistently observable by any thread other than the one executing it unless preceded by a call to &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; or related methods, or a call to &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; returning &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">安排在当前任务正在运行的池中异步执行此任务（如果适用），或者如果不是&lt;a href=&quot;forkjointask#inForkJoinPool--&quot;&gt; &lt;code&gt;inForkJoinPool()&lt;/code&gt; &lt;/a&gt;则使用&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;（）。尽管不一定要强制执行它，但如果任务已完成并重新初始化，则多次分叉任务是使用错误。除非对&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;或相关方法的调用或对&lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt;的调用返回 &lt;code&gt;true&lt;/code&gt; ，否则对该任务的状态或对其进行操作的任何数据的后续修改都不一定可由执行该线程的线程以外的任何线程一致地观察到。。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="bc55c41480128611db3606ce90d8ff4a898f10c4" translate="yes" xml:space="preserve">
          <source>Array and buffer segments are effectively &lt;em&gt;views&lt;/em&gt; over existing memory regions which might outlive the lifecycle of the segments derived from them, and can even be manipulated directly (e.g. via array access, or direct use of the &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; API) by other clients. As a result, while sharing array or buffer segments is possible, it is strongly advised that clients wishing to do so take extra precautions to make sure that the underlying memory sources associated with such segments remain inaccessible, and that said memory sources are never aliased by more than one segment at a time - e.g. so as to prevent concurrent modifications of the contents of an array, or buffer segment.</source>
          <target state="translated">数组和缓冲区段是现有内存区域的有效&lt;em&gt;视图&lt;/em&gt;，它们可能会超过从它们派生的段的生命周期，甚至可以被其他客户端直接操作（例如，通过数组访问或直接使用&lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt; API）。结果，虽然可以共享数组或缓冲区段，但强烈建议希望这样做的客户端采取额外的预防措施，以确保与此类段关联的基础内存源保持不可访问状态，并且不要为这些内存源设置别名一次不止一个段-例如，以防止同时修改数组或缓冲区段的内容。</target>
        </trans-unit>
        <trans-unit id="7747b10dd8edbc36723d3bda1e4fc1f9d0dce370" translate="yes" xml:space="preserve">
          <source>Array of Actions to install on JFormattedTextField</source>
          <target state="translated">要安装在JFormattedTextField上的动作数组</target>
        </trans-unit>
        <trans-unit id="f8525f3f00f2bbff94d01f29f59dbcc41a51d329" translate="yes" xml:space="preserve">
          <source>Array of TableColumn objects in this model</source>
          <target state="translated">本模型中的TableColumn对象阵列</target>
        </trans-unit>
        <trans-unit id="bb7ef34866c1c3791e0e32c3560fdda96203d676" translate="yes" xml:space="preserve">
          <source>Array of class constants or enum constants</source>
          <target state="translated">类常量或枚举常量阵列</target>
        </trans-unit>
        <trans-unit id="6c0eeedee20201092df554dd207d8eac0d32e06b" translate="yes" xml:space="preserve">
          <source>Array of extra objects to be included in the cache key</source>
          <target state="translated">缓存键中要包含的额外对象数组。</target>
        </trans-unit>
        <trans-unit id="569807c2a3ec4f7f160eb054479694d8449216d8" translate="yes" xml:space="preserve">
          <source>Array of printing attribute categories that the client can specify as a doc-level or job-level attribute in a Print Request. Each element in the array is a &lt;a href=&quot;../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; that implements interface &lt;a href=&quot;attribute/attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt;. The array is empty if no categories are supported.</source>
          <target state="translated">客户端可以在打印请求中将其指定为doc级或作业级属性的打印属性类别的数组。数组中的每个元素都是实现接口&lt;a href=&quot;attribute/attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;。如果不支持任何类别，则该数组为空。</target>
        </trans-unit>
        <trans-unit id="acea35f9cae772bd6729ea0a91ba2e0d2e049d3b" translate="yes" xml:space="preserve">
          <source>Array of supported doc flavors, should have at least one element.</source>
          <target state="translated">支持的doc口味的数组,应该至少有一个元素。</target>
        </trans-unit>
        <trans-unit id="1b6dc0470fc51b523a7e090cb616eed491033a26" translate="yes" xml:space="preserve">
          <source>Array of values the user can choose from.</source>
          <target state="translated">可供用户选择的值的阵列。</target>
        </trans-unit>
        <trans-unit id="db7de6653d382624f40994ff09165d3589b89b86" translate="yes" xml:space="preserve">
          <source>Array of values the user can choose from. Look and feel will provide the UI component to choose this from.</source>
          <target state="translated">用户可以选择的值的数组。Look and feel将提供UI组件以供选择。</target>
        </trans-unit>
        <trans-unit id="67254b0229a4173b61140618f8507f28706cc74c" translate="yes" xml:space="preserve">
          <source>Array used for multiple resource declarations.</source>
          <target state="translated">用于多个资源声明的阵列。</target>
        </trans-unit>
        <trans-unit id="4658726120ea2a76ab5f9db00569884eaf5c32c1" translate="yes" xml:space="preserve">
          <source>Array.get()</source>
          <target state="translated">Array.get()</target>
        </trans-unit>
        <trans-unit id="1169b0baca08e75ccd9d1d7d32fc92353347736e" translate="yes" xml:space="preserve">
          <source>Array.getBoolean()</source>
          <target state="translated">Array.getBoolean()</target>
        </trans-unit>
        <trans-unit id="45e230ecb81ecd9ebe58640f54af87cee473a1c7" translate="yes" xml:space="preserve">
          <source>Array.getByte()</source>
          <target state="translated">Array.getByte()</target>
        </trans-unit>
        <trans-unit id="9b247c6af24e2cac173bff15ce5dd20e7554ca39" translate="yes" xml:space="preserve">
          <source>Array.getChar()</source>
          <target state="translated">Array.getChar()</target>
        </trans-unit>
        <trans-unit id="8e241acaa4e7de56f4f6b06a9a2b69c8b3934a9c" translate="yes" xml:space="preserve">
          <source>Array.getDouble()</source>
          <target state="translated">Array.getDouble()</target>
        </trans-unit>
        <trans-unit id="d72cad2b167d638887c65cb8102a0842bdeef724" translate="yes" xml:space="preserve">
          <source>Array.getFloat()</source>
          <target state="translated">Array.getFloat()</target>
        </trans-unit>
        <trans-unit id="4a5e0617636097c95ddd3b26825b9fa630129bd0" translate="yes" xml:space="preserve">
          <source>Array.getInt()</source>
          <target state="translated">Array.getInt()</target>
        </trans-unit>
        <trans-unit id="b1ea126ae4a5892b65c8761706ebf577fa0b8447" translate="yes" xml:space="preserve">
          <source>Array.getLength()</source>
          <target state="translated">Array.getLength()</target>
        </trans-unit>
        <trans-unit id="b4e13c666fbd535053c99dc297ab35fb4f028144" translate="yes" xml:space="preserve">
          <source>Array.getLong()</source>
          <target state="translated">Array.getLong()</target>
        </trans-unit>
        <trans-unit id="5d172f7ac795870d2f898d4e0b36bea81b013a3f" translate="yes" xml:space="preserve">
          <source>Array.getShort()</source>
          <target state="translated">Array.getShort()</target>
        </trans-unit>
        <trans-unit id="e88fedaeae84f4fd50173a5bdd67c92f374f0d63" translate="yes" xml:space="preserve">
          <source>Array.newInstance()</source>
          <target state="translated">Array.newInstance()</target>
        </trans-unit>
        <trans-unit id="f6af3462971f6d30e9ec2c85b6f112b33661a48c" translate="yes" xml:space="preserve">
          <source>Array.set()</source>
          <target state="translated">Array.set()</target>
        </trans-unit>
        <trans-unit id="f91f1f89eedde88ec92a16f2690640ccc75db314" translate="yes" xml:space="preserve">
          <source>Array.setBoolean()</source>
          <target state="translated">Array.setBoolean()</target>
        </trans-unit>
        <trans-unit id="9a2dc485cb875a98afdbe9f1fc0af3ae91bc7d22" translate="yes" xml:space="preserve">
          <source>Array.setByte()</source>
          <target state="translated">Array.setByte()</target>
        </trans-unit>
        <trans-unit id="3bc6ded8b8303eae5d660be744937261f4fb655b" translate="yes" xml:space="preserve">
          <source>Array.setChar()</source>
          <target state="translated">Array.setChar()</target>
        </trans-unit>
        <trans-unit id="062ef285c7735737b8feec3b6018d5913746147a" translate="yes" xml:space="preserve">
          <source>Array.setDouble()</source>
          <target state="translated">Array.setDouble()</target>
        </trans-unit>
        <trans-unit id="b284650cdb4942518c61c9fb415d0f3273563e0b" translate="yes" xml:space="preserve">
          <source>Array.setFloat()</source>
          <target state="translated">Array.setFloat()</target>
        </trans-unit>
        <trans-unit id="eb2dd2165c3cdf2c0752876ae095f28dd88b60dc" translate="yes" xml:space="preserve">
          <source>Array.setInt()</source>
          <target state="translated">Array.setInt()</target>
        </trans-unit>
        <trans-unit id="da531263561c3c737792c93701185e9465b36a9c" translate="yes" xml:space="preserve">
          <source>Array.setLong()</source>
          <target state="translated">Array.setLong()</target>
        </trans-unit>
        <trans-unit id="0773afd66a6be3901682429b86107e92c0137d0b" translate="yes" xml:space="preserve">
          <source>Array.setShort()</source>
          <target state="translated">Array.setShort()</target>
        </trans-unit>
        <trans-unit id="27c998e9dae719f06258d8b8e94ec06a1b89f205" translate="yes" xml:space="preserve">
          <source>ArrayAccessTree</source>
          <target state="translated">ArrayAccessTree</target>
        </trans-unit>
        <trans-unit id="1a283a038a4dcdb2e50b5ad5b7b9ab73e8033daf" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue</source>
          <target state="translated">ArrayBlockingQueue</target>
        </trans-unit>
        <trans-unit id="3d96acc37cd4954c931fa29a5de4124c31c1d3e9" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.add()</source>
          <target state="translated">ArrayBlockingQueue.add()</target>
        </trans-unit>
        <trans-unit id="3dbd1eb6fdbac03d7ef6563da0eb3a8180e79e61" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.clear()</source>
          <target state="translated">ArrayBlockingQueue.clear()</target>
        </trans-unit>
        <trans-unit id="d2b8c263fb51c1d3665002060e6cacb05b477a5f" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.contains()</source>
          <target state="translated">ArrayBlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="56496c2e552af45b7fe3d89c4a6e038dd024ffe1" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.drainTo()</source>
          <target state="translated">ArrayBlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="bb6a69f32e54e7f6e94d4b4a1f2502f19ab5e73c" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.iterator()</source>
          <target state="translated">ArrayBlockingQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="ae8981ef0588c86f5c55f27f5891a2639e002e80" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.offer()</source>
          <target state="translated">ArrayBlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="b2f039549dcdcef93e747e665aa28a510a467c06" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.peek()</source>
          <target state="translated">ArrayBlockingQueue.peek()</target>
        </trans-unit>
        <trans-unit id="6713c2584369c8ae5280831ce58bedae449bc270" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.poll()</source>
          <target state="translated">ArrayBlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="0ea6f79daf5205a896305d995a997675b14b3d2b" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.put()</source>
          <target state="translated">ArrayBlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="e75f62a1986ae83f920bebf8c1ac2bf450672d87" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.remainingCapacity()</source>
          <target state="translated">ArrayBlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="baffefbb01fe5b64bee2c1206365c66a2329aa74" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.remove()</source>
          <target state="translated">ArrayBlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="01039bfc283527758908b9a5697520991aa6a923" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.size()</source>
          <target state="translated">ArrayBlockingQueue.size()</target>
        </trans-unit>
        <trans-unit id="8f1266bf6b909b6efa0985bdf17784f5de67fbd2" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.spliterator()</source>
          <target state="translated">ArrayBlockingQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="babefc9596faf932dfa911f390aff3a971b2ccff" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.take()</source>
          <target state="translated">ArrayBlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="ecd956bb79ba9d156919269a43e7111bb0457368" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.toArray()</source>
          <target state="translated">ArrayBlockingQueue.toArray()</target>
        </trans-unit>
        <trans-unit id="ac7393cded22c6ae03dbbf5d496efe87f9cd2b60" translate="yes" xml:space="preserve">
          <source>ArrayBlockingQueue.toString()</source>
          <target state="translated">ArrayBlockingQueue.toString()</target>
        </trans-unit>
        <trans-unit id="a1d9626b2a8faf29b6417286fb8a6b3e1f9be338" translate="yes" xml:space="preserve">
          <source>ArrayDeque</source>
          <target state="translated">ArrayDeque</target>
        </trans-unit>
        <trans-unit id="bed2df06b552cca23f4d8af39984e1178eeb27a4" translate="yes" xml:space="preserve">
          <source>ArrayDeque.add()</source>
          <target state="translated">ArrayDeque.add()</target>
        </trans-unit>
        <trans-unit id="d2701c9e24b7f41499b59cd658e03461d594b48d" translate="yes" xml:space="preserve">
          <source>ArrayDeque.addFirst()</source>
          <target state="translated">ArrayDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="e437dd06b166eda7b7de7a8002cf304b9b770bf4" translate="yes" xml:space="preserve">
          <source>ArrayDeque.addLast()</source>
          <target state="translated">ArrayDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="a352cf50a3d9d333f0cb4a879b607e249c258494" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clear()</source>
          <target state="translated">ArrayDeque.clear()</target>
        </trans-unit>
        <trans-unit id="9e84be1b39b7efeaa4ccb90aca05601634b0ddd9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clone()</source>
          <target state="translated">ArrayDeque.clone()</target>
        </trans-unit>
        <trans-unit id="7982354300300d171b3016130244329713b149cd" translate="yes" xml:space="preserve">
          <source>ArrayDeque.contains()</source>
          <target state="translated">ArrayDeque.contains()</target>
        </trans-unit>
        <trans-unit id="75b05cd9e1f69bc6dac6a81afad1a495b214d20e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.descendingIterator()</source>
          <target state="translated">ArrayDeque.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="e0a60bac2ddad41306d36b5b43bc5f77e1dc4781" translate="yes" xml:space="preserve">
          <source>ArrayDeque.element()</source>
          <target state="translated">ArrayDeque.element()</target>
        </trans-unit>
        <trans-unit id="a420aa718866ddb4a3a295fa14df62837dca90e0" translate="yes" xml:space="preserve">
          <source>ArrayDeque.getFirst()</source>
          <target state="translated">ArrayDeque.getFirst()</target>
        </trans-unit>
        <trans-unit id="7dc95f4a9183134e5a977034584c9c29c0da84d0" translate="yes" xml:space="preserve">
          <source>ArrayDeque.getLast()</source>
          <target state="translated">ArrayDeque.getLast()</target>
        </trans-unit>
        <trans-unit id="ea86c6721057aa21b774837669c804b2ae5ff14b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.isEmpty()</source>
          <target state="translated">ArrayDeque.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2778cf97463835ee87fdf389f420513adc88da5e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.iterator()</source>
          <target state="translated">ArrayDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="9a23b8f00c880c251e597a2828b54b13cf11591e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.offer()</source>
          <target state="translated">ArrayDeque.offer()</target>
        </trans-unit>
        <trans-unit id="956983a0c043c9c5a1f7d323c7d758837dde02ba" translate="yes" xml:space="preserve">
          <source>ArrayDeque.offerFirst()</source>
          <target state="translated">ArrayDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="4bb9d892b664791a921a331d941810f8b80c900b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.offerLast()</source>
          <target state="translated">ArrayDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="f33bac0a172c3990700e65739fa16ef9abf2961f" translate="yes" xml:space="preserve">
          <source>ArrayDeque.peek()</source>
          <target state="translated">ArrayDeque.peek()</target>
        </trans-unit>
        <trans-unit id="314c49c13bf4a77b621e7be5815bcd236146d330" translate="yes" xml:space="preserve">
          <source>ArrayDeque.peekFirst()</source>
          <target state="translated">ArrayDeque.peekFirst()</target>
        </trans-unit>
        <trans-unit id="0f0b523e109dd965b5e3fd8f054173fa9acf9395" translate="yes" xml:space="preserve">
          <source>ArrayDeque.peekLast()</source>
          <target state="translated">ArrayDeque.peekLast()</target>
        </trans-unit>
        <trans-unit id="b7d97e0cac420b8b46914f7eb4b9ff69a56f47f1" translate="yes" xml:space="preserve">
          <source>ArrayDeque.poll()</source>
          <target state="translated">ArrayDeque.poll()</target>
        </trans-unit>
        <trans-unit id="ec16ee31c4dc2bcd8f0f02b45cc335c86eb9fe4d" translate="yes" xml:space="preserve">
          <source>ArrayDeque.pollFirst()</source>
          <target state="translated">ArrayDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="8d134b459fc996a5e431c9e7ae608aeea0923492" translate="yes" xml:space="preserve">
          <source>ArrayDeque.pollLast()</source>
          <target state="translated">ArrayDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="770e2003af764711664240954edb26b3268a95d5" translate="yes" xml:space="preserve">
          <source>ArrayDeque.pop()</source>
          <target state="translated">ArrayDeque.pop()</target>
        </trans-unit>
        <trans-unit id="60fc19ac26e8d552fa9d36569e69afe123439d32" translate="yes" xml:space="preserve">
          <source>ArrayDeque.push()</source>
          <target state="translated">ArrayDeque.push()</target>
        </trans-unit>
        <trans-unit id="ca1078f7c4af77c9358b816a58b5ae37310f9fd6" translate="yes" xml:space="preserve">
          <source>ArrayDeque.remove()</source>
          <target state="translated">ArrayDeque.remove()</target>
        </trans-unit>
        <trans-unit id="16a4d68564ea8bca4be4f1174ceca9d5f7110b20" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeFirst()</source>
          <target state="translated">ArrayDeque.removeFirst()</target>
        </trans-unit>
        <trans-unit id="0ef19d078a9315e6fb282cd424c2059db93eaec0" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeFirstOccurrence()</source>
          <target state="translated">ArrayDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="2ef2e331f8c0a6398215f9094fcd408191cde0d2" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLast()</source>
          <target state="translated">ArrayDeque.removeLast()</target>
        </trans-unit>
        <trans-unit id="7c8b7e728f64463eb5ff97018c0f09518af8af5e" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLastOccurrence()</source>
          <target state="translated">ArrayDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="a54b8c10adeb716e784d2ad7c4305438595619f7" translate="yes" xml:space="preserve">
          <source>ArrayDeque.size()</source>
          <target state="translated">ArrayDeque.size()</target>
        </trans-unit>
        <trans-unit id="50926f012e8f6d6654906ecf9aeced2678ec6965" translate="yes" xml:space="preserve">
          <source>ArrayDeque.spliterator()</source>
          <target state="translated">ArrayDeque.spliterator()</target>
        </trans-unit>
        <trans-unit id="4983ebbc8740047ee462627b80722151818752f9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.toArray()</source>
          <target state="translated">ArrayDeque.toArray()</target>
        </trans-unit>
        <trans-unit id="21484b74aa640458082fe4bb49601200afedc0f0" translate="yes" xml:space="preserve">
          <source>ArrayIndexOutOfBoundsException</source>
          <target state="translated">ArrayIndexOutOfBoundsException</target>
        </trans-unit>
        <trans-unit id="f5baaa4ad5d36710b8fed9d2bc4a53a86da5b55a" translate="yes" xml:space="preserve">
          <source>ArrayList</source>
          <target state="translated">ArrayList</target>
        </trans-unit>
        <trans-unit id="d1b38d91a4da43ea7d424a38ce96c626a121696b" translate="yes" xml:space="preserve">
          <source>ArrayList of ObjectName objects for referenced MBeans.</source>
          <target state="translated">被引用的MBeans的ObjectName对象的ArrayList。</target>
        </trans-unit>
        <trans-unit id="a1d711fdf8512dbf9ae876dfaad2ed359350d906" translate="yes" xml:space="preserve">
          <source>ArrayList of RoleInfo.</source>
          <target state="translated">RoleInfo的ArrayList。</target>
        </trans-unit>
        <trans-unit id="79f1f5f289d4a364472fcb60a9d57fe0207ae8ac" translate="yes" xml:space="preserve">
          <source>ArrayList of String</source>
          <target state="translated">字符串的阵列列表</target>
        </trans-unit>
        <trans-unit id="f072bf434a8e4e92915b83b944e15e391db88282" translate="yes" xml:space="preserve">
          <source>ArrayList of relation type names (Strings)</source>
          <target state="translated">关系类型名称的数组列表(字符串)</target>
        </trans-unit>
        <trans-unit id="0f47b6ff5f2eca03244dbd321baeb58760b3cf91" translate="yes" xml:space="preserve">
          <source>ArrayList.add()</source>
          <target state="translated">ArrayList.add()</target>
        </trans-unit>
        <trans-unit id="507a2eea358226004f14b71091689e5b0b3de625" translate="yes" xml:space="preserve">
          <source>ArrayList.addAll()</source>
          <target state="translated">ArrayList.addAll()</target>
        </trans-unit>
        <trans-unit id="082bae60cab9869e2405f845a57761031488cc85" translate="yes" xml:space="preserve">
          <source>ArrayList.clear()</source>
          <target state="translated">ArrayList.clear()</target>
        </trans-unit>
        <trans-unit id="088b969c19105c440fdadb5c6c028c09751f4524" translate="yes" xml:space="preserve">
          <source>ArrayList.clone()</source>
          <target state="translated">ArrayList.clone()</target>
        </trans-unit>
        <trans-unit id="8772045082c4ae7aa5b0cc2513d87c1dd3f0519c" translate="yes" xml:space="preserve">
          <source>ArrayList.contains()</source>
          <target state="translated">ArrayList.contains()</target>
        </trans-unit>
        <trans-unit id="696a156109972f7f27cb904a75eea4be0ca4edb5" translate="yes" xml:space="preserve">
          <source>ArrayList.ensureCapacity()</source>
          <target state="translated">ArrayList.ensureCapacity()</target>
        </trans-unit>
        <trans-unit id="a65347c40f0e485b54559608a032f6fcd888d79a" translate="yes" xml:space="preserve">
          <source>ArrayList.forEach()</source>
          <target state="translated">ArrayList.forEach()</target>
        </trans-unit>
        <trans-unit id="c6d0a301f9d31161a1449a9f575abf47243c5209" translate="yes" xml:space="preserve">
          <source>ArrayList.get()</source>
          <target state="translated">ArrayList.get()</target>
        </trans-unit>
        <trans-unit id="f494893c35f2e63cdd96ebe689dc06117c3036b3" translate="yes" xml:space="preserve">
          <source>ArrayList.indexOf()</source>
          <target state="translated">ArrayList.indexOf()</target>
        </trans-unit>
        <trans-unit id="68caef6bb721f87b173f7baf484b770b7fbf672e" translate="yes" xml:space="preserve">
          <source>ArrayList.isEmpty()</source>
          <target state="translated">ArrayList.isEmpty()</target>
        </trans-unit>
        <trans-unit id="6794ed7d20aaefcda7a3eaf86ab23508164d2d72" translate="yes" xml:space="preserve">
          <source>ArrayList.iterator()</source>
          <target state="translated">ArrayList.iterator()</target>
        </trans-unit>
        <trans-unit id="205270f883fc49ffa068c9a3dbe66852020bf3a2" translate="yes" xml:space="preserve">
          <source>ArrayList.lastIndexOf()</source>
          <target state="translated">ArrayList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="aa3f5f8a7bf8faa3ea051729f325aa4505c1a5f7" translate="yes" xml:space="preserve">
          <source>ArrayList.listIterator()</source>
          <target state="translated">ArrayList.listIterator()</target>
        </trans-unit>
        <trans-unit id="4acdb817b23096f50c66aac9c5e120b25d50ad5e" translate="yes" xml:space="preserve">
          <source>ArrayList.remove()</source>
          <target state="translated">ArrayList.remove()</target>
        </trans-unit>
        <trans-unit id="d3667e4b10100a95482cdb56bc6e0e42b4ec20f5" translate="yes" xml:space="preserve">
          <source>ArrayList.removeAll()</source>
          <target state="translated">ArrayList.removeAll()</target>
        </trans-unit>
        <trans-unit id="ab982c1457071db3d759d9fc8bb07db0f0568b23" translate="yes" xml:space="preserve">
          <source>ArrayList.removeIf()</source>
          <target state="translated">ArrayList.removeIf()</target>
        </trans-unit>
        <trans-unit id="566e74e2242ca7c9df417b51e91dabe7c34c143c" translate="yes" xml:space="preserve">
          <source>ArrayList.removeRange()</source>
          <target state="translated">ArrayList.removeRange()</target>
        </trans-unit>
        <trans-unit id="36bab2da55c0e9dc6a1f7f936fa8697fbbd75548" translate="yes" xml:space="preserve">
          <source>ArrayList.replaceAll()</source>
          <target state="translated">ArrayList.replaceAll()</target>
        </trans-unit>
        <trans-unit id="532a41b9f0e66f2a34cf7991c625b88a72eb406d" translate="yes" xml:space="preserve">
          <source>ArrayList.retainAll()</source>
          <target state="translated">ArrayList.retainAll()</target>
        </trans-unit>
        <trans-unit id="32fc31340174e6ddb82791777b34fbb197c55b26" translate="yes" xml:space="preserve">
          <source>ArrayList.set()</source>
          <target state="translated">ArrayList.set()</target>
        </trans-unit>
        <trans-unit id="f16daa8e32cf5bf5607ac82deb5cfb60765a4a90" translate="yes" xml:space="preserve">
          <source>ArrayList.size()</source>
          <target state="translated">ArrayList.size()</target>
        </trans-unit>
        <trans-unit id="fac2a946b847ab427216c071e3f0b3af92c4a36f" translate="yes" xml:space="preserve">
          <source>ArrayList.sort()</source>
          <target state="translated">ArrayList.sort()</target>
        </trans-unit>
        <trans-unit id="d148a99b7cd7829c476159cb3b6c744b0c5ee770" translate="yes" xml:space="preserve">
          <source>ArrayList.spliterator()</source>
          <target state="translated">ArrayList.spliterator()</target>
        </trans-unit>
        <trans-unit id="e0385a55c46be6d850fd057ec9a0d3a4cedea4c3" translate="yes" xml:space="preserve">
          <source>ArrayList.subList()</source>
          <target state="translated">ArrayList.subList()</target>
        </trans-unit>
        <trans-unit id="1fd2236a7851d3a0612dc24e53d2ac3991b3c237" translate="yes" xml:space="preserve">
          <source>ArrayList.toArray()</source>
          <target state="translated">ArrayList.toArray()</target>
        </trans-unit>
        <trans-unit id="1ff7df7831f0c607f6db81ba9f79b3b9239ceef3" translate="yes" xml:space="preserve">
          <source>ArrayList.trimToSize()</source>
          <target state="translated">ArrayList.trimToSize()</target>
        </trans-unit>
        <trans-unit id="f3e822b0f88a8917e3e4ad8cc4c1429ac5849188" translate="yes" xml:space="preserve">
          <source>ArrayReference</source>
          <target state="translated">ArrayReference</target>
        </trans-unit>
        <trans-unit id="70ce27f43d491914a500ad71f5cd62e7c63052b6" translate="yes" xml:space="preserve">
          <source>ArrayStoreException</source>
          <target state="translated">ArrayStoreException</target>
        </trans-unit>
        <trans-unit id="77e0a11af696ddb246c753fbf92cf343a2992b51" translate="yes" xml:space="preserve">
          <source>ArrayType</source>
          <target state="translated">ArrayType</target>
        </trans-unit>
        <trans-unit id="0ad6cfa3795c8768a161ec4d9565a1cb78765d05" translate="yes" xml:space="preserve">
          <source>ArrayType.equals()</source>
          <target state="translated">ArrayType.equals()</target>
        </trans-unit>
        <trans-unit id="b6cf1edc1e95c031c5a6ec52f87a88a439d88d8c" translate="yes" xml:space="preserve">
          <source>ArrayType.getArrayType()</source>
          <target state="translated">ArrayType.getArrayType()</target>
        </trans-unit>
        <trans-unit id="2d529dd9d80021b7d146f1cf42e0717a7cf4216a" translate="yes" xml:space="preserve">
          <source>ArrayType.getComponentType()</source>
          <target state="translated">ArrayType.getComponentType()</target>
        </trans-unit>
        <trans-unit id="03b3b6b244b2153b6b58e79a75359d327e3244e5" translate="yes" xml:space="preserve">
          <source>ArrayType.getDimension()</source>
          <target state="translated">ArrayType.getDimension()</target>
        </trans-unit>
        <trans-unit id="59d72720bddbebb8c69f72937b6908a569a0696a" translate="yes" xml:space="preserve">
          <source>ArrayType.getElementOpenType()</source>
          <target state="translated">ArrayType.getElementOpenType()</target>
        </trans-unit>
        <trans-unit id="229162e2aee70affd2dbe41528f566b00858fd60" translate="yes" xml:space="preserve">
          <source>ArrayType.getPrimitiveArrayType()</source>
          <target state="translated">ArrayType.getPrimitiveArrayType()</target>
        </trans-unit>
        <trans-unit id="3146cb41e5856b3709df762521839f1a446b3dcc" translate="yes" xml:space="preserve">
          <source>ArrayType.hashCode()</source>
          <target state="translated">ArrayType.hashCode()</target>
        </trans-unit>
        <trans-unit id="93d36cfaf61145695e080e5e742a56ce0312a81b" translate="yes" xml:space="preserve">
          <source>ArrayType.isPrimitiveArray()</source>
          <target state="translated">ArrayType.isPrimitiveArray()</target>
        </trans-unit>
        <trans-unit id="98cc545995e3dd73b4112c4ef40a1f05d7eaa3c0" translate="yes" xml:space="preserve">
          <source>ArrayType.isValue()</source>
          <target state="translated">ArrayType.isValue()</target>
        </trans-unit>
        <trans-unit id="f227b51b3a472ea46fad9e1babf056963137e266" translate="yes" xml:space="preserve">
          <source>ArrayType.toString()</source>
          <target state="translated">ArrayType.toString()</target>
        </trans-unit>
        <trans-unit id="4ec7f87d57631933601651fc3214dc0e78866ab1" translate="yes" xml:space="preserve">
          <source>ArrayTypeTree</source>
          <target state="translated">ArrayTypeTree</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="785112061d071a3b0f54a08c6eb7aef42d45601d" translate="yes" xml:space="preserve">
          <source>Arrays.asList()</source>
          <target state="translated">Arrays.asList()</target>
        </trans-unit>
        <trans-unit id="f3d9ec164d4d8a6008befbecb43760ebc32085f2" translate="yes" xml:space="preserve">
          <source>Arrays.binarySearch()</source>
          <target state="translated">Arrays.binarySearch()</target>
        </trans-unit>
        <trans-unit id="12502654ba05a3e6d53da76af059402cbb12044a" translate="yes" xml:space="preserve">
          <source>Arrays.copyOf()</source>
          <target state="translated">Arrays.copyOf()</target>
        </trans-unit>
        <trans-unit id="dbc9f4a9ab427ca23d1513d26347763e5b9209db" translate="yes" xml:space="preserve">
          <source>Arrays.copyOfRange()</source>
          <target state="translated">Arrays.copyOfRange()</target>
        </trans-unit>
        <trans-unit id="0e5aa98d7dcf419ac91cb5a6dd4cf0faff77b0f9" translate="yes" xml:space="preserve">
          <source>Arrays.deepEquals()</source>
          <target state="translated">Arrays.deepEquals()</target>
        </trans-unit>
        <trans-unit id="b8790dc370ceaac6a247f001d220325b8a9840f1" translate="yes" xml:space="preserve">
          <source>Arrays.deepHashCode()</source>
          <target state="translated">Arrays.deepHashCode()</target>
        </trans-unit>
        <trans-unit id="c14ee3f183bc78fa73dda4bc29af17be0e9d4c84" translate="yes" xml:space="preserve">
          <source>Arrays.deepToString()</source>
          <target state="translated">Arrays.deepToString()</target>
        </trans-unit>
        <trans-unit id="15a2250d58064792e0aa4c812b2fcd12bbf2cba8" translate="yes" xml:space="preserve">
          <source>Arrays.equals()</source>
          <target state="translated">Arrays.equals()</target>
        </trans-unit>
        <trans-unit id="7065cdf47ae5fa24a1bc1786252642b6ffc02e75" translate="yes" xml:space="preserve">
          <source>Arrays.fill()</source>
          <target state="translated">Arrays.fill()</target>
        </trans-unit>
        <trans-unit id="b7f4f05ac6079c2f39826d73fa974a667c2af896" translate="yes" xml:space="preserve">
          <source>Arrays.hashCode()</source>
          <target state="translated">Arrays.hashCode()</target>
        </trans-unit>
        <trans-unit id="1c84a0a521a0f88270229b96bf0c0c7052d3e797" translate="yes" xml:space="preserve">
          <source>Arrays.parallelPrefix()</source>
          <target state="translated">Arrays.parallelPrefix()</target>
        </trans-unit>
        <trans-unit id="6158fac122308b4615eef303cf6d18c4b6c598db" translate="yes" xml:space="preserve">
          <source>Arrays.parallelSetAll()</source>
          <target state="translated">Arrays.parallelSetAll()</target>
        </trans-unit>
        <trans-unit id="80c65cbf63256455d9f0156c52fe85f7774ffe3b" translate="yes" xml:space="preserve">
          <source>Arrays.parallelSort()</source>
          <target state="translated">Arrays.parallelSort()</target>
        </trans-unit>
        <trans-unit id="be3d1ea55339b035c7d4c55fc7102d227e5eb8ac" translate="yes" xml:space="preserve">
          <source>Arrays.setAll()</source>
          <target state="translated">Arrays.setAll()</target>
        </trans-unit>
        <trans-unit id="6eb3c3ed8dad53c9c7b43fe48c62d680b9b601f2" translate="yes" xml:space="preserve">
          <source>Arrays.sort()</source>
          <target state="translated">Arrays.sort()</target>
        </trans-unit>
        <trans-unit id="db8256238c2e9e487d4c3cd55dcc7735a411e0ad" translate="yes" xml:space="preserve">
          <source>Arrays.spliterator()</source>
          <target state="translated">Arrays.spliterator()</target>
        </trans-unit>
        <trans-unit id="3f01157894c7fb06cfd674ea96da3e264a32b485" translate="yes" xml:space="preserve">
          <source>Arrays.stream()</source>
          <target state="translated">Arrays.stream()</target>
        </trans-unit>
        <trans-unit id="9169ccbfd1326cb33090f82ec8fbe3c7ab8af645" translate="yes" xml:space="preserve">
          <source>Arrays.toString()</source>
          <target state="translated">Arrays.toString()</target>
        </trans-unit>
        <trans-unit id="0593ec9ff63572472f50caf84da2753c8e528390" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and awaits others.</source>
          <target state="translated">到达这个相位器,等待其他人。</target>
        </trans-unit>
        <trans-unit id="d1539b18fd678578b164311c3d48f4d617b373cc" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and awaits others. Equivalent in effect to &lt;code&gt;awaitAdvance(arrive())&lt;/code&gt;. If you need to await with interruption or timeout, you can arrange this with an analogous construction using one of the other forms of the &lt;code&gt;
 awaitAdvance&lt;/code&gt; method. If instead you need to deregister upon arrival, use &lt;code&gt;awaitAdvance(arriveAndDeregister())&lt;/code&gt;.</source>
          <target state="translated">到达此移相器并等待其他人。等效于 &lt;code&gt;awaitAdvance(arrive())&lt;/code&gt; 。如果您需要等待中断或超时，则可以使用 &lt;code&gt; awaitAdvance&lt;/code&gt; 方法的其他一种形式，以类似的方式安排它。如果相反，您需要在到达时注销，请使用 &lt;code&gt;awaitAdvance(arriveAndDeregister())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b298b30836ac59332910f7b9733054fb1ef7ff82" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and awaits others. Equivalent in effect to &lt;code&gt;awaitAdvance(arrive())&lt;/code&gt;. If you need to await with interruption or timeout, you can arrange this with an analogous construction using one of the other forms of the &lt;code&gt;awaitAdvance&lt;/code&gt; method. If instead you need to deregister upon arrival, use &lt;code&gt;awaitAdvance(arriveAndDeregister())&lt;/code&gt;.</source>
          <target state="translated">到达此移相器并等待其他人。与 &lt;code&gt;awaitAdvance(arrive())&lt;/code&gt; 等效。如果您需要等待中断或超时，则可以使用 &lt;code&gt;awaitAdvance&lt;/code&gt; 方法的其他一种形式，以类似的方式安排它。相反，如果您需要在到达时注销，请使用 &lt;code&gt;awaitAdvance(arriveAndDeregister())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ea548ad2eef87c5d8b67034a1e4844e0af0439d" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and deregisters from it without waiting for others to arrive.</source>
          <target state="translated">到达这个相位器,不等其他人到达,就从这个相位器上取消注册。</target>
        </trans-unit>
        <trans-unit id="331a996402bfe9c73489f9b59ef23c5414ff2f59" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and deregisters from it without waiting for others to arrive. Deregistration reduces the number of parties required to advance in future phases. If this phaser has a parent, and deregistration causes this phaser to have zero parties, this phaser is also deregistered from its parent.</source>
          <target state="translated">抵达该相位器并取消注册,无需等待其他相位器抵达。注销注册会减少在未来阶段前进所需的聚会数量。如果这个阶段器有一个父阶段器,取消注册导致这个阶段器的党派数为零,那么这个阶段器也会从其父阶段器取消注册。</target>
        </trans-unit>
        <trans-unit id="d77bf15c90eea56d5b8772727b356cf4aaf22515" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser, without waiting for others to arrive.</source>
          <target state="translated">到达这个相位器,不等其他人到达。</target>
        </trans-unit>
        <trans-unit id="0b0acd2f28a72c90a83e78811a10a96eb0dbb71a" translate="yes" xml:space="preserve">
          <source>ArrowButton's are special types of buttons that also render a directional indicator, typically an arrow.</source>
          <target state="translated">ArrowButton是一种特殊类型的按钮,它也会呈现一个方向指示器,典型的是一个箭头。</target>
        </trans-unit>
        <trans-unit id="5c6cd0f44fc52608739cfb8e05a5e7345de993e6" translate="yes" xml:space="preserve">
          <source>ArrowButton's are special types of buttons that also render a directional indicator, typically an arrow. ArrowButtons are used by composite components, for example ScrollBar's contain ArrowButtons. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ArrowButton&lt;/code&gt;.</source>
          <target state="translated">ArrowButton是特殊的按钮类型，它们也呈现方向指示符，通常是箭头。复合组件使用ArrowButtons，例如ScrollBar的包含ArrowButtons。要将样式绑定到此 &lt;code&gt;Region&lt;/code&gt; ,请使用名称 &lt;code&gt;ArrowButton&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cc73ee5807d168a1d8aacc166c82c2ee7c47082" translate="yes" xml:space="preserve">
          <source>ArrowButtonListener</source>
          <target state="translated">ArrowButtonListener</target>
        </trans-unit>
        <trans-unit id="85039c6640a4167808be49d7f6bbb5c37d904454" translate="yes" xml:space="preserve">
          <source>Artificial unit that represents the concept of forever.</source>
          <target state="translated">代表永远概念的人工单位。</target>
        </trans-unit>
        <trans-unit id="09a0f3f10a2375351ccbcd46c508e740e33c0052" translate="yes" xml:space="preserve">
          <source>Artificial unit that represents the concept of forever. This is primarily used with &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; to represent unbounded fields such as the year or era. The estimated duration of the era is artificially defined as the largest duration supported by &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">代表永恒概念的人造单位。这主要与&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;一起使用，以表示无限制的字段，例如年份或时代。人为地将时代的估计持续时间定义为 &lt;code&gt;Duration&lt;/code&gt; 所支持的最大持续时间。</target>
        </trans-unit>
        <trans-unit id="28878bd911a6e2161201f12a752b16a0e3a64e59" translate="yes" xml:space="preserve">
          <source>Artificial unit that represents the concept of forever. This is primarily used with &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; to represent unbounded fields such as the year or era. The estimated duration of this unit is artificially defined as the largest duration supported by &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表永恒概念的人造单位。这主要与&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;一起使用，以表示无限制的字段，例如年份或时代。该单元的估计持续时间被人为定义为&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; 所&lt;/a&gt;支持的最大持续时间。</target>
        </trans-unit>
        <trans-unit id="51055c590ce92112eede9c3d7b64cc8efee1e10c" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;ArrayType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;ArrayType&lt;/code&gt; 实例是不可变的，因此在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时，将为此实例的哈希码计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="8a06eee7db8e8e0c95360d596e24304443d3c08a" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;ArrayType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;ArrayType&lt;/code&gt; 实例是不可变的，因此在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时，一次计算该实例的字符串表示形式，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="4f31c066c80c5ecc56fb18455cfb5f55e8d1452b" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;CompositeType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;CompositeType&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="14e5a49915ee48848aa83aac1c10d5aa4e7f1ccb" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;CompositeType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;CompositeType&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="f39844cef3aced03bf7c027927a3077ca0c207aa" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;EventHandler&lt;/code&gt; ultimately relies on reflection to invoke a method we recommend against targeting an overloaded method. For example, if the target is an instance of the class &lt;code&gt;MyTarget&lt;/code&gt; which is defined as:</source>
          <target state="translated">由于 &lt;code&gt;EventHandler&lt;/code&gt; 最终依赖于反射来调用方法，因此我们建议不要以重载方法为目标。例如，如果目标是类 &lt;code&gt;MyTarget&lt;/code&gt; 的实例，则该类定义为：</target>
        </trans-unit>
        <trans-unit id="0ee103e1a122355fcb9e79b4fe3fc234251537c4" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="946d6e26cfa18c5dae68a73cdfafd66ae3e8c5fc" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="9bfab5877cfd4aadd260affbf021286f773564b5" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="7ac07f54833c9ed8e5c753676bb8a2eddf1a57aa" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次 &lt;code&gt;toString&lt;/code&gt; 调用时被计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="dbf0445af58e188e046e7e859bff2655bb05cf95" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="428c0b090909064feea96c5ea3e0851adaf9590a" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="b3c738e291bc0c1040cfbeb66d921626f9eb1fdc" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="227aadac004a08ea1ee54c3a5b5ecd8b3b17e38b" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="c6930e46117c4bb5747552c4bb0b1e5ed8204dae" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="c28102d97791fec60864d02ec9584b7d0725f6f7" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="f4aa7fa6a849490533c1d02585baa36a48ace15e" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;SimpleType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;SimpleType&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="ab6cadd5d40419488fed610574bff741e74a9113" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;SimpleType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;SimpleType&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="93bc4d923197d0977c93323bf2dfa7f5a46914ed" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;TabularType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;TabularType&lt;/code&gt; 实例是不可变的，因此该实例的哈希码在第一次调用 &lt;code&gt;hashCode&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="047b3ab07b8a9ec14650cf8b2c56435c20d42ea5" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;TabularType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="translated">由于 &lt;code&gt;TabularType&lt;/code&gt; 实例是不可变的，因此该实例的字符串表示形式在第一次调用 &lt;code&gt;toString&lt;/code&gt; 时计算一次，然后为后续调用返回相同的值。</target>
        </trans-unit>
        <trans-unit id="396ab8afee4eb44f6c8771bdd963d301172563d2" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;c1&lt;/code&gt; is the largest of the three components, the parallel group is sized to &lt;code&gt;c1&lt;/code&gt;. As &lt;code&gt;c2&lt;/code&gt; and &lt;code&gt;c3&lt;/code&gt; are smaller than &lt;code&gt;c1&lt;/code&gt; they are aligned based on the alignment specified for the component (if specified) or the default alignment of the parallel group. In the diagram &lt;code&gt;c2&lt;/code&gt; and &lt;code&gt;c3&lt;/code&gt; were created with an alignment of &lt;code&gt;LEADING&lt;/code&gt;. If the component orientation were right-to-left then &lt;code&gt;c2&lt;/code&gt; and &lt;code&gt;c3&lt;/code&gt; would be positioned on the opposite side.</source>
          <target state="translated">由于 &lt;code&gt;c1&lt;/code&gt; 是三个组件中最大的，因此并行组的大小为 &lt;code&gt;c1&lt;/code&gt; 。由于 &lt;code&gt;c2&lt;/code&gt; 和 &lt;code&gt;c3&lt;/code&gt; 小于 &lt;code&gt;c1&lt;/code&gt; ,因此它们将根据为组件指定的对齐方式（如果指定）或并行组的默认对齐方式进行对齐。在图中， &lt;code&gt;c2&lt;/code&gt; 和 &lt;code&gt;c3&lt;/code&gt; 是使用 &lt;code&gt;LEADING&lt;/code&gt; 的对齐方式创建的。如果组件的方向是从右到左，则 &lt;code&gt;c2&lt;/code&gt; 和 &lt;code&gt;c3&lt;/code&gt; 将位于相反的一侧。</target>
        </trans-unit>
        <trans-unit id="28a1d751cfb71b7fcb97fc65216d17c414cf67ab" translate="yes" xml:space="preserve">
          <source>As RFC 1122 section 4.2.4.2 indicates, a compliant TCP implementation should, but is not required to, let application change the TOS field during the lifetime of a connection. So whether the type-of-service field can be changed after the TCP connection has been established depends on the implementation in the underlying platform. Applications should not assume that they can change the TOS field after the connection.</source>
          <target state="translated">正如RFC 1122第4.2.4.2节所指出的那样,一个符合要求的TCP实现应该,但并不要求让应用程序在连接的生命周期内改变TOS字段。所以在TCP连接建立后,服务类型字段是否可以改变,取决于底层平台的实现。应用程序不应该认为在连接建立后可以改变TOS字段。</target>
        </trans-unit>
        <trans-unit id="e1f390e0b93e35b816181456c6d7c90804944390" translate="yes" xml:space="preserve">
          <source>As SO_SNDBUF is a hint, applications that want to verify what size the buffer is should call &lt;a href=&quot;#getSendBufferSize()&quot;&gt;&lt;code&gt;getSendBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于SO_SNDBUF是一个提示，因此想要验证缓冲区大小的应用程序应调用&lt;a href=&quot;#getSendBufferSize()&quot;&gt; &lt;code&gt;getSendBufferSize()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63933179360786262318bf144605f9c23c651e60" translate="yes" xml:space="preserve">
          <source>As SO_SNDBUF is a hint, applications that want to verify what size the buffer is should call &lt;a href=&quot;datagramsocket#getSendBufferSize--&quot;&gt;&lt;code&gt;getSendBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于SO_SNDBUF是一个提示，因此想要验证缓冲区大小的应用程序应调用&lt;a href=&quot;datagramsocket#getSendBufferSize--&quot;&gt; &lt;code&gt;getSendBufferSize()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c126704b5a3fcc95e4f56fd04a4805113d3d177" translate="yes" xml:space="preserve">
          <source>As a convenience, &lt;code&gt;BorderLayout&lt;/code&gt; interprets the absence of a string specification the same as the constant &lt;code&gt;CENTER&lt;/code&gt;:</source>
          <target state="translated">为了方便起见， &lt;code&gt;BorderLayout&lt;/code&gt; 将字符串说明的缺失解释为与常量 &lt;code&gt;CENTER&lt;/code&gt; 相同：</target>
        </trans-unit>
        <trans-unit id="623216a332823a9b42526097333c8db524b41960" translate="yes" xml:space="preserve">
          <source>As a convenience, the standard classes that implement this interface (such as &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;) have their &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;setLayout&lt;/code&gt; methods overridden, so that they delegate calls to the corresponding methods of the &lt;code&gt;ContentPane&lt;/code&gt;. For example, you can add a child component to a frame as follows:</source>
          <target state="translated">为方便起见，实现此接口的标准类（例如 &lt;code&gt;JFrame&lt;/code&gt; ， &lt;code&gt;JDialog&lt;/code&gt; ， &lt;code&gt;JWindow&lt;/code&gt; ， &lt;code&gt;JApplet&lt;/code&gt; 和 &lt;code&gt;JInternalFrame&lt;/code&gt; ） &lt;code&gt;add&lt;/code&gt; 覆盖它们的add， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;setLayout&lt;/code&gt; 方法，以便它们将调用委派给 &lt;code&gt;ContentPane&lt;/code&gt; 的相应方法。例如，您可以将子组件添加到框架，如下所示：</target>
        </trans-unit>
        <trans-unit id="1384114084e4b557636b3a669133612afbae554c" translate="yes" xml:space="preserve">
          <source>As a corner case, an uncasted &lt;code&gt;null&lt;/code&gt; argument is given a symbolic type descriptor of &lt;code&gt;java.lang.Void&lt;/code&gt;. The ambiguity with the type &lt;code&gt;Void&lt;/code&gt; is harmless, since there are no references of type &lt;code&gt;Void&lt;/code&gt; except the null reference.</source>
          <target state="translated">作为一个极端的例子，未广播的 &lt;code&gt;null&lt;/code&gt; 参数被赋予 &lt;code&gt;java.lang.Void&lt;/code&gt; 的符号类型描述符。 &lt;code&gt;Void&lt;/code&gt; 类型的歧义是无害的，因为除了空引用之外，没有其他 &lt;code&gt;Void&lt;/code&gt; 类型的引用。</target>
        </trans-unit>
        <trans-unit id="4dd15ca7767698ca99948d2fe7faf753510dcb36" translate="yes" xml:space="preserve">
          <source>As a corollary of this, access to protected members is restricted to receivers only of the accessing class, or one of its subclasses, and the accessing class must in turn be a subclass (or package sibling) of the protected member's defining class. If a method reference refers to a protected non-static method or field of a class outside the current package, the receiver argument will be narrowed to the type of the accessing class.</source>
          <target state="translated">作为这一点的必然结果,对受保护成员的访问仅限于访问类或它的一个子类的接受者,而且访问类必须是受保护成员的定义类的子类(或包的兄弟类)。如果一个方法引用指向当前包之外的类的一个受保护的非静态方法或字段,那么接受者参数将被缩小到访问类的类型。</target>
        </trans-unit>
        <trans-unit id="b5e2fbf4bf3c3874328b22e88bce1d044494b951" translate="yes" xml:space="preserve">
          <source>As a corollary, two threads must not attempt to call the same method (either &lt;code&gt;wrap()&lt;/code&gt; or &lt;code&gt;unwrap()&lt;/code&gt;) concurrently, because there is no way to guarantee the eventual packet ordering.</source>
          <target state="translated">因此，两个线程不得尝试同时调用同一方法（ &lt;code&gt;wrap()&lt;/code&gt; 或 &lt;code&gt;unwrap()&lt;/code&gt; ），因为没有办法保证最终的数据包排序。</target>
        </trans-unit>
        <trans-unit id="294df90d4fa2b7808301cd9a5c8eb1990b072037" translate="yes" xml:space="preserve">
          <source>As a delegate of Views, this object is responsible for the insets of a View and making sure the background is maintained according to the CSS attributes.</source>
          <target state="translated">作为View的代表,这个对象负责View的insets,并确保根据CSS属性维护背景。</target>
        </trans-unit>
        <trans-unit id="580e11f8bfcdf88928df2e045bb0ed702f504ca2" translate="yes" xml:space="preserve">
          <source>As a further improvement, notice that the left task need not even exist. Instead of creating a new one, we can iterate using the original task, and add a pending count for each fork. Additionally, because no task in this tree implements an &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;tryComplete()&lt;/code&gt; can be replaced with &lt;a href=&quot;countedcompleter#propagateCompletion--&quot;&gt;&lt;code&gt;propagateCompletion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作为进一步的改进，请注意，剩下的任务甚至不需要存在。除了创建新任务外，我们还可以使用原始任务进行迭代，并为每个fork添加一个待处理的计数。另外，由于该树中没有任何任务实现&lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;方法，因此 &lt;code&gt;tryComplete()&lt;/code&gt; 可以替换为broadcastCompletion &lt;a href=&quot;countedcompleter#propagateCompletion--&quot;&gt; &lt;code&gt;propagateCompletion()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5bad71a3fb8ccd4692da1314d34451b8a2867d03" translate="yes" xml:space="preserve">
          <source>As a further optimization, notice that the left task need not even exist. Instead of creating a new one, we can continue using the original task, and add a pending count for each fork. Additionally, because no task in this tree implements an &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;tryComplete&lt;/code&gt; can be replaced with &lt;a href=&quot;#propagateCompletion()&quot;&gt;&lt;code&gt;propagateCompletion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作为进一步的优化，请注意，剩下的任务甚至不需要存在。我们可以继续使用原始任务，而不是创建一个新任务，并为每个fork添加一个未决计数。另外，由于该树中没有任何任务实现&lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;方法，因此 &lt;code&gt;tryComplete&lt;/code&gt; 可以替换为propertyCompletion &lt;a href=&quot;#propagateCompletion()&quot;&gt; &lt;code&gt;propagateCompletion()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8b19025d85d644eb22f97cbd0fa732dcda56af0" translate="yes" xml:space="preserve">
          <source>As a general rule, the default load factor (.75) offers a good tradeoff between time and space costs. Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the &lt;code&gt;HashMap&lt;/code&gt; class, including &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;). The expected number of entries in the map and its load factor should be taken into account when setting its initial capacity, so as to minimize the number of rehash operations. If the initial capacity is greater than the maximum number of entries divided by the load factor, no rehash operations will ever occur.</source>
          <target state="translated">通常，默认负载因子（.75）在时间和空间成本之间提供了很好的折衷。较高的值会减少空间开销，但会增加查找成本（在 &lt;code&gt;HashMap&lt;/code&gt; 类的大多数操作中都 &lt;code&gt;get&lt;/code&gt; 体现，包括get和 &lt;code&gt;put&lt;/code&gt; ）。设置其初始容量时，应考虑映射中的预期条目数及其负载因子，以最大程度地减少重新哈希操作的次数。如果初始容量大于最大条目数除以负载因子，则将不会进行任何哈希操作。</target>
        </trans-unit>
        <trans-unit id="7f05ad47986d3ce6ff04a4c600cb7bc75a4a5dad" translate="yes" xml:space="preserve">
          <source>As a guide to naming &lt;code&gt;SyncProvider&lt;/code&gt; implementations, the following should be noted:</source>
          <target state="translated">作为命名 &lt;code&gt;SyncProvider&lt;/code&gt; 实现的指南，应注意以下几点：</target>
        </trans-unit>
        <trans-unit id="e854b3bf3147e12e70b3724dc0c7a2eaff478c26" translate="yes" xml:space="preserve">
          <source>As a matter of pure convention, the &lt;a href=&quot;methodhandles.lookup#lookupClass&quot;&gt;lookup class&lt;/a&gt; of this lookup object will be &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">按照纯粹的约定，此查找对象的&lt;a href=&quot;methodhandles.lookup#lookupClass&quot;&gt;查找类&lt;/a&gt;将为&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d14768545d05835f3609fcc1faf367631d891a6e" translate="yes" xml:space="preserve">
          <source>As a matter of pure convention, the &lt;a href=&quot;methodhandles.lookup#lookupClass()&quot;&gt;lookup class&lt;/a&gt; of this lookup object will be &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">按照纯粹的约定，此查找对象的&lt;a href=&quot;methodhandles.lookup#lookupClass()&quot;&gt;查找类&lt;/a&gt;将为&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b19e5b4703495ec90563138008d666eca821389" translate="yes" xml:space="preserve">
          <source>As a matter of style, programmers should always use this annotation on the most deeply nested element where it is effective. If you want to suppress a warning in a particular method, you should annotate that method rather than its class.</source>
          <target state="translated">作为一个风格问题,程序员应该总是在最深嵌套的元素上使用这个注解,因为它是有效的。如果你想在一个特定的方法中抑制一个警告,你应该注解该方法而不是它的类。</target>
        </trans-unit>
        <trans-unit id="4b54334dbad11746d8242cb8b52d1a32929adbea" translate="yes" xml:space="preserve">
          <source>As a numeric identifier.</source>
          <target state="translated">作为一个数字标识符。</target>
        </trans-unit>
        <trans-unit id="10ae13ed4ff91de1ecaf9c67004a39286fa17f1e" translate="yes" xml:space="preserve">
          <source>As a particular instance of the &lt;a href=&quot;package-summary&quot;&gt;general accuracy requirements&lt;/a&gt; and the ordering behavior required of this interface, the list of enclosed elements will be returned in the natural order for the originating source of information about the type. For example, if the information about the type is originating from a source file, the elements will be returned in source code order. (However, in that case the the ordering of &lt;a href=&quot;../util/elements.origin#MANDATED&quot;&gt;implicitly declared&lt;/a&gt; elements, such as default constructors, is not specified.)</source>
          <target state="translated">作为此接口&lt;a href=&quot;package-summary&quot;&gt;要求&lt;/a&gt;的一般精度要求和排序行为的特定实例，将以自然顺序返回包含元素的列表，以作为有关该类型的信息的原始来源。例如，如果有关类型的信息源自源文件，则将按源代码顺序返回元素。（但是，在这种情况下，未指定&lt;a href=&quot;../util/elements.origin#MANDATED&quot;&gt;隐式声明的&lt;/a&gt;元素（例如默认构造函数）的顺序。）</target>
        </trans-unit>
        <trans-unit id="4ea0debaf0c58be87193507940bb32b65aead044" translate="yes" xml:space="preserve">
          <source>As a rule, the &lt;code&gt;equals&lt;/code&gt; method should be used by implementations of this class to decide if two keys are the same.</source>
          <target state="translated">通常，此类的实现应使用 &lt;code&gt;equals&lt;/code&gt; 方法来确定两个键是否相同。</target>
        </trans-unit>
        <trans-unit id="cc11a3f7d42b1ac540afd0c6c3ee9d0bfe836f85" translate="yes" xml:space="preserve">
          <source>As a special case, a value of -1 will produce a single large segment with all input files, while a value of 0 will produce one segment for each class. Larger archive segments result in less fragmentation and better compression, but processing them requires more memory.</source>
          <target state="translated">作为一种特殊情况,值为-1时,将产生一个包含所有输入文件的大片段,而值为0时,将为每个类别产生一个片段。较大的档案段会导致较少的碎片和更好的压缩,但处理它们需要更多的内存。</target>
        </trans-unit>
        <trans-unit id="6ffc2cd29b50910748b3dfc8aac2d22991c2da03" translate="yes" xml:space="preserve">
          <source>As a special case, if the body contributes only &lt;code&gt;V&lt;/code&gt; and &lt;code&gt;I&lt;/code&gt; types, with no additional &lt;code&gt;A&lt;/code&gt; types, then the internal parameter list is extended by the argument types &lt;code&gt;A...&lt;/code&gt; of the &lt;code&gt;end&lt;/code&gt; handle.</source>
          <target state="translated">作为特殊情况，如果身体只占 &lt;code&gt;V&lt;/code&gt; 和 &lt;code&gt;I&lt;/code&gt; 的类型，没有额外的 &lt;code&gt;A&lt;/code&gt; 类型，那么内部的参数列表是由参数类型扩展 &lt;code&gt;A...&lt;/code&gt; 的 &lt;code&gt;end&lt;/code&gt; 手柄。</target>
        </trans-unit>
        <trans-unit id="0543fa2121ace689795a5b36a10d99cf789f79b8" translate="yes" xml:space="preserve">
          <source>As a special case, if the body contributes only &lt;code&gt;V&lt;/code&gt; and &lt;code&gt;I&lt;/code&gt; types, with no additional &lt;code&gt;A&lt;/code&gt; types, then the internal parameter list is extended by the argument types &lt;code&gt;A...&lt;/code&gt; of the &lt;code&gt;iterations&lt;/code&gt; handle.</source>
          <target state="translated">作为特殊情况，如果身体只占 &lt;code&gt;V&lt;/code&gt; 和 &lt;code&gt;I&lt;/code&gt; 的类型，没有额外的 &lt;code&gt;A&lt;/code&gt; 类型，那么内部的参数列表是由参数类型扩展 &lt;code&gt;A...&lt;/code&gt; 的 &lt;code&gt;iterations&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="c77f144e7f31f7133a206cb54181a33e19ca97bd" translate="yes" xml:space="preserve">
          <source>As a special case, if the body contributes only &lt;code&gt;V&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; types, with no additional &lt;code&gt;A&lt;/code&gt; types, then the internal parameter list is extended by the argument types &lt;code&gt;A...&lt;/code&gt; of the &lt;code&gt;iterator&lt;/code&gt; handle; if it is &lt;code&gt;null&lt;/code&gt; the single type &lt;code&gt;Iterable&lt;/code&gt; is added and constitutes the &lt;code&gt;A...&lt;/code&gt; list.</source>
          <target state="translated">作为一种特殊的情况下，如果身体只占 &lt;code&gt;V&lt;/code&gt; 和 &lt;code&gt;T&lt;/code&gt; 类型，没有额外的 &lt;code&gt;A&lt;/code&gt; 类型，那么这个内部参数列表是由参数类型扩展 &lt;code&gt;A...&lt;/code&gt; 的的 &lt;code&gt;iterator&lt;/code&gt; 手柄; 如果为 &lt;code&gt;null&lt;/code&gt; ，则添加单个类型 &lt;code&gt;Iterable&lt;/code&gt; 并构成 &lt;code&gt;A...&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="08b0d14a79938767ce36fbb2707705d3d9cc39a1" translate="yes" xml:space="preserve">
          <source>As a special case, urls of the form, &quot;scheme:*&quot; are accepted to mean any url of the given scheme.</source>
          <target state="translated">作为一种特殊情况,&quot;scheme:*&quot;形式的urls被接受,表示给定方案的任何url。</target>
        </trans-unit>
        <trans-unit id="84f7d6bfe0569d881c0e177f460ee852887b2dff" translate="yes" xml:space="preserve">
          <source>As a special case, when the Core Reflection API is used to view the signature polymorphic access mode methods in this class, they appear as ordinary non-polymorphic methods. Their reflective appearance, as viewed by &lt;a href=&quot;../class#getDeclaredMethod(java.lang.String,java.lang.Class...)&quot;&gt;&lt;code&gt;Class.getDeclaredMethod&lt;/code&gt;&lt;/a&gt;, is unaffected by their special status in this API. For example, &lt;a href=&quot;../reflect/executable#getModifiers()&quot;&gt;&lt;code&gt;Method.getModifiers&lt;/code&gt;&lt;/a&gt; will report exactly those modifier bits required for any similarly declared method, including in this case &lt;code&gt;native&lt;/code&gt; and &lt;code&gt;varargs&lt;/code&gt; bits.</source>
          <target state="translated">作为一种特殊情况，当使用Core Reflection API查看此类中的签名多态访问模式方法时，它们将以普通的非多态方法形式出现。如&lt;a href=&quot;../class#getDeclaredMethod(java.lang.String,java.lang.Class...)&quot;&gt; &lt;code&gt;Class.getDeclaredMethod&lt;/code&gt; &lt;/a&gt;所查看，它们的反射外观不受此API中其特殊状态的影响。例如，&lt;a href=&quot;../reflect/executable#getModifiers()&quot;&gt; &lt;code&gt;Method.getModifiers&lt;/code&gt; &lt;/a&gt;将准确报告任何类似声明的方法所需的修饰符位，在这种情况下包括本 &lt;code&gt;native&lt;/code&gt; 位和 &lt;code&gt;varargs&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="461db1b17375856f1f73326f8f768f30bff7ae49" translate="yes" xml:space="preserve">
          <source>As a special case, when the Core Reflection API is used to view the signature polymorphic methods &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; in this class, they appear as ordinary non-polymorphic methods. Their reflective appearance, as viewed by &lt;a href=&quot;../class#getDeclaredMethod(java.lang.String,java.lang.Class...)&quot;&gt;&lt;code&gt;Class.getDeclaredMethod&lt;/code&gt;&lt;/a&gt;, is unaffected by their special status in this API. For example, &lt;a href=&quot;../reflect/executable#getModifiers()&quot;&gt;&lt;code&gt;Method.getModifiers&lt;/code&gt;&lt;/a&gt; will report exactly those modifier bits required for any similarly declared method, including in this case &lt;code&gt;native&lt;/code&gt; and &lt;code&gt;varargs&lt;/code&gt; bits.</source>
          <target state="translated">作为一种特殊情况，当使用Core Reflection API查看 &lt;code&gt;invokeExact&lt;/code&gt; 的签名多态方法invokeExact或普通 &lt;code&gt;invoke&lt;/code&gt; 时，它们将作为普通的非多态方法出现。如&lt;a href=&quot;../class#getDeclaredMethod(java.lang.String,java.lang.Class...)&quot;&gt; &lt;code&gt;Class.getDeclaredMethod&lt;/code&gt; &lt;/a&gt;所查看，它们的反射外观不受此API中其特殊状态的影响。例如，&lt;a href=&quot;../reflect/executable#getModifiers()&quot;&gt; &lt;code&gt;Method.getModifiers&lt;/code&gt; &lt;/a&gt;将准确报告任何类似声明的方法所需的修饰符位，在这种情况下包括本 &lt;code&gt;native&lt;/code&gt; 位和 &lt;code&gt;varargs&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="216f9961d4139cec8f0bddd8265f28e7c9a615bb" translate="yes" xml:space="preserve">
          <source>As a special case, when the Core Reflection API is used to view the signature polymorphic methods &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; in this class, they appear as ordinary non-polymorphic methods. Their reflective appearance, as viewed by &lt;a href=&quot;../class#getDeclaredMethod-java.lang.String-java.lang.Class...-&quot;&gt;&lt;code&gt;Class.getDeclaredMethod&lt;/code&gt;&lt;/a&gt;, is unaffected by their special status in this API. For example, &lt;a href=&quot;../reflect/method#getModifiers--&quot;&gt;&lt;code&gt;Method.getModifiers&lt;/code&gt;&lt;/a&gt; will report exactly those modifier bits required for any similarly declared method, including in this case &lt;code&gt;native&lt;/code&gt; and &lt;code&gt;varargs&lt;/code&gt; bits.</source>
          <target state="translated">作为一种特殊情况，当使用Core Reflection API查看 &lt;code&gt;invokeExact&lt;/code&gt; 的签名多态方法invokeExact或普通 &lt;code&gt;invoke&lt;/code&gt; 时，它们将作为普通的非多态方法出现。如&lt;a href=&quot;../class#getDeclaredMethod-java.lang.String-java.lang.Class...-&quot;&gt; &lt;code&gt;Class.getDeclaredMethod&lt;/code&gt; &lt;/a&gt;所查看，它们的反射外观不受此API中其特殊状态的影响。例如，&lt;a href=&quot;../reflect/method#getModifiers--&quot;&gt; &lt;code&gt;Method.getModifiers&lt;/code&gt; &lt;/a&gt;将准确报告任何类似声明的方法所需的那些修饰符位，在这种情况下包括本 &lt;code&gt;native&lt;/code&gt; 位和 &lt;code&gt;varargs&lt;/code&gt; 位。</target>
        </trans-unit>
        <trans-unit id="f3508d6b0f8d38b0a073fe61a77c17290460cd9c" translate="yes" xml:space="preserve">
          <source>As a string.</source>
          <target state="translated">作为一个字符串。</target>
        </trans-unit>
        <trans-unit id="02c0e99193c309cd55617591b9c9cc47876658f4" translate="yes" xml:space="preserve">
          <source>As a third example, the line:</source>
          <target state="translated">作为第三个例子,行。</target>
        </trans-unit>
        <trans-unit id="f3cd84df848618f3e33e617ab7faae9f566cbead" translate="yes" xml:space="preserve">
          <source>As all events are delivered on the event dispatching thread, care must be taken in event processing. In particular, a long running task, such as network io or computational intensive processing, executed on the event dispatching thread blocks the event dispatching thread from dispatching any other events. While the event dispatching thread is blocked the application is completely unresponsive to user input. Refer to &lt;a href=&quot;swingworker&quot;&gt;&lt;code&gt;SwingWorker&lt;/code&gt;&lt;/a&gt; for the preferred way to do such processing when working with Swing.</source>
          <target state="translated">由于所有事件都是在事件分配线程上传递的，因此在事件处理中必须格外小心。特别是，在事件分配线程上执行的长时间运行的任务（例如网络io或计算密集型处理）会阻止事件分配线程分配任何其他事件。当事件分发线程被阻止时，应用程序完全不响应用户输入。有关使用Swing时进行此类处理的首选方法，请参考&lt;a href=&quot;swingworker&quot;&gt; &lt;code&gt;SwingWorker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a2d3b42ea5a2a4845e3f6b24418f4af05907a8c" translate="yes" xml:space="preserve">
          <source>As already mentioned this supports CSS. We don't support the full CSS spec. Refer to the javadoc of the CSS class to see what properties we support. The two major CSS parsing related concepts we do not currently support are pseudo selectors, such as &lt;code&gt;A:link { color: red }&lt;/code&gt;, and the &lt;code&gt;important&lt;/code&gt; modifier.</source>
          <target state="translated">如前所述，这支持CSS。我们不支持完整的CSS规范。请参阅CSS类的javadoc，以了解我们支持哪些属性。我们目前不支持的两个与CSS解析相关的主要概念是伪选择器，例如 &lt;code&gt;A:link { color: red }&lt;/code&gt; 和 &lt;code&gt;important&lt;/code&gt; 修饰符。</target>
        </trans-unit>
        <trans-unit id="fcf3b06fd523e2b92dcafbaa3dc3070a140b52b4" translate="yes" xml:space="preserve">
          <source>As always, GSS-API implementations must impose a local access-control policy on callers to prevent unauthorized callers from acquiring credentials to which they are not entitled. Non-default values for initLifetime and acceptLifetime cannot always be honored by the underlying mechanisms, thus callers should be prepared to call &lt;a href=&quot;#getRemainingInitLifetime(org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;getRemainingInitLifetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getRemainingAcceptLifetime(org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;getRemainingAcceptLifetime&lt;/code&gt;&lt;/a&gt; on the credential.</source>
          <target state="translated">与往常一样，GSS-API实现必须在呼叫者上施加本地访问控制策略，以防止未经授权的呼叫者获取他们无权获得的凭据。底层机制不能始终遵循initLifetime和acceptLifetime的非默认值，因此，调用者应准备在凭证上调用&lt;a href=&quot;#getRemainingInitLifetime(org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;getRemainingInitLifetime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getRemainingAcceptLifetime(org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;getRemainingAcceptLifetime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d20a6ada10d0115ed4b136d5f68578e23b849406" translate="yes" xml:space="preserve">
          <source>As an aid to agents that deploy supporting classes on the search path of the bootstrap class loader, or the search path of the class loader that loads the main agent class, the Java virtual machine arranges for the module of transformed classes to read the unnamed module of both class loaders.</source>
          <target state="translated">作为对在引导类加载器的搜索路径上部署支持类的代理,或加载主代理类的类加载器的搜索路径上部署支持类的代理的辅助,Java虚拟机安排转化类的模块读取两个类加载器的未命名模块。</target>
        </trans-unit>
        <trans-unit id="2c8eb36876577789fcdb3c4850fa5c24c780ff9a" translate="yes" xml:space="preserve">
          <source>As an alternative to the generated addresses just described, the &lt;code&gt;serviceURL&lt;/code&gt; address supplied when creating a connector server can specify a &lt;em&gt;directory address&lt;/em&gt; in which to store the provided or generated &lt;code&gt;RMIServer&lt;/code&gt; stub. This directory address is then used by both client and server.</source>
          <target state="translated">作为刚刚描述的生成地址的替代方法，创建连接器服务器时提供的 &lt;code&gt;serviceURL&lt;/code&gt; 地址可以指定用于存储提供的或生成的 &lt;code&gt;RMIServer&lt;/code&gt; 存根的&lt;em&gt;目录地址&lt;/em&gt;。然后，客户端和服务器都使用此目录地址。</target>
        </trans-unit>
        <trans-unit id="d264f31c9b2c8f4622e4e0337771b3dbb526bb93" translate="yes" xml:space="preserve">
          <source>As an alternative, the application can request the value or type of specific attributes:</source>
          <target state="translated">作为一种选择,应用程序可以请求特定属性的值或类型。</target>
        </trans-unit>
        <trans-unit id="c1f18943e71618cbbb7bdca802691957dfdda635" translate="yes" xml:space="preserve">
          <source>As an example consider a method in a class that spins in a loop until some flag is set outside of that method. A call to the &lt;code&gt;onSpinWait&lt;/code&gt; method should be placed inside the spin loop.</source>
          <target state="translated">例如，考虑一个类中的一个方法，该方法会循环旋转，直到在该方法外设置了某个标志为止。对 &lt;code&gt;onSpinWait&lt;/code&gt; 方法的调用应放在旋转循环内。</target>
        </trans-unit>
        <trans-unit id="ce78af05eb9f6f37051b98f08c5f9b210775e147" translate="yes" xml:space="preserve">
          <source>As an example consider an Exif image. The &lt;code&gt;TIFFDirectory&lt;/code&gt; instance corresponding to the Exif IFD in the Exif stream would have parent tag &lt;a href=&quot;exifparenttifftagset#TAG_EXIF_IFD_POINTER&quot;&gt;&lt;code&gt;TAG_EXIF_IFD_POINTER&lt;/code&gt;&lt;/a&gt; and would include &lt;a href=&quot;exiftifftagset&quot;&gt;&lt;code&gt;ExifTIFFTagSet&lt;/code&gt;&lt;/a&gt; in its group of known tag sets. The &lt;code&gt;TIFFDirectory&lt;/code&gt; corresponding to this Exif IFD will be contained in the data field of a &lt;code&gt;TIFFField&lt;/code&gt; which will in turn be contained in the &lt;code&gt;TIFFDirectory&lt;/code&gt; corresponding to the primary IFD of the Exif image which will itself have a &lt;code&gt;null&lt;/code&gt;-valued parent tag.</source>
          <target state="translated">例如，考虑一个Exif图像。与Exif流中的Exif IFD对应的 &lt;code&gt;TIFFDirectory&lt;/code&gt; 实例将具有父标记&lt;a href=&quot;exifparenttifftagset#TAG_EXIF_IFD_POINTER&quot;&gt; &lt;code&gt;TAG_EXIF_IFD_POINTER&lt;/code&gt; &lt;/a&gt;，并将在其已知标记集组中包含&lt;a href=&quot;exiftifftagset&quot;&gt; &lt;code&gt;ExifTIFFTagSet&lt;/code&gt; &lt;/a&gt;。与此Exif IFD对应的 &lt;code&gt;TIFFDirectory&lt;/code&gt; 将包含在 &lt;code&gt;TIFFField&lt;/code&gt; 的数据字段中，而TIFFField的数据字段又将包含在与Exif图像的主IFD对应的 &lt;code&gt;TIFFDirectory&lt;/code&gt; 中，该图像本身将具有 &lt;code&gt;null&lt;/code&gt; 值的父标记。</target>
        </trans-unit>
        <trans-unit id="519670b8abe414575f9887bc856f1caca855376c" translate="yes" xml:space="preserve">
          <source>As an example how a parallel computation framework, such as the &lt;code&gt;java.util.stream&lt;/code&gt; package, would use Spliterator in a parallel computation, here is one way to implement an associated parallel forEach, that illustrates the primary usage idiom of splitting off subtasks until the estimated amount of work is small enough to perform sequentially. Here we assume that the order of processing across subtasks doesn't matter; different (forked) tasks may further split and process elements concurrently in undetermined order. This example uses a &lt;a href=&quot;concurrent/countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt;; similar usages apply to other parallel task constructions.</source>
          <target state="translated">作为一个示例，例如 &lt;code&gt;java.util.stream&lt;/code&gt; 包之类的并行计算框架将如何在并行计算中使用Spliterator，这是一种实现关联的并行forEach的方法，该方法说明了将子任务拆分为主要任务的惯用法。估计的工作量很小，可以按顺序执行。在这里，我们假设跨子任务的处理顺序无关紧要；不同（分叉）的任务可能会进一步以不确定的顺序同时拆分和处理元素。这个例子使用了&lt;a href=&quot;concurrent/countedcompleter&quot;&gt; &lt;code&gt;CountedCompleter&lt;/code&gt; &lt;/a&gt; ;类似的用法适用于其他并行任务构造。</target>
        </trans-unit>
        <trans-unit id="8d0ae0a0b146fb1c4a7ccc7080745fe849c0f316" translate="yes" xml:space="preserve">
          <source>As an example of how to transform a stream pipeline that inappropriately uses side-effects to one that does not, the following code searches a stream of strings for those matching a given regular expression, and puts the matches in a list.</source>
          <target state="translated">作为如何将不适当使用副作用的流管道转变为不使用副作用的流管道的一个例子,下面的代码在一个字符串流中搜索与给定正则表达式相匹配的字符串,并将匹配的字符串放在一个列表中。</target>
        </trans-unit>
        <trans-unit id="be0b4cb6953281dedf890ce02d6399e01e8e281d" translate="yes" xml:space="preserve">
          <source>As an example of the creation and meaning of SocketPermissions, note that if the following permission:</source>
          <target state="translated">以SocketPermissions的创建和意义为例,请注意,如果以下权限。</target>
        </trans-unit>
        <trans-unit id="af9f7dce64decac25923a7b89727f0ff8e9ce855" translate="yes" xml:space="preserve">
          <source>As an example, a JAR file named &quot;&lt;code&gt;foo-bar.jar&lt;/code&gt;&quot; will derive a module name &quot;&lt;code&gt;foo.bar&lt;/code&gt;&quot; and no version. A JAR file named &quot;&lt;code&gt;foo-bar-1.2.3-SNAPSHOT.jar&lt;/code&gt;&quot; will derive a module name &quot;&lt;code&gt;foo.bar&lt;/code&gt;&quot; and &quot;&lt;code&gt;1.2.3-SNAPSHOT&lt;/code&gt;&quot; as the version.</source>
          <target state="translated">例如，名为&amp;ldquo; &lt;code&gt;foo-bar.jar&lt;/code&gt; &amp;rdquo;的JAR文件将派生模块名称&amp;ldquo; &lt;code&gt;foo.bar&lt;/code&gt; &amp;rdquo;，而没有版本。一个名为&amp;ldquo; &lt;code&gt;foo-bar-1.2.3-SNAPSHOT.jar&lt;/code&gt; &amp;rdquo;的JAR文件将派生模块名称&amp;ldquo; &lt;code&gt;foo.bar&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;1.2.3-SNAPSHOT&lt;/code&gt; &amp;rdquo;作为版本。</target>
        </trans-unit>
        <trans-unit id="97b387abc8b857d9304279d1b14c91f4f3312903" translate="yes" xml:space="preserve">
          <source>As an example, a connection ID can look something like this:</source>
          <target state="translated">举个例子,一个连接ID可以是这样的。</target>
        </trans-unit>
        <trans-unit id="fff2ace97e2977937ba5240c246934c0d575e39c" translate="yes" xml:space="preserve">
          <source>As an example, consider the memory layout expressed by a &lt;a href=&quot;sequencelayout&quot;&gt;&lt;code&gt;SequenceLayout&lt;/code&gt;&lt;/a&gt; instance constructed as follows:</source>
          <target state="translated">例如，考虑由如下构造的&lt;a href=&quot;sequencelayout&quot;&gt; &lt;code&gt;SequenceLayout&lt;/code&gt; &lt;/a&gt;实例表示的内存布局：</target>
        </trans-unit>
        <trans-unit id="3f24b1ec4f0deb26b67d4a967e2d2944546f1544" translate="yes" xml:space="preserve">
          <source>As an example, each of the following three lines specifies the key &lt;code&gt;&quot;Truth&quot;&lt;/code&gt; and the associated element value &lt;code&gt;&quot;Beauty&quot;&lt;/code&gt;:</source>
          <target state="translated">例如，以下三行分别指定键 &lt;code&gt;&quot;Truth&quot;&lt;/code&gt; 和关联的元素值 &lt;code&gt;&quot;Beauty&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="94dcbeee3c11515162585b2f17366749bf1bb66b" translate="yes" xml:space="preserve">
          <source>As an example, let's say you wanted to change the attributes of the first three characters in &lt;u&gt;Figure 9&lt;/u&gt;, shown previously. The first two arguments passed to &lt;code&gt;setCharacterAttributes()&lt;/code&gt; would be 0 and 3. The third argument would be the AttributeSet containing the new attributes. In the example we are considering, it doesn't matter what the fourth argument is.</source>
          <target state="translated">举例来说，假设您要更改前面显示的&lt;u&gt;图9&lt;/u&gt;中前三个字符的属性。传递给 &lt;code&gt;setCharacterAttributes()&lt;/code&gt; 的前两个参数将是0和3。第三个参数将是包含新属性的AttributeSet。在我们正在考虑的示例中，第四个参数是什么都没有关系。</target>
        </trans-unit>
        <trans-unit id="cb323e62cc666c2cfc67d18c162e62100b1485d7" translate="yes" xml:space="preserve">
          <source>As an example, suppose a module specifies the following directive:</source>
          <target state="translated">举个例子,假设一个模块指定了以下指令。</target>
        </trans-unit>
        <trans-unit id="f3eb8046c9fa22260a1f4ffbf4ea69bccaf666b0" translate="yes" xml:space="preserve">
          <source>As an example, suppose a module specifies the following directives:</source>
          <target state="translated">举个例子,假设一个模块指定了以下指令。</target>
        </trans-unit>
        <trans-unit id="a9d7c71d033ba15d3b2c3f4170e79efd63f690d4" translate="yes" xml:space="preserve">
          <source>As an example, suppose the service is &lt;code&gt;com.example.CodecFactory&lt;/code&gt;, an interface that defines methods for producing encoders and decoders:</source>
          <target state="translated">例如，假设服务是 &lt;code&gt;com.example.CodecFactory&lt;/code&gt; ，这是一个定义用于生成编码器和解码器的方法的接口：</target>
        </trans-unit>
        <trans-unit id="5287559ce076aa6993abddd37b36a81602b2644f" translate="yes" xml:space="preserve">
          <source>As an example, suppose we have a bounded buffer which supports &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;take&lt;/code&gt; methods. If a &lt;code&gt;take&lt;/code&gt; is attempted on an empty buffer, then the thread will block until an item becomes available; if a &lt;code&gt;put&lt;/code&gt; is attempted on a full buffer, then the thread will block until a space becomes available. We would like to keep waiting &lt;code&gt;put&lt;/code&gt; threads and &lt;code&gt;take&lt;/code&gt; threads in separate wait-sets so that we can use the optimization of only notifying a single thread at a time when items or spaces become available in the buffer. This can be achieved using two &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">例如，假设我们有一个支持 &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;take&lt;/code&gt; 方法的有限缓冲区。如果尝试在空缓冲区上进行 &lt;code&gt;take&lt;/code&gt; ，则线程将阻塞，直到有可用项为止。如果尝试在完整的缓冲区上进行 &lt;code&gt;put&lt;/code&gt; ，则线程将阻塞，直到有可用空间为止。我们希望继续等待 &lt;code&gt;put&lt;/code&gt; 线程，并在单独的等待集中 &lt;code&gt;take&lt;/code&gt; 线程，以便我们可以使用仅当缓冲区中的项目或空间可用时才通知单个线程的优化。这可以使用两个&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;实例来实现。</target>
        </trans-unit>
        <trans-unit id="25026a033fa89a756fd3fbc1cc4ef7249b229f4d" translate="yes" xml:space="preserve">
          <source>As an example, suppose you wanted to find all MBeans where the &lt;code&gt;
 Enabled&lt;/code&gt; attribute is &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;Owner&lt;/code&gt; attribute is &lt;code&gt;
 &quot;Duke&quot;&lt;/code&gt;. Here is how you could construct the appropriate &lt;code&gt;QueryExp&lt;/code&gt; by chaining together method calls:</source>
          <target state="translated">例如，假设您要查找所有 &lt;code&gt; Enabled&lt;/code&gt; 属性为 &lt;code&gt;true&lt;/code&gt; 且 &lt;code&gt;Owner&lt;/code&gt; 属性为 &lt;code&gt; &quot;Duke&quot;&lt;/code&gt; MBean 。这是通过将方法调用链接在一起来构造适当的 &lt;code&gt;QueryExp&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="fe3bc312e29b02ca913f13cc16a375dece93eb7a" translate="yes" xml:space="preserve">
          <source>As an example, suppose you wanted to find all MBeans where the &lt;code&gt;Enabled&lt;/code&gt; attribute is &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;Owner&lt;/code&gt; attribute is &lt;code&gt;&quot;Duke&quot;&lt;/code&gt;. Here is how you could construct the appropriate &lt;code&gt;QueryExp&lt;/code&gt; by chaining together method calls:</source>
          <target state="translated">例如，假设您要查找所有 &lt;code&gt;Enabled&lt;/code&gt; 属性为 &lt;code&gt;true&lt;/code&gt; 且 &lt;code&gt;Owner&lt;/code&gt; 属性为 &lt;code&gt;&quot;Duke&quot;&lt;/code&gt; MBean 。这是通过将方法调用链接在一起来构造适当的 &lt;code&gt;QueryExp&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="20743818463fcdeb7f18917626acb2165d277608" translate="yes" xml:space="preserve">
          <source>As an example, the following piece of code:</source>
          <target state="translated">举个例子,下面这段代码。</target>
        </trans-unit>
        <trans-unit id="98bfa17581a2aa8712de27e7e305b34e05a857cb" translate="yes" xml:space="preserve">
          <source>As an example, the strings &quot;Good&quot;, &quot;Better&quot;, and &quot;Best&quot; could be associated with the ranges &lt;code&gt;[0, .33)&lt;/code&gt;, &lt;code&gt;[.33, .66)&lt;/code&gt;, and &lt;code&gt;[.66, 1.0]&lt;/code&gt;. In this case, &lt;code&gt;getCompressionQualityDescriptions&lt;/code&gt; would return &lt;code&gt;{ &quot;Good&quot;, &quot;Better&quot;, &quot;Best&quot; }&lt;/code&gt; and &lt;code&gt;getCompressionQualityValues&lt;/code&gt; would return &lt;code&gt;{ 0.0F, .33F, .66F, 1.0F }&lt;/code&gt;.</source>
          <target state="translated">例如，字符串&amp;ldquo; Good&amp;rdquo;，&amp;ldquo; Better&amp;rdquo;和&amp;ldquo; Best&amp;rdquo;可与范围 &lt;code&gt;[0, .33)&lt;/code&gt; ， &lt;code&gt;[.33, .66)&lt;/code&gt; 和 &lt;code&gt;[.66, 1.0]&lt;/code&gt; 关联。在这种情况下， &lt;code&gt;getCompressionQualityDescriptions&lt;/code&gt; 将返回 &lt;code&gt;{ &quot;Good&quot;, &quot;Better&quot;, &quot;Best&quot; }&lt;/code&gt; 并且 &lt;code&gt;getCompressionQualityValues&lt;/code&gt; 将返回 &lt;code&gt;{ 0.0F, .33F, .66F, 1.0F }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c84b909cb394014f6e9e28fcceef3cdf0b27e39" translate="yes" xml:space="preserve">
          <source>As an example, think of two Language Priority Lists each of which includes only one language range and a set of following language tags:</source>
          <target state="translated">举个例子,想一想两个语言优先列表,每个列表只包括一个语言范围和一组下面的语言标签。</target>
        </trans-unit>
        <trans-unit id="b74235f16bc65bf0ded8643900f93d34fe2af4db" translate="yes" xml:space="preserve">
          <source>As another example, if the &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="translated">作为另一个示例，如果 &lt;code&gt;JMXServiceURL&lt;/code&gt; 为：</target>
        </trans-unit>
        <trans-unit id="5d0ec54f9ead5c0da0a715695859c6a3e3eb8423" translate="yes" xml:space="preserve">
          <source>As another example, let's say you wanted to insert the pattern &quot;new\ntext\n&quot; at offset 2 as shown previously in &lt;u&gt;Figure 2&lt;/u&gt;. This operation would have the result shown in &lt;u&gt;Figure 4&lt;/u&gt;.</source>
          <target state="translated">再举一个例子，假设您想在偏移量2处插入模式&amp;ldquo; new \ ntext \ n&amp;rdquo;，&lt;u&gt;如图2&lt;/u&gt;所示。该操作的结果如图&lt;u&gt;4&lt;/u&gt;所示。</target>
        </trans-unit>
        <trans-unit id="d3aa2758b9604888fefa6adbf8630b3457e22630" translate="yes" xml:space="preserve">
          <source>As another example, the following three lines specify a single property:</source>
          <target state="translated">作为另一个例子,以下三行指定了一个单一属性。</target>
        </trans-unit>
        <trans-unit id="cf8bb67abb028308da14d13bd3f1168caca43131" translate="yes" xml:space="preserve">
          <source>As another example, this code allows &lt;code&gt;long&lt;/code&gt; types to be assigned from entries in a file &lt;code&gt;myNumbers&lt;/code&gt;:</source>
          <target state="translated">作为另一个示例，此代码允许从文件 &lt;code&gt;myNumbers&lt;/code&gt; 中的条目分配 &lt;code&gt;long&lt;/code&gt; 类型：</target>
        </trans-unit>
        <trans-unit id="890be3293dd6c9aa5007d8e0c51531fac9b53c8a" translate="yes" xml:space="preserve">
          <source>As appropriate, the doclet calls the &lt;a href=&quot;#toString(java.util.List,javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method on the taglet object, giving it a list of tags and the element for which the tags are part of the element's documentation comment, from which the taglet can determine the string to be included in the documentation. The doclet will typically specify any requirements on the contents of the string that is returned.</source>
          <target state="translated">适当的话，doclet会调用taglet对象上的&lt;a href=&quot;#toString(java.util.List,javax.lang.model.element.Element)&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;方法，为其提供一个标签列表以及该元素作为元素文档注释的一部分的元素，taglet可以从中确定要包含在文档中的字符串。doclet通常会指定对返回的字符串内容的任何要求。</target>
        </trans-unit>
        <trans-unit id="aa967af9ff93d303ea894c49b3d794790a1fff12" translate="yes" xml:space="preserve">
          <source>As appropriate, the tool calls the &lt;a href=&quot;#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;&lt;code&gt;process&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;Processor&lt;/code&gt; object; a new &lt;code&gt;Processor&lt;/code&gt; object is &lt;em&gt;not&lt;/em&gt; created for each round.</source>
          <target state="translated">该工具将在适当的时候调用 &lt;code&gt;Processor&lt;/code&gt; 对象上的&lt;a href=&quot;#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt; &lt;code&gt;process&lt;/code&gt; &lt;/a&gt;方法。&lt;em&gt;不会&lt;/em&gt;为每个回合创建一个新的 &lt;code&gt;Processor&lt;/code&gt; 对象。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6018ced76c00230539b215f3d88e0df0f812f353" translate="yes" xml:space="preserve">
          <source>As appropriate, the tool calls the &lt;a href=&quot;#run(jdk.javadoc.doclet.DocletEnvironment)&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; method on the doclet object, giving it a DocletEnvironment object, from which the doclet can determine the elements to be included in the documentation.</source>
          <target state="translated">适当时，该工具将在doclet对象上调用&lt;a href=&quot;#run(jdk.javadoc.doclet.DocletEnvironment)&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;方法，并为其提供一个DocletEnvironment对象，该doclet可以从该对象确定要包含在文档中的元素。</target>
        </trans-unit>
        <trans-unit id="5298b9629494ed8424507f9377213cba4fd0e6bf" translate="yes" xml:space="preserve">
          <source>As appropriate, the tool calls the &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;&lt;code&gt;process&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;Processor&lt;/code&gt; object; a new &lt;code&gt;Processor&lt;/code&gt; object is &lt;em&gt;not&lt;/em&gt; created for each round.</source>
          <target state="translated">该工具将在适当时调用 &lt;code&gt;Processor&lt;/code&gt; 对象上的&lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt; &lt;code&gt;process&lt;/code&gt; &lt;/a&gt;方法。&lt;em&gt;不会&lt;/em&gt;为每个回合创建一个新的 &lt;code&gt;Processor&lt;/code&gt; 对象。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ca21abb6a8a33a2129f38bbd3cb676d86062b00" translate="yes" xml:space="preserve">
          <source>As defined in section 1.2 of the W3C XML 1.0 Recommendation, fatal errors are those that would make it impossible for a parser to continue normal processing. These include violation of a well-formedness constraint, invalid encoding, and forbidden structural errors as described in the W3C XML 1.0 Recommendation.</source>
          <target state="translated">按照《W3C XML 1.0建议》第1.2节的定义,致命错误是指那些使解析器无法继续正常处理的错误。这些错误包括违反格式良好的约束条件、无效编码和W3C XML 1.0建议中所述的禁止结构错误。</target>
        </trans-unit>
        <trans-unit id="0b6301b17b79ed3b3340c90417e936d981fab12b" translate="yes" xml:space="preserve">
          <source>As described in section 3, &quot;Server Name Indication&quot;, of &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC 6066)&lt;/a&gt;, &quot;HostName&quot; contains the fully qualified DNS hostname of the server, as understood by the client. The encoded server name value of a hostname is represented as a byte string using ASCII encoding without a trailing dot. This allows the support of Internationalized Domain Names (IDN) through the use of A-labels (the ASCII-Compatible Encoding (ACE) form of a valid string of Internationalized Domain Names for Applications (IDNA)) defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt;.</source>
          <target state="translated">如&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS扩展（RFC 6066）的&lt;/a&gt;第3节&amp;ldquo;服务器名称指示&amp;rdquo; 中所述，&amp;ldquo;主机名&amp;rdquo;包含服务器的标准DNS主机名，如客户端所理解的那样。主机名的编码服务器名称值使用ASCII编码表示为字节字符串，不带尾点。这允许通过使用&lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890中&lt;/a&gt;定义的A标签（应用程序有效国际化域名（IDNA）的有效字符串的ASCII兼容编码（ACE）形式）来支持国际化域名（IDN）。</target>
        </trans-unit>
        <trans-unit id="dc71b8e5666a98322b4472e7b461bc07c2a58ca5" translate="yes" xml:space="preserve">
          <source>As described in section 3, &quot;Server Name Indication&quot;, of &lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC 6066)&lt;/a&gt;, &quot;HostName&quot; contains the fully qualified DNS hostname of the server, as understood by the client. The encoded server name value of a hostname is represented as a byte string using ASCII encoding without a trailing dot. This allows the support of Internationalized Domain Names (IDN) through the use of A-labels (the ASCII-Compatible Encoding (ACE) form of a valid string of Internationalized Domain Names for Applications (IDNA)) defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt;.</source>
          <target state="translated">如&lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS扩展（RFC 6066）的&lt;/a&gt;第3节&amp;ldquo;服务器名称指示&amp;rdquo;中所述，&amp;ldquo;主机名&amp;rdquo;包含服务器的标准DNS主机名，如客户端所理解的那样。主机名的编码服务器名值使用ASCII编码表示为字节字符串，不带尾点。这允许通过使用&lt;a href=&quot;https://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890中&lt;/a&gt;定义的A标签（应用程序有效国际化域名（IDNA）的有效字符串的ASCII兼容编码（ACE）形式）来支持国际化域名（IDN）。</target>
        </trans-unit>
        <trans-unit id="d3bce682edc8c24d9e7ae232cf93cc47f151c707" translate="yes" xml:space="preserve">
          <source>As described in the Java Virtual Machine Specification, certain types in this package are given special treatment by the virtual machine:</source>
          <target state="translated">正如Java虚拟机规范中所描述的那样,该包中的某些类型被虚拟机给予了特殊处理。</target>
        </trans-unit>
        <trans-unit id="6b4f306157d9d4daaf890904a7cf403b8f976740" translate="yes" xml:space="preserve">
          <source>As described in the Java Virtual Machine Specification, certain types in this package have special relations to dynamic language support in the virtual machine:</source>
          <target state="translated">正如Java虚拟机规范中所描述的那样,本包中的某些类型与虚拟机中的动态语言支持有特殊关系。</target>
        </trans-unit>
        <trans-unit id="72e701ee63c9d6aac4889cb8fb04b11a80bd1ad2" translate="yes" xml:space="preserve">
          <source>As dictated by the Standard MIDI Files specification, two status byte values are legal for a &lt;code&gt;SysexMessage&lt;/code&gt; read from a MIDI file:</source>
          <target state="translated">根据标准MIDI文件规范的规定，对于从MIDI文件读取的 &lt;code&gt;SysexMessage&lt;/code&gt; ，两个状态字节值是合法的：</target>
        </trans-unit>
        <trans-unit id="823211c0e6e5c6f3a690856e6dbbe71cc75eed60" translate="yes" xml:space="preserve">
          <source>As discussed above, performing calculations on a date where the rules of the calendar system are pluggable requires skill and is not recommended. Fortunately, the need to perform calculations on a date in an arbitrary calendar system is extremely rare. For example, it is highly unlikely that the business rules of a library book rental scheme will allow rentals to be for one month, where meaning of the month is dependent on the user's preferred calendar system.</source>
          <target state="translated">如上所述,在日历系统规则可插拔的日期上执行计算需要技巧,不推荐。幸运的是,需要在任意日历系统的日期上执行计算的情况极为罕见。例如,图书馆图书租赁计划的业务规则极不可能允许租期为一个月,而一个月的意义取决于用户喜欢的日历系统。</target>
        </trans-unit>
        <trans-unit id="36314eb89ebb3a2d4ef9809875cad02204176e33" translate="yes" xml:space="preserve">
          <source>As documented in the JVM specification, all failures arising from the linkage of a dynamic call site are reported by a &lt;a href=&quot;../bootstrapmethoderror&quot;&gt;&lt;code&gt;BootstrapMethodError&lt;/code&gt;&lt;/a&gt;, which is thrown as the abnormal termination of the dynamic call site execution. If this happens, the same error will the thrown for all subsequent attempts to execute the dynamic call site.</source>
          <target state="translated">如JVM规范中所述，由动态调用站点链接引起的所有故障均由&lt;a href=&quot;../bootstrapmethoderror&quot;&gt; &lt;code&gt;BootstrapMethodError&lt;/code&gt; &lt;/a&gt;报告，该错误引发为动态调用站点执行的异常终止。如果发生这种情况，将为以后执行动态调用站点的所有尝试抛出相同的错误。</target>
        </trans-unit>
        <trans-unit id="bf9e2b2d25d40b2e40f4396be9bb0dd7402e5fb1" translate="yes" xml:space="preserve">
          <source>As empty branch elements are not allowed in the document, if the element is the sole child, its parent element is removed as well, recursively. This means that when replacing all the children of a particular element, new children should be added &lt;em&gt;before&lt;/em&gt; removing old children.</source>
          <target state="translated">由于文档中不允许使用空的分支元素，因此如果该元素是唯一的子元素，则其父元素也将被递归删除。这意味着，当替换特定元素的所有子代时，应&lt;em&gt;在&lt;/em&gt;删除老子代&lt;em&gt;之前&lt;/em&gt;添加新子代。</target>
        </trans-unit>
        <trans-unit id="a10251bdf20853933c47ec19a245569632c05790" translate="yes" xml:space="preserve">
          <source>As explained in the &lt;code&gt;DOMString&lt;/code&gt; interface, text strings in the DOM are represented in UTF-16, i.e. as a sequence of 16-bit units. In the following, the term 16-bit units is used whenever necessary to indicate that indexing on CharacterData is done in 16-bit units.</source>
          <target state="translated">如 &lt;code&gt;DOMString&lt;/code&gt; 接口中所述，DOM中的文本字符串以UTF-16表示，即表示为16位单元的序列。在下文中，术语&amp;ldquo; 16位单位&amp;rdquo;在必要时用于表示在CharacterData上的索引是以16位单位完成的。</target>
        </trans-unit>
        <trans-unit id="1c5f4783a2e6c5d9961ec49ed626628e6b18d177" translate="yes" xml:space="preserve">
          <source>As far as customizing how the table looks in the printed result, &lt;code&gt;JTable&lt;/code&gt; itself will take care of hiding the selection and focus during printing. For additional customizations, your renderers or painting code can customize the look based on the value of &lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt;&lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">至于自定义表格在打印结果中的外观， &lt;code&gt;JTable&lt;/code&gt; 本身将负责在打印过程中隐藏选择内容和焦点。对于其他自定义，渲染器或绘画代码可以基于&lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt; &lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt; &lt;/a&gt;的值自定义外观。</target>
        </trans-unit>
        <trans-unit id="a7ad0c960b5bd3230a5f549e534d4486f10cd73a" translate="yes" xml:space="preserve">
          <source>As far as is reasonably practical, the &lt;code&gt;hashCode&lt;/code&gt; method defined by class &lt;code&gt;Object&lt;/code&gt; returns distinct integers for distinct objects.</source>
          <target state="translated">在合理可行的范围内，由 &lt;code&gt;Object&lt;/code&gt; 类定义的 &lt;code&gt;hashCode&lt;/code&gt; 方法为不同的对象返回不同的整数。</target>
        </trans-unit>
        <trans-unit id="3bf1bd957df6b1e6645097076c35d04db35960a2" translate="yes" xml:space="preserve">
          <source>As for &lt;code&gt;Entity&lt;/code&gt; nodes, &lt;code&gt;EntityReference&lt;/code&gt; nodes and all their descendants are readonly.</source>
          <target state="translated">对于 &lt;code&gt;Entity&lt;/code&gt; 节点， &lt;code&gt;EntityReference&lt;/code&gt; 节点及其所有后代都是只读的。</target>
        </trans-unit>
        <trans-unit id="4fd4c6616b03047a5039b07c21afb5e7a0ec9d44" translate="yes" xml:space="preserve">
          <source>As for all &lt;code&gt;JComponent&lt;/code&gt; classes, you can use &lt;a href=&quot;inputmap&quot;&gt;&lt;code&gt;InputMap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;actionmap&quot;&gt;&lt;code&gt;ActionMap&lt;/code&gt;&lt;/a&gt; to associate an &lt;a href=&quot;action&quot;&gt;&lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; object with a &lt;a href=&quot;keystroke&quot;&gt;&lt;code&gt;KeyStroke&lt;/code&gt;&lt;/a&gt; and execute the action under specified conditions.</source>
          <target state="translated">对于所有 &lt;code&gt;JComponent&lt;/code&gt; 类，可以使用&lt;a href=&quot;inputmap&quot;&gt; &lt;code&gt;InputMap&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;actionmap&quot;&gt; &lt;code&gt;ActionMap&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;action&quot;&gt; &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt;对象与&lt;a href=&quot;keystroke&quot;&gt; &lt;code&gt;KeyStroke&lt;/code&gt; &lt;/a&gt;关联，并在指定条件下执行该动作。</target>
        </trans-unit>
        <trans-unit id="c236b5259ac7c472ff07c31799d3d5ff24f4fa7e" translate="yes" xml:space="preserve">
          <source>As for the rest, the returned kind will depend on the value (false or true accordingly) of &lt;code&gt;isInterface&lt;/code&gt;:</source>
          <target state="translated">至于其余的，返回的种类将取决于 &lt;code&gt;isInterface&lt;/code&gt; 的值（相应地为false或true）：</target>
        </trans-unit>
        <trans-unit id="b894f63cb8c564155a5703563abd39ad622c4ab3" translate="yes" xml:space="preserve">
          <source>As guaranteed by the WebSocket Protocol, the message consists of not more than &lt;code&gt;125&lt;/code&gt; bytes. These bytes are located from the buffer's position to its limit.</source>
          <target state="translated">正如WebSocket协议所保证的，该消息由不超过 &lt;code&gt;125&lt;/code&gt; 个字节组成。这些字节从缓冲区的位置到其限制。</target>
        </trans-unit>
        <trans-unit id="d08bfa569d3c6b52674c19efff0534f7b7a13392" translate="yes" xml:space="preserve">
          <source>As html skips whitespace the position for text will be the position of the first valid character, eg in the string '\n\n\nblah' the text 'blah' will have a position of 3, the newlines are skipped.</source>
          <target state="translated">由于html会跳过whitespace,文本的位置将是第一个有效字符的位置,例如在字符串'\n\n\nblah'中,文本'blah'的位置为3,换行被跳过。</target>
        </trans-unit>
        <trans-unit id="c223f6bbf9967816d62342a4c9f6c1437115f662" translate="yes" xml:space="preserve">
          <source>As implied by the above, one valid implementation of this method is given by the expression below which computes a &lt;code&gt;double&lt;/code&gt; with the same exponent and significand as the argument but with a guaranteed zero sign bit indicating a positive value:</source>
          <target state="translated">如上所暗示，此方法的一个有效实现由下面的表达式给出，该表达式计算一个 &lt;code&gt;double&lt;/code&gt; 精度数，该双精度数与自变量具有相同的指数和有效位，但有保证的零符号位表示正值：</target>
        </trans-unit>
        <trans-unit id="70ed0065184e03471d3e9ef112b8a79b054572ba" translate="yes" xml:space="preserve">
          <source>As implied by the above, one valid implementation of this method is given by the expression below which computes a &lt;code&gt;float&lt;/code&gt; with the same exponent and significand as the argument but with a guaranteed zero sign bit indicating a positive value:</source>
          <target state="translated">如上所暗示，此方法的一个有效实现由下面的表达式给出，该表达式计算一个 &lt;code&gt;float&lt;/code&gt; ，该浮点数与自变量具有相同的指数和有效位，但有保证的零符号位表示正值：</target>
        </trans-unit>
        <trans-unit id="7620dc9eaffdd8d3c92f18aa3797c61e64859c95" translate="yes" xml:space="preserve">
          <source>As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop:</source>
          <target state="translated">与单参数版本一样,中断和虚假唤醒是可能的,这种方法应该始终在循环中使用。</target>
        </trans-unit>
        <trans-unit id="b6a12f2a545ba53922d480b551f75008baa4d398" translate="yes" xml:space="preserve">
          <source>As inconsistent with &lt;code&gt;hashCode()&lt;/code&gt; contract, use &lt;a href=&quot;#isMimeTypeEqual(java.lang.String)&quot;&gt;&lt;code&gt;isMimeTypeEqual(String)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">由于与 &lt;code&gt;hashCode()&lt;/code&gt; 合同不一致，请改用&lt;a href=&quot;#isMimeTypeEqual(java.lang.String)&quot;&gt; &lt;code&gt;isMimeTypeEqual(String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3de0ea91bebc6cff04f6c4a0b27942aa56579aef" translate="yes" xml:space="preserve">
          <source>As indicated above, there are many issues to consider when try to use and manipulate a date in an arbitrary calendar system. These are some of the key issues.</source>
          <target state="translated">如上所述,在任意的日历系统中使用和操作日期时,有许多问题需要考虑。这些是一些关键问题。</target>
        </trans-unit>
        <trans-unit id="5642f21bd06f9e0469d94ef1ca5f2237ede6c426" translate="yes" xml:space="preserve">
          <source>As interruption generally implies cancellation, and checks for interruption are often infrequent, an implementation can favor responding to an interrupt over normal method return. This is true even if it can be shown that the interrupt occurred after another action may have unblocked the thread. An implementation should document this behavior.</source>
          <target state="translated">由于中断一般意味着取消,而对中断的检查通常不频繁,因此,一个实现可以倾向于响应中断而不是正常的方法返回。即使可以证明中断发生在另一个操作可能已经解除线程阻塞之后,也是如此。实现应该记录这种行为。</target>
        </trans-unit>
        <trans-unit id="682a7908747b239c3cd1be0e6e2d9d7739d4d462" translate="yes" xml:space="preserve">
          <source>As interruption generally implies cancellation, and checks for interruption are often infrequent, an implementation can favor responding to an interrupt over normal method return. This is true even if it can be shown that the interrupt occurred after another action that may have unblocked the thread. An implementation should document this behavior.</source>
          <target state="translated">由于中断一般意味着取消,而对中断的检查往往不频繁,因此,一个实现可以倾向于响应中断而不是正常的方法返回。即使可以证明中断发生在可能已经解除线程阻塞的另一个操作之后,也是如此。实现应该记录这种行为。</target>
        </trans-unit>
        <trans-unit id="deca80918e6f723d8b3411fc4be463146d7fb9d5" translate="yes" xml:space="preserve">
          <source>As is normal with thread-local ordering of write events, every action already performed by the current thread is taken to happen before the volatile write to &lt;code&gt;V&lt;/code&gt;. (In some implementations, this means that the current thread performs a global release operation.)</source>
          <target state="translated">与写事件的线程本地顺序一样，当前线程已经执行的每个动作都在对 &lt;code&gt;V&lt;/code&gt; 进行易失性写之前发生。（在某些实现中，这意味着当前线程执行全局释放操作。）</target>
        </trans-unit>
        <trans-unit id="280fd0ecc7b23215e80f5701196ff52f63873f1c" translate="yes" xml:space="preserve">
          <source>As is the case with other ExecutorServices, there are three main task execution methods summarized in the following table. These are designed to be used primarily by clients not already engaged in fork/join computations in the current pool. The main forms of these methods accept instances of &lt;code&gt;ForkJoinTask&lt;/code&gt;, but overloaded forms also allow mixed execution of plain &lt;code&gt;
 Runnable&lt;/code&gt;- or &lt;code&gt;Callable&lt;/code&gt;- based activities as well. However, tasks that are already executing in a pool should normally instead use the within-computation forms listed in the table unless using async event-style tasks that are not usually joined, in which case there is little difference among choice of methods.</source>
          <target state="translated">与其他ExecutorService一样，下表总结了三种主要的任务执行方法。这些被设计为主要供尚未在当前池中进行派生/联接计算的客户端使用。这些方法的主要形式接受 &lt;code&gt;ForkJoinTask&lt;/code&gt; 的实例，但是重载形式还允许混合执行基于普通 &lt;code&gt; Runnable&lt;/code&gt; 或 &lt;code&gt;Callable&lt;/code&gt; 的活动。但是，已在池中执行的任务通常应改用表中列出的内部计算形式，除非使用通常不联接的异步事件样式任务，在这种情况下，方法选择之间几乎没有区别。</target>
        </trans-unit>
        <trans-unit id="c2b850de7e5f6fae367a3847e0ff710535eb37d2" translate="yes" xml:space="preserve">
          <source>As is the case with other ExecutorServices, there are three main task execution methods summarized in the following table. These are designed to be used primarily by clients not already engaged in fork/join computations in the current pool. The main forms of these methods accept instances of &lt;code&gt;ForkJoinTask&lt;/code&gt;, but overloaded forms also allow mixed execution of plain &lt;code&gt;Runnable&lt;/code&gt;- or &lt;code&gt;Callable&lt;/code&gt;- based activities as well. However, tasks that are already executing in a pool should normally instead use the within-computation forms listed in the table unless using async event-style tasks that are not usually joined, in which case there is little difference among choice of methods.</source>
          <target state="translated">与其他ExecutorService一样，下表总结了三种主要的任务执行方法。这些被设计为主要供尚未参与当前池中的fork / join计算的客户端使用。这些方法的主要形式接受 &lt;code&gt;ForkJoinTask&lt;/code&gt; 的实例，但是重载形式还允许混合执行基于普通 &lt;code&gt;Runnable&lt;/code&gt; 或 &lt;code&gt;Callable&lt;/code&gt; 的活动。但是，已经在池中执行的任务通常应改用表中列出的内部计算形式，除非使用通常不联接的异步事件样式任务，在这种情况下，方法选择之间几乎没有区别。</target>
        </trans-unit>
        <trans-unit id="35255f3b8879a5b2a391888c7bcc4428c54ff06c" translate="yes" xml:space="preserve">
          <source>As is usual with virtual methods, source-level calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt; compile to an &lt;code&gt;invokevirtual&lt;/code&gt; instruction. More unusually, the compiler must record the actual argument types, and may not perform method invocation conversions on the arguments. Instead, it must generate instructions that push them on the stack according to their own unconverted types. The method handle object itself is pushed on the stack before the arguments. The compiler then generates an &lt;code&gt;invokevirtual&lt;/code&gt; instruction that invokes the method handle with a symbolic type descriptor which describes the argument and return types.</source>
          <target state="translated">由于是用常用的虚拟方法，源级呼叫 &lt;code&gt;invokeExact&lt;/code&gt; 和 &lt;code&gt;invoke&lt;/code&gt; 编译到一个 &lt;code&gt;invokevirtual&lt;/code&gt; 指令。更不寻常的是，编译器必须记录实际的参数类型，并且不能对参数执行方法调用转换。相反，它必须生成指令，以根据其自身未转换的类型将其压入堆栈。方法句柄对象本身在参数之前被压入堆栈。然后，编译器生成一个 &lt;code&gt;invokevirtual&lt;/code&gt; 指令，该指令使用符号类型描述符来调用方法句柄，该符号类型描述符描述了参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="f4d082e3a7819c6c85102d27161b03668225f32f" translate="yes" xml:space="preserve">
          <source>As is usual with virtual methods, source-level calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt; compile to an &lt;code&gt;invokevirtual&lt;/code&gt; instruction. More unusually, the compiler must record the actual argument types, and may not perform method invocation conversions on the arguments. Instead, it must push them on the stack according to their own unconverted types. The method handle object itself is pushed on the stack before the arguments. The compiler then calls the method handle with a symbolic type descriptor which describes the argument and return types.</source>
          <target state="translated">由于是用常用的虚拟方法，源级呼叫 &lt;code&gt;invokeExact&lt;/code&gt; 和 &lt;code&gt;invoke&lt;/code&gt; 编译到一个 &lt;code&gt;invokevirtual&lt;/code&gt; 指令。更不寻常的是，编译器必须记录实际的参数类型，并且不能对参数执行方法调用转换。相反，它必须根据它们自己未转换的类型将它们压入堆栈。方法句柄对象本身在参数之前被压入堆栈。然后，编译器使用符号类型描述符来调用方法句柄，该符号类型描述符描述了参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="103795efb378ee6530e68440f6b7990618ac2966" translate="yes" xml:space="preserve">
          <source>As is usual with virtual methods, source-level calls to access mode methods compile to an &lt;code&gt;invokevirtual&lt;/code&gt; instruction. More unusually, the compiler must record the actual argument types, and may not perform method invocation conversions on the arguments. Instead, it must generate instructions to push them on the stack according to their own unconverted types. The VarHandle object itself will be pushed on the stack before the arguments. The compiler then generates an &lt;code&gt;invokevirtual&lt;/code&gt; instruction that invokes the access mode method with a symbolic type descriptor which describes the argument and return types.</source>
          <target state="translated">与虚拟方法一样，对访问模式方法的源级别调用会编译为 &lt;code&gt;invokevirtual&lt;/code&gt; 指令。更不寻常的是，编译器必须记录实际的参数类型，并且不能对参数执行方法调用转换。相反，它必须生成指令以根据其自身未转换的类型将其压入堆栈。 VarHandle对象本身将在参数之前被压入堆栈。然后，编译器生成一个 &lt;code&gt;invokevirtual&lt;/code&gt; 指令，该指令使用符号类型描述符（描述参数和返回类型）来调用访问模式方法。</target>
        </trans-unit>
        <trans-unit id="74a104890384d5eb34e0f6435f39fc9894819a17" translate="yes" xml:space="preserve">
          <source>As it is typically impractical to obtain the &lt;code&gt;TreeUI&lt;/code&gt; from the &lt;code&gt;JTree&lt;/code&gt; and cast to an instance of &lt;code&gt;MetalTreeUI&lt;/code&gt; you enable this property via the client property &lt;code&gt;JTree.lineStyle&lt;/code&gt;. For example, to switch to &lt;code&gt;Horizontal&lt;/code&gt; style you would do: &lt;code&gt;tree.putClientProperty(&quot;JTree.lineStyle&quot;, &quot;Horizontal&quot;);&lt;/code&gt;</source>
          <target state="translated">由于从 &lt;code&gt;JTree&lt;/code&gt; 获取 &lt;code&gt;TreeUI&lt;/code&gt; 并将其转换为 &lt;code&gt;MetalTreeUI&lt;/code&gt; 的实例通常是不切实际的，因此您可以通过客户端属性 &lt;code&gt;JTree.lineStyle&lt;/code&gt; 启用此属性。例如，要切换到 &lt;code&gt;Horizontal&lt;/code&gt; 样式，您需要执行以下操作： &lt;code&gt;tree.putClientProperty(&quot;JTree.lineStyle&quot;, &quot;Horizontal&quot;);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3836cc61017cde6198ec4d05f53ecb34d804d8cb" translate="yes" xml:space="preserve">
          <source>As just mentioned, a PlainDocument contains a root Element, which in turn contains an Element for each line of text. When text is inserted into a PlainDocument, it creates the Elements that are needed for an Element to exist for each newline. To illustrate, let's say you wanted to insert a newline at offset 2 in &lt;u&gt;Figure 2&lt;/u&gt;, above. To accomplish this objective, you could use the Document method &lt;code&gt;insertString()&lt;/code&gt;, using this syntax:</source>
          <target state="translated">如前所述，PlainDocument包含一个根Element，而根元素又包含每行文本的Element。将文本插入PlainDocument时，它将创建每个换行符存在的元素所需的元素。为了说明这一点，假设您想在上面的&lt;u&gt;图2&lt;/u&gt;中的偏移量2处插入一个换行符。要实现此目标，可以使用Document方法 &lt;code&gt;insertString()&lt;/code&gt; ，使用以下语法：</target>
        </trans-unit>
        <trans-unit id="bd413f3a79e5b5d005a16c39828bd3b915ac3102" translate="yes" xml:space="preserve">
          <source>As long as each bootstrap method can be correctly invoked by &lt;code&gt;MethodHandle.invoke&lt;/code&gt;, its detailed type is arbitrary. For example, the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors of &lt;code&gt;CallSite&lt;/code&gt; subclasses.)</source>
          <target state="translated">只要可以通过 &lt;code&gt;MethodHandle.invoke&lt;/code&gt; 正确调用每个引导方法，则其详细类型是任意的。例如，第一个参数可以是 &lt;code&gt;Object&lt;/code&gt; 而不是 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; ，返回类型也可以是 &lt;code&gt;Object&lt;/code&gt; 而不是 &lt;code&gt;CallSite&lt;/code&gt; 。 （请注意，堆叠参数的类型和数量将引导方法的合法种类限制为适当类型的静态方法和 &lt;code&gt;CallSite&lt;/code&gt; 子类的构造函数。）</target>
        </trans-unit>
        <trans-unit id="e0466654ef45ec448d8ee41f8acfd12ca31c99c4" translate="yes" xml:space="preserve">
          <source>As long as the constraints of the Java Memory Model are obeyed, implementations may delay the completion of a &lt;code&gt;syncAll&lt;/code&gt; operation while other threads (&lt;code&gt;T&lt;/code&gt; above) continue to use previous values of &lt;code&gt;S&lt;/code&gt;'s target. However, implementations are (as always) encouraged to avoid livelock, and to eventually require all threads to take account of the updated target.</source>
          <target state="translated">只要遵守Java内存模型的约束，实现可能会延迟 &lt;code&gt;syncAll&lt;/code&gt; 操作的完成，而其他线程（上面的 &lt;code&gt;T&lt;/code&gt; ）继续使用 &lt;code&gt;S&lt;/code&gt; 目标的先前值。但是，（一如既往）鼓励实现避免活锁，并最终要求所有线程考虑更新后的目标。</target>
        </trans-unit>
        <trans-unit id="930ba2ce92706ad2996098d82d35de349c3e2a75" translate="yes" xml:space="preserve">
          <source>As mentioned in the package description of &lt;code&gt;javax.print&lt;/code&gt;, a &lt;code&gt;null&lt;/code&gt; reference parameter to methods is incorrect unless explicitly documented on the method as having a meaningful interpretation. Usage to the contrary is incorrect coding and may result in a run time exception either immediately or at some later time. &lt;code&gt;IllegalArgumentException&lt;/code&gt; and &lt;code&gt;NullPointerException&lt;/code&gt; are examples of typical and acceptable run time exceptions for such cases.</source>
          <target state="translated">如 &lt;code&gt;javax.print&lt;/code&gt; 的程序包描述中所述，对方法的 &lt;code&gt;null&lt;/code&gt; 引用参数是不正确的，除非在方法上明确记录为具有有意义的解释。相反，用法是不正确的编码，并且可能立即或在以后的某个时间导致运行时异常。 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 和 &lt;code&gt;NullPointerException&lt;/code&gt; 是此类情况下典型且可接受的运行时异常的示例。</target>
        </trans-unit>
        <trans-unit id="ef47518c57367cc39530570a388c653f9133e814" translate="yes" xml:space="preserve">
          <source>As mentioned in the package description of javax.print, a null reference parameter to methods is incorrect unless explicitly documented on the method as having a meaningful interpretation. Usage to the contrary is incorrect coding and may result in a run time exception either immediately or at some later time. IllegalArgumentException and NullPointerException are examples of typical and acceptable run time exceptions for such cases.</source>
          <target state="translated">正如 javax.print 软件包描述中提到的那样,方法的空引用参数是不正确的,除非在方法上明确说明有意义的解释。与此相反的用法是不正确的编码,可能会立即或在稍后的时间导致运行时异常。IllegalArgumentException和NullPointerException是典型的和可接受的运行时异常的例子。</target>
        </trans-unit>
        <trans-unit id="658b60b45ae1f084a108c71ff05f1cfdd970d71f" translate="yes" xml:space="preserve">
          <source>As mentioned, &lt;code&gt;flavor1&lt;/code&gt; and &lt;code&gt;flavor2&lt;/code&gt; are considered identical. As such, asking a &lt;code&gt;Transferable&lt;/code&gt; for either &lt;code&gt;DataFlavor&lt;/code&gt; returns the same results.</source>
          <target state="translated">如前所述， &lt;code&gt;flavor1&lt;/code&gt; 和 &lt;code&gt;flavor2&lt;/code&gt; 被认为是相同的。因此，向任一 &lt;code&gt;DataFlavor&lt;/code&gt; 的 &lt;code&gt;Transferable&lt;/code&gt; 索取相同的结果。</target>
        </trans-unit>
        <trans-unit id="cf0c458e0a3f734bebd8ffc23b81ee99b33a763f" translate="yes" xml:space="preserve">
          <source>As mentioned, URL and URLConnection rely on protocol handlers which must be present, otherwise an Exception is thrown. This is the major difference with URIs which only identify resources, and therefore don't need to have access to the protocol handler. So, while it is possible to create an URI with any kind of protocol scheme (e.g. &lt;code&gt;myproto://myhost.mydomain/resource/&lt;/code&gt;), a similar URL will try to instantiate the handler for the specified protocol; if it doesn't exist an exception will be thrown.</source>
          <target state="translated">如前所述，URL和URLConnection依赖于必须存在的协议处理程序，否则将引发Exception。这是与仅标识资源的URI的主要区别，因此不需要访问协议处理程序。因此，尽管可以使用任何一种协议方案（例如， &lt;code&gt;myproto://myhost.mydomain/resource/&lt;/code&gt; ）创建URI ，但是类似的URL会尝试实例化指定协议的处理程序。如果不存在，将引发异常。</target>
        </trans-unit>
        <trans-unit id="c439206e7a2da26a2faa9d4b4b049cd5b4436121" translate="yes" xml:space="preserve">
          <source>As much as is reasonably practical, the hashCode method defined by class &lt;code&gt;Object&lt;/code&gt; does return distinct integers for distinct objects. (The hashCode may or may not be implemented as some function of an object's memory address at some point in time.)</source>
          <target state="translated">在合理可行的范围内，由 &lt;code&gt;Object&lt;/code&gt; 类定义的hashCode方法确实为不同的对象返回不同的整数。（在某个时间点，hashCode可能会或可能不会实现为对象的内存地址的某些功能。）</target>
        </trans-unit>
        <trans-unit id="e74b35b186283378f9b0106c790dba3e1f4abdfd" translate="yes" xml:space="preserve">
          <source>As much as is reasonably practical, the hashCode method defined by class &lt;code&gt;Object&lt;/code&gt; does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java&amp;trade; programming language.)</source>
          <target state="translated">在合理可行的范围内，由 &lt;code&gt;Object&lt;/code&gt; 类定义的hashCode方法确实为不同的对象返回不同的整数。 （通常通过将对象的内部地址转换为整数来实现，但是Java&amp;trade;编程语言不需要此实现技术。）</target>
        </trans-unit>
        <trans-unit id="896cf238ecb885632ecc94b86442bd80a47d1959" translate="yes" xml:space="preserve">
          <source>As noted above, the actual method type of the bootstrap method can vary. For example, the fourth argument could be &lt;code&gt;MethodHandle&lt;/code&gt;, if that is the type of the corresponding constant in the &lt;code&gt;CONSTANT_InvokeDynamic&lt;/code&gt; entry. In that case, the &lt;code&gt;MethodHandle.invoke&lt;/code&gt; call will pass the extra method handle constant as an &lt;code&gt;Object&lt;/code&gt;, but the type matching machinery of &lt;code&gt;MethodHandle.invoke&lt;/code&gt; will cast the reference back to &lt;code&gt;MethodHandle&lt;/code&gt; before invoking the bootstrap method. (If a string constant were passed instead, by badly generated code, that cast would then fail, resulting in a &lt;code&gt;BootstrapMethodError&lt;/code&gt;.)</source>
          <target state="translated">如上所述，引导方法的实际方法类型可以变化。例如，如果第四个参数是 &lt;code&gt;CONSTANT_InvokeDynamic&lt;/code&gt; 条目中相应常量的类型，则它可以是 &lt;code&gt;MethodHandle&lt;/code&gt; 。在这种情况下， &lt;code&gt;MethodHandle.invoke&lt;/code&gt; 调用将传递额外的方法句柄常量作为 &lt;code&gt;Object&lt;/code&gt; ，但是 &lt;code&gt;MethodHandle.invoke&lt;/code&gt; 的类型匹配机制将在调用bootstrap方法之前将引用 &lt;code&gt;MethodHandle&lt;/code&gt; 回MethodHandle。 （如果改为通过不良生成的代码传递字符串常量，则该转换将失败，从而导致 &lt;code&gt;BootstrapMethodError&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="86d58fb2698a77126c6a3f5dcde06c1be10241ab" translate="yes" xml:space="preserve">
          <source>As noted in &lt;a href=&quot;../lang/autocloseable#close()&quot;&gt;&lt;code&gt;AutoCloseable.close()&lt;/code&gt;&lt;/a&gt;, cases where the close may fail require careful attention. It is strongly advised to relinquish the underlying resources and to internally &lt;em&gt;mark&lt;/em&gt; the &lt;code&gt;Closeable&lt;/code&gt; as closed, prior to throwing the &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">如&lt;a href=&quot;../lang/autocloseable#close()&quot;&gt; &lt;code&gt;AutoCloseable.close()&lt;/code&gt; &lt;/a&gt;中所述，关闭可能失败的情况需要特别注意。强烈建议在抛出 &lt;code&gt;IOException&lt;/code&gt; 之前，放弃基础资源，并在内部将 &lt;code&gt;Closeable&lt;/code&gt; &lt;em&gt;标记&lt;/em&gt;为已关闭。</target>
        </trans-unit>
        <trans-unit id="32a33e4d3cced7ddc9346d0339be98de3caa49df" translate="yes" xml:space="preserve">
          <source>As noted in &lt;a href=&quot;../lang/autocloseable#close--&quot;&gt;&lt;code&gt;AutoCloseable.close()&lt;/code&gt;&lt;/a&gt;, cases where the close may fail require careful attention. It is strongly advised to relinquish the underlying resources and to internally &lt;em&gt;mark&lt;/em&gt; the &lt;code&gt;Closeable&lt;/code&gt; as closed, prior to throwing the &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">如&lt;a href=&quot;../lang/autocloseable#close--&quot;&gt; &lt;code&gt;AutoCloseable.close()&lt;/code&gt; &lt;/a&gt;中所述，关闭可能失败的情况需要特别注意。强烈建议在抛出 &lt;code&gt;IOException&lt;/code&gt; 之前，放弃基础资源，并在内部将 &lt;code&gt;Closeable&lt;/code&gt; &lt;em&gt;标记&lt;/em&gt;为已关闭。</target>
        </trans-unit>
        <trans-unit id="4566f9c885e3ad9e992d254b2442aca7ca24b212" translate="yes" xml:space="preserve">
          <source>As noted in &lt;code&gt;UIManager&lt;/code&gt; each &lt;code&gt;LookAndFeel&lt;/code&gt; has the opportunity to provide a set of defaults that are layered in with developer and system defaults. Some of Swing's components require the look and feel to provide a specific set of defaults. These are documented in the classes that require the specific default.</source>
          <target state="translated">如 &lt;code&gt;UIManager&lt;/code&gt; 中所述,每个 &lt;code&gt;LookAndFeel&lt;/code&gt; 都有机会提供一组默认值，这些默认值与开发人员默认值和系统默认值紧密结合在一起。Swing的某些组件需要外观来提供一组特定的默认值。这些记录在需要特定默认值的类中。</target>
        </trans-unit>
        <trans-unit id="7247086c7fab6f3282000b3391fad996e6a81579" translate="yes" xml:space="preserve">
          <source>As of 1.3 this method is just a cover for &lt;code&gt;java.awt.EventQueue.invokeAndWait()&lt;/code&gt;.</source>
          <target state="translated">从1.3版本开始，此方法只是 &lt;code&gt;java.awt.EventQueue.invokeAndWait()&lt;/code&gt; 的封面。</target>
        </trans-unit>
        <trans-unit id="14ee2019d0c4c5a944a512798b441f4eaab8677d" translate="yes" xml:space="preserve">
          <source>As of 1.3 this method is just a cover for &lt;code&gt;java.awt.EventQueue.invokeLater()&lt;/code&gt;.</source>
          <target state="translated">从1.3版本开始，此方法只是 &lt;code&gt;java.awt.EventQueue.invokeLater()&lt;/code&gt; 的封面。</target>
        </trans-unit>
        <trans-unit id="612b8dd6969171d982d326b92ecc73e6c5219294" translate="yes" xml:space="preserve">
          <source>As of 1.3 this method is just a cover for &lt;code&gt;java.awt.EventQueue.isDispatchThread()&lt;/code&gt;.</source>
          <target state="translated">从1.3版本开始，此方法只是 &lt;code&gt;java.awt.EventQueue.isDispatchThread()&lt;/code&gt; 的封面。</target>
        </trans-unit>
        <trans-unit id="8fd2681408ced2b6910a4b6a9a0001c61709b5dd" translate="yes" xml:space="preserve">
          <source>As of 1.3, value comes from UIManager UIManager property FormView.resetButtonText</source>
          <target state="translated">在1.3版本中,该值来自UIManager UIManager属性FormView.resetButtonText。</target>
        </trans-unit>
        <trans-unit id="95dded3f869f45308da343a4de1eb830ea2391ed" translate="yes" xml:space="preserve">
          <source>As of 1.3, value now comes from UIManager property FormView.submitButtonText</source>
          <target state="translated">在1.3中,现在的值来自UIManager属性FormView.submitButtonText。</target>
        </trans-unit>
        <trans-unit id="0cf651a3c482c18eb34caa55ea8d1cfd6481649d" translate="yes" xml:space="preserve">
          <source>As of 1.3.</source>
          <target state="translated">截至1.3日。</target>
        </trans-unit>
        <trans-unit id="b21093cf4f2a87ae11817ac47d99d87e559e7bf8" translate="yes" xml:space="preserve">
          <source>As of 1.4 a BlockAction</source>
          <target state="translated">从1.4开始,一个BlockAction</target>
        </trans-unit>
        <trans-unit id="d4f5b6b2f6806457767b882b8e9b302d549c5ef3" translate="yes" xml:space="preserve">
          <source>As of 1.4 this field is final.</source>
          <target state="translated">从1.4日起,这个领域是最终的。</target>
        </trans-unit>
        <trans-unit id="6f6943ece34c654e379de3a2d956d7e1c8bd3ee4" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;Component.setFocusTraversalKeys(int, Set)&lt;/code&gt; and &lt;code&gt;Container.setFocusCycleRoot(boolean)&lt;/code&gt;.</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;Component.setFocusTraversalKeys(int, Set)&lt;/code&gt; 和 &lt;code&gt;Container.setFocusCycleRoot(boolean)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="6a0bd2f061f6181f8089c4f9b308a1a4c55a0f76" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;FocusTraversalPolicy.getDefaultComponent(Container).requestFocus()&lt;/code&gt;</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;FocusTraversalPolicy.getDefaultComponent(Container).requestFocus()&lt;/code&gt; 取代</target>
        </trans-unit>
        <trans-unit id="69030aae104775e6725721ca29b89a51c373039a" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;FocusTraversalPolicy&lt;/code&gt;</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; 取代</target>
        </trans-unit>
        <trans-unit id="fc714aff4cc9fa3e05658c6ce1e5c7f442977cc6" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;FocusTraversalPolicy&lt;/code&gt;.</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="1f35a386c5a558df6ce157d5a621ed2c29d873c2" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;KeyboardFocusManager.getDefaultFocusTraversalPolicy()&lt;/code&gt;</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;KeyboardFocusManager.getDefaultFocusTraversalPolicy()&lt;/code&gt; 取代</target>
        </trans-unit>
        <trans-unit id="8f7b9d687bb739fbb439d6adf05bcea717a8e920" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;KeyboardFocusManager.getFocusOwner()&lt;/code&gt;.</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;KeyboardFocusManager.getFocusOwner()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="4120adbf871102091499306963573310bfdeaf5b" translate="yes" xml:space="preserve">
          <source>As of 1.4, replaced by &lt;code&gt;isFocusable()&lt;/code&gt;.</source>
          <target state="translated">从1.4开始，由 &lt;code&gt;isFocusable()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="4078cfe3937faabfba671d2a570abce668bef825" translate="yes" xml:space="preserve">
          <source>As of 1.4, this class is now obsolete, doesn't do anything, and is only included for backwards API compatibility.</source>
          <target state="translated">在1.4版本中,这个类已经过时了,不做任何事情,只是为了向后兼容API。</target>
        </trans-unit>
        <trans-unit id="2a3a2b8654a18a3407672451588d551b97d0f64c" translate="yes" xml:space="preserve">
          <source>As of 1.4, this class is now obsolete, doesn't do anything, and is only included for backwards API compatibility. Do not call or override.</source>
          <target state="translated">从1.4开始,这个类已经过时了,没有任何作用,只是为了向后兼容API而包含。不要调用或覆盖。</target>
        </trans-unit>
        <trans-unit id="c548dda8d18587686eae830cf20254e14261a65f" translate="yes" xml:space="preserve">
          <source>As of 1.5, &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; is the preferred way to create a &lt;code&gt;Process&lt;/code&gt;.</source>
          <target state="translated">从1.5开始，&lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;是创建 &lt;code&gt;Process&lt;/code&gt; 的首选方法。</target>
        </trans-unit>
        <trans-unit id="4f841b77c906be2ef00ecd3023912695621031d6" translate="yes" xml:space="preserve">
          <source>As of 1.5, &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; is the preferred way to create a &lt;code&gt;Process&lt;/code&gt;.</source>
          <target state="translated">从1.5开始，&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;是创建 &lt;code&gt;Process&lt;/code&gt; 的首选方法。</target>
        </trans-unit>
        <trans-unit id="00c8381a41f0a615d501dbd28d8ab8c081b28992" translate="yes" xml:space="preserve">
          <source>As of 1.6 &lt;code&gt;RepaintManager&lt;/code&gt; handles repaint requests for Swing's top level components (&lt;code&gt;JApplet&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JFrame&lt;/code&gt; and &lt;code&gt;JDialog&lt;/code&gt;). Any calls to &lt;code&gt;repaint&lt;/code&gt; on one of these will call into the appropriate &lt;code&gt;addDirtyRegion&lt;/code&gt; method.</source>
          <target state="translated">从1.6版本开始， &lt;code&gt;RepaintManager&lt;/code&gt; 处理Swing的顶级组件（ &lt;code&gt;JApplet&lt;/code&gt; ， &lt;code&gt;JWindow&lt;/code&gt; ， &lt;code&gt;JFrame&lt;/code&gt; 和 &lt;code&gt;JDialog&lt;/code&gt; ）的重新绘制请求。对其中之一进行 &lt;code&gt;repaint&lt;/code&gt; 任何调用都将调用适当的 &lt;code&gt;addDirtyRegion&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b70359d515a6b5eb5eda8309bf3124e5aff82b14" translate="yes" xml:space="preserve">
          <source>As of J2SE 1.4, &lt;code&gt;KeyEvent&lt;/code&gt;s are redirected to the focus owner. Please see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for further information.</source>
          <target state="translated">从J2SE 1.4开始， &lt;code&gt;KeyEvent&lt;/code&gt; 被重定向到焦点所有者。请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;焦点规格&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="759dc44b7302b228ac356ab2bb2e40cf61469520" translate="yes" xml:space="preserve">
          <source>As of J2SE 1.4, &lt;code&gt;KeyEvent&lt;/code&gt;s are redirected to the focus owner. Please see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for further information.</source>
          <target state="translated">从J2SE 1.4开始， &lt;code&gt;KeyEvent&lt;/code&gt; 被重定向到焦点所有者。请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;焦点规格&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="4275c974aeb2f997c66cdc7d8c8ff0ffbec458a7" translate="yes" xml:space="preserve">
          <source>As of J2SE 1.4, replaced by &lt;a href=&quot;component#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt;&lt;code&gt;Component.applyComponentOrientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从J2SE 1.4开始，由&lt;a href=&quot;component#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt; &lt;code&gt;Component.applyComponentOrientation&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="0eda1248633dc5aece6898581820dfebc3c783ec" translate="yes" xml:space="preserve">
          <source>As of J2SE 1.4, use &lt;a href=&quot;#getOrientation(java.util.Locale)&quot;&gt;&lt;code&gt;getOrientation(java.util.Locale)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从J2SE 1.4开始，使用&lt;a href=&quot;#getOrientation(java.util.Locale)&quot;&gt; &lt;code&gt;getOrientation(java.util.Locale)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="205ae4b1491f3a618d959d167e04a4d3b103f459" translate="yes" xml:space="preserve">
          <source>As of JDK 1.7, replaced by &lt;a href=&quot;#getSelectedValuesList()&quot;&gt;&lt;code&gt;getSelectedValuesList()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JDK 1.7开始，由&lt;a href=&quot;#getSelectedValuesList()&quot;&gt; &lt;code&gt;getSelectedValuesList()&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="8e842eed2965fc75d946a8906f628936c18cde45" translate="yes" xml:space="preserve">
          <source>As of JDK 5, replaced by &lt;code&gt;Component.setBounds(int, int, int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 5开始，由 &lt;code&gt;Component.setBounds(int, int, int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="acd4e566da2cb13190000c450e8dba393e17b625" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1 replaced by &lt;code&gt;dispatchEvent(AWTEvent)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;dispatchEvent(AWTEvent)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="933caf0d6e1f93a0a4a41c7920755cf96d7fcca5" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1 replaced by dispatchEvent(AWTEvent).</source>
          <target state="translated">从JDK 1.1版本开始,被dispatchEvent(AWTEvent)取代。</target>
        </trans-unit>
        <trans-unit id="d023ffdceb027daf6e1645589f6f01345f660293" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1 replaced by processEvent(AWTEvent).</source>
          <target state="translated">从JDK 1.1版本开始,被processEvent(AWTEvent)取代。</target>
        </trans-unit>
        <trans-unit id="f5506c931d4308a73c43a4b0aed9aac92da7fffa" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, Not for public use in the future.</source>
          <target state="translated">从JDK 1.1版本开始,今后不公开使用。</target>
        </trans-unit>
        <trans-unit id="383310e7457b9a270c48f692aa77c3d80368eea8" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, Not for public use in the future. This method is expected to be retained only as a package private method.</source>
          <target state="translated">从JDK 1.1版本开始,今后不对外公开使用。本方法预计将只作为包的私有方法保留。</target>
        </trans-unit>
        <trans-unit id="79b83cc8bacd199f934d7e3b4d0ae7eedf242a68" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;a href=&quot;#dispatchEvent(java.awt.AWTEvent)&quot;&gt;&lt;code&gt;dispatchEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由&lt;a href=&quot;#dispatchEvent(java.awt.AWTEvent)&quot;&gt; &lt;code&gt;dispatchEvent&lt;/code&gt; &lt;/a&gt;取代。</target>
        </trans-unit>
        <trans-unit id="af60a9781d9ce5eb2a82b45c437f9542d56e3f37" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;-(Calendar.get(Calendar.ZONE_OFFSET) +
 Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;-(Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000)&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="862bd45c2ef1e44ce848071b4788359d8277f4ab" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.DAY_OF_MONTH)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.DAY_OF_MONTH)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="f77530d3f27a7d829604a7dfcf2443e8640f1315" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.DAY_OF_WEEK)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.DAY_OF_WEEK)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="2fa2c35b30828245dba843b62b84c2249bc60ffe" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.HOUR_OF_DAY)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.HOUR_OF_DAY)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="76901278b1bea81bc056c34aa73a7dc92c277542" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.MINUTE)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.MINUTE)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="64c2aca2cded1a2d366ab88c3c53fe3e22dbbdcf" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.MONTH)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.MONTH)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="29f97b319aad1e2d079bd36791f5a4fc7391730c" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.SECOND)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.SECOND)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="ba32aceba1ab42323593d862f67eee864216d3c7" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.get(Calendar.YEAR) - 1900&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.get(Calendar.YEAR) - 1900&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="25a012c9eef0640445a12ec17019b2083cf12462" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.DAY_OF_MONTH, int date)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.set(Calendar.DAY_OF_MONTH, int date)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="f148f66bfe6bff3da40dd58e6742c4477c689036" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.HOUR_OF_DAY, int hours)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;Calendar.set(Calendar.HOUR_OF_DAY, int hours)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="e92f33fb489c41272e8a35d8da75143d876b94c6" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.MINUTE, int minutes)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.set(Calendar.MINUTE, int minutes)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="fb5700613dcca99459a38ef951b5fc66b2495f8c" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.MONTH, int month)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.set(Calendar.MONTH, int month)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="fec704ae4485de8f51ab6dc8a1acdc3dc8843b2c" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.SECOND, int seconds)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;Calendar.set(Calendar.SECOND, int seconds)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="3d0bd61a1eebf74ddf12d1100ec312b654fadfa5" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(Calendar.YEAR, year + 1900)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;Calendar.set(Calendar.YEAR, year + 1900)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="2555cbf7a2b1fdc30ed0a5234b9a4f5f8e9a188d" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900, month, date)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.set(year + 1900, month, date)&lt;/code&gt; 或 &lt;code&gt;GregorianCalendar(year + 1900, month, date)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="8b90c24efb44a8f8df38f0931579aeb41b7eaa4e" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min)&lt;/code&gt; 或 &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="ab19d298f07791ed92fb53f3475d34ce269d6a14" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min, sec)&lt;/code&gt;, using a UTC &lt;code&gt;TimeZone&lt;/code&gt;, followed by &lt;code&gt;Calendar.getTime().getTime()&lt;/code&gt;.</source>
          <target state="translated">由于JDK 1.1版，取代 &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; 或 &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; ，使用UTC &lt;code&gt;TimeZone&lt;/code&gt; ，随后通过 &lt;code&gt;Calendar.getTime().getTime()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b39359e34b54f9d5132599171d24e3534ff1a5eb" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; or &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min, sec)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Calendar.set(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; 或 &lt;code&gt;GregorianCalendar(year + 1900, month, date, hrs, min, sec)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="27c94ee3a6e159ccffd23a93408b4d84b718e276" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Component.getCursor()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;Component.getCursor()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="b413ea2cf5a9b9857fb3d0731b9cc31851d148aa" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;Component.setCursor(Cursor)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;Component.setCursor(Cursor)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="7818380166a2993dea6908fe34d6c7b14a2cfd12" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt;, using a GMT &lt;code&gt;TimeZone&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1 &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt; ，使用GMT &lt;code&gt;TimeZone&lt;/code&gt; 替换为DateFormat.format（Date date）。</target>
        </trans-unit>
        <trans-unit id="e80190dc24da84550676cd77af807c7907322298" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;DateFormat.format(Date date)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="41d46e3cf866a5960cb1d14dab6cc7525ca389d3" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;DateFormat.parse(String s)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;DateFormat.parse(String s)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="c74e6e0e10e4d69bff73fb7a727da09c0c8907dd" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;append(String)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;append(String)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="657891bd09f91e429f8533f511660f33600bce9a" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;contains(int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;contains(int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="b97640725738db5f9bd11b511d28d622c8a2c391" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;dispatchEvent(AWTEvent e)&lt;/code&gt;</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;dispatchEvent(AWTEvent e)&lt;/code&gt; 取代</target>
        </trans-unit>
        <trans-unit id="fe070ff5657a4e5c75e2d3b0ac91cb8b180eea97" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;dispatchEvent(AWTEvent e)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;dispatchEvent(AWTEvent e)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="3b24763a2b2a2110003710ce430ffc3a3b68b3a8" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;doLayout()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;doLayout()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="927e992a14753040b5c901dd380578abac0bb8a4" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getBlockIncrement()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getBlockIncrement()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="a48e4e4732eb319195c2db693217512d73ab9055" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getBounds()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getBounds()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="b21c9550deb44f8b3b09d90a88a81625d5d8976c" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getClipBounds()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getClipBounds()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="ba045eb54b12bb9963e2c66fabce79acb03077a6" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getComponentAt(int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getComponentAt(int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="2bfd4b14d9d5d2fc4dd3cdeb015d263da6e02d0d" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getInsets()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getInsets()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="0bca5dd0571901ee1a3343f2cbb0ddbad44789f2" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getItemCount()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getItemCount()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="2eaee3fba9e8543d95c339d91d6b711ddf6eb16f" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getLocation()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getLocation()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="d11a13f7bb070af99b802ae1b324cced5a67e328" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getMenuCount()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getMenuCount()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="1f7f931c662c8de397e070c94b5f073d72f6f6bc" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getMinimumSize()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getMinimumSize()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="fbc616ed74380ee00fdde02e90274c20861d2f27" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getMinimumSize(int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getMinimumSize(int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="fa6c9349fb90ccfeae499d2ff856aa26d1aeaee0" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getMinimumSize(int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getMinimumSize(int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="21751df976183702afbfd140f2295ccb88b4fcb8" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getPreferredSize()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getPreferredSize()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="ebf651b2bb74515fafd10b012fd2a39fce205b61" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getPreferredSize(int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getPreferredSize(int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="90907f6546dc5338883128c0af942a00500f8bb1" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getPreferredSize(int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getPreferredSize(int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="7b4df14bb49fd244d657e17d89b6c3f076b892f0" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getSelectedCheckbox()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getSelectedCheckbox()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="b2520dc893e84fa8387a81ff0f495e6b15dd4a6c" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getSize()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getSize()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="fb43948465bf5eb1f1979cd38822c8ba4ff15d71" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getUnitIncrement()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getUnitIncrement()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="12cdad42e834c649a36a414828bfe4f95425f57e" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;getVisibleAmount()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;getVisibleAmount()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="5d16764d83319a4f9587185e3916038fa9d88e8a" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;insert(String, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;insert(String, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="673c1de9b17342bad3424a81feecbdfdeb7d4ad6" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;isIndexSelected(int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;isIndexSelected(int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="3ad11af3f5ff474472b1039de69914f69e17f144" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;isMultipleMode()&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;isMultipleMode()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="4345c9146d6a9ac127c8c2bf0107d79c56ca2677" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;java.awt.Component.setEnabled(boolean)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;java.awt.Component.setEnabled(boolean)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="d8ea04455e4cdd5949ec1c9cfdc8c18026d2d2ec" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;removeAll()&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;removeAll()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="9034774553d5e34369fcf8de7ef8556ed4d2b736" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;replaceRange(String, int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;replaceRange(String, int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="bccee485a05fee207bf917d918e5490556581ff4" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setBlockIncrement()&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;setBlockIncrement()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="024e3f53a8d2c13d2ff73864add76e7ed32e61a5" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setBounds(int, int, int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setBounds(int, int, int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="403f81d2f0a18b069b5416204d0ef57c18ae1ebe" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setEchoChar(char)&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1开始，由 &lt;code&gt;setEchoChar(char)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="525c54ff72b2ae6925c37d4378eb28a609acc5f3" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setEnabled(boolean)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setEnabled(boolean)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="d4f4264f084d028c2121e4d38235e0ca59f3145a" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setLocation(int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setLocation(int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="32f65d8a4aceaf20e3d983ec9ecf18122b892612" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setMultipleMode(boolean)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setMultipleMode(boolean)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="7e9a1d5dcf94d1a7bc8b63b3963b22cdf393fa97" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setSelectedCheckbox(Checkbox)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setSelectedCheckbox(Checkbox)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="db0f410a21c048b898cb95e2ff573087366ecc04" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setSize(Dimension)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setSize(Dimension)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="c1147a00de342aa069ad5ce26b6d743e46861796" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setSize(int, int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setSize(int, int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="2fedf9e12e1bf7ccffae809ee90869da88e3a281" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setUnitIncrement(int)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setUnitIncrement(int)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="ba5f045eb3f75c2edcbe2a4aeff0770a4ae1eb35" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by &lt;code&gt;setVisible(boolean)&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.1版开始，由 &lt;code&gt;setVisible(boolean)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="4ff86ca4140514fddbb088afabc0c9c17c4ef4b7" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by contains(int, int).</source>
          <target state="translated">从JDK 1.1版本开始,由contains(int,int)代替。</target>
        </trans-unit>
        <trans-unit id="7590d75c26466d5985cd6ff99541f0009b265fbd" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by dispatchEvent(AWTEvent).</source>
          <target state="translated">从JDK 1.1版本开始,由dispatchEvent(AWTEvent)代替。</target>
        </trans-unit>
        <trans-unit id="7fb3455469a33d6333f8421e7e86f1a8638acd70" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by getComponentAt(int, int).</source>
          <target state="translated">从JDK版本1.1开始,被getComponentAt(int,int)取代。</target>
        </trans-unit>
        <trans-unit id="901f30185afca84105291a66fd4e84eb5675e977" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by getComponentCount().</source>
          <target state="translated">从JDK 1.1版本开始,由getComponentCount()代替。</target>
        </trans-unit>
        <trans-unit id="6754f1789b8bab7a83a073ddb6c104c444850f81" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by processFocusEvent(FocusEvent).</source>
          <target state="translated">从JDK 1.1版本开始,被processFocusEvent(FocusEvent)取代。</target>
        </trans-unit>
        <trans-unit id="807f7111e175b46b30e39cceb63deda16fce0f9f" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by processKeyEvent(KeyEvent).</source>
          <target state="translated">从JDK 1.1版本开始,被processKeyEvent(KeyEvent)取代。</target>
        </trans-unit>
        <trans-unit id="e12fded5aa0b6f176810c710258960a88a34f217" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).</source>
          <target state="translated">从JDK 1.1版本开始,被processMouseEvent(MouseEvent)取代。</target>
        </trans-unit>
        <trans-unit id="7e6c33261c4a17d6999ccfb56c6afa56f389c738" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by processMouseMotionEvent(MouseEvent).</source>
          <target state="translated">从JDK 1.1版本开始,被processMouseMotionEvent(MouseEvent)取代。</target>
        </trans-unit>
        <trans-unit id="e036f729a9b3d31c464e6723e4ff14b8d9652079" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, replaced by transferFocus().</source>
          <target state="translated">从JDK 1.1版本开始,由transferFocus()代替。</target>
        </trans-unit>
        <trans-unit id="8a9ad99eef6bb9748574f02170c39a89ef7bd855" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, should register this component as ActionListener on component which fires action events.</source>
          <target state="translated">从JDK 1.1版本开始,应该把这个组件注册为ActionListener,在组件上发射动作事件。</target>
        </trans-unit>
        <trans-unit id="11a5b9ef252127ad7d297a29fdebeb61ee5c7177" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1, the preferred way to tokenize an input stream is to convert it into a character stream, for example:</source>
          <target state="translated">从JDK 1.1版本开始,对输入流进行标记化的首选方式是将其转换为字符流,例如。</target>
        </trans-unit>
        <trans-unit id="fc97ce694acf92463aadec8ee94b80b73ba5209d" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.1.1, replaced by &lt;code&gt;getMaxDescent()&lt;/code&gt;.</source>
          <target state="translated">从JDK版本1.1.1开始，由 &lt;code&gt;getMaxDescent()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="37e75136f4be5cfe9e299e469461138dd57b14bf" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.2, replaced by the &lt;code&gt;Font&lt;/code&gt; method &lt;code&gt;getLineMetrics&lt;/code&gt;.</source>
          <target state="translated">从JDK 1.2版开始，由 &lt;code&gt;Font&lt;/code&gt; 方法 &lt;code&gt;getLineMetrics&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="dbccb3d5c45a75a068a9ad2412360ac6f9829588" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.5, replaced by &lt;a href=&quot;#setVisible(boolean)&quot;&gt;&lt;code&gt;setVisible(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从JDK 1.5版开始，由&lt;a href=&quot;#setVisible(boolean)&quot;&gt; &lt;code&gt;setVisible(boolean)&lt;/code&gt; &lt;/a&gt;取代。</target>
        </trans-unit>
        <trans-unit id="5f13b7e8edde06ba8737796722eb7d20c6cf6f54" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.7</source>
          <target state="translated">截至JDK 1.7版本</target>
        </trans-unit>
        <trans-unit id="17744b50c6835b55040bfc8e1e6945364190877f" translate="yes" xml:space="preserve">
          <source>As of JDK version 1.7, the &lt;a href=&quot;#getPredefinedCursor(int)&quot;&gt;&lt;code&gt;getPredefinedCursor(int)&lt;/code&gt;&lt;/a&gt; method should be used instead.</source>
          <target state="translated">从JDK版本1.7开始，应&lt;a href=&quot;#getPredefinedCursor(int)&quot;&gt; &lt;code&gt;getPredefinedCursor(int)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="82d2ded73e384823b93b5c0213b63e1c31f05843" translate="yes" xml:space="preserve">
          <source>As of JDK version 9.</source>
          <target state="translated">从JDK第9版开始。</target>
        </trans-unit>
        <trans-unit id="4f108a70b45d438d2a8820ad3d0f05adb841b518" translate="yes" xml:space="preserve">
          <source>As of JDK version 9. Obsolete class.</source>
          <target state="translated">从JDK第9版开始。过时的类。</target>
        </trans-unit>
        <trans-unit id="0e79b12ef3cc60e10f55387f928279dc1bd198cf" translate="yes" xml:space="preserve">
          <source>As of JDK version Swing1.1 replaced by &lt;code&gt;JScrollPane.getViewportBorderBounds()&lt;/code&gt;.</source>
          <target state="translated">从JDK版本开始，Swing1.1被 &lt;code&gt;JScrollPane.getViewportBorderBounds()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="09df6f63e1723dcdd01e59e900fdea2698d4efb9" translate="yes" xml:space="preserve">
          <source>As of JMX 1.2, replaced by &lt;a href=&quot;#addObservedObject(javax.management.ObjectName)&quot;&gt;&lt;code&gt;addObservedObject(javax.management.ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JMX 1.2开始，由&lt;a href=&quot;#addObservedObject(javax.management.ObjectName)&quot;&gt; &lt;code&gt;addObservedObject(javax.management.ObjectName)&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="9a6d2717f2ae36e1f0190b1f0ad86c532fe5fc6e" translate="yes" xml:space="preserve">
          <source>As of JMX 1.2, replaced by &lt;a href=&quot;#getDerivedGauge(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JMX 1.2开始，由&lt;a href=&quot;#getDerivedGauge(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getDerivedGauge(ObjectName)&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="14b4288a4bd81842562762a5b8926301081ae225" translate="yes" xml:space="preserve">
          <source>As of JMX 1.2, replaced by &lt;a href=&quot;#getDerivedGaugeTimeStamp(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JMX 1.2开始，由&lt;a href=&quot;#getDerivedGaugeTimeStamp(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getDerivedGaugeTimeStamp(ObjectName)&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="38cdf5a93feda1b157951c8636c2c27196af26ba" translate="yes" xml:space="preserve">
          <source>As of JMX 1.2, replaced by &lt;a href=&quot;#getObservedObjects()&quot;&gt;&lt;code&gt;getObservedObjects()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JMX 1.2开始，由&lt;a href=&quot;#getObservedObjects()&quot;&gt; &lt;code&gt;getObservedObjects()&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="5f8713edd2fcb8c7b603a4a2d2b8598a9ebbf586" translate="yes" xml:space="preserve">
          <source>As of JMX 1.2, replaced by &lt;a href=&quot;#getThreshold(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getThreshold(ObjectName)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JMX 1.2开始，由&lt;a href=&quot;#getThreshold(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getThreshold(ObjectName)&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="74ede142d761c569f6cdfe31ce4b923db880135e" translate="yes" xml:space="preserve">
          <source>As of JMX 1.2, replaced by &lt;a href=&quot;#setInitThreshold(java.lang.Number)&quot;&gt;&lt;code&gt;setInitThreshold(java.lang.Number)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">从JMX 1.2开始，由&lt;a href=&quot;#setInitThreshold(java.lang.Number)&quot;&gt; &lt;code&gt;setInitThreshold(java.lang.Number)&lt;/code&gt; &lt;/a&gt;取代</target>
        </trans-unit>
        <trans-unit id="0d6a2c0383ddcb7e62fc33647247dd7f714d05a6" translate="yes" xml:space="preserve">
          <source>As of Java 2 SDK v1.2, the default implementation of each of the other &lt;code&gt;check&lt;/code&gt; methods in &lt;code&gt;SecurityManager&lt;/code&gt; is to call the &lt;code&gt;SecurityManager checkPermission&lt;/code&gt; method to determine if the calling thread has permission to perform the requested operation.</source>
          <target state="translated">从Java 2 SDK v1.2开始， &lt;code&gt;SecurityManager&lt;/code&gt; 中每个其他 &lt;code&gt;check&lt;/code&gt; 方法的默认实现是调用 &lt;code&gt;SecurityManager checkPermission&lt;/code&gt; 方法，以确定调用线程是否有权执行所请求的操作。</target>
        </trans-unit>
        <trans-unit id="aaf8bab14e9352eee7e1a1c6a7e3e34a670bddbc" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform 1.4, this previously undocumented class is now obsolete.</source>
          <target state="translated">从Java 2平台1.4开始,这个以前没有记录的类现在已经过时了。</target>
        </trans-unit>
        <trans-unit id="ddddc033b7a47cfce94f414d2d69291f3335ad15" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform 1.4, this previously undocumented class is now obsolete. KeyBindings are now managed by the popup menu.</source>
          <target state="translated">从Java 2平台1.4开始,这个以前没有记录的类现在已经过时了。KeyBindings现在由弹出式菜单管理。</target>
        </trans-unit>
        <trans-unit id="9361fd538103c7bda01829e0d20f4d0a0d0eb8c4" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v 1.4, this class is now obsolete and is only included for backwards API compatibility.</source>
          <target state="translated">在Java 2平台的1.4版本中,这个类已经过时了,只是为了向后兼容API而包含。</target>
        </trans-unit>
        <trans-unit id="de3225be5bcdd924660d18dde9f99c4c4647b288" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v 1.4, this class is now obsolete and is only included for backwards API compatibility. Do not instantiate or subclass.</source>
          <target state="translated">从Java 2平台的1.4版开始,这个类已经过时了,只是为了向后的API兼容性而包含。不要实例化或子类。</target>
        </trans-unit>
        <trans-unit id="3f2400239d38085729b3b575d33ec752d5e6e3a0" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v 1.4, this class is now obsolete, doesn't do anything, and is only included for backwards API compatibility.</source>
          <target state="translated">在Java 2平台v 1.4中,这个类现在已经过时了,它不做任何事情,只是为了向后兼容API而包含。</target>
        </trans-unit>
        <trans-unit id="ffd09d50f061770ff5622decf87b9f56216b34f1" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v 1.4, this class is now obsolete, doesn't do anything, and is only included for backwards API compatibility. Do not call or override.</source>
          <target state="translated">从Java 2平台v 1.4开始,这个类已经过时了,不做任何事情,而且只是为了向后的API兼容性而包含。不要调用或覆盖。</target>
        </trans-unit>
        <trans-unit id="46bcc2c3854382aa9226a4f7f987b9ad05a7bb5c" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.2, replaced by &lt;code&gt;getPassword&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.2开始，由 &lt;code&gt;getPassword&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="a199d02e08db7672b80c1f6718d12e790f3289a6" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3</source>
          <target state="translated">截至Java 2平台v1.3</target>
        </trans-unit>
        <trans-unit id="be583631d8560d6e5df31a06fb4e9b13793fad67" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3 this class is no longer used. Instead &lt;code&gt;JTable&lt;/code&gt; overrides &lt;code&gt;processKeyBinding&lt;/code&gt; to dispatch the event to the current &lt;code&gt;TableCellEditor&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.3开始，不再使用此类。相反， &lt;code&gt;JTable&lt;/code&gt; 覆盖了 &lt;code&gt;processKeyBinding&lt;/code&gt; ,以将事件调度到当前的 &lt;code&gt;TableCellEditor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82cb662072105780e7d62f8b9453055d5c5f8799" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3 this method is no longer used. Instead you should set the border on the divider.</source>
          <target state="translated">从Java 2平台v1.3开始,这个方法就不再使用了。相反,你应该在分隔线上设置边框。</target>
        </trans-unit>
        <trans-unit id="cdeec53fa418324c652e89f54ba7148c204bc608" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an &lt;code&gt;Action&lt;/code&gt; wrapping the &lt;code&gt;ActionListener&lt;/code&gt;, and register that &lt;code&gt;Action&lt;/code&gt; by overriding &lt;code&gt;installKeyboardActions&lt;/code&gt; and placing the &lt;code&gt;Action&lt;/code&gt; in the &lt;code&gt;SplitPane's ActionMap&lt;/code&gt;. Please refer to the key bindings specification for further details.</source>
          <target state="translated">从Java 2平台v1.3开始，不再使用此方法。以前使用此方法的子类应该创建一个包装 &lt;code&gt;ActionListener&lt;/code&gt; 的 &lt;code&gt;Action&lt;/code&gt; ，并通过覆盖 &lt;code&gt;installKeyboardActions&lt;/code&gt; 并将该 &lt;code&gt;Action&lt;/code&gt; 放置在 &lt;code&gt;SplitPane's ActionMap&lt;/code&gt; 来注册该 &lt;code&gt;Action&lt;/code&gt; 。请参阅密钥绑定规范以获取更多详细信息。</target>
        </trans-unit>
        <trans-unit id="e534ea9fb51de547ac607efe3fc3a6f126317505" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification for further details.</source>
          <target state="translated">从Java 2平台v1.3开始,这个以前没有记录的字段不再使用。密钥绑定现在由LookAndFeel定义,更多细节请参考密钥绑定规范。</target>
        </trans-unit>
        <trans-unit id="723772ab0c0ff5e6610a59b285c8adb7d82fa261" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3 this undocumented class is no longer used.</source>
          <target state="translated">从Java 2平台V1.3版开始,这个未记录的类就不再使用了。</target>
        </trans-unit>
        <trans-unit id="7ce068ca5276f94983f51f8d0d9a69153ee8e731" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3 this undocumented class is no longer used. The recommended approach to creating bindings is to use a combination of an &lt;code&gt;ActionMap&lt;/code&gt;, to contain the action, and an &lt;code&gt;InputMap&lt;/code&gt; to contain the mapping from KeyStroke to action description. The InputMap is usually described in the LookAndFeel tables.</source>
          <target state="translated">从Java 2平台v1.3开始，不再使用此未记录的类。推荐的创建绑定的方法是结合使用 &lt;code&gt;ActionMap&lt;/code&gt; 和，其中ActionMap包含动作，而 &lt;code&gt;InputMap&lt;/code&gt; 包含从KeyStroke到动作描述的映射。通常在LookAndFeel表中描述InputMap。</target>
        </trans-unit>
        <trans-unit id="423ae3fefce4ad8339fd1ed6d5d57e63e8e34a36" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3, instead set the border on the divider.</source>
          <target state="translated">由于Java2平台v1.3,而是在分隔线上设置边框。</target>
        </trans-unit>
        <trans-unit id="50486120b71f93b80ae8fca229cba995ebbf6943" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3, replaced by &lt;code&gt;getScrollMode()&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.3开始，由 &lt;code&gt;getScrollMode()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="ffec56faa6959762f309a23d80f883c476242195" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3, replaced by &lt;code&gt;setScrollMode()&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.3开始，由 &lt;code&gt;setScrollMode()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="a03b05174075ed272ad545267503fb0e541f998f" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3, this method is not called by the &lt;code&gt;TableColumn&lt;/code&gt; constructor.</source>
          <target state="translated">从Java 2平台v1.3开始， &lt;code&gt;TableColumn&lt;/code&gt; 构造函数不调用此方法。</target>
        </trans-unit>
        <trans-unit id="22f8243765077d0567287e5b0d79261e5dfabd7a" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3, this method is not called by the &lt;code&gt;TableColumn&lt;/code&gt; constructor. Previously this method was used by the &lt;code&gt;TableColumn&lt;/code&gt; to create a default header renderer. As of Java 2 platform v1.3, the default header renderer is &lt;code&gt;null&lt;/code&gt;. &lt;code&gt;JTableHeader&lt;/code&gt; now provides its own shared default renderer, just as the &lt;code&gt;JTable&lt;/code&gt; does for its cell renderers.</source>
          <target state="translated">从Java 2平台v1.3开始， &lt;code&gt;TableColumn&lt;/code&gt; 构造函数不调用此方法。以前， &lt;code&gt;TableColumn&lt;/code&gt; 使用此方法来创建默认的标题渲染器。从Java 2平台v1.3开始，默认的标题渲染器为 &lt;code&gt;null&lt;/code&gt; 。现在， &lt;code&gt;JTableHeader&lt;/code&gt; 提供了自己的共享默认渲染器，就像 &lt;code&gt;JTable&lt;/code&gt; 为其单元格渲染器一样。</target>
        </trans-unit>
        <trans-unit id="b2c309c6a1cc9124e74b7a70b0db4bd233c4084f" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3, use insertAtBoundary</source>
          <target state="translated">在Java 2平台v1.3,使用insertAtBoundary。</target>
        </trans-unit>
        <trans-unit id="f558fb4e4dcb44f1b81651ab72371a94b8765aa2" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.3.</source>
          <target state="translated">截至Java 2平台v1.3。</target>
        </trans-unit>
        <trans-unit id="735a6ad54461a9f02de15d5117ca1eb4075969c7" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.4 this field should no longer be used.</source>
          <target state="translated">从Java 2平台v1.4开始,这个字段不应再被使用。</target>
        </trans-unit>
        <trans-unit id="d815d3e90ca1134ef75abb4709d250a96d17e2bd" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.4 this field should no longer be used. If you wish to provide similar behavior you should directly override &lt;code&gt;isCellEditable&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.4开始，不应再使用此字段。如果希望提供类似的行为，则应直接重写 &lt;code&gt;isCellEditable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49027db9f5967ad1562bb9a36b6814d52ef1117b" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.4 this method is no longer used.</source>
          <target state="translated">从Java 2平台v1.4开始,这个方法就不再使用了。</target>
        </trans-unit>
        <trans-unit id="f93f409ef33fdf20da65d3cb02bc77de2cee7312" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.4 this method is no longer used. Do not call or override. All the functionality of this method is in the MetalPropertyChangeListener.</source>
          <target state="translated">从Java 2平台v1.4开始,这个方法就不再使用了。不要调用或覆盖。这个方法的所有功能都在MetalPropertyChangeListener中。</target>
        </trans-unit>
        <trans-unit id="30b8a54b505f53e840a5851311f9de529716d5fd" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.4 this previously undocumented field is no longer used.</source>
          <target state="translated">从Java 2平台V1.4版开始,这个以前没有记录的字段不再使用。</target>
        </trans-unit>
        <trans-unit id="fe120a3e2fd7c53de2769a4a97b57f050d3c5e44" translate="yes" xml:space="preserve">
          <source>As of Java 2 platform v1.4.</source>
          <target state="translated">截至Java 2平台v1.4。</target>
        </trans-unit>
        <trans-unit id="870a114d631932f5053bcd585f88c526fe19c48d" translate="yes" xml:space="preserve">
          <source>As of Java SE 10, the first element of a version number is not the major-release number but the feature-release counter, incremented for every time-based release.</source>
          <target state="translated">从Java SE 10开始,版本号的第一个元素不是主要版本号,而是功能发布计数器,每一个基于时间的版本都会递增。</target>
        </trans-unit>
        <trans-unit id="874abecafeb22a591175e878cc75476187c2f796" translate="yes" xml:space="preserve">
          <source>As of Java SE 10, the first element of a version number is not the major-release number but the feature-release counter, incremented for every time-based release. Use the &lt;a href=&quot;#feature()&quot;&gt;&lt;code&gt;feature()&lt;/code&gt;&lt;/a&gt; method in preference to this method. For compatibility, this method returns the value of the &lt;a href=&quot;#FEATURE&quot;&gt;feature&lt;/a&gt; element.</source>
          <target state="translated">从Java SE 10开始，版本号的第一个元素不是主要发行号，而是功能发行计数器，对于每个基于时间的发行版，该计数器都会递增。优先使用&lt;a href=&quot;#feature()&quot;&gt; &lt;code&gt;feature()&lt;/code&gt; &lt;/a&gt;方法。为了兼容，此方法返回&lt;a href=&quot;#FEATURE&quot;&gt;feature&lt;/a&gt;元素的值。</target>
        </trans-unit>
        <trans-unit id="47f76336237e73dac48d90e785a1aab35096db06" translate="yes" xml:space="preserve">
          <source>As of Java SE 10, the second element of a version number is not the minor-release number but the interim-release counter, incremented for every interim release.</source>
          <target state="translated">从Java SE 10开始,版本号的第二个元素不是次要版本号,而是临时版本计数器,每个临时版本都会递增。</target>
        </trans-unit>
        <trans-unit id="176fdd148cb9e2b9277b063452610ddcedd572c9" translate="yes" xml:space="preserve">
          <source>As of Java SE 10, the second element of a version number is not the minor-release number but the interim-release counter, incremented for every interim release. Use the &lt;a href=&quot;#interim()&quot;&gt;&lt;code&gt;interim()&lt;/code&gt;&lt;/a&gt; method in preference to this method. For compatibility, this method returns the value of the &lt;a href=&quot;#INTERIM&quot;&gt;interim&lt;/a&gt; element, or zero if it is absent.</source>
          <target state="translated">从Java SE 10开始，版本号的第二个元素不是次要版本号，而是临时发布计数器，对于每个临时发布，该计数器都会递增。优先使用&lt;a href=&quot;#interim()&quot;&gt; &lt;code&gt;interim()&lt;/code&gt; &lt;/a&gt;方法。为了兼容，此方法返回&lt;a href=&quot;#INTERIM&quot;&gt;临时&lt;/a&gt;元素的值；如果不存在，则返回零。</target>
        </trans-unit>
        <trans-unit id="8b3cacc889816b258b9dcc03d911f2c4c6bbde75" translate="yes" xml:space="preserve">
          <source>As of Java SE 10, the third element of a version number is not the security level but the update-release counter, incremented for every update release.</source>
          <target state="translated">从Java SE 10开始,版本号的第三个元素不是安全级别,而是更新-发布计数器,每次更新发布都会递增。</target>
        </trans-unit>
        <trans-unit id="d1f1ee60f2179dbf4962eac5d9c2e50440806861" translate="yes" xml:space="preserve">
          <source>As of Java SE 10, the third element of a version number is not the security level but the update-release counter, incremented for every update release. Use the &lt;a href=&quot;#update()&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method in preference to this method. For compatibility, this method returns the value of the &lt;a href=&quot;#UPDATE&quot;&gt;update&lt;/a&gt; element, or zero if it is absent.</source>
          <target state="translated">从Java SE 10开始，版本号的第三个元素不是安全级别，而是更新发行版计数器，对于每个更新发行版，该计数器都会递增。优先于此方法使用&lt;a href=&quot;#update()&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt;方法。为了兼容性，此方法返回&lt;a href=&quot;#UPDATE&quot;&gt;update&lt;/a&gt;元素的值；如果不存在，则返回零。</target>
        </trans-unit>
        <trans-unit id="ac1cb05e209367a48dc3ac3c99c7cd48c59a1cd6" translate="yes" xml:space="preserve">
          <source>As of Swing version 1.0.2, replaced by &lt;code&gt;new JScrollPane(aTable)&lt;/code&gt;.</source>
          <target state="translated">从Swing版本1.0.2开始，由 &lt;code&gt;new JScrollPane(aTable)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="82f1434454dc1cb820590dfba19b66529399bc23" translate="yes" xml:space="preserve">
          <source>As of Swing version 1.0.3 replaced by &lt;code&gt;getJMenuBar()&lt;/code&gt;.</source>
          <target state="translated">从Swing版本1.0.3开始，由 &lt;code&gt;getJMenuBar()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="4be97f451fe3d46789afa2901709b6807a24ca92" translate="yes" xml:space="preserve">
          <source>As of Swing version 1.0.3 replaced by &lt;code&gt;setJMenuBar(JMenuBar m)&lt;/code&gt;.</source>
          <target state="translated">从Swing版本1.0.3开始，由 &lt;code&gt;setJMenuBar(JMenuBar m)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="c8b21dac3ca5bd856005d0c63195cfaaf65226e2" translate="yes" xml:space="preserve">
          <source>As of Swing version 1.0.3 replaced by &lt;code&gt;setJMenuBar(JMenuBar menu)&lt;/code&gt;.</source>
          <target state="translated">从Swing版本1.0.3开始，由 &lt;code&gt;setJMenuBar(JMenuBar menu)&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="87c6f4504cb250fc2c92ec36cede0d01750fa2c2" translate="yes" xml:space="preserve">
          <source>As of Swing version 1.0.3, replaced by &lt;code&gt;doLayout()&lt;/code&gt;.</source>
          <target state="translated">从Swing版本1.0.3开始，由 &lt;code&gt;doLayout()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="4bd402d4b47296fb14a4c642d98724984636191e" translate="yes" xml:space="preserve">
          <source>As of Swing version 1.0.3, replaced by &lt;code&gt;getJMenuBar()&lt;/code&gt;.</source>
          <target state="translated">从Swing版本1.0.3开始，由 &lt;code&gt;getJMenuBar()&lt;/code&gt; 取代。</target>
        </trans-unit>
        <trans-unit id="e08c1998b3504c141072c04254f8fadb0f566316" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;&lt;code&gt;IOException&lt;/code&gt; that terminated the print job&quot; that is provided at construction time and accessed via the &lt;a href=&quot;#getIOException()&quot;&gt;&lt;code&gt;getIOException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。在构造时提供并通过&lt;a href=&quot;#getIOException()&quot;&gt; &lt;code&gt;getIOException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;终止打印作业的 &lt;code&gt;IOException&lt;/code&gt; &amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="3537b28ccb55746c134247c452faa27ade7075c7" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;detail exception&quot; that may be provided at construction time and accessed via the public &lt;a href=&quot;#detail&quot;&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/a&gt; field is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。可以在构造时提供并通过公共&lt;a href=&quot;#detail&quot;&gt; &lt;code&gt;detail&lt;/code&gt; &lt;/a&gt;字段访问的&amp;ldquo;详细例外&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="38a41bfa4140a87f71793039399828eac684be96" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;exception causing the abort&quot; that is provided at construction time and accessed via the public &lt;a href=&quot;#detail&quot;&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/a&gt; field is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。在施工时提供并通过公共&lt;a href=&quot;#detail&quot;&gt; &lt;code&gt;detail&lt;/code&gt; &lt;/a&gt;字段访问的&amp;ldquo;导致中止的异常&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="155920b436a733307bf2f132ae7bdebc97ee45ce" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;exception causing the abort&quot; that is provided at construction time and accessed via the public &lt;a href=&quot;writeabortedexception#detail&quot;&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/a&gt; field is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链接机制。在构造时提供并通过公共&lt;a href=&quot;writeabortedexception#detail&quot;&gt; &lt;code&gt;detail&lt;/code&gt; &lt;/a&gt;字段访问的&amp;ldquo;导致中止的异常&amp;rdquo; 现在称为</target>
        </trans-unit>
        <trans-unit id="05c4806cbf6997bf4a2b024b7563e447c395b349" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;exception thrown by the privileged computation&quot; that is provided at construction time and accessed via the &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。在构造时提供并通过&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;特权计算引发的异常&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="8495fe7de406e54be9a9a6704464127b904b17f9" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;exception thrown by the privileged computation&quot; that is provided at construction time and accessed via the &lt;a href=&quot;privilegedactionexception#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链接机制。在构造时提供并通过&lt;a href=&quot;privilegedactionexception#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;特权计算引发的异常&amp;rdquo; 现在称为</target>
        </trans-unit>
        <trans-unit id="9eb20d677973b4d444992bcfeb741c46213ad5b8" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;nested exception&quot; that may be provided at construction time and accessed via the public &lt;a href=&quot;#detail&quot;&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/a&gt; field is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。可以在构造时提供并通过公共&lt;a href=&quot;#detail&quot;&gt; &lt;code&gt;detail&lt;/code&gt; &lt;/a&gt;字段访问的&amp;ldquo;嵌套例外&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="5fb3da4dd2c838061870fbe2ad2012fc8cfe2ab8" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;optional exception that was raised while loading the class&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。可能在构造时提供并通过&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;加载类时引发的可选异常&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="0e80c8416bb52dec10dec7b4bec14bd1c9044e25" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;optional exception that was raised while loading the class&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;classnotfoundexception#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链接机制。可能在构造时提供并通过&lt;a href=&quot;classnotfoundexception#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;加载类时引发的可选异常&amp;rdquo; 现在称为</target>
        </trans-unit>
        <trans-unit id="98b22717e520f503eeca57b7a0cdf6582e3d5b21" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;saved throwable object&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。可以在构造时提供并通过&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;保存的可抛出对象&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="a03b661cd4f78001e9078093a2c0b7edd9e59ee0" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;saved throwable object&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;exceptionininitializererror#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链接机制。可以在构造时提供并通过&lt;a href=&quot;exceptionininitializererror#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;保存的可抛出对象&amp;rdquo; 现在称为</target>
        </trans-unit>
        <trans-unit id="5c00973f94dd87b5972e337104c8c200c571c568" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;target exception&quot; that is provided at construction time and accessed via the &lt;a href=&quot;#getTargetException()&quot;&gt;&lt;code&gt;getTargetException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。在构造时提供并通过&lt;a href=&quot;#getTargetException()&quot;&gt; &lt;code&gt;getTargetException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;目标异常&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="a5f4d3eca6416349f41ab5a1a6b1e77c4d437ad4" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;target exception&quot; that is provided at construction time and accessed via the &lt;a href=&quot;invocationtargetexception#getTargetException--&quot;&gt;&lt;code&gt;getTargetException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链接机制。在构造时提供并通过&lt;a href=&quot;invocationtargetexception#getTargetException--&quot;&gt; &lt;code&gt;getTargetException()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;目标异常&amp;rdquo; 现在称为</target>
        </trans-unit>
        <trans-unit id="80eb32895fea620be0b2747213fc17d59e21b26b" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;undeclared checked exception that was thrown by the invocation handler&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;#getUndeclaredThrowable()&quot;&gt;&lt;code&gt;getUndeclaredThrowable()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。可能在构造时提供并通过&lt;a href=&quot;#getUndeclaredThrowable()&quot;&gt; &lt;code&gt;getUndeclaredThrowable()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;由调用处理程序引发的未声明的检查异常&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="745046a23cf80e295270cdcaa70c0f899787c482" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;undeclared checked exception that was thrown by the invocation handler&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;undeclaredthrowableexception#getUndeclaredThrowable--&quot;&gt;&lt;code&gt;getUndeclaredThrowable()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链接机制。可能在构造时提供并通过&lt;a href=&quot;undeclaredthrowableexception#getUndeclaredThrowable--&quot;&gt; &lt;code&gt;getUndeclaredThrowable()&lt;/code&gt; &lt;/a&gt;方法访问的&amp;ldquo;由调用处理程序引发的未声明的检查异常&amp;rdquo; 现在称为</target>
        </trans-unit>
        <trans-unit id="ec9f2b3eb7bda6088852bcb9696d1f7b65bc5186" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;wrapped remote exception&quot; that may be provided at construction time and accessed via the public &lt;a href=&quot;#detail&quot;&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/a&gt; field is now known as the</source>
          <target state="translated">从版本1.4开始，已对该异常进行了改进以符合通用异常链机制。可以在构造时提供并通过公共&lt;a href=&quot;#detail&quot;&gt; &lt;code&gt;detail&lt;/code&gt; &lt;/a&gt;字段访问的&amp;ldquo;包装的远程异常&amp;rdquo;现在称为</target>
        </trans-unit>
        <trans-unit id="08abfb7f42903e6ce5dc42817d72e81a7e3128b7" translate="yes" xml:space="preserve">
          <source>As of release 7, the platform supports the notion of</source>
          <target state="translated">从第7版开始,该平台支持的概念是</target>
        </trans-unit>
        <trans-unit id="d199937d4d0e643598ee602346c6a171ef560fe1" translate="yes" xml:space="preserve">
          <source>As of release JDK 5, this class has been supplemented with an equivalent class designed for use by a single thread, &lt;a href=&quot;stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;StringBuilder&lt;/code&gt; class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization.</source>
          <target state="translated">从JDK 5版本开始，该类已经添加了一个等效类，该等效类设计用于单个线程&lt;a href=&quot;stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt;。所述 &lt;code&gt;StringBuilder&lt;/code&gt; 类通常应优先使用这一个，因为它支持所有相同的操作，但它是快的，因为它不执行同步。</target>
        </trans-unit>
        <trans-unit id="2e6bcd78086d103a664fb31d032ae03a98131ac5" translate="yes" xml:space="preserve">
          <source>As of the Java 2 platform v1.2, this class was retrofitted to implement the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface, making it a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;. Unlike the new collection implementations, &lt;code&gt;Vector&lt;/code&gt; is synchronized. If a thread-safe implementation is not needed, it is recommended to use &lt;a href=&quot;arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Vector&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.2开始，对该类进行了改进以实现&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口，使其成为&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Framework&lt;/a&gt;的成员。与新的集合实现不同， &lt;code&gt;Vector&lt;/code&gt; 是同步的。如果不需要线程安全的实现，建议使用&lt;a href=&quot;arraylist&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;Vector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9bbe3fdbcf9e9f98b620f55c3ee04603691aa08" translate="yes" xml:space="preserve">
          <source>As of the Java 2 platform v1.2, this class was retrofitted to implement the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface, making it a member of the &lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;. Unlike the new collection implementations, &lt;code&gt;Vector&lt;/code&gt; is synchronized. If a thread-safe implementation is not needed, it is recommended to use &lt;a href=&quot;arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Vector&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.2开始，对该类进行了改进以实现&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口，使其成为&lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt;的成员。与新的集合实现不同， &lt;code&gt;Vector&lt;/code&gt; 是同步的。如果不需要线程安全的实现，建议使用&lt;a href=&quot;arraylist&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;Vector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fca7f268bf7fdde33cb8e4ec038344234d57ae07" translate="yes" xml:space="preserve">
          <source>As of the Java 2 platform v1.2, this class was retrofitted to implement the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface, making it a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;. Unlike the new collection implementations, &lt;code&gt;Hashtable&lt;/code&gt; is synchronized. If a thread-safe implementation is not needed, it is recommended to use &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Hashtable&lt;/code&gt;. If a thread-safe highly-concurrent implementation is desired, then it is recommended to use &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Hashtable&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.2开始，对该类进行了改进以实现&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;接口，使其成为&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt;Java Collections Framework&lt;/a&gt;的成员。与新的集合实现不同， &lt;code&gt;Hashtable&lt;/code&gt; 是同步的。如果不需要线程安全的实现，建议使用&lt;a href=&quot;hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;Hashtable&lt;/code&gt; 。如果需要线程安全的高并发实现，则建议使用&lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;Hashtable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa0e1843fcf3cfc5e3b98851e0ca2ee8a7a7beac" translate="yes" xml:space="preserve">
          <source>As of the Java 2 platform v1.2, this class was retrofitted to implement the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface, making it a member of the &lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt; Java Collections Framework&lt;/a&gt;. Unlike the new collection implementations, &lt;code&gt;Hashtable&lt;/code&gt; is synchronized. If a thread-safe implementation is not needed, it is recommended to use &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Hashtable&lt;/code&gt;. If a thread-safe highly-concurrent implementation is desired, then it is recommended to use &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Hashtable&lt;/code&gt;.</source>
          <target state="translated">从Java 2平台v1.2开始，对该类进行了改进以实现&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;接口，使其成为&lt;a href=&quot;package-summary#CollectionsFramework&quot;&gt;Java Collections Framework&lt;/a&gt;的成员。与新的集合实现不同， &lt;code&gt;Hashtable&lt;/code&gt; 是同步的。如果不需要线程安全的实现，建议使用&lt;a href=&quot;hashmap&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;Hashtable&lt;/code&gt; 。如果需要线程安全的高度并发实现，则建议使用&lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;Hashtable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c1dadb9a609742bac134bce7543bdcb4233e40d" translate="yes" xml:space="preserve">
          <source>As of v1.4, the &lt;code&gt;java.beans&lt;/code&gt; package provides support for &lt;em&gt;long-term persistence&lt;/em&gt; -- reading and writing a bean as a textual representation of its property values. The property values are treated as beans, and are recursively read or written to capture their publicly available state. This approach is suitable for long-term storage because it relies only on public API, rather than the likely-to-change private implementation.</source>
          <target state="translated">从v1.4开始， &lt;code&gt;java.beans&lt;/code&gt; 包提供了对&lt;em&gt;长期持久性的&lt;/em&gt;支持-读写bean作为其属性值的文本表示。这些属性值被视为Bean，并以递归方式读取或写入以捕获其公共可用状态。这种方法适用于长期存储，因为它仅依赖于公共API，而不依赖于可能更改的私有实现。</target>
        </trans-unit>
        <trans-unit id="2fe88917a8774511a1f31627d32350cf0b1a85da" translate="yes" xml:space="preserve">
          <source>As part of its initialization, the &lt;code&gt;DriverManager&lt;/code&gt; class will attempt to load available JDBC drivers by using:</source>
          <target state="translated">作为其初始化的一部分， &lt;code&gt;DriverManager&lt;/code&gt; 类将尝试使用以下方法来加载可用的JDBC驱动程序：</target>
        </trans-unit>
        <trans-unit id="eeb69f99ce768e2368d58f91be9d9b4d2ac4e667" translate="yes" xml:space="preserve">
          <source>As part of its internal notification process, a &lt;code&gt;RowSet&lt;/code&gt; object creates an instance of &lt;code&gt;RowSetEvent&lt;/code&gt; and passes it to the listener. The listener can use this &lt;code&gt;RowSetEvent&lt;/code&gt; object to find out which rowset had the event.</source>
          <target state="translated">作为其内部通知过程的一部分， &lt;code&gt;RowSet&lt;/code&gt; 对象创建 &lt;code&gt;RowSetEvent&lt;/code&gt; 的实例并将其传递给侦听器。侦听器可以使用此 &lt;code&gt;RowSetEvent&lt;/code&gt; 对象找出哪个行集发生了该事件。</target>
        </trans-unit>
        <trans-unit id="3cb3da4b4ff931e292c1804ac98488778ba3257c" translate="yes" xml:space="preserve">
          <source>As per the contract of the base &lt;code&gt;Image#getGraphics()&lt;/code&gt; method, this implementation will always throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; since only off-screen images can return a &lt;code&gt;Graphics&lt;/code&gt; object.</source>
          <target state="translated">根据基本 &lt;code&gt;Image#getGraphics()&lt;/code&gt; 方法的约定，此实现将始终抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; ,因为只有屏幕外的图像才能返回 &lt;code&gt;Graphics&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9bd69e06d29fd180cdb41e0da6ff64991d991c7b" translate="yes" xml:space="preserve">
          <source>As previously mentioned, DefaultStyledDocument maintains an Element structure such that the root Element contains a child Element for each paragraph. In turn, each of these paragraph Elements contains an Element for each style of text in the paragraph. As an example, let's say you had a document containing one paragraph, and that this paragraph contained two styles, as shown in &lt;u&gt;Figure 8&lt;/u&gt;.</source>
          <target state="translated">如前所述，DefaultStyledDocument维护一个Element结构，以便根Element包含每个段落的子Element。反过来，这些段落元素中的每个元素都包含该段落中每种文本样式的元素。例如，假设您有一个包含一个段落的文档，并且该段落包含两种样式，&lt;u&gt;如图8&lt;/u&gt;所示。</target>
        </trans-unit>
        <trans-unit id="3934207a533e24592d8c4d7a9d31ad79632324aa" translate="yes" xml:space="preserve">
          <source>As previously stated, this invokes &lt;code&gt;loadSystemColors&lt;/code&gt; with the supplied &lt;code&gt;table&lt;/code&gt; and &lt;code&gt;name-color&lt;/code&gt; pair array. The last argument to &lt;code&gt;loadSystemColors&lt;/code&gt; indicates whether the value of the field in &lt;code&gt;SystemColor&lt;/code&gt; should be used. This method passes the value of &lt;code&gt;
 isNativeLookAndFeel()&lt;/code&gt; as the last argument to &lt;code&gt;loadSystemColors&lt;/code&gt;.</source>
          <target state="translated">如前所述，这 &lt;code&gt;loadSystemColors&lt;/code&gt; 使用提供的 &lt;code&gt;table&lt;/code&gt; 和 &lt;code&gt;name-color&lt;/code&gt; 对数组调用loadSystemColors。 &lt;code&gt;loadSystemColors&lt;/code&gt; 的最后一个参数指示是否应使用 &lt;code&gt;SystemColor&lt;/code&gt; 中的字段值。此方法将 &lt;code&gt; isNativeLookAndFeel()&lt;/code&gt; 的值作为 &lt;code&gt;loadSystemColors&lt;/code&gt; 的最后一个参数传递。</target>
        </trans-unit>
        <trans-unit id="f37d49d91e67aab15a9f7a227fc3a78be4eb9abd" translate="yes" xml:space="preserve">
          <source>As service binding involves resolution then it may fail with &lt;code&gt;
 FindException&lt;/code&gt; or &lt;code&gt;ResolutionException&lt;/code&gt; for exactly the same reasons specified in &lt;code&gt;resolve&lt;/code&gt;.</source>
          <target state="translated">作为服务绑定涉及的分辨率，然后它可能会失败， &lt;code&gt; FindException&lt;/code&gt; 或 &lt;code&gt;ResolutionException&lt;/code&gt; 整整在指定的相同原因 &lt;code&gt;resolve&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aafc293e257030347fd4b78d6be1bc7cd7cacca" translate="yes" xml:space="preserve">
          <source>As shown in &lt;a href=&quot;#figure1&quot;&gt;figure 1&lt;/a&gt;, if &lt;b&gt;D&lt;/b&gt; was just added, the index of the next edit will be 4. Invoking &lt;code&gt;undo&lt;/code&gt; results in invoking &lt;code&gt;undo&lt;/code&gt; on &lt;b&gt;D&lt;/b&gt; and setting the index of the next edit to 3 (edit</source>
          <target state="translated">&lt;a href=&quot;#figure1&quot;&gt;如图1&lt;/a&gt;所示，如果刚刚添加了&lt;b&gt;D&lt;/b&gt;，则下一个编辑的索引将为4。调用 &lt;code&gt;undo&lt;/code&gt; 会导致对&lt;b&gt;D&lt;/b&gt;调用 &lt;code&gt;undo&lt;/code&gt; 并将下一个编辑的索引设置为3（编辑&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="74de9815fea9b7360931636613219dd6f8de6ac1" translate="yes" xml:space="preserve">
          <source>As shown, although the date objects are in different calendar systems, represented by different &lt;code&gt;Chronology&lt;/code&gt; instances, both can be queried using the same constant on &lt;code&gt;ChronoField&lt;/code&gt;. For a full discussion of the implications of this, see &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;. In general, the advice is to use the known ISO-based &lt;code&gt;LocalDate&lt;/code&gt;, rather than &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">如图所示，尽管日期对象位于不同的日历系统中（由不同的 &lt;code&gt;Chronology&lt;/code&gt; 实例表示），但是可以使用 &lt;code&gt;ChronoField&lt;/code&gt; 上的相同常量来查询两个日期对象。有关此方法含义的完整讨论，请参见&lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;。通常，建议使用已知的基于ISO的 &lt;code&gt;LocalDate&lt;/code&gt; 而不是 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18d7e1176138c02170e7e0f9731e4b0101ef7e9d" translate="yes" xml:space="preserve">
          <source>As shown, there can be two different sets of request controls associated with a context: connection request controls and context request controls. This is required for those applications needing to send critical controls that might not be applicable to both the context operation and any implicit LDAP &quot;bind&quot; operation. A typical user program would do the following:</source>
          <target state="translated">如图所示,可以有两套不同的请求控件与上下文相关联:连接请求控件和上下文请求控件。这对于那些需要发送关键控件的应用程序来说是必需的,这些控件可能并不适用于上下文操作和任何隐含的LDAP &quot;绑定 &quot;操作。一个典型的用户程序会做以下事情。</target>
        </trans-unit>
        <trans-unit id="2144436e183058db41c722ad6e7b3a6a91de6eae" translate="yes" xml:space="preserve">
          <source>As specified in &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; key events are dispatched to the focus owner by default.</source>
          <target state="translated">根据&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;焦点规范中的&lt;/a&gt;指定，默认情况下，关键事件将分派给焦点所有者。</target>
        </trans-unit>
        <trans-unit id="7d4d5ed881a3035f2233eab717eb355501a40321" translate="yes" xml:space="preserve">
          <source>As specified in &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; key events are dispatched to the focus owner by default.</source>
          <target state="translated">根据&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;焦点规范中的&lt;/a&gt;指定，默认情况下，关键事件将分派给焦点所有者。</target>
        </trans-unit>
        <trans-unit id="1b352dd5bd27a81759ee7172972f80beb9d86cf6" translate="yes" xml:space="preserve">
          <source>As specified in &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html#s.res.fail&quot;&gt; XML Catalogs, OASIS Standard V1.1&lt;/a&gt;, if a catalog entry is invalid, it is ignored. In case all entries are invalid, the resulting Catalog object will contain no Catalog elements. Any matching operation using the Catalog will return null.</source>
          <target state="translated">如&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html#s.res.fail&quot;&gt;XML编&lt;/a&gt;录OASIS标准V1.1中所指定，如果编录条目无效，则将其忽略。如果所有条目均无效，则生成的Catalog对象将不包含Catalog元素。使用目录的任何匹配操作都将返回null。</target>
        </trans-unit>
        <trans-unit id="038e4c2fbfc0101cd213203d9902254e7adab9f7" translate="yes" xml:space="preserve">
          <source>As specified in &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html#s.res.fail&quot;&gt; XML Catalogs, OASIS Standard V1.1&lt;/a&gt;, if a catalog entry is invalid, it is ignored. In case all entries are invalid, the resulting CatalogResolver object will contain no valid catalog. Any resolution operation using the resolver therefore will return as no mapping is found. See &lt;a href=&quot;catalogresolver&quot;&gt;&lt;code&gt;CatalogResolver&lt;/code&gt;&lt;/a&gt; for the behavior when no mapping is found.</source>
          <target state="translated">如&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html#s.res.fail&quot;&gt;XML编&lt;/a&gt;录OASIS标准V1.1中所指定，如果编录条目无效，则将其忽略。如果所有条目均无效，则所得的CatalogResolver对象将不包含任何有效的目录。因此，使用解析器进行的任何解析操作都将返回，因为找不到映射。有关找不到映射的行为，请参见&lt;a href=&quot;catalogresolver&quot;&gt; &lt;code&gt;CatalogResolver&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85eeef57e9253e237d872efe82c0b85684896fb6" translate="yes" xml:space="preserve">
          <source>As specified in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , when a document is first made available via the LSParser:</source>
          <target state="translated">如[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt; ]中所指定，当首次通过LSParser提供文档时：</target>
        </trans-unit>
        <trans-unit id="7f6a12e78b527fd55e688ccd127353a907b451d6" translate="yes" xml:space="preserve">
          <source>As specified in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , when a document is first made available via the LSParser:</source>
          <target state="translated">如[ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt; ]中所指定，当首次通过LSParser提供文档时：</target>
        </trans-unit>
        <trans-unit id="09a387e17a0102b28fda4804fcb6ca57e3626e02" translate="yes" xml:space="preserve">
          <source>As specified in section 5.4.3 of the</source>
          <target state="translated">正如《公约》第5.4.3节所规定的那样。</target>
        </trans-unit>
        <trans-unit id="8a81f332a784752a04d5a460f5f8755e0973c1c2" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;WatchService&lt;/code&gt; is intended to map directly on to the native file event notification facility (where available) then many of details on how registered objects are watched is highly implementation specific. When watching a directory for changes for example, and the directory is moved or renamed in the file system, there is no guarantee that the watch key will be cancelled and so the object returned by this method may no longer be a valid path to the directory.</source>
          <target state="translated">由于 &lt;code&gt;WatchService&lt;/code&gt; 旨在直接映射到本机文件事件通知工具（如果可用），因此有关如何监视已注册对象的许多详细信息是高度实现特定的。例如，当查看目录中的更改并在文件系统中移动目录或重命名目录时，无法保证将取消监视键，因此，此方法返回的对象可能不再是目录的有效路径。 。</target>
        </trans-unit>
        <trans-unit id="12aa136826b865e2ff157db15e4d08b9665bb439" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;nodeName&lt;/code&gt; attribute is used to derive the name which the node must be stored under, multiple nodes of certain types (those that have a &quot;special&quot; string value) cannot be stored as the names would clash. This is seen as preferable to allowing nodes to be aliased.</source>
          <target state="translated">由于 &lt;code&gt;nodeName&lt;/code&gt; 属性用于派生必须以其存储节点的名称，因此某些类型的多个节点（具有&amp;ldquo;特殊&amp;rdquo;字符串值的那些节点）无法存储，因为名称会发生​​冲突。这被认为比允许对节点进行别名更可取。</target>
        </trans-unit>
        <trans-unit id="aa6c49cf03238266cf1714236a6543613f54d3f0" translate="yes" xml:space="preserve">
          <source>As the content is parsed by the underlying parser, methods of the given &lt;a href=&quot;../../../org/xml/sax/handlerbase&quot;&gt;&lt;code&gt;HandlerBase&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../../../org/xml/sax/helpers/defaulthandler&quot;&gt;&lt;code&gt;DefaultHandler&lt;/code&gt;&lt;/a&gt; are called.</source>
          <target state="translated">当内容由基础解析器解析时，将调用给定&lt;a href=&quot;../../../org/xml/sax/handlerbase&quot;&gt; &lt;code&gt;HandlerBase&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../../org/xml/sax/helpers/defaulthandler&quot;&gt; &lt;code&gt;DefaultHandler&lt;/code&gt; 的&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2cdb2d73ddfa0ff1f2ef686f5ebf6bdbffa6affd" translate="yes" xml:space="preserve">
          <source>As the image is scaled up, it will look correspondingly blocky. As the image is scaled down, the colors for source pixels will be either used unmodified, or skipped entirely in the output representation.</source>
          <target state="translated">当图像被放大时,它将看起来相应的块状。当图像被缩小时,源像素的颜色将被不加修改地使用,或者在输出表示中完全跳过。</target>
        </trans-unit>
        <trans-unit id="a702f8af3fa364bc3c009cfa9afe487d6f1c3e40" translate="yes" xml:space="preserve">
          <source>As the image is scaled up, there are no blocky edges and the interpolation should appear smoother and with better depictions of any edges in the original image than with &lt;code&gt;BILINEAR&lt;/code&gt;. As the image is scaled down, even more of the original color samples from the original image will have their color information carried through and represented.</source>
          <target state="translated">当图像被放大，没有块状边缘和内插应该会出现更顺畅，比与原始图像中的任何边缘的更好描绘 &lt;code&gt;BILINEAR&lt;/code&gt; 。随着图像按比例缩小，来自原始图像的甚至更多原始颜色样本将被传送并表示其颜色信息。</target>
        </trans-unit>
        <trans-unit id="91d1aab307d7ddc986f82f00f0b850043842f4ea" translate="yes" xml:space="preserve">
          <source>As the image is scaled up, there are no blocky edges between the colors in the image as there are with &lt;a href=&quot;#VALUE_INTERPOLATION_NEAREST_NEIGHBOR&quot;&gt;&lt;code&gt;NEAREST_NEIGHBOR&lt;/code&gt;&lt;/a&gt;, but the blending may show some subtle discontinuities along the horizontal and vertical edges that line up with the samples caused by a sudden change in the slope of the interpolation from one side of a sample to the other. As the image is scaled down, more image pixels have their color samples represented in the resulting output since each output pixel receives color information from up to 4 image pixels.</source>
          <target state="translated">随着图像的放大，与&lt;a href=&quot;#VALUE_INTERPOLATION_NEAREST_NEIGHBOR&quot;&gt; &lt;code&gt;NEAREST_NEIGHBOR&lt;/code&gt; 一样&lt;/a&gt;，图像中的颜色之间没有块状边缘，但是混合可能会沿水平和垂直边缘显示一些细微的不连续点，这些不连续点与样本的突然变化所导致的采样点对齐从样本一侧到另一侧的插值斜率。随着图像按比例缩小，由于每个输出像素从最多4个图像像素接收颜色信息，因此更多图像像素的颜色样本显示在结果输出中。</target>
        </trans-unit>
        <trans-unit id="61317a2ac613441bcf5d5afe40ea81f32fa6489b" translate="yes" xml:space="preserve">
          <source>As the inheritance hierarchy implies, a &lt;code&gt;PopupMenu&lt;/code&gt; can be used anywhere a &lt;code&gt;Menu&lt;/code&gt; can be used. However, if you use a &lt;code&gt;PopupMenu&lt;/code&gt; like a &lt;code&gt;Menu&lt;/code&gt; (e.g., you add it to a &lt;code&gt;MenuBar&lt;/code&gt;), then you &lt;b&gt;cannot&lt;/b&gt; call &lt;code&gt;show&lt;/code&gt; on that &lt;code&gt;PopupMenu&lt;/code&gt;.</source>
          <target state="translated">正如继承层次结构所暗示的， &lt;code&gt;PopupMenu&lt;/code&gt; 可以在可以使用 &lt;code&gt;Menu&lt;/code&gt; 的任何地方使用。但是，如果将 &lt;code&gt;PopupMenu&lt;/code&gt; 用作 &lt;code&gt;Menu&lt;/code&gt; （例如，将其添加到 &lt;code&gt;MenuBar&lt;/code&gt; ），则&lt;b&gt;无法&lt;/b&gt;在该 &lt;code&gt;PopupMenu&lt;/code&gt; 上调用 &lt;code&gt;show&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a4403430e032de99eacb96bb465f8eff3f54dd0" translate="yes" xml:space="preserve">
          <source>As the largest &lt;code&gt;double&lt;/code&gt; value less than &lt;code&gt;1.0&lt;/code&gt; is &lt;code&gt;Math.nextDown(1.0)&lt;/code&gt;, a value &lt;code&gt;x&lt;/code&gt; in the closed range &lt;code&gt;[x1,x2]&lt;/code&gt; where &lt;code&gt;x1&amp;lt;=x2&lt;/code&gt; may be defined by the statements</source>
          <target state="translated">由于小于 &lt;code&gt;1.0&lt;/code&gt; 的最大 &lt;code&gt;double&lt;/code&gt; 精度值是 &lt;code&gt;Math.nextDown(1.0)&lt;/code&gt; ，因此可以通过以下语句来定义封闭范围 &lt;code&gt;[x1,x2]&lt;/code&gt; 中的值 &lt;code&gt;x&lt;/code&gt; ，其中 &lt;code&gt;x1&amp;lt;=x2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10db4757a6b843534723bc0bbcb82eb46a835d72" translate="yes" xml:space="preserve">
          <source>As the monitor attributes may change at runtime, a check is performed before each observation. If a monitor attribute has become invalid, a monitor setting exception is thrown.</source>
          <target state="translated">由于监视器属性在运行时可能会发生变化,因此在每次观察之前都会进行检查。如果监视器属性无效,则会抛出监视器设置异常。</target>
        </trans-unit>
        <trans-unit id="3ac8e4fde6dec6335496b355fcdd102b05472c6c" translate="yes" xml:space="preserve">
          <source>As the new data is inserted into the document, at least one mutation event is fired per new immediate child or sibling of the context node.</source>
          <target state="translated">当新的数据被插入到文档中时,上下文节点的每一个新的直系子节点或同级节点都会触发至少一个突变事件。</target>
        </trans-unit>
        <trans-unit id="b0b8b1e8829293993b0747795d1bed596ed71cd8" translate="yes" xml:space="preserve">
          <source>As the return value is an &lt;code&gt;int&lt;/code&gt;, an incorrect value will be returned for &lt;code&gt;Duration&lt;/code&gt;s with years that go beyond the range of an &lt;code&gt;int&lt;/code&gt;. Use &lt;a href=&quot;#getField(javax.xml.datatype.DatatypeConstants.Field)&quot;&gt;&lt;code&gt;getField(DatatypeConstants.YEARS)&lt;/code&gt;&lt;/a&gt; to avoid possible loss of precision.</source>
          <target state="translated">由于返回值是一个 &lt;code&gt;int&lt;/code&gt; 值，因此对于 &lt;code&gt;Duration&lt;/code&gt; ，如果返回的年份超出了 &lt;code&gt;int&lt;/code&gt; 的范围，则将返回错误的值。使用&lt;a href=&quot;#getField(javax.xml.datatype.DatatypeConstants.Field)&quot;&gt; &lt;code&gt;getField(DatatypeConstants.YEARS)&lt;/code&gt; &lt;/a&gt;避免可能的精度损失。</target>
        </trans-unit>
        <trans-unit id="4c93f4f4fbd468b9aefc52826d44fc46124020f4" translate="yes" xml:space="preserve">
          <source>As the semantics of how a tree or subtree may be merged with another tree are completely format-specific, plug-in authors may implement this method in whatever manner is most appropriate for the format, including simply replacing all existing state with the contents of the given tree.</source>
          <target state="translated">由于一棵树或子树如何与另一棵树合并的语义是完全针对格式的,插件作者可以用任何最适合格式的方式实现这种方法,包括简单地用给定树的内容替换所有现有状态。</target>
        </trans-unit>
        <trans-unit id="2d705cd2177ec8c77e1a322180421cd69a851ea3" translate="yes" xml:space="preserve">
          <source>As the start and end offsets of the changed region (0 and 3) fall on character Element boundaries, no structure change is needed. That is, only the attributes of the character Element style 1 will change.</source>
          <target state="translated">由于改变后的区域(0 和 3)的开始和结束偏移量落在字符元素的边界上,所以不需要改变结构。也就是说,只有字符元素样式1的属性会改变。</target>
        </trans-unit>
        <trans-unit id="0aae174adf4969941ef7ca9af30375166a193cba" translate="yes" xml:space="preserve">
          <source>As the underlying network implementation may ignore the traffic class or type-of-service set using &lt;a href=&quot;#setTrafficClass(int)&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; this method may return a different value than was previously set using the &lt;a href=&quot;#setTrafficClass(int)&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; method on this DatagramSocket.</source>
          <target state="translated">由于基础网络实现可能会忽略使用&lt;a href=&quot;#setTrafficClass(int)&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;设置的流量类别或服务类型，因此此方法可能返回与先前在此DatagramSocket上使用&lt;a href=&quot;#setTrafficClass(int)&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;方法设置的值不同的值。</target>
        </trans-unit>
        <trans-unit id="13250d2ca51c1336598dc788a65b3c27315c3b2f" translate="yes" xml:space="preserve">
          <source>As the underlying network implementation may ignore the traffic class or type-of-service set using &lt;a href=&quot;#setTrafficClass(int)&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; this method may return a different value than was previously set using the &lt;a href=&quot;#setTrafficClass(int)&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; method on this Socket.</source>
          <target state="translated">由于基础网络实现可能会忽略使用&lt;a href=&quot;#setTrafficClass(int)&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;设置的流量类别或服务类型，因此此方法可能返回与先前使用此Socket上的&lt;a href=&quot;#setTrafficClass(int)&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;方法设置的值不同的值。</target>
        </trans-unit>
        <trans-unit id="6e3b663db14ddbd84bf650414e653cfed7b4d3bf" translate="yes" xml:space="preserve">
          <source>As the underlying network implementation may ignore the traffic class or type-of-service set using &lt;a href=&quot;datagramsocket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; this method may return a different value than was previously set using the &lt;a href=&quot;datagramsocket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; method on this DatagramSocket.</source>
          <target state="translated">由于基础网络实现可能会忽略使用&lt;a href=&quot;datagramsocket#setTrafficClass-int-&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;设置的流量类别或服务类型，因此此方法可能返回与先前在此DatagramSocket上使用&lt;a href=&quot;datagramsocket#setTrafficClass-int-&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;方法设置的值不同的值。</target>
        </trans-unit>
        <trans-unit id="bd3dcaa75bfca85fdab534c16fe7b401186b0b4f" translate="yes" xml:space="preserve">
          <source>As the underlying network implementation may ignore the traffic class or type-of-service set using &lt;a href=&quot;socket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; this method may return a different value than was previously set using the &lt;a href=&quot;socket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; method on this Socket.</source>
          <target state="translated">由于基础网络实现可能会忽略使用&lt;a href=&quot;socket#setTrafficClass-int-&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;设置的流量类别或服务类型，因此此方法可能返回与先前使用此Socket上的&lt;a href=&quot;socket#setTrafficClass-int-&quot;&gt; &lt;code&gt;setTrafficClass(int)&lt;/code&gt; &lt;/a&gt;方法设置的值不同的值。</target>
        </trans-unit>
        <trans-unit id="30c1a54150bebd25d644937ac69968a8cf3ce67a" translate="yes" xml:space="preserve">
          <source>As the user gestures navigate over &lt;code&gt;Component&lt;/code&gt;(s) in the GUI with associated &lt;code&gt;DropTarget&lt;/code&gt;(s), the &lt;code&gt;DragSource&lt;/code&gt; receives notifications in order to provide &quot;Drag Over&quot; feedback effects, and the &lt;code&gt;DropTarget&lt;/code&gt;(s) receive notifications in order to provide &quot;Drag Under&quot; feedback effects based upon the operation(s) supported and the data type(s) involved.</source>
          <target state="translated">当用户手势在GUI中具有关联的 &lt;code&gt;DropTarget&lt;/code&gt; 的 &lt;code&gt;Component&lt;/code&gt; 上导航时， &lt;code&gt;DragSource&lt;/code&gt; 接收通知以提供&amp;ldquo; Drag Over&amp;rdquo;反馈效果， &lt;code&gt;DropTarget&lt;/code&gt; 接收通知以提供&amp;ldquo; Drag Under&amp;rdquo;根据所支持的操作和所涉及的数据类型的反馈效果。</target>
        </trans-unit>
        <trans-unit id="a018fd4869a6ee0a6d1fa92b59dcb90f4eaffe64" translate="yes" xml:space="preserve">
          <source>As the user scrolls to a new print service selection, the values copied are based on the settings for the previous service, together with any user changes. The values are not based on the original settings supplied by the client.</source>
          <target state="translated">当用户滚动到一个新的打印服务选择时,复制的值将基于前一个服务的设置以及任何用户更改。这些值不是基于客户端提供的原始设置。</target>
        </trans-unit>
        <trans-unit id="c24ced3aee59d1f2dd37a59962b90aa7b6659d75" translate="yes" xml:space="preserve">
          <source>As this formatter has an optional element, it may be necessary to parse using &lt;a href=&quot;#parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery...)&quot;&gt;&lt;code&gt;parseBest(java.lang.CharSequence, java.time.temporal.TemporalQuery&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于此格式化程序具有可选元素，因此可能有必要使用&lt;a href=&quot;#parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery...)&quot;&gt; &lt;code&gt;parseBest(java.lang.CharSequence, java.time.temporal.TemporalQuery&amp;lt;?&amp;gt;...)&lt;/code&gt; &lt;/a&gt;进行解析。</target>
        </trans-unit>
        <trans-unit id="63b2cbf6bbb7a70620dccb2c42662a47a39ad720" translate="yes" xml:space="preserve">
          <source>As this formatter has an optional element, it may be necessary to parse using &lt;a href=&quot;datetimeformatter#parseBest-java.lang.CharSequence-java.time.temporal.TemporalQuery...-&quot;&gt;&lt;code&gt;parseBest(java.lang.CharSequence, java.time.temporal.TemporalQuery&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于此格式化程序具有可选元素，因此可能有必要使用&lt;a href=&quot;datetimeformatter#parseBest-java.lang.CharSequence-java.time.temporal.TemporalQuery...-&quot;&gt; &lt;code&gt;parseBest(java.lang.CharSequence, java.time.temporal.TemporalQuery&amp;lt;?&amp;gt;...)&lt;/code&gt; &lt;/a&gt;进行解析。</target>
        </trans-unit>
        <trans-unit id="a90cb6e4f589014bf7857aa07948c0333ab20879" translate="yes" xml:space="preserve">
          <source>As usual, the &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;:&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; can be omitted.</source>
          <target state="translated">与往常一样，可以省略 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 和 &lt;code&gt;:&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7535c46dcf2769b40f61ad05b1ea40757f5b181c" translate="yes" xml:space="preserve">
          <source>As when creating a &lt;code&gt;Configuration&lt;/code&gt;, &lt;a href=&quot;module/moduledescriptor#isAutomatic()&quot;&gt;&lt;code&gt;automatic&lt;/code&gt;&lt;/a&gt; modules receive special treatment when creating a layer. An automatic module is created in the Java virtual machine as a &lt;code&gt;Module&lt;/code&gt; that reads every unnamed &lt;code&gt;
 Module&lt;/code&gt; in the Java virtual machine.</source>
          <target state="translated">与创建 &lt;code&gt;Configuration&lt;/code&gt; 一样，&lt;a href=&quot;module/moduledescriptor#isAutomatic()&quot;&gt; &lt;code&gt;automatic&lt;/code&gt; &lt;/a&gt;模块在创建图层时会受到特殊对待。一种自动模块在Java虚拟机创建为一个 &lt;code&gt;Module&lt;/code&gt; ，其读取每无名 &lt;code&gt; Module&lt;/code&gt; 在Java虚拟机。</target>
        </trans-unit>
        <trans-unit id="d986f1c6b5fc10c93dce9af4e60795f3b2310ad7" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt;, the view of a file provided by an instance of this class is guaranteed to be consistent with other views of the same file provided by other instances in the same program. The view provided by an instance of this class may or may not, however, be consistent with the views seen by other concurrently-running programs due to caching performed by the underlying operating system and delays induced by network-filesystem protocols. This is true regardless of the language in which these other programs are written, and whether they are running on the same machine or on some other machine. The exact nature of any such inconsistencies are system-dependent and are therefore unspecified.</source>
          <target state="translated">与&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; 一样&lt;/a&gt;，可以保证由此类的实例提供的文件视图与同一程序中其他实例提供的同一文件的其他视图一致。但是，由于底层操作系统执行的缓存和网络文件系统协议引起的延迟，此类实例提供的视图可能与其他并发运行的程序所见的视图一致，也可能不一致。不管这些其他程序的编写语言是什么，以及它们是在同一台计算机上还是在其他计算机上运行，​​都是如此。任何此类不一致的确切性质都取决于系统，因此未指定。</target>
        </trans-unit>
        <trans-unit id="7321b4553d4be1009088b0499507fe54640c853f" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;JobImpressions&lt;/code&gt; value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the number of impressions in the source document data, rather than a measure of the number of impressions to be produced by the job.</source>
          <target state="translated">与&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; 一样&lt;/a&gt;，由于嵌入在文档数据中的复制指令， &lt;code&gt;JobImpressions&lt;/code&gt; 值也必须不包含乘法因子。如果文档数据实际上包括文档数据的复制，则此值将包括此类复制。换句话说，此值始终是源文档数据中的印象数，而不是作业要产生的印象数的度量。</target>
        </trans-unit>
        <trans-unit id="0dd8db7d1efbbb6b79d2c73ecc53bb267bfa661c" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;JobImpressions&lt;/code&gt; value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and reflects the size of the document(s) measured in impressions independent of the number of copies.</source>
          <target state="translated">与&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; 一样&lt;/a&gt;， &lt;code&gt;JobImpressions&lt;/code&gt; 值不得包含由&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性指定的副本数所贡献的乘法因子，而与设备是否可以在不对作业或文档数据进行多次传递的情况下处理多个副本无关，并且与输出是否是否整理。因此，该值与实现方式无关，并且反映了以印象数衡量的文档大小，与副本数量无关。</target>
        </trans-unit>
        <trans-unit id="d0a1adff4be253570aae7c70e7723a214fe98ebb" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt;, the JobImpressions value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the number of impressions in the source document data, rather than a measure of the number of impressions to be produced by the job.</source>
          <target state="translated">与&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; 一样&lt;/a&gt;，由于嵌入在文档数据中的复制指令，JobImpressions值也必须不包含乘法因子。如果文档数据实际上包括文档数据的复制，则此值将包括此类复制。换句话说，此值始终是源文档数据中的印象数，而不是作业要产生的印象数的度量。</target>
        </trans-unit>
        <trans-unit id="f5f9f9939fad21a9bd4b811bb57e093c751929f2" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt;, the JobImpressions value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and reflects the size of the document(s) measured in impressions independent of the number of copies.</source>
          <target state="translated">与&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; 一样&lt;/a&gt;，JobImpressions值不得包含由&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性指定的副本数所贡献的乘法因子，而与设备是否可以在不对作业或文档数据进行多次传递的情况下处理多个副本无关，并且与输出是否相关是否整理。因此，该值与实现方式无关，并且反映了以印象数衡量的文档大小，与副本数量无关。</target>
        </trans-unit>
        <trans-unit id="a2723d228f118c016a25042ee3a660575455f1bc" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ActionMap&lt;/code&gt; if you create a cycle, eg:</source>
          <target state="translated">与 &lt;code&gt;ActionMap&lt;/code&gt; 一样,如果您创建一个循环，例如：</target>
        </trans-unit>
        <trans-unit id="f6b36971863105d539cbb564dc7a3ad1e3ebc632" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;InputMap&lt;/code&gt; if you create a cycle, eg:</source>
          <target state="translated">与 &lt;code&gt;InputMap&lt;/code&gt; 一样,如果您创建一个循环，例如：</target>
        </trans-unit>
        <trans-unit id="6fc6e5c3cc00733d1ff1b8546cc74f47994bb5e7" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;Object.equals()&lt;/code&gt;, the notion of ordering for names depends on the class that implements this interface. For example, the ordering may be based on lexicographical ordering of the name components. Specific attributes of the name, such as how it treats case, may affect the ordering. In general, two names of different classes may not be compared.</source>
          <target state="translated">与 &lt;code&gt;Object.equals()&lt;/code&gt; 一样，名称排序的概念取决于实现此接口的类。例如，排序可以基于名称成分的字典顺序。名称的特定属性（例如，大小写如何）可能会影响顺序。通常，不能比较两个不同类别的名称。</target>
        </trans-unit>
        <trans-unit id="c6a98742073e2df8125e467c41af37aa99b7823a" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;, if not otherwise specified, this class uses &lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; as the default thread factory, and &lt;a href=&quot;threadpoolexecutor.abortpolicy&quot;&gt;&lt;code&gt;ThreadPoolExecutor.AbortPolicy&lt;/code&gt;&lt;/a&gt; as the default rejected execution handler.</source>
          <target state="translated">与 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 一样，如果未另行指定，则此类使用&lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;作为默认线程工厂，并使用&lt;a href=&quot;threadpoolexecutor.abortpolicy&quot;&gt; &lt;code&gt;ThreadPoolExecutor.AbortPolicy&lt;/code&gt; &lt;/a&gt;作为默认拒绝执行处理程序。</target>
        </trans-unit>
        <trans-unit id="b749bece098f77ecadbb1923dbff8752bd9d9094" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;java.awt.datatransfer.StringSelection&lt;/code&gt;, if the requested flavor is &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;, or an equivalent flavor, a Reader is returned. &lt;b&gt;Note:&lt;/b&gt; The behavior of the system Clipboard's &lt;code&gt;getTransferData()&lt;/code&gt; method for &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;, and equivalent DataFlavors, is inconsistent with the definition of &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;. Because of this, support for &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;, and equivalent flavors, is &lt;b&gt;deprecated&lt;/b&gt;.</source>
          <target state="translated">与 &lt;code&gt;java.awt.datatransfer.StringSelection&lt;/code&gt; 一样，如果请求的风味是 &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 或等效的风味，则返回Reader。&lt;b&gt;注：&lt;/b&gt;系统剪贴板的的行为 &lt;code&gt;getTransferData()&lt;/code&gt; 的方法 &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 和等价DataFlavor与定义不一致 &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 。因此，&lt;b&gt;不赞成使用&lt;/b&gt; &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 和等效的&lt;b&gt;样式&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="262554f67a3eea86592c01186bc8f29566223708" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;reduce()&lt;/code&gt;, a benefit of expressing &lt;code&gt;collect&lt;/code&gt; in this abstract way is that it is directly amenable to parallelization: we can accumulate partial results in parallel and then combine them, so long as the accumulation and combining functions satisfy the appropriate requirements. For example, to collect the String representations of the elements in a stream into an &lt;code&gt;ArrayList&lt;/code&gt;, we could write the obvious sequential for-each form:</source>
          <target state="translated">与 &lt;code&gt;reduce()&lt;/code&gt; 一样，以这种抽象方式表示 &lt;code&gt;collect&lt;/code&gt; 的好处是它可以直接并行化：只要累加和合并函数满足适当的要求，我们可以并行累加部分结果，然后将它们组合。例如，要将流中元素的String表示形式收集到 &lt;code&gt;ArrayList&lt;/code&gt; 中，我们可以编写明显的顺序for-each形式：</target>
        </trans-unit>
        <trans-unit id="ede03b687b41f48e7233661bb939683685897780" translate="yes" xml:space="preserve">
          <source>As with any reflected method, these methods (when reflected) may be invoked directly via &lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;, via JNI, or indirectly via &lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt;. However, such reflective calls do not result in access mode method invocations. Such a call, if passed the required argument (a single one, of type &lt;code&gt;Object[]&lt;/code&gt;), will ignore the argument and will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">与任何反射方法一样，可以直接通过&lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt; &lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt; &lt;/a&gt;，通过JNI或通过&lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt;间接调用这些方法（在反射时）。但是，此类反射调用不会导致访问模式方法调用。这样的调用如果传递了所需的参数（单个参数，类型为 &lt;code&gt;Object[]&lt;/code&gt; ），则将忽略该参数并抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6333d66ae19067718314b731c9a438823931dc0f" translate="yes" xml:space="preserve">
          <source>As with any reflected method, these methods (when reflected) may be invoked via &lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;. However, such reflective calls do not result in method handle invocations. Such a call, if passed the required argument (a single one, of type &lt;code&gt;Object[]&lt;/code&gt;), will ignore the argument and will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">与任何反射方法一样，可以通过&lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt; &lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt; &lt;/a&gt;调用这些方法（反射时）。但是，此类反射调用不会导致方法句柄调用。这样的调用如果传递了所需的参数（单个参数，类型为 &lt;code&gt;Object[]&lt;/code&gt; ），则将忽略该参数并抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="896d64f648c747af5597747b989014908d267502" translate="yes" xml:space="preserve">
          <source>As with any reflected method, these methods (when reflected) may be invoked via &lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;. However, such reflective calls do not result in method handle invocations. Such a call, if passed the required argument (a single one, of type &lt;code&gt;Object[]&lt;/code&gt;), will ignore the argument and will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">与任何反射方法一样，可以通过&lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt; &lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt; &lt;/a&gt;调用这些方法（反射时）。但是，此类反射调用不会导致方法句柄调用。这样的调用如果传递了必需的参数（单个参数，类型为 &lt;code&gt;Object[]&lt;/code&gt; ），则将忽略该参数并抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b9b6e0ef7ecc1f48f3ff6c34453251a64104c1e" translate="yes" xml:space="preserve">
          <source>As with automatic modules, the contents of a packaged or exploded module may need to be &lt;em&gt;scanned&lt;/em&gt; in order to determine the packages in the module. Whether &lt;a href=&quot;../../nio/file/files#isHidden(java.nio.file.Path)&quot;&gt;hidden files&lt;/a&gt; are ignored or not is implementation specific and therefore not specified. If a &lt;code&gt;.class&lt;/code&gt; file (other than &lt;code&gt;
 module-info.class&lt;/code&gt;) is found in the top-level directory then it is assumed to be a class in the unnamed package and so &lt;code&gt;FindException&lt;/code&gt; is thrown.</source>
          <target state="translated">与自动模块一样，可能需要&lt;em&gt;扫描&lt;/em&gt;已包装或已分解模块的内容，以确定模块中的包装。&lt;a href=&quot;../../nio/file/files#isHidden(java.nio.file.Path)&quot;&gt;隐藏文件&lt;/a&gt;是否被忽略是特定于实现的，因此未指定。如果在顶级目录中找到 &lt;code&gt;.class&lt;/code&gt; 文件（不是 &lt;code&gt; module-info.class&lt;/code&gt; ），则假定它是未命名包中的类，因此抛出 &lt;code&gt;FindException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9011646c18b6a1b541565467e477948b20784f1" translate="yes" xml:space="preserve">
          <source>As with other &lt;a href=&quot;../../../java.base/java/security/permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; objects, an MBeanPermission can represent either a permission that you &lt;em&gt;have&lt;/em&gt; or a permission that you &lt;em&gt;need&lt;/em&gt;. When a sensitive operation is being checked for permission, an MBeanPermission is constructed representing the permission you need. The operation is only allowed if the permissions you have &lt;a href=&quot;#implies(java.security.Permission)&quot;&gt;imply&lt;/a&gt; the permission you need.</source>
          <target state="translated">与其他&lt;a href=&quot;../../../java.base/java/security/permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;对象一样，MBeanPermission可以表示您&lt;em&gt;具有&lt;/em&gt;的权限或&lt;em&gt;需要&lt;/em&gt;的权限。在检查敏感操作的权限时，将构造一个MBeanPermission，表示您需要的权限。仅当您拥有的权限&lt;a href=&quot;#implies(java.security.Permission)&quot;&gt;暗含&lt;/a&gt;所需的权限时，才允许执行该操作。</target>
        </trans-unit>
        <trans-unit id="cba2c61f7f99bc01a53a595cc3d12bcd79fb3392" translate="yes" xml:space="preserve">
          <source>As with other &lt;a href=&quot;../../java/security/permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; objects, an MBeanPermission can represent either a permission that you &lt;em&gt;have&lt;/em&gt; or a permission that you &lt;em&gt;need&lt;/em&gt;. When a sensitive operation is being checked for permission, an MBeanPermission is constructed representing the permission you need. The operation is only allowed if the permissions you have &lt;a href=&quot;mbeanpermission#implies-java.security.Permission-&quot;&gt;imply&lt;/a&gt; the permission you need.</source>
          <target state="translated">与其他&lt;a href=&quot;../../java/security/permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt;对象一样，MBeanPermission可以表示您&lt;em&gt;具有&lt;/em&gt;的权限或&lt;em&gt;需要&lt;/em&gt;的权限。在检查敏感操作的权限时，将构造一个MBeanPermission，表示您需要的权限。仅当您拥有的权限&lt;a href=&quot;mbeanpermission#implies-java.security.Permission-&quot;&gt;暗含&lt;/a&gt;所需的权限时，才允许执行该操作。</target>
        </trans-unit>
        <trans-unit id="e99dc2c6441f0c0cb81841bcf0e2788829832e10" translate="yes" xml:space="preserve">
          <source>As with other &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; subclasses, a method is provided that returns string labels for the values, suitable for display in the user interface.</source>
          <target state="translated">与其他 &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 子类一样，提供了一种方法，该方法返回值的字符串标签，适合在用户界面中显示。</target>
        </trans-unit>
        <trans-unit id="65f9ecf9281d455ff39c6145c2b79da2e1fe863c" translate="yes" xml:space="preserve">
          <source>As with other &lt;code&gt;Control&lt;/code&gt; subclasses, a method is provided that returns string labels for the values, suitable for display in the user interface.</source>
          <target state="translated">与其他 &lt;code&gt;Control&lt;/code&gt; 子类一样，提供了一种方法，该方法返回值的字符串标签，适合在用户界面中显示。</target>
        </trans-unit>
        <trans-unit id="1246ab44696837b0652fc305b2d39edc07ce22ac" translate="yes" xml:space="preserve">
          <source>As with pooled connections, connections made via a &lt;code&gt;DataSource&lt;/code&gt; object that is implemented to work with the middle tier infrastructure may participate in distributed transactions. This gives an application the ability to involve data sources on multiple servers in a single transaction.</source>
          <target state="translated">与池连接一样，通过实现与中间层基础结构一起使用的 &lt;code&gt;DataSource&lt;/code&gt; 对象进行的连接可能会参与分布式事务。这使应用程序能够在单个事务中包含多个服务器上的数据源。</target>
        </trans-unit>
        <trans-unit id="615d032dca7df7a5c842602da0a20b505578a94e" translate="yes" xml:space="preserve">
          <source>As with selectors, the implementation of asynchronous channels can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific asynchronous I/O mechanisms when very high performance is required.</source>
          <target state="translated">与选择器一样，可以通过&amp;ldquo;插入&amp;rdquo; &lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.channels.spi&lt;/code&gt; &lt;/a&gt;包中定义的&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;类的替代定义或实例来替换异步通道的实现。预计不会有许多开发人员实际使用此功能。它主要是为了使高级用户在需要非常高的性能时可以利用特定于操作系统的异步I / O机制。</target>
        </trans-unit>
        <trans-unit id="e5a81f92999bbe8bb40deddaac7c56d7ffe984df" translate="yes" xml:space="preserve">
          <source>As with selectors, the implementation of asynchronous channels can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific asynchronous I/O mechanisms when very high performance is required.</source>
          <target state="translated">与选择器一样，可以通过&amp;ldquo;插入&amp;rdquo; &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 包中定义的&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;类的替代定义或实例来替换异步通道的实现。预计不会有许多开发人员实际使用此功能。它主要是为了使高级用户在需要非常高的性能时可以利用特定于操作系统的异步I / O机制。</target>
        </trans-unit>
        <trans-unit id="d1a83689cc07dbd288340afb585c2ad8fe118e29" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;#delete(java.nio.file.Path)&quot;&gt;&lt;code&gt;delete(Path)&lt;/code&gt;&lt;/a&gt; method, an implementation may need to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link, then the symbolic link itself, not the final target of the link, is deleted.</source>
          <target state="translated">与&lt;a href=&quot;#delete(java.nio.file.Path)&quot;&gt; &lt;code&gt;delete(Path)&lt;/code&gt; &lt;/a&gt;方法一样，实现可能需要检查文件以确定该文件是否为目录。因此，相对于其他文件系统操作，此方法可能不是原子的。如果文件是符号链接，则将删除符号链接本身而不是链接的最终目标。</target>
        </trans-unit>
        <trans-unit id="58c9e0627883470188162f1617620dbcb74e8a35" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt;&lt;code&gt;findWithinHorizon()&lt;/code&gt;&lt;/a&gt; methods, this method might block waiting for additional input, and it might buffer an unbounded amount of input searching for a match.</source>
          <target state="translated">与&lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt; &lt;code&gt;findWithinHorizon()&lt;/code&gt; &lt;/a&gt;方法一样，此方法可能会阻止等待其他输入，并且可能会缓冲无限制的搜索匹配项。</target>
        </trans-unit>
        <trans-unit id="8da4a35fbeea42792bb871fcaaaff80c1a8f2297" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete(Path)&lt;/code&gt;&lt;/a&gt; method, an implementation may need to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link, then the symbolic link itself, not the final target of the link, is deleted.</source>
          <target state="translated">与&lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete(Path)&lt;/code&gt; &lt;/a&gt;方法一样，实现可能需要检查文件以确定该文件是否为目录。因此，相对于其他文件系统操作，此方法可能不是原子的。如果文件是符号链接，则将删除符号链接本身而不是链接的最终目标。</target>
        </trans-unit>
        <trans-unit id="892068b5185e5337e67f6c48a31993f2577028e8" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;File.createTempFile&lt;/code&gt; methods, this method is only part of a temporary-file facility. Where used as a &lt;em&gt;work files&lt;/em&gt;, the resulting file may be opened using the &lt;a href=&quot;standardopenoption#DELETE_ON_CLOSE&quot;&gt;&lt;code&gt;DELETE_ON_CLOSE&lt;/code&gt;&lt;/a&gt; option so that the file is deleted when the appropriate &lt;code&gt;close&lt;/code&gt; method is invoked. Alternatively, a &lt;a href=&quot;../../lang/runtime#addShutdownHook(java.lang.Thread)&quot;&gt;&lt;code&gt;shutdown-hook&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;../../io/file#deleteOnExit()&quot;&gt;&lt;code&gt;File.deleteOnExit()&lt;/code&gt;&lt;/a&gt; mechanism may be used to delete the file automatically.</source>
          <target state="translated">与 &lt;code&gt;File.createTempFile&lt;/code&gt; 方法一样，此方法仅是临时文件工具的一部分。在用作&lt;em&gt;工作文件的情况下&lt;/em&gt;，可以使用&lt;a href=&quot;standardopenoption#DELETE_ON_CLOSE&quot;&gt; &lt;code&gt;DELETE_ON_CLOSE&lt;/code&gt; &lt;/a&gt;选项打开生成的文件，以便在调用适当的 &lt;code&gt;close&lt;/code&gt; 方法时删除该文件。或者，可以使用&lt;a href=&quot;../../lang/runtime#addShutdownHook(java.lang.Thread)&quot;&gt; &lt;code&gt;shutdown-hook&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/file#deleteOnExit()&quot;&gt; &lt;code&gt;File.deleteOnExit()&lt;/code&gt; &lt;/a&gt;机制来自动删除文件。</target>
        </trans-unit>
        <trans-unit id="29a261b6a09fb814b4bbbcd5aab921703e3b7193" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;File.createTempFile&lt;/code&gt; methods, this method is only part of a temporary-file facility. Where used as a &lt;em&gt;work files&lt;/em&gt;, the resulting file may be opened using the &lt;a href=&quot;standardopenoption#DELETE_ON_CLOSE&quot;&gt;&lt;code&gt;DELETE_ON_CLOSE&lt;/code&gt;&lt;/a&gt; option so that the file is deleted when the appropriate &lt;code&gt;close&lt;/code&gt; method is invoked. Alternatively, a &lt;a href=&quot;../../lang/runtime#addShutdownHook-java.lang.Thread-&quot;&gt;&lt;code&gt;shutdown-hook&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;../../io/file#deleteOnExit--&quot;&gt;&lt;code&gt;File.deleteOnExit()&lt;/code&gt;&lt;/a&gt; mechanism may be used to delete the file automatically.</source>
          <target state="translated">与 &lt;code&gt;File.createTempFile&lt;/code&gt; 方法一样，此方法只是临时文件工具的一部分。在用作&lt;em&gt;工作文件的情况下&lt;/em&gt;，可以使用&lt;a href=&quot;standardopenoption#DELETE_ON_CLOSE&quot;&gt; &lt;code&gt;DELETE_ON_CLOSE&lt;/code&gt; &lt;/a&gt;选项打开生成的文件，以便在调用适当的 &lt;code&gt;close&lt;/code&gt; 方法时删除该文件。或者，可以使用&lt;a href=&quot;../../lang/runtime#addShutdownHook-java.lang.Thread-&quot;&gt; &lt;code&gt;shutdown-hook&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/file#deleteOnExit--&quot;&gt; &lt;code&gt;File.deleteOnExit()&lt;/code&gt; &lt;/a&gt;机制来自动删除文件。</target>
        </trans-unit>
        <trans-unit id="7317926a77bc48bf845c713c6d355a6885acef73" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;createTempFile&lt;/code&gt; methods, this method is only part of a temporary-file facility. A &lt;a href=&quot;../../lang/runtime#addShutdownHook(java.lang.Thread)&quot;&gt;&lt;code&gt;shutdown-hook&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;../../io/file#deleteOnExit()&quot;&gt;&lt;code&gt;File.deleteOnExit()&lt;/code&gt;&lt;/a&gt; mechanism may be used to delete the directory automatically.</source>
          <target state="translated">与 &lt;code&gt;createTempFile&lt;/code&gt; 方法一样，此方法只是临时文件工具的一部分。可以使用&lt;a href=&quot;../../lang/runtime#addShutdownHook(java.lang.Thread)&quot;&gt; &lt;code&gt;shutdown-hook&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/file#deleteOnExit()&quot;&gt; &lt;code&gt;File.deleteOnExit()&lt;/code&gt; &lt;/a&gt;机制来自动删除目录。</target>
        </trans-unit>
        <trans-unit id="326ad63f1918b9c85c6453ad60621a5368927b46" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;createTempFile&lt;/code&gt; methods, this method is only part of a temporary-file facility. A &lt;a href=&quot;../../lang/runtime#addShutdownHook-java.lang.Thread-&quot;&gt;&lt;code&gt;shutdown-hook&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;../../io/file#deleteOnExit--&quot;&gt;&lt;code&gt;File.deleteOnExit()&lt;/code&gt;&lt;/a&gt; mechanism may be used to delete the directory automatically.</source>
          <target state="translated">与 &lt;code&gt;createTempFile&lt;/code&gt; 方法一样，此方法只是临时文件工具的一部分。可以使用&lt;a href=&quot;../../lang/runtime#addShutdownHook-java.lang.Thread-&quot;&gt; &lt;code&gt;shutdown-hook&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/file#deleteOnExit--&quot;&gt; &lt;code&gt;File.deleteOnExit()&lt;/code&gt; &lt;/a&gt;机制来自动删除目录。</target>
        </trans-unit>
        <trans-unit id="07e3b8ba36cadd3e6df85e320488c95b68d911b8" translate="yes" xml:space="preserve">
          <source>As with the regular reduction operation, &lt;code&gt;collect()&lt;/code&gt; operations can only be parallelized if appropriate conditions are met. For any partially accumulated result, combining it with an empty result container must produce an equivalent result. That is, for a partially accumulated result &lt;code&gt;p&lt;/code&gt; that is the result of any series of accumulator and combiner invocations, &lt;code&gt;p&lt;/code&gt; must be equivalent to &lt;code&gt;combiner.apply(p, supplier.get())&lt;/code&gt;.</source>
          <target state="translated">与常规还原操作一样，只有在满足适当条件的情况下， &lt;code&gt;collect()&lt;/code&gt; 操作才能并行化。对于任何部分累加的结果，将其与空结果容器组合必须产生等效的结果。也就是说，对于部分累加结果 &lt;code&gt;p&lt;/code&gt; (它是任何累加器和合并器调用序列的结果）， &lt;code&gt;p&lt;/code&gt; 必须等效于 &lt;code&gt;combiner.apply(p, supplier.get())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcb00a9519c459ce65b7b2341192b1e789fc3248" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;JButton.States&lt;/code&gt; entry lists the states that the JButton style will support. You then specify the settings for each state. If you do not specify the &lt;code&gt;JButton.States&lt;/code&gt; entry, then the standard Synth states will be assumed. If you specify the entry but the list of states is empty or null, then the standard synth states will be assumed.</source>
          <target state="translated">如您所见， &lt;code&gt;JButton.States&lt;/code&gt; 条目列出了JButton样式将支持的状态。然后，您可以为每种状态指定设置。如果未指定 &lt;code&gt;JButton.States&lt;/code&gt; 条目，则将采用标准的Synth状态。如果指定条目但状态列表为空或为空，则将采用标准合成器状态。</target>
        </trans-unit>
        <trans-unit id="ce160b9c85add9848ba5fabe3a06f93d6b3242c4" translate="yes" xml:space="preserve">
          <source>As you can see, the definitions are very similar. The only difference is that the convention for naming the interface is to use &lt;code&gt;&lt;em&gt;Something&lt;/em&gt;MXBean&lt;/code&gt; for MXBeans, rather than &lt;code&gt;&lt;em&gt;Something&lt;/em&gt;MBean&lt;/code&gt; for Standard MBeans.</source>
          <target state="translated">如您所见，定义非常相似。唯一的区别是命名接口的约定是将 &lt;code&gt;&lt;em&gt;Something&lt;/em&gt;MXBean&lt;/code&gt; 用于MXBean，而不是 &lt;code&gt;&lt;em&gt;Something&lt;/em&gt;MBean&lt;/code&gt; 用于标准MBean。</target>
        </trans-unit>
        <trans-unit id="221179f56564f16c3bf0ead01596d6864af0443e" translate="yes" xml:space="preserve">
          <source>Ascending key ordered views and their iterators are faster than descending ones.</source>
          <target state="translated">升序键有序视图及其迭代器比降序视图快。</target>
        </trans-unit>
        <trans-unit id="680836461076e4d9fd895662b650ecbef5e28569" translate="yes" xml:space="preserve">
          <source>Ascending ordered views and their iterators are faster than descending ones.</source>
          <target state="translated">升序视图及其迭代器比降序视图快。</target>
        </trans-unit>
        <trans-unit id="fe7333ede146ba59ba3843df3e7ebb063f3db329" translate="yes" xml:space="preserve">
          <source>Ascertains whether escape processing is enabled for this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">确定是否为此 &lt;code&gt;RowSet&lt;/code&gt; 对象启用了转义处理。</target>
        </trans-unit>
        <trans-unit id="758aa47daf61431b726197da8c21e06dda3dc2f0" translate="yes" xml:space="preserve">
          <source>Ascertains whether the last value read from this &lt;code&gt;SQLInputImpl&lt;/code&gt; object was &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">确定从此 &lt;code&gt;SQLInputImpl&lt;/code&gt; 对象读取的最后一个值是否为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15d9bda45e150bb1a9913fe8f8dfb05cb4ff7c64" translate="yes" xml:space="preserve">
          <source>Aside from some minor deviations noted below, an instance of this class represents a URI reference as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396: Uniform Resource Identifiers (URI): Generic Syntax&lt;/i&gt;&lt;/a&gt;, amended by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;. The Literal IPv6 address format also supports scope_ids. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;. This class provides constructors for creating URI instances from their components or by parsing their string forms, methods for accessing the various components of an instance, and methods for normalizing, resolving, and relativizing URI instances. Instances of this class are immutable.</source>
          <target state="translated">除了下面指出的一些细微差别外，此类的实例还表示&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396（统一资源标识符（URI）：通用语法）&lt;/i&gt;&lt;/a&gt;定义的URI参考，并由&lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732：URL中的文字IPv6地址格式&lt;/i&gt;&lt;/a&gt;修改。文字IPv6地址格式还支持scope_ids。&lt;a href=&quot;inet6address#scoped&quot;&gt;这里&lt;/a&gt;描述scope_ids的语法和用法。此类提供了用于从其组件或通过解析其字符串形式创建URI实例的构造函数，用于访问实例的各种组件的方法以及用于规范化，解析和相对化URI实例的方法。此类的实例是不可变的。</target>
        </trans-unit>
        <trans-unit id="0dae57faef5383ad6dc622ece0c8f5e117789f9e" translate="yes" xml:space="preserve">
          <source>Aside from some minor deviations noted below, an instance of this class represents a URI reference as defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396: Uniform Resource Identifiers (URI): Generic Syntax&lt;/i&gt;&lt;/a&gt;, amended by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;. The Literal IPv6 address format also supports scope_ids. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;. This class provides constructors for creating URI instances from their components or by parsing their string forms, methods for accessing the various components of an instance, and methods for normalizing, resolving, and relativizing URI instances. Instances of this class are immutable.</source>
          <target state="translated">除了下面指出的一些细微差异外，此类的实例还表示URI参考，如&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396：统一资源标识符（URI）：通用语法所定义&lt;/i&gt;&lt;/a&gt;，并由&lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732：URL中的文字IPv6地址格式&lt;/i&gt;&lt;/a&gt;修改。文字IPv6地址格式还支持scope_ids。&lt;a href=&quot;inet6address#scoped&quot;&gt;这里&lt;/a&gt;描述了scope_ids的语法和用法。此类提供了用于从其组件或通过解析其字符串形式创建URI实例的构造函数，用于访问实例的各个组件的方法以及用于规范化，解析和相对化URI实例的方法。此类的实例是不可变的。</target>
        </trans-unit>
        <trans-unit id="b53f94e0b88a8376cd30e61475e0381084d5b75d" translate="yes" xml:space="preserve">
          <source>Ask the authenticator that has been registered with the system for a password.</source>
          <target state="translated">向已在系统中注册的验证者索要密码。</target>
        </trans-unit>
        <trans-unit id="37ce9a9c92de1ff89be39c1eee7738ad15cf079f" translate="yes" xml:space="preserve">
          <source>Ask the authenticator that has been registered with the system for a password. This is the preferred method for requesting a password because the hostname can be provided in cases where the InetAddress is not available.</source>
          <target state="translated">向已在系统中注册的验证者索要密码。这是请求密码的首选方法,因为在没有InetAddress的情况下,可以提供主机名。</target>
        </trans-unit>
        <trans-unit id="dfa2042d74fe5d4408b1711c40259c2e739bf893" translate="yes" xml:space="preserve">
          <source>Ask the editor to start editing and to select everything</source>
          <target state="translated">请编辑开始编辑,并选择所有的东西</target>
        </trans-unit>
        <trans-unit id="c0b0a70195dc1449b91b352575bd84b45a3dc2a0" translate="yes" xml:space="preserve">
          <source>Ask the given &lt;code&gt;authenticator&lt;/code&gt; for a password.</source>
          <target state="translated">向给定的 &lt;code&gt;authenticator&lt;/code&gt; 询问密码。</target>
        </trans-unit>
        <trans-unit id="70685b4b5e5251b8ac4e294cf0f9329f70870415" translate="yes" xml:space="preserve">
          <source>Ask the given &lt;code&gt;authenticator&lt;/code&gt; for a password. If the given &lt;code&gt;authenticator&lt;/code&gt; is null, the authenticator, if any, that has been registered with the system using &lt;a href=&quot;#setDefault(java.net.Authenticator)&quot;&gt;&lt;code&gt;setDefault&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">向给定的 &lt;code&gt;authenticator&lt;/code&gt; 询问密码。如果给定的 &lt;code&gt;authenticator&lt;/code&gt; 为null，则使用已使用&lt;a href=&quot;#setDefault(java.net.Authenticator)&quot;&gt; &lt;code&gt;setDefault&lt;/code&gt; &lt;/a&gt;在系统中注册的身份验证器（如果有）。</target>
        </trans-unit>
        <trans-unit id="2b96067459f9364e53d745b6285496bafb7d8dbc" translate="yes" xml:space="preserve">
          <source>Ask the resource manager to prepare for a transaction commit of the transaction specified in xid.</source>
          <target state="translated">要求资源管理器准备对xid中指定的事务进行事务提交。</target>
        </trans-unit>
        <trans-unit id="2e6bb01b3d9978b9222f3cfc88666046c17032cf" translate="yes" xml:space="preserve">
          <source>Ask this authenticator for a password.</source>
          <target state="translated">向该验证器索要密码。</target>
        </trans-unit>
        <trans-unit id="54a223f32c33573a38b8d6ba7d39910720e9071e" translate="yes" xml:space="preserve">
          <source>Asks a confirming question, like yes/no/cancel.</source>
          <target state="translated">问一个确认问题,如是/否/取消。</target>
        </trans-unit>
        <trans-unit id="e2f0096d1367ce69aa70ecb7503d8a10498a0c06" translate="yes" xml:space="preserve">
          <source>Asks the current input method to reconvert text from the current client component.</source>
          <target state="translated">要求当前输入法重新转换当前客户端组件的文本。</target>
        </trans-unit>
        <trans-unit id="8cbd44a99e0624127211f52983fe7b7a658e42ca" translate="yes" xml:space="preserve">
          <source>Asks the current input method to reconvert text from the current client component. The input method obtains the text to be reconverted from the client component using the &lt;a href=&quot;inputmethodrequests#getSelectedText(java.text.AttributedCharacterIterator.Attribute%5B%5D)&quot;&gt;&lt;code&gt;InputMethodRequests.getSelectedText&lt;/code&gt;&lt;/a&gt; method. The other &lt;code&gt;InputMethodRequests&lt;/code&gt; methods must be prepared to deal with further information requests by the input method. The composed and/or committed text will be sent to the client component as a sequence of &lt;code&gt;InputMethodEvent&lt;/code&gt;s. If the input method cannot reconvert the given text, the text is returned as committed text in an &lt;code&gt;InputMethodEvent&lt;/code&gt;.</source>
          <target state="translated">要求当前输入法重新转换当前客户端组件中的文本。输入方法使用&lt;a href=&quot;inputmethodrequests#getSelectedText(java.text.AttributedCharacterIterator.Attribute%5B%5D)&quot;&gt; &lt;code&gt;InputMethodRequests.getSelectedText&lt;/code&gt; &lt;/a&gt;方法从客户端组件获取要重新转换的文本。必须准备其他 &lt;code&gt;InputMethodRequests&lt;/code&gt; 方法来处理输入方法的进一步信息请求。组成和/或提交的文本将作为 &lt;code&gt;InputMethodEvent&lt;/code&gt; 的序列发送到客户端组件。如果输入法无法重新转换给定的文本，则在 &lt;code&gt;InputMethodEvent&lt;/code&gt; 中将文本作为提交的文本返回。</target>
        </trans-unit>
        <trans-unit id="ac710040d9edd7f70003a1f51cda6c7e543a3c41" translate="yes" xml:space="preserve">
          <source>Asks the editor if it can start editing using &lt;code&gt;anEvent&lt;/code&gt;.</source>
          <target state="translated">询问编辑器是否可以开始使用 &lt;code&gt;anEvent&lt;/code&gt; 编辑。</target>
        </trans-unit>
        <trans-unit id="0fdb7a9cc29fde0e52139a9e114e5c4daef86b3c" translate="yes" xml:space="preserve">
          <source>Asks the editor if it can start editing using &lt;code&gt;anEvent&lt;/code&gt;. &lt;code&gt;anEvent&lt;/code&gt; is in the invoking component coordinate system. The editor can not assume the Component returned by &lt;code&gt;getCellEditorComponent&lt;/code&gt; is installed. This method is intended for the use of client to avoid the cost of setting up and installing the editor component if editing is not possible. If editing can be started this method returns true.</source>
          <target state="translated">询问编辑器是否可以开始使用 &lt;code&gt;anEvent&lt;/code&gt; 编辑。 &lt;code&gt;anEvent&lt;/code&gt; 在调用组件坐标系中。编辑器不能假定安装了 &lt;code&gt;getCellEditorComponent&lt;/code&gt; 返回的Component 。如果无法进行编辑，则此方法旨在供客户端使用，以避免设置和安装编辑器组件的成本。如果可以开始编辑，则此方法返回true。</target>
        </trans-unit>
        <trans-unit id="06dde0e10bcd29c0ee90a4753e16bdaa6cc557e1" translate="yes" xml:space="preserve">
          <source>Asks this filter to pre/post-process the given exchange.</source>
          <target state="translated">要求该过滤器对给定的交易所进行预/后处理。</target>
        </trans-unit>
        <trans-unit id="78312fd1df600ceeb2a97bf86d0f751dabfb9ad4" translate="yes" xml:space="preserve">
          <source>Asks this filter to pre/post-process the given exchange. The filter can:</source>
          <target state="translated">要求该过滤器对给定的交换进行预/后处理。该过滤器可以:</target>
        </trans-unit>
        <trans-unit id="45efd8625e80e75e71f5326b2062c4dfbfa9b66b" translate="yes" xml:space="preserve">
          <source>Assembles system menu.</source>
          <target state="translated">组装系统菜单。</target>
        </trans-unit>
        <trans-unit id="dee4b0d912144613e9938d4cd44f33f545e9693a" translate="yes" xml:space="preserve">
          <source>AssertTree</source>
          <target state="translated">AssertTree</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="72a049221815f87248586556441a46a16237d8e4" translate="yes" xml:space="preserve">
          <source>Assign a value to the &quot;declared&quot; flag of a specific attribute.</source>
          <target state="translated">为特定属性的 &quot;声明 &quot;标志赋值。</target>
        </trans-unit>
        <trans-unit id="3179effeb5d69717e2bad863525aafb9facaa135" translate="yes" xml:space="preserve">
          <source>Assign a value to the &quot;declared&quot; flag of a specific attribute. This is normally needed only for attributes of type CDATA, including attributes whose type is changed to or from CDATA.</source>
          <target state="translated">为特定属性的 &quot;声明 &quot;标志赋值。通常只对CDATA类型的属性需要这样做,包括类型被改为CDATA或从CDATA改为CDATA的属性。</target>
        </trans-unit>
        <trans-unit id="3956cdf51fca4fb0472c212d072a3c40a049bc65" translate="yes" xml:space="preserve">
          <source>Assign a value to the &quot;specified&quot; flag of a specific attribute.</source>
          <target state="translated">为特定属性的 &quot;指定 &quot;标志赋值。</target>
        </trans-unit>
        <trans-unit id="1e54db72810ff4a9f71ddd57a69c6af046c56877" translate="yes" xml:space="preserve">
          <source>Assign a value to the &quot;specified&quot; flag of a specific attribute. This is the only way this flag can be cleared, except clearing by initialization with the copy constructor.</source>
          <target state="translated">为特定属性的 &quot;指定 &quot;标志赋值。这是唯一可以清除这个标志的方法,除非用复制构造函数初始化清除。</target>
        </trans-unit>
        <trans-unit id="e24e824b68118fff14de0778b82b4c9dbfb94b46" translate="yes" xml:space="preserve">
          <source>Assigned</source>
          <target state="translated">Assigned</target>
        </trans-unit>
        <trans-unit id="7bba905b55142579de2a66f6b683b423c3b0fe2f" translate="yes" xml:space="preserve">
          <source>Assigning the value different from listed above will cause an unspecified behavior.</source>
          <target state="translated">如果指定与上述不同的值,将导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="aba7f8ea24d1d89adf7ccf6191e29dc4d229e16e" translate="yes" xml:space="preserve">
          <source>Assigning the value different from listed above will cause unspecified behavior.</source>
          <target state="translated">如果指定与上述不同的值,将导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="cb45aeee3f3b149b4fc58059e7b5b1f2f0cba7bb" translate="yes" xml:space="preserve">
          <source>AssignmentTree</source>
          <target state="translated">AssignmentTree</target>
        </trans-unit>
        <trans-unit id="feb44de01dc8a4662fb53826bfc183a924d5cecb" translate="yes" xml:space="preserve">
          <source>Assigns a label to this option group.</source>
          <target state="translated">为该选项组指定一个标签。</target>
        </trans-unit>
        <trans-unit id="dfcec30e3e9a474fc1350c3d5f81ef3cfeed3faf" translate="yes" xml:space="preserve">
          <source>Assigns a label to this option group. See the label attribute definition in HTML 4.0.</source>
          <target state="translated">为这个选项组指定一个标签。参见HTML 4.0中的标签属性定义。</target>
        </trans-unit>
        <trans-unit id="852dbb53c173a49101772c0f25442c6ccfb20602" translate="yes" xml:space="preserve">
          <source>Assigns a new value to a cookie after the cookie is created.</source>
          <target state="translated">在创建cookie后为cookie分配一个新的值。</target>
        </trans-unit>
        <trans-unit id="b52d10a10654b41ea61d70d7f65aa92071dd4dd3" translate="yes" xml:space="preserve">
          <source>Assigns a new value to a cookie after the cookie is created. If you use a binary value, you may want to use BASE64 encoding.</source>
          <target state="translated">在创建cookie后为cookie分配一个新的值。如果您使用二进制值,您可能需要使用BASE64编码。</target>
        </trans-unit>
        <trans-unit id="6fe908b687fa7a787c124faff3c9e602f0ff2373" translate="yes" xml:space="preserve">
          <source>Assigns a value to a static field.</source>
          <target state="translated">为静态字段赋值。</target>
        </trans-unit>
        <trans-unit id="21b9a36bbe815af5a7224a9558cd9257f9d90f8b" translate="yes" xml:space="preserve">
          <source>Assigns a value to a static field. The &lt;a href=&quot;field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; must be valid for this ClassType; that is, it must be from the mirrored object's class or a superclass of that class. The field must not be final.</source>
          <target state="translated">为静态字段分配一个值。该&lt;a href=&quot;field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;必须对此ClassType有效；也就是说，它必须来自镜像对象的类或该类的超类。该字段不得为最终字段。</target>
        </trans-unit>
        <trans-unit id="4c6ec57416daeb7e1bf901725b6c77e9ee388e56" translate="yes" xml:space="preserve">
          <source>Assigns default positions to each glyph in this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">为该 &lt;code&gt;GlyphVector&lt;/code&gt; 中的每个字形分配默认位置。</target>
        </trans-unit>
        <trans-unit id="a3a33595b5d4599556bcefe95e14bfa5c59089f3" translate="yes" xml:space="preserve">
          <source>Assigns default positions to each glyph in this &lt;code&gt;GlyphVector&lt;/code&gt;. This can destroy information generated during initial layout of this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">为该 &lt;code&gt;GlyphVector&lt;/code&gt; 中的每个字形分配默认位置。这可能会破坏此 &lt;code&gt;GlyphVector&lt;/code&gt; 的初始布局期间生成的信息。</target>
        </trans-unit>
        <trans-unit id="6c53a3314f445e4a9a4018a59d0a067e552ecb6d" translate="yes" xml:space="preserve">
          <source>Assigns the current value of the encoding property.</source>
          <target state="translated">指定编码属性的当前值。</target>
        </trans-unit>
        <trans-unit id="940caf1a2a99903001af7a3a14c58ce863f86e5c" translate="yes" xml:space="preserve">
          <source>Assigns the current value of the version property.</source>
          <target state="translated">指定版本属性的当前值。</target>
        </trans-unit>
        <trans-unit id="14131902f49a325ec31a2d035fe77e792ea1898a" translate="yes" xml:space="preserve">
          <source>Assigns the given certificate to the given alias.</source>
          <target state="translated">将给定的证书分配给给定的别名。</target>
        </trans-unit>
        <trans-unit id="dd54242e3214e9a11b71c1f7bbbd2c0d26edd181" translate="yes" xml:space="preserve">
          <source>Assigns the given key (that has already been protected) to the given alias.</source>
          <target state="translated">将给定的密钥(已经被保护的)分配给给定的别名。</target>
        </trans-unit>
        <trans-unit id="190310fc8afce66d231a98403c36c4c9c03fcbe3" translate="yes" xml:space="preserve">
          <source>Assigns the given key to the given alias, protecting it with the given password.</source>
          <target state="translated">将给定的密钥分配给给定的别名,用给定的密码保护它。</target>
        </trans-unit>
        <trans-unit id="fa0f1bbf5f4d07b8de90733569bccd093335123e" translate="yes" xml:space="preserve">
          <source>Assigns the given trusted certificate to the given alias.</source>
          <target state="translated">将给定的信任证书分配给给定的别名。</target>
        </trans-unit>
        <trans-unit id="41bb3dd961b066e09527355b3f6b2f0decad0e47" translate="yes" xml:space="preserve">
          <source>Assigns the specified Object reference to each element of the specified array of Objects.</source>
          <target state="translated">将指定的对象引用分配给指定对象数组中的每个元素。</target>
        </trans-unit>
        <trans-unit id="cc29f457a43c6edbf792bb3025852f00001f92b0" translate="yes" xml:space="preserve">
          <source>Assigns the specified Object reference to each element of the specified range of the specified array of Objects.</source>
          <target state="translated">将指定的对象引用分配给指定对象数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="9e6567cd1d0e6b379d3edb1755530e088fdcca25" translate="yes" xml:space="preserve">
          <source>Assigns the specified Object reference to each element of the specified range of the specified array of Objects. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的Object引用分配给指定Object数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="aa97362d123bf088ceb72ad6ec4beca483f4bbd7" translate="yes" xml:space="preserve">
          <source>Assigns the specified boolean value to each element of the specified array of booleans.</source>
          <target state="translated">将指定的布尔值分配给指定的布尔值数组的每个元素。</target>
        </trans-unit>
        <trans-unit id="a9fb44ef9537d0bed01355fa19c92227ce44a2bd" translate="yes" xml:space="preserve">
          <source>Assigns the specified boolean value to each element of the specified range of the specified array of booleans.</source>
          <target state="translated">将指定的布尔值分配给指定布尔数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="19c114567eeb53351e27e40c31941a7cad152ac2" translate="yes" xml:space="preserve">
          <source>Assigns the specified boolean value to each element of the specified range of the specified array of booleans. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的布尔值分配给指定布尔数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="b71da5862ab3bca6cd964d71a1c4b63d88307544" translate="yes" xml:space="preserve">
          <source>Assigns the specified byte value to each element of the specified array of bytes.</source>
          <target state="translated">将指定的字节值分配给指定字节数组的每个元素。</target>
        </trans-unit>
        <trans-unit id="066d0c8db44b64c11d31eaf82ed6f233a443883d" translate="yes" xml:space="preserve">
          <source>Assigns the specified byte value to each element of the specified range of the specified array of bytes.</source>
          <target state="translated">将指定的字节值分配给指定字节数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="aabf230d433b804d69bfbdde2d2bbe871d5db946" translate="yes" xml:space="preserve">
          <source>Assigns the specified byte value to each element of the specified range of the specified array of bytes. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的字节值分配给指定字节数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="a61cd2fecf8872fd26aa3b2bc9d7203ef55288db" translate="yes" xml:space="preserve">
          <source>Assigns the specified char value to each element of the specified array of chars.</source>
          <target state="translated">将指定的char值分配给指定的char数组中的每个元素。</target>
        </trans-unit>
        <trans-unit id="9b9d986a8a5b5cfc53fe22c191d9f02b111d7c7b" translate="yes" xml:space="preserve">
          <source>Assigns the specified char value to each element of the specified range of the specified array of chars.</source>
          <target state="translated">将指定的char值分配给指定的chars数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="bfc01c4cd64169604e3669500d07ccedad5fa31b" translate="yes" xml:space="preserve">
          <source>Assigns the specified char value to each element of the specified range of the specified array of chars. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的char值分配给指定的char数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="aa2949a21b0bda3197dc597b50e2edbadd924d2d" translate="yes" xml:space="preserve">
          <source>Assigns the specified double value to each element of the specified array of doubles.</source>
          <target state="translated">将指定的双倍值分配给指定的双倍数组的每个元素。</target>
        </trans-unit>
        <trans-unit id="d747a12501c41aa9ea13554b2c57fec5aa48a4ae" translate="yes" xml:space="preserve">
          <source>Assigns the specified double value to each element of the specified range of the specified array of doubles.</source>
          <target state="translated">将指定的双倍值分配给指定双倍数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="c2cccf0fbbdc4c631f0191e8949b6b9e251d2e05" translate="yes" xml:space="preserve">
          <source>Assigns the specified double value to each element of the specified range of the specified array of doubles. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的double值分配给指定double数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="548f8d9d8d90319449cd7c1e43c0ddb3165d7cba" translate="yes" xml:space="preserve">
          <source>Assigns the specified float value to each element of the specified array of floats.</source>
          <target state="translated">将指定的浮动值分配给指定的浮动数组的每个元素。</target>
        </trans-unit>
        <trans-unit id="2544a9ca144b11339a617b3d5c9d97a0d4d7169a" translate="yes" xml:space="preserve">
          <source>Assigns the specified float value to each element of the specified range of the specified array of floats.</source>
          <target state="translated">将指定的浮动值分配给指定浮动数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="87f83cba2e8ee29319591b81320b49a9a38a3f77" translate="yes" xml:space="preserve">
          <source>Assigns the specified float value to each element of the specified range of the specified array of floats. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的float值分配给指定的float数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="8ab05d5d5c34361f40aec66e70227fcc60b823b6" translate="yes" xml:space="preserve">
          <source>Assigns the specified int value to each element of the specified array of ints.</source>
          <target state="translated">将指定的int值分配给指定ints数组的每个元素。</target>
        </trans-unit>
        <trans-unit id="15dcd4995be25075436a346bb2447364772538da" translate="yes" xml:space="preserve">
          <source>Assigns the specified int value to each element of the specified range of the specified array of ints.</source>
          <target state="translated">将指定的int值分配给指定ints数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="8ab20ceeff85d29f36f3312d2b8c7695c820d435" translate="yes" xml:space="preserve">
          <source>Assigns the specified int value to each element of the specified range of the specified array of ints. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的int值分配给指定的int数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="8e7cfdfe806edcc64f438c51c5879abbcede733e" translate="yes" xml:space="preserve">
          <source>Assigns the specified long value to each element of the specified array of longs.</source>
          <target state="translated">将指定的long值分配给指定的long数组中的每个元素。</target>
        </trans-unit>
        <trans-unit id="f4cf28244917fe9de5a11c62f7d5f82f3bded36a" translate="yes" xml:space="preserve">
          <source>Assigns the specified long value to each element of the specified range of the specified array of longs.</source>
          <target state="translated">将指定的long值分配给指定的long数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="7c12a444178cac052d8254551cf806e6c839cad0" translate="yes" xml:space="preserve">
          <source>Assigns the specified long value to each element of the specified range of the specified array of longs. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的long值分配给指定的long数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="b0362a5fb07ffcc97a8d631afd78d1343ee6009e" translate="yes" xml:space="preserve">
          <source>Assigns the specified short value to each element of the specified array of shorts.</source>
          <target state="translated">将指定的短线值分配给指定短线数组的每个元素。</target>
        </trans-unit>
        <trans-unit id="b908fdb8daae43487c0422a708e8dfeb85f68cfb" translate="yes" xml:space="preserve">
          <source>Assigns the specified short value to each element of the specified range of the specified array of shorts.</source>
          <target state="translated">将指定的短线值分配给指定短线数组中指定范围的每个元素。</target>
        </trans-unit>
        <trans-unit id="bb589c326208de9d7da93d57ef3ba32112689328" translate="yes" xml:space="preserve">
          <source>Assigns the specified short value to each element of the specified range of the specified array of shorts. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="translated">将指定的short值分配给指定的short数组的指定范围内的每个元素。要填充的范围从索引 &lt;code&gt;fromIndex&lt;/code&gt; （包括在内）到索引 &lt;code&gt;toIndex&lt;/code&gt; （不包括在内）。（如果 &lt;code&gt;fromIndex==toIndex&lt;/code&gt; ，则要填充的范围为空。）</target>
        </trans-unit>
        <trans-unit id="a39e950342c74cb6be62ea68712b0794ec71defa" translate="yes" xml:space="preserve">
          <source>Associate a &lt;code&gt;DropTarget&lt;/code&gt; with this component.</source>
          <target state="translated">将 &lt;code&gt;DropTarget&lt;/code&gt; 与此组件相关联。</target>
        </trans-unit>
        <trans-unit id="3d5ab5a5222dcc5ea4afd28ee96ca88a58abfa6d" translate="yes" xml:space="preserve">
          <source>Associate a &lt;code&gt;DropTarget&lt;/code&gt; with this component. The &lt;code&gt;Component&lt;/code&gt; will receive drops only if it is enabled.</source>
          <target state="translated">将 &lt;code&gt;DropTarget&lt;/code&gt; 与此组件相关联。只有启用该 &lt;code&gt;Component&lt;/code&gt; 该组件才会接收丢弃。</target>
        </trans-unit>
        <trans-unit id="afda1354a3a51a2a4ece66c971df42f00468cfd9" translate="yes" xml:space="preserve">
          <source>Associate a named attribute with this feature.</source>
          <target state="translated">将一个命名的属性与该功能关联起来。</target>
        </trans-unit>
        <trans-unit id="55a8164c7b8d7289d071313db70a61de250d6bb6" translate="yes" xml:space="preserve">
          <source>Associate an object to a key on this node.</source>
          <target state="translated">将一个对象关联到这个节点上的一个键。</target>
        </trans-unit>
        <trans-unit id="7f664988fe3783f9a217e070c6a53a17cd55f4d9" translate="yes" xml:space="preserve">
          <source>Associate an object to a key on this node. The object can later be retrieved from this node by calling &lt;code&gt;getUserData&lt;/code&gt; with the same key.</source>
          <target state="translated">将对象与该节点上的键关联。以后可以通过使用相同的键调用 &lt;code&gt;getUserData&lt;/code&gt; 从此节点检索对象。</target>
        </trans-unit>
        <trans-unit id="fed07227fb7016097478db12f2ca5f4e93599583" translate="yes" xml:space="preserve">
          <source>Associate the newly instantiated Applet with the appropriate AppletContext.</source>
          <target state="translated">将新实例化的Applet与相应的AppletContext关联。</target>
        </trans-unit>
        <trans-unit id="5ea80ee780b44807cfe90a72a283ba223f4cc7d4" translate="yes" xml:space="preserve">
          <source>Associate the provided &lt;code&gt;Subject&lt;/code&gt; with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="translated">将提供的 &lt;code&gt;Subject&lt;/code&gt; 与此 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="96a7869a23b73f3451a0232cf15bec5ea0c63c5f" translate="yes" xml:space="preserve">
          <source>Associate this PrinterJob with a new PrintService.</source>
          <target state="translated">将此PrinterJob与新的PrintService关联。</target>
        </trans-unit>
        <trans-unit id="fe1cb668107f9f3d7fd39778f9092c90c15f0854" translate="yes" xml:space="preserve">
          <source>Associate this PrinterJob with a new PrintService. This method is overridden by subclasses which support specifying a Print Service. Throws &lt;code&gt;PrinterException&lt;/code&gt; if the specified service cannot support the &lt;code&gt;Pageable&lt;/code&gt; and &lt;code&gt;Printable&lt;/code&gt; interfaces necessary to support 2D printing.</source>
          <target state="translated">将此PrinterJob与新的PrintService关联。该方法被支持指定打印服务的子类覆盖。如果指定的服务不能支持支持2D打印所需的 &lt;code&gt;Pageable&lt;/code&gt; 和 &lt;code&gt;Printable&lt;/code&gt; 接口，则引发 &lt;code&gt;PrinterException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e29d38541cd869d3405412eed5b1633671996421" translate="yes" xml:space="preserve">
          <source>Associated</source>
          <target state="translated">Associated</target>
        </trans-unit>
        <trans-unit id="3246840316d0ddc59ad3c49063f2862ee303c3b2" translate="yes" xml:space="preserve">
          <source>Associated information.</source>
          <target state="translated">相关信息。</target>
        </trans-unit>
        <trans-unit id="f33b766b2ca7f60340f64c18e7dd44abd4794549" translate="yes" xml:space="preserve">
          <source>Associated information. See the content attribute definition in HTML 4.0.</source>
          <target state="translated">相关信息。参见HTML 4.0中的内容属性定义。</target>
        </trans-unit>
        <trans-unit id="ab2853b54ff68cc61d43758928563f5524e96c5d" translate="yes" xml:space="preserve">
          <source>Associated with pattern matching for instanceof, a preview feature of the Java language.</source>
          <target state="translated">与模式匹配的instanceof有关,这是Java语言的一个预览功能。</target>
        </trans-unit>
        <trans-unit id="c8ce7ecaed08cad36eddbe2655952c3488a9b2c3" translate="yes" xml:space="preserve">
          <source>Associated with pattern matching for {@code instanceof}, a preview feature of the Java language.</source>
          <target state="translated">与{@code instanceof}的模式匹配有关,这是Java语言的一个预览功能。</target>
        </trans-unit>
        <trans-unit id="92aad05ea7a40fb1731ceb7ae96277b437e5080c" translate="yes" xml:space="preserve">
          <source>Associated with records, a preview feature of the Java language.</source>
          <target state="translated">与记录相关,是Java语言的一个预览功能。</target>
        </trans-unit>
        <trans-unit id="c2c2e91067ff8dd70801ff43a0df716100ca2dea" translate="yes" xml:space="preserve">
          <source>Associated with sealed classes, a preview feature of the Java language.</source>
          <target state="translated">与密封类相关联,是Java语言的一个预览功能。</target>
        </trans-unit>
        <trans-unit id="f50b7fd0df03584f3b5bca62d24db870b1c88efd" translate="yes" xml:space="preserve">
          <source>Associated with the issuance of an event set, suspensions may have occurred in the target VM. These suspensions correspond with the &lt;a href=&quot;#suspendPolicy()&quot;&gt;&lt;code&gt;suspend policy&lt;/code&gt;&lt;/a&gt;. To assure matching resumes occur, it is recommended, where possible, to complete the processing of an event set with &lt;a href=&quot;#resume()&quot;&gt;&lt;code&gt;EventSet.resume()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与事件集的发布相关联，目标VM中可能已发生挂起。这些暂停与&lt;a href=&quot;#suspendPolicy()&quot;&gt; &lt;code&gt;suspend policy&lt;/code&gt; &lt;/a&gt;相对应。为了确保发生匹配的恢复，建议在可能的情况下使用&lt;a href=&quot;#resume()&quot;&gt; &lt;code&gt;EventSet.resume()&lt;/code&gt; &lt;/a&gt;完成事件集的处理。</target>
        </trans-unit>
        <trans-unit id="c56252f4b250dc006a0320b3dbe2ee3bd8d9e4bb" translate="yes" xml:space="preserve">
          <source>Associates a &lt;code&gt;Bindings&lt;/code&gt; instance with a particular scope in this &lt;code&gt;ScriptContext&lt;/code&gt;.</source>
          <target state="translated">相关联的 &lt;code&gt;Bindings&lt;/code&gt; 在这个特定的作用域实例 &lt;code&gt;ScriptContext&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="5b775edadbddda2d7d7523bed597c7f2ffebaac1" translate="yes" xml:space="preserve">
          <source>Associates a &lt;code&gt;Bindings&lt;/code&gt; instance with a particular scope in this &lt;code&gt;ScriptContext&lt;/code&gt;. Calls to the &lt;code&gt;getAttribute&lt;/code&gt; and &lt;code&gt;setAttribute&lt;/code&gt; methods must map to the &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt; methods of the &lt;code&gt;Bindings&lt;/code&gt; for the specified scope.</source>
          <target state="translated">相关联的 &lt;code&gt;Bindings&lt;/code&gt; 在这个特定的作用域实例 &lt;code&gt;ScriptContext&lt;/code&gt; 中。调用 &lt;code&gt;getAttribute&lt;/code&gt; 和 &lt;code&gt;setAttribute&lt;/code&gt; 方法必须映射到指定范围的 &lt;code&gt;Bindings&lt;/code&gt; 的 &lt;code&gt;get&lt;/code&gt; 和 &lt;code&gt;put&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="429c2cbe243b64b1cc542b6771ea7e607e72de21" translate="yes" xml:space="preserve">
          <source>Associates a property with the document.</source>
          <target state="translated">将一个属性与文档关联起来。</target>
        </trans-unit>
        <trans-unit id="561f0cb319ee05eb8f7dd277fd39cbc5f41079e6" translate="yes" xml:space="preserve">
          <source>Associates a property with the document. Two standard property keys provided are: &lt;a href=&quot;#StreamDescriptionProperty&quot;&gt; &lt;code&gt;StreamDescriptionProperty&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#TitleProperty&quot;&gt;&lt;code&gt;TitleProperty&lt;/code&gt;&lt;/a&gt;. Other properties, such as author, may also be defined.</source>
          <target state="translated">将属性与文档关联。提供了两个标准属性键：&lt;a href=&quot;#StreamDescriptionProperty&quot;&gt; &lt;code&gt;StreamDescriptionProperty&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#TitleProperty&quot;&gt; &lt;code&gt;TitleProperty&lt;/code&gt; &lt;/a&gt;。也可以定义其他属性，例如作者。</target>
        </trans-unit>
        <trans-unit id="d77c9190951a1c06534733f64b9cfbabd320492c" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified boolean value with the specified key in this preference node.</source>
          <target state="translated">将代表指定布尔值的字符串与此偏好结点中的指定键关联。</target>
        </trans-unit>
        <trans-unit id="3fad436712ad26a7310dfd53775ac46a6cb4631a" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified boolean value with the specified key in this preference node. The associated string is &lt;code&gt;&quot;true&quot;&lt;/code&gt; if the value is true, and &lt;code&gt;&quot;false&quot;&lt;/code&gt; if it is false. This method is intended for use in conjunction with &lt;a href=&quot;#getBoolean(java.lang.String,boolean)&quot;&gt;&lt;code&gt;getBoolean(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定布尔值的字符串与指定键相关联。如果值为true，则关联的字符串为 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 如果为false，则关联的字符串为&amp;ldquo; &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。此方法旨在与&lt;a href=&quot;#getBoolean(java.lang.String,boolean)&quot;&gt; &lt;code&gt;getBoolean(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="cb1e81826acc11cdd4fd8787f2f261093651dd07" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified boolean value with the specified key in this preference node. The associated string is &lt;code&gt;&quot;true&quot;&lt;/code&gt; if the value is true, and &lt;code&gt;&quot;false&quot;&lt;/code&gt; if it is false. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getBoolean-java.lang.String-boolean-&quot;&gt;&lt;code&gt;getBoolean(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定布尔值的字符串与指定键相关联。如果值为true，则关联的字符串为 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 如果值为false，则关联的字符串为&amp;ldquo; &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。此方法旨在与&lt;a href=&quot;preferences#getBoolean-java.lang.String-boolean-&quot;&gt; &lt;code&gt;getBoolean(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="62ce37159c6c7c1e8fac38ab3d53b3e0b0cbbe84" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified byte array with the specified key in this preference node.</source>
          <target state="translated">将代表指定字节数组的字符串与此偏好结点中的指定键关联起来。</target>
        </trans-unit>
        <trans-unit id="2833c20c864a4a65f2407bd5a5f7c09afc6d20e5" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified byte array with the specified key in this preference node. The associated string is the</source>
          <target state="translated">将代表指定字节数组的字符串与此偏好结点中的指定键关联起来。关联的字符串是</target>
        </trans-unit>
        <trans-unit id="b986481f8eebbd1cfc5e920b04128b1fbbff926d" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified double value with the specified key in this preference node.</source>
          <target state="translated">将代表指定双值的字符串与此偏好节点中的指定键关联。</target>
        </trans-unit>
        <trans-unit id="59b1f3e3783dcc197f8456f3d721d926d9807199" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified double value with the specified key in this preference node. The associated string is the one that would be returned if the double value were passed to &lt;a href=&quot;../../../../java.base/java/lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;#getDouble(java.lang.String,double)&quot;&gt;&lt;code&gt;getDouble(java.lang.String, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定双精度值的字符串与指定键相关联。如果将double值传递给&lt;a href=&quot;../../../../java.base/java/lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;#getDouble(java.lang.String,double)&quot;&gt; &lt;code&gt;getDouble(java.lang.String, double)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="405e98c0ec2e33a2102051245efeb3354d88d37a" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified double value with the specified key in this preference node. The associated string is the one that would be returned if the double value were passed to &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getDouble-java.lang.String-double-&quot;&gt;&lt;code&gt;getDouble(java.lang.String, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定双精度值的字符串与指定键相关联。如果将double值传递给&lt;a href=&quot;../../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;preferences#getDouble-java.lang.String-double-&quot;&gt; &lt;code&gt;getDouble(java.lang.String, double)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="811d93a2d81ac217e884d98ea40501bed7e07b28" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified float value with the specified key in this preference node.</source>
          <target state="translated">将一个代表指定浮动值的字符串与此偏好节点中的指定键关联起来。</target>
        </trans-unit>
        <trans-unit id="265b6ab460e863a9f81e12fae614898938027fb4" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified float value with the specified key in this preference node. The associated string is the one that would be returned if the float value were passed to &lt;a href=&quot;../../../../java.base/java/lang/float#toString(float)&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;#getFloat(java.lang.String,float)&quot;&gt;&lt;code&gt;getFloat(java.lang.String, float)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定浮点值的字符串与指定键相关联。如果将float值传递给&lt;a href=&quot;../../../../java.base/java/lang/float#toString(float)&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;#getFloat(java.lang.String,float)&quot;&gt; &lt;code&gt;getFloat(java.lang.String, float)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="e1a97e7672e7f164eb7d746fc62a23c0bfd82b25" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified float value with the specified key in this preference node. The associated string is the one that would be returned if the float value were passed to &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getFloat-java.lang.String-float-&quot;&gt;&lt;code&gt;getFloat(java.lang.String, float)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定浮点值的字符串与指定键相关联。如果将float值传递给&lt;a href=&quot;../../lang/float#toString-float-&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;preferences#getFloat-java.lang.String-float-&quot;&gt; &lt;code&gt;getFloat(java.lang.String, float)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="3f126d853d1c8c1081d99f7088f1bc511ff589e3" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified int value with the specified key in this preference node.</source>
          <target state="translated">将代表指定int值的字符串与此偏好结点中的指定键关联。</target>
        </trans-unit>
        <trans-unit id="9d82ccd21c0b6c1717de6a0d084f3786544f8d0c" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified int value with the specified key in this preference node. The associated string is the one that would be returned if the int value were passed to &lt;a href=&quot;../../../../java.base/java/lang/integer#toString(int)&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;#getInt(java.lang.String,int)&quot;&gt;&lt;code&gt;getInt(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定的int值的字符串与指定的键相关联。如果将int值传递给&lt;a href=&quot;../../../../java.base/java/lang/integer#toString(int)&quot;&gt; &lt;code&gt;Integer.toString(int)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;#getInt(java.lang.String,int)&quot;&gt; &lt;code&gt;getInt(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="402eba66a399cc572ffcc2bcf5d31eaf5d6758a9" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified int value with the specified key in this preference node. The associated string is the one that would be returned if the int value were passed to &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getInt-java.lang.String-int-&quot;&gt;&lt;code&gt;getInt(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定int值的字符串与指定键相关联。如果将int值传递给&lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt; &lt;code&gt;Integer.toString(int)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;preferences#getInt-java.lang.String-int-&quot;&gt; &lt;code&gt;getInt(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="59874ea1a953f3203589d3f0a64f675b70a05d8e" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified long value with the specified key in this preference node.</source>
          <target state="translated">将代表指定长值的字符串与此偏好节点中的指定键关联。</target>
        </trans-unit>
        <trans-unit id="f50f4e9f4152a2c76a5b968e9850a70d4c665bec" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified long value with the specified key in this preference node. The associated string is the one that would be returned if the long value were passed to &lt;a href=&quot;../../../../java.base/java/lang/long#toString(long)&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;#getLong(java.lang.String,long)&quot;&gt;&lt;code&gt;getLong(java.lang.String, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定长值的字符串与指定键相关联。如果将long值传递给&lt;a href=&quot;../../../../java.base/java/lang/long#toString(long)&quot;&gt; &lt;code&gt;Long.toString(long)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;#getLong(java.lang.String,long)&quot;&gt; &lt;code&gt;getLong(java.lang.String, long)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="72969c845bbda1489fd6757f2f1f88ef6d5c3422" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified long value with the specified key in this preference node. The associated string is the one that would be returned if the long value were passed to &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getLong-java.lang.String-long-&quot;&gt;&lt;code&gt;getLong(java.lang.String, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此首选项节点中，将表示指定长值的字符串与指定键相关联。如果将long值传递给&lt;a href=&quot;../../lang/long#toString-long-&quot;&gt; &lt;code&gt;Long.toString(long)&lt;/code&gt; &lt;/a&gt;，则关联的字符串是将返回的字符串。此方法旨在与&lt;a href=&quot;preferences#getLong-java.lang.String-long-&quot;&gt; &lt;code&gt;getLong(java.lang.String, long)&lt;/code&gt; &lt;/a&gt;结合使用。</target>
        </trans-unit>
        <trans-unit id="9dd3f787ca15bb5eefd28f5c6d487adefe12ce1b" translate="yes" xml:space="preserve">
          <source>Associates the editor with a text document.</source>
          <target state="translated">将编辑器与文本文档关联起来。</target>
        </trans-unit>
        <trans-unit id="9d10851be40e90636ddb547482ce215bee2592b6" translate="yes" xml:space="preserve">
          <source>Associates the editor with a text document. The currently registered factory is used to build a view for the document, which gets displayed by the editor after revalidation. A PropertyChange event (&quot;document&quot;) is propagated to each listener.</source>
          <target state="translated">将编辑器与一个文本文档关联起来。当前注册的工厂用于为文档建立一个视图,编辑器在重新验证后显示该视图。一个PropertyChange事件(&quot;document&quot;)被传播给每个监听器。</target>
        </trans-unit>
        <trans-unit id="aec8b78153861e86f1b3f29002affd38e8f3e461" translate="yes" xml:space="preserve">
          <source>Associates the editor with a text document. The currently registered factory is used to build a view for the document, which gets displayed by the editor.</source>
          <target state="translated">将编辑器与文本文档关联起来。当前注册的工厂用于为文档建立一个视图,并由编辑器显示。</target>
        </trans-unit>
        <trans-unit id="daa90549130d536371136182f14279e9eded26b2" translate="yes" xml:space="preserve">
          <source>Associates the editor with a text document. This must be a &lt;code&gt;StyledDocument&lt;/code&gt;.</source>
          <target state="translated">将编辑器与文本文档相关联。这必须是 &lt;code&gt;StyledDocument&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d8b941f2598d7e75a59544d73f6b3752776225a" translate="yes" xml:space="preserve">
          <source>Associates the given path with the given location. Any previous value will be discarded.</source>
          <target state="translated">将给定的路径与给定的位置关联起来。任何之前的值将被丢弃。</target>
        </trans-unit>
        <trans-unit id="cab030f323008760ae72759c2b396fb5e21f4675" translate="yes" xml:space="preserve">
          <source>Associates the given search path with the given location.</source>
          <target state="translated">将给定的搜索路径与给定的位置关联起来。</target>
        </trans-unit>
        <trans-unit id="4616321ebaa03fd4913b0e71d734f5f832ab37fc" translate="yes" xml:space="preserve">
          <source>Associates the given search path with the given location. Any previous value will be discarded. If the location is a module-oriented or output location, any module-specific associations set up by &lt;a href=&quot;#setLocationForModule(javax.tools.JavaFileManager.Location,java.lang.String,java.util.Collection)&quot;&gt;setLocationForModule&lt;/a&gt; will be cancelled.</source>
          <target state="translated">将给定的搜索路径与给定的位置相关联。任何先前的值将被丢弃。如果该位置是面向模块的位置或输出位置，则&lt;a href=&quot;#setLocationForModule(javax.tools.JavaFileManager.Location,java.lang.String,java.util.Collection)&quot;&gt;setLocationForModule&lt;/a&gt;设置的任何特定于模块的关联都将被取消。</target>
        </trans-unit>
        <trans-unit id="3c5152450c078fcd1b5d69f65f5f1638bb1ed70a" translate="yes" xml:space="preserve">
          <source>Associates the given search path with the given module and location, which must be a module-oriented or output location.</source>
          <target state="translated">将给定的搜索路径与给定的模块和位置关联起来,它必须是面向模块或输出位置。</target>
        </trans-unit>
        <trans-unit id="824f932d85d61d2fb036c594a862d6fed5463dc4" translate="yes" xml:space="preserve">
          <source>Associates the given search path with the given module and location, which must be a module-oriented or output location. Any previous value will be discarded. This overrides any default association derived from the search path associated with the location itself. All such module-specific associations will be cancelled if a new search path is associated with the location by calling &lt;a href=&quot;#setLocation(javax.tools.JavaFileManager.Location,java.lang.Iterable)&quot;&gt;setLocation &lt;/a&gt; or &lt;a href=&quot;#setLocationFromPaths(javax.tools.JavaFileManager.Location,java.util.Collection)&quot;&gt;setLocationFromPaths&lt;/a&gt;.</source>
          <target state="translated">将给定的搜索路径与给定的模块和位置相关联，该模块和位置必须是面向模块的位置或输出位置。任何先前的值将被丢弃。这将覆盖从与位置本身关联的搜索路径派生的任何默认关联。如果通过调用&lt;a href=&quot;#setLocation(javax.tools.JavaFileManager.Location,java.lang.Iterable)&quot;&gt;setLocation&lt;/a&gt;或&lt;a href=&quot;#setLocationFromPaths(javax.tools.JavaFileManager.Location,java.util.Collection)&quot;&gt;setLocationFromPaths&lt;/a&gt;将新的搜索路径与位置相关联，则所有此类特定于模块的关联都将被取消。</target>
        </trans-unit>
        <trans-unit id="ce44901b8fe7b1e5a344bf936e73410fd825cae2" translate="yes" xml:space="preserve">
          <source>Associates the specified message digest with this stream.</source>
          <target state="translated">将指定的消息摘要与此流关联。</target>
        </trans-unit>
        <trans-unit id="4aedc217436104862899bfd917f42c6876d02da2" translate="yes" xml:space="preserve">
          <source>Associates the specified persistence delegate with the given type.</source>
          <target state="translated">将指定的持久化委托与给定的类型联系起来。</target>
        </trans-unit>
        <trans-unit id="c207a1526d3e87d682d33956745f8f28964f5056" translate="yes" xml:space="preserve">
          <source>Associates the specified stream with the specified key in this applet context.</source>
          <target state="translated">将指定的流与此applet上下文中的指定键关联起来。</target>
        </trans-unit>
        <trans-unit id="120587f0aaf1be398039e94df3a080b55cdf7bbb" translate="yes" xml:space="preserve">
          <source>Associates the specified stream with the specified key in this applet context. If the applet context previously contained a mapping for this key, the old value is replaced.</source>
          <target state="translated">将指定的流与此applet上下文中的指定键关联起来。如果applet上下文之前包含了这个键的映射,那么旧的值将被替换。</target>
        </trans-unit>
        <trans-unit id="46394ec7a101b03340a6587004a576409057f8b3" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified attribute name (key) in this Map.</source>
          <target state="translated">将指定的值与此Map中指定的属性名(键)关联起来。</target>
        </trans-unit>
        <trans-unit id="e2d6673941ced8f85bc7d2d31f579905b7989d0a" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified attribute name (key) in this Map. If the Map previously contained a mapping for the attribute name, the old value is replaced.</source>
          <target state="translated">将指定的值与此Map中指定的属性名(键)关联。如果该Map之前包含属性名的映射,则替换旧的值。</target>
        </trans-unit>
        <trans-unit id="39ad33a5d746b83560d42a35681a1da81c0d0770" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified attribute name, specified as a String.</source>
          <target state="translated">将指定的值与指定的属性名关联起来,指定的属性名是一个字符串。</target>
        </trans-unit>
        <trans-unit id="75f2bdf25f7f51dda93e424528bcb2ebe5312dfe" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified attribute name, specified as a String. The attributes name is case-insensitive. If the Map previously contained a mapping for the attribute name, the old value is replaced.</source>
          <target state="translated">将指定的值与指定的属性名关联起来,属性名是一个字符串。属性名不区分大小写。如果Map之前包含了属性名的映射,那么旧的值将被替换。</target>
        </trans-unit>
        <trans-unit id="2fffb6afdcfe9099ae096bc7c0c1aef032d241d5" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this context.</source>
          <target state="translated">在此上下文中,将指定的值与指定的键关联起来。</target>
        </trans-unit>
        <trans-unit id="c73ac59fc30103d3b70a666642f64b986553ac7d" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this context. If the context previously contained a mapping for this key, the old value is replaced by the specified value.</source>
          <target state="translated">将指定的值与此上下文中指定的键关联起来,如果上下文中包含此键的映射,则旧的值被指定的值取代。如果上下文中包含了这个键的映射,那么旧的值就会被指定的值取代。</target>
        </trans-unit>
        <trans-unit id="5af9913790bece6eeec4b6b22d0ac1fc117f1210" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this identity hash map.</source>
          <target state="translated">将指定的值与这个身份哈希图中指定的键关联起来。</target>
        </trans-unit>
        <trans-unit id="0741057f3a2bf120ef2d33699a0aa9512f6a283e" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this identity hash map. If the map previously contained a mapping for the key, the old value is replaced.</source>
          <target state="translated">将指定的值与此身份哈希图中指定的键相关联。如果映射之前包含键的映射,则替换旧的值。</target>
        </trans-unit>
        <trans-unit id="6970d32733ee777a7badb6404c1939ad0c423fd8" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map (optional operation).</source>
          <target state="translated">将指定的值与该图中指定的键关联起来(可选操作)。</target>
        </trans-unit>
        <trans-unit id="27b34f9e23c6cfe9e869dd5dc7451d2d5df38b1d" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map (optional operation). If the map previously contained a mapping for the key, the old value is replaced by the specified value. (A map &lt;code&gt;m&lt;/code&gt; is said to contain a mapping for a key &lt;code&gt;k&lt;/code&gt; if and only if &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt;&lt;code&gt;m.containsKey(k)&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;true&lt;/code&gt;.)</source>
          <target state="translated">将指定值与该映射中的指定键相关联（可选操作）。如果该映射先前包含该键的映射，则将旧值替换为指定的值。（仅当&lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt; &lt;code&gt;m.containsKey(k)&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; 时，才认为映射 &lt;code&gt;m&lt;/code&gt; 包含键 &lt;code&gt;k&lt;/code&gt; 的映射。）</target>
        </trans-unit>
        <trans-unit id="3b2417d854b3d413b72fb5e3655a2c211c281d9d" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map (optional operation). If the map previously contained a mapping for the key, the old value is replaced by the specified value. (A map &lt;code&gt;m&lt;/code&gt; is said to contain a mapping for a key &lt;code&gt;k&lt;/code&gt; if and only if &lt;a href=&quot;map#containsKey(java.lang.Object)&quot;&gt;&lt;code&gt;m.containsKey(k)&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;true&lt;/code&gt;.)</source>
          <target state="translated">将指定值与该映射中的指定键相关联（可选操作）。如果该映射先前包含该键的映射，则将旧值替换为指定的值。（仅当&lt;a href=&quot;map#containsKey(java.lang.Object)&quot;&gt; &lt;code&gt;m.containsKey(k)&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; 时，才认为映射 &lt;code&gt;m&lt;/code&gt; 包含键 &lt;code&gt;k&lt;/code&gt; 的映射。）</target>
        </trans-unit>
        <trans-unit id="ccb82428d35baee9740c6ecdf19fc281e23f9c3d" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map (optional operation). If the map previously contained a mapping for the key, the old value is replaced by the specified value. (A map &lt;code&gt;m&lt;/code&gt; is said to contain a mapping for a key &lt;code&gt;k&lt;/code&gt; if and only if &lt;a href=&quot;map#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;m.containsKey(k)&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;true&lt;/code&gt;.)</source>
          <target state="translated">将指定值与该映射中的指定键相关联（可选操作）。如果该映射先前包含该键的映射，则旧值将替换为指定值。（仅当&lt;a href=&quot;map#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;m.containsKey(k)&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; 时，才认为映射 &lt;code&gt;m&lt;/code&gt; 包含键 &lt;code&gt;k&lt;/code&gt; 的映射。）</target>
        </trans-unit>
        <trans-unit id="36e0d856a6c0dcfe83c15e40aab96415213aa2f9" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map.</source>
          <target state="translated">将指定的值与此地图中指定的键关联起来。</target>
        </trans-unit>
        <trans-unit id="adb578d547a699ec9eca9741fe72aa2e0bdc6674" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map. If the map previously contained a mapping for the key, the old value is replaced.</source>
          <target state="translated">将指定的值与此映射中指定的键相关联,如果映射之前包含键的映射,则替换旧值。如果映射之前包含键的映射,则替换旧的值。</target>
        </trans-unit>
        <trans-unit id="551bc84ca615d2fafe109a62876f4e8d0a4502a6" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map. If the map previously contained a mapping for this key, the old value is replaced.</source>
          <target state="translated">将指定的值与此映射中指定的键相关联。如果映射之前包含了这个键的映射,那么旧的值将被替换。</target>
        </trans-unit>
        <trans-unit id="0bc237fc2b57374ff6a182e558a47d47e8763f0a" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this preference node.</source>
          <target state="translated">将指定的值与此偏好结点中指定的键关联起来。</target>
        </trans-unit>
        <trans-unit id="7834ca4a8fca23930775c7ff74cdae02e831d307" translate="yes" xml:space="preserve">
          <source>Associating Style Sheets with XML documents Version 1.0</source>
          <target state="translated">将样式表与XML文档关联起来 版本1.0</target>
        </trans-unit>
        <trans-unit id="1948b8a73d1cd0190740c5b39d682043e8e45d4f" translate="yes" xml:space="preserve">
          <source>Association</source>
          <target state="translated">Association</target>
        </trans-unit>
        <trans-unit id="4a500e9fbe5ad4c564dcfe57725d9630deab6bc1" translate="yes" xml:space="preserve">
          <source>AssociationChangeNotification</source>
          <target state="translated">AssociationChangeNotification</target>
        </trans-unit>
        <trans-unit id="c514d34663ae101e7a667522cae2cb357f3131ab" translate="yes" xml:space="preserve">
          <source>AssociationChangeNotification.AssocChangeEvent</source>
          <target state="translated">AssociationChangeNotification.AssocChangeEvent</target>
        </trans-unit>
        <trans-unit id="980a6f0a3d37d74df814db983881cb652c2c43ec" translate="yes" xml:space="preserve">
          <source>Associations are identified by their Association ID. Association ID's are guaranteed to be unique for the lifetime of the association. An association ID may be reused after the association has been shutdown. An association ID is not unique across multiple SCTP channels. An Association's local and remote addresses may change if the SCTP implementation supports</source>
          <target state="translated">协会由其协会ID识别。协会ID在协会的生命周期内保证是唯一的。一个关联ID可以在关联被关闭后重新使用。一个协会ID在多个SCTP通道中不是唯一的。如果SCTP实施支持,一个协会的本地和远程地址可能会改变。</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="01c87cbcfcb3a4c3c670dfd17de13f85145d0637" translate="yes" xml:space="preserve">
          <source>Assume the linkage arguments are as follows:</source>
          <target state="translated">假设联动参数如下。</target>
        </trans-unit>
        <trans-unit id="2dc2100f672c34160990cbf608240b0f61030c73" translate="yes" xml:space="preserve">
          <source>Assuming</source>
          <target state="translated">Assuming</target>
        </trans-unit>
        <trans-unit id="26b8d1cd93b0a70aa708d7ef3eaaabd54c871558" translate="yes" xml:space="preserve">
          <source>Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is</source>
          <target state="translated">假设在生成动态类型安全视图之前,地图没有包含错误的键或值,并且随后对地图的所有访问都是通过视图(或其集合视图之一)进行的,那么它就是</target>
        </trans-unit>
        <trans-unit id="9ea0a7be7566f90ae54ba0c383e2ca9e62b14ca1" translate="yes" xml:space="preserve">
          <source>Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is &lt;em&gt;guaranteed&lt;/em&gt; that the map cannot contain an incorrectly typed key or value.</source>
          <target state="translated">假设一个映射在生成动态类型安全视图之前不包含任何错误键入的键或值，并且所有对该映射的后续访问都是通过该视图（或其集合视图之一）进行的，那么可以&lt;em&gt;确保&lt;/em&gt;该映射不会包含错误键入的键或值。</target>
        </trans-unit>
        <trans-unit id="2684e9da2f1f66e957040b3dfd882412818330a2" translate="yes" xml:space="preserve">
          <source>Assuming that there is a security manager, or that the implementation chooses to make checks anyway, the checks are made as detailed below. In what follows, and unless otherwise specified, &lt;code&gt;className&lt;/code&gt; is the string returned by &lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt;&lt;code&gt;MBeanInfo.getClassName()&lt;/code&gt;&lt;/a&gt; for the target MBean.</source>
          <target state="translated">假设有一个安全管理器，或者实现选择仍然进行检查，则将按以下详细说明进行检查。在下面的内容中，除非另有说明，否则 &lt;code&gt;className&lt;/code&gt; 是&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt; &lt;code&gt;MBeanInfo.getClassName()&lt;/code&gt; &lt;/a&gt;为目标MBean返回的字符串。</target>
        </trans-unit>
        <trans-unit id="5e277e047ec1bb884239c12a127e28b4227b5181" translate="yes" xml:space="preserve">
          <source>Assuming that there is a security manager, or that the implementation chooses to make checks anyway, the checks are made as detailed below. In what follows, and unless otherwise specified, &lt;code&gt;className&lt;/code&gt; is the string returned by &lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt;&lt;code&gt;MBeanInfo.getClassName()&lt;/code&gt;&lt;/a&gt; for the target MBean.</source>
          <target state="translated">假设有一个安全管理器，或者实现选择继续进行检查，则将按以下详细说明进行检查。在下面的内容中，除非另有说明，否则 &lt;code&gt;className&lt;/code&gt; 是&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt; &lt;code&gt;MBeanInfo.getClassName()&lt;/code&gt; &lt;/a&gt;为目标MBean 返回的字符串。</target>
        </trans-unit>
        <trans-unit id="22283d771439aa7823d5c15a58186011af184d67" translate="yes" xml:space="preserve">
          <source>Assuming there are no other scaling transforms added to the &lt;code&gt;Graphics2D&lt;/code&gt; object, the resulting line will be approximately 15 pixels wide. As the example code demonstrates, a floating-point line offers better precision, especially when large transforms are used with a &lt;code&gt;Graphics2D&lt;/code&gt; object. When a line is diagonal, the exact width depends on how the rendering pipeline chooses which pixels to fill as it traces the theoretical widened outline. The choice of which pixels to turn on is affected by the antialiasing attribute because the antialiasing rendering pipeline can choose to color partially-covered pixels.</source>
          <target state="translated">假定没有其他缩放缩放添加到 &lt;code&gt;Graphics2D&lt;/code&gt; 对象，则结果行将大约为15像素宽。如示例代码所示，浮点线提供了更好的精度，尤其是在对 &lt;code&gt;Graphics2D&lt;/code&gt; 对象使用大型转换时。当一条线是对角线时，确切的宽度取决于渲染管线在跟踪理论上加宽的轮廓时如何选择要填充的像素。抗锯齿属性会影响打开哪些像素的选择，因为抗锯齿渲染管道可以选择为部分覆盖的像素着色。</target>
        </trans-unit>
        <trans-unit id="e864db538fc4d63a8155b6107c72a215e133afc3" translate="yes" xml:space="preserve">
          <source>Assure the rectangles are created.</source>
          <target state="translated">保证矩形的创建。</target>
        </trans-unit>
        <trans-unit id="54da51c6e514c6c934fbde58897984f378972c6c" translate="yes" xml:space="preserve">
          <source>Astronomical and Scientific Notes</source>
          <target state="translated">天文和科学笔记</target>
        </trans-unit>
        <trans-unit id="580edc5fb3b7034f1b915922663d854b824bc61b" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: key agreement and key distribution</source>
          <target state="translated">非对称基元:密钥协议和密钥分配</target>
        </trans-unit>
        <trans-unit id="2980e582cf65c953331bea13f7e0d66a66676398" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: key encapsulation mechanism</source>
          <target state="translated">非对称基元:密钥封装机制</target>
        </trans-unit>
        <trans-unit id="0d2796c4c5fa505c038af711127a4b8a98410166" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: public key encryption</source>
          <target state="translated">非对称基元:公钥加密。</target>
        </trans-unit>
        <trans-unit id="b8470d41ba31d8d653235530d47cdc9f886b039c" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: signature scheme</source>
          <target state="translated">非对称基元:签字方案</target>
        </trans-unit>
        <trans-unit id="ee354e8540e9b98480026a8b0146863a1ca05cff" translate="yes" xml:space="preserve">
          <source>AsyncBoxView</source>
          <target state="translated">AsyncBoxView</target>
        </trans-unit>
        <trans-unit id="848467ea04c9f7448c5b0f1fbaa31f843c7d7ac4" translate="yes" xml:space="preserve">
          <source>AsyncBoxView.ChildLocator</source>
          <target state="translated">AsyncBoxView.ChildLocator</target>
        </trans-unit>
        <trans-unit id="93b416ebd87bfed062f5a7578286b1ba8a59456e" translate="yes" xml:space="preserve">
          <source>AsyncBoxView.ChildState</source>
          <target state="translated">AsyncBoxView.ChildState</target>
        </trans-unit>
        <trans-unit id="d36830bb1cdc9797d519a38f83f8c2a95a23787f" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;code&gt;LSParser&lt;/code&gt; objects are expected to also implement the &lt;code&gt;events::EventTarget&lt;/code&gt; interface so that event listeners can be registered on asynchronous &lt;code&gt;LSParser&lt;/code&gt; objects.</source>
          <target state="translated">异步 &lt;code&gt;LSParser&lt;/code&gt; 对象也应实现 &lt;code&gt;events::EventTarget&lt;/code&gt; 接口，以便可以在异步 &lt;code&gt;LSParser&lt;/code&gt; 对象上注册事件侦听器。</target>
        </trans-unit>
        <trans-unit id="7011bcb2a149d047c8ec7153896517a23adc9f65" translate="yes" xml:space="preserve">
          <source>Asynchronous I/O</source>
          <target state="translated">异步I/O</target>
        </trans-unit>
        <trans-unit id="8a319250e7a62a6449653025f2ab2f88895ac77d" translate="yes" xml:space="preserve">
          <source>Asynchronous Loading</source>
          <target state="translated">异步加载</target>
        </trans-unit>
        <trans-unit id="3beeb5d6437684f9d37c4cc7339c30f7ce34c987" translate="yes" xml:space="preserve">
          <source>Asynchronous channels are bound to an asynchronous channel group for the purpose of resource sharing. A group has an associated &lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; to which tasks are submitted to handle I/O events and dispatch to completion handlers that consume the result of asynchronous operations performed on channels in the group. The group can optionally be specified when creating the channel or the channel can be bound to a &lt;em&gt;default group&lt;/em&gt;. Sophisticated users may wish to create their own asynchronous channel groups or configure the &lt;code&gt;ExecutorService&lt;/code&gt; that will be used for the default group.</source>
          <target state="translated">出于资源共享的目的，异步通道绑定到异步通道组。组具有关联的&lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; ,&lt;/a&gt;向其提交了处理I / O事件的任务，并将其分派给完成处理程序，这些处理程序使用了在组中通道上执行的异步操作的结果。创建通道时可以选择指定组，也可以将通道绑定到&lt;em&gt;默认组&lt;/em&gt;。老练的用户可能希望创建自己的异步通道组或配置将用于默认组的 &lt;code&gt;ExecutorService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10310ac79f4a508680b2efe15ed75869c6a0dde6" translate="yes" xml:space="preserve">
          <source>Asynchronous channels are safe for use by multiple concurrent threads. Some channel implementations may support concurrent reading and writing, but may not allow more than one read and one write operation to be outstanding at any given time.</source>
          <target state="translated">异步通道可以被多个并发线程安全使用。一些通道实现可能支持并发读写,但可能不允许在任何给定的时间有超过一个读和一个写的操作未完成。</target>
        </trans-unit>
        <trans-unit id="dba4ef655eef73aea32f4791092fafa5f8e4f5ec" translate="yes" xml:space="preserve">
          <source>Asynchronous socket channels are created in one of two ways. A newly-created &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; is created by invoking one of the &lt;a href=&quot;#open(java.nio.channels.AsynchronousChannelGroup)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A newly-created channel is open but not yet connected. A connected &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; is created when a connection is made to the socket of an &lt;a href=&quot;asynchronousserversocketchannel&quot;&gt;&lt;code&gt;AsynchronousServerSocketChannel&lt;/code&gt;&lt;/a&gt;. It is not possible to create an asynchronous socket channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">异步套接字通道是通过以下两种方法之一创建的。通过调用由此类定义的&lt;a href=&quot;#open(java.nio.channels.AsynchronousChannelGroup)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;方法之一来创建新创建的 &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; 。新创建的通道已打开，但尚未连接。当与 &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; 的套接字建立连接时，将创建一个已连接的&lt;a href=&quot;asynchronousserversocketchannel&quot;&gt; &lt;code&gt;AsynchronousServerSocketChannel&lt;/code&gt; &lt;/a&gt;。无法为任意现有的&lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;创建异步套接字通道。</target>
        </trans-unit>
        <trans-unit id="457ba8593230a1f46060a7b261e3c57edf4f55f3" translate="yes" xml:space="preserve">
          <source>Asynchronous socket channels are created in one of two ways. A newly-created &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; is created by invoking one of the &lt;a href=&quot;asynchronoussocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A newly-created channel is open but not yet connected. A connected &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; is created when a connection is made to the socket of an &lt;a href=&quot;asynchronousserversocketchannel&quot;&gt;&lt;code&gt;AsynchronousServerSocketChannel&lt;/code&gt;&lt;/a&gt;. It is not possible to create an asynchronous socket channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">异步套接字通道是通过以下两种方法之一创建的。通过调用由此类定义的&lt;a href=&quot;asynchronoussocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;方法之一来创建新创建的 &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; 。新创建的通道已打开，但尚未连接。当与 &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; 的套接字建立连接时，将创建一个已连接的&lt;a href=&quot;asynchronousserversocketchannel&quot;&gt; &lt;code&gt;AsynchronousServerSocketChannel&lt;/code&gt; &lt;/a&gt;。无法为任意现有的&lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;创建异步套接字通道。</target>
        </trans-unit>
        <trans-unit id="22d1e165da18a2de45d488ef5c26e97f609c9064" translate="yes" xml:space="preserve">
          <source>AsynchronousByteChannel</source>
          <target state="translated">AsynchronousByteChannel</target>
        </trans-unit>
        <trans-unit id="38c2395242933dc76544daf5402d38cadc614d41" translate="yes" xml:space="preserve">
          <source>AsynchronousByteChannel.read()</source>
          <target state="translated">AsynchronousByteChannel.read()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
