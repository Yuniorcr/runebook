<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="df4b870fb6b307f47ae3b882d0d392b6a0a27623" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menuBar&lt;/code&gt; is positioned at the upper edge of the &lt;code&gt;layeredPane&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;menuBar&lt;/code&gt; 被定位在的上边缘 &lt;code&gt;layeredPane&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25cc63f27b499ac936092a81d7ae1cac847e5fe0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the look and feel.</source>
          <target state="translated">在 &lt;code&gt;messageType&lt;/code&gt; 参数主要用于提供来自外观的默认图标。</target>
        </trans-unit>
        <trans-unit id="6af76e421d8e057e7b7d9ff20dd9e09a4d087b85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metaData&lt;/code&gt; parameter can be used to limit the number of I/O operations that this method is required to perform. Passing &lt;code&gt;false&lt;/code&gt; for this parameter indicates that only updates to the file's content need be written to storage; passing &lt;code&gt;true&lt;/code&gt; indicates that updates to both the file's content and metadata must be written, which generally requires at least one more I/O operation. Whether this parameter actually has any effect is dependent upon the underlying operating system and is therefore unspecified.</source>
          <target state="translated">的 &lt;code&gt;metaData&lt;/code&gt; 参数可以被用于限制所要求此方法来执行I / O操作的数目。为该参数传递 &lt;code&gt;false&lt;/code&gt; 表示仅需要将文件内容的更新写入存储；传递 &lt;code&gt;true&lt;/code&gt; 表示必须同时写入文件内容和元数据的更新，这通常需要至少执行一次I / O操作。此参数实际上是否有效取决于底层操作系统，因此未指定。</target>
        </trans-unit>
        <trans-unit id="68681b14e33063683f77b0c98ad6ad810109a928" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; parameters can be &lt;code&gt;null&lt;/code&gt; to indicate that the range doesn't have an upper or lower bound. If &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;stepSize&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if both &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; are specified and &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. Similarly if &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum&lt;/code&gt;) is false, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">的 &lt;code&gt;minimum&lt;/code&gt; 和 &lt;code&gt;maximum&lt;/code&gt; 参数可以是 &lt;code&gt;null&lt;/code&gt; 以指示该范围不具有上限或下限。如果 &lt;code&gt;value&lt;/code&gt; 或 &lt;code&gt;stepSize&lt;/code&gt; 的是 &lt;code&gt;null&lt;/code&gt; ，或者如果两个 &lt;code&gt;minimum&lt;/code&gt; 和 &lt;code&gt;maximum&lt;/code&gt; 指定和 &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; 那么 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 被抛出。类似地，如果 &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum&lt;/code&gt; ）为false，则抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74be4dfd459c69d6c5eed0336db7d26406e6421b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minimumCapacity&lt;/code&gt; argument.</source>
          <target state="translated">该 &lt;code&gt;minimumCapacity&lt;/code&gt; 说法。</target>
        </trans-unit>
        <trans-unit id="890e9f6e189646766e2f576b109ba30702568602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; argument specifies the access mode with which the file is to be opened. The permitted values and their meanings are as specified for the &lt;a href=&quot;#mode&quot;&gt;&lt;code&gt;RandomAccessFile(File,String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">该 &lt;code&gt;mode&lt;/code&gt; 参数指定与该文件是要打开的访问模式。允许的值及其含义与为&lt;a href=&quot;#mode&quot;&gt; &lt;code&gt;RandomAccessFile(File,String)&lt;/code&gt; &lt;/a&gt;构造函数指定的值相同。</target>
        </trans-unit>
        <trans-unit id="e641820f7d6466959040c65c77fa4bc72f70aff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; parameter specifies how the region of the file is mapped and may be one of the following modes:</source>
          <target state="translated">的 &lt;code&gt;mode&lt;/code&gt; 参数指定的文件的区域被映射，并且可以是以下模式之一：</target>
        </trans-unit>
        <trans-unit id="8d634c96d7b7dc8c2283b2dc960c9bfb6ad5d16f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modifiers&lt;/code&gt; parameter specifies &lt;em&gt;modifiers&lt;/em&gt; that qualify how the directory is registered. This release does not define any &lt;em&gt;standard&lt;/em&gt; modifiers. It may contain implementation specific modifiers.</source>
          <target state="translated">该 &lt;code&gt;modifiers&lt;/code&gt; 参数指定&lt;em&gt;修饰符&lt;/em&gt;有资格如何目录登记。此版本未定义任何&lt;em&gt;标准&lt;/em&gt;修饰符。它可能包含实现特定的修饰符。</target>
        </trans-unit>
        <trans-unit id="1c71b33fd5b314e171d4df0723194294f0896265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;msg&lt;/code&gt; string is localized using the given resource bundle. If the resource bundle is &lt;code&gt;null&lt;/code&gt;, then the &lt;code&gt;msg&lt;/code&gt; string is not localized.</source>
          <target state="translated">使用给定的资源包对 &lt;code&gt;msg&lt;/code&gt; 字符串进行本地化。如果资源包为 &lt;code&gt;null&lt;/code&gt; ，则 &lt;code&gt;msg&lt;/code&gt; 字符串未本地化。</target>
        </trans-unit>
        <trans-unit id="3ad795f1c708af7880ff420b8fad93daa8b2155f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;n&lt;/code&gt; parameter may be negative, even though the &lt;code&gt;skip&lt;/code&gt; method of the &lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; superclass throws an exception in this case. If &lt;code&gt;n&lt;/code&gt; is negative, then this method does nothing and returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;n&lt;/code&gt; 参数可以是负的，即使 &lt;code&gt;skip&lt;/code&gt; 所述的方法&lt;a href=&quot;reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;超抛出在这种情况下的异常。如果 &lt;code&gt;n&lt;/code&gt; 为负，则此方法不执行任何操作并返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dff9aa267101b80032f4f16286856df7bec91f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;environment&lt;/code&gt; 参数由调用者所有。该实现不会修改这些对象或保留对其的引用，尽管它可能保留对克隆或副本的引用。</target>
        </trans-unit>
        <trans-unit id="30d43ffbfe8d9be7ac13f65149aa0271dd8dbc00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. &lt;code&gt;name&lt;/code&gt; is the name of the object, relative to context &lt;code&gt;nameCtx&lt;/code&gt;. This information could be useful to the object factory or to the object implementation. If there are several possible contexts from which the object could be named -- as will often be the case -- it is up to the caller to select one. A good rule of thumb is to select the &quot;deepest&quot; context available. If &lt;code&gt;nameCtx&lt;/code&gt; is null, &lt;code&gt;name&lt;/code&gt; is relative to the default initial context. If no name is being specified, the &lt;code&gt;name&lt;/code&gt; parameter should be null.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。 &lt;code&gt;name&lt;/code&gt; 是对象的名称，相对于上下文 &lt;code&gt;nameCtx&lt;/code&gt; 。此信息可能对对象工厂或对象实现很有用。如果可以在几种可能的上下文中命名对象（通常是这样），则由调用者选择。一个好的经验法则是选择可用的&amp;ldquo;最深&amp;rdquo;上下文。如果 &lt;code&gt;nameCtx&lt;/code&gt; 为null，则 &lt;code&gt;name&lt;/code&gt; 是相对于默认初始上下文的。如果未指定 &lt;code&gt;name&lt;/code&gt; ，则name参数应为null。</target>
        </trans-unit>
        <trans-unit id="be1fd20ce63d2a2b2230f8b0a96a9b6d08008ebe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。有关详细信息，请参见&lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;中&amp;ldquo;名称和上下文参数&amp;rdquo;的描述。</target>
        </trans-unit>
        <trans-unit id="1c9872e72bac6d145cc0c98edc174c7beb6a1a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details. If a factory uses &lt;code&gt;nameCtx&lt;/code&gt; it should synchronize its use against concurrent access, since context implementations are not guaranteed to be thread-safe.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。有关详细信息，请参见&lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;中&amp;ldquo;名称和上下文参数&amp;rdquo;的描述。如果工厂使用 &lt;code&gt;nameCtx&lt;/code&gt; ，则应将其使用与并发访问同步，因为不能保证上下文实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="f70a327d5594e9f181a40f5c6ca0cd8e025505b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。有关详细信息，请参见&lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;中&amp;ldquo;名称和上下文参数&amp;rdquo; 的描述。</target>
        </trans-unit>
        <trans-unit id="d4c006afdb1b3d49e58c74bd4a0ffd732b023002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details. If a factory uses &lt;code&gt;nameCtx&lt;/code&gt; it should synchronize its use against concurrent access, since context implementations are not guaranteed to be thread-safe.</source>
          <target state="translated">的 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;nameCtx&lt;/code&gt; ,则参数可以任选地被用于指定所创建的对象的名称。有关详细信息，请参见&lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;中&amp;ldquo;名称和上下文参数&amp;rdquo; 的描述。如果工厂使用 &lt;code&gt;nameCtx&lt;/code&gt; ，则应将其使用与并发访问同步，因为不能保证上下文实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="e883ac2d08181956247cb122333240f05339fa61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; argument is case insensitive.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 的说法是不区分大小写。</target>
        </trans-unit>
        <trans-unit id="75ed05c0b8a33486c051a951114b24540ff05d3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; matching is case insensitive, with any leading and trailing whitespace character removed.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 匹配是不区分大小写，并移除任何开头和结尾的空白字符。</target>
        </trans-unit>
        <trans-unit id="6b3818f758723f19e7f19461448d70ae40bd144a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;attrs&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;attrs&lt;/code&gt; ，和 &lt;code&gt;environment&lt;/code&gt; 参数由调用者所有。该实现不会修改这些对象或保留对其的引用，尽管它可能保留对克隆或副本的引用。</target>
        </trans-unit>
        <trans-unit id="48161fbd495af11311a77e82a4acb8a1f70aaa4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;inAttrs&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies. The object returned by this method is owned by the caller. The implementation will not subsequently modify it. It will contain either a new &lt;code&gt;Attributes&lt;/code&gt; object that is likewise owned by the caller, or a reference to the original &lt;code&gt;inAttrs&lt;/code&gt; parameter.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;inAttrs&lt;/code&gt; 和 &lt;code&gt;environment&lt;/code&gt; 参数由调用者所有。该实现不会修改这些对象或保留对其的引用，尽管它可能保留对克隆或副本的引用。此方法返回的对象归调用者所有。该实现随后将不会对其进行修改。它将包含同样由调用者拥有的新 &lt;code&gt;Attributes&lt;/code&gt; 对象，或对原始 &lt;code&gt;inAttrs&lt;/code&gt; 参数的引用。</target>
        </trans-unit>
        <trans-unit id="ef2e6b4b4d41262649d36998a45ab4a554e41dd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;X500Principal&lt;/code&gt;s.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 的 &lt;code&gt;X500Principal&lt;/code&gt; 的秒。</target>
        </trans-unit>
        <trans-unit id="f5c100cec826504d35586ac2749c0d0f50484e21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of names. Each name is a &lt;code&gt;String&lt;/code&gt; or a byte array representing a distinguished name (in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; or ASN.1 DER encoded form, respectively). If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no issuerNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 的名字。每个名称都是代表专有名称的 &lt;code&gt;String&lt;/code&gt; 或字节数组（分别以&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;或ASN.1 DER编码的形式）。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则不会执行issuerNames检查。</target>
        </trans-unit>
        <trans-unit id="158c9c58ed1b16c5fc715719b723134504c4d4a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of names. Each name is a &lt;code&gt;String&lt;/code&gt; or a byte array representing a distinguished name (in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; or ASN.1 DER encoded form, respectively). If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no issuerNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 的名字。每个名称都是代表专有名称的 &lt;code&gt;String&lt;/code&gt; 或字节数组（分别以&lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;或ASN.1 DER编码的形式）。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则不会执行issuerNames检查。</target>
        </trans-unit>
        <trans-unit id="10f8926ca6dbdca434f3cdffa8eda26510a88124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the pathToNames criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no pathToNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 一起被列入pathToNames标准为每名一个条目。每个条目都是一个 &lt;code&gt;List&lt;/code&gt; ,其第一个条目为 &lt;code&gt;Integer&lt;/code&gt; （名称类型，0-8），第二个条目为 &lt;code&gt;String&lt;/code&gt; 或字节数组（名称分别为字符串或ASN.1 DER编码形式）。可以有多个相同类型的名称。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则不会执行pathToNames检查。</target>
        </trans-unit>
        <trans-unit id="b7f614fb779c50df2c64620e5af3100fbb23fe19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the subject alternative name criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no subjectAlternativeNames check will be performed.</source>
          <target state="translated">该 &lt;code&gt;names&lt;/code&gt; 参数（如果不 &lt;code&gt;null&lt;/code&gt; ）是一个 &lt;code&gt;Collection&lt;/code&gt; 一起被包含在使用者替代名称标准为每名一个条目。每个条目都是一个 &lt;code&gt;List&lt;/code&gt; ,其第一个条目为 &lt;code&gt;Integer&lt;/code&gt; （名称类型，0-8），第二个条目为 &lt;code&gt;String&lt;/code&gt; 或字节数组（名称分别为字符串或ASN.1 DER编码形式）。可以有多个相同类型的名称。如果提供 &lt;code&gt;null&lt;/code&gt; 作为此参数的值，则将不执行subjectAlternativeNames检查。</target>
        </trans-unit>
        <trans-unit id="86f6973623e34ae41d0cb380cd7a6687a04a283e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network interface&lt;/code&gt; and &lt;code&gt;ttl&lt;/code&gt; parameters let the caller specify which network interface the test will go through and the maximum number of hops the packets should go through. A negative value for the &lt;code&gt;ttl&lt;/code&gt; will result in an IllegalArgumentException being thrown.</source>
          <target state="translated">该 &lt;code&gt;network interface&lt;/code&gt; 和 &lt;code&gt;ttl&lt;/code&gt; 参数让调用者指定的网络接口测试将通过和啤酒花的最大数量的数据包应该去。如果 &lt;code&gt;ttl&lt;/code&gt; 为负值，则将引发IllegalArgumentException。</target>
        </trans-unit>
        <trans-unit id="8b09e54aa5c847f44721e53e1758b993160bcd0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newLength&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;newLength&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7231d4e3f44c3037aca933714c69e80b5eb9b9ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newTypes&lt;/code&gt; list contains types &lt;code&gt;P..., M..., A...&lt;/code&gt;, with as many types in &lt;code&gt;P&lt;/code&gt; as indicated by &lt;code&gt;pos&lt;/code&gt;. The &lt;code&gt;M&lt;/code&gt; types are precisely those that the &lt;code&gt;M&lt;/code&gt; types in the target handle's parameter type list are supposed to match. The types in &lt;code&gt;A&lt;/code&gt; are additional types found after the matching sub-list.</source>
          <target state="translated">该 &lt;code&gt;newTypes&lt;/code&gt; 列表包含类型 &lt;code&gt;P..., M..., A...&lt;/code&gt; ，与许多类型的 &lt;code&gt;P&lt;/code&gt; 按指示 &lt;code&gt;pos&lt;/code&gt; 。在 &lt;code&gt;M&lt;/code&gt; 类型，正是那些在 &lt;code&gt;M&lt;/code&gt; 目标手柄的参数类型列表类型应该匹配。 &lt;code&gt;A&lt;/code&gt; 中的类型是在匹配子列表之后找到的其他类型。</target>
        </trans-unit>
        <trans-unit id="5caef121267476c77e7c49f344a99bf3c90e71f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newtransform&lt;/code&gt; and &lt;code&gt;newCanonicalizationMethod&lt;/code&gt; methods of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; parameter types.</source>
          <target state="translated">&lt;code&gt;XMLSignatureFactory&lt;/code&gt; 的 &lt;code&gt;newtransform&lt;/code&gt; 和 &lt;code&gt;newCanonicalizationMethod&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMStructure&lt;/code&gt; 参数类型。</target>
        </trans-unit>
        <trans-unit id="238e2ddc1de1cf5d38b16bf8a5ed7a88e495f8bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeName&lt;/code&gt; attribute that is inherited from &lt;code&gt;Node&lt;/code&gt; contains the name of the entity.</source>
          <target state="translated">从 &lt;code&gt;Node&lt;/code&gt; 继承的 &lt;code&gt;nodeName&lt;/code&gt; 属性包含实体的名称。</target>
        </trans-unit>
        <trans-unit id="cd6f3c9ed9744a178a240c4efe334b44144e9408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize&lt;/code&gt; method helps solve these problems by transforming text into the canonical composed and decomposed forms as shown in the first example above. In addition, you can have it perform compatibility decompositions so that you can treat compatibility characters the same as their equivalents. Finally, the &lt;code&gt;normalize&lt;/code&gt; method rearranges accents into the proper canonical order, so that you do not have to worry about accent rearrangement on your own.</source>
          <target state="translated">的 &lt;code&gt;normalize&lt;/code&gt; 方法有助于通过将文本转换成由与如上面的第一个例子中分解形式的规范解决这些问题。另外，您可以让它执行兼容性分解，以便您可以将兼容性字符与它们的等效字符一样对待。最后， &lt;code&gt;normalize&lt;/code&gt; 方法将重音重排为正确的规范顺序，因此您不必担心重音重排。</target>
        </trans-unit>
        <trans-unit id="5f52e6638e3eca203f0c48df0632a417ad5518e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notations&lt;/code&gt;&lt;code&gt;NamedNodeMaps&lt;/code&gt; are equal.</source>
          <target state="translated">该 &lt;code&gt;notations&lt;/code&gt; &lt;code&gt;NamedNodeMaps&lt;/code&gt; 是相等的。</target>
        </trans-unit>
        <trans-unit id="63cf4faf44647d95951cea7798d0b85f615c45ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ns&lt;/code&gt; parameter may be negative, even though the &lt;code&gt;skip&lt;/code&gt; method of the &lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; superclass throws an exception in this case. Negative values of &lt;code&gt;ns&lt;/code&gt; cause the stream to skip backwards. Negative return values indicate a skip backwards. It is not possible to skip backwards past the beginning of the string.</source>
          <target state="translated">所述 &lt;code&gt;ns&lt;/code&gt; 参数可以是负的，即使 &lt;code&gt;skip&lt;/code&gt; 的方法&lt;a href=&quot;reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;超抛出在这种情况下的异常。 &lt;code&gt;ns&lt;/code&gt; 的负值会导致流向后跳过。负的返回值表示向后跳过。向后跳过字符串的开头是不可能的。</target>
        </trans-unit>
        <trans-unit id="e0fcc06e98814dd87a3c62b985949fba60bdb550" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first byte of the subarray, and the &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数是子阵列的第一个字节的索引，并且 &lt;code&gt;count&lt;/code&gt; 参数指定子阵列的长度。</target>
        </trans-unit>
        <trans-unit id="baa0351e008899618db6b64da0e758694ddf41eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first character of the subarray. The &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the returned string.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数是子阵列的第一个字符的索引。的 &lt;code&gt;count&lt;/code&gt; 参数指定子阵列的长度。子数组的内容被复制；字符数组的后续修改不会影响返回的字符串。</target>
        </trans-unit>
        <trans-unit id="9c01d1aa6c77241f92e51f28f20db5fb08e4c253" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;charsequence#length()&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;charsequence#length()&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="7d930134c90bf6d49ed3db167b3ffa23d64e6b5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuffer#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuffer#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="5649ec97e26cd383b62037dbe7726158b1b2a542" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuilder#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">所述 &lt;code&gt;offset&lt;/code&gt; 参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，且小于或等于所述&lt;a href=&quot;stringbuilder#length--&quot;&gt;长度&lt;/a&gt;这个序列。</target>
        </trans-unit>
        <trans-unit id="2d5b4d40ecb1db6747499e6955bb54e7c954105e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt;, &lt;code&gt;
 openOperations&lt;/code&gt; and &lt;code&gt;notifications&lt;/code&gt; array parameters are internally copied, so that subsequent changes to the arrays referenced by these parameters have no effect on this instance.</source>
          <target state="translated">的 &lt;code&gt;openAttributes&lt;/code&gt; ， &lt;code&gt;openConstructors&lt;/code&gt; ， &lt;code&gt; openOperations&lt;/code&gt; 和 &lt;code&gt;notifications&lt;/code&gt; 阵列参数内部复制，以便后续由这些参数所引用的阵列的变化对这种情况下没有影响。</target>
        </trans-unit>
        <trans-unit id="4b47fbce935f5d028b77339d1ef9818c0b7586f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt;, &lt;code&gt;openOperations&lt;/code&gt; and &lt;code&gt;notifications&lt;/code&gt; array parameters are internally copied, so that subsequent changes to the arrays referenced by these parameters have no effect on this instance.</source>
          <target state="translated">的 &lt;code&gt;openAttributes&lt;/code&gt; ， &lt;code&gt;openConstructors&lt;/code&gt; ， &lt;code&gt;openOperations&lt;/code&gt; 和 &lt;code&gt;notifications&lt;/code&gt; 阵列参数内部复制，以便后续由这些参数所引用的阵列的变化对这种情况下没有影响。</target>
        </trans-unit>
        <trans-unit id="d6983d2110c5fe985de448c67aa2a3f5fba3481e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled by the resulting file attribute view for the case that the file is a symbolic link. By default, symbolic links are followed. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed. This option is ignored by implementations that do not support symbolic links.</source>
          <target state="translated">对于文件是符号链接的情况， &lt;code&gt;options&lt;/code&gt; 数组可用于指示结果文件属性视图如何处理符号链接。默认情况下，遵循符号链接。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。不支持符号链接的实现将忽略此选项。</target>
        </trans-unit>
        <trans-unit id="e205a1262affb513a2bd877857ae965e9d442d7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 阵列可用于指示链接如何象征意义，该文件是一个符号链接的情况下进行处理。默认情况下，遵循符号链接，并且读取链接最终目标的文件属性。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="07b7edf8d716c1c078bf2b1c0f91fb4940940f39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is set. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 阵列可用于指示链接如何象征意义，该文件是一个符号链接的情况下进行处理。默认情况下，遵循符号链接，并设置链接最终目标的文件属性。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="d06342b773fea6549bc89fc2462a7083b70f4fb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled. By default, symbolic links are resolved to their final target. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then this method does not resolve symbolic links. Some implementations allow special names such as &quot;&lt;code&gt;..&lt;/code&gt;&quot; to refer to the parent directory. When deriving the &lt;em&gt;real path&lt;/em&gt;, and a &quot;&lt;code&gt;..&lt;/code&gt;&quot; (or equivalent) is preceded by a non-&quot;&lt;code&gt;..&lt;/code&gt;&quot; name then an implementation will typically cause both names to be removed. When not resolving symbolic links and the preceding name is a symbolic link then the names are only removed if it guaranteed that the resulting path will locate the same file as this path.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 阵列可用于指示链接如何象征性的处理方式。默认情况下，符号链接被解析为其最终目标。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则此方法不会解析符号链接。一些实现允许特殊名称（例如&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;）引用父目录。当推导&lt;em&gt;真实路径时&lt;/em&gt;，在&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;（或等效名称）后加上非&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;名称，则实现通常会导致两个名称都被删除。当不解析符号链接并且前面的名称是符号链接时，只有在保证结果路径将与该路径定位相同文件的情况下，才删除名称。</target>
        </trans-unit>
        <trans-unit id="f5a345ea481a9989b3e67c3fdfaa252ee2038c96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. If no options are present then it is equivalent to opening the file with the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option. In addition to the &lt;code&gt;
 READ&lt;/code&gt; option, an implementation may also support additional implementation specific options.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。如果没有选项，则相当于使用&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;选项打开文件。除了 &lt;code&gt; READ&lt;/code&gt; 选项外，实现还可以支持其他特定于实现的选项。</target>
        </trans-unit>
        <trans-unit id="0bc9bb7ec20a4fcc37fab92a84728a3be6a3d529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. If no options are present then it is equivalent to opening the file with the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option. In addition to the &lt;code&gt;READ&lt;/code&gt; option, an implementation may also support additional implementation specific options.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。如果没有选项，则相当于使用&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;选项打开文件。除了 &lt;code&gt;READ&lt;/code&gt; 选项外，实现还可以支持其他特定于实现的选项。</target>
        </trans-unit>
        <trans-unit id="feb5d322a388c3217a1ff698a06ad00e166739fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;../file/standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determine if the file should be opened for reading and/or writing. If neither option (or the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option) is contained in the array then the file is opened for reading. By default reading or writing commences at the beginning of the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。在&lt;a href=&quot;../file/standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项确定文件是否应打开供读取和/或写入。如果数组中未包含任何选项（或&lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;选项），则将打开文件以供读取。默认情况下，读取或写入从文件的开头开始。</target>
        </trans-unit>
        <trans-unit id="c735a8e347a9d0b0ecd22343769651f2ac14125f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;../file/standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determines if the file should be opened for reading and/or writing. If neither option is contained in the array then an existing file is opened for reading.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。在&lt;a href=&quot;../file/standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项确定是否应将文件打开供读取和/或写入。如果阵列中均未包含任何选项，则将打开一个现有文件以供读取。</target>
        </trans-unit>
        <trans-unit id="70441efdb55fa14107d32cb84dfbb03932007cdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determine if the file should be opened for reading and/or writing. If neither option (or the &lt;a href=&quot;standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option) is present then the file is opened for reading. By default reading or writing commence at the beginning of the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数决定如何打开该文件。在&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项确定文件是否应打开供读取和/或写入。如果两个选项（或&lt;a href=&quot;standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;选项）都不存在，则打开文件进行读取。默认情况下，读取或写入从文件的开头开始。</target>
        </trans-unit>
        <trans-unit id="adaafaa0c2c26b989f9f5f2e8716f29c6f11b35c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 的参数可用于指示链接如何象征意义，该文件是一个符号链接的情况下进行处理。默认情况下，遵循符号链接。如果存在选项&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;，则不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="e88e22b5339b7c784d561d64428df97e00625dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may include any of the following:</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数可以包括以下任一：</target>
        </trans-unit>
        <trans-unit id="4b13774c0241962d758bb9e487f1b8e4b324b63e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数指定如何创建或打开该文件。如果不存在任何选项，则此方法就像存在&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项一样工作。换句话说，它打开文件进行写入，如果不存在则创建文件，或者首先将现有的&lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;截断为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f9d8a105de341349c54bc6855f4dc3514259ce3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. The method ensures that the file is closed when all lines have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has been created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数指定如何创建或打开该文件。如果不存在任何选项，则此方法就像存在&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项一样工作。换句话说，它打开文件进行写入，如果不存在则创建文件，或者首先将现有的&lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;截断为 &lt;code&gt;0&lt;/code&gt; 。该方法确保在写入所有行后（或者引发I / O错误或其他运行时异常）关闭文件。如果发生I / O错误，则可以在创建或截断文件后或在将某些字节写入文件后执行此操作。</target>
        </trans-unit>
        <trans-unit id="6c00a59ba94adcb6905e3dd085514e8e2f27d12a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. The method ensures that the file is closed when all lines have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数指定如何创建或打开该文件。如果不存在任何选项，则此方法就像存在&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项一样工作。换句话说，它打开文件进行写入，如果不存在则创建文件，或者首先将现有的&lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;截断为 &lt;code&gt;0&lt;/code&gt; 。该方法确保在写入所有行后（或者引发I / O错误或其他运行时异常）关闭文件。如果发生I / O错误，则可以在创建或截断文件后或在将某些字节写入文件后执行此操作。</target>
        </trans-unit>
        <trans-unit id="19ea8dcb435d7496383db34913da36823ca371d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orientation&lt;/code&gt; argument must take one of the two values &lt;code&gt;Scrollbar.HORIZONTAL&lt;/code&gt;, or &lt;code&gt;Scrollbar.VERTICAL&lt;/code&gt;, indicating a horizontal or vertical scroll bar, respectively.</source>
          <target state="translated">的 &lt;code&gt;orientation&lt;/code&gt; 参数必须采取两个值中的一个 &lt;code&gt;Scrollbar.HORIZONTAL&lt;/code&gt; ，或 &lt;code&gt;Scrollbar.VERTICAL&lt;/code&gt; 分别表示水平或垂直滚动条。</target>
        </trans-unit>
        <trans-unit id="d38cc57bdb401fa5458030b8203d68a47b6b87cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputMimeType&lt;/code&gt; parameter describes the document type that you want to create, whereas the &lt;code&gt;flavor&lt;/code&gt; parameter describes the format in which the input data will be provided by the application to the &lt;code&gt;StreamPrintService&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;outputMimeType&lt;/code&gt; 参数描述了要创建的，而文档类型 &lt;code&gt;flavor&lt;/code&gt; 参数描述在其中输入数据将被应用到提供的格式 &lt;code&gt;StreamPrintService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8257034935941be3f0b0a79bcb02da45c170ab8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownerElement&lt;/code&gt; attribute is set to &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;specified&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt; on the adopted &lt;code&gt;Attr&lt;/code&gt;. The descendants of the source &lt;code&gt;Attr&lt;/code&gt; are recursively adopted.</source>
          <target state="translated">该 &lt;code&gt;ownerElement&lt;/code&gt; 属性设置为 &lt;code&gt;null&lt;/code&gt; 并 &lt;code&gt;specified&lt;/code&gt; 标志设置为 &lt;code&gt;true&lt;/code&gt; 所采用的 &lt;code&gt;Attr&lt;/code&gt; 。源 &lt;code&gt;Attr&lt;/code&gt; 的后代被递归采用。</target>
        </trans-unit>
        <trans-unit id="db95ff142963f6cc3449f48fbd4ccbf6c3102b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownerElement&lt;/code&gt; attribute is set to &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;specified&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt; on the generated &lt;code&gt;Attr&lt;/code&gt;. The descendants of the source &lt;code&gt;Attr&lt;/code&gt; are recursively imported and the resulting nodes reassembled to form the corresponding subtree. Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on &lt;code&gt;Attr&lt;/code&gt; nodes; they always carry their children with them when imported.</source>
          <target state="translated">所述 &lt;code&gt;ownerElement&lt;/code&gt; 属性被设置为 &lt;code&gt;null&lt;/code&gt; 和所述 &lt;code&gt;specified&lt;/code&gt; 标志被设置为 &lt;code&gt;true&lt;/code&gt; 所生成 &lt;code&gt;Attr&lt;/code&gt; 。源 &lt;code&gt;Attr&lt;/code&gt; 的后代将以递归方式导入，结果节点将重新组合以形成相应的子树。请注意， &lt;code&gt;deep&lt;/code&gt; 参数对 &lt;code&gt;Attr&lt;/code&gt; 节点无效。他们进口时总是带着孩子。</target>
        </trans-unit>
        <trans-unit id="5c95aaf1fcdce3e672aff6748a9bdc1c5a92b1a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;packageFinder&lt;/code&gt; parameter is for use when reading module descriptors from legacy module-artifact formats that do not record the set of packages in the descriptor itself.</source>
          <target state="translated">该 &lt;code&gt;packageFinder&lt;/code&gt; 阅读从传统模块神器格式不记录组包的描述符本身模块的描述，当参数使用。</target>
        </trans-unit>
        <trans-unit id="c1d6a3e2666b292d57c5aab696b343f540ec638d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; field now contains two elements, each of which is an array two elements long. The first element is the parameter number; the second is the value to be set. In this case, the first element of &lt;code&gt;params&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;5000&lt;/code&gt;, and the second element is &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;&quot;West&quot;&lt;/code&gt;. When an application calls the method &lt;code&gt;execute&lt;/code&gt;, it will in turn call on this &lt;code&gt;RowSet&lt;/code&gt; object's reader, which will in turn invoke its &lt;code&gt;readData&lt;/code&gt; method. As part of its implementation, &lt;code&gt;readData&lt;/code&gt; will get the values in &lt;code&gt;params&lt;/code&gt; and use them to set the command's placeholder parameters. The following code fragment gives an idea of how the reader does this, after obtaining the &lt;code&gt;Connection&lt;/code&gt; object &lt;code&gt;con&lt;/code&gt;.</source>
          <target state="translated">现在， &lt;code&gt;params&lt;/code&gt; 字段包含两个元素，每个元素都是一个数组，两个元素长。第一个元素是参数编号；第二个元素是参数编号。第二个是要设置的值。在这种情况下，第一元件 &lt;code&gt;params&lt;/code&gt; 是 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;5000&lt;/code&gt; ，和第二个元素是 &lt;code&gt;2&lt;/code&gt; ， &lt;code&gt;&quot;West&quot;&lt;/code&gt; 。当应用程序调用方法 &lt;code&gt;execute&lt;/code&gt; 时，它将依次调用此 &lt;code&gt;RowSet&lt;/code&gt; 对象的读取器，该读取器将依次调用其 &lt;code&gt;readData&lt;/code&gt; 方法。作为其实现的一部分， &lt;code&gt;readData&lt;/code&gt; 将获取 &lt;code&gt;params&lt;/code&gt; 中的值并使用它们来设置命令的占位符参数。以下代码片段给出了读者在获得 &lt;code&gt;Connection&lt;/code&gt; 对象 &lt;code&gt;con&lt;/code&gt; 之后如何执行此操作的想法。</target>
        </trans-unit>
        <trans-unit id="edb61ce5d9acc2ab5ce76544d532094234d018a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent&lt;/code&gt; argument determines two things: the frame on which the open dialog depends and the component whose position the look and feel should consider when placing the dialog. If the parent is a &lt;code&gt;Frame&lt;/code&gt; object (such as a &lt;code&gt;JFrame&lt;/code&gt;) then the dialog depends on the frame and the look and feel positions the dialog relative to the frame (for example, centered over the frame). If the parent is a component, then the dialog depends on the frame containing the component, and is positioned relative to the component (for example, centered over the component). If the parent is &lt;code&gt;null&lt;/code&gt;, then the dialog depends on no visible window, and it's placed in a look-and-feel-dependent position such as the center of the screen.</source>
          <target state="translated">该 &lt;code&gt;parent&lt;/code&gt; 参数确定两件事情：在打开的对话框所依赖的框架和其位置的外观和感觉放置对话框时应该考虑的组件。如果父对象是 &lt;code&gt;Frame&lt;/code&gt; 对象（例如 &lt;code&gt;JFrame&lt;/code&gt; ），则对话框取决于框架，并且外观将对话框相对于框架的位置（例如，在框架上方居中）定位。如果父级是组件，则对话框取决于包含组件的框架，并且相对于组件放置（例如，在组件上方居中）。如果父级为 &lt;code&gt;null&lt;/code&gt; ，则对话框不依赖于可见窗口，而是放置在与外观相关的位置，例如屏幕的中心。</target>
        </trans-unit>
        <trans-unit id="64a8995d9ac05171aede64481f740265b7613585" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseURL&lt;/code&gt; method of &lt;code&gt;URLStreamHandler&lt;/code&gt; parses the string representation as if it were an &lt;code&gt;http&lt;/code&gt; specification. Most URL protocol families have a similar parsing. A stream protocol handler for a protocol that has a different syntax must override this routine.</source>
          <target state="translated">&lt;code&gt;URLStreamHandler&lt;/code&gt; 的 &lt;code&gt;parseURL&lt;/code&gt; 方法将字符串表示形式解析为 &lt;code&gt;http&lt;/code&gt; 规范。大多数URL协议系列都有类似的解析。具有不同语法的协议的流协议处理程序必须重写此例程。</target>
        </trans-unit>
        <trans-unit id="2221038019d4be2cb2f88fab060218d2d5a02e57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; parameter is associated with a &lt;code&gt;FileSystem&lt;/code&gt; that supports the &lt;a href=&quot;attribute/posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt;. This attribute view provides access to file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">该 &lt;code&gt;path&lt;/code&gt; 参数与相关联的 &lt;code&gt;FileSystem&lt;/code&gt; 支持&lt;a href=&quot;attribute/posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;。该属性视图提供对文件属性的访问，这些文件属性通常与实现便携式操作系统接口（POSIX）系列标准的操作系统所使用的文件系统上的文件相关联。</target>
        </trans-unit>
        <trans-unit id="b249e9a3d9c0f37793a768ee4c126d9c0f3b49e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; parameter is associated with a file system that supports &lt;a href=&quot;attribute/fileownerattributeview&quot;&gt;&lt;code&gt;FileOwnerAttributeView&lt;/code&gt;&lt;/a&gt;. This file attribute view provides access to a file attribute that is the owner of the file.</source>
          <target state="translated">该 &lt;code&gt;path&lt;/code&gt; 参数与支持的文件系统相关&lt;a href=&quot;attribute/fileownerattributeview&quot;&gt; &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; &lt;/a&gt;。该文件属性视图提供对作为文件所有者的文件属性的访问。</target>
        </trans-unit>
        <trans-unit id="5493aef38945eeedee66c785a93a8e949626fc4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;perms&lt;/code&gt; parameter is a &lt;code&gt;String&lt;/code&gt; representing the permissions. It has 9 characters that are interpreted as three sets of three. The first set refers to the owner's permissions; the next to the group permissions and the last to others. Within each set, the first character is &lt;code&gt;'r'&lt;/code&gt; to indicate permission to read, the second character is &lt;code&gt;'w'&lt;/code&gt; to indicate permission to write, and the third character is &lt;code&gt;'x'&lt;/code&gt; for execute permission. Where a permission is not set then the corresponding character is set to &lt;code&gt;'-'&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;perms&lt;/code&gt; 参数是一个 &lt;code&gt;String&lt;/code&gt; 表示的权限。它有9个字符，被解释为三组，每组三个。第一组是指所有者的权限；第二组是所有者的权限。组权限旁边，最后一个其他权限。在每个集合中，第一个字符为 &lt;code&gt;'r'&lt;/code&gt; 表示允许读取，第二个字符为 &lt;code&gt;'w'&lt;/code&gt; 表示允许写入，第三个字符为 &lt;code&gt;'x'&lt;/code&gt; 表示执行权限。如果未设置许可，则将相应的字符设置为 &lt;code&gt;'-'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9d482d82a8c67b95f55d10ab3dda1aad0c96b7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persistPolicy&lt;/code&gt; and &lt;code&gt;currencyTimeLimit&lt;/code&gt; fields are meaningless for constructors, but are not considered invalid.</source>
          <target state="translated">该 &lt;code&gt;persistPolicy&lt;/code&gt; 和 &lt;code&gt;currencyTimeLimit&lt;/code&gt; 字段是无意义的构造函数，但不被视为无效。</target>
        </trans-unit>
        <trans-unit id="ca92d75fa54a7f375119b1732a1defda2c5a065a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;popup&lt;/code&gt; can be set on one &lt;code&gt;TrayIcon&lt;/code&gt; only. Setting the same popup on multiple &lt;code&gt;TrayIcon&lt;/code&gt;s will cause an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;popup&lt;/code&gt; 可以在一个设置 &lt;code&gt;TrayIcon&lt;/code&gt; 而已。在多个 &lt;code&gt;TrayIcon&lt;/code&gt; 上设置相同的弹出窗口将导致 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="822e7053ed501794bcb73e078de627432ea24760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pos&lt;/code&gt; argument may range between zero and</source>
          <target state="translated">该 &lt;code&gt;pos&lt;/code&gt; 参数可以在零和之间的范围内</target>
        </trans-unit>
        <trans-unit id="0d4b8df143426535636c3d9fcf5d259dd494e8ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pos&lt;/code&gt; argument selects which parameters are to be bound. It may range between zero and</source>
          <target state="translated">所述 &lt;code&gt;pos&lt;/code&gt; 参数选择哪些参数被约束。范围是零到</target>
        </trans-unit>
        <trans-unit id="1a88d4013b421f51fd6a8b134cf58266c11d071d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred&lt;/code&gt; handle describes the loop condition; and &lt;code&gt;body&lt;/code&gt;, its body. The loop resulting from this method will, in each iteration, first evaluate the predicate and then execute its body (if the predicate evaluates to &lt;code&gt;true&lt;/code&gt;). The loop will terminate once the predicate evaluates to &lt;code&gt;false&lt;/code&gt; (the body will not be executed in this case).</source>
          <target state="translated">该 &lt;code&gt;pred&lt;/code&gt; 手柄介绍了循环条件; 和 &lt;code&gt;body&lt;/code&gt; ，它的身体。在每次迭代中，此方法产生的循环将首先评估谓词，然后执行其主体（如果谓词评估为 &lt;code&gt;true&lt;/code&gt; ）。一旦谓词评估为 &lt;code&gt;false&lt;/code&gt; （在这种情况下将不执行主体），循环将终止。</target>
        </trans-unit>
        <trans-unit id="a86ac63e6484dc40818acb31efed1223ef30cbe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred&lt;/code&gt; handle describes the loop condition; and &lt;code&gt;body&lt;/code&gt;, its body. The loop resulting from this method will, in each iteration, first execute its body and then evaluate the predicate. The loop will terminate once the predicate evaluates to &lt;code&gt;false&lt;/code&gt; after an execution of the body.</source>
          <target state="translated">该 &lt;code&gt;pred&lt;/code&gt; 手柄介绍了循环条件; 和 &lt;code&gt;body&lt;/code&gt; ，它的身体。该方法产生的循环将在每次迭代中首先执行其主体，然后评估谓词。一旦执行了主体，谓词的评估结果为 &lt;code&gt;false&lt;/code&gt; ，循环将终止。</target>
        </trans-unit>
        <trans-unit id="83271b2397fc080adb45b6ed96f5fc2c799338f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred&lt;/code&gt; handle must not be &lt;code&gt;null&lt;/code&gt;. It must have &lt;code&gt;boolean&lt;/code&gt; as its return type. Its parameter list (either empty or of the form &lt;code&gt;(V A*)&lt;/code&gt;) must be effectively identical to the internal parameter list.</source>
          <target state="translated">该 &lt;code&gt;pred&lt;/code&gt; 的句柄不得 &lt;code&gt;null&lt;/code&gt; 。它的返回类型必须为 &lt;code&gt;boolean&lt;/code&gt; 。它的参数列表（为空或 &lt;code&gt;(V A*)&lt;/code&gt; 形式）必须与内部参数列表完全相同。</target>
        </trans-unit>
        <trans-unit id="12d2f504fe0c18a15bb945c0612b6e3db966f980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preferredSize&lt;/code&gt; is only computed once, subsequent calls to this method just return a cached size.</source>
          <target state="translated">在 &lt;code&gt;preferredSize&lt;/code&gt; 只计算一次，随后调用此方法只返回一个缓存的大小。</target>
        </trans-unit>
        <trans-unit id="3295278a86db378f96ef38915c5399dfa8f46eb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; argument must be at least three characters long. It is recommended that the prefix be a short, meaningful string such as &lt;code&gt;&quot;hjb&quot;&lt;/code&gt; or &lt;code&gt;&quot;mail&quot;&lt;/code&gt;. The &lt;code&gt;suffix&lt;/code&gt; argument may be &lt;code&gt;null&lt;/code&gt;, in which case the suffix &lt;code&gt;&quot;.tmp&quot;&lt;/code&gt; will be used.</source>
          <target state="translated">该 &lt;code&gt;prefix&lt;/code&gt; 长参数必须是至少有三个字符。建议前缀是短而有意义的字符串，例如 &lt;code&gt;&quot;hjb&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;mail&quot;&lt;/code&gt; 。所述 &lt;code&gt;suffix&lt;/code&gt; 参数可以为 &lt;code&gt;null&lt;/code&gt; ，在这种情况下，后缀 &lt;code&gt;&quot;.tmp&quot;&lt;/code&gt; 将被使用。</target>
        </trans-unit>
        <trans-unit id="925230b553f62600c7f8ab6d82a4beb6853e7805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;premain&lt;/code&gt; method has one of two possible signatures. The JVM first attempts to invoke the following method on the agent class:</source>
          <target state="translated">该 &lt;code&gt;premain&lt;/code&gt; 的方法有两种可能的签名之一。JVM首先尝试在代理类上调用以下方法：</target>
        </trans-unit>
        <trans-unit id="472d7917be1b3a899af16c5d311e26bdd6f1aec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; argument specifies the &lt;a href=&quot;../../../../java.base/java/lang/process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object for the taget VM. It may be specified as &lt;code&gt;null&lt;/code&gt;. If the target VM is launched by a &lt;a href=&quot;connect/launchingconnector&quot;&gt;&lt;code&gt;LaunchingConnector&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;process&lt;/code&gt; argument should be specified, otherwise calling &lt;a href=&quot;virtualmachine#process()&quot;&gt;&lt;code&gt;VirtualMachine.process()&lt;/code&gt;&lt;/a&gt; on the created virtual machine will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;process&lt;/code&gt; 参数指定&lt;a href=&quot;../../../../java.base/java/lang/process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;的taget VM对象。可以将其指定为 &lt;code&gt;null&lt;/code&gt; 。如果目标VM是由&lt;a href=&quot;connect/launchingconnector&quot;&gt; &lt;code&gt;LaunchingConnector&lt;/code&gt; 启动&lt;/a&gt;的，则应指定 &lt;code&gt;process&lt;/code&gt; 参数，否则在创建的虚拟机上调用&lt;a href=&quot;virtualmachine#process()&quot;&gt; &lt;code&gt;VirtualMachine.process()&lt;/code&gt; &lt;/a&gt;将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0521fbe64ec7e5f9ef121124473e0d97a004ca5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;r.width&lt;/code&gt; or &lt;code&gt;r.height&lt;/code&gt; values will be automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;r.width&lt;/code&gt; 或 &lt;code&gt;r.height&lt;/code&gt; 值小于先前调用 &lt;code&gt;setMinimumSize&lt;/code&gt; 所指定的最小大小，则r.width或r.height值将自动放大。</target>
        </trans-unit>
        <trans-unit id="e5caea50061710cec044d7be43530e50e1eb551a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; argument is valid if it is greater than or equal to &lt;code&gt;MIN_RADIX&lt;/code&gt; and less than or equal to &lt;code&gt;MAX_RADIX&lt;/code&gt;. The &lt;code&gt;digit&lt;/code&gt; argument is valid if &lt;code&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;radix&lt;/code&gt; 参数大于或等于 &lt;code&gt;MIN_RADIX&lt;/code&gt; 且小于或等于 &lt;code&gt;MAX_RADIX&lt;/code&gt; ,则有效。的 &lt;code&gt;digit&lt;/code&gt; 参数是有效的，如果 &lt;code&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b33942ad43fbe9d22cb9d95c4c4908fdaa08301" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; is either smaller than &lt;a href=&quot;character#MIN_RADIX&quot;&gt;&lt;code&gt;Character.MIN_RADIX&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;character#MAX_RADIX&quot;&gt;&lt;code&gt;Character.MAX_RADIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;radix&lt;/code&gt; 是比任一较小&lt;a href=&quot;character#MIN_RADIX&quot;&gt; &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; &lt;/a&gt;大于或更大&lt;a href=&quot;character#MAX_RADIX&quot;&gt; &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d785142e5ab58037a089cd9e5a386011f0b7e09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ranges&lt;/code&gt; to be given can take one of the following forms:</source>
          <target state="translated">给出的 &lt;code&gt;ranges&lt;/code&gt; 可以采用以下形式之一：</target>
        </trans-unit>
        <trans-unit id="1259bcaaf2e03d5637399a403f2eed4bcb0658f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; has the same effect as:</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 类的 &lt;code&gt;read(b)&lt;/code&gt; 方法具有以下效果：</target>
        </trans-unit>
        <trans-unit id="4604e99f767c72aaa96525bf29f68941bb283ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b)&lt;/code&gt; method has the same effect as:</source>
          <target state="translated">的 &lt;code&gt;read(b)&lt;/code&gt; 的方法具有相同的效果为：</target>
        </trans-unit>
        <trans-unit id="85d1e68ced47f29a100869a09cd002ed4be72da4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b, off, len)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; simply calls the method &lt;code&gt;read()&lt;/code&gt; repeatedly. If the first such call results in an &lt;code&gt;IOException&lt;/code&gt;, that exception is returned from the call to the &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method. If any subsequent call to &lt;code&gt;read()&lt;/code&gt; results in a &lt;code&gt;IOException&lt;/code&gt;, the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into &lt;code&gt;b&lt;/code&gt; and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data &lt;code&gt;len&lt;/code&gt; has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.</source>
          <target state="translated">类 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;read(b, off, len)&lt;/code&gt; 方法简单地重复调用方法 &lt;code&gt;read()&lt;/code&gt; 。如果第一个此类调用导致 &lt;code&gt;IOException&lt;/code&gt; ，则该异常从调用返回到 &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; 方法。如果对 &lt;code&gt;read()&lt;/code&gt; 的任何后续调用导致 &lt;code&gt;IOException&lt;/code&gt; ，则捕获该异常并将其视为文件结束；直到该点为止读取的字节都存储在 &lt;code&gt;b&lt;/code&gt; 中,并返回发生异常之前读取的字节数。此方法的默认实现将阻塞，直到输入数据的请求数量 &lt;code&gt;len&lt;/code&gt; 为止。已被读取，检测到文件结尾或引发了异常。鼓励子类提供此方法的更有效实现。</target>
        </trans-unit>
        <trans-unit id="d053108594714cc2e678b8a8b8bcae476c059c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; simply calls the method &lt;code&gt;read()&lt;/code&gt; repeatedly. If the first such call results in an &lt;code&gt;IOException&lt;/code&gt;, that exception is returned from the call to the &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method. If any subsequent call to &lt;code&gt;read()&lt;/code&gt; results in a &lt;code&gt;IOException&lt;/code&gt;, the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into &lt;code&gt;b&lt;/code&gt; and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data &lt;code&gt;len&lt;/code&gt; has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.</source>
          <target state="translated">类 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; 方法简单地重复调用方法 &lt;code&gt;read()&lt;/code&gt; 。如果第一个此类调用导致 &lt;code&gt;IOException&lt;/code&gt; ，则该异常从调用返回到 &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; 方法。如果对 &lt;code&gt;read()&lt;/code&gt; 的任何后续调用都导致 &lt;code&gt;IOException&lt;/code&gt; ，则捕获该异常并将其视为文件结束；到该点为止读取的字节存储在 &lt;code&gt;b&lt;/code&gt; 中,并返回发生异常之前读取的字节数。该方法的默认实现将阻塞，直到输入数据的请求数量 &lt;code&gt;len&lt;/code&gt; 为止。已被读取，检测到文件结尾或引发了异常。鼓励子类提供此方法的更有效实现。</target>
        </trans-unit>
        <trans-unit id="d73e15d99486a3edb623a542384b22544dac32ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; calls the &lt;code&gt;read&lt;/code&gt; method of three arguments with the arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;read&lt;/code&gt; 的方法 &lt;code&gt;InputStream&lt;/code&gt; 调用 &lt;code&gt;read&lt;/code&gt; 的三个参数与参数方法 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;b.length&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="7efed5a820d4dabed25b8a28bd1df6414d7e77e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; calls the &lt;code&gt;read&lt;/code&gt; method of the underlying input stream. It checks for carriage returns and newline characters in the input, and modifies the current line number as appropriate. A carriage-return character or a carriage return followed by a newline character are both converted into a single newline character.</source>
          <target state="translated">该 &lt;code&gt;read&lt;/code&gt; 的方法 &lt;code&gt;LineNumberInputStream&lt;/code&gt; 调用 &lt;code&gt;read&lt;/code&gt; 基础输入流的方法。它检查输入中的回车符和换行符，并适当地修改当前行号。回车符或回车符后跟换行符都将转换为单个换行符。</target>
        </trans-unit>
        <trans-unit id="4d12f1e1c60d3ded7ff55ddd8ec9fa42dcbe1312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; repeatedly calls the &lt;code&gt;read&lt;/code&gt; method of zero arguments to fill in the byte array.</source>
          <target state="translated">该 &lt;code&gt;read&lt;/code&gt; 的方法 &lt;code&gt;LineNumberInputStream&lt;/code&gt; 反复调用 &lt;code&gt;read&lt;/code&gt; 的零个参数方法来填充字节数组英寸</target>
        </trans-unit>
        <trans-unit id="9c073aae985b3b46c91c5b9276bb615fd3d6afcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;SequenceInputStream&lt;/code&gt; tries to read the data from the current substream. If it fails to read any characters because the substream has reached the end of the stream, it calls the &lt;code&gt;close&lt;/code&gt; method of the current substream and begins reading from the next substream.</source>
          <target state="translated">&lt;code&gt;SequenceInputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法尝试从当前子流中读取数据。如果由于子流已到达流的末尾而无法读取任何字符，它将调用当前子流的 &lt;code&gt;close&lt;/code&gt; 方法并开始从下一个子流读取。</target>
        </trans-unit>
        <trans-unit id="266c4f3bc071054256173e68adbd4a6e7656ec4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;StringBufferInputStream&lt;/code&gt; cannot block. It copies the low eight bits from the characters in this input stream's buffer into the byte array argument.</source>
          <target state="translated">&lt;code&gt;StringBufferInputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法无法阻止。它将来自此输入流缓冲区中字符的低八位复制到字节数组参数中。</target>
        </trans-unit>
        <trans-unit id="e61745f20485b6632a27794087bfb013bec50ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;StringBufferInputStream&lt;/code&gt; cannot block. It returns the low eight bits of the next character in this input stream's buffer.</source>
          <target state="translated">&lt;code&gt;StringBufferInputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法无法阻止。它返回此输入流缓冲区中下一个字符的低八位。</target>
        </trans-unit>
        <trans-unit id="4aaed4854c67e469816ea074297444b594e5943c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of the &lt;code&gt;InputStream&lt;/code&gt; may throw the &lt;a href=&quot;../../../java.base/java/io/interruptedioexception&quot;&gt;&lt;code&gt;InterruptedIOException&lt;/code&gt;&lt;/a&gt; to signal the user canceled the input. The currently running snippet will be automatically &lt;a href=&quot;jshell#stop()&quot;&gt;&lt;code&gt;stopped&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法可能会抛出&lt;a href=&quot;../../../java.base/java/io/interruptedioexception&quot;&gt; &lt;code&gt;InterruptedIOException&lt;/code&gt; ,&lt;/a&gt;以指示用户取消了输入。当前正在运行的代码段将自动&lt;a href=&quot;jshell#stop()&quot;&gt; &lt;code&gt;stopped&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b68abbad5ba6fb28f94eaadf9085c6dda28742eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of the underlying stream returns &lt;code&gt;-1&lt;/code&gt;, indicating end-of-file, or</source>
          <target state="translated">基础流的 &lt;code&gt;read&lt;/code&gt; 方法返回 &lt;code&gt;-1&lt;/code&gt; ，指示文件结束，或者</target>
        </trans-unit>
        <trans-unit id="3c7f1342e13b19c7f98cefc6efd106f8e231e650" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">如果在基础通道处于非阻塞模式下调用，结果流的 &lt;code&gt;read&lt;/code&gt; 方法将抛出&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;。流将不会被缓冲，并且将不支持&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;方法。流可以安全地被多个并发线程访问。关闭流将导致通道关闭。</target>
        </trans-unit>
        <trans-unit id="6ff4f563e5b69d4b6268d50e4aa9d51aa5725103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">如果在基础通道处于非阻塞模式时调用了结果流的 &lt;code&gt;read&lt;/code&gt; 方法，则将抛出&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;。流将不会被缓冲，并且将不支持&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;方法。流可以安全地被多个并发线程访问。关闭流将导致通道关闭。</target>
        </trans-unit>
        <trans-unit id="3b7ea7159daa93e13abc58f5ee72d1aa9624ff2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the returned &lt;code&gt;InputStream&lt;/code&gt; will throw &lt;code&gt;IOException&lt;/code&gt; when reading bytes that cannot be decoded.</source>
          <target state="translated">当读取无法解码的字节时，返回的 &lt;code&gt;InputStream&lt;/code&gt; 的 &lt;code&gt;read&lt;/code&gt; 方法将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05a4ee599465096efb07afcd435e0618463168e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readData&lt;/code&gt; method adds rows to the caller. It can be implemented in a wide variety of ways and can even populate the caller with rows from a nonrelational data source. In general, a reader may invoke any of the rowset's methods, with one exception. Calling the method &lt;code&gt;execute&lt;/code&gt; will cause an &lt;code&gt;SQLException&lt;/code&gt; to be thrown because &lt;code&gt;execute&lt;/code&gt; may not be called recursively. Also, when a reader invokes &lt;code&gt;RowSet&lt;/code&gt; methods, no listeners are notified; that is, no &lt;code&gt;RowSetEvent&lt;/code&gt; objects are generated and no &lt;code&gt;RowSetListener&lt;/code&gt; methods are invoked. This is true because listeners are already being notified by the method &lt;code&gt;execute&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;readData&lt;/code&gt; 方法添加行给调用者。它可以通过多种方式实现，甚至可以使用来自非关系数据源的行填充调用方。通常，除了一个例外，阅读器可以调用任何行集的方法。调用方法 &lt;code&gt;execute&lt;/code&gt; 将导致 &lt;code&gt;SQLException&lt;/code&gt; ，因为 &lt;code&gt;execute&lt;/code&gt; 可能不会递归调用。同样，当阅读器调用 &lt;code&gt;RowSet&lt;/code&gt; 方法时，不会通知任何侦听器。也就是说，不会生成 &lt;code&gt;RowSetEvent&lt;/code&gt; 对象，也不会调用 &lt;code&gt;RowSetListener&lt;/code&gt; 方法。这是正确的，因为 &lt;code&gt;execute&lt;/code&gt; 方法已经通知了侦听器。</target>
        </trans-unit>
        <trans-unit id="b52f6c80e4a3c11df2890b54a5a8b3b1218aeabd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readlimit&lt;/code&gt; argument tells this input stream to allow that many bytes to be read before the mark position gets invalidated.</source>
          <target state="translated">该 &lt;code&gt;readlimit&lt;/code&gt; 参数告知此输入流，以允许标记位置变为非法前要读取的字节数。</target>
        </trans-unit>
        <trans-unit id="f523a2bdf73035ee44a575de3e5dff08d7683039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readlimit&lt;/code&gt; arguments tells this input stream to allow that many bytes to be read before the mark position gets invalidated.</source>
          <target state="translated">该 &lt;code&gt;readlimit&lt;/code&gt; 参数告知此输入流，以允许标记位置变为非法前要读取的字节数。</target>
        </trans-unit>
        <trans-unit id="26aa2e19c94981b7af3edb0fd924e85788e560ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; method of the underlying stream returns &lt;code&gt;false&lt;/code&gt;, indicating that further input requests would block.</source>
          <target state="translated">基础流的 &lt;code&gt;ready&lt;/code&gt; 方法返回 &lt;code&gt;false&lt;/code&gt; ，指示其他输入请求将被阻塞。</target>
        </trans-unit>
        <trans-unit id="82057f4ffe730acc914f906991a8da694e9b715d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple map-reduce on a stream, use &lt;a href=&quot;stream#map(java.util.function.Function)&quot;&gt;&lt;code&gt;Stream.map(Function)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的map-reduce，请改用&lt;a href=&quot;stream#map(java.util.function.Function)&quot;&gt; &lt;code&gt;Stream.map(Function)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="165873d7f5551dc1377b152568842b2aacddf487" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple map-reduce on a stream, use &lt;a href=&quot;stream#map-java.util.function.Function-&quot;&gt;&lt;code&gt;Stream.map(Function)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的map-reduce，请改用&lt;a href=&quot;stream#map-java.util.function.Function-&quot;&gt; &lt;code&gt;Stream.map(Function)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8dd7b9000da8c4a38e9a5b07cb2af0e9bc54239" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的还原，请改用&lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; }。</target>
        </trans-unit>
        <trans-unit id="1031f383b6493cee2618b8a613faaaa7b50cece7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce(java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的还原，请改用&lt;a href=&quot;stream#reduce(java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e64fcbf48d32ed9f489fe7ed817a63867533729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的还原，请改用&lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; }。</target>
        </trans-unit>
        <trans-unit id="331f2b86728595fcc490eed59b6a8eb8cea11e3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">的 &lt;code&gt;reducing()&lt;/code&gt; 在多级降低，下游使用时集热器是最有用的 &lt;code&gt;groupingBy&lt;/code&gt; 或 &lt;code&gt;partitioningBy&lt;/code&gt; 。要对流执行简单的还原，请改用&lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6e4a1cfb3d954ef8dc93a66017c84659865340e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refresh&lt;/code&gt; method causes the policy object to refresh/reload its data. This operation is implementation-dependent. For example, if the policy object stores its data in configuration files, calling &lt;code&gt;refresh&lt;/code&gt; will cause it to re-read the configuration policy files. If a refresh operation is not supported, this method does nothing. Note that refreshed policy may not have an effect on classes in a particular ProtectionDomain. This is dependent on the Policy provider's implementation of the &lt;code&gt;implies&lt;/code&gt; method and its PermissionCollection caching strategy.</source>
          <target state="translated">该 &lt;code&gt;refresh&lt;/code&gt; 方法会导致策略对象刷新/重载其数据。此操作取决于实现。例如，如果策略对象将其数据存储在配置文件中，则调用 &lt;code&gt;refresh&lt;/code&gt; 将导致其重新读取配置策略文件。如果不支持刷新操作，则此方法不执行任何操作。请注意，刷新的策略可能不会对特定ProtectionDomain中的类产生影响。这取决于策略提供程序对 &lt;code&gt;implies&lt;/code&gt; 方法的实现及其PermissionCollection缓存策略。</target>
        </trans-unit>
        <trans-unit id="e2cb1c75917513fd66c67c74580c51f242c6ba51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refreshRow&lt;/code&gt; method provides a way for an application to explicitly tell the JDBC driver to refetch a row(s) from the database. An application may want to call &lt;code&gt;refreshRow&lt;/code&gt; when caching or prefetching is being done by the JDBC driver to fetch the latest value of a row from the database. The JDBC driver may actually refresh multiple rows at once if the fetch size is greater than one.</source>
          <target state="translated">该 &lt;code&gt;refreshRow&lt;/code&gt; 方法提供了一个应用程序明确地告诉JDBC驱动程序从数据库重新获取行（S）的方式。当JDBC驱动程序进行缓存或预取时，应用程序可能需要调用 &lt;code&gt;refreshRow&lt;/code&gt; 来从数据库中获取行的最新值。如果获取大小大于一，则JDBC驱动程序实际上可以一次刷新多行。</target>
        </trans-unit>
        <trans-unit id="b92536f2a5a0e1a3b6f9a0f2c5c546403063f5bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerMBean&lt;/code&gt; method is simpler for local use, but cannot be used remotely. The &lt;code&gt;createMBean&lt;/code&gt; method can be used remotely, but sometimes requires attention to class loading issues.</source>
          <target state="translated">该 &lt;code&gt;registerMBean&lt;/code&gt; 方法对于本地使用较为简单，但不能远程使用。在 &lt;code&gt;createMBean&lt;/code&gt; 方法可以远程使用，但有时需要注意类加载问题。</target>
        </trans-unit>
        <trans-unit id="3bd964509b0c0b7b2aff54193499f79341906bf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerObject&lt;/code&gt; method is used to register an activation descriptor, &lt;code&gt;desc&lt;/code&gt;, and obtain an activation identifier for a activatable remote object.</source>
          <target state="translated">该 &lt;code&gt;registerObject&lt;/code&gt; 方法用于注册一个激活描述符， &lt;code&gt;desc&lt;/code&gt; ，并获得用于激活远程对象的激活标识符。</target>
        </trans-unit>
        <trans-unit id="0648dc19ee55d0e590d0f1e083a26887e631abbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerObject&lt;/code&gt; method is used to register an activation descriptor, &lt;code&gt;desc&lt;/code&gt;, and obtain an activation identifier for a activatable remote object. The &lt;code&gt;ActivationSystem&lt;/code&gt; creates an &lt;code&gt;ActivationID&lt;/code&gt; (a activation identifier) for the object specified by the descriptor, &lt;code&gt;desc&lt;/code&gt;, and records, in stable storage, the activation descriptor and its associated identifier for later use. When the &lt;code&gt;Activator&lt;/code&gt; receives an &lt;code&gt;activate&lt;/code&gt; request for a specific identifier, it looks up the activation descriptor (registered previously) for the specified identifier and uses that information to activate the object.</source>
          <target state="translated">该 &lt;code&gt;registerObject&lt;/code&gt; 方法用于注册一个激活描述符， &lt;code&gt;desc&lt;/code&gt; ，并获得用于激活远程对象的激活标识符。所述 &lt;code&gt;ActivationSystem&lt;/code&gt; 创建 &lt;code&gt;ActivationID&lt;/code&gt; 为描述符，指定的对象（一个激活标识符） &lt;code&gt;desc&lt;/code&gt; ，和记录，在稳定的储存，激活描述符及其相关联以供以后使用标识符。当 &lt;code&gt;Activator&lt;/code&gt; 收到对特定标识符的 &lt;code&gt;activate&lt;/code&gt; 请求时，它将查找指定标识符的激活描述符（先前注册），并使用该信息来激活对象。</target>
        </trans-unit>
        <trans-unit id="d5b769a6261bcf9c925196e481e33f743eb9161c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceEditor&lt;/code&gt; method is called when the spinners editor is changed with &lt;code&gt;JSpinner.setEditor&lt;/code&gt;. If you've overriden this method, then you'll probably want to override &lt;code&gt;replaceEditor&lt;/code&gt; as well.</source>
          <target state="translated">该 &lt;code&gt;replaceEditor&lt;/code&gt; 当纺纱编辑器与改变方法被调用 &lt;code&gt;JSpinner.setEditor&lt;/code&gt; 。如果您已覆盖此方法，则可能还需要覆盖 &lt;code&gt;replaceEditor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2bff7fa0a0c8c4fa4c945d1cc03fe4bb97f5383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;required&lt;/code&gt; field is &lt;code&gt;true&lt;/code&gt; if a value must be supplied for this property during &lt;code&gt;Driver.connect&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">该 &lt;code&gt;required&lt;/code&gt; 领域是 &lt;code&gt;true&lt;/code&gt; ，如果必须在此属性提供一个值 &lt;code&gt;Driver.connect&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; ，否则。</target>
        </trans-unit>
        <trans-unit id="dec43624de062d1e7493f56cb68ff2515b4d245d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reset&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; resets the line number to be the line number at the time the &lt;code&gt;mark&lt;/code&gt; method was called, and then calls the &lt;code&gt;reset&lt;/code&gt; method of the underlying input stream.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; 的 &lt;code&gt;reset&lt;/code&gt; 方法将行号重置为调用 &lt;code&gt;mark&lt;/code&gt; 方法时的行号，然后调用基础输入流的 &lt;code&gt;reset&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="bcb2620e18cfc65d493f7d3aa17132a5ca731483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root&lt;/code&gt; node of the &lt;code&gt;TreeWalker&lt;/code&gt;, as specified when it was created.</source>
          <target state="translated">创建时指定的 &lt;code&gt;TreeWalker&lt;/code&gt; 的 &lt;code&gt;root&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef077420b03ffbe4cf9c89bd8f72839c46602b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The &lt;code&gt;h&lt;/code&gt; component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model.</source>
          <target state="translated">该 &lt;code&gt;s&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 组分应（在0.0-1.0范围内的数字）是零和一之间的浮点值。的 &lt;code&gt;h&lt;/code&gt; 组分可以是任何浮点数。从该底数中减去该底数以创建介于0和1之间的分数。然后将该分数乘以360，以在HSB颜色模型中产生色相角。</target>
        </trans-unit>
        <trans-unit id="e6920483d1b5d5fdadee6caa3bd9747d28274c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;saturation&lt;/code&gt; and &lt;code&gt;brightness&lt;/code&gt; components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The &lt;code&gt;hue&lt;/code&gt; component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model.</source>
          <target state="translated">的 &lt;code&gt;saturation&lt;/code&gt; 和 &lt;code&gt;brightness&lt;/code&gt; 分量应（在0.0-1.0范围内的数字）是零和一之间的浮点值。所述 &lt;code&gt;hue&lt;/code&gt; 组分可以是任何浮点数。从该底数中减去该底数以创建介于0和1之间的分数。然后将该分数乘以360，以在HSB颜色模型中产生色相角。</target>
        </trans-unit>
        <trans-unit id="9e487af727a443b2fc09683914bf955d5aed101d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schedule&lt;/code&gt; methods create tasks with various delays and return a task object that can be used to cancel or check execution. The &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; and &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; methods create and execute tasks that run periodically until cancelled.</source>
          <target state="translated">该 &lt;code&gt;schedule&lt;/code&gt; 方法创建各种延迟任务，并返回一个可用于取消或检查执行任务的对象。该 &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; 和 &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; 方法创建并执行定期运行，直到取消的任务。</target>
        </trans-unit>
        <trans-unit id="08c9e29dc36b0482fbc29013fb24d1e073d335c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollUnderway&lt;/code&gt; flag is used for components like &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;scrollUnderway&lt;/code&gt; 标志用于类似的部件 &lt;code&gt;JList&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="0d1c017ef96a248d10e61c88fe2cbb2851eb303e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollUnderway&lt;/code&gt; flag is used for components like &lt;code&gt;JList&lt;/code&gt;. When the downarrow key is pressed on a &lt;code&gt;JList&lt;/code&gt; and the selected cell is the last in the list, the &lt;code&gt;scrollpane&lt;/code&gt; autoscrolls. Here, the old selected cell needs repainting and so we need a flag to make the viewport do the optimized painting only when there is an explicit call to &lt;code&gt;setViewPosition(Point)&lt;/code&gt;. When &lt;code&gt;setBounds&lt;/code&gt; is called through other routes, the flag is off and the view repaints normally. Another approach would be to remove this from the &lt;code&gt;JViewport&lt;/code&gt; class and have the &lt;code&gt;JList&lt;/code&gt; manage this case by using &lt;code&gt;setBackingStoreEnabled&lt;/code&gt;. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;scrollUnderway&lt;/code&gt; 标志用于类似的部件 &lt;code&gt;JList&lt;/code&gt; 的。当按下 &lt;code&gt;JList&lt;/code&gt; 上的向下箭头键并且所选单元格是列表中的最后一个单元格时， &lt;code&gt;scrollpane&lt;/code&gt; 自动滚动。在这里，旧的选定单元格需要重新绘制，因此我们仅在显式调用 &lt;code&gt;setViewPosition(Point)&lt;/code&gt; 时才需要一个标记，以使视口进行优化绘制。当 &lt;code&gt;setBounds&lt;/code&gt; 通过其他途径调用时，标志为OFF和视图正常重绘。另一种方法是将其从 &lt;code&gt;JViewport&lt;/code&gt; 类中删除，并让 &lt;code&gt;JList&lt;/code&gt; 通过使用 &lt;code&gt;setBackingStoreEnabled&lt;/code&gt; 来管理这种情况。默认是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="275b9770ecb642dad5739bf9b860015b219e5bc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;seekForwardOnly&lt;/code&gt; parameter controls whether the value returned by &lt;code&gt;getMinIndex&lt;/code&gt; will be increased as each image (or thumbnail, or image metadata) is read. If &lt;code&gt;seekForwardOnly&lt;/code&gt; is true, then a call to &lt;code&gt;read(index)&lt;/code&gt; will throw an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; if &lt;code&gt;index &amp;lt; this.minIndex&lt;/code&gt;; otherwise, the value of &lt;code&gt;minIndex&lt;/code&gt; will be set to &lt;code&gt;index&lt;/code&gt;. If &lt;code&gt;seekForwardOnly&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;minIndex&lt;/code&gt; will remain 0 regardless of any read operations.</source>
          <target state="translated">的 &lt;code&gt;seekForwardOnly&lt;/code&gt; 参数控制是否由返回的值 &lt;code&gt;getMinIndex&lt;/code&gt; 将作为各图像（或缩略图或图像元数据）来增加被读取。如果 &lt;code&gt;seekForwardOnly&lt;/code&gt; 为true，则如果 &lt;code&gt;index &amp;lt; this.minIndex&lt;/code&gt; ; 对 &lt;code&gt;read(index)&lt;/code&gt; 的调用将引发 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 。否则， &lt;code&gt;minIndex&lt;/code&gt; 的值将设置为 &lt;code&gt;index&lt;/code&gt; 。如果 &lt;code&gt;seekForwardOnly&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则无论任何读取操作， &lt;code&gt;minIndex&lt;/code&gt; 的值都将保持为0。</target>
        </trans-unit>
        <trans-unit id="d1482f0d46f1a2acb9dc1233fcf5f91d87996d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sendClose&lt;/code&gt; method does not close this WebSocket's input. It merely closes this WebSocket's output by sending a Close message. To enforce closing the input, invoke the &lt;code&gt;abort&lt;/code&gt; method. Here is an example of an application that sends a Close message, and then starts a timer. Once no data has been received within the specified timeout, the timer goes off and the alarm aborts &lt;code&gt;WebSocket&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;sendClose&lt;/code&gt; 方法不会关闭该网页套接字的输入。它只是通过发送Close消息来关闭此WebSocket的输出。要强制关闭输入，请调用 &lt;code&gt;abort&lt;/code&gt; 方法。这是一个发送关闭消息，然后启动计时器的应用程序示例。在指定的超时时间内未收到任何数据时，计时器将关闭，并且警报将中止 &lt;code&gt;WebSocket&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b372bf4225287956fe3cfd675126ff074ca47b28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setCharacterAttributes()&lt;/code&gt; method takes four arguments . The first and second arguments identify a region in the Document that is to be changed. The third argument specifies the new attributes (as an AttributeSet), and the fourth argument determines if the new attributes should be added to the existing attributes (a value of false) or if the character Element should replace its existing attributes with the new attributes (a value of true).</source>
          <target state="translated">所述 &lt;code&gt;setCharacterAttributes()&lt;/code&gt; 方法有四个参数。第一个和第二个自变量标识文档中要更改的区域。第三个参数指定新属性（作为AttributeSet），第四个参数确定是否应将新属性添加到现有属性（值为false），或者字符Element应该用新属性替换其现有属性（值true）。</target>
        </trans-unit>
        <trans-unit id="2b89c456d2b4bd25e583ec6cc1aa01d8496f3f6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPaintMode&lt;/code&gt; method is implemented as a convenience method to set the default &lt;code&gt;Composite&lt;/code&gt;, equivalent to &lt;code&gt;setComposite(new AlphaComposite.SrcOver)&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;setPaintMode&lt;/code&gt; 方法被实现为一个方便的方法来设置默认的 &lt;code&gt;Composite&lt;/code&gt; ，相当于 &lt;code&gt;setComposite(new AlphaComposite.SrcOver)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43b250cc63cb491b2b4915e37282c63d786eef72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setSize&lt;/code&gt; method should be prepared to be called a number of times (i.e. It may be called even if the size didn't change). The &lt;code&gt;setSize&lt;/code&gt; method is generally called to make sure the View layout is complete prior to trying to perform an operation on it that requires an up-to-date layout. A view's size should &lt;em&gt;always&lt;/em&gt; be set to a value within the minimum and maximum span specified by that view. Additionally, the view must always call the &lt;code&gt;preferenceChanged&lt;/code&gt; method on the parent if it has changed the values for the layout it would like, and expects the parent to honor. The parent View is not required to recognize a change until the &lt;code&gt;preferenceChanged&lt;/code&gt; has been sent. This allows parent View implementations to cache the child requirements if desired. The calling sequence looks something like the following:</source>
          <target state="translated">该 &lt;code&gt;setSize&lt;/code&gt; 方法应该准备被称为次数（即，即使大小没有改变它可以被称为）。该 &lt;code&gt;setSize&lt;/code&gt; 方法通常被称为以确保景观布局试图对其执行的操作，需要一个跟上时代的布局之前完成。视图的大小应&lt;em&gt;始终&lt;/em&gt;设置为该视图指定的最小和最大范围内的值。此外，如果视图更改了想要的布局值，并且希望父级接受，则该视图必须始终在父级上调用 &lt;code&gt;preferenceChanged&lt;/code&gt; 方法。直到 &lt;code&gt;preferenceChanged&lt;/code&gt; ，父视图才需要识别更改已经发送。如果需要，这允许父级View实现缓存子级需求。调用顺序如下所示：</target>
        </trans-unit>
        <trans-unit id="146eb04c811039b6ff998f453c63a8e8d4185f58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setValue(String)&lt;/code&gt;, &lt;code&gt;getValue()&lt;/code&gt; and &lt;code&gt;combine(Set&amp;lt;String&amp;gt;)&lt;/code&gt; methods are invoked when a setting value changes, which typically happens when a recording is started or stopped. The &lt;code&gt;combine(Set&amp;lt;String&amp;gt;)&lt;/code&gt; method is invoked to resolve what value to use when multiple recordings are running at the same time.</source>
          <target state="translated">所述 &lt;code&gt;setValue(String)&lt;/code&gt; ， &lt;code&gt;getValue()&lt;/code&gt; 和 &lt;code&gt;combine(Set&amp;lt;String&amp;gt;)&lt;/code&gt; 方法被调用时的设定值的变化，当记录开始或停止，其通常发生。该 &lt;code&gt;combine(Set&amp;lt;String&amp;gt;)&lt;/code&gt; 当多个录音在同一时间运行的方法被调用，以解决什么价值来使用。</target>
        </trans-unit>
        <trans-unit id="42f025b3d9979c63bfda933d9c9717fb99aa29ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setXORMode(Color xorcolor)&lt;/code&gt; method is implemented as a convenience method to set a special &lt;code&gt;Composite&lt;/code&gt; object that ignores the &lt;code&gt;Alpha&lt;/code&gt; components of source colors and sets the destination color to the value:</source>
          <target state="translated">所述 &lt;code&gt;setXORMode(Color xorcolor)&lt;/code&gt; 方法被实现为一个方便的方法来设置一个特殊的 &lt;code&gt;Composite&lt;/code&gt; 忽略对象 &lt;code&gt;Alpha&lt;/code&gt; 的源色彩成分并设置目标色为值：</target>
        </trans-unit>
        <trans-unit id="e4d9578b126fe071444650921e8afdae2dde1b52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shape&lt;/code&gt; argument may have the following values:</source>
          <target state="translated">的 &lt;code&gt;shape&lt;/code&gt; 参数可以具有以下值：</target>
        </trans-unit>
        <trans-unit id="f788aeac802ff7904bf9412e16d01319cb050308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sign&lt;/code&gt; method of &lt;code&gt;XMLSignature&lt;/code&gt;s produced by &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMSignContext&lt;/code&gt; types and the &lt;code&gt;validate&lt;/code&gt; method MUST support &lt;code&gt;DOMValidateContext&lt;/code&gt; types. This requirement also applies to the &lt;code&gt;validate&lt;/code&gt; method of &lt;code&gt;
 SignatureValue&lt;/code&gt; and the &lt;code&gt;validate&lt;/code&gt; method of &lt;code&gt;Reference&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLSignature&lt;/code&gt; Factory生成的 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 的 &lt;code&gt;sign&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMSignContext&lt;/code&gt; 类型，而 &lt;code&gt;validate&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMValidateContext&lt;/code&gt; 类型。这个要求也适用于 &lt;code&gt;validate&lt;/code&gt; 的方法 &lt;code&gt; SignatureValue&lt;/code&gt; 和 &lt;code&gt;validate&lt;/code&gt; 的方法 &lt;code&gt;Reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf825e34076ebaf2f0b03cf88441dbd2884319b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signature&lt;/code&gt; array parameter is internally copied, so that subsequent changes to the array referenced by &lt;code&gt;
 signature&lt;/code&gt; have no effect on this instance.</source>
          <target state="translated">的 &lt;code&gt;signature&lt;/code&gt; 数组参数在内部复制，以便后续通过引用的数组变化 &lt;code&gt; signature&lt;/code&gt; 对这种情况下没有影响。</target>
        </trans-unit>
        <trans-unit id="76ca7bc87a7a645eee5be869e5f2afee6e7546a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signature&lt;/code&gt; array parameter is internally copied, so that subsequent changes to the array referenced by &lt;code&gt;signature&lt;/code&gt; have no effect on this instance.</source>
          <target state="translated">的 &lt;code&gt;signature&lt;/code&gt; 数组参数在内部复制，以便后续通过引用的数组变化 &lt;code&gt;signature&lt;/code&gt; 对这种情况下没有影响。</target>
        </trans-unit>
        <trans-unit id="4ab62abd8dea24de7feab17efb96ab240af801b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;isEmpty&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, and &lt;code&gt;listIterator&lt;/code&gt; operations run in constant time. The &lt;code&gt;add&lt;/code&gt; operation runs in</source>
          <target state="translated">在 &lt;code&gt;size&lt;/code&gt; ， &lt;code&gt;isEmpty&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;iterator&lt;/code&gt; 和 &lt;code&gt;listIterator&lt;/code&gt; 操作在固定时间内运行。该 &lt;code&gt;add&lt;/code&gt; 运行在运行</target>
        </trans-unit>
        <trans-unit id="9a1118dd39358bc6d8e191accb546fe46ebdd2b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method implementation of this class creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached. Subclasses are encouraged to provide a more efficient implementation of this method. For instance, the implementation may depend on the ability to seek.</source>
          <target state="translated">此类的 &lt;code&gt;skip&lt;/code&gt; 方法实现创建一个字节数组，然后重复读取该字节数组，直到已读取 &lt;code&gt;n&lt;/code&gt; 个字节或到达流的末尾为止。鼓励子类提供此方法的更有效实现。例如，实现可能取决于搜索的能力。</target>
        </trans-unit>
        <trans-unit id="a4a7eb3594e941fdb97e903210733646c272b12a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is negative, the method will try to skip backwards. In case the backing file does not support backward skip at its current position, an &lt;code&gt;IOException&lt;/code&gt; is thrown. The actual number of bytes skipped is returned. If it skips forwards, it returns a positive value. If it skips backwards, it returns a negative value.</source>
          <target state="translated">的 &lt;code&gt;skip&lt;/code&gt; 方法，可有多种原因，最终跳过一些较小的字节数，可能 &lt;code&gt;0&lt;/code&gt; 。如果 &lt;code&gt;n&lt;/code&gt; 为负，则该方法将尝试向后跳过。如果备份文件在其当前位置不支持向后跳过，则将抛出 &lt;code&gt;IOException&lt;/code&gt; 。返回跳过的实际字节数。如果向前跳过，它将返回一个正值。如果向后跳过，则返回负值。</target>
        </trans-unit>
        <trans-unit id="66c38c1c54f362c964143fb2033b1ddc5a7e0a28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; 的 &lt;code&gt;skip&lt;/code&gt; 方法创建一个字节数组，然后重复读取该字节数组，直到已读取 &lt;code&gt;n&lt;/code&gt; 个字节或到达流的末尾。</target>
        </trans-unit>
        <trans-unit id="6a923526e0376b2377270933dbe7190607b0ff31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of &lt;code&gt;PushbackInputStream&lt;/code&gt; first skips over the bytes in the pushback buffer, if any. It then calls the &lt;code&gt;skip&lt;/code&gt; method of the underlying input stream if more bytes need to be skipped. The actual number of bytes skipped is returned.</source>
          <target state="translated">&lt;code&gt;PushbackInputStream&lt;/code&gt; 的 &lt;code&gt;skip&lt;/code&gt; 方法首先跳过推回缓冲区中的字节（如果有）。然后，如果需要跳过更多字节，它将调用基础输入流的 &lt;code&gt;skip&lt;/code&gt; 方法。返回跳过的实际字节数。</target>
        </trans-unit>
        <trans-unit id="c16533536dab6e2f9b65c6a5002fc87433ad4e31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of this class creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached. Subclasses are encouraged to provide a more efficient implementation of this method. For instance, the implementation may depend on the ability to seek.</source>
          <target state="translated">此类的 &lt;code&gt;skip&lt;/code&gt; 方法创建一个字节数组，然后重复读取该字节数组，直到已读取 &lt;code&gt;n&lt;/code&gt; 个字节或到达流的末尾为止。鼓励子类提供此方法的更有效实现。例如，实施可能取决于寻找的能力。</target>
        </trans-unit>
        <trans-unit id="48bb13788e4dffd1bf5c784a19fc6b8edec85d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument and &lt;code&gt;dest&lt;/code&gt; argument refer to arrays whose component types are different primitive types.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数和 &lt;code&gt;dest&lt;/code&gt; 参数指阵列，其部件类型是不同的原始类型。</target>
        </trans-unit>
        <trans-unit id="2ded185c55f988e1ab8aa4ba594d8425c8a39394" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an array with a primitive component type and the &lt;code&gt;dest&lt;/code&gt; argument refers to an array with a reference component type.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数指的是具有基本组件类型的数组和 &lt;code&gt;dest&lt;/code&gt; 参数指的是与基准组件类型的数组。</target>
        </trans-unit>
        <trans-unit id="9b64842c9ed7d557d1d18f19836d86fd1cadc9b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an array with a reference component type and the &lt;code&gt;dest&lt;/code&gt; argument refers to an array with a primitive component type.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数指的是与基准组件类型的数组和 &lt;code&gt;dest&lt;/code&gt; 参数指的是具有基本组件类型的数组。</target>
        </trans-unit>
        <trans-unit id="17390f5ec2c7023bf41b502643c3390be1470837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an object that is not an array.</source>
          <target state="translated">该 &lt;code&gt;src&lt;/code&gt; 参数指的对象不是阵列。</target>
        </trans-unit>
        <trans-unit id="32cf5d4487a70ff5b3296fb66460f51ac7c6a160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcPos&lt;/code&gt; argument is negative.</source>
          <target state="translated">该 &lt;code&gt;srcPos&lt;/code&gt; 参数为负。</target>
        </trans-unit>
        <trans-unit id="be02728a3743350708b8b357f2bfb78e56f08541" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; handles must not be &lt;code&gt;null&lt;/code&gt;, and must both return the common type &lt;code&gt;int&lt;/code&gt;, referred to here as &lt;code&gt;I&lt;/code&gt; in parameter type lists.</source>
          <target state="translated">在 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 的把手不能是 &lt;code&gt;null&lt;/code&gt; 的，必须都返回常见的类型 &lt;code&gt;int&lt;/code&gt; ，这里称为 &lt;code&gt;I&lt;/code&gt; 在参数类型列表。</target>
        </trans-unit>
        <trans-unit id="6dc25c0527566429af8136756050546b7203d021" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; parameters can be &lt;code&gt;null&lt;/code&gt; to indicate that the range doesn't have an upper or lower bound. If &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;calendarField&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if both &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are specified and &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. Similarly if &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum)&lt;/code&gt; is false, an IllegalArgumentException is thrown.</source>
          <target state="translated">的 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 参数可以是 &lt;code&gt;null&lt;/code&gt; 以指示该范围不具有上限或下限。如果 &lt;code&gt;value&lt;/code&gt; 或 &lt;code&gt;calendarField&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，或者同时指定了 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; ，并且 &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; 则抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。类似地，如果 &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum)&lt;/code&gt; 为false，则抛出IllegalArgumentException。</target>
        </trans-unit>
        <trans-unit id="3c17d5d7d0e68ab4ec50eef0d86ee3e15e17df97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startPipeline&lt;/code&gt; method performs the same checks on each ProcessBuilder as does the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Each new process invokes the command and arguments given by the respective process builder's &lt;a href=&quot;#command()&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt;, in a working directory as given by its &lt;a href=&quot;#directory()&quot;&gt;&lt;code&gt;directory()&lt;/code&gt;&lt;/a&gt;, with a process environment as given by its &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;startPipeline&lt;/code&gt; 方法上一样的每个的ProcessBuilder执行相同的检查&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;方法。每个新进程都会在其&lt;a href=&quot;#directory()&quot;&gt; &lt;code&gt;directory()&lt;/code&gt; &lt;/a&gt;给定的工作目录中调用相应进程生成器的&lt;a href=&quot;#command()&quot;&gt; &lt;code&gt;command()&lt;/code&gt; &lt;/a&gt;给定的命令和自变量，并由&lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;给定一个进程环境。</target>
        </trans-unit>
        <trans-unit id="e4cc6c311e7eebc97573c7745efa0c1accd23d43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startPipeline&lt;/code&gt; method performs the same checks on each ProcessBuilder as does the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. The new process will invoke the command and arguments given by &lt;a href=&quot;#command()&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt;, in a working directory as given by &lt;a href=&quot;#directory()&quot;&gt;&lt;code&gt;directory()&lt;/code&gt;&lt;/a&gt;, with a process environment as given by &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;startPipeline&lt;/code&gt; 方法上一样的每个的ProcessBuilder执行相同的检查&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;方法。新进程将在由&lt;a href=&quot;#directory()&quot;&gt; &lt;code&gt;directory()&lt;/code&gt; &lt;/a&gt;给定的工作目录中调用由&lt;a href=&quot;#command()&quot;&gt; &lt;code&gt;command()&lt;/code&gt; &lt;/a&gt;给定的命令和参数，并具有由&lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;给定的进程环境。</target>
        </trans-unit>
        <trans-unit id="076b65d1dcb2536b5b9253389218e30908409663" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stateChange&lt;/code&gt; of any &lt;code&gt;ItemEvent&lt;/code&gt; instance takes one of the following values:</source>
          <target state="translated">任何 &lt;code&gt;ItemEvent&lt;/code&gt; 实例的 &lt;code&gt;stateChange&lt;/code&gt; 均采用以下值之一：</target>
        </trans-unit>
        <trans-unit id="4d7e3c187b7502624a8ff731ccc49ed33e5b1f80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;statusCode&lt;/code&gt; is an integer from the range &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 4999&lt;/code&gt;. Status codes &lt;code&gt;1002&lt;/code&gt;, &lt;code&gt;1003&lt;/code&gt;, &lt;code&gt;1006&lt;/code&gt;, &lt;code&gt;1007&lt;/code&gt;, &lt;code&gt;1009&lt;/code&gt;, &lt;code&gt;1010&lt;/code&gt;, &lt;code&gt;1012&lt;/code&gt;, &lt;code&gt;1013&lt;/code&gt; and &lt;code&gt;1015&lt;/code&gt; are illegal. Behaviour in respect to other status codes is implementation-specific. A legal &lt;code&gt;reason&lt;/code&gt; is a string that has a UTF-8 representation not longer than &lt;code&gt;123&lt;/code&gt; bytes.</source>
          <target state="translated">所述 &lt;code&gt;statusCode&lt;/code&gt; 是从范围内的整数 &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 4999&lt;/code&gt; 。状态代码 &lt;code&gt;1002&lt;/code&gt; ， &lt;code&gt;1003&lt;/code&gt; ， &lt;code&gt;1006&lt;/code&gt; ， &lt;code&gt;1007&lt;/code&gt; ， &lt;code&gt;1009&lt;/code&gt; ， &lt;code&gt;1010&lt;/code&gt; ， &lt;code&gt;1012&lt;/code&gt; ， &lt;code&gt;1013&lt;/code&gt; 和 &lt;code&gt;1015&lt;/code&gt; 是非法的。与其他状态代码有关的行为是特定于实现的。合法 &lt;code&gt;reason&lt;/code&gt; 是字符串的UTF-8表示形式不超过 &lt;code&gt;123&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="96a37830010cc84066474823aaa8925f3e262fd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopPropagation&lt;/code&gt; method is used prevent further propagation of an event during event flow.</source>
          <target state="translated">使用 &lt;code&gt;stopPropagation&lt;/code&gt; 方法可防止事件在事件流中进一步传播。</target>
        </trans-unit>
        <trans-unit id="87a32d228a0f8798ef1bced948af76af2274fc0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopPropagation&lt;/code&gt; method is used prevent further propagation of an event during event flow. If this method is called by any &lt;code&gt;EventListener&lt;/code&gt; the event will cease propagating through the tree. The event will complete dispatch to all listeners on the current &lt;code&gt;EventTarget&lt;/code&gt; before event flow stops. This method may be used during any stage of event flow.</source>
          <target state="translated">使用 &lt;code&gt;stopPropagation&lt;/code&gt; 方法可防止事件在事件流中进一步传播。如果任何 &lt;code&gt;EventListener&lt;/code&gt; 调用了此方法，则事件将停止在树中传播。事件将在事件流停止之前完成分派给当前 &lt;code&gt;EventTarget&lt;/code&gt; 上的所有侦听器。在事件流的任何阶段都可以使用此方法。</target>
        </trans-unit>
        <trans-unit id="345b6d87d178ad048ca717372d6308e35699c398" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stream&lt;/code&gt; walks the file tree as elements are consumed. The &lt;code&gt;Stream&lt;/code&gt; returned is guaranteed to have at least one element, the starting file itself. For each file visited, the stream attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is a directory and can be opened successfully, entries in the directory, and their &lt;em&gt;descendants&lt;/em&gt; will follow the directory in the stream as they are encountered. When all entries have been visited, then the directory is closed. The file tree walk then continues at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">当元素被消耗时， &lt;code&gt;stream&lt;/code&gt; 遍历文件树。返回的 &lt;code&gt;Stream&lt;/code&gt; 保证至少包含一个元素，即起始文件本身。对于每个访问的文件，流将尝试读取其&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;。如果文件是目录并且可以成功打开，则目录中的条目及其&lt;em&gt;后代&lt;/em&gt;将在遇到流时跟随该目录。访问完所有条目后，目录将关闭。然后，文件树遍历在目录的下一个&lt;em&gt;同级&lt;/em&gt;处继续。</target>
        </trans-unit>
        <trans-unit id="b3710d2b5eccac183494c98736ff55e0daad76d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;system&lt;/code&gt; factory methods provide clocks based on the best available system clock This may use &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">该 &lt;code&gt;system&lt;/code&gt; 工厂方法提供基于现有的最佳系统时钟，这可能使用时钟&lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;，或更高分辨率的时钟（如果可用）。</target>
        </trans-unit>
        <trans-unit id="bbed603ba13286eef01f00c49ed0143e560232fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;system&lt;/code&gt; factory methods provide clocks based on the best available system clock This may use &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">该 &lt;code&gt;system&lt;/code&gt; 工厂方法提供基于现有的最佳系统时钟，这可能使用时钟&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;，或更高分辨率的时钟（如果可用）。</target>
        </trans-unit>
        <trans-unit id="705416f1898f90c6d7101837ec2872b8de0927e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemId&lt;/code&gt; will be used literally, with no attempt to be made absolute to the &lt;code&gt;baseUri&lt;/code&gt;. The &lt;code&gt;baseUri&lt;/code&gt; and &lt;code&gt;namespace&lt;/code&gt; are not used in the search for a match in a catalog. However, a relative &lt;code&gt;systemId&lt;/code&gt; in an xml source may have been made absolute by the parser with the &lt;code&gt;baseURI&lt;/code&gt;, thus making it unable to find a &lt;code&gt;system&lt;/code&gt; entry. In such a case, a &lt;code&gt;systemSuffix&lt;/code&gt; entry is recommended over a &lt;code&gt;system&lt;/code&gt; entry.</source>
          <target state="translated">该 &lt;code&gt;systemId&lt;/code&gt; 将用文字代替，没有试图做出绝对的 &lt;code&gt;baseUri&lt;/code&gt; 。在 &lt;code&gt;baseUri&lt;/code&gt; 和 &lt;code&gt;namespace&lt;/code&gt; 中寻找一种产品目录中的比赛没有被使用。但是，解析器使用 &lt;code&gt;baseURI&lt;/code&gt; 可能已将xml源中的相对 &lt;code&gt;systemId&lt;/code&gt; 设置为绝对，从而使其无法找到 &lt;code&gt;system&lt;/code&gt; 条目。在这种情况下，建议在 &lt;code&gt;system&lt;/code&gt; 条目上使用 &lt;code&gt;systemSuffix&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="5fa8fe0340ab2e43b8e4f2fccf1346d93701ab46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemId&lt;/code&gt; will be used literally, with no attempt to be made absolute to the &lt;code&gt;baseUri&lt;/code&gt;. The &lt;code&gt;baseUri&lt;/code&gt;, &lt;code&gt;namespaceUri&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; are not used in the search for a match in a catalog. However, a relative &lt;code&gt;systemId&lt;/code&gt; in a source may have been made absolute by the parser with the &lt;code&gt;baseURI&lt;/code&gt;, thus making it unable to find a &lt;code&gt;system&lt;/code&gt; entry. In such a case, a &lt;code&gt;systemSuffix&lt;/code&gt; entry is recommended over a &lt;code&gt;system&lt;/code&gt; entry.</source>
          <target state="translated">该 &lt;code&gt;systemId&lt;/code&gt; 将用文字代替，没有试图做出绝对的 &lt;code&gt;baseUri&lt;/code&gt; 。的 &lt;code&gt;baseUri&lt;/code&gt; ， &lt;code&gt;namespaceUri&lt;/code&gt; 和 &lt;code&gt;type&lt;/code&gt; 在寻求在一个目录中的匹配不被使用。但是，解析器使用 &lt;code&gt;baseURI&lt;/code&gt; 可能已将源中的相对 &lt;code&gt;systemId&lt;/code&gt; 设为绝对，因此无法找到 &lt;code&gt;system&lt;/code&gt; 条目。在这种情况下，建议在 &lt;code&gt;system&lt;/code&gt; 条目上使用 &lt;code&gt;systemSuffix&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="102c04e139e85c06b332c1cf89cc171685c4335a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;cleanup&lt;/code&gt; handles must have the same corresponding argument and return types, except that the &lt;code&gt;cleanup&lt;/code&gt; handle may omit trailing arguments. Also, the &lt;code&gt;cleanup&lt;/code&gt; handle must have one or two extra leading parameters:</source>
          <target state="translated">该 &lt;code&gt;target&lt;/code&gt; 和 &lt;code&gt;cleanup&lt;/code&gt; 句柄必须具有相同的相应参数和返回类型，除了 &lt;code&gt;cleanup&lt;/code&gt; 手柄可以省略尾随参数。另外， &lt;code&gt;cleanup&lt;/code&gt; 句柄必须具有一个或两个额外的前导参数：</target>
        </trans-unit>
        <trans-unit id="fc9c79ee1df025d55ac0b05752be64291c34d35f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; and the &lt;code&gt;methodName&lt;/code&gt; values should not be &lt;code&gt;null&lt;/code&gt;. Otherwise an attempt to execute this &lt;code&gt;Expression&lt;/code&gt; will result in a &lt;code&gt;NullPointerException&lt;/code&gt;. If the &lt;code&gt;arguments&lt;/code&gt; value is &lt;code&gt;null&lt;/code&gt;, an empty array is used as the value of the &lt;code&gt;arguments&lt;/code&gt; property.</source>
          <target state="translated">的 &lt;code&gt;target&lt;/code&gt; 和 &lt;code&gt;methodName&lt;/code&gt; 值不能 &lt;code&gt;null&lt;/code&gt; 。否则，尝试执行此 &lt;code&gt;Expression&lt;/code&gt; 将导致 &lt;code&gt;NullPointerException&lt;/code&gt; 。如果 &lt;code&gt;arguments&lt;/code&gt; 值为 &lt;code&gt;null&lt;/code&gt; ，则将一个空数组用作 &lt;code&gt;arguments&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="67df39f98209ce29324f6940292995bb97c5d095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; parameter is the target of the link. It may be an &lt;a href=&quot;path#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; or relative path and may not exist. When the target is a relative path then file system operations on the resulting link are relative to the path of the link.</source>
          <target state="translated">该 &lt;code&gt;target&lt;/code&gt; 参数是链接的目标。它可能是&lt;a href=&quot;path#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;路径，也可能是相对路径，可能不存在。当目标是相对路径时，结果链接上的文件系统操作将相对于链接路径。</target>
        </trans-unit>
        <trans-unit id="643140ef281b03db8ff1987c73ac0c49fd06dd1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; parameter is the target of the link. It may be an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; or relative path and may not exist. When the target is a relative path then file system operations on the resulting link are relative to the path of the link.</source>
          <target state="translated">该 &lt;code&gt;target&lt;/code&gt; 参数是链接的目标。它可能是&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;路径或相对路径，可能不存在。当目标是相对路径时，则结果链接上的文件系统操作将相对于链接路径。</target>
        </trans-unit>
        <trans-unit id="0009c69a4dc15a49dcbf1a0c8eae01039c7c4a96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt; objects.</source>
          <target state="translated">该 &lt;code&gt;thumbnails&lt;/code&gt; 参数必须是 &lt;code&gt;null&lt;/code&gt; 或者只包含 &lt;code&gt;BufferedImage&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="7f203db2af4b065dabcc3805554e22404c4433c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeStamp&lt;/code&gt; of the notification is a time value (consistent with &lt;a href=&quot;../../../../java.base/java/lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;) indicating when the notification was constructed.</source>
          <target state="translated">通知的 &lt;code&gt;timeStamp&lt;/code&gt; 是一个时间值（与&lt;a href=&quot;../../../../java.base/java/lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;一致），指示何时构造通知。</target>
        </trans-unit>
        <trans-unit id="a0e9ab517d625c7c2deaf59529ad7e0219c013fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeStamp&lt;/code&gt; of the notification is a time value (consistent with &lt;a href=&quot;../../../java/lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;) indicating when the notification was constructed.</source>
          <target state="translated">通知的 &lt;code&gt;timeStamp&lt;/code&gt; 是一个时间值（与&lt;a href=&quot;../../../java/lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;一致），指示何时构造通知。</target>
        </trans-unit>
        <trans-unit id="b2dc1977f789016cfbe08995493b9abe10ad9cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString&lt;/code&gt; method for class &lt;code&gt;Object&lt;/code&gt; returns a string consisting of the name of the class of which the object is an instance, the at-sign character `&lt;code&gt;@&lt;/code&gt;', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 类的 &lt;code&gt;toString&lt;/code&gt; 方法返回一个字符串，该字符串包括该对象是其实例的类的名称，符号字符' &lt;code&gt;@&lt;/code&gt; '以及该对象的哈希码的无符号十六进制表示形式。换句话说，此方法返回的字符串等于：</target>
        </trans-unit>
        <trans-unit id="f35e165aad5f7865197b005be9bb45266399d993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString&lt;/code&gt; method may return two different values on two &lt;code&gt;StackTraceElement&lt;/code&gt; instances that are &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;equal&lt;/a&gt;, for example one created via the constructor, and one obtained from &lt;a href=&quot;throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackWalker.StackFrame&lt;/code&gt;&lt;/a&gt;, where an implementation may choose to omit some element in the returned string.</source>
          <target state="translated">所述 &lt;code&gt;toString&lt;/code&gt; 方法可以在两个返回两个不同的值 &lt;code&gt;StackTraceElement&lt;/code&gt; 实例是&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;等于&lt;/a&gt;，用于经由所述构造函数创建例如一个，和一个从得到&lt;a href=&quot;throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackWalker.StackFrame&lt;/code&gt; &lt;/a&gt;，其中一个实现可以选择省略一些元件返回的字符串英寸</target>
        </trans-unit>
        <trans-unit id="c0a1342d2a95a488e60cf2e7575f74b70a1b15a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; method of &lt;code&gt;Transform&lt;/code&gt; MUST support &lt;code&gt;DOMCryptoContext&lt;/code&gt; context parameter types.</source>
          <target state="translated">&lt;code&gt;Transform&lt;/code&gt; 的 &lt;code&gt;transform&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMCryptoContext&lt;/code&gt; 上下文参数类型。</target>
        </trans-unit>
        <trans-unit id="bc716b32be2e2ea2d617e608d9ff17039ae30d19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; argument should be a valid value for the byte that follows the status byte in the &lt;code&gt;MetaMessage&lt;/code&gt;. The &lt;code&gt;data&lt;/code&gt; argument should contain all the subsequent bytes of the &lt;code&gt;MetaMessage&lt;/code&gt;. In other words, the byte that specifies the type of &lt;code&gt;MetaMessage&lt;/code&gt; is not considered a data byte.</source>
          <target state="translated">该 &lt;code&gt;type&lt;/code&gt; 参数应该是为接下来的状态字节中的字节的有效值 &lt;code&gt;MetaMessage&lt;/code&gt; 。该 &lt;code&gt;data&lt;/code&gt; 参数应包含的所有后续字节 &lt;code&gt;MetaMessage&lt;/code&gt; 。换句话说，指定 &lt;code&gt;MetaMessage&lt;/code&gt; 类型的字节不被视为数据字节。</target>
        </trans-unit>
        <trans-unit id="06b9218c7159f9ade16823be04d6c173149333fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; of any &lt;code&gt;AdjustmentEvent&lt;/code&gt; instance takes one of the following values:</source>
          <target state="translated">任何 &lt;code&gt;AdjustmentEvent&lt;/code&gt; 实例的 &lt;code&gt;type&lt;/code&gt; 都采用以下值之一：</target>
        </trans-unit>
        <trans-unit id="9d6e7d46137f25ad7f8964128a6f000618a91b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter indicates the relation between the two components. If the two components will be contained in the same parent and are showing similar logically related items, use &lt;code&gt;RELATED&lt;/code&gt;. If the two components will be contained in the same parent but show logically unrelated items use &lt;code&gt;UNRELATED&lt;/code&gt;. Some look and feels may not distinguish between the &lt;code&gt;RELATED&lt;/code&gt; and &lt;code&gt;UNRELATED&lt;/code&gt; types.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数表示在两个部件之间的关系。如果两个组件将包含在同一个父对象中，并且显示相似的逻辑相关项目，请使用 &lt;code&gt;RELATED&lt;/code&gt; 。如果这两个组件将包含在同一个父对象中，但在逻辑上显示不相关的项目，请使用 &lt;code&gt;UNRELATED&lt;/code&gt; 。某些外观可能无法区分 &lt;code&gt;RELATED&lt;/code&gt; 和 &lt;code&gt;UNRELATED&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="fc25f1a4f79c0d9cb38f65494514c69d349c3f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attributes required and this method returns an instance of that type if supported. All implementations support a basic set of file attributes and so invoking this method with a &lt;code&gt;type&lt;/code&gt; parameter of &lt;code&gt;
 BasicFileAttributes.class&lt;/code&gt; will not throw &lt;code&gt;
 UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数是所需的属性的类型，并且如果支持此方法返回该类型的一个实例。所有实现都支持一组基本的文件属性，因此使用 &lt;code&gt; BasicFileAttributes.class&lt;/code&gt; 的 &lt;code&gt;type&lt;/code&gt; 参数调用此方法不会抛出 &lt;code&gt; UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="714e35a3944791dcc0a21aa2cfb1cc1a672a4844" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attributes required and this method returns an instance of that type if supported. All implementations support a basic set of file attributes and so invoking this method with a &lt;code&gt;type&lt;/code&gt; parameter of &lt;code&gt;BasicFileAttributes.class&lt;/code&gt; will not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数是所需的属性的类型，并且如果支持此方法返回该类型的一个实例。所有实现都支持一组基本的文件属性，因此使用 &lt;code&gt;BasicFileAttributes.class&lt;/code&gt; 的 &lt;code&gt;type&lt;/code&gt; 参数调用此方法不会抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1056213ec4dbb35ecbc5b5160831677aa11a47e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is typically a class, but it may be any type, such as an interface, a primitive type (like &lt;code&gt;int.class&lt;/code&gt;), or &lt;code&gt;void.class&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数典型地是一类，但它可以是任何类型，例如一个接口，一个原语类型（如 &lt;code&gt;int.class&lt;/code&gt; ），或 &lt;code&gt;void.class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d0f557c7ffa69e938b51901e39f9567f456bb67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeName&lt;/code&gt; here is determined by the &lt;a href=&quot;#type-names&quot;&gt; type name rules&lt;/a&gt; detailed below.</source>
          <target state="translated">这里的 &lt;code&gt;typeName&lt;/code&gt; 由下面详细描述的&lt;a href=&quot;#type-names&quot;&gt;类型名称规则&lt;/a&gt;确定。</target>
        </trans-unit>
        <trans-unit id="b34f44d7ea255df3fe2a501bc7503f396e8bcc57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uncaughtException&lt;/code&gt; method of &lt;code&gt;ThreadGroup&lt;/code&gt; does the following:</source>
          <target state="translated">&lt;code&gt;ThreadGroup&lt;/code&gt; 的 &lt;code&gt;uncaughtException&lt;/code&gt; 方法执行以下操作：</target>
        </trans-unit>
        <trans-unit id="284484383fbc17bd10f3ef3060ba77933b35645d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;underlinedIndex&lt;/code&gt; parameter points to a char value (Unicode code unit) in the given string. If the char value specified at the underlined index is in the high-surrogate range and the char value at the following index is in the low-surrogate range then the supplementary character corresponding to this surrogate pair is underlined.</source>
          <target state="translated">所述 &lt;code&gt;underlinedIndex&lt;/code&gt; 参数指向给定串中的字符值（Unicode代码单元）。如果在带下划线的索引处指定的char值在高代理范围内，而在下一个索引处的char值在低代理范围内，则与该代理对相对应的补充字符用下划线标出。</target>
        </trans-unit>
        <trans-unit id="8a305919fe389125db79560ea71e37822fe9f961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unmarshalKeyInfo&lt;/code&gt; method of &lt;code&gt;KeyInfoFactory&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; types. If the type is &lt;code&gt;DOMStructure&lt;/code&gt;, it SHOULD contain an &lt;code&gt;Element&lt;/code&gt; of type &lt;code&gt;KeyInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeyInfoFactory&lt;/code&gt; 的 &lt;code&gt;unmarshalKeyInfo&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMStructure&lt;/code&gt; 类型。如果类型是 &lt;code&gt;DOMStructure&lt;/code&gt; ，它应该包含一个 &lt;code&gt;KeyInfo&lt;/code&gt; 类型的 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64d95f34639981a626eae38c178805b9f2a259aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; method of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; types. If the type is &lt;code&gt;DOMStructure&lt;/code&gt;, it SHOULD contain an &lt;code&gt;Element&lt;/code&gt; of type &lt;code&gt;Signature&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLSignatureFactory&lt;/code&gt; 的 &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMStructure&lt;/code&gt; 类型。如果类型是 &lt;code&gt;DOMStructure&lt;/code&gt; ，它应该包含一个 &lt;code&gt;Signature&lt;/code&gt; 类型的 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fad801c53ac062a66adda45916aec072ec30d47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; method of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMValidateContext&lt;/code&gt; types. If the type is &lt;code&gt;DOMValidateContext&lt;/code&gt;, it SHOULD contain an &lt;code&gt;Element&lt;/code&gt; of type Signature. Additionally, the &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; method MAY populate the Id/Element mappings of the passed-in &lt;code&gt;DOMValidateContext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLSignatureFactory&lt;/code&gt; 的 &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; 方法必须支持 &lt;code&gt;DOMValidateContext&lt;/code&gt; 类型。如果类型为 &lt;code&gt;DOMValidateContext&lt;/code&gt; ，则应包含一个Signature类型的 &lt;code&gt;Element&lt;/code&gt; 。另外， &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; 方法可以填充传入的 &lt;code&gt;DOMValidateContext&lt;/code&gt; 的Id / Element映射。</target>
        </trans-unit>
        <trans-unit id="4450253c95c412d34ca14474c433b55151989bf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method of &lt;code&gt;Component&lt;/code&gt; calls this component's &lt;code&gt;paint&lt;/code&gt; method to redraw this component. This method is commonly overridden by subclasses which need to do additional work in response to a call to &lt;code&gt;repaint&lt;/code&gt;. Subclasses of Component that override this method should either call &lt;code&gt;super.update(g)&lt;/code&gt;, or call &lt;code&gt;paint(g)&lt;/code&gt; directly from their &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 的 &lt;code&gt;update&lt;/code&gt; 方法调用此组件的 &lt;code&gt;paint&lt;/code&gt; 方法来重绘此组件。子类通常会重写此方法，这些子类需要做一些额外的工作才能响应对 &lt;code&gt;repaint&lt;/code&gt; 的调用。重写此方法的Component子类应该调用 &lt;code&gt;super.update(g)&lt;/code&gt; 或直接从其 &lt;code&gt;update&lt;/code&gt; 方法调用 &lt;code&gt;paint(g)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba8b125bbe0fb10254e8b4e3a983a07e8dccd3bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; parameter is an absolute, hierarchical URI, with a scheme equal (without regard to case) to the scheme supported by this provider. The exact form of the URI is highly provider dependent. The &lt;code&gt;env&lt;/code&gt; parameter is a map of provider specific properties to configure the file system.</source>
          <target state="translated">该 &lt;code&gt;uri&lt;/code&gt; 参数是绝对的，分层URI，与由该提供者所支持的方案的方案等于（不考虑情况）。URI的确切形式高度依赖于提供者。该 &lt;code&gt;env&lt;/code&gt; 参数是地图提供特定属性的配置文件系统。</target>
        </trans-unit>
        <trans-unit id="8d5265eccd53a8174604390135889708c5fc5e2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useOrdering&lt;/code&gt; argument controls the ordering of the results using the same rules as &lt;code&gt;getServiceProviders(Class, boolean)&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;useOrdering&lt;/code&gt; 参数控制的结果的使用相同的规则的排序 &lt;code&gt;getServiceProviders(Class, boolean)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56c69f9bf13711770382aef06023e97ae68a4935" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; argument is the value that the method is to return. If the return type of the method is void, then value must be a &lt;a href=&quot;voidvalue&quot;&gt;&lt;code&gt;VoidValue&lt;/code&gt;&lt;/a&gt;. Object values must be assignment compatible with the method return type (This implies that the method return type must be loaded through the enclosing class's class loader). Primitive values must be either assignment compatible with the method return type or must be convertible to the variable type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="translated">该 &lt;code&gt;value&lt;/code&gt; 的说法是，该方法的返回值。如果该方法的返回类型为void，则value必须为&lt;a href=&quot;voidvalue&quot;&gt; &lt;code&gt;VoidValue&lt;/code&gt; &lt;/a&gt;。对象值必须与方法返回类型的赋值兼容（这意味着方法返回类型必须通过封闭类的类加载器加载）。基本值必须是与方法返回类型兼容的赋值，或者必须可转换为变量类型而不会丢失信息。有关分配兼容性的更多信息，请参见JLS的5.2节。</target>
        </trans-unit>
        <trans-unit id="cf3c577a872e1c1751d1a92167097db6476c0ae8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; can be retrieved by calling the &lt;code&gt;get&lt;/code&gt; method with a &lt;code&gt;key&lt;/code&gt; that is equal to the original &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">可以通过使用等于原始 &lt;code&gt;key&lt;/code&gt; 的 &lt;code&gt;key&lt;/code&gt; 调用 &lt;code&gt;get&lt;/code&gt; 方法来检索该 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6dc1003235f78ae44b563cd9c64b625dec84264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; field specifies the current value of the property, based on a combination of the information supplied to the method &lt;code&gt;getPropertyInfo&lt;/code&gt;, the Java environment, and the driver-supplied default values.</source>
          <target state="translated">所述 &lt;code&gt;value&lt;/code&gt; 字段指定属性的当前值的基础上，提供给该方法的信息的组合 &lt;code&gt;getPropertyInfo&lt;/code&gt; ，Java环境，和驱动程序提供的默认值。</target>
        </trans-unit>
        <trans-unit id="6bb04aabca923c27392cb6a07985f491ac538c08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; field specifies the current value of the property, based on a combination of the information supplied to the method &lt;code&gt;getPropertyInfo&lt;/code&gt;, the Java environment, and the driver-supplied default values. This field may be null if no value is known.</source>
          <target state="translated">所述 &lt;code&gt;value&lt;/code&gt; 字段指定属性的当前值的基础上，提供给该方法的信息的组合 &lt;code&gt;getPropertyInfo&lt;/code&gt; ，Java环境，和驱动程序提供的默认值。如果没有值，则此字段可以为null。</target>
        </trans-unit>
        <trans-unit id="a0dc0ca5643c577e2bc28f2c4d9f85f55ae2ae0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; attribute identifies the &lt;code&gt;AbstractView&lt;/code&gt; from which the event was generated.</source>
          <target state="translated">的 &lt;code&gt;view&lt;/code&gt; 属性标识 &lt;code&gt;AbstractView&lt;/code&gt; 从中生成所述事件。</target>
        </trans-unit>
        <trans-unit id="35e9083dd12ca67db6c302fb48e049498f0e86ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; values are automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 值小于先前调用 &lt;code&gt;setMinimumSize&lt;/code&gt; 所指定的最小大小，则宽度和高度值将自动放大。</target>
        </trans-unit>
        <trans-unit id="e270b26fb5f4d86ce8e6fe4ab24f798852bc112c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; values are automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;width&lt;/code&gt; 或 &lt;code&gt;height&lt;/code&gt; 值小于先前调用 &lt;code&gt;setMinimumSize&lt;/code&gt; 所指定的最小大小，则宽度或高度值将自动放大。</target>
        </trans-unit>
        <trans-unit id="cb6cc5d83f6f060e6206ee4432cd2838d953df43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wrap()&lt;/code&gt; and &lt;code&gt;unwrap()&lt;/code&gt; methods may execute concurrently of each other.</source>
          <target state="translated">的 &lt;code&gt;wrap()&lt;/code&gt; 和 &lt;code&gt;unwrap()&lt;/code&gt; 方法可以彼此并发执行。</target>
        </trans-unit>
        <trans-unit id="b6ac35afc51c676f6acfb59fbb66aebb7fd7dffe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;CipherOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of three arguments with the three arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;CipherOutputStream&lt;/code&gt; 调用 &lt;code&gt;write&lt;/code&gt; 的三个参数与三个参数的方法 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;b.length&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="b444208efa76dded6db1c12df1b7df685049876c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls its &lt;code&gt;write&lt;/code&gt; method of three arguments with the arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用它 &lt;code&gt;write&lt;/code&gt; 的三个参数与参数方法 &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;b.length&lt;/code&gt; 个。</target>
        </trans-unit>
        <trans-unit id="4d273be569b8b30933a05fc498292c5402a93de3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of its underlying output stream, that is, it performs &lt;code&gt;out.write(b)&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用 &lt;code&gt;write&lt;/code&gt; 它的基本输出流，即的方法，它执行 &lt;code&gt;out.write(b)&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="5b52d117ddcb1aaf2483d386c55d430f15571498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of one argument on each &lt;code&gt;byte&lt;/code&gt; to output.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; 中调用 &lt;code&gt;write&lt;/code&gt; 一个参数的每个方法 &lt;code&gt;byte&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="f6b5bd7ff632f357b485afe4736af5f2318b4eb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; calls the write method of one argument on each of the bytes to be written out. Subclasses are encouraged to override this method and provide a more efficient implementation.</source>
          <target state="translated">该 &lt;code&gt;write&lt;/code&gt; 的方法 &lt;code&gt;OutputStream&lt;/code&gt; 调用写出在每个字节中的一个参数的写入方法。鼓励子类重写此方法并提供更有效的实现。</target>
        </trans-unit>
        <trans-unit id="4052734952517729cae634a4334fbfe7bc56b79a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">如果在基础通道处于非阻塞模式下调用，则结果流的 &lt;code&gt;write&lt;/code&gt; 方法将引发&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;。流将不会被缓冲。流可以安全地被多个并发线程访问。关闭流将导致通道关闭。</target>
        </trans-unit>
        <trans-unit id="7aeccac65dd62b076d4abb5d4c775615877d46ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by a &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation. Although this method is not final, it should not need to be subclassed under normal circumstances.</source>
          <target state="translated">所述 &lt;code&gt;writeObject&lt;/code&gt; 是一个单一的入口点的持久性和用于以一种 &lt;code&gt;Encoder&lt;/code&gt; 在一行的传统模式。尽管此方法不是最终方法，但在正常情况下不必将其子类化。</target>
        </trans-unit>
        <trans-unit id="0937ca02336197261dddb7803acba46aa6ec7743" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by an &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation.</source>
          <target state="translated">所述 &lt;code&gt;writeObject&lt;/code&gt; 是一个单一的入口点的持久性和用于由 &lt;code&gt;Encoder&lt;/code&gt; 在一行的传统模式。</target>
        </trans-unit>
        <trans-unit id="9c855374ef3af39f227ccdf574cfb54afb0d247f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by an &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation. Although this method is not final, it should not need to be subclassed under normal circumstances.</source>
          <target state="translated">所述 &lt;code&gt;writeObject&lt;/code&gt; 是一个单一的入口点的持久性和用于由 &lt;code&gt;Encoder&lt;/code&gt; 在一行的传统模式。尽管此方法不是最终方法，但在正常情况下不必将其子类化。</target>
        </trans-unit>
        <trans-unit id="65972030b222838810b7ba8b656c7648e06077d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeUTF&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt; may be used to write data that is suitable for reading by this method.</source>
          <target state="translated">接口 &lt;code&gt;DataOutput&lt;/code&gt; 的 &lt;code&gt;writeUTF&lt;/code&gt; 方法可用于写入适合通过此方法读取的数据。</target>
        </trans-unit>
        <trans-unit id="ecdfdf55c3e6233c34db1e9797ae4ac06e60e0e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{ }&lt;/code&gt; characters are a group of subpatterns, where the group matches if any subpattern in the group matches. The &lt;code&gt;&quot;,&quot;&lt;/code&gt; character is used to separate the subpatterns. Groups cannot be nested.</source>
          <target state="translated">的 &lt;code&gt;{ }&lt;/code&gt; 字符是一组子模式，其中该组匹配，如果在该组匹配的任何的子模式。的 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 字符被用来将子模式分离。组不能嵌套。</target>
        </trans-unit>
        <trans-unit id="4383cedf66c99d541142d23205794e9fbe074f11" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;action&lt;/em&gt;. For a permission you need, this is one of the actions in the list &lt;a href=&quot;#action-list&quot;&gt;below&lt;/a&gt;. For a permission you have, this is a comma-separated list of those actions, or &lt;code&gt;*&lt;/code&gt;, representing all actions.</source>
          <target state="translated">该&lt;em&gt;行动&lt;/em&gt;。要获得您所需的许可，这是&lt;a href=&quot;#action-list&quot;&gt;下面&lt;/a&gt;列表中的操作之一。对于您拥有的权限，这是这些操作的逗号分隔列表，或 &lt;code&gt;*&lt;/code&gt; ，表示所有操作。</target>
        </trans-unit>
        <trans-unit id="a6904e89112c0b2f4cf76a3eaf77590286f5121f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;canonical key property list&lt;/em&gt; is the same string as described for &lt;a href=&quot;#getCanonicalKeyPropertyListString()&quot;&gt;&lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;规范的键属性列表&lt;/em&gt;是作为描述的相同字符串&lt;a href=&quot;#getCanonicalKeyPropertyListString()&quot;&gt; &lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4203e1844ba2358b9cf99e65861fc5814fcbd135" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;canonical key property list&lt;/em&gt; is the same string as described for &lt;a href=&quot;objectname#getCanonicalKeyPropertyListString--&quot;&gt;&lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;规范的键属性列表&lt;/em&gt;是作为描述的相同字符串&lt;a href=&quot;objectname#getCanonicalKeyPropertyListString--&quot;&gt; &lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0da932c873e0a87699cfc16c3ea52c0b2e0de4c0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;class name&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;类名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b34ed1bdfeb4a02859cb87fc0dd3c70da93cc4ac" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;domain&lt;/em&gt; is a string of characters not including the character colon (&lt;code&gt;:&lt;/code&gt;). It is recommended that the domain should not contain the string &quot;&lt;code&gt;//&lt;/code&gt;&quot;, which is reserved for future use.</source>
          <target state="translated">所述&lt;em&gt;域&lt;/em&gt;是字符不包括字符结肠的一个字符串（ &lt;code&gt;:&lt;/code&gt; ）。建议该域不应包含字符串&amp;ldquo; &lt;code&gt;//&lt;/code&gt; &amp;rdquo;，该字符串保留供将来使用。</target>
        </trans-unit>
        <trans-unit id="4031de43ef1c59b0c68ad4834eee900eefebe3c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;head&lt;/em&gt; of this queue is the &lt;em&gt;least&lt;/em&gt; element with respect to the specified ordering. If multiple elements are tied for least value, the head is one of those elements -- ties are broken arbitrarily. The queue retrieval operations &lt;code&gt;poll&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;peek&lt;/code&gt;, and &lt;code&gt;element&lt;/code&gt; access the element at the head of the queue.</source>
          <target state="translated">就指定的顺序而言，此队列的&lt;em&gt;头&lt;/em&gt;是&lt;em&gt;最小的&lt;/em&gt;元素。如果多个元素的价值最小，那么头就是那些元素之一-领带被任意打破。队列检索操作 &lt;code&gt;poll&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;peek&lt;/code&gt; 和 &lt;code&gt;element&lt;/code&gt; 访问队列开头的元素。</target>
        </trans-unit>
        <trans-unit id="132748ef7ce7edd118fa2aec50bbb6b7013d4a04" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;key properties&lt;/em&gt; are an unordered set of keys and associated values.</source>
          <target state="translated">所述&lt;em&gt;关键属性&lt;/em&gt;是一组无序密钥和相关联的值。</target>
        </trans-unit>
        <trans-unit id="49b6c7b812bfb37bbfa829d277662d381281a9fd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mapped&lt;/em&gt; Java type, &lt;em&gt;opendata(J)&lt;/em&gt;, which is always the same for any given &lt;em&gt;opentype(J)&lt;/em&gt;. This is a Java class.</source>
          <target state="translated">所述&lt;em&gt;映射的&lt;/em&gt; Java类型，&lt;em&gt;将opendata（J） &lt;/em&gt;，这始终是对于任何给定的相同&lt;em&gt;的OpenType（J） &lt;/em&gt;。这是一个Java类。</target>
        </trans-unit>
        <trans-unit id="bbb454761775dc1a414464798499aeee43da2b26" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;member&lt;/em&gt;.</source>
          <target state="translated">该&lt;em&gt;成员&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="074cbd71c6bb024356bb7396d0de2ecfe45082b5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; of the permission can also denote a list of one or more comma-separated operations. Spaces are allowed at the beginning and end of the &lt;em&gt;name&lt;/em&gt; and before and after commas.</source>
          <target state="translated">权限的&lt;em&gt;名称&lt;/em&gt;也可以表示一个或多个逗号分隔的操作的列表。&lt;em&gt;名称&lt;/em&gt;的开头和结尾以及逗号前后可以使用空格。</target>
        </trans-unit>
        <trans-unit id="9480872eca819a401a143d99801ef4a81e78cc7a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object name&lt;/em&gt;.</source>
          <target state="translated">该&lt;em&gt;对象名称&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b8bea707941f307636110813bd9843488dbd1cb0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opens&lt;/em&gt; directive in a module declaration declares a package to be open to allow all types in the package, and all their members, not just public types and their public members to be reflected on by APIs that support private access or a way to bypass or suppress default Java language access control checks.</source>
          <target state="translated">模块声明中的&lt;em&gt;opens&lt;/em&gt;指令声明一个程序包处于打开状态，以允许程序包中的所有类型及其所有成员，而不仅仅是公共类型及其公共成员，都可以通过支持私有访问或绕过或禁止默认的Java语言访问控制检查。</target>
        </trans-unit>
        <trans-unit id="5ea4f18aba4c5af225e35673d4891fc5fa9e0a6b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;origin&lt;/em&gt; of an element or other language model item.</source>
          <target state="translated">该&lt;em&gt;原点&lt;/em&gt;的元素或其他语言模型项目。</target>
        </trans-unit>
        <trans-unit id="7bf772b2c89d559914753f218273f17b3f5fef8c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;origin&lt;/em&gt; of an element or other language model item. The origin of an element or item models how a construct in a program is declared in the source code, explicitly, implicitly, etc.</source>
          <target state="translated">该&lt;em&gt;原点&lt;/em&gt;的元素或其他语言模型项目。元素或项的来源模拟了如何在源代码中显式，隐式地等声明程序中的构造。</target>
        </trans-unit>
        <trans-unit id="f0e83e021e240eac4fd2981ea6d32868e52f81d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname consists of the pathname's prefix, if any, and each name in the pathname's name sequence except for the last. If the name sequence is empty then the pathname does not name a parent directory.</source>
          <target state="translated">抽象路径名的&lt;em&gt;父级&lt;/em&gt;由路径名的前缀（如果有）以及路径名的名称序列中的每个名称（最后一个除外）组成。如果名称序列为空，则路径名不会命名父目录。</target>
        </trans-unit>
        <trans-unit id="89fec665c0c46c36e97a962d8fe4d0387ff30f83" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname may be obtained by invoking the &lt;a href=&quot;#getParent()&quot;&gt;&lt;code&gt;getParent()&lt;/code&gt;&lt;/a&gt; method of this class and consists of the pathname's prefix and each name in the pathname's name sequence except for the last. Each directory's absolute pathname is an ancestor of any &lt;code&gt;File&lt;/code&gt; object with an absolute abstract pathname which begins with the directory's absolute pathname. For example, the directory denoted by the abstract pathname &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; is an ancestor of the directory denoted by the pathname &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">可以通过调用此类的&lt;a href=&quot;#getParent()&quot;&gt; &lt;code&gt;getParent()&lt;/code&gt; &lt;/a&gt;方法获得抽象路径名的&lt;em&gt;父级&lt;/em&gt;，该&lt;em&gt;父&lt;/em&gt;路径名由路径名的前缀和路径名的名称序列中的每个名称（最后一个除外）组成。每个目录的绝对路径名都是具有绝对抽象路径名的任何 &lt;code&gt;File&lt;/code&gt; 对象的祖先，该绝对抽象路径名以目录的绝对路径名开头。例如，由抽象路径名 &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; 表示的目录是由路径名 &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt; 表示的目录的祖先。</target>
        </trans-unit>
        <trans-unit id="d0528ba347878b821ba42755b3a17661463c339f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname may be obtained by invoking the &lt;a href=&quot;file#getParent--&quot;&gt;&lt;code&gt;getParent()&lt;/code&gt;&lt;/a&gt; method of this class and consists of the pathname's prefix and each name in the pathname's name sequence except for the last. Each directory's absolute pathname is an ancestor of any &lt;code&gt;File&lt;/code&gt; object with an absolute abstract pathname which begins with the directory's absolute pathname. For example, the directory denoted by the abstract pathname &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; is an ancestor of the directory denoted by the pathname &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">可以通过调用此类的&lt;a href=&quot;file#getParent--&quot;&gt; &lt;code&gt;getParent()&lt;/code&gt; &lt;/a&gt;方法获得抽象路径名的&lt;em&gt;父级&lt;/em&gt;，该&lt;em&gt;父&lt;/em&gt;路径名由路径名的前缀和路径名的名称序列中的每个名称（最后一个除外）组成。每个目录的绝对路径名是具有绝对抽象路径名的任何 &lt;code&gt;File&lt;/code&gt; 对象的祖先，该绝对抽象路径名以目录的绝对路径名开头。例如，抽象路径名 &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; 表示的目录是路径名 &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt; 表示的目录的祖先。</target>
        </trans-unit>
        <trans-unit id="3219f3facb21696d1ed20d4e54a6c99ee13262e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pattern indication&lt;/em&gt; is:</source>
          <target state="translated">的&lt;em&gt;图案指示&lt;/em&gt;是：</target>
        </trans-unit>
        <trans-unit id="75b0986f1f4d3f972e20d5706e48596a413d0f0a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;specified&lt;/em&gt; flag for each attribute will always be true, unless it has been set to false in the copy constructor or using &lt;a href=&quot;#setSpecified(int,boolean)&quot;&gt;&lt;code&gt;setSpecified(int, boolean)&lt;/code&gt;&lt;/a&gt;. Similarly, the &lt;em&gt;declared&lt;/em&gt; flag for each attribute will always be false, except for defaulted attributes (&lt;em&gt;specified&lt;/em&gt; is false), non-CDATA attributes, or when it is set to true using &lt;a href=&quot;#setDeclared(int,boolean)&quot;&gt;&lt;code&gt;setDeclared(int, boolean)&lt;/code&gt;&lt;/a&gt;. If you change an attribute's type by hand, you may need to modify its &lt;em&gt;declared&lt;/em&gt; flag to match.</source>
          <target state="translated">除非已在复制构造函数中将其设置为false或使用&lt;a href=&quot;#setSpecified(int,boolean)&quot;&gt; &lt;code&gt;setSpecified(int, boolean)&lt;/code&gt; &lt;/a&gt;，否则每个属性的&lt;em&gt;指定&lt;/em&gt;标志将始终为true 。同样，每个属性的&lt;em&gt;声明&lt;/em&gt;标志将始终为false，但默认属性（&lt;em&gt;指定&lt;/em&gt;为false），非CDATA属性或使用&lt;a href=&quot;#setDeclared(int,boolean)&quot;&gt; &lt;code&gt;setDeclared(int, boolean)&lt;/code&gt; &lt;/a&gt;设置为true时除外。如果您手动更改属性的类型，则可能需要修改其&lt;em&gt;声明的&lt;/em&gt;标志以匹配。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e24706d6569ad24b7b450fbbe13dd7ea6ed5e827" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;time-to-live&lt;/em&gt; for Internet Protocol (IP) multicast datagrams</source>
          <target state="translated">的&lt;em&gt;时间到现场&lt;/em&gt;的互联网协议（IP）多播数据报</target>
        </trans-unit>
        <trans-unit id="2a0f0d9a04c7aa959de016e80e8a27f487dc3d88" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;time-to-live&lt;/em&gt; for Internet Protocol (IP) multicast datagrams.</source>
          <target state="translated">的&lt;em&gt;时间到现场&lt;/em&gt;的互联网协议（IP）多播数据报。</target>
        </trans-unit>
        <trans-unit id="cb26ab7b8c8e6681c6af9faff6deeeb55d0a5d1f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;unchecked&lt;/em&gt; memory address instance modelling the &lt;code&gt;NULL&lt;/code&gt; address.</source>
          <target state="translated">在&lt;em&gt;未经检查的&lt;/em&gt;内存地址的实例造型 &lt;code&gt;NULL&lt;/code&gt; 地址。</target>
        </trans-unit>
        <trans-unit id="b26dfea9030c19a22d94c096ae163a764273dd4b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;unchecked&lt;/em&gt; memory address instance modelling the &lt;code&gt;NULL&lt;/code&gt; address. This address is &lt;em&gt;not&lt;/em&gt; backed by a memory segment and hence it cannot be dereferenced.</source>
          <target state="translated">在&lt;em&gt;未经检查的&lt;/em&gt;内存地址的实例造型 &lt;code&gt;NULL&lt;/code&gt; 地址。该地址&lt;em&gt;不由&lt;/em&gt;内存段支持，因此无法取消引用。</target>
        </trans-unit>
        <trans-unit id="51b9adb8936cb123ed7c1dde2b592cfab77ae3c9" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;&lt;a href=&quot;defaultstyleddocument&quot;&gt;&lt;code&gt;DefaultStyledDocument&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; class, used for styled text, contains another level of Elements. This extra level is needed so that each paragraph can contain different styles of text. In the two paragraphs shown in &lt;u&gt;Figure 6&lt;/u&gt;, the first paragraph contains two styles and the second paragraph contains three styles.</source>
          <target state="translated">用于样式文本的&lt;u&gt;&lt;a href=&quot;defaultstyleddocument&quot;&gt; &lt;code&gt;DefaultStyledDocument&lt;/code&gt; &lt;/a&gt;&lt;/u&gt;类包含另一级别的Elements。需要这个额外的级别，以便每个段落可以包含不同样式的文本。在&lt;u&gt;图6&lt;/u&gt;所示的两个段落中，第一段包含两种样式，第二段包含三种样式。</target>
        </trans-unit>
        <trans-unit id="8d9acc7331c0bb62597d02bf29306884fcbc07df" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;&lt;a href=&quot;plaindocument&quot;&gt;&lt;code&gt;PlainDocument&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; class defines an Element structure in which the root node has a child node for each line of text in the model. &lt;u&gt;Figure 1&lt;/u&gt; shows how two lines of text would be modeled by a PlainDocument</source>
          <target state="translated">所述&lt;u&gt;&lt;a href=&quot;plaindocument&quot;&gt; &lt;code&gt;PlainDocument&lt;/code&gt; &lt;/a&gt;&lt;/u&gt;类定义的元件结构，其中所述根节点具有对在模型中的每一行文本的子节点。&lt;u&gt;图1&lt;/u&gt;显示了PlainDocument如何建模两行文本</target>
        </trans-unit>
        <trans-unit id="d69a19d85b8e44ea82b45f3ab6025bf32be35861" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;&lt;a href=&quot;styleddocument&quot;&gt;&lt;code&gt;StyledDocument&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; class provides a method named &lt;code&gt;setCharacterAttributes()&lt;/code&gt;, which allows you to set the attributes on the character Elements in a given range:</source>
          <target state="translated">所述&lt;u&gt;&lt;a href=&quot;styleddocument&quot;&gt; &lt;code&gt;StyledDocument&lt;/code&gt; 中的&lt;/a&gt;&lt;/u&gt;类提供了一个名为方法 &lt;code&gt;setCharacterAttributes()&lt;/code&gt; ，它允许用户设置在给定范围内的字符元素的属性：</target>
        </trans-unit>
        <trans-unit id="a5cbd78bbaec3014307f658d756d06fe19f45c6b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;outer&lt;/var&gt; parameter is a pointer to the MBeanServer that should be passed to the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface when registering MBeans inside the MBeanServer. If &lt;var&gt;outer&lt;/var&gt; is &lt;code&gt;null&lt;/code&gt;, then the MBeanServer implementation must use its own &lt;code&gt;this&lt;/code&gt; reference when invoking the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">所述 &lt;var&gt;outer&lt;/var&gt; 参数是一个指向应该被传递到所述的MBeanServer &lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;登记的MBeanServer内部的MBean当接口。如果 &lt;var&gt;outer&lt;/var&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则在调用&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;接口时，MBeanServer实现必须使用其自身的 &lt;code&gt;this&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="f59eba20773f5628795f2594c47e23e68f64a277" translate="yes" xml:space="preserve">
          <source>The ACL Entries in each ACL observe the following rules:</source>
          <target state="translated">每个ACL中的ACL条目遵守以下规则。</target>
        </trans-unit>
        <trans-unit id="8bff27e96b6704d8f87499203e5a6ae8eb995398" translate="yes" xml:space="preserve">
          <source>The ACL entry represented by this class is based on the ACL model specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. Each entry has four components as follows:</source>
          <target state="translated">此类表示的ACL条目基于&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：网络文件系统（NFS）版本4协议中&lt;/i&gt;&lt;/a&gt;指定的ACL模型。每个条目具有四个组成部分，如下所示：</target>
        </trans-unit>
        <trans-unit id="ca592302262da526d39a62951c512b3c1b6f0bf7" translate="yes" xml:space="preserve">
          <source>The ACL entry represented by this class is based on the ACL model specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. Each entry has four components as follows:</source>
          <target state="translated">此类表示的ACL条目基于&lt;a href=&quot;https://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：网络文件系统（NFS）版本4协议中&lt;/i&gt;&lt;/a&gt;指定的ACL模型。每个条目具有四个组成部分，如下所示：</target>
        </trans-unit>
        <trans-unit id="7935a2f1ee484e91861f127adcc137f1458cac88" translate="yes" xml:space="preserve">
          <source>The API allows a concrete &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; object to be created from the static function &lt;a href=&quot;transformerfactory#newInstance()&quot;&gt;&lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该API允许从静态函数&lt;a href=&quot;transformerfactory#newInstance()&quot;&gt; &lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt; &lt;/a&gt;创建一个具体的&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="36548e1972814e3b9960a257ac0e7fefe094719d" translate="yes" xml:space="preserve">
          <source>The API has a relatively large surface area in terms of number of methods. This is made manageable through the use of consistent method prefixes.</source>
          <target state="translated">API在方法数量上有一个相对较大的表面积。通过使用一致的方法前缀,这一点是可以管理的。</target>
        </trans-unit>
        <trans-unit id="dbd68d7bbcc6cfd76b2979294dc860ef940a8a77" translate="yes" xml:space="preserve">
          <source>The API has been designed to reject null early and to be clear about this behavior. A key exception is any method that takes an object and returns a boolean, for the purpose of checking or validating, will generally return false for null.</source>
          <target state="translated">API的设计是为了尽早拒绝null,并明确这种行为。一个关键的例外是,任何接受一个对象并返回一个布尔值的方法,出于检查或验证的目的,一般都会为null返回false。</target>
        </trans-unit>
        <trans-unit id="5d2d1219bb89c1b00654a21e6d21d64a9c99c7dd" translate="yes" xml:space="preserve">
          <source>The API includes remote access, so a remote management program can interact with a running application for these purposes.</source>
          <target state="translated">API包括远程访问,因此远程管理程序可以与正在运行的应用程序进行交互,达到这些目的。</target>
        </trans-unit>
        <trans-unit id="0ddb46698ab6320ca268f051f9fdff93cea456dc" translate="yes" xml:space="preserve">
          <source>The API is also designed for user extensibility, as there are many ways of calculating time. The &lt;a href=&quot;temporal/temporalfield&quot;&gt;field&lt;/a&gt; and &lt;a href=&quot;temporal/temporalunit&quot;&gt;unit&lt;/a&gt; API, accessed via &lt;a href=&quot;temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt; provide considerable flexibility to applications. In addition, the &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; interfaces provide day-to-day power, allowing code to read close to business requirements:</source>
          <target state="translated">该API还为用户扩展性而设计，因为有许多计算时间的方法。通过&lt;a href=&quot;temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;temporal/temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; &lt;/a&gt;访问的&lt;a href=&quot;temporal/temporalfield&quot;&gt;字段&lt;/a&gt;和&lt;a href=&quot;temporal/temporalunit&quot;&gt;单元&lt;/a&gt; API 为应用程序提供了相当大的灵活性。另外，&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;temporal/temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;接口提供日常功能，允许代码读取接近业务需求的代码：</target>
        </trans-unit>
        <trans-unit id="9d4850815012acd78d63e490cb3a9ac9619de1e0" translate="yes" xml:space="preserve">
          <source>The API is defined by classes in the package &lt;code&gt;javax.smartcardio&lt;/code&gt;. They can be classified as follows:</source>
          <target state="translated">该API由包 &lt;code&gt;javax.smartcardio&lt;/code&gt; 中的类定义。它们可以分类如下：</target>
        </trans-unit>
        <trans-unit id="14204c857d829d56ea62ee7c57aa99da1a8c1fa8" translate="yes" xml:space="preserve">
          <source>The API is designed to be type-safe where reasonable in the main high-level API. Thus, there are separate classes for the distinct concepts of date, time and date-time, plus variants for offset and time-zone. This can seem like a lot of classes, but most applications can begin with just five date/time types.</source>
          <target state="translated">在主要的高级API中,API被设计成在合理的情况下是类型安全的,因此,有单独的类用于日期、时间和日期-时间的不同概念,还有偏移和时区的变体。因此,日期、时间和日期-时间这些不同的概念都有单独的类,还有偏移和时区的变体。这看起来好像有很多类,但大多数应用程序可以从五个日期/时间类型开始。</target>
        </trans-unit>
        <trans-unit id="4c946352687beebbc767bf6f2e149b6a14c7e762" translate="yes" xml:space="preserve">
          <source>The API leverages the JCA provider model (see &lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;the Provider class&lt;/code&gt;&lt;/a&gt;) for registering and loading &lt;code&gt;XMLSignatureFactory&lt;/code&gt; and &lt;code&gt;KeyInfoFactory&lt;/code&gt; implementations.</source>
          <target state="translated">该API利用JCA提供程序模型（请参阅&lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt; &lt;code&gt;the Provider class&lt;/code&gt; &lt;/a&gt;）来注册和加载 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 和 &lt;code&gt;KeyInfoFactory&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="5ef3ef0b96f3f41f9bc604e1a12e6451e41174cc" translate="yes" xml:space="preserve">
          <source>The API provides a way for URIs referenced from within the stylesheet instructions or within the transformation to be resolved by the calling application. This can be done by creating a class that implements the &lt;a href=&quot;uriresolver&quot;&gt;&lt;code&gt;URIResolver&lt;/code&gt;&lt;/a&gt; interface, with its one method, &lt;a href=&quot;uriresolver#resolve(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;URIResolver.resolve(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, and use this class to set the URI resolution for the transformation instructions or transformation with &lt;a href=&quot;transformerfactory#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt;&lt;code&gt;TransformerFactory.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt;&lt;code&gt;Transformer.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;URIResolver.resolve&lt;/code&gt; method takes two String arguments, the URI found in the stylesheet instructions or built as part of the transformation process, and the base URI against which the first argument will be made absolute if the absolute URI is required. The returned &lt;a href=&quot;source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; object must be usable by the transformer, as specified in its implemented features.</source>
          <target state="translated">API为从样式表指令或转换中引用的URI提供了一种方法，以供调用应用程序解析。这可以通过创建一个实现&lt;a href=&quot;uriresolver&quot;&gt; &lt;code&gt;URIResolver&lt;/code&gt; &lt;/a&gt;接口的类及其一种方法&lt;a href=&quot;uriresolver#resolve(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;URIResolver.resolve(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;，并使用该类为转换指令设置URI解析度，或者使用&lt;a href=&quot;transformerfactory#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt; &lt;code&gt;TransformerFactory.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;transformer#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt; &lt;code&gt;Transformer.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt; 进行转换&lt;/a&gt;。该 &lt;code&gt;URIResolver.resolve&lt;/code&gt; 方法使用两个String参数，在样式表指令中找到的URI或作为转换过程的一部分构建的URI，以及需要绝对URI时将第一个参数设为绝对的基本URI。根据其实现的功能中的指定，返回的&lt;a href=&quot;source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt;对象必须可由转换器使用。</target>
        </trans-unit>
        <trans-unit id="1d7455826253bffa39b78615725dcdd563f19a04" translate="yes" xml:space="preserve">
          <source>The API requires every print service to support certain attributes; other attributes are optional and the service can choose whether or not to support them. Each attribute has a set of values that it accepts. The API requires every print service to support certain values for certain attributes; other attribute values are optional and the service can choose whether or not to support them. These support requirements are recorded in the documentation for each attribute class.</source>
          <target state="translated">API 要求每个打印服务都支持某些属性;其他属性是可选的,服务可以选择是否支持这些属性。每个属性都有一组可接受的值。API 要求每个打印服务支持某些属性的特定值;其他属性值是可选的,服务可以选择是否支持它们。这些支持要求记录在每个属性类的文档中。</target>
        </trans-unit>
        <trans-unit id="98bf436512bc6abd974a2733430a3d5b5a388d6c" translate="yes" xml:space="preserve">
          <source>The APIs added in 1.7 map between the old and new language codes, maintaining the old codes internal to Locale (so that &lt;code&gt;getLanguage&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; reflect the old code), but using the new codes in the BCP 47 language tag APIs (so that &lt;code&gt;toLanguageTag&lt;/code&gt; reflects the new one). This preserves the equivalence between Locales no matter which code or API is used to construct them. Java's default resource bundle lookup mechanism also implements this mapping, so that resources can be named using either convention, see &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">1.7中添加的API在新旧语言代码之间进行映射，从而维护Locale内部的旧代码（以便 &lt;code&gt;getLanguage&lt;/code&gt; 和 &lt;code&gt;toString&lt;/code&gt; 反映旧代码），但在BCP 47语言标签API中使用新代码（以便 &lt;code&gt;toLanguageTag&lt;/code&gt; 反映新的那一个）。无论使用哪种代码或API构造语言环境，都可以保留语言环境之间的等效性。Java的默认资源包查找机制也实现了此映射，因此可以使用任何一种约定来命名&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;，请参见ResourceBundle.Control。</target>
        </trans-unit>
        <trans-unit id="6023c5172deb2e42606e029f4d360e805d38b457" translate="yes" xml:space="preserve">
          <source>The APIs in this package are all deprecated without replacement.</source>
          <target state="translated">这个包中的API都是废弃的,不需要替换。</target>
        </trans-unit>
        <trans-unit id="1e8aa36e1e31661c0e8ce5465a873be7b0631796" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition for this is:</source>
          <target state="translated">ASN.1对此的定义是:</target>
        </trans-unit>
        <trans-unit id="943be2a0bc4bf87f26928040bf4bf42222a1a4d3" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition is as follows:</source>
          <target state="translated">ASN.1的定义如下:</target>
        </trans-unit>
        <trans-unit id="33b3e4f975d64c40485d484aff9c8c6946bbcac2" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;GeneralNames&lt;/code&gt; is defined in &lt;a href=&quot;#getSubjectAlternativeNames()&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GeneralNames&lt;/code&gt; 的ASN.1定义在&lt;a href=&quot;#getSubjectAlternativeNames()&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; 中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="47734034dda78f218c309ac08628f954c60425f3" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;GeneralNames&lt;/code&gt; is defined in &lt;a href=&quot;x509certificate#getSubjectAlternativeNames--&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GeneralNames&lt;/code&gt; 的ASN.1定义在&lt;a href=&quot;x509certificate#getSubjectAlternativeNames--&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; 中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="8d4394df37dee40fdf32c164d9e7675520b84225" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;tbsCertList&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;tbsCertList&lt;/code&gt; 的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="f3b0786ad17cd85c2406e5dec048d22519850b47" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;tbsCertificate&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;tbsCertificate&lt;/code&gt; 的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="ef48af476f938c6dbaa3d39664736786a596b706" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of the &lt;code&gt;IssuerAltName&lt;/code&gt; extension is:</source>
          <target state="translated">&lt;code&gt;IssuerAltName&lt;/code&gt; 扩展的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="f3bfe2daf1a8d1055520bbddc7ce3310410386b4" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of the &lt;code&gt;SubjectAltName&lt;/code&gt; extension is:</source>
          <target state="translated">&lt;code&gt;SubjectAltName&lt;/code&gt; 扩展的ASN.1定义是：</target>
        </trans-unit>
        <trans-unit id="ef7fb5e463d8e7a85b7d17a9a4424f5c59dec8a2" translate="yes" xml:space="preserve">
          <source>The AWT Focus Subsystem</source>
          <target state="translated">AWT聚焦子系统</target>
        </trans-unit>
        <trans-unit id="c23a37e89e94656b7c67efc2143f08a7162a7dc6" translate="yes" xml:space="preserve">
          <source>The AWT Modality</source>
          <target state="translated">AWT模式</target>
        </trans-unit>
        <trans-unit id="b973428a4010a2e2c6902dfcdc73ebef4dc85d16" translate="yes" xml:space="preserve">
          <source>The AWT listener model lets applications attach event listeners to components in order to bind events to actions. Swing encourages the use of keymaps instead of listeners, but maintains compatibility with listeners by giving the listeners a chance to steal an event by consuming it.</source>
          <target state="translated">AWT监听器模型允许应用程序将事件监听器附加到组件上,以便将事件绑定到动作上。Swing鼓励使用keymaps而不是监听器,但通过给监听器一个通过消耗事件来窃取事件的机会来保持与监听器的兼容性。</target>
        </trans-unit>
        <trans-unit id="0669e573aa756da1edc3404f2ca12e839dcd44e2" translate="yes" xml:space="preserve">
          <source>The AccessControlContext of the thread that created the instance of URLClassLoader will be used when subsequently loading classes and resources.</source>
          <target state="translated">当后续加载类和资源时,将使用创建URLClassLoader实例的线程的AccessControlContext。</target>
        </trans-unit>
        <trans-unit id="b36f05d0d881d326a4ca7052f41c11e7cb29b4d8" translate="yes" xml:space="preserve">
          <source>The AccessController class is used for access control operations and decisions.</source>
          <target state="translated">AccessController类用于访问控制操作和决策。</target>
        </trans-unit>
        <trans-unit id="e44ca12442a1e7b0c2ea9c89fdb764999e8954ae" translate="yes" xml:space="preserve">
          <source>The AccessibleObject class is the base class for Field, Method and Constructor objects.</source>
          <target state="translated">AccessibleObject 类是 Field、Method 和 Constructor 对象的基类。</target>
        </trans-unit>
        <trans-unit id="6a4566430ddc25f7244284392e568dac22b82186" translate="yes" xml:space="preserve">
          <source>The AccessibleObject class is the base class for Field, Method and Constructor objects. It provides the ability to flag a reflected object as suppressing default Java language access control checks when it is used. The access checks--for public, default (package) access, protected, and private members--are performed when Fields, Methods or Constructors are used to set or get fields, to invoke methods, or to create and initialize new instances of classes, respectively.</source>
          <target state="translated">AccessibleObject 类是 Field、Method 和 Constructor 对象的基类。它提供了在使用反射对象时将其标记为抑制默认的Java语言访问控制检查的能力。当使用Field、Method或Constructors分别设置或获取字段、调用方法或创建和初始化类的新实例时,就会执行访问控制检查--对于公共的、默认的(包)访问、受保护的和私有的成员。</target>
        </trans-unit>
        <trans-unit id="a68ea02747038a8e45417b19cd5c6838a7022a98" translate="yes" xml:space="preserve">
          <source>The AffineTransform parameter passed into and out of this class are cloned. The RenderingHints and Shape parameters are not necessarily cloneable and are therefore only reference copied. Altering RenderingHints or Shape instances that are in use by instances of RenderContext may have undesired side effects.</source>
          <target state="translated">传入和传出这个类的AffineTransform参数是可以克隆的。RenderingHints和Shape参数不一定是可以克隆的,因此只能引用复制。改变RenderingHints或RenderContext实例正在使用的Shape实例可能会产生不必要的副作用。</target>
        </trans-unit>
        <trans-unit id="6784e3abc090fab94e5244fcbe90ade6d9424123" translate="yes" xml:space="preserve">
          <source>The AllPermission is a permission that implies all other permissions.</source>
          <target state="translated">AllPermission是一个意味着其他所有权限的权限。</target>
        </trans-unit>
        <trans-unit id="160ae22b65044b8568a8445e371a31bf8aaf3856" translate="yes" xml:space="preserve">
          <source>The Alt key extended modifier constant.</source>
          <target state="translated">Alt键扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="c32b87d13e51010df9b131a2a159c6f08c4061cc" translate="yes" xml:space="preserve">
          <source>The Alt key modifier constant.</source>
          <target state="translated">Alt键修改器常数。</target>
        </trans-unit>
        <trans-unit id="67ebaec467a6e9959ba36c0e74821764b3f28d0e" translate="yes" xml:space="preserve">
          <source>The AltGraph key extended modifier constant.</source>
          <target state="translated">AltGraph键扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="af96a3451e70135ea5a5f5dfb4bc7b7416b43b8e" translate="yes" xml:space="preserve">
          <source>The AltGraph key modifier constant.</source>
          <target state="translated">AltGraph键修改器常数。</target>
        </trans-unit>
        <trans-unit id="6868186048f362d856c90c60963c84a42086381e" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated, no replacement.</source>
          <target state="translated">小程序API已被废弃,没有替代。</target>
        </trans-unit>
        <trans-unit id="952898db7755e8938613fa579a9e9fc86b6e5a52" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated.</source>
          <target state="translated">Applet API已被废弃。</target>
        </trans-unit>
        <trans-unit id="8dd33816bcdb119edd3850a36cdb8640a02f66c5" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated. See the &lt;a href=&quot;../../java/applet/package-summary&quot;&gt; java.applet package documentation&lt;/a&gt; for further information.</source>
          <target state="translated">Applet API已弃用。有关更多信息，请参见&lt;a href=&quot;../../java/applet/package-summary&quot;&gt;java.applet软件包文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fde7dcfee0eaa7810b2d3e4119c1b3003baeb65" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated. See the &lt;a href=&quot;../applet/package-summary&quot;&gt; java.applet package documentation&lt;/a&gt; for further information.</source>
          <target state="translated">Applet API已弃用。有关更多信息，请参见&lt;a href=&quot;../applet/package-summary&quot;&gt;java.applet软件包文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="074b0f1a024ad247a895c2f41c9dab31804bb1f1" translate="yes" xml:space="preserve">
          <source>The Arabic range with the Arabic-Indic digits.</source>
          <target state="translated">阿拉伯文范围内的阿拉伯-印度数字。</target>
        </trans-unit>
        <trans-unit id="5f0a7cc180f7ec121449f8ad22a0f254f01aed33" translate="yes" xml:space="preserve">
          <source>The Arabic range with the Eastern Arabic-Indic digits.</source>
          <target state="translated">东部阿拉伯-印地语数字的阿拉伯范围。</target>
        </trans-unit>
        <trans-unit id="9b559b3d068940514b3b2c10adaad5cfb38dfc1e" translate="yes" xml:space="preserve">
          <source>The Area class will attempt to return the tightest bounding box possible for the Shape. The bounding box will not be padded to include the control points of curves in the outline of the Shape, but should tightly fit the actual geometry of the outline itself.</source>
          <target state="translated">区域类将尝试为Shape返回最紧密的边界框。边界框不会被填充以包括形状轮廓中的曲线控制点,而是应该紧密地贴合轮廓本身的实际几何形状。</target>
        </trans-unit>
        <trans-unit id="9477ca8f0c7cd6500bd0479d8977d02cdcbaf631" translate="yes" xml:space="preserve">
          <source>The Area class will attempt to return the tightest bounding box possible for the Shape. The bounding box will not be padded to include the control points of curves in the outline of the Shape, but should tightly fit the actual geometry of the outline itself. Since the returned object represents the bounding box with integers, the bounding box can only be as tight as the nearest integer coordinates that encompass the geometry of the Shape.</source>
          <target state="translated">区域类将尝试为Shape返回最紧密的边界框。边界框不会被填充以包括Shape轮廓中曲线的控制点,而是应该紧密地贴合轮廓本身的实际几何形状。由于返回的对象是用整数来表示边界框,所以边界框只能和最接近的整数坐标一样紧贴Shape的几何体。</target>
        </trans-unit>
        <trans-unit id="e40e5d487b331e1f7f4c2477322a84662ea1dcde" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming</source>
          <target state="translated">计算机编程的艺术</target>
        </trans-unit>
        <trans-unit id="3e916cc17dff2d73e810c4085e8846b18e562a3e" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming,</source>
          <target state="translated">计算机编程的艺术。</target>
        </trans-unit>
        <trans-unit id="d69bacd54b669ff7d878e60414c2d1f8611ca3a2" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming, Volume 2</source>
          <target state="translated">计算机编程艺术》第二卷</target>
        </trans-unit>
        <trans-unit id="545bef1b9e1299301bb2907b1e213bfe088b7b67" translate="yes" xml:space="preserve">
          <source>The Attribute with attrID that was previous in this attribute set; null if no such attribute existed.</source>
          <target state="translated">此属性集中之前的attrID的属性;如果不存在这样的属性,则为空。</target>
        </trans-unit>
        <trans-unit id="86989bf0d4a1d404f5eef67b394b9e8347a4cb82" translate="yes" xml:space="preserve">
          <source>The Attribute with the same ID as attr that was previous in this attribute set; null if no such attribute existed.</source>
          <target state="translated">与此属性集中之前的attr相同ID的属性;如果不存在这样的属性,则为空。</target>
        </trans-unit>
        <trans-unit id="188be4b00e3695b200467797aef29ec1a27bdb7b" translate="yes" xml:space="preserve">
          <source>The Attribute with the same ID as attrID that was previous in the attribute set; null if no such attribute existed.</source>
          <target state="translated">属性集中与attrID相同ID的属性;如果不存在这样的属性,则为空。</target>
        </trans-unit>
        <trans-unit id="17831de708d75ed43f9af6c62286f3a3d590fbe3" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values.</source>
          <target state="translated">Attributes类将Manifest属性名映射到相关的字符串值。</target>
        </trans-unit>
        <trans-unit id="11106864e8cece63f4df274160f30c89327ce115" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</source>
          <target state="translated">Attributes类将Manifest属性名映射到相关的字符串值。有效的属性名不区分大小写,限制在ASCII字符集[0-9a-zA-Z_-]中,长度不能超过70个字符。属性值可以包含任何字符,并在写入输出流时进行UTF8编码。有关有效属性名和值的更多信息,请参见JAR文件规范。</target>
        </trans-unit>
        <trans-unit id="3ef11f26de12755419a148282a58582ba21062d2" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. There must be a colon and a SPACE after the name; the combined length will not exceed 72 characters. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="translated">Attributes类将清单属性名称映射到关联的字符串值。有效属性名称不区分大小写，限制为集合[0-9a-zA-Z_-]中的ASCII字符，并且长度不能超过70个字符。名称后面必须有一个冒号和一个空格。组合长度不得超过72个字符。属性值可以包含任何字符，并且在写入输出流时将被UTF8编码。有关有效属性名称和值的更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JAR文件规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce1aaf9434adb65a9c7d2a62816880427b08624f" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. There must be a colon and a SPACE after the name; the combined length will not exceed 72 characters. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="translated">Attributes类将清单属性名称映射到关联的字符串值。有效属性名称不区分大小写，限制为集合[0-9a-zA-Z_-]中的ASCII字符，并且长度不能超过70个字符。名称后面必须有一个冒号和一个空格。组合长度不得超过72个字符。属性值可以包含任何字符，并且在写入输出流时将被UTF8编码。有关有效属性名称和值的更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;JAR文件规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b1b32f55e754aebc8c66e80e5a265f6ce9b4d29" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map.</source>
          <target state="translated">Attributes.Name类表示存储在这个Map中的属性名。</target>
        </trans-unit>
        <trans-unit id="e586abe0903b7ef3e0a894bd9fa0abd2347cbc7b" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="translated">Attributes.Name类表示存储在此Map中的属性名称。有效属性名称不区分大小写，限制为集合[0-9a-zA-Z_-]中的ASCII字符，并且长度不能超过70个字符。属性值可以包含任何字符，并且在写入输出流时将被UTF8编码。有关有效属性名称和值的更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JAR文件规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf343f226e4f6526f09040d66bbe4bcf74baa90b" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="translated">Attributes.Name类表示存储在此Map中的属性名称。有效属性名称不区分大小写，限制为集合[0-9a-zA-Z_-]中的ASCII字符，并且长度不能超过70个字符。属性值可以包含任何字符，并且在写入输出流时将被UTF8编码。有关有效属性名称和值的更多信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;JAR文件规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="130d29f5e1935938287de918b31d59eac532adc8" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</source>
          <target state="translated">Attributes.Name类表示存储在该Map中的属性名。有效的属性名不区分大小写,限制在[0-9a-zA-Z_-]集合中的ASCII字符,长度不能超过70个字符。属性值可以包含任何字符,并在写入输出流时进行UTF8编码。有关有效属性名和值的更多信息,请参见JAR文件规范。</target>
        </trans-unit>
        <trans-unit id="933c13e97de653f311c0095da4356feb1ef9aa07" translate="yes" xml:space="preserve">
          <source>The BIDI_EMBEDDING attribute in the text, if present, represents embedding level information. Negative values from -1 to -62 indicate overrides at the absolute value of the level. Positive values from 1 to 62 indicate embeddings. Where values are zero or not defined, the base embedding level as determined by the base direction is assumed.</source>
          <target state="translated">文本中的BIDI_EMBEDDING属性,如果存在,表示嵌入水平信息。从-1到-62的负值表示以级别的绝对值覆盖。从1到62的正值表示嵌入。当值为零或未定义时,则假定为基本方向确定的基本嵌入级别。</target>
        </trans-unit>
        <trans-unit id="0a6d149de56262f01e5e36cd8497b77dee6738e2" translate="yes" xml:space="preserve">
          <source>The BackSpace key.</source>
          <target state="translated">BackSpace键。</target>
        </trans-unit>
        <trans-unit id="39a8d250337b403c7a9d7f4737d5c4ebb7d43c9b" translate="yes" xml:space="preserve">
          <source>The Balinese range with the Balinese digits.</source>
          <target state="translated">巴厘岛的范围与巴厘岛的数字。</target>
        </trans-unit>
        <trans-unit id="479b03243c34870565e01fcb4d8b7558405fd430" translate="yes" xml:space="preserve">
          <source>The Base64 padding character &lt;code&gt;'='&lt;/code&gt; is accepted and interpreted as the end of the encoded byte data, but is not required. So if the final unit of the encoded byte data only has two or three Base64 characters (without the corresponding padding character(s) padded), they are decoded as if followed by padding character(s). If there is a padding character present in the final unit, the correct number of padding character(s) must be present, otherwise &lt;code&gt;IllegalArgumentException&lt;/code&gt; ( &lt;code&gt;IOException&lt;/code&gt; when reading from a Base64 stream) is thrown during decoding.</source>
          <target state="translated">Base64填充字符 &lt;code&gt;'='&lt;/code&gt; 被接受并解释为已编码字节数据的末尾，但不是必需的。因此，如果编码的字节数据的最后单元仅包含两个或三个Base64字符（没有填充相应的填充字符），则将它们解码为如同后面跟着填充字符一样。如果最终单元中存在填充字符，则必须存在正确数量的填充字符，否则在解码过程中会抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; （从Base64流中读取时为 &lt;code&gt;IOException&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7f2fa42fffaffc455185b2641418acb565381be2" translate="yes" xml:space="preserve">
          <source>The BasicPermission class extends the Permission class, and can be used as the base class for permissions that want to follow the same naming convention as BasicPermission.</source>
          <target state="translated">BasicPermission类是Permission类的扩展,可以作为希望遵循与BasicPermission相同命名惯例的权限的基类。</target>
        </trans-unit>
        <trans-unit id="d8109724094de0721a57a12d33075bebc3a6c1d9" translate="yes" xml:space="preserve">
          <source>The BasicReason enumerates the potential reasons that a certification path of any type may be invalid.</source>
          <target state="translated">BasicReason列举了任何类型的认证路径可能无效的潜在原因。</target>
        </trans-unit>
        <trans-unit id="7f2f07330207c79bdf9b8035cdfc8c33b0b86b6f" translate="yes" xml:space="preserve">
          <source>The BeanContext acts a logical hierarchical container for JavaBeans.</source>
          <target state="translated">BeanContext作为JavaBeans的逻辑层次容器。</target>
        </trans-unit>
        <trans-unit id="db9f214e6794613d1af4a4bd16aca364a324671d" translate="yes" xml:space="preserve">
          <source>The BeanContextServices interface provides a mechanism for a BeanContext to expose generic &quot;services&quot; to the BeanContextChild objects within.</source>
          <target state="translated">BeanContextServices接口为BeanContext提供了一种机制,用于向其中的BeanContextChild对象公开通用的 &quot;服务&quot;。</target>
        </trans-unit>
        <trans-unit id="28e60bfa8d3958dbf027cd9ce5a707ff9a06e8f0" translate="yes" xml:space="preserve">
          <source>The Bengali range with the Bengali digits.</source>
          <target state="translated">孟加拉数字的范围。</target>
        </trans-unit>
        <trans-unit id="61f473874cda4877ad49e4b4e18b2669d648bcfa" translate="yes" xml:space="preserve">
          <source>The BigInteger constant one.</source>
          <target state="translated">BigInteger常数一。</target>
        </trans-unit>
        <trans-unit id="4fe20da433bea836e2620a8e5bd24465caa34b0d" translate="yes" xml:space="preserve">
          <source>The BigInteger constant ten.</source>
          <target state="translated">大整数常数十。</target>
        </trans-unit>
        <trans-unit id="2ae94bca84a3b818bb066e53ab21fbe4a5a93bac" translate="yes" xml:space="preserve">
          <source>The BigInteger constant two.</source>
          <target state="translated">BigInteger常数二。</target>
        </trans-unit>
        <trans-unit id="eaa19daee6ceb68fa207da723944fc65078e9b5c" translate="yes" xml:space="preserve">
          <source>The BigInteger constant zero.</source>
          <target state="translated">BigInteger常数为零。</target>
        </trans-unit>
        <trans-unit id="f2abfa8bc11f1cc0906af68cb43302c5e56e7dbc" translate="yes" xml:space="preserve">
          <source>The Boolean class wraps a value of the primitive type &lt;code&gt;boolean&lt;/code&gt; in an object.</source>
          <target state="translated">布尔类将原始类型 &lt;code&gt;boolean&lt;/code&gt; 的值包装在对象中。</target>
        </trans-unit>
        <trans-unit id="d66eb41900b1a53b5e15c061f84c26f96aec8f20" translate="yes" xml:space="preserve">
          <source>The Boolean class wraps a value of the primitive type &lt;code&gt;boolean&lt;/code&gt; in an object. An object of type &lt;code&gt;Boolean&lt;/code&gt; contains a single field whose type is &lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">布尔类将原始类型 &lt;code&gt;boolean&lt;/code&gt; 的值包装在对象中。 &lt;code&gt;Boolean&lt;/code&gt; 类型的对象包含一个类型为 &lt;code&gt;boolean&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="81801484504e216b7fb284280633eaa1558a087c" translate="yes" xml:space="preserve">
          <source>The BoxLayout manager is constructed with an axis parameter that specifies the type of layout that will be done. There are four choices:</source>
          <target state="translated">BoxLayout管理器是通过一个轴参数来构造的,这个轴参数指定了要做的布局类型。有四种选择。</target>
        </trans-unit>
        <trans-unit id="bc0905838de7d1f34ab2990b1ad9e0ca39c77842" translate="yes" xml:space="preserve">
          <source>The Builder class for building the CatalogFeatures object.</source>
          <target state="translated">用于构建 CatalogFeatures 对象的 Builder 类。</target>
        </trans-unit>
        <trans-unit id="efc67a7d1a2c9c36bea385389f98ef36be245ba3" translate="yes" xml:space="preserve">
          <source>The CIEXYZ conversion color space defined above.</source>
          <target state="translated">上面定义的CIEXYZ转换颜色空间。</target>
        </trans-unit>
        <trans-unit id="806e172d08d936be7f9a402bfc1b266638b44841" translate="yes" xml:space="preserve">
          <source>The CLA byte of the command APDU is automatically adjusted to match the channel number of this CardChannel.</source>
          <target state="translated">命令APDU的CLA字节自动调整为与该CardChannel的通道号相匹配。</target>
        </trans-unit>
        <trans-unit id="69ad751af3c43bdb33861e917a3b1c15e936c9cf" translate="yes" xml:space="preserve">
          <source>The COLUMN_SIZE column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">COLUMN_SIZE列表示指定列的大小。对于数字数据,这是最大精度。对于字符数据,这是以字符为单位的长度。对于字符数据类型,这是字符串表示法的字符长度(假设小数秒部分的最大允许精度)。对于二进制数据,这是以字节为单位的长度。对于ROWID数据类型,这是以字节为单位的长度。对于列大小不适用的数据类型,返回空值。</target>
        </trans-unit>
        <trans-unit id="36a57ef1b9f6c643e2079cf370e0822f39c24fb7" translate="yes" xml:space="preserve">
          <source>The COLUMN_SIZE column specifies the column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">COLUMN_SIZE列指定了指定列的大小。对于数字数据,这是最大精度。对于字符数据,这是以字符为单位的长度。对于字符数据类型,这是字符串表示法的字符长度(假设小数秒部分的最大允许精度)。对于二进制数据,这是以字节为单位的长度。对于ROWID数据类型,这是以字节为单位的长度。对于列大小不适用的数据类型,返回空值。</target>
        </trans-unit>
        <trans-unit id="730ba74f50d3f28436fa29f532e375e6c0695ab2" translate="yes" xml:space="preserve">
          <source>The CPU time provided by this interface has nanosecond precision but not necessarily nanosecond accuracy.</source>
          <target state="translated">这个接口提供的CPU时间有纳秒级的精度,但不一定有纳秒级的精度。</target>
        </trans-unit>
        <trans-unit id="e8f7f2f7ff227a32e7a5531eecf91cf56365cd7f" translate="yes" xml:space="preserve">
          <source>The CRL or OCSP response cannot be obtained because of a network error.</source>
          <target state="translated">由于网络错误,无法获得CRL或OCSP响应。</target>
        </trans-unit>
        <trans-unit id="7089d78e3e0c62b70041275bb433057c167f603b" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt; RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">CRLReason枚举指定了证书被吊销的原因，如&lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280：Internet X.509公钥基础结构证书和CRL配置文件所定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4d351c3db241b4d379234c7ac2cb5765fab41d2" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt; RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">CRLReason枚举指定了证书被吊销的原因，如&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280：Internet X.509公钥基础结构证书和CRL配置文件所定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0eb967d9ac7761c67b21583f035b1b382621c4c9" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt; RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">CRLReason枚举指定了证书被吊销的原因，如&lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280：Internet X.509公钥基础结构证书和CRL配置文件所定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d15779cdaa6b6ad714a1c92e09167459cb6fc98f" translate="yes" xml:space="preserve">
          <source>The CSS rule that contains this declaration block or &lt;code&gt;null&lt;/code&gt; if this &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; is not attached to a &lt;code&gt;CSSRule&lt;/code&gt;.</source>
          <target state="translated">该CSS规则包含该声明块或 &lt;code&gt;null&lt;/code&gt; ，如果这 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 上未附加到一个 &lt;code&gt;CSSRule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7812130094f12985b55dbf55a811756b56e1df5" translate="yes" xml:space="preserve">
          <source>The CS_CIEXYZ space used by the toCIEXYZ/fromCIEXYZ methods can be described as follows:</source>
          <target state="translated">toCIEXYZ/fromCIEXYZ方法使用的CS_CIEXYZ空间可以描述如下。</target>
        </trans-unit>
        <trans-unit id="c9919c5ae2bcb3b9d6a077925318f690f537fce5" translate="yes" xml:space="preserve">
          <source>The Caps Lock key, a non-ASCII action key.</source>
          <target state="translated">Caps Lock键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="8e67b3c0835b7fe125721227039570d3711aedb5" translate="yes" xml:space="preserve">
          <source>The Catalog API defines a standard solution for resolving external resources referenced by XML documents. It is fully supported by the XML Processors allowing application developers to configure a catalog through an XML processor or system property or the jaxp.properties file to take advantage of the feature.</source>
          <target state="translated">目录API定义了一个标准的解决方案,用于解析XML文档引用的外部资源。它被XML处理器完全支持,允许应用程序开发人员通过XML处理器或系统属性或jaxp.properties文件来配置目录,以利用该功能。</target>
        </trans-unit>
        <trans-unit id="8c3439a20de44e9f818a8524933afd2726aea753" translate="yes" xml:space="preserve">
          <source>The Catalog Features are supported throughout the JAXP processors, including SAX and DOM (&lt;a href=&quot;../parsers/package-summary&quot;&gt;&lt;code&gt;javax.xml.parsers&lt;/code&gt;&lt;/a&gt;), and StAX parsers (&lt;a href=&quot;../stream/package-summary&quot;&gt;&lt;code&gt;javax.xml.stream&lt;/code&gt;&lt;/a&gt;), Schema Validation (&lt;a href=&quot;../validation/package-summary&quot;&gt;&lt;code&gt;javax.xml.validation&lt;/code&gt;&lt;/a&gt;), and XML Transformation (&lt;a href=&quot;../transform/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform&lt;/code&gt;&lt;/a&gt;). The features described above can be set through JAXP factories or processors that define a setProperty or setAttribute interface. For example, the following code snippet sets a URI to a catalog file on a SAX parser through the &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property:</source>
          <target state="translated">整个JAXP处理器都支持目录功能，包括SAX和DOM（&lt;a href=&quot;../parsers/package-summary&quot;&gt; &lt;code&gt;javax.xml.parsers&lt;/code&gt; &lt;/a&gt;），StAX解析器（&lt;a href=&quot;../stream/package-summary&quot;&gt; &lt;code&gt;javax.xml.stream&lt;/code&gt; &lt;/a&gt;），模式验证（&lt;a href=&quot;../validation/package-summary&quot;&gt; &lt;code&gt;javax.xml.validation&lt;/code&gt; &lt;/a&gt;）和XML转换（&lt;a href=&quot;../transform/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform&lt;/code&gt; &lt;/a&gt;）。可以通过定义setProperty或setAttribute接口的JAXP工厂或处理器来设置上述功能。例如，以下代码段通过 &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; 属性将URI设置为SAX解析器上的目录文件：</target>
        </trans-unit>
        <trans-unit id="f5c80cce7f8e24a12ba725dd3dd4f782aefcd3e2" translate="yes" xml:space="preserve">
          <source>The Catalog Manager manages the creation of XML Catalogs and Catalog Resolvers.</source>
          <target state="translated">目录管理器管理XML目录和目录解析器的创建。</target>
        </trans-unit>
        <trans-unit id="385001113bb38abb20285d1ebb83df4d50340b14" translate="yes" xml:space="preserve">
          <source>The Catalog class represents an entity Catalog as defined by &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt; XML Catalogs, OASIS Standard V1.1, 7 October 2005&lt;/a&gt;.</source>
          <target state="translated">Catalog类代表由&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt;XML Catalogs（OASIS标准V1.1，2005年10月7日）&lt;/a&gt;定义的实体Catalog 。</target>
        </trans-unit>
        <trans-unit id="1909b728d3f1eea8632e5d9e1f0a292d2819745c" translate="yes" xml:space="preserve">
          <source>The Catalog support is available for any process in the JAXP library that supports a resolver. The following table lists all such processes.</source>
          <target state="translated">目录支持适用于 JAXP 库中支持解析器的任何进程。下表列出了所有这些进程。</target>
        </trans-unit>
        <trans-unit id="ed3ae395d6b192794b3d15b214dfe88f06d1d0b4" translate="yes" xml:space="preserve">
          <source>The CatalogFeatures holds a collection of features and properties.</source>
          <target state="translated">目录特征(CatalogFeatures)拥有一个特征和属性的集合。</target>
        </trans-unit>
        <trans-unit id="45bf43ea40ad206a16c91fe7538584c327d0aa28" translate="yes" xml:space="preserve">
          <source>The CatalogResolver however, will throw &lt;a href=&quot;catalogexception&quot;&gt;&lt;code&gt;CatalogException&lt;/code&gt;&lt;/a&gt; only when &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; is specified as &lt;code&gt;strict&lt;/code&gt;. For applications that expect to handle the checked Exceptions, it may be necessary to use a custom resolver to wrap the CatalogResolver or implement it with a &lt;a href=&quot;catalog&quot;&gt;&lt;code&gt;Catalog&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">但是，只有将 &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; 指定为 &lt;code&gt;strict&lt;/code&gt; 时，CatalogResolver才会引发&lt;a href=&quot;catalogexception&quot;&gt; &lt;code&gt;CatalogException&lt;/code&gt; &lt;/a&gt;。对于希望处理检查到的异常的应用程序，可能有必要使用自定义解析程序来包装CatalogResolver或使用&lt;a href=&quot;catalog&quot;&gt; &lt;code&gt;Catalog&lt;/code&gt; &lt;/a&gt;对象实现它。</target>
        </trans-unit>
        <trans-unit id="3c9da4fdbaba5f8c9f09732fa4d7f6d8a7c39639" translate="yes" xml:space="preserve">
          <source>The ChaCha20 and ChaCha20-Poly1305 algorithms have a similar requirement for unique nonces with a given key. After each encryption or decryption operation, callers should re-initialize their ChaCha20 or ChaCha20-Poly1305 ciphers with parameters that specify a different nonce value. Please see &lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;RFC 7539&lt;/a&gt; for more information on the ChaCha20 and ChaCha20-Poly1305 algorithms.</source>
          <target state="translated">对于具有给定密钥的唯一随机数，ChaCha20和ChaCha20-Poly1305算法具有相似的要求。每次加密或解密操作之后，调用者都应使用指定不同随机数值的参数重新初始化其ChaCha20或ChaCha20-Poly1305密码。有关ChaCha20和ChaCha20-Poly1305算法的更多信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;RFC 7539&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6a9e74f4885fe7cf70c23e4e55e9a31b16bb5b1" translate="yes" xml:space="preserve">
          <source>The Cham range with the Cham digits.</source>
          <target state="translated">湛系列与湛数字。</target>
        </trans-unit>
        <trans-unit id="33f1a9e451f535334439b331e5952fb5eceaa417" translate="yes" xml:space="preserve">
          <source>The Character Encoding is not supported.</source>
          <target state="translated">不支持字符编码。</target>
        </trans-unit>
        <trans-unit id="5a47ec8afb6ab11bcf60e2a316aaa05ee5d6f88e" translate="yes" xml:space="preserve">
          <source>The Class Loader Repository used by the given MBeanServer.</source>
          <target state="translated">给定的MBeanServer使用的类加载器存储库。</target>
        </trans-unit>
        <trans-unit id="004f0206b3d3d849c825f918d9b68ef429b3b940" translate="yes" xml:space="preserve">
          <source>The Class object for the bean's customizer. This may be null if the bean doesn't have a customizer.</source>
          <target state="translated">bean的自定义器的类对象。如果Bean没有自定义器,这个对象可能为空。</target>
        </trans-unit>
        <trans-unit id="537754527d3370203382836d7cb800a91b8ee729" translate="yes" xml:space="preserve">
          <source>The Class object for the bean.</source>
          <target state="translated">bean的Class对象。</target>
        </trans-unit>
        <trans-unit id="df1481dabe3eac178ff1405ee9b4259ce1e6e7a5" translate="yes" xml:space="preserve">
          <source>The Class object for the target interface that will get invoked when the event is fired.</source>
          <target state="translated">目标接口的Class对象,当事件被触发时,目标接口将被调用。</target>
        </trans-unit>
        <trans-unit id="7eac5b9958cd8cfff4271334618aee040eeba806" translate="yes" xml:space="preserve">
          <source>The Class object representing the primitive type boolean.</source>
          <target state="translated">表示基元类型boolean的Class对象。</target>
        </trans-unit>
        <trans-unit id="3618cc4f2a2349312e42daaa29d613987f1e092c" translate="yes" xml:space="preserve">
          <source>The ClassLoader that the module is defined to</source>
          <target state="translated">模块定义的ClassLoader。</target>
        </trans-unit>
        <trans-unit id="d40630063d92d99c85238befefd749074cac2197" translate="yes" xml:space="preserve">
          <source>The ClassLoader used for that MBean. If &lt;var&gt;l&lt;/var&gt; is the MBean's actual ClassLoader, and &lt;var&gt;r&lt;/var&gt; is the returned value, then either:</source>
          <target state="translated">用于该MBean的ClassLoader。如果 &lt;var&gt;l&lt;/var&gt; 是MBean的实际ClassLoader，而 &lt;var&gt;r&lt;/var&gt; 是返回值，则可以：</target>
        </trans-unit>
        <trans-unit id="66051b6d430a30f6ea7fd611d6e0df14e41ad561" translate="yes" xml:space="preserve">
          <source>The ClassLoaderRepository for this MBeanServer.</source>
          <target state="translated">该MBeanServer的ClassLoaderRepository。</target>
        </trans-unit>
        <trans-unit id="2fd3574d8c10f0ef7d993b723f5632e342d0a6ee" translate="yes" xml:space="preserve">
          <source>The CodeBase and Signedby components of the triplet name/value pairs are optional. If they are not present, then any any codebase will match, and any signer (including unsigned code) will match. For Example,</source>
          <target state="translated">三联名/值对的CodeBase和Signedby组件是可选的。如果它们不存在,那么任何代码库都会匹配,任何签名者(包括无符号代码)都会匹配。例如</target>
        </trans-unit>
        <trans-unit id="c2d96326649dde95c7e44b0d7b9ed5f0eb24edde" translate="yes" xml:space="preserve">
          <source>The Color choice action identifier The color is passed as an argument</source>
          <target state="translated">颜色选择动作标识符 颜色作为参数传递。</target>
        </trans-unit>
        <trans-unit id="9aefa3745661aac9f95067164415b6aba2584a76" translate="yes" xml:space="preserve">
          <source>The ColorType instance to use for specifying color printing.</source>
          <target state="translated">用于指定颜色打印的 ColorType 实例。</target>
        </trans-unit>
        <trans-unit id="fc12d050c25db30932a215afa844cd2c0a1f9907" translate="yes" xml:space="preserve">
          <source>The ColorType instance to use for specifying monochrome printing.</source>
          <target state="translated">用于指定单色打印的ColorType实例。</target>
        </trans-unit>
        <trans-unit id="a1a553cf69cfe6ca631789fbb350d1c4c807cf8f" translate="yes" xml:space="preserve">
          <source>The Component that the @{code ComboBoxEditor} uses for editing.</source>
          <target state="translated">@{code ComboBoxEditor}用于编辑的组件。</target>
        </trans-unit>
        <trans-unit id="227d796281ad0577957a4e31b0889941847041af" translate="yes" xml:space="preserve">
          <source>The Component this DragGestureRecognizer is associated with</source>
          <target state="translated">这个DragGestureRecognizer所关联的组件。</target>
        </trans-unit>
        <trans-unit id="d6129cd0df87476b144f9ae72f10280b8502d399" translate="yes" xml:space="preserve">
          <source>The Component this label is for; null if the label is not the label for a component</source>
          <target state="translated">这个标签所对应的组件,如果不是组件的标签,则为空。</target>
        </trans-unit>
        <trans-unit id="8e16e6d4e4c40d6ee7cab533803dc66da6417071" translate="yes" xml:space="preserve">
          <source>The Component will receive drops only if it is enabled.</source>
          <target state="translated">只有在启用该组件时,该组件才会收到滴水。</target>
        </trans-unit>
        <trans-unit id="e75fddc976a61c1460b567593850ec1eade9d839" translate="yes" xml:space="preserve">
          <source>The ComponentOrientation class encapsulates the language-sensitive orientation that is to be used to order the elements of a component or of text.</source>
          <target state="translated">ComponentOrientation类封装了语言敏感的方向,该方向用于为组件或文本的元素排序。</target>
        </trans-unit>
        <trans-unit id="0c349a7e3983834131e43d6005575c88312a4af1" translate="yes" xml:space="preserve">
          <source>The ComponentOrientation class encapsulates the language-sensitive orientation that is to be used to order the elements of a component or of text. It is used to reflect the differences in this ordering between Western alphabets, Middle Eastern (such as Hebrew), and Far Eastern (such as Japanese).</source>
          <target state="translated">ComponentOrientation类封装了语言敏感的方向,该方向用于为组件或文本的元素排序。它用于反映西方字母、中东(如希伯来语)和远东(如日语)之间的排序差异。</target>
        </trans-unit>
        <trans-unit id="9aa38dfbce4b5e4d29c524de8b044dfa3c6e2aa9" translate="yes" xml:space="preserve">
          <source>The Connection representing the bi-directional communication channel to the target VM.</source>
          <target state="translated">代表到目标虚拟机的双向通信通道的连接。</target>
        </trans-unit>
        <trans-unit id="5789b4c7dbeca56610041c215040cd828abe15bd" translate="yes" xml:space="preserve">
          <source>The ConnectionBuilder instance that was created</source>
          <target state="translated">创建的ConnectionBuilder实例</target>
        </trans-unit>
        <trans-unit id="88c73e6550e83b79c38c378eb869baa98b113ae7" translate="yes" xml:space="preserve">
          <source>The ContentHandler that is to be transformation output.</source>
          <target state="translated">要转换输出的ContentHandler。</target>
        </trans-unit>
        <trans-unit id="17423c94f8f2ce034afcc39cef2cb4df86197b19" translate="yes" xml:space="preserve">
          <source>The Control key extended modifier constant.</source>
          <target state="translated">控制键扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="d1ab2b838d9028c98dee874736d7f5d9ec2c600c" translate="yes" xml:space="preserve">
          <source>The Control key modifier constant.</source>
          <target state="translated">控制键修改器常数。</target>
        </trans-unit>
        <trans-unit id="fdf0e01cafa9c24fd0c1cae4915a688195d8ef89" translate="yes" xml:space="preserve">
          <source>The Counter value.</source>
          <target state="translated">Counter值。</target>
        </trans-unit>
        <trans-unit id="69e37ac36977091dd5dd589e3937201a303cc9c9" translate="yes" xml:space="preserve">
          <source>The DGC abstraction is used for the server side of the distributed garbage collection algorithm.</source>
          <target state="translated">DGC抽象用于分布式垃圾收集算法的服务器端。</target>
        </trans-unit>
        <trans-unit id="bed07d1e948423e4a8940850acf00fea1b04ba74" translate="yes" xml:space="preserve">
          <source>The DGC abstraction is used for the server side of the distributed garbage collection algorithm. This interface contains the two methods: dirty and clean. A dirty call is made when a remote reference is unmarshaled in a client (the client is indicated by its VMID). A corresponding clean call is made when no more references to the remote reference exist in the client. A failed dirty call must schedule a strong clean call so that the call's sequence number can be retained in order to detect future calls received out of order by the distributed garbage collector. A reference to a remote object is leased for a period of time by the client holding the reference. The lease period starts when the dirty call is received. It is the client's responsibility to renew the leases, by making additional dirty calls, on the remote references it holds before such leases expire. If the client does not renew the lease before it expires, the distributed garbage collector assumes that the remote object is no longer referenced by that client.</source>
          <target state="translated">DGC抽象用于分布式垃圾收集算法的服务器端。这个接口包含两个方法:dirty和clean。当一个远程引用在客户端中未被marshaled时,就会进行dirty调用(客户端由其VMID表示)。当客户端中不再存在对远程引用的引用时,会进行相应的clean调用。失败的脏调用必须安排一个强清洁调用,这样才能保留调用的序列号,以便检测分布式垃圾收集器将来收到的不按顺序的调用。对远程对象的引用被持有该引用的客户端租用一段时间。租赁期从收到脏调用时开始。客户端有责任在租约到期之前,通过对其持有的远程引用进行额外的脏调用来更新租约。如果客户端在租约到期前没有续租,分布式垃圾收集器就会认为该客户端不再引用远程对象。</target>
        </trans-unit>
        <trans-unit id="7d83f00558a7ea5fd54e20050b4b87aeb295129d" translate="yes" xml:space="preserve">
          <source>The DOM Core does not support editing &lt;code&gt;Notation&lt;/code&gt; nodes; they are therefore readonly.</source>
          <target state="translated">DOM Core不支持编辑 &lt;code&gt;Notation&lt;/code&gt; 节点。因此，它们是只读的。</target>
        </trans-unit>
        <trans-unit id="43530ca2de642f60fb45cbf08c7d48675f2f6e1a" translate="yes" xml:space="preserve">
          <source>The DOM Core represents all attribute values as simple strings, even if the DTD or schema associated with the document declares them of some specific type such as tokenized.</source>
          <target state="translated">DOM核心将所有属性值表示为简单的字符串,即使与文档相关联的DTD或模式将它们声明为某种特定类型,如tokenized。</target>
        </trans-unit>
        <trans-unit id="1199d22f6ddd51766a7301391a2be8379e37ab04" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 does not support editing entities, therefore &lt;code&gt;entities&lt;/code&gt; cannot be altered in any way.</source>
          <target state="translated">DOM级别2不支持编辑实体，因此不能以任何方式更改 &lt;code&gt;entities&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8bb5a095cdbe93e8badd4f90d462b85913dc20b" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 does not support editing notations, therefore &lt;code&gt;notations&lt;/code&gt; cannot be altered in any way.</source>
          <target state="translated">DOM级别2不支持编辑符号，因此不能以任何方式更改 &lt;code&gt;notations&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38aa50df9727b894588dbbc35c05e27ae364fb85" translate="yes" xml:space="preserve">
          <source>The DOM does not provide any filters. &lt;code&gt;NodeFilter&lt;/code&gt; is just an interface that users can implement to provide their own filters.</source>
          <target state="translated">DOM不提供任何过滤器。 &lt;code&gt;NodeFilter&lt;/code&gt; 只是用户可以实现以提供自己的过滤器的接口。</target>
        </trans-unit>
        <trans-unit id="df7387b1fd60bcbca923e30e23e97edc8aba858f" translate="yes" xml:space="preserve">
          <source>The DOM implementation is expected to use the attribute &lt;code&gt;Attr.isId&lt;/code&gt; to determine if an attribute is of type ID.</source>
          <target state="translated">期望DOM实现使用属性 &lt;code&gt;Attr.isId&lt;/code&gt; 来确定属性是否为ID类型。</target>
        </trans-unit>
        <trans-unit id="261049d3d4a4937744f0dafd0f1e3545c9ba8678" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ANY</source>
          <target state="translated">DTD常量对应于ANY。</target>
        </trans-unit>
        <trans-unit id="8c0b4e5d9b4605e3158ab4842fcd5983e5fb8dd8" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to CDATA</source>
          <target state="translated">DTD常量对应于CDATA。</target>
        </trans-unit>
        <trans-unit id="28996f14fa52b071fff9da5038251a1e16777136" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to CONREF</source>
          <target state="translated">DTD常数对应CONREF。</target>
        </trans-unit>
        <trans-unit id="f70e3a438499a724f3e9b5b8faacae04267c9342" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to CURRENT</source>
          <target state="translated">DTD 常量对应于 CURRENT</target>
        </trans-unit>
        <trans-unit id="7462581804069a243f9c87bece58e662cb9bbd5a" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to DEFAULT</source>
          <target state="translated">DTD常量对应于DEFAULT。</target>
        </trans-unit>
        <trans-unit id="c5d9608e6bca1b6ed6581eea2cd2e05102db06db" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to EMPTY</source>
          <target state="translated">DTD常量对应于EMPTY。</target>
        </trans-unit>
        <trans-unit id="ba76c731eea210411652ded92b544523f559f8cf" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ENDTAG</source>
          <target state="translated">DTD常数对应于ENDTAG。</target>
        </trans-unit>
        <trans-unit id="b037b57b7b4055d8226d80e6b35f4dd61693ff9f" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ENTITIES</source>
          <target state="translated">DTD常量对应于ENTITIES。</target>
        </trans-unit>
        <trans-unit id="8c124dba0aabae007ca78f786c43238803deb8de" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ENTITY</source>
          <target state="translated">DTD常量对应于实体</target>
        </trans-unit>
        <trans-unit id="92bfbbfc06b21dd3f552573a10a0382a8a8b166c" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to FIXED</source>
          <target state="translated">DTD常量对应于FIXED。</target>
        </trans-unit>
        <trans-unit id="d0730aee51ad3d5e3c5d358c5486abb58f57b053" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to GENERAL</source>
          <target state="translated">DTD常量对应于GENERAL</target>
        </trans-unit>
        <trans-unit id="d512f886dc03b5f4056a96d2ee1b6e8d93d6234f" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ID</source>
          <target state="translated">DTD常量对应于ID</target>
        </trans-unit>
        <trans-unit id="c82b046bea18e9a490fb2a44c0258368ed834626" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to IDREF</source>
          <target state="translated">DTD常量对应于IDREF。</target>
        </trans-unit>
        <trans-unit id="6385c232cbf5970b321152ba72e8ec4b8bf03880" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to IDREFS</source>
          <target state="translated">DTD常量对应于IDREFS。</target>
        </trans-unit>
        <trans-unit id="d27662c44dc624358badebfa3780410f2185d572" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to IMPLIED</source>
          <target state="translated">DTD常量对应于IMPLIED。</target>
        </trans-unit>
        <trans-unit id="0bb5d1554124f83a103f88151731450f51e29063" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to MD</source>
          <target state="translated">DTD常数对应MD</target>
        </trans-unit>
        <trans-unit id="9e2a110f1661c64c646c0d75fca1fd31b10c0d7b" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to MODEL</source>
          <target state="translated">DTD常数对应的是MODEL</target>
        </trans-unit>
        <trans-unit id="217e0e2fe34e949d8d212ae8100c329e2798959d" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to MS</source>
          <target state="translated">DTD常数对应于MS</target>
        </trans-unit>
        <trans-unit id="210401b9f4da9fb6620b3dfe9a679b8ba982571f" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NAME</source>
          <target state="translated">DTD常量对应于NAME</target>
        </trans-unit>
        <trans-unit id="d059f6bc57570668211b615f9ec763ce6c011d33" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NAMES</source>
          <target state="translated">DTD常量对应于NAMES。</target>
        </trans-unit>
        <trans-unit id="08d23b2ba3d9d4c0170e8dceb590345eef62e898" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NMTOKEN</source>
          <target state="translated">DTD常数对应的是NMTOKEN。</target>
        </trans-unit>
        <trans-unit id="43e5d6fd6f35ae58bb647fdbe002079d0ef4e79c" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NMTOKENS</source>
          <target state="translated">DTD常量对应于NMTOKENS。</target>
        </trans-unit>
        <trans-unit id="4d3d6809165f3ec86156d0455227d9f935592dc6" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NOTATION</source>
          <target state="translated">DTD常量对应于NOTATION。</target>
        </trans-unit>
        <trans-unit id="c82aa0c7d66e7bfc1ad232cd78fa3ee3b3837ca2" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUMBER</source>
          <target state="translated">DTD常数对应的是NUMBER。</target>
        </trans-unit>
        <trans-unit id="f6dcc9ece8551b878b9dbb942a5c4193aafd677b" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUMBERS</source>
          <target state="translated">DTD常量对应于NUMBERS。</target>
        </trans-unit>
        <trans-unit id="0f4c355ec8195dd5f3a4b693d27573962d42907a" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUTOKEN</source>
          <target state="translated">DTD常量对应于NUTOKEN。</target>
        </trans-unit>
        <trans-unit id="464cfae6e349c057b8352dc2ee53bd2e0ce2c4d2" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUTOKENS</source>
          <target state="translated">DTD常数对应于NUTOKENS。</target>
        </trans-unit>
        <trans-unit id="f530150f84f7ecb1f890a8d98900f43e6e96c04a" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to PARAMETER</source>
          <target state="translated">DTD常量对应于PARAMETER。</target>
        </trans-unit>
        <trans-unit id="2b88e73f94ceff69a11fb44af74e03c994ab76c6" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to PI</source>
          <target state="translated">DTD常数对应PI</target>
        </trans-unit>
        <trans-unit id="a793a8ddc64beceb41e4cb80ca28fff3889db1b7" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to PUBLIC</source>
          <target state="translated">DTD常量对应于PUBLIC</target>
        </trans-unit>
        <trans-unit id="4f40a4668a58a1e30057b305854e48fe8a85cb6e" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to RCDATA</source>
          <target state="translated">DTD常量对应于RCDATA。</target>
        </trans-unit>
        <trans-unit id="594edcbb019633ce1e15d7afb490d0bfd587095c" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to REQUIRED</source>
          <target state="translated">DTD常量对应于REQUIRED。</target>
        </trans-unit>
        <trans-unit id="3941302d7f73508bc2f880765e67c45b860abdd3" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to SDATA</source>
          <target state="translated">DTD常量对应于SDATA。</target>
        </trans-unit>
        <trans-unit id="7659fc2638f54b5b97b669423f51591f41e6dd65" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to STARTTAG</source>
          <target state="translated">DTD常量对应于STARTTAG。</target>
        </trans-unit>
        <trans-unit id="2b30fe032c549b0fe7db4de6e7c9c64ffab5c023" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to SYSTEM</source>
          <target state="translated">DTD常数对应于SYSTEM</target>
        </trans-unit>
        <trans-unit id="2ced5dc3156a8a4a80da644c296c6141e4689e3c" translate="yes" xml:space="preserve">
          <source>The DTD specification is provided as Appendix A to the Java Logging APIs specification.</source>
          <target state="translated">DTD规范作为Java日志API规范的附录A提供。</target>
        </trans-unit>
        <trans-unit id="a7f4a801e7fcf309a447907757a88537413eb4aa" translate="yes" xml:space="preserve">
          <source>The DataBuffer that stores the image data.</source>
          <target state="translated">存储图像数据的DataBuffer。</target>
        </trans-unit>
        <trans-unit id="9b8dc3e1ba53caad2f4dafd2ec2d61e42595250b" translate="yes" xml:space="preserve">
          <source>The Delete key.</source>
          <target state="translated">删除键。</target>
        </trans-unit>
        <trans-unit id="c016969447ee027a7d4e0c0671983d0d54d60bd4" translate="yes" xml:space="preserve">
          <source>The Descriptor fields contributed in this way by different annotations on the same program element must be consistent. That is, two different annotations, or two members of the same annotation, must not define a different value for the same Descriptor field. Fields from annotations on a getter method must also be consistent with fields from annotations on the corresponding setter method.</source>
          <target state="translated">同一程序元素上的不同注解以这种方式贡献的 Descriptor 字段必须一致。也就是说,两个不同的注解,或者同一个注解的两个成员,不能为同一个Descriptor字段定义不同的值。来自getter方法上的注解的字段也必须与来自对应setter方法上的注解的字段一致。</target>
        </trans-unit>
        <trans-unit id="7bb6cc0ddd226d41211cd3043455d41114d7cede" translate="yes" xml:space="preserve">
          <source>The Descriptor resulting from these annotations will be merged with any Descriptor fields provided by the implementation, such as the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;
 immutableInfo&lt;/code&gt;&lt;/a&gt; field for an MBean. The fields from the annotations must be consistent with these fields provided by the implementation.</source>
          <target state="translated">这些注释产生的Descriptor将与实现提供的任何Descriptor字段合并，例如MBean的&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt; immutableInfo&lt;/code&gt; &lt;/a&gt;字段。批注中的字段必须与实现提供的这些字段一致。</target>
        </trans-unit>
        <trans-unit id="6bee60701b79c62232ecee0abd5ca5f3df40a69c" translate="yes" xml:space="preserve">
          <source>The Descriptor resulting from these annotations will be merged with any Descriptor fields provided by the implementation, such as the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;immutableInfo&lt;/code&gt;&lt;/a&gt; field for an MBean. The fields from the annotations must be consistent with these fields provided by the implementation.</source>
          <target state="translated">这些注释产生的Descriptor将与实现提供的任何Descriptor字段合并，例如MBean 的&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt;immutableInfo&lt;/code&gt; &lt;/a&gt;字段。批注中的字段必须与实现提供的这些字段一致。</target>
        </trans-unit>
        <trans-unit id="2264cfb97c49339ec2eb79ff8f9c5b3541970253" translate="yes" xml:space="preserve">
          <source>The Devanagari range with the Devanagari digits.</source>
          <target state="translated">德瓦纳加里范围与德瓦纳加里数字。</target>
        </trans-unit>
        <trans-unit id="c9d5aea86dc06f534995783c5eed783935bbadb9" translate="yes" xml:space="preserve">
          <source>The Directory Context</source>
          <target state="translated">目录上下文</target>
        </trans-unit>
        <trans-unit id="ccd7ed731b050c5d2f46c1cbaf69cfad44e1f050" translate="yes" xml:space="preserve">
          <source>The Doclet API provides an environment which, in conjunction with the Language Model API and Compiler Tree API, allows clients to inspect the source-level structures of programs and libraries, including API comments embedded in the source.</source>
          <target state="translated">Doclet API提供了一个环境,结合语言模型API和编译器树API,允许客户检查程序和库的源码级结构,包括嵌入源码中的API注释。</target>
        </trans-unit>
        <trans-unit id="3e6ee01f1cfdc49d30867413241b4a4694ea090f" translate="yes" xml:space="preserve">
          <source>The Document Type Declaration (see &lt;code&gt;DocumentType&lt;/code&gt;) associated with this document.</source>
          <target state="translated">与此文档关联的文档类型声明（请参见 &lt;code&gt;DocumentType&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="254ccb37fffeb4d7034d09aace0490d444a1fd8d" translate="yes" xml:space="preserve">
          <source>The Document Type Declaration (see &lt;code&gt;DocumentType&lt;/code&gt;) associated with this document. For XML documents without a document type declaration this returns &lt;code&gt;null&lt;/code&gt;. For HTML documents, a &lt;code&gt;DocumentType&lt;/code&gt; object may be returned, independently of the presence or absence of document type declaration in the HTML document.</source>
          <target state="translated">与此文档关联的文档类型声明（请参见 &lt;code&gt;DocumentType&lt;/code&gt; ）。对于没有文档类型声明的XML文档，此方法返回 &lt;code&gt;null&lt;/code&gt; 。对于HTML文档，可以独立于HTML文档中是否存在文档类型声明而返回 &lt;code&gt;DocumentType&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="299aad74666cf0fc920de73b7ea77abf7fe4b895" translate="yes" xml:space="preserve">
          <source>The Document interface is responsible for translating a linear view of the characters into Element operations. It is up to each Document implementation to define what the Element structure is.</source>
          <target state="translated">Document接口负责将字符的线性视图转化为Element操作。由每个Document实现来定义Element结构是什么。</target>
        </trans-unit>
        <trans-unit id="60d54d249addf311d02c8ca2ce1ec1e6177cdf46" translate="yes" xml:space="preserve">
          <source>The DocumentEvent notification is based upon the JavaBeans event model. There is no guarantee about the order of delivery to listeners, and all listeners must be notified prior to making further mutations to the Document. &lt;em&gt;This means implementations of the DocumentListener may not mutate the source of the event (i.e. the associated Document)&lt;/em&gt;.</source>
          <target state="translated">DocumentEvent通知基于JavaBeans事件模型。无法保证传递给侦听器的顺序，并且在对文档进行进一步更改之前必须通知所有侦听器。&lt;em&gt;这意味着DocumentListener的实现可能不会使事件的源（即关联的Document）发生变异&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="306e0349e4730fe12ea20a18564d5aded0a959d4" translate="yes" xml:space="preserve">
          <source>The DocumentTypeDefinition is written to the output</source>
          <target state="translated">DocumentTypeDefinition被写入到输出的</target>
        </trans-unit>
        <trans-unit id="d62abb5465a5124d177e3dae735859f7772db3a7" translate="yes" xml:space="preserve">
          <source>The Down Arrow key, a non-ASCII action key.</source>
          <target state="translated">下箭头键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="535a8c59d3fc6ca72816c57f9fe3cb8a0847b806" translate="yes" xml:space="preserve">
          <source>The DriverManager will try to load as many drivers as it can find and then for any given connection request, it will ask each driver in turn to try to connect to the target URL.</source>
          <target state="translated">DriverManager将尝试加载尽可能多的驱动程序,然后对于任何给定的连接请求,它将依次要求每个驱动程序尝试连接到目标URL。</target>
        </trans-unit>
        <trans-unit id="d5be8afdbc6e1810cc1d91e507cb42ef9c4a1bf6" translate="yes" xml:space="preserve">
          <source>The Ed25519 parameters</source>
          <target state="translated">Ed25519参数</target>
        </trans-unit>
        <trans-unit id="6b245864c9b4d42dd27fe5d8994f419c7c656fd7" translate="yes" xml:space="preserve">
          <source>The Ed448 parameters</source>
          <target state="translated">Ed448参数</target>
        </trans-unit>
        <trans-unit id="9908e26b6e54260393c71d3b6feaa03992ee4047" translate="yes" xml:space="preserve">
          <source>The End key, a non-ASCII action key.</source>
          <target state="translated">结束键,是一个非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="82569fedc0af6f3aed7f65a6a3fe39ea20b67c7c" translate="yes" xml:space="preserve">
          <source>The Enter key.</source>
          <target state="translated">回车键。</target>
        </trans-unit>
        <trans-unit id="9467ddc0b1822e3f422eef8fbcd692138357cb1f" translate="yes" xml:space="preserve">
          <source>The ErrorManager's &quot;error&quot; method will be invoked if any errors occur while using this Handler.</source>
          <target state="translated">如果在使用该处理程序时发生任何错误,ErrorManager的 &quot;error &quot;方法将被调用。</target>
        </trans-unit>
        <trans-unit id="337111c58074fe3c7a3c0c5188b4a34f626e799a" translate="yes" xml:space="preserve">
          <source>The Escape key.</source>
          <target state="translated">逃生键。</target>
        </trans-unit>
        <trans-unit id="855ec55237c438b93c6ece3595fe96fed3e0fe47" translate="yes" xml:space="preserve">
          <source>The Ethiopic range with the Ethiopic digits.</source>
          <target state="translated">埃塞俄比亚数字的埃塞俄比亚范围。</target>
        </trans-unit>
        <trans-unit id="c4abdb2c97b7ad28fbff4b44ab36d6a6f3821d59" translate="yes" xml:space="preserve">
          <source>The Ethiopic range with the Ethiopic digits. Ethiopic does not have a decimal digit 0 so Latin (European) 0 is used.</source>
          <target state="translated">埃塞俄比亚语的范围与埃塞俄比亚语的数字。埃塞俄比亚语没有十进制数字0,所以使用拉丁语(欧洲)0。</target>
        </trans-unit>
        <trans-unit id="f846f27691c1830b0c4862884909ba741da0054f" translate="yes" xml:space="preserve">
          <source>The F1 function key, a non-ASCII action key.</source>
          <target state="translated">F1功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="e0c99ce79d7c1cf5f028270fbbd639ed83b660bf" translate="yes" xml:space="preserve">
          <source>The F10 function key, a non-ASCII action key.</source>
          <target state="translated">F10功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="34b95e3d41adccd87cc4a5447e94b0969fdf7692" translate="yes" xml:space="preserve">
          <source>The F11 function key, a non-ASCII action key.</source>
          <target state="translated">F11功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="4712072dec079034a0d1d72b4ea1e0bd718589b7" translate="yes" xml:space="preserve">
          <source>The F12 function key, a non-ASCII action key.</source>
          <target state="translated">F12功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="8f3e6133006f60f80467d379477797cb8466f921" translate="yes" xml:space="preserve">
          <source>The F2 function key, a non-ASCII action key.</source>
          <target state="translated">F2功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="8cba0d95d956dcad6261f3c860b0b98ddb8261bd" translate="yes" xml:space="preserve">
          <source>The F3 function key, a non-ASCII action key.</source>
          <target state="translated">F3功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="688fc8033a58b76724aa1e69114742ef26b5aea2" translate="yes" xml:space="preserve">
          <source>The F4 function key, a non-ASCII action key.</source>
          <target state="translated">F4功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="424aca125a04f4c0ca7b024f4f463806f8d801e0" translate="yes" xml:space="preserve">
          <source>The F5 function key, a non-ASCII action key.</source>
          <target state="translated">F5功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="75137fe57f42039f646febcef40c10236bd497b2" translate="yes" xml:space="preserve">
          <source>The F6 function key, a non-ASCII action key.</source>
          <target state="translated">F6功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="32df2a32958042664970351ad3ceae10e39b1214" translate="yes" xml:space="preserve">
          <source>The F7 function key, a non-ASCII action key.</source>
          <target state="translated">F7功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="04f2191aa3813883fac7f747c758351877d2dbd7" translate="yes" xml:space="preserve">
          <source>The F8 function key, a non-ASCII action key.</source>
          <target state="translated">F8功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="1822ce331e4a2923ad9c29fc3b0f664d404ea2c6" translate="yes" xml:space="preserve">
          <source>The F9 function key, a non-ASCII action key.</source>
          <target state="translated">F9功能键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="4d4c7427ed03e2196382cf762ac3a454fd9aad30" translate="yes" xml:space="preserve">
          <source>The FeatureDescriptor class is the common baseclass for PropertyDescriptor, EventSetDescriptor, and MethodDescriptor, etc.</source>
          <target state="translated">FeatureDescriptor类是PropertyDescriptor、EventSetDescriptor和MethodDescriptor等的通用基类。</target>
        </trans-unit>
        <trans-unit id="5eae005357491fca42dd8644ffbb9527bcbf6e2a" translate="yes" xml:space="preserve">
          <source>The File Upload, Image Read, and Socket Read events happen concurrently (in the same thread), but the events are in different categories so they do not overlap in the visualization.</source>
          <target state="translated">文件上传、图像读取和Socket读取事件是同时发生的(在同一个线程中),但这些事件分属不同的类别,所以在可视化中不会重叠。</target>
        </trans-unit>
        <trans-unit id="6e02d9b92b748aa46a1fe40c56191a70c2db37b1" translate="yes" xml:space="preserve">
          <source>The ForkJoinTask class is not usually directly subclassed. Instead, you subclass one of the abstract classes that support a particular style of fork/join processing, typically &lt;a href=&quot;recursiveaction&quot;&gt;&lt;code&gt;RecursiveAction&lt;/code&gt;&lt;/a&gt; for most computations that do not return results, &lt;a href=&quot;recursivetask&quot;&gt;&lt;code&gt;RecursiveTask&lt;/code&gt;&lt;/a&gt; for those that do, and &lt;a href=&quot;countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt; for those in which completed actions trigger other actions. Normally, a concrete ForkJoinTask subclass declares fields comprising its parameters, established in a constructor, and then defines a &lt;code&gt;compute&lt;/code&gt; method that somehow uses the control methods supplied by this base class.</source>
          <target state="translated">ForkJoinTask类通常不直接子类化。相反，你的子类，支持叉的特定风格的抽象类的一个/连接处理，通常&lt;a href=&quot;recursiveaction&quot;&gt; &lt;code&gt;RecursiveAction&lt;/code&gt; &lt;/a&gt;对于不返回结果大多数计算，&lt;a href=&quot;recursivetask&quot;&gt; &lt;code&gt;RecursiveTask&lt;/code&gt; &lt;/a&gt;对于那些做的，&lt;a href=&quot;countedcompleter&quot;&gt; &lt;code&gt;CountedCompleter&lt;/code&gt; &lt;/a&gt;对于那些在已完成的操作触发其它动作。通常，具体的ForkJoinTask子类声明在构造函数中建立的包含其参数的字段，然后定义一个以某种方式使用此基类提供的控制方法的 &lt;code&gt;compute&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b623035f5596637c9505afc931878e7c86c5b5b2" translate="yes" xml:space="preserve">
          <source>The GCM specification states that &lt;code&gt;tLen&lt;/code&gt; may only have the values {128, 120, 112, 104, 96}, or {64, 32} for certain applications. Other values can be specified for this class, but not all CSP implementations will support them.</source>
          <target state="translated">GCM规范指出，对于某些应用， &lt;code&gt;tLen&lt;/code&gt; 可能仅具有值{ 128、120、112、104、96 }或{64、32}。可以为此类指定其他值，但并非所有CSP实现都将支持它们。</target>
        </trans-unit>
        <trans-unit id="21c0818ef96710144df08a551d7b266882d023aa" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in guarantees lossless writing for images which meet the following requirements:</source>
          <target state="translated">GIF图像编写插件可以保证满足以下要求的图像的无损编写。</target>
        </trans-unit>
        <trans-unit id="69631d7c8bd6040a091b247bf1496d5ed878fb6f" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format  javax_imageio_gif_stream_1.0  or the standard metadata format  javax_imageio_1.0, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format  javax_imageio_gif_image_1.0  or the standard metadata format javax_imageio_1.0. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables  here .</source>
          <target state="translated">GIF图像写作者插件支持将提供给写作者的元数据设置为原生GIF流元数据格式javax_imageio_gif_stream_1.0或标准元数据格式javax_imageio_1.0,并将提供给写作者的元数据设置为原生GIF图像元数据格式javax_imageio_gif_image_1.0或标准元数据格式javax_imageio_1.0。标准元数据格式与GIF原生流和图像元数据格式的映射在这里的表格中给出。</target>
        </trans-unit>
        <trans-unit id="5a39c518ab297860c2f8783913dcca7c6af3666c" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; javax_imageio_gif_stream_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt; javax_imageio_gif_image_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">GIF图像编写器插件支持以本机GIF流元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;javax_imageio_gif_stream_1.0&lt;/a&gt;或标准元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;设置从提供给编写器的元数据的输出流元数据，并设置来自提供给编写器的元数据的输出图像元数据。本机GIF图像元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt;javax_imageio_gif_image_1.0&lt;/a&gt;或标准元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;。标准元数据格式的至GIF本地流和图像元数据格式的映射的表中给出&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;这里&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5740adefc67787e6cc87a34eb2ef2353c96debd5" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; javax_imageio_gif_stream_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt; javax_imageio_gif_image_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">GIF图像编写器插件支持以本机GIF流元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;javax_imageio_gif_stream_1.0&lt;/a&gt;或标准元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;设置从提供给编写器的元数据的输出流元数据，并设置来自提供给编写器的元数据的输出图像元数据。本机GIF图像元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt;javax_imageio_gif_image_1.0&lt;/a&gt;或标准元数据格式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;。标准元数据格式的至GIF本地流和图像元数据格式的映射的表中给出&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;这里&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fe47dfc42c1004ae9afdedd5c749c38a37ee470" translate="yes" xml:space="preserve">
          <source>The GIF writer plug-in supports the creation of animated GIF images through the standard sequence writing methods defined in the &lt;code&gt;ImageWriter&lt;/code&gt; class.</source>
          <target state="translated">GIF编写器插件支持通过 &lt;code&gt;ImageWriter&lt;/code&gt; 类中定义的标准序列编写方法来创建动画GIF图像。</target>
        </trans-unit>
        <trans-unit id="36041d90b5051a2148ab5cf02c46a6972de006b3" translate="yes" xml:space="preserve">
          <source>The GSS-API authentication tokens contain a definitive start and end. This method will attempt to read one of these tokens per invocation, and may block on the stream if only part of the token is available. In all other respects this method is equivalent to the byte array based &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">GSS-API身份验证令牌包含确定的开始和结束。此方法将尝试每次调用读取这些令牌之一，并且如果仅令牌的一部分可用，则可能在流上阻塞。在所有其他方面，此方法等效于基于字节数组的&lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56846475ff5ecbb5782e2832cfad2417350c183f" translate="yes" xml:space="preserve">
          <source>The GSS-API authentication tokens contain a definitive start and end. This method will attempt to read one of these tokens per invocation, and may block on the stream if only part of the token is available. In all other respects this method is equivalent to the byte array based &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">GSS-API身份验证令牌包含确定的开始和结束。此方法将尝试每次调用读取这些令牌之一，并且如果仅令牌的一部分可用，则可能在流上阻塞。在所有其他方面，此方法等效于基于字节数组的&lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eeb819a0af8bbcd4715be7fc89a01023347f013f" translate="yes" xml:space="preserve">
          <source>The GSS-API does not perform any communication with the peer. It merely produces tokens that the application must somehow transport to the other end.</source>
          <target state="translated">GSS-API不与对等体进行任何通信。它只是产生应用必须以某种方式传送到另一端的令牌。</target>
        </trans-unit>
        <trans-unit id="016e2418772c7bef7110806243864d9ad960cfde" translate="yes" xml:space="preserve">
          <source>The GSS-API is defined in a language independent way in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC 2743&lt;/a&gt;. The Java language bindings are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC 2853&lt;/a&gt;</source>
          <target state="translated">GSS-API在&lt;a href=&quot;http://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC 2743&lt;/a&gt;中以语言无关的方式定义。Java语言绑定在&lt;a href=&quot;http://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC 2853&lt;/a&gt;中定义</target>
        </trans-unit>
        <trans-unit id="ec3c90701fefb3ca12b6d1850be7012d813ae214" translate="yes" xml:space="preserve">
          <source>The GSS-API is defined in a language independent way in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC 2743&lt;/a&gt;. The Java language bindings are defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC 2853&lt;/a&gt;</source>
          <target state="translated">GSS-API在&lt;a href=&quot;https://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC 2743&lt;/a&gt;中以语言无关的方式定义。Java语言绑定在&lt;a href=&quot;https://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC 2853&lt;/a&gt;中定义</target>
        </trans-unit>
        <trans-unit id="2bda69e49cc0677094f88eb85a8d0e079496d764" translate="yes" xml:space="preserve">
          <source>The GSS-API itself does not dictate how an underlying mechanism obtains the credentials that are needed for authentication. It is assumed that prior to calling the GSS-API, these credentials are obtained and stored in a location that the mechanism provider is aware of. However, the default model in the Java platform will be that mechanism providers must obtain credentials only from the private or public credential sets associated with the &lt;a href=&quot;../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; in the current access control context. The Kerberos v5 mechanism will search for the required INITIATE and ACCEPT credentials (&lt;a href=&quot;../../../javax/security/auth/kerberos/kerberosticket&quot;&gt;&lt;code&gt;KerberosTicket&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../javax/security/auth/kerberos/kerberoskey&quot;&gt;&lt;code&gt;KerberosKey&lt;/code&gt;&lt;/a&gt;) in the private credential set where as some other mechanism might look in the public set or in both. If the desired credential is not present in the appropriate sets of the current Subject, the GSS-API call must fail.</source>
          <target state="translated">GSS-API本身并不指示底层机制如何获取身份验证所需的凭据。假定在调用GSS-API之前，已获取这些凭证并将其存储在机制提供者知道的位置。但是，Java平台中的默认模型是机制提供者必须仅从与当前访问控制上下文中与&lt;a href=&quot;../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;相关联的私有或公共凭据集中获取凭据。Kerberos v5机制将搜索所需的INITIATE和ACCEPT凭证（&lt;a href=&quot;../../../javax/security/auth/kerberos/kerberosticket&quot;&gt; &lt;code&gt;KerberosTicket&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../javax/security/auth/kerberos/kerberoskey&quot;&gt; &lt;code&gt;KerberosKey&lt;/code&gt; &lt;/a&gt;）在私人证书集中，就像在公共证书集中或在这两者中都可以看到其他机制一样。如果当前主题的适当集中没有所需的凭据，则GSS-API调用必须失败。</target>
        </trans-unit>
        <trans-unit id="1e36671f93a675a82883cad4ce03c74c37680a15" translate="yes" xml:space="preserve">
          <source>The GSSManager would then first check with B if m1 was needed. In case B did not provide support for m1, the GSSManager would continue on to check with A. If any mechanism m2 is needed where m2 is different from m1 then the GSSManager would skip B and check with A directly.</source>
          <target state="translated">然后,GSSManager将首先与B检查是否需要m1,如果B没有提供对m1的支持,GSSManager将继续与A检查。如果B没有提供对m1的支持,GSSManager将继续与A进行核对。</target>
        </trans-unit>
        <trans-unit id="78d03db12c1f011d0634db41f691571762f77a53" translate="yes" xml:space="preserve">
          <source>The GSSName name class contains public static Oid objects representing the standard name types defined in GSS-API.</source>
          <target state="translated">GSSName名称类包含公共静态Oid对象,代表GSS-API中定义的标准名称类型。</target>
        </trans-unit>
        <trans-unit id="7c0eb54612e1b91b3d550046715cc18734cac067" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated.</source>
          <target state="translated">生成注解用于标记已经生成的源代码。</target>
        </trans-unit>
        <trans-unit id="f56c3c8627f80ee0eab3cf06dab68a8edf476a84" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated. It can also be used to differentiate user written code from generated code in a single file.</source>
          <target state="translated">生成注解用于标记已经生成的源代码,也可以用来区分单个文件中用户编写的代码和生成的代码。它也可以用来区分单个文件中用户编写的代码和生成的代码。</target>
        </trans-unit>
        <trans-unit id="e14d8067e3c65f5d662592905874e96a639ba661" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated. It can also be used to differentiate user written code from generated code in a single file. When used, the value element must have the name of the code generator. The recommended convention is to use the fully qualified name of the code generator in the value field .</source>
          <target state="translated">生成注解用于标记已经生成的源代码,也可以用来区分单个文件中用户编写的代码和生成的代码。它也可以用来区分单个文件中用户编写的代码和生成的代码。使用时,值元素必须有代码生成器的名称。推荐的惯例是在值域中使用代码生成器的全称。</target>
        </trans-unit>
        <trans-unit id="7af39d750477e1f9f73af9fe47ad7493425adbba" translate="yes" xml:space="preserve">
          <source>The Grand Unification of the above three.</source>
          <target state="translated">以上三者的大一统。</target>
        </trans-unit>
        <trans-unit id="04a51ed5fc80fe55a7d442756d529463d0e7f962" translate="yes" xml:space="preserve">
          <source>The GraphicAttribute determines the logical and visual bounds of the text; the actual Font values are ignored.</source>
          <target state="translated">图形属性(GraphicAttribute)决定了文本的逻辑和视觉边界,实际的字体值会被忽略。</target>
        </trans-unit>
        <trans-unit id="80dc94d54b402ab87a3bcf626574c928999dab0b" translate="yes" xml:space="preserve">
          <source>The Gujarati range with the Gujarati digits.</source>
          <target state="translated">古吉拉特语范围与古吉拉特语数字。</target>
        </trans-unit>
        <trans-unit id="3204f255d6bf3f20cea1af9b6db821aaebbf6fe0" translate="yes" xml:space="preserve">
          <source>The Gurmukhi range with the Gurmukhi digits.</source>
          <target state="translated">古木希范围与古木希数字。</target>
        </trans-unit>
        <trans-unit id="ceab662b8e5ed03e8ac9d3c0a5ad31c99a49f29f" translate="yes" xml:space="preserve">
          <source>The HTML document body.</source>
          <target state="translated">HTML文档主体。</target>
        </trans-unit>
        <trans-unit id="9656fd250eadbedcc38887eb760be79e35c0770b" translate="yes" xml:space="preserve">
          <source>The HTML document body. This element is always present in the DOM API, even if the tags are not present in the source document. See the BODY element definition in HTML 4.0.</source>
          <target state="translated">HTML文档主体。即使源文档中没有标签,这个元素也会一直存在于DOM API中。参见HTML 4.0中的BODY元素定义。</target>
        </trans-unit>
        <trans-unit id="034f52c179ed2f285aff346a1a725164486ab642" translate="yes" xml:space="preserve">
          <source>The HTTP cookie management in java.net package looks like:</source>
          <target state="translated">java.net包中的HTTP cookie管理是这样的。</target>
        </trans-unit>
        <trans-unit id="7b3a512be37bd12625c3a8628efd22b37676aac1" translate="yes" xml:space="preserve">
          <source>The HTTP method (GET,POST,PUT,etc.).</source>
          <target state="translated">HTTP方法(GET,POST,PUT等)。</target>
        </trans-unit>
        <trans-unit id="45069240481f167a4b1839f87d58530261cd8d54" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;Proxy settings&lt;/a&gt; as well as &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt; various other settings&lt;/a&gt;.</source>
          <target state="translated">HTTP协议处理程序具有一些可以通过&amp;ldquo;系统属性&amp;rdquo;访问的设置。这涵盖了&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;代理服务器设置&lt;/a&gt;以及&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt;其他各种设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f75c91eee430b4e549a8250d151e91afa72d2dad" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;Proxy settings&lt;/a&gt; as well as &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt; various other settings&lt;/a&gt;.</source>
          <target state="translated">HTTP协议处理程序具有一些可以通过&amp;ldquo;系统属性&amp;rdquo;访问的设置。这涵盖了&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;代理服务器设置&lt;/a&gt;以及&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt;其他各种设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d94af71e4f20cb6dbee51f81cf708d34fd43e9a" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers Proxy settings as well as  various other settings.</source>
          <target state="translated">HTTP协议处理程序有一些设置,可以通过系统属性访问。这包括代理设置以及其他各种设置。</target>
        </trans-unit>
        <trans-unit id="5cddb7cac72e4320c7958e414281c0eaaa74294f" translate="yes" xml:space="preserve">
          <source>The HTTP protocol version.</source>
          <target state="translated">HTTP协议版本。</target>
        </trans-unit>
        <trans-unit id="0965d22a7cf7456f138f50ade9b626d2ce1a8ce8" translate="yes" xml:space="preserve">
          <source>The HTTP response message.</source>
          <target state="translated">HTTP响应信息。</target>
        </trans-unit>
        <trans-unit id="342acebe15f32e49ce73e2666488d1f7edf89d4a" translate="yes" xml:space="preserve">
          <source>The Highlighter bound to the associated text component is used to render the selection by default. Selection appearance can be customized by supplying a painter to use for the highlights. By default a painter is used that will render a solid color as specified in the associated text component in the &lt;code&gt;SelectionColor&lt;/code&gt; property. This can easily be changed by reimplementing the &lt;a href=&quot;#getSelectionPainter()&quot;&gt;&lt;code&gt;getSelectionPainter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">默认情况下，绑定到关联的文本组件的荧光笔用于呈现所选内容。可以通过提供供高光使用的画家来定制选择外观。默认情况下，使用的画家将呈现纯色，如 &lt;code&gt;SelectionColor&lt;/code&gt; 属性中关联的文本组件中指定的那样。通过重新实现&lt;a href=&quot;#getSelectionPainter()&quot;&gt; &lt;code&gt;getSelectionPainter&lt;/code&gt; &lt;/a&gt;方法，可以轻松更改此设置。</target>
        </trans-unit>
        <trans-unit id="76c37afd4ebfca43ecc7113a9e735aed8c4a4c59" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar has a different total of days in a year than Gregorian calendar, and the length of each month is based on the period of a complete revolution of the moon around the earth (as between successive new moons). Refer to the &lt;a href=&quot;hijrahchronology&quot;&gt;&lt;code&gt;HijrahChronology&lt;/code&gt;&lt;/a&gt; for details of supported variants.</source>
          <target state="translated">希拉（Hijrah）日历一年中的总天数与格里高利历不同，并且每个月的长度基于月球绕地球完整公转的周期（在连续的新月之间）。有关支持的变体的详细信息，请参考&lt;a href=&quot;hijrahchronology&quot;&gt; &lt;code&gt;HijrahChronology&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cbb0a5265ed2b32362a56646ea33dae11e8ddd1" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar is a lunar calendar supporting Islamic calendars.</source>
          <target state="translated">Hijrah历是支持伊斯兰历法的农历。</target>
        </trans-unit>
        <trans-unit id="5ef062b6d3746a7faa9fd4ff82681d5f88437d55" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar system has one era, 'AH', defined by &lt;a href=&quot;hijrahera&quot;&gt;&lt;code&gt;HijrahEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hijrah日历系统有一个时代，即&lt;a href=&quot;hijrahera&quot;&gt; &lt;code&gt;HijrahEra&lt;/code&gt; &lt;/a&gt;定义的&amp;ldquo; AH&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="e597c41e9fa5f54ee9b2548de5fc25d85b9400b7" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar system has only one era covering the proleptic years greater than zero.</source>
          <target state="translated">Hijrah历法只有一个时代,涵盖大于零的逍遥年。</target>
        </trans-unit>
        <trans-unit id="8c7bf054691c4990879f32b517b7eb5c7c8f7c31" translate="yes" xml:space="preserve">
          <source>The Hijrah property resource is a set of properties that describe the calendar. The syntax is defined by &lt;code&gt;java.util.Properties#load(Reader)&lt;/code&gt;.</source>
          <target state="translated">Hijrah属性资源是描述日历的一组属性。语法由 &lt;code&gt;java.util.Properties#load(Reader)&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="2d5f51089d0f9a89148d7f6f56fbc17a08c3c7dd" translate="yes" xml:space="preserve">
          <source>The HijrahChronology follows the rules of the Hijrah calendar system. The Hijrah calendar has several variants based on differences in when the new moon is determined to have occurred and where the observation is made. In some variants the length of each month is computed algorithmically from the astronomical data for the moon and earth and in others the length of the month is determined by an authorized sighting of the new moon. For the algorithmically based calendars the calendar can project into the future. For sighting based calendars only historical data from past sightings is available.</source>
          <target state="translated">HijrahChronology遵循Hijrah日历系统的规则。Hijrah历法根据确定新月发生的时间和观测地点的不同,有几种变体。在一些变体中,每个月的长度是根据月球和地球的天文数据以算法计算出来的,而在其他变体中,一个月的长度是由经授权的新月观测结果决定的。对于以算法为基础的日历,日历可以预测到未来。对于以观测为基础的日历,只能提供过去观测的历史数据。</target>
        </trans-unit>
        <trans-unit id="e24e34ecc8a9ad3b4e4ea87309f75a1db55428a1" translate="yes" xml:space="preserve">
          <source>The Home key, a non-ASCII action key.</source>
          <target state="translated">主页键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="b30101cf2f801668711691b72956c848b7ff79c7" translate="yes" xml:space="preserve">
          <source>The IANA charset registry does change over time, and so the canonical name and the aliases of a particular charset may also change over time. To ensure compatibility it is recommended that no alias ever be removed from a charset, and that if the canonical name of a charset is changed then its previous canonical name be made into an alias.</source>
          <target state="translated">IANA字符集注册表确实会随着时间的推移而改变,因此特定字符集的规范名称和别名也可能会随着时间的推移而改变。为了确保兼容性,建议永远不要从一个字符集中删除别名,如果一个字符集的规范名称被改变,那么它以前的规范名称就会变成一个别名。</target>
        </trans-unit>
        <trans-unit id="41785330378e3e8d34f692fda2997c106c6be24f" translate="yes" xml:space="preserve">
          <source>The ICC standard uses a device independent color space (DICS) as the mechanism for converting color from one device to another device. In this architecture, colors are converted from the source device's color space to the ICC DICS and then from the ICC DICS to the destination device's color space. The ICC standard defines device profiles which contain transforms which will convert between a device's color space and the ICC DICS. The overall conversion of colors from a source device to colors of a destination device is done by connecting the device-to-DICS transform of the profile for the source device to the DICS-to-device transform of the profile for the destination device. For this reason, the ICC DICS is commonly referred to as the profile connection space (PCS). The color space used in the methods &lt;code&gt;toCIEXYZ&lt;/code&gt; and &lt;code&gt;fromCIEXYZ&lt;/code&gt; is the CIEXYZ PCS defined by the ICC Specification. This is also the color space represented by &lt;code&gt;ColorSpace.CS_CIEXYZ&lt;/code&gt;.</source>
          <target state="translated">ICC标准使用与设备无关的色彩空间（DICS）作为将颜色从一个设备转换为另一设备的机制。在这种体系结构中，颜色从源设备的色彩空间转换为ICC DICS，然后从ICC DICS转换为目标设备的色彩空间。ICC标准定义了设备配置文件，其中包含在设备的色彩空间和ICC DICS之间转换的转换。通过将源设备配置文件的设备到DICS转换连接到目标设备配置文件的DICS到设备转换，可以完成从源设备到目标设备的颜色转换。因此，ICC DICS通常被称为配置文件连接空间（PCS）。用于 &lt;code&gt;toCIEXYZ&lt;/code&gt; 的方法中使用的色彩空间和 &lt;code&gt;fromCIEXYZ&lt;/code&gt; 是由ICC规范中定义的CIEXYZ PCS。这也是 &lt;code&gt;ColorSpace.CS_CIEXYZ&lt;/code&gt; 表示的色彩空间。</target>
        </trans-unit>
        <trans-unit id="4291d010a17ade250e32deaae43f97dfb3a7ba1f" translate="yes" xml:space="preserve">
          <source>The ICC standard uses a device independent color space (DICS) as the mechanism for converting color from one device to another device. In this architecture, colors are converted from the source device's color space to the ICC DICS and then from the ICC DICS to the destination device's color space. The ICC standard defines device profiles which contain transforms which will convert between a device's color space and the ICC DICS. The overall conversion of colors from a source device to colors of a destination device is done by connecting the device-to-DICS transform of the profile for the source device to the DICS-to-device transform of the profile for the destination device. For this reason, the ICC DICS is commonly referred to as the profile connection space (PCS). The color space used in the methods toCIEXYZ and fromCIEXYZ is the CIEXYZ PCS defined by the ICC Specification. This is also the color space represented by ColorSpace.CS_CIEXYZ.</source>
          <target state="translated">ICC标准使用设备独立色彩空间(DICS)作为将色彩从一个设备转换到另一个设备的机制。在这个架构中,颜色从源设备的色彩空间转换到ICC DICS,然后从ICC DICS转换到目标设备的色彩空间。ICC标准定义了设备配置文件,其中包含了设备色彩空间和ICC DICS之间的转换。从源设备的颜色到目的设备的颜色的整体转换是通过连接源设备的配置文件的设备到DICS变换和目的设备的配置文件的DICS到设备变换来完成的。为此,ICC DICS通常被称为配置文件连接空间(PCS)。toCIEXYZ和fromCIEXYZ方法中使用的颜色空间是ICC规范定义的CIEXYZ PCS。这也是ColorSpace.CS_CIEXYZ所代表的色彩空间。</target>
        </trans-unit>
        <trans-unit id="e6b1df547566cde6967819973372499ee99ddb22" translate="yes" xml:space="preserve">
          <source>The ICC_ColorSpace class is an implementation of the abstract ColorSpace class.</source>
          <target state="translated">ICC_ColorSpace类是抽象ColorSpace类的实现。</target>
        </trans-unit>
        <trans-unit id="29a4fdfa37a516d2928ce968cabea4dcd82635e5" translate="yes" xml:space="preserve">
          <source>The ICC_ColorSpace class is an implementation of the abstract ColorSpace class. This representation of device independent and device dependent color spaces is based on the International Color Consortium Specification ICC.1:2001-12, File Format for Color Profiles (see &lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.org&lt;/a&gt;).</source>
          <target state="translated">ICC_ColorSpace类是抽象ColorSpace类的实现。设备独立和设备独立色彩空间的这种表示基于国际色彩协会规范ICC.1：2001-12，色彩配置文件的文件格式（请参阅&lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.org&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="72f3ceadbe13561989c9f7b18cd300f66f00b9cf" translate="yes" xml:space="preserve">
          <source>The ICC_ProfileRGB class is a subclass of the ICC_Profile class that represents profiles which meet the following criteria:</source>
          <target state="translated">ICC_ProfileRGB类是ICC_Profile类的一个子类,它表示符合以下标准的配置文件。</target>
        </trans-unit>
        <trans-unit id="46384c6ea74d47171799bd6ab4946e6155803a9f" translate="yes" xml:space="preserve">
          <source>The ICC_ProfileRGB class is a subclass of the ICC_Profile class that represents profiles which meet the following criteria: The profile's color space type is RGB. The profile includes the &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, &lt;code&gt;blueColorantTag&lt;/code&gt;, &lt;code&gt;redTRCTag&lt;/code&gt;, &lt;code&gt;greenTRCTag&lt;/code&gt;, &lt;code&gt;blueTRCTag&lt;/code&gt;, and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags. The &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; method will return an &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; object when these conditions are met.</source>
          <target state="translated">ICC_ProfileRGB类是ICC_Profile类的子类，代表满足以下条件的配置文件：配置文件的颜色空间类型为RGB。该配置文件包括 &lt;code&gt;redColorantTag&lt;/code&gt; ， &lt;code&gt;greenColorantTag&lt;/code&gt; ， &lt;code&gt;blueColorantTag&lt;/code&gt; ， &lt;code&gt;redTRCTag&lt;/code&gt; ， &lt;code&gt;greenTRCTag&lt;/code&gt; ， &lt;code&gt;blueTRCTag&lt;/code&gt; 和 &lt;code&gt;mediaWhitePointTag&lt;/code&gt; 标签。满足这些条件时， &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; 方法将返回 &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="237b13a4a1d88dd1cd58b5de8b3676b6a2af1c85" translate="yes" xml:space="preserve">
          <source>The ID is a unique identifier for the type in the Java Virtual Machine (JVM). The ID might not be the same between JVM instances.</source>
          <target state="translated">ID是Java虚拟机(JVM)中该类型的唯一标识符。JVM实例之间的ID可能不一样。</target>
        </trans-unit>
        <trans-unit id="a09a7c491e42ec0ccd6087606b59441de1f0715c" translate="yes" xml:space="preserve">
          <source>The ID is minor variation to the standard ISO-8601 formatted string for the offset. There are three formats:</source>
          <target state="translated">ID是标准ISO-8601格式化字符串的小变化,用于偏移。有三种格式:</target>
        </trans-unit>
        <trans-unit id="d29cb73c296776b288211b97e00b807749e9b2d0" translate="yes" xml:space="preserve">
          <source>The ID is unique within the system. There are three types of ID.</source>
          <target state="translated">ID在系统内是唯一的。ID有三种类型。</target>
        </trans-unit>
        <trans-unit id="8452b5eaac842a0d2e795c7eda14cf159816708e" translate="yes" xml:space="preserve">
          <source>The ID might not be the same between JVM instances.</source>
          <target state="translated">JVM实例之间的ID可能不一样。</target>
        </trans-unit>
        <trans-unit id="2e455bd7cf49d3abbf675e3850b6bdcd9bb42c4a" translate="yes" xml:space="preserve">
          <source>The ID might not be the same between Java Virtual Machine (JVM) instances.</source>
          <target state="translated">Java虚拟机(JVM)实例之间的ID可能不一样。</target>
        </trans-unit>
        <trans-unit id="ae854760d3f4276cd755511e493cc5a51b830e12" translate="yes" xml:space="preserve">
          <source>The ID of the listener to which the notification is targeted.</source>
          <target state="translated">通知所针对的监听者的ID。</target>
        </trans-unit>
        <trans-unit id="01ee2510bd3aca83bad9699f7e3b7df60b473549" translate="yes" xml:space="preserve">
          <source>The ID of the returned offset will be normalized to one of the formats described by &lt;a href=&quot;#getId()&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回的偏移量的ID将被规范化为&lt;a href=&quot;#getId()&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; &lt;/a&gt;描述的格式之一。</target>
        </trans-unit>
        <trans-unit id="61fd4732cbe2e01752b6c8cf6a30f14f6ab40119" translate="yes" xml:space="preserve">
          <source>The ID of the returned offset will be normalized to one of the formats described by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回的偏移量的ID将被规范化为&lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; &lt;/a&gt;描述的格式之一。</target>
        </trans-unit>
        <trans-unit id="7c8cb46fd48547fa630e300fcba11829a98c4159" translate="yes" xml:space="preserve">
          <source>The ID of the thread that owns the object that the thread is blocked.</source>
          <target state="translated">线程被封锁的对象的ID。</target>
        </trans-unit>
        <trans-unit id="4bed910017ae47e15f9fd68ce9f4a7a2eb621fdb" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该ID唯一地标识 &lt;code&gt;Chronology&lt;/code&gt; 。它可以用于使用&lt;a href=&quot;#of(java.lang.String)&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;查找 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbbbed4ad86feca80f73d8a6ba6de9c29be78a79" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该ID唯一地标识 &lt;code&gt;Chronology&lt;/code&gt; 。它可以用于使用&lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;查找 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd6d60e60fa86ec5a78289385fee6d0f6bc1bdd6" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ID唯一地标识 &lt;code&gt;Chronology&lt;/code&gt; 。它可以用于使用&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;查找 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cafcec37d18d1f40c55857c337e84b388be6a4b" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ID唯一地标识 &lt;code&gt;Chronology&lt;/code&gt; 。它可以用于使用&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;查找 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eec3d7c57ef5447e9bdebab954ee90700a2a652d" translate="yes" xml:space="preserve">
          <source>The IP address of the remote end of this socket.</source>
          <target state="translated">该套接字远端的IP地址。</target>
        </trans-unit>
        <trans-unit id="510660eb55dda01e452a05872bd22f9cfe584483" translate="yes" xml:space="preserve">
          <source>The IPv6-address is a literal IPv6 address as described above. The</source>
          <target state="translated">IPv6-address是一个如上所述的IPv6字面地址。而</target>
        </trans-unit>
        <trans-unit id="4679bfab8bdf1a02bfe30406e4c9f7a2085873a2" translate="yes" xml:space="preserve">
          <source>The ISO 3166-1 codes can be found on-line.</source>
          <target state="translated">ISO 3166-1代码可以在网上找到。</target>
        </trans-unit>
        <trans-unit id="611dd8f9d48699c9411b9432a1cb2dc63863602c" translate="yes" xml:space="preserve">
          <source>The ISO calendar system behaves as follows:</source>
          <target state="translated">国际标准化组织日历系统的运作方式如下:</target>
        </trans-unit>
        <trans-unit id="6082f991bd981467ab45e2ffde3309b5e82f6280" translate="yes" xml:space="preserve">
          <source>The ISO calendar system defines an additional week-based division of years. This defines a year based on whole Monday to Monday weeks. This is modeled in &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ISO日历系统定义了一个额外的基于周的年划分。这定义了基于整个星期一到星期一的一年。这是在&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; 中&lt;/a&gt;建模的。</target>
        </trans-unit>
        <trans-unit id="4d077fd16854767d357096f809fb7b81bacb82c7" translate="yes" xml:space="preserve">
          <source>The ISO calendar system.</source>
          <target state="translated">国际标准化组织的日历系统;</target>
        </trans-unit>
        <trans-unit id="58e26e3bf55479a8a5120fe45b369953d4715df2" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date with an offset, such as '2011-12-03+01:00'.</source>
          <target state="translated">ISO日期格式化器,用于格式化或解析带有偏移量的日期,如'2011-12-03+01:00'。</target>
        </trans-unit>
        <trans-unit id="6de9417addd60d61c439ecd60520ce653b7ff208" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date with the offset if available, such as '2011-12-03' or '2011-12-03+01:00'.</source>
          <target state="translated">ISO日期格式化器,格式化或解析带有偏移量的日期,如'2011-12-03'或'2011-12-03+01:00'。</target>
        </trans-unit>
        <trans-unit id="2bed7eaa4131a3fd0eed3c41b0dc86a015ca96db" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date without an offset, such as '2011-12-03'.</source>
          <target state="translated">ISO日期格式化器,可以格式化或解析没有偏移量的日期,如'2011-12-03'。</target>
        </trans-unit>
        <trans-unit id="21efec4c9a9cd99bd7c37c45effa030d9f01c4ca" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date without an offset, such as '20111203'.</source>
          <target state="translated">ISO日期格式化器,可以格式化或解析一个没有偏移量的日期,如'20111203'。</target>
        </trans-unit>
        <trans-unit id="5e79ab154ec99d657cac16998df6c24432d36bfb" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses the ordinal date without an offset, such as '2012-337'.</source>
          <target state="translated">ISO日期格式化器,它可以格式化或解析没有偏移量的顺序日期,如'2012-337'。</target>
        </trans-unit>
        <trans-unit id="8947499950b72303579b6072a1f0f70410f938f9" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses the week-based date without an offset, such as '2012-W48-6'.</source>
          <target state="translated">ISO日期格式化器,它可以格式化或解析以星期为基础的日期,而不需要偏移量,例如'2012-W48-6'。</target>
        </trans-unit>
        <trans-unit id="ad4a4f923ef1dd96afdbb263d3503d29224e8ce9" translate="yes" xml:space="preserve">
          <source>The ISO date of the first day of the minimum Hijrah year.</source>
          <target state="translated">最低希吉拉年第一天的ISO日期;</target>
        </trans-unit>
        <trans-unit id="ab2094bfe0e934a818f591f8e39df5d0c0f5b428" translate="yes" xml:space="preserve">
          <source>The ISO date-time formatter that formats or parses a date-time with an offset, such as '2011-12-03T10:15:30+01:00'.</source>
          <target state="translated">ISO日期-时间格式化器,用于格式化或解析带有偏移量的日期-时间,如'2011-12-03T10:15:30+01:00'。</target>
        </trans-unit>
        <trans-unit id="b7f380848807763c304877a683626ef209b2dd72" translate="yes" xml:space="preserve">
          <source>The ISO date-time formatter that formats or parses a date-time without an offset, such as '2011-12-03T10:15:30'.</source>
          <target state="translated">ISO日期-时间格式化器,可以格式化或解析没有偏移量的日期-时间,如'2011-12-03T10:15:30'。</target>
        </trans-unit>
        <trans-unit id="bd2f9f3c47232e93e12ebe7e08b1617ed46664af" translate="yes" xml:space="preserve">
          <source>The ISO instant formatter that formats or parses an instant in UTC, such as '2011-12-03T10:15:30Z'.</source>
          <target state="translated">ISO即时格式化器,以UTC格式化或解析即时,如'2011-12-03T10:15:30Z'。</target>
        </trans-unit>
        <trans-unit id="95a52b961a46e25216875fca80e6d411d7ab598a" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time with an offset, such as '10:15+01:00' or '10:15:30+01:00'.</source>
          <target state="translated">ISO时间格式化器,可格式化或解析带有偏移量的时间,如'10:15+01:00'或'10:15:30+01:00'。</target>
        </trans-unit>
        <trans-unit id="df2987c695a53ce54ed87dd02ab3fbad12667817" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time without an offset, such as '10:15' or '10:15:30'.</source>
          <target state="translated">ISO时间格式化器,可以格式化或解析没有偏移的时间,如'10:15'或'10:15:30'。</target>
        </trans-unit>
        <trans-unit id="d335e1639bd2cf2c6fa963a589bd508ea6cff667" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time, with the offset if available, such as '10:15', '10:15:30' or '10:15:30+01:00'.</source>
          <target state="translated">ISO时间格式化,格式化或解析时间,如果有偏移量,如'10:15'、'10:15:30'或'10:15:30+01:00'。</target>
        </trans-unit>
        <trans-unit id="0a3f5206473b8e9b0e863ce6a87c607ec16d4baa" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">ISO-8601日历系统是当今世界大多数国家使用的现代民用日历系统。它相当于近似格里高利历法,在这个历法中,今天的闰年规则适用于所有时间。</target>
        </trans-unit>
        <trans-unit id="6b0753a83aa00ab66715a1d0bce536d311b35dee" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time. For most applications written today, the ISO-8601 rules are entirely suitable. However, any application that makes use of historical dates, and requires them to be accurate will find the ISO-8601 approach unsuitable.</source>
          <target state="translated">ISO-8601日历系统是当今世界大多数国家使用的现代民用日历系统。它相当于无序的格里高利历系统,在这个系统中,今天的闰年规则适用于所有时间。对于今天编写的大多数应用程序,ISO-8601规则是完全合适的。然而,任何使用历史日期并要求它们准确的应用程序都会发现ISO-8601方法不合适。</target>
        </trans-unit>
        <trans-unit id="2b87b0b3d3f02384c82a8cdf0d2d60d19047ef46" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. This API assumes that all calendar systems use the same representation, this class, for time-of-day.</source>
          <target state="translated">ISO-8601日历系统是当今世界上大多数国家使用的现代民用日历系统。这个API假定所有的日历系统都使用相同的表示方法,即这个类,来表示时间-日期。</target>
        </trans-unit>
        <trans-unit id="24cf4f50b66f15436634e4e63889e0eeb0811579" translate="yes" xml:space="preserve">
          <source>The ISO-8601 definition, where a week starts on Monday and the first week has a minimum of 4 days.</source>
          <target state="translated">ISO-8601定义,一周从周一开始,第一周至少有4天。</target>
        </trans-unit>
        <trans-unit id="ea56e5764492774cbd5793c14b636ad2fff88f1f" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard defines a calendar system based on weeks. It uses the week-based-year and week-of-week-based-year concepts to split up the passage of days instead of the standard year/month/day.</source>
          <target state="translated">ISO-8601标准定义了一个以周为基础的日历系统。它使用以周为基础的年和以周为基础的年的概念来划分天数,而不是标准的年/月/日。</target>
        </trans-unit>
        <trans-unit id="cd8f2e4ef07a7ae4561e3a206df7d9c3194cc3bf" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard does not define eras. A definition has therefore been created with two eras - 'Current era' (CE) for years on or after 0001-01-01 (ISO), and 'Before current era' (BCE) for years before that.</source>
          <target state="translated">ISO-8601标准没有定义时代。因此创建了两个时代的定义--0001-01-01(ISO)上或之后的年份为 &quot;当前时代&quot;(CE),之前的年份为 &quot;当前时代之前&quot;(BCE)。</target>
        </trans-unit>
        <trans-unit id="15f2960aca862d8387dbd45828c14f2ee1a23360" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard is based on the standard civic 12 month year. This is commonly divided into four quarters, often abbreviated as Q1, Q2, Q3 and Q4.</source>
          <target state="translated">ISO-8601标准是以标准的公民年12个月为基础的。通常分为四个季度,通常简称为Q1、Q2、Q3、Q4。</target>
        </trans-unit>
        <trans-unit id="6e18900e4d1930d96696f4d4906e19682a06d587" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard was originally intended as a data interchange format, defining a string format for dates and times. However, it also defines an alternate way of expressing the date, based on the concept of week-based-year.</source>
          <target state="translated">ISO-8601标准最初的目的是作为一种数据交换格式,为日期和时间定义了一种字符串格式。然而,它还根据以周为单位的年份的概念,定义了另一种表达日期的方式。</target>
        </trans-unit>
        <trans-unit id="12da9e8bfa2848ec37f88ea0629d59e6306e0906" translate="yes" xml:space="preserve">
          <source>The ISO-like date-time formatter that formats or parses a date-time with offset and zone, such as '2011-12-03T10:15:30+01:00[Europe/Paris]'.</source>
          <target state="translated">类似ISO的日期-时间格式化器,可以格式化或解析带有偏移量和区域的日期-时间,例如'2011-12-03T10:15:30+01:00[Europe/Paris]'。</target>
        </trans-unit>
        <trans-unit id="86afa3124f1aed75c36e4dd56bfce8c49977f732" translate="yes" xml:space="preserve">
          <source>The ISO-like date-time formatter that formats or parses a date-time with the offset and zone if available, such as '2011-12-03T10:15:30', '2011-12-03T10:15:30+01:00' or '2011-12-03T10:15:30+01:00[Europe/Paris]'.</source>
          <target state="translated">类似ISO的日期-时间格式化器,可以格式化或解析带有偏移量和区域的日期-时间(如果有的话),例如'2011-12-03T10:15:30'、'2011-12-03T10:15:30+01:00'或'2011-12-03T10:15:30+01:00[Europe/Paris]'。</target>
        </trans-unit>
        <trans-unit id="1770c1e43e10767defa4c018f5743b7b2d0ab296" translate="yes" xml:space="preserve">
          <source>The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive. Note that the size of the IV (block size), starting at &lt;code&gt;offset&lt;/code&gt; inclusive, must be twice the word size. The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+2*(wordSize/8)-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IV从 &lt;code&gt;iv&lt;/code&gt; 处获取，从包含 &lt;code&gt;offset&lt;/code&gt; 开始。请注意，IV的大小（块大小）（包括 &lt;code&gt;offset&lt;/code&gt; 在内）必须是字长的两倍。构成IV的字节是 &lt;code&gt;iv[offset]&lt;/code&gt; 和 &lt;code&gt;iv[offset+2*(wordSize/8)-1]&lt;/code&gt; 之间的字节。</target>
        </trans-unit>
        <trans-unit id="47f00745675042f6a724b595797a24a07101fd7a" translate="yes" xml:space="preserve">
          <source>The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive. The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+7]&lt;/code&gt; inclusive.</source>
          <target state="translated">IV从 &lt;code&gt;iv&lt;/code&gt; 处获取，从包含 &lt;code&gt;offset&lt;/code&gt; 开始。构成IV的字节是 &lt;code&gt;iv[offset]&lt;/code&gt; 和 &lt;code&gt;iv[offset+7]&lt;/code&gt; 含端点）。</target>
        </trans-unit>
        <trans-unit id="dd985ba4ac843c2aa13ce1073a3079fccc30b81d" translate="yes" xml:space="preserve">
          <source>The Id of the calendar in common usage</source>
          <target state="translated">常用的日历ID</target>
        </trans-unit>
        <trans-unit id="faa9a0061bb28bf6c97cd39acf5b5a828ccf93f4" translate="yes" xml:space="preserve">
          <source>The InetAddress class has a cache to store successful as well as unsuccessful host name resolutions.</source>
          <target state="translated">InetAddress类有一个缓存,用于存储成功和不成功的主机名解析。</target>
        </trans-unit>
        <trans-unit id="b6bf2f6528348c5b02c604ad3248d294717b2a1b" translate="yes" xml:space="preserve">
          <source>The InetAddress class provides methods to resolve host names to their IP addresses and vice versa.</source>
          <target state="translated">InetAddress类提供了将主机名解析为IP地址的方法,反之亦然。</target>
        </trans-unit>
        <trans-unit id="cc9a029be511dad65fe5032c793e83b48780fe75" translate="yes" xml:space="preserve">
          <source>The InetAddress may not uniquely identify the network interface.</source>
          <target state="translated">InetAddress可能无法唯一地识别网络接口。</target>
        </trans-unit>
        <trans-unit id="c425709246c3a74df2ab86c6b08f918b251f224f" translate="yes" xml:space="preserve">
          <source>The InetAddress may not uniquely identify the network interface. Use &lt;a href=&quot;#setNetworkInterface(java.net.NetworkInterface)&quot;&gt;&lt;code&gt;setNetworkInterface(NetworkInterface)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">InetAddress可能无法唯一标识网络接口。请改用&lt;a href=&quot;#setNetworkInterface(java.net.NetworkInterface)&quot;&gt; &lt;code&gt;setNetworkInterface(NetworkInterface)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65b8748cc6268fcd7ebec74a58229406dde9da72" translate="yes" xml:space="preserve">
          <source>The InetAddress returned will represent the IPv4 loopback address, 127.0.0.1, or the IPv6 loopback address, ::1. The IPv4 loopback address returned is only one of many in the form 127.*.*.*</source>
          <target state="translated">返回的InetAddress将代表IPv4环回地址127.0.0.1或IPv6环回地址::1。返回的IPv4环回地址只是127.*.*.*形式中的一个。</target>
        </trans-unit>
        <trans-unit id="2152fa5309ac167073dd45954409ff4768fda7a1" translate="yes" xml:space="preserve">
          <source>The Initial Context</source>
          <target state="translated">最初的背景</target>
        </trans-unit>
        <trans-unit id="ac8c89b1c1f180681f98a482edf01b3499693ace" translate="yes" xml:space="preserve">
          <source>The Insert key, a non-ASCII action key.</source>
          <target state="translated">插入键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="9ff6f766ad82286cf3b4ec81ad2977fb2af744de" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority maintains the &lt;a href=&quot;http://www.iana.org/assignments/uri-schemes.html&quot;&gt;official list of URI schemes&lt;/a&gt;.</source>
          <target state="translated">Internet号码分配机构维护&lt;a href=&quot;http://www.iana.org/assignments/uri-schemes.html&quot;&gt;URI方案&lt;/a&gt;的正式列表。</target>
        </trans-unit>
        <trans-unit id="f994aa3493fbbe076ad643b790ff4c68651b124a" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority maintains the &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes.html&quot;&gt;official list of URI schemes&lt;/a&gt;.</source>
          <target state="translated">互联网号码分配机构维护&lt;a href=&quot;https://www.iana.org/assignments/uri-schemes.html&quot;&gt;URI方案&lt;/a&gt;的正式清单。</target>
        </trans-unit>
        <trans-unit id="d6529cb88cc0262a6e384c19547d019dbb6bed8b" translate="yes" xml:space="preserve">
          <source>The Introspector class provides a standard way for tools to learn about the properties, events, and methods supported by a target Java Bean.</source>
          <target state="translated">Introspector类为工具提供了一种标准的方式来了解目标Java Bean所支持的属性、事件和方法。</target>
        </trans-unit>
        <trans-unit id="d59d73b56b3dc062d05806ca58651ba62a2b2f54" translate="yes" xml:space="preserve">
          <source>The JAAS login module in the JDK reference implementation destroys all tickets after logout.</source>
          <target state="translated">JDK参考实现中的JAAS登录模块会在注销后销毁所有票据。</target>
        </trans-unit>
        <trans-unit id="fc346e9074de046178b6976458380753f8a1bf98" translate="yes" xml:space="preserve">
          <source>The JAR File Specification defines manifest attributes for standalone applications that are packaged as &lt;em&gt;executable JAR files&lt;/em&gt;. If an implementation supports a mechanism to start an application as an executable JAR then the main manifest may include the &lt;code&gt;Launcher-Agent-Class&lt;/code&gt; attribute to specify the class name of an agent to start before the application &lt;code&gt;main&lt;/code&gt; method is invoked. The Java virtual machine attempts to invoke the following method on the agent class:</source>
          <target state="translated">JAR文件规范定义了打包为&lt;em&gt;可执行JAR文件的&lt;/em&gt;独立应用程序的清单属性。如果实现支持将应用程序作为可执行JAR启动的机制，则主清单可以包括 &lt;code&gt;Launcher-Agent-Class&lt;/code&gt; 属性，以指定在调用应用程序 &lt;code&gt;main&lt;/code&gt; 方法之前要启动的代理的类名。Java虚拟机尝试在代理类上调用以下方法：</target>
        </trans-unit>
        <trans-unit id="9399cacad1f2d454e6eb5e3191a8f321b607ef5b" translate="yes" xml:space="preserve">
          <source>The JAR File Specification: Package Sealing</source>
          <target state="translated">JAR文件规范。包装密封</target>
        </trans-unit>
        <trans-unit id="e6747986174a0238886b1fc2303c30e9cad08546" translate="yes" xml:space="preserve">
          <source>The JAR file contains a provider configuration named &lt;code&gt;com.sun.tools.attach.spi.AttachProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;.</source>
          <target state="translated">该JAR文件在资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 中包含一个名为 &lt;code&gt;com.sun.tools.attach.spi.AttachProvider&lt;/code&gt; 的提供程序配置。</target>
        </trans-unit>
        <trans-unit id="bb84f09030f91494fb9beb5357d12365eccba462" translate="yes" xml:space="preserve">
          <source>The JAR manifest file name.</source>
          <target state="translated">JAR清单文件名。</target>
        </trans-unit>
        <trans-unit id="767966e80e6e7fb64c0055271e699571168269ff" translate="yes" xml:space="preserve">
          <source>The JAXP Processors' support for Catalog depends on both the &lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt;&lt;code&gt;USE_CATALOG&lt;/code&gt;&lt;/a&gt; feature and the existence of valid Catalog file(s). A JAXP processor will use the Catalog only when the feature is true and valid Catalog file(s) are specified through the &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property. It will make no attempt to use the Catalog if either &lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt;&lt;code&gt;USE_CATALOG&lt;/code&gt;&lt;/a&gt; is set to false, or there is no Catalog file specified.</source>
          <target state="translated">JAXP处理器对目录的支持取决于&lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt; &lt;code&gt;USE_CATALOG&lt;/code&gt; &lt;/a&gt;功能和有效目录文件的存在。仅当功能为true且通过 &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; 属性指定了有效的目录文件时，JAXP处理器才会使用目录。如果&lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt; &lt;code&gt;USE_CATALOG&lt;/code&gt; &lt;/a&gt;设置为false，或者未指定目录文件，则不会尝试使用目录。</target>
        </trans-unit>
        <trans-unit id="672525f13b4776f4afc24e25f67783864e75b16d" translate="yes" xml:space="preserve">
          <source>The JAXP parsing API has been integrated with the Validation API. Applications may create a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; with the validation API and associate it with a &lt;a href=&quot;../parsers/documentbuilderfactory&quot;&gt;&lt;code&gt;DocumentBuilderFactory&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../parsers/saxparserfactory&quot;&gt;&lt;code&gt;SAXParserFactory&lt;/code&gt;&lt;/a&gt; instance by using the &lt;a href=&quot;../parsers/documentbuilderfactory#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;DocumentBuilderFactory.setSchema(Schema)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../parsers/saxparserfactory#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;SAXParserFactory.setSchema(Schema)&lt;/code&gt;&lt;/a&gt; methods. &lt;strong&gt;You should not&lt;/strong&gt; both set a schema and call &lt;code&gt;setValidating(true)&lt;/code&gt; on a parser factory. The former technique will cause parsers to use the new validation API; the latter will cause parsers to use their own internal validation facilities. &lt;strong&gt;Turning on both of these options simultaneously will cause either redundant behavior or error conditions.&lt;/strong&gt;</source>
          <target state="translated">JAXP解析API已与Validation API集成在一起。应用程序可以使用验证API创建&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;，并通过使用&lt;a href=&quot;../parsers/documentbuilderfactory#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;DocumentBuilderFactory.setSchema(Schema)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../parsers/saxparserfactory#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;SAXParserFactory.setSchema(Schema)&lt;/code&gt; &lt;/a&gt;方法将其与&lt;a href=&quot;../parsers/documentbuilderfactory&quot;&gt; &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../parsers/saxparserfactory&quot;&gt; &lt;code&gt;SAXParserFactory&lt;/code&gt; &lt;/a&gt;实例相关联。&lt;strong&gt;您不应&lt;/strong&gt;同时设置架构并在解析器工厂上调用 &lt;code&gt;setValidating(true)&lt;/code&gt; 。前一种技术将使解析器使用新的验证API。后者将导致解析器使用他们自己的内部验证工具。&lt;strong&gt;同时打开这两个选项将导致冗余行为或错误情况。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db8911ccdb0a32b11e7f663779352a6851708390" translate="yes" xml:space="preserve">
          <source>The JAXP processors give preference to user-specified custom resolvers. If such a resolver is registered, it will be used over the CatalogResolver. If it returns null however, the processors will continue resolving with the CatalogResolver. If it returns an empty source, no attempt will be made by the CatalogResolver.</source>
          <target state="translated">JAXP 处理器优先考虑用户指定的自定义解析器。如果注册了这样的解析器,它将被用来取代 CatalogResolver。但是,如果它返回空,处理器将继续使用 CatalogResolver 进行解析。如果返回空的源,CatalogResolver将不会进行任何尝试。</target>
        </trans-unit>
        <trans-unit id="99f24bc9813db0373534263c88d5131c62a4ac28" translate="yes" xml:space="preserve">
          <source>The JAXP processors will observe the default settings of the &lt;a href=&quot;catalogfeatures&quot;&gt;&lt;code&gt;CatalogFeatures&lt;/code&gt;&lt;/a&gt;. The processors, for example, will report an Exception by default when no matching entry is found since the default value of the &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; property is strict.</source>
          <target state="translated">JAXP处理器将遵守&lt;a href=&quot;catalogfeatures&quot;&gt; &lt;code&gt;CatalogFeatures&lt;/code&gt; &lt;/a&gt;的默认设置。例如，由于 &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; 属性的默认值是严格的，因此在未找到匹配条目的情况下，处理器将默认报告Exception 。</target>
        </trans-unit>
        <trans-unit id="a2d24c7890bba0f3964cbaede11464e0250281a1" translate="yes" xml:space="preserve">
          <source>The JAXP validation API decouples the validation of an instance document from the parsing of an XML document. This is advantageous for several reasons, some of which are:</source>
          <target state="translated">JAXP 验证 API 将实例文档的验证与 XML 文档的解析解耦。这样做有几个好处,其中一些原因是:</target>
        </trans-unit>
        <trans-unit id="c6740abff5341aaea3d3add9108309db47269f46" translate="yes" xml:space="preserve">
          <source>The JDBC 1.0 API</source>
          <target state="translated">JDBC 1.0 API</target>
        </trans-unit>
        <trans-unit id="2ef0b1e1237f551a4a27a689e562cb12d6000ad9" translate="yes" xml:space="preserve">
          <source>The JDBC 1.2 API</source>
          <target state="translated">JDBC 1.2 API</target>
        </trans-unit>
        <trans-unit id="58d78690167f9669f3dd44eef343f4abed230945" translate="yes" xml:space="preserve">
          <source>The JDBC 2.0 Optional Package API</source>
          <target state="translated">JDBC 2.0 可选包 API</target>
        </trans-unit>
        <trans-unit id="2210ba25b69c2db4ed032d072c7ec3aa1505d86c" translate="yes" xml:space="preserve">
          <source>The JDBC 2.1 core API</source>
          <target state="translated">JDBC 2.1核心API</target>
        </trans-unit>
        <trans-unit id="ea17f896a65d406c1673560b63457b11cfbedc0c" translate="yes" xml:space="preserve">
          <source>The JDBC 3.0 API</source>
          <target state="translated">JDBC 3.0 API</target>
        </trans-unit>
        <trans-unit id="59a75209b42a7de6d5159a3ca206067460cfc599" translate="yes" xml:space="preserve">
          <source>The JDBC 3.0 specification added the maxStatements &lt;code&gt;ConnectionPooledDataSource&lt;/code&gt; property to provide a standard mechanism for enabling the pooling of &lt;code&gt;PreparedStatements&lt;/code&gt; and to specify the size of the statement pool. However, there was no way for a driver to notify an external statement pool when a &lt;code&gt;PreparedStatement&lt;/code&gt; becomes invalid. For some databases, a statement becomes invalid if a DDL operation is performed that affects the table. For example an application may create a temporary table to do some work on the table and then destroy it. It may later recreate the same table when it is needed again. Some databases will invalidate any prepared statements that reference the temporary table when the table is dropped.</source>
          <target state="translated">JDBC 3.0规范添加了maxStatements &lt;code&gt;ConnectionPooledDataSource&lt;/code&gt; 属性，以提供用于启用 &lt;code&gt;PreparedStatements&lt;/code&gt; 池并指定语句池大小的标准机制。但是，当 &lt;code&gt;PreparedStatement&lt;/code&gt; 变为无效时，驱动程序无法通知外部语句池。对于某些数据库，如果执行影响表的DDL操作，则该语句无效。例如，一个应用程序可以创建一个临时表来对该表做一些工作，然后销毁它。以后可能需要再次使用同一张表时，它可能会重新创建它。当删除表时，某些数据库会使引用该临时表的所有准备好的语句无效。</target>
        </trans-unit>
        <trans-unit id="b75de8c2dc71b65df97e8ecbf3ef4bedd3196b45" translate="yes" xml:space="preserve">
          <source>The JDBC 4.0 API</source>
          <target state="translated">JDBC 4.0 API</target>
        </trans-unit>
        <trans-unit id="8537833ae96efc546ce1bf57458bf13e4e00612d" translate="yes" xml:space="preserve">
          <source>The JDBC 4.1 API</source>
          <target state="translated">JDBC 4.1 API</target>
        </trans-unit>
        <trans-unit id="2522ad222d6d4fff647d1822f3c053ef1b208ea1" translate="yes" xml:space="preserve">
          <source>The JDBC 4.2 API</source>
          <target state="translated">JDBC 4.2 API</target>
        </trans-unit>
        <trans-unit id="e8042149b2c345102f76a2b84b87ede611904a61" translate="yes" xml:space="preserve">
          <source>The JDBC 4.3 API includes both the &lt;code&gt;java.sql&lt;/code&gt; package, referred to as the JDBC core API, and the &lt;code&gt;javax.sql&lt;/code&gt; package, referred to as the JDBC Optional Package API. This complete JDBC API is included in the Java Standard Edition (Java SE), version 7. The &lt;code&gt;javax.sql&lt;/code&gt; package extends the functionality of the JDBC API from a client-side API to a server-side API, and it is an essential part of the Java Enterprise Edition (Java EE) technology.</source>
          <target state="translated">JDBC 4.3 API包括 &lt;code&gt;java.sql&lt;/code&gt; 包（称为JDBC核心API）和 &lt;code&gt;javax.sql&lt;/code&gt; 包（称为JDBC可选包API）。此完整的JDBC API包含在Java标准版（Java SE）版本7中 &lt;code&gt;javax.sql&lt;/code&gt; 软件包将JDBC API的功能从客户端API扩展到服务器端API，它是必不可少的部分是Java Enterprise Edition（Java EE）技术的一部分。</target>
        </trans-unit>
        <trans-unit id="063101cb057d027845a508bc0a2d52d1e469963b" translate="yes" xml:space="preserve">
          <source>The JDBC 4.3 API incorporates all of the previous JDBC API versions:</source>
          <target state="translated">JDBC 4.3 API包含了之前所有的JDBC API版本。</target>
        </trans-unit>
        <trans-unit id="908da5094f4f523619fcbfb6f3b042822f877a05" translate="yes" xml:space="preserve">
          <source>The JDBC API provides mechanisms for mapping an SQL structured type or DISTINCT type to the Java programming language. Typically, a structured type is mapped to a class, and its attributes are mapped to fields in the class. (A DISTINCT type can thought of as having one attribute.) However, there are many other possibilities, and there may be any number of different mappings.</source>
          <target state="translated">JDBC API提供了将SQL结构化类型或DISTINCT类型映射到Java编程语言的机制。通常情况下,一个结构化类型被映射到一个类上,它的属性被映射到类中的字段上(一个DISTINCT类型可以被认为只有一个属性)。(一个DISTINCT类型可以被认为是有一个属性。)然而,还有许多其他的可能性,可能有任何数量的不同映射。</target>
        </trans-unit>
        <trans-unit id="1e67b3a9fa0b65d4e49f3b35324e61a95fab14b1" translate="yes" xml:space="preserve">
          <source>The JDBC API supports this SQL feature by providing the name of the SQL cursor used by a &lt;code&gt;ResultSet&lt;/code&gt; object. The current row of a &lt;code&gt;ResultSet&lt;/code&gt; object is also the current row of this SQL cursor.</source>
          <target state="translated">JDBC API通过提供 &lt;code&gt;ResultSet&lt;/code&gt; 对象使用的SQL游标的名称来支持此SQL功能。一个的当前行 &lt;code&gt;ResultSet&lt;/code&gt; 对象也是这个SQL游标的当前行。</target>
        </trans-unit>
        <trans-unit id="9d48b4e02a7ef8b217df6704fbc3fbef3055bb97" translate="yes" xml:space="preserve">
          <source>The JDBC driver initializes the input stream with a type map before calling this method, which is used by the appropriate &lt;code&gt;SQLInput&lt;/code&gt; reader method on the stream.</source>
          <target state="translated">JDBC驱动程序在调用此方法之前用类型映射表初始化输入流，该方法由流上的相应 &lt;code&gt;SQLInput&lt;/code&gt; reader方法使用。</target>
        </trans-unit>
        <trans-unit id="fcf45bd369f2e97b6bb4e9ebc9b75d647e55ac9a" translate="yes" xml:space="preserve">
          <source>The JDBC driver's static initialization block must call &lt;a href=&quot;drivermanager#registerDriver(java.sql.Driver,java.sql.DriverAction)&quot;&gt;DriverManager.registerDriver(java.sql.Driver, java.sql.DriverAction)&lt;/a&gt; in order to inform &lt;code&gt;DriverManager&lt;/code&gt; which &lt;code&gt;DriverAction&lt;/code&gt; implementation to call when the JDBC driver is de-registered.</source>
          <target state="translated">JDBC驱动程序的静态初始化块必须调用&lt;a href=&quot;drivermanager#registerDriver(java.sql.Driver,java.sql.DriverAction)&quot;&gt;DriverManager.registerDriver（java.sql.Driver，java.sql.DriverAction）&lt;/a&gt;，以便在 &lt;code&gt;DriverAction&lt;/code&gt; JDBC驱动程序时通知 &lt;code&gt;DriverManager&lt;/code&gt; 调用哪个DriverAction实现。</target>
        </trans-unit>
        <trans-unit id="90e93f4c83b64826e6a378f97cf636a358d28bb9" translate="yes" xml:space="preserve">
          <source>The JDBC specification defines a standard mapping from Java &lt;code&gt;Object&lt;/code&gt; types to SQL types. The driver will use this standard mapping to convert the given object to its corresponding SQL type before sending it to the database. If the object has a custom mapping (is of a class implementing &lt;code&gt;SQLData&lt;/code&gt;), the driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to the SQL data stream.</source>
          <target state="translated">JDBC规范定义了从Java &lt;code&gt;Object&lt;/code&gt; 类型到SQL类型的标准映射。驱动程序将使用此标准映射将给定对象转换为其对应的SQL类型，然后再将其发送到数据库。如果对象具有自定义映射（属于实现 &lt;code&gt;SQLData&lt;/code&gt; 的类），则驱动程序应调用方法 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 将对象写入SQL数据流。</target>
        </trans-unit>
        <trans-unit id="ee974a8e55da2c721c226bef3a30b526c2729b4d" translate="yes" xml:space="preserve">
          <source>The JDBC specification provides a standard mapping from Java Object types to SQL types. The driver will convert the given Java object to its standard SQL mapping before sending it to the database.</source>
          <target state="translated">JDBC规范提供了一个从Java对象类型到SQL类型的标准映射。驱动程序在将给定的Java对象发送到数据库之前,会将其转换为标准的SQL映射。</target>
        </trans-unit>
        <trans-unit id="3e9c491f1d268a5ac29eab9e5df11e173ed6c9d0" translate="yes" xml:space="preserve">
          <source>The JDBC specification specifies a standard mapping from Java &lt;code&gt;Object&lt;/code&gt; types to SQL types. The given argument will be converted to the corresponding SQL type before being sent to the database.</source>
          <target state="translated">JDBC规范指定了从Java &lt;code&gt;Object&lt;/code&gt; 类型到SQL类型的标准映射。给定的参数在发送到数据库之前将被转换为相应的SQL类型。</target>
        </trans-unit>
        <trans-unit id="523fd79ec39492a793ce5d43b1d416a59b37eb0f" translate="yes" xml:space="preserve">
          <source>The JDBC technology-enabled driver registers a type map with the stream before passing the stream to the application.</source>
          <target state="translated">启用JDBC技术的驱动程序在将流传给应用程序之前,先用流注册一个类型映射。</target>
        </trans-unit>
        <trans-unit id="4f2501807ea5543e21ac42081e7607f5eda00852" translate="yes" xml:space="preserve">
          <source>The JDBC type specified by &lt;code&gt;sqlType&lt;/code&gt; for an OUT parameter determines the Java type that must be used in the &lt;code&gt;get&lt;/code&gt; method to read the value of that parameter.</source>
          <target state="translated">&lt;code&gt;sqlType&lt;/code&gt; 为OUT参数指定的JDBC类型决定了 &lt;code&gt;get&lt;/code&gt; 方法中必须使用的Java类型来读取该参数的值。</target>
        </trans-unit>
        <trans-unit id="de789869d263780a3433be03e37625511f9f77e8" translate="yes" xml:space="preserve">
          <source>The JDBC&amp;trade; 4.3 API includes both the &lt;code&gt;java.sql&lt;/code&gt; package, referred to as the JDBC core API, and the &lt;code&gt;javax.sql&lt;/code&gt; package, referred to as the JDBC Optional Package API. This complete JDBC API is included in the Java&amp;trade; Standard Edition (Java SE&amp;trade;), version 7. The &lt;code&gt;javax.sql&lt;/code&gt; package extends the functionality of the JDBC API from a client-side API to a server-side API, and it is an essential part of the Java&amp;trade; Enterprise Edition (Java EE&amp;trade;) technology.</source>
          <target state="translated">JDBC&amp;trade;4.3 API包括 &lt;code&gt;java.sql&lt;/code&gt; 包（称为JDBC核心API）和 &lt;code&gt;javax.sql&lt;/code&gt; 包（称为JDBC可选包API）。此完整的JDBC API包含在Java&amp;trade;Standard Edition（Java SE&amp;trade;）版本7中 &lt;code&gt;javax.sql&lt;/code&gt; 软件包将JDBC API的功能从客户端API扩展到服务器端API，它是一个Java&amp;trade;企业版（Java EE&amp;trade;）技术的重要组成部分。</target>
        </trans-unit>
        <trans-unit id="f969a21212467360facf86185bc85dca1542c554" translate="yes" xml:space="preserve">
          <source>The JDK 1.0 event system is supported for backwards compatibility, but its use with newer versions of the platform is discouraged. The five types of adjustment events introduced with JDK 1.1 correspond to the five event types that are associated with scroll bars in previous platform versions. The following list gives the adjustment event type, and the corresponding JDK 1.0 event type it replaces.</source>
          <target state="translated">为了向后兼容,支持JDK 1.0事件系统,但不鼓励在较新版本的平台中使用它。JDK 1.1引入的五种调整事件类型与以前平台版本中与滚动条相关联的五种事件类型相对应。以下列表给出了调整事件类型,以及它所替代的相应JDK 1.0事件类型。</target>
        </trans-unit>
        <trans-unit id="3d1c7a729b653acd1693d52a432bb13d5ba67a48" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; 属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="ffe26effc5f2dd90c2a6cedb9ce1386ed82b03d8" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="8ac4775b3e40e73761c25007bba30e40be920bc3" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="62bf224ef20a8c8efd79de17ded7edf373246c8e" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="45825bff39d02867764b21ee89aae790885bd0b7" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="803cbab520d0b89989ac7e30afebc082051ee02d" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="1cbcd88a86bafdf6f51dcf7a0cbbb0373e437354" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="0fc06d2c193c85c4e354c96804cda6886c8cc40b" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="1a1a5269b7b6f90524770dbb39e2e220fc9c32ad" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;. See also the Cipher Transformations section of the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jdk_providers&quot;&gt;JDK Providers&lt;/a&gt; document for information on the transformation defaults used by JDK providers.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。另请参阅&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jdk_providers&quot;&gt;JDK提供程序&lt;/a&gt;文档的&amp;ldquo;密码转换&amp;rdquo;部分，以获取有关JDK提供程序使用的默认转换的信息。</target>
        </trans-unit>
        <trans-unit id="fd56ba177b238763ab159cda3e93de4df961c47c" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;../security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="e2ff4634b7d2e0418683c1f5d82da119c746f73f" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JDK参考实现还使用 &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;属性确定指定算法的首选提供程序顺序。这可能不同于&lt;a href=&quot;security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;返回的提供程序的顺序。</target>
        </trans-unit>
        <trans-unit id="befa33c1b2a2cde739097412d1f98fd45c743c49" translate="yes" xml:space="preserve">
          <source>The JDK SunJSSE provider implementation default for this mode is false.</source>
          <target state="translated">JDK SunJSSE提供者对该模式的实现默认为false。</target>
        </trans-unit>
        <trans-unit id="8bf12e035729ecbd5e8b0cb95471b6a6dd98ddbd" translate="yes" xml:space="preserve">
          <source>The JDK SunJSSE provider implementation returns false unless &lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; is used to change the mode to true.</source>
          <target state="translated">除非使用&lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt;将模式更改为true，否则JDK SunJSSE提供程序实现将返回false 。</target>
        </trans-unit>
        <trans-unit id="358eb35c3338a7ee46a21e172820d69f3e988176" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes a language-independent command-line script shell, &lt;em&gt;&lt;a id=&quot;jrunscript&quot;&gt;jrunscript&lt;/a&gt;&lt;/em&gt;, that supports executing JavaScript and other languages if its corresponding script engine is installed.</source>
          <target state="translated">此模块的JDK实现包括独立于语言的命令行脚本外壳&lt;em&gt;&lt;a id=&quot;jrunscript&quot;&gt;jrunscript&lt;/a&gt;&lt;/em&gt;，如果安装了其相应的脚本引擎，则该脚本外壳支持执行JavaScript和其他语言。</target>
        </trans-unit>
        <trans-unit id="1e313c01f91cb65b8f8b490a81c962fc40ccb64a" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes a language-independent command-line script shell, &lt;em&gt;&lt;span id=&quot;jrunscript&quot;&gt;jrunscript&lt;/span&gt;&lt;/em&gt;, that supports executing JavaScript and other languages if its corresponding script engine is installed.</source>
          <target state="translated">此模块的JDK实现包括独立于语言的命令行脚本外壳&lt;em&gt;&lt;span id=&quot;jrunscript&quot;&gt;jrunscript&lt;/span&gt;&lt;/em&gt;，如果安装了其相应的脚本引擎，则该脚本外壳支持执行JavaScript和其他语言。</target>
        </trans-unit>
        <trans-unit id="ca8ec67b178a4223fa65b7e67f9198c2b19d7c3c" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes the &lt;em&gt;&lt;a id=&quot;rmiregistry&quot;&gt;rmiregistry&lt;/a&gt;&lt;/em&gt; tool to start a remote object registry, and the &lt;em&gt;&lt;a id=&quot;rmid&quot;&gt;rmid&lt;/a&gt;&lt;/em&gt; tool to start the activation system daemon.</source>
          <target state="translated">该模块的JDK实现包括用于启动远程对象注册表的&lt;em&gt;&lt;a id=&quot;rmiregistry&quot;&gt;rmir​​egistry&lt;/a&gt;&lt;/em&gt;工具和用于启动激活系统守护程序的&lt;em&gt;&lt;a id=&quot;rmid&quot;&gt;rmid&lt;/a&gt;&lt;/em&gt;工具。</target>
        </trans-unit>
        <trans-unit id="056f7da9b57d630a072b21b1ba1153c04acfa1ca" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes the &lt;em&gt;&lt;span id=&quot;rmiregistry&quot;&gt;rmiregistry&lt;/span&gt;&lt;/em&gt; tool to start a remote object registry, and the &lt;em&gt;&lt;span id=&quot;rmid&quot;&gt;rmid&lt;/span&gt;&lt;/em&gt; tool to start the activation system daemon.</source>
          <target state="translated">该模块的JDK实现包括用于启动远程对象注册表的&lt;em&gt;&lt;span id=&quot;rmiregistry&quot;&gt;rmir​​egistry&lt;/span&gt;&lt;/em&gt;工具和用于启动激活系统守护程序的&lt;em&gt;&lt;span id=&quot;rmid&quot;&gt;rmid&lt;/span&gt;&lt;/em&gt;工具。</target>
        </trans-unit>
        <trans-unit id="a40a63ec61f8f60c0c587e2bbb0619e0bd28d621" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module provides an implementation of the &lt;a id=&quot;jrt&quot;&gt;jrt&lt;/a&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;file system provider&lt;/a&gt; to enumerate and read the class and resource files in a run-time image. The jrt file system can be created by calling &lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块的JDK实现提供了&lt;a id=&quot;jrt&quot;&gt;jrt&lt;/a&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;文件系统提供程序&lt;/a&gt;的实现，以枚举和读取运行时映像中的类和资源文件。可以通过调用&lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt; &lt;/a&gt;来创建jrt文件系统。</target>
        </trans-unit>
        <trans-unit id="188f14a340d1f5ee331fb455e42c168ebbe17438" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module provides an implementation of the &lt;span id=&quot;jrt&quot;&gt;jrt&lt;/span&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;file system provider&lt;/a&gt; to enumerate and read the class and resource files in a run-time image. The jrt file system can be created by calling &lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块的JDK实现提供了&lt;span id=&quot;jrt&quot;&gt;jrt&lt;/span&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;文件系统提供程序&lt;/a&gt;的实现，以枚举和读取运行时映像中的类和资源文件。可以通过调用&lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt; &lt;/a&gt;来创建jrt文件系统。</target>
        </trans-unit>
        <trans-unit id="021fab3830ec0a1adca1cc2e47d263506f6a799d" translate="yes" xml:space="preserve">
          <source>The JDK implementation returns the cache size as set by the &lt;code&gt;setSessionCacheSize&lt;/code&gt; method, or if not set, the value of the &lt;code&gt;&lt;span id=&quot;javax.net.ssl.sessionCacheSize&quot;&gt;javax.net.ssl.sessionCacheSize&lt;/span&gt;&lt;/code&gt; system property. If neither is set, it returns a default value of 20480.</source>
          <target state="translated">JDK实现返回由 &lt;code&gt;setSessionCacheSize&lt;/code&gt; 方法设置的缓存大小，或者如果未设置，则返回 &lt;code&gt;&lt;span id=&quot;javax.net.ssl.sessionCacheSize&quot;&gt;javax.net.ssl.sessionCacheSize&lt;/span&gt;&lt;/code&gt; 系统属性的值。如果两者均未设置，则返回默认值20480。</target>
        </trans-unit>
        <trans-unit id="ff828cede05c6d73aace767cbbd1fa03e209c5c1" translate="yes" xml:space="preserve">
          <source>The JDK implementation returns the cache size as set by the &lt;code&gt;setSessionCacheSize&lt;/code&gt; method, or if not set, the value of the system property. If neither is set, it returns a default value of 20480.</source>
          <target state="translated">JDK实现返回由 &lt;code&gt;setSessionCacheSize&lt;/code&gt; 方法设置的缓存大小，或者如果未设置，则返回系统属性的值。如果两者均未设置，则返回默认值20480。</target>
        </trans-unit>
        <trans-unit id="63abf37567a69daeb1c9eb0eac9845726723f07a" translate="yes" xml:space="preserve">
          <source>The JDK implementation returns the session timeout as set by the &lt;code&gt;setSessionTimeout&lt;/code&gt; method, or if not set, a default value of 86400 seconds (24 hours).</source>
          <target state="translated">JDK实现返回由 &lt;code&gt;setSessionTimeout&lt;/code&gt; 方法设置的会话超时，如果未设置，则返回默认值86400秒（24小时）。</target>
        </trans-unit>
        <trans-unit id="974bd73816215210a403a55fc57de388a401d79e" translate="yes" xml:space="preserve">
          <source>The JDK implementation supports static registration of the security providers via the &lt;code&gt;conf/security/java.security&lt;/code&gt; file in the Java installation directory. These providers are automatically installed by the JDK runtime, see &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca_provider&quot;&gt;The Provider Class&lt;/a&gt; in the Java Cryptography Architecture (JCA) Reference Guide for information about how a particular type of provider, the cryptographic service provider, works and is installed.</source>
          <target state="translated">JDK实现通过Java安装目录中的 &lt;code&gt;conf/security/java.security&lt;/code&gt; 文件支持安全提供程序的静态注册。这些提供程序由JDK运行时自动安装，请参阅&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca_provider&quot;&gt;《&lt;/a&gt; Java密码体系结构（JCA）参考指南》中的&amp;ldquo;提供程序类&amp;rdquo;以获取有关特定类型的提供程序（即密码服务提供程序）如何工作和安装的信息。</target>
        </trans-unit>
        <trans-unit id="1e8321947a5392937c7a6036d74e85eb794e0aeb" translate="yes" xml:space="preserve">
          <source>The JDK implementation supports static registration of the security providers via the &lt;code&gt;conf/security/java.security&lt;/code&gt; file in the Java installation directory. These providers are automatically installed by the JDK runtime, see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca_provider&quot;&gt;The Provider Class&lt;/a&gt; in the Java Cryptography Architecture (JCA) Reference Guide for information about how a particular type of provider, the cryptographic service provider, works and is installed.</source>
          <target state="translated">JDK实现通过Java安装目录中的 &lt;code&gt;conf/security/java.security&lt;/code&gt; 文件支持安全提供程序的静态注册。这些提供程序由JDK运行时自动安装，请参阅&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca_provider&quot;&gt;《&lt;/a&gt; Java密码体系结构（JCA）参考指南》中的&amp;ldquo;提供程序类&amp;rdquo;以获取有关特定类型的提供程序（即密码服务提供程序）如何工作和安装的信息。</target>
        </trans-unit>
        <trans-unit id="7977a89a83ddfc3d655c3423c1d5cef0ff1b4d9d" translate="yes" xml:space="preserve">
          <source>The JDK includes &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations that can locate the standard platform printers. To locate other types of printers, such as IPP printers or JINI printers, a print-service provider can write implementations of &lt;code&gt;PrintServiceLookup&lt;/code&gt;. The print-service provider can dynamically install these &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations using the  SPI JAR file specification.</source>
          <target state="translated">JDK包含可以定位标准平台打印机的 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 实现。要查找其他类型的打印机，例如IPP打印机或JINI打印机，打印服务提供者可以编写 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 的实现。打印服务提供者可以使用SPI JAR文件规范动态安装这些 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="95544c4457ec318de1023345ff557bed46437913" translate="yes" xml:space="preserve">
          <source>The JDK includes &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations that can locate the standard platform printers. To locate other types of printers, such as IPP printers or JINI printers, a print-service provider can write implementations of &lt;code&gt;PrintServiceLookup&lt;/code&gt;. The print-service provider can dynamically install these &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations using the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; facility.</source>
          <target state="translated">JDK包含可以定位标准平台打印机的 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 实现。要查找其他类型的打印机，例如IPP打印机或JINI打印机，打印服务提供商可以编写 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 的实现。打印服务提供者可以使用&lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;工具动态安装这些 &lt;code&gt;PrintServiceLookup&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="8d93514a78e7c9e81c3a6c2bad27a8106084096c" translate="yes" xml:space="preserve">
          <source>The JDK provides the following predefined content types:</source>
          <target state="translated">JDK提供了以下预定义的内容类型。</target>
        </trans-unit>
        <trans-unit id="c17c58306c6fb36155552fb80a036d49556c883b" translate="yes" xml:space="preserve">
          <source>The JDK(tm) 1.1 rendering model is based on a pixelization model that specifies that coordinates are infinitely thin, lying between the pixels. Drawing operations are performed using a one-pixel wide pen that fills the pixel below and to the right of the anchor point on the path. The JDK 1.1 rendering model is consistent with the capabilities of most of the existing class of platform renderers that need to resolve integer coordinates to a discrete pen that must fall completely on a specified number of pixels.</source>
          <target state="translated">JDK(tm)1.1的渲染模型是基于像素化模型,它规定坐标是无限细的,位于像素之间。绘制操作使用一个一像素宽的笔,填充路径上锚点下方和右侧的像素。JDK 1.1的渲染模型与现有的大多数类平台渲染器的功能是一致的,这些渲染器需要将整数坐标解析成离散的笔,必须完全落在指定的像素上。</target>
        </trans-unit>
        <trans-unit id="b4df1f98a0565fca9a29ad6073a1bc23033b2822" translate="yes" xml:space="preserve">
          <source>The JList used for representing the files is created by subclasses, but the selection is monitored in this class.</source>
          <target state="translated">用于表示文件的JList是由子类创建的,但选择是在这个类中监控的。</target>
        </trans-unit>
        <trans-unit id="7224bc9a099b77a16bc3be0479f9b05ff7eb1a25" translate="yes" xml:space="preserve">
          <source>The JList used for representing the files is created by subclasses, but the selection is monitored in this class. The TransferHandler installed in the JFileChooser is also installed in the file list as it is used as the actual transfer source. The list is updated on a mouse enter to reflect the current data transfer state of the file chooser.</source>
          <target state="translated">用于表示文件的JList是由子类创建的,但选择是在这个类中监控的。安装在JFileChooser中的TransferHandler也被安装在文件列表中,因为它被用作实际的传输源。在鼠标输入时,列表会更新,以反映文件选择器的当前数据传输状态。</target>
        </trans-unit>
        <trans-unit id="adacbc5dc9ca937440df58f189dfa0a26e578715" translate="yes" xml:space="preserve">
          <source>The JMM specifically allows optimizing compilers to elide reads or writes of variables that are known to be useless. Such elided reads and writes have no effect on the happens-before relation. Regardless of this fact, the volatile &lt;code&gt;V&lt;/code&gt; will not be elided, even though its written value is indeterminate and its read value is not used.</source>
          <target state="translated">JMM特别允许优化编译器以消除对已知无用的变量的读取或写入。这种省略的读取和写入对事前发生关系没有影响。不管这个事实如何，即使其写入值不确定并且不使用其读取值，也不会忽略掉挥发性 &lt;code&gt;V&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="245a29e6968c20703520c2a92906f5e9e0f071ea" translate="yes" xml:space="preserve">
          <source>The JMX API can also be used as part of a solution for managing systems, networks, and so on.</source>
          <target state="translated">JMX API也可以作为管理系统、网络等解决方案的一部分。</target>
        </trans-unit>
        <trans-unit id="fcfd357aa0013a97754ba965d15a09dda3cf149c" translate="yes" xml:space="preserve">
          <source>The JMX API consists of interfaces for monitoring and management of the JVM and other components in the Java runtime.</source>
          <target state="translated">JMX API由用于监控和管理JVM和Java运行时的其他组件的接口组成。</target>
        </trans-unit>
        <trans-unit id="44195781584f2d466ba7e2c1a615da361d712792" translate="yes" xml:space="preserve">
          <source>The JMX Remote API also defines an optional connector called &lt;b&gt;JMXMP Connector&lt;/b&gt; implementing the JMX Message Protocol (JMXMP). As it is optional, it is not part of this bundle (see note below).</source>
          <target state="translated">JMX远程API还定义了一个称为&lt;b&gt;JMXMP Connector&lt;/b&gt;的可选连接&lt;b&gt;器，用于&lt;/b&gt;实现JMX消息协议（JMXMP）。由于它是可选的，因此它不是此捆绑包的一部分（请参阅下面的注释）。</target>
        </trans-unit>
        <trans-unit id="49ce3ebe998d499efd4c77a77394ab17b1f03636" translate="yes" xml:space="preserve">
          <source>The JMX Remote API defines a standard connector, the &lt;b&gt;RMI Connector&lt;/b&gt;, which provides remote access to an MBeanServer through RMI.</source>
          <target state="translated">JMX远程API定义了一个标准连接器&lt;b&gt;RMI连接&lt;/b&gt;器，该&lt;b&gt;连接器&lt;/b&gt;通过RMI提供对MBeanServer的远程访问。</target>
        </trans-unit>
        <trans-unit id="fd57cf73dfe60c2aa55ec8129a23ade5a302d5fa" translate="yes" xml:space="preserve">
          <source>The JMX specification also defines the notion of an &lt;em&gt;adaptor&lt;/em&gt;. An adaptor translates between requests in a protocol such as SNMP or HTML and accesses to an MBean Server. So for example an SNMP GET operation might result in a &lt;code&gt;getAttribute&lt;/code&gt; on the MBean Server.</source>
          <target state="translated">JMX规范还定义了&lt;em&gt;适配器&lt;/em&gt;的概念。适配器在协议（例如SNMP或HTML）中的请求之间进行转换，并访问MBean服务器。因此，例如，SNMP GET操作可能会在MBean服务器上导致 &lt;code&gt;getAttribute&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad7600c1b4c4869f0bb7b9d742500b17e728fe9b" translate="yes" xml:space="preserve">
          <source>The JMX specification defines the notion of &lt;b&gt;connectors&lt;/b&gt;. A connector is attached to a JMX API MBean server and makes it accessible to remote Java clients. The client end of a connector exports essentially the same interface as the MBean server, specifically the &lt;a href=&quot;../mbeanserverconnection&quot;&gt;&lt;code&gt;MBeanServerConnection&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">JMX规范定义了&lt;b&gt;连接器&lt;/b&gt;的概念。连接器连接到JMX API MBean服务器，并使远程Java客户端可以访问它。连接器的客户端输出与MBean服务器基本相同的接口，尤其是&lt;a href=&quot;../mbeanserverconnection&quot;&gt; &lt;code&gt;MBeanServerConnection&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="49f18bdd1f1d911533de33e739a8c7e69a6ea6ce" translate="yes" xml:space="preserve">
          <source>The JNDI API Specification and related documents can be found in the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_overview&quot;&gt;JNDI documentation&lt;/a&gt;.</source>
          <target state="translated">JNDI API规范和相关文档可以在&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_overview&quot;&gt;JNDI文档中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="48496ba0da8b75b3e524f0a5ef74f428d1bc62c0" translate="yes" xml:space="preserve">
          <source>The JNDI SPI Specification and related documents can be found in the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_overview&quot;&gt;JNDI documentation&lt;/a&gt;.</source>
          <target state="translated">JNDI SPI规范和相关文档可以在&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_overview&quot;&gt;JNDI文档中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="96af366dabe06f77839ee8dbe7885151d35d2d4b" translate="yes" xml:space="preserve">
          <source>The JNDI SPI provides the means for creating JNDI service providers, through which JNDI applications access different naming and directory services.</source>
          <target state="translated">JNDI SPI提供了创建JNDI服务提供者的方法,JNDI应用程序通过它访问不同的命名和目录服务。</target>
        </trans-unit>
        <trans-unit id="33732f94d8d93f615200108becd1fb08f06a0bea" translate="yes" xml:space="preserve">
          <source>The JNDI class library reads the resource files and makes the property values freely available. Thus JNDI resource files should be considered to be &quot;world readable&quot;, and sensitive information such as clear-text passwords should not be stored there.</source>
          <target state="translated">JNDI类库会读取资源文件,并使属性值可以自由使用。因此,JNDI资源文件应被认为是 &quot;世界可读 &quot;的,诸如明文密码等敏感信息不应存储在那里。</target>
        </trans-unit>
        <trans-unit id="088d7c9d898f7a840b1256be8ddef986f15194cb" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for different initial context implementations to be specified at runtime. An initial context is created using an initial context factory. A program can install its own builder that creates initial context factories, thereby overriding the default policies used by the framework, by calling NamingManager.setInitialContextFactoryBuilder(). The InitialContextFactoryBuilder interface must be implemented by such a builder.</source>
          <target state="translated">JNDI框架允许在运行时指定不同的初始上下文实现。一个初始上下文是使用初始上下文工厂创建的。程序可以通过调用NamingManager.setInitialContextFactoryBuilder()来安装自己的构建器,以创建初始上下文工厂,从而覆盖框架使用的默认策略。InitialContextFactoryBuilder接口必须由这样的构建器实现。</target>
        </trans-unit>
        <trans-unit id="d098149f3977423197730ce483608b5d9c5ba323" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for different initial context implementations to be specified at runtime. The initial context is created using an &lt;em&gt;initial context factory&lt;/em&gt;. An initial context factory must implement the InitialContextFactory interface, which provides a method for creating instances of initial context that implement the Context interface. In addition, the factory class must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">JNDI框架允许在运行时指定不同的初始上下文实现。初始上下文是使用&lt;em&gt;初始上下文工厂&lt;/em&gt;创建的。初始上下文工厂必须实现InitialContextFactory接口，该接口提供了一种用于创建实现Context接口的初始上下文实例的方法。此外，工厂类必须是公共的，并且必须具有不接受任何参数的公共构造函数。</target>
        </trans-unit>
        <trans-unit id="b9064bba67a68203f58a597fa1fa3afbedec89f6" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;code&gt;object factories&lt;/code&gt;.</source>
          <target state="translated">JNDI框架允许通过 &lt;code&gt;object factories&lt;/code&gt; 动态加载对象实现。</target>
        </trans-unit>
        <trans-unit id="134c5f63e690609e9c6a657638ccd21e3550dca4" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to &lt;code&gt;Reference&lt;/code&gt;s, the printer &lt;code&gt;Reference&lt;/code&gt; could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup.</source>
          <target state="translated">JNDI框架允许通过&lt;em&gt;对象工厂&lt;/em&gt;动态加载对象实现。例如，当查找在名称空间中绑定的打印机时，如果打印服务将打印机名称绑定到 &lt;code&gt;Reference&lt;/code&gt; ，则可以使用打印机 &lt;code&gt;Reference&lt;/code&gt; 创建打印机对象，以便查找的调用者可以直接在打印机对象上进行操作查找后。</target>
        </trans-unit>
        <trans-unit id="f3b7acec5238c7d2dd7fa0082fb8db71d5d2e9ed" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup.</source>
          <target state="translated">JNDI框架允许通过&lt;em&gt;对象工厂&lt;/em&gt;动态加载对象实现。例如，当查找在名称空间中绑定的打印机时，如果打印服务将打印机名称绑定到引用，则可以使用打印机引用来创建打印机对象，以便查找的调用者可以在操作之后直接对打印机对象进行操作。查找。</target>
        </trans-unit>
        <trans-unit id="0f159102714c8eb7af6cff7ee4872dd30ee0cf55" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup. An ObjectFactory is responsible for creating objects of a specific type. JNDI uses a default policy for using and loading object factories. You can override this default policy by calling &lt;code&gt;NamingManager.setObjectFactoryBuilder()&lt;/code&gt; with an ObjectFactoryBuilder, which contains the program-defined way of creating/loading object factories. Any &lt;code&gt;ObjectFactoryBuilder&lt;/code&gt; implementation must implement this interface that for creating object factories.</source>
          <target state="translated">JNDI框架允许通过&lt;em&gt;对象工厂&lt;/em&gt;动态加载对象实现。例如，当查找在名称空间中绑定的打印机时，如果打印服务将打印机名称绑定到引用，则可以使用打印机引用来创建打印机对象，以便查找的调用者可以在操作之后直接对打印机对象进行操作。查找。 ObjectFactory负责创建特定类型的对象。 JNDI使用默认策略来使用和加载对象工厂。您可以通过使用ObjectFactoryBuilder 调用 &lt;code&gt;NamingManager.setObjectFactoryBuilder()&lt;/code&gt; 来覆盖此默认策略，该对象包含程序定义的创建/加载对象工厂的方式。任何 &lt;code&gt;ObjectFactoryBuilder&lt;/code&gt; 实现必须实现用于创建对象工厂的该接口。</target>
        </trans-unit>
        <trans-unit id="88db5d84ce039b71278336e8b1b44b578aa0d61d" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. See &lt;code&gt;ObjectFactory&lt;/code&gt; for details.</source>
          <target state="translated">JNDI框架允许通过&lt;em&gt;对象工厂&lt;/em&gt;动态加载对象实现。有关详细信息，请参见 &lt;code&gt;ObjectFactory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5669f05609b02ee4c44fdaa5adbcabc508864f50" translate="yes" xml:space="preserve">
          <source>The JNDI library will consult the provider resource file when determining the values of these properties. Properties other than these may be set in the provider resource file at the discretion of the service provider. The service provider's documentation should clearly state which properties are allowed; other properties in the file will be ignored.</source>
          <target state="translated">JNDI 库在确定这些属性的值时将参考提供者资源文件。除这些属性外,其他属性可由服务提供者酌情在提供者资源文件中设置。服务提供者的文件应该明确说明哪些属性是允许的;文件中的其他属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="bec69931581644a1ef0084216dc02cc47be425fa" translate="yes" xml:space="preserve">
          <source>The JNDI name of the resource. For field annotations, the default is the field name. For method annotations, the default is the JavaBeans property name corresponding to the method. For class annotations, there is no default and this must be specified.</source>
          <target state="translated">资源的JNDI名称。对于字段注解,默认为字段名。对于方法注解,默认是与方法相对应的 JavaBeans 属性名称。对于类注解,没有默认值,必须指定。</target>
        </trans-unit>
        <trans-unit id="edc24d0f37d47900732cfdcdc56bc8ec2f6044ca" translate="yes" xml:space="preserve">
          <source>The JPS API is designed to be used in Java profiles which do not support AWT.</source>
          <target state="translated">JPS API被设计用于不支持AWT的Java配置文件中。</target>
        </trans-unit>
        <trans-unit id="363b84f0385d00914c1240423dd0f5bb6b4ee6f6" translate="yes" xml:space="preserve">
          <source>The JRE data transfer implementation interprets the parameter &quot;class&quot; of a MIME type as &lt;b&gt;a representation class&lt;/b&gt;. The representation class reflects the class of the object being transferred. In other words, the representation class is the type of object returned by &lt;a href=&quot;transferable#getTransferData(java.awt.datatransfer.DataFlavor)&quot;&gt;&lt;code&gt;Transferable.getTransferData(java.awt.datatransfer.DataFlavor)&lt;/code&gt;&lt;/a&gt;. For example, the MIME type of &lt;a href=&quot;#imageFlavor&quot;&gt;&lt;code&gt;imageFlavor&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;image/x-java-image;class=java.awt.Image&quot;&lt;/code&gt;, the primary type is &lt;code&gt;image&lt;/code&gt;, the subtype is &lt;code&gt;x-java-image&lt;/code&gt;, and the representation class is &lt;code&gt;java.awt.Image&lt;/code&gt;. When &lt;code&gt;getTransferData&lt;/code&gt; is invoked with a &lt;code&gt;DataFlavor&lt;/code&gt; of &lt;code&gt;imageFlavor&lt;/code&gt;, an instance of &lt;code&gt;java.awt.Image&lt;/code&gt; is returned. It's important to note that &lt;code&gt;DataFlavor&lt;/code&gt; does no error checking against the representation class. It is up to consumers of &lt;code&gt;DataFlavor&lt;/code&gt;, such as &lt;code&gt;Transferable&lt;/code&gt;, to honor the representation class.</source>
          <target state="translated">JRE数据传输实现将MIME类型的参数&amp;ldquo;类&amp;rdquo;解释为&lt;b&gt;表示形式类&lt;/b&gt;。表示形式类反映了要传输的对象的类。换句话说，表示形式类是&lt;a href=&quot;transferable#getTransferData(java.awt.datatransfer.DataFlavor)&quot;&gt; &lt;code&gt;Transferable.getTransferData(java.awt.datatransfer.DataFlavor)&lt;/code&gt; &lt;/a&gt;返回的对象的类型。例如，&lt;a href=&quot;#imageFlavor&quot;&gt; &lt;code&gt;imageFlavor&lt;/code&gt; &lt;/a&gt;的MIME类型为 &lt;code&gt;&quot;image/x-java-image;class=java.awt.Image&quot;&lt;/code&gt; ，主要类型为 &lt;code&gt;image&lt;/code&gt; ，子类型为 &lt;code&gt;x-java-image&lt;/code&gt; ，表示形式为 &lt;code&gt;java.awt.Image&lt;/code&gt; 。当 &lt;code&gt;getTransferData&lt;/code&gt; 被调用，一个 &lt;code&gt;DataFlavor&lt;/code&gt; 的 &lt;code&gt;imageFlavor&lt;/code&gt; ，返回 &lt;code&gt;java.awt.Image&lt;/code&gt; 的实例。重要的是要注意， &lt;code&gt;DataFlavor&lt;/code&gt; 不会对表示形式类进行错误检查。 &lt;code&gt;DataFlavor&lt;/code&gt; 的使用者（如 &lt;code&gt;Transferable&lt;/code&gt; ）必须尊重表示形式类。</target>
        </trans-unit>
        <trans-unit id="17a160f7d45e8174e9c03f104bfe115657a97de9" translate="yes" xml:space="preserve">
          <source>The JScrollPane component creates scrollbars (by default) that override this method and delegate to the viewports Scrollable view, if it has one. The Scrollable interface provides a more specialized version of this method.</source>
          <target state="translated">JScrollPane组件创建的滚动条(默认情况下)覆盖了这个方法,并委托给viewports的Scrollable视图(如果它有的话)。Scrollable接口提供了这个方法的一个更专业的版本。</target>
        </trans-unit>
        <trans-unit id="e1ae955d51e9234dabbd5ff6619ba90b3d308714" translate="yes" xml:space="preserve">
          <source>The JShell evaluation state engine.</source>
          <target state="translated">JShell评估状态引擎。</target>
        </trans-unit>
        <trans-unit id="808c7d2879dd45bb29a0e22373995ee648166124" translate="yes" xml:space="preserve">
          <source>The JShell evaluation state engine. This is the central class in the JShell API. A &lt;code&gt;JShell&lt;/code&gt; instance holds the evolving compilation and execution state. The state is changed with the instance methods &lt;a href=&quot;#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#drop(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;drop(Snippet)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addToClasspath(java.lang.String)&quot;&gt;&lt;code&gt;addToClasspath(String)&lt;/code&gt;&lt;/a&gt;. The majority of methods query the state. A &lt;code&gt;JShell&lt;/code&gt; instance also allows registering for events with &lt;a href=&quot;#onSnippetEvent(java.util.function.Consumer)&quot;&gt;&lt;code&gt;onSnippetEvent(Consumer)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#onShutdown(java.util.function.Consumer)&quot;&gt;&lt;code&gt;onShutdown(Consumer)&lt;/code&gt;&lt;/a&gt;, which are unregistered with &lt;a href=&quot;#unsubscribe(jdk.jshell.JShell.Subscription)&quot;&gt;&lt;code&gt;unsubscribe(Subscription)&lt;/code&gt;&lt;/a&gt;. Access to the source analysis utilities is via &lt;a href=&quot;#sourceCodeAnalysis()&quot;&gt;&lt;code&gt;sourceCodeAnalysis()&lt;/code&gt;&lt;/a&gt;. When complete the instance should be closed to free resources -- &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JShell评估状态引擎。这是JShell API中的中心类。一个 &lt;code&gt;JShell&lt;/code&gt; 实例拥有不断发展的编译和执行状态。通过实例方法&lt;a href=&quot;#eval(java.lang.String)&quot;&gt; &lt;code&gt;eval(String)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#drop(jdk.jshell.Snippet)&quot;&gt; &lt;code&gt;drop(Snippet)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#addToClasspath(java.lang.String)&quot;&gt; &lt;code&gt;addToClasspath(String)&lt;/code&gt; &lt;/a&gt;更改状态。大多数方法查询状态。一个 &lt;code&gt;JShell&lt;/code&gt; 情况下也允许注册与事件&lt;a href=&quot;#onSnippetEvent(java.util.function.Consumer)&quot;&gt; &lt;code&gt;onSnippetEvent(Consumer)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#onShutdown(java.util.function.Consumer)&quot;&gt; &lt;code&gt;onShutdown(Consumer)&lt;/code&gt; &lt;/a&gt;，这是与注销&lt;a href=&quot;#unsubscribe(jdk.jshell.JShell.Subscription)&quot;&gt; &lt;code&gt;unsubscribe(Subscription)&lt;/code&gt; &lt;/a&gt;。通过&lt;a href=&quot;#sourceCodeAnalysis()&quot;&gt; &lt;code&gt;sourceCodeAnalysis()&lt;/code&gt; &lt;/a&gt;访问源分析实用程序。完成后，实例应关闭以释放资源&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8578472fe170c11efcaca36252367b026245c2be" translate="yes" xml:space="preserve">
          <source>The JVM bytecode format supports immediate constants of the classes &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JVM字节码格式支持类&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; 的&lt;/a&gt;立即常量。</target>
        </trans-unit>
        <trans-unit id="423700bf3f40eb8f7ae2196876409f2568dcd9ca" translate="yes" xml:space="preserve">
          <source>The JVM imposes a similar requirement on &lt;code&gt;invokespecial&lt;/code&gt; instruction, that the receiver argument must match both the resolved method &lt;em&gt;and&lt;/em&gt; the current class. Again, this requirement is enforced by narrowing the type of the leading parameter to the resulting method handle. (See the Java Virtual Machine Specification, section 4.10.1.9.)</source>
          <target state="translated">JVM对 &lt;code&gt;invokespecial&lt;/code&gt; 指令施加了类似的要求，即接收器参数必须与解析的方法&lt;em&gt;和&lt;/em&gt;当前类都匹配。同样，通过将前导参数的类型缩小到结果方法句柄来强制执行此要求。（请参阅《 Java虚拟机规范》第4.10.1.9节。）</target>
        </trans-unit>
        <trans-unit id="5c33c025595843b85ed46d8fb1228a2c6476481b" translate="yes" xml:space="preserve">
          <source>The JVM imposes a similar requirement on &lt;code&gt;invokespecial&lt;/code&gt; instruction, that the receiver argument must match both the resolved method &lt;em&gt;and&lt;/em&gt; the current class. Again, this requirement is enforced by narrowing the type of the leading parameter to the resulting method handle. (See the Java Virtual Machine Specification, section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.10.1.9&quot;&gt;4.10.1.9&lt;/a&gt;.)</source>
          <target state="translated">JVM对 &lt;code&gt;invokespecial&lt;/code&gt; 指令提出了类似的要求，即接收器参数必须与解析的方法&lt;em&gt;和&lt;/em&gt;当前类都匹配。同样，通过将前导参数的类型缩小到结果方法句柄来强制执行此要求。（请参阅Java虚拟机规范，第&lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.10.1.9&quot;&gt;4.10.1.9&lt;/a&gt;节。）</target>
        </trans-unit>
        <trans-unit id="f6a937822298d3770df670d2d33f12a835018bdf" translate="yes" xml:space="preserve">
          <source>The JVM imposes on all methods and constructors of any kind an absolute limit of 255 stacked arguments. This limit can appear more restrictive in certain cases:</source>
          <target state="translated">JVM对所有方法和任何类型的构造函数规定了255个堆叠参数的绝对限制。在某些情况下,这个限制会显得更加严格。</target>
        </trans-unit>
        <trans-unit id="dc6a5c598e3c5bccd4ab59217eeb5725b65103d3" translate="yes" xml:space="preserve">
          <source>The JVM represents constructors and static initializer blocks as internal methods with special names (&lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&amp;lt;clinit&amp;gt;&quot;&lt;/code&gt;). The internal syntax of invocation instructions allows them to refer to such internal methods as if they were normal methods, but the JVM bytecode verifier rejects them. A lookup of such an internal method will produce a &lt;code&gt;NoSuchMethodException&lt;/code&gt;.</source>
          <target state="translated">JVM将构造函数和静态初始化程序块表示为具有特殊名称（ &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;&amp;lt;clinit&amp;gt;&quot;&lt;/code&gt; ）的内部方法。调用指令的内部语法允许它们像使用普通方法一样引用此类内部方法，但是JVM字节码验证程序拒绝它们。查找此类内部方法将产生 &lt;code&gt;NoSuchMethodException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bed2dbd7bc1a0a64894245adfbe5487e3761dab" translate="yes" xml:space="preserve">
          <source>The Japanese Imperial calendar system is the same as the ISO calendar system apart from the era-based year numbering. The proleptic-year is defined to be equal to the ISO proleptic-year.</source>
          <target state="translated">日本皇室历法与国际标准化组织的历法相同,只是年号以年代为基础。闰年被定义为等于国际标准化组织的闰年。</target>
        </trans-unit>
        <trans-unit id="1377cea6a56d5ed563cbb1106ccb49deee8306eb" translate="yes" xml:space="preserve">
          <source>The Japanese Imperial calendar system.</source>
          <target state="translated">日本皇室的历法制度。</target>
        </trans-unit>
        <trans-unit id="7564ca9cd9ffac61a50b36479cc4d2f52a3b5c1f" translate="yes" xml:space="preserve">
          <source>The Japanese calendar system has multiple eras defined by &lt;a href=&quot;japaneseera&quot;&gt;&lt;code&gt;JapaneseEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日本日历系统具有&lt;a href=&quot;japaneseera&quot;&gt; &lt;code&gt;JapaneseEra&lt;/code&gt; &lt;/a&gt;定义的多个时代。</target>
        </trans-unit>
        <trans-unit id="04fc513b47cf3ef30849ce129084aceb11af3867" translate="yes" xml:space="preserve">
          <source>The Japanese government defines the official name and start date of each era. Eras are consecutive and their date ranges do not overlap, so the end date of one era is always the day before the start date of the next era.</source>
          <target state="translated">日本政府规定了每个时代的正式名称和开始日期。年代是连续的,它们的日期范围不重叠,所以一个时代的结束日期总是下一个时代开始日期的前一天。</target>
        </trans-unit>
        <trans-unit id="265e051cf5be43bb91edb907b6aaa5aa90a2b761" translate="yes" xml:space="preserve">
          <source>The Japanese month and day-of-month are the same as those in the ISO calendar system. They are not reset when the era changes. For example:</source>
          <target state="translated">日本的月份和月份日与ISO日历系统中的月份和月份日相同。当时代发生变化时,它们不会被重置。例如:</target>
        </trans-unit>
        <trans-unit id="9a132e736768e81687dffdd4d971dcc6de9796ad" translate="yes" xml:space="preserve">
          <source>The Japanese proleptic year, month and day-of-month are the same as those in the ISO calendar system. They are not reset when the era changes.</source>
          <target state="translated">日本的年、月、日与ISO历法中的年、月、日相同。当时代发生变化时,它们不会被重置。</target>
        </trans-unit>
        <trans-unit id="ab077295795f59b02a71b197389bd1772b628d47" translate="yes" xml:space="preserve">
          <source>The Java 2D(tm) (Java(tm) 2 platform) API supports antialiasing renderers. A pen with a width of one pixel does not need to fall completely on pixel N as opposed to pixel N+1. The pen can fall partially on both pixels. It is not necessary to choose a bias direction for a wide pen since the blending that occurs along the pen traversal edges makes the sub-pixel position of the pen visible to the user. On the other hand, when antialiasing is turned off by setting the &lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint key to the &lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_OFF&quot;&gt;&lt;code&gt;VALUE_ANTIALIAS_OFF&lt;/code&gt;&lt;/a&gt; hint value, the renderer might need to apply a bias to determine which pixel to modify when the pen is straddling a pixel boundary, such as when it is drawn along an integer coordinate in device space. While the capabilities of an antialiasing renderer make it no longer necessary for the rendering model to specify a bias for the pen, it is desirable for the antialiasing and non-antialiasing renderers to perform similarly for the common cases of drawing one-pixel wide horizontal and vertical lines on the screen. To ensure that turning on antialiasing by setting the &lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint key to &lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_ON&quot;&gt;&lt;code&gt;VALUE_ANTIALIAS_ON&lt;/code&gt;&lt;/a&gt; does not cause such lines to suddenly become twice as wide and half as opaque, it is desirable to have the model specify a path for such lines so that they completely cover a particular set of pixels to help increase their crispness.</source>
          <target state="translated">Java 2D（tm）（Java（tm）2平台）API支持抗锯齿渲染器。与像素N + 1相比，宽度为一个像素的笔无需完全落在像素N上。笔可能会部分落在两个像素上。不必为宽笔选择偏斜方向，因为沿笔遍历边缘发生的混合会使用户看到笔的子像素位置。另一方面，通过将&lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt;提示键设置为&lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_OFF&quot;&gt; &lt;code&gt;VALUE_ANTIALIAS_OFF&lt;/code&gt; &lt;/a&gt;来关闭抗锯齿功能时提示值时，渲染器可能需要施加偏差来确定当笔跨越像素边界时（例如，沿着设备空间中的整数坐标绘制时）要修改哪个像素。虽然抗锯齿渲染器的功能使渲染模型不再需要为笔指定偏差，但对于在水平方向绘制一个像素宽的像素时，抗锯齿渲染器和非抗锯齿渲染器还是需要执行类似的操作。屏幕上的垂直线。通过将&lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt;提示键设置为&lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_ON&quot;&gt; &lt;code&gt;VALUE_ANTIALIAS_ON&lt;/code&gt; ,&lt;/a&gt;确保打开抗锯齿功能 不会导致这些线条突然变成不透明的两倍和一半，因此希望模型为这些线条指定一条路径，以使它们完全覆盖特定的像素集，以帮助增加其清晰度。</target>
        </trans-unit>
        <trans-unit id="0fbc55fe3353d168165d01c77ce52a7169349fae" translate="yes" xml:space="preserve">
          <source>The Java AWT Native Interface (JAWT)</source>
          <target state="translated">Java AWT本地接口(JAWT)</target>
        </trans-unit>
        <trans-unit id="3db037c857875b9fa1012171be8083c44281dea6" translate="yes" xml:space="preserve">
          <source>The Java Accessibility API package consists of 8 Java programming language interfaces, and 6 Java programming language classes. These are described below.</source>
          <target state="translated">Java Accessibility API 包由 8 个 Java 编程语言接口和 6 个 Java 编程语言类组成。下文将介绍这些接口和类。</target>
        </trans-unit>
        <trans-unit id="ec9ce57118dd5eeebc30267a59845414305f39c4" translate="yes" xml:space="preserve">
          <source>The Java Debug Interface (JDI) is a high level Java API providing information useful for debuggers and similar systems needing access to the running state of a (usually remote) virtual machine.</source>
          <target state="translated">Java调试接口(JDI)是一个高级的Java API,它为需要访问(通常是远程)虚拟机运行状态的调试器和类似系统提供有用的信息。</target>
        </trans-unit>
        <trans-unit id="c7cd6bf18e5d512749050266dad5e8ad183ff281" translate="yes" xml:space="preserve">
          <source>The Java Development Kit (JDK) APIs are specific to the JDK and will not necessarily be available in all implementations of the Java SE Platform. These APIs are in modules whose names start with &lt;code&gt;jdk&lt;/code&gt;.</source>
          <target state="translated">Java开发工具包（JDK）API是JDK特有的，不一定在Java SE平台的所有实现中都可用。这些API在名称以 &lt;code&gt;jdk&lt;/code&gt; 开头的模块中。</target>
        </trans-unit>
        <trans-unit id="61602e7596e12b632597fd4f988db4b318fd0d87" translate="yes" xml:space="preserve">
          <source>The Java Language Specification</source>
          <target state="translated">Java语言规范</target>
        </trans-unit>
        <trans-unit id="ebc6437d60221359ee032cd72734c3e893152ecb" translate="yes" xml:space="preserve">
          <source>The Java Language Specification, First Edition</source>
          <target state="translated">Java语言规范,第一版</target>
        </trans-unit>
        <trans-unit id="c6d7523255fa435c106227002fd7691eedcdb254" translate="yes" xml:space="preserve">
          <source>The Java Language Specification, Second Edition</source>
          <target state="translated">Java语言规范,第二版</target>
        </trans-unit>
        <trans-unit id="3f4704dd2a636040f03c24e57dbdac4f22ec8180" translate="yes" xml:space="preserve">
          <source>The Java Language Specification, Third Edition</source>
          <target state="translated">Java语言规范,第三版</target>
        </trans-unit>
        <trans-unit id="bbe92060513e13f1787c56819355245bef3c94ab" translate="yes" xml:space="preserve">
          <source>The Java Look and Feel, otherwise known as Metal.</source>
          <target state="translated">Java的外观和感觉,也就是所谓的金属。</target>
        </trans-unit>
        <trans-unit id="05622f717f9f313a62126060521423008c4d1058" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX&amp;trade;) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="translated">Java管理扩展（JMX&amp;trade;）API是用于管理和监视的标准API。典型用途包括：</target>
        </trans-unit>
        <trans-unit id="3d4ddff1e13e642d6bc1fae73d9cb1b5769ed1c8" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="translated">Java管理扩展(JMX)API是一个管理和监控的标准API。典型用途包括:</target>
        </trans-unit>
        <trans-unit id="37d13fecff6728378da832d10b9051c944390c97" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX&lt;sup&gt;TM&lt;/sup&gt;) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="translated">Java管理扩展（JMX &lt;sup&gt;TM&lt;/sup&gt;）API是用于管理和监视的标准API。典型用途包括：</target>
        </trans-unit>
        <trans-unit id="d78753332522c3ae6721300363a5c6096e665327" translate="yes" xml:space="preserve">
          <source>The Java Platform distinguishes between two kinds of fonts: &lt;em&gt;physical&lt;/em&gt; fonts and &lt;em&gt;logical&lt;/em&gt; fonts.</source>
          <target state="translated">Java平台区分两种字体：&lt;em&gt;物理&lt;/em&gt;字体和&lt;em&gt;逻辑&lt;/em&gt;字体。</target>
        </trans-unit>
        <trans-unit id="8bef35235f701eb6de58ba31cfe59d2bb33aa8ff" translate="yes" xml:space="preserve">
          <source>The Java Platform provides a number of classes that perform locale-sensitive operations. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class formats numbers, currency, and percentages in a locale-sensitive manner. Classes such as &lt;code&gt;NumberFormat&lt;/code&gt; have several convenience methods for creating a default object of that type. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class provides these three convenience methods for creating a default &lt;code&gt;NumberFormat&lt;/code&gt; object:</source>
          <target state="translated">Java平台提供了许多执行对语言环境敏感的操作的类。例如， &lt;code&gt;NumberFormat&lt;/code&gt; 类以对语言环境敏感的方式格式化数字，货币和百分比。诸如 &lt;code&gt;NumberFormat&lt;/code&gt; 之类的类具有几种方便的方法来创建该类型的默认对象。例如， &lt;code&gt;NumberFormat&lt;/code&gt; 类提供了以下三种方便的方法来创建默认的 &lt;code&gt;NumberFormat&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="3b60f629f49f10f4985e6a720af54abf514bac30" translate="yes" xml:space="preserve">
          <source>The Java Platform provides three specialized subclasses of &lt;code&gt;Format&lt;/code&gt;-- &lt;code&gt;DateFormat&lt;/code&gt;, &lt;code&gt;MessageFormat&lt;/code&gt;, and &lt;code&gt;NumberFormat&lt;/code&gt;--for formatting dates, messages, and numbers, respectively.</source>
          <target state="translated">Java平台提供的三个专业小类 &lt;code&gt;Format&lt;/code&gt; - &lt;code&gt;DateFormat&lt;/code&gt; ， &lt;code&gt;MessageFormat&lt;/code&gt; 和 &lt;code&gt;NumberFormat&lt;/code&gt; 的分别-用于格式化日期，消息和数字，。</target>
        </trans-unit>
        <trans-unit id="03ea0cad9aef11b637a3137ff4122043f3493aef" translate="yes" xml:space="preserve">
          <source>The Java Platform provides two subclasses of &lt;code&gt;ResourceBundle&lt;/code&gt;, &lt;code&gt;ListResourceBundle&lt;/code&gt; and &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, that provide a fairly simple way to create resources. As you saw briefly in a previous example, &lt;code&gt;ListResourceBundle&lt;/code&gt; manages its resource as a list of key/value pairs. &lt;code&gt;PropertyResourceBundle&lt;/code&gt; uses a properties file to manage its resources.</source>
          <target state="translated">Java平台提供的两个子类 &lt;code&gt;ResourceBundle&lt;/code&gt; ， &lt;code&gt;ListResourceBundle&lt;/code&gt; 的和 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 的，这提供了一个相当简单的方法来创建资源。正如您在前面的示例中简要看到的那样， &lt;code&gt;ListResourceBundle&lt;/code&gt; 将其资源作为键/值对的列表进行管理。 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 使用属性文件来管理其资源。</target>
        </trans-unit>
        <trans-unit id="2228edce994b6e3417cf42c80f9c126b6f466b3b" translate="yes" xml:space="preserve">
          <source>The Java Platform supports input methods that have been developed in the Java programming language, using the interfaces in the &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.awt.im.spi&lt;/code&gt;&lt;/a&gt; package, which can be made available by adding them to the application's class path. Implementations may also support using the native input methods of the platforms they run on; however, not all platforms and locales provide input methods. Keyboard layouts are provided by the host platform.</source>
          <target state="translated">Java平台使用&lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.awt.im.spi&lt;/code&gt; &lt;/a&gt;包中的接口来支持使用Java编程语言开发的输入法，可以通过将它们添加到应用程序的类路径中来使它们可用。实施还可以支持使用它们在其上运行的平台的本机输入方法。但是，并非所有平台和语言环境都提供输入方法。键盘布局由主机平台提供。</target>
        </trans-unit>
        <trans-unit id="563105f61580384f40b3157faa1d0806aadcdba7" translate="yes" xml:space="preserve">
          <source>The Java Platform, Standard Edition (Java SE) APIs define the core Java platform for general-purpose computing. These APIs are in modules whose names start with &lt;code&gt;java&lt;/code&gt;.</source>
          <target state="translated">Java平台标准版（Java SE）API为通用计算定义了核心Java平台。这些API在名称以 &lt;code&gt;java&lt;/code&gt; 开头的模块中。</target>
        </trans-unit>
        <trans-unit id="8f239cc990f3edd2c4e5449b541498920cb9d284" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines a group of standard attribute classes modeled upon the attributes in the Internet Printing Protocol (IPP) version 1.1. The standard attribute classes are in the subpackage &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; to keep the actual attribute classes conceptually separate from the generic apparatus defined in package &lt;code&gt;javax.print.attribute&lt;/code&gt;.</source>
          <target state="translated">Java Print Service API定义了一组以Internet打印协议（IPP）1.1版中的属性为模型的标准属性类。标准属性类位于子包 &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中,以使实际属性类在概念上与包 &lt;code&gt;javax.print.attribute&lt;/code&gt; 中定义的通用设备分开。</target>
        </trans-unit>
        <trans-unit id="94f66170e9f1f394a5254a9fe89af973c28cd26f" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines a group of standard attribute classes modeled upon the attributes in the Internet Printing Protocol (IPP) version 1.1. The standard attribute classes are in the subpackage javax.print.attribute.standard to keep the actual attribute classes conceptually separate from the generic apparatus defined in package javax.print.attribute.</source>
          <target state="translated">Java打印服务API定义了一组标准属性类,它们以Internet打印协议(IPP)1.1版中的属性为模型。标准属性类位于子包javax.print.attribute.standard中,以保持实际属性类与包javax.print.attribute中定义的通用设备在概念上的分离。</target>
        </trans-unit>
        <trans-unit id="a818f0937d6870054c9657fd1853dbbf7260285b" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines these different kinds of attributes with five subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;:</source>
          <target state="translated">Java Print Service API通过 &lt;code&gt;Attribute&lt;/code&gt; 的五个子接口定义了这些不同种类的属性：</target>
        </trans-unit>
        <trans-unit id="4a4823caa7194efcb9ec79cc33455ea92b11d4af" translate="yes" xml:space="preserve">
          <source>The Java Print Service API does not define any mandatorily supported &lt;code&gt;DocFlavors&lt;/code&gt;. However, here are some examples of MIME types that a Java Print Service instance might support for client formatted print data. Nested classes inside class &lt;code&gt;DocFlavor&lt;/code&gt; declare predefined static constant &lt;code&gt;DocFlavor&lt;/code&gt; objects for these example doc flavors; class &lt;code&gt;DocFlavor&lt;/code&gt;'s constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">Java Print Service API并未定义任何强制支持的 &lt;code&gt;DocFlavors&lt;/code&gt; 。但是，以下是Java Print Service实例可能支持客户端格式化的打印数据的MIME类型的一些示例。在 &lt;code&gt;DocFlavor&lt;/code&gt; 类中的嵌套类为这些示例DocFlavor声明了预定义的静态常量 &lt;code&gt;DocFlavor&lt;/code&gt; 对象。 &lt;code&gt;DocFlavor&lt;/code&gt; 类的构造函数可用于创建任意doc样式。</target>
        </trans-unit>
        <trans-unit id="fe3bd743981c387b2400e5d9b97f685293d95022" translate="yes" xml:space="preserve">
          <source>The Java Print Service API does not define any mandatorily supported DocFlavors. However, here are some examples of MIME types that a Java Print Service instance might support for client formatted print data. Nested classes inside class DocFlavor declare predefined static constant DocFlavor objects for these example doc flavors; class DocFlavor's constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">Java打印服务API没有定义任何强制支持的DocFlavors,但以下是Java打印服务实例可能支持的一些MIME类型,用于客户端格式化打印数据。然而,以下是Java打印服务实例可能为客户端格式化打印数据支持的MIME类型的一些示例。在类DocFlavor中的嵌套类为这些示例的DocFlavor对象声明了预定义的静态常量DocFlavor对象;类DocFlavor的构造函数可用于创建任意的Doc风味。</target>
        </trans-unit>
        <trans-unit id="65c3c2c1fe707b0a8b3bdeea8d3461a62fcf7c49" translate="yes" xml:space="preserve">
          <source>The Java Print Service API is designed so that vendors can:</source>
          <target state="translated">Java打印服务API的设计是为了让厂商可以。</target>
        </trans-unit>
        <trans-unit id="3f34c755601f30797b5c5b7d5b48474498065dd9" translate="yes" xml:space="preserve">
          <source>The Java Print Service API provides four specializations of an attribute set that are restricted to contain just one of the four kinds of attributes, as discussed in the &lt;a href=&quot;#role&quot;&gt;Attribute Roles&lt;/a&gt; section:</source>
          <target state="translated">Java Print Service API提供了属性集的四个专业化，这些属性集被限制为仅包含四种属性之一，如&amp;ldquo; &lt;a href=&quot;#role&quot;&gt;属性角色&amp;rdquo;&lt;/a&gt;部分所述：</target>
        </trans-unit>
        <trans-unit id="5e75e4ce71063f5deab60042bab1ecda724688fe" translate="yes" xml:space="preserve">
          <source>The Java SE 11 Platform uses character information from version 10.0 of the Unicode Standard, with an extension. The Java SE 11 Platform allows an implementation of class &lt;code&gt;Character&lt;/code&gt; to use the Japanese Era code point, &lt;code&gt;U+32FF&lt;/code&gt;, from the first version of the Unicode Standard after 10.0 that assigns the code point. Consequently, the behavior of fields and methods of class &lt;code&gt;Character&lt;/code&gt; may vary across implementations of the Java SE 11 Platform when processing the aforementioned code point ( outside of version 10.0 ), except for the following methods that define Java identifiers: &lt;a href=&quot;#isJavaIdentifierStart(int)&quot;&gt;&lt;code&gt;isJavaIdentifierStart(int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#isJavaIdentifierStart(char)&quot;&gt;&lt;code&gt;isJavaIdentifierStart(char)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#isJavaIdentifierPart(int)&quot;&gt;&lt;code&gt;isJavaIdentifierPart(int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#isJavaIdentifierPart(char)&quot;&gt;&lt;code&gt;isJavaIdentifierPart(char)&lt;/code&gt;&lt;/a&gt;. Code points in Java identifiers must be drawn from version 10.0 of the Unicode Standard.</source>
          <target state="translated">Java SE 11平台使用Unicode标准10.0版及其扩展名中的字符信息。Java SE 11平台允许 &lt;code&gt;Character&lt;/code&gt; 类的实现使用分配了代码点的10.0之后的Unicode标准第一个版本中的日语时代代码点 &lt;code&gt;U+32FF&lt;/code&gt; 。因此，字段和类的方法的行为 &lt;code&gt;Character&lt;/code&gt; 可以处理上述的代码点（10.0版本以外），当跨越Java SE 11平台的实现方式而变化，除了定义的Java标识符下面的方法：&lt;a href=&quot;#isJavaIdentifierStart(int)&quot;&gt; &lt;code&gt;isJavaIdentifierStart(int)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#isJavaIdentifierStart(char)&quot;&gt; &lt;code&gt;isJavaIdentifierStart(char)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#isJavaIdentifierPart(int)&quot;&gt; &lt;code&gt;isJavaIdentifierPart(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#isJavaIdentifierPart(char)&quot;&gt; &lt;code&gt;isJavaIdentifierPart(char)&lt;/code&gt; &lt;/a&gt;。Java标识符中的代码点必须来自Unicode标准10.0版。</target>
        </trans-unit>
        <trans-unit id="44ab385c7dd8fa1da3c53b3392398a85953402b3" translate="yes" xml:space="preserve">
          <source>The Java SE Platform supports all eras defined by the Japanese government, beginning with the Meiji era. Each era is identified in the Platform by an integer value and a name. The &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; methods may be used to obtain a singleton instance of &lt;code&gt;JapaneseEra&lt;/code&gt; for each era. The &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method returns the singleton instances of all supported eras.</source>
          <target state="translated">从明治时代开始，Java SE平台支持日本政府定义的所有时代。平台中的每个时代都由一个整数值和一个名称来标识。的&lt;a href=&quot;#of(int)&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;方法可用于获得的单一实例 &lt;code&gt;JapaneseEra&lt;/code&gt; 每个时代。的&lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;方法返回所有支持时代的单实例。</target>
        </trans-unit>
        <trans-unit id="afb3e24894a90acb5b20ffe967cda4ac6a0179f2" translate="yes" xml:space="preserve">
          <source>The Java SE Platform supports all eras defined by the Japanese government, beginning with the Meiji era. Each era is identified in the Platform by an integer value and a name. The &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; methods may be used to obtain a singleton instance of JapaneseEra for each era. The &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method returns the singleton instances of all supported eras.</source>
          <target state="translated">从明治时代开始，Java SE平台支持日本政府定义的所有时代。平台中的每个时代都由一个整数值和一个名称来标识。的&lt;a href=&quot;#of(int)&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;方法可用于获得JapaneseEra的单一实例为每个时代。的&lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;方法返回所有支持时代的单实例。</target>
        </trans-unit>
        <trans-unit id="020b92794f4c93bc0ed4d9763a4e104a73b9e2f4" translate="yes" xml:space="preserve">
          <source>The Java SQL framework allows for multiple database drivers.</source>
          <target state="translated">Java SQL框架允许多个数据库驱动程序。</target>
        </trans-unit>
        <trans-unit id="a77beb7b7668d78be82a4d8cfa6760cf65edf7a3" translate="yes" xml:space="preserve">
          <source>The Java Series book published by Addison-Wesley Longman provides detailed information about the classes and interfaces in the &lt;code&gt;javax.sql&lt;/code&gt; package:</source>
          <target state="translated">Addison-Wesley Longman出版的Java系列书籍提供了有关 &lt;code&gt;javax.sql&lt;/code&gt; 包中的类和接口的详细信息：</target>
        </trans-unit>
        <trans-unit id="4cea0620c1bef0b99a18c809ce3bab655ecb274b" translate="yes" xml:space="preserve">
          <source>The Java Sound Tutorial</source>
          <target state="translated">Java声音教程</target>
        </trans-unit>
        <trans-unit id="c2715c77dd34c70665dfad2f1923e173e786e209" translate="yes" xml:space="preserve">
          <source>The Java Time-Scale divides each calendar day into exactly 86400 subdivisions, known as seconds. These seconds may differ from the SI second. It closely matches the de facto international civil time scale, the definition of which changes from time to time.</source>
          <target state="translated">Java 时标将每个日历日精确地划分为 86400 个小节,称为秒。这些秒可能与SI秒不同。它与事实上的国际民用时标非常吻合,而国际民用时标的定义会不时变化。</target>
        </trans-unit>
        <trans-unit id="4bde9066215b58dffb03e10c8882b75db84e87a4" translate="yes" xml:space="preserve">
          <source>The Java Time-Scale has slightly different definitions for different segments of the time-line, each based on the consensus international time scale that is used as the basis for civil time. Whenever the internationally-agreed time scale is modified or replaced, a new segment of the Java Time-Scale must be defined for it. Each segment must meet these requirements:</source>
          <target state="translated">Java时标对时间线的不同部分有略微不同的定义,每个定义都以作为民用时间基础的协商一致的国际时标为基础。每当国际商定的时间尺度被修改或替换时,必须为其定义一个新的Java时间尺度段。每一段必须符合这些要求。</target>
        </trans-unit>
        <trans-unit id="f78637fddaa4e53e279355beabee4458db283b36" translate="yes" xml:space="preserve">
          <source>The Java Tutorial</source>
          <target state="translated">Java教程</target>
        </trans-unit>
        <trans-unit id="4600970ab5dcc28d471a34b69880d44724af7c9c" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine Specification</source>
          <target state="translated">Java虚拟机规范</target>
        </trans-unit>
        <trans-unit id="5e6b0a63803973c77139670d0df2b4f4878bdba5" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine marks &lt;code&gt;L&lt;/code&gt; as the defining class loader of &lt;code&gt;C&lt;/code&gt;, but no class loader is recorded as an initiating class loader of &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">Java虚拟机将 &lt;code&gt;L&lt;/code&gt; 标记为 &lt;code&gt;C&lt;/code&gt; 的定义类加载器，但没有任何类加载器记录为 &lt;code&gt;C&lt;/code&gt; 的启动类加载器。</target>
        </trans-unit>
        <trans-unit id="e3cf148b298a0b996efd7f97bd7f2e6174fda315" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified.</source>
          <target state="translated">Java虚拟机在启动时根据主机环境设置默认的locale,如果没有明确指定locale,它被许多本地敏感的方法使用。如果没有明确指定locale,它被许多本地敏感的方法使用。</target>
        </trans-unit>
        <trans-unit id="54550db269bf7cd9cb4b43e4d04a89f68d9ad806" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the &lt;a href=&quot;#setDefault(java.util.Locale)&quot;&gt;&lt;code&gt;setDefault&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机将在启动期间根据主机环境设置默认语言环境。如果未明确指定语言环境，则许多语言环境敏感的方法都会使用它。可以使用&lt;a href=&quot;#setDefault(java.util.Locale)&quot;&gt; &lt;code&gt;setDefault&lt;/code&gt; &lt;/a&gt;方法更改它。</target>
        </trans-unit>
        <trans-unit id="d9d7a4ea102a2331058fd720ef77be5d28603b6b" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the &lt;a href=&quot;locale#setDefault-java.util.Locale-&quot;&gt;&lt;code&gt;setDefault&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机将在启动期间根据主机环境设置默认语言环境。如果未明确指定语言环境，则许多语言环境敏感方法都会使用它。可以使用&lt;a href=&quot;locale#setDefault-java.util.Locale-&quot;&gt; &lt;code&gt;setDefault&lt;/code&gt; &lt;/a&gt;方法更改它。</target>
        </trans-unit>
        <trans-unit id="935b4a63d6ee5db34b9d75a511cfdfab0947e278" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the setDefault(Locale.Category, Locale) method.</source>
          <target state="translated">Java虚拟机在启动时根据主机环境设置默认的locale,如果没有明确指定locale,它被许多本地敏感的方法使用。如果没有明确指定locale,许多本地敏感的方法都会使用它。可以使用setDefault(Locale.Category,Locale)方法更改它。</target>
        </trans-unit>
        <trans-unit id="f5d4bfdb8b77d90d9d3b5f96ac809bfa715ae313" translate="yes" xml:space="preserve">
          <source>The Java class name of composite data values this composite type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;CompositeData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">该复合类型表示的复合数据值的Ja​​va类名称（即，由&lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;方法返回的类名称）设置为 &lt;code&gt;CompositeData.class.getName()&lt;/code&gt; 返回的字符串值。</target>
        </trans-unit>
        <trans-unit id="0bf9c7a5833d85446736a0e1c4523720b0baa70e" translate="yes" xml:space="preserve">
          <source>The Java class name of composite data values this composite type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;CompositeData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">此复合类型表示的复合数据值的Ja​​va类名称（即&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;方法返回的类名称）设置为 &lt;code&gt;CompositeData.class.getName()&lt;/code&gt; 返回的字符串值。</target>
        </trans-unit>
        <trans-unit id="c797024101e43684f89be3466f4ed077167867bf" translate="yes" xml:space="preserve">
          <source>The Java class name of tabular data values this tabular type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;TabularData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">该表格类型表示的表格数据值的Ja​​va类名称（即&lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;方法返回的类名称）被设置为 &lt;code&gt;TabularData.class.getName()&lt;/code&gt; 返回的字符串值。</target>
        </trans-unit>
        <trans-unit id="bda12988aff6c0c6b0da57eda918cd7f7e41f2f4" translate="yes" xml:space="preserve">
          <source>The Java class name of tabular data values this tabular type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;TabularData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">该表格类型表示的表格数据值的Ja​​va类名称（即&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;方法返回的类名称）被设置为 &lt;code&gt;TabularData.class.getName()&lt;/code&gt; 返回的字符串值。</target>
        </trans-unit>
        <trans-unit id="9c14a043362d4c6a8070d7ef91c6074e182453f3" translate="yes" xml:space="preserve">
          <source>The Java input method framework intends to support all combinations of input methods (host input methods and Java input methods) and components (peered and lightweight). However, because of limitations in the underlying platform, it may not always be possible to enable the communication between Java input methods and peered AWT components. Support for this specific combination is therefore platform dependent. In Sun's Java SE Runtime Environments, this combination is supported on Windows, but not on Solaris.</source>
          <target state="translated">Java输入法框架打算支持输入法(主机输入法和Java输入法)和组件(对等和轻量级)的所有组合。然而,由于底层平台的限制,可能并不总是能够实现Java输入法和对等AWT组件之间的通信。因此,对这种特定组合的支持是依赖于平台的。在Sun的Java SE运行时环境中,Windows上支持这种组合,但Solaris上不支持。</target>
        </trans-unit>
        <trans-unit id="79100a6d797f840a76dcfd0b27ebb8da026f838e" translate="yes" xml:space="preserve">
          <source>The Java interface name for a Standard MBean or MXBean, as returned by &lt;a href=&quot;../../../java.base/java/lang/class#getName()&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly in the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">Standard MBean或MXBean的Java接口名称，由&lt;a href=&quot;../../../java.base/java/lang/class#getName()&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;返回。直接在MBean服务器中注册或使用&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;类创建的Standard MBean或MXBean将在其MBeanInfo描述符中具有此字段。</target>
        </trans-unit>
        <trans-unit id="51863c4a757aa5599aa4ec4ebb6fdc59f85b517e" translate="yes" xml:space="preserve">
          <source>The Java interface name for a Standard MBean or MXBean, as returned by &lt;a href=&quot;../../java/lang/class#getName--&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly in the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">Standard MBean或MXBean的Java接口名称，由&lt;a href=&quot;../../java/lang/class#getName--&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;返回。直接在MBean服务器中注册或使用&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;类创建的Standard MBean或MXBean 将在其MBeanInfo描述符中具有此字段。</target>
        </trans-unit>
        <trans-unit id="b846c3f527602fad3b8086a6f7a5ad28be2a0b97" translate="yes" xml:space="preserve">
          <source>The Java language provides special support for the string concatenation operator ( + ), and for conversion of other objects to strings. For additional information on string concatenation and conversion, see</source>
          <target state="translated">Java语言为字符串连接运算符(+)以及其他对象到字符串的转换提供了特殊支持。关于字符串连接和转换的其他信息,请参见</target>
        </trans-unit>
        <trans-unit id="1aedb6f153f14e307ee0a63ee1143e333aca4608" translate="yes" xml:space="preserve">
          <source>The Java language provides special support for the string concatenation operator ( + ), and for conversion of other objects to strings. String concatenation is implemented through the &lt;code&gt;StringBuilder&lt;/code&gt;(or &lt;code&gt;StringBuffer&lt;/code&gt;) class and its &lt;code&gt;append&lt;/code&gt; method. String conversions are implemented through the method &lt;code&gt;toString&lt;/code&gt;, defined by &lt;code&gt;Object&lt;/code&gt; and inherited by all classes in Java. For additional information on string concatenation and conversion, see Gosling, Joy, and Steele,</source>
          <target state="translated">Java语言为字符串连接运算符（+）以及将其他对象转换为字符串提供了特殊支持。字符串连接是通过 &lt;code&gt;StringBuilder&lt;/code&gt; （或 &lt;code&gt;StringBuffer&lt;/code&gt; ）类及其 &lt;code&gt;append&lt;/code&gt; 方法实现的。字符串转换是通过 &lt;code&gt;toString&lt;/code&gt; 方法实现的，该方法由 &lt;code&gt;Object&lt;/code&gt; 定义并由Java中的所有类继承。有关字符串连接和转换的其他信息，请参见Gosling，Joy和Steele，</target>
        </trans-unit>
        <trans-unit id="e0998193a86cfe456d402b1f0c70a66b6cd6c11c" translate="yes" xml:space="preserve">
          <source>The Java math library is defined with respect to &lt;code&gt;fdlibm&lt;/code&gt; version 5.3. Where &lt;code&gt;fdlibm&lt;/code&gt; provides more than one definition for a function (such as &lt;code&gt;acos&lt;/code&gt;), use the &quot;IEEE 754 core function&quot; version (residing in a file whose name begins with the letter &lt;code&gt;e&lt;/code&gt;). The methods which require &lt;code&gt;fdlibm&lt;/code&gt; semantics are &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;tan&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt;, &lt;code&gt;acos&lt;/code&gt;, &lt;code&gt;atan&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;log10&lt;/code&gt;, &lt;code&gt;cbrt&lt;/code&gt;, &lt;code&gt;atan2&lt;/code&gt;, &lt;code&gt;pow&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;, and &lt;code&gt;log1p&lt;/code&gt;.</source>
          <target state="translated">Java数学库是针对 &lt;code&gt;fdlibm&lt;/code&gt; 版本5.3 定义的。如果 &lt;code&gt;fdlibm&lt;/code&gt; 为一个函数（例如 &lt;code&gt;acos&lt;/code&gt; ）提供了多个定义，请使用&amp;ldquo; IEEE 754核心函数&amp;rdquo;版本（位于名称以字母 &lt;code&gt;e&lt;/code&gt; 开头的文件中）。需要 &lt;code&gt;fdlibm&lt;/code&gt; 语义的方法是 &lt;code&gt;sin&lt;/code&gt; ， &lt;code&gt;cos&lt;/code&gt; ， &lt;code&gt;tan&lt;/code&gt; ， &lt;code&gt;asin&lt;/code&gt; ， &lt;code&gt;acos&lt;/code&gt; ， &lt;code&gt;atan&lt;/code&gt; ， &lt;code&gt;exp&lt;/code&gt; ， &lt;code&gt;log&lt;/code&gt; ， &lt;code&gt;log10&lt;/code&gt; ， &lt;code&gt;cbrt&lt;/code&gt; ， &lt;code&gt;atan2&lt;/code&gt; ， &lt;code&gt;pow&lt;/code&gt; ， &lt;code&gt;sinh&lt;/code&gt; ， &lt;code&gt;cosh&lt;/code&gt; ， &lt;code&gt;tanh&lt;/code&gt; ， &lt;code&gt;hypot&lt;/code&gt; 将， &lt;code&gt;expm1&lt;/code&gt; 和 &lt;code&gt;log1p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bc96f1b0cc70e1672a7ea3f62bf4ee8f43d325" translate="yes" xml:space="preserve">
          <source>The Java programming language does not guarantee which thread will invoke the &lt;code&gt;finalize&lt;/code&gt; method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates.</source>
          <target state="translated">Java编程语言不能保证哪个线程将为任何给定对象调用 &lt;code&gt;finalize&lt;/code&gt; 方法。但是，可以保证，调用finalize的线程在调用finalize时不会持有任何用户可见的同步锁。如果finalize方法抛出未捕获的异常，则该异常将被忽略，并且该对象的终结将终止。</target>
        </trans-unit>
        <trans-unit id="a17398b63cfead5fb4c823a73d9a91965bc4ebc9" translate="yes" xml:space="preserve">
          <source>The Java run-time has the following built-in class loaders:</source>
          <target state="translated">Java运行时有以下内置的类加载器。</target>
        </trans-unit>
        <trans-unit id="08aaa85f6f705c223cf7d10e7c00860e557c843f" translate="yes" xml:space="preserve">
          <source>The Java run-time may also allow, but is not required to allow, the security manager to be set dynamically by invoking the &lt;a href=&quot;system#setSecurityManager(java.lang.SecurityManager)&quot;&gt;&lt;code&gt;setSecurityManager&lt;/code&gt;&lt;/a&gt; method. In the JDK implementation, if the Java virtual machine is started with the &lt;code&gt;java.security.manager&lt;/code&gt; system property set to the special token &quot;&lt;code&gt;disallow&lt;/code&gt;&quot; then a security manager will not be set at startup and cannot be set dynamically (the &lt;a href=&quot;system#setSecurityManager(java.lang.SecurityManager)&quot;&gt;&lt;code&gt;setSecurityManager&lt;/code&gt;&lt;/a&gt; method will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the &lt;code&gt;java.security.manager&lt;/code&gt; system property is not set or is set to the special token &quot;&lt;code&gt;allow&lt;/code&gt;&quot;, then a security manager will not be set at startup but can be set dynamically. Finally, if the &lt;code&gt;java.security.manager&lt;/code&gt; system property is set to the class name of the security manager, or to the empty String (&quot;&quot;) or the special token &quot;&lt;code&gt;default&lt;/code&gt;&quot;, then a security manager is set at startup (as described previously) and can also be subsequently replaced (or disabled) dynamically (subject to the policy of the currently installed security manager). The following table illustrates the behavior of the JDK implementation for the different settings of the &lt;code&gt;java.security.manager&lt;/code&gt; system property:</source>
          <target state="translated">Java运行时还可以允许（但不要求允许）通过调用&lt;a href=&quot;system#setSecurityManager(java.lang.SecurityManager)&quot;&gt; &lt;code&gt;setSecurityManager&lt;/code&gt; &lt;/a&gt;方法动态设置安全管理器。在JDK实现中，如果在将 &lt;code&gt;java.security.manager&lt;/code&gt; 系统属性设置为特殊令牌&amp;ldquo; &lt;code&gt;disallow&lt;/code&gt; &amp;rdquo;的情况下启动Java虚拟机，则不会在启动时设置安全管理器，也不能动态设置安全管理器（&lt;a href=&quot;system#setSecurityManager(java.lang.SecurityManager)&quot;&gt; &lt;code&gt;setSecurityManager&lt;/code&gt; &lt;/a&gt;方法将抛出一个 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 异常）。如果未设置 &lt;code&gt;java.security.manager&lt;/code&gt; 系统属性或将其设置为特殊令牌&amp;ldquo; &lt;code&gt;allow&lt;/code&gt; &amp;rdquo;，则将不会在启动时设置安全管理器，而是可以动态设置安全管理器。最后，如果 &lt;code&gt;java.security.manager&lt;/code&gt; 系统属性设置为安全管理器的类名，或设置为空的字符串（&amp;ldquo;&amp;rdquo;）或特殊令牌&amp;ldquo; &lt;code&gt;default&lt;/code&gt; &amp;rdquo;，然后在启动时设置安全管理器（如前所述），并且可以也将随后动态地替换（或禁用）（取决于当前安装的安全管理器的策略）。下表说明了 &lt;code&gt;java.security.manager&lt;/code&gt; 系统属性的不同设置的JDK实现的行为：</target>
        </trans-unit>
        <trans-unit id="ae9b0a73944b42ff81458d35c69a8c4267a950f1" translate="yes" xml:space="preserve">
          <source>The Java thread ID, or &lt;code&gt;-1&lt;/code&gt; if doesn't exist</source>
          <target state="translated">Java线程ID；如果不存在，则为 &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af13f60de6a564a40dc8e97ebaf3a0143c84236a" translate="yes" xml:space="preserve">
          <source>The Java time-scale is used for all date-time classes. This includes &lt;code&gt;Instant&lt;/code&gt;, &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt;, &lt;code&gt;OffsetDateTime&lt;/code&gt;, &lt;code&gt;ZonedDateTime&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Java时间刻度用于所有日期时间类。这包括 &lt;code&gt;Instant&lt;/code&gt; ， &lt;code&gt;LocalDate&lt;/code&gt; ， &lt;code&gt;LocalTime&lt;/code&gt; ， &lt;code&gt;OffsetDateTime&lt;/code&gt; ， &lt;code&gt;ZonedDateTime&lt;/code&gt; 和 &lt;code&gt;Duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2da8a881d3a54f6e4f6b884054ec854ec43a1d9" translate="yes" xml:space="preserve">
          <source>The Java type of the resource. For field annotations, the default is the type of the field. For method annotations, the default is the type of the JavaBeans property. For class annotations, there is no default and this must be specified.</source>
          <target state="translated">资源的Java类型。对于字段注解,默认为字段的类型。对于方法注解,默认为JavaBeans属性的类型。对于类注解,没有默认值,必须指定。</target>
        </trans-unit>
        <trans-unit id="43d20fd86e33d070ee07b30fb6fd2637b8965aa6" translate="yes" xml:space="preserve">
          <source>The Java virtual machine</source>
          <target state="translated">Java虚拟机</target>
        </trans-unit>
        <trans-unit id="9b5c7ce28420ae67114f39b12a0543341609a160" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a</source>
          <target state="translated">Java虚拟机有一个</target>
        </trans-unit>
        <trans-unit id="88c7b1259981c72516090ed9654552f9f3ed6e3b" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a default provider that provides zone rules for the time-zones defined by IANA Time Zone Database (TZDB). If the system property &lt;code&gt;&lt;span id=&quot;java.time.zone.DefaultZoneRulesProvider&quot;&gt;java.time.zone.DefaultZoneRulesProvider&lt;/span&gt;&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete ZoneRulesProvider class to be loaded as the default provider, using the system class loader. If this system property is not defined, a system-default provider will be loaded to serve as the default provider.</source>
          <target state="translated">Java虚拟机具有默认提供程序，该提供程序为IANA时区数据库（TZDB）定义的时区提供时区规则。如果定义了系统属性 &lt;code&gt;&lt;span id=&quot;java.time.zone.DefaultZoneRulesProvider&quot;&gt;java.time.zone.DefaultZoneRulesProvider&lt;/span&gt;&lt;/code&gt; ，则使用系统类加载器将其视为要作为默认提供者加载的具体ZoneRulesProvider类的完全限定名称。如果未定义此系统属性，则将加载系统默认提供程序以用作默认提供程序。</target>
        </trans-unit>
        <trans-unit id="8516f820bb05657121a79dd1bd0a5cddcc1f2f53" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a default provider that provides zone rules for the time-zones defined by IANA Time Zone Database (TZDB). If the system property &lt;code&gt;java.time.zone.DefaultZoneRulesProvider&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete ZoneRulesProvider class to be loaded as the default provider, using the system class loader. If this system property is not defined, a system-default provider will be loaded to serve as the default provider.</source>
          <target state="translated">Java虚拟机具有默认提供程序，该提供程序为IANA时区数据库（TZDB）定义的时区提供时区规则。如果定义了系统属性 &lt;code&gt;java.time.zone.DefaultZoneRulesProvider&lt;/code&gt; ，则使用系统类加载器将其视为要作为默认提供者加载的具体ZoneRulesProvider类的完全限定名称。如果未定义此系统属性，则将加载系统默认提供程序以用作默认提供程序。</target>
        </trans-unit>
        <trans-unit id="01e66a7f2f90bc990318958109b0d41e725d670b" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a heap for object allocation and also maintains non-heap memory for the method area and the Java virtual machine execution. The Java virtual machine can have one or more memory pools. Each memory pool represents a memory area of one of the following types:</source>
          <target state="translated">Java虚拟机有一个用于对象分配的堆,也为方法区和Java虚拟机执行维护非堆内存。Java虚拟机可以有一个或多个内存池。每个内存池代表以下类型之一的内存区域。</target>
        </trans-unit>
        <trans-unit id="20591611464f80238a71287e9fce3d26d00ecfac" translate="yes" xml:space="preserve">
          <source>The Java virtual machine implementation may use a high resolution timer to measure the elapsed time. This method may return the same value even if the collection count has been incremented if the collection elapsed time is very short.</source>
          <target state="translated">Java虚拟机的实现可以使用高分辨率计时器来测量经过的时间。如果收集经过的时间很短,即使收集计数已经增加,该方法也可能返回相同的值。</target>
        </trans-unit>
        <trans-unit id="1b9d55292bfb865db4e6b6204b4073d1f202f8ab" translate="yes" xml:space="preserve">
          <source>The Java virtual machine maintains the peak memory usage of a memory pool since the virtual machine was started or the peak was reset. The peak memory usage is returned by the &lt;a href=&quot;#getPeakUsage()&quot;&gt;&lt;code&gt;getPeakUsage()&lt;/code&gt;&lt;/a&gt; method and reset by calling the &lt;a href=&quot;#resetPeakUsage()&quot;&gt;&lt;code&gt;resetPeakUsage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">自从启动虚拟机或重置峰值以来，Java虚拟机便保持了内存池的峰值内存使用率。峰值内存使用量由&lt;a href=&quot;#getPeakUsage()&quot;&gt; &lt;code&gt;getPeakUsage()&lt;/code&gt; &lt;/a&gt;方法返回，并通过调用&lt;a href=&quot;#resetPeakUsage()&quot;&gt; &lt;code&gt;resetPeakUsage()&lt;/code&gt; &lt;/a&gt;方法进行重置。</target>
        </trans-unit>
        <trans-unit id="21c32d462e38386cb39051b42822e7568e72eaed" translate="yes" xml:space="preserve">
          <source>The Java virtual machine maintains the peak memory usage of a memory pool since the virtual machine was started or the peak was reset. The peak memory usage is returned by the &lt;a href=&quot;memorypoolmxbean#getPeakUsage--&quot;&gt;&lt;code&gt;getPeakUsage()&lt;/code&gt;&lt;/a&gt; method and reset by calling the &lt;a href=&quot;memorypoolmxbean#resetPeakUsage--&quot;&gt;&lt;code&gt;resetPeakUsage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">自从启动虚拟机或重置峰值以来，Java虚拟机便保持了内存池的峰值内存使用率。峰值内存使用量由&lt;a href=&quot;memorypoolmxbean#getPeakUsage--&quot;&gt; &lt;code&gt;getPeakUsage()&lt;/code&gt; &lt;/a&gt;方法返回，并通过调用&lt;a href=&quot;memorypoolmxbean#resetPeakUsage--&quot;&gt; &lt;code&gt;resetPeakUsage()&lt;/code&gt; &lt;/a&gt;方法进行重置。</target>
        </trans-unit>
        <trans-unit id="1dd3f55b5efbf2036c2fe1ec00c3c49d3ddb4916" translate="yes" xml:space="preserve">
          <source>The Java virtual machine manages memory other than the heap (referred as</source>
          <target state="translated">Java虚拟机管理的是堆以外的内存(称为</target>
        </trans-unit>
        <trans-unit id="472437aa219a5ab5c682981b0f53bbaf388053c7" translate="yes" xml:space="preserve">
          <source>The Java virtual machine may measure the time with a high resolution timer. This statistic is reset when the thread contention monitoring is reenabled.</source>
          <target state="translated">Java虚拟机可能会用一个高分辨率的计时器来测量时间。当重新启用线程争用监控时,会重置该统计。</target>
        </trans-unit>
        <trans-unit id="7d5cc1c9e97c8fd121944655161d88c67a4b91ea" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification</source>
          <target state="translated">Java&amp;trade;语言规范</target>
        </trans-unit>
        <trans-unit id="fff53af6e46bb1a4be8a5ab0a06369d5f80e1391" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, First Edition</source>
          <target state="translated">Java&amp;trade;语言规范，第一版</target>
        </trans-unit>
        <trans-unit id="417681d10c199b472becfb181846b8f2351a0cd7" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, Second Edition</source>
          <target state="translated">Java&amp;trade;语言规范，第二版</target>
        </trans-unit>
        <trans-unit id="a4154fea8bd8d5b8ca35ca7f9f31b5ca95523b77" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, Third Edition</source>
          <target state="translated">Java&amp;trade;语言规范，第三版</target>
        </trans-unit>
        <trans-unit id="b01e874645c4aa3cc169adba9f26395f941d4bfb" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Virtual Machine Specification</source>
          <target state="translated">Java&amp;trade;虚拟机规范</target>
        </trans-unit>
        <trans-unit id="573f4350c0a7648c709160ed919837ba77cd9cc2" translate="yes" xml:space="preserve">
          <source>The Java(tm)2D API adopts the convention that one point is equivalent to one unit in user coordinates. When using a normalized transform for converting user space coordinates to device space coordinates 72 user space units equal 1 inch in device space. In this case one point is 1/72 of an inch.</source>
          <target state="translated">Java(tm)2D API采用的惯例是,在用户坐标中,一个点相当于一个单位。当使用归一化变换将用户空间坐标转换为设备空间坐标时,72个用户空间单位等于设备空间的1英寸。在这种情况下,一个点就是1/72英寸。</target>
        </trans-unit>
        <trans-unit id="73f06ed2f1aac123ba68f5eb4faa83cf80ea193e" translate="yes" xml:space="preserve">
          <source>The JavaBeans specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction.</source>
          <target state="translated">JavaBeans规范将设计时间的概念定义为是JavaBeans实例在交互式设计、组成或构造工具中的组成和定制过程中应该发挥作用的一种模式,而不是在运行时,当JavaBean是applet、应用程序或其他实时Java可执行抽象的一部分时。</target>
        </trans-unit>
        <trans-unit id="4cadba2d15fbb9804bf151281d2e05044e9bc484" translate="yes" xml:space="preserve">
          <source>The JavaBeans&amp;trade; specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction.</source>
          <target state="translated">JavaBeans&amp;trade;规范将设计时间的概念定义为一种模式，在这种模式下，JavaBeans实例应在其构成和自定义期间在交互式设计，构成或构造工具中发挥作用，而JavaBean是applet，应用程序，或其他实时Java可执行文件抽象。</target>
        </trans-unit>
        <trans-unit id="2c47a19a69292af9f4d3ab44cef1faa2270339a1" translate="yes" xml:space="preserve">
          <source>The Javanese range with the Javanese digits.</source>
          <target state="translated">爪哇人的范围与爪哇人的数字。</target>
        </trans-unit>
        <trans-unit id="7ece0bccd4f47c81fc16bd9c26fb8dacabc06bc3" translate="yes" xml:space="preserve">
          <source>The Jdbc &lt;code&gt;RowSet&lt;/code&gt; Implementations specification provides two reference implementations of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class: &lt;code&gt;RIOptimisticProvider&lt;/code&gt; and &lt;code&gt;RIXMLProvider&lt;/code&gt;. The &lt;code&gt;RIOptimisticProvider&lt;/code&gt; can set any &lt;code&gt;RowSet&lt;/code&gt; implementation with a &lt;code&gt;RowSetReader&lt;/code&gt; object and a &lt;code&gt;RowSetWriter&lt;/code&gt; object. However, only the &lt;code&gt;RIXMLProvider&lt;/code&gt; implementation can set an &lt;code&gt;XmlReader&lt;/code&gt; object and an &lt;code&gt;XmlWriter&lt;/code&gt; object. A &lt;code&gt;WebRowSet&lt;/code&gt; object uses the &lt;code&gt;XmlReader&lt;/code&gt; object to read data in XML format to populate itself with that data. It uses the &lt;code&gt;XmlWriter&lt;/code&gt; object to write itself to a stream or &lt;code&gt;java.io.Writer&lt;/code&gt; object in XML format.</source>
          <target state="translated">Jdbc &lt;code&gt;RowSet&lt;/code&gt; 实现规范提供了 &lt;code&gt;SyncProvider&lt;/code&gt; 抽象类的两个参考实现： &lt;code&gt;RIOptimisticProvider&lt;/code&gt; 和 &lt;code&gt;RIXMLProvider&lt;/code&gt; 。该 &lt;code&gt;RIOptimisticProvider&lt;/code&gt; 可以设置任何 &lt;code&gt;RowSet&lt;/code&gt; 实现了 &lt;code&gt;RowSetReader&lt;/code&gt; 对象和 &lt;code&gt;RowSetWriter&lt;/code&gt; 对象。但是，只有 &lt;code&gt;RIXMLProvider&lt;/code&gt; 实现可以设置 &lt;code&gt;XmlReader&lt;/code&gt; 对象和 &lt;code&gt;XmlWriter&lt;/code&gt; 对象。一个 &lt;code&gt;WebRowSet&lt;/code&gt; 的对象使用 &lt;code&gt;XmlReader&lt;/code&gt; 对象读取XML格式的数据与数据填充本身。它使用 &lt;code&gt;XmlWriter&lt;/code&gt; 对象以XML格式将自身写入流或 &lt;code&gt;java.io.Writer&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="46152631e4488fac6b1cad7442ef7feac4ea4d12" translate="yes" xml:space="preserve">
          <source>The JobImpressions attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobImpressions attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobImpressions attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobImpressions attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobImpressions 属性描述了作业的大小。该属性并不是一个计数器,而是在已知的情况下作为有用的路由和调度信息。如果打印请求中没有提供JobImpressions属性的值,打印机可能会尝试计算它。即使客户在打印请求中提供了JobImpressions属性的值,如果打印机能够计算出比客户提供的值更准确的值,打印机也可以选择更改该值。打印机可以在作业提交时或在以后的任何时间确定JobImpressions属性的正确值。</target>
        </trans-unit>
        <trans-unit id="2eda45bce719c55226f8cb11330a3730a179a164" translate="yes" xml:space="preserve">
          <source>The JobImpressionsCompleted attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobImpressionsCompleted value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobImpressionsCompleted value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobImpressionsCompleted value is the final value for the job.</source>
          <target state="translated">JobImpressionsCompleted属性描述作业的进度。此属性旨在作为计数器。也就是说，尚未开始处理的作业的JobImpressionsCompleted值必须为0。当作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;为PROCESSING或PROCESSING_STOPPED时，JobImpressionsCompleted值将在处理作业时增加；它指示查询打印作业的属性集时或报告打印作业事件时已处理的作业量。当作业进入COMPLETED，CANCELED或ABORTED状态时，JobImpressionsCompleted值为作业的最终值。</target>
        </trans-unit>
        <trans-unit id="23b552cbebfc9eeb6f00f5f7f1d577e52be27c5e" translate="yes" xml:space="preserve">
          <source>The JobKOctets attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobKOctets attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobKOctets attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobKOctets attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobKOctets 属性描述了作业的大小。该属性并不是一个计数器,而是在已知的情况下作为有用的路由和调度信息。如果打印请求中没有提供JobKOctets属性的值,打印机可能会尝试计算该值。即使客户在打印请求中提供了JobKOctets属性的值,如果打印机能够计算出比客户提供的值更准确的值,打印机也可以选择更改该值。打印机可以在作业提交时或在以后的任何时间确定JobKOctets属性的正确值。</target>
        </trans-unit>
        <trans-unit id="10778b515020fa74e3922d67e4e4cfb07a6b5d4d" translate="yes" xml:space="preserve">
          <source>The JobKOctets value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the size of the source document data, rather than a measure of the hardcopy output to be produced.</source>
          <target state="translated">JobKOctets值还必须不包括由于文档数据中嵌入的复制指令而产生的乘法因子。如果文档数据实际上包含了文档数据的复制,那么这个值将包含这种复制。换句话说,这个值始终是源文档数据的大小,而不是对要产生的硬拷贝输出的衡量。</target>
        </trans-unit>
        <trans-unit id="4f8e193f841acdf58db4b152692036053ed12078" translate="yes" xml:space="preserve">
          <source>The JobKOctets value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and indicates the size of the document(s) measured in K octets independent of the number of copies.</source>
          <target state="translated">JobKOctets值不得包含由&amp;ldquo; &lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性指定的副本数所贡献的乘法因子，而与设备是否可以在不对作业或文档数据进行多次遍历的情况下处理多个副本无关，并且与输出是否经过整理无关。因此，该值与实现方式无关，并且指示以K个八位字节为单位测量的文档大小，与副本数量无关。</target>
        </trans-unit>
        <trans-unit id="860b972389f862538b6b997fd07b4c1c60636261" translate="yes" xml:space="preserve">
          <source>The JobKOctetsProcessed attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobKOctetsProcessed value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobKOctetsProcessed value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobKOctetsProcessed value is the final value for the job.</source>
          <target state="translated">JobKOctetsProcessed属性描述作业的进度。此属性旨在作为计数器。也就是说，尚未开始处理的作业的JobKOctetsProcessed值必须为0。当作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;为PROCESSING或PROCESSING_STOPPED时，JobKOctetsProcessed值将在处理作业时增加；它指示查询打印作业的属性集时或报告打印作业事件时已处理的作业量。当作业进入COMPLETED，CANCELED或ABORTED状态时，JobKOctetsProcessed值为作业的最终值。</target>
        </trans-unit>
        <trans-unit id="67c4f689dd8dce6456481d0861afa2eb83cc72f8" translate="yes" xml:space="preserve">
          <source>The JobMediaSheets attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobMediaSheets attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobMediaSheets attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobMediaSheets attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobMediaSheets 属性描述了作业的大小。该属性并不是一个计数器,而是在已知的情况下作为有用的路由和调度信息。如果打印请求中没有提供JobMediaSheets属性的值,打印机可能会尝试计算该值。即使客户在打印请求中提供了JobMediaSheets属性的值,如果打印机能够计算出比客户提供的值更准确的值,打印机也可以选择更改该值。打印机可以在作业提交时或在以后的任何时间点确定JobMediaSheets属性的正确值。</target>
        </trans-unit>
        <trans-unit id="27e40040d6353841f04365a16d249f070597a18a" translate="yes" xml:space="preserve">
          <source>The JobMediaSheetsCompleted attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobMediaSheetsCompleted value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobMediaSheetsCompleted value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobMediaSheetsCompleted value is the final value for the job.</source>
          <target state="translated">JobMediaSheetsCompleted属性描述作业的进度。此属性旨在作为计数器。也就是说，尚未开始处理的作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;值必须为0。当作业的JobState为PROCESSING或PROCESSING_STOPPED时，JobMediaSheetsCompleted值将在处理作业时增加；它指示查询打印作业的属性集时或报告打印作业事件时已处理的作业量。当作业进入COMPLETED，CANCELED或ABORTED状态时，JobMediaSheetsCompleted值为作业的最终值。</target>
        </trans-unit>
        <trans-unit id="bc898aeb76a9f867124df93fc92a814fb7980188" translate="yes" xml:space="preserve">
          <source>The Julian Day is a standard way of expressing date and time commonly used in the scientific community. It is expressed as a decimal number of whole days where days start at midday. This class represents variations on Julian Days that count whole days from midnight.</source>
          <target state="translated">儒略日是科学界常用的一种标准日期和时间表达方式。它用整日的小数来表示,其中一天是从正午开始的。这一类代表了从午夜开始计算整日的朱利安日的变化。</target>
        </trans-unit>
        <trans-unit id="9eef549030343348c0081e0aeeb494d2d5823916" translate="yes" xml:space="preserve">
          <source>The Kannada range with the Kannada digits.</source>
          <target state="translated">坎纳达数字的坎纳达范围。</target>
        </trans-unit>
        <trans-unit id="9d5cb955409a47e5080caa7c35c25ddf731fb54b" translate="yes" xml:space="preserve">
          <source>The Kayah Li range with the Kayah Li digits.</source>
          <target state="translated">凯亚力系列与凯亚力数字。</target>
        </trans-unit>
        <trans-unit id="04de0af52612213497a4e8449d41e7beb1c261f5" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="translated">Kerberos网络认证协议在&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120中&lt;/a&gt;定义。Java平台通过&lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt; &lt;code&gt;org.ietf.jgss&lt;/code&gt; &lt;/a&gt;包包含对Kerberos客户端的支持。可能还会有一个登录模块，该模块实现&lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; &lt;/a&gt;来对Kerberos主体进行身份验证。</target>
        </trans-unit>
        <trans-unit id="b31c8a2b1469694c5596d8e7d24f8ca4168d3814" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;/openjdk~8_web/org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="translated">Kerberos网络认证协议在&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120中&lt;/a&gt;定义。Java平台通过&lt;a href=&quot;/openjdk~8_web/org/ietf/jgss/package-summary&quot;&gt; &lt;code&gt;org.ietf.jgss&lt;/code&gt; &lt;/a&gt;包包含对Kerberos客户端的支持。可能还会有一个登录模块，该模块实现&lt;a href=&quot;../spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; &lt;/a&gt;来认证Kerberos主体。</target>
        </trans-unit>
        <trans-unit id="157c69eafa4fbe15c7e8811316a4ab15df7d02af" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="translated">Kerberos网络认证协议在&lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120中&lt;/a&gt;定义。Java平台通过&lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt; &lt;code&gt;org.ietf.jgss&lt;/code&gt; &lt;/a&gt;包包含对Kerberos客户端的支持。可能还会有一个登录模块，该模块实现&lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; &lt;/a&gt;来对Kerberos主体进行身份验证。</target>
        </trans-unit>
        <trans-unit id="179c153fa31e392a5dae09bfb3ec12cf7382a77e" translate="yes" xml:space="preserve">
          <source>The Kerberos v5 mechanism (&quot;1.2.840.113554.1.2.2&quot;) will always be returned in this list when the indicated nametype is one of &lt;a href=&quot;gssname#NT_HOSTBASED_SERVICE&quot;&gt;&lt;code&gt;GSSName.NT_HOSTBASED_SERVICE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;gssname#NT_EXPORT_NAME&quot;&gt;&lt;code&gt;GSSName.NT_EXPORT_NAME&lt;/code&gt;&lt;/a&gt;, or &quot;1.2.840.113554.1.2.2.1&quot;.</source>
          <target state="translated">当指示的名称类型是&lt;a href=&quot;gssname#NT_HOSTBASED_SERVICE&quot;&gt; &lt;code&gt;GSSName.NT_HOSTBASED_SERVICE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;gssname#NT_EXPORT_NAME&quot;&gt; &lt;code&gt;GSSName.NT_EXPORT_NAME&lt;/code&gt; &lt;/a&gt;或&amp;ldquo; 1.2.840.113554.1.2.2.1&amp;rdquo;中的一种时，将始终在此列表中返回Kerberos v5机制（&amp;ldquo; 1.2.840.113554.1.2.2&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="1544cf9c5107663734ae872cc327b8154b4bc517" translate="yes" xml:space="preserve">
          <source>The Key interface is the top-level interface for all keys.</source>
          <target state="translated">钥匙界面是所有钥匙的顶层界面。</target>
        </trans-unit>
        <trans-unit id="0f7ba838a05da49357b31ae6823009d4f10f3dbe" translate="yes" xml:space="preserve">
          <source>The Key interface is the top-level interface for all keys. It defines the functionality shared by all key objects. All keys have three characteristics:</source>
          <target state="translated">密钥接口是所有密钥的顶层接口。它定义了所有键对象共享的功能。所有键都有三个特征:</target>
        </trans-unit>
        <trans-unit id="cf548aaac46d4e0f0b562c298e02a26e9e223aa6" translate="yes" xml:space="preserve">
          <source>The KeyPairGenerator class is used to generate pairs of public and private keys.</source>
          <target state="translated">KeyPairGenerator类用于生成公钥和私钥的对。</target>
        </trans-unit>
        <trans-unit id="84ce39b134b25304a741de41814f7513944cfe5b" translate="yes" xml:space="preserve">
          <source>The KeyPairGenerator class is used to generate pairs of public and private keys. Key pair generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">KeyPairGenerator类用于生成公钥和私钥对。密钥对生成器使用 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法（返回给定类实例的静态方法）构造。</target>
        </trans-unit>
        <trans-unit id="15b0ebadd884d0b51462c94b77021fc226c8b293" translate="yes" xml:space="preserve">
          <source>The KeyStore is instantiated from &lt;code&gt;provider&lt;/code&gt; if non-null. Otherwise, all installed providers are searched.</source>
          <target state="translated">如果 &lt;code&gt;provider&lt;/code&gt; 为null，则从提供者实例化KeyStore 。否则，将搜索所有已安装的提供程序。</target>
        </trans-unit>
        <trans-unit id="0e2ef01fdd78023f4e41a2332f54d31d4e897196" translate="yes" xml:space="preserve">
          <source>The KeyboardFocusManager is both a centralized location for client code to query for the focus owner and initiate focus changes, and an event dispatcher for all FocusEvents, WindowEvents related to focus, and KeyEvents.</source>
          <target state="translated">KeyboardFocusManager既是客户端代码查询焦点所有者和启动焦点变化的集中位置,也是所有焦点事件(FocusEvents)、与焦点相关的窗口事件(WindowEvents)和按键事件(KeyEvents)的事件调度器。</target>
        </trans-unit>
        <trans-unit id="fe9108e974a840f34cdac2d8957f8fc6f75c25d0" translate="yes" xml:space="preserve">
          <source>The KeyboardFocusManager is responsible for managing the active and focused Windows, and the current focus owner.</source>
          <target state="translated">KeyboardFocusManager负责管理活动的和聚焦的Windows,以及当前的焦点所有者。</target>
        </trans-unit>
        <trans-unit id="c9b92722aba2c53f9e3ad23b73c28a03069188d3" translate="yes" xml:space="preserve">
          <source>The KeyboardFocusManager is responsible for managing the active and focused Windows, and the current focus owner. The focus owner is defined as the Component in an application that will typically receive all KeyEvents generated by the user. The focused Window is the Window that is, or contains, the focus owner. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">KeyboardFocusManager负责管理活动的和聚焦的Windows,以及当前的焦点所有者。焦点所有者被定义为应用程序中的组件,它通常会接收用户产生的所有KeyEvents。被聚焦的窗口是焦点所有者的窗口,或包含焦点所有者的窗口。只有Frame或Dialog可以是活动窗口。本机窗口系统可以用特殊的装饰来表示活动窗口或它的子窗口,例如高亮的标题栏。活动窗口总是焦点窗口,或者是焦点窗口的第一个框架或对话框。</target>
        </trans-unit>
        <trans-unit id="dfdf028492eeb6a2c0a7e187bb51caef0fe58094" translate="yes" xml:space="preserve">
          <source>The Khmer range with the Khmer digits.</source>
          <target state="translated">高棉数字的高棉范围。</target>
        </trans-unit>
        <trans-unit id="e90bf29f8e3545c413433081172c9465c0614fe9" translate="yes" xml:space="preserve">
          <source>The LDAP directory server must be configured to permit read access to the userPassword attribute. If the user entered a valid username and password, this &lt;code&gt;LoginModule&lt;/code&gt; associates a &lt;code&gt;UnixPrincipal&lt;/code&gt;, &lt;code&gt;UnixNumericUserPrincipal&lt;/code&gt;, and the relevant UnixNumericGroupPrincipals with the &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">LDAP目录服务器必须配置为允许对userPassword属性的读取访问。如果用户输入了有效的用户名和密码，则此 &lt;code&gt;LoginModule&lt;/code&gt; 会将 &lt;code&gt;UnixPrincipal&lt;/code&gt; ， &lt;code&gt;UnixNumericUserPrincipal&lt;/code&gt; 和相关的UnixNumericGroupPrincipals与 &lt;code&gt;Subject&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="ba0192d9ab92e21e9c2744dd9f7ef43296184075" translate="yes" xml:space="preserve">
          <source>The LDAPv3 protocol uses controls to send and receive additional data to affect the behavior of predefined operations. Controls can be sent along with any LDAP operation to the server. These are referred to as &lt;em&gt;request controls&lt;/em&gt;. For example, a &quot;sort&quot; control can be sent with an LDAP search operation to request that the results be returned in a particular order. Solicited and unsolicited controls can also be returned with responses from the server. Such controls are referred to as &lt;em&gt;response controls&lt;/em&gt;. For example, an LDAP server might define a special control to return change notifications.</source>
          <target state="translated">LDAPv3协议使用控件来发送和接收其他数据，以影响预定义操作的行为。控件可以与任何LDAP操作一起发送到服务器。这些被称为&lt;em&gt;请求控件&lt;/em&gt;。例如，可以通过LDAP搜索操作发送&amp;ldquo;排序&amp;rdquo;控件，以请求以特定顺序返回结果。还可以将请求的和未经请求的控件与服务器的响应一起返回。这种控制称为&lt;em&gt;响应控制&lt;/em&gt;。例如，LDAP服务器可能定义一个特殊的控件来返回更改通知。</target>
        </trans-unit>
        <trans-unit id="84b009686e42e06098b246c404691be107aa2893" translate="yes" xml:space="preserve">
          <source>The Lao range with the Lao digits.</source>
          <target state="translated">崂峦与老挝数字。</target>
        </trans-unit>
        <trans-unit id="3d7e088fa5dee667531590ff7a47cda4787dd6af" translate="yes" xml:space="preserve">
          <source>The Latin (European) range with the Latin (ASCII) digits.</source>
          <target state="translated">拉丁语(欧洲)范围内的拉丁语(ASCII)数字。</target>
        </trans-unit>
        <trans-unit id="e69f4a3d93cbdffcb22365dd2d768eab2d0fbb22" translate="yes" xml:space="preserve">
          <source>The Left Arrow key, a non-ASCII action key.</source>
          <target state="translated">左箭头键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="625f245af32d880495183dfc988c393be7c10c2c" translate="yes" xml:space="preserve">
          <source>The Lepcha range with the Lepcha digits.</source>
          <target state="translated">乐百家范围与乐百家数字。</target>
        </trans-unit>
        <trans-unit id="e247331a2fdfcd1f002adc01fbf899e2a1591f78" translate="yes" xml:space="preserve">
          <source>The Level class defines a set of standard logging levels that can be used to control logging output.</source>
          <target state="translated">等级类定义了一组可用于控制日志输出的标准日志等级。</target>
        </trans-unit>
        <trans-unit id="5e0b0c714c17843fb551c38291dba43f83549e84" translate="yes" xml:space="preserve">
          <source>The Level class defines a set of standard logging levels that can be used to control logging output. The logging Level objects are ordered and are specified by ordered integers. Enabling logging at a given level also enables logging at all higher levels.</source>
          <target state="translated">等级类定义了一组标准的日志记录等级,可用于控制日志记录输出。日志等级对象是有序的,由有序的整数指定。启用某个级别的日志记录也会启用所有更高一级的日志记录。</target>
        </trans-unit>
        <trans-unit id="1eb102e7a522f2dead8bb60ac1334e542914f901" translate="yes" xml:space="preserve">
          <source>The Limbu range with the Limbu digits.</source>
          <target state="translated">林布范围与林布数字。</target>
        </trans-unit>
        <trans-unit id="23341604b8e30c5db6f5082ffe273ce643ebf866" translate="yes" xml:space="preserve">
          <source>The LineEvent.Type inner class identifies what kind of event occurred on a line.</source>
          <target state="translated">LineEvent.Type内类标识了线上发生了什么样的事件。</target>
        </trans-unit>
        <trans-unit id="f4515bae178db99e414cd4419e58ab70e3a4ab78" translate="yes" xml:space="preserve">
          <source>The LineEvent.Type inner class identifies what kind of event occurred on a line. Static instances are provided for the common types (OPEN, CLOSE, START, and STOP).</source>
          <target state="translated">LineEvent.Type内类标识了行上发生的事件类型。为常见类型(OPEN、CLOSE、START和STOP)提供了静态实例。</target>
        </trans-unit>
        <trans-unit id="82041c3f3458b7321d9e6904a9a2fbd85ff5e8fb" translate="yes" xml:space="preserve">
          <source>The ListSelectionListener that's added to the JLists selection model at installUI time, and whenever the JList.selectionModel property changes.</source>
          <target state="translated">在安装UI时,每当JList.selectionModel属性发生变化时,就会被添加到JLists选择模型中的ListSelectionListener。</target>
        </trans-unit>
        <trans-unit id="9d8a5479edc0054602772a4f3eec0b96299fb21f" translate="yes" xml:space="preserve">
          <source>The ListSelectionListener that's added to the JLists selection model at installUI time, and whenever the JList.selectionModel property changes. When the selection changes we repaint the affected rows.</source>
          <target state="translated">在安装UI的时候,每当JList.selectionModel属性发生变化时,就会添加到JLists选择模型中的ListSelectionListener。当选择改变时,我们就会重新绘制受影响的行。</target>
        </trans-unit>
        <trans-unit id="15a370cb868586ab99d868f607377364eaa66939" translate="yes" xml:space="preserve">
          <source>The Locale constructors have always specified that the language and the country param be two characters in length, although in practice they have accepted any length. The specification has now been relaxed to allow language codes of two to eight characters and country (region) codes of two to three characters, and in particular, three-letter language codes and three-digit region codes as specified in the IANA Language Subtag Registry. For compatibility, the implementation still does not impose a length constraint.</source>
          <target state="translated">Locale 构造者总是规定语言和国家参数的长度为两个字符,尽管在实践中它们接受任何长度。现在,该规范已被放宽,允许使用2至8个字符的语言代码和2至3个字符的国家(地区)代码,特别是IANA语言子标签注册表中规定的3个字母的语言代码和3位数的地区代码。为兼容起见,执行时仍不施加长度限制。</target>
        </trans-unit>
        <trans-unit id="cb678f5a8ea6de459807c825837564cfaf1f3ed6" translate="yes" xml:space="preserve">
          <source>The LogManager defines two optional system properties that allow control over the initial configuration, as specified in the &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">LogManager定义了两个可选的系统属性，这些属性允许控制初始配置，如&lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt;方法中所指定：</target>
        </trans-unit>
        <trans-unit id="3bb20e6e58795891b26d0418b98b5c49029c3c3e" translate="yes" xml:space="preserve">
          <source>The LogManager defines two optional system properties that allow control over the initial configuration:</source>
          <target state="translated">日志管理器定义了两个可选的系统属性,允许对初始配置进行控制。</target>
        </trans-unit>
        <trans-unit id="3cca1e6f62e92b82a24f09973b67d35f6162ed74" translate="yes" xml:space="preserve">
          <source>The LogRecord class is serializable.</source>
          <target state="translated">LogRecord类是可序列化的。</target>
        </trans-unit>
        <trans-unit id="37b5ec8719483e5837405faf74d2042c53b0e061" translate="yes" xml:space="preserve">
          <source>The Logger factory methods call this method to register each newly created Logger.</source>
          <target state="translated">记录仪工厂方法调用此方法来注册每个新创建的记录仪。</target>
        </trans-unit>
        <trans-unit id="16fa852d45e166564cfd7fb514ab7d4a6acfffbe" translate="yes" xml:space="preserve">
          <source>The Logging APIs offer both static and dynamic configuration control. Static control enables field service staff to set up a particular configuration and then re-launch the application with the new logging settings. Dynamic control allows for updates to the logging configuration within a currently running program. The APIs also allow for logging to be enabled or disabled for different functional areas of the system. For example, a field service engineer might be interested in tracing all AWT events, but might have no interest in socket events or memory management.</source>
          <target state="translated">日志 API 提供静态和动态配置控制。静态控制使现场服务人员能够设置特定的配置,然后使用新的日志设置重新启动应用程序。动态控制允许在当前运行的程序中更新日志记录配置。API还允许为系统的不同功能区域启用或禁用日志记录。例如,现场服务工程师可能对跟踪所有AWT事件感兴趣,但可能对套接字事件或内存管理不感兴趣。</target>
        </trans-unit>
        <trans-unit id="8d2c9dc56a0259f0e6bad38df059f2ef62f5a015" translate="yes" xml:space="preserve">
          <source>The LoginModule-specific options represent the options configured for this &lt;code&gt;LoginModule&lt;/code&gt; by an administrator or user in the login &lt;code&gt;Configuration&lt;/code&gt;. The options are defined by the &lt;code&gt;LoginModule&lt;/code&gt; itself and control the behavior within it. For example, a &lt;code&gt;LoginModule&lt;/code&gt; may define options to support debugging/testing capabilities. Options are defined using a key-value syntax, such as</source>
          <target state="translated">特定于LoginModule的选项表示管理员或用户在登录 &lt;code&gt;Configuration&lt;/code&gt; 中为此 &lt;code&gt;LoginModule&lt;/code&gt; 配置的选项。这些选项由 &lt;code&gt;LoginModule&lt;/code&gt; 本身定义，并控制其中的行为。例如， &lt;code&gt;LoginModule&lt;/code&gt; 可以定义选项以支持调试/测试功能。使用键值语法定义选项，例如</target>
        </trans-unit>
        <trans-unit id="873df94afa4e7ad82e48e9073fb806c35bb167b5" translate="yes" xml:space="preserve">
          <source>The MAC result is stored in &lt;code&gt;output&lt;/code&gt;, starting at &lt;code&gt;outOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">MAC结果存储在 &lt;code&gt;output&lt;/code&gt; 中，从 &lt;code&gt;outOffset&lt;/code&gt; (含）开始。</target>
        </trans-unit>
        <trans-unit id="df379351016742258da0a9b0e11610edb7e1d510" translate="yes" xml:space="preserve">
          <source>The MBean Server can be queried for MBeans that meet a particular condition, using its &lt;a href=&quot;mbeanserver#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserver#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;queryexp&quot;&gt;&lt;code&gt;QueryExp&lt;/code&gt;&lt;/a&gt; parameter to the method can be any implementation of the interface &lt;code&gt;QueryExp&lt;/code&gt;, but it is usually best to obtain the &lt;code&gt;QueryExp&lt;/code&gt; value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the &lt;code&gt;QueryExp&lt;/code&gt; interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.</source>
          <target state="translated">可以使用&lt;a href=&quot;mbeanserver#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;mbeanserver#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt;或queryMBeans方法向MBean Server查询满足特定条件的MBean 。该方法的&lt;a href=&quot;queryexp&quot;&gt; &lt;code&gt;QueryExp&lt;/code&gt; &lt;/a&gt;参数可以是 &lt;code&gt;QueryExp&lt;/code&gt; 接口的任何实现，但是通常最好通过调用此类中的静态方法来获取 &lt;code&gt;QueryExp&lt;/code&gt; 值。当查询远程MBean Server时尤其如此：远程MBean Server中可能不存在 &lt;code&gt;QueryExp&lt;/code&gt; 接口的自定义实现，但是此类中的方法仅返回属于JMX实现的标准类。</target>
        </trans-unit>
        <trans-unit id="8e20974e279464971ac54f4c492ac718451f3fb7" translate="yes" xml:space="preserve">
          <source>The MBean Server can be queried for MBeans that meet a particular condition, using its &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;queryexp&quot;&gt;&lt;code&gt;QueryExp&lt;/code&gt;&lt;/a&gt; parameter to the method can be any implementation of the interface &lt;code&gt;QueryExp&lt;/code&gt;, but it is usually best to obtain the &lt;code&gt;QueryExp&lt;/code&gt; value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the &lt;code&gt;QueryExp&lt;/code&gt; interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.</source>
          <target state="translated">可以使用&lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt;或queryMBeans方法向MBean Server查询满足特定条件的MBean 。该方法的&lt;a href=&quot;queryexp&quot;&gt; &lt;code&gt;QueryExp&lt;/code&gt; &lt;/a&gt;参数可以是 &lt;code&gt;QueryExp&lt;/code&gt; 接口的任何实现，但是通常最好是通过调用此类中的静态方法来获取 &lt;code&gt;QueryExp&lt;/code&gt; 值。当查询远程MBean Server时尤其如此：远程MBean Server中可能不存在 &lt;code&gt;QueryExp&lt;/code&gt; 接口的自定义实现，但是此类中的方法仅返回JMX实现中的标准类。</target>
        </trans-unit>
        <trans-unit id="9b55c952d8b9667a8cd83b230d433a9d1d3bc37d" translate="yes" xml:space="preserve">
          <source>The MBean Server used is the one returned by &lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用的MBean服务器是&lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt;返回的服务器。</target>
        </trans-unit>
        <trans-unit id="72d1d3a5c29db56a086580b10e87cee9417c2769" translate="yes" xml:space="preserve">
          <source>The MBean Server used is the one returned by &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用的MBean服务器是&lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt;返回的服务器。</target>
        </trans-unit>
        <trans-unit id="21324a38f03c31ace3a1e422ca3454c83ac8dbb8" translate="yes" xml:space="preserve">
          <source>The MBean is already registered in the repository.</source>
          <target state="translated">MBean已经在版本库中注册。</target>
        </trans-unit>
        <trans-unit id="43753879ff4a9ab9e94f41c105bc04ec605906f3" translate="yes" xml:space="preserve">
          <source>The MBean must have a listener that exactly matches the given &lt;code&gt;listener&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, and &lt;code&gt;handback&lt;/code&gt; parameters. If there is more than one such listener, only one is removed.</source>
          <target state="translated">MBean必须具有与给定的 &lt;code&gt;listener&lt;/code&gt; ， &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;handback&lt;/code&gt; 参数完全匹配的侦听器。如果此类侦听器不止一个，则仅删除一个。</target>
        </trans-unit>
        <trans-unit id="30152426051a3aa7c2787f9bb448c65fd9d96573" translate="yes" xml:space="preserve">
          <source>The MBean server connection through which the methods of a proxy using this handler are forwarded.</source>
          <target state="translated">转发使用该处理程序的代理方法的MBean服务器连接。</target>
        </trans-unit>
        <trans-unit id="5a6b667365181658d557141a79bdcd9ae1d79d48" translate="yes" xml:space="preserve">
          <source>The MBeanServer reference is internally kept. This will allow &lt;code&gt;findMBeanServer&lt;/code&gt; to return a reference to this MBeanServer object.</source>
          <target state="translated">MBeanServer引用在内部保留。这将使 &lt;code&gt;findMBeanServer&lt;/code&gt; 返回对该MBeanServer对象的引用。</target>
        </trans-unit>
        <trans-unit id="fce98176f741b29841e04388f314ecc341556fb9" translate="yes" xml:space="preserve">
          <source>The MBeanServerBuilder makes it possible to wrap the MBeanServers returned by the default MBeanServerBuilder implementation, for the purpose of e.g. adding an additional security layer.</source>
          <target state="translated">MBeanServerBuilder可以将默认的MBeanServerBuilder实现所返回的MBeanServers进行封装,以便增加额外的安全层。</target>
        </trans-unit>
        <trans-unit id="3ebb8ef1bdda79f2bf977d8f0f2c843f817752de" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-1&quot; message digest</source>
          <target state="translated">使用 &quot;SHA-1 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="c43e787474141d0bb72e21314b04491164ecd29c" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-1&quot; message digest.</source>
          <target state="translated">使用 &quot;SHA-1 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="32c91218272c1ce637c8a43d4efa8d7be714817e" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-224&quot; message digest</source>
          <target state="translated">使用 &quot;SHA-224 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="ded68968556406a67098d9312cb325eb7740b1a7" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-224&quot; message digest.</source>
          <target state="translated">使用 &quot;SHA-224 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="f4145abd624d13b5fd6c271646d555d996874e76" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-256&quot; message digest</source>
          <target state="translated">使用 &quot;SHA-256 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="30567a972c0ebfa4faa9759c8c4f5615d0736a78" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-256&quot; message digest.</source>
          <target state="translated">使用 &quot;SHA-256 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="ffe8090c162f81eda0ca11ad18b4d00f0460668a" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-384&quot; message digest</source>
          <target state="translated">使用 &quot;SHA-384 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="8f743fd5434a0de8774dcd2c54b80badfe4a3dec" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-384&quot; message digest.</source>
          <target state="translated">使用 &quot;SHA-384 &quot;消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="9fcd13c9a51cff2dfe34d11d75622669ff7a2f6f" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512 message digest</source>
          <target state="translated">使用SHA-512信息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="773fa0838097295208f32770a4edbdf66bd50a46" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512 message digest.</source>
          <target state="translated">使用SHA-512消息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="c6fdeb15a6d0d672938ac7162d09074690eabb53" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512/224 message digest</source>
          <target state="translated">使用SHA-512/224信息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="6b740423dca40861f104766ac050de56d78d3f30" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512/256 message digest</source>
          <target state="translated">使用SHA-512/256信息摘要的MGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="516e21a61c986db4b650efb7f3b9edffb19e1c28" translate="yes" xml:space="preserve">
          <source>The MIDI 1.0 Specification defines both 7-bit controllers and 14-bit controllers. Continuous controllers, such as wheels and sliders, typically have 14 bits (two MIDI bytes), while discrete controllers, such as switches, typically have 7 bits (one MIDI byte). Refer to the specification to see the expected resolution for each type of control.</source>
          <target state="translated">MIDI 1.0规范定义了7位控制器和14位控制器,连续控制器,如轮子和滑块,通常有14位(两个MIDI字节),而离散控制器,如开关,通常有7位(一个MIDI字节)。连续控制器,如滚轮和滑块,通常有14位(两个MIDI字节),而离散控制器,如开关,通常有7位(一个MIDI字节)。请参阅规格书,了解每种类型控制器的预期分辨率。</target>
        </trans-unit>
        <trans-unit id="3b90ca10823dacdb7ec1aff6e9c338eb2858be24" translate="yes" xml:space="preserve">
          <source>The MIDI 1.0 specification provides for 16 channels, so this method returns an array of at least 16 elements. However, if this synthesizer doesn't make use of all 16 channels, some of the elements of the array might be &lt;code&gt;null&lt;/code&gt;, so you should check each element before using it.</source>
          <target state="translated">MIDI 1.0规范提供了16个通道，因此此方法返回至少包含16个元素的数组。但是，如果此合成器未使用全部16个通道，则数组中的某些元素可能为 &lt;code&gt;null&lt;/code&gt; ，因此应在使用每个元素之前对其进行检查。</target>
        </trans-unit>
        <trans-unit id="049c7ab3e0f2c876b50b46fe3789a8747dae1e9c" translate="yes" xml:space="preserve">
          <source>The MIDI channel on which this voice is playing.</source>
          <target state="translated">该声音正在播放的MIDI通道。</target>
        </trans-unit>
        <trans-unit id="b52e6c1511e484eaf10f9c3556aee2243b42e67c" translate="yes" xml:space="preserve">
          <source>The MIDI channel on which this voice is playing. The value is a zero-based channel number if the voice is active, or unspecified if the voice is inactive.</source>
          <target state="translated">该声音正在播放的MIDI通道。如果声音处于活动状态,该值是一个基于零的通道号,如果声音处于非活动状态,则未指定。</target>
        </trans-unit>
        <trans-unit id="526debeb157a66f1367b032953ad21ed8a2a5fd6" translate="yes" xml:space="preserve">
          <source>The MIDI message data.</source>
          <target state="translated">MIDI信息数据。</target>
        </trans-unit>
        <trans-unit id="72e471be8e18253cd2fa90755b2430be47a7c9c7" translate="yes" xml:space="preserve">
          <source>The MIDI message data. The first byte is the status byte for the message; subsequent bytes up to the length of the message are data bytes for this message.</source>
          <target state="translated">MIDI信息数据。第一个字节是信息的状态字节,随后的字节直到信息的长度都是该信息的数据字节。</target>
        </trans-unit>
        <trans-unit id="317772b1f4d7bef7e847f7a2507ef5cf22a36f76" translate="yes" xml:space="preserve">
          <source>The MIDI note that this voice is playing.</source>
          <target state="translated">这个声音正在播放的MIDI音符。</target>
        </trans-unit>
        <trans-unit id="09d0f1e1fda22537e5c3106cad4d736b151fe66f" translate="yes" xml:space="preserve">
          <source>The MIDI note that this voice is playing. The range for an active voice is from 0 to 127 in semitones, with 60 referring to Middle C. The value is unspecified if the voice is inactive.</source>
          <target state="translated">该音符正在演奏的MIDI音符。活动音的范围是0到127,以半音为单位,60指的是中音C。</target>
        </trans-unit>
        <trans-unit id="9f275ac1e77302fd1f9c984942071af0000235dd" translate="yes" xml:space="preserve">
          <source>The MIDI specification does not dictate whether notes that are already sounding should switch to the new instrument (timbre) or continue with their original timbre until terminated by a note-off.</source>
          <target state="translated">MIDI规范并没有规定已经发出声音的音符应该切换到新的乐器(音色)上,还是继续保持原来的音色,直到被一个音符终止。</target>
        </trans-unit>
        <trans-unit id="883ec76cbd3a1ad3d350032e79eb664e1f1a784b" translate="yes" xml:space="preserve">
          <source>The MIDI specification stipulates that pitch bend be a 14-bit value, where zero is maximum downward bend, 16383 is maximum upward bend, and 8192 is the center (no pitch bend). The actual amount of pitch change is not specified; it can be changed by a pitch-bend sensitivity setting. However, the General MIDI specification says that the default range should be two semitones up and down from center.</source>
          <target state="translated">MIDI规范规定音高弯曲是一个14位的值,其中0是最大的向下弯曲,16383是最大的向上弯曲,8192是中心(没有音高弯曲)。实际的音高变化量没有规定,它可以通过音高弯曲灵敏度设置来改变。不过,通用MIDI规范中说,默认范围应该是中心上下两个半音。</target>
        </trans-unit>
        <trans-unit id="635898bd1d6ec018c38dd8a4feda9d061e0d6d2b" translate="yes" xml:space="preserve">
          <source>The MIDI specification stipulates that pitch bend be a 14-bit value, where zero is maximum downward bend, 16383 is maximum upward bend, and 8192 is the center (no pitch bend). The actual amount of pitch change is not specified; it can be changed by a pitch-bend sensitivity setting. However, the General MIDI specification says that the default range should be two semitones up and down from center. It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that &lt;code&gt;setPitchBend&lt;/code&gt; was successful, use &lt;code&gt;getPitchBend&lt;/code&gt;.</source>
          <target state="translated">MIDI规范规定，音高弯曲为14位值，其中零是最大向下弯曲，16383是最大向上弯曲，8192是中心（无音高弯曲）。没有指定实际的音高变化量。可以通过弯音灵敏度设置进行更改。但是，通用MIDI规范说默认范围应该是从中心上下两个半音。底层的合成器可能不支持此MIDI消息。为了验证 &lt;code&gt;setPitchBend&lt;/code&gt; 是否成功，请使用 &lt;code&gt;getPitchBend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4c4101d3bd5e4e0ccc23d2b59d331c881ddef1d" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;#getStatus()&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can be converted to integers using this conversion:</source>
          <target state="translated">MIDI标准以字节表示MIDI数据。但是，由于Java使用带符号的字节，因此在表达MIDI数据时，Java Sound API使用整数而不是字节。例如， &lt;code&gt;MidiMessage&lt;/code&gt; 的&lt;a href=&quot;#getStatus()&quot;&gt; &lt;code&gt;getStatus()&lt;/code&gt; &lt;/a&gt;方法以整数形式返回MIDI状态字节。如果您要处理源自Java Sound之外的MIDI数据，现在将它们编码为带符号字节，则可以使用以下转换将字节转换为整数：</target>
        </trans-unit>
        <trans-unit id="7cc37db06eee182d506afa49c0c246f6a9c01a35" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java&amp;trade; uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;#getStatus()&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can be converted to integers using this conversion:</source>
          <target state="translated">MIDI标准以字节表示MIDI数据。但是，由于Java&amp;trade;使用带符号的字节，因此Java Sound API在表示MIDI数据时使用整数而不是字节。例如， &lt;code&gt;MidiMessage&lt;/code&gt; 的&lt;a href=&quot;#getStatus()&quot;&gt; &lt;code&gt;getStatus()&lt;/code&gt; &lt;/a&gt;方法以整数形式返回MIDI状态字节。如果您要处理源自Java Sound之外的MIDI数据，现在将它们编码为带符号字节，则可以使用以下转换将字节转换为整数：</target>
        </trans-unit>
        <trans-unit id="c526e09fb95606778bb5e764a54a0e9f208fc206" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java&lt;sup id=&quot;integersVsBytes&quot;&gt;TM&lt;/sup&gt; uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;midimessage#getStatus--&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can can be converted to integers using this conversion:</source>
          <target state="translated">MIDI标准以字节表示MIDI数据。但是，由于Java &lt;sup id=&quot;integersVsBytes&quot;&gt;TM&lt;/sup&gt;使用带符号的字节，因此Java Sound API在表示MIDI数据时使用整数而不是字节。例如， &lt;code&gt;MidiMessage&lt;/code&gt; 的&lt;a href=&quot;midimessage#getStatus--&quot;&gt; &lt;code&gt;getStatus()&lt;/code&gt; &lt;/a&gt;方法以整数形式返回MIDI状态字节。如果您正在处理源自Java Sound之外的MIDI数据，现在将它们编码为带符号字节，则可以使用以下转换将字节转换为整数：</target>
        </trans-unit>
        <trans-unit id="0c8a2781b35fa31817c29abe30b50e8043af665c" translate="yes" xml:space="preserve">
          <source>The MIDI tracks in this sequence.</source>
          <target state="translated">这个序列中的MIDI轨道。</target>
        </trans-unit>
        <trans-unit id="23a350af8445001f598c4651a4f45324e9f33c23" translate="yes" xml:space="preserve">
          <source>The MLet text file's base URL.</source>
          <target state="translated">MLet文本文件的基本URL。</target>
        </trans-unit>
        <trans-unit id="db0ce9ae1e5d2f89a8f312663fdfbed2b32ba495" translate="yes" xml:space="preserve">
          <source>The MXBean concept provides a simple way to code an MBean that only references a predefined set of types, the ones defined by &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt;. In this way, you can be sure that your MBean will be usable by any client, including remote clients, without any requirement that the client have access to &lt;em&gt;model-specific classes&lt;/em&gt; representing the types of your MBeans.</source>
          <target state="translated">MXBean概念提供了一种简单的方法来编写仅引用预定义类型集（由&lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; &lt;/a&gt;定义的类型）的MBean 。这样，您可以确保您的MBean可被任何客户端（包括远程客户端）使用，而无需客户端有权访问代表MBean类型的&lt;em&gt;特定&lt;/em&gt;于&lt;em&gt;模型的类&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e33c92fe4338e85410252cbf5f86c27123acc080" translate="yes" xml:space="preserve">
          <source>The Malayalam range with the Malayalam digits.</source>
          <target state="translated">马拉雅拉姆语的范围与马拉雅拉姆语的数字。</target>
        </trans-unit>
        <trans-unit id="d4a3d1afcec2a7b84cb429f3bcbbf430180a0aa8" translate="yes" xml:space="preserve">
          <source>The ManageReferral control's assigned object identifier is 2.16.840.1.113730.3.4.2.</source>
          <target state="translated">ManageReferral控件的指定对象标识符为2.16.840.1.113730.3.4.2。</target>
        </trans-unit>
        <trans-unit id="f0c9875b8d07e007e2745fc0af6fe732b94df483" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes.</source>
          <target state="translated">Manifest类用于维护Manifest条目名称及其相关的Attributes。</target>
        </trans-unit>
        <trans-unit id="0f91edbc800e6ebe0a97d46777ffeab5dd79019f" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the  Manifest format specification.</source>
          <target state="translated">Manifest类用于维护Manifest条目名称及其相关的属性。有主要的Manifest属性和每个条目的属性。有关Manifest格式的信息,请参见Manifest格式规范。</target>
        </trans-unit>
        <trans-unit id="6b08c1dceec8f387af3ac7117a090db5f90ca9a8" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt; Manifest format specification&lt;/a&gt;.</source>
          <target state="translated">清单类用于维护清单条目名称及其关联的属性。有主要的清单属性以及每个条目属性。有关清单格式的信息，请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;清单格式规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af81b22d465ae1e7d170117e7b040f06e9f7354e" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt; Manifest format specification&lt;/a&gt;.</source>
          <target state="translated">清单类用于维护清单条目名称及其关联的属性。有主要的清单属性以及每个条目属性。有关清单格式的信息，请参阅&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;清单格式规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a14dcb9ffe833bd8ff0c3971c624e1ee8fa1ea44" translate="yes" xml:space="preserve">
          <source>The MediaSize is in turn used to locate the MediaSizeName object. This method may return null if the closest matching MediaSize has no corresponding Media instance.</source>
          <target state="translated">MediaSize 又用于定位 MediaSizeName 对象。如果最接近的匹配 MediaSize 没有对应的 Media 实例,则此方法可能返回 null。</target>
        </trans-unit>
        <trans-unit id="c7f2589c5eb6fefc0630c3f00ed4bcf6743212bf" translate="yes" xml:space="preserve">
          <source>The MediaType instance for 6 3/4 envelope, 3 5/8 x 6 1/2 in.</source>
          <target state="translated">6 3/4信封的MediaType实例,3 5/8 x 6 1/2英寸。</target>
        </trans-unit>
        <trans-unit id="573f4b6872edf71d06ba58486250a54311c264a2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering A, 8 1/2 x 11 in.</source>
          <target state="translated">工程A的MediaType实例,8 1/2 x 11 in.</target>
        </trans-unit>
        <trans-unit id="64d3072107241435185f88936c6286ff514d147e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering B, 11 x 17 in.</source>
          <target state="translated">Engineering B 的 MediaType 实例,11 x 17 in.</target>
        </trans-unit>
        <trans-unit id="c7692968c3215d63e31ac87679acd24d403571f9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering C, 17 x 22 in.</source>
          <target state="translated">工程C的MediaType实例,17 x 22英寸。</target>
        </trans-unit>
        <trans-unit id="9f478c8d9d5bcb2ea8dcf961f52385b3f2895b9b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering D, 22 x 34 in.</source>
          <target state="translated">工程D的MediaType实例,22 x 34 in.</target>
        </trans-unit>
        <trans-unit id="dbaba1c80bc3cfe1b7c16c807a907a7e87387b83" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering E, 34 x 44 in.</source>
          <target state="translated">工程E的MediaType实例,34 x 44英寸。</target>
        </trans-unit>
        <trans-unit id="0b90d28550428199920f8f10dbe0d35f58b47e46" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Executive, 7 1/4 x 10 1/2 in.</source>
          <target state="translated">Executive的MediaType实例,7 1/4 x 10 1/2 in.</target>
        </trans-unit>
        <trans-unit id="54db702c63c3eba7e3cf9613a7e24e501b5591f5" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Folio, 8 1/2 x 13 in.</source>
          <target state="translated">对开页的MediaType实例,8 1/2 x 13 in.</target>
        </trans-unit>
        <trans-unit id="ca7bc12d3f763cdf64763c795bba0f7408968808" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO Designated Long, 110 x 220 mm.</source>
          <target state="translated">ISO指定长型的MediaType实例,110 x 220 mm。</target>
        </trans-unit>
        <trans-unit id="673633bbfb4eae0e9618c4e988561b66316b66a0" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B0, 1000 x 1414 mm.</source>
          <target state="translated">ISO/DIN B0的MediaType实例,1000 x 1414 mm。</target>
        </trans-unit>
        <trans-unit id="633a4f5076112dbd2c6bb5d62adea677c380d4c2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B1, 707 x 1000 mm.</source>
          <target state="translated">ISO/DIN B1的MediaType实例,707 x 1000 mm。</target>
        </trans-unit>
        <trans-unit id="bf0b29aa253400f76f92bbb770579b1dcd7bd212" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B10, 31 x 44 mm.</source>
          <target state="translated">ISO/DIN B10的MediaType实例,31 x 44 mm。</target>
        </trans-unit>
        <trans-unit id="408b81ca2d63672d842cbe95759d93c0ce23fda0" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B2, 500 x 707 mm.</source>
          <target state="translated">ISO/DIN B2的MediaType实例,500 x 707 mm。</target>
        </trans-unit>
        <trans-unit id="d35e4f9c90e881101d512c07c9ef78a1b2c0a590" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B3, 353 x 500 mm.</source>
          <target state="translated">ISO/DIN B3的MediaType实例,353 x 500 mm。</target>
        </trans-unit>
        <trans-unit id="e85b6c3c90193600f59176d247f27a7869e5f80b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B4, 250 x 353 mm.</source>
          <target state="translated">ISO/DIN B4的MediaType实例,250 x 353 mm。</target>
        </trans-unit>
        <trans-unit id="9466895dc6ed7b01f8a05d2480595fe918fe866f" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B5, 176 x 250 mm.</source>
          <target state="translated">ISO/DIN B5的MediaType实例,176 x 250 mm。</target>
        </trans-unit>
        <trans-unit id="f5f57afdb5af642624b9ff15644c03935fea3c26" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B6, 125 x 176 mm.</source>
          <target state="translated">ISO/DIN B6的MediaType实例,125 x 176 mm。</target>
        </trans-unit>
        <trans-unit id="bbc65a80b94626d534fba496c26601f37eb9cc7e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B7, 88 x 125 mm.</source>
          <target state="translated">ISO/DIN B7的MediaType实例,88 x 125 mm。</target>
        </trans-unit>
        <trans-unit id="5370845fbcc7ff27e93c3f3b2c5afa54c06aba5d" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B8, 62 x 88 mm.</source>
          <target state="translated">ISO/DIN B8的MediaType实例,62 x 88 mm。</target>
        </trans-unit>
        <trans-unit id="c7376e552997d46d8fb4da906538a74a1187916b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B9, 44 x 62 mm.</source>
          <target state="translated">ISO/DIN B9的MediaType实例,44 x 62 mm。</target>
        </trans-unit>
        <trans-unit id="b605875476890cef42c14810fd8b9dd8f581a802" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C0, 917 x 1297 mm.</source>
          <target state="translated">ISO/DIN C0的MediaType实例,917 x 1297毫米。</target>
        </trans-unit>
        <trans-unit id="138165f085ea155edd49258fe3b30b06ae636a75" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C1, 648 x 917 mm.</source>
          <target state="translated">ISO/DIN C1的MediaType实例,648 x 917 mm。</target>
        </trans-unit>
        <trans-unit id="be46d31b238340f94c16e8449c4cc1ba35914fba" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C10, 28 x 40 mm.</source>
          <target state="translated">ISO/DIN C10的MediaType实例,28 x 40 mm。</target>
        </trans-unit>
        <trans-unit id="4b4e963d6d8911274eec2d4e53cbadd5d162003e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C2, 458 x 648 mm.</source>
          <target state="translated">ISO/DIN C2的MediaType实例,458 x 648 mm。</target>
        </trans-unit>
        <trans-unit id="2968745b19f968d7dfda3dd7e5b36fc63c8c63f9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C3, 324 x 458 mm.</source>
          <target state="translated">ISO/DIN C3的MediaType实例,324 x 458 mm。</target>
        </trans-unit>
        <trans-unit id="2fd2805e5fa3604a42759df5243a86b5bdc6840a" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C4, 229 x 324 mm.</source>
          <target state="translated">ISO/DIN C4的MediaType实例,229 x 324 mm。</target>
        </trans-unit>
        <trans-unit id="7c6e34d5a1e6aac5f93ac6c39efb2cefc933c905" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C5, 162 x 229 mm.</source>
          <target state="translated">ISO/DIN C5的MediaType实例,162 x 229 mm。</target>
        </trans-unit>
        <trans-unit id="e88dde0a1f5037536d3ca8917b55e40b8bff2eca" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C6, 114 x 162 mm.</source>
          <target state="translated">ISO/DIN C6的MediaType实例,114 x 162 mm。</target>
        </trans-unit>
        <trans-unit id="728de0db508ce4ed22627bdf4dff61dcb6ec0b00" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C7, 81 x 114 mm.</source>
          <target state="translated">ISO/DIN C7的MediaType实例,81 x 114 mm。</target>
        </trans-unit>
        <trans-unit id="b67749263b75857473962b93d2efb5003c81647c" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C8, 57 x 81 mm.</source>
          <target state="translated">ISO/DIN C8的MediaType实例,57 x 81 mm。</target>
        </trans-unit>
        <trans-unit id="cc097e0463fec0dad72b2003cd307d811124eca5" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C9, 40 x 57 mm.</source>
          <target state="translated">ISO/DIN C9的MediaType实例,40 x 57 mm。</target>
        </trans-unit>
        <trans-unit id="e8fafbff47ed712ab286e6dc1fa034d9363ce45c" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS 2A0, 1189 x 1682 mm.</source>
          <target state="translated">ISO/DIN和JIS 2A0的MediaType实例,1189 x 1682 mm。</target>
        </trans-unit>
        <trans-unit id="edcb8ad8ea42994b67f5c173c3561cb16040e0aa" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS 4A0, 1682 x 2378 mm.</source>
          <target state="translated">ISO/DIN和JIS 4A0的MediaType实例,1682 x 2378 mm。</target>
        </trans-unit>
        <trans-unit id="a48de2f0a2ffeecfbbe66c09c3607f92aaa24545" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A0, 841 x 1189 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A0的MediaType实例,841 x 1189 mm。</target>
        </trans-unit>
        <trans-unit id="5152c1950aee7fa8cea203995f6c2ba0e1137c65" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A1, 594 x 841 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A1的MediaType实例,594 x 841 mm。</target>
        </trans-unit>
        <trans-unit id="d9b5f248232afa5f459ffca326f0e43135da8cce" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A10, 26 x 37 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A10的MediaType实例,26 x 37 mm。</target>
        </trans-unit>
        <trans-unit id="07417af7ef502ffcf2b82a7c0bb15b59d75da8ca" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A2, 420 x 594 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A2的MediaType实例,420 x 594 mm。</target>
        </trans-unit>
        <trans-unit id="c18ab19c5b73307d4ae2d012a6c63e869ea1be79" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A3, 297 x 420 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A3的MediaType实例,297 x 420 mm。</target>
        </trans-unit>
        <trans-unit id="3e57797753cccdaa5bba861bfecab4b85c3078df" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A4, 210 x 297 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A4的MediaType实例,210 x 297 mm。</target>
        </trans-unit>
        <trans-unit id="58e7d9a8b01a945f936e646cc8cac08b4951be27" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A5, 148 x 210 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A5的MediaType实例,148 x 210 mm。</target>
        </trans-unit>
        <trans-unit id="29fb2ce4c6f868125b147a456624ea74c38273ea" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A6, 105 x 148 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A6的MediaType实例,105 x 148 mm。</target>
        </trans-unit>
        <trans-unit id="d3588072c88be42806e1f398f2dc865322bbd86f" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A7, 74 x 105 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A7的MediaType实例,74 x 105 mm。</target>
        </trans-unit>
        <trans-unit id="1319cf82239614d64b53239bd9ea6fd2c7c9ae03" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A8, 52 x 74 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A8的MediaType实例,52 x 74 mm。</target>
        </trans-unit>
        <trans-unit id="8a8577a2d01de8ea714249530b84b9319027e6ef" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A9, 37 x 52 mm.</source>
          <target state="translated">适用于ISO/DIN和JIS A9的MediaType实例,37 x 52 mm。</target>
        </trans-unit>
        <trans-unit id="6ebdb0af9b5bd1dbcd81aae7f76b05eb82e9f251" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Invitation Envelope, 220 x 220 mm.</source>
          <target state="translated">邀请函的MediaType实例,220 x 220 mm。</target>
        </trans-unit>
        <trans-unit id="284a9938133c0bc7737e5a5628d9964a4a455ec9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Invoice, 5 1/2 x 8 1/2 in.</source>
          <target state="translated">发票的MediaType实例,5 1/2 x 8 1/2 in.</target>
        </trans-unit>
        <trans-unit id="9df3876557a49a66925ac34f30679b8b271b0ffd" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Italy Envelope, 110 x 230 mm.</source>
          <target state="translated">意大利信封的MediaType实例,110 x 230 mm。</target>
        </trans-unit>
        <trans-unit id="d1f205f909b279d4b54614f525425281ab998a62" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B0, 1030 x 1456 mm.</source>
          <target state="translated">JIS B0的MediaType实例,1030×1456mm。</target>
        </trans-unit>
        <trans-unit id="7a3507131ac0a58b25713da630370ac083d42bad" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B1, 728 x 1030 mm.</source>
          <target state="translated">JIS B1的MediaType实例,728×1030mm。</target>
        </trans-unit>
        <trans-unit id="b6fb0e7883f5067ab230e26f1b7333611f313dac" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B10, 32 x 45 mm.</source>
          <target state="translated">JIS B10的MediaType实例,32 x 45 mm。</target>
        </trans-unit>
        <trans-unit id="28ca85b7db426b9609f7e87f5b658d49d4b8458c" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B2, 515 x 728 mm.</source>
          <target state="translated">JIS B2的MediaType实例,515 x 728 mm。</target>
        </trans-unit>
        <trans-unit id="559f9edb2d44e6af611dda54ecb423c3659926f1" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B3, 364 x 515 mm.</source>
          <target state="translated">JIS B3的MediaType实例,364×515mm。</target>
        </trans-unit>
        <trans-unit id="9683c97a0ab0d280070a8d40bbc88bb83ddbc7fc" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B4, 257 x 364 mm.</source>
          <target state="translated">JIS B4的MediaType实例,257×364mm。</target>
        </trans-unit>
        <trans-unit id="c748db60b813ead222252bc7ed474c22dc101620" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B5, 182 x 257 mm.</source>
          <target state="translated">JIS B5的MediaType实例,182 x 257 mm。</target>
        </trans-unit>
        <trans-unit id="3f710af7e6fad592cae964d3b21f236da76cbd78" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B6, 128 x 182 mm.</source>
          <target state="translated">JIS B6的MediaType实例,128 x 182 mm。</target>
        </trans-unit>
        <trans-unit id="118ac4356b9094747ba3b05a39dbc303db47f99b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B7, 91 x 128 mm.</source>
          <target state="translated">JIS B7的MediaType实例,91 x 128 mm。</target>
        </trans-unit>
        <trans-unit id="d2f3ccf956d631e9cb14695a4712862293384cd7" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B8, 64 x 91 mm.</source>
          <target state="translated">JIS B8的MediaType实例,64 x 91 mm。</target>
        </trans-unit>
        <trans-unit id="965b48c83b9684550d85818602c850891b0bfbac" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B9, 45 x 64 mm.</source>
          <target state="translated">JIS B9的MediaType实例,45 x 64 mm。</target>
        </trans-unit>
        <trans-unit id="08e8d5ad8aedd8df9a2705ecd63e13040f593461" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Ledger, 11 x 17 in.</source>
          <target state="translated">Ledger 的 MediaType 实例,11 x 17 英寸。</target>
        </trans-unit>
        <trans-unit id="cbffd20c909d16fb73a0618879035890db592698" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Monarch Envelope, 3 7/8 x 7 1/2 in.</source>
          <target state="translated">Monarch信封的MediaType实例,3 7/8 x 7 1/2英寸。</target>
        </trans-unit>
        <trans-unit id="2809eb9e95cca61581af46e1c5d4b071b752e6e2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #10 Business Envelope, 4 1/8 x 9 1/2 in.</source>
          <target state="translated">北美#10商务信封的MediaType实例,4 1/8 x 9 1/2 in.</target>
        </trans-unit>
        <trans-unit id="6a00b206e640e9009fd313fb09be1fb2b3071af2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #11 Business Envelope, 4 1/2 x 10 3/8 in.</source>
          <target state="translated">北美#11商务信封的MediaType实例,4 1/2 x 10 3/8英寸。</target>
        </trans-unit>
        <trans-unit id="58adf13bb88ed68eb98e06f030474a6c380617af" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #12 Business Envelope, 4 3/4 x 11 in.</source>
          <target state="translated">北美#12商务信封的MediaType实例,4 3/4 x 11 in.</target>
        </trans-unit>
        <trans-unit id="7e0986a1bed3d7a471357fa11804986a159c01db" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #14 Business Envelope, 5 x 11 1/2 in.</source>
          <target state="translated">MediaType实例为北美#14商务信封,5 x 11 1/2英寸。</target>
        </trans-unit>
        <trans-unit id="93008a331376be010dd94f80b34dfb88f45f138e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #9 Business Envelope, 3 7/8 x 8 7/8 in.</source>
          <target state="translated">MediaType实例为北美#9商务信封,3 7/8 x 8 7/8 in.</target>
        </trans-unit>
        <trans-unit id="54bd22dfffb84fe412c08cb7e97e0713b39de2c1" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 10 x 13 in.</source>
          <target state="translated">北美10 x 13英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="b3e00aa7daada662140fb382c24f0834b8fb0aaa" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 10 x 14 in.</source>
          <target state="translated">北美10 x 14英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="437bb5aff9176e384a9a374f460e9b82e4e77e33" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 10 x 15 in.</source>
          <target state="translated">北美10 x 15英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="746fa05a28ed0de64b6070da461617a50ce099a9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 6 x 9 in.</source>
          <target state="translated">北美6 x 9英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="3dd618276eaf23db123f5ac0dba2a04b8090db50" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 7 x 9 in.</source>
          <target state="translated">北美7 x 9英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="0ad3eb69fcd194e7aefbe10391d439acb76f4834" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 9 x 11 in.</source>
          <target state="translated">北美9 x 11英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="d38c08e580f4d74f2d8590c57c9bcd7fc9202c26" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 9 x 12 in.</source>
          <target state="translated">北美9 x 12英寸的MediaType实例。</target>
        </trans-unit>
        <trans-unit id="77561bd1ac7d493abd82509f5322a0d89ce61c27" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American Legal, 8 1/2 x 14 in.</source>
          <target state="translated">北美法律的MediaType实例,8 1/2 x 14 in.</target>
        </trans-unit>
        <trans-unit id="b6301557a78b184376740b0bf884635471dd48da" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American Letter, 8 1/2 x 11 in.</source>
          <target state="translated">MediaType实例为North American Letter,8 1/2 x 11 in.</target>
        </trans-unit>
        <trans-unit id="f786c8f1c63c1c613edc22c586577870a4531932" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Quarto, 215 x 275 mm.</source>
          <target state="translated">媒体类型实例为Quarto,215 x 275 mm。</target>
        </trans-unit>
        <trans-unit id="998f2712a3a90e84218b3e0b194373c93820adc3" translate="yes" xml:space="preserve">
          <source>The Meetei Mayek range with the Meetei Mayek digits.</source>
          <target state="translated">玫玫克系列与玫玫克数字。</target>
        </trans-unit>
        <trans-unit id="7a16633fa40606c8afd41af115a269d2362fbb6e" translate="yes" xml:space="preserve">
          <source>The MemoryImageSource is also capable of managing a memory image which varies over time to allow animation or custom rendering. Here is an example showing how to set up the animation source and signal changes in the data (adapted from the MemoryAnimationSourceDemo by Garth Dickie):</source>
          <target state="translated">MemoryImageSource还能够管理一个随时间变化的内存图像,以允许动画或自定义渲染。下面是一个例子,展示了如何设置动画源和数据变化的信号(改编自Garth Dickie的MemoryAnimationSourceDemo)。</target>
        </trans-unit>
        <trans-unit id="2ba25dec67967ea91f752676ffd7c09867b52b7f" translate="yes" xml:space="preserve">
          <source>The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP indicating the strength of protection that was applied to the message and other supplementary message state information.</source>
          <target state="translated">MessageProp对象由应用程序实例化,并由底层机制用于向调用者返回信息,如表示对消息施加的保护强度的QOP和其他补充消息状态信息。</target>
        </trans-unit>
        <trans-unit id="237b7bd0839d25260d44d915861351b309bae340" translate="yes" xml:space="preserve">
          <source>The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP, whether confidentiality was applied to the message, and other supplementary message state information.</source>
          <target state="translated">MessageProp对象由应用程序实例化,由底层机制用于向调用者返回信息,如QOP、是否对消息进行了保密,以及其他补充消息状态信息。</target>
        </trans-unit>
        <trans-unit id="f94aa6f7289a229745c48f83698c13d487ddaab9" translate="yes" xml:space="preserve">
          <source>The MessageProp object is instantiated by the application and used to specify a QOP value which selects cryptographic algorithms, and a privacy service to optionally encrypt the message. The underlying mechanism that is used in the call may not be able to provide the privacy service. It sets the actual privacy service that it does provide in this MessageProp object which the caller should then query upon return. If the mechanism is not able to provide the requested QOP, it throws a GSSException with the BAD_QOP code.</source>
          <target state="translated">MessageProp对象由应用程序实例化,并用于指定选择加密算法的QOP值,以及对消息进行选择性加密的隐私服务。在调用中使用的底层机制可能无法提供隐私服务。它在这个MessageProp对象中设置了它实际提供的隐私服务,调用者应该在返回时查询。如果机制无法提供所请求的QOP,它就会抛出一个带有BAD_QOP代码的GSSException。</target>
        </trans-unit>
        <trans-unit id="61516ce935dd7b488fdbc612f5b14f5e3dcf1ad2" translate="yes" xml:space="preserve">
          <source>The Meta key extended modifier constant.</source>
          <target state="translated">元键扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="507d8e20b6162f00db7d5c2171a5204a0d6e3976" translate="yes" xml:space="preserve">
          <source>The Meta key modifier constant.</source>
          <target state="translated">元键修饰常数。</target>
        </trans-unit>
        <trans-unit id="b5d82a163a9f53ffdc5df9d6562d4ccaf06fdd68" translate="yes" xml:space="preserve">
          <source>The Metal implementation of ProgressBarUI.</source>
          <target state="translated">ProgressBarUI的Metal实现。</target>
        </trans-unit>
        <trans-unit id="ff60eb164b3eb146d9fb4d86b4417a36702eeb86" translate="yes" xml:space="preserve">
          <source>The Metal subclass of BasicTabbedPaneUI.</source>
          <target state="translated">BasicTabbedPaneUI的Metal子类。</target>
        </trans-unit>
        <trans-unit id="875260bee7cb4b86188f6d5c14bdd4b99434b19c" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system has two eras, 'ROC' and 'BEFORE_ROC', defined by &lt;a href=&quot;minguoera&quot;&gt;&lt;code&gt;MinguoEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">民国日历系统具有两个时代，&amp;ldquo;中华民国&amp;rdquo;和&amp;ldquo;BEFORE_ROC&amp;rdquo;，通过定义&lt;a href=&quot;minguoera&quot;&gt; &lt;code&gt;MinguoEra&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8488e49133ae34f00360eaccd8da765934bd62e6" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system has two eras. The current era, for years from 1 onwards, is known as the 'Republic of China' era. All previous years, zero or earlier in the proleptic count or one and greater in the year-of-era count, are part of the 'Before Republic of China' era.</source>
          <target state="translated">民国历法体系有两个时代。当前时代,从1开始的年份,称为'中华民国'时代。凡是以前的年份,亲数为0或更早的年份,或年代数为1及以上的年份,都属于'民国前'时代。</target>
        </trans-unit>
        <trans-unit id="82fefb5d3040f57efd3b63bb98ca09fc3ccfc0a0" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system.</source>
          <target state="translated">民国历制。</target>
        </trans-unit>
        <trans-unit id="53001a7acd9647bac32dcf33bf0c1c4be2ae82ab" translate="yes" xml:space="preserve">
          <source>The Minimum size for this component is 10.</source>
          <target state="translated">该组件的最小尺寸为10。</target>
        </trans-unit>
        <trans-unit id="893ac55162eba5c07c0982b5961ca183969c45a8" translate="yes" xml:space="preserve">
          <source>The Minimum size for this component is 10. The rationale here is that there should be at least one pixel per 10 percent.</source>
          <target state="translated">这个组件的最小尺寸是10。这里的理由是,每10%至少应该有一个像素。</target>
        </trans-unit>
        <trans-unit id="a545218db7a03aed04c1ac511afdb4cfed76973c" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo isReadable method returns 'false'.</source>
          <target state="translated">ModelMBeanAttributeInfo isReadable方法返回'false'。</target>
        </trans-unit>
        <trans-unit id="622c5c9f064611bbc382eb21caab00da9baf69e6" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.</source>
          <target state="translated">ModelMBeanAttributeInfo对象描述了ModelMBean的一个属性。</target>
        </trans-unit>
        <trans-unit id="7515b956ff4baf3913874b737697b14e24efd566" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean. It is a subclass of MBeanAttributeInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanAttributeInfo对象描述了ModelMBean的一个属性,它是MBeanAttributeInfo的子类,增加了一个相关的Descriptor和DescriptorAccess接口的实现。它是MBeanAttributeInfo的一个子类,增加了一个关联的Descriptor和DescriptorAccess接口的实现。</target>
        </trans-unit>
        <trans-unit id="0c7970e27c195e599aad6a1440a8c2fd34d10c3b" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo's isWritable method returns 'false'.</source>
          <target state="translated">ModelMBeanAttributeInfo的isWritable方法返回'false'。</target>
        </trans-unit>
        <trans-unit id="ee6068579dec79a74358815593f8fb0ae992ddc8" translate="yes" xml:space="preserve">
          <source>The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.</source>
          <target state="translated">ModelMBeanConstructorInfo对象描述了一个ModelMBean的构造函数。</target>
        </trans-unit>
        <trans-unit id="d6d0e1ffbdbc4b382742186b6969198f0e473566" translate="yes" xml:space="preserve">
          <source>The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean. It is a subclass of MBeanConstructorInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanConstructorInfo对象描述了一个ModelMBean的构造函数,它是MBeanConstructorInfo的一个子类,增加了相关的Descriptor和DescriptorAccess接口的实现。它是MBeanConstructorInfo的一个子类,增加了一个关联的Descriptor和DescriptorAccess接口的实现。</target>
        </trans-unit>
        <trans-unit id="9ea1fe7432118222c8edb7be56bce005b9d32202" translate="yes" xml:space="preserve">
          <source>The ModelMBeanInfo of the Model MBean is stored in a file.</source>
          <target state="translated">模型MBean的ModelMBeanInfo存储在一个文件中。</target>
        </trans-unit>
        <trans-unit id="be717043f5a4f39bd2bd5c39bd928fa423eadd62" translate="yes" xml:space="preserve">
          <source>The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean.</source>
          <target state="translated">ModelMBeanNotificationInfo对象描述一个ModelMBean发出的通知。</target>
        </trans-unit>
        <trans-unit id="0e87a04c7fd637b21db2de3d9c9f1aa8fb0a7e77" translate="yes" xml:space="preserve">
          <source>The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean. It is a subclass of MBeanNotificationInfo with the addition of an associated Descriptor and an implementation of the Descriptor interface.</source>
          <target state="translated">ModelMBeanNotificationInfo对象描述了由ModelMBean发出的通知,它是MBeanNotificationInfo的一个子类,增加了相关的Descriptor和Descriptor接口的实现。它是MBeanNotificationInfo的一个子类,增加了一个关联的Descriptor和Descriptor接口的实现。</target>
        </trans-unit>
        <trans-unit id="fe7d736d21ad24599ca368ba9eda956e4fa29c39" translate="yes" xml:space="preserve">
          <source>The ModelMBeanOperationInfo object describes a management operation of the ModelMBean.</source>
          <target state="translated">ModelMBeanOperationInfo对象描述了ModelMBean的管理操作。</target>
        </trans-unit>
        <trans-unit id="f0a2617a3fc98a6c5d488b0a6049a4f3b639a203" translate="yes" xml:space="preserve">
          <source>The ModelMBeanOperationInfo object describes a management operation of the ModelMBean. It is a subclass of MBeanOperationInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanOperationInfo对象描述了ModelMBean的管理操作。它是MBeanOperationInfo的一个子类,增加了一个关联的Descriptor和DescriptorAccess接口的实现。</target>
        </trans-unit>
        <trans-unit id="513ceb059a7b6fcddfe05011f87eba04b0d4e534" translate="yes" xml:space="preserve">
          <source>The Modifier class provides &lt;code&gt;static&lt;/code&gt; methods and constants to decode class and member access modifiers.</source>
          <target state="translated">Modifier类提供了 &lt;code&gt;static&lt;/code&gt; 方法和常量来解码类和成员访问修饰符。</target>
        </trans-unit>
        <trans-unit id="01b236d448fafe1eecbecf699e0dbd1752899ea4" translate="yes" xml:space="preserve">
          <source>The Modifier class provides &lt;code&gt;static&lt;/code&gt; methods and constants to decode class and member access modifiers. The sets of modifiers are represented as integers with distinct bit positions representing different modifiers. The values for the constants representing the modifiers are taken from the tables in sections 4.1, 4.4, 4.5, and 4.7 of</source>
          <target state="translated">Modifier类提供了 &lt;code&gt;static&lt;/code&gt; 方法和常量来解码类和成员访问修饰符。修饰符集用整数表示，整数位代表不同的修饰符。表示修饰符的常量的值取自第4.1、4.4、4.5和4.7节中的表。</target>
        </trans-unit>
        <trans-unit id="147218b3793553c6b152bc61f1b6863a14d4552d" translate="yes" xml:space="preserve">
          <source>The Mongolian range with the Mongolian digits.</source>
          <target state="translated">蒙古族的范围与蒙古族的数字。</target>
        </trans-unit>
        <trans-unit id="d4ae824181721cb564241d8f0b6762682d46721e" translate="yes" xml:space="preserve">
          <source>The Mouse Button1 extended modifier constant.</source>
          <target state="translated">鼠标按钮1扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="36f1dd4b84698f2f168f968f1caef9d5816c2cad" translate="yes" xml:space="preserve">
          <source>The Mouse Button1 modifier constant.</source>
          <target state="translated">鼠标按钮1修改器常数。</target>
        </trans-unit>
        <trans-unit id="7479352e34f2d634b6076357847f56a729ff8cbc" translate="yes" xml:space="preserve">
          <source>The Mouse Button2 extended modifier constant.</source>
          <target state="translated">鼠标按钮2扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="cd5f53c16d765610f8cd6bfeea0f5863ac7f2aa9" translate="yes" xml:space="preserve">
          <source>The Mouse Button2 modifier constant.</source>
          <target state="translated">鼠标按钮2修改器常数。</target>
        </trans-unit>
        <trans-unit id="83642f43ba8fddd538948fe313e6eeaae2573de8" translate="yes" xml:space="preserve">
          <source>The Mouse Button3 extended modifier constant.</source>
          <target state="translated">鼠标按钮3扩展修饰常数。</target>
        </trans-unit>
        <trans-unit id="a20281ec405691a7568eeb99c14a936676c4035e" translate="yes" xml:space="preserve">
          <source>The Mouse Button3 modifier constant.</source>
          <target state="translated">鼠标按钮3修改器常数。</target>
        </trans-unit>
        <trans-unit id="05f5a5006691f90b4276e21b323e87245864d43a" translate="yes" xml:space="preserve">
          <source>The Myanmar Extended-B range with the Myanmar Tai Laing digits.</source>
          <target state="translated">缅甸扩展-B系列与缅甸泰来数字。</target>
        </trans-unit>
        <trans-unit id="5d426691e21fd73966b8897676ebfc3571346951" translate="yes" xml:space="preserve">
          <source>The Myanmar range with the Myanmar Shan digits.</source>
          <target state="translated">缅甸范围内的缅掸数。</target>
        </trans-unit>
        <trans-unit id="ec1b0128ec2d3f55537b22b5fc6f1544811b51e3" translate="yes" xml:space="preserve">
          <source>The Myanmar range with the Myanmar digits.</source>
          <target state="translated">缅甸的范围与缅甸的数字。</target>
        </trans-unit>
        <trans-unit id="38fb7495dfe24e23d739f8db0ae47f092cec8470" translate="yes" xml:space="preserve">
          <source>The N'Ko range with the N'Ko digits.</source>
          <target state="translated">N'Ko范围与N'Ko数字。</target>
        </trans-unit>
        <trans-unit id="2333e86e53a0d2dc1db2ea3db8dcf5c9ff0df51f" translate="yes" xml:space="preserve">
          <source>The NUMERIC_SHAPING attribute in the text, if present, converts European digits to other decimal digits before running the bidi algorithm. This attribute, if present, must be applied to all the text in the paragraph.</source>
          <target state="translated">文本中的NUMERIC_SHAPING属性,如果存在,则在运行bidi算法之前,将欧式数字转换为其他十进制数字。这个属性如果存在,必须应用于该段的所有文本。</target>
        </trans-unit>
        <trans-unit id="1b0c4095bf6e6786886376a2ab5cf659ab61071c" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part and prefix are not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">命名空间URI未被验证为&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI引用&lt;/a&gt;。本地部分和前缀未验证为&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;XML名称空间中&lt;/a&gt;指定的&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9860fd3cf2e82656195040828fb908cd32572177" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part is not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">命名空间URI未被验证为&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI引用&lt;/a&gt;。正如&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;XML的&amp;ldquo;名称空间&amp;rdquo;中&lt;/a&gt;指定的那样，未将本地部分验证为&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9851aa4437262220bf8dbd048bf6ed520942805" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part and prefix are not validated as a &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">命名空间URI未被验证为&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI引用&lt;/a&gt;。本地部分和前缀未验证为&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;XML名称空间中&lt;/a&gt;指定的&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ea1b910195c3b31f032d85ab5bd0d269e37b618" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part is not validated as a &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">命名空间URI未被验证为&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI引用&lt;/a&gt;。正如&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;XML的&amp;ldquo;名称空间&amp;rdquo;中&lt;/a&gt;指定的那样，未将本地部分验证为&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0fc16e86f02bd75076a767ae77a361cf9c75705" translate="yes" xml:space="preserve">
          <source>The Namespace URI, or an empty string if none is in use.</source>
          <target state="translated">命名空间URI,如果没有使用,则为空字符串。</target>
        </trans-unit>
        <trans-unit id="8b5974aa1b16d92497e0200180a3ad8896e31774" translate="yes" xml:space="preserve">
          <source>The Namespace URI, or the empty string if none is available, or null if the index is out of range.</source>
          <target state="translated">命名空间URI,如果没有,则为空字符串,如果索引超出范围,则为空。</target>
        </trans-unit>
        <trans-unit id="cf7642f87956e8bd9a081d6f1bbf36661694d8ce" translate="yes" xml:space="preserve">
          <source>The Namespace URI, the empty string if none is available, or null if the index is out of range.</source>
          <target state="translated">命名空间URI,如果没有,则为空字符串,如果索引超出范围,则为空。</target>
        </trans-unit>
        <trans-unit id="349839596e03d0ac0126c309092e36e03e011173" translate="yes" xml:space="preserve">
          <source>The Namespace support object always starts with a base context already in force: in this context, only the &quot;xml&quot; prefix is declared.</source>
          <target state="translated">命名空间支持对象总是以一个已经生效的基础上下文开始:在这个上下文中,只声明 &quot;xml &quot;前缀。</target>
        </trans-unit>
        <trans-unit id="463ad161e211102811e3b4f729e92c59017920f0" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using OBJECT_SCOPE will contain one or zero element. The enumeration contains one element if the named object satisfies the search filter specified in search(). The element will have as its name the empty string because the names of elements in the NamingEnumeration are relative to the target context--in this case, the target context is the named object. It contains zero element if the named object does not satisfy the search filter specified in search().</source>
          <target state="translated">使用OBJECT_SCOPE的search()产生的NamingEnumeration将包含一个或零个元素。如果命名的对象满足search()中指定的搜索过滤器,那么这个枚举就包含一个元素。这个元素的名称是空字符串,因为NamingEnumeration中的元素名称是相对于目标上下文的,在这种情况下,目标上下文是被命名的对象。如果命名对象不满足search()中指定的搜索过滤器,则该元素的名称为零。</target>
        </trans-unit>
        <trans-unit id="f597fd36413579878114afaa6d6023419e477bcb" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using ONELEVEL_SCOPE contains elements with objects in the named context that satisfy the search filter specified in search(). The names of elements in the NamingEnumeration are atomic names relative to the named context.</source>
          <target state="translated">使用 ONELEVEL_SCOPE 的 search()所产生的 NamingEnumeration 包含在命名上下文中满足 search()所指定的搜索过滤器的对象的元素。NamingEnumeration中的元素名称是相对于命名上下文的原子名。</target>
        </trans-unit>
        <trans-unit id="da9e1b040a45d5ff3225e516ec2f10b9b87c4fde" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using SUBTREE_SCOPE contains elements of objects from the subtree (including the named context) that satisfy the search filter specified in search(). The names of elements in the NamingEnumeration are either relative to the named context or is a URL string. If the named context satisfies the search filter, it is included in the enumeration with the empty string as its name.</source>
          <target state="translated">使用SUBTREE_SCOPE的search()搜索结果的NamingEnumeration包含了满足search()指定的搜索过滤器的子树(包括命名上下文)对象的元素。NamingEnumeration中元素的名字要么是相对于命名上下文的,要么是一个URL字符串。如果命名的上下文满足搜索过滤器的要求,那么它就会被包含在枚举中,并以空字符串作为它的名字。</target>
        </trans-unit>
        <trans-unit id="0717837b006cdb37b72a3c747375798b59b55ee7" translate="yes" xml:space="preserve">
          <source>The New Tai Lue range with the New Tai Lue digits.</source>
          <target state="translated">新太鲁系列与新太鲁数字。</target>
        </trans-unit>
        <trans-unit id="6ef92ae8e6bbc492d70f78dfd743db2d2318625d" translate="yes" xml:space="preserve">
          <source>The NimbusLookAndFeel class.</source>
          <target state="translated">NimbusLookAndFeel类。</target>
        </trans-unit>
        <trans-unit id="930af5019cfcdd67f8baecc2face9a22fc4ffedd" translate="yes" xml:space="preserve">
          <source>The NimbusLookAndFeel uses a standard naming scheme for entries in the UIDefaults table. The key for each property, state, painter, and other default registered in UIDefaults for a specific Region will begin with the specified &lt;code&gt;prefix&lt;/code&gt;</source>
          <target state="translated">NimbusLookAndFeel对UIDefaults表中的条目使用标准命名方案。在UIDefaults中为特定区域注册的每个属性，状态，画笔和其他默认键的键将以指定的 &lt;code&gt;prefix&lt;/code&gt; 开头</target>
        </trans-unit>
        <trans-unit id="030dd257d65fcf8444f5ed24a27c3cbccb19f920" translate="yes" xml:space="preserve">
          <source>The NimbusStyle is reloaded whenever a property change event is fired for a component for &quot;Nimbus.Overrides&quot; or &quot;Nimbus.Overrides.InheritDefaults&quot;. So for example, setting a new UIDefaults on a component would cause the style to be reloaded.</source>
          <target state="translated">每当 &quot;Nimbus.Overrides &quot;或 &quot;Nimbus.Overrides.InheritDefaults &quot;组件的属性变化事件被触发时,NimbusStyle就会被重载。因此,例如,在一个组件上设置一个新的UIDefaults会导致风格被重新加载。</target>
        </trans-unit>
        <trans-unit id="b7a36233af8a787ae0e73f20504bb4105ca1942f" translate="yes" xml:space="preserve">
          <source>The Node at the specified position.</source>
          <target state="translated">指定位置的节点。</target>
        </trans-unit>
        <trans-unit id="339f160048f54fde5fb16ed0dd770edbfb611d30" translate="yes" xml:space="preserve">
          <source>The Notification class represents a notification emitted by an MBean.</source>
          <target state="translated">Notification类表示一个MBean发出的通知。</target>
        </trans-unit>
        <trans-unit id="cf39ffb21a4256234c05b38d7bda0371c83db12a" translate="yes" xml:space="preserve">
          <source>The Notification class represents a notification emitted by an MBean. It contains a reference to the source MBean: if the notification has been forwarded through the MBean server, and the original source of the notification was a reference to the emitting MBean object, then the MBean server replaces it by the MBean's ObjectName. If the listener has registered directly with the MBean, this is either the object name or a direct reference to the MBean.</source>
          <target state="translated">Notification类表示一个MBean发出的通知。它包含对源MBean的引用:如果通知是通过MBean服务器转发的,并且通知的原始来源是对发出的MBean对象的引用,那么MBean服务器就会用MBean的ObjectName来代替它。如果监听器已经直接向MBean注册,那么这就是对象名或对MBean的直接引用。</target>
        </trans-unit>
        <trans-unit id="21674881f205ff2b1ebde10ad56146b65e883a73" translate="yes" xml:space="preserve">
          <source>The NullCipher class is a class that provides an &quot;identity cipher&quot; -- one that does not transform the plain text.</source>
          <target state="translated">NullCipher类是一个提供 &quot;身份密码 &quot;的类--一个不转换纯文本的类。</target>
        </trans-unit>
        <trans-unit id="4eba459ac1063b013ecb05450cfc942330983956" translate="yes" xml:space="preserve">
          <source>The NullCipher class is a class that provides an &quot;identity cipher&quot; -- one that does not transform the plain text. As a consequence, the ciphertext is identical to the plaintext. All initialization methods do nothing, while the blocksize is set to 1 byte.</source>
          <target state="translated">NullCipher类是一个提供 &quot;身份密码 &quot;的类 ----一个不转换明文的密码。因此,密文与明文是相同的。所有的初始化方法都不做任何事情,而块大小被设置为1字节。</target>
        </trans-unit>
        <trans-unit id="9bc696b5517a42b3b02a6bb92ed85290770009f8" translate="yes" xml:space="preserve">
          <source>The Num Lock key, a non-ASCII action key.</source>
          <target state="translated">Num Lock键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="af7f35dd7e76fe866932423b2aed6d1fb8aee4d0" translate="yes" xml:space="preserve">
          <source>The OAEP parameter set with all default values.</source>
          <target state="translated">OAEP参数设置为所有默认值。</target>
        </trans-unit>
        <trans-unit id="d3c91484eda423d34310b6f683e8f9c4d38353ad" translate="yes" xml:space="preserve">
          <source>The OCSP responder returns one of the following errors specified in section 2.3 of RFC 2560: internalError or tryLater.</source>
          <target state="translated">OCSP响应者返回RFC 2560的2.3节中指定的以下错误之一:internalError或tryLater。</target>
        </trans-unit>
        <trans-unit id="590e9f81926a84b9e3f08b8204debee01bf90568" translate="yes" xml:space="preserve">
          <source>The Object to which resolution was successful. Cannot be null.</source>
          <target state="translated">解析成功的对象。不能为空。</target>
        </trans-unit>
        <trans-unit id="7b04c18b328378819a5abfef3f9602c4688e2f86" translate="yes" xml:space="preserve">
          <source>The ObjectFactoryBuilder determines the policy used when trying to load object factories.</source>
          <target state="translated">ObjectFactoryBuilder决定了尝试加载对象工厂时使用的策略。</target>
        </trans-unit>
        <trans-unit id="2d9af7dd4afe4b3827fea167ae916792006d5495" translate="yes" xml:space="preserve">
          <source>The ObjectFactoryBuilder determines the policy used when trying to load object factories. See getObjectInstance() and class ObjectFactory for a description of the default policy. setObjectFactoryBuilder() overrides this default policy by installing an ObjectFactoryBuilder. Subsequent object factories will be loaded and created using the installed builder.</source>
          <target state="translated">ObjectFactoryBuilder决定了尝试加载对象工厂时使用的策略。请参阅getObjectInstance()和类ObjectFactory了解默认策略的描述。setObjectFactoryBuilder()通过安装一个ObjectFactoryBuilder来覆盖这个默认策略。随后的对象工厂将使用安装的构建器进行加载和创建。</target>
        </trans-unit>
        <trans-unit id="5419cd5a84f61ee5075bb1b79dcc22de8c464f19" translate="yes" xml:space="preserve">
          <source>The ObjectOutputStream.writeObject method takes a parameter of type Object (as opposed to type Serializable) to allow for cases where non-serializable objects are replaced by serializable ones.</source>
          <target state="translated">ObjectOutputStream.writeObject方法的参数是Object类型(相对于Serializable类型),以允许非可序列化对象被可序列化对象替换的情况。</target>
        </trans-unit>
        <trans-unit id="580f1b6bc8f9c82e08b5a2581e4f010efcf39dbc" translate="yes" xml:space="preserve">
          <source>The ObjectStreamClass of an enum constant does not represent an enum type</source>
          <target state="translated">一个枚举常量的ObjectStreamClass不代表枚举类型。</target>
        </trans-unit>
        <trans-unit id="d1e3e58b05fa221f0f71b1840e5fa4b72d867a75" translate="yes" xml:space="preserve">
          <source>The ObjectStreamField object of the named field or null if there is no such named field.</source>
          <target state="translated">命名字段的ObjectStreamField对象,如果没有命名字段,则为空。</target>
        </trans-unit>
        <trans-unit id="2ac840327c868e94a9ca4f260da23dea54452a47" translate="yes" xml:space="preserve">
          <source>The Ol Chiki range with the Ol Chiki digits.</source>
          <target state="translated">Ol Chiki系列与Ol Chiki数字。</target>
        </trans-unit>
        <trans-unit id="686dc1c6a4bf6a908c5989eadf0b4e575c563e0a" translate="yes" xml:space="preserve">
          <source>The Open Type of this element. In the case of &lt;code&gt;
 MBeanAttributeInfo&lt;/code&gt; and &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, this is the Open Type of the attribute or parameter. In the case of &lt;code&gt;
 MBeanOperationInfo&lt;/code&gt;, it is the Open Type of the return value. This field is set in the Descriptor for all instances of &lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;. It is also set for attributes, operations, and parameters of MXBeans.</source>
          <target state="translated">此元素的打开类型。对于 &lt;code&gt; MBeanAttributeInfo&lt;/code&gt; 和 &lt;code&gt;MBeanParameterInfo&lt;/code&gt; ，这是属性或参数的开放类型。对于 &lt;code&gt; MBeanOperationInfo&lt;/code&gt; ，它是返回值的Open Type。在Descriptor中为&lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 的&lt;/a&gt;所有实例设置此字段。还为MXBean的属性，操作和参数设置了它。</target>
        </trans-unit>
        <trans-unit id="14746a7869df9344bf3add89eda86eda0f27df41" translate="yes" xml:space="preserve">
          <source>The Open Type of this element. In the case of &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; and &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, this is the Open Type of the attribute or parameter. In the case of &lt;code&gt;MBeanOperationInfo&lt;/code&gt;, it is the Open Type of the return value. This field is set in the Descriptor for all instances of &lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;. It is also set for attributes, operations, and parameters of MXBeans.</source>
          <target state="translated">此元素的打开类型。对于 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 和 &lt;code&gt;MBeanParameterInfo&lt;/code&gt; ，这是属性或参数的开放类型。对于 &lt;code&gt;MBeanOperationInfo&lt;/code&gt; ，它是返回值的Open Type。在Descriptor中为&lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 的&lt;/a&gt;所有实例设置此字段。还为MXBean的属性，操作和参数设置了它。</target>
        </trans-unit>
        <trans-unit id="1ee8b38b45c5d04256b1084f98f63cbf5cd52ad7" translate="yes" xml:space="preserve">
          <source>The Open Type, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;
        List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;a href=&quot;openmbean/arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(1, &lt;/code&gt;&lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.STRING&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, representing a 1-dimensional array of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">打开类型&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt; List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是&lt;a href=&quot;openmbean/arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(1, &lt;/code&gt; &lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.STRING&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; ，表示 &lt;code&gt;String&lt;/code&gt; 的一维数组。</target>
        </trans-unit>
        <trans-unit id="3d8ca0b1298715049081cc8a7ee921c31ef00c4d" translate="yes" xml:space="preserve">
          <source>The Open Type, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;a href=&quot;openmbean/arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(1, &lt;/code&gt;&lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.STRING&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, representing a 1-dimensional array of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">打开类型&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是&lt;a href=&quot;openmbean/arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(1, &lt;/code&gt; &lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.STRING&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; ，表示 &lt;code&gt;String&lt;/code&gt; 的一维数组。</target>
        </trans-unit>
        <trans-unit id="eacc7b04548f8ebda5f388a359ed276237f9e530" translate="yes" xml:space="preserve">
          <source>The OrientationRequestedType instance to use for specifying a landscape orientation.</source>
          <target state="translated">用于指定景观方向的OrientationRequestedType实例。</target>
        </trans-unit>
        <trans-unit id="d2e78bf087c2f313d0557edb30b321bd5d2675d4" translate="yes" xml:space="preserve">
          <source>The OrientationRequestedType instance to use for specifying a portrait orientation.</source>
          <target state="translated">用于指定肖像方向的OrientationRequestedType实例。</target>
        </trans-unit>
        <trans-unit id="86e97ad57b9b9d8ebd7b9d529990f1d9ae26ec7d" translate="yes" xml:space="preserve">
          <source>The OriginType instance to use for specifying a physical origin.</source>
          <target state="translated">用于指定物理原点的OriginType实例。</target>
        </trans-unit>
        <trans-unit id="0c144f2bace2e10e29c5d67044e54b84b1b53676" translate="yes" xml:space="preserve">
          <source>The OriginType instance to use for specifying a printable origin.</source>
          <target state="translated">用于指定可打印原点的OriginType实例。</target>
        </trans-unit>
        <trans-unit id="3daffe642dc56886ac3c7c719d3cf4600cbab1e2" translate="yes" xml:space="preserve">
          <source>The Oriya range with the Oriya digits.</source>
          <target state="translated">Oriya系列与Oriya数字。</target>
        </trans-unit>
        <trans-unit id="604108d7679d35923f2a2666b52d152240872ab8" translate="yes" xml:space="preserve">
          <source>The POSIX attributes of a file are retrieved using a &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; by invoking its &lt;a href=&quot;posixfileattributeview#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">使用&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;通过调用其&lt;a href=&quot;posixfileattributeview#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法来检索文件的POSIX属性。</target>
        </trans-unit>
        <trans-unit id="c8d2a39da861a7048f3bf16ac55acc32a5404839" translate="yes" xml:space="preserve">
          <source>The POSIX attributes of a file are retrieved using a &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; by invoking its &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通过使用&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法来检索文件的POSIX属性。</target>
        </trans-unit>
        <trans-unit id="c6209ce8603095315802c16ee6435b6d192cd524" translate="yes" xml:space="preserve">
          <source>The PRECISION column represents the maximum column size that the server supports for the given datatype. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">PRECISION列表示服务器对给定数据类型支持的最大列大小。对于数字数据,这是最大精度。对于字符数据,这是以字符为单位的长度。对于字符数据类型,这是字符串表示法的字符长度(假设小数秒组件的最大允许精度)。对于二进制数据,这是以字节为单位的长度。对于ROWID数据类型,这是以字节为单位的长度。对于列大小不适用的数据类型,返回空值。</target>
        </trans-unit>
        <trans-unit id="608f908546c6fb2d1a0985679772a6d0fb7a4cd7" translate="yes" xml:space="preserve">
          <source>The PRECISION column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">PRECISION列表示指定列的大小。对于数字数据,这是最大精度。对于字符数据,这是以字符为单位的长度。对于字符数据类型,这是字符串表示法的字符长度(假设小数秒部分的最大允许精度)。对于二进制数据,这是以字节为单位的长度。对于ROWID数据类型,这是以字节为单位的长度。对于列大小不适用的数据类型,返回空值。</target>
        </trans-unit>
        <trans-unit id="1881900cdf6442ca348aababed8d278a05876686" translate="yes" xml:space="preserve">
          <source>The PRECISION column represents the specified column size for the given parameter or column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">PRECISION列代表指定参数或列的指定列大小。对于数字数据,这是最大精度。对于字符数据,这是以字符为单位的长度。对于字符数据类型,这是字符串表示法的字符长度(假设小数秒部分的最大允许精度)。对于二进制数据,这是以字节为单位的长度。对于ROWID数据类型,这是以字节为单位的长度。对于列大小不适用的数据类型,返回空值。</target>
        </trans-unit>
        <trans-unit id="1079b01e3962327ce622a8802a1cf6880ebb5c6e" translate="yes" xml:space="preserve">
          <source>The PSS parameter set with all default values</source>
          <target state="translated">PSS参数集的所有默认值</target>
        </trans-unit>
        <trans-unit id="b3ab28242caa847b286fc90013d2b0491ec3901c" translate="yes" xml:space="preserve">
          <source>The PSS parameter set with all default values.</source>
          <target state="translated">PSS参数设置为所有默认值。</target>
        </trans-unit>
        <trans-unit id="7a1a9a52c509b8bf2aa11fc375268d5d4b982847" translate="yes" xml:space="preserve">
          <source>The Page Down key, a non-ASCII action key.</source>
          <target state="translated">Page Down键,非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="b6ceff4e733a8fd8dd95849144a04eed6a170dfb" translate="yes" xml:space="preserve">
          <source>The Page Up key, a non-ASCII action key.</source>
          <target state="translated">上页键,是一个非ASCII动作键。</target>
        </trans-unit>
        <trans-unit id="3d027f6c803d6758ba706e29a00afc1193bf2442" translate="yes" xml:space="preserve">
          <source>The ParameterDescriptor class allows bean implementors to provide additional information on each of their parameters, beyond the low level type information provided by the java.lang.reflect.Method class.</source>
          <target state="translated">ParameterDescriptor类允许bean实现者在java.lang.reflect.Method类提供的低级类型信息之外,为其每个参数提供附加信息。</target>
        </trans-unit>
        <trans-unit id="4d3cbd26cc18d883fce3423f3e8a2d5ef0540f3d" translate="yes" xml:space="preserve">
          <source>The Parser will call this method to report each chunk of character data. SAX parsers may return all contiguous character data in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity so that the Locator provides useful information.</source>
          <target state="translated">解析器将调用这个方法来报告每个字符数据的分块。SAX解析器可以在一个分块中返回所有连续的字符数据,也可以将其分割成多个分块;但是,任何一个事件中的所有字符都必须来自同一个外部实体,这样Locator才能提供有用的信息。</target>
        </trans-unit>
        <trans-unit id="007f0b4c51a8ac3735f09488d895ca9527132e33" translate="yes" xml:space="preserve">
          <source>The Parser will call this method to report each chunk of character data. SAX parsers may return all contiguous character data in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity, so that the Locator provides useful information.</source>
          <target state="translated">解析器将调用这个方法来报告每个字符数据的分块。SAX解析器可以在一个分块中返回所有连续的字符数据,也可以将其分割成几个分块;但是,任何一个事件中的所有字符都必须来自同一个外部实体,这样Locator才会提供有用的信息。</target>
        </trans-unit>
        <trans-unit id="c553a7aebfb79b4c7d7552c035617009c0021687" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method at the beginning of every element in the XML document; there will be a corresponding &lt;a href=&quot;#endElement(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;endElement&lt;/code&gt;&lt;/a&gt; event for every startElement event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement event.</source>
          <target state="translated">解析器将在XML文档中每个元素的开头调用此方法。每个startElement事件都会有一个对应的&lt;a href=&quot;#endElement(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;endElement&lt;/code&gt; &lt;/a&gt;事件（即使该元素为空）。在相应的endElement事件之前，将按顺序报告元素的所有内容。</target>
        </trans-unit>
        <trans-unit id="b2ffaeb8d0f43b3556a7668c6a3754787ebdf35f" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method at the beginning of every element in the XML document; there will be a corresponding endElement() event for every startElement() event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement() event.</source>
          <target state="translated">解析器将在XML文档中每个元素的开头调用这个方法;每个startElement()事件都会有一个相应的endElement()事件(即使元素为空)。元素的所有内容将按顺序在相应的endElement()事件之前被报告。</target>
        </trans-unit>
        <trans-unit id="f1bdbe90a7c340b478f9c1c18b63e2450df851d2" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method each time the entity is skipped. Non-validating processors may skip entities if they have not seen the declarations (because, for example, the entity was declared in an external DTD subset). All processors may skip external entities, depending on the values of the &lt;code&gt;http://xml.org/sax/features/external-general-entities&lt;/code&gt; and the &lt;code&gt;http://xml.org/sax/features/external-parameter-entities&lt;/code&gt; properties.</source>
          <target state="translated">每当实体被跳过时，解析器都会调用此方法。如果非验证处理器没有看到声明，则它们可能会跳过实体（例如，因为该实体是在外部DTD子集中声明的）。所有处理器都可以跳过外部实体，具体取决于 &lt;code&gt;http://xml.org/sax/features/external-general-entities&lt;/code&gt; 和 &lt;code&gt;http://xml.org/sax/features/external-parameter-entities&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="3cc97f14d1c6ed34640e855f6a0e48fc1a501ede" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">解析器将对每一条找到的处理指令调用一次该方法:注意,处理指令可能出现在主文档元素之前或之后。</target>
        </trans-unit>
        <trans-unit id="b49db7c6419de0ed107d7d806648cd410319d193" translate="yes" xml:space="preserve">
          <source>The PasswordAuthentication collected from the user, or null if none is provided.</source>
          <target state="translated">从用户那里收集到的PasswordAuthentication,如果没有提供,则为空。</target>
        </trans-unit>
        <trans-unit id="6b93a014cd48ed59022ceab57c22cc48b40d19a2" translate="yes" xml:space="preserve">
          <source>The Pause key, a non-ASCII action key.</source>
          <target state="translated">暂停键,非ASCII操作键。</target>
        </trans-unit>
        <trans-unit id="9b0ce5aa8f07de13619b19a3de18228946efc98c" translate="yes" xml:space="preserve">
          <source>The Payload Protocol Identifier</source>
          <target state="translated">有效载荷协议标识符</target>
        </trans-unit>
        <trans-unit id="47162c3848702f346f4c344da14d624a5c12818f" translate="yes" xml:space="preserve">
          <source>The Permission class for reflective operations.</source>
          <target state="translated">反射操作的权限类。</target>
        </trans-unit>
        <trans-unit id="2fe6df3634a9b58d388e16b81f2a5767b8a67a98" translate="yes" xml:space="preserve">
          <source>The PermissionCollection returned by the &lt;code&gt;Permission.newPermissionCollection&lt;/code&gt; method is a homogeneous collection, which stores only Permission objects for a given Permission type. A PermissionCollection may also be heterogeneous. For example, Permissions is a PermissionCollection subclass that represents a collection of PermissionCollections. That is, its members are each a homogeneous PermissionCollection. For example, a Permissions object might have a FilePermissionCollection for all the FilePermission objects, a SocketPermissionCollection for all the SocketPermission objects, and so on. Its &lt;code&gt;add&lt;/code&gt; method adds a permission to the appropriate collection.</source>
          <target state="translated">&lt;code&gt;Permission.newPermissionCollection&lt;/code&gt; 方法返回的PermissionCollection是同质集合，它仅存储给定Permission类型的Permission对象。 PermissionCollection也可能是异构的。例如，Permissions是一个PermissionCollection子类，它表示PermissionCollections的集合。也就是说，其成员都是同质的PermissionCollection。例如，一个Permissions对象可能对所有FilePermission对象都有一个FilePermissionCollection，对所有SocketPermission对象都有一个SocketPermissionCollection，依此类推。它的 &lt;code&gt;add&lt;/code&gt; 方法向适当的集合添加权限。</target>
        </trans-unit>
        <trans-unit id="5b44fa11f797cda619a6aef640c6e5f1150da36c" translate="yes" xml:space="preserve">
          <source>The PersistenceDelegate class takes the responsibility for expressing the state of an instance of a given class in terms of the methods in the class's public API.</source>
          <target state="translated">PersistenceDelegate类承担了用类的公共API中的方法来表达一个给定类的实例的状态的责任。</target>
        </trans-unit>
        <trans-unit id="fe7a2d34b2335b92e9d706d17e53c3f47d5a8dbf" translate="yes" xml:space="preserve">
          <source>The PersistenceDelegate class takes the responsibility for expressing the state of an instance of a given class in terms of the methods in the class's public API. Instead of associating the responsibility of persistence with the class itself as is done, for example, by the &lt;code&gt;readObject&lt;/code&gt; and &lt;code&gt;writeObject&lt;/code&gt; methods used by the &lt;code&gt;ObjectOutputStream&lt;/code&gt;, streams like the &lt;code&gt;XMLEncoder&lt;/code&gt; which use this delegation model can have their behavior controlled independently of the classes themselves. Normally, the class is the best place to put such information and conventions can easily be expressed in this delegation scheme to do just that. Sometimes however, it is the case that a minor problem in a single class prevents an entire object graph from being written and this can leave the application developer with no recourse but to attempt to shadow the problematic classes locally or use alternative persistence techniques. In situations like these, the delegation model gives a relatively clean mechanism for the application developer to intervene in all parts of the serialization process without requiring that modifications be made to the implementation of classes which are not part of the application itself.</source>
          <target state="translated">PersistenceDelegate类负责根据类的公共API中的方法来表达给定类的实例的状态。像 &lt;code&gt;XMLEncoder&lt;/code&gt; 这样的流，不是像例如通过 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 所使用的 &lt;code&gt;readObject&lt;/code&gt; 和 &lt;code&gt;writeObject&lt;/code&gt; 方法那样将持久性的责任与类本身相关联，使用此委托模型的控件可以独立于类本身来控制其行为。通常，类是放置此类信息的最佳位置，并且可以轻松地在此委派方案中表达约定来做到这一点。但是，有时候，单个类中的一个小问题会阻止整个对象图的编写，并且这可能会导致应用程序开发人员无处可寻，只能尝试在本地隐藏有问题的类或使用替代的持久性技术。在这样的情况下，委托模型为应用程序开发人员提供了一种相对干净的机制，使它可以介入序列化过程的所有部分，而无需修改不属于应用程序本身的类的实现。</target>
        </trans-unit>
        <trans-unit id="583fa9535a80ecfda9fc21924d4be2f9b0f70a94" translate="yes" xml:space="preserve">
          <source>The Photo YCC conversion color space.</source>
          <target state="translated">照片YCC转换色彩空间。</target>
        </trans-unit>
        <trans-unit id="bce29884d2e4006d61c9c4ae80d1499100307e59" translate="yes" xml:space="preserve">
          <source>The PixelGrabber class implements an ImageConsumer which can be attached to an Image or ImageProducer object to retrieve a subset of the pixels in that image.</source>
          <target state="translated">PixelGrabber类实现了一个ImageConsumer,它可以附加到Image或ImageProducer对象上,以检索该图像中的像素子集。</target>
        </trans-unit>
        <trans-unit id="62f294221adf8c7cc8209135f1f1270130eba917" translate="yes" xml:space="preserve">
          <source>The PixelGrabber class implements an ImageConsumer which can be attached to an Image or ImageProducer object to retrieve a subset of the pixels in that image. Here is an example:</source>
          <target state="translated">PixelGrabber类实现了一个ImageConsumer,它可以附加到Image或ImageProducer对象上,以检索该图像中的像素子集。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="0f579bdcf97e6eb9cb7574a266fa66a89a905516" translate="yes" xml:space="preserve">
          <source>The PostConstruct annotation is used on a method that needs to be executed after dependency injection is done to perform any initialization.</source>
          <target state="translated">PostConstruct注解用于在依赖注入完成后需要执行的方法上,以执行任何初始化。</target>
        </trans-unit>
        <trans-unit id="663424111809ef7a25cf879a877b2f4c747a5c6b" translate="yes" xml:space="preserve">
          <source>The PostConstruct annotation is used on a method that needs to be executed after dependency injection is done to perform any initialization. This method MUST be invoked before the class is put into service. This annotation MUST be supported on all classes that support dependency injection. The method annotated with PostConstruct MUST be invoked even if the class does not request any resources to be injected. Only one method can be annotated with this annotation. The method on which the PostConstruct annotation is applied MUST fulfill all of the following criteria:</source>
          <target state="translated">PostConstruct 注解用于在依赖注入完成后需要执行的方法,以执行任何初始化。该方法必须在类被投入服务之前被调用。所有支持依赖注入的类都必须支持这个注解。即使类没有请求注入任何资源,也必须调用用PostConstruct注解的方法。只有一个方法可以被注解为这个注解。应用 PostConstruct 注解的方法必须满足以下所有标准。</target>
        </trans-unit>
        <trans-unit id="474d2291101f131bfdaaf8be9f4fb6c2d55ed0cb" translate="yes" xml:space="preserve">
          <source>The PreDestroy annotation is used on methods as a callback notification to signal that the instance is in the process of being removed by the container.</source>
          <target state="translated">PreDestroy 注解在方法上用作回调通知,以表明实例正处于被容器删除的过程中。</target>
        </trans-unit>
        <trans-unit id="3f4e141fe06f04a529a2ebb0a5d0f52a343eafc5" translate="yes" xml:space="preserve">
          <source>The PreDestroy annotation is used on methods as a callback notification to signal that the instance is in the process of being removed by the container. The method annotated with PreDestroy is typically used to release resources that it has been holding. This annotation MUST be supported by all container managed objects that support PostConstruct except the application client container in Java EE 5. The method on which the PreDestroy annotation is applied MUST fulfill all of the following criteria:</source>
          <target state="translated">PreDestroy 注解在方法上用作回调通知,以表明实例正处于被容器删除的过程中。使用 PreDestroy 注解的方法通常用于释放它一直持有的资源。除了 Java EE 5 中的应用程序客户机容器外,所有支持 PostConstruct 的容器管理对象都必须支持这个注解。应用 PreDestroy 注解的方法必须满足以下所有标准。</target>
        </trans-unit>
        <trans-unit id="d1757e1a54444fb1f78c30c52a38118eeb762c87" translate="yes" xml:space="preserve">
          <source>The Principals and credentials from the specified Sets are copied into newly constructed Sets. These newly created Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions.</source>
          <target state="translated">指定集中的主体和凭据将被复制到新构建的集中。这些新创建的集合会在允许后续修改之前检查是否将此 &lt;code&gt;Subject&lt;/code&gt; 设置为只读。通过确保呼叫者具有足够的权限，新创建的集合还可以防止非法修改。</target>
        </trans-unit>
        <trans-unit id="35d858350b98812050600775afb70417bda94300" translate="yes" xml:space="preserve">
          <source>The Principals and credentials from the specified Sets are copied into newly constructed Sets. These newly created Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions. These Sets also prohibit null elements, and attempts to add or query a null element will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">指定集合中的主体和凭据将被复制到新构建的集合中。这些新创建的集合会在允许后续修改之前检查是否将此 &lt;code&gt;Subject&lt;/code&gt; 设置为只读。通过确保呼叫者具有足够的权限，新创建的集合还可以防止非法修改。这些Set还禁止使用null元素，并且尝试添加或查询null元素将导致 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9479f421d53dcb84a15d69adc8edc90fd07e8e87" translate="yes" xml:space="preserve">
          <source>The Print Screen key, a non-ASCII action key.</source>
          <target state="translated">打印屏幕键,非ASCII操作键。</target>
        </trans-unit>
        <trans-unit id="69d951673774bcf174ae72870200da34cf3c5ebe" translate="yes" xml:space="preserve">
          <source>The Print Service API provides one implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;, class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt;. A client can use class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt; or provide its own implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;. The Print Service API also provides implementations of interface &lt;code&gt;AttributeSet&lt;/code&gt;'s subinterfaces -- classes &lt;a href=&quot;hashdocattributeset&quot;&gt;&lt;code&gt;HashDocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintrequestattributeset&quot;&gt;&lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintjobattributeset&quot;&gt;&lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;hashprintserviceattributeset&quot;&gt;&lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Print Service API提供了接口 &lt;code&gt;AttributeSet&lt;/code&gt; 的一种实现，类&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;。客户端可以使用类&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;或提供其自己的 &lt;code&gt;AttributeSet&lt;/code&gt; 接口实现。打印服务API还提供了接口 &lt;code&gt;AttributeSet&lt;/code&gt; 的子接口的实现-类&lt;a href=&quot;hashdocattributeset&quot;&gt; &lt;code&gt;HashDocAttributeSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;hashprintrequestattributeset&quot;&gt; &lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;hashprintjobattributeset&quot;&gt; &lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;hashprintserviceattributeset&quot;&gt; &lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5023e9c16aece2d432f4a46ffaa75c4a32d41d7b" translate="yes" xml:space="preserve">
          <source>The Print Service API provides one implementation of interface AttributeSet, class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt;. A client can use class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt; or provide its own implementation of interface AttributeSet. The Print Service API also provides implementations of interface AttributeSet's subinterfaces -- classes &lt;a href=&quot;hashdocattributeset&quot;&gt;&lt;code&gt;HashDocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintrequestattributeset&quot;&gt;&lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintjobattributeset&quot;&gt;&lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;hashprintserviceattributeset&quot;&gt;&lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打印服务API提供了接口AttributeSet的一种实现，类&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;。客户端可以使用类&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;或提供其自己的接口AttributeSet实现。 Print Service API还提供了接口AttributeSet的子接口的实现-类&lt;a href=&quot;hashdocattributeset&quot;&gt; &lt;code&gt;HashDocAttributeSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;hashprintrequestattributeset&quot;&gt; &lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;hashprintjobattributeset&quot;&gt; &lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;hashprintserviceattributeset&quot;&gt; &lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a36fd7d83fcd442d2ca4e063a3d8df953492d146" translate="yes" xml:space="preserve">
          <source>The PrintQualityType instance to use for specifying a draft print quality.</source>
          <target state="translated">打印质量类型(PrintQualityType)实例,用于指定草稿打印质量。</target>
        </trans-unit>
        <trans-unit id="031b4b1f0aba81e6ac427aa15ddc998c99500e14" translate="yes" xml:space="preserve">
          <source>The PrintQualityType instance to use for specifying a high print quality.</source>
          <target state="translated">用于指定高打印质量的PrintQualityType实例。</target>
        </trans-unit>
        <trans-unit id="784892b08d359d8cf5e053ee18347d2f728babf6" translate="yes" xml:space="preserve">
          <source>The PrintQualityType instance to use for specifying a normal print quality.</source>
          <target state="translated">用于指定正常打印质量的PrintQualityType实例。</target>
        </trans-unit>
        <trans-unit id="113ca29dc8899124bef3d1bfa5bd50040ad1d06f" translate="yes" xml:space="preserve">
          <source>The Printer could not access one or more documents passed by reference (i.e., the print data representation object is a URL). This reason is intended to cover any file access problem,including file does not exist and access denied because of an access control problem. Whether the printer aborts the job and moves the job to the ABORTED job state or prints all documents that are accessible and moves the job to the COMPLETED job state and adds the COMPLETED_WITH_ERRORS reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute depends on implementation and/or site policy. This value should be supported if the printer supports doc flavors with URL print data representation objects.</source>
          <target state="translated">打印机无法访问通过引用传递的一个或多个文档（即，打印数据表示对象是URL）。此原因旨在解决所有文件访问问题，包括文件不存在以及由于访问控制问题而拒绝访问。打印机是中止该作业并将其移至ABORTED作业状态，还是打印所有可访问的文档并将该作业移至COMPLETED作业状态并将COMPLETED_WITH_ERRORS原因添加到作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性取决于实现和/或站点策略。如果打印机支持带有URL打印数据表示对象的DocFlavor，则应支持此值。</target>
        </trans-unit>
        <trans-unit id="fce18036495868d9659f03df3d44dfcec351c534" translate="yes" xml:space="preserve">
          <source>The Program</source>
          <target state="translated">该计划</target>
        </trans-unit>
        <trans-unit id="6fcae93a93a1ee82554381525484d5b1b3f879a6" translate="yes" xml:space="preserve">
          <source>The Properties object that was passed to &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt; won't be effected by calling this method.</source>
          <target state="translated">调用此方法不会影响传递给&lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;的Properties对象。</target>
        </trans-unit>
        <trans-unit id="95de950a5d7a1f254995d0b5167a4290a1b7a28e" translate="yes" xml:space="preserve">
          <source>The PropertyChangeListener that will be added to track changes in the desktop pane.</source>
          <target state="translated">将被添加到桌面窗格中以跟踪变化的PropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="59a9f4d1b84220d6f2d96b358a0f7ee7ce4bb654" translate="yes" xml:space="preserve">
          <source>The PropertyChangeListener that's added to the JList at installUI time.</source>
          <target state="translated">在安装UI时添加到JList中的PropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="2e2d0d45cb9f1cfc9a548fbe762ae6b51166f7c6" translate="yes" xml:space="preserve">
          <source>The PropertyChangeListener that's added to the JList at installUI time. When the value of a JList property that affects layout changes, we set a bit in updateLayoutStateNeeded. If the JLists model changes we additionally remove our listeners from the old model. Likewise for the JList selectionModel.</source>
          <target state="translated">安装UI时添加到JList中的PropertyChangeListener。当影响布局的JList属性的值发生变化时,我们在updateLayoutStateNeeded中设置一个位。如果JLists模型发生变化,我们另外从旧模型中删除我们的监听器。同样,对于JList选择模型也是如此。</target>
        </trans-unit>
        <trans-unit id="79c5bed2e16f2a36efdbb26417f5d432d107c87f" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager can be used to locate a property editor for any given type name.</source>
          <target state="translated">PropertyEditorManager可以用来定位任何给定类型名称的属性编辑器。</target>
        </trans-unit>
        <trans-unit id="03f186ff2c81c37adab709c0e89d137a465a74c1" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager can be used to locate a property editor for any given type name. This property editor must support the java.beans.PropertyEditor interface for editing a given object.</source>
          <target state="translated">PropertyEditorManager可以用来定位任何给定类型名称的属性编辑器。这个属性编辑器必须支持java.beans.PropertyEditor接口来编辑给定对象。</target>
        </trans-unit>
        <trans-unit id="a2d11ff6fce664d384fd5b4cb99275a3053adfd8" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager uses three techniques for locating an editor for a given type. First, it provides a registerEditor method to allow an editor to be specifically registered for a given type. Second it tries to locate a suitable class by adding &quot;Editor&quot; to the full qualified classname of the given type (e.g. &quot;foo.bah.FozEditor&quot;). Finally it takes the simple classname (without the package name) adds &quot;Editor&quot; to it and looks in a search-path of packages for a matching class.</source>
          <target state="translated">PropertyEditorManager使用三种技术来定位给定类型的编辑器。首先,它提供了一个 registerEditor 方法,允许编辑器为给定类型专门注册。其次,它试图通过在给定类型的完整限定类名中添加 &quot;Editor &quot;来定位一个合适的类(例如 &quot;foo.bah.FozEditor&quot;)。最后,它将简单的类名(没有包名)加上 &quot;Editor&quot;,然后在包的搜索路径中寻找匹配的类。</target>
        </trans-unit>
        <trans-unit id="e69e44faf76f952a5c9a199fdcebe3d843730632" translate="yes" xml:space="preserve">
          <source>The ProtectionDomain class encapsulates the characteristics of a domain, which encloses a set of classes whose instances are granted a set of permissions when being executed on behalf of a given set of Principals.</source>
          <target state="translated">ProtectionDomain类封装了一个域的特性,它封装了一组类,这些类的实例在代表一组给定的Principals执行时被授予一组权限。</target>
        </trans-unit>
        <trans-unit id="dc1a13b023d0705e0b7b2456d0489a32905a21a8" translate="yes" xml:space="preserve">
          <source>The REVERSE_LANDSCAPE value was added because some applications rotate landscape -90 degrees from portrait, rather than +90 degrees.</source>
          <target state="translated">增加REVERSE_LANDSCAPE值的原因是有些应用程序将横向与纵向旋转了-90度,而不是+90度。</target>
        </trans-unit>
        <trans-unit id="6db7050862750f47a0efb63666d6d145e9e68f0e" translate="yes" xml:space="preserve">
          <source>The REVERSE_PORTRAIT value was added for use with the &lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt; attribute in cases where the opposite edge is desired for finishing a portrait document on simple finishing devices that have only one finishing position. Thus a &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; portrait document can be stapled &quot;on the right&quot; by a simple finishing device as is common use with some Middle Eastern languages such as Hebrew.</source>
          <target state="translated">REVERSE_PORTRAIT值被添加以与&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;属性一起使用，如果需要相对的边缘在仅具有一个精加工位置的简单精加工设备上精加工人像文档，则使用REVERSE_PORTRAIT值。因此，可以像一些中东语言（例如希伯来语）常用的那样，通过简单的装订设备将 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 肖像文档装订在&amp;ldquo;右侧&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="91344e6cf60e370413b5e41435a7570bf1602389" translate="yes" xml:space="preserve">
          <source>The RFC-1123 date-time formatter, such as 'Tue, 3 Jun 2008 11:05:30 GMT'.</source>
          <target state="translated">RFC-1123日期-时间格式,如'Tues,3 Jun 2008 11:05:30 GMT'。</target>
        </trans-unit>
        <trans-unit id="16ee6f4995441de74711ec4a94d4a5fada764a10" translate="yes" xml:space="preserve">
          <source>The RMI Activation mechanism has been deprecated and may be removed from a future version of the Java Platform. All of the classes and interfaces in this package have been terminally deprecated. The &lt;code&gt;rmid&lt;/code&gt; tool has also been terminally deprecated. There is no replacement for the RMI Activation mechanism in the Java Platform. Users of RMI Activation are advised to migrate their applications to other technologies.</source>
          <target state="translated">RMI激活机制已被弃用，可以从Java平台的将来版本中删除。该软件包中的所有类和接口都已被最终弃用。该 &lt;code&gt;rmid&lt;/code&gt; 工具也已末期弃用。Java平台中的RMI激活机制无法替代。建议RMI激活用户将其应用程序迁移到其他技术。</target>
        </trans-unit>
        <trans-unit id="7bd6b6f1f0aee47728916c5bade09680616f86e1" translate="yes" xml:space="preserve">
          <source>The RMI connector is a connector for the JMX Remote API that uses RMI to transmit client requests to a remote MBean server.</source>
          <target state="translated">RMI连接器是JMX远程API的连接器,它使用RMI向远程MBean服务器传输客户端请求。</target>
        </trans-unit>
        <trans-unit id="82677ad477cb29bbe50c6cb2ef69c1f5f53feed1" translate="yes" xml:space="preserve">
          <source>The RMI connector is a connector for the JMX Remote API that uses RMI to transmit client requests to a remote MBean server. This package defines the classes that the user of an RMI connector needs to reference directly, for both the client and server sides. It also defines certain classes that the user will not usually reference directly, but that must be defined so that different implementations of the RMI connector can interoperate.</source>
          <target state="translated">RMI连接器是JMX远程API的连接器,它使用RMI将客户端请求传输到远程MBean服务器。该包定义了RMI连接器的用户需要直接引用的类,包括客户端和服务器端。它还定义了某些用户通常不会直接引用的类,但必须定义这些类,以便RMI连接器的不同实现能够互操作。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
