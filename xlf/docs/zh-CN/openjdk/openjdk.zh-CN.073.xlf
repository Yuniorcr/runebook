<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="e982851c7c5c4136cdaa4ba7b98867e7e1d69a54" translate="yes" xml:space="preserve">
          <source>This is useful in the case where a random IV was created, or in the context of password-based encryption or decryption, where the IV is derived from a user-supplied password.</source>
          <target state="translated">在创建随机IV的情况下,或者在基于密码的加密或解密的情况下,这是很有用的,因为IV是从用户提供的密码中产生的。</target>
        </trans-unit>
        <trans-unit id="e2535746cccdbbca1ab930ed4fcdb0c529016428" translate="yes" xml:space="preserve">
          <source>This is useful in the context of password-based encryption or decryption, where the IV is derived from a user-provided passphrase.</source>
          <target state="translated">这在基于密码的加密或解密的情况下很有用,因为在这种情况下,IV来自于用户提供的口令。</target>
        </trans-unit>
        <trans-unit id="9cf54f5c44b9b05526dc556c0af31e68f521cdb6" translate="yes" xml:space="preserve">
          <source>This is where MXBeans differ from Standard MBeans. Although we define the management interface in almost exactly the same way, the MXBean framework &lt;em&gt;converts&lt;/em&gt; model-specific classes into standard classes from the Java platform. Using arrays and the &lt;a href=&quot;openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbean/tabulardata&quot;&gt;&lt;code&gt;TabularData&lt;/code&gt;&lt;/a&gt; classes from the standard &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt; package, it is possible to build data structures of arbitrary complexity using only standard classes.</source>
          <target state="translated">这是MXBean与标准MBean不同的地方。尽管我们以几乎完全相同的方式定义管理接口，但是MXBean框架&lt;em&gt;将&lt;/em&gt;特定于模型的类从Java平台&lt;em&gt;转换&lt;/em&gt;为标准类。使用标准&lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; &lt;/a&gt;包中的数组以及&lt;a href=&quot;openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;openmbean/tabulardata&quot;&gt; &lt;code&gt;TabularData&lt;/code&gt; &lt;/a&gt;类，可以仅使用标准类来构建任意复杂度的数据结构。</target>
        </trans-unit>
        <trans-unit id="151df2660c7d755c42534037d205d93fbee51de1" translate="yes" xml:space="preserve">
          <source>This iterator iterates over a sequence of collation elements that were built from the string. Because there isn't necessarily a one-to-one mapping from characters to collation elements, this doesn't mean the same thing as &quot;return the collation element [or ordering priority] of the next character in the string&quot;.</source>
          <target state="translated">这个迭代器在从字符串建立的整理元素序列上迭代。因为从字符到整理元素不一定有一对一的映射,所以这和 &quot;返回字符串中下一个字符的整理元素[或排序优先级]&quot;的意思不一样。</target>
        </trans-unit>
        <trans-unit id="fd4de962aa64b9c7d9a0ab672023e53024308e67" translate="yes" xml:space="preserve">
          <source>This iterator iterates over a sequence of collation elements that were built from the string. Because there isn't necessarily a one-to-one mapping from characters to collation elements, this doesn't mean the same thing as &quot;return the collation element [or ordering priority] of the previous character in the string&quot;.</source>
          <target state="translated">这个迭代器迭代从字符串建立的整理元素序列。因为从字符到整理元素不一定有一对一的映射,所以这和 &quot;返回字符串中前一个字符的整理元素[或排序优先级]&quot;的意思不一样。</target>
        </trans-unit>
        <trans-unit id="8df0ad3bbb219e858791d7f90e24949d640b25d9" translate="yes" xml:space="preserve">
          <source>This job K octets attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此作业K个八位位组属性的值与 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="d940bed118346ee64706ad2f7d87e1ab7995a09d" translate="yes" xml:space="preserve">
          <source>This job K octets processed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">该作业K个八位位组的已处理属性值和 &lt;code&gt;object&lt;/code&gt; 值相等。</target>
        </trans-unit>
        <trans-unit id="3f65bbab161b42056574e749ee8d56462819b331" translate="yes" xml:space="preserve">
          <source>This job K octets supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">此作业K个八位位组支持的属性的成员和 &lt;code&gt;object&lt;/code&gt; 的成员相同。</target>
        </trans-unit>
        <trans-unit id="172b8f5af9b5cdedc44a30285eeb85b93f0b0cb8" translate="yes" xml:space="preserve">
          <source>This job hold until attribute's &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value and &lt;code&gt;object&lt;/code&gt;'s &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; value are equal.</source>
          <target state="translated">该作业将一直保持到属性的&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;值和 &lt;code&gt;object&lt;/code&gt; 的&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;值相等为止。</target>
        </trans-unit>
        <trans-unit id="5ae1c3b0410efd951e802d6b4307d1b876418adf" translate="yes" xml:space="preserve">
          <source>This job impressions attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此工作印象属性的值和 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="827ef65f7ef707c073e8c41d3ef72aa77843b894" translate="yes" xml:space="preserve">
          <source>This job impressions completed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此工作印象完成属性的值与 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="f6139b149f601585bc21d4753f1e2e0c7d403119" translate="yes" xml:space="preserve">
          <source>This job impressions supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">此工作印象支持的属性的成员和 &lt;code&gt;object&lt;/code&gt; 的成员相同。</target>
        </trans-unit>
        <trans-unit id="6be0f8fe2fb5cb41ae59c02f23e0143618bcf3fa" translate="yes" xml:space="preserve">
          <source>This job is retained and is currently able to be restarted. If JOB_RESTARTABLE is contained in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute, then the printer must accept a request to restart that job. This value should be supported if restarting jobs is supported.</source>
          <target state="translated">该作业将保留，并且当前可以重新启动。如果作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性中包含JOB_RESTARTABLE ，则打印机必须接受重新启动该作业的请求。如果支持重新启动作业，则应支持该值。</target>
        </trans-unit>
        <trans-unit id="838273e4d4c3afa680e7aa83ec4385dfa9583961" translate="yes" xml:space="preserve">
          <source>This job media sheets attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此工作介质表的属性值和 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="de3deada5978343c7ae28bc382eaaa4eb7708954" translate="yes" xml:space="preserve">
          <source>This job media sheets completed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此作业介质工作表的完成属性值和 &lt;code&gt;object&lt;/code&gt; 值相等。</target>
        </trans-unit>
        <trans-unit id="3afb14ae1e4acf07802173b3536b7644e4debc03" translate="yes" xml:space="preserve">
          <source>This job media sheets supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">此作业媒体表支持的属性的成员和 &lt;code&gt;object&lt;/code&gt; 的成员相同。</target>
        </trans-unit>
        <trans-unit id="8a08e608bc977b9b4c6038b4fce830163c750672" translate="yes" xml:space="preserve">
          <source>This job message from operator attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">来自运算符属性的语言环境和 &lt;code&gt;object&lt;/code&gt; 的语言环境的作业消息相等。</target>
        </trans-unit>
        <trans-unit id="f81935108ca14648fd5fad2a9b90d65078401d36" translate="yes" xml:space="preserve">
          <source>This job message from operator attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">来自运算符属性的基础字符串和 &lt;code&gt;object&lt;/code&gt; 的基础字符串的此作业消息相等。</target>
        </trans-unit>
        <trans-unit id="8573b3ffcede7e8f93e17d6c8fa2e94259da36e3" translate="yes" xml:space="preserve">
          <source>This job name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">此作业名称属性的语言环境和 &lt;code&gt;object&lt;/code&gt; 的语言环境相等。</target>
        </trans-unit>
        <trans-unit id="0cfe10df41cbc7462d16efc16bfb69a3ecea7ed1" translate="yes" xml:space="preserve">
          <source>This job name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">此作业名称属性的基础字符串和 &lt;code&gt;object&lt;/code&gt; 的基础字符串相等。</target>
        </trans-unit>
        <trans-unit id="220af8d7a532aa9546a31fa0bbdde8d8f26c2ba7" translate="yes" xml:space="preserve">
          <source>This job originating user name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">此作业的原始用户名属性的语言环境与 &lt;code&gt;object&lt;/code&gt; 的语言环境相等。</target>
        </trans-unit>
        <trans-unit id="1a933d56df8aa13ad4b227fc833465d27d5a99ef" translate="yes" xml:space="preserve">
          <source>This job originating user name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">此作业原始用户名属性的基础字符串和 &lt;code&gt;object&lt;/code&gt; 的基础字符串相等。</target>
        </trans-unit>
        <trans-unit id="acec6d0fcdfe71ac2627f8c9ce9ce5d904d8207b" translate="yes" xml:space="preserve">
          <source>This job priority attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此作业优先级属性的值和 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="d30066dbd2bd1b6a5282fdcccde9d53715f165f6" translate="yes" xml:space="preserve">
          <source>This job priority supported attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此作业优先级支持的属性值和 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="d08bff79d7efea86b07bb2462680f681632d9396" translate="yes" xml:space="preserve">
          <source>This key's channel</source>
          <target state="translated">该键的通道</target>
        </trans-unit>
        <trans-unit id="c9ff12ff91ae98cc554261912b7101e293f6eae9" translate="yes" xml:space="preserve">
          <source>This key's interest set</source>
          <target state="translated">这把钥匙的利益集</target>
        </trans-unit>
        <trans-unit id="484578ab393992ca6b35a256c926024ac4dc1ee9" translate="yes" xml:space="preserve">
          <source>This key's ready-operation set</source>
          <target state="translated">该键的准备操作集</target>
        </trans-unit>
        <trans-unit id="2bd50f3229021f6ed4b5ed6fc741de067a259d3f" translate="yes" xml:space="preserve">
          <source>This key's selector</source>
          <target state="translated">该键的选择器</target>
        </trans-unit>
        <trans-unit id="73baf2dac208aeeefd239b512ce83c57bf5fb818" translate="yes" xml:space="preserve">
          <source>This language model follows a</source>
          <target state="translated">这种语言模式遵循的是</target>
        </trans-unit>
        <trans-unit id="4c2c3e90746d07e042f7de1d3edae0977de2cab2" translate="yes" xml:space="preserve">
          <source>This leniency value is overwritten by a call to &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt;&lt;code&gt;setCalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用&lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt; &lt;code&gt;setCalendar()&lt;/code&gt; &lt;/a&gt;会覆盖此宽大度值。</target>
        </trans-unit>
        <trans-unit id="9976da2e9bb71e18b5f5ad51885abc1487df76aa" translate="yes" xml:space="preserve">
          <source>This list must be modifiable, but need not be resizable.</source>
          <target state="translated">这个列表必须是可修改的,但不需要调整大小。</target>
        </trans-unit>
        <trans-unit id="ae4f32d527341dc4907dea7f8ce1ed40f9011233" translate="yes" xml:space="preserve">
          <source>This loads the rules for the specified zone ID. The provider implementation must validate that the zone ID is valid and available, throwing a &lt;code&gt;ZoneRulesException&lt;/code&gt; if it is not. The result of the method in the valid case depends on the caching flag.</source>
          <target state="translated">这将加载指定区域ID的规则。提供者实现必须验证区域ID有效且可用，如果不是，则抛出 &lt;code&gt;ZoneRulesException&lt;/code&gt; 。在有效情况下，方法的结果取决于缓存标志。</target>
        </trans-unit>
        <trans-unit id="39fc7580f18990809098420829cd6895c80668b4" translate="yes" xml:space="preserve">
          <source>This lock allows both readers and writers to reacquire read or write locks in the style of a &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;. Non-reentrant readers are not allowed until all write locks held by the writing thread have been released.</source>
          <target state="translated">此锁允许读取器和写入器都以&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;的样式重新获取读取或写入锁。在释放写线程持有的所有写锁之前，不允许非重入型读取器。</target>
        </trans-unit>
        <trans-unit id="4f17de85a2537643f6e3bf98800bfe94fe213e92" translate="yes" xml:space="preserve">
          <source>This lock supports a maximum of 2147483647 recursive locks by the same thread. Attempts to exceed this limit result in &lt;a href=&quot;../../../lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; throws from locking methods.</source>
          <target state="translated">该锁通过同一线程最多支持2147483647个递归锁。尝试超过此限制会导致锁定方法引发&lt;a href=&quot;../../../lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8a9c4c5c4bd80a6e77a206482c5c4028f099b12" translate="yes" xml:space="preserve">
          <source>This lock supports a maximum of 65535 recursive write locks and 65535 read locks. Attempts to exceed these limits result in &lt;a href=&quot;../../../lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; throws from locking methods.</source>
          <target state="translated">该锁最多支持65535个递归写锁和65535个读锁。尝试超过这些限制会导致锁定方法引发&lt;a href=&quot;../../../lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f0ec25fdf5dc877766df703b934928f678dda94" translate="yes" xml:space="preserve">
          <source>This makes it possible for a MBeanServer implementation to wrap another MBeanServer implementation, in order to implement, e.g, security checks, or to prevent access to the actual MBeanServer implementation by returning a pointer to a wrapping object.</source>
          <target state="translated">这使得一个MBeanServer实现可以包装另一个MBeanServer实现,以便实现例如安全检查,或者通过返回一个包装对象的指针来防止对实际MBeanServer实现的访问。</target>
        </trans-unit>
        <trans-unit id="ad52a127b76c9d66c4665870a7f2db773ae8df39" translate="yes" xml:space="preserve">
          <source>This makes it possible to decouple configuration from KeyStore object creation and e.g. delay a password prompt until it is needed.</source>
          <target state="translated">这使得配置与KeyStore对象的创建脱钩成为可能,例如,将密码提示延迟到需要的时候。</target>
        </trans-unit>
        <trans-unit id="9c6eed4b0728c771888a382dcda28f5cacc2ab26" translate="yes" xml:space="preserve">
          <source>This manageable usage threshold attribute is designed for monitoring the increasing trend of memory usage with low overhead. Usage threshold may not be appropriate for some memory pools. For example, a generational garbage collector, a common garbage collection algorithm used in many Java virtual machine implementations, manages two or more generations segregating objects by age. Most of the objects are allocated in the &lt;em&gt;youngest generation&lt;/em&gt; (say a nursery memory pool). The nursery memory pool is designed to be filled up and collecting the nursery memory pool will free most of its memory space since it is expected to contain mostly short-lived objects and mostly are unreachable at garbage collection time. In this case, it is more appropriate for the nursery memory pool not to support a usage threshold. In addition, if the cost of an object allocation in one memory pool is very low (for example, just atomic pointer exchange), the Java virtual machine would probably not support the usage threshold for that memory pool since the overhead in comparing the usage with the threshold is higher than the cost of object allocation.</source>
          <target state="translated">此可管理的使用量阈值属性旨在监视开销较低的内存使用量的增长趋势。使用量阈值可能不适用于某些内存池。例如，分代垃圾收集器（一种在许多Java虚拟机实现中使用的通用垃圾收集算法）管理按年龄区分对象的两代或更多代。大多数对象分配在&lt;em&gt;最年轻的一代中&lt;/em&gt;（例如托儿所的内存池）。苗圃内存池被设计为已填充，收集苗圃内存池将释放其大部分内存空间，因为它预计将包含大部分短期对象，并且在垃圾回收时大部分无法访问。在这种情况下，苗圃内存池不支持使用量阈值更为合适。另外，如果在一个内存池中分配对象的成本非常低（例如，仅原子指针交换），则Java虚拟机可能不支持该内存池的使用率阈值，因为将使用率与阈值高于对象分配的成本。</target>
        </trans-unit>
        <trans-unit id="35481535999e219226ed7260bb8d577155df60a6" translate="yes" xml:space="preserve">
          <source>This mandatory attribute specifies one or more &lt;code&gt;.jar&lt;/code&gt; files containing MBeans or other resources used by the MBean to be obtained. One of the &lt;code&gt;.jar&lt;/code&gt; files must contain the file specified by the &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; attribute. If archivelist contains more than one file:</source>
          <target state="translated">此必填属性指定一个或多个 &lt;code&gt;.jar&lt;/code&gt; 文件，其中包含MBean或要获取的MBean使用的其他资源。其中的 &lt;code&gt;.jar&lt;/code&gt; 文件必须包含在指定的文件 &lt;code&gt;CODE&lt;/code&gt; 或 &lt;code&gt;OBJECT&lt;/code&gt; 属性。如果存档列表包含多个文件：</target>
        </trans-unit>
        <trans-unit id="f5524cba1eecadcebc8c35911aae88ca196ee038" translate="yes" xml:space="preserve">
          <source>This map contains a mapping of the IDs that is in line with TZDB 2005r and later, where 'EST', 'MST' and 'HST' map to IDs which do not include daylight savings.</source>
          <target state="translated">该地图包含与TZDB 2005r及以后版本一致的ID的映射,其中 &quot;EST&quot;、&quot;MST &quot;和 &quot;HST &quot;映射到不包括夏令时的ID。</target>
        </trans-unit>
        <trans-unit id="911207d2c588140463ecb8b52de79e69fce22112" translate="yes" xml:space="preserve">
          <source>This maps as follows:</source>
          <target state="translated">这方面的情况如下:</target>
        </trans-unit>
        <trans-unit id="a5a13882774a3d179decff4a601406ffbfefc228" translate="yes" xml:space="preserve">
          <source>This matcher</source>
          <target state="translated">该匹配器</target>
        </trans-unit>
        <trans-unit id="a9b4a4dab6a1c51f10cbe63188a2e2e3478a17cb" translate="yes" xml:space="preserve">
          <source>This may change the behavior or disable execution of other parts of the program. If a provider subsequently requested by the program has been removed, execution may fail. Also, if the removed provider is not explicitly requested by the rest of the program, but it would normally be the provider chosen when a cryptography service is requested (due to its previous order in the list of providers), a different provider will be chosen instead, or no suitable provider will be found, thereby resulting in program failure.</source>
          <target state="translated">这可能会改变程序其他部分的行为或禁止执行。如果程序随后请求的提供者被删除,执行可能会失败。另外,如果被删除的提供者没有被程序的其他部分明确请求,但它通常会是请求加密服务时选择的提供者(由于它在提供者列表中的先前顺序),则会选择一个不同的提供者代替,或者没有找到合适的提供者,从而导致程序失败。</target>
        </trans-unit>
        <trans-unit id="cf34dce9122aca3b2ff13e553ac77235975bd1d1" translate="yes" xml:space="preserve">
          <source>This may include making use of any preferences API that is available as part of the Java or native platform. This algorithm may be overridden by a user setting the property javax.print.defaultPrinter. A service specified must be discovered to be valid and currently available to be returned as the default.</source>
          <target state="translated">这可能包括使用作为 Java 或本地平台一部分的任何偏好 API。用户可以通过设置 javax.print.defaultPrinter 属性来覆盖该算法。指定的服务必须被发现是有效的,并且当前可用,才能作为默认值返回。</target>
        </trans-unit>
        <trans-unit id="2eb64e6727cd33a0bb000ac74e42189ae9a791c4" translate="yes" xml:space="preserve">
          <source>This may return a &lt;code&gt;NumberFormat&lt;/code&gt; instance with the Thai numbering system, instead of the Latin numbering system.</source>
          <target state="translated">这可能会返回使用Thai编号系统而不是Latin编号系统的 &lt;code&gt;NumberFormat&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="02a1de890dcb2dc4d84e3222192853c0d1e45fd8" translate="yes" xml:space="preserve">
          <source>This means a minimum of 2 integer digits, 1 fraction digit, and a maximum of 2 fraction digits.</source>
          <target state="translated">这意味着最少2个整数位,1个分数位,最多2个分数位。</target>
        </trans-unit>
        <trans-unit id="a91841d75e767a08d26a9cbfb4237550b49254a5" translate="yes" xml:space="preserve">
          <source>This means:</source>
          <target state="translated">这意味着:</target>
        </trans-unit>
        <trans-unit id="175c122d043e36e6f1bd35d5db17f5a3f55b8e3d" translate="yes" xml:space="preserve">
          <source>This mechanism may be used to obtain &lt;code&gt;ImageReaders&lt;/code&gt; that will generated non-pixel meta-data (see &lt;code&gt;IIOExtraDataInfo&lt;/code&gt;) in a structure understood by an &lt;code&gt;ImageWriter&lt;/code&gt;. By reading the image and obtaining this data from one of the &lt;code&gt;ImageReaders&lt;/code&gt; obtained with this method and passing it on to the &lt;code&gt;ImageWriter&lt;/code&gt;, a client program can read an image, modify it in some way, and write it back out preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.</source>
          <target state="translated">此机制可用于获取 &lt;code&gt;ImageReaders&lt;/code&gt; ，该ImageReader将以 &lt;code&gt;ImageWriter&lt;/code&gt; 理解的结构生成非像素元数据（请参见 &lt;code&gt;IIOExtraDataInfo&lt;/code&gt; ）。通过读取图像并从使用此方法获得的 &lt;code&gt;ImageReaders&lt;/code&gt; 之一中获取此数据并将其传递给 &lt;code&gt;ImageWriter&lt;/code&gt; ，客户端程序可以读取图像，以某种方式对其进行修改，然后再写回以保留所有元数据，无需了解任何有关元数据的内部结构甚至图像格式的知识。</target>
        </trans-unit>
        <trans-unit id="9477ec011ccc6cd62b18edb4a3330853eab03d19" translate="yes" xml:space="preserve">
          <source>This mechanism may be used to obtain &lt;code&gt;ImageWriters&lt;/code&gt; that will understand the internal structure of non-pixel meta-data (see &lt;code&gt;IIOTreeInfo&lt;/code&gt;) generated by an &lt;code&gt;ImageReader&lt;/code&gt;. By obtaining this data from the &lt;code&gt;ImageReader&lt;/code&gt; and passing it on to one of the &lt;code&gt;ImageWriters&lt;/code&gt; obtained with this method, a client program can read an image, modify it in some way, and write it back out while preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.</source>
          <target state="translated">该机制可用于获取 &lt;code&gt;ImageWriters&lt;/code&gt; ，该ImageWriter将了解 &lt;code&gt;ImageReader&lt;/code&gt; 生成的非像素元数据的内部结构（请参见 &lt;code&gt;IIOTreeInfo&lt;/code&gt; ）。通过从 &lt;code&gt;ImageReader&lt;/code&gt; 获得此数据并将其传递给使用此方法获得的 &lt;code&gt;ImageWriters&lt;/code&gt; 之一，客户端程序可以读取图像，以某种方式对其进行修改，并在保留所有元数据的同时将其写回，而无需了解有关元数据内部结构甚至图像格式的任何信息。</target>
        </trans-unit>
        <trans-unit id="fff14e76e51b02ad662012f54442a58e001ebfca" translate="yes" xml:space="preserve">
          <source>This media size attribute's X dimension is equal to &lt;code&gt;object&lt;/code&gt;'s X dimension.</source>
          <target state="translated">该媒体尺寸属性的X尺寸等于 &lt;code&gt;object&lt;/code&gt; 的X尺寸。</target>
        </trans-unit>
        <trans-unit id="2d5678d6bc3b126d851653c58af1c418b754a3c4" translate="yes" xml:space="preserve">
          <source>This media size attribute's Y dimension is equal to &lt;code&gt;object&lt;/code&gt;'s Y dimension.</source>
          <target state="translated">该媒体尺寸属性的Y尺寸等于 &lt;code&gt;object&lt;/code&gt; 的Y尺寸。</target>
        </trans-unit>
        <trans-unit id="ea82da6b140a0e965f6a617a910099dd753b8f82" translate="yes" xml:space="preserve">
          <source>This membership key</source>
          <target state="translated">此会员卡</target>
        </trans-unit>
        <trans-unit id="4e4d250127621f81a309496eef97f9c17361e687" translate="yes" xml:space="preserve">
          <source>This message may be either the final text or a localization key.</source>
          <target state="translated">此信息可以是最终文本,也可以是本地化密钥。</target>
        </trans-unit>
        <trans-unit id="1add261afe876410ef3a22a8c296c2d87752408e" translate="yes" xml:space="preserve">
          <source>This method (which varies in argument types across different classes) atomically sets a variable to the &lt;code&gt;updateValue&lt;/code&gt; if it currently holds the &lt;code&gt;expectedValue&lt;/code&gt;, reporting &lt;code&gt;true&lt;/code&gt; on success. The classes in this package also contain methods to get and unconditionally set values, as well as a weaker conditional atomic update operation &lt;code&gt;weakCompareAndSet&lt;/code&gt; described below.</source>
          <target state="translated">这种方法（在跨越不同类别的参数类型而异）原子方式设置为一个变量 &lt;code&gt;updateValue&lt;/code&gt; 如果目前持有的 &lt;code&gt;expectedValue&lt;/code&gt; ，报告 &lt;code&gt;true&lt;/code&gt; 的成功。此程序包中的类还包含获取和无条件设置值的方法，以及下面所述的较弱的条件原子更新操作 &lt;code&gt;weakCompareAndSet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="676abcf10cf3f6ca400c78527f174dc0cfff75a2" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;ImageOutputStream&lt;/code&gt; after the write operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">写操作完成后，此方法&lt;em&gt;不会&lt;/em&gt;关闭提供的 &lt;code&gt;ImageOutputStream&lt;/code&gt; ；如果需要，调用者有责任关闭流。</target>
        </trans-unit>
        <trans-unit id="3aa6518e55bff6393254c8f4353f326d6df08b81" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;InputStream&lt;/code&gt; after the read operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">读取操作完成后，此方法&lt;em&gt;不会&lt;/em&gt;关闭提供的 &lt;code&gt;InputStream&lt;/code&gt; ；如果需要，调用者有责任关闭流。</target>
        </trans-unit>
        <trans-unit id="173872128eb75c92df9c4eedf694b762d8282c0d" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;OutputStream&lt;/code&gt; after the write operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">写入操作完成后，此方法&lt;em&gt;不会&lt;/em&gt;关闭提供的 &lt;code&gt;OutputStream&lt;/code&gt; ；如果需要，调用者有责任关闭流。</target>
        </trans-unit>
        <trans-unit id="849cc220f7f2288d02ac0a0d016b42c4a03abbb3" translate="yes" xml:space="preserve">
          <source>This method accepts a year value from the proleptic ISO calendar system.</source>
          <target state="translated">本方法接受来自ISO日历系统的年份值。</target>
        </trans-unit>
        <trans-unit id="5f33e5832c8e17748897d2fe1a31b7c8f5a1edc2" translate="yes" xml:space="preserve">
          <source>This method accepts block names in the following forms:</source>
          <target state="translated">本方法接受以下形式的块名。</target>
        </trans-unit>
        <trans-unit id="1d4934e321968b6b5737a20b8db7eb111c01aa8b" translate="yes" xml:space="preserve">
          <source>This method acts as bridge between array-based and collection-based APIs.</source>
          <target state="translated">该方法作为基于数组和基于集合的API之间的桥梁。</target>
        </trans-unit>
        <trans-unit id="3af30e48dd60471f402029a6e08b9337cffb2e47" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount in weeks to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">此方法将指定的周数添加到天数字段中,并根据需要递增月份和年份字段,以确保结果有效。只有当超过最大/最小年份时,结果才会无效。</target>
        </trans-unit>
        <trans-unit id="78e0e942f2ca0740ef7acb28824e1b9f833fdf85" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">此方法将指定的金额添加到天数字段,并根据需要递增月份和年份字段,以确保结果保持有效。只有当超过最大/最小年份时,结果才会无效。</target>
        </trans-unit>
        <trans-unit id="cffdf06049808a33bc8bcf6006cc27ef38580c8b" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the months field in three steps:</source>
          <target state="translated">此方法将指定的金额分三步添加到月份字段中。</target>
        </trans-unit>
        <trans-unit id="af609df000243b0ab0dcffce4951b5476af479ce" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the years field in three steps:</source>
          <target state="translated">本方法分三步将指定的金额添加到年份字段中。</target>
        </trans-unit>
        <trans-unit id="1651391ffaab46b132075603bdd32cb42a6eeb1a" translate="yes" xml:space="preserve">
          <source>This method allows an application to request that the providers check for any updates to the provided rules. After calling this method, the offset stored in any &lt;a href=&quot;../zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; may be invalid for the zone ID.</source>
          <target state="translated">此方法允许应用程序请求提供者检查对所提供规则的任何更新。调用此方法后，存储在任何&lt;a href=&quot;../zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; 中&lt;/a&gt;的偏移量可能对于区域ID无效。</target>
        </trans-unit>
        <trans-unit id="eda444d0e2b0fbe233bda8959023b04aee5aa9f8" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same duration:</source>
          <target state="translated">该方法允许传入任意数量的纳秒,工厂将改变秒和纳秒的值,以确保存储的纳秒在0到999,999,999范围内。工厂将改变秒和纳秒的值,以确保存储的纳秒在0到999,999,999的范围内。例如,以下情况将导致完全相同的持续时间。</target>
        </trans-unit>
        <trans-unit id="e97d0e4aaa0ceccd00c8a59cdcb938962da99c44" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same instant:</source>
          <target state="translated">该方法允许传入任意数量的纳秒,工厂将改变秒和纳秒的值,以确保存储的纳秒在0到999,999,999范围内。工厂将改变秒和纳秒的值,以确保存储的纳秒在0到999,999,999的范围内。例如,以下情况将导致完全相同的瞬间。</target>
        </trans-unit>
        <trans-unit id="7f5b63419c8ca9a087d2129fc95966034700e350" translate="yes" xml:space="preserve">
          <source>This method allows formats that normally apply a color conversion, such as JPEG, and formats that do not normally have an associated colorspace, such as remote sensing or medical imaging data, to provide access to raw pixel data.</source>
          <target state="translated">这种方法允许通常应用颜色转换的格式(如JPEG)和通常没有相关色彩空间的格式(如遥感或医疗成像数据)提供对原始像素数据的访问。</target>
        </trans-unit>
        <trans-unit id="0fd483899cb392f14434b2761f591f0dae8034ac" translate="yes" xml:space="preserve">
          <source>This method allows sophisticated applications to extend a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt;. Each of the specified &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s will be called, in turn, by a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt; for each certificate processed or validated.</source>
          <target state="translated">此方法允许复杂的应用程序扩展PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 或 &lt;code&gt;CertPathBuilder&lt;/code&gt; 。每个指定的 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 都将依次由PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 或 &lt;code&gt;CertPathBuilder&lt;/code&gt; 为处理或验证的每个证书调用。</target>
        </trans-unit>
        <trans-unit id="6d8556797fba1b77cd0451d414905190015a4f00" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored.</source>
          <target state="translated">此方法允许调用者将名称添加到 &lt;code&gt;X509CRLs&lt;/code&gt; 可能包含的发行者名称集合中。指定的名称将添加到issuerNames条件的任何先前值中。如果指定的名称重复，则可以忽略。</target>
        </trans-unit>
        <trans-unit id="a53dd998739b4376f63ebea8a55616b55400bdc8" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored. If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows.</source>
          <target state="translated">此方法允许调用者将名称添加到 &lt;code&gt;X509CRLs&lt;/code&gt; 可能包含的发行者名称集合中。指定的名称将添加到issuerNames条件的任何先前值中。如果指定的名称重复，则可以忽略。如果将名称指定为字节数组，则它应包含X.501中定义的单个DER编码的专有名称。此结构的ASN.1表示法如下。</target>
        </trans-unit>
        <trans-unit id="6ad13d13006adb44bd6041030d8f05a1aedf5e56" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of names which the &lt;code&gt;X509Certificates&lt;/code&gt;'s name constraints must permit. The specified name is added to any previous value for the pathToNames criterion. If the name is a duplicate, it may be ignored.</source>
          <target state="translated">此方法允许调用者将名称添加到 &lt;code&gt;X509Certificates&lt;/code&gt; 的名称约束必须允许的名称集中。指定的名称将添加到pathToNames条件的任何先前值中。如果名称重复，则可以将其忽略。</target>
        </trans-unit>
        <trans-unit id="1e4632e39bbefa94b32729bd5a8212dd3b42660c" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of subject alternative names. The specified name is added to any previous value for the subjectAlternativeNames criterion. If the specified name is a duplicate, it may be ignored.</source>
          <target state="translated">本方法允许调用者将一个名称添加到主题备选名称集合中。指定的名称将被添加到subjectAlternativeNames标准的任何先前值中。如果指定的名称是重复的,可以忽略。</target>
        </trans-unit>
        <trans-unit id="cbce34c15635b1a6ca7855d219a5cbcefd189b29" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified value replaces the previous value for the issuerNames criterion.</source>
          <target state="translated">此方法允许调用者通过一个方法调用来指定 &lt;code&gt;X509CRLs&lt;/code&gt; 可能包含的完整发行者名称集。指定的值替换了issuerNames条件的先前值。</target>
        </trans-unit>
        <trans-unit id="4aefaf491baf8c4e5456b621b5c0a498daa636e0" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of names which the &lt;code&gt;X509Certificates&lt;/code&gt;'s name constraints must permit. The specified value replaces the previous value for the pathToNames criterion.</source>
          <target state="translated">此方法允许调用者通过一个方法调用来指定 &lt;code&gt;X509Certificates&lt;/code&gt; 的名称约束必须允许的完整名称集。指定的值替换pathToNames条件的先前值。</target>
        </trans-unit>
        <trans-unit id="0bd4362610e1ac10a2f64be47d995751ffb00a8d" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of subject alternative names for the subjectAlternativeNames criterion. The specified value replaces the previous value for the subjectAlternativeNames criterion.</source>
          <target state="translated">本方法允许调用者通过一次方法调用,为subjectAlternativeNames标准指定一套完整的主题备选名称。指定的值将取代之前的subjectAlternativeNames标准的值。</target>
        </trans-unit>
        <trans-unit id="1c705334a0f7cff751d14c4a4a21383e06465e76" translate="yes" xml:space="preserve">
          <source>This method also provides a convenient way to create a fixed-size list initialized to contain several elements:</source>
          <target state="translated">这个方法还提供了一个方便的方法来创建一个固定大小的列表,初始化为包含多个元素。</target>
        </trans-unit>
        <trans-unit id="4fa62a2a0ad1a06eae0027923f56e07ec351d22f" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with the default replacement string for the platform's default character set. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">此方法始终使用平台默认字符集的默认替换字符串替换格式错误的输入和不可映射的字符序列。所述&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt;当需要在解码处理更多的控制类应当被使用。</target>
        </trans-unit>
        <trans-unit id="2a3f7738d52d60d9dab45317ecb84bee2edd004d" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. In order to detect such sequences, use the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">此方法始终使用此字符集的默认替换字节数组替换格式错误的输入和不可映射的字符序列。为了检测此类序列，请直接使用&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="38587c881fb9338bfc5f7b0b4c57b21c51ed6440" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. The &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the encoding process is required.</source>
          <target state="translated">此方法始终使用此字符集的默认替换字节数组替换格式错误的输入和不可映射的字符序列。所述&lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt; &lt;code&gt;CharsetEncoder&lt;/code&gt; &lt;/a&gt;当需要在编码处理更多的控制类应当被使用。</target>
        </trans-unit>
        <trans-unit id="1f13faeb3f76e5dd8cc2f8d9308ca1a600558991" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. In order to detect such sequences, use the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">此方法始终使用此字符集的默认替换字符串替换格式错误的输入和不可映射的字符序列。为了检测此类序列，请直接使用&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="be8bfafc52125e8313cc18e3a05d6ae74e1d8f25" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">此方法始终使用此字符集的默认替换字符串替换格式错误的输入和不可映射的字符序列。所述&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; &lt;/a&gt;当需要在解码处理更多的控制类应当被使用。</target>
        </trans-unit>
        <trans-unit id="cc60d1f3bbc26c7042daee639e5042e34e0d52e8" translate="yes" xml:space="preserve">
          <source>This method always returns false for unresolved permissions. That is, an UnresolvedPermission is never considered to imply another permission.</source>
          <target state="translated">对于未解决的权限,该方法总是返回false。也就是说,UnresolvedPermission永远不会被认为意味着另一个权限。</target>
        </trans-unit>
        <trans-unit id="16225678abeadf71c6cbee077427074f7b270d0a" translate="yes" xml:space="preserve">
          <source>This method and/or the code it invokes may need to read some data from the stream to determine whether its data format is supported. The implementation may therefore need to mark the stream, read enough data to determine whether it is in a supported format, and reset the stream's read pointer to its original position. If the input stream does not permit this set of operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">此方法和/或其调用的代码可能需要从流中读取一些数据，以确定是否支持其数据格式。因此，实现可能需要标记流，读取足够的数据以确定其是否处于受支持的格式，并将流的读取指针重置为其原始位置。如果输入流不允许这组操作，则此方法可能会失败，并出现 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4da6da35c7250af512899cb384b862226dc445d2" translate="yes" xml:space="preserve">
          <source>This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.</source>
          <target state="translated">这种方法将现行的闰年规则适用于整个时间线。一般来说,如果某年被4整除而没有余数,该年就是闰年,但被100整除的年份不是闰年。但是,被100整除的年份不是闰年,但被400整除的年份是例外。</target>
        </trans-unit>
        <trans-unit id="268718a6011dcfbddd887deca0fb0a458bf3d563" translate="yes" xml:space="preserve">
          <source>This method assigns a default &lt;a href=&quot;../security/protectiondomain&quot;&gt;&lt;code&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; to the newly defined class. The &lt;code&gt;ProtectionDomain&lt;/code&gt; is effectively granted the same set of permissions returned when &lt;a href=&quot;../security/policy#getPermissions-java.security.CodeSource-&quot;&gt;&lt;code&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; is invoked. The default domain is created on the first invocation of &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;, and re-used on subsequent invocations.</source>
          <target state="translated">此方法将默认的&lt;a href=&quot;../security/protectiondomain&quot;&gt; &lt;code&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;分配给新定义的类。该 &lt;code&gt;ProtectionDomain&lt;/code&gt; 被有效授予同一组时返回权限&lt;a href=&quot;../security/policy#getPermissions-java.security.CodeSource-&quot;&gt; &lt;code&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;被调用。默认域在第一次调用&lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; 时&lt;/a&gt;创建，并在后续调用中重用。</target>
        </trans-unit>
        <trans-unit id="f426f8160bb66663f3038acb7b0ab97dfff5f242" translate="yes" xml:space="preserve">
          <source>This method attempts to match the given certificate with each keystore entry. If the entry being considered was created by a call to &lt;code&gt;setCertificateEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;TrustedCertificateEntry&lt;/code&gt;, then the given certificate is compared to that entry's certificate.</source>
          <target state="translated">此方法尝试将给定的证书与每个密钥库条目匹配。如果要考虑的条目是通过调用 &lt;code&gt;setCertificateEntry&lt;/code&gt; 创建的，或者是通过调用带有 &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; 的 &lt;code&gt;setEntry&lt;/code&gt; 创建的，则将给定证书与该条目的证书进行比较。</target>
        </trans-unit>
        <trans-unit id="17c6875b40f8854d2e8c9c961692d842b35cddb4" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as &lt;code&gt;Subject.doAs&lt;/code&gt;, except that instead of retrieving the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt;, it uses the provided &lt;code&gt;AccessControlContext&lt;/code&gt;. If the provided &lt;code&gt;AccessControlContext&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; with an empty collection of ProtectionDomains.</source>
          <target state="translated">此方法的行为完全一样 &lt;code&gt;Subject.doAs&lt;/code&gt; ，除了不是获取当前Thread的 &lt;code&gt;AccessControlContext&lt;/code&gt; 的，它使用提供 &lt;code&gt;AccessControlContext&lt;/code&gt; 。如果提供的 &lt;code&gt;AccessControlContext&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则此方法使用空的ProtectionDomains集合实例化一个新的 &lt;code&gt;AccessControlContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ab20aadadf75efe0ea98bf999bdd4234990df0e" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the MBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法的行为与&lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;，但此外，如果 &lt;code&gt;notificationEmitter&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则假定MBean是&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;，并且返回的代理将实现&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;以及 &lt;code&gt;interfaceClass&lt;/code&gt; 。在代理上对&lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt;的调用将导致对&lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;的调用，同样适用于&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;的其他方法。</target>
        </trans-unit>
        <trans-unit id="040a2b5e4aeb36e7b9a8f65a99d90ff3a5e5bc95" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the MXBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法的行为与&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;，但是此外，如果 &lt;code&gt;notificationEmitter&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则假定MXBean是&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;，并且返回的代理将实现&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;以及 &lt;code&gt;interfaceClass&lt;/code&gt; 。在代理上对&lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt;的调用将导致对&lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;的调用，同样适用于&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;的其他方法。</target>
        </trans-unit>
        <trans-unit id="2a3a050dc4ad75c04fab2f530821a2d8b2826a19" translate="yes" xml:space="preserve">
          <source>This method behaves the same as calling &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle(String, Locale, ClassLoader, Control)&lt;/code&gt;&lt;/a&gt; passing a default instance of &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; unless another &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; is provided with the &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; SPI. Refer to the description of &lt;a href=&quot;#modify_default_behavior&quot;&gt;modifying the default behavior&lt;/a&gt;.</source>
          <target state="translated">此方法的行为与调用&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle(String, Locale, ClassLoader, Control)&lt;/code&gt; &lt;/a&gt;并传递&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;的默认实例相同，除非&lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; &lt;/a&gt; SPI 提供了另一个&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;。请参阅&lt;a href=&quot;#modify_default_behavior&quot;&gt;修改默认行为&lt;/a&gt;的描述。</target>
        </trans-unit>
        <trans-unit id="4ef540b8fd24f2da7b9e12b97b85f8eda555b2c9" translate="yes" xml:space="preserve">
          <source>This method blocks until a datagram is received. The &lt;code&gt;length&lt;/code&gt; field of the datagram packet object contains the length of the received message. If the message is longer than the packet's length, the message is truncated.</source>
          <target state="translated">该方法将阻塞直到接收到数据报。数据报包对象的 &lt;code&gt;length&lt;/code&gt; 字段包含接收到的消息的长度。如果消息长于数据包的长度，则消息将被截断。</target>
        </trans-unit>
        <trans-unit id="9edb264cc1a33d9820b53af8c3cdc1fb275ae554" translate="yes" xml:space="preserve">
          <source>This method blocks until a newline character is read, a carriage return and the byte following it are read (to see if it is a newline), the end of the file is reached, or an exception is thrown.</source>
          <target state="translated">这个方法会阻塞,直到读取一个新行字符,回车和后面的字节被读取(查看是否是新行),到达文件的结尾,或者抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="65d90c85a52039a4ff19c943ccb3cb5f594c3337" translate="yes" xml:space="preserve">
          <source>This method blocks until all the bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">这个方法会阻塞,直到读完所有的字节,检测到流的结束,或者抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="8613d9e28f1e50e06732c3a04ed3315fc4de1b49" translate="yes" xml:space="preserve">
          <source>This method blocks until input data is available, end of file is detected, or an exception is thrown.</source>
          <target state="translated">这个方法会被阻塞,直到有输入数据、检测到文件结束或抛出异常。</target>
        </trans-unit>
        <trans-unit id="69d6a4f6358b50ecc853876960af6eed4f3af288" translate="yes" xml:space="preserve">
          <source>This method blocks until one of the following conditions occurs:</source>
          <target state="translated">本方法阻塞,直到出现以下情况之一。</target>
        </trans-unit>
        <trans-unit id="d24e22ae204bbffb1aae51350c2b8591a89a1031" translate="yes" xml:space="preserve">
          <source>This method blocks until the byte is read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">这个方法会阻塞,直到读取字节,检测到流的结束,或者抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="dc2aa5b3b05ad6ab736997f223584ea0ea01792a" translate="yes" xml:space="preserve">
          <source>This method blocks until the eight bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">这个方法会阻塞,直到读取八个字节,检测到流的结束,或者抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="9bb676367f81fc57a11814f7fb38d025266194d0" translate="yes" xml:space="preserve">
          <source>This method blocks until the four bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">这个方法会阻塞,直到读取4个字节,检测到流的结束,或者抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="3d5091fd6af7b86eae2699fd1b079cbd872ffc42" translate="yes" xml:space="preserve">
          <source>This method blocks until the group has terminated, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">这个方法会阻塞,直到组终止,或发生超时,或当前线程被中断,以先发生的为准。</target>
        </trans-unit>
        <trans-unit id="8079da03ae0f8ee6fddde7359cb926ba4859755c" translate="yes" xml:space="preserve">
          <source>This method blocks until the two bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">这个方法会阻塞,直到读取两个字节,检测到流的结束,或者抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="f7db78271a125ac89c34ce9bb6bd2d9c603fda06" translate="yes" xml:space="preserve">
          <source>This method by default throws OperationNotSupportedException. A subclass should override this method if it supports schema.</source>
          <target state="translated">这个方法默认会抛出OperationNotSupportedException。如果子类支持schema,就应该重写这个方法。</target>
        </trans-unit>
        <trans-unit id="7b0c83cb3f14b5f9ba0e18c88bd5ebf12a4ae946" translate="yes" xml:space="preserve">
          <source>This method calculates the maximum value of &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; based on the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; (calendar year) value, not the &lt;a href=&quot;#week_year&quot;&gt;week year&lt;/a&gt;. Call &lt;a href=&quot;gregoriancalendar#getWeeksInWeekYear--&quot;&gt;&lt;code&gt;getWeeksInWeekYear()&lt;/code&gt;&lt;/a&gt; to get the maximum value of &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; in the week year of this &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">这种方法计算的最大值&lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; &lt;/a&gt;基础上，&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;（日历年）值，而不是&lt;a href=&quot;#week_year&quot;&gt;一周年&lt;/a&gt;。调用&lt;a href=&quot;gregoriancalendar#getWeeksInWeekYear--&quot;&gt; &lt;code&gt;getWeeksInWeekYear()&lt;/code&gt; &lt;/a&gt;以获取此 &lt;code&gt;GregorianCalendar&lt;/code&gt; 在一周中的 &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; 的最大值。</target>
        </trans-unit>
        <trans-unit id="269bea040be761a329f2dcd426e9e7e5650eee88" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before adding the amount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">此方法在添加金额之前调用&lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; &lt;/a&gt;，以便所有日历字段均被规范化。如果在非宽容模式下有任何日历字段的值超出范围，则抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37051f601b556b3395026e8474644866b3636c1d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before calculating the week year.</source>
          <target state="translated">此方法在计算周年之前调用&lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d2e8eda130fd16fedb0d019fdddb0fc7a855cfa" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;simplejavafileobject#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simplejavafileobject#toUri--&quot;&gt;&lt;code&gt;toUri()&lt;/code&gt;&lt;/a&gt; and does not access the fields &lt;a href=&quot;simplejavafileobject#uri&quot;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simplejavafileobject#kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">此方法调用&lt;a href=&quot;simplejavafileobject#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;simplejavafileobject#toUri--&quot;&gt; &lt;code&gt;toUri()&lt;/code&gt; ,&lt;/a&gt;并且不直接访问&lt;a href=&quot;simplejavafileobject#uri&quot;&gt; &lt;code&gt;uri&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;simplejavafileobject#kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;字段。</target>
        </trans-unit>
        <trans-unit id="e06fe40c6f4df5c5dacf982a86322e1fc4b787d1" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;AccessController.checkPermission&lt;/code&gt; with the given permission.</source>
          <target state="translated">此方法使用给定的权限调用 &lt;code&gt;AccessController.checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19738604ec6313155cae470a190e14c1867fe9c5" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; permission. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">此方法使用 &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。如果Java SE的子集概要文件不包含 &lt;code&gt;java.awt&lt;/code&gt; 包，则调用 &lt;code&gt;checkPermission&lt;/code&gt; 来检查权限 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73c694fe3a42693c434e002d948fff87adb94657" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; permission. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">此方法使用 &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。如果Java SE的子集概要文件不包含 &lt;code&gt;java.awt&lt;/code&gt; 包，则调用 &lt;code&gt;checkPermission&lt;/code&gt; 来检查权限 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae3f7d9a114a9c3d1fc1ce191ace01aa23dfb43f" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; permission, and returns &lt;code&gt;true&lt;/code&gt; if a SecurityException is not thrown, otherwise it returns &lt;code&gt;false&lt;/code&gt;. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">此方法调用 &lt;code&gt;checkPermission&lt;/code&gt; 与 &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; 的许可，并返回 &lt;code&gt;true&lt;/code&gt; 如果一个SecurityException没有抛出，否则返回 &lt;code&gt;false&lt;/code&gt; 。如果Java SE的子集概要文件不包含 &lt;code&gt;java.awt&lt;/code&gt; 包，则调用 &lt;code&gt;checkPermission&lt;/code&gt; 来检查权限 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fdeff44c78d3902723ee823eaba70d551148962" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(cmd,&quot;execute&quot;)&lt;/code&gt; permission if cmd is an absolute path, otherwise it calls &lt;code&gt;checkPermission&lt;/code&gt; with &lt;code&gt;FilePermission(&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;,&quot;execute&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法调用 &lt;code&gt;checkPermission&lt;/code&gt; 用 &lt;code&gt;FilePermission(cmd,&quot;execute&quot;)&lt;/code&gt; 权限，如果cmd是绝对路径，否则它调用 &lt;code&gt;checkPermission&lt;/code&gt; 用 &lt;code&gt;FilePermission(&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;,&quot;execute&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4090e1573f03a7b969ed4eb8baecc6269248e94" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;delete&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;FilePermission(file,&quot;delete&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b08355483b5bd71a870e28cb3c5b9be8d105425" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf80d8cebcf2bce202e03e26fa56b4fb477a5349" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;write&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;FilePermission(file,&quot;write&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd2746d5381e5e48e2b8bdaa68b516a5e32229e4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;PropertyPermission(&quot;*&quot;, &quot;read,write&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;PropertyPermission(&quot;*&quot;, &quot;read,write&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f92e0c9ec1b3265d4a078b50f0f7c17f3b27464" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;PropertyPermission(key, &quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;PropertyPermission(key, &quot;read&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="443e1d17071c8a6b440e7feff746619b08781cc6" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;createClassLoader&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;createClassLoader&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd341d2c15b82687c519829666f6ea5af730951d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;exitVM.&quot;+status)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;exitVM.&quot;+status)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd503776cdbf3af7134033cff2c250360e0eb170" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;loadLibrary.&quot;+lib)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;loadLibrary.&quot;+lib)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a5f72e1a355b0bee29959fa41870127a6a77604" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5a22c480aa72ad9bdd63094f6d01b22499680f" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;readFileDescriptor&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;readFileDescriptor&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1805302599444c237841bd5b2fcf4b128fb3e5b9" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f2885e0544d4e73448a66b931e57fddd504ba67" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;writeFileDescriptor&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;RuntimePermission(&quot;writeFileDescriptor&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f6f908bf811b7f71042ad9e5310f118a65335bb" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(&quot;localhost:&quot;+port,&quot;listen&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法使用 &lt;code&gt;SocketPermission(&quot;localhost:&quot;+port,&quot;listen&quot;)&lt;/code&gt; 调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6588ddd0d20ef53b4230dba57c169828b93e1b8" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;accept&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;accept&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5782c7b7162da363323088e4f1544e5232ea96f2" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; permission if the port is not equal to -1. If the port is equal to -1, then it calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">如果端口不等于-1 ，则此方法使用 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。如果端口等于-1，则它将使用 &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fafc2d6e9c84a5d190a2a437331af72604794ee" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;java.net.SocketPermission(maddr.getHostAddress(),
 &quot;accept,connect&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">此方法使用 &lt;code&gt;java.net.SocketPermission(maddr.getHostAddress(), &quot;accept,connect&quot;)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2e5f703172d1163aa6fd1c5af5682264111ba8e" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;flush&lt;/code&gt;, writes the closing postamble and then closes the output stream associated with this stream.</source>
          <target state="translated">此方法调用 &lt;code&gt;flush&lt;/code&gt; ，写入结束后同步码，然后关闭与此流关联的输出流。</target>
        </trans-unit>
        <trans-unit id="056704de3f264617d5178595663f8c57cdd5f1d0" translate="yes" xml:space="preserve">
          <source>This method calls the &lt;code&gt;exit&lt;/code&gt; method in class &lt;code&gt;Runtime&lt;/code&gt;. This method never returns normally.</source>
          <target state="translated">此方法在类 &lt;code&gt;Runtime&lt;/code&gt; 中调用 &lt;code&gt;exit&lt;/code&gt; 方法。此方法永远不会正常返回。</target>
        </trans-unit>
        <trans-unit id="0c466e2b5d2a812ecbc3c46657a8721f4dcfe360" translate="yes" xml:space="preserve">
          <source>This method calls the method &lt;a href=&quot;rmiserverimpl#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the connector server's &lt;code&gt;RMIServerImpl&lt;/code&gt; object.</source>
          <target state="translated">此方法在连接器服务器的 &lt;code&gt;RMIServerImpl&lt;/code&gt; 对象上调用&lt;a href=&quot;rmiserverimpl#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="03584ad9df1ca13639c4652a28102939262933ab" translate="yes" xml:space="preserve">
          <source>This method calls the various &lt;code&gt;getStandard*Node&lt;/code&gt; methods to supply each of the subtrees rooted at the children of the root node. If any of those methods returns &lt;code&gt;null&lt;/code&gt;, the corresponding subtree will be omitted. If all of them return &lt;code&gt;null&lt;/code&gt;, a tree consisting of a single root node will be returned.</source>
          <target state="translated">此方法调用各种 &lt;code&gt;getStandard*Node&lt;/code&gt; 方法，以提供根于根节点的子级的每个子树。如果这些方法中的任何一个返回 &lt;code&gt;null&lt;/code&gt; ，则将省略相应的子树。如果它们都返回 &lt;code&gt;null&lt;/code&gt; ，则将返回由单个根节点组成的树。</target>
        </trans-unit>
        <trans-unit id="ce3397a67d6e7430b7581b0bc7e5b19cf215832d" translate="yes" xml:space="preserve">
          <source>This method can also be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">也可以在子类中重写此方法。建议使用&lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;便捷方法来本地化和格式化消息字段。</target>
        </trans-unit>
        <trans-unit id="0d3a331e5b72dbd387cdfa97e259d07f1ffd3519" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">此方法最多可以调用一次。通常在构造函数内部或在创建throwable之后立即调用它。如果此&lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.Throwable(Throwable)&lt;/code&gt; &lt;/a&gt;是使用Throwable.Throwable（Throwable）或&lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.Throwable(String,Throwable)&lt;/code&gt; 创建的&lt;/a&gt;，则即使调用一次此方法也不能。</target>
        </trans-unit>
        <trans-unit id="9eceeaff05ffa1d9d5a81b7c43ae8cfaa35608b7" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;throwable#Throwable-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">此方法最多可以调用一次。通常在构造函数内部或在创建throwable之后立即调用它。如果此&lt;a href=&quot;throwable#Throwable-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable(Throwable)&lt;/code&gt; &lt;/a&gt;是使用Throwable（Throwable）或&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable(String,Throwable)&lt;/code&gt; 创建的&lt;/a&gt;，则即使调用一次也不能调用此方法。</target>
        </trans-unit>
        <trans-unit id="60b50eff7937b117f5a61dbded0f8ffb05cfc95d" translate="yes" xml:space="preserve">
          <source>This method can be called by multiple threads concurrently. Each invocation of this method enables or disables the verbose output globally.</source>
          <target state="translated">这个方法可以被多个线程并发调用。每次调用该方法都会启用或禁用全局的verbose输出。</target>
        </trans-unit>
        <trans-unit id="299c4e6667b32b99868f975c8bd6dd86e470f87b" translate="yes" xml:space="preserve">
          <source>This method can be called even if the &lt;code&gt;Sequencer&lt;/code&gt; is closed.</source>
          <target state="translated">即使关闭了 &lt;code&gt;Sequencer&lt;/code&gt; 器，也可以调用此方法。</target>
        </trans-unit>
        <trans-unit id="04935a12b0a22b12bf855a5e71e19bb9c50c2083" translate="yes" xml:space="preserve">
          <source>This method can be called more than once with different &lt;a href=&quot;../mbeanserverforwarder&quot;&gt;&lt;code&gt;MBeanServerForwarder&lt;/code&gt;&lt;/a&gt; objects. The result is a chain of forwarders. The last forwarder added is the first in the chain. In more detail:</source>
          <target state="translated">可以使用不同的&lt;a href=&quot;../mbeanserverforwarder&quot;&gt; &lt;code&gt;MBeanServerForwarder&lt;/code&gt; &lt;/a&gt;对象多次调用此方法。结果就是一连串的货运代理。添加的最后一个转发器是链中的第一个转发器。更详细地：</target>
        </trans-unit>
        <trans-unit id="4098755630331cc7cc4951a664fbc922c3cd70b1" translate="yes" xml:space="preserve">
          <source>This method can be called more than once with different &lt;a href=&quot;mbeanserverforwarder&quot;&gt;&lt;code&gt;MBeanServerForwarder&lt;/code&gt;&lt;/a&gt; objects. The result is a chain of forwarders. The last forwarder added is the first in the chain. In more detail:</source>
          <target state="translated">可以使用不同的&lt;a href=&quot;mbeanserverforwarder&quot;&gt; &lt;code&gt;MBeanServerForwarder&lt;/code&gt; &lt;/a&gt;对象多次调用此方法。结果就是一连串的货运代理。添加的最后一个转发器是链中的第一个转发器。更详细地：</target>
        </trans-unit>
        <trans-unit id="a41b91d7e4f07f0f6f9df115255c343bbf1f9c4a" translate="yes" xml:space="preserve">
          <source>This method can be overridden if the policy implementation supports returning a set of permissions granted to a ProtectionDomain.</source>
          <target state="translated">如果策略实现支持返回一组授予ProtectionDomain的权限,那么这个方法可以被重写。</target>
        </trans-unit>
        <trans-unit id="ac5849453ee153448b53e320bc46f0e17e938bb7" translate="yes" xml:space="preserve">
          <source>This method can be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">可以在子类中重写此方法。建议使用&lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;便捷方法来本地化和格式化消息字段。</target>
        </trans-unit>
        <trans-unit id="28bf6b4f8f117dd9ab0d5110d4b86315aa73bdee" translate="yes" xml:space="preserve">
          <source>This method can be used as part of a chain to produce a date:</source>
          <target state="translated">这种方法可以作为一个链条的一部分来产生一个日期。</target>
        </trans-unit>
        <trans-unit id="db24ab0dd8e2925069a021f43db80a3535884cf5" translate="yes" xml:space="preserve">
          <source>This method can be used by a server application that needs to observe the inbound data but still create valid SSL/TLS connections: for example, inspection of Server Name Indication (SNI) extensions (See section 3 of &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC6066)&lt;/a&gt;). Data that has been already removed from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; should be loaded into the &lt;code&gt;consumed&lt;/code&gt; stream before this method is called, perhaps using a &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt;&lt;code&gt;ByteArrayInputStream&lt;/code&gt;&lt;/a&gt;. When this &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; begins handshaking, it will read all of the data in &lt;code&gt;consumed&lt;/code&gt; until it reaches &lt;code&gt;EOF&lt;/code&gt;, then all further data is read from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; as usual.</source>
          <target state="translated">需要监视入站数据但仍创建有效SSL / TLS连接的服务器应用程序可以使用此方法：例如，检查服务器名称指示（SNI）扩展（请参阅&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS扩展（RFC6066）的&lt;/a&gt;第3节）。在调用此方法之前，应该使用&lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt; &lt;code&gt;ByteArrayInputStream&lt;/code&gt; &lt;/a&gt;将已经从基础&lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; 中&lt;/a&gt;移除的数据加载到 &lt;code&gt;consumed&lt;/code&gt; 流中。当此&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;开始握手时，它将读取 &lt;code&gt;consumed&lt;/code&gt; 所有数据，直到达到 &lt;code&gt;EOF&lt;/code&gt; 为止，然后照常从基础&lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; 中&lt;/a&gt;读取所有其他数据。</target>
        </trans-unit>
        <trans-unit id="213b3625cf6d5ba07208869fbd5adce1b71d45df" translate="yes" xml:space="preserve">
          <source>This method can be used by a server to verify the acceptable &lt;code&gt;SNIHostName&lt;/code&gt;s. For example,</source>
          <target state="translated">服务器可以使用此方法来验证可接受的 &lt;code&gt;SNIHostName&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="928c1d271faddcde95dcea8e56f6185dffe614f5" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;httpurlconnection#getHeaderFieldKey-int-&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">该方法可以与&lt;a href=&quot;httpurlconnection#getHeaderFieldKey-int-&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt;方法结合使用，以遍历消息中的所有标头。</target>
        </trans-unit>
        <trans-unit id="f703d7479b308d8360a4a0178f9318bbca19adae" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">该方法可以与&lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt;方法结合使用，以遍历消息中的所有标头。</target>
        </trans-unit>
        <trans-unit id="1e38dd709c7fd1e6574c35d57d28c8173d7ce0bb" translate="yes" xml:space="preserve">
          <source>This method can be used to lookup CRL entries in indirect CRLs, that means CRLs that contain entries from issuers other than the CRL issuer. The default implementation will only return entries for certificates issued by the CRL issuer. Subclasses that wish to support indirect CRLs should override this method.</source>
          <target state="translated">本方法可用于查找间接CRL中的CRL条目,即包含CRL发行人以外的发行人条目的CRL。默认的实现将只返回CRL发行人签发的证书条目。希望支持间接CRL的子类应该重写这个方法。</target>
        </trans-unit>
        <trans-unit id="515dbc83a9d17200131e255617345851e1d91d97" translate="yes" xml:space="preserve">
          <source>This method can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time. The value returned represents nanoseconds since some fixed but arbitrary</source>
          <target state="translated">这个方法只能用来测量经过的时间,与任何其他系统或挂钟时间的概念无关。返回的值代表了自某个固定但任意的时间后的纳秒。</target>
        </trans-unit>
        <trans-unit id="4fec536b3f6a191347ba70d3121bfd0d2cb06db2" translate="yes" xml:space="preserve">
          <source>This method causes the current thread (call it &lt;var&gt;T&lt;/var&gt;) to place itself in the wait set for this object and then to relinquish any and all synchronization claims on this object. Thread &lt;var&gt;T&lt;/var&gt; becomes disabled for thread scheduling purposes and lies dormant until one of four things happens:</source>
          <target state="translated">此方法使当前线程（称为 &lt;var&gt;T&lt;/var&gt; ）将自己置于该对象的等待集中，然后放弃对该对象的所有同步声明。出于线程调度目的，线程 &lt;var&gt;T&lt;/var&gt; 被禁用，并且在发生以下四种情况之一之前处于休眠状态：</target>
        </trans-unit>
        <trans-unit id="8c8fb0901563ffb631d201729498da3e444ca3d2" translate="yes" xml:space="preserve">
          <source>This method causes this Configuration object to refresh/reload its contents in an implementation-dependent manner. For example, if this Configuration object stores its entries in a file, calling &lt;code&gt;refresh&lt;/code&gt; may cause the file to be re-read.</source>
          <target state="translated">此方法使该Configuration对象以依赖于实现的方式刷新/重新加载其内容。例如，如果此Configuration对象将其条目存储在文件中，则调用 &lt;code&gt;refresh&lt;/code&gt; 可能导致重新读取该文件。</target>
        </trans-unit>
        <trans-unit id="fddc8f5ad8ea28f9d3e410df7981f8dccd5dffee" translate="yes" xml:space="preserve">
          <source>This method causes this matcher to lose information about the groups of the last match that occurred. The matcher's position in the input is maintained and its last append position is unaffected.</source>
          <target state="translated">这个方法会导致这个匹配器失去最后发生的匹配的组的信息。匹配器在输入中的位置会被保留,其最后追加的位置不受影响。</target>
        </trans-unit>
        <trans-unit id="1d1f81bab3a52524ce08c86b4332e81bfd92c55c" translate="yes" xml:space="preserve">
          <source>This method causes this object to refresh/reload its current Policy. This is implementation-dependent. For example, if the Policy object is stored in a file, calling &lt;code&gt;refresh&lt;/code&gt; will cause the file to be re-read.</source>
          <target state="translated">此方法使该对象刷新/重新加载其当前策略。这取决于实现。例如，如果策略对象存储在文件中，则调用 &lt;code&gt;refresh&lt;/code&gt; 将导致重新读取文件。</target>
        </trans-unit>
        <trans-unit id="3296a2f999228f4cc6234021423bf4c10e89c1da" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the instant. This normally results in a change to the local date-time.</source>
          <target state="translated">这种方法改变了时区,保留了瞬间。这通常会导致本地日期时间的改变。</target>
        </trans-unit>
        <trans-unit id="6d0f6dec553a6941b395b610d1f5cce0efbd8f9b" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法更改时区并保留本地日期时间。本地日期时间仅在对于新区域无效时才更改，使用与&lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt;相同的方法确定。</target>
        </trans-unit>
        <trans-unit id="46a23253baf38b2f1c044ac18305191965f3786a" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone.</source>
          <target state="translated">此方法可以改变时区并保留本地的日期时间。只有当本地日期时间对新的时区无效时,才会更改。</target>
        </trans-unit>
        <trans-unit id="5310049153ef893dddbedcbaea486c6508e001ef" translate="yes" xml:space="preserve">
          <source>This method checks against the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">此方法对照ISO-8601日历系统中的字段范围进行检查。对于其他日历系统，此范围可能不正确。使用&lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt;访问不同日历系统的正确范围。</target>
        </trans-unit>
        <trans-unit id="c857b14e72d1582778eab33648b7bb93672a7ba7" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate &lt;code&gt;Level&lt;/code&gt; and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. It also may make other &lt;code&gt;Handler&lt;/code&gt; specific checks that might prevent a handler from logging the &lt;code&gt;LogRecord&lt;/code&gt;. It will return false if the &lt;code&gt;LogRecord&lt;/code&gt; is null.</source>
          <target state="translated">此方法检查 &lt;code&gt;LogRecord&lt;/code&gt; 是否具有适当的 &lt;code&gt;Level&lt;/code&gt; 以及它是否满足任何 &lt;code&gt;Filter&lt;/code&gt; 。它还可能进行其他特定于 &lt;code&gt;Handler&lt;/code&gt; 的检查，这可能会阻止处理程序记录 &lt;code&gt;LogRecord&lt;/code&gt; 。如果 &lt;code&gt;LogRecord&lt;/code&gt; 为null ，它将返回false 。</target>
        </trans-unit>
        <trans-unit id="b9cae628e4cbb314ffd27f1df73f8bc56609f660" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate level and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. However it does &lt;b&gt;not&lt;/b&gt; check whether the &lt;code&gt;LogRecord&lt;/code&gt; would result in a &quot;push&quot; of the buffer contents. It will return false if the &lt;code&gt;LogRecord&lt;/code&gt; is null.</source>
          <target state="translated">此方法检查 &lt;code&gt;LogRecord&lt;/code&gt; 是否具有适当的级别，以及是否满足任何 &lt;code&gt;Filter&lt;/code&gt; 。但是它并&lt;b&gt;没有&lt;/b&gt;检查是否 &lt;code&gt;LogRecord&lt;/code&gt; 是否会导致缓冲的内容&amp;ldquo;推&amp;rdquo;。如果 &lt;code&gt;LogRecord&lt;/code&gt; 为null ，它将返回false 。</target>
        </trans-unit>
        <trans-unit id="7d654c3b8bd21b790c01a40658ed4f6204877578" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate level and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. It will also return false if no output stream has been assigned yet or the LogRecord is null.</source>
          <target state="translated">此方法检查 &lt;code&gt;LogRecord&lt;/code&gt; 是否具有适当的级别，以及是否满足任何 &lt;code&gt;Filter&lt;/code&gt; 。如果尚未分配输出流或LogRecord为null，则它还将返回false。</target>
        </trans-unit>
        <trans-unit id="74391c52a27ced5a9b2079a0933c22c720eef4b2" translate="yes" xml:space="preserve">
          <source>This method checks that &lt;code&gt;cmdarray&lt;/code&gt; is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">此方法检查 &lt;code&gt;cmdarray&lt;/code&gt; 是有效的操作系统命令。哪些命令有效取决于系统，但是至少该命令必须是非空字符串的非空列表。</target>
        </trans-unit>
        <trans-unit id="02b9f2626413e81b573bfe50d50d41f41858234a" translate="yes" xml:space="preserve">
          <source>This method checks that the command is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">本方法检查命令是否是有效的操作系统命令。哪些命令是有效的取决于系统,但至少命令必须是一个非空字符串的非空列表。</target>
        </trans-unit>
        <trans-unit id="80106af0f11970b7bc5d84c28e2c9715b1421695" translate="yes" xml:space="preserve">
          <source>This method checks the existence of a file and that this Java virtual machine has appropriate privileges that would allow it access the file according to all of access modes specified in the &lt;code&gt;modes&lt;/code&gt; parameter as follows:</source>
          <target state="translated">此方法检查文件是否存在，并且此Java虚拟机具有适当的特权，该特权将允许它根据在 &lt;code&gt;modes&lt;/code&gt; 参数中指定的所有访问模式来访问文件，如下所示：</target>
        </trans-unit>
        <trans-unit id="813e7219d13ff3f0ff1e399420f1630dd4d45425" translate="yes" xml:space="preserve">
          <source>This method checks whether this month and day and the input year form a valid date. This can only return false for February 29th.</source>
          <target state="translated">这个方法检查这个月、日和输入的年份是否构成一个有效的日期。对于2月29日,此方法只能返回false。</target>
        </trans-unit>
        <trans-unit id="6ca0ea3874885ad825737fe01643853174112aeb" translate="yes" xml:space="preserve">
          <source>This method checks whether this year and month and the input day form a valid date.</source>
          <target state="translated">本方法检查这个年月和输入的日期是否为有效日期。</target>
        </trans-unit>
        <trans-unit id="b0ae8ca0a80a5b42c94d0b36381fb9056daa9563" translate="yes" xml:space="preserve">
          <source>This method checks whether this year and the input month and day form a valid date.</source>
          <target state="translated">本方法检查本年和输入的月份和日期是否为有效日期。</target>
        </trans-unit>
        <trans-unit id="9d7cfe6c5917eedcd56be0220cd20dbf8d413d0c" translate="yes" xml:space="preserve">
          <source>This method closes the input stream associated with this stream.</source>
          <target state="translated">此方法关闭与此流相关的输入流。</target>
        </trans-unit>
        <trans-unit id="dff493e06662208f386fd8c2f9ff5678c725d551" translate="yes" xml:space="preserve">
          <source>This method combines &lt;a href=&quot;valuerange#isIntValue--&quot;&gt;&lt;code&gt;isIntValue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuerange#isValidValue-long-&quot;&gt;&lt;code&gt;isValidValue(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法结合了&lt;a href=&quot;valuerange#isIntValue--&quot;&gt; &lt;code&gt;isIntValue()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;valuerange#isValidValue-long-&quot;&gt; &lt;code&gt;isValidValue(long)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dd6469ce58e7474eb9aedf9925e9c38c3d7f088" translate="yes" xml:space="preserve">
          <source>This method completes a 2-phase authentication process by calling each configured LoginModule's &lt;code&gt;commit&lt;/code&gt; method if the overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded), or by calling each configured LoginModule's &lt;code&gt;abort&lt;/code&gt; method if the overall authentication failed. If authentication succeeded, each successful LoginModule's &lt;code&gt;commit&lt;/code&gt; method associates the relevant Principals and Credentials with the &lt;code&gt;Subject&lt;/code&gt;. If authentication failed, each LoginModule's &lt;code&gt;abort&lt;/code&gt; method removes/destroys any previously stored state.</source>
          <target state="translated">如果整体认证成功（相关的REQUIRED，REQUISITE，SUFFICIENT和OPTIONAL LoginModule成功），则此方法通过调用每个已配置的LoginModule的 &lt;code&gt;commit&lt;/code&gt; 方法来完成两阶段认证过程；如果整体认证失败，则通过调用每个已配置的LoginModule的 &lt;code&gt;abort&lt;/code&gt; 方法来完成两阶段认证过程。如果身份验证成功，则每个成功的LoginModule的 &lt;code&gt;commit&lt;/code&gt; 方法都将相关的Principals和Credentials与 &lt;code&gt;Subject&lt;/code&gt; 关联。如果身份验证失败，则每个LoginModule的 &lt;code&gt;abort&lt;/code&gt; 方法都将删除/销毁任何先前存储的状态。</target>
        </trans-unit>
        <trans-unit id="0bdf3031aebd241da3e146a392f7cd34da1b30e8" translate="yes" xml:space="preserve">
          <source>This method computes an approximation of the containment relation: If it returns &lt;code&gt;true&lt;/code&gt; then the given charset is known to be contained by this charset; if it returns &lt;code&gt;false&lt;/code&gt;, however, then it is not necessarily the case that the given charset is not contained in this charset.</source>
          <target state="translated">此方法计算包含关系的近似值：如果返回 &lt;code&gt;true&lt;/code&gt; ,则已知给定字符集包含在此字符集中；但是，如果返回 &lt;code&gt;false&lt;/code&gt; ，则不一定是给定字符集不包含在此字符集中。</target>
        </trans-unit>
        <trans-unit id="016880e8460b7fc1d677359206f7ba9fb7006a7b" translate="yes" xml:space="preserve">
          <source>This method constructs a new watch service that may be used to watch registered objects for changes and events.</source>
          <target state="translated">这个方法构建了一个新的观察服务,可以用来观察注册对象的变化和事件。</target>
        </trans-unit>
        <trans-unit id="e45582cbf00c605da5516a5f1e3f215544800cb8" translate="yes" xml:space="preserve">
          <source>This method constructs an absolute &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; equal to the URI scheme that identifies the provider. The exact form of the scheme specific part is highly provider dependent.</source>
          <target state="translated">此方法使用等于标识提供者的URI方案的&lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;构造绝对&lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;。方案特定部分的确切形式高度依赖于提供者。</target>
        </trans-unit>
        <trans-unit id="72795cabb6417067cf089969a9efc76ccd71e6d0" translate="yes" xml:space="preserve">
          <source>This method converts using the type of this enum. The output is defined relative to the 'before' offset of the transition.</source>
          <target state="translated">这个方法使用这个枚举的类型进行转换。输出是相对于转换的 &quot;之前 &quot;偏移量而定义的。</target>
        </trans-unit>
        <trans-unit id="4e1e1c030bc0362fbc369e8636af9a9c47b0f469" translate="yes" xml:space="preserve">
          <source>This method copies a file to the target file with the &lt;code&gt;options&lt;/code&gt; parameter specifying how the copy is performed. By default, the copy fails if the target file already exists or is a symbolic link, except if the source and target are the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case the method completes without copying the file. File attributes are not required to be copied to the target file. If symbolic links are supported, and the file is a symbolic link, then the final target of the link is copied. If the file is a directory then it creates an empty directory in the target location (entries in the directory are not copied). This method can be used with the &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to copy a directory and all entries in the directory, or an entire</source>
          <target state="translated">此方法使用 &lt;code&gt;options&lt;/code&gt; 参数将文件复制到目标文件，该参数指定如何执行复制。默认情况下，如果目标文件已存在或是符号链接，则复制将失败，除非源文件和目标文件是&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;文件，在这种情况下，该方法将完成而不复制该文件。不需要将文件属性复制到目标文件。如果支持符号链接，并且文件是符号链接，则将复制链接的最终目标。如果文件是目录，则它将在目标位置创建一个空目录（该目录中的条目不会被复制）。此方法可以与&lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt;方法一起使用，以复制目录和目录中的所有条目，或复制整个目录</target>
        </trans-unit>
        <trans-unit id="8310f53ea86c0c1e41a135195fbc40f3bcfaa980" translate="yes" xml:space="preserve">
          <source>This method creates a &lt;code&gt;SecurityPermission&lt;/code&gt; object for the given permission target name and calls &lt;code&gt;checkPermission&lt;/code&gt; with it.</source>
          <target state="translated">此方法为给定的权限目标名称创建一个 &lt;code&gt;SecurityPermission&lt;/code&gt; 对象，并与其一起调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21728d2edb7d5eff2049d493420b1c7bc5fe6356" translate="yes" xml:space="preserve">
          <source>This method creates a cipher for the algorithm that had been used in the sealing operation, using an implementation of that algorithm from the given &lt;code&gt;provider&lt;/code&gt;. The Cipher object is initialized for decryption, using the given &lt;code&gt;key&lt;/code&gt; and the parameters (if any) that had been used in the sealing operation.</source>
          <target state="translated">该方法使用给定 &lt;code&gt;provider&lt;/code&gt; 算法实现，为密封操作中使用的算法创建一个密码。使用给定的 &lt;code&gt;key&lt;/code&gt; 和密封操作中使用的参数（如果有），将Cipher对象初始化为解密。</target>
        </trans-unit>
        <trans-unit id="5900f0bafbcd4b92904f8343617b0ece38d9cf8f" translate="yes" xml:space="preserve">
          <source>This method creates a cipher for the algorithm that had been used in the sealing operation. If the default provider package provides an implementation of that algorithm, an instance of Cipher containing that implementation is used. If the algorithm is not available in the default package, other packages are searched. The Cipher object is initialized for decryption, using the given &lt;code&gt;key&lt;/code&gt; and the parameters (if any) that had been used in the sealing operation.</source>
          <target state="translated">此方法为在密封操作中使用的算法创建密码。如果默认提供程序包提供了该算法的实现，则使用包含该实现的Cipher实例。如果默认程序包中没有该算法，则搜索其他程序包。使用给定的 &lt;code&gt;key&lt;/code&gt; 和密封操作中使用的参数（如果有），将Cipher对象初始化为解密。</target>
        </trans-unit>
        <trans-unit id="996ced6827ff26e8c9efb36b41525f3db595392c" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServer implementation object. When creating a new MBeanServer the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; first calls &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; in order to obtain a new &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; for the new MBeanServer. Then it calls &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer implementation.</source>
          <target state="translated">此方法创建一个新的MBeanServer实现对象。创建新的MBeanServer时，&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;首先调用 &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; 以获得新&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt;的新MBeanServerDelegate。然后，它将调用 &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; 传递应由MBeanServer实现使用的 &lt;var&gt;delegate&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="bed9906b1f8929561794f9981e9f989e7b4781de" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServerDelegate for a new MBeanServer. When creating a new MBeanServer the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; first calls this method in order to create a new MBeanServerDelegate.</source>
          <target state="translated">此方法为新的MBeanServer创建一个新的MBeanServerDelegate。创建新的MBeanServer时，&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;首先调用此方法以创建新的MBeanServerDelegate。</target>
        </trans-unit>
        <trans-unit id="c8a8a426401075bfebe76bd1131b78e727507772" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较基础日期，而不比较年代。这允许基于时间线位置比较不同日历系统中的日期。这等效于使用 &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d865ce7bbce8731f8919dcc191c99881dc0763b3" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较基础日期，而不比较年代。这允许基于时间线位置比较不同日历系统中的日期。这等效于使用 &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e67dfebd9078f7bbd8a4464632831ff22f4db473" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较基础日期，而不比较年代。这允许基于时间线位置比较不同日历系统中的日期。这等效于使用 &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73af9e0f5eb7c76b238b4f76e4874c7da82c1c8e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and time and not the chronology. This allows date-times in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较基础日期和时间，而不比较年代。这允许基于时间线位置比较不同日历系统中的日期时间。</target>
        </trans-unit>
        <trans-unit id="5e422892980a4143434c4a33271842f6ca101b62" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较基础日期时间，而不比较年代。这允许基于时间线位置比较不同日历系统中的日期。</target>
        </trans-unit>
        <trans-unit id="69679f35e3a14abac97b704557a6a28c58d1d819" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">此方法不同于&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;chronozoneddatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;中的比较之处在于，它仅比较日期时间的瞬间。这等效于使用 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a310bdbafb8caf48753a75e15e9d61ad7c49945" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;中的比较不同之处在于，它仅比较日期时间的瞬间。这等效于使用 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2efc5d8ad2ddce9136c3cbf23a4408d68bae821e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;中的比较不同之处在于，它仅比较日期时间的瞬间。这等效于使用 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c0acca56b765b2bc1764861b9d596c46bdc9784" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">此方法不同于&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;中的比较之处在于，它仅比较日期时间的瞬间。这等效于使用 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95bd83ca10b6e2e579e7453880a4102248c15b52" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">此方法不同于&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;中的比较之处在于，它仅比较日期时间的瞬间。这等效于使用 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9b67c6d81b67989e43d00b4d9e11db5649e4712" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较日期时间的瞬间。这等效于使用 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="276e0dc62cdc78db144c25c794c005156b01d95b" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant.</source>
          <target state="translated">此方法与&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较基础时刻。</target>
        </trans-unit>
        <trans-unit id="2b4a8edd55adb2adcee3e7f94c3d11b7b90edd30" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">此方法不同于&lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;offsettime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;中的比较之处在于，它仅比较时间的瞬间。这等效于将两个时间都转换为使用相同日期的瞬间并比较瞬间。</target>
        </trans-unit>
        <trans-unit id="e4e5de1c223ead70e6f5f63ebf13ad79c5ab57cd" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">此方法与&lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt;中的比较的不同之处在于，它仅比较时间的瞬间。这等效于将两个时间都转换为使用相同日期的瞬间并比较瞬间。</target>
        </trans-unit>
        <trans-unit id="81446ff3de29ce70008e0ee03dc5c04c4486f1e7" translate="yes" xml:space="preserve">
          <source>This method discovers the attributes and operations that an MBean exposes for management.</source>
          <target state="translated">这个方法可以发现MBean暴露在管理中的属性和操作。</target>
        </trans-unit>
        <trans-unit id="5c4b9860d67fd6071459494762d41825a9131b33" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread upon return.</source>
          <target state="translated">此方法不会&lt;em&gt;不&lt;/em&gt;报告是哪个线程导致返回方法。调用者应重新检查导致线程首先停滞的条件。调用者还可以确定例如返回时线程的中断状态。</target>
        </trans-unit>
        <trans-unit id="4bcd6d36fb527564bc407ca010b1b0701d5a9c43" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread, or the current time upon return.</source>
          <target state="translated">此方法不会&lt;em&gt;不&lt;/em&gt;报告是哪个线程导致返回方法。调用者应重新检查导致线程首先停滞的条件。调用方还可以确定例如线程的中断状态或返回时的当前时间。</target>
        </trans-unit>
        <trans-unit id="f230e6ae839a96b93aabb4880473f2a0be743de0" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread, or the elapsed time upon return.</source>
          <target state="translated">此方法不会&lt;em&gt;不&lt;/em&gt;报告是哪个线程导致返回方法。调用者应重新检查导致线程首先停滞的条件。调用方还可以确定例如线程的中断状态或返回时所经过的时间。</target>
        </trans-unit>
        <trans-unit id="7ec668043a6e942ad250bbeefecd6bb8d8002b6b" translate="yes" xml:space="preserve">
          <source>This method does not access the file system; the path may not locate a file that exists. Eliminating &quot;&lt;code&gt;..&lt;/code&gt;&quot; and a preceding name from a path may result in the path that locates a different file than the original path. This can arise when the preceding name is a symbolic link.</source>
          <target state="translated">此方法不访问文件系统。路径可能找不到存在的文件。从路径中删除&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;和前面的名称可能会导致该路径找到与原始路径不同的文件。当前面的名称是符号链接时，可能会出现这种情况。</target>
        </trans-unit>
        <trans-unit id="29efc8d1d0a975c0106803bf392fa8e4c9140058" translate="yes" xml:space="preserve">
          <source>This method does not actually erase the data in the buffer, but it is named as if it did because it will most often be used in situations in which that might as well be the case.</source>
          <target state="translated">这个方法实际上并没有擦除缓冲区中的数据,但它被命名为 &quot;擦除&quot;,因为它最常被用于可能是这样的情况。</target>
        </trans-unit>
        <trans-unit id="d0462f8cd40a193807741b2a955105e488b1a6dc" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from a &lt;code&gt;File&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">该方法不会尝试定位可以直接从 &lt;code&gt;File&lt;/code&gt; 读取的 &lt;code&gt;ImageReader&lt;/code&gt; ；可以使用 &lt;code&gt;IIORegistry&lt;/code&gt; 和 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 完成。</target>
        </trans-unit>
        <trans-unit id="f5028ce13fc5fa887cf07e88a999f30391cac7a8" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from a &lt;code&gt;URL&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">该方法不会尝试查找可以直接从 &lt;code&gt;URL&lt;/code&gt; 读取的 &lt;code&gt;ImageReader&lt;/code&gt; ；可以使用 &lt;code&gt;IIORegistry&lt;/code&gt; 和 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 完成。</target>
        </trans-unit>
        <trans-unit id="08d84f5481057ffe75137ea92fd191d915f3dd45" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from an &lt;code&gt;InputStream&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">此方法不会尝试查找可以直接从 &lt;code&gt;InputStream&lt;/code&gt; 读取的 &lt;code&gt;ImageReader&lt;/code&gt; ；可以使用 &lt;code&gt;IIORegistry&lt;/code&gt; 和 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 完成。</target>
        </trans-unit>
        <trans-unit id="fac3576c4d1c22034682c222249823c14a504b13" translate="yes" xml:space="preserve">
          <source>This method does not block. An invocation always returns immediately, either having acquired a lock on the requested region or having failed to do so. If it fails to acquire a lock because an overlapping lock is held by another program then it returns &lt;code&gt;null&lt;/code&gt;. If it fails to acquire a lock for any other reason then an appropriate exception is thrown.</source>
          <target state="translated">此方法不会阻止。调用总是立即返回，无论是已获得对请求区域的锁定还是未成功获得锁定。如果由于另一个程序持有重叠的锁而无法获取锁，则返回 &lt;code&gt;null&lt;/code&gt; 。如果它由于任何其他原因未能获得锁，则将引发适当的异常。</target>
        </trans-unit>
        <trans-unit id="776db5599544763bcd336fd173724144761f8aed" translate="yes" xml:space="preserve">
          <source>This method does not cause any initialization except that which would occur under the customary JVM semantics. In other words, redefining a class does not cause its initializers to be run. The values of static variables will remain as they were prior to the call.</source>
          <target state="translated">除了在习惯的 JVM 语义下会发生的初始化之外,该方法不会引起任何初始化。换句话说,重新定义一个类不会导致其初始化器被运行。静态变量的值将保持在调用之前的状态。</target>
        </trans-unit>
        <trans-unit id="029519cbdd36144790d6e5a27b657276f60210ce" translate="yes" xml:space="preserve">
          <source>This method does not change the value of &lt;code&gt;java.class.path&lt;/code&gt;&lt;a href=&quot;../system#getProperties--&quot;&gt;&lt;code&gt;system property&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法不会更改 &lt;code&gt;java.class.path&lt;/code&gt; &lt;a href=&quot;../system#getProperties--&quot;&gt; &lt;code&gt;system property&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="16cbeb9b6b383c135b9d4fffaae8b1ac2d8b8242" translate="yes" xml:space="preserve">
          <source>This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the source channel has a position then bytes are read starting at that position and then the position is incremented by the number of bytes read.</source>
          <target state="translated">这个方法不修改这个通道的位置。如果给定的位置大于文件的当前大小,则不传输字节。如果源通道有一个位置,那么从该位置开始读取字节,然后按读取的字节数递增位置。</target>
        </trans-unit>
        <trans-unit id="2f6fb75afad10086596870671066a96fdeb3f586" translate="yes" xml:space="preserve">
          <source>This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the target channel has a position then bytes are written starting at that position and then the position is incremented by the number of bytes written.</source>
          <target state="translated">这个方法不修改这个通道的位置。如果给定的位置大于文件的当前大小,则不传输字节。如果目标通道有一个位置,那么从该位置开始写入字节,然后按写入的字节数递增位置。</target>
        </trans-unit>
        <trans-unit id="799659d1b1680f85ef944208828233ac6460e32e" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../../lang/object#wait-long-&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法不提供实时保证：它通过调用&lt;a href=&quot;../../lang/object#wait-long-&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt;方法来安排超时。</target>
        </trans-unit>
        <trans-unit id="423dc1fb5fa90201dd1f3386013a35af973fbed0" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法不提供实时保证：它通过调用&lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt;方法来安排超时。</target>
        </trans-unit>
        <trans-unit id="0cfca155e4fe2088fe576ea1b39061a44946c4ff" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">此方法不等待主动执行的任务终止。使用&lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="ae53fc019903cb63e96647acf94b63258487c8dc" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">此方法不等待主动执行的任务终止。使用&lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="6845b8bb705b91430417229ccdbccb9324f99e41" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">此方法不等待先前提交的任务完成执行。使用&lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="d8b986bb2830801c1c0e469068e7bda1db7a0f3a" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">此方法不等待先前提交的任务完成执行。使用&lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="a04f810e9c905f9c1329c7a9c73fea317cca2c2f" translate="yes" xml:space="preserve">
          <source>This method doesn't block, i.e. no reverse name service lookup is performed.</source>
          <target state="translated">此方法不阻塞,即不进行反向名称服务查询。</target>
        </trans-unit>
        <trans-unit id="b35853e0da75c2dd9285f53bc7ad476eb18426a5" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">此方法不会将指定的字符验证为有效的Unicode代码点。如有必要，调用者必须使用&lt;a href=&quot;character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;isValidCodePoint&lt;/code&gt; &lt;/a&gt;验证字符值。</target>
        </trans-unit>
        <trans-unit id="9b0d757f872c8992ebbba76f2a37b8cb57802645" translate="yes" xml:space="preserve">
          <source>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a List can be used as a range operation by operating on a subList view instead of a whole List. For example, the following idiom removes a range of elements from a List:</source>
          <target state="translated">这种方法消除了对显式范围操作的需求(通常存在于数组中的那种)。任何期待List的操作都可以通过对子List视图而不是整个List的操作来作为范围操作。例如,下面的成语是从List中删除元素的范围。</target>
        </trans-unit>
        <trans-unit id="b87f0cb9c5df7254ccafa323a476c57fb867a722" translate="yes" xml:space="preserve">
          <source>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list:</source>
          <target state="translated">这个方法消除了对显式范围操作的需求(通常存在于数组中的那种)。任何期望列表的操作都可以通过传递一个子List视图而不是整个列表来作为一个范围操作。例如,下面的成语是从一个列表中删除元素的范围。</target>
        </trans-unit>
        <trans-unit id="d1c6c7c0a3f0e3d56a14189ead8dc65d2d8ca336" translate="yes" xml:space="preserve">
          <source>This method enables the current &lt;code&gt;BeanInfo&lt;/code&gt; object to return an arbitrary collection of other &lt;code&gt;BeanInfo&lt;/code&gt; objects that provide additional information about the current bean.</source>
          <target state="translated">此方法使当前 &lt;code&gt;BeanInfo&lt;/code&gt; 对象可以返回其他 &lt;code&gt;BeanInfo&lt;/code&gt; 对象的任意集合，这些对象提供有关当前bean的其他信息。</target>
        </trans-unit>
        <trans-unit id="78b1fe125c73b5076363add79751d8af78528e7f" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a decoding error. This method is invoked by the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">此方法封装了基本的解码循环，对尽可能多的字节进行解码，直到它耗尽输入，输出缓冲区的空间不足或遇到解码错误为止。此方法由&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;方法调用，该方法处理结果解释和错误恢复。</target>
        </trans-unit>
        <trans-unit id="34cc00ba57c172360457e325a1b154234e6f6295" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic encoding loop, encoding as many characters as possible until it either runs out of input, runs out of room in the output buffer, or encounters an encoding error. This method is invoked by the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">此方法封装了基本的编码循环，对尽可能多的字符进行编码，直到它用完了输入，输出缓冲区中的空间不足或遇到编码错误为止。该方法由&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;方法调用，该方法处理结果解释和错误恢复。</target>
        </trans-unit>
        <trans-unit id="74ace9a4696b375af288eedb658c5a0479b2c340" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;existential quantification&lt;/em&gt; of the predicate over the elements of the stream (for some x P(x)).</source>
          <target state="translated">此方法评估流元素上谓词的&lt;em&gt;存在量化&lt;/em&gt;（对于某些x P（x））。</target>
        </trans-unit>
        <trans-unit id="8e29b39c37d9f0876c9909a031c3012531b4c71c" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;universal quantification&lt;/em&gt; of the negated predicate over the elements of the stream (for all x ~P(x)). If the stream is empty, the quantification is said to be vacuously satisfied and is always &lt;code&gt;true&lt;/code&gt;, regardless of P(x).</source>
          <target state="translated">该方法评估流元素上的否定谓词的&lt;em&gt;通用量化&lt;/em&gt;（对于所有x〜P（x））。如果流为空，则称定量满足无用且始终为 &lt;code&gt;true&lt;/code&gt; ，而与P（x）无关。</target>
        </trans-unit>
        <trans-unit id="d7db2070540c2c562f74f31f3655c1a32f3083a2" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;universal quantification&lt;/em&gt; of the predicate over the elements of the stream (for all x P(x)). If the stream is empty, the quantification is said to be &lt;em&gt;vacuously satisfied&lt;/em&gt; and is always &lt;code&gt;true&lt;/code&gt; (regardless of P(x)).</source>
          <target state="translated">此方法评估流元素上谓词的&lt;em&gt;通用量化&lt;/em&gt;（对于所有x P（x））。如果流是空的，则称其&lt;em&gt;满足了&lt;/em&gt;空洞的定量且始终为 &lt;code&gt;true&lt;/code&gt; （与P（x）无关）。</target>
        </trans-unit>
        <trans-unit id="16cf4a1fcc5d6973ae156692d6317157013b5c90" translate="yes" xml:space="preserve">
          <source>This method exists mainly to support debugging, where you want to see the elements as they flow past a certain point in a pipeline:</source>
          <target state="translated">这种方法的存在主要是为了支持调试,当你想看到元素流过管道中的某一点时,就可以看到它们。</target>
        </trans-unit>
        <trans-unit id="982c59d7cd4f643b57742247e7e55732ba66ae60" translate="yes" xml:space="preserve">
          <source>This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. &lt;code&gt;LocalDateTime&lt;/code&gt; has five additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.</source>
          <target state="translated">该方法主要用于编写测试用例。非测试代码通常会使用其他方法来创建偏移时间。 &lt;code&gt;LocalDateTime&lt;/code&gt; 具有等效的工厂方法的另外五个便捷变体，只需要较少的参数。此处未提供它们以减少API的占用空间。</target>
        </trans-unit>
        <trans-unit id="cd1761201ffb394e8a819ed4bce3831fbbee5af5" translate="yes" xml:space="preserve">
          <source>This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. &lt;code&gt;LocalTime&lt;/code&gt; has two additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.</source>
          <target state="translated">该方法主要用于编写测试用例。非测试代码通常会使用其他方法来创建偏移时间。 &lt;code&gt;LocalTime&lt;/code&gt; 具有等效的工厂方法的另外两个便捷变体，它们使用较少的参数。此处未提供它们以减少API的占用空间。</target>
        </trans-unit>
        <trans-unit id="9b58458b6cd02ffd97fdf8240b91b18bd00bcd97" translate="yes" xml:space="preserve">
          <source>This method exists to be used as a &lt;a href=&quot;function/predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;filter(Objects::isNull)&lt;/code&gt;</source>
          <target state="translated">存在此方法用作&lt;a href=&quot;function/predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;filter(Objects::isNull)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad117920c2cdf44107f517b6de5ada3dbf71681f" translate="yes" xml:space="preserve">
          <source>This method exists to be used as a &lt;a href=&quot;function/predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;filter(Objects::nonNull)&lt;/code&gt;</source>
          <target state="translated">存在此方法用作&lt;a href=&quot;function/predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;filter(Objects::nonNull)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3567eed99c163537118a86339bf638abc11755d6" translate="yes" xml:space="preserve">
          <source>This method finds deadlocks involving only object monitors. To find deadlocks involving both object monitors and &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;, the &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt;&lt;code&gt;findDeadlockedThreads&lt;/code&gt;&lt;/a&gt; method should be used.</source>
          <target state="translated">此方法查找仅涉及对象监视器的死锁。若要查找涉及对象监视器和可&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;拥有的同步&lt;/a&gt;器的死锁，应使用&lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt; &lt;code&gt;findDeadlockedThreads&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2b4dc1a8cd711f7f3fa89cb707ce5c4e33beea21" translate="yes" xml:space="preserve">
          <source>This method finds the desired calendar system by in a manner equivalent to passing &quot;ca&quot; to &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt;. If the &quot;ca&quot; key is not present, then &lt;code&gt;IsoChronology&lt;/code&gt; is returned.</source>
          <target state="translated">此方法以与将&amp;ldquo; ca&amp;rdquo;传递给&lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt;等效的方式找到所需的日历系统。如果&amp;ldquo; ca&amp;rdquo;键不存在，则返回 &lt;code&gt;IsoChronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2780f49595166eb2ccf26df44113b129089ef21e" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. If none of the installed providers support the URI scheme then an attempt is made to locate the provider using the given class loader. If a provider supporting the URI scheme is located then its &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; is invoked to construct the new file system.</source>
          <target state="translated">此方法首先尝试以与&lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;方法完全相同的方式查找已安装的提供程序。如果已安装的提供程序都不支持URI方案，则尝试使用给定的类加载器来定位提供程序。如果找到支持URI方案的提供程序，则将调用它的&lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;来构造新文件系统。</target>
        </trans-unit>
        <trans-unit id="1798d4617d377c84e9b80df321391c4d2c5cf3ad" translate="yes" xml:space="preserve">
          <source>This method first calls &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to retrieve the cached MBeanInfo for this MBean, if any. If the MBeanInfo returned by &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; is not null, then it is returned.</source>
          <target state="translated">此方法首先调用&lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;以便检索为此MBean缓存的MBeanInfo（如果有）。如果&lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;返回的MBeanInfo 不为null，则将其返回。</target>
        </trans-unit>
        <trans-unit id="59140a76baec806eb4e690ef3b6f858bd5d141de" translate="yes" xml:space="preserve">
          <source>This method first determines the content type of the object by calling the &lt;code&gt;getContentType&lt;/code&gt; method. If this is the first time that the application has seen that specific content type, a content handler for that content type is created:</source>
          <target state="translated">此方法首先通过调用 &lt;code&gt;getContentType&lt;/code&gt; 方法确定对象的内容类型。如果这是应用程序第一次看到该特定内容类型，则将创建该内容类型的内容处理程序：</target>
        </trans-unit>
        <trans-unit id="76c12afd2f5682a61d6b55898ae3f3e4274be13b" translate="yes" xml:space="preserve">
          <source>This method first encodes all input bytes into a base64 encoded byte array and then constructs a new String by using the encoded byte array and the &lt;a href=&quot;../nio/charset/standardcharsets#ISO_8859_1&quot;&gt;&lt;code&gt;ISO-8859-1&lt;/code&gt;&lt;/a&gt; charset.</source>
          <target state="translated">此方法首先将所有输入字节编码为base64编码的字节数组，然后使用编码的字节数组和&lt;a href=&quot;../nio/charset/standardcharsets#ISO_8859_1&quot;&gt; &lt;code&gt;ISO-8859-1&lt;/code&gt; &lt;/a&gt;字符集构造新的String 。</target>
        </trans-unit>
        <trans-unit id="428e7d1173d67880a9e00fdf54335f66d0af40dd" translate="yes" xml:space="preserve">
          <source>This method first gets a list of restricted packages by obtaining a comma-separated list from a call to &lt;code&gt;java.security.Security.getProperty(&quot;package.access&quot;)&lt;/code&gt;, and checks to see if &lt;code&gt;pkg&lt;/code&gt; starts with or equals any of the restricted packages. If it does, then &lt;code&gt;checkPermission&lt;/code&gt; gets called with the &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">此方法首先通过从对 &lt;code&gt;java.security.Security.getProperty(&quot;package.access&quot;)&lt;/code&gt; 的调用中获取逗号分隔的列表来获取受限制软件包的列表，然后检查 &lt;code&gt;pkg&lt;/code&gt; 是否以任何受限制软件包开头或等于。如果是这样，那么将使用 &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd34702b84494134e43e3bafa9dd777fc7c1bdd2" translate="yes" xml:space="preserve">
          <source>This method first gets a list of restricted packages by obtaining a comma-separated list from a call to &lt;code&gt;java.security.Security.getProperty(&quot;package.definition&quot;)&lt;/code&gt;, and checks to see if &lt;code&gt;pkg&lt;/code&gt; starts with or equals any of the restricted packages. If it does, then &lt;code&gt;checkPermission&lt;/code&gt; gets called with the &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">该方法首先通过从对 &lt;code&gt;java.security.Security.getProperty(&quot;package.definition&quot;)&lt;/code&gt; 的调用中获取逗号分隔的列表来获取受限制软件包的列表，然后检查 &lt;code&gt;pkg&lt;/code&gt; 是否以任何受限制软件包开头或等于。如果是这样，那么将使用 &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; 权限调用 &lt;code&gt;checkPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dee20129dc59e859025bd28928a1b166bb308aac" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法首先重置此匹配器。然后，它扫描输入序列以查找模式匹配。不属于匹配项的字符将直接附加到结果字符串中；匹配项将在结果中替换为替换字符串。替换字符串可能包含对已捕获子序列的引用，如&lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;方法中那样。</target>
        </trans-unit>
        <trans-unit id="26f6cb3387c41fe104f31644a6b216b8ba0d8140" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法首先重置此匹配器。然后，它扫描输入序列以查找模式匹配项。不属于任何匹配项的字符将直接附加到结果字符串中；每次匹配都由替换字符串替换。替换字符串可能包含对已捕获子序列的引用，如&lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;方法中那样。</target>
        </trans-unit>
        <trans-unit id="454b55b13454df1ffb7a9f545d399b9998fbac9f" translate="yes" xml:space="preserve">
          <source>This method first retrieves the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt; via &lt;code&gt;AccessController.getContext&lt;/code&gt;, and then instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; using the retrieved context along with a new &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; (constructed using the provided &lt;code&gt;Subject&lt;/code&gt;). Finally, this method invokes &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;, passing it the provided &lt;code&gt;PrivilegedAction&lt;/code&gt;, as well as the newly constructed &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">此方法首先通过 &lt;code&gt;AccessController.getContext&lt;/code&gt; 检索当前线程的 &lt;code&gt;AccessControlContext&lt;/code&gt; ，然后使用检索到的上下文以及新的 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; （使用提供的 &lt;code&gt;Subject&lt;/code&gt; 构造）来实例化新的 &lt;code&gt;AccessControlContext&lt;/code&gt; 。最后，此方法调用 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; ，将提供的 &lt;code&gt;PrivilegedAction&lt;/code&gt; 以及新构造的 &lt;code&gt;AccessControlContext&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="37b325e60cde38d418deb1d8e962ea5c6de2a359" translate="yes" xml:space="preserve">
          <source>This method first retrieves the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt; via &lt;code&gt;AccessController.getContext&lt;/code&gt;, and then instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; using the retrieved context along with a new &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; (constructed using the provided &lt;code&gt;Subject&lt;/code&gt;). Finally, this method invokes &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;, passing it the provided &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt;, as well as the newly constructed &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">此方法首先通过 &lt;code&gt;AccessController.getContext&lt;/code&gt; 检索当前线程的 &lt;code&gt;AccessControlContext&lt;/code&gt; ，然后使用检索到的上下文以及新的 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; （使用提供的 &lt;code&gt;Subject&lt;/code&gt; 构造）来实例化新的 &lt;code&gt;AccessControlContext&lt;/code&gt; 。最后，此方法调用 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; ，将提供的 &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 以及新构造的 &lt;code&gt;AccessControlContext&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="3721220fa080e7d6464d6c7eb00c8b6d61b5f653" translate="yes" xml:space="preserve">
          <source>This method first verifies that this channel is open and that the given initial interest set is valid.</source>
          <target state="translated">该方法首先验证该通道是否开放,给定的初始兴趣集是否有效。</target>
        </trans-unit>
        <trans-unit id="7d0c6e67c905619f3119435a65c48ff048cc99c1" translate="yes" xml:space="preserve">
          <source>This method follows symbolic links if the file referenced by this object is a symbolic link. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. To determine the effective access to a file may require access to several attributes and so in some implementations this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">如果该对象引用的文件是一个符号链接,则该方法将跟踪符号链接。根据不同的实现,本方法可能需要读取文件权限、访问控制列表或其他文件属性,以便检查对文件的有效访问。为了确定对一个文件的有效访问,可能需要访问多个属性,因此在某些实现中,这个方法可能与其他文件系统操作不一样。</target>
        </trans-unit>
        <trans-unit id="d162285c691fe9ba58164f60c01d1f90afda5b8d" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed.</source>
          <target state="translated">当绑定属性发生变化时,这个方法会被调用。</target>
        </trans-unit>
        <trans-unit id="e0a919a268cd80181fb6acbf66f00fc444540914" translate="yes" xml:space="preserve">
          <source>This method gets called when a child node is added.</source>
          <target state="translated">当一个子节点被添加时,这个方法会被调用。</target>
        </trans-unit>
        <trans-unit id="fd9efef61dcaca2310dfb7656d4109520bd8413f" translate="yes" xml:space="preserve">
          <source>This method gets called when a child node is removed.</source>
          <target state="translated">当一个子节点被移除时,这个方法会被调用。</target>
        </trans-unit>
        <trans-unit id="c696073c099d1d3c7484136336e5c0f85bdff14b" translate="yes" xml:space="preserve">
          <source>This method gets called when a constrained property is changed.</source>
          <target state="translated">当一个约束属性被改变时,这个方法会被调用。</target>
        </trans-unit>
        <trans-unit id="2fd1ac397c8871de42362b11036ea73cbe290206" translate="yes" xml:space="preserve">
          <source>This method gets called when a preference is added, removed or when its value is changed.</source>
          <target state="translated">当一个偏好被添加、删除或其值被改变时,这个方法会被调用。</target>
        </trans-unit>
        <trans-unit id="9c6bfc3827438059a1a5628710ed9ab1b5dbd71f" translate="yes" xml:space="preserve">
          <source>This method has been superseded by the &lt;a href=&quot;filelock#acquiredBy--&quot;&gt;&lt;code&gt;acquiredBy&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该方法已被取代&lt;a href=&quot;filelock#acquiredBy--&quot;&gt; &lt;code&gt;acquiredBy&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="88bebe56fe3ff2e1591dbb7a6b5405ca671ad816" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an &lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法的效果与将每个组成部分直接附加到此生成器&lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt;由optionalStart（）和&lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; &lt;/a&gt;包围）具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="96db534ebadbf295dac57f668d2d340d0f0dede6" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts of the formatter directly to this builder.</source>
          <target state="translated">这种方法与直接将formatter的每个组成部件附加到这个构建器上的效果是一样的。</target>
        </trans-unit>
        <trans-unit id="51bbeed2db8fef426d1e1af8073829b7c5b2411c" translate="yes" xml:space="preserve">
          <source>This method implements &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法实现&lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cfae46a7f5456687b8a16dfbdd9df59a7d55d3a" translate="yes" xml:space="preserve">
          <source>This method implements an entire &lt;a href=&quot;#steps&quot;&gt;decoding operation&lt;/a&gt;; that is, it resets this decoder, then it decodes the bytes in the given byte buffer, and finally it flushes this decoder. This method should therefore not be invoked if a decoding operation is already in progress.</source>
          <target state="translated">该方法实现了整个&lt;a href=&quot;#steps&quot;&gt;解码操作&lt;/a&gt;；也就是说，它将重置此解码器，然后解码给定字节缓冲区中的字节，最后刷新该解码器。因此，如果已经在进行解码操作，则不应调用此方法。</target>
        </trans-unit>
        <trans-unit id="4ac9435c198b287b7c60fc48bf877b6db17d492c" translate="yes" xml:space="preserve">
          <source>This method implements an entire &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;; that is, it resets this encoder, then it encodes the characters in the given character buffer, and finally it flushes this encoder. This method should therefore not be invoked if an encoding operation is already in progress.</source>
          <target state="translated">该方法实现了整个&lt;a href=&quot;#steps&quot;&gt;编码操作&lt;/a&gt;；也就是说，它将重置此编码器，然后对给定字符缓冲区中的字符进行编码，最后刷新该编码器。因此，如果已经在进行编码操作，则不应调用此方法。</target>
        </trans-unit>
        <trans-unit id="a217daaac530aeb0811702d8e5b97de7db1d9da9" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">此方法实现 &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类的相应 &lt;code&gt;&lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法的常规协定。作为一个额外的便利，它尝试通过重复调用基础流的 &lt;code&gt;read&lt;/code&gt; 方法来尝试读取尽可能多的字节。重复进行此迭代 &lt;code&gt;read&lt;/code&gt; 直到满足以下条件之一：</target>
        </trans-unit>
        <trans-unit id="d79db10c8a15dc4c5930fc6d96d770f283377867" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many characters as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">此方法实现 &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类的相应 &lt;code&gt;&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法的常规协定。作为一个额外的便利，它尝试通过重复调用基础流的 &lt;code&gt;read&lt;/code&gt; 方法来读取尽可能多的字符。重复进行此迭代 &lt;code&gt;read&lt;/code&gt; 直到满足以下条件之一：</target>
        </trans-unit>
        <trans-unit id="bef6cd50581d421dc0e551ac77328ee9c627639c" translate="yes" xml:space="preserve">
          <source>This method indicates to the service provider that it is free to release resources associated with the enumeration, and can notify servers to cancel any outstanding requests. The &lt;code&gt;close()&lt;/code&gt; method is a hint to implementations for managing their resources. Implementations are encouraged to use appropriate algorithms to manage their resources when client omits the &lt;code&gt;close()&lt;/code&gt; calls.</source>
          <target state="translated">此方法向服务提供商指示可以自由释放与枚举关联的资源，并且可以通知服务器取消任何未完成的请求。在 &lt;code&gt;close()&lt;/code&gt; 方法是一个提示，以管理其资源实现。鼓励实现在客户端忽略 &lt;code&gt;close()&lt;/code&gt; 调用时使用适当的算法来管理其资源。</target>
        </trans-unit>
        <trans-unit id="2a35fe7383019769b12946558370f4e4eb84750d" translate="yes" xml:space="preserve">
          <source>This method initiates a read of up to</source>
          <target state="translated">此方法启动的读取次数最多为</target>
        </trans-unit>
        <trans-unit id="195dc1ea9cd446d54f70fa3ceb58eae15f2abec4" translate="yes" xml:space="preserve">
          <source>This method initiates a write of up to</source>
          <target state="translated">该方法发起的写入量最大为</target>
        </trans-unit>
        <trans-unit id="5b4a146fe1db63f22764c064f29188fc4be633a5" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when a connection is accepted (or the operation fails). The result passed to the completion handler is the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection.</source>
          <target state="translated">此方法启动异步操作以接受对此通道的套接字建立的连接。该 &lt;code&gt;handler&lt;/code&gt; 参数是一个完成处理程序，当接受连接（或操作失败）时调用。传递给完成处理程序的结果是到新连接的&lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36c77446ccad13303c3b9fd58465698d5f302634" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection on successful completion.</source>
          <target state="translated">此方法启动异步操作以接受对此通道的套接字建立的连接。该方法的行为与&lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法的行为完全相同，除了该方法返回指定待处理结果的 &lt;code&gt;Future&lt;/code&gt; 而不是指定完成处理程序。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回的&lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; &lt;/a&gt;就成功完成了新的连接。</target>
        </trans-unit>
        <trans-unit id="ee6e1a56838a97e25f3a78eccf440495412459ce" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the read operation completes (or fails). The result passed to the completion handler is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">此方法启动异步读取操作，以从该通道将字节序列读取到给定的缓冲区中。该 &lt;code&gt;handler&lt;/code&gt; 参数是完成处理程序，在读取操作完成（或失败）时调用。传递到完成处理程序的结果是读取的字节数，如果由于通道已到达流而无法读取任何字节，则为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4e5adf06733fe348da70a4c4ad9658c1cbcbd4f" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">此方法启动异步读取操作，以从该通道将字节序列读取到给定的缓冲区中。该方法的行为与&lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法完全相同，除了该方法返回指定待处理结果的 &lt;code&gt;Future&lt;/code&gt; 而不是指定完成处理程序之外。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回的字节数读取或 &lt;code&gt;-1&lt;/code&gt; ，如果可以被理解没有字节，因为该通道已到达结束流。</target>
        </trans-unit>
        <trans-unit id="884f1eed34505d79db8e140611a1bda7f4feda2c" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">此方法启动异步写入操作，以将字节序列从给定的缓冲区写入此通道。该 &lt;code&gt;handler&lt;/code&gt; 参数是完成处理程序，在写操作完成（或失败）时调用。传递给完成处理程序的结果是写入的字节数。</target>
        </trans-unit>
        <trans-unit id="425dcdb9947c1226ce9e013431356c819774a519" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">此方法启动异步写入操作，以将字节序列从给定的缓冲区写入此通道。该方法的行为与&lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法完全相同，除了该方法返回指定待处理结果的 &lt;code&gt;Future&lt;/code&gt; 而不是指定完成处理程序。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回写入的字节数。</target>
        </trans-unit>
        <trans-unit id="d69bc96e539dc381a9fbbd2f36f985610a68eafc" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the lock is acquired (or the operation fails). The result passed to the completion handler is the resulting &lt;code&gt;FileLock&lt;/code&gt;.</source>
          <target state="translated">此方法启动一个操作，以获取对该通道文件的给定区域的锁定。该 &lt;code&gt;handler&lt;/code&gt; 参数是一个完成处理程序，在获取锁（或操作失败）时调用。传递给完成处理程序的结果是结果 &lt;code&gt;FileLock&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ade494af179c7fa5dd56b70c37320ff095534a3d" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">此方法启动一个操作，以获取对该通道文件的给定区域的锁定。该方法的行为与&lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法的行为完全相同，除了该方法不是指定完成处理程序，而是返回表示未决结果的 &lt;code&gt;Future&lt;/code&gt; 。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt;成功完成。</target>
        </trans-unit>
        <trans-unit id="8efe04b7e4bd5e33dc579eaa5a2c7ba89e20c9d8" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire an exclusive lock on this channel's file. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">此方法启动一个操作，以获取对该通道文件的排他锁。该方法返回一个 &lt;code&gt;Future&lt;/code&gt; ,表示该操作的待处理结果。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt;成功完成。</target>
        </trans-unit>
        <trans-unit id="ccec9e8297a340fc281d8a33e5acb34845e0008f" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the connection is successfully established or connection cannot be established. If the connection cannot be established then the channel is closed.</source>
          <target state="translated">此方法启动一个操作以连接此通道。该 &lt;code&gt;handler&lt;/code&gt; 参数是完成处理程序，当成功建立连接或无法建立连接时将调用此参数。如果无法建立连接，则关闭通道。</target>
        </trans-unit>
        <trans-unit id="fa8f92f210402ec46afc6ff1e5c2f4ed013064dd" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. This method behaves in exactly the same manner as the &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt; on successful completion.</source>
          <target state="translated">此方法启动一个操作以连接此通道。此方法的行为与&lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法完全相同，不同之处在于，此方法返回指定待处理结果的 &lt;code&gt;Future&lt;/code&gt; 而不是指定完成处理程序。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回 &lt;code&gt;null&lt;/code&gt; 的圆满完成。</target>
        </trans-unit>
        <trans-unit id="30130f900e70b9de0cdf13b5d4484fc27d0cf423" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. The result of the read is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">此方法开始从给定文件位置开始，从该通道将字节序列读取到给定缓冲区中。读取的结果是读取的字节数，如果给定位置大于或等于尝试读取时的文件大小，则为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3264d07d05d29bee8f76107fdf7105ffffe704b" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. This method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">此方法开始从给定文件位置开始，从该通道将字节序列读取到给定缓冲区中。此方法返回一个 &lt;code&gt;Future&lt;/code&gt; ,表示操作的未决结果。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回的字节数读取或 &lt;code&gt;-1&lt;/code&gt; ，如果给定的位置大于或在读取尝试的时间等于文件的大小。</target>
        </trans-unit>
        <trans-unit id="4c8aa12f9311f3afdff1963436aba815aca9a681" translate="yes" xml:space="preserve">
          <source>This method initiates the writing of a sequence of bytes to this channel from the given buffer, starting at the given file position. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the write operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">此方法从给定的文件位置开始，将字节序列从给定的缓冲区写入此通道。该方法返回一个 &lt;code&gt;Future&lt;/code&gt; ,表示写操作的未决结果。在 &lt;code&gt;Future&lt;/code&gt; 的&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法返回写入的字节数。</target>
        </trans-unit>
        <trans-unit id="46a4338713f2d071fd29cd8ad8a5faced93b314e" translate="yes" xml:space="preserve">
          <source>This method instructs the bean that it is OK to use the Gui.</source>
          <target state="translated">这个方法指示Bean可以使用Gui。</target>
        </trans-unit>
        <trans-unit id="d03ba6b1925fc9e4d5bdab71fe41aa59137b4d30" translate="yes" xml:space="preserve">
          <source>This method instructs the bean that it should not use the Gui.</source>
          <target state="translated">这个方法指示Bean不应该使用Gui。</target>
        </trans-unit>
        <trans-unit id="eeff678a91716b0a42e47201bdbc4ceb988bbbf1" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">此方法调用&lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;方法以执行实际的冲洗操作。</target>
        </trans-unit>
        <trans-unit id="7cc4bc54886d6e859dfb0a0349c595e5484237ea" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">该方法调用&lt;a href=&quot;charsetdecoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt;方法，并传递新操作。</target>
        </trans-unit>
        <trans-unit id="9382f3d508bb3cdc2b89496be0a551dc47ca8836" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">此方法调用&lt;a href=&quot;charsetdecoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt;方法，并传递新操作。</target>
        </trans-unit>
        <trans-unit id="31054bfe51b35fcc9c6c84d577625707b866633a" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implReplaceWith-java.lang.String-&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">在检查新替换是否可接受之后，此方法将调用&lt;a href=&quot;charsetdecoder#implReplaceWith-java.lang.String-&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt;方法，并传递新替换。</target>
        </trans-unit>
        <trans-unit id="5c104f7fb6d4a6bc7f7c359da6bb8e5370594817" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">此方法调用&lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;方法以执行实际的冲洗操作。</target>
        </trans-unit>
        <trans-unit id="1d68eb989e6b2cec48fb1d9608b53360e33c5501" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">该方法调用&lt;a href=&quot;charsetencoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt;方法，并传递新操作。</target>
        </trans-unit>
        <trans-unit id="afd6d10a1b1e6193932849b08ddb519274872dcb" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">此方法调用&lt;a href=&quot;charsetencoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt;方法，并传递新操作。</target>
        </trans-unit>
        <trans-unit id="0b72b131850d9b320a093c2e3604e8be32c2042c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implReplaceWith-byte:A-&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">在检查新替换是否可接受之后，此方法将调用&lt;a href=&quot;charsetencoder#implReplaceWith-byte:A-&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt;方法，并传递新替换。</target>
        </trans-unit>
        <trans-unit id="ad0ffa02b5be5094d7b4978dfaa39f5914c1520b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;filelock#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. It was added to the class so that it could be used in conjunction with the automatic resource management block construct.</source>
          <target state="translated">此方法调用&lt;a href=&quot;filelock#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;方法。它已添加到类中，以便可以与自动资源管理块构造结合使用。</target>
        </trans-unit>
        <trans-unit id="0d38c44073f00644ab9b57c3ea55d3a7eda2d72b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;doFinal&lt;/code&gt; method of the encapsulated cipher object, which causes any bytes buffered by the encapsulated cipher to be processed. The result is written out by calling the &lt;code&gt;flush&lt;/code&gt; method of this output stream.</source>
          <target state="translated">此方法调用封装密​​码对象的 &lt;code&gt;doFinal&lt;/code&gt; 方法，这将导致处理由封装密码缓冲的所有字节。通过调用此输出流的 &lt;code&gt;flush&lt;/code&gt; 方法来写出结果。</target>
        </trans-unit>
        <trans-unit id="1bdb46a893dfa0483a9c4bd9290f9f4065057bd2" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;login&lt;/code&gt; method for each LoginModule configured for the</source>
          <target state="translated">该方法为为该配置的每个LoginModule 调用 &lt;code&gt;login&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="945890c31957c102b30f2abb295e38f3d7c96e8d" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;logout&lt;/code&gt; method for each &lt;code&gt;LoginModule&lt;/code&gt; configured for this &lt;code&gt;LoginContext&lt;/code&gt;. Each &lt;code&gt;LoginModule&lt;/code&gt; performs its respective logout procedure which may include removing/destroying &lt;code&gt;Principal&lt;/code&gt; and &lt;code&gt;Credential&lt;/code&gt; information from the &lt;code&gt;Subject&lt;/code&gt; and state cleanup.</source>
          <target state="translated">此方法为为此 &lt;code&gt;LoginContext&lt;/code&gt; 配置的每个 &lt;code&gt;LoginModule&lt;/code&gt; 调用 &lt;code&gt;logout&lt;/code&gt; 方法。每个 &lt;code&gt;LoginModule&lt;/code&gt; 都执行其各自的注销过程，该过程可能包括从 &lt;code&gt;Subject&lt;/code&gt; 和状态清除中删除/销毁 &lt;code&gt;Principal&lt;/code&gt; 和 &lt;code&gt;Credential&lt;/code&gt; 信息。</target>
        </trans-unit>
        <trans-unit id="fdb1880895c894bfd297246b1aa1118ff40e8627" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;a href=&quot;imageoutputstream#writeShort-int-&quot;&gt;&lt;code&gt;writeShort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法是&lt;a href=&quot;imageoutputstream#writeShort-int-&quot;&gt; &lt;code&gt;writeShort&lt;/code&gt; &lt;/a&gt;的同义词。</target>
        </trans-unit>
        <trans-unit id="a5cc06003433eebab8325177aa608d991144029e" translate="yes" xml:space="preserve">
          <source>This method is a way to explicitly initiate an LDAP &quot;bind&quot; operation. For example, you can use this method to set request controls for the LDAP &quot;bind&quot; operation, or to explicitly connect to the server to get response controls returned by the LDAP &quot;bind&quot; operation.</source>
          <target state="translated">这个方法是显式启动LDAP &quot;绑定 &quot;操作的方法。例如,你可以使用这个方法为LDAP &quot;绑定 &quot;操作设置请求控制,或者显式连接到服务器以获取LDAP &quot;绑定 &quot;操作返回的响应控制。</target>
        </trans-unit>
        <trans-unit id="f682cfd7ed488d6df08e1bbda8fd4a9615756c5f" translate="yes" xml:space="preserve">
          <source>This method is also equivalent to the following code:</source>
          <target state="translated">这个方法也相当于下面的代码。</target>
        </trans-unit>
        <trans-unit id="026f6f13a19bcd38af6d3577b7bac7af7a220278" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread.</source>
          <target state="translated">这个方法总是由执行获取的线程调用。如果该方法报告失败,如果该线程还没有排队,则获取方法可能会将其排队,直到其他线程发出释放信号。</target>
        </trans-unit>
        <trans-unit id="854e9e724162b78faf1d56eae1beffd001d61340" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. This can be used to implement method &lt;a href=&quot;lock#tryLock--&quot;&gt;&lt;code&gt;Lock.tryLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法始终由执行获取的线程调用。如果此方法报告失败，则acquire方法可以将线程排队（如果尚未排队），直到其他某个线程释放释放该信号为止。这可以用来实现方法&lt;a href=&quot;lock#tryLock--&quot;&gt; &lt;code&gt;Lock.tryLock()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c66c1667c9809f5bac5c98e29f63d17cebc866ae" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing release.</source>
          <target state="translated">这个方法总是被执行释放的线程所调用。</target>
        </trans-unit>
        <trans-unit id="7d2837baf09f33244695dcef0eb90a4fa45160bf" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences at this node are modified concurrently with an invocation of this method, the exported preferences comprise a &quot;fuzzy snapshot&quot; of the preferences contained in the node; some of the concurrent modifications may be reflected in the exported data while others may not.</source>
          <target state="translated">该方法是一般规则的例外,即并发执行该类中的多个方法的结果相当于一些串行执行的结果。如果这个节点上的偏好与本方法的调用同时被修改,则导出的偏好包括节点中包含的偏好的 &quot;模糊快照&quot;;一些并发的修改可能会反映在导出的数据中,而另一些可能不会。</target>
        </trans-unit>
        <trans-unit id="64dc8b5021c31bbaac7e73e665736fe1345660d5" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences or nodes in the subtree rooted at this node are modified concurrently with an invocation of this method, the exported preferences comprise a &quot;fuzzy snapshot&quot; of the subtree; some of the concurrent modifications may be reflected in the exported data while others may not.</source>
          <target state="translated">本方法是一般规则的例外,即并发执行本类中的多个方法所产生的结果相当于一些串行执行的结果。如果根植于该节点的子树中的偏好或节点与本方法的调用同时被修改,则导出的偏好包括子树的 &quot;模糊快照&quot;;一些并发的修改可能会反映在导出的数据中,而另一些可能不会。</target>
        </trans-unit>
        <trans-unit id="21fb541cdce5155c0679500a74475ea5393d42c3" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. The method behaves as if implemented on top of the other public methods in this class, notably &lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String, String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法是一般规则的例外，该常规规则是同时执行此类中的多个方法的结果所产生的结果等同于某些串行执行。该方法的行为就像在此类中的其他公共方法之上实现的一样，尤其是&lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String, String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8542852fa3bffcff27089b4783d473c11ff3d44" translate="yes" xml:space="preserve">
          <source>This method is based on retaining the same instant, thus gaps and overlaps in the local time-line have no effect on the result.</source>
          <target state="translated">这种方法的基础是保留同一个瞬间,因此局部时间线的空白和重叠对结果没有影响。</target>
        </trans-unit>
        <trans-unit id="c7ba826bf2926f9d34022ed208953d3cd0c31bdc" translate="yes" xml:space="preserve">
          <source>This method is called after an object has been read but before it is returned from readObject. The default resolveObject method just returns the same object.</source>
          <target state="translated">这个方法在对象被读取后,但在从readObject返回之前被调用。默认的resolveObject方法只是返回同一个对象。</target>
        </trans-unit>
        <trans-unit id="79425ac1087fb3dd51e651191d4533cb7b19b8da" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener. It can be overridden in subclasses to change the behavior of notification delivery, for instance to deliver the notification in a separate thread.</source>
          <target state="translated">&lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;为每个侦听器调用此方法，以便将通知发送到该侦听器。可以在子类中重写它以更改通知传递的行为，例如，在单独的线程中传递通知。</target>
        </trans-unit>
        <trans-unit id="1ee68b73f449a54624673c8c02a1a403a8f6e744" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanAttributeInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanOperationInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanConstructorInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanAttributeInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanOperationInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanConstructorInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt; &lt;/a&gt;调用此方法。</target>
        </trans-unit>
        <trans-unit id="3de0b2e3cdbdaf07c4fa04462cd483d787e7bcde" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;LoginContext&lt;/code&gt; after this &lt;code&gt;LoginModule&lt;/code&gt; has been instantiated. The purpose of this method is to initialize this &lt;code&gt;LoginModule&lt;/code&gt; with the relevant information. If this &lt;code&gt;LoginModule&lt;/code&gt; does not understand any of the data stored in &lt;code&gt;sharedState&lt;/code&gt; or &lt;code&gt;options&lt;/code&gt; parameters, they can be ignored.</source>
          <target state="translated">在实例化此 &lt;code&gt;LoginModule&lt;/code&gt; 之后， &lt;code&gt;LoginContext&lt;/code&gt; 会调用此方法。此方法的目的是使用相关信息初始化 &lt;code&gt;LoginModule&lt;/code&gt; 。如果此 &lt;code&gt;LoginModule&lt;/code&gt; 无法理解 &lt;code&gt;sharedState&lt;/code&gt; 或 &lt;code&gt;options&lt;/code&gt; 参数中存储的任何数据，则可以忽略它们。</target>
        </trans-unit>
        <trans-unit id="e11ab4932ac374e31fa0b944a33cd4ccc0325ce4" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;clear&lt;/code&gt; operation on this list and its subLists. Overriding this method to take advantage of the internals of the list implementation can</source>
          <target state="translated">此列表及其子列表的 &lt;code&gt;clear&lt;/code&gt; 操作调用此方法。重写此方法以利用列表实现的内部结构可以</target>
        </trans-unit>
        <trans-unit id="07cced3d72aa75fe15d69546e9ed868a56713ecf" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectOutputStream that constructed ObjectOutputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier &quot;final&quot;.</source>
          <target state="translated">这个方法被ObjectOutputStream的可信子类调用,这些子类使用保护的no-arg构造函数构造ObjectOutputStream。这个子类应该提供一个带有修饰符 &quot;final &quot;的覆盖方法。</target>
        </trans-unit>
        <trans-unit id="0d0e648fcdb59d9e3a7ce6bcb5edadfe481a4723" translate="yes" xml:space="preserve">
          <source>This method is called exactly once for each unique proxy class descriptor in the stream.</source>
          <target state="translated">这个方法对流中的每一个唯一的代理类描述符只调用一次。</target>
        </trans-unit>
        <trans-unit id="4902d3756b01e69bda499308c33de60ca1a4f179" translate="yes" xml:space="preserve">
          <source>This method is called exactly once for each unique proxy class descriptor in the stream. The default implementation of this method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">对于流中的每个唯一代理类描述符，该方法仅被调用一次。 &lt;code&gt;ObjectOutputStream&lt;/code&gt; 中此方法的默认实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="f62861d342032164149b4be32e3cdb512c31df69" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication failed. (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules did not succeed).</source>
          <target state="translated">如果LoginContext的整体认证失败,则会调用此方法。(相关的REQUIRED,REQUISITE,SUFFICIENT和OPTIONAL LoginModules没有成功).</target>
        </trans-unit>
        <trans-unit id="d7098aa1df43974ecddcceb11655f6df1d3b3f56" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules succeeded).</source>
          <target state="translated">如果LoginContext的整体认证成功(相关的REQUIRED、REQUISITE、SUFFICIENT和OPTIONAL LoginModules成功),这个方法被调用。</target>
        </trans-unit>
        <trans-unit id="7c368290535afffaa4821caf905a0e01d5eba0b7" translate="yes" xml:space="preserve">
          <source>This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object.</source>
          <target state="translated">这个方法只在第一次遇到每个对象时被调用一次。之后对该对象的所有引用都将被重定向到新对象。</target>
        </trans-unit>
        <trans-unit id="33de51ae564d5ca1f29b4fe2db0bfe64dafb039f" translate="yes" xml:space="preserve">
          <source>This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object. This method should return the object to be substituted or the original object.</source>
          <target state="translated">这个方法只在第一次遇到每个对象时被调用一次。之后对该对象的所有引用都将被重定向到新对象。这个方法应该返回要被替换的对象或原始对象。</target>
        </trans-unit>
        <trans-unit id="e7ddcda585d8eb0c34c43752ae7410aca0f78d51" translate="yes" xml:space="preserve">
          <source>This method is called when a recoverable exception has been caught.</source>
          <target state="translated">当一个可恢复的异常被捕获时,本方法被调用。</target>
        </trans-unit>
        <trans-unit id="9cca6ab3d4da2b086f82ba0002c0396f03a4b119" translate="yes" xml:space="preserve">
          <source>This method is called whenever the observed object is changed. An application calls an &lt;code&gt;Observable&lt;/code&gt; object's &lt;code&gt;notifyObservers&lt;/code&gt; method to have all the object's observers notified of the change.</source>
          <target state="translated">每当更改观察对象时，都会调用此方法。应用程序调用 &lt;code&gt;Observable&lt;/code&gt; 对象的 &lt;code&gt;notifyObservers&lt;/code&gt; 方法，以将更改通知所有对象的观察者。</target>
        </trans-unit>
        <trans-unit id="fffb1c56a63b52b2e43abc2fb4153ff4c28cc913" translate="yes" xml:space="preserve">
          <source>This method is caller sensitive, which means that it may return different values to different callers.</source>
          <target state="translated">这个方法是调用者敏感的,这意味着它可能对不同的调用者返回不同的值。</target>
        </trans-unit>
        <trans-unit id="9e1c5173e7f3fa222c06c11b3cc371c7b3d31b73" translate="yes" xml:space="preserve">
          <source>This method is defined as:</source>
          <target state="translated">这种方法的定义是:</target>
        </trans-unit>
        <trans-unit id="ae19898917349a14a11291ce84b8e211a3d13306" translate="yes" xml:space="preserve">
          <source>This method is defined for compatibility with &lt;code&gt;java.util.Random&lt;/code&gt;.</source>
          <target state="translated">定义此方法是为了与 &lt;code&gt;java.util.Random&lt;/code&gt; 兼容。</target>
        </trans-unit>
        <trans-unit id="bf2642771743581deaaba7d7e735661a814734f8" translate="yes" xml:space="preserve">
          <source>This method is defined so that performance-sensitive Java code can allocate direct buffers with the same byte order as the hardware. Native code libraries are often more efficient when such buffers are used.</source>
          <target state="translated">该方法的定义是为了让对性能敏感的Java代码能够以与硬件相同的字节顺序分配直接缓冲区。本机代码库在使用这种缓冲区时,往往效率更高。</target>
        </trans-unit>
        <trans-unit id="aa45c2b02a519a2f2aaaeb85a745efe28f883b9c" translate="yes" xml:space="preserve">
          <source>This method is defined so that the &lt;code&gt;String&lt;/code&gt; class can implement the &lt;a href=&quot;charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">定义此方法是为了让 &lt;code&gt;String&lt;/code&gt; 类可以实现&lt;a href=&quot;charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="fe5b6f57087b04e0bc121233831d03f60237e3e6" translate="yes" xml:space="preserve">
          <source>This method is designed for troubleshooting use, but not for synchronization control. It might be an expensive operation.</source>
          <target state="translated">这种方法是为了排除故障而设计的,但不是用于同步控制。这可能是一个昂贵的操作。</target>
        </trans-unit>
        <trans-unit id="5b65be200e753f327578c45c2734dd4d51b4756f" translate="yes" xml:space="preserve">
          <source>This method is designed for use in monitoring system memory usage and detecting low memory condition.</source>
          <target state="translated">本方法设计用于监测系统内存使用情况和检测低内存状态。</target>
        </trans-unit>
        <trans-unit id="0d3f0f88baf42118de72db535c5af7f9c932197f" translate="yes" xml:space="preserve">
          <source>This method is designed to allow a program to assert that the current thread already holds a specified lock:</source>
          <target state="translated">这个方法被设计为允许程序断言当前线程已经持有指定的锁。</target>
        </trans-unit>
        <trans-unit id="a685d5c3b4c812a26f26b2438180d21020a9a02c" translate="yes" xml:space="preserve">
          <source>This method is designed to be invoked by &lt;em&gt;other&lt;/em&gt; tasks. To terminate the current task, you can just return or throw an unchecked exception from its computation method, or invoke &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法旨在由&lt;em&gt;其他&lt;/em&gt;任务调用。要终止当前任务，只需从其计算方法返回或抛出未经检查的异常，或调用&lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt; 即可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74ee81fb970e8086cdb6cbd89cb3cb795e9c4467" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">此方法设计为由公平同步器使用以避免&lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;插拔&lt;/a&gt;。如果此方法返回 &lt;code&gt;true&lt;/code&gt; ，则此类同步器的&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt;方法应返回 &lt;code&gt;false&lt;/code&gt; ，而其&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt;方法应返回负值（除非这是可重入获取）。例如，用于公平，可重入，排他模式同步器的 &lt;code&gt;tryAcquire&lt;/code&gt; 方法可能如下所示：</target>
        </trans-unit>
        <trans-unit id="b59e8c2df3bab79c2fe16e6644745f396fb521c8" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">此方法设计为由公平同步器使用以避免&lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;插拔&lt;/a&gt;。如果此方法返回 &lt;code&gt;true&lt;/code&gt; ，则此类同步器的&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt;方法应返回 &lt;code&gt;false&lt;/code&gt; ，而其&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt;方法应返回负值（除非这是可重入获取）。例如，用于公平，可重入，互斥模式同步器的 &lt;code&gt;tryAcquire&lt;/code&gt; 方法可能如下所示：</target>
        </trans-unit>
        <trans-unit id="fccbd3e6989670e486a81b6121525638bef59a71" translate="yes" xml:space="preserve">
          <source>This method is designed to provide a hint about the system load and may be queried frequently. The load average may be unavailable on some platform where it is expensive to implement this method.</source>
          <target state="translated">该方法旨在提供有关系统负载的提示,可能会经常被查询。在某些平台上,可能无法获得负载平均值,因为在这些平台上实现这种方法的成本很高。</target>
        </trans-unit>
        <trans-unit id="96f36f108ff8beab249af70da0aac7e6ec0abfce" translate="yes" xml:space="preserve">
          <source>This method is equivalent to</source>
          <target state="translated">这种方法相当于</target>
        </trans-unit>
        <trans-unit id="59627a0a952b2c96182d0298341a95db1edd5251" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(interfaceClass.getClassLoader(),
 interfaces, handler)&lt;/code&gt;. Here &lt;code&gt;handler&lt;/code&gt; is the result of &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt;&lt;code&gt;new
 MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;interfaces&lt;/code&gt; is an array that has one element if &lt;code&gt;notificationBroadcaster&lt;/code&gt; is false and two if it is true. The first element of &lt;code&gt;interfaces&lt;/code&gt; is &lt;code&gt;interfaceClass&lt;/code&gt; and the second, if present, is &lt;code&gt;NotificationEmitter.class&lt;/code&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(interfaceClass.getClassLoader(), interfaces, handler)&lt;/code&gt; 。这里的 &lt;code&gt;handler&lt;/code&gt; 是&lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt; &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt; &lt;/a&gt;，而 &lt;code&gt;interfaces&lt;/code&gt; 是一个数组，如果 &lt;code&gt;notificationBroadcaster&lt;/code&gt; 为false，则为一个元素，如果为true，则为两个元素。 &lt;code&gt;interfaces&lt;/code&gt; 的第一个元素是 &lt;code&gt;interfaceClass&lt;/code&gt; ，第二个元素（如果存在）是 &lt;code&gt;NotificationEmitter.class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41b871bbf5ed8b253ef9f92469346969fa3beca5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#addFirst-E-&quot;&gt;&lt;code&gt;Deque.addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#addFirst-E-&quot;&gt; &lt;code&gt;Deque.addFirst(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2dcee12da93abc3c7af5ad4ce14c0019e041a784" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst--&quot;&gt;&lt;code&gt;Deque.getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#getFirst--&quot;&gt; &lt;code&gt;Deque.getFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="745e5cfa13c0d688770b3801419f42026f19e039" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst--&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#getFirst--&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c382bb82fc2e86926ecec5c28b84071b57312910" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst--&quot;&gt;&lt;code&gt;Deque.peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#peekFirst--&quot;&gt; &lt;code&gt;Deque.peekFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0631034b9db85350b6d3a5a0b58236179b145fe8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d08a898f9783931fa0e55d9366a8934ed8f7cb8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#pollFirst--&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#pollFirst--&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b38d19681d4dc401a29728e6d548c221f5bcb79a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst--&quot;&gt;&lt;code&gt;Deque.removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#removeFirst--&quot;&gt; &lt;code&gt;Deque.removeFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40f5c20b5451ca28023239544a541050d97c7b30" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;../deque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0366b7f34e5dd9a4ece4eca4d17b633c707b1f9" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84aeefd9475793e355aa463fe4f64ffd579c71ff" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3ff6d9782be86d95408c2001495dc4a2426d21b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48503c548c56fcf06a9686103f293ac0edb786bc" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#getFirst--&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#getFirst--&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b2f5465d56163a7753c4189e32633114cefa009" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f71cf790974f6f2687330e58932a14065507a97" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c02821bab241c240b3f857eee16cb26153365c4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#pollFirst--&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#pollFirst--&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45f21773493dfaad2f57844a4677ad0e0c138742" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14466d27f8fb0ddd3e20e6a928313d060fc8e944" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;arraydeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e26727ec89566260b76ce72249e4f122264c8810" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b1fa66f69196026a4f61822989e06cfa76d5a44" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15686caf1a02fd0b22268428a9ac9ff79b6814b4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d723e78205a7c25f18be4193f3f7c567b99f050" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast-E-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#offerLast-E-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="532967591efc91576fc6e010529bea850ce4cea5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#pollFirst-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;pollFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#pollFirst-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;pollFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="034c5b9ff9c457c13d6709bfd488955a171c19be" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#putLast-E-&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#putLast-E-&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3c53069740e2e09f72f107766aba77990158398" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="efa03c367d161f342aabff9967b488c6bb7165c6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#takeFirst--&quot;&gt;&lt;code&gt;takeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;blockingdeque#takeFirst--&quot;&gt; &lt;code&gt;takeFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2224c7eb479604f0ecca5e9a1e2c87ba0d1c5fe9" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;concurrentlinkeddeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;concurrentlinkeddeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1b6ac92f7a4569794ef3ba9510df764461fb67f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc7c08304f720f2c778b85321913e4057f82db47" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a34939e65bb98ed731d8feb7d4b3c6b715405f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b56a92dcbc2c2ae04921fa93ee4fa2b9be3a456" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#getFirst--&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#getFirst--&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2772efc22ade84a9481f3bf8c55e91f9cbd1c008" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="396765a86fbb7bdfb4abb942856005cf95afa374" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c429a0973aed6b85b67e3b540ed30b9cfc5b3b5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#pollFirst--&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#pollFirst--&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3029d057d6dc59b232e7eed0a4af8f56540dbddf" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24b009d11c7b1a8b9f8ac1e9ae63463a43aeac15" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59f9a2170534a464fa749a403663fbd5a466cafb" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="2109fc69a4aa29cb9580c5f081baad0a3c197997" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c341b0dac95e5c31e97ed0423dc9ed28097f483d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b318b118677eaab0a3ce1f299e1cb60ca177f38" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;connect(serviceURL, null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;connect(serviceURL, null)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f74c047cfd571c36fd5612482e89d051e7303e33" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedblockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8bb02af00d191e0b898003f4e3593065418c52b8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#getFirst--&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedblockingdeque#getFirst--&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7bac904e167d9f58308622a82640847f1c3cdf55" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedblockingdeque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f58b8153cbaeb760942f5eecf4040c8767c9217e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedblockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a4edf0d1327f9808d462cef4f47a06f648fb8a1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedlist#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9353ad6d61cd960f6a999e78739cde0f5bea707a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedlist#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e3f9512237b529fd32d60838c5948d2fa44965b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedlist#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d6cfd107c0067d4ee4827243702402a98a58351" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;linkedlist#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="480913a4e825d16bba5cf2d5136bbd710a8bef4c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="e8b6532c4d4626b0bb3bc299757ff1efa04249f1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="f36ce6c9cc788422d65e5cda5aef1d9b37146ed5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="a1f72a850286a9f076e2ecc148078b95355283f7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;mbeanserver#instantiate-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="635a12545432754314cfce59bd929ae63656163d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89c45209680bfeca1fdbc673b25290f6aa7ca2f2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8cafac796cf6cc290c7cdd9b8110c234115831f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9814bf1be3d3dad27dd8c2c505eec033f65cf893" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;offsetdatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6d59d8223469f3ae35b0245e0bff1fcceb2ea55" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="bf56d3e110cc76842dd75c2fd043ba980b3ad666" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="fce96be4ee850ad719075e237d19a3e8ef9d43d2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="fbff0b66132998944d5c7ce65390d17c579c87a7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="f9dcad95eef5e1f66a6642d3074dd0f7a03a518a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e975e726acee52c4dc0454797ccfac076ba7a0b4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">此方法等效于&lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;，而取反的数量。请参阅该方法，以详细了解加法和减法的工作原理。</target>
        </trans-unit>
        <trans-unit id="8cab3b49f8a92934fe2dbdd539367f4a62c851d5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;BitSet.valueOf(ByteBuffer.wrap(bytes))&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;BitSet.valueOf(ByteBuffer.wrap(bytes))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6935f428861ade87e7ea9856a9d29a31becd903" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;BitSet.valueOf(LongBuffer.wrap(longs))&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;BitSet.valueOf(LongBuffer.wrap(longs))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dffec148cec737fb0cf69df66b436b2e7a053121" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;createMBeanServer(null)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;createMBeanServer(null)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0616a07d400f5772695626b3597ddf043d782260" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;negotiate(null)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;negotiate(null)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71235388a486a22b38053dcdde576c9698b499d6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;newMBeanServer(null)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;newMBeanServer(null)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c85782e3d2b82db588781506096398e47e5e35d5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;setInput(input,
 seekForwardOnly, false)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;setInput(input, seekForwardOnly, false)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0967c34cd3582219ab8e2f5593c1c9a618143505" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;setInput(input, false,
 false)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;setInput(input, false, false)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3af1ab758c175ff9f79dab21da14b593bfd56d46" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;getName(X500Principal.RFC2253)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于调用 &lt;code&gt;getName(X500Principal.RFC2253)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f075d48644547d92366ba397af4b70b741827ced" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;getSequencer(true)&lt;/code&gt;.</source>
          <target state="translated">此方法等效于调用 &lt;code&gt;getSequencer(true)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce70f0937eb327212fc0cce93b927154a630551c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the four-argument constructor with the arguments being &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;. No validation of the inputs is performed by this constructor.</source>
          <target state="translated">此方法等效于调用参数为 &lt;code&gt;protocol&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; ， &lt;code&gt;-1&lt;/code&gt; 和 &lt;code&gt;file&lt;/code&gt; 的四参数构造函数。此构造函数不执行输入验证。</target>
        </trans-unit>
        <trans-unit id="3a9494d0b0f9f9762ac18a11fa9dbac5b8dede9d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to method &lt;code&gt;navigableKeySet&lt;/code&gt;.</source>
          <target state="translated">此方法等效于 &lt;code&gt;navigableKeySet&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9aec895eff1dfa52f137329c0a08508cf3037898" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the expression:</source>
          <target state="translated">这种方法相当于表达式。</target>
        </trans-unit>
        <trans-unit id="d72ed373e62346cb1d21d1574436bb65f1419e38" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following call.</source>
          <target state="translated">这个方法相当于下面的调用。</target>
        </trans-unit>
        <trans-unit id="708149fca6ea3cb8c860f0b39afae0e0706d4773" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient):</source>
          <target state="translated">这个方法相当于下面的代码(尽管它可能更有效率)。</target>
        </trans-unit>
        <trans-unit id="9c0f236b6b979c07fb74ccf1aea85ba1c004c1d6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invoke&quot;, type)&lt;/code&gt;</source>
          <target state="translated">此方法等效于以下代码（尽管可能更有效）： &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invoke&quot;, type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1c2c4ed439efc36310ee4144d344bd24547f01b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invokeExact&quot;, type)&lt;/code&gt;</source>
          <target state="translated">此方法等效于以下代码（尽管可能更有效）： &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invokeExact&quot;, type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1810dc7467cbaffdff093edae9768626e71d3188" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code:</source>
          <target state="translated">这个方法相当于下面的代码。</target>
        </trans-unit>
        <trans-unit id="4666da77ba161f3de91822d32d0e17494546a560" translate="yes" xml:space="preserve">
          <source>This method is equivalent to:</source>
          <target state="translated">这种方法相当于:</target>
        </trans-unit>
        <trans-unit id="d97c9cb5c9d68ff17377cf689580612ca1ea3f89" translate="yes" xml:space="preserve">
          <source>This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader and sets it as the context class loader of the invoking &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">首先在运行时的启动顺序中首先调用此方法，此后它将创建系统类加载器并将其设置为调用 &lt;code&gt;Thread&lt;/code&gt; 的上下文类加载器。</target>
        </trans-unit>
        <trans-unit id="b47611efdddda5528d61604e9ecb14293f370ee5" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;keypairgenerator#genKeyPair--&quot;&gt;&lt;code&gt;genKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法在功能上等效于&lt;a href=&quot;keypairgenerator#genKeyPair--&quot;&gt; &lt;code&gt;genKeyPair&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="617f5c3ccebe696f11ba21ec03006677d00dacc7" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;keypairgenerator#generateKeyPair--&quot;&gt;&lt;code&gt;generateKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法在功能上等效于&lt;a href=&quot;keypairgenerator#generateKeyPair--&quot;&gt; &lt;code&gt;generateKeyPair&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da61400ab9b3619e2b481cbdab8b36bcaba8770b" translate="yes" xml:space="preserve">
          <source>This method is idempotent. It succeeds even if the terminal atomic name is not bound in the target context, but throws &lt;code&gt;NameNotFoundException&lt;/code&gt; if any of the intermediate contexts do not exist.</source>
          <target state="translated">该方法是幂等的。即使终端原子名称未绑定在目标上下文中，它也会成功，但是如果任何中间上下文不存在，则抛出 &lt;code&gt;NameNotFoundException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b1468159ff67e9e35f87b3d898eb55e55866de7" translate="yes" xml:space="preserve">
          <source>This method is idempotent: if the inbound side has already been closed, this method does not do anything.</source>
          <target state="translated">这个方法是幂等的:如果入库端已经关闭,这个方法不做任何事情。</target>
        </trans-unit>
        <trans-unit id="8a96ed950b6f8413be59b1869a08784b43f0f1cc" translate="yes" xml:space="preserve">
          <source>This method is idempotent: if the outbound side has already been closed, this method does not do anything.</source>
          <target state="translated">这个方法是幂等的:如果出站端已经关闭,这个方法不做任何事情。</target>
        </trans-unit>
        <trans-unit id="9f89a0125ece62c8e80accaec6b65003e4e7847d" translate="yes" xml:space="preserve">
          <source>This method is idempotent: invoking it on a context that has already been closed has no effect. Invoking any other method on a closed context is not allowed, and results in undefined behaviour.</source>
          <target state="translated">这个方法是幂等的:在一个已经关闭的上下文上调用它没有任何效果。不允许在已关闭的上下文上调用任何其他方法,并导致未定义的行为。</target>
        </trans-unit>
        <trans-unit id="b7f8b066278a49110a120a172d5b2d1cc50d1fbb" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）相同。</target>
        </trans-unit>
        <trans-unit id="f6e8c2ec5f9d3776676bdd1e96762993efde14a2" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;add&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage.</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）相同。请注意， &lt;code&gt;add&lt;/code&gt; 方法反转参数的顺序，以更紧密地匹配数组用法。</target>
        </trans-unit>
        <trans-unit id="8c5c7161e7093035bed197c62042d876b08cbc54" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#clear--&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#clear--&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）功能相同。</target>
        </trans-unit>
        <trans-unit id="248f15d5c49956df5bced339988c5dad95b3a64e" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#get-int-&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#get-int-&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）相同。</target>
        </trans-unit>
        <trans-unit id="a2982a6e0030405d050482ff6439411d226693f3" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#remove-int-&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;remove&lt;/code&gt; method returns the old value that was stored at the specified position.</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#remove-int-&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）相同。请注意， &lt;code&gt;remove&lt;/code&gt; 方法返回存储在指定位置的旧值。</target>
        </trans-unit>
        <trans-unit id="a8b0ddb1136f50bf36b43142a1a91f316859d48a" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#remove-java.lang.Object-&quot;&gt;&lt;code&gt;remove(Object)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#remove-java.lang.Object-&quot;&gt; &lt;code&gt;remove(Object)&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）相同。</target>
        </trans-unit>
        <trans-unit id="4947e74334cf1ef9246243f25f7ce45ee6aecc29" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#set-int-E-&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;set&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage. Note also that the &lt;code&gt;set&lt;/code&gt; method returns the old value that was stored at the specified position.</source>
          <target state="translated">此方法的功能与&lt;a href=&quot;vector#set-int-E-&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt;方法（属于&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口的一部分）相同。请注意， &lt;code&gt;set&lt;/code&gt; 方法反转参数的顺序，以更紧密地匹配数组用法。还要注意， &lt;code&gt;set&lt;/code&gt; 方法返回存储在指定位置的旧值。</target>
        </trans-unit>
        <trans-unit id="5d8cfb1ecfe96aaa633ec2985723445104f457b7" translate="yes" xml:space="preserve">
          <source>This method is implemented to be equivalent to &lt;code&gt;doubles(Long.MAX_VALUE)&lt;/code&gt;.</source>
          <target state="translated">此方法的实现等效于 &lt;code&gt;doubles(Long.MAX_VALUE)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d774eca6c70ab318a999b34374c1f302be72c6eb" translate="yes" xml:space="preserve">
          <source>This method is implemented to be equivalent to &lt;code&gt;doubles(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)&lt;/code&gt;.</source>
          <target state="translated">此方法的实现等效于 &lt;code&gt;doubles(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1eaa3b6462f2587caa9b0b63a007f81e062def3" translate="yes" xml:space="preserve">
          <source>This method is implemented to be equivalent to &lt;code&gt;ints(Long.MAX_VALUE)&lt;/code&gt;.</source>
          <target state="translated">实现此方法等效于 &lt;code&gt;ints(Long.MAX_VALUE)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="776423884188a5de467d32d7ccc7ac4a4bf23b42" translate="yes" xml:space="preserve">
          <source>This method is implemented to be equivalent to &lt;code&gt;ints(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)&lt;/code&gt;.</source>
          <target state="translated">此方法的实现等效于 &lt;code&gt;ints(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3dadb179484f532302f62a5a21c610466f03dbf7" translate="yes" xml:space="preserve">
          <source>This method is implemented to be equivalent to &lt;code&gt;longs(Long.MAX_VALUE)&lt;/code&gt;.</source>
          <target state="translated">此方法的实现等效于 &lt;code&gt;longs(Long.MAX_VALUE)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7218ab89b33a392c6cae55e44ad99bfb181e31b" translate="yes" xml:space="preserve">
          <source>This method is implemented to be equivalent to &lt;code&gt;longs(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)&lt;/code&gt;.</source>
          <target state="translated">此方法的实现等效于 &lt;code&gt;longs(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0195b9102301990b008836c7ca780253a6771874" translate="yes" xml:space="preserve">
          <source>This method is included for the benefit of applications that must generate bytecodes that process method handles and &lt;code&gt;invokedynamic&lt;/code&gt;.</source>
          <target state="translated">包含此方法是为了使应用程序必须生成可由处理方法处理并 &lt;code&gt;invokedynamic&lt;/code&gt; 字节码。</target>
        </trans-unit>
        <trans-unit id="d0bfcc10c84de0711d864c8e459e9011660e2955" translate="yes" xml:space="preserve">
          <source>This method is included for the benefit of applications that must generate bytecodes that process method handles and &lt;code&gt;invokedynamic&lt;/code&gt;. &lt;a href=&quot;methodtype#fromMethodDescriptorString-java.lang.String-java.lang.ClassLoader-&quot;&gt;&lt;code&gt;fromMethodDescriptorString&lt;/code&gt;&lt;/a&gt;, because the latter requires a suitable class loader argument.</source>
          <target state="translated">包含此方法是为了使应用程序必须生成可由处理方法处理并 &lt;code&gt;invokedynamic&lt;/code&gt; 字节码。&lt;a href=&quot;methodtype#fromMethodDescriptorString-java.lang.String-java.lang.ClassLoader-&quot;&gt; &lt;code&gt;fromMethodDescriptorString&lt;/code&gt; &lt;/a&gt;，因为后者需要合适的类加载器参数。</target>
        </trans-unit>
        <trans-unit id="c566821b9cdc6bbfa2e33b7ce636566920420064" translate="yes" xml:space="preserve">
          <source>This method is intended for advanced use cases that need access to the internal state during parsing. Typical application code should use &lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;parse(CharSequence, TemporalQuery)&lt;/code&gt;&lt;/a&gt; or the parse method on the target type.</source>
          <target state="translated">此方法适用于需要在解析过程中访问内部状态的高级用例。典型的应用程序代码应在目标类型上使用&lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;parse(CharSequence, TemporalQuery)&lt;/code&gt; &lt;/a&gt;或parse方法。</target>
        </trans-unit>
        <trans-unit id="1c3b35f39e1a5e894c4728e815a308eff1a6b773" translate="yes" xml:space="preserve">
          <source>This method is intended for specialized providers of pseudo file systems where the contents of one or more files is treated as a file system. The &lt;code&gt;env&lt;/code&gt; parameter is a map of provider specific properties to configure the file system.</source>
          <target state="translated">此方法适用于伪文件系统的专门提供程序，其中一个或多个文件的内容被视为文件系统。该 &lt;code&gt;env&lt;/code&gt; 参数是地图提供特定属性的配置文件系统。</target>
        </trans-unit>
        <trans-unit id="0b627e1f077ce06326312f5cf7918cdfbe9812fb" translate="yes" xml:space="preserve">
          <source>This method is intended for use in instrumentation, as described in the &lt;a href=&quot;instrumentation&quot;&gt;class specification&lt;/a&gt;.</source>
          <target state="translated">如&lt;a href=&quot;instrumentation&quot;&gt;类说明中&lt;/a&gt;所述，此方法旨在用于仪器中。</target>
        </trans-unit>
        <trans-unit id="febe9ff23e771d0525155c8a2bdf3a90b71b1657" translate="yes" xml:space="preserve">
          <source>This method is intended for use in situations in which new providers can be installed into a running Java virtual machine.</source>
          <target state="translated">该方法旨在用于将新的提供者安装到正在运行的 Java 虚拟机中的情况。</target>
        </trans-unit>
        <trans-unit id="29908003546e6618a5f23538e570774746bf2f2b" translate="yes" xml:space="preserve">
          <source>This method is intended for use when generating Java code to set the value of the property. It should return a fragment of Java code that can be used to initialize a variable with the current property value.</source>
          <target state="translated">这个方法是为了在生成Java代码来设置属性值时使用。它应该返回一个Java代码片段,可用于用当前属性值初始化一个变量。</target>
        </trans-unit>
        <trans-unit id="9743ec5c9b55fa59675a11f76e383d047cec5291" translate="yes" xml:space="preserve">
          <source>This method is intended for use when only installed providers are desired. The resulting service will only find and load providers that have been installed into the current Java virtual machine; providers on the application's class path will be ignored.</source>
          <target state="translated">此方法用于只需要安装的提供者时。由此产生的服务将只查找并加载已安装到当前 Java 虚拟机中的提供者;应用程序的类路径上的提供者将被忽略。</target>
        </trans-unit>
        <trans-unit id="57c4f5826f4a2b837c1343f09fbeb277251228b4" translate="yes" xml:space="preserve">
          <source>This method is intended to allow array-backed buffers to be passed to native code more efficiently. Concrete subclasses provide more strongly-typed return values for this method.</source>
          <target state="translated">这个方法的目的是让数组支持的缓冲区更有效地传递给本地代码。具体子类为这个方法提供了更强类型的返回值。</target>
        </trans-unit>
        <trans-unit id="95b5e2f135db0f2c6a0be583cef69b748b09f0e3" translate="yes" xml:space="preserve">
          <source>This method is intended to be used by sophisticated applications, for example, a &lt;a href=&quot;../util/scanner&quot;&gt;&lt;code&gt;Scanner&lt;/code&gt;&lt;/a&gt; object which utilizes the rich parsing/scanning functionality provided by the &lt;code&gt;Scanner&lt;/code&gt;:</source>
          <target state="translated">该方法旨在供复杂的应用程序使用，例如，利用&lt;a href=&quot;../util/scanner&quot;&gt; &lt;code&gt;Scanner&lt;/code&gt; &lt;/a&gt;提供的丰富的解析/扫描功能的 &lt;code&gt;Scanner&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="4842539125fa852de7a513bf57d89e4251c10738" translate="yes" xml:space="preserve">
          <source>This method is intended to be used in a loop together with the &lt;a href=&quot;matcher#appendTail-java.lang.StringBuffer-&quot;&gt;&lt;code&gt;appendTail&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; methods. The following code, for example, writes &lt;code&gt;one dog two dogs in the yard&lt;/code&gt; to the standard-output stream:</source>
          <target state="translated">该方法旨在与&lt;a href=&quot;matcher#appendTail-java.lang.StringBuffer-&quot;&gt; &lt;code&gt;appendTail&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法一起在循环中使用。例如，以下代码 &lt;code&gt;one dog two dogs in the yard&lt;/code&gt; 写到标准输出流中：</target>
        </trans-unit>
        <trans-unit id="e7cc37368a909a063677a40f27331ac1a3e3c348" translate="yes" xml:space="preserve">
          <source>This method is intended to be used where the file store attribute view defines type-safe methods to read or update the file store attributes. The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attribute view required and the method returns an instance of that type if supported.</source>
          <target state="translated">此方法旨在用于文件存储属性视图定义用于读取或更新文件存储属性的类型安全方法的情况。所述 &lt;code&gt;type&lt;/code&gt; 参数是所需要的属性视图的类型，并且如果支持该方法返回该类型的一个实例。</target>
        </trans-unit>
        <trans-unit id="442bb83c7385982c0c16d7c9b9ae2ade98cbb344" translate="yes" xml:space="preserve">
          <source>This method is intended to provide a default, nonlocalized string for the attribute's category. If two attribute objects return the same category from the &lt;code&gt;getCategory()&lt;/code&gt; method, they should return the same name from the &lt;code&gt;getName()&lt;/code&gt; method.</source>
          <target state="translated">此方法旨在为属性的类别提供默认的非本地化字符串。如果两个属性对象从 &lt;code&gt;getCategory()&lt;/code&gt; 方法返回相同的类别，则它们应该从 &lt;code&gt;getName()&lt;/code&gt; 方法返回相同的名称。</target>
        </trans-unit>
        <trans-unit id="0a6effdafdbd669952d3019870dc395c4a120ba2" translate="yes" xml:space="preserve">
          <source>This method is invoked by a channel's &lt;a href=&quot;abstractselectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of registering the channel with this selector.</source>
          <target state="translated">通道的&lt;a href=&quot;abstractselectablechannel#register-java.nio.channels.Selector-int-java.lang.Object-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;方法调用此方法，以执行使用此选择器注册通道的实际工作。</target>
        </trans-unit>
        <trans-unit id="a9b18437f520ac587edec02af644dde45af89bb6" translate="yes" xml:space="preserve">
          <source>This method is invoked by the &lt;a href=&quot;../channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of closing the channel. This method is only invoked if the channel has not yet been closed, and it is never invoked more than once.</source>
          <target state="translated">该方法由&lt;a href=&quot;../channel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法调用，以执行关闭通道的实际工作。仅在尚未关闭通道的情况下才调用此方法，并且永远不要调用一次以上。</target>
        </trans-unit>
        <trans-unit id="b0738044224b04c102a6384ffb1756fc7aecf6af" translate="yes" xml:space="preserve">
          <source>This method is invoked by the &lt;a href=&quot;../files#isHidden-java.nio.file.Path-&quot;&gt;&lt;code&gt;isHidden&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法由&lt;a href=&quot;../files#isHidden-java.nio.file.Path-&quot;&gt; &lt;code&gt;isHidden&lt;/code&gt; &lt;/a&gt;方法调用。</target>
        </trans-unit>
        <trans-unit id="dc15a11184fb53c214106fdc0a5a91b5731b5eaf" translate="yes" xml:space="preserve">
          <source>This method is invoked by the &lt;a href=&quot;abstractinterruptiblechannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of closing the channel. This method is only invoked if the channel has not yet been closed, and it is never invoked more than once.</source>
          <target state="translated">该方法由&lt;a href=&quot;abstractinterruptiblechannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法调用，以执行关闭通道的实际工作。仅在尚未关闭通道的情况下才调用此方法，并且永远不要调用一次以上。</target>
        </trans-unit>
        <trans-unit id="52c7c2c640080847215c2102eeea6afb54f18ab1" translate="yes" xml:space="preserve">
          <source>This method is invoked by the &lt;a href=&quot;abstractselectablechannel#configureBlocking-boolean-&quot;&gt;&lt;code&gt;configureBlocking&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of changing the blocking mode. This method is only invoked if the new mode is different from the current mode.</source>
          <target state="translated">此方法由&lt;a href=&quot;abstractselectablechannel#configureBlocking-boolean-&quot;&gt; &lt;code&gt;configureBlocking&lt;/code&gt; &lt;/a&gt;方法调用，以执行更改阻塞模式的实际工作。仅当新模式与当前模式不同时，才调用此方法。</target>
        </trans-unit>
        <trans-unit id="981c7e00be3e5127678294b741e3a55d0a5530aa" translate="yes" xml:space="preserve">
          <source>This method is invoked by the &lt;a href=&quot;abstractselector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of closing the selector. This method is only invoked if the selector has not yet been closed, and it is never invoked more than once.</source>
          <target state="translated">该方法由&lt;a href=&quot;abstractselector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法调用，以执行关闭选择器的实际工作。仅在选择器尚未关闭的情况下才调用此方法，并且永远不要调用一次以上。</target>
        </trans-unit>
        <trans-unit id="e7777bd4dcb30dcce8b1a5a7d1cf514e7513847c" translate="yes" xml:space="preserve">
          <source>This method is invoked by the defineClass method which takes a CodeSource as an argument when it is constructing the ProtectionDomain for the class being defined.</source>
          <target state="translated">该方法由defineClass方法调用,该方法在为被定义的类构建ProtectionDomain时,会将CodeSource作为参数。</target>
        </trans-unit>
        <trans-unit id="252d8307e33da3f3acb737bd6b3d473c9ed51554" translate="yes" xml:space="preserve">
          <source>This method is invoked during the resolve phase of parsing. It is designed to allow application defined fields to be simplified into more standard fields, such as those on &lt;code&gt;ChronoField&lt;/code&gt;, or into a date.</source>
          <target state="translated">在解析的解析阶段调用此方法。它旨在允许将应用程序定义的字段简化为更多标准字段，例如 &lt;code&gt;ChronoField&lt;/code&gt; 上的字段或日期。</target>
        </trans-unit>
        <trans-unit id="f66b64fdce6125433f702322e5314759752efc01" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager by methods &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;loadLibrary&lt;/code&gt; of class &lt;code&gt;Runtime&lt;/code&gt;.</source>
          <target state="translated">当前的安全管理器通过 &lt;code&gt;Runtime&lt;/code&gt; 类的 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;loadLibrary&lt;/code&gt; 方法调用此方法。</target>
        </trans-unit>
        <trans-unit id="067e885fb4901d1e42feae3326bb5fdb7f7e981b" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager by the &lt;code&gt;accept&lt;/code&gt; method of class &lt;code&gt;ServerSocket&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;ServerSocket&lt;/code&gt; 类的 &lt;code&gt;accept&lt;/code&gt; 方法为当前的安全管理器调用此方法。</target>
        </trans-unit>
        <trans-unit id="e3c07e0e28f9eeeebad2e7c5b483a45e361e51e0" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager by the &lt;code&gt;delete&lt;/code&gt; method of class &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">当前的安全管理器通过 &lt;code&gt;File&lt;/code&gt; 类的 &lt;code&gt;delete&lt;/code&gt; 方法调用此方法。</target>
        </trans-unit>
        <trans-unit id="5ba612f65f6fc7a86cf6d96195f7ab15a1669bec" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager by the &lt;code&gt;exec&lt;/code&gt; methods of class &lt;code&gt;Runtime&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;Runtime&lt;/code&gt; 类的 &lt;code&gt;exec&lt;/code&gt; 方法为当前的安全管理器调用此方法。</target>
        </trans-unit>
        <trans-unit id="ec9ffca9cf142120f16a0c9c15188b95f3b8786c" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager by the &lt;code&gt;exit&lt;/code&gt; method of class &lt;code&gt;Runtime&lt;/code&gt;. A status of &lt;code&gt;0&lt;/code&gt; indicates success; other values indicate various errors.</source>
          <target state="translated">通过 &lt;code&gt;Runtime&lt;/code&gt; 类的 &lt;code&gt;exit&lt;/code&gt; 方法为当前的安全管理器调用此方法。状态 &lt;code&gt;0&lt;/code&gt; 表示成功；状态0表示成功。其他值表示各种错误。</target>
        </trans-unit>
        <trans-unit id="d5a92dce7bfe9357ee7ad235f4fcc0aff19642c6" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager by the &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;suspend&lt;/code&gt;, &lt;code&gt;resume&lt;/code&gt;, &lt;code&gt;setPriority&lt;/code&gt;, &lt;code&gt;setName&lt;/code&gt;, and &lt;code&gt;setDaemon&lt;/code&gt; methods of class &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">当前的安全管理器通过 &lt;code&gt;Thread&lt;/code&gt; 类的 &lt;code&gt;stop&lt;/code&gt; ， &lt;code&gt;suspend&lt;/code&gt; ， &lt;code&gt;resume&lt;/code&gt; ， &lt;code&gt;setPriority&lt;/code&gt; ， &lt;code&gt;setName&lt;/code&gt; 和 &lt;code&gt;setDaemon&lt;/code&gt; 方法调用此方法。</target>
        </trans-unit>
        <trans-unit id="fd63ee99c3f106295572026f7eb63f091d4de29e" translate="yes" xml:space="preserve">
          <source>This method is invoked for the current security manager when a new child thread or child thread group is created, and by the &lt;code&gt;setDaemon&lt;/code&gt;, &lt;code&gt;setMaxPriority&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;suspend&lt;/code&gt;, &lt;code&gt;resume&lt;/code&gt;, and &lt;code&gt;destroy&lt;/code&gt; methods of class &lt;code&gt;ThreadGroup&lt;/code&gt;.</source>
          <target state="translated">创建新的子线程或子线程组时，将由当前的安全管理器调用此方法，并由 &lt;code&gt;ThreadGroup&lt;/code&gt; 类的 &lt;code&gt;setDaemon&lt;/code&gt; ， &lt;code&gt;setMaxPriority&lt;/code&gt; ， &lt;code&gt;stop&lt;/code&gt; ， &lt;code&gt;suspend&lt;/code&gt; ， &lt;code&gt;resume&lt;/code&gt; 和 &lt;code&gt;destroy&lt;/code&gt; 方法来调用此方法。</target>
        </trans-unit>
        <trans-unit id="7d00bd3c3c711982fe1a577401b8a2303037fe64" translate="yes" xml:space="preserve">
          <source>This method is invoked internally by the &lt;a href=&quot;futuretask#run--&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method upon failure of the computation.</source>
          <target state="translated">计算失败时，&lt;a href=&quot;futuretask#run--&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法在内部调用此方法。</target>
        </trans-unit>
        <trans-unit id="515d79129455d05541c31320e6c442a871df9121" translate="yes" xml:space="preserve">
          <source>This method is invoked internally by the &lt;a href=&quot;futuretask#run--&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method upon successful completion of the computation.</source>
          <target state="translated">成功完成计算后，&lt;a href=&quot;futuretask#run--&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法在内部调用此方法。</target>
        </trans-unit>
        <trans-unit id="b95f9ef69b43bd503bb7ea77a685b4ad676c6e40" translate="yes" xml:space="preserve">
          <source>This method is invoked on registered objects when a SSL handshake is completed.</source>
          <target state="translated">当SSL握手完成时,会在注册对象上调用该方法。</target>
        </trans-unit>
        <trans-unit id="abf80fb5a7bd9ff915ab069af80b85354b7bc8e7" translate="yes" xml:space="preserve">
          <source>This method is invoked only by Java code; when the garbage collector clears references it does so directly, without invoking this method.</source>
          <target state="translated">这个方法只被Java代码调用;当垃圾回收器清除引用时,它直接清除,而不调用这个方法。</target>
        </trans-unit>
        <trans-unit id="ea2087e19201815d28efd158cba7a7f4c7fb6b1c" translate="yes" xml:space="preserve">
          <source>This method is invoked only by Java code; when the garbage collector enqueues references it does so directly, without invoking this method.</source>
          <target state="translated">这个方法只被Java代码调用,当垃圾收集器enqueues引用时,它直接调用,而不调用这个方法。</target>
        </trans-unit>
        <trans-unit id="18e36598c1e06c1fc1b22eb430452c8ea351e0b0" translate="yes" xml:space="preserve">
          <source>This method is invoked with the lock held on this node and its parent (and all ancestors that are being removed as a result of a single invocation to &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;Preferences.removeNode()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在此节点及其父节点（以及由于对&lt;a href=&quot;preferences#removeNode--&quot;&gt; &lt;code&gt;Preferences.removeNode()&lt;/code&gt; &lt;/a&gt;的一次调用而被删除的所有祖先）上保持的锁调用此方法。</target>
        </trans-unit>
        <trans-unit id="5b14d5335917a286b27f3d47d15c501fce77f745" translate="yes" xml:space="preserve">
          <source>This method is invoked with the lock on this node held.</source>
          <target state="translated">这个方法是在持有这个节点的锁的情况下调用的。</target>
        </trans-unit>
        <trans-unit id="923f74bdb174af1caf732ad36234937a6971924e" translate="yes" xml:space="preserve">
          <source>This method is invoked with this node locked. The contract of this method is to force any cached changes in the contents of this preference node to the backing store, guaranteeing their persistence. (It is perfectly possible that this node does not exist on the backing store, either because it has been deleted by another VM, or because it has not yet been created.) Note that this method should</source>
          <target state="translated">这个方法是在锁定这个节点的情况下调用的。此方法的契约是将此优选节点内容的任何缓存变化强制到后盾存储中,保证其持久性。(这个节点完全有可能不存在于后盾存储上,或者因为它已经被另一个虚拟机删除,或者因为它还没有被创建)。请注意,这个方法应该</target>
        </trans-unit>
        <trans-unit id="2754e4b4c7dbf5e62fb4bf47d642fe772cb291aa" translate="yes" xml:space="preserve">
          <source>This method is invoked with this node locked. The contract of this method is to synchronize any cached preferences stored at this node with any stored in the backing store. (It is perfectly possible that this node does not exist on the backing store, either because it has been deleted by another VM, or because it has not yet been created.) Note that this method should</source>
          <target state="translated">这个方法是在锁定这个节点的情况下调用的。此方法的合同是将存储在此节点上的任何缓存首选项与存储在备份存储中的任何首选项同步。此节点完全有可能不存在于备份存储中,因为它已被另一个虚拟机删除,或因为它尚未创建)。请注意,此方法应该</target>
        </trans-unit>
        <trans-unit id="15489f38390a103fdf5fe387652f5e0e8b4ccd7e" translate="yes" xml:space="preserve">
          <source>This method is like &lt;code&gt;NamingManager.getStateToBind&lt;/code&gt; except for the following differences:</source>
          <target state="translated">此方法类似于 &lt;code&gt;NamingManager.getStateToBind&lt;/code&gt; ，不同之处在于：</target>
        </trans-unit>
        <trans-unit id="7e1f7b8cb26774b5d7be3482e73541adce1da018" translate="yes" xml:space="preserve">
          <source>This method is merely a convenience equivalent to calling &lt;code&gt;read(int, ImageReadParam)&lt;/code&gt; with a read param specifying a source region having offsets of &lt;code&gt;tileX*getTileWidth(imageIndex)&lt;/code&gt;, &lt;code&gt;tileY*getTileHeight(imageIndex)&lt;/code&gt; and width and height of &lt;code&gt;getTileWidth(imageIndex)&lt;/code&gt;, &lt;code&gt;getTileHeight(imageIndex)&lt;/code&gt;; and subsampling factors of 1 and offsets of 0. To subsample a tile, call &lt;code&gt;read&lt;/code&gt; with a read param specifying this region and different subsampling parameters.</source>
          <target state="translated">此方法仅仅是一个方便相当于调用 &lt;code&gt;read(int, ImageReadParam)&lt;/code&gt; 与读取PARAM指定具有偏移量的源极区域 &lt;code&gt;tileX*getTileWidth(imageIndex)&lt;/code&gt; ， &lt;code&gt;tileY*getTileHeight(imageIndex)&lt;/code&gt; 的和的宽度和高度 &lt;code&gt;getTileWidth(imageIndex)&lt;/code&gt; ， &lt;code&gt;getTileHeight(imageIndex)&lt;/code&gt; ; 子采样因子为1，偏移量为0。要对图块进行子采样，请使用具有指定此区域和不同子采样参数的读取参数调用 &lt;code&gt;read&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74e563b94db60a52200527da0350b2be3483e34b" translate="yes" xml:space="preserve">
          <source>This method is needed because the application class path can theoretically change, or additional plug-ins may become available. Rather than re-scanning the classpath on every invocation of the API, the class path is scanned automatically only on the first invocation. Clients can call this method to prompt a re-scan. Thus this method need only be invoked by sophisticated applications which dynamically make new plug-ins available at runtime.</source>
          <target state="translated">这个方法是需要的,因为从理论上讲,应用程序的类路径可能会发生变化,或者可能会有额外的插件可用。不是在每次调用API时重新扫描classpath,而是只在第一次调用时自动扫描类路径。客户端可以调用这个方法来提示重新扫描。因此,这个方法只需要被复杂的应用程序调用,这些应用程序在运行时动态地提供新的插件。</target>
        </trans-unit>
        <trans-unit id="fc165fa231bca09f4bc9efac08835902ba7ee3fd" translate="yes" xml:space="preserve">
          <source>This method is normally used to parse the encoded name value in a requested SNI extension.</source>
          <target state="translated">该方法通常用于解析请求的SNI扩展中的编码名称值。</target>
        </trans-unit>
        <trans-unit id="c8c21eb92b48c4cd99405dc7f75560e5eaac4d60" translate="yes" xml:space="preserve">
          <source>This method is not needed for the initial handshake, as the &lt;code&gt;wrap()&lt;/code&gt; and &lt;code&gt;unwrap()&lt;/code&gt; methods will implicitly call this method if handshaking has not already begun.</source>
          <target state="translated">初始握手不需要此方法，因为如果握手尚未开始，则 &lt;code&gt;wrap()&lt;/code&gt; 和 &lt;code&gt;unwrap()&lt;/code&gt; 方法将隐式调用此方法。</target>
        </trans-unit>
        <trans-unit id="16619bf63000b90d2aab1ce9b6f494106facc282" translate="yes" xml:space="preserve">
          <source>This method is often used in conjunction with the &lt;a href=&quot;bytebuffer#compact--&quot;&gt;&lt;code&gt;compact&lt;/code&gt;&lt;/a&gt; method when transferring data from one place to another.</source>
          <target state="translated">当将数据从一个地方传输到另一个地方时，通常将此方法与&lt;a href=&quot;bytebuffer#compact--&quot;&gt; &lt;code&gt;compact&lt;/code&gt; &lt;/a&gt;方法结合使用。</target>
        </trans-unit>
        <trans-unit id="3e292c5787c644ffc4e3dffa1a20d94361016b33" translate="yes" xml:space="preserve">
          <source>This method is only guaranteed to force changes that were made to this channel's file via the methods defined in this class.</source>
          <target state="translated">这个方法只保证通过本类中定义的方法强制修改这个通道的文件。</target>
        </trans-unit>
        <trans-unit id="e2efb71f28362c6ba94145fb4692a35fb81e2fee" translate="yes" xml:space="preserve">
          <source>This method is only guaranteed to force changes that were made to this channel's file via the methods defined in this class. It may or may not force changes that were made by modifying the content of a &lt;a href=&quot;../mappedbytebuffer&quot;&gt;&lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; obtained by invoking the &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method. Invoking the &lt;a href=&quot;../mappedbytebuffer#force--&quot;&gt;&lt;code&gt;force&lt;/code&gt;&lt;/a&gt; method of the mapped byte buffer will force changes made to the buffer's content to be written.</source>
          <target state="translated">仅保证此方法强制通过此类中定义的方法对该通道的文件进行更改。它可能会也可能不会强制通过修改通过调用&lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;方法获得的&lt;a href=&quot;../mappedbytebuffer&quot;&gt; &lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;的内容进行的更改。调用映射的字节缓冲区的&lt;a href=&quot;../mappedbytebuffer#force--&quot;&gt; &lt;code&gt;force&lt;/code&gt; &lt;/a&gt;方法将强制更改对缓冲区内容的写入。</target>
        </trans-unit>
        <trans-unit id="d932d5ffb45ee9273fcd52044f90174a48f5b33d" translate="yes" xml:space="preserve">
          <source>This method is only included for backwards compatibility. The caller is encouraged to use one of the alternative &lt;code&gt;getInstance&lt;/code&gt; methods to obtain a SecureRandom object, and then call the &lt;code&gt;generateSeed&lt;/code&gt; method to obtain seed bytes from that object.</source>
          <target state="translated">仅包括此方法是为了向后兼容。鼓励调用者使用替代的 &lt;code&gt;getInstance&lt;/code&gt; 方法之一来获取SecureRandom对象，然后调用 &lt;code&gt;generateSeed&lt;/code&gt; 方法来从该对象获取种子字节。</target>
        </trans-unit>
        <trans-unit id="d86047eada462e41e106485f6536537db99992ce" translate="yes" xml:space="preserve">
          <source>This method is only useful to &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;s or &lt;a href=&quot;sslengine&quot;&gt;&lt;code&gt;SSLEngine&lt;/code&gt;&lt;/a&gt;s operating in client mode.</source>
          <target state="translated">此方法仅对在客户端模式下运行的&lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sslengine&quot;&gt; &lt;code&gt;SSLEngine&lt;/code&gt; &lt;/a&gt;有用。</target>
        </trans-unit>
        <trans-unit id="0deda78995079ce571c6fdedc8bcba7a3c9ef0e0" translate="yes" xml:space="preserve">
          <source>This method is only useful to &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;s or &lt;a href=&quot;sslengine&quot;&gt;&lt;code&gt;SSLEngine&lt;/code&gt;&lt;/a&gt;s operating in server mode.</source>
          <target state="translated">此方法仅对在服务器模式下运行的&lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sslengine&quot;&gt; &lt;code&gt;SSLEngine&lt;/code&gt; &lt;/a&gt;有用。</target>
        </trans-unit>
        <trans-unit id="cc16123913e32d2276fdcb747c706db178320295" translate="yes" xml:space="preserve">
          <source>This method is optionally supported by the platform. A Java virtual machine implementation may not support the compilation time monitoring. The &lt;a href=&quot;compilationmxbean#isCompilationTimeMonitoringSupported--&quot;&gt;&lt;code&gt;isCompilationTimeMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this operation.</source>
          <target state="translated">平台可选地支持此方法。 Java虚拟机实现可能不支持编译时间监视。所述&lt;a href=&quot;compilationmxbean#isCompilationTimeMonitoringSupported--&quot;&gt; &lt;code&gt;isCompilationTimeMonitoringSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定Java虚拟机支持此操作。</target>
        </trans-unit>
        <trans-unit id="e9eba6216174e6e469eb9028a917a4a068eb5ab8" translate="yes" xml:space="preserve">
          <source>This method is overridden by providers to initialize this signature engine with the specified parameter set.</source>
          <target state="translated">本方法被提供者重写,用于用指定的参数集初始化本签名引擎。</target>
        </trans-unit>
        <trans-unit id="82bae5be04e910bde32956a015712ff6e2661401" translate="yes" xml:space="preserve">
          <source>This method is overridden by providers to return the parameters used with this signature engine, or null if this signature engine does not use any parameters.</source>
          <target state="translated">本方法被提供者重载,以返回本签名引擎使用的参数,如果本签名引擎没有使用任何参数,则返回null。</target>
        </trans-unit>
        <trans-unit id="69310362184bfccb6ad99d4021632a3e603dcaf5" translate="yes" xml:space="preserve">
          <source>This method is particularly useful when it is necessary to match a single certificate. Although other criteria can be specified in conjunction with the certificateEquals criterion, it is usually not practical or necessary.</source>
          <target state="translated">当需要匹配单个证书时,这个方法特别有用。虽然其他的标准可以和certificateEquals标准一起指定,但通常是不实际或不必要的。</target>
        </trans-unit>
        <trans-unit id="bf22cca0f65499d090fa691c00a0b8927acdcd66" translate="yes" xml:space="preserve">
          <source>This method is potentially much more efficient than a simple loop that reads from the source channel and writes to this channel. Many operating systems can transfer bytes directly from the source channel into the filesystem cache without actually copying them.</source>
          <target state="translated">这种方法有可能比从源通道读取并写入这个通道的简单循环更有效率。许多操作系统可以直接将字节从源通道传输到文件系统缓存中,而不需要实际复制它们。</target>
        </trans-unit>
        <trans-unit id="965338e16ca02ac41bcc11da1b5e5b3d9cc0e44e" translate="yes" xml:space="preserve">
          <source>This method is potentially much more efficient than a simple loop that reads from this channel and writes to the target channel. Many operating systems can transfer bytes directly from the filesystem cache to the target channel without actually copying them.</source>
          <target state="translated">这种方法可能比从这个通道读取并写入目标通道的简单循环更有效率。许多操作系统可以直接从文件系统缓存中传输字节到目标通道,而不需要实际复制它们。</target>
        </trans-unit>
        <trans-unit id="8f48d4f8746d1c3929f7fdb278911b125505d722" translate="yes" xml:space="preserve">
          <source>This method is properly synchronized to allow correct use by more than one thread. However, if many threads need to generate pseudorandom numbers at a great rate, it may reduce contention for each thread to have its own pseudorandom-number generator.</source>
          <target state="translated">这个方法是适当同步的,允许一个以上的线程正确使用。但是,如果许多线程需要以很大的速度生成伪随机数,那么每个线程都有自己的伪随机数生成器可能会减少争夺。</target>
        </trans-unit>
        <trans-unit id="101600ec7ed55bc43fbc527e8ecb336047d15608" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-T:A-&quot;&gt;&lt;code&gt;Arrays.spliterator(Object[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-T:A-&quot;&gt; &lt;code&gt;Arrays.spliterator(Object[])&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="233cd71c4f4c3d8494a4f25e6bc13c8ed557b275" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-double:A-&quot;&gt;&lt;code&gt;Arrays.spliterator(double[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-double:A-&quot;&gt; &lt;code&gt;Arrays.spliterator(double[])&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e52f30a471de78b6d6f563be986bde804603120" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-double:A-int-int-&quot;&gt;&lt;code&gt;Arrays.spliterator(double[], int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-double:A-int-int-&quot;&gt; &lt;code&gt;Arrays.spliterator(double[], int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c73a95d87370936cebde19acb3cc5abd7a766de4" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-int:A-&quot;&gt;&lt;code&gt;Arrays.spliterator(int[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-int:A-&quot;&gt; &lt;code&gt;Arrays.spliterator(int[])&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c10bc4c13749c2a7d95f8a6a7364d6dcdce4f25" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-int:A-int-int-&quot;&gt;&lt;code&gt;Arrays.spliterator(int[], int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-int:A-int-int-&quot;&gt; &lt;code&gt;Arrays.spliterator(int[], int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa80526e45e313e734391312a3f78373a7fffb1f" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-long:A-&quot;&gt;&lt;code&gt;Arrays.spliterator(long[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-long:A-&quot;&gt; &lt;code&gt;Arrays.spliterator(long[])&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6b3004b45f86f57d7db79ba54946c43bd6fde40" translate="yes" xml:space="preserve">
          <source>This method is provided as an implementation convenience for Spliterators which store portions of their elements in arrays, and need fine control over Spliterator characteristics. Most other situations in which a Spliterator for an array is needed should use &lt;a href=&quot;arrays#spliterator-long:A-int-int-&quot;&gt;&lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为拆分器的实现方便提供了此方法，拆分器将其元素的一部分存储在数组中，并且需要精细控制拆分器的特性。在需要为数组使用分隔符的大多数其他情况下，应使用&lt;a href=&quot;arrays#spliterator-long:A-int-int-&quot;&gt; &lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96c33959308c322bb4e3c731a402f9adefbfa7c6" translate="yes" xml:space="preserve">
          <source>This method is provided because the generic URI syntax specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; cannot always distinguish a malformed server-based authority from a legitimate registry-based authority. It must therefore treat some instances of the former as instances of the latter. The authority component in the URI string &lt;code&gt;&quot;//foo:bar&quot;&lt;/code&gt;, for example, is not a legal server-based authority but it is legal as a registry-based authority.</source>
          <target state="translated">之所以提供此方法，是因为&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396中&lt;/a&gt;指定的通用URI语法不能始终将格式错误的基于服务器的权限与合法的基于注册表的权限区分开。因此，它必须将前者的某些实例视为后者的实例。例如，URI字符串 &lt;code&gt;&quot;//foo:bar&quot;&lt;/code&gt; 的授权组件不是基于服务器的合法授权，但作为基于注册表的授权也是合法的。</target>
        </trans-unit>
        <trans-unit id="07060118cedf0a1e147ce625b28596254fb2290b" translate="yes" xml:space="preserve">
          <source>This method is provided for use in situations where it is known that the given string is a legal URI, for example for URI constants declared within in a program, and so it would be considered a programming error for the string not to parse as such. The constructors, which throw &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; directly, should be used situations where a URI is being constructed from user input or from some other source that may be prone to errors.</source>
          <target state="translated">提供此方法的目的是在已知给定字符串是合法URI的情况下使用，例如，在程序中声明的URI常量，因此对于这样无法解析的字符串将被视为编程错误。直接从用户输入或从其他可能容易出错的来源构造URI的情况下，应使用直接抛出&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; 的&lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="29825b65d703dd90721fbf064db666b8d222af07" translate="yes" xml:space="preserve">
          <source>This method is provided in Beans 1.0 as a hook to allow the addition of more flexible bean behaviour in the future.</source>
          <target state="translated">这个方法在Beans 1.0中作为一个钩子提供给大家,以允许在未来增加更灵活的bean行为。</target>
        </trans-unit>
        <trans-unit id="2d3f858bd0660b97820fcc102c6ef5e7861fa199" translate="yes" xml:space="preserve">
          <source>This method is provided so that this class can implement the &lt;a href=&quot;charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">提供此方法是为了使此类可以实现&lt;a href=&quot;charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="5ced8a306ed352d41e2ad9b6c7ba3935c30f1517" translate="yes" xml:space="preserve">
          <source>This method is required to be public, but should never be called explicitly. It performs the main run loop to execute &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">该方法必须是公共的，但决不能显式调用。它执行主运行循环以执行&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffdb81a47c22a3394dc922b8215d2c84d07174fb" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;code&gt;wait&lt;/code&gt; method of one argument, but it allows finer control over the amount of time to wait for a notification before giving up. The amount of real time, measured in nanoseconds, is given by:</source>
          <target state="translated">此方法类似于一个参数的 &lt;code&gt;wait&lt;/code&gt; 方法，但是它可以更好地控制放弃通知之前等待通知的时间。实时量（以纳秒为单位）由下式给出：</target>
        </trans-unit>
        <trans-unit id="c66e555a077ac4020400429a66bf556133088d7b" translate="yes" xml:space="preserve">
          <source>This method is suitable for reading bytes written by the &lt;code&gt;writeChar&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt;.</source>
          <target state="translated">此方法适合于读取由 &lt;code&gt;DataOutput&lt;/code&gt; 接口的 &lt;code&gt;writeChar&lt;/code&gt; 方法写入的字节。</target>
        </trans-unit>
        <trans-unit id="673deb599d2dd33a1e5ca94ec7e660cf61e17e64" translate="yes" xml:space="preserve">
          <source>This method is suitable for reading bytes written by the &lt;code&gt;writeInt&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt;.</source>
          <target state="translated">此方法适合于读取由 &lt;code&gt;DataOutput&lt;/code&gt; 接口的 &lt;code&gt;writeInt&lt;/code&gt; 方法写入的字节。</target>
        </trans-unit>
        <trans-unit id="65d867ab6fa3e8d89edaa5573fb88f5f9205d3e0" translate="yes" xml:space="preserve">
          <source>This method is suitable for reading bytes written by the &lt;code&gt;writeLong&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt;.</source>
          <target state="translated">此方法适合于读取由 &lt;code&gt;DataOutput&lt;/code&gt; 接口的 &lt;code&gt;writeLong&lt;/code&gt; 方法写入的字节。</target>
        </trans-unit>
        <trans-unit id="5492ebe6d0a5b3c366da2e3dab322787fb344b92" translate="yes" xml:space="preserve">
          <source>This method is suitable for reading the bytes written by the &lt;code&gt;writeShort&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt; if the argument to &lt;code&gt;writeShort&lt;/code&gt; was intended to be a value in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;65535&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;writeShort&lt;/code&gt; 的参数的取值范围为 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;65535&lt;/code&gt; ，则此方法适合于读取由 &lt;code&gt;DataOutput&lt;/code&gt; 接口的 &lt;code&gt;writeShort&lt;/code&gt; 方法写入的字节。</target>
        </trans-unit>
        <trans-unit id="dde600a07b50792acdc44c87de16be4fe55e06f9" translate="yes" xml:space="preserve">
          <source>This method is suitable for reading the bytes written by the &lt;code&gt;writeShort&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt;.</source>
          <target state="translated">此方法适合于读取 &lt;code&gt;DataOutput&lt;/code&gt; 接口的 &lt;code&gt;writeShort&lt;/code&gt; 方法写入的字节。</target>
        </trans-unit>
        <trans-unit id="17df461a168269c9f058c6ae020b2e4100b88035" translate="yes" xml:space="preserve">
          <source>This method is the same as &lt;code&gt;NamingManager.getObjectInstance&lt;/code&gt; except for the following differences:</source>
          <target state="translated">此方法与 &lt;code&gt;NamingManager.getObjectInstance&lt;/code&gt; 相同，不同之处在于：</target>
        </trans-unit>
        <trans-unit id="24192bfca73e7b179eecb35ca9ab3868f6216fd1" translate="yes" xml:space="preserve">
          <source>This method is to be overridden when extending this service to support caching and versioning. It is called from &lt;a href=&quot;mlet#getMBeansFromURL-java.net.URL-&quot;&gt;&lt;code&gt;getMBeansFromURL&lt;/code&gt;&lt;/a&gt; when the version, codebase, and jarfile have been extracted from the MLet file, and can be used to verify that it is all right to load the given MBean, or to replace the given URL with a different one.</source>
          <target state="translated">扩展此服务以支持缓存和版本控制时，将覆盖此方法。当从MLet文件中提取了版本，代码库和jarfile时，从&lt;a href=&quot;mlet#getMBeansFromURL-java.net.URL-&quot;&gt; &lt;code&gt;getMBeansFromURL&lt;/code&gt; &lt;/a&gt;调用该方法，该方法可用于验证是否可以加载给定的MBean或用另一个URL替换给定的URL。</target>
        </trans-unit>
        <trans-unit id="951395b4b75eb438f62bfbeb152ae6d223075561" translate="yes" xml:space="preserve">
          <source>This method is typically</source>
          <target state="translated">这种方法通常是</target>
        </trans-unit>
        <trans-unit id="ae63b78449e9e42c635caa7843a810d1aa57cffe" translate="yes" xml:space="preserve">
          <source>This method is typically called from the environment in order to determine if the implementor &quot;needs&quot; a GUI.</source>
          <target state="translated">这个方法通常从环境中调用,以确定实现者是否 &quot;需要 &quot;一个GUI。</target>
        </trans-unit>
        <trans-unit id="b7126e7970c8cf4e25d7d94afe1028c943cd33c1" translate="yes" xml:space="preserve">
          <source>This method is typically invoked from within a task's run method, to determine whether the current execution of the task is sufficiently timely to warrant performing the scheduled activity:</source>
          <target state="translated">该方法通常从任务的运行方法中调用,以确定当前任务的执行是否足够及时,以保证执行预定活动。</target>
        </trans-unit>
        <trans-unit id="a1daf7353acd79b3c1764e98f4066dec0663ce7b" translate="yes" xml:space="preserve">
          <source>This method is typically used for debugging and testing purposes.</source>
          <target state="translated">这种方法通常用于调试和测试目的。</target>
        </trans-unit>
        <trans-unit id="2251827349b72099d9acb0597d3ef960a5681705" translate="yes" xml:space="preserve">
          <source>This method is unlike others in this and related interfaces. It operates on runtime reflective information &amp;mdash; representations of annotation types currently loaded into the VM &amp;mdash; rather than on the representations defined by and used throughout these interfaces. Consequently, calling methods on the returned annotation object can throw many of the exceptions that can be thrown when calling methods on an annotation object returned by core reflection. This method is intended for callers that are written to operate on a known, fixed set of annotation types.</source>
          <target state="translated">此方法在此接口和相关接口中不同于其他方法。它对运行时反射信息（当前加载到VM中的注释类型的表示形式）进行操作，而不是对这些接口定义和使用的表示形式进行操作。因此，在返回的注释对象上调用方法可能会引发许多异常，而在对核心反射返回的注释对象上调用方法时可能会引发这些异常。此方法适用于编写为对已知的固定注释类型集进行操作的调用方。</target>
        </trans-unit>
        <trans-unit id="aea5a6a6faade2d9a3e9582074c60fe04111f203" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;getProperties&lt;/code&gt; and &lt;code&gt;setProperties&lt;/code&gt; methods of class &lt;code&gt;System&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;System&lt;/code&gt; 类的 &lt;code&gt;getProperties&lt;/code&gt; 和 &lt;code&gt;setProperties&lt;/code&gt; 方法使用此方法。</target>
        </trans-unit>
        <trans-unit id="4b98243b99ff34e00c9ef9a60fbb86ed96ec5a16" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;getProperty&lt;/code&gt; method of class &lt;code&gt;System&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;System&lt;/code&gt; 类的 &lt;code&gt;getProperty&lt;/code&gt; 方法使用此方法。</target>
        </trans-unit>
        <trans-unit id="b9a5905740e8a36aa9964becd355adbc6cf3194d" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;loadClass&lt;/code&gt; method of class loaders.</source>
          <target state="translated">类加载器的 &lt;code&gt;loadClass&lt;/code&gt; 方法使用此方法。</target>
        </trans-unit>
        <trans-unit id="9667fe0131b3f57e0e230d7f8071e4addf0b27dd" translate="yes" xml:space="preserve">
          <source>This method is used by the &lt;code&gt;loadClass&lt;/code&gt; method of some class loaders.</source>
          <target state="translated">某些类加载器的 &lt;code&gt;loadClass&lt;/code&gt; 方法使用此方法。</target>
        </trans-unit>
        <trans-unit id="dfe37395eb27f1aaf5b50a8b678a0f630640cc5e" translate="yes" xml:space="preserve">
          <source>This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is &lt;b&gt;not&lt;/b&gt; known in advance. In this mode, chunked transfer encoding is used to send the request body. Note, not all HTTP servers support this mode.</source>
          <target state="translated">此方法用于启用没有内部缓冲的HTTP请求正文流，当内容长度&lt;b&gt;不&lt;/b&gt;事先已知的。在这种模式下，分块传输编码用于发送请求正文。注意，并非所有HTTP服务器都支持此模式。</target>
        </trans-unit>
        <trans-unit id="9c8fdc5fc14c7dbd8f5a8384988f1bd062b27d76" translate="yes" xml:space="preserve">
          <source>This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is known in advance.</source>
          <target state="translated">该方法用于在事先知道内容长度的情况下,实现HTTP请求体的流式传输,无需内部缓冲。</target>
        </trans-unit>
        <trans-unit id="e2b55097c024b0b0b02045eedaa78a111259066a" translate="yes" xml:space="preserve">
          <source>This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the associated channel is closed.</source>
          <target state="translated">该方法用于建立套接字和本地地址之间的关联。一旦建立了关联,那么套接字就会一直保持绑定,直到关联通道关闭。</target>
        </trans-unit>
        <trans-unit id="d9dfa7289fc99c05acc6f156086be826f379c086" translate="yes" xml:space="preserve">
          <source>This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the channel is closed.</source>
          <target state="translated">该方法用于建立套接字和本地地址之间的关联。一旦建立了关联,那么套接字就会保持绑定,直到通道关闭。</target>
        </trans-unit>
        <trans-unit id="7b394514f43b5846b11c1c15ed38e5c851d06c0d" translate="yes" xml:space="preserve">
          <source>This method is used to establish an association between the socket and a local address. Once an association is established then the socket remains bound until the channel is closed. If the &lt;code&gt;local&lt;/code&gt; parameter has the value &lt;code&gt;null&lt;/code&gt; then the socket will be bound to an address that is assigned automatically.</source>
          <target state="translated">此方法用于在套接字和本地地址之间建立关联。建立关联后，套接字将保持绑定状态，直到关闭通道。如果 &lt;code&gt;local&lt;/code&gt; 参数的值为 &lt;code&gt;null&lt;/code&gt; ,则套接字将绑定到自动分配的地址。</target>
        </trans-unit>
        <trans-unit id="2baece6a8ac06e1fc4a9ff2b40d62ea4d61c8a8f" translate="yes" xml:space="preserve">
          <source>This method is used to replace the definition of a class without reference to the existing class file bytes, as one might do when recompiling from source for fix-and-continue debugging. Where the existing class file bytes are to be transformed (for example in bytecode instrumentation) &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt;&lt;code&gt;retransformClasses&lt;/code&gt;&lt;/a&gt; should be used.</source>
          <target state="translated">此方法用于替换类的定义，而无需引用现有的类文件字节，就像从源重新编译以进行修复并继续调试时所做的那样。如果要转换现有的类文件字节（例如，在字节码检测中），则应使用&lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt; &lt;code&gt;retransformClasses&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7beea796e1e20476ce67129e3d8dfb3b59481b17" translate="yes" xml:space="preserve">
          <source>This method is used with indirect CRLs. The default implementation always returns null. Subclasses that wish to support indirect CRLs should override it.</source>
          <target state="translated">本方法用于间接CRL。默认的实现总是返回null。希望支持间接CRL的子类应该重写它。</target>
        </trans-unit>
        <trans-unit id="246cc95dbbc3e601d773b72cc235c82bbbfeaff8" translate="yes" xml:space="preserve">
          <source>This method is useful for clients which have only dimensions and want to find a Media which corresponds to the dimensions.</source>
          <target state="translated">这种方法对于只有尺寸的客户来说很有用,因为他们想找到一个与尺寸相对应的媒体。</target>
        </trans-unit>
        <trans-unit id="e84c50c958c46a9102a7f8120bd2674f50221c85" translate="yes" xml:space="preserve">
          <source>This method is useful for implementing &lt;a href=&quot;../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; on objects containing multiple fields. For example, if an object that has three fields, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;, one could write:</source>
          <target state="translated">此方法对于在包含多个字段的对象上实现&lt;a href=&quot;../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;很有用。例如，如果一个对象具有 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;z&lt;/code&gt; 三个字段，则可以编写：</target>
        </trans-unit>
        <trans-unit id="b747ebeeb82d358021370528749c1fdbd9859486" translate="yes" xml:space="preserve">
          <source>This method is useful to help locate a service that can print a &lt;code&gt;MultiDoc&lt;/code&gt; in which the elements may be different flavors. An application could perform this itself by multiple lookups on each &lt;code&gt;DocFlavor&lt;/code&gt; in turn and collating the results, but the lookup service may be able to do this more efficiently.</source>
          <target state="translated">此方法对于帮助查找可以打印其中元素可能具有不同风格的 &lt;code&gt;MultiDoc&lt;/code&gt; 的服务很有用。应用程序可以通过依次在每个 &lt;code&gt;DocFlavor&lt;/code&gt; 上进行多次查找并整理结果来自己执行此操作，但是查找服务可能能够更有效地执行此操作。</target>
        </trans-unit>
        <trans-unit id="51ce74596c8f01cac825f66644d842ba43ddd4b9" translate="yes" xml:space="preserve">
          <source>This method is useful when a client needs to &quot;narrow&quot; the type of a &lt;code&gt;Class&lt;/code&gt; object to pass it to an API that restricts the &lt;code&gt;Class&lt;/code&gt; objects that it is willing to accept. A cast would generate a compile-time warning, as the correctness of the cast could not be checked at runtime (because generic types are implemented by erasure).</source>
          <target state="translated">当客户端需要&amp;ldquo;缩小&amp;rdquo; &lt;code&gt;Class&lt;/code&gt; 对象的类型以将其传递给限制其愿意接受的 &lt;code&gt;Class&lt;/code&gt; 对象的API时，此方法很有用。强制转换会生成编译时警告，因为在运行时无法检查强制转换的正确性（因为通用类型是通过擦除实现的）。</target>
        </trans-unit>
        <trans-unit id="443baa96b0aa5c9903d7dc90504d8dd2b62d5718" translate="yes" xml:space="preserve">
          <source>This method is usually used to check key size and key usage.</source>
          <target state="translated">这种方法通常用于检查密钥大小和密钥用途。</target>
        </trans-unit>
        <trans-unit id="fb16de8796afac4493e5774b44ae736259861eaa" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. If the provider is found then its &lt;a href=&quot;spi/filesystemprovider#getPath-java.net.URI-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method is invoked to convert the URI.</source>
          <target state="translated">此方法遍历已&lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt;提供程序，以找到由给定URI 的URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;标识的提供程序。比较URI方案时不考虑大小写。如果找到了提供程序，则将调用其&lt;a href=&quot;spi/filesystemprovider#getPath-java.net.URI-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法以转换URI。</target>
        </trans-unit>
        <trans-unit id="8cd1a28468ba1f52b37e42cb2a38da8ff584a3cb" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. The exact form of the URI is highly provider dependent. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#getFileSystem-java.net.URI-&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method is invoked to obtain a reference to the &lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">此方法遍历已&lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt;提供程序，以找到由给定URI 的URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;标识的提供程序。比较URI方案时不考虑大小写。URI的确切形式高度依赖于提供者。如果找到，则调用提供程序的&lt;a href=&quot;spi/filesystemprovider#getFileSystem-java.net.URI-&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt;方法以获得对 &lt;code&gt;FileSystem&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="6d4a846b184f75a1e6db8c84642469ea6b00dfb6" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers to locate the provider that is identified by the URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; of the given URI. URI schemes are compared without regard to case. The exact form of the URI is highly provider dependent. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method is invoked to construct the new file system.</source>
          <target state="translated">此方法遍历已&lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt;提供程序，以找到由给定URI 的URI &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;标识的提供程序。比较URI方案时不考虑大小写。 URI的确切形式高度依赖于提供者。如果找到，将调用提供程序的&lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;方法来构造新文件系统。</target>
        </trans-unit>
        <trans-unit id="880033cb82cb31b9387a5336555aa2900c785f59" translate="yes" xml:space="preserve">
          <source>This method iterates over the &lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt;&lt;code&gt;installed&lt;/code&gt;&lt;/a&gt; providers. It invokes, in turn, each provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt;&lt;/a&gt; method with an empty map. If a provider returns a file system then the iteration terminates and the file system is returned. If none of the installed providers return a &lt;code&gt;FileSystem&lt;/code&gt; then an attempt is made to locate the provider using the given class loader. If a provider returns a file system then the lookup terminates and the file system is returned.</source>
          <target state="translated">此方法遍历已&lt;a href=&quot;spi/filesystemprovider#installedProviders--&quot;&gt; &lt;code&gt;installed&lt;/code&gt; &lt;/a&gt;提供程序。依次调用每个提供程序的&lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt; &lt;/a&gt;方法（带有空映射）。如果提供者返回文件系统，则迭代终止，并返回文件系统。如果没有安装的提供者返回一个 &lt;code&gt;FileSystem&lt;/code&gt; ，然后试图找到使用给定的类加载器的供应商。如果提供程序返回文件系统，则查找将终止并返回文件系统。</target>
        </trans-unit>
        <trans-unit id="6df3229f6bcb65c48929367cf8b4e6d901764147" translate="yes" xml:space="preserve">
          <source>This method iterates over the entire collection, hence it requires time proportional to the size of the collection.</source>
          <target state="translated">这种方法在整个集合上迭代,因此它需要的时间与集合的大小成正比。</target>
        </trans-unit>
        <trans-unit id="ea8ef674ef4d61ebebe97a398544ed83610076c4" translate="yes" xml:space="preserve">
          <source>This method loads the class through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;Class&lt;/code&gt; object returned might have more than one &lt;code&gt;ClassLoader&lt;/code&gt; associated with it. Subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; need not usually invoke this method, because most class loaders need to override just &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法通过系统类加载器加载该类（请参见&lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt;）。返回的 &lt;code&gt;Class&lt;/code&gt; 对象可能与一个以上的 &lt;code&gt;ClassLoader&lt;/code&gt; 相关联。通常， &lt;code&gt;ClassLoader&lt;/code&gt; 的子类不需要调用此方法，因为大多数类加载器仅需要覆盖&lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d62d43c3776299e4d329c965c00fa4654ac85c4" translate="yes" xml:space="preserve">
          <source>This method locates the implementation class by locating configuration files that have the name:</source>
          <target state="translated">本方法通过定位具有该名称的配置文件来定位实现类。</target>
        </trans-unit>
        <trans-unit id="9d0ddb3ec0e9b63b8855a417b281e5a02579b5c0" translate="yes" xml:space="preserve">
          <source>This method makes a best effort to ensure that, when it returns, this buffer's content is resident in physical memory. Invoking this method may cause some number of page faults and I/O operations to occur.</source>
          <target state="translated">这个方法尽最大努力确保当它返回时,这个缓冲区的内容是驻留在物理内存中的。调用此方法可能会导致一些页面故障和I/O操作的发生。</target>
        </trans-unit>
        <trans-unit id="9921a4667dc98347a6a5af87ed73e8712213cd69" translate="yes" xml:space="preserve">
          <source>This method makes a copy of the input</source>
          <target state="translated">本方法将输入的</target>
        </trans-unit>
        <trans-unit id="d6f231365be0d37f8241f85ca2031c19c3f8582e" translate="yes" xml:space="preserve">
          <source>This method makes use of specialized providers that create pseudo file systems where the contents of one or more files is treated as a file system.</source>
          <target state="translated">这种方法利用专门的提供者创建伪文件系统,其中一个或多个文件的内容被视为一个文件系统。</target>
        </trans-unit>
        <trans-unit id="87831c1145b7ecfcd50086de895ead157d421184" translate="yes" xml:space="preserve">
          <source>This method marks the group as shutdown. Further attempts to construct channel that binds to this group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. The group terminates when all asynchronous channels in the group are closed, all actively executing completion handlers have run to completion, and all resources have been released. This method has no effect if the group is already shutdown.</source>
          <target state="translated">此方法将组标记为关闭。进一步尝试构造绑定到此组的通道将引发&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;。当组中的所有异步通道都关闭，所有有效执行的完成处理程序运行完毕并且所有资源都已释放时，该组终止。如果该组已经关闭，则此方法无效。</target>
        </trans-unit>
        <trans-unit id="4bd105ab3143b10410eab88d0e59df3ae5ab16bb" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ChronoLocalDate::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;ChronoLocalDate::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="ac5120e3bd52460e6e089e4c46c26ce2f1b840e7" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ChronoLocalDateTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;ChronoLocalDateTime::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="183368440bb5769b4acd7d313fcc33686e552e51" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ChronoZonedDateTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;ChronoZonedDateTime::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="d82d20a7a1494a7568e46b779689118249e44bf6" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Chronology::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法参考 &lt;code&gt;Chronology::from&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="cea90316fb88c8c28da4f47c63da7e0a320c1082" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;HijrahDate::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;HijrahDate::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="7be7f49b8bc16966463730f7584f2b9b3152370e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;JapaneseDate::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;JapaneseDate::from&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="22e4e2128ff8c1a41cf57413e39c789abdb2efc4" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;MinguoDate::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;MinguoDate::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="9ba7885f8f7bf403703ef79cba625829e63b867a" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ThaiBuddhistDate::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;ThaiBuddhistDate::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="151a8ab12c11fab6d22dbeb578df6cb816782058" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;aChronology::date&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;aChronology::date&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="15f0eca90f7c5cc575db09166254ef53c7276122" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;aChronology::localDateTime&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;aChronology::localDateTime&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="e3c0b9acbca4d46fca9daf990a80203ee11ec47e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;../temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;aChronology::zonedDateTime&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;../temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;aChronology::zonedDateTime&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="44b767687682694c82976cf1a39c4b2b46cff9af" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;DayOfWeek::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;DayOfWeek::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="5cb8f2a059ef45511793934786eaabd023ce42ec" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Instant::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;Instant::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="13154f1a9ecebad2a777e49819a84f24e0e69cb4" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;LocalDate::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;LocalDate::from&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="7c9e8d8492bed2fe614fac5fa306ef20277027a7" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;LocalDateTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;LocalDateTime::from&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="8f24a5d62e15bf3f67196638710c031a5e203585" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;LocalTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;LocalTime::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="7bc36efb4efac3db95fb586701f584ff93c74d2e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Month::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;Month::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="8a998edc76008d24866649f88e7e9d58793c9ac6" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;MonthDay::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;MonthDay::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="f38a7887b37ae3bebb712497a2af95a051e4e28b" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;OffsetDateTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;OffsetDateTime::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="9669db98b3799bf0527a97e0cad3ac99b1ee9ac4" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;OffsetTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;OffsetTime::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="b0f1311c7003c8358466cd838c5637eadee93e4a" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;Year::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;Year::from&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="ff52ef986de3006f73c3aab82753ed75019f518e" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;YearMonth::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;YearMonth::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="cd7ded58c5a7c1d96e2b2efb214f272632889b28" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ZoneId::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;ZoneId::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="45262e36bd147b147a453ec34749097650a697ea" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ZoneOffset::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而允许通过方法引用 &lt;code&gt;ZoneOffset::from&lt;/code&gt; 将其用作查询。</target>
        </trans-unit>
        <trans-unit id="1550588151e8ce50ca6009abbaa39d79bd38d733" translate="yes" xml:space="preserve">
          <source>This method matches the signature of the functional interface &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; allowing it to be used as a query via method reference, &lt;code&gt;ZonedDateTime::from&lt;/code&gt;.</source>
          <target state="translated">此方法与功能接口&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;的签名匹配，从而可以通过方法引用 &lt;code&gt;ZonedDateTime::from&lt;/code&gt; 用作查询。</target>
        </trans-unit>
        <trans-unit id="5b16bf47b83723a0f8dab0f28952e13be8b08e85" translate="yes" xml:space="preserve">
          <source>This method may be called at most once.</source>
          <target state="translated">本方法最多可以调用一次。</target>
        </trans-unit>
        <trans-unit id="78a43de8dae8c31a955a3ede73579346e4f5c7fe" translate="yes" xml:space="preserve">
          <source>This method may be called from multiple threads in parallel. It must be thread-safe when invoked.</source>
          <target state="translated">这个方法可以从多个线程并行调用。调用时必须是线程安全的。</target>
        </trans-unit>
        <trans-unit id="6585c4dd5931dcf510c4f8fae01a67857b8ffc66" translate="yes" xml:space="preserve">
          <source>This method may be called repeatedly; the second and subsequent calls have no effect.</source>
          <target state="translated">本方法可以重复调用,第二次及以后的调用没有效果。</target>
        </trans-unit>
        <trans-unit id="63ee5b49d5f6750d4acf7a8f7672f0a71d7c5839" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If a read or write operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.</source>
          <target state="translated">这个方法可以在任何时候被调用。如果在本方法的调用进行中时调用了本通道的读或写操作,那么该操作将首先阻塞,直到本调用完成。如果连接尝试失败,也就是说,如果本方法的调用引发了一个检查异常,那么通道将被关闭。</target>
        </trans-unit>
        <trans-unit id="c4e7298ffd742d1f317317b55f1bddb77d7a9ae1" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If a read or write operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt is initiated but fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.</source>
          <target state="translated">这个方法可以在任何时候被调用。如果在本方法的调用进行中,调用了本通道的读或写操作,那么该操作将首先阻塞,直到本调用完成。如果一个连接尝试被发起但失败了,也就是说,如果这个方法的调用引发了一个检查异常,那么这个通道将被关闭。</target>
        </trans-unit>
        <trans-unit id="bbb6e41f03da9e7796c8ef3b5cfa0d71b7a3b6f2" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete.</source>
          <target state="translated">这个方法可以在任何时候被调用。但是,如果另一个线程已经在这个通道上发起了一个读操作,那么对这个方法的调用将被阻塞,直到第一个操作完成。</target>
        </trans-unit>
        <trans-unit id="97d8a3cea23f3f5dd331548174018d7613ac9cea" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">可以随时调用此方法。但是，如果另一个线程已经在该通道上启动了读取操作，则该方法的调用将被阻塞，直到第一个操作完成为止。如果未绑定此通道的套接字，则此方法将首先导致将套接字绑定到自动分配的地址，就像使用参数 &lt;code&gt;null&lt;/code&gt; 调用&lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="87dfa6f24f76e26d0921f1573308ed86b584bd10" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete.</source>
          <target state="translated">这个方法可以在任何时候被调用。但是,如果另一个线程已经在这个通道上发起了写操作,那么对这个方法的调用将阻塞,直到第一个操作完成。</target>
        </trans-unit>
        <trans-unit id="f7b172c4b318a4900cba6cabc26273027474dce2" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If another thread has already initiated a write operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if by invoking the &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">可以随时调用此方法。但是，如果另一个线程已经在该通道上启动了写操作，则该方法的调用将被阻塞，直到第一个操作完成为止。如果未绑定此通道的套接字，则此方法将首先使套接字绑定到自动分配的地址，就像通过使用参数 &lt;code&gt;null&lt;/code&gt; 调用&lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="e0d453cd13881714b408166a430d7ef367765c16" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If some other thread has already invoked it, however, then another invocation will block until the first invocation is complete, after which it will return without effect.</source>
          <target state="translated">这个方法可以在任何时候被调用。但是,如果其他线程已经调用了它,那么另一个调用将阻塞,直到第一个调用完成,之后它将无效果地返回。</target>
        </trans-unit>
        <trans-unit id="9d8874f15f4ccf8af8534b2ee953d6b106c497b4" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. If this method is invoked while another invocation of this method or of the &lt;a href=&quot;selectablechannel#configureBlocking-boolean-&quot;&gt;&lt;code&gt;configureBlocking&lt;/code&gt;&lt;/a&gt; method is in progress then it will first block until the other operation is complete. This method will then synchronize on the selector's key set and therefore may block if invoked concurrently with another registration or selection operation involving the same selector.</source>
          <target state="translated">可以随时调用此方法。如果在此方法或&lt;a href=&quot;selectablechannel#configureBlocking-boolean-&quot;&gt; &lt;code&gt;configureBlocking&lt;/code&gt; &lt;/a&gt;方法的另一次调用正在进行时调用此方法，则它将首先阻塞，直到其他操作完成。然后，此方法将在选择器的键集上同步，因此如果与涉及同一选择器的另一个注册或选择操作同时调用，则可能会阻塞。</target>
        </trans-unit>
        <trans-unit id="9d7815f3c8928d6111c4c25114f73627a45d89a3" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It synchronizes on the selector's cancelled-key set, and therefore may block briefly if invoked concurrently with a cancellation or selection operation involving the same selector.</source>
          <target state="translated">这个方法可以在任何时候被调用,它在选择器的取消键集上同步,因此,如果与同一选择器的取消或选择操作同时被调用,可能会短暂阻塞。它在选择器的取消键集上同步,因此如果与涉及同一选择器的取消或选择操作同时调用,可能会短暂阻塞。</target>
        </trans-unit>
        <trans-unit id="bc88b4f9995e416d1012e6ada90de268269c98dc" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It will not have any effect on read or write operations that are already in progress at the moment that it is invoked.</source>
          <target state="translated">这个方法可以在任何时候被调用。它不会对被调用时已经在进行的读写操作产生任何影响。</target>
        </trans-unit>
        <trans-unit id="e010dba7e883e9cc772c2dfa4328263d83f4af89" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. It will not have any effect on read or write operations that are already in progress at the moment that it is invoked. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the &lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method with a parameter of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">可以随时调用此方法。调用它时，它不会对正在进行的读取或写入操作产生任何影响。如果未绑定此通道的套接字，则此方法将首先导致将套接字绑定到自动分配的地址，就像使用参数 &lt;code&gt;null&lt;/code&gt; 调用&lt;a href=&quot;datagramchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="c163301ef227ad12e6f276fad354f6797a4c1833" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. Some channel types may not allow more than one read to be outstanding at any given time. If a thread initiates a read operation before a previous read operation has completed then a &lt;a href=&quot;readpendingexception&quot;&gt;&lt;code&gt;ReadPendingException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">可以随时调用此方法。某些通道类型可能不允许在任何给定时间进行多个读取。如果线程在上一个读取操作完成之前启动了读取操作，则将引发&lt;a href=&quot;readpendingexception&quot;&gt; &lt;code&gt;ReadPendingException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7caca2c8037750c753708585aaeb6aaff4c1fbc9" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. Some channel types may not allow more than one write to be outstanding at any given time. If a thread initiates a write operation before a previous write operation has completed then a &lt;a href=&quot;writependingexception&quot;&gt;&lt;code&gt;WritePendingException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">可以随时调用此方法。某些通道类型可能不允许在任何给定时间进行一次以上的写操作。如果线程在上一个写操作完成之前启动了写操作，则将引发&lt;a href=&quot;writependingexception&quot;&gt; &lt;code&gt;WritePendingException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d2f307030083dd150bccbf7e6545a39340de101" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. The new blocking mode will only affect I/O operations that are initiated after this method returns. For some implementations this may require blocking until all pending I/O operations are complete.</source>
          <target state="translated">这个方法可以在任何时候被调用。新的阻塞模式将只影响在本方法返回后启动的I/O操作。对于某些实现来说,这可能需要阻塞,直到所有待定的I/O操作完成。</target>
        </trans-unit>
        <trans-unit id="c46e90da40e0941dca9fb83de2c1c52caf821881" translate="yes" xml:space="preserve">
          <source>This method may be invoked at any time. Whether or not it blocks, and for how long, is implementation-dependent.</source>
          <target state="translated">这个方法可以在任何时候被调用。它是否阻塞,以及阻塞多久,取决于实现。</target>
        </trans-unit>
        <trans-unit id="fca71c654c6c4a1448dcfc2c9c6cffb17d00042b" translate="yes" xml:space="preserve">
          <source>This method may be overridden by a provider to return the digest length.</source>
          <target state="translated">本方法可以被提供者重写,以返回摘要长度。</target>
        </trans-unit>
        <trans-unit id="1eb0bb3c20b7e410c4131d82450240cfb2a11f14" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to provide their own initialization behaviors. When invoked any resources required by the BeanContextChild should be obtained from the current BeanContext.</source>
          <target state="translated">这个方法可以被子类重载,以提供他们自己的初始化行为。当调用该方法时,BeanContextChild所需的任何资源都应该从当前BeanContext中获取。</target>
        </trans-unit>
        <trans-unit id="4a304dadf3249e61c60f51360a60dad3cf993c26" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to provide their own release behaviors. When invoked any resources held by this instance obtained from its current BeanContext property should be released since the object is no longer nested within that BeanContext.</source>
          <target state="translated">这个方法可以被子类重载以提供自己的释放行为。当调用时,这个实例从其当前BeanContext属性获得的任何资源都应该被释放,因为对象不再嵌套在该BeanContext中。</target>
        </trans-unit>
        <trans-unit id="0d55991a1b2e5a6461ba13e37f0f15a127e36842" translate="yes" xml:space="preserve">
          <source>This method may be overridden in subclasses, but if so, must still ensure that these properties hold. In particular, the &lt;code&gt;cancel&lt;/code&gt; method itself must not throw exceptions.</source>
          <target state="translated">子类中可能会覆盖此方法，但是如果是这样，则必须仍然确保这些属性成立。特别是， &lt;code&gt;cancel&lt;/code&gt; 方法本身不能抛出异常。</target>
        </trans-unit>
        <trans-unit id="7cab176de1bca317891395340e0aad5bde002f6c" translate="yes" xml:space="preserve">
          <source>This method may be overridden in subclasses. The default behavior in this base class is that the first call is reported to System.err, and subsequent calls are ignored.</source>
          <target state="translated">这个方法可以在子类中被重载。这个基类的默认行为是第一次调用会被报告给System.err,随后的调用会被忽略。</target>
        </trans-unit>
        <trans-unit id="eeeaca67eebbcded76ba0f0bb85b3d4ff245fe26" translate="yes" xml:space="preserve">
          <source>This method may be used by the &lt;a href=&quot;../files#isReadable-java.nio.file.Path-&quot;&gt;&lt;code&gt;isReadable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../files#isWritable-java.nio.file.Path-&quot;&gt;&lt;code&gt;isWritable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#isExecutable-java.nio.file.Path-&quot;&gt;&lt;code&gt;isExecutable&lt;/code&gt;&lt;/a&gt; methods to check the accessibility of a file.</source>
          <target state="translated">&lt;a href=&quot;../files#isReadable-java.nio.file.Path-&quot;&gt; &lt;code&gt;isReadable&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../files#isWritable-java.nio.file.Path-&quot;&gt; &lt;code&gt;isWritable&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../files#isExecutable-java.nio.file.Path-&quot;&gt; &lt;code&gt;isExecutable&lt;/code&gt; &lt;/a&gt;方法可以使用此方法来检查文件的可访问性。</target>
        </trans-unit>
        <trans-unit id="6c5fd44ffb016caed67a281608469ded4a8fe690" translate="yes" xml:space="preserve">
          <source>This method may be used multiple times to add multiple JAR files to be searched in the order that this method was invoked.</source>
          <target state="translated">本方法可以多次使用,按照本方法被调用的顺序添加多个JAR文件进行搜索。</target>
        </trans-unit>
        <trans-unit id="423277e3d8d80a8c7c093ff691fc71c48df5648f" translate="yes" xml:space="preserve">
          <source>This method may be used to iterate over the JapaneseEras as follows:</source>
          <target state="translated">这个方法可以用来遍历JapaneseEras,具体如下。</target>
        </trans-unit>
        <trans-unit id="555850bf1f4c41d86e90ad7f126646ac30741843" translate="yes" xml:space="preserve">
          <source>This method may be used to trim whitespace (as defined above) from the beginning and end of a string.</source>
          <target state="translated">这个方法可以用来修剪字符串的开头和结尾的空格(如上文所定义)。</target>
        </trans-unit>
        <trans-unit id="90dc78f52a6b413211264d91d8f20c267620e3a3" translate="yes" xml:space="preserve">
          <source>This method may be useful as one part of a cancellation scheme. It may fail to remove tasks that have been converted into other forms before being placed on the internal queue. For example, a task entered using &lt;code&gt;submit&lt;/code&gt; might be converted into a form that maintains &lt;code&gt;Future&lt;/code&gt; status. However, in such cases, method &lt;a href=&quot;threadpoolexecutor#purge--&quot;&gt;&lt;code&gt;purge()&lt;/code&gt;&lt;/a&gt; may be used to remove those Futures that have been cancelled.</source>
          <target state="translated">此方法可能可用作取消方案的一部分。在放入内部队列之前，它可能无法删除已转换为其他形式的任务。例如，使用&amp;ldquo; &lt;code&gt;submit&lt;/code&gt; 输入的任务可能会转换为维护&amp;ldquo; &lt;code&gt;Future&lt;/code&gt; 状态的表单。但是，在这种情况下，可以使用方法&lt;a href=&quot;threadpoolexecutor#purge--&quot;&gt; &lt;code&gt;purge()&lt;/code&gt; &lt;/a&gt;删除已取消的那些期货。</target>
        </trans-unit>
        <trans-unit id="5c6e4bcf82780178dbb5ca3daf924e68571ff49b" translate="yes" xml:space="preserve">
          <source>This method may be useful when forcing completion as soon as any one (versus all) of several subtask results are obtained. However, in the common (and recommended) case in which &lt;code&gt;setRawResult&lt;/code&gt; is not overridden, this effect can be obtained more simply using &lt;code&gt;quietlyCompleteRoot();&lt;/code&gt;.</source>
          <target state="translated">一旦获得几个子任务结果中的任何一个（相对于全部），就强制执行完成时，此方法可能很有用。但是，在不覆盖 &lt;code&gt;setRawResult&lt;/code&gt; 的常见（推荐）情况下，可以使用 &lt;code&gt;quietlyCompleteRoot();&lt;/code&gt; 更简单地获得此效果。。</target>
        </trans-unit>
        <trans-unit id="ee8a33b2b584d58f65acd3ef5b5a9bac75888fef" translate="yes" xml:space="preserve">
          <source>This method may block indefinitely reading from the input stream (or writing to the file). The behavior for the case that the input stream is</source>
          <target state="translated">本方法可以无限期地阻止从输入流读取(或向文件写入)。在输入流为</target>
        </trans-unit>
        <trans-unit id="5d30c9f7712a31b657a7bbb8d54ff8b8b2c7ec98" translate="yes" xml:space="preserve">
          <source>This method may block indefinitely writing to the output stream (or reading from the file). The behavior for the case that the output stream is</source>
          <target state="translated">此方法可以无限期地阻止向输出流写入(或从文件中读取)。在输出流为</target>
        </trans-unit>
        <trans-unit id="f0ca405bc454d65a30fcfaba1f7467fa23cbbab5" translate="yes" xml:space="preserve">
          <source>This method may fail for a number of reasons. For example, the track number specified may not be valid for the current sequence, or the sequencer may not support this functionality. An application which needs to verify whether this operation succeeded should follow this call with a call to &lt;code&gt;&lt;a href=&quot;sequencer#getTrackSolo-int-&quot;&gt;&lt;code&gt;getTrackSolo(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">此方法可能由于多种原因而失败。例如，指定的音轨号可能对当前序列无效，或者音序器可能不支持此功能。需要验证此操作是否成功的应用程序应在此调用之后调用 &lt;code&gt;&lt;a href=&quot;sequencer#getTrackSolo-int-&quot;&gt;&lt;code&gt;getTrackSolo(int)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13cfc0faa9a3698ec0c89cdef689a843a661a929" translate="yes" xml:space="preserve">
          <source>This method may modify this encoder's state; it should therefore not be invoked if an &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt; is already in progress.</source>
          <target state="translated">此方法可能会修改此编码器的状态；因此，如果已经在进行&lt;a href=&quot;#steps&quot;&gt;编码操作，&lt;/a&gt;则不应调用它。</target>
        </trans-unit>
        <trans-unit id="9290868d82bfe3da4c42554fa0c609defcf62ef1" translate="yes" xml:space="preserve">
          <source>This method may modify this encoder's state; it should therefore not be invoked if an encoding operation is already in progress.</source>
          <target state="translated">这个方法可能会修改这个编码器的状态,因此,如果一个编码操作已经在进行中,就不应该调用它。</target>
        </trans-unit>
        <trans-unit id="3037b5311422e5bb406a3be5f52283fd7469d708" translate="yes" xml:space="preserve">
          <source>This method may not be used to compare paths that are associated with different file system providers.</source>
          <target state="translated">此方法不可用于比较与不同文件系统提供者相关联的路径。</target>
        </trans-unit>
        <trans-unit id="664c8d0c6ff062ca2d0fae072b4046c07d1c92e8" translate="yes" xml:space="preserve">
          <source>This method may only be called after a call to &lt;code&gt;prepareReplacePixels&lt;/code&gt;, or else an &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">只能在调用 &lt;code&gt;prepareReplacePixels&lt;/code&gt; 之后调用此方法，否则将 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80ad7aafeb24194c3ff80c06142118184d24f050" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, and it only accepts datagrams from the socket's peer. If there are more bytes in the datagram than remain in the given buffer then the remainder of the datagram is silently discarded. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">仅在连接此通道的套接字的情况下才可以调用此方法，并且该方法仅接受来自套接字对等方的数据报。如果数据报中的字节数超过给定缓冲区中剩余的字节数，则数据报的其余部分将被静默丢弃。否则，此方法的行为与&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="85ddf706a00ce13f5d8368ac314ccc092914db90" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, and it only accepts datagrams from the socket's peer. If there are more bytes in the datagram than remain in the given buffers then the remainder of the datagram is silently discarded. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">仅在连接此通道的套接字的情况下才可以调用此方法，并且该方法仅接受来自套接字对等方的数据报。如果数据报中的字节数超过给定缓冲区中剩余的字节数，则数据报的其余部分将被静默丢弃。否则，此方法的行为与&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="b8e1350ff2756ae2be28f871fb760f1312c051e0" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, in which case it sends datagrams directly to the socket's peer. Otherwise it behaves exactly as specified in the &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">仅当此通道的套接字已连接时才可以调用此方法，在这种情况下，它将直接向套接字的对等方发送数据报。否则，它的行为与&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="cad6db78ccecbb36a1013d4c3b22a7787206fa62" translate="yes" xml:space="preserve">
          <source>This method may only be invoked if this channel's socket is connected, in which case it sends datagrams directly to the socket's peer. Otherwise it behaves exactly as specified in the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">仅当此通道的套接字已连接时才可以调用此方法，在这种情况下，它将直接向套接字的对等方发送数据报。否则，它的行为与&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="b3924b1b87bc1f4c339d636c169be3cc7642f217" translate="yes" xml:space="preserve">
          <source>This method may return &lt;code&gt;null&lt;/code&gt; for any reason, including emptiness, inability to split after traversal has commenced, data structure constraints, and efficiency considerations.</source>
          <target state="translated">此方法可能出于任何原因返回 &lt;code&gt;null&lt;/code&gt; ，包括空性，遍历开始后无法拆分，数据结构约束以及效率方面的考虑。</target>
        </trans-unit>
        <trans-unit id="7b7eca330f8927162ece445852015aeb622c5901" translate="yes" xml:space="preserve">
          <source>This method may return &lt;code&gt;null&lt;/code&gt; for any reason, including emptiness, inability to split after traversal has commenced, data structure constraints, and efficiency considerations. This implementation permits limited parallelism.</source>
          <target state="translated">此方法可能出于任何原因返回 &lt;code&gt;null&lt;/code&gt; ，包括空性，遍历开始后无法拆分，数据结构约束以及效率方面的考虑。此实现允许有限的并行性。</target>
        </trans-unit>
        <trans-unit id="2ca689601a61123c0cfd011d20cb2a44d99c79b3" translate="yes" xml:space="preserve">
          <source>This method may return a &lt;code&gt;Referenceable&lt;/code&gt; object. The service provider obtaining this object may choose to store it directly, or to extract its reference (using &lt;code&gt;Referenceable.getReference()&lt;/code&gt;) and store that instead.</source>
          <target state="translated">此方法可以返回 &lt;code&gt;Referenceable&lt;/code&gt; 对象。获得此对象的服务提供商可以选择直接存储它，或提取其引用（使用 &lt;code&gt;Referenceable.getReference()&lt;/code&gt; ）并存储它。</target>
        </trans-unit>
        <trans-unit id="da7254c2e453139e7d81c839c28178b8c6fa54f3" translate="yes" xml:space="preserve">
          <source>This method may return different results at different times if new charset providers are dynamically made available to the current Java virtual machine. In the absence of such changes, the charsets returned by this method are exactly those that can be retrieved via the &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果新的字符集提供程序动态地可用于当前Java虚拟机，则此方法可能在不同的时间返回不同的结果。在没有此类更改的情况下，此方法返回的字符集正是可以通过&lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt;方法检索的字符集。</target>
        </trans-unit>
        <trans-unit id="7f24bb45581493e48b7f661a1b82a7f31f609480" translate="yes" xml:space="preserve">
          <source>This method may skip more bytes than what are remaining in the backing file. This produces no exception and the number of bytes skipped may include some number of bytes that were beyond the EOF of the backing file. Attempting to read from the stream after skipping past the end will result in -1 indicating the end of the file.</source>
          <target state="translated">这种方法跳过的字节数可能会超过备份文件中剩余的字节数。这不会产生异常,跳过的字节数可能包括一些超出支持文件EOF的字节数。跳过结束后试图从流中读取将导致-1表示文件的结束。</target>
        </trans-unit>
        <trans-unit id="923be3cc88e0a663d7b51f4ac429f46de54928ec" translate="yes" xml:space="preserve">
          <source>This method may skip over some smaller number of bytes, possibly zero. This may result from any of a number of conditions; reaching end of file before &lt;code&gt;n&lt;/code&gt; bytes have been skipped is only one possibility. This method never throws an &lt;code&gt;EOFException&lt;/code&gt;. The actual number of bytes skipped is returned. If &lt;code&gt;n&lt;/code&gt; is negative, no bytes are skipped.</source>
          <target state="translated">此方法可能会跳过一些较小的字节，可能为零。这可能是由多种条件引起的；在跳过 &lt;code&gt;n&lt;/code&gt; 个字节之前到达文件末尾只是一种可能。此方法从不抛出 &lt;code&gt;EOFException&lt;/code&gt; 。返回跳过的实际字节数。如果 &lt;code&gt;n&lt;/code&gt; 为负，则不跳过任何字节。</target>
        </trans-unit>
        <trans-unit id="9dc8470ea65d899fbd4dd0997bc48338122f1883" translate="yes" xml:space="preserve">
          <source>This method merely returns its input argument, and should be overridden if a different behavior is desired.</source>
          <target state="translated">这个方法只是返回它的输入参数,如果需要不同的行为,应该被重写。</target>
        </trans-unit>
        <trans-unit id="5bd8c6cf18e8e46ae4a0cc3b0f01ad2aa17751cb" translate="yes" xml:space="preserve">
          <source>This method modifies the failure handling of native method resolution by allowing retry with a prefix applied to the name. When used with the &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;, it enables native methods to be instrumented.</source>
          <target state="translated">该方法通过允许重命名使用前缀来修改本机方法解析的失败处理。与&lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; 结合&lt;/a&gt;使用时，它可以检测本机方法。</target>
        </trans-unit>
        <trans-unit id="53988dcf2de030bbb27d66e1d6c644d3b1170749" translate="yes" xml:space="preserve">
          <source>This method must be called before any handshaking occurs. Once handshaking has begun, the mode can not be reset for the life of this engine.</source>
          <target state="translated">本方法必须在任何握手发生之前被调用。一旦开始握手,在这个引擎的生命周期内,模式不能被重置。</target>
        </trans-unit>
        <trans-unit id="e83ca4f94b5e856bf345a5a28a34bbb8222496f0" translate="yes" xml:space="preserve">
          <source>This method must be called before any handshaking occurs. Once handshaking has begun, the mode can not be reset for the life of this socket.</source>
          <target state="translated">在任何握手发生之前,必须调用此方法。一旦开始握手,在这个插座的生命周期内,模式不能被重置。</target>
        </trans-unit>
        <trans-unit id="6714c3f6386191bb9adf91778e4996153817aa27" translate="yes" xml:space="preserve">
          <source>This method must be called before the URLConnection is connected.</source>
          <target state="translated">这个方法必须在连接URLConnection之前被调用。</target>
        </trans-unit>
        <trans-unit id="8d88e48c68fa8723650976667e833fbbfd253899" translate="yes" xml:space="preserve">
          <source>This method must be invoked before the thread is started.</source>
          <target state="translated">这个方法必须在线程启动前被调用。</target>
        </trans-unit>
        <trans-unit id="c537a6163a608514f6803c2d83a2e684e7049a56" translate="yes" xml:space="preserve">
          <source>This method must be invoked by the selector for each channel that it deregisters.</source>
          <target state="translated">这个方法必须由选择器为它取消注册的每个通道调用。</target>
        </trans-unit>
        <trans-unit id="1e8908d2562fe196f4aef565cdc960976a82fcba" translate="yes" xml:space="preserve">
          <source>This method obtains a snapshot of the thread information for each thread including:</source>
          <target state="translated">本方法获取每个线程的线程信息快照,包括。</target>
        </trans-unit>
        <trans-unit id="fbc6751ae1120e298b55963c4065a790ece5e6a4" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two date-times on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;localdatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDateTime)&lt;/code&gt;&lt;/a&gt;, but is the same approach as &lt;a href=&quot;chrono/chronolocaldatetime#timeLineOrder--&quot;&gt;&lt;code&gt;ChronoLocalDateTime.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法仅考虑两个日期时间在本地时间轴上的位置。它没有考虑时间顺序或日历系统。这与&lt;a href=&quot;localdatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDateTime)&lt;/code&gt; 中&lt;/a&gt;的比较不同，但是与&lt;a href=&quot;chrono/chronolocaldatetime#timeLineOrder--&quot;&gt; &lt;code&gt;ChronoLocalDateTime.timeLineOrder()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="585cc4b707d09b7dc8558a4982a674f3f799b6ed" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two dates on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; but is the same approach as &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt;&lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法仅考虑两个日期在本地时间轴上的位置。它没有考虑时间顺序或日历系统。这与&lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt; 中&lt;/a&gt;的比较不同，但与&lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt; &lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="8ea0ec144dd39297131d80af6503e189f30d9178" translate="yes" xml:space="preserve">
          <source>This method only considers the position of the two dates on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in &lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;, but is the same approach as &lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt;&lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法仅考虑两个日期在本地时间轴上的位置。它没有考虑时间顺序或日历系统。这与&lt;a href=&quot;localdate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(ChronoLocalDate)&lt;/code&gt; 中&lt;/a&gt;的比较不同，但与&lt;a href=&quot;chrono/chronolocaldate#timeLineOrder--&quot;&gt; &lt;code&gt;ChronoLocalDate.timeLineOrder()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="40f3da24e5f000fd999ef612e2bc133df542fe7d" translate="yes" xml:space="preserve">
          <source>This method only has any effect when the local time-line overlaps, such as at an autumn daylight savings cutover. In this scenario, there are two valid offsets for the local date-time. Calling this method will return a zoned date-time with the earlier of the two selected.</source>
          <target state="translated">这种方法只有在本地时间线重叠时才有效果,比如在秋季夏令时的交接期。在这种情况下,当地的日期-时间有两个有效的偏移。调用此方法将返回一个选择了两个中较早的一个的分区日期时间。</target>
        </trans-unit>
        <trans-unit id="09d63e9b31f13d4f1052dfa79b756cd792c270b5" translate="yes" xml:space="preserve">
          <source>This method only has any effect when the local time-line overlaps, such as at an autumn daylight savings cutover. In this scenario, there are two valid offsets for the local date-time. Calling this method will return a zoned date-time with the later of the two selected.</source>
          <target state="translated">这种方法只有在本地时间线重叠时才有效果,比如在秋季夏令时的交接期。在这种情况下,当地的日期-时间有两个有效的偏移。调用此方法将返回一个选择了两个偏移量中较后一个的区间日期时间。</target>
        </trans-unit>
        <trans-unit id="436833a5dfb55f56eaeb20dd9bec11e5315c4a12" translate="yes" xml:space="preserve">
          <source>This method opens or creates a file in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt; method with the exception that the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option may not be present in the array of options. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">此方法完全按照&lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt;方法指定的方式打开或创建文件，但选项数组中可能不存在&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;选项。如果不存在任何选项，则此方法将像存在&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项一样工作。换句话说，它打开文件进行写入，如果不存在则创建文件，或者如果存在则将最初的&lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;截短为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37e62c39d9a09d082fe370715e30bf0eabb2249a" translate="yes" xml:space="preserve">
          <source>This method opens or creates a file in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法完全按照&lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt;方法指定的方式打开或创建文件。</target>
        </trans-unit>
        <trans-unit id="feec24e706b56315c8dded7e31f8035d74b253c7" translate="yes" xml:space="preserve">
          <source>This method operates on a set in order to allow interdependent changes to more than one class at the same time (a redefinition of class A can require a redefinition of class B).</source>
          <target state="translated">这个方法在一个集合上操作,以允许同时对一个以上的类进行相互依赖的改变(A类的重新定义可能需要B类的重新定义)。</target>
        </trans-unit>
        <trans-unit id="56443cbcb58f600320fc73c90bcfbc2314029f70" translate="yes" xml:space="preserve">
          <source>This method operates on a set in order to allow interdependent changes to more than one class at the same time (a retransformation of class A can require a retransformation of class B).</source>
          <target state="translated">这个方法在一个集合上操作,以允许同时对多个类进行相互依赖的改变(类A的重新转换可能需要类B的重新转换)。</target>
        </trans-unit>
        <trans-unit id="9b88b0314e8964d6f6880b1f7449e849c27699b2" translate="yes" xml:space="preserve">
          <source>This method otherwise behaves exactly as specified by the &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">否则，此方法的行为与&lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;接口指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="e8dab872b8c34f5edb3cbf1f8640b7748f6cc2ad" translate="yes" xml:space="preserve">
          <source>This method otherwise behaves exactly as specified by the &lt;a href=&quot;channel#close--&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">否则，此方法的行为与&lt;a href=&quot;channel#close--&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;接口指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="7058d06e3fc1267459142e765dad5a92635b33b3" translate="yes" xml:space="preserve">
          <source>This method outputs the comments, properties keys and values in the same format as specified in &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer)&lt;/code&gt;&lt;/a&gt;, with the following differences:</source>
          <target state="translated">此方法以与&lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer)&lt;/code&gt; 中&lt;/a&gt;指定的格式相同的格式输出注释，属性键和值，但有以下区别：</target>
        </trans-unit>
        <trans-unit id="58cffd3c9019d2e4ede3c3ad5f623a893866df11" translate="yes" xml:space="preserve">
          <source>This method parses the ID producing a &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt;. A &lt;code&gt;ZoneOffset&lt;/code&gt; is returned if the ID is 'Z', or starts with '+' or '-'. The result will always be a valid ID for which &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;ZoneRules&lt;/code&gt;&lt;/a&gt; can be obtained.</source>
          <target state="translated">此方法解析ID产生 &lt;code&gt;ZoneId&lt;/code&gt; 或 &lt;code&gt;ZoneOffset&lt;/code&gt; 。甲 &lt;code&gt;ZoneOffset&lt;/code&gt; 返回如果ID是&amp;ldquo;Z&amp;rdquo;，或者与&amp;ldquo;+&amp;rdquo;或&amp;ldquo; - &amp;rdquo;开始。结果将始终是可获取&lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;ZoneRules&lt;/code&gt; &lt;/a&gt;的有效ID 。</target>
        </trans-unit>
        <trans-unit id="48ad44d8a5bf7e11a75450148c73fef22e59b63b" translate="yes" xml:space="preserve">
          <source>This method parses the string ID of a &lt;code&gt;ZoneOffset&lt;/code&gt; to return an instance. The parsing accepts all the formats generated by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;, plus some additional formats:</source>
          <target state="translated">此方法解析 &lt;code&gt;ZoneOffset&lt;/code&gt; 的字符串ID 以返回实例。解析接受&lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; &lt;/a&gt;生成的所有格式，以及一些其他格式：</target>
        </trans-unit>
        <trans-unit id="fe868bd6b02f7ad834e8d18908b4c4ad798f17e8" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It returns only after at least one channel is selected, this selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, or the current thread is interrupted, whichever comes first.</source>
          <target state="translated">此方法执行块&lt;a href=&quot;#selop&quot;&gt;选择操作&lt;/a&gt;。仅在选择了至少一个通道，调用此选择器的&lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;方法或中断当前线程之后（以先到者为准），它才返回。</target>
        </trans-unit>
        <trans-unit id="995d74d48d8205b07e29e9b4d9aeec3abd63ffd5" translate="yes" xml:space="preserve">
          <source>This method performs a blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. It returns only after at least one channel is selected, this selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method is invoked, the current thread is interrupted, or the given timeout period expires, whichever comes first.</source>
          <target state="translated">此方法执行块&lt;a href=&quot;#selop&quot;&gt;选择操作&lt;/a&gt;。仅在选择了至少一个通道，调用此选择器的&lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;方法，当前线程被中断或给定的超时时间到期之后（以先到者为准），它才返回。</target>
        </trans-unit>
        <trans-unit id="8f1c48d1d6f643589c8e5dfbf396b20d53c18035" translate="yes" xml:space="preserve">
          <source>This method performs a non-blocking &lt;a href=&quot;#selop&quot;&gt;selection operation&lt;/a&gt;. If no channels have become selectable since the previous selection operation then this method immediately returns zero.</source>
          <target state="translated">该方法执行非阻塞&lt;a href=&quot;#selop&quot;&gt;选择操作&lt;/a&gt;。如果自上一次选择操作以来没有通道变为可选择通道，则此方法立即返回零。</target>
        </trans-unit>
        <trans-unit id="bc6edcbc87057fff025dbac12e99fd1dfdb47135" translate="yes" xml:space="preserve">
          <source>This method performs a syntactic check for each language range in the given &lt;code&gt;ranges&lt;/code&gt; but doesn't do validation using the IANA Language Subtag Registry.</source>
          <target state="translated">该方法对给定 &lt;code&gt;ranges&lt;/code&gt; 每种语言范围执行语法检查，但不使用IANA语言子标签注册表进行验证。</target>
        </trans-unit>
        <trans-unit id="1490e8bf02e1e8ec06bbe4a69f024c77a32d1d14" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#connect-java.net.InetAddress-int-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then this method verifies that its &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; methods permit datagrams to be received from and sent to, respectively, the given remote address.</source>
          <target state="translated">此方法执行与&lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;../../net/datagramsocket#connect-java.net.InetAddress-int-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;方法完全相同的安全检查。也就是说，如果已安装安全管理器，则此方法将验证其&lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt;方法是否允许分别从给定的远程地址接收数据报并将其发送到给定的远程地址。</target>
        </trans-unit>
        <trans-unit id="b34fa94141bd53502816c1a7c36fa40fbe9dd13b" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram received this method verifies that the source's address and port number are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method. The overhead of this security check can be avoided by first connecting the socket via the &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法执行与&lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;../../net/datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt;方法完全相同的安全检查。也就是说，如果套接字未连接到特定的远程地址并且已经安装了安全管理器，则对于接收到的每个数据报，此方法都会验证安全管理器的&lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;方法是否允许源地址和端口号。通过首先通过&lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;方法连接套接字，可以避免此安全检查的开销。</target>
        </trans-unit>
        <trans-unit id="84c7f96be391461742d324fc5929d8e5e241b5cb" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/datagramsocket#send-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram sent this method verifies that the target address and port number are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; method. The overhead of this security check can be avoided by first connecting the socket via the &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法执行与&lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;../../net/datagramsocket#send-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;方法完全相同的安全检查。也就是说，如果套接字未连接到特定的远程地址，并且已经安装了安全管理器，则对于发送的每个数据报，此方法都会验证安全管理器的&lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt;方法是否允许目标地址和端口号。通过首先通过&lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;方法连接套接字，可以避免此安全检查的开销。</target>
        </trans-unit>
        <trans-unit id="f059baa160af6899136476c6121861e8e6b93831" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/serversocket#accept--&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then for each new connection this method verifies that the address and port number of the connection's remote endpoint are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法执行与&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;../../net/serversocket#accept--&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;方法完全相同的安全检查。也就是说，如果已安装安全管理器，则对于每个新连接，此方法都会验证安全管理器的&lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;方法是否允许连接的远程端点的地址和端口号。</target>
        </trans-unit>
        <trans-unit id="3581cb3ee69a23bdc1d1589a872169572eda0976" translate="yes" xml:space="preserve">
          <source>This method performs exactly the same security checks as the &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; class. That is, if a security manager has been installed then this method verifies that its &lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; method permits connecting to the address and port number of the given remote endpoint.</source>
          <target state="translated">此方法执行与&lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;类完全相同的安全性检查。也就是说，如果已安装安全管理器，则此方法将验证其&lt;a href=&quot;../../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt;方法是否允许连接到给定远程端点的地址和端口号。</target>
        </trans-unit>
        <trans-unit id="92712482a935d3fa1a3b59d278f7294891b7d579" translate="yes" xml:space="preserve">
          <source>This method performs the following actions:</source>
          <target state="translated">本方法执行以下操作:</target>
        </trans-unit>
        <trans-unit id="af5b75c5ecc81d005d5130dff470200fcc7ba52b" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">此方法早于通用异常链接工具。现在，&lt;a href=&quot;../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt;方法是获取此信息的首选方法。</target>
        </trans-unit>
        <trans-unit id="2b05cccacb51c29a4e6bffd776c9f16cec879898" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;../throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">此方法早于通用异常链接工具。现在，&lt;a href=&quot;../throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt;方法是获取此信息的首选方法。</target>
        </trans-unit>
        <trans-unit id="fb7620b7a48c3aac8b2b5e687ba34d8d1041c708" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#getCause--&quot;&gt;&lt;code&gt;getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">此方法早于通用异常链接工具。现在，&lt;a href=&quot;namingexception#getCause--&quot;&gt; &lt;code&gt;getCause()&lt;/code&gt; &lt;/a&gt;方法是获取此信息的首选方法。</target>
        </trans-unit>
        <trans-unit id="373217f3d07b9fda22da4e0651b44b4fdd46e48f" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method is now the preferred means of recording this information.</source>
          <target state="translated">此方法早于通用异常链接工具。现在，&lt;a href=&quot;namingexception#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;方法是记录此信息的首选方法。</target>
        </trans-unit>
        <trans-unit id="fbf2fe4967250206a8a0d1a3d7fd4e6d5e552ad7" translate="yes" xml:space="preserve">
          <source>This method predates the general-purpose exception chaining facility. The &lt;a href=&quot;throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="translated">此方法早于通用异常链接工具。现在，&lt;a href=&quot;throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt;方法是获取此信息的首选方法。</target>
        </trans-unit>
        <trans-unit id="b342dd4724387234090a73bf50e3764b58ff071f" translate="yes" xml:space="preserve">
          <source>This method preserves the current AccessControlContext's DomainCombiner (which may be null) while the action is performed.</source>
          <target state="translated">此方法在执行操作时保留当前 AccessControlContext 的 DomainCombiner(可能为空)。</target>
        </trans-unit>
        <trans-unit id="9b0bde80ac998fee7b533914832671e2ab4251bd" translate="yes" xml:space="preserve">
          <source>This method produces a &lt;code&gt;String&lt;/code&gt; that can be used to create a &lt;code&gt;Pattern&lt;/code&gt; that would match the string &lt;code&gt;s&lt;/code&gt; as if it were a literal pattern.</source>
          <target state="translated">此方法产生一个 &lt;code&gt;String&lt;/code&gt; ，该字符串可用于创建与字符串 &lt;code&gt;s&lt;/code&gt; 相匹配的 &lt;code&gt;Pattern&lt;/code&gt; ，就好像它是文字模式一样。</target>
        </trans-unit>
        <trans-unit id="8b590b33bf81c5fed93e036b46ef32102a1975f9" translate="yes" xml:space="preserve">
          <source>This method produces the same result as if it computed:</source>
          <target state="translated">这种方法产生的结果和计算的结果一样。</target>
        </trans-unit>
        <trans-unit id="3bb45c5229f937a8cf28f92735d469e00c18386e" translate="yes" xml:space="preserve">
          <source>This method provides access to locale sensitive decimal style symbols.</source>
          <target state="translated">本方法提供了对区位敏感的十进制风格符号的访问。</target>
        </trans-unit>
        <trans-unit id="dbe02ffca9e772110145211893f0c71c659baf0f" translate="yes" xml:space="preserve">
          <source>This method provides early access to the &lt;code&gt;SSLSession&lt;/code&gt; being constructed. Depending on how far the handshake has progressed, some data may not yet be available for use. For example, if a remote server will be sending a Certificate chain, but that chain has yet not been processed, the &lt;code&gt;getPeerCertificates&lt;/code&gt; method of &lt;code&gt;SSLSession&lt;/code&gt; will throw a SSLPeerUnverifiedException. Once that chain has been processed, &lt;code&gt;getPeerCertificates&lt;/code&gt; will return the proper value.</source>
          <target state="translated">此方法提供对正在构造的 &lt;code&gt;SSLSession&lt;/code&gt; 的早期访问。根据握手进展的程度，某些数据可能无法使用。例如，如果远程服务器将发送证书链，但尚未处理该证书链，则 &lt;code&gt;SSLSession&lt;/code&gt; 的 &lt;code&gt;getPeerCertificates&lt;/code&gt; 方法将抛出SSLPeerUnverifiedException。处理 &lt;code&gt;getPeerCertificates&lt;/code&gt; 该链后，getPeerCertificates将返回正确的值。</target>
        </trans-unit>
        <trans-unit id="40b582df3b5fd7d10f84d86c84b12eb337cb2c75" translate="yes" xml:space="preserve">
          <source>This method provides full control of the numeric formatting, including zero-padding and the positive/negative sign.</source>
          <target state="translated">该方法提供了对数字格式的完全控制,包括零填充和正/负号。</target>
        </trans-unit>
        <trans-unit id="a48698f60ade726ad6887fc4e010d8d648c0827f" translate="yes" xml:space="preserve">
          <source>This method provides nanosecond precision, but not necessarily nanosecond resolution (that is, how frequently the value changes) - no guarantees are made except that the resolution is at least as good as that of &lt;a href=&quot;system#currentTimeMillis--&quot;&gt;&lt;code&gt;currentTimeMillis()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法提供纳秒级精度，但不一定提供纳秒级分辨率（即值更改的频率）-除了分辨率至少与&lt;a href=&quot;system#currentTimeMillis--&quot;&gt; &lt;code&gt;currentTimeMillis()&lt;/code&gt; &lt;/a&gt;一样好之外，不做任何保证。</target>
        </trans-unit>
        <trans-unit id="e50d87a069c78cb97c4c3335c0fe7321e57a5ea6" translate="yes" xml:space="preserve">
          <source>This method provides only part of a temporary-file facility. To arrange for a file created by this method to be deleted automatically, use the &lt;code&gt;&lt;a href=&quot;file#deleteOnExit--&quot;&gt;&lt;code&gt;deleteOnExit()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">此方法仅提供临时文件功能的一部分。若要安排自动删除通过此方法创建的文件，请使用 &lt;code&gt;&lt;a href=&quot;file#deleteOnExit--&quot;&gt;&lt;code&gt;deleteOnExit()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c2adabfd1769b7ee012ef820eff09872bd1de51a" translate="yes" xml:space="preserve">
          <source>This method provides the crucial behavioral difference between &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and plain, inexact &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. The two methods perform the same steps when the caller's type descriptor exactly m atches the callee's, but when the types differ, plain &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; also calls &lt;code&gt;asType&lt;/code&gt; (or some internal equivalent) in order to match up the caller's and callee's types.</source>
          <target state="translated">此方法提供了&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;和普通的，不精确的&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;之间的关键行为差异。当调用方的类型描述符恰好匹配被调用方时，这两种方法执行相同的步骤，但是当类型不同时，普通&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;还会调用 &lt;code&gt;asType&lt;/code&gt; （或一些内部等效项）以匹配调用方和被调用方的类型。</target>
        </trans-unit>
        <trans-unit id="95a70b87ad9186a2bd67cf2e1713ebf2096743a4" translate="yes" xml:space="preserve">
          <source>This method provides the opportunity for a provider to dynamically recheck the underlying data provider to find the latest rules. This could be used to load new rules without stopping the JVM. Dynamic behavior is entirely optional and most providers do not support it.</source>
          <target state="translated">该方法为提供者提供了动态地重新检查底层数据提供者以找到最新规则的机会。这可以用来加载新的规则而无需停止JVM。动态行为完全是可选的,大多数提供者不支持它。</target>
        </trans-unit>
        <trans-unit id="049c1d2839e24541bb971c957e2c2e05dfa2c27a" translate="yes" xml:space="preserve">
          <source>This method quietly returns if the access request is permitted, or throws a suitable AccessControlException otherwise.</source>
          <target state="translated">如果访问请求被允许,这个方法会悄悄返回,否则会抛出一个合适的AccessControlException。</target>
        </trans-unit>
        <trans-unit id="572f87a523bb0d73773cc2dc794c878b1676de15" translate="yes" xml:space="preserve">
          <source>This method reads characters from the input sequence, starting at the append position, and appends them to the given string buffer. It is intended to be invoked after one or more invocations of the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method in order to copy the remainder of the input sequence.</source>
          <target state="translated">此方法从输入序列读取字符，从附加位置开始，然后将它们附加到给定的字符串缓冲区。它打算在一次或多次调用&lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;方法之后被调用，以复制输入序列的其余部分。</target>
        </trans-unit>
        <trans-unit id="652c63ff48c563db809e64870889ccb394b4ee92" translate="yes" xml:space="preserve">
          <source>This method reads the value of the attribute into the given buffer as a sequence of bytes, failing if the number of bytes remaining in the buffer is insufficient to read the complete attribute value. The number of bytes transferred into the buffer is &lt;code&gt;n&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the size of the attribute value. The first byte in the sequence is at index &lt;code&gt;p&lt;/code&gt; and the last byte is at index &lt;code&gt;p + n - 1&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is the buffer's position. Upon return the buffer's position will be equal to &lt;code&gt;p + n&lt;/code&gt;; its limit will not have changed.</source>
          <target state="translated">此方法将属性值作为字节序列读取到给定的缓冲区中，如果缓冲区中剩余的字节数不足以读取完整的属性值，则此方法将失败。传输到缓冲区的字节数为 &lt;code&gt;n&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是属性值的大小。序列中的第一个字节在索引 &lt;code&gt;p&lt;/code&gt; 处，最后一个字节在索引 &lt;code&gt;p + n - 1&lt;/code&gt; ，其中 &lt;code&gt;p&lt;/code&gt; 是缓冲区的位置。返回时，缓冲区的位置将等于 &lt;code&gt;p + n&lt;/code&gt; ；它的限制不会改变。</target>
        </trans-unit>
        <trans-unit id="a1da4c3d651c3ca5da497e0fea90ae1b5f4dc6e2" translate="yes" xml:space="preserve">
          <source>This method recognizes the following as line terminators:</source>
          <target state="translated">本方法将以下内容识别为行终止符。</target>
        </trans-unit>
        <trans-unit id="3f6abde40b619fbe1c03871b6834fc2f750f80a9" translate="yes" xml:space="preserve">
          <source>This method relies on time-zone data provider files that are configured. These are loaded using a &lt;code&gt;ServiceLoader&lt;/code&gt;.</source>
          <target state="translated">此方法依赖于配置的时区数据提供程序文件。这些是使用 &lt;code&gt;ServiceLoader&lt;/code&gt; 加载的。</target>
        </trans-unit>
        <trans-unit id="7b334a9e756939b80cb0fc7832f8ab972905fb6b" translate="yes" xml:space="preserve">
          <source>This method removes one or more &lt;code&gt;NotificationListener&lt;/code&gt;s from a given MBean in the MBean server.</source>
          <target state="translated">此方法从MBean服务器中的给定MBean 移除一个或多个 &lt;code&gt;NotificationListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69a9cccb73fd1dcaec810b50ba17145dcc1f1eb4" translate="yes" xml:space="preserve">
          <source>This method repeatedly calls &lt;code&gt;blocker.isReleasable()&lt;/code&gt; and &lt;code&gt;blocker.block()&lt;/code&gt; until either method returns &lt;code&gt;true&lt;/code&gt;. Every call to &lt;code&gt;blocker.block()&lt;/code&gt; is preceded by a call to &lt;code&gt;blocker.isReleasable()&lt;/code&gt; that returned &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">此方法反复调用 &lt;code&gt;blocker.isReleasable()&lt;/code&gt; 和 &lt;code&gt;blocker.block()&lt;/code&gt; ,直到任一方法返回 &lt;code&gt;true&lt;/code&gt; 为止。对每一个呼叫 &lt;code&gt;blocker.block()&lt;/code&gt; 是通过将呼叫之前 &lt;code&gt;blocker.isReleasable()&lt;/code&gt; 传回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7853e76105b8b5bdb8f93921dcc5e269386e0ab" translate="yes" xml:space="preserve">
          <source>This method requests the Java virtual machine to make a best-effort estimate of the current memory usage of this memory pool. For some memory pools, this method may be an expensive operation that requires some computation to determine the estimate. An implementation should document when this is the case.</source>
          <target state="translated">该方法请求Java虚拟机对该内存池当前的内存使用情况进行尽力估计。对于某些内存池来说,这个方法可能是一个昂贵的操作,需要进行一些计算来确定估计值。在这种情况下,实现应该记录下来。</target>
        </trans-unit>
        <trans-unit id="8c4c7250f9cf0a282672d75a0f1ac355d7c1e3bd" translate="yes" xml:space="preserve">
          <source>This method requires a fully initialized &lt;code&gt;Cipher&lt;/code&gt; object, initialized with the exact same algorithm, key, padding scheme, etc., that were used to seal the object.</source>
          <target state="translated">此方法需要完全初始化的 &lt;code&gt;Cipher&lt;/code&gt; 对象，并使用与密封对象完全相同的算法，键，填充方案等进行初始化。</target>
        </trans-unit>
        <trans-unit id="cf8256397909468ce6e62017714de03a52f18861" translate="yes" xml:space="preserve">
          <source>This method resets charset-independent state and also invokes the &lt;a href=&quot;charsetdecoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; method in order to perform any charset-specific reset actions.</source>
          <target state="translated">此方法重置独立于字符集的状态，并调用&lt;a href=&quot;charsetdecoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt;方法以执行任何特定于字符集的重置操作。</target>
        </trans-unit>
        <trans-unit id="3c367e5aecd4d457c426f9823a705f02c40e3ba0" translate="yes" xml:space="preserve">
          <source>This method resets charset-independent state and also invokes the &lt;a href=&quot;charsetencoder#implReset--&quot;&gt;&lt;code&gt;implReset&lt;/code&gt;&lt;/a&gt; method in order to perform any charset-specific reset actions.</source>
          <target state="translated">此方法重置独立于字符集的状态，并调用&lt;a href=&quot;charsetencoder#implReset--&quot;&gt; &lt;code&gt;implReset&lt;/code&gt; &lt;/a&gt;方法以执行任何特定于字符集的重置操作。</target>
        </trans-unit>
        <trans-unit id="e2d347d8a78945c1f4bfc96bfe2d38b4f2f7d750" translate="yes" xml:space="preserve">
          <source>This method resets the encapsulated cipher object to its initial state and calls the &lt;code&gt;close&lt;/code&gt; method of the underlying output stream.</source>
          <target state="translated">此方法将封装的密码对象重置为其初始状态，并调用基础输出流的 &lt;code&gt;close&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b0014eaf85a34018f0b1ffca15df447a2ff5af67" translate="yes" xml:space="preserve">
          <source>This method resets this &lt;code&gt;KeyAgreement&lt;/code&gt; object, so that it can be reused for further key agreements. Unless this key agreement is reinitialized with one of the &lt;code&gt;init&lt;/code&gt; methods, the same private information and algorithm parameters will be used for subsequent key agreements.</source>
          <target state="translated">此方法重置此 &lt;code&gt;KeyAgreement&lt;/code&gt; 对象，以便可以将其重新用于其他密钥协议。除非使用一种 &lt;code&gt;init&lt;/code&gt; 方法重新初始化此密钥协议，否则相同的私有信息和算法参数将用于后续的密钥协议。</target>
        </trans-unit>
        <trans-unit id="2af47a7eb2c65c1b4226311342f5caaa4f6fd55d" translate="yes" xml:space="preserve">
          <source>This method resets this &lt;code&gt;KeyAgreementSpi&lt;/code&gt; object, so that it can be reused for further key agreements. Unless this key agreement is reinitialized with one of the &lt;code&gt;engineInit&lt;/code&gt; methods, the same private information and algorithm parameters will be used for subsequent key agreements.</source>
          <target state="translated">此方法重置此 &lt;code&gt;KeyAgreementSpi&lt;/code&gt; 对象，以便可以将其重新用于其他密钥协议。除非使用 &lt;code&gt;engineInit&lt;/code&gt; 方法之一重新初始化此密钥协议，否则相同的私有信息和算法参数将用于后续的密钥协议。</target>
        </trans-unit>
        <trans-unit id="a3816a78b2c5c245cc0677d29fbd42432e5fa590" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;&quot;null&quot;&lt;/code&gt; if the specified array is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果指定的数组为 &lt;code&gt;null&lt;/code&gt; ,则此方法返回 &lt;code&gt;&quot;null&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9347d39073409bd55de2e353e3ba943be21291d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if the given character is a surrogate character; such characters can be interpreted only when they are members of a pair consisting of a high surrogate followed by a low surrogate. The &lt;a href=&quot;charsetencoder#canEncode-java.lang.CharSequence-&quot;&gt;&lt;code&gt;canEncode(CharSequence)&lt;/code&gt;&lt;/a&gt; method may be used to test whether or not a character sequence can be encoded.</source>
          <target state="translated">如果给定字符是代理字符，则此方法返回 &lt;code&gt;false&lt;/code&gt; ;否则，该方法返回false。只有当这些字符是由高替代词和低替代词组成的配对中的成员时，才能解释这些字符。所述&lt;a href=&quot;charsetencoder#canEncode-java.lang.CharSequence-&quot;&gt; &lt;code&gt;canEncode(CharSequence)&lt;/code&gt; &lt;/a&gt;方法可以被用来测试一个字符序列是否能够进行编码。</target>
        </trans-unit>
        <trans-unit id="d19bf57702f6a86acc5e2101dc28f0546eeb843d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;null&lt;/code&gt; if the thread is not in any of the above conditions.</source>
          <target state="translated">如果线程不在以上任何条件下，则此方法返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ecf4e22b67d369d7123e504ea55b1efe7496a5a" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;var&gt;obj&lt;/var&gt; is not null and &lt;var&gt;obj&lt;/var&gt;'s class name is the same as the className field defined for this &lt;code&gt;SimpleType&lt;/code&gt; instance (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">当且仅当 &lt;var&gt;obj&lt;/var&gt; 不为null且 &lt;var&gt;obj&lt;/var&gt; 的类名与此 &lt;code&gt;SimpleType&lt;/code&gt; 实例定义的className字段相同（即&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;方法返回的类名）时，此方法返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6694646d2b9be9f9e17ce0555751ce403d83976d" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if and only if &lt;var&gt;obj&lt;/var&gt; is not null, &lt;var&gt;obj&lt;/var&gt; is an array and any one of the following is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">当且仅当 &lt;var&gt;obj&lt;/var&gt; 不为null， &lt;var&gt;obj&lt;/var&gt; 是一个数组且以下任意一项为 &lt;code&gt;true&lt;/code&gt; 时，此方法返回 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="434ad6018f88106e270997a09fba944128dfdee4" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;true&lt;/code&gt; if this matcher uses</source>
          <target state="translated">如果此匹配器使用此方法，则返回 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9f4740e1d967f29b8a591631fdce83ae9b599e9" translate="yes" xml:space="preserve">
          <source>This method returns Strings in the format as specified in &lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt;&lt;code&gt;getName(String)&lt;/code&gt;&lt;/a&gt; and also emits additional attribute type keywords for OIDs that have entries in the &lt;code&gt;oidMap&lt;/code&gt; parameter. OID entries in the oidMap take precedence over the default OIDs recognized by &lt;code&gt;getName(String)&lt;/code&gt;. Improperly specified OIDs are ignored; however if an OID in the name maps to an improperly specified keyword, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">此方法以&lt;a href=&quot;x500principal#getName-java.lang.String-&quot;&gt; &lt;code&gt;getName(String)&lt;/code&gt; 中&lt;/a&gt;指定的格式返回String，并且还为在 &lt;code&gt;oidMap&lt;/code&gt; 参数中具有条目的OID发出其他属性类型关键字。 oidMap中的OID条目优先于 &lt;code&gt;getName(String)&lt;/code&gt; 识别的默认OID 。指定不正确的OID将被忽略；但是，如果名称中的OID映射到指定不正确的关键字，则会引发 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f775b32d8b84056f67ed090a303c87ddab0e3e05" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination, in the same manner as the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method. Most implementations of this method will handle decoding errors by returning an appropriate result object for interpretation by the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method. An optimized implementation may instead examine the relevant error action and implement that action itself.</source>
          <target state="translated">此方法以与&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;方法相同的方式返回&lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt;对象以描述其终止原因。此方法的大多数实现将通过返回适当的结果对象以供&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;方法进行解释的方式来处理解码错误。优化的实现可以代替地检查相关的错误动作并自己执行该动作。</target>
        </trans-unit>
        <trans-unit id="af7492e94d777f895b648e30cde9e372fc30473a" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object to describe its reason for termination, in the same manner as the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method. Most implementations of this method will handle encoding errors by returning an appropriate result object for interpretation by the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method. An optimized implementation may instead examine the relevant error action and implement that action itself.</source>
          <target state="translated">此方法以与&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;方法相同的方式返回&lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt;对象，以描述其终止原因。此方法的大多数实现都将通过返回适当的结果对象以供&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;方法解释的方式来处理编码错误。优化的实现可以代替地检查相关的错误动作并自己执行该动作。</target>
        </trans-unit>
        <trans-unit id="3fc0807b65e2e62098494bdaecf746a629ac404f" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;ThreadInfo&lt;/code&gt; object representing the thread information for the thread of the specified ID. The stack trace, locked monitors, and locked synchronizers in the returned &lt;code&gt;ThreadInfo&lt;/code&gt; object will be empty. If a thread of the given ID is not alive or does not exist, this method will return &lt;code&gt;null&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">此方法返回一个 &lt;code&gt;ThreadInfo&lt;/code&gt; 对象，该对象表示指定ID的线程的线程信息。返回的 &lt;code&gt;ThreadInfo&lt;/code&gt; 对象中的堆栈跟踪，锁定的监视器和锁定的同步器将为空。如果给定ID的线程不存在或不存在，则此方法将返回 &lt;code&gt;null&lt;/code&gt; 。如果线程已经启动但尚未死亡，则该线程是活动的。</target>
        </trans-unit>
        <trans-unit id="4598419cdffeadc400039e9736ba9ad1774a776c" translate="yes" xml:space="preserve">
          <source>This method returns a copy of the retrieved password.</source>
          <target state="translated">本方法返回检索到的密码的副本。</target>
        </trans-unit>
        <trans-unit id="cd1f9c6ab0d681cc17bde0986b4f2d3f4c2a5336" translate="yes" xml:space="preserve">
          <source>This method returns a historically correct offset if an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.</source>
          <target state="translated">如果基础 &lt;code&gt;TimeZone&lt;/code&gt; 实现子类支持历史夏时制时间表和GMT偏移量更改，则此方法将返回历史上正确的偏移量。</target>
        </trans-unit>
        <trans-unit id="578877b97e2dd9db3f5a4d5ba6e568b208ee1d00" translate="yes" xml:space="preserve">
          <source>This method returns a historically correct offset value if an underlying TimeZone implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.</source>
          <target state="translated">如果底层的TimeZone实现子类支持历史上的夏令时时间表和GMT偏移量变化,则该方法返回一个历史上正确的偏移值。</target>
        </trans-unit>
        <trans-unit id="cf880fb085eb8e006866ff6bc11e25f2fdc4f18d" translate="yes" xml:space="preserve">
          <source>This method returns a new object based on this one with the specified period added. For example, on a &lt;code&gt;LocalDate&lt;/code&gt;, this could be used to add a number of years, months or days. The returned object will have the same observable type as this object.</source>
          <target state="translated">此方法基于添加了指定时间的该对象返回一个新对象。例如，在 &lt;code&gt;LocalDate&lt;/code&gt; 上，这可以用于添加若干年，数月或数天。返回的对象将具有与此对象相同的可观察类型。</target>
        </trans-unit>
        <trans-unit id="ce46bbe6b70b68c4de2951301dcd5af3392b7067" translate="yes" xml:space="preserve">
          <source>This method returns a new object based on this one with the specified period subtracted. For example, on a &lt;code&gt;LocalDate&lt;/code&gt;, this could be used to subtract a number of years, months or days. The returned object will have the same observable type as this object.</source>
          <target state="translated">此方法基于此对象返回一个新对象，并减去指定的周期。例如，在 &lt;code&gt;LocalDate&lt;/code&gt; 上，这可用于减去若干年，数月或数天。返回的对象将具有与此对象相同的可观察类型。</target>
        </trans-unit>
        <trans-unit id="4995e2e9d492fba15617d1713716ea64da919048" translate="yes" xml:space="preserve">
          <source>This method returns a positive duration by effectively removing the sign from any negative total length. For example, &lt;code&gt;PT-1.3S&lt;/code&gt; will be returned as &lt;code&gt;PT1.3S&lt;/code&gt;.</source>
          <target state="translated">该方法通过有效地从任何负的总长度中删除符号来返回正的持续时间。例如， &lt;code&gt;PT-1.3S&lt;/code&gt; 将作为 &lt;code&gt;PT1.3S&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="f98a2bc5ef45c3b2175e8511a4543985d9ec14d2" translate="yes" xml:space="preserve">
          <source>This method returns a reference to a &lt;code&gt;FileSystem&lt;/code&gt; that was created by invoking the &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. File systems created the &lt;a href=&quot;filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt;&lt;/a&gt; method are not returned by this method. The file system is identified by its &lt;code&gt;URI&lt;/code&gt;. Its exact form is highly provider dependent. In the case of the default provider the URI's path component is &lt;code&gt;&quot;/&quot;&lt;/code&gt; and the authority, query and fragment components are undefined (Undefined components are represented by &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">此方法返回对通过调用&lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;方法创建的 &lt;code&gt;FileSystem&lt;/code&gt; 的引用。此方法不返回创建&lt;a href=&quot;filesystemprovider#newFileSystem-java.nio.file.Path-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(Path,Map)&lt;/code&gt; &lt;/a&gt;方法的文件系统。文件系统由其 &lt;code&gt;URI&lt;/code&gt; 标识。其确切形式高度依赖于提供者。对于默认提供程序，URI的路径组件为 &lt;code&gt;&quot;/&quot;&lt;/code&gt; ，并且权限，查询和片段组件未定义（未定义的组件由 &lt;code&gt;null&lt;/code&gt; 表示）。</target>
        </trans-unit>
        <trans-unit id="d3d9e3f858796b64acde060879ce45b8d881f617" translate="yes" xml:space="preserve">
          <source>This method returns all the printing attribute categories this print service supports for any possible job. Some categories may not be supported in a particular context (ie for a particular &lt;code&gt;DocFlavor&lt;/code&gt;). Use one of the methods that include a &lt;code&gt;DocFlavor&lt;/code&gt; to validate the request before submitting it, such as &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.</source>
          <target state="translated">此方法返回此打印服务支持的所有可能的作业的所有打印属性类别。在特定上下文中（例如，特定 &lt;code&gt;DocFlavor&lt;/code&gt; ）可能不支持某些类别。使用包含 &lt;code&gt;DocFlavor&lt;/code&gt; 的方法之一在提交之前验证请求，例如 &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a27e98ed975b6fbde54735985b3c18e81ef5eb5f" translate="yes" xml:space="preserve">
          <source>This method returns an Object because different printing attribute categories indicate the supported attribute values in different ways. The documentation for each printing attribute in package &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; describes how each attribute indicates its supported values. Possible ways of indicating support include:</source>
          <target state="translated">此方法返回一个Object，因为不同的打印属性类别以不同的方式指示支持的属性值。软件包&lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中&lt;/a&gt;有关每个打印属性的文档描述了每个属性如何指示其支持的值。表示支持的可能方式包括：</target>
        </trans-unit>
        <trans-unit id="22e7584f26d52ab68f8f1bfdea8be12715c8e2f2" translate="yes" xml:space="preserve">
          <source>This method returns an array of &lt;a href=&quot;threadinfo&quot;&gt;&lt;code&gt;ThreadInfo&lt;/code&gt;&lt;/a&gt; objects as specified in the &lt;a href=&quot;threadmxbean#getThreadInfo-long:A-boolean-boolean-&quot;&gt;&lt;code&gt;getThreadInfo(long[], boolean, boolean)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法返回&lt;a href=&quot;threadmxbean#getThreadInfo-long:A-boolean-boolean-&quot;&gt; &lt;code&gt;getThreadInfo(long[], boolean, boolean)&lt;/code&gt; &lt;/a&gt;方法中指定的&lt;a href=&quot;threadinfo&quot;&gt; &lt;code&gt;ThreadInfo&lt;/code&gt; &lt;/a&gt;对象数组。</target>
        </trans-unit>
        <trans-unit id="96cee8a868089e071178e8cf360a91b1597daac9" translate="yes" xml:space="preserve">
          <source>This method returns an array of &lt;code&gt;File&lt;/code&gt; objects that denote the root directories of the available filesystem roots. It is guaranteed that the canonical pathname of any file physically present on the local machine will begin with one of the roots returned by this method.</source>
          <target state="translated">此方法返回一个 &lt;code&gt;File&lt;/code&gt; 对象数组，这些对象表示可用文件系统根目录的根目录。可以确保本地计算机上物理上存在的任何文件的规范路径名都将从此方法返回的根目录之一开始。</target>
        </trans-unit>
        <trans-unit id="6fd82c48fff0fda384c4e3bd2af562ca71729df9" translate="yes" xml:space="preserve">
          <source>This method returns an array of the &lt;code&gt;ThreadInfo&lt;/code&gt; objects, each is the thread information about the thread with the same index as in the &lt;code&gt;ids&lt;/code&gt; array. If a thread of the given ID is not alive or does not exist, &lt;code&gt;null&lt;/code&gt; will be set in the corresponding element in the returned array. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">此方法返回 &lt;code&gt;ThreadInfo&lt;/code&gt; 对象的数组，每个对象都是有关线程的线程信息，其索引与 &lt;code&gt;ids&lt;/code&gt; 数组中的索引相同。如果给定ID的线程不存在或不存在，则将在返回数组的相应元素中设置 &lt;code&gt;null&lt;/code&gt; 。如果线程已经启动但尚未死亡，则该线程是活动的。</target>
        </trans-unit>
        <trans-unit id="ad388440ab095ed3394cdf7678373f9ea4ea5481" translate="yes" xml:space="preserve">
          <source>This method returns an array of the &lt;code&gt;ThreadInfo&lt;/code&gt; objects. The stack trace, locked monitors, and locked synchronizers in each &lt;code&gt;ThreadInfo&lt;/code&gt; object will be empty. If a thread of a given ID is not alive or does not exist, the corresponding element in the returned array will contain &lt;code&gt;null&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">此方法返回 &lt;code&gt;ThreadInfo&lt;/code&gt; 对象的数组。每个 &lt;code&gt;ThreadInfo&lt;/code&gt; 对象中的堆栈跟踪，锁定的监视器和锁定的同步器将为空。如果给定ID的线程不存在或不存在，则返回数组中的相应元素将包含 &lt;code&gt;null&lt;/code&gt; 。如果线程已经启动但尚未死亡，则该线程是活动的。</target>
        </trans-unit>
        <trans-unit id="12443d584bf87eece4a46bc4cf8d68cee84e25c5" translate="yes" xml:space="preserve">
          <source>This method returns an asynchronous server socket channel that is bound to the &lt;em&gt;default group&lt;/em&gt;. This method is equivalent to evaluating the expression:</source>
          <target state="translated">此方法返回绑定到&lt;em&gt;默认组&lt;/em&gt;的异步服务器套接字通道。此方法等效于评估表达式：</target>
        </trans-unit>
        <trans-unit id="58d374dd65abe2c7947b9e4d26a095f7bb3a058e" translate="yes" xml:space="preserve">
          <source>This method returns an asynchronous socket channel that is bound to the &lt;em&gt;default group&lt;/em&gt;.This method is equivalent to evaluating the expression:</source>
          <target state="translated">此方法返回绑定到&lt;em&gt;默认组&lt;/em&gt;的异步套接字通道。此方法等效于评估表达式：</target>
        </trans-unit>
        <trans-unit id="c859aadae0914b45b901176e23d5c1e0ed5ebaa9" translate="yes" xml:space="preserve">
          <source>This method returns an enumeration of the results. Each element in the enumeration contains the name of the object and other information about the object (see &lt;code&gt;SearchResult&lt;/code&gt;). The name is either relative to the target context of the search (which is named by the &lt;code&gt;name&lt;/code&gt; parameter), or it is a URL string. If the target context is included in the enumeration (as is possible when &lt;code&gt;cons&lt;/code&gt; specifies a search scope of &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; or &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt;), its name is the empty string.</source>
          <target state="translated">此方法返回结果的枚举。枚举中的每个元素都包含对象的名称以及有关该对象的其他信息（请参阅 &lt;code&gt;SearchResult&lt;/code&gt; ）。该名称或者相对于搜索的目标上下文（由 &lt;code&gt;name&lt;/code&gt; 参数命名），或者是URL字符串。如果目标上下文包含在枚举中（当 &lt;code&gt;cons&lt;/code&gt; 指定 &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; 或 &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt; 的搜索范围时，则可能是这样），其名称为空字符串。</target>
        </trans-unit>
        <trans-unit id="d3c94a8386b6094a7f526c48d273a5ef05aedd02" translate="yes" xml:space="preserve">
          <source>This method returns an object with the same &lt;code&gt;LocalDateTime&lt;/code&gt; and the specified &lt;code&gt;ZoneOffset&lt;/code&gt;. No calculation is needed or performed. For example, if this time represents &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;2007-12-03T10:30+03:00&lt;/code&gt;.</source>
          <target state="translated">此方法返回一个具有相同 &lt;code&gt;LocalDateTime&lt;/code&gt; 和指定的 &lt;code&gt;ZoneOffset&lt;/code&gt; 的对象。无需计算或执行任何计算。例如，如果此时间表示 &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; 且指定的偏移量为 &lt;code&gt;+03:00&lt;/code&gt; ，则此方法将返回 &lt;code&gt;2007-12-03T10:30+03:00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e49dbda5e113fb188bcad6045907c72611fa6f8" translate="yes" xml:space="preserve">
          <source>This method returns an object with the same &lt;code&gt;LocalTime&lt;/code&gt; and the specified &lt;code&gt;ZoneOffset&lt;/code&gt;. No calculation is needed or performed. For example, if this time represents &lt;code&gt;10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;10:30+03:00&lt;/code&gt;.</source>
          <target state="translated">该方法返回与同一个对象 &lt;code&gt;LocalTime&lt;/code&gt; 和指定的 &lt;code&gt;ZoneOffset&lt;/code&gt; 。无需计算或执行任何计算。例如，如果此时间表示 &lt;code&gt;+03:00&lt;/code&gt; &lt;code&gt;10:30+02:00&lt;/code&gt; 且指定的偏移量为+03：00，则此方法将返回10：30 &lt;code&gt;10:30+03:00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64a2375be194ab393d8128f2ae1822212679d38f" translate="yes" xml:space="preserve">
          <source>This method returns an object with the specified &lt;code&gt;ZoneOffset&lt;/code&gt; and a &lt;code&gt;LocalDateTime&lt;/code&gt; adjusted by the difference between the two offsets. This will result in the old and new objects representing the same instant. This is useful for finding the local time in a different offset. For example, if this time represents &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;2007-12-03T11:30+03:00&lt;/code&gt;.</source>
          <target state="translated">此方法返回一个具有指定 &lt;code&gt;ZoneOffset&lt;/code&gt; 和 &lt;code&gt;LocalDateTime&lt;/code&gt; 的对象，该对象通过两个偏移量之间的差值进行调整。这将导致旧对象和新对象表示相同的瞬间。这对于查找其他偏移量的本地时间很有用。例如，如果此时间表示 &lt;code&gt;2007-12-03T10:30+02:00&lt;/code&gt; ,并且指定的偏移量为 &lt;code&gt;+03:00&lt;/code&gt; ，则此方法将返回 &lt;code&gt;2007-12-03T11:30+03:00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a3492f34f21944e0c97ecddfccefeb8d27d851d" translate="yes" xml:space="preserve">
          <source>This method returns an object with the specified &lt;code&gt;ZoneOffset&lt;/code&gt; and a &lt;code&gt;LocalTime&lt;/code&gt; adjusted by the difference between the two offsets. This will result in the old and new objects representing the same instant on an implied day. This is useful for finding the local time in a different offset. For example, if this time represents &lt;code&gt;10:30+02:00&lt;/code&gt; and the offset specified is &lt;code&gt;+03:00&lt;/code&gt;, then this method will return &lt;code&gt;11:30+03:00&lt;/code&gt;.</source>
          <target state="translated">该方法返回与指定的对象 &lt;code&gt;ZoneOffset&lt;/code&gt; 和 &lt;code&gt;LocalTime&lt;/code&gt; 由两个偏移之间的差进行调整。这将导致旧对象和新对象在一个隐含的日期代表相同的瞬间。这对于查找其他偏移量的本地时间很有用。例如，如果此时间表示 &lt;code&gt;+03:00&lt;/code&gt; &lt;code&gt;10:30+02:00&lt;/code&gt; 并且指定的偏移量为+03：00，则此方法将返回11：30 &lt;code&gt;11:30+03:00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e54179eaa20151601ee66ab0815237b92d95925c" translate="yes" xml:space="preserve">
          <source>This method returns silently if the provider is not installed or if name is null.</source>
          <target state="translated">如果提供者没有安装或name为空,本方法将无声返回。</target>
        </trans-unit>
        <trans-unit id="096a799e0be99bdebe843ad2f3fe72056fb193da" translate="yes" xml:space="preserve">
          <source>This method returns the channel obtained by invoking the &lt;a href=&quot;../nio/channels/spi/selectorprovider#inheritedChannel--&quot;&gt;&lt;code&gt;inheritedChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;../nio/channels/spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">此方法返回通过调用系统范围的默认&lt;a href=&quot;../nio/channels/spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;../nio/channels/spi/selectorprovider#inheritedChannel--&quot;&gt; &lt;code&gt;inheritedChannel&lt;/code&gt; &lt;/a&gt;方法获得的通道。</target>
        </trans-unit>
        <trans-unit id="a22965859dd87dbbfbd8a3a69d4390902caf6f26" translate="yes" xml:space="preserve">
          <source>This method returns the enum &lt;a href=&quot;dayofweek&quot;&gt;&lt;code&gt;DayOfWeek&lt;/code&gt;&lt;/a&gt; for the day-of-week. This avoids confusion as to what &lt;code&gt;int&lt;/code&gt; values mean. If you need access to the primitive &lt;code&gt;int&lt;/code&gt; value then the enum provides the &lt;a href=&quot;dayofweek#getValue--&quot;&gt;&lt;code&gt;int value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法返回星期几的枚举&lt;a href=&quot;dayofweek&quot;&gt; &lt;code&gt;DayOfWeek&lt;/code&gt; &lt;/a&gt;。这样可以避免对 &lt;code&gt;int&lt;/code&gt; 值的含义感到困惑。如果需要访问原始 &lt;code&gt;int&lt;/code&gt; 值，则枚举将提供&lt;a href=&quot;dayofweek#getValue--&quot;&gt; &lt;code&gt;int value&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f094b9734e58036cc7f0d7e749cf03913864efae" translate="yes" xml:space="preserve">
          <source>This method returns the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; for the month. This avoids confusion as to what &lt;code&gt;int&lt;/code&gt; values mean. If you need access to the primitive &lt;code&gt;int&lt;/code&gt; value then the enum provides the &lt;a href=&quot;month#getValue--&quot;&gt;&lt;code&gt;int value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法返回该&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt;的枚举月。这样可以避免对 &lt;code&gt;int&lt;/code&gt; 值的含义感到困惑。如果需要访问原始 &lt;code&gt;int&lt;/code&gt; 值，则枚举将提供&lt;a href=&quot;month#getValue--&quot;&gt; &lt;code&gt;int value&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e14b1a452ffeac588fdbd1918c1e714acd4a2e7" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;localdate#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法以1到12之间的 &lt;code&gt;int&lt;/code&gt; 返回月份。如果通过调用&lt;a href=&quot;localdate#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt;使用枚举&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; ,&lt;/a&gt;则应用程序代码通常会更清晰。</target>
        </trans-unit>
        <trans-unit id="ec0b53bcb0115598582f28d1f5dd31562d18e95b" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;localdatetime#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法以1到12之间的 &lt;code&gt;int&lt;/code&gt; 返回月份。如果通过调用&lt;a href=&quot;localdatetime#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt;使用枚举&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; ,&lt;/a&gt;则应用程序代码通常会更清晰。</target>
        </trans-unit>
        <trans-unit id="2c9518bbc958f1ef7f4a5267280c5f3b9fa7fda7" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;monthday#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法以1到12之间的 &lt;code&gt;int&lt;/code&gt; 返回月份。如果通过调用&lt;a href=&quot;monthday#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt;使用枚举&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; ,&lt;/a&gt;则应用程序代码通常会更清晰。</target>
        </trans-unit>
        <trans-unit id="99f4fa75f86be0f9d463226662b550280e30d1b9" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;offsetdatetime#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法以1到12之间的 &lt;code&gt;int&lt;/code&gt; 返回月份。如果通过调用&lt;a href=&quot;offsetdatetime#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt;使用枚举&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; ,&lt;/a&gt;则应用程序代码通常会更清晰。</target>
        </trans-unit>
        <trans-unit id="49a67cf97747e94dc55b5045ecbe797e55b95f85" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;yearmonth#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法以1到12之间的 &lt;code&gt;int&lt;/code&gt; 返回月份。如果通过调用&lt;a href=&quot;yearmonth#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt;使用枚举&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; ,&lt;/a&gt;则应用程序代码通常会更清晰。</target>
        </trans-unit>
        <trans-unit id="288036dec84bf41e4662838cf6f6a387c34d127d" translate="yes" xml:space="preserve">
          <source>This method returns the month as an &lt;code&gt;int&lt;/code&gt; from 1 to 12. Application code is frequently clearer if the enum &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; is used by calling &lt;a href=&quot;zoneddatetime#getMonth--&quot;&gt;&lt;code&gt;getMonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法以1到12之间的 &lt;code&gt;int&lt;/code&gt; 返回月份。如果通过调用&lt;a href=&quot;zoneddatetime#getMonth--&quot;&gt; &lt;code&gt;getMonth()&lt;/code&gt; &lt;/a&gt;使用枚举&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; ,&lt;/a&gt;则应用程序代码通常会更清晰。</target>
        </trans-unit>
        <trans-unit id="e357cbe7c592cbedd71e3376d507bbe920a84b6a" translate="yes" xml:space="preserve">
          <source>This method returns the most recently pushed-back byte, if there is one, and otherwise calls the &lt;code&gt;read&lt;/code&gt; method of its underlying input stream and returns whatever value that method returns.</source>
          <target state="translated">如果有一个，此方法将返回最近被推回的字节，否则调用其基础输入流的 &lt;code&gt;read&lt;/code&gt; 方法，并返回该方法返回的任何值。</target>
        </trans-unit>
        <trans-unit id="729f3b81efc551b47dff0322bf0b3bb789bab6b5" translate="yes" xml:space="preserve">
          <source>This method returns the nearest extant parent in the namespace. Thus if a Logger is called &quot;a.b.c.d&quot;, and a Logger called &quot;a.b&quot; has been created but no logger &quot;a.b.c&quot; exists, then a call of getParent on the Logger &quot;a.b.c.d&quot; will return the Logger &quot;a.b&quot;.</source>
          <target state="translated">该方法返回命名空间中最近的现存父代。因此,如果一个名为 &quot;a.b.c.d &quot;的记录仪已经创建了名为 &quot;a.b &quot;的记录仪,但没有 &quot;a.b.c &quot;的记录仪存在,那么对记录仪 &quot;a.b.c.d &quot;的getParent调用将返回记录仪 &quot;a.b&quot;。</target>
        </trans-unit>
        <trans-unit id="62c2e246cd63848e32d79eb7a1cd9cf138d6edac" translate="yes" xml:space="preserve">
          <source>This method returns the object on which it is called. A subclass can override it to return another object provided the contract is respected.</source>
          <target state="translated">这个方法返回被调用的对象。一个子类可以重写它来返回另一个对象,前提是合同得到尊重。</target>
        </trans-unit>
        <trans-unit id="cbd103f3dca089e4d35de20f77ab1d677952eaeb" translate="yes" xml:space="preserve">
          <source>This method returns the primitive &lt;code&gt;int&lt;/code&gt; value for the day-of-month.</source>
          <target state="translated">此方法返回月份中的原始 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="29fb4873a53454ba01b371258b2e1a0c98256b61" translate="yes" xml:space="preserve">
          <source>This method returns the primitive &lt;code&gt;int&lt;/code&gt; value for the day-of-year.</source>
          <target state="translated">此方法返回年份的原始 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="0f84492756296babe253a083a8521646c91691af" translate="yes" xml:space="preserve">
          <source>This method returns the primitive &lt;code&gt;int&lt;/code&gt; value for the year.</source>
          <target state="translated">此方法返回年份的原始 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="1b1e63827aa9afce63f0a20e64e75169de9e06a3" translate="yes" xml:space="preserve">
          <source>This method returns the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">此方法返回ISO-8601日历系统中的字段范围。对于其他日历系统，此范围可能不正确。使用&lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt;访问不同日历系统的正确范围。</target>
        </trans-unit>
        <trans-unit id="ef945f86886260debb2ff15cd741dd7793da2f87" translate="yes" xml:space="preserve">
          <source>This method returns the result of &lt;a href=&quot;filterinputstream#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt;.available().</source>
          <target state="translated">此方法返回的结果&lt;a href=&quot;filterinputstream#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; .available（）。</target>
        </trans-unit>
        <trans-unit id="66f8ce7dec95f661d4f4f0bccc846817dc7f8e4b" translate="yes" xml:space="preserve">
          <source>This method returns the root of the schema information tree that is applicable to the named object. Several named objects (or even an entire directory) might share the same schema.</source>
          <target state="translated">本方法返回适用于命名对象的模式信息树的根。多个命名对象(甚至整个目录)可能共享同一个模式。</target>
        </trans-unit>
        <trans-unit id="28209e46b3fdb11909e0140c20b5d382144e1f6a" translate="yes" xml:space="preserve">
          <source>This method returns the same result as the two-argument versions of &lt;code&gt;setScale&lt;/code&gt;, but saves the caller the trouble of specifying a rounding mode in cases where it is irrelevant.</source>
          <target state="translated">此方法返回与 &lt;code&gt;setScale&lt;/code&gt; 的两个参数版本相同的结果，但是避免了调用方在不相关时指定舍入模式的麻烦。</target>
        </trans-unit>
        <trans-unit id="78972b2eb2f19e3407ffa2b185d202106f9914d5" translate="yes" xml:space="preserve">
          <source>This method returns the singleton era of the correct type for the specified era value.</source>
          <target state="translated">本方法返回指定时代值的正确类型的单人时代。</target>
        </trans-unit>
        <trans-unit id="8d66232cfe68fdef26fee7b852c91a2f6edfc6e2" translate="yes" xml:space="preserve">
          <source>This method returns the string &lt;code&gt;&quot;BIG_ENDIAN&quot;&lt;/code&gt; for &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&quot;LITTLE_ENDIAN&quot;&lt;/code&gt; for &lt;a href=&quot;byteorder#LITTLE_ENDIAN&quot;&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法返回字符串 &lt;code&gt;&quot;BIG_ENDIAN&quot;&lt;/code&gt; 为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;&quot;LITTLE_ENDIAN&quot;&lt;/code&gt; 为&lt;a href=&quot;byteorder#LITTLE_ENDIAN&quot;&gt; &lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97dea25a4738ecf811b303cb1add7be21f8f9310" translate="yes" xml:space="preserve">
          <source>This method returns the sum of the number of bytes remaining to be read in the buffer (&lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt;) and the result of calling the &lt;a href=&quot;filterinputstream#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt;.available().</source>
          <target state="translated">此方法返回剩余在缓冲（要读取的字节的数目的总和 &lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt; ）并调用的结果&lt;a href=&quot;filterinputstream#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;）.available（。</target>
        </trans-unit>
        <trans-unit id="6fee1b06b53ec9221ddb54c84e056343046d2b24" translate="yes" xml:space="preserve">
          <source>This method returns true if:</source>
          <target state="translated">在以下情况下,本方法返回true:</target>
        </trans-unit>
        <trans-unit id="e72419101078d515fd0561eb0c03a7b646ae4d97" translate="yes" xml:space="preserve">
          <source>This method runs in linear time.</source>
          <target state="translated">这种方法以线性时间运行。</target>
        </trans-unit>
        <trans-unit id="9eda0757c2e5646daa119a8994ecb3f23d0d9dc7" translate="yes" xml:space="preserve">
          <source>This method runs in linear time. If the specified list does not implement the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface and is large, this implementation dumps the specified list into an array before shuffling it, and dumps the shuffled array back into the list. This avoids the quadratic behavior that would result from shuffling a &quot;sequential access&quot; list in place.</source>
          <target state="translated">此方法以线性时间运行。如果指定的列表未实现&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;接口且很大，则此实现将指定的列表转储到数组中，然后再将其重新排序，然后将经过改组的数组转储回列表中。这避免了因将&amp;ldquo;顺序访问&amp;rdquo;列表改组到位而导致的二次行为。</target>
        </trans-unit>
        <trans-unit id="a775b01962d956b9e06ebfef16fc5299acbcfd95" translate="yes" xml:space="preserve">
          <source>This method runs in log(n) time for a &quot;random access&quot; list (which provides near-constant-time positional access). If the specified list does not implement the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface and is large, this method will do an iterator-based binary search that performs O(n) link traversals and O(log n) element comparisons.</source>
          <target state="translated">此方法在log（n）时间中运行以获取&amp;ldquo;随机访问&amp;rdquo;列表（该列表提供了近恒定时间的位置访问）。如果指定的列表没有实现&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;接口并且很大，则此方法将执行基于迭代器的二进制搜索，该搜索执行O（n）链接遍历和O（log n）元素比较。</target>
        </trans-unit>
        <trans-unit id="b4aad462284b0b19c7043f83c4a15cf73ee5dfa1" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法满足&lt;a href=&quot;../../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="8696ca26ca420ff769671a0d6b061a7afc412d55" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法满足&lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="9afb334f76f0709fbefa834912b0ae8d6392ded6" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法满足&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="50382711bd8e19aa7d035d616ce22135cd5083d4" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt;&lt;code&gt;Comparable.compareTo&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法满足&lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt; &lt;code&gt;Comparable.compareTo&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="5331897f818caac3e947824f50a47ff5791d467a" translate="yes" xml:space="preserve">
          <source>This method satisfies the general contract of the &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法满足&lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="30058877bdc80d4a153b8f7b71619a6b02f026a5" translate="yes" xml:space="preserve">
          <source>This method searches through the input up to the specified search horizon, ignoring delimiters. If the pattern is found the scanner advances past the input that matched and returns the string that matched the pattern. If no such pattern is detected then the null is returned and the scanner's position remains unchanged. This method may block waiting for input that matches the pattern.</source>
          <target state="translated">本方法在指定的搜索范围内搜索输入,忽略定界符。如果找到了模式,扫描器就会前进到与之匹配的输入,并返回与模式匹配的字符串。如果没有检测到这样的模式,则返回null,扫描器的位置保持不变。这个方法可能会阻止等待匹配模式的输入。</target>
        </trans-unit>
        <trans-unit id="709c2c3d093fae94c2903fbaba8d914b5b9a56a2" translate="yes" xml:space="preserve">
          <source>This method sets this context's &lt;code&gt;connCtls&lt;/code&gt; to be its new connection request controls. This context's context request controls are not affected. After this method has been invoked, any subsequent implicit reconnections will be done using &lt;code&gt;connCtls&lt;/code&gt;. &lt;code&gt;connCtls&lt;/code&gt; are also used as connection request controls for new context instances derived from this context. These connection request controls are not affected by &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="translated">此方法将此上下文的 &lt;code&gt;connCtls&lt;/code&gt; 设置为其新的连接请求控件。此上下文的上下文请求控件不受影响。调用此方法后，将使用 &lt;code&gt;connCtls&lt;/code&gt; 完成任何后续的隐式重新连接。 &lt;code&gt;connCtls&lt;/code&gt; 也用作从该上下文派生的新上下文实例的连接请求控件。这些连接请求控件不受 &lt;code&gt;setRequestControls()&lt;/code&gt; 的影响。</target>
        </trans-unit>
        <trans-unit id="c5cf5b5df3f5436f31b3c3798c9cc9d254a6cd57" translate="yes" xml:space="preserve">
          <source>This method should be called during construction or initialization of this instance, and before the MBean is registered with the MBeanServer.</source>
          <target state="translated">这个方法应该在这个实例的构造或初始化过程中,在MBean向MBeanServer注册之前被调用。</target>
        </trans-unit>
        <trans-unit id="9572d56dcaaaaccd2ff117f06e1d6fb367780859" translate="yes" xml:space="preserve">
          <source>This method should be implemented consistently with &lt;code&gt;equals(Object)&lt;/code&gt;.</source>
          <target state="translated">此方法应与 &lt;code&gt;equals(Object)&lt;/code&gt; 一致地实现。</target>
        </trans-unit>
        <trans-unit id="29f95933a9e570bfb500b6330c648329a4a69d82" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement asynchronous closing and interruption for this channel.</source>
          <target state="translated">该方法应与串联调用&lt;a href=&quot;abstractinterruptiblechannel#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt;方法，使用 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 块，如图&lt;a href=&quot;#be&quot;&gt;以上&lt;/a&gt;，为了实现此通道异步关闭和中断。</target>
        </trans-unit>
        <trans-unit id="57bd5eaeb3f6b692eb98dc238b586a5a1f86c7e9" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement asynchronous closing and interruption for this channel.</source>
          <target state="translated">该方法应与串联调用&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法，使用 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 块，如图&lt;a href=&quot;#be&quot;&gt;以上&lt;/a&gt;，为了实现此通道异步关闭和中断。</target>
        </trans-unit>
        <trans-unit id="eae9ee327988c66b884eb64e681ed0fec1f0d6e6" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractselector#begin--&quot;&gt;&lt;code&gt;begin&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement interruption for this selector.</source>
          <target state="translated">此方法应与串联调用&lt;a href=&quot;abstractselector#begin--&quot;&gt; &lt;code&gt;begin&lt;/code&gt; &lt;/a&gt;方法，使用 &lt;code&gt;try&lt;/code&gt; ...... &lt;code&gt;finally&lt;/code&gt; 挡住如图所示&lt;a href=&quot;#be&quot;&gt;以上&lt;/a&gt;，为了实现中断，此选择。</target>
        </trans-unit>
        <trans-unit id="9b25d0709861a8dbe12e01ad2ffac5fcd56174e7" translate="yes" xml:space="preserve">
          <source>This method should be invoked in tandem with the &lt;a href=&quot;abstractselector#end--&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method, using a &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; block as shown &lt;a href=&quot;#be&quot;&gt;above&lt;/a&gt;, in order to implement interruption for this selector.</source>
          <target state="translated">该方法应与串联调用&lt;a href=&quot;abstractselector#end--&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法，使用 &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;finally&lt;/code&gt; 块，如图&lt;a href=&quot;#be&quot;&gt;以上&lt;/a&gt;，为了实现中断，此选择。</target>
        </trans-unit>
        <trans-unit id="4f79ea4505b47cfd8c99b8b4476c5daf765147e5" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses.</source>
          <target state="translated">这个方法应该被子类重写。</target>
        </trans-unit>
        <trans-unit id="29dc02668476fabab14ab7501af66787f6a7ae58" translate="yes" xml:space="preserve">
          <source>This method should be overridden when the &lt;a href=&quot;collection#spliterator--&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; method cannot return a spliterator that is &lt;code&gt;IMMUTABLE&lt;/code&gt;, &lt;code&gt;CONCURRENT&lt;/code&gt;, or &lt;em&gt;late-binding&lt;/em&gt;. (See &lt;a href=&quot;collection#spliterator--&quot;&gt;&lt;code&gt;spliterator()&lt;/code&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">当&lt;a href=&quot;collection#spliterator--&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt;方法无法返回 &lt;code&gt;IMMUTABLE&lt;/code&gt; ， &lt;code&gt;CONCURRENT&lt;/code&gt; 或&lt;em&gt;late-binding&lt;/em&gt;的拆分器时，应重写此方法。（有关详细信息，请参见&lt;a href=&quot;collection#spliterator--&quot;&gt; &lt;code&gt;spliterator()&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="71d658a46ff3d502e0136280d62ea4fc06d64da9" translate="yes" xml:space="preserve">
          <source>This method should be used instead of the other two overloaded forms when the caller needs to supply request controls for creating the referral context. It might need to do this, for example, when it needs to supply special controls relating to authentication.</source>
          <target state="translated">当调用者需要提供创建引用上下文的请求控制时,应该使用这个方法而不是其他两个重载形式。例如,当它需要提供与认证有关的特殊控制时,它可能需要这样做。</target>
        </trans-unit>
        <trans-unit id="34ab78e281e8fce22d2a69b13041e7e7c4d990cb" translate="yes" xml:space="preserve">
          <source>This method should be used with extreme caution. Unlike the &lt;code&gt;&lt;a href=&quot;runtime#exit-int-&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method, this method does not cause shutdown hooks to be started and does not run uninvoked finalizers if finalization-on-exit has been enabled. If the shutdown sequence has already been initiated then this method does not wait for any running shutdown hooks or finalizers to finish their work.</source>
          <target state="translated">使用此方法时应格外小心。与 &lt;code&gt;&lt;a href=&quot;runtime#exit-int-&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法不同，此方法不会导致启动关闭挂钩，并且如果启用了退出时终结处理，则不会运行未调用的终结器。如果关闭序列已经启动，则此方法不会等待任何正在运行的关闭挂钩或终结器完成其工作。</target>
        </trans-unit>
        <trans-unit id="7079e3fbbfe7b9e60114d849e0b0a1f8315cef28" translate="yes" xml:space="preserve">
          <source>This method should only be called by a thread that is the owner of this object's monitor. A thread becomes the owner of the object's monitor in one of three ways:</source>
          <target state="translated">这个方法只能由一个是这个对象的监视器的所有者的线程调用。一个线程通过三种方式之一成为对象的监视器的所有者。</target>
        </trans-unit>
        <trans-unit id="777feaab7923a263f03277b89549cf426a833739" translate="yes" xml:space="preserve">
          <source>This method should only be called by a thread that is the owner of this object's monitor. See the &lt;code&gt;notify&lt;/code&gt; method for a description of the ways in which a thread can become the owner of a monitor.</source>
          <target state="translated">此方法只能由作为该对象的监视器的所有者的线程调用。有关线程可以成为监视器所有者的方式的描述，请参见 &lt;code&gt;notify&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="dd0da8ef1149610edaaec69e689e2ca993719641" translate="yes" xml:space="preserve">
          <source>This method should only be invoked within the context of initializing a persistence delegate or setting up an encoder to read from a resource bundle.</source>
          <target state="translated">该方法只能在初始化持久化委托或设置编码器以从资源包中读取的上下文中调用。</target>
        </trans-unit>
        <trans-unit id="238ce84423ce68f3a96955f6c483908adb7bd7e6" translate="yes" xml:space="preserve">
          <source>This method should only be invoked within the context of initializing a persistence delegate.</source>
          <target state="translated">这个方法只能在初始化持久化委托的上下文中被调用。</target>
        </trans-unit>
        <trans-unit id="c4b807876fe6997c88b6b5ad84a05abb4afe4cb8" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;available&lt;/code&gt; of the current underlying input stream and returns the result.</source>
          <target state="translated">此方法仅调用当前基础输入流的 &lt;code&gt;available&lt;/code&gt; 并返回结果。</target>
        </trans-unit>
        <trans-unit id="b5dee1c64dcb117f68fed752a842221d52473559" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;get((Object[]) key)&lt;/code&gt;.</source>
          <target state="translated">此方法仅调用 &lt;code&gt;get((Object[]) key)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e8e8c8f040b562297c09db4df4590a4dcf57a91" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;put((CompositeData) value)&lt;/code&gt; and therefore ignores its &lt;var&gt;key&lt;/var&gt; parameter which can be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">此方法仅调用 &lt;code&gt;put((CompositeData) value)&lt;/code&gt; ，因此忽略其 &lt;var&gt;key&lt;/var&gt; 参数，该参数可以为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6e8a1d0ec1e1a366794c4c1949a880fb97db20a" translate="yes" xml:space="preserve">
          <source>This method simply calls &lt;code&gt;remove((Object[]) key)&lt;/code&gt;.</source>
          <target state="translated">此方法仅调用 &lt;code&gt;remove((Object[]) key)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc6bc0fc425ab494d2ecac76297d1e62f6fb1eb3" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.mark(readlimit)&lt;/code&gt;.</source>
          <target state="translated">此方法仅执行 &lt;code&gt;in.mark(readlimit)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f46e89ba359a12a65dcf2acfbb614e6e1a9ffc1c" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.read()&lt;/code&gt; and returns the result.</source>
          <target state="translated">此方法仅执行 &lt;code&gt;in.read()&lt;/code&gt; 并返回结果。</target>
        </trans-unit>
        <trans-unit id="7bee99ea682b5ebdba1502480d4d3571110116cc" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.read(b, off, len)&lt;/code&gt; and returns the result.</source>
          <target state="translated">此方法仅执行 &lt;code&gt;in.read(b, off, len)&lt;/code&gt; 并返回结果。</target>
        </trans-unit>
        <trans-unit id="8edf0a88f05440a5392c7d0c3e3f37a8797689df" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.reset()&lt;/code&gt;.</source>
          <target state="translated">此方法仅执行 &lt;code&gt;in.reset()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17f994e59a98ce2feb35ffc74454bfbbc2a97137" translate="yes" xml:space="preserve">
          <source>This method simply performs &lt;code&gt;in.skip(n)&lt;/code&gt;.</source>
          <target state="translated">此方法仅执行 &lt;code&gt;in.skip(n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1edc42660d60900aa92eba9fe33b01f48322fd87" translate="yes" xml:space="preserve">
          <source>This method simply performs the call &lt;code&gt;read(b, 0, b.length)&lt;/code&gt; and returns the result. It is important that it does</source>
          <target state="translated">此方法仅执行调用 &lt;code&gt;read(b, 0, b.length)&lt;/code&gt; 并返回结果。重要的是</target>
        </trans-unit>
        <trans-unit id="b4556d9ecf323d07c8124b74db08512b40320a22" translate="yes" xml:space="preserve">
          <source>This method starts at the beginning of this matcher's region, or, if a previous invocation of the method was successful and the matcher has not since been reset, at the first character not matched by the previous match.</source>
          <target state="translated">这个方法从这个匹配器区域的开头开始,或者,如果之前的方法调用成功,并且匹配器此后没有被重置,则从之前匹配的第一个未匹配的字符开始。</target>
        </trans-unit>
        <trans-unit id="17094ba13ee4a3a748a03c765e3399bae3e18ac5" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">此方法从天数字段中减去指定的金额,并根据需要递减月份和年份字段,以确保结果仍然有效。只有在超过最大/最小年份的情况下,结果才是无效的。</target>
        </trans-unit>
        <trans-unit id="794983e28b53204c2dfb6c7bc67152872b7333dd" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount from the months field in three steps:</source>
          <target state="translated">此方法分三步从月字段中减去指定的金额。</target>
        </trans-unit>
        <trans-unit id="01ab275252deaae430470917667d8e1be68a9d79" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount from the years field in three steps:</source>
          <target state="translated">本方法分三步从年限栏中减去指定的金额。</target>
        </trans-unit>
        <trans-unit id="22318c29d0133d2101a84aaa0d0f6a6b1ec2afcf" translate="yes" xml:space="preserve">
          <source>This method subtracts the specified amount in weeks from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">此方法从天数字段中减去指定的周数,并根据需要递减月份和年份字段,以确保结果有效。只有在超过最大/最小年份的情况下,结果才是无效的。</target>
        </trans-unit>
        <trans-unit id="dfd44cbba3ac7f729ff2df76b583aea70712cc43" translate="yes" xml:space="preserve">
          <source>This method supports a special technique of parsing known as 'adjacent value parsing'. This technique solves the problem where a value, variable or fixed width, is followed by one or more fixed length values. The standard parser is greedy, and thus it would normally steal the digits that are needed by the fixed width value parsers that follow the variable width one.</source>
          <target state="translated">这种方法支持一种特殊的解析技术,称为 &quot;相邻值解析&quot;。这种技术解决了一个值,不管是可变的还是固定宽度的,后面都有一个或多个固定长度的值。标准解析器是贪婪的,因此它通常会窃取固定宽度值解析器所需要的数字,而这些数字是跟随可变宽度值的。</target>
        </trans-unit>
        <trans-unit id="c150abc03144234b22efe8cbbae37477c8cfbbcf" translate="yes" xml:space="preserve">
          <source>This method supports post-processing on optional values, without the need to explicitly check for a return status. For example, the following code traverses a stream of file names, selects one that has not yet been processed, and then opens that file, returning an &lt;code&gt;Optional&amp;lt;FileInputStream&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">此方法支持对可选值进行后处理，而无需显式检查返回状态。例如，以下代码遍历文件名流，选择一个尚未处理的文件名，然后打开该文件，返回 &lt;code&gt;Optional&amp;lt;FileInputStream&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f74504c00f8a1676aab5ce7b90c92c2414f54075" translate="yes" xml:space="preserve">
          <source>This method supports three Type/format combinations:</source>
          <target state="translated">此方法支持三种类型/格式组合。</target>
        </trans-unit>
        <trans-unit id="ad744206021f227827ab73bf72c46e244315e010" translate="yes" xml:space="preserve">
          <source>This method swaps the sign of the total length of this duration. For example, &lt;code&gt;PT1.3S&lt;/code&gt; will be returned as &lt;code&gt;PT-1.3S&lt;/code&gt;.</source>
          <target state="translated">此方法交换此持续时间总长度的符号。例如， &lt;code&gt;PT1.3S&lt;/code&gt; 将返回为 &lt;code&gt;PT-1.3S&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b826eca69467428f720b33ccfa8e6a22178be3fd" translate="yes" xml:space="preserve">
          <source>This method synchronizes on &lt;code&gt;this&lt;/code&gt;, the destination object, but does not synchronize on the source (&lt;code&gt;s&lt;/code&gt;).</source>
          <target state="translated">此方法在 &lt;code&gt;this&lt;/code&gt; （目标对象）上同步，但不在源（一个或 &lt;code&gt;s&lt;/code&gt; ）上同步。</target>
        </trans-unit>
        <trans-unit id="781a90ba86b28c4eca13fb9ec17885d2aef64f54" translate="yes" xml:space="preserve">
          <source>This method synchronizes on &lt;code&gt;this&lt;/code&gt;, the destination object, but does not synchronize on the source (&lt;code&gt;sb&lt;/code&gt;).</source>
          <target state="translated">此方法在 &lt;code&gt;this&lt;/code&gt; （目标对象）上同步，但不在源（ &lt;code&gt;sb&lt;/code&gt; ）上同步。</target>
        </trans-unit>
        <trans-unit id="bacc286ded4e8325bb4d5d723224404336be0ccd" translate="yes" xml:space="preserve">
          <source>This method takes a &quot;snapshot&quot; of the current calling context, which includes the current Thread's inherited AccessControlContext and any limited privilege scope, and places it in an AccessControlContext object. This context may then be checked at a later point, possibly in another thread.</source>
          <target state="translated">该方法获取当前调用上下文的 &quot;快照&quot;,其中包括当前线程继承的 AccessControlContext 和任何有限的权限范围,并将其放入 AccessControlContext 对象中。然后,这个上下文可以在以后的时间点,可能在另一个线程中进行检查。</target>
        </trans-unit>
        <trans-unit id="03e9702b57e95947764ed431bf7ffa0b25100c5e" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, and opens the line with the current settings. For &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects, this means that the line is opened with default settings. For a &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, however, the buffer size is determined when data is loaded. Since this method does not allow the application to specify any data to load, an IllegalArgumentException is thrown. Therefore, you should instead use one of the &lt;code&gt;open&lt;/code&gt; methods provided in the &lt;code&gt;Clip&lt;/code&gt; interface to load data into the &lt;code&gt;Clip&lt;/code&gt;.</source>
          <target state="translated">此方法不带任何参数，并使用当前设置打开该行。对于 &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象，这意味着将使用默认设置打开该行。但是，对于 &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 而言，缓冲区大小是在加载数据时确定的。由于此方法不允许应用程序指定要加载的任何数据，因此将抛出IllegalArgumentException。因此，您应该改用 &lt;code&gt;Clip&lt;/code&gt; 界面中提供的 &lt;code&gt;open&lt;/code&gt; 方法之一将数据加载到 &lt;code&gt;Clip&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="749999b26511eb37fdf759572bbebb73b6f7719a" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;interrupt&lt;/code&gt; method on all the threads in this thread group and in all of its subgroups.</source>
          <target state="translated">然后，此方法在该线程组及其所有子组中的所有线程上调用 &lt;code&gt;interrupt&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c6078753d6cb08e2fd72e832d8ed0a44dfeda009" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;resume&lt;/code&gt; method on all the threads in this thread group and in all of its sub groups.</source>
          <target state="translated">然后，此方法在此线程组及其所有子组中的所有线程上调用 &lt;code&gt;resume&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9ac488b98809ce75c359b89f89dafde31807a97a" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;stop&lt;/code&gt; method on all the threads in this thread group and in all of its subgroups.</source>
          <target state="translated">然后，此方法在此线程组及其所有子组中的所有线程上调用 &lt;code&gt;stop&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="fbcee260a54e7063d2c3bb8e2ee245593a9d6c0c" translate="yes" xml:space="preserve">
          <source>This method then calls the &lt;code&gt;suspend&lt;/code&gt; method on all the threads in this thread group and in all of its subgroups.</source>
          <target state="translated">然后，此方法在此线程组及其所有子组中的所有线程上调用 &lt;code&gt;suspend&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e350f9ae8035727aaa40eabef55881cb72192e3b" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;../filesystemalreadyexistsexception&quot;&gt;&lt;code&gt;FileSystemAlreadyExistsException&lt;/code&gt;&lt;/a&gt; if the file system already exists because it was previously created by an invocation of this method. Once a file system is &lt;a href=&quot;../filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">如果文件系统已经存在，因为该文件系统先前是通过调用此方法创建的，则此方法将引发&lt;a href=&quot;../filesystemalreadyexistsexception&quot;&gt; &lt;code&gt;FileSystemAlreadyExistsException&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;../filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;文件系统后，如果提供者允许使用与先前创建的文件系统相同的URI创建新文件系统，则该过程取决于提供者。</target>
        </trans-unit>
        <trans-unit id="937bce123445844f695ad61bb19f55c226141aa5" translate="yes" xml:space="preserve">
          <source>This method throws &lt;a href=&quot;invalidpathexception&quot;&gt;&lt;code&gt;InvalidPathException&lt;/code&gt;&lt;/a&gt; when the path string cannot be converted to a path. Where possible, and where applicable, the exception is created with an &lt;a href=&quot;invalidpathexception#getIndex--&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; value indicating the first position in the &lt;code&gt;path&lt;/code&gt; parameter that caused the path string to be rejected.</source>
          <target state="translated">当路径字符串无法转换为路径时，此方法将引发&lt;a href=&quot;invalidpathexception&quot;&gt; &lt;code&gt;InvalidPathException&lt;/code&gt; &lt;/a&gt;。在可能的情况下（如果适用），使用&lt;a href=&quot;invalidpathexception#getIndex--&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt;值创建异常，该索引值指示导致路径字符串被拒绝的 &lt;code&gt;path&lt;/code&gt; 参数中的第一个位置。</target>
        </trans-unit>
        <trans-unit id="01d5015aba13924f7d366d34e50b6072f63a415e" translate="yes" xml:space="preserve">
          <source>This method throws no reflective or security exceptions.</source>
          <target state="translated">这个方法不会抛出反射或安全异常。</target>
        </trans-unit>
        <trans-unit id="afa7b41cf80e53d8a9c59aa94a72f31c8ffd5d02" translate="yes" xml:space="preserve">
          <source>This method transfers bytes from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将字节从此缓冲区传输到给定的目标数组。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="23c829a65a69986b9504ae064aa8799e136296a8" translate="yes" xml:space="preserve">
          <source>This method transfers bytes from this buffer into the given destination array. If there are fewer bytes remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no bytes are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将字节从此缓冲区传输到给定的目标数组。如果缓冲区中剩余的字节数少于满足请求所需的字节数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何字节，并抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="bd9758e168b771cfdd859292d3cdfe5982626280" translate="yes" xml:space="preserve">
          <source>This method transfers bytes into this buffer from the given source array. If there are more bytes to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no bytes are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将字节从给定的源数组传输到此缓冲区中。如果要从数组复制的字节多于该缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 字节，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何字节，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8b34fcf121ff7537825a07c54335656d27ce21a" translate="yes" xml:space="preserve">
          <source>This method transfers chars from the given string into this buffer. If there are more chars to be copied from the string than remain in this buffer, that is, if &lt;code&gt;end - start&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将字符从给定的字符串传输到此缓冲区。如果要从字符串复制的字符多于此缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 字符，即，如果 &lt;code&gt;end - start&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何字符，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b95d50f138da0740f549ca688c52b4927caa5285" translate="yes" xml:space="preserve">
          <source>This method transfers chars from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将字符从该缓冲区传输到给定的目标数组中。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="3f8c88edee67356ee7c4251fc51e9e6ba295d78f" translate="yes" xml:space="preserve">
          <source>This method transfers chars from this buffer into the given destination array. If there are fewer chars remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将字符从该缓冲区传输到给定的目标数组中。如果缓冲区中剩余的字符数少于满足请求所需的字符数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何字符数，并抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="3012d3613f04886d312ce45ee107e50ccf089df1" translate="yes" xml:space="preserve">
          <source>This method transfers chars into this buffer from the given source array. If there are more chars to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将char从给定的源数组转移到此缓冲区中。如果要从数组复制的字符多于此缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 字符，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何字符，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8efb19b9bbf42d5fed4580afdec34e08217d1b71" translate="yes" xml:space="preserve">
          <source>This method transfers doubles from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将双精度数据从此缓冲区传输到给定的目标数组。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="ea42b6931ed452e79de4ca7d32554ef05bc44f68" translate="yes" xml:space="preserve">
          <source>This method transfers doubles from this buffer into the given destination array. If there are fewer doubles remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no doubles are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将双精度数据从此缓冲区传输到给定的目标数组。如果缓冲区中剩余的双精度数少于满足请求所需的双精度数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不会传输任何双精度数，并且会抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="6f1007ee256143a7348ae5c099b14be06bffa094" translate="yes" xml:space="preserve">
          <source>This method transfers doubles into this buffer from the given source array. If there are more doubles to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no doubles are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将双精度数从给定的源数组转移到此缓冲区中。如果要从数组复制的双精度数大于此缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 双精度数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何双精度数，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4983f8341c20dd98ab215a5a53d2f9c87b50fa9f" translate="yes" xml:space="preserve">
          <source>This method transfers floats from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将浮点数从该缓冲区转移到给定的目标数组中。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="add5cb82464e8b75c258298fde36da297219276c" translate="yes" xml:space="preserve">
          <source>This method transfers floats from this buffer into the given destination array. If there are fewer floats remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no floats are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将浮点数从该缓冲区转移到给定的目标数组中。如果缓冲区中剩余的浮点数少于满足请求所需的浮点数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何浮点数，并抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="4fc9f59d05784966f764ab2e2c5fe51cf2314ac4" translate="yes" xml:space="preserve">
          <source>This method transfers floats into this buffer from the given source array. If there are more floats to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no floats are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将浮点数从给定的源数组转移到此缓冲区中。如果要从数组复制的浮点数多于该缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 浮点数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何浮点数，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54c6e5d2f9f2435bc5e8e097104969c5662d59d8" translate="yes" xml:space="preserve">
          <source>This method transfers ints from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将整数从此缓冲区传输到给定的目标数组。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="f8ce58e3a68123d420ce741c3e93388150cf02be" translate="yes" xml:space="preserve">
          <source>This method transfers ints from this buffer into the given destination array. If there are fewer ints remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no ints are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将整数从此缓冲区传输到给定的目标数组。如果缓冲区中剩余的整数要少于满足请求所需的整数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不会传输任何整数，并且会抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="5c39e97914ca9f39e7e5755ada34160a831f9f95" translate="yes" xml:space="preserve">
          <source>This method transfers ints into this buffer from the given source array. If there are more ints to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no ints are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将整数从给定的源数组传输到此缓冲区中。如果要从数组复制的整数多于此缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 整数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何整数，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed25aff7206e1ea3ed6b8e66687a723da874494d" translate="yes" xml:space="preserve">
          <source>This method transfers longs from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将long从此缓冲区传输到给定的目标数组。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="1c71b94a511f607f31b7e517994edefcafb15346" translate="yes" xml:space="preserve">
          <source>This method transfers longs from this buffer into the given destination array. If there are fewer longs remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no longs are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将long从此缓冲区传输到给定的目标数组。如果缓冲区中剩余的long数少于满足请求所需的long数，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何long并抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="235f9f51f2e81977ac8385277f847cdacf4591f0" translate="yes" xml:space="preserve">
          <source>This method transfers longs into this buffer from the given source array. If there are more longs to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no longs are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法从给定的源数组将long传送到此缓冲区中。如果要从数组复制的long数大于保留在此缓冲区中的 &lt;code&gt;length&lt;/code&gt; ，即，如果length &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何long数，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae439e1e93a92a0c2298225fb8873abfbe47ad79" translate="yes" xml:space="preserve">
          <source>This method transfers shorts from this buffer into the given destination array. An invocation of this method of the form &lt;code&gt;src.get(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将短裤从该缓冲区传输到给定的目标数组中。以 &lt;code&gt;src.get(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="9a5a04ef1fb09ba05b99dbc6155064d0adf4c685" translate="yes" xml:space="preserve">
          <source>This method transfers shorts from this buffer into the given destination array. If there are fewer shorts remaining in the buffer than are required to satisfy the request, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no shorts are transferred and a &lt;a href=&quot;bufferunderflowexception&quot;&gt;&lt;code&gt;BufferUnderflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将短裤从该缓冲区传输到给定的目标数组中。如果缓冲区中剩余的短裤少于满足请求所需的短裤，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;a href=&quot;bufferunderflowexception&quot;&gt; &lt;code&gt;BufferUnderflowException&lt;/code&gt; &lt;/a&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何短裤，并抛出BufferUnderflowException。</target>
        </trans-unit>
        <trans-unit id="3892f4cc3ee489fb57481ae2cea50a60d83c6a0c" translate="yes" xml:space="preserve">
          <source>This method transfers shorts into this buffer from the given source array. If there are more shorts to be copied from the array than remain in this buffer, that is, if &lt;code&gt;length&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no shorts are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将短裤从给定的源数组转移到此缓冲区中。如果要从数组复制的短裤多于该缓冲区中 &lt;code&gt;remaining()&lt;/code&gt; 短裤，即，如果 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing（），则不传输任何短裤，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62e29eda608a76b16972e15c68e2cf9b0d250160" translate="yes" xml:space="preserve">
          <source>This method transfers the bytes remaining in the given source buffer into this buffer. If there are more bytes remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no bytes are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的字节传输到此缓冲区中。如果源缓冲区中剩余的字节数大于此缓冲区中的剩余字节数，即 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何字节，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67ba7be4645ff33297ca783caab7891d1960958c" translate="yes" xml:space="preserve">
          <source>This method transfers the chars remaining in the given source buffer into this buffer. If there are more chars remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no chars are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的字符转移到此缓冲区中。如果源缓冲区中剩余的字符多于此缓冲区中的字符，即 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何字符，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc8d7052596d61ae0c55b04ff32cece33816fa5f" translate="yes" xml:space="preserve">
          <source>This method transfers the doubles remaining in the given source buffer into this buffer. If there are more doubles remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no doubles are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的双精度数转移到此缓冲区中。如果源缓冲区中剩余的双精度数大于此缓冲区中的双精度数，即 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不会传输任何双精度数，并且会抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ba7d656045cc2c93c5545bdae075a188982a5c6" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source byte array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源字节数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="1a8b2f59b1257b32202326e6a296a00c0a2c4831" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source char array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源char数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="f85a7eb3902ecf44fe65e88d3415a7fb2c63d8be" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source double array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源double数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="be0526012b1df9e6548573ee94cf3d148c55c57d" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source float array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源float数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="831c91291ae9f3040ba1e15151b6327beda90324" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source int array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源int数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="bd2e143f258ecd0d927757c41d6b2d8027096e66" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source long array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源长数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="c2efc54a18e7bd6cc6030ca162da5ee2a9086d4f" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source short array into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(a)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源short数组的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(a)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="cf07eb60f080b3daa1fafadf1e62a320445dc073" translate="yes" xml:space="preserve">
          <source>This method transfers the entire content of the given source string into this buffer. An invocation of this method of the form &lt;code&gt;dst.put(s)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">此方法将给定源字符串的全部内容传输到此缓冲区中。以 &lt;code&gt;dst.put(s)&lt;/code&gt; 形式调用此方法的行为与调用的行为完全相同</target>
        </trans-unit>
        <trans-unit id="a7e8d2693c4c7919f019fc03e508dc0d5323f922" translate="yes" xml:space="preserve">
          <source>This method transfers the floats remaining in the given source buffer into this buffer. If there are more floats remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no floats are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的浮点数转移到此缓冲区中。如果源缓冲区中剩余的浮点数多于此缓冲区中的浮点数，即 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不传输任何浮点数，并抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74f84fb40f856ee9bcde48b317e90434d189c396" translate="yes" xml:space="preserve">
          <source>This method transfers the ints remaining in the given source buffer into this buffer. If there are more ints remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no ints are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的整数传输到此缓冲区中。如果源缓冲区中剩余的整数多于此缓冲区中的整数，也就是说，如果 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; missing &lt;code&gt;remaining()&lt;/code&gt; ，则不会传输任何整数，并且会抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf156e58f7f2faea5e78527ce5d350c9f9b1e427" translate="yes" xml:space="preserve">
          <source>This method transfers the longs remaining in the given source buffer into this buffer. If there are more longs remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no longs are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的长型转移到该缓冲区中。如果源缓冲区中的剩余长度比该缓冲区中的剩余长度多，也就是说，如果 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不会传输任何长度，并且会抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6275e6cdadf99dcd9699c2abf6e9c8f15ea87718" translate="yes" xml:space="preserve">
          <source>This method transfers the shorts remaining in the given source buffer into this buffer. If there are more shorts remaining in the source buffer than in this buffer, that is, if &lt;code&gt;src.remaining()&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;remaining()&lt;/code&gt;, then no shorts are transferred and a &lt;a href=&quot;bufferoverflowexception&quot;&gt;&lt;code&gt;BufferOverflowException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">此方法将给定源缓冲区中剩余的短路转移到该缓冲区中。如果源缓冲区中剩余的短裤要多于此缓冲区，也就是说，如果 &lt;code&gt;src.remaining()&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;remaining()&lt;/code&gt; ，则不会传输任何短裤，并且会抛出&lt;a href=&quot;bufferoverflowexception&quot;&gt; &lt;code&gt;BufferOverflowException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4ee60b3895a6a487dacc74792ace15f9baee8c4" translate="yes" xml:space="preserve">
          <source>This method transforms the name of the given service class into a provider-configuration filename as described in the class comment and then uses the &lt;code&gt;getResources&lt;/code&gt; method of the given class loader to find all available files with that name. These files are then read and parsed to produce a list of provider-class names. The iterator that is returned uses the given class loader to look up and then instantiate each element of the list.</source>
          <target state="translated">此方法按照类注释中的描述将给定服务类的名称转换为提供程序配置文件名，然后使用给定类加载器的 &lt;code&gt;getResources&lt;/code&gt; 方法查找具有该名称的所有可用文件。然后读取并解析这些文件以生成提供程序类名称的列表。返回的迭代器使用给定的类加载器查找并实例化列表中的每个元素。</target>
        </trans-unit>
        <trans-unit id="0e20f22914845cefe6c7ffc1b8c01c71a6ad302c" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的Provider开始,遍历注册的安全Provider列表。返回一个新的AlgorithmParameterGenerator对象,该对象封装了第一个支持指定算法的Provider的AlgorithmParameterGeneratorSpi实现。</target>
        </trans-unit>
        <trans-unit id="861bf1ddb45b5f5a0f444b57fb796617403bff70" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。从第一个支持指定算法的Provider开始,返回一个新的AlgorithmParameters对象,该对象封装了AlgorithmParametersSpi的实现。</target>
        </trans-unit>
        <trans-unit id="64d2235fe5c1102582764745f2a042a3742b5103" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的Provider开始,遍历注册的安全Provider列表。将返回一个新的CertPathBuilder对象,该对象封装了第一个支持指定算法的Provider的CertPathBuilderSpi实现。</target>
        </trans-unit>
        <trans-unit id="bb4e8caa4b0e5ae83ddf7619b6a4660f90e91651" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。将返回一个新的CertPathValidator对象,该对象封装了第一个支持指定算法的Provider的CertPathValidatorSpi实现。</target>
        </trans-unit>
        <trans-unit id="70cdc12e5335367106038cfbcf17f66666510e89" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertStore object encapsulating the CertStoreSpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">本方法从最喜欢的Provider开始,遍历注册的安全Provider列表。从第一个支持指定类型的Provider开始,返回一个封装CertStoreSpi实现的新CertStore对象。</target>
        </trans-unit>
        <trans-unit id="b035a3126fc179ccecea1573350ca6adb1eef540" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。从第一个支持指定类型的Provider开始,返回一个封装了CertificateFactorySpi实现的新CertificateFactory对象。</target>
        </trans-unit>
        <trans-unit id="b0a4f8b9f224da98416657ddc681032df9ad7502" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Cipher object encapsulating the CipherSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。从第一个支持指定算法的提供者那里返回一个封装CipherSpi实现的新Cipher对象。</target>
        </trans-unit>
        <trans-unit id="abc13eba8b4098f245111a4713ba335645f40638" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">这个方法从最喜欢的Provider开始,遍历注册的安全Provider列表。将返回一个新的ExemptionMechanism对象,该对象封装了来自第一个支持指定算法的Provider的ExemptionMechanismSpi实现。</target>
        </trans-unit>
        <trans-unit id="7ac976f1ac6eae73943e67c6b13b9a978c32b598" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。从第一个支持指定算法的提供者那里返回一个新的KeyAgreement对象,该对象封装了KeyAgreementSpi的实现。</target>
        </trans-unit>
        <trans-unit id="269faf6fc5a11a627d2c78ca4fa05ee8ddcff60b" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyFactory object encapsulating the KeyFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的Provider开始,遍历注册的安全Provider列表。从第一个支持指定算法的Provider开始,返回一个封装KeyFactorySpi实现的新KeyFactory对象。</target>
        </trans-unit>
        <trans-unit id="9680c754a5982fcf19547802ad41f748f39d6c95" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。将返回一个新的KeyGenerator对象,该对象封装了支持指定算法的第一个提供者的KeyGeneratorSpi实现。</target>
        </trans-unit>
        <trans-unit id="05a476b6f146e1e764724c3725cd2eddecf486e6" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">这个方法从最喜欢的Provider开始,遍历注册的安全Provider列表。返回一个新的KeyManagerFactory对象,该对象封装了第一个支持指定算法的提供者的KeyManagerFactorySpi实现。</target>
        </trans-unit>
        <trans-unit id="4e6ede446bcde0dd0d53e13cc1f70412538c6dfd" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。将返回一个新的KeyPairGenerator对象,该对象封装了第一个支持指定算法的Provider的KeyPairGeneratorSpi实现。</target>
        </trans-unit>
        <trans-unit id="1130ebd67c10415c74551edfb65dedc7e1429e91" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new KeyStore object encapsulating the KeyStoreSpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">本方法从最喜欢的Provider开始,遍历注册的安全Provider列表。从第一个支持指定类型的Provider开始,返回一个封装KeyStoreSpi实现的新KeyStore对象。</target>
        </trans-unit>
        <trans-unit id="17e781ebbe3b6ae6b015bda00c96dc377e2b949a" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Mac object encapsulating the MacSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。从第一个支持指定算法的提供者那里返回一个封装MacSpi实现的新Mac对象。</target>
        </trans-unit>
        <trans-unit id="87eb869d88b8269b9030d46317da4a090e82ef8a" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new MessageDigest object encapsulating the MessageDigestSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的提供者开始,遍历注册的安全提供者列表。从第一个支持指定算法的提供者那里返回一个封装了MessageDigestSpi实现的新MessageDigest对象。</target>
        </trans-unit>
        <trans-unit id="dced037fdf454bc1808c04019b299b4b7ad46c4e" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new SSLContext object encapsulating the SSLContextSpi implementation from the first Provider that supports the specified protocol is returned.</source>
          <target state="translated">此方法从最喜欢的提供者开始,遍历注册的安全提供者列表。将返回一个新的SSLContext对象,该对象封装了来自第一个支持指定协议的提供者的SSLContextSpi实现。</target>
        </trans-unit>
        <trans-unit id="3b2e2d4fb613416e23035530cb8e29bc024108eb" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">这个方法从最喜欢的Provider开始,遍历注册的安全Provider列表。返回一个新的SecretKeyFactory对象,该对象封装了第一个支持指定算法的Provider的SecretKeyFactorySpi实现。</target>
        </trans-unit>
        <trans-unit id="a992e79992c091682f89e2161d9518c8dabb5067" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new SecureRandom object encapsulating the SecureRandomSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">这个方法从最喜欢的Provider开始,遍历注册的安全Provider列表。从第一个支持指定算法的提供者那里返回一个新的SecureRandom对象,该对象封装了SecureRandomSpi的实现。</target>
        </trans-unit>
        <trans-unit id="319ec56b8541176cc1565c9bd60099f7ab2ba15a" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new Signature object encapsulating the SignatureSpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">本方法从最喜欢的Provider开始,遍历注册的安全Provider列表。从第一个支持指定算法的Provider开始,返回一个封装SignatureSpi实现的新Signature对象。</target>
        </trans-unit>
        <trans-unit id="39cd453c6b8f21fce09148fa3a2085c191cadac4" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security Providers, starting with the most preferred Provider. A new TrustManagerFactory object encapsulating the TrustManagerFactorySpi implementation from the first Provider that supports the specified algorithm is returned.</source>
          <target state="translated">这个方法从最喜欢的Provider开始,遍历注册的安全Provider列表。将返回一个新的TrustManagerFactory对象,该对象封装了第一个支持指定算法的Provider的TrustManagerFactorySpi实现。</target>
        </trans-unit>
        <trans-unit id="64547557e19cc6a474eb34baeea233207c4f9d00" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security providers, starting with the most preferred Provider. A new Configuration object encapsulating the ConfigurationSpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">此方法从最喜欢的 Provider 开始,遍历注册的安全提供者列表。从第一个支持指定类型的提供者那里返回一个封装 ConfigurationSpi 实现的新配置对象。</target>
        </trans-unit>
        <trans-unit id="b3f003fe3131053435b502ff056cd34745faa289" translate="yes" xml:space="preserve">
          <source>This method traverses the list of registered security providers, starting with the most preferred Provider. A new Policy object encapsulating the PolicySpi implementation from the first Provider that supports the specified type is returned.</source>
          <target state="translated">这个方法从最喜欢的Provider开始,遍历注册的安全提供者列表。从第一个支持指定类型的提供者那里返回一个封装PolicySpi实现的新Policy对象。</target>
        </trans-unit>
        <trans-unit id="330118e6c243a9fbc3db9baecbe25b03b457aab9" translate="yes" xml:space="preserve">
          <source>This method tries to read one character from the current substream. If it reaches the end of the stream, it calls the &lt;code&gt;close&lt;/code&gt; method of the current substream and begins reading from the next substream.</source>
          <target state="translated">此方法尝试从当前子流中读取一个字符。如果到达流的末尾，它将调用当前子流的 &lt;code&gt;close&lt;/code&gt; 方法并开始从下一个子流读取。</target>
        </trans-unit>
        <trans-unit id="10734c290b53c0effa88e0a90e362fce2b806c6d" translate="yes" xml:space="preserve">
          <source>This method typically does not modify the map in any way, instead allowing the map to modify itself as directed by its return value. It</source>
          <target state="translated">这个方法通常不以任何方式修改地图,而是允许地图按照其返回值的指示修改自己。它</target>
        </trans-unit>
        <trans-unit id="c068b17d7cd1a40020333c0031878fe78af5800e" translate="yes" xml:space="preserve">
          <source>This method updates the file's timestamp attributes. The values are converted to the epoch and precision supported by the file system. Converting from finer to coarser granularities result in precision loss. The behavior of this method when attempting to set a timestamp that is not supported or to a value that is outside the range supported by the underlying file store is not defined. It may or not fail by throwing an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">此方法更新文件的时间戳属性。值将转换为文件系统支持的纪元和精度。从较细粒度转换为较粗粒度会导致精度损失。尝试设置不支持的时间戳或将其设置为基础文件存储支持的范围之外的值时，此方法的行为未定义。通过抛出 &lt;code&gt;IOException&lt;/code&gt; 可能会失败，也可能不会失败。</target>
        </trans-unit>
        <trans-unit id="ca98706202417f601d9a75f9aab39ea80b754077" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;deflater#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(b)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">此方法使用&lt;a href=&quot;deflater#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt;作为其压缩刷新模式。调用这种形式为 &lt;code&gt;deflater.deflate(b)&lt;/code&gt; 的方法所产生的结果与调用 &lt;code&gt;deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07ab2be0ecd985ea652ab80e0c9de591cb58c95b" translate="yes" xml:space="preserve">
          <source>This method uses &lt;a href=&quot;deflater#NO_FLUSH&quot;&gt;&lt;code&gt;NO_FLUSH&lt;/code&gt;&lt;/a&gt; as its compression flush mode. An invocation of this method of the form &lt;code&gt;deflater.deflate(b, off, len)&lt;/code&gt; yields the same result as the invocation of &lt;code&gt;deflater.deflate(b, off, len, Deflater.NO_FLUSH)&lt;/code&gt;.</source>
          <target state="translated">此方法使用&lt;a href=&quot;deflater#NO_FLUSH&quot;&gt; &lt;code&gt;NO_FLUSH&lt;/code&gt; &lt;/a&gt;作为其压缩刷新模式。调用形式为 &lt;code&gt;deflater.deflate(b, off, len)&lt;/code&gt; 产生的结果与调用 &lt;code&gt;deflater.deflate(b, off, len, Deflater.NO_FLUSH)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38447029b3f80e6af72b910f78b202f9398ca5ec" translate="yes" xml:space="preserve">
          <source>This method uses the installed &lt;a href=&quot;spi/filetypedetector&quot;&gt;&lt;code&gt;FileTypeDetector&lt;/code&gt;&lt;/a&gt; implementations to probe the given file to determine its content type. Each file type detector's &lt;a href=&quot;spi/filetypedetector#probeContentType-java.nio.file.Path-&quot;&gt;&lt;code&gt;probeContentType&lt;/code&gt;&lt;/a&gt; is invoked, in turn, to probe the file type. If the file is recognized then the content type is returned. If the file is not recognized by any of the installed file type detectors then a system-default file type detector is invoked to guess the content type.</source>
          <target state="translated">此方法使用已安装的&lt;a href=&quot;spi/filetypedetector&quot;&gt; &lt;code&gt;FileTypeDetector&lt;/code&gt; &lt;/a&gt;实现来探测给定文件以确定其内容类型。依次调用每个文件类型检测器的&lt;a href=&quot;spi/filetypedetector#probeContentType-java.nio.file.Path-&quot;&gt; &lt;code&gt;probeContentType&lt;/code&gt; &lt;/a&gt;以探测文件类型。如果识别出文件，则返回内容类型。如果任何已安装的文件类型检测器无法识别该文件，则将调用系统默认的文件类型检测器来猜测内容类型。</target>
        </trans-unit>
        <trans-unit id="898c65c53674ccde27230059a0d836d532ebb58e" translate="yes" xml:space="preserve">
          <source>This method uses the specified state factories in the &lt;code&gt;Context.STATE_FACTORIES&lt;/code&gt; property from the environment properties, and from the provider resource file associated with &lt;code&gt;nameCtx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in returning the object's state is the one used. If no object's state can be retrieved in this way, return the object itself. If an exception is encountered while retrieving the state, the exception is passed up to the caller.</source>
          <target state="translated">此方法使用环境属性以及与 &lt;code&gt;nameCtx&lt;/code&gt; 关联的提供程序资源文件中的 &lt;code&gt;Context.STATE_FACTORIES&lt;/code&gt; 属性中的指定状态工厂（按此顺序）。此属性的值是按顺序尝试的工厂类名称的冒号分隔列表，并且使用第一个成功返回对象状态的名称。如果无法通过这种方式检索对象的状态，请返回对象本身。如果在检索状态时遇到异常，则会将该异常向上传递给调用方。</target>
        </trans-unit>
        <trans-unit id="8a84288afc4ef56ac95fa54ce28f59cc8758819e" translate="yes" xml:space="preserve">
          <source>This method walks a file tree rooted at a given starting file. The file tree traversal is &lt;em&gt;depth-first&lt;/em&gt; with the given &lt;a href=&quot;filevisitor&quot;&gt;&lt;code&gt;FileVisitor&lt;/code&gt;&lt;/a&gt; invoked for each file encountered. File tree traversal completes when all accessible files in the tree have been visited, or a visit method returns a result of &lt;a href=&quot;filevisitresult#TERMINATE&quot;&gt;&lt;code&gt;TERMINATE&lt;/code&gt;&lt;/a&gt;. Where a visit method terminates due an &lt;code&gt;IOException&lt;/code&gt;, an uncaught error, or runtime exception, then the traversal is terminated and the error or exception is propagated to the caller of this method.</source>
          <target state="translated">此方法遍历以给定起始文件为根的文件树。文件树遍历是&lt;em&gt;深度优先的&lt;/em&gt;，为遇到的每个文件调用给定的&lt;a href=&quot;filevisitor&quot;&gt; &lt;code&gt;FileVisitor&lt;/code&gt; &lt;/a&gt;。当访问树中所有可访问的文件或访问方法返回&lt;a href=&quot;filevisitresult#TERMINATE&quot;&gt; &lt;code&gt;TERMINATE&lt;/code&gt; &lt;/a&gt;的结果时，文件树遍历完成。如果访问方法由于 &lt;code&gt;IOException&lt;/code&gt; ，未捕获的错误或运行时异常而终止，则遍历将终止，并且该错误或异常将传播到此方法的调用方。</target>
        </trans-unit>
        <trans-unit id="07587ec8793bc110ca2ed6b1a01f5862917816af" translate="yes" xml:space="preserve">
          <source>This method walks the file tree in exactly the manner specified by the &lt;a href=&quot;files#walk-java.nio.file.Path-int-java.nio.file.FileVisitOption...-&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method. For each file encountered, the given &lt;a href=&quot;../../util/function/bipredicate&quot;&gt;&lt;code&gt;BiPredicate&lt;/code&gt;&lt;/a&gt; is invoked with its &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Path&lt;/code&gt; object is obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the relative path against &lt;code&gt;start&lt;/code&gt; and is only included in the returned &lt;a href=&quot;../../util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;BiPredicate&lt;/code&gt; returns true. Compare to calling &lt;a href=&quot;../../util/stream/stream#filter-java.util.function.Predicate-&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Stream&lt;/code&gt; returned by &lt;code&gt;walk&lt;/code&gt; method, this method may be more efficient by avoiding redundant retrieval of the &lt;code&gt;BasicFileAttributes&lt;/code&gt;.</source>
          <target state="translated">此方法完全按照&lt;a href=&quot;files#walk-java.nio.file.Path-int-java.nio.file.FileVisitOption...-&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt;方法指定的方式遍历文件树。对于遇到的每个文件，&lt;a href=&quot;../../util/function/bipredicate&quot;&gt; &lt;code&gt;BiPredicate&lt;/code&gt; &lt;/a&gt;使用其&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;调用给定的BiPredicate。就像通过&lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt;相对于 &lt;code&gt;start&lt;/code&gt; 的相对路径来获得 &lt;code&gt;Path&lt;/code&gt; 对象一样，并且仅当 &lt;code&gt;BiPredicate&lt;/code&gt; 返回true时，Path对象才包含在返回的&lt;a href=&quot;../../util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; 中&lt;/a&gt;。与在 &lt;code&gt;walk&lt;/code&gt; 方法返回的 &lt;code&gt;Stream&lt;/code&gt; 上调用&lt;a href=&quot;../../util/stream/stream#filter-java.util.function.Predicate-&quot;&gt; &lt;code&gt;filter&lt;/code&gt; 相比&lt;/a&gt;，该方法通过避免对 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 的冗余检索可能会更高效。</target>
        </trans-unit>
        <trans-unit id="7c96cbac1ce71994c1502c052604dbfd689d21d9" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt; and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">此方法已添加到Java 2 Platform Standard Edition的1.4版中。为了保持与现有服务提供商的向后兼容性，此方法不能 &lt;code&gt;abstract&lt;/code&gt; 并且默认情况下抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="646647deb0c95e19113854f668991dfe58a46511" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not &lt;code&gt;abstract&lt;/code&gt; and it provides a default implementation. Subclasses should override this method with a correct implementation.</source>
          <target state="translated">此方法已添加到Java 2 Platform Standard Edition的1.4版中。为了保持与现有服务提供商的向后兼容性，此方法不是 &lt;code&gt;abstract&lt;/code&gt; ，而是提供了默认实现。子类应使用正确的实现重写此方法。</target>
        </trans-unit>
        <trans-unit id="1dcffec8464f4cfecef5fdd4f8360fb78fb1fd0d" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be &lt;code&gt;abstract&lt;/code&gt; and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">此方法已添加到Java Platform Standard Edition的1.8版中。为了保持与现有服务提供商的向后兼容性，此方法不能 &lt;code&gt;abstract&lt;/code&gt; 并且默认情况下抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e22ad565b9276d2c64dd81c7c016357cbdd9bd58" translate="yes" xml:space="preserve">
          <source>This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be abstract and by default throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">此方法已添加到Java Platform Standard Edition的1.8版中。为了保持与现有服务提供商的向后兼容性，此方法不能抽象，并且默认情况下抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="342c773ec2e87fc177a5aa9af9b63a84e94c590d" translate="yes" xml:space="preserve">
          <source>This method will allow trusted subclasses of ObjectInputStream to substitute one object for another during deserialization. Replacing objects is disabled until enableResolveObject is called. The enableResolveObject method checks that the stream requesting to resolve object can be trusted. Every reference to serializable objects is passed to resolveObject. To insure that the private state of objects is not unintentionally exposed only trusted streams may use resolveObject.</source>
          <target state="translated">该方法将允许ObjectInputStream的可信子类在反序列化过程中用一个对象替换另一个对象。在调用enableResolveObject之前,替换对象是被禁止的。enableResolveObject方法会检查请求解析对象的流是否可以被信任。每一个可序列化对象的引用都会传递给resolveObject。为了保证对象的私有状态不会被无意中暴露,只有受信任的流可以使用resolveObject。</target>
        </trans-unit>
        <trans-unit id="19a1ca10d56e8668efe2fb611286d49ab3dd4578" translate="yes" xml:space="preserve">
          <source>This method will allow trusted subclasses of ObjectOutputStream to substitute one object for another during serialization. Replacing objects is disabled until enableReplaceObject is called. The enableReplaceObject method checks that the stream requesting to do replacement can be trusted. The first occurrence of each object written into the serialization stream is passed to replaceObject. Subsequent references to the object are replaced by the object returned by the original call to replaceObject. To ensure that the private state of objects is not unintentionally exposed, only trusted streams may use replaceObject.</source>
          <target state="translated">该方法将允许ObjectOutputStream的受信任子类在序列化过程中用一个对象替换另一个对象。在调用enableReplaceObject之前,替换对象被禁用。enableReplaceObject方法会检查请求做替换的流是否可以被信任。写入序列化流中的每个对象的第一次出现被传递给replaceObject。随后对该对象的引用会被最初调用replaceObject返回的对象所替换。为了保证对象的私有状态不被无意中暴露,只有受信任的流才可以使用replaceObject。</target>
        </trans-unit>
        <trans-unit id="7c27c2f10702143a6756e5dbce224fb2f266b502" translate="yes" xml:space="preserve">
          <source>This method will always read an integral number of frames. If &lt;code&gt;len&lt;/code&gt; does not specify an integral number of frames, a maximum of &lt;code&gt;len - (len % frameSize)
 &lt;/code&gt; bytes will be read.</source>
          <target state="translated">此方法将始终读取整数个帧。如果 &lt;code&gt;len&lt;/code&gt; 未指定整数帧，则最多读取 &lt;code&gt;len - (len % frameSize) &lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="a869932e634c911cd9144a80eb52838c63564e87" translate="yes" xml:space="preserve">
          <source>This method will always read an integral number of frames. If the length of the array is not an integral number of frames, a maximum of &lt;code&gt;b.length - (b.length % frameSize)
 &lt;/code&gt; bytes will be read.</source>
          <target state="translated">此方法将始终读取整数个帧。如果数组的长度不是帧的整数，则将读取最大 &lt;code&gt;b.length - (b.length % frameSize) &lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="9b30e52019d3213e3c2609683448a29ced2c0233" translate="yes" xml:space="preserve">
          <source>This method will attempt to consume one complete SSL/TLS network packet, but will never consume more than the sum of the bytes remaining in the buffers. Each &lt;code&gt;ByteBuffer&lt;/code&gt;'s position is updated to reflect the amount of data consumed or produced. The limits remain the same.</source>
          <target state="translated">此方法将尝试使用一个完整的SSL / TLS网络数据包，但永远不会消耗超过缓冲区中剩余字节总数。每个 &lt;code&gt;ByteBuffer&lt;/code&gt; 的位置都会更新，以反映消耗或产生的数据量。限制保持不变。</target>
        </trans-unit>
        <trans-unit id="e28d69322e01ed6ceb66bdee0acbea95ff6bbbce" translate="yes" xml:space="preserve">
          <source>This method will attempt to produce SSL/TLS records, and will consume as much source data as possible, but will never consume more than the sum of the bytes remaining in each buffer. Each &lt;code&gt;ByteBuffer&lt;/code&gt;'s position is updated to reflect the amount of data consumed or produced. The limits remain the same.</source>
          <target state="translated">此方法将尝试生成SSL / TLS记录，并且将消耗尽可能多的源数据，但永远不会消耗超过每个缓冲区中剩余字节的总和。每个 &lt;code&gt;ByteBuffer&lt;/code&gt; 的位置都会更新，以反映消耗或产生的数据量。限制保持不变。</target>
        </trans-unit>
        <trans-unit id="8f918371c98671b9620e0549e5bc6fc24ae0e167" translate="yes" xml:space="preserve">
          <source>This method will be invoked within the first thread that accesses the value with the &lt;a href=&quot;classvalue#get-java.lang.Class-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该方法将在使用&lt;a href=&quot;classvalue#get-java.lang.Class-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;方法访问该值的第一个线程内调用。</target>
        </trans-unit>
        <trans-unit id="22454f54424ac0425295bb1b7c4c0c7b02e19e6d" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printstream#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;false&lt;/code&gt; until another write operation fails and invokes &lt;a href=&quot;printstream#setError--&quot;&gt;&lt;code&gt;setError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法将导致后续的&lt;a href=&quot;printstream#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt;调用返回 &lt;code&gt;false&lt;/code&gt; ,直到另一个写操作失败并调用&lt;a href=&quot;printstream#setError--&quot;&gt; &lt;code&gt;setError()&lt;/code&gt; &lt;/a&gt;为止。</target>
        </trans-unit>
        <trans-unit id="0f3fe52cec4ed5c62b654ad2e7e08c4f49989342" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printstream#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; until &lt;a href=&quot;printstream#clearError--&quot;&gt;&lt;code&gt;clearError()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">在调用&lt;a href=&quot;printstream#clearError--&quot;&gt; &lt;code&gt;clearError()&lt;/code&gt; &lt;/a&gt;之前，此方法将导致对&lt;a href=&quot;printstream#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; 的&lt;/a&gt;后续调用返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b48d9418c05d19aff8ec8631b1debfac763c87cf" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printwriter#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;false&lt;/code&gt; until another write operation fails and invokes &lt;a href=&quot;printwriter#setError--&quot;&gt;&lt;code&gt;setError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法将导致后续的&lt;a href=&quot;printwriter#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; &lt;/a&gt;调用返回 &lt;code&gt;false&lt;/code&gt; ,直到另一个写操作失败并调用&lt;a href=&quot;printwriter#setError--&quot;&gt; &lt;code&gt;setError()&lt;/code&gt; &lt;/a&gt;为止。</target>
        </trans-unit>
        <trans-unit id="47f729f00024e35a9de98e956d4deb97fb2c191c" translate="yes" xml:space="preserve">
          <source>This method will cause subsequent invocations of &lt;a href=&quot;printwriter#checkError--&quot;&gt;&lt;code&gt;checkError()&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; until &lt;a href=&quot;printwriter#clearError--&quot;&gt;&lt;code&gt;clearError()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">在调用&lt;a href=&quot;printwriter#clearError--&quot;&gt; &lt;code&gt;clearError()&lt;/code&gt; &lt;/a&gt;之前，此方法将导致对&lt;a href=&quot;printwriter#checkError--&quot;&gt; &lt;code&gt;checkError()&lt;/code&gt; 的&lt;/a&gt;后续调用返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4f3ee30d84b2eec94c2f48c2e18ba63a39e2104" translate="yes" xml:space="preserve">
          <source>This method will continue to return the set of options even after the channel has been closed.</source>
          <target state="translated">即使在通道关闭后,这个方法将继续返回一组选项。</target>
        </trans-unit>
        <trans-unit id="55bcb28f3b35747462d71e2c7fb1036108c5c393" translate="yes" xml:space="preserve">
          <source>This method will create a formatter based on a simple &lt;a href=&quot;#patterns&quot;&gt;pattern of letters and symbols&lt;/a&gt; as described in the class documentation. For example, &lt;code&gt;d MMM uuuu&lt;/code&gt; will format 2011-12-03 as '3 Dec 2011'.</source>
          <target state="translated">此方法将根据类文档中描述的简单&lt;a href=&quot;#patterns&quot;&gt;字母和符号模式&lt;/a&gt;创建格式化程序。例如， &lt;code&gt;d MMM uuuu&lt;/code&gt; 会将2011-12-03格式设置为&amp;ldquo; 2011年12月3日&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="370c438905ce1a92b71c0ea98edd24464fd0bb80" translate="yes" xml:space="preserve">
          <source>This method will first search the parent class loader for the resource; if the parent is &lt;code&gt;null&lt;/code&gt; the path of the class loader built-in to the virtual machine is searched. That failing, this method will invoke &lt;a href=&quot;classloader#findResource-java.lang.String-&quot;&gt;&lt;code&gt;findResource(String)&lt;/code&gt;&lt;/a&gt; to find the resource.</source>
          <target state="translated">此方法将首先在父类加载器中搜索资源；如果父级为 &lt;code&gt;null&lt;/code&gt; ，则搜索虚拟机内置的类加载器的路径。失败的话，此方法将调用&lt;a href=&quot;classloader#findResource-java.lang.String-&quot;&gt; &lt;code&gt;findResource(String)&lt;/code&gt; &lt;/a&gt;来查找资源。</target>
        </trans-unit>
        <trans-unit id="e22bc5b12358cd9ed2b2e4b4eda7b2f13e5a5fcf" translate="yes" xml:space="preserve">
          <source>This method will initiate the initial handshake if necessary and then block until the handshake has been established.</source>
          <target state="translated">如果有必要,该方法将启动初始握手,然后阻塞,直到握手建立。</target>
        </trans-unit>
        <trans-unit id="2b6fb4cec5310ed7b8799c65e0e6a81271c9aae4" translate="yes" xml:space="preserve">
          <source>This method will modify &lt;code&gt;environment&lt;/code&gt; and save a reference to it. The caller may no longer modify it.</source>
          <target state="translated">此方法将修改 &lt;code&gt;environment&lt;/code&gt; 并保存对它的引用。呼叫者可能不再对其进行修改。</target>
        </trans-unit>
        <trans-unit id="a7b2abdca9a7c0af8a5c125ae4c9b4ef88001f88" translate="yes" xml:space="preserve">
          <source>This method will not cause a connection to be initiated. If the connection was not connected, or if the server did not have an error while connecting or if the server had an error but no error data was sent, this method will return null. This is the default.</source>
          <target state="translated">这个方法不会导致连接被启动。如果连接没有连接,或者服务器在连接时没有出错,或者服务器出错但没有发送错误数据,这个方法将返回null。这是默认的。</target>
        </trans-unit>
        <trans-unit id="9e7f49dd9f508918d6801e6f7eb970e438d414c6" translate="yes" xml:space="preserve">
          <source>This method will return -1 in the following three cases:</source>
          <target state="translated">在以下三种情况下,本方法将返回-1。</target>
        </trans-unit>
        <trans-unit id="edcfcea6d04841d9ed0bb5de222b4eb4d98438dc" translate="yes" xml:space="preserve">
          <source>This method will return &lt;code&gt;null&lt;/code&gt; if this thread is not blocked waiting for any object or if the object is not owned by any thread.</source>
          <target state="translated">如果未阻塞此线程等待任何对象，或者该对象不属于任何线程，则此方法将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="997d1e3c558fa4f7ecd051b0c70ae4a27ce69f5b" translate="yes" xml:space="preserve">
          <source>This method will return &lt;code&gt;null&lt;/code&gt; in the following three cases:</source>
          <target state="translated">在以下三种情况下，此方法将返回 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="81c178e68a361bc411f4196a67d165e4297f65b0" translate="yes" xml:space="preserve">
          <source>This method will return a result whether or not the chronology supports the field.</source>
          <target state="translated">无论年表是否支持该字段,本方法都将返回一个结果。</target>
        </trans-unit>
        <trans-unit id="cf72858f6d5ab0f6806f6ba29dc39dac2862dcd4" translate="yes" xml:space="preserve">
          <source>This method will return an instance of the first implementation class that it is able to load and instantiate successfully from the list of class names collected from the configuration files. This method uses the calling thread's context classloader to find the configuration files and to load the implementation class.</source>
          <target state="translated">该方法将从从配置文件中收集到的类名列表中返回能够成功加载和实例化的第一个实现类的实例。该方法使用调用线程的上下文classloader来查找配置文件并加载实现类。</target>
        </trans-unit>
        <trans-unit id="a22fb6cb28a1c2ffe0e2c125002bf45c2ce42483" translate="yes" xml:space="preserve">
          <source>This method works as if by invoking the two-argument &lt;a href=&quot;pattern#split-java.lang.CharSequence-int-&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method with the given input sequence and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</source>
          <target state="translated">该方法的工作方式就像通过调用具有给定输入序列且限制参数为零的二参数&lt;a href=&quot;pattern#split-java.lang.CharSequence-int-&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt;方法。因此，结尾的空字符串不包括在结果数组中。</target>
        </trans-unit>
        <trans-unit id="0bb6cb3b94903416fb88ff0f1bfde615391fee91" translate="yes" xml:space="preserve">
          <source>This method works as if by invoking the two-argument &lt;a href=&quot;string#split-java.lang.String-int-&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; method with the given expression and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.</source>
          <target state="translated">该方法的工作方式就像通过调用具有给定表达式且限制参数为零的二参数&lt;a href=&quot;string#split-java.lang.String-int-&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt;方法。因此，结尾的空字符串不包括在结果数组中。</target>
        </trans-unit>
        <trans-unit id="3b98c5be79fe3631e10feeff93134f4ae1b95df3" translate="yes" xml:space="preserve">
          <source>This method works as if invoking it were equivalent to evaluating the expression:</source>
          <target state="translated">这个方法的工作原理就像调用它相当于评估表达式一样。</target>
        </trans-unit>
        <trans-unit id="7454290376119065d709322b3967277568221e6a" translate="yes" xml:space="preserve">
          <source>This method works by invoking the &lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;decodeLoop&lt;/code&gt;&lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</source>
          <target state="translated">该方法的工作方式是调用&lt;a href=&quot;charsetdecoder#decodeLoop-java.nio.ByteBuffer-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;decodeLoop&lt;/code&gt; &lt;/a&gt;方法，解释其结果，处理错误情况并在必要时重新调用它。</target>
        </trans-unit>
        <trans-unit id="a2868d5c75c3ba78e01fe4c6fd94f3e0f922600f" translate="yes" xml:space="preserve">
          <source>This method works by invoking the &lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;encodeLoop&lt;/code&gt;&lt;/a&gt; method, interpreting its results, handling error conditions, and reinvoking it as necessary.</source>
          <target state="translated">该方法通过调用&lt;a href=&quot;charsetencoder#encodeLoop-java.nio.CharBuffer-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;encodeLoop&lt;/code&gt; &lt;/a&gt;方法，解释其结果，处理错误条件并在必要时重新调用来工作。</target>
        </trans-unit>
        <trans-unit id="37a8d53b4f6a1321f049b1ed691bbc3e4062f584" translate="yes" xml:space="preserve">
          <source>This method works in a similar manner to &lt;a href=&quot;files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;move&lt;/code&gt;&lt;/a&gt; method when the &lt;a href=&quot;standardcopyoption#ATOMIC_MOVE&quot;&gt;&lt;code&gt;ATOMIC_MOVE&lt;/code&gt;&lt;/a&gt; option is specified. That is, this method moves a file as an atomic file system operation. If the &lt;code&gt;srcpath&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path then it locates the source file. If the parameter is a relative path then it is located relative to this open directory. If the &lt;code&gt;targetpath&lt;/code&gt; parameter is absolute then it locates the target file (the &lt;code&gt;targetdir&lt;/code&gt; parameter is ignored). If the parameter is a relative path it is located relative to the open directory identified by the &lt;code&gt;targetdir&lt;/code&gt; parameter. In all cases, if the target file exists then it is implementation specific if it is replaced or this method fails.</source>
          <target state="translated">指定&lt;a href=&quot;standardcopyoption#ATOMIC_MOVE&quot;&gt; &lt;code&gt;ATOMIC_MOVE&lt;/code&gt; &lt;/a&gt;选项时，此方法的工作方式类似于&lt;a href=&quot;files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;move&lt;/code&gt; &lt;/a&gt;方法。即，此方法将文件移动为原子文件系统操作。如果 &lt;code&gt;srcpath&lt;/code&gt; 参数是&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;路径，则它将找到源文件。如果参数是相对路径，则它相对于此打开目录位于。如果 &lt;code&gt;targetpath&lt;/code&gt; 参数是绝对的，则它将找到目标文件（ &lt;code&gt;targetdir&lt;/code&gt; 参数将被忽略）。如果参数是相对路径，则它相对于 &lt;code&gt;targetdir&lt;/code&gt; 标识的打开目录位于参数。在所有情况下，如果目标文件存在，则替换目标文件或此方法失败都是特定于实现的。</target>
        </trans-unit>
        <trans-unit id="6582bf91ac2daba1bab0f7e3e1f2b7ae6e47e42e" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by &lt;a href=&quot;files#createTempDirectory-java.nio.file.Path-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createTempDirectory(Path,String,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</source>
          <target state="translated">对于 &lt;code&gt;dir&lt;/code&gt; 参数是临时文件目录的情况，此方法完全按照&lt;a href=&quot;files#createTempDirectory-java.nio.file.Path-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createTempDirectory(Path,String,FileAttribute[])&lt;/code&gt; &lt;/a&gt;方法指定的方式工作。</target>
        </trans-unit>
        <trans-unit id="cfb8b1f167ebd230d3d00c4cbc7ac7f5b4a612c2" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#createTempFile-java.nio.file.Path-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createTempFile(Path,String,String,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;dir&lt;/code&gt; parameter is the temporary-file directory.</source>
          <target state="translated">对于 &lt;code&gt;dir&lt;/code&gt; 参数是临时文件目录的情况，此方法完全按照&lt;a href=&quot;files#createTempFile-java.nio.file.Path-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createTempFile(Path,String,String,FileAttribute[])&lt;/code&gt; &lt;/a&gt;方法指定的方式工作。</target>
        </trans-unit>
        <trans-unit id="1ea541f8c42c220b9d86951a4fa49aad31c612a1" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.newByteChannel&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path. When the parameter is a relative path then the file to open or create is relative to this open directory. In addition to the options defined by the &lt;code&gt;Files.newByteChannel&lt;/code&gt; method, the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</source>
          <target state="translated">在 &lt;code&gt;path&lt;/code&gt; 参数是&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;路径的情况下，此方法完全按照&lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.newByteChannel&lt;/code&gt; &lt;/a&gt;方法指定的方式工作。如果参数是相对路径，则要打开或创建的文件相对于此打开目录。除了由 &lt;code&gt;Files.newByteChannel&lt;/code&gt; 方法定义的选项之外，如果文件是符号链接，则可以使用&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;选项来确保此方法失败。</target>
        </trans-unit>
        <trans-unit id="9f83f0d9238b18b32a0d1cb59bc36f251647ecf6" translate="yes" xml:space="preserve">
          <source>This method works in exactly the manner specified by the &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method for the case that the &lt;code&gt;path&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path. When the parameter is a relative path then the directory to open is relative to this open directory. The &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option may be used to ensure that this method fails if the file is a symbolic link.</source>
          <target state="translated">在 &lt;code&gt;path&lt;/code&gt; 参数是&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;路径的情况下，此方法完全按照&lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;方法指定的方式工作。如果参数是相对路径，则要打开的目录是相对于此打开目录的。该&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;选项可用于确保如果该文件是一个符号链接，此方法将失败。</target>
        </trans-unit>
        <trans-unit id="418ab9ef88ce864f3d7a73b1fc1d345d0f0046f2" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</source>
          <target state="translated">此方法以与&lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer)&lt;/code&gt; &lt;/a&gt;方法相同的方式工作，除了从给定文件位置开始读取字节。如果给定的文件位置大于尝试读取时的文件大小，则不会读取任何字节。</target>
        </trans-unit>
        <trans-unit id="2136f114f7d0bd16461ba147740ed385feec2a2a" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position. If the given file position is greater than the file's size at the time that the read is attempted then no bytes are read.</source>
          <target state="translated">此方法与&lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法的工作方式相同，除了从给定文件位置开始读取字节。如果给定的文件位置大于尝试读取时的文件大小，则不会读取任何字节。</target>
        </trans-unit>
        <trans-unit id="6e2548085e2dbea138a9ac8061c89ac77484eb8c" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">此方法与&lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer)&lt;/code&gt; &lt;/a&gt;方法的工作方式相同，除了字节是从给定文件位置开始写入的。如果给定的位置大于文件的大小，则在尝试写入时，文件将增长以容纳新的字节；未指定前一个文件末尾与新写入的字节之间的任何字节的值。</target>
        </trans-unit>
        <trans-unit id="fdb689127866a66bd7f98916fdf141ecf0832dab" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position. If the given position is greater than the file's size, at the time that the write is attempted, then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">此方法与&lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;方法的工作方式相同，除了字节是从给定文件位置开始写入的。如果给定的位置大于文件的大小，则在尝试写入时，文件将增长以容纳新的字节；未指定前一个文件末尾与新写入的字节之间的任何字节的值。</target>
        </trans-unit>
        <trans-unit id="9219a92c97d7960e93769f3d0f297e4fdcf261dd" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are read starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are read.</source>
          <target state="translated">此方法与&lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read(ByteBuffer)&lt;/code&gt; &lt;/a&gt;方法的工作方式相同，除了字节是从给定文件位置而不是通道当前位置开始读取的。此方法不会修改此通道的位置。如果给定位置大于文件的当前大小，则不会读取任何字节。</target>
        </trans-unit>
        <trans-unit id="ee607bed83b2db68d329cfe1f02aaaec99d3d49f" translate="yes" xml:space="preserve">
          <source>This method works in the same manner as the &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method, except that bytes are written starting at the given file position rather than at the channel's current position. This method does not modify this channel's position. If the given position is greater than the file's current size then the file will be grown to accommodate the new bytes; the values of any bytes between the previous end-of-file and the newly-written bytes are unspecified.</source>
          <target state="translated">此方法与&lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write(ByteBuffer)&lt;/code&gt; &lt;/a&gt;方法的工作方式相同，除了字节是从给定文件位置而不是通道当前位置开始写入的。此方法不会修改此通道的位置。如果给定位置大于文件的当前大小，则文件将增长以容纳新的字节；未指定前一个文件末尾与新写入的字节之间的任何字节的值。</target>
        </trans-unit>
        <trans-unit id="6bbf2c6adcc9220204f66129d37a79f36955e554" translate="yes" xml:space="preserve">
          <source>This method writes out the preamble associated with the XML encoding if it has not been written already and then writes out all of the values that been written to the stream since the last time &lt;code&gt;flush&lt;/code&gt; was called. After flushing, all internal references to the values that were written to this stream are cleared.</source>
          <target state="translated">如果尚未编写与XML编码关联的前导，则此方法将其写出，然后写出自上次调用 &lt;code&gt;flush&lt;/code&gt; 以来已写入流中的所有值。刷新后，将清除对写入此流的值的所有内部引用。</target>
        </trans-unit>
        <trans-unit id="94823e0e57cb0baf233d121072c13efb2a18234f" translate="yes" xml:space="preserve">
          <source>This method writes the value of the attribute from a given buffer as a sequence of bytes. The size of the value to transfer is &lt;code&gt;r&lt;/code&gt;, where &lt;code&gt;r&lt;/code&gt; is the number of bytes remaining in the buffer, that is &lt;code&gt;src.remaining()&lt;/code&gt;. The sequence of bytes is transferred from the buffer starting at index &lt;code&gt;p&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is the buffer's position. Upon return, the buffer's position will be equal to &lt;code&gt;p + n&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of bytes transferred; its limit will not have changed.</source>
          <target state="translated">此方法将给定缓冲区中的属性值作为字节序列写入。要传输的值的大小为 &lt;code&gt;r&lt;/code&gt; ，其中 &lt;code&gt;r&lt;/code&gt; 是缓冲区中剩余的字节数，即 &lt;code&gt;src.remaining()&lt;/code&gt; 。字节序列从缓冲区开始，从索引 &lt;code&gt;p&lt;/code&gt; 开始传输，其中 &lt;code&gt;p&lt;/code&gt; 是缓冲区的位置。返回时，缓冲区的位置将等于 &lt;code&gt;p + n&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是传输的字节数；它的限制不会改变。</target>
        </trans-unit>
        <trans-unit id="38d65d304e01b25e0003846872bfad7b7661d75f" translate="yes" xml:space="preserve">
          <source>This method, which is specified in the &lt;a href=&quot;abstractinterruptiblechannel&quot;&gt;&lt;code&gt;AbstractInterruptibleChannel&lt;/code&gt;&lt;/a&gt; class and is invoked by the &lt;a href=&quot;../channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, in turn invokes the &lt;a href=&quot;abstractselectablechannel#implCloseSelectableChannel--&quot;&gt;&lt;code&gt;implCloseSelectableChannel&lt;/code&gt;&lt;/a&gt; method in order to perform the actual work of closing this channel. It then cancels all of this channel's keys.</source>
          <target state="translated">此方法在&lt;a href=&quot;abstractinterruptiblechannel&quot;&gt; &lt;code&gt;AbstractInterruptibleChannel&lt;/code&gt; &lt;/a&gt;类中指定，并由&lt;a href=&quot;../channel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法调用，然后依次调用&lt;a href=&quot;abstractselectablechannel#implCloseSelectableChannel--&quot;&gt; &lt;code&gt;implCloseSelectableChannel&lt;/code&gt; &lt;/a&gt;方法，以执行关闭此通道的实际工作。然后，它将取消此通道的所有键。</target>
        </trans-unit>
        <trans-unit id="af2efb0256661192d4849878e10c0e265dec4210" translate="yes" xml:space="preserve">
          <source>This method, which simply returns this &lt;code&gt;BigDecimal&lt;/code&gt; is included for symmetry with the unary minus method &lt;a href=&quot;bigdecimal#negate--&quot;&gt;&lt;code&gt;negate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一元减法&lt;a href=&quot;bigdecimal#negate--&quot;&gt; &lt;code&gt;negate()&lt;/code&gt; &lt;/a&gt;出于对称性而包含此方法，该方法仅返回此 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9378f1ab56e018a71aa81af9bef43ae951ea75f" translate="yes" xml:space="preserve">
          <source>This might be confusing for the code calling &lt;code&gt;createMBean()&lt;/code&gt; or &lt;code&gt;registerMBean()&lt;/code&gt;, as such code might assume that MBean registration has failed when such an exception is raised. Therefore it is recommended that implementations of &lt;code&gt;postRegister&lt;/code&gt; do not throw Runtime Exceptions or Errors if it can be avoided.</source>
          <target state="translated">这对于调用 &lt;code&gt;createMBean()&lt;/code&gt; 或 &lt;code&gt;registerMBean()&lt;/code&gt; 的代码可能会造成混淆，因为此类代码可能会假定在引发此类异常时MBean注册失败。因此，如果可以避免，建议 &lt;code&gt;postRegister&lt;/code&gt; 的实现不要抛出运行时异常或错误。</target>
        </trans-unit>
        <trans-unit id="d54e9cf4654f9242161858e0d36bcf06ab7a33d3" translate="yes" xml:space="preserve">
          <source>This might be confusing for the code calling &lt;code&gt;unregisterMBean()&lt;/code&gt;, as it might assume that MBean deregistration has failed. Therefore it is recommended that implementations of &lt;code&gt;postDeregister&lt;/code&gt; do not throw Runtime Exceptions or Errors if it can be avoided.</source>
          <target state="translated">这对于调用 &lt;code&gt;unregisterMBean()&lt;/code&gt; 的代码可能会造成混淆，因为它可能假定MBean注销失败。因此，如果可以避免，建议 &lt;code&gt;postDeregister&lt;/code&gt; 的实现不要抛出运行时异常或错误。</target>
        </trans-unit>
        <trans-unit id="336b1605ee24a5053590abde120e729abeca1ace" translate="yes" xml:space="preserve">
          <source>This might seem to be equivalent, if not better, but in fact it introduced a large nonuniformity because of the bias in the rounding of floating-point numbers: it was three times as likely that the low-order bit of the significand would be 0 than that it would be 1! This nonuniformity probably doesn't matter much in practice, but we strive for perfection.]</source>
          <target state="translated">这似乎是等价的,如果不是更好的话,但事实上,由于浮点数的四舍五入的偏差,它引入了一个很大的非均匀性:低阶位的significand为0的可能性是1的三倍!这个非均匀性可能在实践中并不重要,但我们追求完美。这种非均匀性在实践中可能并不重要,但我们追求完美。]</target>
        </trans-unit>
        <trans-unit id="e8c8d7884f9527b04b2c04f8b6fb7fcd86eae98c" translate="yes" xml:space="preserve">
          <source>This might seem to be equivalent, if not better, but in fact it introduced a slight nonuniformity because of the bias in the rounding of floating-point numbers: it was slightly more likely that the low-order bit of the significand would be 0 than that it would be 1.]</source>
          <target state="translated">这似乎是等价的,如果不是更好的话,但事实上,由于浮点数的四舍五入的偏差,它引入了轻微的非均匀性:意义的低阶位为0的可能性比为1的可能性略大。]</target>
        </trans-unit>
        <trans-unit id="28ec2481fd35a60681fb797a739b051f340bf847" translate="yes" xml:space="preserve">
          <source>This month-day will be passed to the formatter to produce a string.</source>
          <target state="translated">这个月日将被传递给formatter,产生一个字符串。</target>
        </trans-unit>
        <trans-unit id="a69b212000ba0a1bd05ed46b95cd13dc75a4427d" translate="yes" xml:space="preserve">
          <source>This must be a positive integer that identifies the particular interface and scope as understood by the system. Usually, the numeric values can be determined through administration tools on the system. Each interface may have multiple values, one for each scope. If the scope is unspecified, then the default value used is zero.</source>
          <target state="translated">这必须是一个正整数,用于标识系统所理解的特定接口和范围。通常,数值可以通过系统上的管理工具来确定。每个接口可以有多个值,每个作用域一个。如果作用域未指定,则使用的默认值为0。</target>
        </trans-unit>
        <trans-unit id="04f19103171bb230328568d99520d154dd3e52e4" translate="yes" xml:space="preserve">
          <source>This must be implemented by subclasses of Permission, as they are the only ones that can impose semantics on a Permission object.</source>
          <target state="translated">这必须由Permission的子类来实现,因为只有它们才能对Permission对象施加语义。</target>
        </trans-unit>
        <trans-unit id="438254d585668962ffe1d950b1670de89316768b" translate="yes" xml:space="preserve">
          <source>This must be the exact string that is returned by &lt;a href=&quot;networkinterface#getName--&quot;&gt;&lt;code&gt;NetworkInterface.getName()&lt;/code&gt;&lt;/a&gt; for the particular interface in question. When an Inet6Address is created in this way, the numeric scope-id is determined at the time the object is created by querying the relevant NetworkInterface.</source>
          <target state="translated">这必须是&lt;a href=&quot;networkinterface#getName--&quot;&gt; &lt;code&gt;NetworkInterface.getName()&lt;/code&gt; &lt;/a&gt;对于所讨论的特定接口返回的确切字符串。以这种方式创建Inet6Address时，通过查询相关的NetworkInterface来确定对象创建时的数字作用域ID。</target>
        </trans-unit>
        <trans-unit id="c449e6fc67060b977c87bc7eba4910e405eb7032" translate="yes" xml:space="preserve">
          <source>This new pseudorandom-number generator is used thereafter for all calls to this method and is used nowhere else.</source>
          <target state="translated">此后,这个新的伪随机数生成器将用于所有对该方法的调用,而不是用于其他地方。</target>
        </trans-unit>
        <trans-unit id="9c02ee81fb9b238ae20c25f183eaf2e6e0d91401" translate="yes" xml:space="preserve">
          <source>This normalizes the years and months units, leaving the days unit unchanged. The months unit is adjusted to have an absolute value less than 11, with the years unit being adjusted to compensate. For example, a period of &quot;1 Year and 15 months&quot; will be normalized to &quot;2 years and 3 months&quot;.</source>
          <target state="translated">这就使年和月单位正常化,使日单位保持不变。月份单位被调整为绝对值小于11,而年份单位则被调整为补偿。例如,&quot;1年零15个月 &quot;将被归一化为 &quot;2年零3个月&quot;。</target>
        </trans-unit>
        <trans-unit id="a6d59fc415d1ea0a63c23130c4d50721f8e3b046" translate="yes" xml:space="preserve">
          <source>This notification will be emitted when the memory usage of a memory pool is greater than or equal to its &lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt; collection usage threshold&lt;/a&gt; after the Java virtual machine has expended effort in recycling unused objects in that memory pool.</source>
          <target state="translated">在Java虚拟机花费大量精力回收该内存池中未使用的对象之后，如果内存池的内存使用量大于或等于其&lt;a href=&quot;memorypoolmxbean#CollectionThreshold&quot;&gt;收集使用量阈值&lt;/a&gt;，则将发出此通知。</target>
        </trans-unit>
        <trans-unit id="0a57b8162b18d42e492dc1dc2b4b075556527f18" translate="yes" xml:space="preserve">
          <source>This notification will be emitted when the memory usage of a memory pool is increased and has reached or exceeded its &lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt; usage threshold&lt;/a&gt; value. Subsequent crossing of the usage threshold value does not cause further notification until the memory usage has returned to become less than the usage threshold value.</source>
          <target state="translated">当内存池的内存使用量增加并且达到或超过其&lt;a href=&quot;memorypoolmxbean#UsageThreshold&quot;&gt;使用量阈&lt;/a&gt;值时，将发出此通知。直到内存使用量返回到小于使用量阈值为止，使用量阈值的后续跨越不会引起进一步的通知。</target>
        </trans-unit>
        <trans-unit id="5c75f46fd5b5682704648d10104cd4d35072f008" translate="yes" xml:space="preserve">
          <source>This number of documents attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此文档数量属性的值和 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="1d414da6ffde7bce6ec2a682cea696a1fb21152b" translate="yes" xml:space="preserve">
          <source>This number of intervening jobs attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此干预作业属性的值与 &lt;code&gt;object&lt;/code&gt; 的值的数量相等。</target>
        </trans-unit>
        <trans-unit id="c975ed78d38b34ff292997aa770e8afc80f98970" translate="yes" xml:space="preserve">
          <source>This number up attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">此number up属性的值和 &lt;code&gt;object&lt;/code&gt; 的值相等。</target>
        </trans-unit>
        <trans-unit id="4a0218e7fb4f50bb8de50aed21bfb52b65a7709c" translate="yes" xml:space="preserve">
          <source>This number up supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">此支持数量的属性的成员与 &lt;code&gt;object&lt;/code&gt; 的成员相同。</target>
        </trans-unit>
        <trans-unit id="4a66f64fd858be9aa293ec75d8e49a1a263eb7cc" translate="yes" xml:space="preserve">
          <source>This object</source>
          <target state="translated">此对象</target>
        </trans-unit>
        <trans-unit id="c525a27749e67173595a6249d7ff51a90d7e9905" translate="yes" xml:space="preserve">
          <source>This object (which is already a string!) is itself returned.</source>
          <target state="translated">这个对象(已经是一个字符串!)本身就会被返回。</target>
        </trans-unit>
        <trans-unit id="9adb36ceb763ae4a292da81dcfe8ce0f5a409ec0" translate="yes" xml:space="preserve">
          <source>This object needs to know the Relation Service expected to handle the relation. So it has to know the MBean Server where the Relation Service is registered.</source>
          <target state="translated">这个对象需要知道期望处理关系的关系服务。所以它必须知道关系服务注册的MBean服务器。</target>
        </trans-unit>
        <trans-unit id="bc9b220ed374a130f3e4dc2725ea527f11bdc81b" translate="yes" xml:space="preserve">
          <source>This object's protocol (getLocation().getProtocol()) must be equal to</source>
          <target state="translated">这个对象的协议(getLocation().getProtocol())必须等于</target>
        </trans-unit>
        <trans-unit id="81ae2fb150449b6c9b6803ea3c391efc06fd6a91" translate="yes" xml:space="preserve">
          <source>This object.</source>
          <target state="translated">这个对象。</target>
        </trans-unit>
        <trans-unit id="8238c12bc966286f9ebaf86a9a53378f498dd187" translate="yes" xml:space="preserve">
          <source>This obtains a chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得一个年代。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;Chronology&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="287698e1a835eb0ac9ae3bbfadc46d1e5e7f050f" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Hijrah calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;HijrahDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间在Hijrah日历系统中获取日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;HijrahDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d38e5c4260a892ffe699a9892b9fbf69b62aa72" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Japanese calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;JapaneseDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间在日语日历系统中获取日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;JapaneseDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf55c9ddc36374789f950113e62c9eba93629679" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Minguo calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;MinguoDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间在Minguo日历系统中获取日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;MinguoDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="211270c5c60d8302e3c4e1e0bd5f3db31a768790" translate="yes" xml:space="preserve">
          <source>This obtains a date in the Thai Buddhist calendar system based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ThaiBuddhistDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间在泰国佛教日历系统中获取日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d63d938408c738d7497bbdbd8bc18bbb2d57c1f5" translate="yes" xml:space="preserve">
          <source>This obtains a date in this chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间在此年表中获得一个日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cb73ff77f8180b5f5b71cdaa26c8a4b69324bb8" translate="yes" xml:space="preserve">
          <source>This obtains a date-time in this chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间在此年代中获得日期时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a841677746e1dcbc730487e0f048036907a65a1" translate="yes" xml:space="preserve">
          <source>This obtains a day-of-week based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;DayOfWeek&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得星期几。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;DayOfWeek&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56f59ecd54b7544d299a158b780196d483fc88b4" translate="yes" xml:space="preserve">
          <source>This obtains a duration based on the specified amount. A &lt;code&gt;TemporalAmount&lt;/code&gt; represents an amount of time, which may be date-based or time-based, which this factory extracts to a duration.</source>
          <target state="translated">这将基于指定的数量获得持续时间。甲 &lt;code&gt;TemporalAmount&lt;/code&gt; 表示的时间量，其可以是日期为基础的或基于时间的，这此工厂中提取到的持续时间。</target>
        </trans-unit>
        <trans-unit id="744b9378dcec8913127823d474e8ab2211625767" translate="yes" xml:space="preserve">
          <source>This obtains a local date based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获取本地日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f336f4d854c716810eee21b19d13c14e911a1473" translate="yes" xml:space="preserve">
          <source>This obtains a local date based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获取本地日期。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;LocalDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b66ecc75e8f7fb3d4ee7fb3204291e7480a804e" translate="yes" xml:space="preserve">
          <source>This obtains a local date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获取本地日期时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a06a7013d88b4e8e0ba5da28075494a3d12c153" translate="yes" xml:space="preserve">
          <source>This obtains a local date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获取本地日期时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;LocalDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd21b3dab9e6c5958fa6db61b3447f15b5516c16" translate="yes" xml:space="preserve">
          <source>This obtains a local time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得本地时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;LocalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99522942282d6b253092e37f4f95749ad2309ce9" translate="yes" xml:space="preserve">
          <source>This obtains a month based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Month&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得一个月。一个 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意设定的日期和时间信息，此工厂皈依的实例 &lt;code&gt;Month&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f62737fb99090237f99074647deead6b4e72d895" translate="yes" xml:space="preserve">
          <source>This obtains a month-day based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;MonthDay&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得一个月日。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;MonthDay&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8dab7d66d9f1c3b1052ec6fb3c9a7c1f94bd0e7" translate="yes" xml:space="preserve">
          <source>This obtains a period based on the specified amount. A &lt;code&gt;TemporalAmount&lt;/code&gt; represents an amount of time, which may be date-based or time-based, which this factory extracts to a &lt;code&gt;Period&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的数量获得一个期间。甲 &lt;code&gt;TemporalAmount&lt;/code&gt; 表示的时间量，其可以是日期为基础的或基于时间的，这此工厂中提取到一个 &lt;code&gt;Period&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af136aeb8710a7cab98d15314af7155f9049974e" translate="yes" xml:space="preserve">
          <source>This obtains a year based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Year&lt;/code&gt;.</source>
          <target state="translated">这将根据指定的时间获得年份。一个 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意设定的日期和时间信息，此工厂皈依的实例 &lt;code&gt;Year&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4602bacf9db201bfce8a2960e9c5a1d68b35484" translate="yes" xml:space="preserve">
          <source>This obtains a year-month based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;YearMonth&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得一个年月。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;YearMonth&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1be70af6e55545e4996b776e4c19c92b5e98b2e" translate="yes" xml:space="preserve">
          <source>This obtains a zone based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ZoneId&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得区域。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ZoneId&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66d6f9e59ee5fd63456b513e62cd5ebe0d27dcfa" translate="yes" xml:space="preserve">
          <source>This obtains a zoned date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得分区的日期时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ZonedDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60f62815954ffb88291022f1cc7ddef5506ebc32" translate="yes" xml:space="preserve">
          <source>This obtains a zoned date-time in this chronology based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ChronoZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">这将根据指定的时间在此年表中获得分区的日期时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f20480c0d583422f46a90cbbc88cff541678fc22" translate="yes" xml:space="preserve">
          <source>This obtains a zoned date-time with the same instant as that specified.</source>
          <target state="translated">这将获得一个与指定的瞬间相同的分区日期时间。</target>
        </trans-unit>
        <trans-unit id="205f71d656832530060d655129d875de55c0cc08" translate="yes" xml:space="preserve">
          <source>This obtains an instant based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得瞬间。一个 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意设定的日期和时间信息，此工厂皈依的实例 &lt;code&gt;Instant&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2337d76b69b0fa771af86c983aae860198618d7f" translate="yes" xml:space="preserve">
          <source>This obtains an offset based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得偏移。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;ZoneOffset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f561b2a8cee1aa3fac6ee47687865aac724a0c00" translate="yes" xml:space="preserve">
          <source>This obtains an offset date-time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获取偏移日期时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;OffsetDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae864b2577bfba144fe827f11ed48cdd9cf7b02e" translate="yes" xml:space="preserve">
          <source>This obtains an offset time based on the specified temporal. A &lt;code&gt;TemporalAccessor&lt;/code&gt; represents an arbitrary set of date and time information, which this factory converts to an instance of &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">这将基于指定的时间获得偏移时间。甲 &lt;code&gt;TemporalAccessor&lt;/code&gt; 表示任意组的日期和时间信息，其中该工厂转换到的一个实例 &lt;code&gt;OffsetTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39507a10969bf4a3fcc0e594bfbac392ee408041" translate="yes" xml:space="preserve">
          <source>This obtains the IDs that this &lt;code&gt;ZoneRulesProvider&lt;/code&gt; provides. A provider should provide data for at least one zone ID.</source>
          <target state="translated">这将获取此 &lt;code&gt;ZoneRulesProvider&lt;/code&gt; 提供的ID 。提供者应至少提供一个区域ID的数据。</target>
        </trans-unit>
        <trans-unit id="726b2168462e543038ab100b82593b7827fdac8b" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one hour will always be a duration of one hour later. This may cause the local date-time to change by an amount other than one hour. Note that this is a different approach to that used by days, months and years, thus adding one day is not the same as adding 24 hours.</source>
          <target state="translated">这是在即时时间线上操作的,因此,增加一个小时总是一个小时后的持续时间。这可能会导致本地日期-时间发生一小时以外的变化。请注意,这与日、月、年所使用的方法不同,因此加一天与加24小时不同。</target>
        </trans-unit>
        <trans-unit id="449d8d28ba022862276b2c7e5af0f20294264586" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one minute will always be a duration of one minute later. This may cause the local date-time to change by an amount other than one minute. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">这是在即时时间线上操作的,因此,增加一分钟总是一分钟后的持续时间。这可能会导致当地的日期-时间发生一分钟以外的变化。请注意,这与日、月、年的做法不同。</target>
        </trans-unit>
        <trans-unit id="0c40b8e389146e2efe2832e92eb788736be1dd53" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one nano will always be a duration of one nano later. This may cause the local date-time to change by an amount other than one nano. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">这是在即时时间线上操作的,因此,增加一个纳元总是一个纳元后的持续时间。这可能会导致当地的日期-时间发生变化,而不是一纳的数量。请注意,这是与日、月、年不同的方法。</target>
        </trans-unit>
        <trans-unit id="c4cd8c7a66c2ff78bac947e7da499aba9a3cfabc" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that adding one second will always be a duration of one second later. This may cause the local date-time to change by an amount other than one second. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">这是在即时时间线上操作的,因此,增加一秒将始终是一秒后的持续时间。这可能会导致本地日期-时间发生一秒以外的变化。请注意,这与日、月、年的做法不同。</target>
        </trans-unit>
        <trans-unit id="8094300af297e6ec99960bb5cacb5d9690ac223c" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one hour will always be a duration of one hour earlier. This may cause the local date-time to change by an amount other than one hour. Note that this is a different approach to that used by days, months and years, thus subtracting one day is not the same as adding 24 hours.</source>
          <target state="translated">这是在即时时间线上操作的,因此减去一个小时总是会提前一个小时的持续时间。这可能会导致当地的日期-时间发生一小时以外的变化。请注意,这与日、月、年所使用的方法不同,因此减去一天并不等于增加24小时。</target>
        </trans-unit>
        <trans-unit id="10f01b9e77cb1e1c8db208e9714286d57b4421be" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one minute will always be a duration of one minute earlier. This may cause the local date-time to change by an amount other than one minute. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">这是在即时时间线上操作的,因此减去一分钟总是会提前一分钟。这可能会导致当地的日期-时间发生变化,而不是一分钟。请注意,这与日、月、年的方法不同。</target>
        </trans-unit>
        <trans-unit id="d62d67baa570ea1b5107178e38aa8d3f9a718ceb" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one nano will always be a duration of one nano earlier. This may cause the local date-time to change by an amount other than one nano. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">这是在即时时间线上操作,因此减去一个纳元总是会提前一个纳元的持续时间。这可能会导致本地的日期-时间发生变化,而不是一纳的数量。请注意,这是与日、月、年不同的方法。</target>
        </trans-unit>
        <trans-unit id="34d507fb2b9c644d312a6f37599ff469c6b10fef" translate="yes" xml:space="preserve">
          <source>This operates on the instant time-line, such that subtracting one second will always be a duration of one second earlier. This may cause the local date-time to change by an amount other than one second. Note that this is a different approach to that used by days, months and years.</source>
          <target state="translated">这是在即时时间线上的操作,因此减去一秒总是会提前一秒的持续时间。这可能会导致本地日期-时间发生一秒以外的变化。请注意,这与日、月、年的方法不同。</target>
        </trans-unit>
        <trans-unit id="66b8dc37ce4c05d1efd10e8876dfc44c6e707b67" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusDays-long-&quot;&gt;&lt;code&gt;subtracting days&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">该操作在本地时间轴上进行，将本地日期时间&lt;a href=&quot;localdatetime#minusDays-long-&quot;&gt; &lt;code&gt;subtracting days&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="ca4c248820f44b41c189bfb723340d212343290a" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusMonths-long-&quot;&gt;&lt;code&gt;subtracting months&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">该操作在本地时间轴上进行，将本地日期时间&lt;a href=&quot;localdatetime#minusMonths-long-&quot;&gt; &lt;code&gt;subtracting months&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="65883238bc7ce4bedf1473ad433bb1914555ab68" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusWeeks-long-&quot;&gt;&lt;code&gt;subtracting weeks&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">该操作在本地时间轴上进行，将本地日期时间&lt;a href=&quot;localdatetime#minusWeeks-long-&quot;&gt; &lt;code&gt;subtracting weeks&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="51d89fe7d5a43be02048737835733e66860321ee" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#minusYears-long-&quot;&gt;&lt;code&gt;subtracting years&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">该操作在本地时间轴上进行，将本地日期时间&lt;a href=&quot;localdatetime#minusYears-long-&quot;&gt; &lt;code&gt;subtracting years&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="6cc088b6807de06b101c0bc63dc04a4384f4af58" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusDays-long-&quot;&gt;&lt;code&gt;adding days&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，从而在本地日期时间上&lt;a href=&quot;localdatetime#plusDays-long-&quot;&gt; &lt;code&gt;adding days&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="20c98d62bce69123ea5d2767637fa5f450b0c087" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusMonths-long-&quot;&gt;&lt;code&gt;adding months&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，从而使本地日期时间&lt;a href=&quot;localdatetime#plusMonths-long-&quot;&gt; &lt;code&gt;adding months&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="154b94da779e6c9cca22e9bc1b3bd4a89ae143b7" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusWeeks-long-&quot;&gt;&lt;code&gt;adding weeks&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，从而在本地日期时间上&lt;a href=&quot;localdatetime#plusWeeks-long-&quot;&gt; &lt;code&gt;adding weeks&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="45fe7be19a0012d0ba56803bcbf31c9663206351" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#plusYears-long-&quot;&gt;&lt;code&gt;adding years&lt;/code&gt;&lt;/a&gt; to the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，从而在本地日期时间上&lt;a href=&quot;localdatetime#plusYears-long-&quot;&gt; &lt;code&gt;adding years&lt;/code&gt; &lt;/a&gt;。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="59068d62d04b8a462fc519bbf7cef54ddca45f64" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#truncatedTo-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;truncating&lt;/code&gt;&lt;/a&gt; the underlying local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">此操作在本地时间轴上运行，&lt;a href=&quot;localdatetime#truncatedTo-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;truncating&lt;/code&gt; &lt;/a&gt;基础本地日期时间。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="2353d120e6f9cf824344af701e898fe4d833a945" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfMonth-int-&quot;&gt;&lt;code&gt;changing the day-of-month&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withDayOfMonth-int-&quot;&gt; &lt;code&gt;changing the day-of-month&lt;/code&gt; &lt;/a&gt;了本地日期时间的月份。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="26526dbba6c58095452f330104b3a779b3c7deeb" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withDayOfYear-int-&quot;&gt;&lt;code&gt;changing the day-of-year&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withDayOfYear-int-&quot;&gt; &lt;code&gt;changing the day-of-year&lt;/code&gt; &lt;/a&gt;了本地日期时间的年月日。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="b24c9a53236448d5cfe67d31c6294336296d5fb2" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withHour-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withHour-int-&quot;&gt;更改&lt;/a&gt;了本地日期时间。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="7bddee3f8c089c5dcdead4c23d773a93ab0a5335" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withMinute-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withMinute-int-&quot;&gt;更改&lt;/a&gt;了本地日期时间。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="c784867c4312cbfaf1befb2ef2959e681ad4f6bb" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withMonth-int-&quot;&gt;&lt;code&gt;changing the month&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withMonth-int-&quot;&gt; &lt;code&gt;changing the month&lt;/code&gt; &lt;/a&gt;本地日期时间的月份。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="670e4fcf509e7f294939494905091949b46f4dfa" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withNano-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withNano-int-&quot;&gt;更改&lt;/a&gt;了本地日期时间。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="1c44437b58ea1355b204a4983f39255944580cb3" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withSecond-int-&quot;&gt;changing the time&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withSecond-int-&quot;&gt;更改&lt;/a&gt;了本地日期时间。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="932e29e07a81cf46bd3252bcfbdcbbcefe33c300" translate="yes" xml:space="preserve">
          <source>This operates on the local time-line, &lt;a href=&quot;localdatetime#withYear-int-&quot;&gt;&lt;code&gt;changing the year&lt;/code&gt;&lt;/a&gt; of the local date-time. This is then converted back to a &lt;code&gt;ZonedDateTime&lt;/code&gt;, using the zone ID to obtain the offset.</source>
          <target state="translated">这在本地时间轴上运行，&lt;a href=&quot;localdatetime#withYear-int-&quot;&gt; &lt;code&gt;changing the year&lt;/code&gt; &lt;/a&gt;本地日期时间的年份。然后使用区域ID将其转换回 &lt;code&gt;ZonedDateTime&lt;/code&gt; 以获得偏移量。</target>
        </trans-unit>
        <trans-unit id="b3931784f6c0e8b591248f49ca648b15f7331490" translate="yes" xml:space="preserve">
          <source>This operates separately on the years, months and days. No normalization is performed.</source>
          <target state="translated">这对年、月、日分别进行操作。不进行归一化处理。</target>
        </trans-unit>
        <trans-unit id="625602f5cdf633de6c29c8bfb0d06f91051c7694" translate="yes" xml:space="preserve">
          <source>This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed. It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while constructing the &lt;code&gt;Sequence&lt;/code&gt; object from the file data.</source>
          <target state="translated">仅对于可以由已安装的文件读取器解析的类型的文件，此操作才能成功。如果没有安装兼容的文件阅读器，即使对于有效文件，它也可能失败，并显示InvalidMidiDataException。如果安装了兼容的文件读取器，它也会因InvalidMidiDataException失败，但是在从文件数据构造 &lt;code&gt;Sequence&lt;/code&gt; 对象时遇到错误。</target>
        </trans-unit>
        <trans-unit id="c4d7f1e9d4a54ab542f03bcd4ed5e2326793f267" translate="yes" xml:space="preserve">
          <source>This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed. It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while determining the file format.</source>
          <target state="translated">这个操作只有在文件的类型可以被安装的文件阅读器解析的情况下才能成功。如果没有安装兼容的文件读取器,即使是对有效的文件,该操作也可能以InvalidMidiDataException异常失败。如果安装了兼容的文件阅读器,但在确定文件格式时遇到错误,也会以InvalidMidiDataException失败。</target>
        </trans-unit>
        <trans-unit id="d54588074a1e11ae361882bd83f1aaf57821015a" translate="yes" xml:space="preserve">
          <source>This operation does not reverse any calls that have already started on an old target value. (Java supports &lt;a href=&quot;../object#wait--&quot;&gt;forward time travel&lt;/a&gt; only.)</source>
          <target state="translated">此操作不会撤消已经开始使用旧目标值的任何调用。（Java 仅支持&lt;a href=&quot;../object#wait--&quot;&gt;向前旅行&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="ca395761d99f0b08de70ba0393d88e99153be428" translate="yes" xml:space="preserve">
          <source>This operation is likely to be expensive and should be used sparingly. If possible, it should be buffered for batch processing on sets of call sites.</source>
          <target state="translated">这种操作很可能很昂贵,应尽量少用。如有可能,应在呼叫站点的集合上进行缓冲,以便进行批量处理。</target>
        </trans-unit>
        <trans-unit id="02be43302caaff86fda5dec97c8ad5be7c15d0bd" translate="yes" xml:space="preserve">
          <source>This operation is likely to be expensive and should be used sparingly. If possible, it should be buffered for batch processing on sets of switch points.</source>
          <target state="translated">这种操作可能成本较高,应尽量少用。如有可能,应在成套开关点上进行缓冲,以便进行批量处理。</target>
        </trans-unit>
        <trans-unit id="8a524ee340747c59b0f3db2184034b2ce40ed0ab" translate="yes" xml:space="preserve">
          <source>This operation is not supported</source>
          <target state="translated">不支持此操作</target>
        </trans-unit>
        <trans-unit id="40db6c6ece4e6e62d9f67621684a40a8a8b14bd7" translate="yes" xml:space="preserve">
          <source>This operation is often useful when constructing a document containing URIs that must be made relative to the base URI of the document wherever possible. For example, relativizing the URI</source>
          <target state="translated">当构建一个包含URI的文档时,这个操作通常很有用,因为这个文档必须尽可能相对于文档的基本URI。例如,相对化URI</target>
        </trans-unit>
        <trans-unit id="0243326f9ee0e4f8f83e0164b36c8f99b7f61d86" translate="yes" xml:space="preserve">
          <source>This operation is unsupported since this class is immutable. If this call would change a mutable descriptor with the same contents, then a &lt;a href=&quot;runtimeoperationsexception&quot;&gt;&lt;code&gt;RuntimeOperationsException&lt;/code&gt;&lt;/a&gt; wrapping an &lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; is thrown. Otherwise, the behavior is the same as it would be for a mutable descriptor: either an exception is thrown because of illegal parameters, or there is no effect.</source>
          <target state="translated">不支持此操作，因为此类是不可变的。如果此调用将更改具有相同内容的可变描述符，则将引发包装&lt;a href=&quot;../../java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;runtimeoperationsexception&quot;&gt; &lt;code&gt;RuntimeOperationsException&lt;/code&gt; &lt;/a&gt;。否则，行为与可变描述符的行为相同：要么由于非法参数而引发异常，要么无效。</target>
        </trans-unit>
        <trans-unit id="2eaf656a5ffc82c4c6faa7253ed6faf3f17eac63" translate="yes" xml:space="preserve">
          <source>This operation processes the elements one at a time, in encounter order if one exists. Performing the action for one element &lt;a href=&quot;../concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happens-before&lt;/i&gt;&lt;/a&gt; performing the action for subsequent elements, but for any given element, the action may be performed in whatever thread the library chooses.</source>
          <target state="translated">此操作一次处理一个元素，如果存在则按遇到顺序。对一个元素执行动作是在对后续元素执行动作&lt;a href=&quot;../concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;之前发生的&lt;/i&gt;&lt;/a&gt;，但是对于任何给定的元素，可以在库选择的任何线程中执行该动作。</target>
        </trans-unit>
        <trans-unit id="8f19d262e3403282ac8f6dcc22ee150db5930978" translate="yes" xml:space="preserve">
          <source>This option &lt;b&gt;must&lt;/b&gt; be specified in the constructor.</source>
          <target state="translated">&lt;b&gt;必须&lt;/b&gt;在构造函数中指定此选项。</target>
        </trans-unit>
        <trans-unit id="6d32536e467e28e80c04c9eb713697cc4116f77e" translate="yes" xml:space="preserve">
          <source>This option enables or disables local loopback of multicast datagrams. This option is enabled by default for Multicast Sockets.</source>
          <target state="translated">这个选项可以启用或禁用组播数据包的本地环回。多播套接字默认启用该选项。</target>
        </trans-unit>
        <trans-unit id="4ed25d6258a5b644c3c2d337a3649a2b109a7441" translate="yes" xml:space="preserve">
          <source>This option sets the type-of-service or traffic class field in the IP header for a TCP or UDP socket.</source>
          <target state="translated">该选项设置TCP或UDP套接字的IP头中的服务类型或流量类别字段。</target>
        </trans-unit>
        <trans-unit id="29d701dac4b5f5387fd788367c0ae036eefdd7c7" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies a list of one or more parameters for the MBean to be instantiated. This list describes the parameters to be passed the MBean's constructor. Use the following syntax to specify each item in &lt;var&gt;arglist&lt;/var&gt;:</source>
          <target state="translated">此可选属性为要实例化的MBean指定一个或多个参数的列表。此列表描述了要传递给MBean的构造函数的参数。使用以下语法在 &lt;var&gt;arglist&lt;/var&gt; 中指定每个项目：</target>
        </trans-unit>
        <trans-unit id="217df13fc7d9dc7e8aba7c53c26dbed2086caa9b" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the code base URL of the MBean to be obtained. It identifies the directory that contains the &lt;code&gt;.jar&lt;/code&gt; files specified by the &lt;code&gt;ARCHIVE&lt;/code&gt; attribute. Specify this attribute only if the &lt;code&gt;.jar&lt;/code&gt; files are not in the same directory as the m-let text file. If this attribute is not specified, the base URL of the m-let text file is used.</source>
          <target state="translated">此可选属性指定要获取的MBean的代码库URL。它标识包含 &lt;code&gt;ARCHIVE&lt;/code&gt; 属性指定的 &lt;code&gt;.jar&lt;/code&gt; 文件的目录。仅当 &lt;code&gt;.jar&lt;/code&gt; 文件与m-let文本文件不在同一目录中时，才指定此属性。如果未指定此属性，则使用m-let文本文件的基本URL。</target>
        </trans-unit>
        <trans-unit id="5eb4392dd4a10514090d62b90d330a14ec889d6e" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the object name to be assigned to the MBean instance when the m-let service registers it. If &lt;var&gt;mbeanname&lt;/var&gt; starts with the colon character (:), the domain part of the object name is the default domain of the MBean server, as returned by &lt;a href=&quot;../mbeanserver#getDefaultDomain--&quot;&gt;&lt;code&gt;MBeanServer.getDefaultDomain()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此可选属性指定m-let服务注册该对象时要分配给MBean实例的对象名称。如果 &lt;var&gt;mbeanname&lt;/var&gt; 以冒号（:)开头，则对象名称的域部分是MBean服务器的默认域，由&lt;a href=&quot;../mbeanserver#getDefaultDomain--&quot;&gt; &lt;code&gt;MBeanServer.getDefaultDomain()&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="c63c9c16af322931cb8e523d804c7487124f85be" translate="yes" xml:space="preserve">
          <source>This optional attribute specifies the version number of the MBean and associated &lt;code&gt;.jar&lt;/code&gt; files to be obtained. This version number can be used to specify that the &lt;code&gt;.jar&lt;/code&gt; files are loaded from the server to update those stored locally in the cache the next time the m-let text file is loaded. &lt;var&gt;version&lt;/var&gt; must be a series of non-negative decimal integers each separated by a period from the one that precedes it.</source>
          <target state="translated">此可选属性指定要获取的MBean和关联的 &lt;code&gt;.jar&lt;/code&gt; 文件的版本号。此版本号可用于指定从服务器加载 &lt;code&gt;.jar&lt;/code&gt; 文件，以在下次加载m-let文本文件时更新本地存储在缓存中的文件。 &lt;var&gt;version&lt;/var&gt; 必须是一系列非负十进制整数，每个整数与前一个整数之间用句点分隔。</target>
        </trans-unit>
        <trans-unit id="7343cebf8089c891c832f1c4b657d1ed99e55aa4" translate="yes" xml:space="preserve">
          <source>This output device assigned attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">此输出设备分配的属性的语言环境和 &lt;code&gt;object&lt;/code&gt; 的语言环境相等。</target>
        </trans-unit>
        <trans-unit id="fa627cb296bb9d5368d8b160c534107054430e92" translate="yes" xml:space="preserve">
          <source>This output device assigned attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">此输出设备分配的属性的基础字符串和 &lt;code&gt;object&lt;/code&gt; 的基础字符串相等。</target>
        </trans-unit>
        <trans-unit id="287a69e23ad8907d5aa30e1d22463d996c8d458c" translate="yes" xml:space="preserve">
          <source>This output stream</source>
          <target state="translated">该输出流</target>
        </trans-unit>
        <trans-unit id="1c5acb8dcc86af6da6a34303cfc1229c0c0664b0" translate="yes" xml:space="preserve">
          <source>This outputs the formatted date-time to the specified destination. &lt;a href=&quot;../../lang/appendable&quot;&gt;&lt;code&gt;Appendable&lt;/code&gt;&lt;/a&gt; is a general purpose interface that is implemented by all key character output classes including &lt;code&gt;StringBuffer&lt;/code&gt;, &lt;code&gt;StringBuilder&lt;/code&gt;, &lt;code&gt;PrintStream&lt;/code&gt; and &lt;code&gt;Writer&lt;/code&gt;.</source>
          <target state="translated">这会将格式化的日期时间输出到指定的目的地。&lt;a href=&quot;../../lang/appendable&quot;&gt; &lt;code&gt;Appendable&lt;/code&gt; &lt;/a&gt;是一个通用接口，由所有关键字符输出类（包括 &lt;code&gt;StringBuffer&lt;/code&gt; ， &lt;code&gt;StringBuilder&lt;/code&gt; ， &lt;code&gt;PrintStream&lt;/code&gt; 和 &lt;code&gt;Writer&lt;/code&gt; )实现。</target>
        </trans-unit>
        <trans-unit id="1126a6ede333e4f57bf3aa4d5dfb3c5e9ece413e" translate="yes" xml:space="preserve">
          <source>This package allows applications to retrieve and update attributes associated with objects stored in a directory, and to search for objects using specified attributes.</source>
          <target state="translated">这个包允许应用程序检索和更新与存储在目录中的对象相关联的属性,并使用指定的属性搜索对象。</target>
        </trans-unit>
        <trans-unit id="288497f7814e08d4e47a22ea9f9b66e03e7eadc4" translate="yes" xml:space="preserve">
          <source>This package allows applications to store and retrieve user and system preference and configuration data.</source>
          <target state="translated">这个软件包允许应用程序存储和检索用户和系统的偏好和配置数据。</target>
        </trans-unit>
        <trans-unit id="e97097447b348c1e4a246b902f0475a5f2f816c2" translate="yes" xml:space="preserve">
          <source>This package allows applications to store and retrieve user and system preference and configuration data. This data is stored persistently in an implementation-dependent backing store. There are two separate trees of preference nodes, one for user preferences and one for system preferences.</source>
          <target state="translated">这个包允许应用程序存储和检索用户和系统偏好和配置数据。这些数据被持久地存储在一个依赖于实现的后盾存储中。有两个独立的偏好节点树,一个用于用户偏好,一个用于系统偏好。</target>
        </trans-unit>
        <trans-unit id="fa64250076574831d90b6de36c8cbfcab3ec1a3d" translate="yes" xml:space="preserve">
          <source>This package contains some support classes for the built-in JPEG reader and writer plug-ins. Classes are provided for representing quantization and Huffman tables, and extensions of &lt;code&gt;ImageReadParam&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt; are provided to supply tables during the reading and writing process. For more information about the operation of the built-in JPEG plug-ins, see the JPEG metadata format specification and usage notes.</source>
          <target state="translated">该软件包包含一些内置JPEG读取器和写入器插件的支持类。提供了用于表示量化表和霍夫曼表的类，并提供了 &lt;code&gt;ImageReadParam&lt;/code&gt; 和 &lt;code&gt;ImageWriteParam&lt;/code&gt; 的扩展名以在读写过程中提供表。有关内置JPEG插件的操作的更多信息，请参阅JPEG元数据格式规范和使用说明。</target>
        </trans-unit>
        <trans-unit id="2f276402586baaea7f6e39ec7543eba119f71a5f" translate="yes" xml:space="preserve">
          <source>This package contains the basic classes and interfaces for describing the contents of image files, including metadata and thumbnails (&lt;code&gt;IIOImage&lt;/code&gt;); for controlling the image reading process (&lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageReadParam&lt;/code&gt;, and &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;) and image writing process (&lt;code&gt;ImageWriter&lt;/code&gt; and &lt;code&gt;ImageWriteParam&lt;/code&gt;); for performing transcoding between formats (&lt;code&gt;ImageTranscoder&lt;/code&gt;), and for reporting errors (&lt;code&gt;IIOException&lt;/code&gt;).</source>
          <target state="translated">该软件包包含用于描述图像文件内容的基本类和接口，包括元数据和缩略图（ &lt;code&gt;IIOImage&lt;/code&gt; ）；用于控制图像读取过程（ &lt;code&gt;ImageReader&lt;/code&gt; ， &lt;code&gt;ImageReadParam&lt;/code&gt; 和 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; ）和图像写入过程（ &lt;code&gt;ImageWriter&lt;/code&gt; 和 &lt;code&gt;ImageWriteParam&lt;/code&gt; ）；用于在格式之间执行代码转换（ &lt;code&gt;ImageTranscoder&lt;/code&gt; ），以及报告错误（ &lt;code&gt;IIOException&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1bc4439ea20d876f9aaaeb46de959fb166bd1dd9" translate="yes" xml:space="preserve">
          <source>This package contains the classes that should be used to store X500 Principal and X500 Private Credentials in a</source>
          <target state="translated">这个包包含了应该用于将X500主证书和X500私人证书存储在X500主证书中的类。</target>
        </trans-unit>
        <trans-unit id="4bcd3e5baa32173a996e3505e09482e17dac00f3" translate="yes" xml:space="preserve">
          <source>This package contains utility classes related to the Kerberos network authentication protocol.</source>
          <target state="translated">这个软件包包含了与 Kerberos 网络认证协议相关的实用类。</target>
        </trans-unit>
        <trans-unit id="90b65cce3e590cd8472c69914c23535be7185cb1" translate="yes" xml:space="preserve">
          <source>This package contains utility classes related to the Kerberos network authentication protocol. They do not provide much Kerberos support themselves.</source>
          <target state="translated">这个包包含了与 Kerberos 网络认证协议相关的实用类。它们本身并没有提供太多的 Kerberos 支持。</target>
        </trans-unit>
        <trans-unit id="704d234d7ca4c6cc11b14edd6d51dc302731e56a" translate="yes" xml:space="preserve">
          <source>This package defines a &lt;code&gt;NamingEvent&lt;/code&gt; class to represent an event that is generated by a naming/directory service. It also defines subinterfaces of &lt;code&gt;Context&lt;/code&gt; and &lt;code&gt;DirContext&lt;/code&gt;, called &lt;code&gt;EventContext&lt;/code&gt; and &lt;code&gt;EventDirContext&lt;/code&gt;, through which applications can register their interest in events fired by the context.</source>
          <target state="translated">该软件包定义了 &lt;code&gt;NamingEvent&lt;/code&gt; 类来表示由命名/目录服务生成的事件。它还定义了 &lt;code&gt;Context&lt;/code&gt; 和 &lt;code&gt;DirContext&lt;/code&gt; 的子接口，称为 &lt;code&gt;EventContext&lt;/code&gt; 和 &lt;code&gt;EventDirContext&lt;/code&gt; ，通过它们，应用程序可以注册对上下文触发的事件的兴趣。</target>
        </trans-unit>
        <trans-unit id="61a5725a6e15257c679b593154e3b56862b3d964" translate="yes" xml:space="preserve">
          <source>This package defines asynchronous-channel classes that are connected to a stream-oriented connecting or listening socket, or a datagram-oriented socket. It also defines the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class for asynchronous reading, writing, and manipulating a file. As with the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; it supports operations to truncate the file to a specific size, force updates to the file to be written to the storage device, or acquire locks on the whole file or on a specific region of the file. Unlike the &lt;code&gt;FileChannel&lt;/code&gt; it does not define methods for mapping a region of the file directly into memory. Where memory mapped I/O is required, then a &lt;code&gt;FileChannel&lt;/code&gt; can be used.</source>
          <target state="translated">该程序包定义了异步通道类，这些类连接到面向流的连接或侦听套接字或面向数据报的套接字。它还定义了&lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt;类，用于异步读取，写入和操作文件。与&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; 一样,&lt;/a&gt;它支持将文件截断为特定大小，强制更新文件以将其写入存储设备或获取整个文件或文件特定区域上的锁的操作。与 &lt;code&gt;FileChannel&lt;/code&gt; 不同，它没有定义用于将文件区域直接映射到内存中的方法。如果需要内存映射的I / O，则可以使用 &lt;code&gt;FileChannel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9bd1981873ec43b1bb6c9505b7f4ee48a2fd78f" translate="yes" xml:space="preserve">
          <source>This package defines selectable-channel classes corresponding to the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; classes defined in the &lt;code&gt;&lt;a href=&quot;../../net/package-summary&quot;&gt;&lt;code&gt;java.net&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package. Minor changes to these classes have been made in order to support sockets that are associated with channels. This package also defines a simple class that implements unidirectional pipes. In all cases, a new selectable channel is created by invoking the static &lt;code&gt;open&lt;/code&gt; method of the corresponding class. If a channel needs an associated socket then a socket will be created as a side effect of this operation.</source>
          <target state="translated">该软件包定义了与 &lt;code&gt;&lt;a href=&quot;../../net/package-summary&quot;&gt;&lt;code&gt;java.net&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 软件包中定义的&lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;类相对应的selectable-channel类。为了支持与通道关联的套接字，对这些类进行了较小的更改。该程序包还定义了一个实现单向管道的简单类。在所有情况下，都可以通过调用相应类的静态 &lt;code&gt;open&lt;/code&gt; 方法来创建新的可选通道。如果通道需要关联的套接字，则将创建套接字作为此操作的副作用。</target>
        </trans-unit>
        <trans-unit id="b7a677b4e249a5e3217b3f33f6b841b9bcaec5fd" translate="yes" xml:space="preserve">
          <source>This package defines the directory operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">该软件包定义了Java命名和目录接口&lt;sup&gt;TM&lt;/sup&gt;（JNDI）的目录操作。 JNDI为使用Java编程语言编写的应用程序提供命名和目录功能。它被设计为独立于任何特定的命名或目录服务实现。因此，可以以通用方式访问各种服务（新的，新兴的和已经部署的服务）。</target>
        </trans-unit>
        <trans-unit id="6bc76b26c25cc3460f4a70f06429a24f2196d9b6" translate="yes" xml:space="preserve">
          <source>This package defines the event notification operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">该软件包定义了Java命名和目录接口&lt;sup&gt;TM&lt;/sup&gt;（JNDI）的事件通知操作。 JNDI为使用Java编程语言编写的应用程序提供命名和目录功能。它被设计为独立于任何特定的命名或目录服务实现。因此，可以以通用方式访问各种服务（新的，新兴的和已经部署的服务）。</target>
        </trans-unit>
        <trans-unit id="8b8c341e63d2743b2371e2edc9e4e1f75c5e0347" translate="yes" xml:space="preserve">
          <source>This package defines the interface &lt;code&gt;Control&lt;/code&gt; to represent an LDAPv3 control. It can be a control that is sent to an LDAP server (&lt;em&gt;request control&lt;/em&gt;) or a control returned by an LDAP server (&lt;em&gt;response control&lt;/em&gt;). Unlike extended requests and responses, there is not necessarily any pairing between request controls and response controls. You can send request controls and expect no response controls back, or receive response controls without sending any request controls.</source>
          <target state="translated">该软件包定义了 &lt;code&gt;Control&lt;/code&gt; 接口以表示LDAPv3控件。它可以是发送到LDAP服务器的&lt;em&gt;控件&lt;/em&gt;（&lt;em&gt;请求控件&lt;/em&gt;），也可以是LDAP服务器返回的控件（&lt;em&gt;响应控件&lt;/em&gt;）。与扩展的请求和响应不同，请求控件和响应控件之间不一定有任何配对。您可以发送请求控件而不期望返回任何响应控件，也可以在不发送任何请求控件的情况下接收响应控件。</target>
        </trans-unit>
        <trans-unit id="d16558c590d65c082b7a5ba1c6f2b177b4b9024b" translate="yes" xml:space="preserve">
          <source>This package defines the interface &lt;code&gt;ExtendedRequest&lt;/code&gt; to represent the argument to an extended operation, and the interface &lt;code&gt;ExtendedResponse&lt;/code&gt; to represent the result of the extended operation. An extended response is always paired with an extended request but not necessarily vice versa. That is, you can have an extended request that has no corresponding extended response.</source>
          <target state="translated">这个包定义了接口 &lt;code&gt;ExtendedRequest&lt;/code&gt; 来表示参数的扩展操作，并且接口 &lt;code&gt;ExtendedResponse&lt;/code&gt; 来表示扩展操作的结果。扩展响应始终与扩展请求配对，但不一定相反。也就是说，您可以拥有没有相应扩展响应的扩展请求。</target>
        </trans-unit>
        <trans-unit id="38c93855822dcf49856f49aea1ae426c2c724905" translate="yes" xml:space="preserve">
          <source>This package defines the naming operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">该软件包定义了Java命名和目录接口&lt;sup&gt;TM&lt;/sup&gt;（JNDI）的命名操作。JNDI为使用Java编程语言编写的应用程序提供命名和目录功能。它被设计为独立于任何特定的命名或目录服务实现。因此，可以以通用方式访问各种服务（新的，新兴的和已经部署的服务）。</target>
        </trans-unit>
        <trans-unit id="4c39362433065d0862c75d77b590b48f243dd902" translate="yes" xml:space="preserve">
          <source>This package defines the notion of a &lt;em&gt;context&lt;/em&gt;, represented by the &lt;code&gt;Context&lt;/code&gt; interface. A context consists of a set of name-to-object &lt;em&gt;bindings&lt;/em&gt;. &lt;code&gt;Context&lt;/code&gt; is the core interface for looking up, binding, unbinding, and renaming objects, and for creating and destroying subcontexts.</source>
          <target state="translated">该包定义了&lt;em&gt;上下文&lt;/em&gt;的概念，由 &lt;code&gt;Context&lt;/code&gt; 接口表示。上下文由一组名称到对象的&lt;em&gt;绑定组成&lt;/em&gt;。 &lt;code&gt;Context&lt;/code&gt; 是用于查找，绑定，解除绑定和重命名对象以及创建和销毁子上下文的核心接口。</target>
        </trans-unit>
        <trans-unit id="4c09aa5004534aa01c2386228535bf3dff65f59c" translate="yes" xml:space="preserve">
          <source>This package expands on the base package to provide additional functionality for more powerful use cases. Support is included for:</source>
          <target state="translated">该包在基本包的基础上进行了扩展,为更强大的用例提供了额外的功能。包括以下支持:</target>
        </trans-unit>
        <trans-unit id="800c70232f472c7fdce77e7b4637fe7f97636d11" translate="yes" xml:space="preserve">
          <source>This package extends the directory operations of the Java Naming and Directory Interface&lt;sup&gt;TM&lt;/sup&gt; (JNDI). JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.</source>
          <target state="translated">该软件包扩展了Java命名和目录接口&lt;sup&gt;TM&lt;/sup&gt;（JNDI）的目录操作。JNDI为使用Java编程语言编写的应用程序提供命名和目录功能。它被设计为独立于任何特定的命名或目录服务实现。因此，可以以通用方式访问各种服务（新的，新兴的和已经部署的服务）。</target>
        </trans-unit>
        <trans-unit id="3bbc67e0bae46ec040c3f0acf3bc0f96c93ab907" translate="yes" xml:space="preserve">
          <source>This package is for applications and service providers that deal with LDAPv3 extended operations and controls, as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;. The core interface in this package is &lt;code&gt;LdapContext&lt;/code&gt;, which defines methods on a context for performing extended operations and handling controls.</source>
          <target state="translated">该软件包适用于处理LDAPv3扩展操作和控件（如&lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot;&gt;RFC 2251&lt;/a&gt;所定义）的应用程序和服务提供商。该程序包的核心接口是 &lt;code&gt;LdapContext&lt;/code&gt; ，它在上下文上定义了用于执行扩展操作和处理控件的方法。</target>
        </trans-unit>
        <trans-unit id="3ce7eb06804bb9e19fffc97ccc2e50928d63635b" translate="yes" xml:space="preserve">
          <source>This package is the home of the Java programming language compiler framework. This framework allows clients of the framework to locate and run compilers from programs. The framework also provides Service Provider Interfaces (SPI) for structured access to diagnostics (&lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;) as well as a file abstraction for overriding file access (&lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt; and &lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt;). See &lt;a href=&quot;javacompiler&quot;&gt;JavaCompiler&lt;/a&gt; for more details on using the SPI.</source>
          <target state="translated">该软件包是Java编程语言编译器框架的所在地。该框架允许框架的客户端从程序定位并运行编译器。该框架还提供了服务提供者接口（SPI），用于对诊断的结构化访问（&lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;）以及用于覆盖文件访问的文件抽象（&lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt;和&lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt;）。有关使用SPI的更多详细信息，请参见&lt;a href=&quot;javacompiler&quot;&gt;JavaCompiler&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
