<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="falcon">
    <body>
      <group id="falcon">
        <trans-unit id="1866245f8cd18a317b44c9d1efe90bae956587d8" translate="yes" xml:space="preserve">
          <source>Return an XML-encoded representation of the error.</source>
          <target state="translated">返回错误的XML编码表示。</target>
        </trans-unit>
        <trans-unit id="e1db989282bc57fdadea7d9200f95ddfe4a5c8de" translate="yes" xml:space="preserve">
          <source>Return the client&amp;rsquo;s preferred media type, given several choices.</source>
          <target state="translated">给定几种选择，返回客户的首选媒体类型。</target>
        </trans-unit>
        <trans-unit id="9e64aeebf2ae4857577a6634ee9e5eaf30ca4f36" translate="yes" xml:space="preserve">
          <source>Return the daylight saving time (DST) adjustment.</source>
          <target state="translated">返回夏令时(DST)调整。</target>
        </trans-unit>
        <trans-unit id="e2994881f096972937659fad257e153b2ee43292" translate="yes" xml:space="preserve">
          <source>Return the decoded JSON value of a query string parameter.</source>
          <target state="translated">返回一个查询字符串参数的JSON解码值。</target>
        </trans-unit>
        <trans-unit id="db668a80d799bb60fe236bf9a77e13bf528d409a" translate="yes" xml:space="preserve">
          <source>Return the raw value of a query string parameter as a string.</source>
          <target state="translated">返回查询字符串参数的原始值作为字符串。</target>
        </trans-unit>
        <trans-unit id="f700eb143c1aa41869b44a2b9b175d98a95b5932" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as a boolean</source>
          <target state="translated">返回查询字符串参数的布尔值。</target>
        </trans-unit>
        <trans-unit id="b00c8646ae8c8c8ef5186f54694117c801c4ba3c" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as a boolean.</source>
          <target state="translated">返回查询字符串参数的布尔值。</target>
        </trans-unit>
        <trans-unit id="a7bfdf180e15eb030ea66cad36c545e69a24a87e" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as a date.</source>
          <target state="translated">返回查询字符串参数的日期值。</target>
        </trans-unit>
        <trans-unit id="b54c773588a438154ba97a3617a14ceb372ce886" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as a datetime.</source>
          <target state="translated">将查询字符串参数的值作为日期时间返回。</target>
        </trans-unit>
        <trans-unit id="f8288e12ac673c73f03b9cd7516311c052eb147d" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as a list.</source>
          <target state="translated">以列表形式返回查询字符串参数的值。</target>
        </trans-unit>
        <trans-unit id="e591ed68dbf91047b27a5d434b839aeed7a015ab" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as an UUID.</source>
          <target state="translated">返回一个查询字符串参数的UUID值。</target>
        </trans-unit>
        <trans-unit id="da75d6331f2d558f018f200a1cfa599d20baddf7" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as an float.</source>
          <target state="translated">返回查询字符串参数的float值。</target>
        </trans-unit>
        <trans-unit id="255b0f05faf2337c7baf1c1af19894585d17f1bf" translate="yes" xml:space="preserve">
          <source>Return the value of a query string parameter as an int.</source>
          <target state="translated">返回查询字符串参数的值为int。</target>
        </trans-unit>
        <trans-unit id="8246453c6e901bbc2e4288b43a47949404da068a" translate="yes" xml:space="preserve">
          <source>Return type:</source>
          <target state="translated">返回类型:</target>
        </trans-unit>
        <trans-unit id="bb0dd176a77fd9d9196aac6a52e9878768bc4e6a" translate="yes" xml:space="preserve">
          <source>Returns a deserialized form of the request stream. When called, it will attempt to deserialize the request stream using the Content-Type header as well as the media-type handlers configured via &lt;a href=&quot;api#falcon.RequestOptions&quot;&gt;&lt;code&gt;falcon.RequestOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回请求流的反序列化形式。调用时，它将尝试使用Content-Type标头以及通过&lt;a href=&quot;api#falcon.RequestOptions&quot;&gt; &lt;code&gt;falcon.RequestOptions&lt;/code&gt; &lt;/a&gt;配置的媒体类型处理程序对请求流进行反序列化。</target>
        </trans-unit>
        <trans-unit id="42d1cdaaf9cd46fc16f2e360843330d1776abfbb" translate="yes" xml:space="preserve">
          <source>Returns a randomly-generated string, of a random length.</source>
          <target state="translated">返回一个随机生成的字符串,长度为随机。</target>
        </trans-unit>
        <trans-unit id="3c4a39b69334193b94cb7de6283371fbef88de34" translate="yes" xml:space="preserve">
          <source>Returns the &amp;lsquo;host:port&amp;rsquo; portion of the request URL. The port may be ommitted if it is the default one for the URL&amp;rsquo;s schema (80 for HTTP and 443 for HTTPS).</source>
          <target state="translated">返回请求URL的&amp;ldquo; host：port&amp;rdquo;部分。如果该端口是URL架构的默认端口（对于HTTP为80，对于HTTPS为443），则可以省略该端口。</target>
        </trans-unit>
        <trans-unit id="880bab60c588dc4babefd930af5c38450e59df4f" translate="yes" xml:space="preserve">
          <source>Returns the current UTC time as an IMF-fixdate.</source>
          <target state="translated">返回当前UTC时间的IMF-fixdate。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="a2e2861fa816b96268d3d43f635cdcb63aa20fc7" translate="yes" xml:space="preserve">
          <source>Reverse proxies are often configured to set the Host header directly to the one that was originally requested by the user agent; in that case, using &lt;a href=&quot;#falcon.Request.host&quot;&gt;&lt;code&gt;host&lt;/code&gt;&lt;/a&gt; is sufficient.</source>
          <target state="translated">反向代理通常被配置为直接将Host标头设置为用户代理最初请求的标头。在这种情况下，使用&lt;a href=&quot;#falcon.Request.host&quot;&gt; &lt;code&gt;host&lt;/code&gt; &lt;/a&gt;就足够了。</target>
        </trans-unit>
        <trans-unit id="ab64c7383188709ea526bd09343f63a6a92e2eaa" translate="yes" xml:space="preserve">
          <source>Right now, the image resource responds to GET requests with a simple &lt;code&gt;200 OK&lt;/code&gt; and a JSON body. Falcon&amp;rsquo;s Internet media type defaults to &lt;code&gt;application/json&lt;/code&gt; but you can set it to whatever you like. Noteworthy JSON alternatives include &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; and &lt;a href=&quot;http://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt;.</source>
          <target state="translated">现在，图像资源以简单的 &lt;code&gt;200 OK&lt;/code&gt; 和JSON正文响应GET请求。Falcon的Internet媒体类型默认为 &lt;code&gt;application/json&lt;/code&gt; ,但您可以将其设置为任意值。值得注意的JSON替代方案包括&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;和&lt;a href=&quot;http://msgpack.org/&quot;&gt;MessagePack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bd2150013147b397fa44a2d4f596dd3e162e892" translate="yes" xml:space="preserve">
          <source>Routes based on URI templates RFC</source>
          <target state="translated">基于URI模板的路由 RFC</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="00ae55c2616ea16a9afa0d1977d3c64a38d23e37" translate="yes" xml:space="preserve">
          <source>Routing Utilities</source>
          <target state="translated">路由工具</target>
        </trans-unit>
        <trans-unit id="a5a8d96e1c8b8d7e03040c64d95b38e83f716a85" translate="yes" xml:space="preserve">
          <source>Running your Application as a Different User</source>
          <target state="translated">以不同的用户运行您的应用程序</target>
        </trans-unit>
        <trans-unit id="61a75f5b8b305be0c0f0e27bb85465e10f330bb0" translate="yes" xml:space="preserve">
          <source>Scopes the cookie to the given path plus any subdirectories under that path (the &amp;ldquo;/&amp;rdquo; character is interpreted as a directory separator). If the cookie does not specify a path, the user agent defaults to the path component of the requested URI.</source>
          <target state="translated">将Cookie的范围限定为给定路径以及该路径下的任何子目录（&amp;ldquo; /&amp;rdquo;字符被解释为目录分隔符）。如果cookie没有指定路径，则用户代理默认为所请求URI的路径部分。</target>
        </trans-unit>
        <trans-unit id="64d424c359dbbc6a46267650b7d3c82877d6250b" translate="yes" xml:space="preserve">
          <source>Search for a route that matches the given partial URI.</source>
          <target state="translated">搜索符合部分URI的路由。</target>
        </trans-unit>
        <trans-unit id="ca10d3a0b68b220058d87185382376f7c05a45af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://json-schema.org/&quot;&gt;json-schema.org&lt;/a&gt; for more information on defining a compatible dictionary.</source>
          <target state="translated">有关定义兼容字典的更多信息，请参见&lt;a href=&quot;http://json-schema.org/&quot;&gt;json-schema.org&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6edd4e1df72d3aace22438d83bb38f124bf0a43a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;media#media&quot;&gt;Media&lt;/a&gt; for more information regarding media handling.</source>
          <target state="translated">有关媒体处理的更多信息，请参见&lt;a href=&quot;media#media&quot;&gt;媒体&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="0e97f4407829fc4f6f72cb89c909d165af685b9a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#environ-variables&quot;&gt;PEP 3333&lt;/a&gt; for a complete list of the variables that are provided via &lt;code&gt;environ&lt;/code&gt;.</source>
          <target state="translated">有关通过 &lt;code&gt;environ&lt;/code&gt; 提供的变量的完整列表，另请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#environ-variables&quot;&gt;PEP 3333&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd5024cdd958df478f96e23b02b7cde852f39f71" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://github.com/falconry/falcon/blob/master/tox.ini&quot;&gt;tox.ini&lt;/a&gt; file for a full list of available environments.</source>
          <target state="translated">有关可用环境的完整列表，另请参见&lt;a href=&quot;https://github.com/falconry/falcon/blob/master/tox.ini&quot;&gt;tox.ini&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="6b6e2ecf7dfe22a2c6c4610c6773ca4f2811a637" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#middleware-components-that-play-both-sides&quot;&gt;WSGI middleware example&lt;/a&gt; given in PEP-3333.</source>
          <target state="translated">另请参阅PEP-3333中提供的&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#middleware-components-that-play-both-sides&quot;&gt;WSGI中间件示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56d1e564129af5693faa8b66bee00c7ea49b9fc5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#falcon.Request.get_cookie_values&quot;&gt;&lt;code&gt;get_cookie_values()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;#falcon.Request.get_cookie_values&quot;&gt; &lt;code&gt;get_cookie_values()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57f90c01b3ccfe4460d975bb72266d13f3309f9c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;../api/api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;add_error_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见：&lt;a href=&quot;../api/api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;add_error_handler()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b43183d53f31190c631421abb971e11340a5c22c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.5&quot;&gt;RFC 6265, Section 4.1.2.5&lt;/a&gt;</source>
          <target state="translated">另请参阅：&lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.5&quot;&gt;RFC 6265，第4.1.2.5节&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b50d04fd950cc1f20741710972fffd4c44140d7" translate="yes" xml:space="preserve">
          <source>Serialize the ETag to a string suitable for use in a precondition header.</source>
          <target state="translated">将ETag序列化为一个适合在前置条件头中使用的字符串。</target>
        </trans-unit>
        <trans-unit id="2cebdb06f4cc83807e41a08e8af9e45d2eb3b751" translate="yes" xml:space="preserve">
          <source>Serialize the media object on a &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;falcon.Response&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">序列化&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;falcon.Response&lt;/code&gt; &lt;/a&gt;上的媒体对象。</target>
        </trans-unit>
        <trans-unit id="e46cd88bd8695dc7923d7eca97daba11572b661f" translate="yes" xml:space="preserve">
          <source>Serving Images</source>
          <target state="translated">服务图像</target>
        </trans-unit>
        <trans-unit id="ac0dd7cd0617a2bb10539769d872732abf30e4bb" translate="yes" xml:space="preserve">
          <source>Serving files directly from the web server, rather than through the Python app, will always be more efficient, and therefore should be preferred in production deployments.</source>
          <target state="translated">直接从web服务器而不是通过Python应用来服务文件,总是更有效率,因此在生产部署中应该是首选。</target>
        </trans-unit>
        <trans-unit id="34fbebb381b8267c138db49980e56eddc8a1c3d9" translate="yes" xml:space="preserve">
          <source>Serving files directly from the web server, rather than through the Python app, will always be more efficient, and therefore should be preferred in production deployments. For security reasons, the directory and the fallback_filename (if provided) should be read only for the account running the application.</source>
          <target state="translated">直接从 web 服务器服务文件,而不是通过 Python 应用程序,总是更有效率,因此在生产部署中应该是首选。为了安全起见,目录和fallback_filename (如果提供的话)应该只对运行应用程序的帐户读取。</target>
        </trans-unit>
        <trans-unit id="9ebad7462677862644cebd44c5002f349807f5d9" translate="yes" xml:space="preserve">
          <source>Set a header for this response to a given value.</source>
          <target state="translated">为这个响应设置一个给定值的头。</target>
        </trans-unit>
        <trans-unit id="fdc29830af6088117cf5b1d94564aaaf53bc0322" translate="yes" xml:space="preserve">
          <source>Set a response cookie.</source>
          <target state="translated">设置一个响应的cookie。</target>
        </trans-unit>
        <trans-unit id="52a606dffbd9e8df4df445f64b9007f4f1c585d1" translate="yes" xml:space="preserve">
          <source>Set of global options passed from the API handler.</source>
          <target state="translated">从API处理程序传递的全局选项集。</target>
        </trans-unit>
        <trans-unit id="d59086db4fa7be57662b83c84aeef0eb195a0c1a" translate="yes" xml:space="preserve">
          <source>Set or append a header for this response.</source>
          <target state="translated">为这个响应设置或附加一个头。</target>
        </trans-unit>
        <trans-unit id="1972779ac5b95baabe27e049d88742dd5e8db41e" translate="yes" xml:space="preserve">
          <source>Set several headers at once.</source>
          <target state="translated">一次设置几个头。</target>
        </trans-unit>
        <trans-unit id="26215380254873eacfdb1d8bec8440421cef8243" translate="yes" xml:space="preserve">
          <source>Set the Accept-Ranges header.</source>
          <target state="translated">设置Accept-Ranges头。</target>
        </trans-unit>
        <trans-unit id="86e9c349af7267226a11f9a33aaf885a65b206a6" translate="yes" xml:space="preserve">
          <source>Set the Cache-Control header.</source>
          <target state="translated">设置Cache-Control头。</target>
        </trans-unit>
        <trans-unit id="1b68d18b392bfec63a51f76b9a143b6d9a6369b5" translate="yes" xml:space="preserve">
          <source>Set the Content-Disposition header using the given filename.</source>
          <target state="translated">使用给定的文件名设置Content-Disposition头。</target>
        </trans-unit>
        <trans-unit id="fa750520d4c1ff15369d9482c00f2662fd077b50" translate="yes" xml:space="preserve">
          <source>Set the Content-Length header.</source>
          <target state="translated">设置Content-Length头。</target>
        </trans-unit>
        <trans-unit id="bbbba708a8fcbbe116624ce2d985711295569859" translate="yes" xml:space="preserve">
          <source>Set the Content-Location header.</source>
          <target state="translated">设置Content-Location头。</target>
        </trans-unit>
        <trans-unit id="9eecd52727a85f04541bc9183e87293cc14fc3c7" translate="yes" xml:space="preserve">
          <source>Set the ETag header.</source>
          <target state="translated">设置ETag头。</target>
        </trans-unit>
        <trans-unit id="d6f36ea033d38681c6c11d8b352634a01b958cd9" translate="yes" xml:space="preserve">
          <source>Set the Expires header. Set to a &lt;code&gt;datetime&lt;/code&gt; (UTC) instance.</source>
          <target state="translated">设置Expires标头。设置为 &lt;code&gt;datetime&lt;/code&gt; （UTC）实例。</target>
        </trans-unit>
        <trans-unit id="34165f27eb77ffb7a8d4a30f71f305e273982895" translate="yes" xml:space="preserve">
          <source>Set the Last-Modified header. Set to a &lt;code&gt;datetime&lt;/code&gt; (UTC) instance.</source>
          <target state="translated">设置Last-Modified标头。设置为 &lt;code&gt;datetime&lt;/code&gt; （UTC）实例。</target>
        </trans-unit>
        <trans-unit id="e4606ae3801abe36a4a26c28b8bf4853df54bfea" translate="yes" xml:space="preserve">
          <source>Set the Location header.</source>
          <target state="translated">设置 &quot;位置 &quot;头。</target>
        </trans-unit>
        <trans-unit id="5ecc73c3a314abbadb86555e49c699ea80146143" translate="yes" xml:space="preserve">
          <source>Set the Retry-After header.</source>
          <target state="translated">设置Retry-After头。</target>
        </trans-unit>
        <trans-unit id="45171ce26d5baa2a2634799948356c570c5b1b88" translate="yes" xml:space="preserve">
          <source>Set this property to an iterable of header names. For a single asterisk or field value, simply pass a single-element &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt;.</source>
          <target state="translated">将此属性设置为标题名称的可迭代项。对于单个星号或字段值，只需传递单个元素 &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;tuple&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3e90de03b0cff7c7e99dd354b70d663c88ada24" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;False&lt;/code&gt; in development environments to make the &lt;code&gt;secure&lt;/code&gt; attribute for all cookies default to &lt;code&gt;False&lt;/code&gt;. This can make testing easier by not requiring HTTPS. Note, however, that this setting can be overridden via &lt;code&gt;set_cookie()&lt;/code&gt;&amp;rsquo;s &lt;code&gt;secure&lt;/code&gt; kwarg.</source>
          <target state="translated">在开发环境中设置为 &lt;code&gt;False&lt;/code&gt; 可使所有cookie的 &lt;code&gt;secure&lt;/code&gt; 属性默认为 &lt;code&gt;False&lt;/code&gt; 。通过不需要HTTPS，可以使测试更加容易。但是请注意，可以通过 &lt;code&gt;set_cookie()&lt;/code&gt; 的 &lt;code&gt;secure&lt;/code&gt; kwarg覆盖此设置。</target>
        </trans-unit>
        <trans-unit id="c7a8a22238ef7de5ea1a3f32eae86001b2211662" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;False&lt;/code&gt; in order to retain a trailing slash, if present, at the end of the URL path (default &lt;code&gt;True&lt;/code&gt;). When this option is enabled, the URL path is normalized by stripping the trailing slash character. This lets the application define a single route to a resource for a path that may or may not end in a forward slash. However, this behavior can be problematic in certain cases, such as when working with authentication schemes that employ URL-based signatures.</source>
          <target state="translated">设置为 &lt;code&gt;False&lt;/code&gt; 以便在URL路径的末尾保留斜杠（如果存在）（默认为 &lt;code&gt;True&lt;/code&gt; ）。启用此选项后，URL路径将通过去除尾部的斜杠字符来规范化。这使应用程序可以为到资源的路径定义单个路由，该路径可以以斜杠结尾也可以不以斜杠结尾。但是，此行为在某些情况下可能会出现问题，例如在使用采用基于URL的签名的身份验证方案时。</target>
        </trans-unit>
        <trans-unit id="693f7e11fca697512da38cb936923fcf1dd75d45" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;False&lt;/code&gt; to ignore query string params that have missing or blank values (default &lt;code&gt;True&lt;/code&gt;). For comma-separated values, this option also determines whether or not empty elements in the parsed list are retained.</source>
          <target state="translated">设置为 &lt;code&gt;False&lt;/code&gt; 将忽略具有缺失或空白值的查询字符串参数（默认为 &lt;code&gt;True&lt;/code&gt; ）。对于以逗号分隔的值，此选项还确定是否保留已解析列表中的空元素。</target>
        </trans-unit>
        <trans-unit id="2abcd3394f28fd96c7b36292a4e10e472214b758" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;False&lt;/code&gt; to treat commas in a query string value as literal characters, rather than as a comma- separated list (default &lt;code&gt;True&lt;/code&gt;). When this option is enabled, the value will be split on any non-percent-encoded commas. Disable this option when encoding lists as multiple occurrences of the same parameter, and when values may be encoded in alternative formats in which the comma character is significant.</source>
          <target state="translated">设置为 &lt;code&gt;False&lt;/code&gt; 可将查询字符串值中的逗号视为文字字符，而不是逗号分隔的列表（默认为 &lt;code&gt;True&lt;/code&gt; ）。启用此选项后，该值将在所有未经百分比编码的逗号上分割。当将列表编码为多次出现相同参数时，以及当值可能以逗号分隔的其他格式编码时，请禁用此选项。</target>
        </trans-unit>
        <trans-unit id="2a0b7221d3da75f92f57cab78f59a8f1259b6b72" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; from within a middleware method to signal to the framework that request processing should be short-circuited (see also &lt;a href=&quot;middleware#middleware&quot;&gt;Middleware&lt;/a&gt;).</source>
          <target state="translated">从中间件方法中设置为 &lt;code&gt;True&lt;/code&gt; ，以向框架发出信号，要求处理应被短路（另请参见&lt;a href=&quot;middleware#middleware&quot;&gt;Middleware&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7d3fd9ba55a0c65c774515ae69eb003d44a6d1a5" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; in order to automatically consume the request stream and merge the results into the request&amp;rsquo;s query string params when the request&amp;rsquo;s content type is &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt; (default &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="translated">设置为 &lt;code&gt;True&lt;/code&gt; 以便在请求的内容类型为&lt;em&gt;application / x-www-form-urlencoded&lt;/em&gt;（默认为 &lt;code&gt;False&lt;/code&gt; ）时自动使用请求流并将结果合并到请求的查询字符串参数中。</target>
        </trans-unit>
        <trans-unit id="0bfb394bbb941980b33bc5f06d723905e0cd45d7" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; in order to strip the trailing slash, if present, at the end of the URL path (default &lt;code&gt;False&lt;/code&gt;). When this option is enabled, the URL path is normalized by stripping the trailing slash character. This lets the application define a single route to a resource for a path that may or may not end in a forward slash. However, this behavior can be problematic in certain cases, such as when working with authentication schemes that employ URL-based signatures.</source>
          <target state="translated">设置为 &lt;code&gt;True&lt;/code&gt; 以便在URL路径的末尾删除斜杠（如果存在）（默认为 &lt;code&gt;False&lt;/code&gt; ）。启用此选项后，URL路径将通过去除尾部的斜杠字符来规范化。这使应用程序可以为到资源的路径定义单个路由，该路径可以以斜杠结尾也可以不以斜杠结尾。但是，在某些情况下（例如，使用基于URL的签名的身份验证方案时），此行为可能会出现问题。</target>
        </trans-unit>
        <trans-unit id="2c9a08e99834f7ab6619875300437d871902a166" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;True&lt;/code&gt; to split query string values on any non-percent-encoded commas (default &lt;code&gt;False&lt;/code&gt;). When &lt;code&gt;False&lt;/code&gt;, values containing commas are left as-is. In this mode, list items are taken only from multiples of the same parameter name within the query string (i.e. &lt;code&gt;/?t=1,2,3&amp;amp;t=4&lt;/code&gt; becomes &lt;code&gt;['1,2,3', '4']&lt;/code&gt;). When &lt;code&gt;auto_parse_qs_csv&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, the query string value is also split on non-percent-encoded commas and these items are added to the final list (i.e. &lt;code&gt;/?t=1,2,3&amp;amp;t=4&lt;/code&gt; becomes &lt;code&gt;['1', '2', '3', '4']&lt;/code&gt;).</source>
          <target state="translated">设置为 &lt;code&gt;True&lt;/code&gt; 可在任何未经百分比编码的逗号上拆分查询字符串值（默认为 &lt;code&gt;False&lt;/code&gt; ）。如果为 &lt;code&gt;False&lt;/code&gt; ，则包含逗号的值保持原样。在这种模式下，列表项仅取自查询字符串中相同参数名称的倍数（即 &lt;code&gt;/?t=1,2,3&amp;amp;t=4&lt;/code&gt; 变为 &lt;code&gt;['1,2,3', '4']&lt;/code&gt; ）。当 &lt;code&gt;auto_parse_qs_csv&lt;/code&gt; 设置为 &lt;code&gt;True&lt;/code&gt; 时，查询字符串值也会在非百分比编码的逗号上分割，并将这些项目添加到最终列表中（即 &lt;code&gt;/?t=1,2,3&amp;amp;t=4&lt;/code&gt; 变为 &lt;code&gt;['1', '2', '3', '4']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cbe1a1be3ab9ce3c5b5518e740b5f5c1a18332b5" translate="yes" xml:space="preserve">
          <source>Sets the Content-Type header.</source>
          <target state="translated">设置Content-Type头。</target>
        </trans-unit>
        <trans-unit id="812e1510dc3a69bba7169d046432d0ac229b769f" translate="yes" xml:space="preserve">
          <source>Setting Cookies</source>
          <target state="translated">设置Cookies</target>
        </trans-unit>
        <trans-unit id="ee8aea2755b74bfe18b18b8045d2bb9805310e69" translate="yes" xml:space="preserve">
          <source>Setting cookies on a response is done via &lt;a href=&quot;request_and_response#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;request_and_response#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt;在响应上设置cookie 。</target>
        </trans-unit>
        <trans-unit id="9028342680035b2ad208b805a21f520595fc0315" translate="yes" xml:space="preserve">
          <source>Setting cookies on a response may be done either via &lt;a href=&quot;request_and_response#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;request_and_response#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过&lt;a href=&quot;request_and_response#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;request_and_response#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; &lt;/a&gt;在响应上设置Cookie 。</target>
        </trans-unit>
        <trans-unit id="4b98c2c148cc55f43358c84052c0a677a5b68fef" translate="yes" xml:space="preserve">
          <source>Shiftgig</source>
          <target state="translated">Shiftgig</target>
        </trans-unit>
        <trans-unit id="4201119b032db5c4951c0cb35d2d2de5c804364c" translate="yes" xml:space="preserve">
          <source>Short-circuiting</source>
          <target state="translated">Short-circuiting</target>
        </trans-unit>
        <trans-unit id="bbf5e0faccce9f4212fd27e220404de17fcaccb8" translate="yes" xml:space="preserve">
          <source>Similar logic can be applied globally with middleware. (See also: &lt;a href=&quot;../api/middleware#middleware&quot;&gt;falcon.middleware&lt;/a&gt;)</source>
          <target state="translated">类似的逻辑可以与中间件一起全局应用。（另请参见：&lt;a href=&quot;../api/middleware#middleware&quot;&gt;falcon.middleware&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="fdaf2f9ce9f0c0a0bd96c1ed0494cd06d4830358" translate="yes" xml:space="preserve">
          <source>Similar to the way multiple keys in form data is handled, if a query parameter is assigned a comma-separated list of values (e.g., &lt;code&gt;foo=a,b,c&lt;/code&gt;), only one of those values will be returned, and it is undefined which one. Use &lt;a href=&quot;#falcon.Request.get_param_as_list&quot;&gt;&lt;code&gt;get_param_as_list()&lt;/code&gt;&lt;/a&gt; to retrieve all the values.</source>
          <target state="translated">与处理表单数据中多个键的方式类似，如果为查询参数分配了逗号分隔的值列表（例如 &lt;code&gt;foo=a,b,c&lt;/code&gt; ），则仅返回这些值之一，并且该值未定义哪一个。使用&lt;a href=&quot;#falcon.Request.get_param_as_list&quot;&gt; &lt;code&gt;get_param_as_list()&lt;/code&gt; &lt;/a&gt;检索所有值。</target>
        </trans-unit>
        <trans-unit id="563523c7fb9aeb90cd3ca9914f9f94d5abfe8ef0" translate="yes" xml:space="preserve">
          <source>Simple example:</source>
          <target state="translated">简单的例子。</target>
        </trans-unit>
        <trans-unit id="86908d09bd9d22561b8032f4362cb1ed2e837e66" translate="yes" xml:space="preserve">
          <source>Simply inherit from this class in your test case classes instead of &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;testtools.TestCase&lt;/code&gt;.</source>
          <target state="translated">只需从您的测试用例类中继承该类，而不是从&lt;a href=&quot;https://docs.python.org/2/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;testtools.TestCase&lt;/code&gt; 继承即可。</target>
        </trans-unit>
        <trans-unit id="24e978a144d78750b606e3ea3117ad2308417d74" translate="yes" xml:space="preserve">
          <source>Simply inherit from this class in your test case classes instead of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;testtools.TestCase&lt;/code&gt;.</source>
          <target state="translated">只需从您的测试用例类中继承该类，而不是从&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;testtools.TestCase&lt;/code&gt; 继承即可。</target>
        </trans-unit>
        <trans-unit id="9efe3729516697080fa3b31c3cef6c25e4944ad4" translate="yes" xml:space="preserve">
          <source>Simulates a DELETE request to a WSGI application.</source>
          <target state="translated">模拟一个对WSGI应用程序的DELETE请求。</target>
        </trans-unit>
        <trans-unit id="2c88d03b65011d898a0f67608343b138639a3131" translate="yes" xml:space="preserve">
          <source>Simulates a GET request to a WSGI application.</source>
          <target state="translated">模拟一个对WSGI应用程序的GET请求。</target>
        </trans-unit>
        <trans-unit id="0f65072cc15597ea07ed04c5f330c07749452b25" translate="yes" xml:space="preserve">
          <source>Simulates a HEAD request to a WSGI application.</source>
          <target state="translated">模拟对WSGI应用程序的HEAD请求。</target>
        </trans-unit>
        <trans-unit id="a274d9d17eb05ebbadd3c81df6552244131d1a17" translate="yes" xml:space="preserve">
          <source>Simulates a PATCH request to a WSGI application.</source>
          <target state="translated">模拟对WSGI应用程序的PATCH请求。</target>
        </trans-unit>
        <trans-unit id="4026afbf34de290320ef825ed8bc8002afa4427c" translate="yes" xml:space="preserve">
          <source>Simulates a POST request to a WSGI application.</source>
          <target state="translated">模拟一个对WSGI应用程序的POST请求。</target>
        </trans-unit>
        <trans-unit id="b020551ee2a87787d04649de4b52ea03354c6858" translate="yes" xml:space="preserve">
          <source>Simulates a PUT request to a WSGI application.</source>
          <target state="translated">模拟对WSGI应用程序的PUT请求。</target>
        </trans-unit>
        <trans-unit id="4c437ea208d8a355140917299f3fd6dbbc59f3b7" translate="yes" xml:space="preserve">
          <source>Simulates a request to &lt;code&gt;self.api&lt;/code&gt;.</source>
          <target state="translated">模拟对 &lt;code&gt;self.api&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="ba77c20647151932a4a9d1d6cd46c18dd60a06ad" translate="yes" xml:space="preserve">
          <source>Simulates a request to a WSGI application.</source>
          <target state="translated">模拟一个对WSGI应用程序的请求。</target>
        </trans-unit>
        <trans-unit id="00af3ff2c255abf767fc2dcd20c3dd2488a1660e" translate="yes" xml:space="preserve">
          <source>Simulates an OPTIONS request to a WSGI application.</source>
          <target state="translated">模拟对WSGI应用程序的OPTIONS请求。</target>
        </trans-unit>
        <trans-unit id="974b8e9c9333ccb3135405015d459ba83e89d75f" translate="yes" xml:space="preserve">
          <source>Simulates requests to a WSGI application.</source>
          <target state="translated">模拟对WSGI应用程序的请求。</target>
        </trans-unit>
        <trans-unit id="88824c2a99b73ac27b74cb09de3fdb3efd111f18" translate="yes" xml:space="preserve">
          <source>Since this object is provided by the WSGI server itself, rather than by Falcon, it may behave differently depending on how you host your app. For example, attempting to read more bytes than are expected (as determined by the Content-Length header) may or may not block indefinitely. It&amp;rsquo;s a good idea to test your WSGI server to find out how it behaves.</source>
          <target state="translated">由于此对象是由WSGI服务器本身提供的，而不是由Falcon提供的，因此它的行为可能会有所不同，具体取决于您托管应用程序的方式。例如，尝试读取比预期更多的字节（由Content-Length标头确定）可能会或可能不会无限期地阻塞。测试您的WSGI服务器以了解其行为是一个好主意。</target>
        </trans-unit>
        <trans-unit id="c9d0de9421139e06ca3049737a4da5165914c73d" translate="yes" xml:space="preserve">
          <source>Since we are building an image-sharing API, let&amp;rsquo;s start by creating an &amp;ldquo;images&amp;rdquo; resource. Create a new module, &lt;code&gt;images.py&lt;/code&gt; next to &lt;code&gt;app.py&lt;/code&gt;, and add the following code to it:</source>
          <target state="translated">由于我们正在构建图像共享API，因此我们首先创建一个&amp;ldquo;图像&amp;rdquo;资源。在 &lt;code&gt;images.py&lt;/code&gt; 旁边创建一个新模块 &lt;code&gt;app.py&lt;/code&gt; ，并向其中添加以下代码：</target>
        </trans-unit>
        <trans-unit id="4a540a31340238b7255a499672950eb2f1bd6896" translate="yes" xml:space="preserve">
          <source>Snappy unit testing through WSGI helpers and mocks</source>
          <target state="translated">通过WSGI助手和mocks进行快速单元测试。</target>
        </trans-unit>
        <trans-unit id="662dd5ad7e76c16c0d67c23b86e41dc092cd7afb" translate="yes" xml:space="preserve">
          <source>So far we have only implemented a responder for GET. Let&amp;rsquo;s see what happens when a different method is requested:</source>
          <target state="translated">到目前为止，我们只为GET实现了响应器。让我们看看请求其他方法时会发生什么：</target>
        </trans-unit>
        <trans-unit id="0450c161e801905e3f771af7fcb01580c22414f6" translate="yes" xml:space="preserve">
          <source>So-called &amp;ldquo;link-extension&amp;rdquo; elements, as defined by RFC 5988, are not yet supported. See also Issue #288.</source>
          <target state="translated">尚不支持RFC 5988定义的所谓&amp;ldquo;链接扩展&amp;rdquo;元素。另请参见问题288。</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">源代码</target>
        </trans-unit>
        <trans-unit id="5eb74b9ae4ba084aa93615c1403c54d982f1ccfb" translate="yes" xml:space="preserve">
          <source>Specifies when the cookie should expire. By default, cookies expire when the user agent exits.</source>
          <target state="translated">指定Cookie的过期时间。默认情况下,当用户代理退出时,cookie就会过期。</target>
        </trans-unit>
        <trans-unit id="b6c6f12fa0503103d2502596ed6f908c43fa25d9" translate="yes" xml:space="preserve">
          <source>Start by defining a list of media types the service will accept. Place this constant near the top, just after the import statements in &lt;code&gt;images.py&lt;/code&gt;:</source>
          <target state="translated">首先定义服务将接受的媒体类型的列表。将这个常数放在顶部附近，在 &lt;code&gt;images.py&lt;/code&gt; 中的import语句之后：</target>
        </trans-unit>
        <trans-unit id="c53b84e1d62f70d8fac0745c7be82317a9a19840" translate="yes" xml:space="preserve">
          <source>Starting with version 2.0, the default for the &lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt;&lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt;&lt;/a&gt; request option changed from &lt;code&gt;True&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">从2.0版开始，&lt;a href=&quot;../api/api#falcon.RequestOptions.strip_url_path_trailing_slash&quot;&gt; &lt;code&gt;strip_url_path_trailing_slash&lt;/code&gt; &lt;/a&gt;请求选项的默认值从 &lt;code&gt;True&lt;/code&gt; 更改为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc37e6d911befd4a4898219a8d9270e2772191e8" translate="yes" xml:space="preserve">
          <source>Static routes are matched in LIFO order. Therefore, if the same prefix is used for two routes, the second one will override the first. This also means that more specific routes should be added &lt;em&gt;after&lt;/em&gt; less specific ones. For example, the following sequence would result in &lt;code&gt;'/foo/bar/thing.js'&lt;/code&gt; being mapped to the &lt;code&gt;'/foo/bar'&lt;/code&gt; route, and &lt;code&gt;'/foo/xyz/thing.js'&lt;/code&gt; being mapped to the &lt;code&gt;'/foo'&lt;/code&gt; route:</source>
          <target state="translated">静态路由按LIFO顺序进行匹配。因此，如果两个路由使用相同的前缀，则第二个路由将覆盖第一个路由。这也意味着应该&lt;em&gt;在&lt;/em&gt;不那么具体的路由&lt;em&gt;之后&lt;/em&gt;添加更具体的路由。例如，以下序列将导致 &lt;code&gt;'/foo/bar/thing.js'&lt;/code&gt; 映射到 &lt;code&gt;'/foo/bar'&lt;/code&gt; 路由，而 &lt;code&gt;'/foo/xyz/thing.js'&lt;/code&gt; 映射到 &lt;code&gt;'/foo'&lt;/code&gt; 路线：</target>
        </trans-unit>
        <trans-unit id="2e20fcad0088815384ca7643b86b510910b6d898" translate="yes" xml:space="preserve">
          <source>Static routes provide a way to serve files directly. This feature provides an alternative to serving files at the web server level when you don&amp;rsquo;t have that option, when authorization is required, or for testing purposes.</source>
          <target state="translated">静态路由提供了一种直接提供文件的方式。当您没有该选项，需要授权或出于测试目的时，此功能提供了在Web服务器级别上提供文件的替代方法。</target>
        </trans-unit>
        <trans-unit id="7f5583f5096a76c834c0bcc4f4885ffca8fe34cd" translate="yes" xml:space="preserve">
          <source>Status Codes</source>
          <target state="translated">状态码</target>
        </trans-unit>
        <trans-unit id="b5ae3ef33e83e257a6d9f01f8f5e3b2c8b064a1d" translate="yes" xml:space="preserve">
          <source>Straightforward exception handling</source>
          <target state="translated">直接的异常处理</target>
        </trans-unit>
        <trans-unit id="79c55462f777bec2b086eb3b494cab24883963c8" translate="yes" xml:space="preserve">
          <source>String representing response content.</source>
          <target state="translated">代表响应内容的字符串。</target>
        </trans-unit>
        <trans-unit id="4408cabddcda0e622f916a2ce317545f022d79b4" translate="yes" xml:space="preserve">
          <source>String representing response content. If Unicode, Falcon will encode as UTF-8 in the response.</source>
          <target state="translated">代表响应内容的字符串。如果是Unicode,Falcon将在响应中以UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="025dc49987125a2f8778cd153f13e51b92f75079" translate="yes" xml:space="preserve">
          <source>Support for CPython 2.6 is deprecated and will be removed in Falcon 2.0.</source>
          <target state="translated">对CPython 2.6的支持已被废弃,并将在Falcon 2.0中删除。</target>
        </trans-unit>
        <trans-unit id="8419d242a258bc405fcb80df0dcc4edeb5ccaae7" translate="yes" xml:space="preserve">
          <source>Supported HTTP methods are those specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC 7231&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5789&quot;&gt;RFC 5789&lt;/a&gt;. This includes GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, and PATCH.</source>
          <target state="translated">支持的HTTP方法是&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC 7231&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc5789&quot;&gt;RFC 5789中&lt;/a&gt;指定的方法。这包括GET，HEAD，POST，PUT，DELETE，CONNECT，OPTIONS，TRACE和PATCH。</target>
        </trans-unit>
        <trans-unit id="dc0bfe9d44c9040a72d2a1656f382faee40c5063" translate="yes" xml:space="preserve">
          <source>Supported Handler Types</source>
          <target state="translated">支持的处理程序类型</target>
        </trans-unit>
        <trans-unit id="6278ad6514f28afb3102e7328e3136c1abe2c689" translate="yes" xml:space="preserve">
          <source>Supports Python 2.6, 2.7, 3.3, 3.4 and 3.6</source>
          <target state="translated">支持Python 2.6、2.7、3.3、3.4和3.6。</target>
        </trans-unit>
        <trans-unit id="9fb85894bb8482090e56714ed0f846201b91c8ee" translate="yes" xml:space="preserve">
          <source>Supports Python 2.7, 3.5+</source>
          <target state="translated">支持Python 2.7、3.5+。</target>
        </trans-unit>
        <trans-unit id="eec6ee98efbd89d4f4f05a322d3afa1bf0a589b3" translate="yes" xml:space="preserve">
          <source>Suppose you have the following routes:</source>
          <target state="translated">假设你有以下路线。</target>
        </trans-unit>
        <trans-unit id="4800e348d69f9583c064ceda96039ce27d1f83d4" translate="yes" xml:space="preserve">
          <source>Take a moment to run pytest again to check your progress:</source>
          <target state="translated">花点时间再次运行pytest来检查你的进度。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="caba85a38659d35c5f12809be3024b3ed7677165" translate="yes" xml:space="preserve">
          <source>Testing your application</source>
          <target state="translated">测试您的应用程序</target>
        </trans-unit>
        <trans-unit id="e3e74a777f6f08e831eebf8c1a6642d5c1d71643" translate="yes" xml:space="preserve">
          <source>Tests can either be written using Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module, or with any of a number of third-party testing frameworks, such as &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;. For this tutorial we&amp;rsquo;ll use &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; since it allows for more pythonic test code as compared to the JUnit-inspired &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">测试可以使用Python的标准&lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块编写，也可以使用许多第三方测试框架（例如&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest）中的&lt;/a&gt;任何一种编写。在本教程中，我们将使用&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest，&lt;/a&gt;因为与JUnit启发式的&lt;a href=&quot;https://docs.python.org/2/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块相比，它允许更多的pythonic测试代码。</target>
        </trans-unit>
        <trans-unit id="54c58314292008523768f9b9acf90d8214abfdb8" translate="yes" xml:space="preserve">
          <source>Tests can either be written using Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module, or with any of a number of third-party testing frameworks, such as &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt;. For this tutorial we&amp;rsquo;ll use &lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest&lt;/a&gt; since it allows for more pythonic test code as compared to the JUnit-inspired &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">可以使用Python的标准&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块编写测试，也可以使用许多第三方测试框架（例如&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest）中的&lt;/a&gt;任何一种编写测试。在本教程中，我们将使用&lt;a href=&quot;http://docs.pytest.org/en/latest/&quot;&gt;pytest，&lt;/a&gt;因为与JUnit启发式的&lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块相比，它允许更多的pythonic测试代码。</target>
        </trans-unit>
        <trans-unit id="e1883b672a70c4a8a4e982ad76a7467e27bbdf46" translate="yes" xml:space="preserve">
          <source>Text encoding of the response body, or &lt;code&gt;None&lt;/code&gt; if the encoding can not be determined.</source>
          <target state="translated">响应主体的文本编码，如果无法确定编码，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d14f108604f9b9cb80e71415bbf3b0e54ea374ff" translate="yes" xml:space="preserve">
          <source>That being said, IO-bound Falcon APIs are usually scaled via green threads (courtesy of the &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; library or similar) which aren&amp;rsquo;t truly running concurrently, so there may be some edge cases where Falcon is not thread-safe that haven&amp;rsquo;t been discovered yet.</source>
          <target state="translated">话虽如此，IO绑定的Falcon API通常是通过不是真正并发运行的绿色线程（由&lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt;库或类似程序提供）进行扩展的，因此在某些情况下，Falcon并不是线程安全的，并且还没有被发现了。</target>
        </trans-unit>
        <trans-unit id="b610c96c42c1de8c3ace2defdc8516d390e97dd0" translate="yes" xml:space="preserve">
          <source>That being said, IO-bound Falcon APIs are usually scaled via multiple processes and green threads (courtesy of the &lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt; library or similar) which aren&amp;rsquo;t truly running concurrently, so there may be some edge cases where Falcon is not thread-safe that we aren&amp;rsquo;t aware of. If you run into any issues, please let us know.</source>
          <target state="translated">话虽这么说，与IO绑定的Falcon API通常是通过多个进程和绿色线程（由&lt;a href=&quot;http://www.gevent.org/&quot;&gt;gevent&lt;/a&gt;库或类似程序提供）扩展的，这些进程和线程并不是真正并发运行的，因此在某些情况下，Falcon并不是线程安全的，我们不知道。如果您遇到任何问题，请告诉我们。</target>
        </trans-unit>
        <trans-unit id="91760a57ebb6de47220f664ed3fe52a2307b831d" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Vary&amp;rdquo; header field in a response describes what parts of a request message, aside from the method, Host header field, and request target, might influence the origin server&amp;rsquo;s process for selecting and representing this response. The value consists of either a single asterisk (&amp;ldquo;*&amp;rdquo;) or a list of header field names (case-insensitive).</source>
          <target state="translated">响应中的&amp;ldquo; Vary&amp;rdquo;标头字段描述了请求消息的哪些部分，除了方法，主机标头字段和请求目标之外，还可能影响源服务器选择和表示此响应的过程。该值由单个星号（&amp;ldquo; *&amp;rdquo;）或标题字段名称列表（不区分大小写）组成。</target>
        </trans-unit>
        <trans-unit id="d5569cd35f7571a8587db177ee937a538bed7742" translate="yes" xml:space="preserve">
          <source>The 301 (Moved Permanently) status code indicates that the target resource has been assigned a new permanent URI.</source>
          <target state="translated">301(Moved Permanently)状态码表示目标资源已经被分配了一个新的永久URI。</target>
        </trans-unit>
        <trans-unit id="1b3d47e4c8b5075186c10d4422e75e9fd42136d0" translate="yes" xml:space="preserve">
          <source>The 302 (Found) status code indicates that the target resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client ought to continue to use the effective request URI for future requests.</source>
          <target state="translated">302(Found)状态码表示目标资源暂时驻留在不同的URI下。由于重定向可能偶尔会被改变,因此客户端应该在未来的请求中继续使用有效的请求URI。</target>
        </trans-unit>
        <trans-unit id="726b4242ef422047aeb3d20c6ce4e902ac145e3c" translate="yes" xml:space="preserve">
          <source>The 303 (See Other) status code indicates that the server is redirecting the user agent to a &lt;em&gt;different&lt;/em&gt; resource, as indicated by a URI in the Location header field, which is intended to provide an indirect response to the original request.</source>
          <target state="translated">303（请参阅其他）状态代码表示服务器正在将用户代理重定向到&lt;em&gt;其他&lt;/em&gt;资源，如Location标头字段中的URI所示，该资源旨在提供对原始请求的间接响应。</target>
        </trans-unit>
        <trans-unit id="60e2e62bbd068fa3a3dc4c65a18c4d3e392cb9eb" translate="yes" xml:space="preserve">
          <source>The 307 (Temporary Redirect) status code indicates that the target resource resides temporarily under a different URI and the user agent MUST NOT change the request method if it performs an automatic redirection to that URI. Since the redirection can change over time, the client ought to continue using the original effective request URI for future requests.</source>
          <target state="translated">307(临时重定向)状态码表示目标资源暂时驻留在不同的URI下,如果用户代理执行自动重定向到该URI,则不得改变请求方法。由于重定向可能会随着时间的推移而改变,因此客户端应该在未来的请求中继续使用原来的有效请求URI。</target>
        </trans-unit>
        <trans-unit id="0d685714d7f7c4aa8d639d8628cfc53dac9a432e" translate="yes" xml:space="preserve">
          <source>The 308 (Permanent Redirect) status code indicates that the target resource has been assigned a new permanent URI.</source>
          <target state="translated">308(永久重定向)状态码表示目标资源已经被分配了一个新的永久URI。</target>
        </trans-unit>
        <trans-unit id="cc3384e0a60969e2be04db6337b00636752c28c0" translate="yes" xml:space="preserve">
          <source>The 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer associated with the origin server&amp;rsquo;s site. It is not necessary to mark all permanently unavailable resources as &amp;ldquo;gone&amp;rdquo; or to keep the mark for any length of time &amp;ndash; that is left to the discretion of the server owner.</source>
          <target state="translated">410响应主要旨在通过通知接收者资源有意不可用以及服务器所有者希望删除指向该资源的远程链接来辅助Web维护任务。对于限时促销服务和属于不再与原始服务器站点关联的个人的资源而言，此类事件很常见。不必将所有永久不可用的资源标记为&amp;ldquo;已消失&amp;rdquo;，也不必将标记保留任何时间-服务器所有者可以自行决定。</target>
        </trans-unit>
        <trans-unit id="37d41634e1486182ae5ed330e8da9002cbdd8832" translate="yes" xml:space="preserve">
          <source>The 423 (Locked) status code means the source or destination resource of a method is locked. This response SHOULD contain an appropriate precondition or postcondition code, such as &amp;lsquo;lock-token-submitted&amp;rsquo; or &amp;lsquo;no-conflicting-lock&amp;rsquo;.</source>
          <target state="translated">423（锁定）状态代码表示方法的源或目标资源已锁定。该响应应该包含适当的前提条件或后置条件代码，例如&amp;ldquo;锁令牌提交&amp;rdquo;或&amp;ldquo;无冲突锁&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b4a2e06651b68836701d3a7cb603b045c6e96900" translate="yes" xml:space="preserve">
          <source>The 424 (Failed Dependency) status code means that the method could not be performed on the resource because the requested action depended on another action and that action failed.</source>
          <target state="translated">424(Failed Dependency)状态码意味着该方法无法在资源上执行,因为请求的操作依赖于另一个操作,而该操作失败了。</target>
        </trans-unit>
        <trans-unit id="f699dbe1affd27bc27a1c4e9c8c3bf1b9d1409af" translate="yes" xml:space="preserve">
          <source>The 428 status code indicates that the origin server requires the request to be conditional.</source>
          <target state="translated">428状态码表示源服务器要求请求有条件。</target>
        </trans-unit>
        <trans-unit id="340983f703bea50cbcfa389827e03f93960292cc" translate="yes" xml:space="preserve">
          <source>The 431 status code indicates that the server is unwilling to process the request because its header fields are too large. The request MAY be resubmitted after reducing the size of the request header fields.</source>
          <target state="translated">431状态码表示服务器不愿意处理该请求,因为请求头字段太大。缩小请求头字段的大小后,可以重新提交请求。</target>
        </trans-unit>
        <trans-unit id="9ecb4ba8dba027dd2009504727fa8640f03dc45e" translate="yes" xml:space="preserve">
          <source>The 501 (Not Implemented) status code indicates that the server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource.</source>
          <target state="translated">501(未实现)状态码表示服务器不支持满足请求所需的功能。当服务器不识别请求方法并且不能支持任何资源时,这是适当的响应。</target>
        </trans-unit>
        <trans-unit id="cb5a6e6224a6befed044cf459ac3ad6b9a312b3f" translate="yes" xml:space="preserve">
          <source>The 504 (Gateway Timeout) status code indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access in order to complete the request.</source>
          <target state="translated">504(网关超时)状态码表示服务器在作为网关或代理时,没有收到它需要访问的上游服务器的及时响应以完成请求。</target>
        </trans-unit>
        <trans-unit id="7d3e56bd7be8142221a29289658a2e3d7346bb69" translate="yes" xml:space="preserve">
          <source>The 505 (HTTP Version Not Supported) status code indicates that the server does not support, or refuses to support, the major version of HTTP that was used in the request message. The server is indicating that it is unable or unwilling to complete the request using the same major version as the client (as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.6&quot;&gt;RFC 7230, Section 2.6&lt;/a&gt;), other than with this error message. The server SHOULD generate a representation for the 505 response that describes why that version is not supported and what other protocols are supported by that server.</source>
          <target state="translated">505（不支持HTTP版本）状态代码表示服务器不支持或拒绝支持请求消息中使用的HTTP的主要版本。服务器指示&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.6&quot;&gt;除此&lt;/a&gt;错误消息外，它无法或不愿意使用与客户端相同的主要版本（如RFC 7230，第2.6节中所述）完成请求。服务器应该为505响应生成一个表示，该表示描述为什么不支持该版本以及该服务器支持哪些其他协议。</target>
        </trans-unit>
        <trans-unit id="6cfe58d6c6aa1b9a0d0a3a747564d201b045f349" translate="yes" xml:space="preserve">
          <source>The 507 (Insufficient Storage) status code means the method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. This condition is considered to be temporary. If the request that received this status code was the result of a user action, the request MUST NOT be repeated until it is requested by a separate user action.</source>
          <target state="translated">507(存储不足)状态码意味着由于服务器无法存储成功完成请求所需的表示,因此无法对资源执行该方法。这种情况被认为是暂时的。如果收到该状态码的请求是用户操作的结果,那么在被单独的用户操作请求之前,必须不重复该请求。</target>
        </trans-unit>
        <trans-unit id="57373a3fd3bc21f998e825b6baefc168ab517736" translate="yes" xml:space="preserve">
          <source>The 508 (Loop Detected) status code indicates that the server terminated an operation because it encountered an infinite loop while processing a request with &amp;ldquo;Depth: infinity&amp;rdquo;. This status indicates that the entire operation failed.</source>
          <target state="translated">508（检测到环路）状态代码表示服务器终止了操作，因为它在处理带有&amp;ldquo;深度：无限&amp;rdquo;的请求时遇到了无限循环。此状态表示整个操作失败。</target>
        </trans-unit>
        <trans-unit id="6cd7b38dbe1a6e26eb4ce50115f5dc8d8ec3b5d7" translate="yes" xml:space="preserve">
          <source>The 511 status SHOULD NOT be generated by origin servers; it is intended for use by intercepting proxies that are interposed as a means of controlling access to the network.</source>
          <target state="translated">511状态不应该由起源服务器产生,它的目的是用于拦截代理,作为控制网络访问的手段。</target>
        </trans-unit>
        <trans-unit id="0e2021f09cffdfd7e8e3c2b6e4af6afc876e3ba4" translate="yes" xml:space="preserve">
          <source>The 511 status code indicates that the client needs to authenticate to gain network access.</source>
          <target state="translated">511状态码表示客户端需要进行认证才能获得网络访问。</target>
        </trans-unit>
        <trans-unit id="c7b375b386cad2cf0c706ec29c2501981f15368a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;api#falcon.API.add_route&quot;&gt;&lt;code&gt;add_route()&lt;/code&gt;&lt;/a&gt; method is used to associate a URI template with a resource. Falcon then maps incoming requests to resources based on these templates.</source>
          <target state="translated">该&lt;a href=&quot;api#falcon.API.add_route&quot;&gt; &lt;code&gt;add_route()&lt;/code&gt; &lt;/a&gt;方法用于与资源的URI模板关联。Falcon然后根据这些模板将传入的请求映射到资源。</target>
        </trans-unit>
        <trans-unit id="b16e989ab1e7195020236dcccbd9b80ae4c1fe1c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; class contains helper methods, such as &lt;code&gt;to_json()&lt;/code&gt; and &lt;code&gt;to_dict()&lt;/code&gt;, that can be used from within custom serializers. For example:</source>
          <target state="translated">所述&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;类包含辅助方法，如 &lt;code&gt;to_json()&lt;/code&gt; 和 &lt;code&gt;to_dict()&lt;/code&gt; ，可以从定制序列内使用。例如：</target>
        </trans-unit>
        <trans-unit id="65b25e21bae5e9d50ada2a93cc95a03e94707ebe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object represents the incoming HTTP request. It exposes properties and methods for examining headers, query string parameters, and other metadata associated with the request. A file-like stream object is also provided for reading any data that was included in the body of the request.</source>
          <target state="translated">所述&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象表示传入的HTTP请求。它提供了用于检查标头，查询字符串参数以及与请求关联的其他元数据的属性和方法。还提供了一个类似文件的流对象，用于读取请求主体中包含的任何数据。</target>
        </trans-unit>
        <trans-unit id="d64cdea96b1a83d53287b37a25f2434d0d8aa000" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; attribute is a regular &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该&lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt; &lt;code&gt;cookies&lt;/code&gt; &lt;/a&gt;属性是一个普通的&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="4734fa80d7bfc7dbe4727753201a6b446e9166c6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/a&gt; attribute returns a copy of the response cookie dictionary. Assign it to a variable, as shown in the above example, to improve performance when you need to look up more than one cookie.</source>
          <target state="translated">该&lt;a href=&quot;request_and_response#falcon.Request.cookies&quot;&gt; &lt;code&gt;cookies&lt;/code&gt; &lt;/a&gt;属性返回响应cookie字典的副本。如上例所示，将其分配给一个变量，以在需要查找多个cookie时提高性能。</target>
        </trans-unit>
        <trans-unit id="888cea72316f9cddd409828c37a637a4cf7684e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object represents the application&amp;rsquo;s HTTP response to the above request. It provides properties and methods for setting status, header and body data. The &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object also exposes a dict-like &lt;a href=&quot;request_and_response#falcon.Response.context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; property for passing arbitrary data to hooks and middleware methods.</source>
          <target state="translated">所述&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;对象表示上述请求应用程序的HTTP响应。它提供用于设置状态，标题和正文数据的属性和方法。该&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;对象还公开了一个类似字典的&lt;a href=&quot;request_and_response#falcon.Response.context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;属性对任意数据传递到钩子和中间件的方法。</target>
        </trans-unit>
        <trans-unit id="fad7b66e61b91a5b2444c8aea097a08dd5c31f62" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;request_and_response#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt; method should be used instead of &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt;&lt;code&gt;set_header()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;request_and_response#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt;. With &lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt;&lt;code&gt;set_header()&lt;/code&gt;&lt;/a&gt; you cannot set multiple headers with the same name (which is how multiple cookies are sent to the client). Furthermore, &lt;a href=&quot;request_and_response#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt; appends multiple values to the same header field in a way that is not compatible with the special format required by the &lt;code&gt;Set-Cookie&lt;/code&gt; header.</source>
          <target state="translated">所述&lt;a href=&quot;request_and_response#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt;方法应被用来代替&lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt; &lt;code&gt;set_header()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;request_and_response#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; &lt;/a&gt;。使用&lt;a href=&quot;request_and_response#falcon.Response.set_header&quot;&gt; &lt;code&gt;set_header()&lt;/code&gt; &lt;/a&gt;不能设置多个具有相同名称的标头（这是将多个cookie发送到客户端的方式）。此外，&lt;a href=&quot;request_and_response#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; 会&lt;/a&gt;以与 &lt;code&gt;Set-Cookie&lt;/code&gt; 标头要求的特殊格式不兼容的方式将多个值附加到同一标头字段。</target>
        </trans-unit>
        <trans-unit id="e6cd0120941e3e305c5928f34ca490f077e2361e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;+&lt;/code&gt; character is often used instead of &lt;code&gt;%20&lt;/code&gt; to represent spaces in query string params, due to the historical conflation of form parameter encoding (&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;) and URI percent-encoding. Therefore, Falcon, converts &lt;code&gt;+&lt;/code&gt; to a space when decoding strings.</source>
          <target state="translated">的 &lt;code&gt;+&lt;/code&gt; 字经常被用来代替 &lt;code&gt;%20&lt;/code&gt; 以表示查询字符串PARAMS空格，由于形式参数编码（历史混为一谈 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; ）和百分号编码URI。因此，Falcon 在解码字符串时将 &lt;code&gt;+&lt;/code&gt; 转换为空格。</target>
        </trans-unit>
        <trans-unit id="234169c00df14981c9c02886b9808f15714759f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, including &lt;code&gt;falcon.MEDIA_JSON&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_HTML&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_JS&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_TEXT&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_JPEG&lt;/code&gt;, &lt;code&gt;falcon.MEDIA_PNG&lt;/code&gt;, and &lt;code&gt;falcon.MEDIA_GIF&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;falcon&lt;/code&gt; 模块提供了许多常见的介质类型，包括常量 &lt;code&gt;falcon.MEDIA_JSON&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_MSGPACK&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_YAML&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_XML&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_HTML&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_JS&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_TEXT&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_JPEG&lt;/code&gt; ， &lt;code&gt;falcon.MEDIA_PNG&lt;/code&gt; ，和 &lt;code&gt;falcon.MEDIA_GIF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4fdec9cfe6f041a3303843d674dec970b0300b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;falcon&lt;/code&gt; module provides a number of constants for common media types, including the following:</source>
          <target state="translated">所述 &lt;code&gt;falcon&lt;/code&gt; 模块提供了许多常见的介质类型，包括以下常量：</target>
        </trans-unit>
        <trans-unit id="7cc9aab31febdd84ad6937c4d9698f52c521ed55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jsonschema`&lt;/code&gt; package must be installed separately in order to use this decorator, as Falcon does not install it by default.</source>
          <target state="translated">该 &lt;code&gt;jsonschema`&lt;/code&gt; 包必须单独为了使用这个装饰，如猎鹰默认不安装它安装。</target>
        </trans-unit>
        <trans-unit id="946f0a021fd82502926612850a262066eef1f472" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt; settings, as shown above, are critical to securing your deployment. These values control the OS-level user and group the server will use to execute the application. The specified OS user and group should not have write permissions to the source directory. In this case, we use the &lt;code&gt;myproject-runner&lt;/code&gt; user that was created earlier for this purpose.</source>
          <target state="translated">该 &lt;code&gt;uid&lt;/code&gt; 和 &lt;code&gt;gid&lt;/code&gt; 设置，如上图所示，是确保您的部署至关重要。这些值控制操作系统级别的用户和服务器将用于执行应用程序的组。指定的OS用户和组不应具有对源目录的写许可权。在这种情况下，我们使用为此创建的 &lt;code&gt;myproject-runner&lt;/code&gt; 用户。</target>
        </trans-unit>
        <trans-unit id="7465499e051900ef082b21f12b081150aac7d688" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;falcon.routing&lt;/em&gt; module contains the following utilities that may be used by custom routing engines.</source>
          <target state="translated">该&lt;em&gt;falcon.routing&lt;/em&gt;模块包含以下实用程序可以通过自定义路由引擎使用。</target>
        </trans-unit>
        <trans-unit id="dcaebffd33aa1a0bdb9a7d943508e46ac0926bb2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;process_resource&lt;/em&gt; method is only called when the request matches a route to a resource. To take action when a route is not found, a &lt;a href=&quot;api#falcon.API.add_sink&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; may be used instead.</source>
          <target state="translated">该&lt;em&gt;process_resource&lt;/em&gt;当请求资源的路径匹配方法只调用。采取行动时未找到路径，一个&lt;a href=&quot;api#falcon.API.add_sink&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt;也可以使用。</target>
        </trans-unit>
        <trans-unit id="3f6e6f00641c89010271ad2ba362bf0c155117f0" translate="yes" xml:space="preserve">
          <source>The API Class</source>
          <target state="translated">API类</target>
        </trans-unit>
        <trans-unit id="9ad83fcf5ee047fa29ae27e82f64261064513f8a" translate="yes" xml:space="preserve">
          <source>The Accept-Ranges header field indicates to the client which range units are supported (e.g. &amp;ldquo;bytes&amp;rdquo;) for the target resource.</source>
          <target state="translated">接受范围标头字段向客户端指示目标资源支持哪些范围单位（例如&amp;ldquo;字节&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="e21d7c49012994e774a11f0973067fce75e4bcd3" translate="yes" xml:space="preserve">
          <source>The Clang compiler treats unrecognized command-line options as errors, for example:</source>
          <target state="translated">例如,Clang编译器将未识别的命令行选项作为错误处理。</target>
        </trans-unit>
        <trans-unit id="f20146bf024b68a12263443a68324850d8be45c3" translate="yes" xml:space="preserve">
          <source>The Clang compiler treats unrecognized command-line options as errors; this can cause problems under Python 2.6, for example:</source>
          <target state="translated">Clang 编译器将未识别的命令行选项作为错误处理;例如,这可能会导致 Python 2.6 下的问题。</target>
        </trans-unit>
        <trans-unit id="15b9f7fad1411e66089824de7709062d0f9c944e" translate="yes" xml:space="preserve">
          <source>The Content-Type header, if present, will be overridden. If you wish to return custom error messages, you can create your own HTTP error class, and install an error handler to convert it into an appropriate HTTP response for the client</source>
          <target state="translated">如果存在的话,Content-Type头将被覆盖。如果你想返回自定义的错误信息,你可以创建你自己的HTTP错误类,并安装一个错误处理程序,将其转换为适合客户端的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="e31b30578c2f0a453d7a74a21c09b470c4c32a0b" translate="yes" xml:space="preserve">
          <source>The ETag header will be wrapped with double quotes &lt;code&gt;&quot;value&quot;&lt;/code&gt; in case the user didn&amp;rsquo;t pass it.</source>
          <target state="translated">如果用户未通过，则ETag标头将用双引号 &lt;code&gt;&quot;value&quot;&lt;/code&gt; 包装。</target>
        </trans-unit>
        <trans-unit id="d9ddac2b2a870aaf2a0e0d40984dc0e7f390490e" translate="yes" xml:space="preserve">
          <source>The Falcon Web Framework</source>
          <target state="translated">Falcon网络框架</target>
        </trans-unit>
        <trans-unit id="4ccedec1abcc82034a9e90fd97f39e6f7c6bfe3c" translate="yes" xml:space="preserve">
          <source>The Falcon framework contains extensive inline documentation that you can query using the above technique.</source>
          <target state="translated">Falcon框架包含了大量的内联文档,您可以使用上述技术进行查询。</target>
        </trans-unit>
        <trans-unit id="8625fdf6f18c9102cd78ef70c80d715c11b0cf5e" translate="yes" xml:space="preserve">
          <source>The Falcon framework is, itself, thread-safe. For example, new &lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects are created for each incoming HTTP request. However, a single instance of each resource class attached to a route is shared among all requests. Middleware objects and other types of hooks, such as custom error handlers, are likewise shared. Therefore, as long as you implement these classes and callables in a thread-safe manner, and ensure that any third-party libraries used by your app are also thread-safe, your WSGI app as a whole will be thread-safe.</source>
          <target state="translated">Falcon框架本身是线程安全的。例如，为每个传入的HTTP请求创建新的&lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;对象。但是，附加到路由的每个资源类的单个实例在所有请求之间共享。中间件对象和其他类型的钩子（例如自定义错误处理程序）也被共享。因此，只要您以线程安全的方式实现这些类和可调用对象，并确保您的应用程序使用的任何第三方库也是线程安全的，那么整个WSGI应用程序将是线程安全的。</target>
        </trans-unit>
        <trans-unit id="355d726619940776341f0ae2510b4d6b3a789917" translate="yes" xml:space="preserve">
          <source>The Python ecosystem offers a number of great packages that you can use from within your responders, hooks, and middleware components. As a starting point, the community maintains a list of &lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon add-ons and complementary packages&lt;/a&gt;.</source>
          <target state="translated">Python生态系统提供了许多出色的程序包，您可以在响应器，挂钩和中间件组件中使用它们。首先，社区维护&lt;a href=&quot;https://github.com/falconry/falcon/wiki&quot;&gt;Falcon附加组件和补充软件包的列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebc3db4d907e501e1bae6cceef917c9995b0f458" translate="yes" xml:space="preserve">
          <source>The Secure Attribute</source>
          <target state="translated">安全属性</target>
        </trans-unit>
        <trans-unit id="dabcab27818bb4f19fcfa102aed7f9bd914cd3a5" translate="yes" xml:space="preserve">
          <source>The URL path to request (default: &amp;lsquo;/&amp;rsquo;).</source>
          <target state="translated">请求的URL路径（默认值：&amp;ldquo; /&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="aa156448deab481ed31349461dd8457e548f3a30" translate="yes" xml:space="preserve">
          <source>The URL path to request.</source>
          <target state="translated">请求的URL路径。</target>
        </trans-unit>
        <trans-unit id="11dfb2e2176014b2b369487df050512b8d71196e" translate="yes" xml:space="preserve">
          <source>The URL structure of the application is centralized. This makes it easier to reason about and maintain the API over time.</source>
          <target state="translated">应用程序的URL结构是集中的。这使得API的合理性和长期维护变得更加容易。</target>
        </trans-unit>
        <trans-unit id="21dd72604e094689c8df9381f73c0748ceb807d9" translate="yes" xml:space="preserve">
          <source>The above process of starting, testing, stopping, and cleaning up after each test run can (and really should be) automated. Depending on your needs, you can develop your own automation fixtures, or use a library such as &lt;a href=&quot;https://github.com/butla/mountepy&quot;&gt;mountepy&lt;/a&gt;.</source>
          <target state="translated">每次测试运行之后，上述启动，测试，停止和清理过程都可以（并且确实应该）自动化。根据您的需求，您可以开发自己的自动化装置，也可以使用诸如&lt;a href=&quot;https://github.com/butla/mountepy&quot;&gt;mountepy之类&lt;/a&gt;的库。</target>
        </trans-unit>
        <trans-unit id="aae7a70db69d16eef24d08f8eaea3dcbb7600a7c" translate="yes" xml:space="preserve">
          <source>The character encoding for fields, before percent-encoding non-ASCII bytes, is assumed to be UTF-8. The special &lt;code&gt;_charset_&lt;/code&gt; field is ignored if present.</source>
          <target state="translated">在对非ASCII字节进行百分比编码之前，字段的字符编码假定为UTF-8。特殊的 &lt;code&gt;_charset_&lt;/code&gt; 字段（如果存在）将被忽略。</target>
        </trans-unit>
        <trans-unit id="61ed64cdabeb7a6c0190f4ce9a46145b79a5e8eb" translate="yes" xml:space="preserve">
          <source>The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message body in the request message.</source>
          <target state="translated">客户端可以重复请求,如果它在请求消息中添加了一个有效的Content-Length头字段,其中包含消息体的长度。</target>
        </trans-unit>
        <trans-unit id="096820ebedfe55a0f653a3b13390687140f22682" translate="yes" xml:space="preserve">
          <source>The client&amp;rsquo;s preferred media type, based on the Accept header. Returns &lt;code&gt;None&lt;/code&gt; if the client does not accept any of the given types.</source>
          <target state="translated">客户端的首选媒体类型，基于Accept标头。如果客户端不接受任何给定类型，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7857ea1b772f5e95b383009c881d90ebe7489f73" translate="yes" xml:space="preserve">
          <source>The code portion of the HTTP status string</source>
          <target state="translated">HTTP状态字符串的代码部分</target>
        </trans-unit>
        <trans-unit id="bbf6b2ca4e0eecc451258847cd2cfd02990b1c21" translate="yes" xml:space="preserve">
          <source>The command to run the application is now:</source>
          <target state="translated">现在运行应用程序的命令是。</target>
        </trans-unit>
        <trans-unit id="6a9a7803a8553552d14c272255433e903a51a64c" translate="yes" xml:space="preserve">
          <source>The configuration presented here enables both threads and processes. However, you will have to experiment and do some research to understand your application&amp;rsquo;s unique requirements, and then tailor your uWSGI configuration accordingly. Generally speaking, uWSGI is flexible enough to support most types of applications.</source>
          <target state="translated">此处介绍的配置同时启用线程和进程。但是，您将必须进行实验并做一些研究，以了解您的应用程序的独特要求，然后相应地调整uWSGI配置。一般来说，uWSGI具有足够的灵活性以支持大多数类型的应用程序。</target>
        </trans-unit>
        <trans-unit id="0f591cba7bf7edfa391b90b3d159bfa0379d4121" translate="yes" xml:space="preserve">
          <source>The cookie&amp;rsquo;s name.</source>
          <target state="translated">Cookie的名称。</target>
        </trans-unit>
        <trans-unit id="cc9ddf1419e66a8abe968368bef4cc3083ff911b" translate="yes" xml:space="preserve">
          <source>The current UTC time as an IMF-fixdate, e.g., &amp;lsquo;Tue, 15 Nov 1994 12:45:26 GMT&amp;rsquo;.</source>
          <target state="translated">当前的UTC时间作为IMF固定日期，例如'Tue，15 Nov 1994 12:45:26 GMT'。</target>
        </trans-unit>
        <trans-unit id="934b403a2bb69af42e0e2012d24b8ba14ba1e712" translate="yes" xml:space="preserve">
          <source>The default Internet media type (RFC 2046) to use when deserializing a response. This value is normally set to the media type provided when a &lt;a href=&quot;#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; is initialized; however, if created independently, this will default to the &lt;code&gt;DEFAULT_MEDIA_TYPE&lt;/code&gt; specified by Falcon.</source>
          <target state="translated">反序列化响应时使用的默认Internet媒体类型（RFC 2046）。此值通常设置为&lt;a href=&quot;#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;初始化时提供的媒体类型；默认值为0。但是，如果独立创建，则默认为Falcon指定的 &lt;code&gt;DEFAULT_MEDIA_TYPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6018dc87f65236389972dedf88f10138906dc0f4" translate="yes" xml:space="preserve">
          <source>The default JSON handler for &lt;code&gt;resp.media&lt;/code&gt; only supports the objects and types listed in the table documented under &lt;a href=&quot;https://docs.python.org/3.6/library/json.html#json.JSONEncoder&quot;&gt;json.JSONEncoder&lt;/a&gt;. To handle additional types, you can either serialize them beforehand, or create a custom JSON media handler that sets the &lt;code&gt;default&lt;/code&gt; param for &lt;code&gt;json.dumps()&lt;/code&gt;. When deserializing an incoming request body, you may also wish to implement &lt;code&gt;object_hook&lt;/code&gt; for &lt;code&gt;json.loads()&lt;/code&gt;. Note, however, that setting the &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;object_hook&lt;/code&gt; params can negatively impact the performance of (de)serialization.</source>
          <target state="translated">用于 &lt;code&gt;resp.media&lt;/code&gt; 的默认JSON处理程序仅支持json.JSONEncoder下&lt;a href=&quot;https://docs.python.org/3.6/library/json.html#json.JSONEncoder&quot;&gt;记录&lt;/a&gt;的表中列出的对象和类型。要处理其他类型，您可以预先序列化它们，也可以创建一个自定义JSON媒体处理程序，该处理程序为 &lt;code&gt;json.dumps()&lt;/code&gt; 设置 &lt;code&gt;default&lt;/code&gt; 参数。反序列化传入请求正文时，您可能还希望为 &lt;code&gt;json.loads()&lt;/code&gt; 实现 &lt;code&gt;object_hook&lt;/code&gt; 。但是请注意，设置 &lt;code&gt;default&lt;/code&gt; 参数或 &lt;code&gt;object_hook&lt;/code&gt; 参数可能会对（反）序列化的性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="73a879b4e8a8b20ad949b741cc3b9299cc8a50e5" translate="yes" xml:space="preserve">
          <source>The default media-type to use when deserializing a response. This value is normally set to the media type provided when a &lt;a href=&quot;#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; is initialized; however, if created independently, this will default to the &lt;code&gt;DEFAULT_MEDIA_TYPE&lt;/code&gt; specified by Falcon.</source>
          <target state="translated">反序列化响应时使用的默认媒体类型。此值通常设置为&lt;a href=&quot;#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;初始化时提供的媒体类型；默认值为0。但是，如果独立创建，则默认为Falcon指定的 &lt;code&gt;DEFAULT_MEDIA_TYPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40a0362ff917cc92671f5c5cfe369680f256759e" translate="yes" xml:space="preserve">
          <source>The default request/response context type has been changed from dict to a bare class in Falcon 2.0. Instead of setting dictionary items, you can now simply set attributes on the object:</source>
          <target state="translated">在Falcon 2.0中,默认的请求/响应上下文类型已从dict改为裸类。您现在可以简单地对对象设置属性,而不是设置字典项。</target>
        </trans-unit>
        <trans-unit id="241491ef73f5024a4c4a1450dc7000b09bcf6319" translate="yes" xml:space="preserve">
          <source>The default serializer will not render any response body for &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; instances where the &lt;code&gt;has_representation&lt;/code&gt; property evaluates to &lt;code&gt;False&lt;/code&gt; (such as in the case of types that subclass &lt;a href=&quot;errors#falcon.http_error.NoRepresentation&quot;&gt;&lt;code&gt;falcon.http_error.NoRepresentation&lt;/code&gt;&lt;/a&gt;). However a custom serializer will be called regardless of the property value, and it may choose to override the representation logic.</source>
          <target state="translated">对于 &lt;code&gt;has_representation&lt;/code&gt; 属性评估为 &lt;code&gt;False&lt;/code&gt; 的&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;实例，默认的序列化程序将不呈现任何响应主体（例如，在子类型为&lt;a href=&quot;errors#falcon.http_error.NoRepresentation&quot;&gt; &lt;code&gt;falcon.http_error.NoRepresentation&lt;/code&gt; &lt;/a&gt;的情况下）。但是，无论属性值如何，都会调用自定义序列化程序，并且它可以选择覆盖表示形式逻辑。</target>
        </trans-unit>
        <trans-unit id="91d1c6f6a3a3c25fec420afd6a2b179fcc59b4d7" translate="yes" xml:space="preserve">
          <source>The default value for this argument is normally &lt;code&gt;True&lt;/code&gt;, but can be modified by setting &lt;a href=&quot;api#falcon.ResponseOptions.secure_cookies_by_default&quot;&gt;&lt;code&gt;secure_cookies_by_default&lt;/code&gt;&lt;/a&gt; via &lt;a href=&quot;api#falcon.API.resp_options&quot;&gt;&lt;code&gt;API.resp_options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此参数的默认值通常为 &lt;code&gt;True&lt;/code&gt; ，但可以通过&lt;a href=&quot;api#falcon.API.resp_options&quot;&gt; &lt;code&gt;API.resp_options&lt;/code&gt; &lt;/a&gt;设置&lt;a href=&quot;api#falcon.ResponseOptions.secure_cookies_by_default&quot;&gt; &lt;code&gt;secure_cookies_by_default&lt;/code&gt; &lt;/a&gt;进行修改。</target>
        </trans-unit>
        <trans-unit id="13174a4ef171c867fcc3148332d913e50644d731" translate="yes" xml:space="preserve">
          <source>The domain to which this cookie is restricted, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">此cookie限制到的域，如果未指定，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e50b7e792989d5dabd8f345c0640d3db3943e75" translate="yes" xml:space="preserve">
          <source>The exact commands for creating a virtual environment might differ based on the Python version you are using and your operating system. At the end of the day the application needs a virtualenv in /home/myproject/venv with the project dependencies installed. Use the &lt;code&gt;pip&lt;/code&gt; binary within the virtual environment by &lt;code&gt;source venv/bin/activate&lt;/code&gt; or using the full path.</source>
          <target state="translated">根据使用的Python版本和操作系统，用于创建虚拟环境的确切命令可能会有所不同。最终，应用程序需要在/ home / myproject / venv中安装一个虚拟环境，并安装了项目依赖项。通过 &lt;code&gt;source venv/bin/activate&lt;/code&gt; 或使用完整路径在虚拟环境中使用 &lt;code&gt;pip&lt;/code&gt; 二进制文件。</target>
        </trans-unit>
        <trans-unit id="9741400c80f98a463b42fa5553e22068183d5b40" translate="yes" xml:space="preserve">
          <source>The expected value is an integral number of seconds to use as the value for the header. The HTTP-date syntax is not supported.</source>
          <target state="translated">预期值是一个整数的秒数,用来作为头的值。不支持HTTP-date语法。</target>
        </trans-unit>
        <trans-unit id="b7b152017ca59b8d5565927fa54ae8827036534f" translate="yes" xml:space="preserve">
          <source>The file hierarchy should now look like this:</source>
          <target state="translated">现在的文件层次结构应该是这样的。</target>
        </trans-unit>
        <trans-unit id="cb04c8c501207a44e1c5aa40b13287a50cadd90c" translate="yes" xml:space="preserve">
          <source>The first thing we&amp;rsquo;ll do is &lt;a href=&quot;install#install&quot;&gt;install&lt;/a&gt; Falcon inside a fresh &lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;virtualenv&lt;/a&gt;. To that end, let&amp;rsquo;s create a new project folder called &amp;ldquo;look&amp;rdquo;, and set up a virtual environment within it that we can use for the tutorial:</source>
          <target state="translated">我们要做的第一件事是在新的&lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;virtualenv&lt;/a&gt;内部&lt;a href=&quot;install#install&quot;&gt;安装&lt;/a&gt; Falcon 。为此，让我们创建一个名为&amp;ldquo; look&amp;rdquo;的新项目文件夹，并在其中设置一个可用于本教程的虚拟环境：</target>
        </trans-unit>
        <trans-unit id="1b6911f562a13bbc195dd8c8084800b639b52434" translate="yes" xml:space="preserve">
          <source>The following boolean strings are supported:</source>
          <target state="translated">支持以下布尔值字符串。</target>
        </trans-unit>
        <trans-unit id="f4f17a9a749571d7f0424d740c1b1649c07f2bf7" translate="yes" xml:space="preserve">
          <source>The following commands tell pip to install Cython, and then to invoke Falcon&amp;rsquo;s &lt;code&gt;setup.py&lt;/code&gt;, which will in turn detect the presence of Cython and then compile (AKA cythonize) the Falcon framework with the system&amp;rsquo;s default C compiler.</source>
          <target state="translated">以下命令告诉pip安装Cython，然后调用Falcon的 &lt;code&gt;setup.py&lt;/code&gt; ，后者将依次检测Cython的存在，然后使用系统的默认C编译器编译（也称为cythonize）Falcon框架。</target>
        </trans-unit>
        <trans-unit id="f043d59ee870371ba4af577fad20c908a4875876" translate="yes" xml:space="preserve">
          <source>The following request headers are checked, in order of preference, to determine the addresses:</source>
          <target state="translated">按照偏好顺序,检查以下请求头以确定地址。</target>
        </trans-unit>
        <trans-unit id="3e2ffd59ed82fcb42354aa0f4c57eeb72fb69e98" translate="yes" xml:space="preserve">
          <source>The following request headers are checked, in order of preference, to determine the forwarded scheme:</source>
          <target state="translated">按照偏好顺序,检查以下请求头,以确定转发方案。</target>
        </trans-unit>
        <trans-unit id="56febda00897b4c7c8a76d4da3cedcb77763a5e3" translate="yes" xml:space="preserve">
          <source>The format problem might be due to the request&amp;rsquo;s indicated Content- Type or Content-Encoding, or as a result of inspecting the data directly.</source>
          <target state="translated">格式问题可能是由于请求指示的Content-Type或Content-Encoding，或者是直接检查数据的结果。</target>
        </trans-unit>
        <trans-unit id="73f50ec04d0d2258c46d95e64bb37e66bce2b5e8" translate="yes" xml:space="preserve">
          <source>The fully-qualified URI for the request.</source>
          <target state="translated">请求的完全限定URI。</target>
        </trans-unit>
        <trans-unit id="2b172d7ca1742380833db7420354bc403e29916a" translate="yes" xml:space="preserve">
          <source>The header&amp;rsquo;s value if set, otherwise &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">标头的值（如果已设置），否则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cab95eeeaea077b80fccbfb3cba746626f1d9cc" translate="yes" xml:space="preserve">
          <source>The idea here is to only accept GIF, JPEG, and PNG images. You can add others to the list if you like.</source>
          <target state="translated">这里的想法是只接受GIF、JPEG和PNG图像。如果你喜欢,你可以在列表中添加其他图片。</target>
        </trans-unit>
        <trans-unit id="a59ab72bc748edec524b503a34e77a5d201e6cb0" translate="yes" xml:space="preserve">
          <source>The identifier can then be used to employ the converter within a URI template:</source>
          <target state="translated">然后,该标识符可用于在URI模板中使用转换器。</target>
        </trans-unit>
        <trans-unit id="69966743f91a9eca444b74a1d7fd8e259495034f" translate="yes" xml:space="preserve">
          <source>The image resource above defines a single method, &lt;code&gt;on_get()&lt;/code&gt;. For any HTTP method you want your resource to support, simply add an &lt;code&gt;on_*()&lt;/code&gt; method to the class, where &lt;code&gt;*&lt;/code&gt; is any one of the standard HTTP methods, lowercased (e.g., &lt;code&gt;on_get()&lt;/code&gt;, &lt;code&gt;on_put()&lt;/code&gt;, &lt;code&gt;on_head()&lt;/code&gt;, etc.).</source>
          <target state="translated">上面的图像资源定义了一个方法 &lt;code&gt;on_get()&lt;/code&gt; 。对于您希望资源支持的任何HTTP方法，只需将 &lt;code&gt;on_*()&lt;/code&gt; 方法添加到类中，其中 &lt;code&gt;*&lt;/code&gt; 是标准HTTP方法中的任何一种，均使用小写字母（例如， &lt;code&gt;on_get()&lt;/code&gt; ， &lt;code&gt;on_put()&lt;/code&gt; ， &lt;code&gt;on_head()&lt;/code&gt; ，等等。）。</target>
        </trans-unit>
        <trans-unit id="2ead8a12ea8ea21c86b45d9d219921980be75e95" translate="yes" xml:space="preserve">
          <source>The initial portion of the request URI&amp;rsquo;s path that corresponds to the application object, so that the application knows its virtual &amp;ldquo;location&amp;rdquo;. This may be an empty string, if the application corresponds to the &amp;ldquo;root&amp;rdquo; of the server.</source>
          <target state="translated">与应用程序对象相对应的请求URI路径的初始部分，以便应用程序知道其虚拟&amp;ldquo;位置&amp;rdquo;。如果应用程序对应于服务器的&amp;ldquo;根&amp;rdquo;，则它可以是一个空字符串。</target>
        </trans-unit>
        <trans-unit id="03340e84a271fd6bc0504149d7b730684e9cb4d1" translate="yes" xml:space="preserve">
          <source>The last Request object passed into any one of the responder methods.</source>
          <target state="translated">最后传入任何一个responder方法的Request对象。</target>
        </trans-unit>
        <trans-unit id="d285b9581b2a3bd63a55631784c5eb732fc84ac4" translate="yes" xml:space="preserve">
          <source>The last Response object passed into any one of the responder methods.</source>
          <target state="translated">最后传递到任何一个responder方法中的Response对象。</target>
        </trans-unit>
        <trans-unit id="3812cb543bb863d75507c79814503c853d2cddd4" translate="yes" xml:space="preserve">
          <source>The last dictionary of kwargs, beyond &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;resp&lt;/code&gt;, that were passed into any one of the responder methods.</source>
          <target state="translated">除 &lt;code&gt;req&lt;/code&gt; 和 &lt;code&gt;resp&lt;/code&gt; 外的最后一个kwargs字典已传递到任何响应者方法中。</target>
        </trans-unit>
        <trans-unit id="73040cf265dde4fd514f452dd721e59d95027a4a" translate="yes" xml:space="preserve">
          <source>The last line in the &lt;code&gt;on_post()&lt;/code&gt; responder sets the Location header for the newly created resource. (We will create a route for that path in just a minute.) The &lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; classes contain convenient attributes for reading and setting common headers, but you can always access any header by name with the &lt;code&gt;req.get_header()&lt;/code&gt; and &lt;code&gt;resp.set_header()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;on_post()&lt;/code&gt; 响应器中的最后一行为新创建的资源设置Location标头。（我们将在一分钟内为该路径创建一条路由。）&lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;类包含用于读取和设置公共标头的便捷属性，但是您始终可以使用 &lt;code&gt;req.get_header()&lt;/code&gt; 和 &lt;code&gt;resp.set_header()&lt;/code&gt; 按名称访问任何标头。（）方法。</target>
        </trans-unit>
        <trans-unit id="0c9195108770b6c549887275ea2f9e30ae5f97b0" translate="yes" xml:space="preserve">
          <source>The last line in the &lt;code&gt;on_post()&lt;/code&gt; responder sets the Location header for the newly created resource. (We will create a route for that path in just a minute.) The &lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; classes contain convent attributes for reading and setting common headers, but you can always access any header by name with the &lt;code&gt;req.get_header()&lt;/code&gt; and &lt;code&gt;resp.set_header()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;on_post()&lt;/code&gt; 响应器中的最后一行为新创建的资源设置Location标头。（我们将在一分钟内为该路径创建一条路由。）&lt;a href=&quot;../api/request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;类包含用于读取和设置通用标头的修道院属性，但是您始终可以使用 &lt;code&gt;req.get_header()&lt;/code&gt; 和 &lt;code&gt;resp.set_header()&lt;/code&gt; 通过名称访问任何标头。（）方法。</target>
        </trans-unit>
        <trans-unit id="bb58ace966de22d92d58b96e1abfd9d9215310db" translate="yes" xml:space="preserve">
          <source>The lifetime of the cookie in seconds, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">Cookie的生存时间（以秒为单位）；如果未指定，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27be89869f8c494f067968bddf4024b0de97befd" translate="yes" xml:space="preserve">
          <source>The mapping of request query parameter names to their values. Where the parameter appears multiple times in the query string, the value mapped to that parameter key will be a list of all the values in the order seen.</source>
          <target state="translated">请求查询参数名与其值的映射。当参数在查询字符串中多次出现时,映射到该参数键的值将是一个按所见顺序排列的所有值的列表。</target>
        </trans-unit>
        <trans-unit id="a49b9ebb554e404f8649f14848772fa46d70388a" translate="yes" xml:space="preserve">
          <source>The method received in the request-line is known by the origin server but not supported by the target resource.</source>
          <target state="translated">请求行中接收到的方法是源服务器已知的,但目标资源不支持。</target>
        </trans-unit>
        <trans-unit id="9b8fda2627f67ba1f06ba95f7c064e644c85b8a0" translate="yes" xml:space="preserve">
          <source>The methods all call &lt;code&gt;self.simulate_request()&lt;/code&gt; for convenient overriding of request preparation by child classes.</source>
          <target state="translated">这些方法都调用 &lt;code&gt;self.simulate_request()&lt;/code&gt; ,以方便子类覆盖请求准备。</target>
        </trans-unit>
        <trans-unit id="80f712cc078ed640970a18e9fc668cddfdc82cf9" translate="yes" xml:space="preserve">
          <source>The new URI in the Location header field is not considered equivalent to the effective request URI.</source>
          <target state="translated">位置头中的新URI不被认为等同于有效请求URI。</target>
        </trans-unit>
        <trans-unit id="032b696dccfa3be9e0276180a1b631cfe3b6a567" translate="yes" xml:space="preserve">
          <source>The new default context type emulates a dict-like mapping interface in a way that context attributes are linked to dict items, i.e. setting an object attribute also sets the corresponding dict item, and vice versa. As a result, existing code will largely work unmodified with Falcon 2.0. Nevertheless, it is recommended to migrate to the new interface as outlined above since the dict-like mapping interface may be removed from the context type in a future release.</source>
          <target state="translated">新的默认上下文类型模拟了类似dict的映射接口,上下文属性与dict项相连,即设置一个对象属性也会设置相应的dict项,反之亦然。因此,现有的代码在Falcon 2.0中基本上可以不加修改地工作。不过,由于类似dict的映射接口可能会在未来的版本中从上下文类型中删除,因此建议迁移到上述新接口。</target>
        </trans-unit>
        <trans-unit id="37e294887b3bed9e4a046dec5682df3777a9b4ea" translate="yes" xml:space="preserve">
          <source>The origin server MUST generate an Allow header field in a 405 response containing a list of the target resource&amp;rsquo;s currently supported methods.</source>
          <target state="translated">原始服务器务必在405响应中生成允许标头字段，其中包含目标资源当前支持的方法的列表。</target>
        </trans-unit>
        <trans-unit id="0d6fb34b8ea78b6fbeca2b2e317e9ef726d69fed" translate="yes" xml:space="preserve">
          <source>The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.</source>
          <target state="translated">源服务器没有找到目标资源的当前表示,或者不愿意透露目标资源存在。</target>
        </trans-unit>
        <trans-unit id="b34c761e769bf51db8fe8807c38ff55b38e20605" translate="yes" xml:space="preserve">
          <source>The origin server is refusing to service the request because the payload is in a format not supported by this method on the target resource.</source>
          <target state="translated">源服务器拒绝服务该请求,因为目标资源上的有效载荷是该方法不支持的格式。</target>
        </trans-unit>
        <trans-unit id="ce2dd203ced147a1a44a450a141a5b7bb8ac48b8" translate="yes" xml:space="preserve">
          <source>The path and query string portion of the request URI, omitting the scheme and host.</source>
          <target state="translated">请求URI的路径和查询字符串部分,省略scheme和host。</target>
        </trans-unit>
        <trans-unit id="d277bc007a935f2f58dfd6ed558fbf32fd7f9a13" translate="yes" xml:space="preserve">
          <source>The path may contain a query string. However, neither &lt;code&gt;query_string&lt;/code&gt; nor &lt;code&gt;params&lt;/code&gt; may be specified in this case.</source>
          <target state="translated">该路径可能包含查询字符串。但是，在这种情况下，既不能指定 &lt;code&gt;query_string&lt;/code&gt; 也不可以指定 &lt;code&gt;params&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a77e8ad519a79ebb8e35ae3f6641f422e91f2f95" translate="yes" xml:space="preserve">
          <source>The path prefix to match for this route. If the path in the requested URI starts with this string, the remainder of the path will be appended to the source directory to determine the file to serve. This is done in a secure manner to prevent an attacker from requesting a file outside the specified directory.</source>
          <target state="translated">本路由要匹配的路径前缀。如果请求的URI中的路径以这个字符串开头,则路径的其余部分将附加到源目录中,以确定要服务的文件。这是为了防止攻击者请求指定目录之外的文件而采取的安全方式。</target>
        </trans-unit>
        <trans-unit id="f60eb87b839ea734c464a395cefb24b8735ffe12" translate="yes" xml:space="preserve">
          <source>The path prefix to which this cookie is restricted, or &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">此cookie被限制的路径前缀，如果未指定，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9004ca38fea8c5e7e7fcdde6fbdbe4c405aae722" translate="yes" xml:space="preserve">
          <source>The prefix of the original URI for proxied requests. Uses &lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt;&lt;code&gt;forwarded_scheme&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#falcon.Request.forwarded_host&quot;&gt;&lt;code&gt;forwarded_host&lt;/code&gt;&lt;/a&gt; in order to reconstruct the original URI.</source>
          <target state="translated">代理请求的原始URI的前缀。使用&lt;a href=&quot;#falcon.Request.forwarded_scheme&quot;&gt; &lt;code&gt;forwarded_scheme&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#falcon.Request.forwarded_host&quot;&gt; &lt;code&gt;forwarded_host&lt;/code&gt; &lt;/a&gt;来重建原始URI。</target>
        </trans-unit>
        <trans-unit id="07621fb6c1cb4dc38a17eb7ba5be337cc8501511" translate="yes" xml:space="preserve">
          <source>The prefix of the request URI, including scheme, host, and WSGI app (if any).</source>
          <target state="translated">请求URI的前缀,包括方案、主机和WSGI应用(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="0078e136c81b27abb7bd345b478b834e8c6ff0d1" translate="yes" xml:space="preserve">
          <source>The request could not be completed due to a conflict with the current state of the target resource. This code is used in situations where the user might be able to resolve the conflict and resubmit the request.</source>
          <target state="translated">由于与目标资源的当前状态冲突,该请求无法完成。该代码用于用户可能解决冲突并重新提交请求的情况。</target>
        </trans-unit>
        <trans-unit id="00867c1953ecaf6baf1550c3cc4ed9f59332f743" translate="yes" xml:space="preserve">
          <source>The request has not been applied because it lacks valid authentication credentials for the target resource.</source>
          <target state="translated">该请求没有被应用,因为它缺乏目标资源的有效认证凭证。</target>
        </trans-unit>
        <trans-unit id="a1b78db4ab9118cc4d9395bc6624fa9077a703af" translate="yes" xml:space="preserve">
          <source>The response representation SHOULD contain a link to a resource that allows the user to submit credentials.</source>
          <target state="translated">响应表示应包含一个链接到允许用户提交凭证的资源。</target>
        </trans-unit>
        <trans-unit id="8446631eb3a62fa0aca910b0b54fcb954f879889" translate="yes" xml:space="preserve">
          <source>The response representations SHOULD include details explaining the condition, and MAY include a Retry-After header indicating how long to wait before making a new request.</source>
          <target state="translated">响应表示应该包括解释条件的细节,并且可以包括一个Retry-After头,表示在提出新请求之前需要等待多长时间。</target>
        </trans-unit>
        <trans-unit id="c0731854ce07d2f5e30293ebd1a7e6d8309971c2" translate="yes" xml:space="preserve">
          <source>The result of the request</source>
          <target state="translated">请求的结果</target>
        </trans-unit>
        <trans-unit id="a31781f607b998fb61249cad17bc93825af2f7ce" translate="yes" xml:space="preserve">
          <source>The resulting serialized bytes from the input object.</source>
          <target state="translated">从输入对象中产生的序列化字节。</target>
        </trans-unit>
        <trans-unit id="31ef0eb28d0cf12aeb9ff6e8c7dc07f950ca8a24" translate="yes" xml:space="preserve">
          <source>The router treats URI paths as a tree of URI segments and searches by checking the URI one segment at a time. Instead of interpreting the route tree for each look-up, it generates inlined, bespoke Python code to perform the search, then compiles that code. This makes the route processing quite fast.</source>
          <target state="translated">路由器将URI路径视为URI段的树,并通过每次检查URI段进行搜索。它不是为每次查找解释路由树,而是生成内联的、定制的Python代码来执行搜索,然后编译该代码。这使得路由处理的速度相当快。</target>
        </trans-unit>
        <trans-unit id="af666108381c242146bcdcd35e7d167de334e5fc" translate="yes" xml:space="preserve">
          <source>The server MAY close the connection to prevent the client from continuing the request.</source>
          <target state="translated">服务器可以关闭连接以防止客户端继续请求。</target>
        </trans-unit>
        <trans-unit id="9ac1710f3b36c5dbb6a09e2a65fdda2f2afb8e4e" translate="yes" xml:space="preserve">
          <source>The server MAY send a Retry-After header field to suggest an appropriate amount of time for the client to wait before retrying the request.</source>
          <target state="translated">服务器可以发送一个Retry-After头字段,以建议客户端在重试请求前等待的适当时间。</target>
        </trans-unit>
        <trans-unit id="b1e7c1beafd0016689e0db441e53eea4df8c11cd" translate="yes" xml:space="preserve">
          <source>The server SHOULD generate a payload containing a list of available representation characteristics and corresponding resource identifiers from which the user or user agent can choose the one most appropriate. A user agent MAY automatically select the most appropriate choice from that list. However, this specification does not define any standard for such automatic selection, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.4.1&quot;&gt;RFC 7231, Section 6.4.1&lt;/a&gt;</source>
          <target state="translated">服务器应该产生一个有效载荷，其中包含一列可用的表示特征和相应的资源标识符，用户或用户代理可以从中选择最合适的一个。用户代理可以从该列表中自动选择最合适的选择。但是，如&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.4.1&quot;&gt;RFC 7231第6.4.1节&lt;/a&gt;所述，该规范未定义任何用于此类自动选择的标准。</target>
        </trans-unit>
        <trans-unit id="93ee680d6eb3408c02f31d764090d264b0e17d54" translate="yes" xml:space="preserve">
          <source>The server SHOULD generate a payload that includes enough information for a user to recognize the source of the conflict.</source>
          <target state="translated">服务器应该生成一个包括足够信息的有效载荷,以便用户识别冲突的来源。</target>
        </trans-unit>
        <trans-unit id="7aaf9f23ec983dd85ab1a278a64450cd85aa44cd" translate="yes" xml:space="preserve">
          <source>The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).</source>
          <target state="translated">由于被认为是客户端错误的原因(例如,错误的请求语法、无效的请求信息框架或欺骗性的请求路由),服务器不能或不会处理该请求。</target>
        </trans-unit>
        <trans-unit id="2738f3ee171ecbfe4de6890004f5afd82b3a2139" translate="yes" xml:space="preserve">
          <source>The server encountered an unexpected condition that prevented it from fulfilling the request.</source>
          <target state="translated">服务器遇到了意外情况,无法完成请求。</target>
        </trans-unit>
        <trans-unit id="cd7add0f800abbbd1e66c60f6069c92792837f55" translate="yes" xml:space="preserve">
          <source>The server generating a 401 response MUST send a WWW-Authenticate header field containing at least one challenge applicable to the target resource.</source>
          <target state="translated">生成401响应的服务器必须发送一个WWW-Authenticate头域,其中至少包含一个适用于目标资源的挑战。</target>
        </trans-unit>
        <trans-unit id="41a2d9f5661258161ce73028169bd11725906a95" translate="yes" xml:space="preserve">
          <source>The server in question might not be an origin server. This type of legal demand typically most directly affects the operations of ISPs and search engines.</source>
          <target state="translated">有关服务器可能不是源服务器。这类法律要求通常最直接影响到ISP和搜索引擎的运作。</target>
        </trans-unit>
        <trans-unit id="68af0c18b8da8b50b98dab365e6c44bda0a1c0cd" translate="yes" xml:space="preserve">
          <source>The server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.</source>
          <target state="translated">目前服务器因暂时超负荷或计划维护而无法处理该请求,可能会在延迟一段时间后得到缓解。</target>
        </trans-unit>
        <trans-unit id="b4dda833aeaa6eec15f7e431b7af24cbb15ca852" translate="yes" xml:space="preserve">
          <source>The server is denying access to the resource as a consequence of a legal demand.</source>
          <target state="translated">由于法律要求,服务器拒绝访问该资源。</target>
        </trans-unit>
        <trans-unit id="535642727fdc8b05ddf05462e53eb1fd72f395b8" translate="yes" xml:space="preserve">
          <source>The server is refusing to process a request because the request payload is larger than the server is willing or able to process.</source>
          <target state="translated">服务器拒绝处理请求,因为请求的有效载荷大于服务器愿意或能够处理的范围。</target>
        </trans-unit>
        <trans-unit id="8e835932fee03c296bcb72aa909e221b2d76df64" translate="yes" xml:space="preserve">
          <source>The server is refusing to service the request because the request- target is longer than the server is willing to interpret.</source>
          <target state="translated">服务器拒绝服务该请求,因为请求目标长度超过了服务器愿意解释的范围。</target>
        </trans-unit>
        <trans-unit id="a4600a172dd46594584138ffb4cdeee256ec3eab" translate="yes" xml:space="preserve">
          <source>The server refuses to accept the request without a defined Content- Length.</source>
          <target state="translated">服务器拒绝接受没有定义Content-Length的请求。</target>
        </trans-unit>
        <trans-unit id="7dc1d18d1de8086e00c33e14e7fbb9d98447499e" translate="yes" xml:space="preserve">
          <source>The server understands the content type of the request entity (hence a 415 Unsupported Media Type status code is inappropriate), and the syntax of the request entity is correct (thus a 400 Bad Request status code is inappropriate) but was unable to process the contained instructions.</source>
          <target state="translated">服务器理解请求实体的内容类型(因此415 Unsupported Media Type状态码不合适),请求实体的语法正确(因此400 Bad Request状态码不合适),但无法处理包含的指令。</target>
        </trans-unit>
        <trans-unit id="00efdb0f4aeceed7ddf3062cf505b924f1c16f43" translate="yes" xml:space="preserve">
          <source>The server understood the request but refuses to authorize it.</source>
          <target state="translated">服务器理解该请求,但拒绝授权。</target>
        </trans-unit>
        <trans-unit id="3bc7b5094022e10cd3f5974753072f15a6924c81" translate="yes" xml:space="preserve">
          <source>The server, while acting as a gateway or proxy, received an invalid response from an inbound server it accessed while attempting to fulfill the request.</source>
          <target state="translated">服务器在充当网关或代理时,在试图完成请求时从其访问的入站服务器收到了无效响应。</target>
        </trans-unit>
        <trans-unit id="1ad5ea6a882bec7a2333c040e57cc408b262dbcc" translate="yes" xml:space="preserve">
          <source>The target resource does not have a current representation that would be acceptable to the user agent, according to the proactive negotiation header fields received in the request, and the server is unwilling to supply a default representation.</source>
          <target state="translated">根据请求中接收到的主动协商头字段,目标资源没有一个用户代理可以接受的当前表示,服务器不愿意提供一个默认表示。</target>
        </trans-unit>
        <trans-unit id="84928f27c78f4d3dd3859d6e787340fd92b3293c" translate="yes" xml:space="preserve">
          <source>The target resource is no longer available at the origin server and this condition is likely to be permanent.</source>
          <target state="translated">目标资源在源服务器上不再可用,这种情况很可能是永久性的。</target>
        </trans-unit>
        <trans-unit id="39a48107effc54ae1ebb331b03732df3b31a31d3" translate="yes" xml:space="preserve">
          <source>The template for the route that was matched for this request. May be &lt;code&gt;None&lt;/code&gt; if the request has not yet been routed, as would be the case for &lt;code&gt;process_request()&lt;/code&gt; middleware methods. May also be &lt;code&gt;None&lt;/code&gt; if your app uses a custom routing engine and the engine does not provide the URI template when resolving a route.</source>
          <target state="translated">与此请求匹配的路由的模板。如果尚未路由请求，则可能为 &lt;code&gt;None&lt;/code&gt; ，就像 &lt;code&gt;process_request()&lt;/code&gt; 中间件方法一样。如果您的应用使用自定义路由引擎，并且该引擎在解析路由时未提供URI模板，则也可能为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="560ef3168387f14d4c503a6c7e672693a800eea4" translate="yes" xml:space="preserve">
          <source>The test will fail since it expects the image file to reside under &lt;code&gt;/tmp&lt;/code&gt;. To fix this, modify &lt;code&gt;app.py&lt;/code&gt; to add the ability to configure the image storage directory with an environment variable:</source>
          <target state="translated">该测试将失败，因为它期望映像文件位于 &lt;code&gt;/tmp&lt;/code&gt; 下。要解决此问题，请修改 &lt;code&gt;app.py&lt;/code&gt; 以添加使用环境变量配置映像存储目录的功能：</target>
        </trans-unit>
        <trans-unit id="e63226da4e48b2753f9c00270082318c99e2075c" translate="yes" xml:space="preserve">
          <source>The testing framework supports both unittest and pytest:</source>
          <target state="translated">测试框架同时支持untest和pytest。</target>
        </trans-unit>
        <trans-unit id="f21ed17654736dc2f507cb0fc27a983c93509271" translate="yes" xml:space="preserve">
          <source>The tuple has the form (&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;, &lt;em&gt;length&lt;/em&gt;, [&lt;em&gt;unit&lt;/em&gt;]), where &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; designate the range (inclusive), and &lt;em&gt;length&lt;/em&gt; is the total length, or &amp;lsquo;*&amp;rsquo; if unknown. You may pass &lt;code&gt;int&lt;/code&gt;&amp;rsquo;s for these numbers (no need to convert to &lt;code&gt;str&lt;/code&gt; beforehand). The optional value &lt;em&gt;unit&lt;/em&gt; describes the range unit and defaults to &amp;lsquo;bytes&amp;rsquo;</source>
          <target state="translated">元组的形式为（&lt;em&gt;start&lt;/em&gt;，&lt;em&gt;end&lt;/em&gt;，&lt;em&gt;length&lt;/em&gt;，[ &lt;em&gt;unit&lt;/em&gt; ]），其中&lt;em&gt;start&lt;/em&gt;和&lt;em&gt;end&lt;/em&gt;指定范围（包括在内），而&lt;em&gt;length&lt;/em&gt;是总长度；如果未知，则为'*'。您可以为这些数字传递 &lt;code&gt;int&lt;/code&gt; 的（无需事先转换为 &lt;code&gt;str&lt;/code&gt; ）。可选的值&lt;em&gt;单位&lt;/em&gt;描述范围单位，默认为&amp;ldquo;字节&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="7e542f74360d3b19f30c86cf27581abf2b0937e7" translate="yes" xml:space="preserve">
          <source>The two different ways of specifying lists may not be mixed in a single query string for the same parameter.</source>
          <target state="translated">这两种不同的列表指定方式不能混合在同一个参数的单个查询字符串中。</target>
        </trans-unit>
        <trans-unit id="3229a7f8d1c9ec14f29035b3656c407de7855779" translate="yes" xml:space="preserve">
          <source>The two members correspond to the first and last byte positions of the requested resource, inclusive. Negative indices indicate offset from the end of the resource, where -1 is the last byte, -2 is the second-to-last byte, and so forth.</source>
          <target state="translated">这两个成员对应于请求资源的第一个和最后一个字节位置,包括在内。负的指数表示从资源末端开始的偏移,其中-1是最后一个字节,-2是第二到最后一个字节,以此类推。</target>
        </trans-unit>
        <trans-unit id="cbe94a101ecb954714958d80e536d52312ee6544" translate="yes" xml:space="preserve">
          <source>The use of resource classes maps somewhat naturally to the REST architectural style, in which a URL is used to identify a resource only, not the action to perform on that resource.</source>
          <target state="translated">资源类的使用在某种程度上自然而然地映射到了REST架构风格上,在这种风格下,URL仅用于标识资源,而不是对该资源执行的操作。</target>
        </trans-unit>
        <trans-unit id="7d74bfe58e769d4f1b69188a4defa69daa66991d" translate="yes" xml:space="preserve">
          <source>The user has sent too many requests in a given amount of time (&amp;ldquo;rate limiting&amp;rdquo;).</source>
          <target state="translated">用户在给定的时间内发送了太多请求（&amp;ldquo;速率限制&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="ed736a4422453de2b39534f691289638c4da5cd4" translate="yes" xml:space="preserve">
          <source>The value of the &amp;ldquo;by&amp;rdquo; parameter, or &lt;code&gt;None&lt;/code&gt; if the parameter is absent. Identifies the client-facing interface of the proxy.</source>
          <target state="translated">所述&amp;ldquo;由&amp;rdquo;参数，或值 &lt;code&gt;None&lt;/code&gt; 如果参数不存在。标识代理的面向客户端的接口。</target>
        </trans-unit>
        <trans-unit id="fe5d5235e6af2c980a1a7719023d6bacecf0102b" translate="yes" xml:space="preserve">
          <source>The value of the &amp;ldquo;for&amp;rdquo; parameter, or &lt;code&gt;None&lt;/code&gt; if the parameter is absent. Identifies the node making the request to the proxy.</source>
          <target state="translated">的&amp;ldquo;for&amp;rdquo;参数，或值 &lt;code&gt;None&lt;/code&gt; 如果参数不存在。标识向代理发出请求的节点。</target>
        </trans-unit>
        <trans-unit id="c3cc9f7009c46155dfea17f1db4084fb11017ade" translate="yes" xml:space="preserve">
          <source>The value of the &amp;ldquo;host&amp;rdquo; parameter, or &lt;code&gt;None&lt;/code&gt; if the parameter is absent. Provides the host request header field as received by the proxy.</source>
          <target state="translated">&amp;ldquo;主机&amp;rdquo;参数，或值 &lt;code&gt;None&lt;/code&gt; 如果参数不存在。提供代理接收的主机请求标头字段。</target>
        </trans-unit>
        <trans-unit id="cc9de95ebea613e82379fd23948de63ee23c4ca8" translate="yes" xml:space="preserve">
          <source>The value of the &amp;ldquo;proto&amp;rdquo; parameter, or &lt;code&gt;None&lt;/code&gt; if the parameter is absent. Indicates the protocol that was used to make the request to the proxy.</source>
          <target state="translated">的&amp;ldquo;原&amp;rdquo;参数，或值 &lt;code&gt;None&lt;/code&gt; 如果参数不存在。指示用于向代理发出请求的协议。</target>
        </trans-unit>
        <trans-unit id="b6df41c014faa1a95a93823c98dc9147024275f4" translate="yes" xml:space="preserve">
          <source>The value of the cookie.</source>
          <target state="translated">Cookie的值。</target>
        </trans-unit>
        <trans-unit id="dcb8620ba5c44a1cfc855c78a2df03ace6f5c9a0" translate="yes" xml:space="preserve">
          <source>The value of the param as a string, or &lt;code&gt;None&lt;/code&gt; if param is not found and is not required.</source>
          <target state="translated">参数的值是一个字符串，如果没有找到参数，并且不是必需的，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d23427a9edf8da3ab8c4e45367ce71a37e75fc1c" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to a &lt;code&gt;UUID&lt;/code&gt;. If the param is not found, returns &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;required&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果找到了参数的值，并且可以将其转换为 &lt;code&gt;UUID&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ，除非 &lt;code&gt;required&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e30e809e212d37b72808017153591429d5036c66" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to a &lt;code&gt;UUID&lt;/code&gt;. If the param is not found, returns &lt;code&gt;default&lt;/code&gt; (default &lt;code&gt;None&lt;/code&gt;), unless &lt;code&gt;required&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果找到了参数的值，并且可以将其转换为 &lt;code&gt;UUID&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;default&lt;/code&gt; （默认值 &lt;code&gt;None&lt;/code&gt; ），除非 &lt;code&gt;required&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2c38d28df28c13cc5f6efed13b1f6ddacdc6f86" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to a &lt;code&gt;bool&lt;/code&gt;. If the param is not found, returns &lt;code&gt;None&lt;/code&gt; unless &lt;code&gt;required&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">参数的值（如果已找到并且可以将其转换为 &lt;code&gt;bool&lt;/code&gt; )。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ,除非 &lt;code&gt;required&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="141af8d14c2db9bc948d3ea3a43dbcfc3f949355" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to a &lt;code&gt;bool&lt;/code&gt;. If the param is not found, returns &lt;code&gt;None&lt;/code&gt; unless required is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">参数的值（如果找到）可以转换为 &lt;code&gt;bool&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ,除非required为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a61aada73962caa6ee95a077deea6836b15fcb56" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to a &lt;code&gt;date&lt;/code&gt; according to the supplied format string. If the param is not found, returns &lt;code&gt;None&lt;/code&gt; unless required is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果找到了参数值，则可以根据提供的格式字符串将其转换为 &lt;code&gt;date&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ,除非required为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="003871e937e399cc9fd3cce149ac07e189cb62a6" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to a &lt;code&gt;datetime&lt;/code&gt; according to the supplied format string. If the param is not found, returns &lt;code&gt;None&lt;/code&gt; unless required is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果找到了参数值，则可以根据提供的格式字符串将其转换为 &lt;code&gt;datetime&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ,除非required为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9763e04fcea72b51618993ca34d8891b9d75d739" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to an &lt;code&gt;float&lt;/code&gt;. If the param is not found, returns &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;required&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">参数的值（如果找到）可以转换为 &lt;code&gt;float&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ，除非 &lt;code&gt;required&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a04e40fabb0363acc0fd95c2220173a0b5339fd" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found and can be converted to an &lt;code&gt;int&lt;/code&gt;. If the param is not found, returns &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;required&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">参数的值（如果找到）并且可以将其转换为 &lt;code&gt;int&lt;/code&gt; 。如果未找到参数，则返回 &lt;code&gt;None&lt;/code&gt; ，除非 &lt;code&gt;required&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6edf547580040ef96e52ce854deb6a35c38d2ae6" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found. Otherwise, returns &lt;code&gt;None&lt;/code&gt; unless required is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">参数的值（如果找到）。否则，返回 &lt;code&gt;None&lt;/code&gt; ,除非required为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59d19a65947f61ee924072efddefb40f45b95692" translate="yes" xml:space="preserve">
          <source>The value of the param if it is found. Otherwise, returns &lt;code&gt;None&lt;/code&gt; unless required is True. Empty list elements will be discarded. For example, the following query strings would both result in &lt;code&gt;[&amp;lsquo;1&amp;rsquo;, &amp;lsquo;3&amp;rsquo;]&lt;/code&gt;:</source>
          <target state="translated">参数的值（如果找到）。否则，除非需要为True ，否则返回 &lt;code&gt;None&lt;/code&gt; 。空列表元素将被丢弃。例如，以下查询字符串都将导致 &lt;code&gt;[&amp;lsquo;1&amp;rsquo;, &amp;lsquo;3&amp;rsquo;]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e74ca400152e8b06eb7f5405a98421e0e569b44f" translate="yes" xml:space="preserve">
          <source>The value of the specified header if it exists, or &lt;code&gt;None&lt;/code&gt; if the header is not found and is not required.</source>
          <target state="translated">指定的标头的值（如果存在）；如果找不到并且不需要标头，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76dea009c39601f4179b06d38cec442d76bb7f30" translate="yes" xml:space="preserve">
          <source>The value of the specified header if it exists, or the default value if the header is not found and is not required.</source>
          <target state="translated">如果存在指定的头的值,或者如果没有找到头且不需要,则为默认值。</target>
        </trans-unit>
        <trans-unit id="1a516e631415cabd578c4e94014f4cd1ad98326c" translate="yes" xml:space="preserve">
          <source>The value of the specified header if set, or the default value if not set.</source>
          <target state="translated">如果设置了指定头的值,或者没有设置,则为默认值。</target>
        </trans-unit>
        <trans-unit id="790b5d3d63196f60f863de5f299fd2dd40f6704a" translate="yes" xml:space="preserve">
          <source>The value to convert must conform to the standard UUID string representation per RFC 4122. For example, the following strings are all valid:</source>
          <target state="translated">要转换的值必须符合RFC 4122的标准UUID字符串表示法。例如,以下字符串都是有效的。</target>
        </trans-unit>
        <trans-unit id="e1372f83ebe6b2c30954a57346db8a03c2f87bbd" translate="yes" xml:space="preserve">
          <source>The value will be used for the &lt;em&gt;filename&lt;/em&gt; directive. For example, given &lt;code&gt;'report.pdf'&lt;/code&gt;, the Content-Disposition header would be set to: &lt;code&gt;'attachment; filename=&quot;report.pdf&quot;'&lt;/code&gt;.</source>
          <target state="translated">该值将用于&lt;em&gt;filename&lt;/em&gt;指令。例如，给定 &lt;code&gt;'report.pdf'&lt;/code&gt; ，Content-Disposition标头将设置为： &lt;code&gt;'attachment; filename=&quot;report.pdf&quot;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="856d32bcc87da698ed07c5840a22d1f12723ae41" translate="yes" xml:space="preserve">
          <source>The workaround is fairly straightforward, if verbose:</source>
          <target state="translated">解决办法相当简单,虽然啰嗦。</target>
        </trans-unit>
        <trans-unit id="ed5933000995a5383c6ed2ff9c04f419b1949054" translate="yes" xml:space="preserve">
          <source>Then install your dependencies.</source>
          <target state="translated">然后安装你的依赖项。</target>
        </trans-unit>
        <trans-unit id="c83957b99bd64191b085e333677d9ea4dd57c0d0" translate="yes" xml:space="preserve">
          <source>Then, create an NGINX conf file that looks something like this:</source>
          <target state="translated">然后,创建一个类似于这样的NGINX conf文件。</target>
        </trans-unit>
        <trans-unit id="e710dd0f5ea5fb473740119a58eb640ed1794dff" translate="yes" xml:space="preserve">
          <source>Then, in another terminal, try running the new test:</source>
          <target state="translated">然后,在另一个终端,尝试运行新的测试。</target>
        </trans-unit>
        <trans-unit id="058ff83bf433fdce34d17ad46cb30fd2b9c0f837" translate="yes" xml:space="preserve">
          <source>Then, in another terminal:</source>
          <target state="translated">然后,在另一个终端。</target>
        </trans-unit>
        <trans-unit id="ea446e4aed260aeac1ea4108515a92392503fb68" translate="yes" xml:space="preserve">
          <source>Then, update the responder to use the new media type:</source>
          <target state="translated">然后,更新响应者以使用新的媒体类型。</target>
        </trans-unit>
        <trans-unit id="3bd31e3411e006ec0faad400ac680109665df979" translate="yes" xml:space="preserve">
          <source>Then, within &lt;code&gt;SomeResource&lt;/code&gt;:</source>
          <target state="translated">然后，在 &lt;code&gt;SomeResource&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="3892dca92a640808a47561f9deddbea96a1c9202" translate="yes" xml:space="preserve">
          <source>There are many questions to consider when deciding how to manage the processes that actually run your Python code. Are you generally CPU bound or IO bound? Is your application thread-safe? How many CPU&amp;rsquo;s do you have? What system are you on? Do you need an in-process cache?</source>
          <target state="translated">在决定如何管理实际运行Python代码的过程时，需要考虑许多问题。您通常是受CPU约束还是受IO约束？您的应用程序是线程安全的吗？您有几个CPU？您在什么系统上？您是否需要进程内缓存？</target>
        </trans-unit>
        <trans-unit id="538864632e70a45bc46d9e734ace15ce30ef3609" translate="yes" xml:space="preserve">
          <source>There are many ways to deploy a Python application. The aim of these quickstarts is to simply get you up and running, not to give you a perfectly tuned or secure environment. You will almost certainly need to customize these configurations for any serious production deployment.</source>
          <target state="translated">部署Python应用程序的方法有很多。这些快速启动的目的是让您简单地启动和运行,而不是给您一个完美的调整或安全的环境。对于任何严肃的生产部署,您几乎肯定需要定制这些配置。</target>
        </trans-unit>
        <trans-unit id="0468dcf4b5be0721986ed4c45b049ebe65c3b358" translate="yes" xml:space="preserve">
          <source>This approach reduces the number of (often) extraneous checks that Falcon would otherwise have to perform, making the framework more efficient. With that in mind, writing a high-quality API based on Falcon requires that:</source>
          <target state="translated">这种方法减少了Falcon原本需要执行的(通常是)无关检查的数量,使框架更加高效。考虑到这一点,基于Falcon编写高质量的API需要:</target>
        </trans-unit>
        <trans-unit id="cf6ef8fcde3b7971f8ad9f43dec093d58e153493" translate="yes" xml:space="preserve">
          <source>This approach reduces the number of checks that Falcon would otherwise have to perform, making the framework more efficient. With that in mind, writing a high-quality API based on Falcon requires that:</source>
          <target state="translated">这种方法减少了Falcon原本需要执行的检查次数,使框架更加高效。有鉴于此,基于Falcon编写高质量的API需要:</target>
        </trans-unit>
        <trans-unit id="3de18ed0edd3b4aca2fe609cbad145d38cd03dc8" translate="yes" xml:space="preserve">
          <source>This base class provides some extra plumbing for unittest-style test cases, to help simulate WSGI calls without having to spin up an actual web server. Simply inherit from this class in your test case classes instead of &lt;a href=&quot;https://docs.python.org/2/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;testtools.TestCase&lt;/code&gt;.</source>
          <target state="translated">这个基类为unittest风格的测试用例提供了一些额外的信息，以帮助模拟WSGI调用而无需启动实际的Web服务器。只需从您的测试用例类中继承该类，而不是从&lt;a href=&quot;https://docs.python.org/2/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;testtools.TestCase&lt;/code&gt; 继承即可。</target>
        </trans-unit>
        <trans-unit id="1eb37faa802d15d2ef35c1f3857902ea4e87b3f0" translate="yes" xml:space="preserve">
          <source>This base class provides some extra plumbing for unittest-style test cases, to help simulate WSGI calls without having to spin up an actual web server. Various simulation methods are derived from &lt;a href=&quot;#falcon.testing.TestClient&quot;&gt;&lt;code&gt;falcon.testing.TestClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这个基类为unittest风格的测试用例提供了一些额外的信息，以帮助模拟WSGI调用而无需启动实际的Web服务器。从&lt;a href=&quot;#falcon.testing.TestClient&quot;&gt; &lt;code&gt;falcon.testing.TestClient&lt;/code&gt; &lt;/a&gt;派生出各种模拟方法。</target>
        </trans-unit>
        <trans-unit id="83db430eaf0691c925d9163a816c8faa18a83903" translate="yes" xml:space="preserve">
          <source>This behavior is an unfortunate artifact of the request body mechanics not being fully defined by the WSGI spec (PEP-3333). This is discussed in the reference documentation for &lt;a href=&quot;../api/request_and_response#falcon.Request.stream&quot;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/a&gt;, and a workaround is provided in the form of &lt;a href=&quot;../api/request_and_response#falcon.Request.bounded_stream&quot;&gt;&lt;code&gt;bounded_stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此行为是WSGI规范（PEP-3333）尚未完全定义请求主体机制的不幸产物。有关&lt;a href=&quot;../api/request_and_response#falcon.Request.stream&quot;&gt; &lt;code&gt;stream&lt;/code&gt; &lt;/a&gt;的参考文档中对此进行了讨论，并以&lt;a href=&quot;../api/request_and_response#falcon.Request.bounded_stream&quot;&gt; &lt;code&gt;bounded_stream&lt;/code&gt; &lt;/a&gt;的形式提供了一种解决方法。</target>
        </trans-unit>
        <trans-unit id="575831cdc881e2c205f21ddb1875abef45352fbb" translate="yes" xml:space="preserve">
          <source>This can be particulary problematic when a request body is expected, but none is given. In this case, the following call blocks under certain WSGI servers:</source>
          <target state="translated">当期望有一个请求体,但没有给出任何请求体时,这可能是特别有问题的。在这种情况下,在某些WSGI服务器下会出现以下调用阻塞。</target>
        </trans-unit>
        <trans-unit id="1a37dd36e16db22a7706a17bca1712e3fd6f0da7" translate="yes" xml:space="preserve">
          <source>This class can be mixed in when inheriting from &lt;code&gt;HTTPError&lt;/code&gt;, in order to override the &lt;code&gt;has_representation&lt;/code&gt; property such that it always returns &lt;code&gt;False&lt;/code&gt;. This, in turn, will cause Falcon to return an empty response body to the client.</source>
          <target state="translated">从 &lt;code&gt;HTTPError&lt;/code&gt; 继承时可以混合使用此类，以便重写 &lt;code&gt;has_representation&lt;/code&gt; 属性，使其始终返回 &lt;code&gt;False&lt;/code&gt; 。反过来，这将导致Falcon向客户返回一个空的响应主体。</target>
        </trans-unit>
        <trans-unit id="f1d8858f685a8ded21353732192737a29def0c0e" translate="yes" xml:space="preserve">
          <source>This class has been deprecated and will be removed in a future release. Please use &lt;a href=&quot;#falcon.testing.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">此类已弃用，并将在以后的版本中删除。请改用&lt;a href=&quot;#falcon.testing.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea5b0095b7b30ccbb9703087a824cb40cf6b1f36" translate="yes" xml:space="preserve">
          <source>This class implements a simple test resource that can be extended as needed to test middleware, hooks, and the Falcon framework itself.</source>
          <target state="translated">该类实现了一个简单的测试资源,可以根据需要进行扩展,以测试中间件、钩子和Falcon框架本身。</target>
        </trans-unit>
        <trans-unit id="86b8134b6fbe09022de3424bd9b9967809980cd5" translate="yes" xml:space="preserve">
          <source>This class implements the &lt;code&gt;on_get&lt;/code&gt; responder, captures request data, and sets response body and headers.</source>
          <target state="translated">此类实现 &lt;code&gt;on_get&lt;/code&gt; 响应程序，捕获请求数据，并设置响应正文和标头。</target>
        </trans-unit>
        <trans-unit id="d8d2d1fe375d7a7963ea3acc36c9ad2ba168baa2" translate="yes" xml:space="preserve">
          <source>This class is deprecated and will be removed in a future release. Please use &lt;a href=&quot;#falcon.testing.SimpleTestResource&quot;&gt;&lt;code&gt;SimpleTestResource&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">此类已弃用，并将在以后的版本中删除。请改用&lt;a href=&quot;#falcon.testing.SimpleTestResource&quot;&gt; &lt;code&gt;SimpleTestResource&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e569a52f104c2326e052d9e403727badcff650bc" translate="yes" xml:space="preserve">
          <source>This class is simply a subclass of &lt;code&gt;str&lt;/code&gt; with a few helper methods and an extra attribute to indicate whether the entity-tag is weak or strong. The value of the string is equivalent to what RFC 7232 calls an &amp;ldquo;opaque-tag&amp;rdquo;, i.e. an entity-tag sans quotes and the weakness indicator.</source>
          <target state="translated">此类仅是 &lt;code&gt;str&lt;/code&gt; 的子类，具有一些辅助方法和一个额外的属性，用于指示实体标签是弱标签还是强标签。字符串的值等效于RFC 7232所称的&amp;ldquo;不透明标签&amp;rdquo;，即实体标签无引号和弱点指示符。</target>
        </trans-unit>
        <trans-unit id="351cdfeec80935d64fb2d071bc70465e3812d318" translate="yes" xml:space="preserve">
          <source>This class is the main entry point into a Falcon-based app.</source>
          <target state="translated">这个类是基于Falcon的应用程序的主要切入点。</target>
        </trans-unit>
        <trans-unit id="b26eab43c7014443739176608ddaa6fdb3345378" translate="yes" xml:space="preserve">
          <source>This class is used as the default &lt;a href=&quot;request_and_response#falcon.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;request_and_response#falcon.Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; context type (see &lt;a href=&quot;request_and_response#falcon.Request.context_type&quot;&gt;&lt;code&gt;Request.context_type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;request_and_response#falcon.Response.context_type&quot;&gt;&lt;code&gt;Response.context_type&lt;/code&gt;&lt;/a&gt;, respectively).</source>
          <target state="translated">此类用作默认的&lt;a href=&quot;request_and_response#falcon.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;request_and_response#falcon.Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;上下文类型（分别参见&lt;a href=&quot;request_and_response#falcon.Request.context_type&quot;&gt; &lt;code&gt;Request.context_type&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;request_and_response#falcon.Response.context_type&quot;&gt; &lt;code&gt;Response.context_type&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d8a02a423c96eb71f1e38d9c3c2977a19e9708a8" translate="yes" xml:space="preserve">
          <source>This class provides a contextual wrapper for Falcon&amp;rsquo;s &lt;code&gt;simulate_*&lt;/code&gt; test functions. It lets you replace this:</source>
          <target state="translated">此类为Falcon的 &lt;code&gt;simulate_*&lt;/code&gt; 测试功能提供了上下文包装。它可以让您替换：</target>
        </trans-unit>
        <trans-unit id="ec6c8f9e435bda115a0f1e3103cb8f7afa2083f5" translate="yes" xml:space="preserve">
          <source>This code creates your WSGI application and aliases it as &lt;code&gt;api&lt;/code&gt;. You can use any variable names you like, but we&amp;rsquo;ll use &lt;code&gt;application&lt;/code&gt; since that is what Gunicorn, by default, expects it to be called (we&amp;rsquo;ll see how this works in the next section of the tutorial).</source>
          <target state="translated">此代码创建您的WSGI应用程序，并将其别名为 &lt;code&gt;api&lt;/code&gt; 。您可以使用任何喜欢的变量名，但是我们将使用 &lt;code&gt;application&lt;/code&gt; 因为Gunicorn默认情况下希望它被调用（我们将在本教程的下一部分中看到它的工作方式）。</target>
        </trans-unit>
        <trans-unit id="945916be8ee008a1326c7d3b593c0ff2b41e1ec6" translate="yes" xml:space="preserve">
          <source>This configuration, when executed, will create a new uWSGI server backed by your &lt;code&gt;wsgi.py&lt;/code&gt; file and listening at &lt;code&gt;12.0.0.1:8080&lt;/code&gt;.</source>
          <target state="translated">执行此配置后，将创建一个新的uWSGI服务器，该服务器由 &lt;code&gt;wsgi.py&lt;/code&gt; 文件支持，并在 &lt;code&gt;12.0.0.1:8080&lt;/code&gt; 进行侦听。</target>
        </trans-unit>
        <trans-unit id="5a11756512de7471b7c1e0f0cd0da07645562ca3" translate="yes" xml:space="preserve">
          <source>This decorator provides standard JSON Schema validation via the &lt;code&gt;jsonschema&lt;/code&gt; package available from PyPI. Semantic validation via the &lt;em&gt;format&lt;/em&gt; keyword is enabled for the default checkers implemented by &lt;code&gt;jsonschema.FormatChecker&lt;/code&gt;.</source>
          <target state="translated">该装饰器通过PyPI提供的 &lt;code&gt;jsonschema&lt;/code&gt; 包提供标准的JSON Schema验证。为 &lt;code&gt;jsonschema.FormatChecker&lt;/code&gt; 实现的默认检查器启用了通过&lt;em&gt;format&lt;/em&gt;关键字进行的语义验证。</target>
        </trans-unit>
        <trans-unit id="fabd7f658c89064a4a643939782c87696b0a5eea" translate="yes" xml:space="preserve">
          <source>This feature affords use cases in which the response may be pre-constructed, such as in the case of caching.</source>
          <target state="translated">这个特性提供了可以预先构造响应的用例,例如在缓存的情况下。</target>
        </trans-unit>
        <trans-unit id="c485b2df49824fb9f013b4e676fa393c36e40266" translate="yes" xml:space="preserve">
          <source>This function can be used to construct custom routing engines that iterate through a list of possible routes, attempting to match an incoming request against each route&amp;rsquo;s compiled regular expression.</source>
          <target state="translated">此函数可用于构造自定义路由引擎，该引擎循环访问可能的路由列表，尝试将传入的请求与每个路由的已编译正则表达式进行匹配。</target>
        </trans-unit>
        <trans-unit id="04608fac3cce4799bded346700d0a81ca00edf9c" translate="yes" xml:space="preserve">
          <source>This function does not support the more flexible templating syntax used in the default router. Only simple paths with bracketed field expressions are recognized. For example:</source>
          <target state="translated">该函数不支持默认路由器中使用的更灵活的模板语法。只识别带括号字段表达式的简单路径。例如</target>
        </trans-unit>
        <trans-unit id="a62e418c97abdb6aafbc540a01a8c61b30656ad0" translate="yes" xml:space="preserve">
          <source>This function models the behavior of &lt;code&gt;urllib.parse.unquote_plus&lt;/code&gt;, albeit in a faster, more straightforward manner.</source>
          <target state="translated">此函数以更快，更直接的方式对 &lt;code&gt;urllib.parse.unquote_plus&lt;/code&gt; 的行为进行建模。</target>
        </trans-unit>
        <trans-unit id="6ba2990369210f2a25e64c463aea8561bef3b2b4" translate="yes" xml:space="preserve">
          <source>This function models the behavior of &lt;code&gt;urllib.unquote_plus&lt;/code&gt;, but is faster. It is also more robust, in that it will decode escaped UTF-8 mutibyte sequences.</source>
          <target state="translated">此函数对 &lt;code&gt;urllib.unquote_plus&lt;/code&gt; 的行为进行建模，但速度更快。它也更健壮，因为它将解码转义的UTF-8多字节序列。</target>
        </trans-unit>
        <trans-unit id="4ed0cba5df06330c80b757635826207bb3546de9" translate="yes" xml:space="preserve">
          <source>This function returns a decorator which can be used to mark deprecated functions. Applying this decorator will result in a warning being emitted when the function is used.</source>
          <target state="translated">这个函数返回一个装饰符,它可以用来标记废弃的函数。应用这个装饰符将导致在使用该函数时发出警告。</target>
        </trans-unit>
        <trans-unit id="0e26e63e2e38fc63600018a944300dd1d5e404cc" translate="yes" xml:space="preserve">
          <source>This guide provides instructions for deploying to a Linux environment only. However, with a bit of effort you should be able to adapt this configuration to other operating systems, such as OpenBSD.</source>
          <target state="translated">本指南只提供了在Linux环境下部署的说明。然而,只要稍加努力,你应该能够将此配置适应于其他操作系统,例如OpenBSD。</target>
        </trans-unit>
        <trans-unit id="e2196133afdaf7ad89fa4cc632efefcba16a652c" translate="yes" xml:space="preserve">
          <source>This handler requires the extra &lt;code&gt;msgpack&lt;/code&gt; package (version 0.5.2 or higher), which must be installed in addition to &lt;code&gt;falcon&lt;/code&gt; from PyPI:</source>
          <target state="translated">此处理程序需要额外的 &lt;code&gt;msgpack&lt;/code&gt; 软件包（版本0.5.2或更高版本），除了PyPI的 &lt;code&gt;falcon&lt;/code&gt; 之外，还必须安装该软件包：</target>
        </trans-unit>
        <trans-unit id="c60d56668c7f47706ebf7f20635cf74c840165a1" translate="yes" xml:space="preserve">
          <source>This handler requires the extra &lt;code&gt;msgpack&lt;/code&gt; package, which must be installed in addition to &lt;code&gt;falcon&lt;/code&gt; from PyPI:</source>
          <target state="translated">该处理程序需要额外的 &lt;code&gt;msgpack&lt;/code&gt; 软件包，除了PyPI的 &lt;code&gt;falcon&lt;/code&gt; 之外，还必须安装该软件包：</target>
        </trans-unit>
        <trans-unit id="a2d15a8d0863c33e2f5906ebb658a07ff7d363dc" translate="yes" xml:space="preserve">
          <source>This handler uses &lt;code&gt;msgpack.unpackb()&lt;/code&gt; and &lt;code&gt;msgpack.packb()&lt;/code&gt;. The MessagePack &lt;code&gt;bin&lt;/code&gt; type is used to distinguish between Unicode strings (&lt;code&gt;str&lt;/code&gt; on Python 3, &lt;code&gt;unicode&lt;/code&gt; on Python 2) and byte strings (&lt;code&gt;bytes&lt;/code&gt; on Python 2/3, or &lt;code&gt;str&lt;/code&gt; on Python 2).</source>
          <target state="translated">此处理程序使用 &lt;code&gt;msgpack.unpackb()&lt;/code&gt; 和 &lt;code&gt;msgpack.packb()&lt;/code&gt; 。MessagePack &lt;code&gt;bin&lt;/code&gt; 类型用于区分Unicode字符串（Python 3 上的 &lt;code&gt;str&lt;/code&gt; ，Python 2上的 &lt;code&gt;unicode&lt;/code&gt; ）和字节字符串（Python 2/3上的 &lt;code&gt;bytes&lt;/code&gt; ，或Python 2上的 &lt;code&gt;str&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="492b0b49e4c72e09038318ef3e39f858bdf3a3a5" translate="yes" xml:space="preserve">
          <source>This handler uses Python&amp;rsquo;s standard &lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; library by default, but can be easily configured to use any of a number of third-party JSON libraries, depending on your needs. For example, you can often realize a significant performance boost under CPython by using an alternative library. Good options in this respect include &lt;code&gt;orjson&lt;/code&gt;, &lt;code&gt;python-rapidjson&lt;/code&gt;, and &lt;code&gt;mujson&lt;/code&gt;.</source>
          <target state="translated">该处理程序默认情况下使用Python的标准&lt;a href=&quot;https://docs.python.org/3/library/json.html#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;库，但可以根据需要轻松配置为使用许多第三方JSON库中的任何一个。例如，通过使用替代库，您通常可以在CPython下实现显着的性能提升。在这方面，不错的选择包括 &lt;code&gt;orjson&lt;/code&gt; ， &lt;code&gt;python-rapidjson&lt;/code&gt; 和 &lt;code&gt;mujson&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="214db402f72586b0835fc9540be5fee0eb1c673f" translate="yes" xml:space="preserve">
          <source>This is also safe:</source>
          <target state="translated">这也是安全的。</target>
        </trans-unit>
        <trans-unit id="d1096d75a4c74e2ff67bbdda84e1d86249f5916a" translate="yes" xml:space="preserve">
          <source>This is generated automatically by Falcon based on the set of methods implemented by the target resource. If a resource does not include its own OPTIONS responder, the framework provides a default implementation. Therefore, OPTIONS is always included in the list of allowable methods.</source>
          <target state="translated">这是由Falcon根据目标资源实现的方法集自动生成的。如果一个资源没有包含自己的OPTIONS响应器,框架会提供一个默认的实现。因此,OPTIONS总是包含在允许的方法列表中。</target>
        </trans-unit>
        <trans-unit id="c54258c9780f73bba6721118365a2c63c9c900bc" translate="yes" xml:space="preserve">
          <source>This is one of the key differences between the REST and RPC architectural styles. REST applies a standard set of verbs across any number of resources, as opposed to having each application define its own unique set of methods.</source>
          <target state="translated">这是REST和RPC架构风格的关键区别之一。REST在任何数量的资源中应用了一套标准的动词,而不是让每个应用程序定义自己独特的方法集。</target>
        </trans-unit>
        <trans-unit id="6b3d159d093d5f3f64b5c184f2ee9fa42d687ddc" translate="yes" xml:space="preserve">
          <source>This method can be called multiple times to add one or more cookies to the response.</source>
          <target state="translated">这个方法可以被多次调用,在响应中添加一个或多个cookie。</target>
        </trans-unit>
        <trans-unit id="7460f1bc8fa30745783d4ce0b5d6b8482466ee6a" translate="yes" xml:space="preserve">
          <source>This method can be used to set a collection of raw header names and values all at once.</source>
          <target state="translated">这个方法可以用来一次性设置一个原始头名称和值的集合。</target>
        </trans-unit>
        <trans-unit id="9f01c9adf8ef88f379a5d015519e9e41b2a503de" translate="yes" xml:space="preserve">
          <source>This method can be useful when serializing the error to hash-like media types, such as YAML, JSON, and MessagePack.</source>
          <target state="translated">当把错误序列化到类似哈希的媒体类型,如YAML、JSON和MessagePack时,这个方法可以很有用。</target>
        </trans-unit>
        <trans-unit id="bb9ea7f64e147193bdc50dfde6b4979b21593cc3" translate="yes" xml:space="preserve">
          <source>This method cannot be used to set cookies; instead, use &lt;a href=&quot;#falcon.Response.append_header&quot;&gt;&lt;code&gt;append_header()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法不能用于设置cookie。相反，请使用&lt;a href=&quot;#falcon.Response.append_header&quot;&gt; &lt;code&gt;append_header()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bce60bb38fc793fd5739b63a509c5169b80fc122" translate="yes" xml:space="preserve">
          <source>This method cannot be used with the Set-Cookie header. Instead, use &lt;a href=&quot;#falcon.Response.unset_cookie&quot;&gt;&lt;code&gt;unset_cookie()&lt;/code&gt;&lt;/a&gt; to remove a cookie and ensure that the user agent expires its own copy of the data as well.</source>
          <target state="translated">此方法不能与Set-Cookie标头一起使用。而是使用&lt;a href=&quot;#falcon.Response.unset_cookie&quot;&gt; &lt;code&gt;unset_cookie()&lt;/code&gt; &lt;/a&gt;删除cookie，并确保用户代理也使自己的数据副本过期。</target>
        </trans-unit>
        <trans-unit id="fa1dcd57dade3758b919731147a59077d2415181" translate="yes" xml:space="preserve">
          <source>This method delegates to the configured router&amp;rsquo;s &lt;code&gt;add_route()&lt;/code&gt; method. To override the default behavior, pass a custom router object to the &lt;a href=&quot;#falcon.API&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; initializer.</source>
          <target state="translated">此方法委托给配置的路由器的 &lt;code&gt;add_route()&lt;/code&gt; 方法。要覆盖默认行为，请将自定义路由器对象传递给&lt;a href=&quot;#falcon.API&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;初始化程序。</target>
        </trans-unit>
        <trans-unit id="0582b3e3ed01018d1c0698bbd82f51d18ad3c1e4" translate="yes" xml:space="preserve">
          <source>This method has been deprecated and will be removed in a future release.</source>
          <target state="translated">该方法已被废弃,并将在未来的版本中被删除。</target>
        </trans-unit>
        <trans-unit id="6e3e607a875875b7b2209d58006ce3711971b130" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#falcon.routing.CompiledRouter.add_route&quot;&gt;&lt;code&gt;add_route()&lt;/code&gt;&lt;/a&gt; and may be overridden to provide a custom mapping strategy.</source>
          <target state="translated">从&lt;a href=&quot;#falcon.routing.CompiledRouter.add_route&quot;&gt; &lt;code&gt;add_route()&lt;/code&gt; &lt;/a&gt;调用此方法，可以重写此方法以提供自定义映射策略。</target>
        </trans-unit>
        <trans-unit id="96161489153be8796208732566c8a6f3921896df" translate="yes" xml:space="preserve">
          <source>This method is deprecated and will be removed in a future release. Please use &lt;a href=&quot;#falcon.routing.map_http_methods&quot;&gt;&lt;code&gt;map_http_methods()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#falcon.routing.map_http_methods&quot;&gt;&lt;code&gt;map_http_methods()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">不建议使用此方法，将来的版本中将删除该方法。请改用&lt;a href=&quot;#falcon.routing.map_http_methods&quot;&gt; &lt;code&gt;map_http_methods()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#falcon.routing.map_http_methods&quot;&gt; &lt;code&gt;map_http_methods()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b751081b13b2508aaccd831281a5e9f01a1e0fb9" translate="yes" xml:space="preserve">
          <source>This method is meant to be used only for parsing a single entity-tag. It can not be used to parse a comma-separated list of values.</source>
          <target state="translated">本方法仅用于解析单个实体标记。它不能用来解析一个以逗号分隔的值列表。</target>
        </trans-unit>
        <trans-unit id="9420f3e95c415620ac685c4b8afb54d6e4f9c116" translate="yes" xml:space="preserve">
          <source>This method may be overridden to customize how a route is added.</source>
          <target state="translated">本方法可被重写,以自定义添加途径的方式。</target>
        </trans-unit>
        <trans-unit id="b6f3015929de3281597f6a9caf26301403aef5d0" translate="yes" xml:space="preserve">
          <source>This method treats valueless parameters as flags. By default, if no value is provided for the parameter in the query string, &lt;code&gt;True&lt;/code&gt; is assumed and returned. If the parameter is missing altogether, &lt;code&gt;None&lt;/code&gt; is returned as with other &lt;code&gt;get_param_*()&lt;/code&gt; methods, which can be easily treated as falsy by the caller as needed.</source>
          <target state="translated">此方法将无值参数视为标志。默认情况下，如果在查询字符串中没有为参数提供任何值，则假定为 &lt;code&gt;True&lt;/code&gt; 并返回True。如果参数完全丢失，则与其他 &lt;code&gt;get_param_*()&lt;/code&gt; 方法一样，返回 &lt;code&gt;None&lt;/code&gt; ，调用者可以根据需要轻松地将其视为虚假。</target>
        </trans-unit>
        <trans-unit id="c6cd18be45da31ff2d32fa091b9fc5a197ecf3d2" translate="yes" xml:space="preserve">
          <source>This mixin class must appear before &lt;code&gt;HTTPError&lt;/code&gt; in the base class list when defining the child; otherwise, it will not override the &lt;code&gt;has_representation&lt;/code&gt; property as expected.</source>
          <target state="translated">定义子级时，此mixin类必须在基类列表中的 &lt;code&gt;HTTPError&lt;/code&gt; 之前出现；否则，它将不会按预期覆盖 &lt;code&gt;has_representation&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="6180722d18e73a8a5c55f85aed9d2bed0aaeaa87" translate="yes" xml:space="preserve">
          <source>This module provides utility functions to parse, encode, decode, and otherwise manipulate a URI. These functions are not available directly in the &lt;code&gt;falcon&lt;/code&gt; module, and so must be explicitly imported:</source>
          <target state="translated">该模块提供实用程序功能来解析，编码，解码和以其他方式处理URI。这些函数在 &lt;code&gt;falcon&lt;/code&gt; 模块中不直接可用，因此必须显式导入：</target>
        </trans-unit>
        <trans-unit id="c1efc76481c003bbe435b715451a6bf56bd1be96" translate="yes" xml:space="preserve">
          <source>This operation will consume the request stream the first time it&amp;rsquo;s called and cache the results. Follow-up calls will just retrieve a cached version of the object.</source>
          <target state="translated">此操作将在第一次调用时消耗请求流并缓存结果。后续调用将仅检索对象的缓存版本。</target>
        </trans-unit>
        <trans-unit id="9f935167805cd94ee346793be1a31e18f0b5e396" translate="yes" xml:space="preserve">
          <source>This property can be used for responding to HEAD requests when you aren&amp;rsquo;t actually providing the response body, or when streaming the response. If either the &lt;code&gt;body&lt;/code&gt; property or the &lt;code&gt;data&lt;/code&gt; property is set on the response, the framework will force Content-Length to be the length of the given body bytes. Therefore, it is only necessary to manually set the content length when those properties are not used.</source>
          <target state="translated">当您实际上没有提供响应正文或流式传输响应时，可以使用此属性来响应HEAD请求。如果在响应上设置了 &lt;code&gt;body&lt;/code&gt; 属性或 &lt;code&gt;data&lt;/code&gt; 属性，则框架将强制Content-Length为给定主体字节的长度。因此，仅在不使用这些属性时才需要手动设置内容长度。</target>
        </trans-unit>
        <trans-unit id="1355279adc09b08a5bf566a08dc757aa293bd7c9" translate="yes" xml:space="preserve">
          <source>This property is determined by the value of &lt;code&gt;REMOTE_ADDR&lt;/code&gt; in the WSGI environment dict. Since this address is not derived from an HTTP header, clients and proxies can not forge it.</source>
          <target state="translated">此属性由WSGI环境字典中 &lt;code&gt;REMOTE_ADDR&lt;/code&gt; 的值确定。由于此地址不是从HTTP标头派生的，因此客户端和代理无法伪造它。</target>
        </trans-unit>
        <trans-unit id="618a134f818ea46a1df87da0c3e4d1659a8d85b8" translate="yes" xml:space="preserve">
          <source>This property provides a list of all &lt;code&gt;entity-tags&lt;/code&gt; in the header, both strong and weak, in the same order as listed in the header.</source>
          <target state="translated">此属性提供标题中所有 &lt;code&gt;entity-tags&lt;/code&gt; 的列表，包括强标签和弱标签，其顺序与标题中列出的顺序相同。</target>
        </trans-unit>
        <trans-unit id="30c9e0ec02ed118a193d716c52418291eb23388d" translate="yes" xml:space="preserve">
          <source>This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a &amp;ldquo;black hole&amp;rdquo; of redirection (e.g., a redirected URI prefix that points to a suffix of itself) or when the server is under attack by a client attempting to exploit potential security holes.</source>
          <target state="translated">仅当客户端将POST请求不正确地转换为带有长查询信息的GET请求时，当客户端下降到重定向的&amp;ldquo;黑洞&amp;rdquo;时（例如，重定向的URI前缀指向一个后缀）或当服务器受到客户端尝试利用潜在安全漏洞的攻击时。</target>
        </trans-unit>
        <trans-unit id="b02f0958ff93b5ce14d8ee29f8adf7d4415aa166" translate="yes" xml:space="preserve">
          <source>This response code allows the client to place preconditions on the current resource state (its current representations and metadata) and, thus, prevent the request method from being applied if the target resource is in an unexpected state.</source>
          <target state="translated">该响应代码允许客户端对当前的资源状态(其当前的表示和元数据)设置前提条件,从而在目标资源处于意外状态时,防止请求方法被应用。</target>
        </trans-unit>
        <trans-unit id="64ed799c0a5556073d44f18ee9829382b62cf221" translate="yes" xml:space="preserve">
          <source>This status code is similar to 301 (Moved Permanently), except that it does not allow changing the request method from POST to GET.</source>
          <target state="translated">这个状态码与301(Moved Permanently)类似,只是不允许将请求方式从POST改为GET。</target>
        </trans-unit>
        <trans-unit id="bbb350f8840e12956cd2735dc6b2e5035c5e47b8" translate="yes" xml:space="preserve">
          <source>This status code is similar to 302 (Found), except that it does not allow changing the request method from POST to GET.</source>
          <target state="translated">该状态码与302(发现)类似,只是不允许将请求方法从POST改为GET。</target>
        </trans-unit>
        <trans-unit id="6aade9c997727eb85db542b7b00d3954e70222e0" translate="yes" xml:space="preserve">
          <source>This time you should get back &lt;code&gt;405 Method Not Allowed&lt;/code&gt;, since the resource does not support the &lt;code&gt;PUT&lt;/code&gt; method. Note the value of the Allow header:</source>
          <target state="translated">这次您应该返回 &lt;code&gt;405 Method Not Allowed&lt;/code&gt; ，因为该资源不支持 &lt;code&gt;PUT&lt;/code&gt; 方法。注意Allow标头的值：</target>
        </trans-unit>
        <trans-unit id="e8456960a933ab83810e07e09c95d3a5bebd3a81" translate="yes" xml:space="preserve">
          <source>This utility is faster in the average case than the similar &lt;code&gt;quote&lt;/code&gt; function found in &lt;code&gt;urlib&lt;/code&gt;. It also strives to be easier to use by assuming a sensible default of allowed characters.</source>
          <target state="translated">在一般情况下，此实用程序比 &lt;code&gt;urlib&lt;/code&gt; 中提供的类似 &lt;code&gt;quote&lt;/code&gt; 功能要快。通过合理地设置允许的字符默认值，它也努力变得更易于使用。</target>
        </trans-unit>
        <trans-unit id="7875c02ed00683a74753216d4257c015a1dcc582" translate="yes" xml:space="preserve">
          <source>This value will be URI encoded per RFC 3986. If the value that is being set is already URI encoded it should be decoded first or the header should be set manually using the set_header method.</source>
          <target state="translated">这个值将根据RFC 3986进行URI编码。如果正在设置的值已经被URI编码,那么应该先进行解码,或者使用set_header方法手动设置头。</target>
        </trans-unit>
        <trans-unit id="81c65c066261de5a75c91cf877351767d694e4d8" translate="yes" xml:space="preserve">
          <source>This will be useful when creating a POST endpoint in the application that can add new image resources to our collection. We&amp;rsquo;ll tackle this functionality next.</source>
          <target state="translated">当在应用程序中创建可以向我们的集合中添加新图像资源的POST端点时，这将非常有用。接下来，我们将解决此功能。</target>
        </trans-unit>
        <trans-unit id="d19ceca501465c339e3bcf2bc0d8ff02bb697d6c" translate="yes" xml:space="preserve">
          <source>Tip</source>
          <target state="translated">Tip</target>
        </trans-unit>
        <trans-unit id="3c2984e4e70e730cfc6f0babe984a2d9daaf48db" translate="yes" xml:space="preserve">
          <source>To avoid unnecessary overhead, Falcon will only process request media the first time the media property is referenced. Once it has been referenced, it&amp;rsquo;ll use the cached result for subsequent interactions.</source>
          <target state="translated">为避免不必要的开销，Falcon将仅在首次引用媒体属性时处理请求媒体。一旦被引用，它将使用缓存的结果进行后续交互。</target>
        </trans-unit>
        <trans-unit id="6cce23c468a4657925493b1b2f347fff376a18f0" translate="yes" xml:space="preserve">
          <source>To customize the error presentation, implement a custom error serializer and set it on the &lt;a href=&quot;api#falcon.API&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; instance via &lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt;&lt;code&gt;set_error_serializer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要自定义错误表示，请实现自定义错误序列化程序，然后通过&lt;a href=&quot;api#falcon.API.set_error_serializer&quot;&gt; &lt;code&gt;set_error_serializer()&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;api#falcon.API&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;实例上对其进行设置。</target>
        </trans-unit>
        <trans-unit id="e4ee0411fa4ecb63785397e328d283cadcdbdf1e" translate="yes" xml:space="preserve">
          <source>To customize what data is passed to the serializer, subclass &lt;a href=&quot;#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; or any of its child classes, and override the &lt;a href=&quot;#falcon.HTTPError.to_dict&quot;&gt;&lt;code&gt;to_dict()&lt;/code&gt;&lt;/a&gt; method. To also support XML, override the &lt;a href=&quot;#falcon.HTTPError.to_xml&quot;&gt;&lt;code&gt;to_xml()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">要自定义将什么数据传递给序列化程序，请子类化&lt;a href=&quot;#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;或其子类中的任何一个，并重写&lt;a href=&quot;#falcon.HTTPError.to_dict&quot;&gt; &lt;code&gt;to_dict()&lt;/code&gt; &lt;/a&gt;方法。为了也支持XML，请重写&lt;a href=&quot;#falcon.HTTPError.to_xml&quot;&gt; &lt;code&gt;to_xml()&lt;/code&gt; &lt;/a&gt;方法。例如：</target>
        </trans-unit>
        <trans-unit id="0d0858657dcd844dca6515f7700d7655e269dafc" translate="yes" xml:space="preserve">
          <source>To customize what data is passed to the serializer, subclass &lt;code&gt;HTTPError&lt;/code&gt; and override the &lt;code&gt;to_dict()&lt;/code&gt; method (&lt;code&gt;to_json()&lt;/code&gt; is implemented via &lt;code&gt;to_dict()&lt;/code&gt;). To also support XML, override the &lt;code&gt;to_xml()&lt;/code&gt; method.</source>
          <target state="translated">要自定义将哪些数据传递给序列化程序，请子类化 &lt;code&gt;HTTPError&lt;/code&gt; 并重写 &lt;code&gt;to_dict()&lt;/code&gt; 方法（ &lt;code&gt;to_json()&lt;/code&gt; 通过 &lt;code&gt;to_dict()&lt;/code&gt; 实现）。为了也支持XML，请重写 &lt;code&gt;to_xml()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d908b2d890e345b72f4d7418cd64ce389eaaefe5" translate="yes" xml:space="preserve">
          <source>To fix this, simply edit &lt;code&gt;app.py&lt;/code&gt; and pass in a path to the initializer. For now, just use the working directory from which you started the service:</source>
          <target state="translated">要解决此问题，只需编辑 &lt;code&gt;app.py&lt;/code&gt; 并将路径传递给初始化程序。现在，仅使用启动服务的工作目录：</target>
        </trans-unit>
        <trans-unit id="bb6d8d1c423b819dca1d426a146a15f3e2fbc463" translate="yes" xml:space="preserve">
          <source>To learn more about TDD, you may wish to check out one of the many books on the topic, such as &lt;a href=&quot;http://www.obeythetestinggoat.com/pages/book.html&quot;&gt;Test Driven Development with Python&lt;/a&gt;. The examples in this particular book use the Django framework and even JavaScript, but the author covers a number of testing principles that are widely applicable.</source>
          <target state="translated">要了解有关TDD的更多信息，您可能希望查阅有关该主题的众多书籍之一，例如《&lt;a href=&quot;http://www.obeythetestinggoat.com/pages/book.html&quot;&gt;用Python进行测试驱动开发》&lt;/a&gt;。这本书中的示例使用Django框架，甚至使用JavaScript，但是作者涵盖了许多广泛适用的测试原理。</target>
        </trans-unit>
        <trans-unit id="9b490dc41e827609d6d215c1ca260b9d2987d559" translate="yes" xml:space="preserve">
          <source>To learn more about setting cookies, see &lt;a href=&quot;cookies#setting-cookies&quot;&gt;Setting Cookies&lt;/a&gt;. The parameters listed below correspond to those defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;.</source>
          <target state="translated">要了解有关设置Cookie的更多信息，请参阅&amp;ldquo; &lt;a href=&quot;cookies#setting-cookies&quot;&gt;设置Cookie&amp;rdquo;&lt;/a&gt;。下面列出的参数与&lt;a href=&quot;http://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265中&lt;/a&gt;定义的参数相对应。</target>
        </trans-unit>
        <trans-unit id="a091be808a116ed42feee6115d09c997b7038bea" translate="yes" xml:space="preserve">
          <source>To make the new test pass, we need to add a new method for handling POSTs. Open &lt;code&gt;images.py&lt;/code&gt; and add a POST responder to the &lt;code&gt;Resource&lt;/code&gt; class as follows:</source>
          <target state="translated">要进行新的测试通过，我们需要添加一种新的方法来处理POST。打开 &lt;code&gt;images.py&lt;/code&gt; 并将POST响应器添加到 &lt;code&gt;Resource&lt;/code&gt; 类，如下所示：</target>
        </trans-unit>
        <trans-unit id="9f075b71ee1f0a8ecfc3079311dd870008c1fe75" translate="yes" xml:space="preserve">
          <source>To test this example go to the another terminal and run:</source>
          <target state="translated">要测试这个例子,请进入另一个终端并运行。</target>
        </trans-unit>
        <trans-unit id="efaf408f108b958a95337a23ca8c8dc57fe72264" translate="yes" xml:space="preserve">
          <source>To work around this, RFC 3986 specifies &lt;code&gt;+&lt;/code&gt; as a reserved character, and recommends percent-encoding any such characters when their literal value is desired (&lt;code&gt;%2B&lt;/code&gt; in the case of &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">要解决此问题，RFC 3986将 &lt;code&gt;+&lt;/code&gt; 指定为保留字符，并建议在需要此类字符的原义值时对所有此类字符进行百分比编码（对于 &lt;code&gt;+&lt;/code&gt; ,则为 &lt;code&gt;%2B&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="63b6df82bf73a656f50ab1e70b9c2eeacae1c6e9" translate="yes" xml:space="preserve">
          <source>Try executing the following:</source>
          <target state="translated">试着执行以下内容。</target>
        </trans-unit>
        <trans-unit id="ec61eef14ea59a4d5b0288e2be9ae99fdbcdff2e" translate="yes" xml:space="preserve">
          <source>Try running the tests again. This time, they should pass with flying colors!</source>
          <target state="translated">尝试再次运行测试。这一次,他们应该会顺利通过!</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="9413bdd154a51f8ae2f9a6bcd62ebd547a454a54" translate="yes" xml:space="preserve">
          <source>Two entity-tags are equivalent if both are not weak and their opaque-tags match character-by-character.</source>
          <target state="translated">如果两个实体标签都不弱,而且它们的不透明标签逐字匹配,那么这两个实体标签就是等价的。</target>
        </trans-unit>
        <trans-unit id="ee3fb11d05c90c37311491cf33008925b13b487f" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">Type:</target>
        </trans-unit>
        <trans-unit id="77dbbe969278a4a76b3a545f1daaf93d087e2ea8" translate="yes" xml:space="preserve">
          <source>URI Functions</source>
          <target state="translated">URI功能</target>
        </trans-unit>
        <trans-unit id="79c179ef01c2467c00442c91909f98b2587e0440" translate="yes" xml:space="preserve">
          <source>URI utilities.</source>
          <target state="translated">URI公用事业。</target>
        </trans-unit>
        <trans-unit id="788796ddccfc99b3425644561c6ea57a8b8b7280" translate="yes" xml:space="preserve">
          <source>URL scheme used for the request. Either &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;.</source>
          <target state="translated">用于请求的URL方案。&amp;ldquo; http&amp;rdquo;或&amp;ldquo; https&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a1d281ac63b121ed81137d88b2854573c7464a22" translate="yes" xml:space="preserve">
          <source>URLs provide a way for the client to uniquely identify resources. For example, &lt;code&gt;/players&lt;/code&gt; might identify the &amp;ldquo;list of all players&amp;rdquo; resource, while &lt;code&gt;/players/45301f54&lt;/code&gt; might identify the &amp;ldquo;individual player with ID 45301f54&amp;rdquo;, and &lt;code&gt;/players/45301f54/achievements&lt;/code&gt; the &amp;ldquo;list of all achievements for the player resource with ID 45301f54&amp;rdquo;.</source>
          <target state="translated">URL为客户端提供了一种唯一标识资源的方法。例如， &lt;code&gt;/players&lt;/code&gt; 可能会标识&amp;ldquo;所有玩家列表&amp;rdquo;资源，而 &lt;code&gt;/players/45301f54&lt;/code&gt; 可能会标识&amp;ldquo; ID为45301f54的个人玩家&amp;rdquo;，而 &lt;code&gt;/players/45301f54/achievements&lt;/code&gt; &amp;ldquo;该玩家资源的所有成就列表&amp;rdquo; ID 45301f54&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="21bf75a5255af008f6315cb6aca4bb3bdccee521" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="translated">UUID</target>
        </trans-unit>
        <trans-unit id="36551329945cf2d4f69f47a2e48542b71242727a" translate="yes" xml:space="preserve">
          <source>Under Python 2.x, if your content is of type &lt;code&gt;str&lt;/code&gt;, using the &lt;code&gt;data&lt;/code&gt; attribute instead of &lt;code&gt;body&lt;/code&gt; is the most efficient approach. However, if your text is of type &lt;code&gt;unicode&lt;/code&gt;, you will need to use the &lt;code&gt;body&lt;/code&gt; attribute instead.</source>
          <target state="translated">在Python 2.x下，如果您的内容为 &lt;code&gt;str&lt;/code&gt; 类型，则使用 &lt;code&gt;data&lt;/code&gt; 属性而不是 &lt;code&gt;body&lt;/code&gt; 是最有效的方法。但是，如果您的文本为 &lt;code&gt;unicode&lt;/code&gt; 类型，则需要使用 &lt;code&gt;body&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="9186b62f6629cc54aaec261451fff3551169042c" translate="yes" xml:space="preserve">
          <source>Under Python 3.x, on the other hand, the 2.x &lt;code&gt;str&lt;/code&gt; type can be thought of as having been replaced by what was once the &lt;code&gt;unicode&lt;/code&gt; type, and so you will need to always use the &lt;code&gt;body&lt;/code&gt; attribute for strings to ensure Unicode characters are properly encoded in the HTTP response.</source>
          <target state="translated">另一方面，在Python 3.x下，可以认为2.x &lt;code&gt;str&lt;/code&gt; 类型已被曾经的 &lt;code&gt;unicode&lt;/code&gt; 类型所取代，因此您将需要始终对字符串使用 &lt;code&gt;body&lt;/code&gt; 属性以确保Unicode字符在HTTP响应中正确编码。</target>
        </trans-unit>
        <trans-unit id="711ecf3ae739cf2c98ef6a3737aebf3003b26277" translate="yes" xml:space="preserve">
          <source>Unit of the range parsed from the value of the Range header, or &lt;code&gt;None&lt;/code&gt; if the header is missing</source>
          <target state="translated">从Range标头的值解析的范围单位；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0aa6825aba3252c5cebbc0305750407b383e14f4" translate="yes" xml:space="preserve">
          <source>Universal and manylinux wheels are available on PyPI for the Falcon framework. Installation is as simple as:</source>
          <target state="translated">在PyPI上提供了通用和manylinux轮子,用于Falcon框架。安装非常简单。</target>
        </trans-unit>
        <trans-unit id="bf36c74e851db7c2ce95b5900cf8acc21ac10271" translate="yes" xml:space="preserve">
          <source>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</source>
          <target state="translated">除非适用法律要求或以书面形式同意，否则根据&amp;ldquo;许可&amp;rdquo;分发的软件将按&amp;ldquo;原样&amp;rdquo;分发，没有任何明示或暗示的保证或条件。有关许可下特定的语言管理权限和限制，请参见许可。</target>
        </trans-unit>
        <trans-unit id="a017948c567109be5608efb518882e99231cb44b" translate="yes" xml:space="preserve">
          <source>Unlike hooks, middleware methods apply globally to the entire API.</source>
          <target state="translated">与钩子不同,中间件方法全局适用于整个API。</target>
        </trans-unit>
        <trans-unit id="075a6caa06099c7bf3a201c8df9d83db7ce42ff4" translate="yes" xml:space="preserve">
          <source>Unquote an RFC 7320 &amp;ldquo;quoted-string&amp;rdquo;.</source>
          <target state="translated">取消引用RFC 7320&amp;ldquo;带引号的字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="70a55d91487d32e499d29801011e31507f72db23" translate="yes" xml:space="preserve">
          <source>Unset a cookie in the response</source>
          <target state="translated">在响应中取消设置一个cookie</target>
        </trans-unit>
        <trans-unit id="a7b022fd4205d3b503a70e035a72eceb5222b065" translate="yes" xml:space="preserve">
          <source>Untrusted input (i.e., input from an external client or service) is validated.</source>
          <target state="translated">不受信任的输入(即来自外部客户端或服务的输入)被验证。</target>
        </trans-unit>
        <trans-unit id="1aaf33dc6b1c08e0c1fed0611853aa50c296bc3b" translate="yes" xml:space="preserve">
          <source>Upward and onward!</source>
          <target state="translated">向上,向上!</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="608e04c768061d38c80d1a3e6baed1d4408e88f8" translate="yes" xml:space="preserve">
          <source>Use this attribute in lieu of &lt;code&gt;body&lt;/code&gt; when your content is already a byte string (&lt;code&gt;str&lt;/code&gt; or &lt;code&gt;bytes&lt;/code&gt; in Python 2, or simply &lt;code&gt;bytes&lt;/code&gt; in Python 3). See also the note below.</source>
          <target state="translated">当您的内容已经是字节字符串时（在Python 2中为 &lt;code&gt;str&lt;/code&gt; 或 &lt;code&gt;bytes&lt;/code&gt; ，或者在Python 3中仅为 &lt;code&gt;bytes&lt;/code&gt; ），请使用此属性代替 &lt;code&gt;body&lt;/code&gt; 。另请参见下面的注释。</target>
        </trans-unit>
        <trans-unit id="b5c8541b4996920925216f70917012d01caf9531" translate="yes" xml:space="preserve">
          <source>Used to set a list of cache directives to use as the value of the Cache-Control header. The list will be joined with &amp;ldquo;, &amp;rdquo; to produce the value for the header.</source>
          <target state="translated">用于设置缓存指令列表，以用作Cache-Control标头的值。该列表将与&amp;ldquo;，&amp;rdquo;连接在一起以产生标题的值。</target>
        </trans-unit>
        <trans-unit id="bec249e659662f7d5947bf09a1ea1d4a552885b0" translate="yes" xml:space="preserve">
          <source>User Guide</source>
          <target state="translated">用户指南</target>
        </trans-unit>
        <trans-unit id="33b4114eb22e4012955db64bea630b07e5787029" translate="yes" xml:space="preserve">
          <source>User agent interfaces do not always isolate cookies by path, and so this should not be considered an effective security measure.</source>
          <target state="translated">用户代理界面并不总是通过路径隔离cookie,因此这不应该被认为是一种有效的安全措施。</target>
        </trans-unit>
        <trans-unit id="0650ef3acb809d5f2ed8947cb6731fe8a5590c01" translate="yes" xml:space="preserve">
          <source>Using sinks, you can drain and dynamically handle a large number of routes, when creating static resources and responders would be impractical. For example, you might use a sink to create a smart proxy that forwards requests to one or more backend services.</source>
          <target state="translated">在创建静态资源和响应者不切实际的情况下,使用sink,你可以排出和动态处理大量的路由。例如,您可以使用汇来创建一个智能代理,将请求转发到一个或多个后端服务。</target>
        </trans-unit>
        <trans-unit id="7154685c0e27d59e31175c4d54067b392382c507" translate="yes" xml:space="preserve">
          <source>Using these constants helps avoid typos and cuts down on the number of string objects that must be created when preparing responses.</source>
          <target state="translated">使用这些常量有助于避免排版错误,并减少准备响应时必须创建的字符串对象的数量。</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="e33c0f237d7f92d0c9d5cdf68a91fab5acef1a35" translate="yes" xml:space="preserve">
          <source>Validating Media</source>
          <target state="translated">验证媒体</target>
        </trans-unit>
        <trans-unit id="ec5e2a071d6ac4b70e8c35355cdfd7450ff88561" translate="yes" xml:space="preserve">
          <source>Value of the Accept header, or &amp;lsquo;&lt;em&gt;/&lt;/em&gt;&amp;rsquo; if the header is missing.</source>
          <target state="translated">Accept标头的值；如果标头缺失，则为' &lt;em&gt;/&lt;/em&gt; '。</target>
        </trans-unit>
        <trans-unit id="de252c70deb5a2e95ae409f61eb838936a1f1ad7" translate="yes" xml:space="preserve">
          <source>Value of the Authorization header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">Authorization标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a223276f8cfcc1b20432098e717eb5d6f99ce910" translate="yes" xml:space="preserve">
          <source>Value of the Content-Length header converted to an &lt;code&gt;int&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">Content-Length标头的值转换为 &lt;code&gt;int&lt;/code&gt; ，如果标头丢失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a1277568897e1f64441520148a658706373a929" translate="yes" xml:space="preserve">
          <source>Value of the Content-Type header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">Content-Type标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa454f1ba11d98d1094f6f9522f5d4e8bd8d8efe" translate="yes" xml:space="preserve">
          <source>Value of the Date header, converted to a &lt;code&gt;datetime&lt;/code&gt; instance. The header value is assumed to conform to RFC 1123.</source>
          <target state="translated">Date标头的值，转换为 &lt;code&gt;datetime&lt;/code&gt; 实例。标头值假定符合RFC 1123。</target>
        </trans-unit>
        <trans-unit id="7266864be8bbd1003bbf7e4243d320afffca5a63" translate="yes" xml:space="preserve">
          <source>Value of the Expect header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">Expect标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77065231dc46b183dcf292c5d3bd4837dd0c4ece" translate="yes" xml:space="preserve">
          <source>Value of the Forwarded header, as a parsed list of &lt;a href=&quot;#falcon.Forwarded&quot;&gt;&lt;code&gt;falcon.Forwarded&lt;/code&gt;&lt;/a&gt; objects, or &lt;code&gt;None&lt;/code&gt; if the header is missing. If the header value is malformed, Falcon will make a best effort to parse what it can.</source>
          <target state="translated">转发的标头的值，以&lt;a href=&quot;#falcon.Forwarded&quot;&gt; &lt;code&gt;falcon.Forwarded&lt;/code&gt; &lt;/a&gt;对象的已解析列表的形式显示；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。如果标头值格式错误，Falcon会尽最大努力来解析它可以做到的。</target>
        </trans-unit>
        <trans-unit id="d83089667c585aab27ec3d72b8342b161d4f870a" translate="yes" xml:space="preserve">
          <source>Value of the If-Match header, as a parsed list of &lt;a href=&quot;util#falcon.ETag&quot;&gt;&lt;code&gt;falcon.ETag&lt;/code&gt;&lt;/a&gt; objects or &lt;code&gt;None&lt;/code&gt; if the header is missing or its value is blank.</source>
          <target state="translated">If-Match标头的值，作为&lt;a href=&quot;util#falcon.ETag&quot;&gt; &lt;code&gt;falcon.ETag&lt;/code&gt; &lt;/a&gt;对象的已解析列表，如果标头丢失或其值为空白，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d68afe875eb3b89f097dcd53d623511365477924" translate="yes" xml:space="preserve">
          <source>Value of the If-Modified-Since header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">If-Modified-Since标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd98a0483d8c7bc7ee537a8f6388a1332f9d9716" translate="yes" xml:space="preserve">
          <source>Value of the If-None-Match header, as a parsed list of &lt;a href=&quot;util#falcon.ETag&quot;&gt;&lt;code&gt;falcon.ETag&lt;/code&gt;&lt;/a&gt; objects or &lt;code&gt;None&lt;/code&gt; if the header is missing or its value is blank.</source>
          <target state="translated">If-None-Match标头的值，作为&lt;a href=&quot;util#falcon.ETag&quot;&gt; &lt;code&gt;falcon.ETag&lt;/code&gt; &lt;/a&gt;对象的已解析列表，如果标头丢失或其值为空白，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43c59b4529ec9cad37260c43b79f4e6bd3675d69" translate="yes" xml:space="preserve">
          <source>Value of the If-Range header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">If-Range标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5ee4108008c11def53a881c8cf4b0f94f020fab" translate="yes" xml:space="preserve">
          <source>Value of the If-Unmodified-Since header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">If-Unmodified-Since标头的值；如果标头丢失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5553127a6aefcdd4dba86edb0023d59b202241bf" translate="yes" xml:space="preserve">
          <source>Value of the Referer header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">Referer标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5219ac49a602addc39ce8f09ddd6742e3f1353a" translate="yes" xml:space="preserve">
          <source>Value of the User-Agent header, or &lt;code&gt;None&lt;/code&gt; if the header is missing.</source>
          <target state="translated">User-Agent标头的值；如果标头缺失，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58877aa135af87c6152d35bec12d56ac77317795" translate="yes" xml:space="preserve">
          <source>Value to use for the Vary header.</source>
          <target state="translated">用于Vary头的值。</target>
        </trans-unit>
        <trans-unit id="2c7fda5d092b0a9b1af3f0f496ee105b32f8db7e" translate="yes" xml:space="preserve">
          <source>WSGI Server</source>
          <target state="translated">WSGI服务器</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="921f206c14d5e5353fc2466ffd92e059e0b949a3" translate="yes" xml:space="preserve">
          <source>We call these well-known methods &amp;ldquo;responders&amp;rdquo;. Each responder takes (at least) two params, one representing the HTTP request, and one representing the HTTP response to that request. By convention, these are called &lt;code&gt;req&lt;/code&gt; and &lt;code&gt;resp&lt;/code&gt;, respectively. Route templates and hooks can inject extra params, as we shall see later on.</source>
          <target state="translated">我们将这些众所周知的方法称为&amp;ldquo;响应者&amp;rdquo;。每个响应者（至少）采用两个参数，一个代表HTTP请求，另一个代表对该请求的HTTP响应。按照惯例，它们分别称为 &lt;code&gt;req&lt;/code&gt; 和 &lt;code&gt;resp&lt;/code&gt; 。路由模板和钩子可以注入额外的参数，我们将在后面看到。</target>
        </trans-unit>
        <trans-unit id="ed54f7acdf60b84dde096f38150eef60d5a84539" translate="yes" xml:space="preserve">
          <source>We can break this down into three resources:</source>
          <target state="translated">我们可以将其分解为三种资源。</target>
        </trans-unit>
        <trans-unit id="11c1278fd3553d645ff750d02cd067ccb361bc86" translate="yes" xml:space="preserve">
          <source>We designed Falcon to support the demanding needs of large-scale microservices and responsive app backends. Falcon complements more general Python web frameworks by providing bare-metal performance, reliability, and flexibility wherever you need it.</source>
          <target state="translated">我们设计Falcon是为了支持大规模微服务和响应式应用后端的苛刻需求。Falcon通过在任何需要的地方提供裸机性能、可靠性和灵活性,补充了更多通用的Python Web框架。</target>
        </trans-unit>
        <trans-unit id="8d7a19e3109efbcfe6bfc7d50d6e4982c224ea20" translate="yes" xml:space="preserve">
          <source>We did not explain how to configure TLS (HTTPS) for NGINX, leaving that as an exercise for the reader. However, we do recommend using Let&amp;rsquo;s Encrypt, which offers free, short-term certificates with auto-renewal. Visit the &lt;a href=&quot;https://certbot.eff.org/&quot;&gt;Let&amp;rsquo;s Encrypt site&lt;/a&gt; to learn how to integrate their service directly with NGINX.</source>
          <target state="translated">我们没有解释如何为NGINX配置TLS（HTTPS），这只是读者的练习。但是，我们建议您使用Let's Encrypt，它提供免费的，具有自动续订的短期证书。访问&lt;a href=&quot;https://certbot.eff.org/&quot;&gt;Let's Encrypt网站，&lt;/a&gt;以了解如何将其服务直接与NGINX集成。</target>
        </trans-unit>
        <trans-unit id="eea9a6603619cf677fb68f11cd2fadad2c8ffe66" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll start by factoring out the business logic from the resource&amp;rsquo;s POST responder in &lt;code&gt;images.py&lt;/code&gt; so that it can be tested independently. In this case, the resource&amp;rsquo;s &amp;ldquo;business logic&amp;rdquo; is simply the image-saving operation:</source>
          <target state="translated">我们将首先从 &lt;code&gt;images.py&lt;/code&gt; 中资源的POST响应器中剔除业务逻辑，以便对其进行独立测试。在这种情况下，资源的&amp;ldquo;业务逻辑&amp;rdquo;就是保存图像的操作：</target>
        </trans-unit>
        <trans-unit id="71c37380f9bc00d7afaf107ed7f9050e1280832f" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll use TDD this time around, to demonstrate how to apply this particular testing strategy when developing a Falcon application. Via tests, we&amp;rsquo;ll first define precisely what we want the application to do, and then code until the tests tell us that we&amp;rsquo;re done.</source>
          <target state="translated">这次我们将使用TDD，以演示在开发Falcon应用程序时如何应用这种特殊的测试策略。通过测试，我们将首先精确定义我们希望应用程序执行的操作，然后进行编码，直到测试告诉我们已完成。</target>
        </trans-unit>
        <trans-unit id="b149bbb13ee375cda12062f4a351f9bf2dd2c4f1" translate="yes" xml:space="preserve">
          <source>What Now?</source>
          <target state="translated">现在怎么办?</target>
        </trans-unit>
        <trans-unit id="1dc23e9126d4d3ffedcd374faff18887fd6788e1" translate="yes" xml:space="preserve">
          <source>What People are Saying</source>
          <target state="translated">人们在说什么</target>
        </trans-unit>
        <trans-unit id="5c315f7351633a034058ba60fbe5d0afe8e89e2c" translate="yes" xml:space="preserve">
          <source>What is the recommended approach for making configuration variables available to multiple resource classes?</source>
          <target state="translated">为多个资源类提供配置变量的推荐方法是什么?</target>
        </trans-unit>
        <trans-unit id="c342921f40fd555419aabc1a30de71e798639647" translate="yes" xml:space="preserve">
          <source>What is the recommended way to map related routes to resource classes?</source>
          <target state="translated">推荐将相关路线映射到资源类的方法是什么?</target>
        </trans-unit>
        <trans-unit id="c6c7c16081c6f6c86d432287d2502f004f405047" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../api/api#falcon.RequestOptions.auto_parse_qs_csv&quot;&gt;&lt;code&gt;auto_parse_qs_csv&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;False&lt;/code&gt;, the value of the query string &lt;code&gt;?c={'a':1,'b':2}&lt;/code&gt; will be added to the &lt;code&gt;req.params&lt;/code&gt; dictionary as &lt;code&gt;{'c': &quot;{'a':1,'b':2}&quot;}&lt;/code&gt;. This lets you consume JSON whether or not the client chooses to escape commas in the request.</source>
          <target state="translated">当&lt;a href=&quot;../api/api#falcon.RequestOptions.auto_parse_qs_csv&quot;&gt; &lt;code&gt;auto_parse_qs_csv&lt;/code&gt; &lt;/a&gt;被设置为 &lt;code&gt;False&lt;/code&gt; ，则查询字符串的值 &lt;code&gt;?c={'a':1,'b':2}&lt;/code&gt; 将被添加到所述 &lt;code&gt;req.params&lt;/code&gt; 字典作为 &lt;code&gt;{'c': &quot;{'a':1,'b':2}&quot;}&lt;/code&gt; 。这使您可以使用JSON，无论客户端是否选择对请求中的逗号进行转义。</target>
        </trans-unit>
        <trans-unit id="146da74fd2f2c5dff41da45caec5d2b12c5afe1f" translate="yes" xml:space="preserve">
          <source>When a responder raises an instance of &lt;a href=&quot;errors#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;, Falcon converts it to an HTTP response automatically. The default serializer supports JSON and XML, but may be overridden by this method to use a custom serializer in order to support other media types.</source>
          <target state="translated">当响应者引发&lt;a href=&quot;errors#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;实例时，Falcon会将其自动转换为HTTP响应。默认序列化程序支持JSON和XML，但是可以被此方法覆盖以使用自定义序列化程序以支持其他媒体类型。</target>
        </trans-unit>
        <trans-unit id="c10698d1d5e916886e696ed0ff1baf39f1a9692a" translate="yes" xml:space="preserve">
          <source>When a route can not be found for an incoming request, Falcon uses a default responder that simply raises an instance of &lt;a href=&quot;../api/errors#falcon.HTTPNotFound&quot;&gt;&lt;code&gt;falcon.HTTPNotFound&lt;/code&gt;&lt;/a&gt;. You can use &lt;a href=&quot;../api/api#falcon.API.add_error_handler&quot;&gt;&lt;code&gt;falcon.API.add_error_handler()&lt;/code&gt;&lt;/a&gt; to register a custom error handler for this exception type. Alternatively, you may be able to configure your web server to transform the response for you (e.g., using Nginx&amp;rsquo;s &lt;code&gt;error_page&lt;/code&gt; directive).</source>
          <target state="translated">当找不到传入请求的路由时，Falcon使用默认的响应程序，该响应程序仅引发&lt;a href=&quot;../api/errors#falcon.HTTPNotFound&quot;&gt; &lt;code&gt;falcon.HTTPNotFound&lt;/code&gt; &lt;/a&gt;的实例。您可以使用&lt;a href=&quot;../api/api#falcon.API.add_error_handler&quot;&gt; &lt;code&gt;falcon.API.add_error_handler()&lt;/code&gt; &lt;/a&gt;为该异常类型注册自定义错误处理程序。或者，您可以配置Web服务器为您转换响应（例如，使用Nginx的 &lt;code&gt;error_page&lt;/code&gt; 指令）。</target>
        </trans-unit>
        <trans-unit id="68822bf6a4714306a0c114035505efd0246cf116" translate="yes" xml:space="preserve">
          <source>When creating your API object you can either add or completely replace all of the handlers. For example, lets say you want to write an API that sends and receives MessagePack. We can easily do this by telling our Falcon API that we want a default media-type of &lt;code&gt;application/msgpack&lt;/code&gt; and then create a new &lt;a href=&quot;#falcon.media.Handlers&quot;&gt;&lt;code&gt;Handlers&lt;/code&gt;&lt;/a&gt; object specifying the desired media type and a handler that can process that data.</source>
          <target state="translated">创建API对象时，您可以添加或完全替换所有处理程序。例如，假设您要编写一个发送和接收MessagePack的API。我们可以通过告诉Falcon API我们想要默认的媒体类型 &lt;code&gt;application/msgpack&lt;/code&gt; ，然后创建一个新的&lt;a href=&quot;#falcon.media.Handlers&quot;&gt; &lt;code&gt;Handlers&lt;/code&gt; &lt;/a&gt;对象来指定所需的媒体类型和可以处理该数据的处理程序，来轻松实现此目的。</target>
        </trans-unit>
        <trans-unit id="3f96b6cda704ef8a364dd1cc7442388423664890" translate="yes" xml:space="preserve">
          <source>When decorating an entire resource class, all method names that resemble responders, including &lt;em&gt;suffix&lt;/em&gt;ed (see also &lt;a href=&quot;api#falcon.API.add_route&quot;&gt;&lt;code&gt;add_route()&lt;/code&gt;&lt;/a&gt;) ones, are decorated. If, for instance, a method is called &lt;code&gt;on_get_items&lt;/code&gt;, but it is not meant for handling &lt;code&gt;GET&lt;/code&gt; requests under a route with the &lt;em&gt;suffix&lt;/em&gt;&lt;code&gt;items&lt;/code&gt;, the easiest workaround for preventing the hook function from being applied to the method is renaming it not to clash with the responder pattern.</source>
          <target state="translated">装饰整个资源类时，将装饰所有类似于响应者的方法名称，包括&lt;em&gt;后缀&lt;/em&gt;ed（另请参见&lt;a href=&quot;api#falcon.API.add_route&quot;&gt; &lt;code&gt;add_route()&lt;/code&gt; &lt;/a&gt;）。例如，如果一个方法名为 &lt;code&gt;on_get_items&lt;/code&gt; ，但它并不意味着处理带有&lt;em&gt;后缀&lt;/em&gt; &lt;code&gt;items&lt;/code&gt; 的路由下的 &lt;code&gt;GET&lt;/code&gt; 请求，则防止钩子函数应用于该方法的最简单的解决方法是将其重命名为不与该钩子冲突。响应者模式。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dca97a77a11943662f4fa8b170359d5482b8d461" translate="yes" xml:space="preserve">
          <source>When it comes to API documentation, some developers prefer to use the API implementation as the user contract or source of truth (taking an implementation-first approach), while other developers prefer to use the API spec itself as the contract, implementing and testing the API against that spec (taking a design-first approach).</source>
          <target state="translated">当涉及到API文档时,一些开发人员喜欢将API实现作为用户契约或真理来源(采取实现优先的方法),而另一些开发人员则喜欢将API规范本身作为契约,根据该规范实现和测试API(采取设计优先的方法)。</target>
        </trans-unit>
        <trans-unit id="a0e28b8953f401936ecb44577cd982868d1d8bb4" translate="yes" xml:space="preserve">
          <source>When it comes to building HTTP APIs, other frameworks weigh you down with tons of dependencies and unnecessary abstractions. Falcon cuts to the chase with a clean design that embraces HTTP and the REST architectural style.</source>
          <target state="translated">当谈到构建HTTP API时,其他框架会用大量的依赖关系和不必要的抽象来拖累你。Falcon以简洁的设计切入主题,拥抱HTTP和REST架构风格。</target>
        </trans-unit>
        <trans-unit id="cba93f2b287f4dfe3bc7fb2254181d43cea8c316" translate="yes" xml:space="preserve">
          <source>When it comes to error handling, you can always directly set the error status, appropriate response headers, and error body using the &lt;code&gt;resp&lt;/code&gt; object. However, Falcon tries to make things a little easier by providing a &lt;a href=&quot;../api/errors#predefined-errors&quot;&gt;set of error classes&lt;/a&gt; you can raise when something goes wrong. Falcon will convert any instance or subclass of &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;falcon.HTTPError&lt;/code&gt;&lt;/a&gt; raised by a responder, hook, or middleware component into an appropriate HTTP response.</source>
          <target state="translated">对于错误处理，您始终可以使用 &lt;code&gt;resp&lt;/code&gt; 对象直接设置错误状态，适当的响应标头和错误正文。但是，Falcon试图通过提供一&lt;a href=&quot;../api/errors#predefined-errors&quot;&gt;组错误类&lt;/a&gt;可以使事情变得简单一些，这些类可以在出现问题时引发。 Falcon会将由响应者，挂钩或中间件组件引发的&lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;falcon.HTTPError&lt;/code&gt; 的&lt;/a&gt;任何实例或子类转换为适当的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="69e2c6591d99f44113c21ad6fa99ab0edeb6afab" translate="yes" xml:space="preserve">
          <source>When it comes to error handling, you can always directly set the error status, appropriate response headers, and error body using the &lt;code&gt;resp&lt;/code&gt; object. However, Falcon tries to make things a little easier by providing a set of error classes you can raise when something goes wrong. All of these classes inherit from &lt;a href=&quot;#falcon.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于错误处理，您始终可以使用 &lt;code&gt;resp&lt;/code&gt; 对象直接设置错误状态，适当的响应标头和错误正文。但是，Falcon试图通过提供一组错误类可以使事情变得简单一些，这些类可以在出现问题时引发。所有这些类都继承自&lt;a href=&quot;#falcon.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2097a1d2d83b753e8f269d9b3a67ee85da8e241" translate="yes" xml:space="preserve">
          <source>When overriding &lt;code&gt;context_type&lt;/code&gt; with a factory function (as opposed to a class), the function is called like a method of the current Request instance. Therefore the first argument is the Request instance itself (self).</source>
          <target state="translated">当使用工厂函数（而不是类）覆盖 &lt;code&gt;context_type&lt;/code&gt; 时，该函数的调用类似于当前Request实例的方法。因此，第一个参数是Request实例本身（自己）。</target>
        </trans-unit>
        <trans-unit id="d0e22b5c366357a57be3445e205c88d270af1bff" translate="yes" xml:space="preserve">
          <source>When overriding &lt;code&gt;context_type&lt;/code&gt; with a factory function (as opposed to a class), the function is called like a method of the current Response instance. Therefore the first argument is the Response instance itself (self).</source>
          <target state="translated">当使用工厂函数（而不是类）覆盖 &lt;code&gt;context_type&lt;/code&gt; 时，该函数的调用类似于当前Response实例的方法。因此，第一个参数是Response实例本身（自己）。</target>
        </trans-unit>
        <trans-unit id="bccb41c7ebb828d3737b32ee0de7a373beeecd82" translate="yes" xml:space="preserve">
          <source>When running your application in a development environment, you can disable this default behavior by setting &lt;a href=&quot;api#falcon.ResponseOptions.secure_cookies_by_default&quot;&gt;&lt;code&gt;secure_cookies_by_default&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt; via &lt;a href=&quot;api#falcon.API.resp_options&quot;&gt;&lt;code&gt;API.resp_options&lt;/code&gt;&lt;/a&gt;. This lets you test your app locally without having to set up TLS. You can make this option configurable to easily switch between development and production environments.</source>
          <target state="translated">在开发环境中运行应用程序时，可以通过&lt;a href=&quot;api#falcon.API.resp_options&quot;&gt; &lt;code&gt;API.resp_options&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;api#falcon.ResponseOptions.secure_cookies_by_default&quot;&gt; &lt;code&gt;secure_cookies_by_default&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 来禁用此默认行为。这使您无需设置TLS就可以在本地测试您的应用程序。您可以将此选项配置为可在开发和生产环境之间轻松切换。</target>
        </trans-unit>
        <trans-unit id="16af961f30779e3c118487082703c9712f8795e4" translate="yes" xml:space="preserve">
          <source>When something goes wrong, you usually want to give your users some info to help them resolve the issue. The exception to this rule is when an error occurs because the user is requested something they are not authorized to access. In that case, you may wish to simply return &lt;code&gt;404 Not Found&lt;/code&gt; with an empty body, in case a malicious user is fishing for information that will help them crack your app.</source>
          <target state="translated">当出现问题时，通常需要向用户提供一些信息，以帮助他们解决问题。此规则的例外情况是发生错误时，因为用户被要求未经授权访问某些内容。在这种情况下，您可能希望只返回一个空的&amp;ldquo; &lt;code&gt;404 Not Found&lt;/code&gt; &amp;rdquo;，以防恶意用户正在寻找有助于他们破解应用程序的信息。</target>
        </trans-unit>
        <trans-unit id="97aed7f61912114b0a68bae7e0c831a33fc6ecfd" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the request&amp;rsquo;s body stream will be left at EOF. The original data is not retained by the framework.</source>
          <target state="translated">启用此选项后，请求的主体流将保留在EOF。框架未保留原始数据。</target>
        </trans-unit>
        <trans-unit id="645cb66a61c738cb5427f46a7100d0e53aa4d1ab" translate="yes" xml:space="preserve">
          <source>When using a data access layer, simply pass the engine into your data access objects instead. See also &lt;a href=&quot;https://github.com/jmvrbanac/falcon-example&quot;&gt;this sample Falcon project&lt;/a&gt; that demonstrates using an ORM with Falcon.</source>
          <target state="translated">使用数据访问层时，只需将引擎传递到数据访问对象中即可。另请参阅&lt;a href=&quot;https://github.com/jmvrbanac/falcon-example&quot;&gt;此示例Falcon项目&lt;/a&gt;，该项目演示了如何将ORM与Falcon一起使用。</target>
        </trans-unit>
        <trans-unit id="9528403cfffd1324ef25630afc7cff183293f431" translate="yes" xml:space="preserve">
          <source>When using the above approach, OPTIONS requests must also be special-cased in any other middleware or hooks you use for auth, content-negotiation, etc. For example, you will typically skip auth for preflight requests because it is simply unnecessary; note that such request do not include the Authorization header in any case.</source>
          <target state="translated">当使用上述方法时,OPTIONS请求还必须在您用于 auth、内容协商等的任何其他中间件或钩子中进行特殊编码。例如,你通常会跳过飞行前请求的 auth,因为它根本没有必要;注意,这种请求在任何情况下都不包括授权头。</target>
        </trans-unit>
        <trans-unit id="22af9b191ecdcaf8063a1cd60db2ca2f0b4c8578" translate="yes" xml:space="preserve">
          <source>When using this format, all commas uri-encoded will not be treated by Falcon as a delimiter. If the client wants to send a value as a list, it must not encode the commas with the values.</source>
          <target state="translated">使用这种格式时,Falcon不会将所有 uri 编码的逗号作为定界符处理。如果客户端要以列表的形式发送一个值,就不能将逗号与值一起编码。</target>
        </trans-unit>
        <trans-unit id="06a0d6ce60e0db1d7fd6ac6d35c775db4b53205c" translate="yes" xml:space="preserve">
          <source>Whether or not a req/resp was captured.</source>
          <target state="translated">是否捕获了一个请求/答复。</target>
        </trans-unit>
        <trans-unit id="ba56d8abd5135c093dbea8e5efaf46bcc6fec01b" translate="yes" xml:space="preserve">
          <source>Whether or not the cookie may only be included in unscripted requests from the client.</source>
          <target state="translated">是否只能在客户端的非脚本请求中包含cookie。</target>
        </trans-unit>
        <trans-unit id="bfbdf1e33300820d42fead1b00777b3bfc059f8a" translate="yes" xml:space="preserve">
          <source>Whether or not the cookie may only only be transmitted from the client via HTTPS.</source>
          <target state="translated">Cookie是否只能通过HTTPS从客户端传输。</target>
        </trans-unit>
        <trans-unit id="d40baddaa5c88f3019ba49dcb2fe16c3eb9b08fc" translate="yes" xml:space="preserve">
          <source>While curl certainly gets the job done, it can be a bit crufty to use. &lt;a href=&quot;https://github.com/jkbr/httpie&quot;&gt;HTTPie&lt;/a&gt; is a modern, user-friendly alternative. Let&amp;rsquo;s install HTTPie and use it from now on:</source>
          <target state="translated">虽然curl当然可以完成工作，但使用起来可能有些麻烦。&lt;a href=&quot;https://github.com/jkbr/httpie&quot;&gt;HTTPie&lt;/a&gt;是一种现代的，用户友好的替代方法。让我们安装HTTPie并从现在开始使用它：</target>
        </trans-unit>
        <trans-unit id="24e040b27792e364592263b86f6c4fb936290263" translate="yes" xml:space="preserve">
          <source>While this method can be used to efficiently append raw Set-Cookie headers to the response, you may find &lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt;&lt;code&gt;set_cookie()&lt;/code&gt;&lt;/a&gt; to be more convenient.</source>
          <target state="translated">尽管可以使用此方法将原始Set-Cookie标头有效地附加到响应中，但您可能会发现&lt;a href=&quot;#falcon.Response.set_cookie&quot;&gt; &lt;code&gt;set_cookie()&lt;/code&gt; &lt;/a&gt;更方便。</target>
        </trans-unit>
        <trans-unit id="a1cb97c392a99daad01e60de73a0ba6de2e7eea7" translate="yes" xml:space="preserve">
          <source>Who&amp;rsquo;s Using Falcon?</source>
          <target state="translated">谁在使用猎鹰？</target>
        </trans-unit>
        <trans-unit id="11cd5fbcd56d7cb5a299305ead356cd06a6166b3" translate="yes" xml:space="preserve">
          <source>Why are &amp;lsquo;+&amp;rsquo; characters in my params being converted to spaces?</source>
          <target state="translated">为什么我的参数中的&amp;ldquo; +&amp;rdquo;字符会转换为空格？</target>
        </trans-unit>
        <trans-unit id="8096d5fab46a9a3d03316c3614ac42daeab5daa2" translate="yes" xml:space="preserve">
          <source>Why are trailing slashes trimmed from req.path?</source>
          <target state="translated">为什么req.path中的斜杠要被修剪掉?</target>
        </trans-unit>
        <trans-unit id="f74b9e055e78884c7a0ea3a19e2b6cf35a53bfd6" translate="yes" xml:space="preserve">
          <source>Why does raising an error inside a resource crash my app?</source>
          <target state="translated">为什么在资源中引发错误会使我的应用程序崩溃?</target>
        </trans-unit>
        <trans-unit id="29eabbff5f4a5b1f6242cffdb031389507269c20" translate="yes" xml:space="preserve">
          <source>Why does req.stream.read() hang for certain requests?</source>
          <target state="translated">为什么req.stream.read()对某些请求会挂起?</target>
        </trans-unit>
        <trans-unit id="c571bf6f6d76aa4b97a767b6085981a5a49f539c" translate="yes" xml:space="preserve">
          <source>Why doesn&amp;rsquo;t Falcon come with batteries included?</source>
          <target state="translated">猎鹰为何不随附电池？</target>
        </trans-unit>
        <trans-unit id="2a3ff26f23d68d00ada68e3cf74f6794e88ebada" translate="yes" xml:space="preserve">
          <source>Why doesn&amp;rsquo;t Falcon create a new Resource instance for every request?</source>
          <target state="translated">Falcon为什么不为每个请求创建一个新的Resource实例？</target>
        </trans-unit>
        <trans-unit id="9032619c9647c23f488136bb9afcbc39b0b13b0f" translate="yes" xml:space="preserve">
          <source>Why is an empty response body returned when I raise an instance of HTTPError?</source>
          <target state="translated">为什么当我引发HTTPError实例时,返回的是一个空的响应体?</target>
        </trans-unit>
        <trans-unit id="4ddb9245cca26f6459be92a0fff734ff5fb0b688" translate="yes" xml:space="preserve">
          <source>Why is my query parameter missing from the req object?</source>
          <target state="translated">为什么我的查询参数在req对象中不见了?</target>
        </trans-unit>
        <trans-unit id="a37905a6478159e9e621100e9148b19c3cccf280" translate="yes" xml:space="preserve">
          <source>With test helpers such as &lt;code&gt;simulate_get()&lt;/code&gt; and &lt;code&gt;simulate_post()&lt;/code&gt;, we can create tests that span multiple units. But we can also go one step further and run the application as a normal, separate process (e.g. with Gunicorn). We can then write tests that interact with the running process through HTTP, behaving like a normal client.</source>
          <target state="translated">使用诸如 &lt;code&gt;simulate_get()&lt;/code&gt; 和 &lt;code&gt;simulate_post()&lt;/code&gt; 之类的测试助手，我们可以创建跨多个单元的测试。但是我们也可以更进一步，将应用程序作为正常的单独过程运行（例如，使用Gunicorn）。然后，我们可以像普通客户端一样编写通过HTTP与正在运行的进程交互的测试。</target>
        </trans-unit>
        <trans-unit id="36ccd517ee9f09422d29e269708c0d6b789bedaa" translate="yes" xml:space="preserve">
          <source>With the latter approach, to control when the config is actually loaded, it&amp;rsquo;s best not to instantiate it at the top level of the config module&amp;rsquo;s namespace. This avoids any problematic side-effects that may be caused by loading the config whenever Python happens to process the first import of the config module. Instead, consider implementing a function in the module that returns a new or cached config object on demand.</source>
          <target state="translated">使用后一种方法来控制何时实际加载配置，最好不要在配置模块名称空间的顶级实例化该配置。这样可以避免在Python刚巧处理config模块的首次导入时，加载配置文件可能引起的任何问题性副作用。而是考虑在模块中实现一个函数，该函数可按需返回新的或缓存的配置对象。</target>
        </trans-unit>
        <trans-unit id="b5f1527e2c0bfbc4f9d7a666a48de4fb7afc61f1" translate="yes" xml:space="preserve">
          <source>With your &lt;code&gt;wsgi.py&lt;/code&gt; file in place, it is time to configure uWSGI. Start by creating a simple &lt;code&gt;uwsgi.ini&lt;/code&gt; file. In general, you shouldn&amp;rsquo;t commit this file to source control; it should be generated from a template by your deployment toolchain according to the target environment (number of CPUs, etc.).</source>
          <target state="translated">有了您的 &lt;code&gt;wsgi.py&lt;/code&gt; 到位文件，是时候配置uWSGI。首先创建一个简单的 &lt;code&gt;uwsgi.ini&lt;/code&gt; 文件。通常，您不应该将此文件提交到源代码管理中。它应该由部署工具链根据目标环境（CPU的数量等）从模板生成。</target>
        </trans-unit>
        <trans-unit id="e301725039830fd5643f844501d991e2bfcf65f0" translate="yes" xml:space="preserve">
          <source>Works great with async libraries like gevent</source>
          <target state="translated">与gevent等异步库配合使用,效果很好。</target>
        </trans-unit>
        <trans-unit id="ecf378e8acef00c8d6949f4d777fbf1a330ec53e" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;#falcon.testing.simulate_request&quot;&gt;&lt;code&gt;falcon.testing.simulate_request()&lt;/code&gt;&lt;/a&gt; to perform a WSGI request directly against &lt;code&gt;self.app&lt;/code&gt;. Equivalent to:</source>
          <target state="translated">包装&lt;a href=&quot;#falcon.testing.simulate_request&quot;&gt; &lt;code&gt;falcon.testing.simulate_request()&lt;/code&gt; &lt;/a&gt;以直接针对 &lt;code&gt;self.app&lt;/code&gt; 执行WSGI请求。相当于：</target>
        </trans-unit>
        <trans-unit id="c3ec58ae1a794690dd49ba22c513f79c4665ddd0" translate="yes" xml:space="preserve">
          <source>Wraps an iterable to ensure its &lt;code&gt;close()&lt;/code&gt; method is called.</source>
          <target state="translated">包装迭代器以确保调用其 &lt;code&gt;close()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7f5d670b18473c3fc9caf5bd991dd42ae6966dde" translate="yes" xml:space="preserve">
          <source>Wraps the given &lt;code&gt;iterable&lt;/code&gt; in an iterator utilizing a &lt;code&gt;for&lt;/code&gt; loop as illustrated in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#the-server-gateway-side&quot;&gt;the PEP-3333 server/gateway side example&lt;/a&gt;. Finally, if the iterable has a &lt;code&gt;close()&lt;/code&gt; method, it is called upon exception or exausting iteration.</source>
          <target state="translated">如&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#the-server-gateway-side&quot;&gt;PEP-3333服务器/网关端示例&lt;/a&gt;所示，使用 &lt;code&gt;for&lt;/code&gt; 循环将给定的 &lt;code&gt;iterable&lt;/code&gt; 包装在迭代器中。最后，如果iterable具有 &lt;code&gt;close()&lt;/code&gt; 方法，则在异常或实例化迭代时调用它。</target>
        </trans-unit>
        <trans-unit id="630f5f95d6ec652e020b684565b2492cfb456439" translate="yes" xml:space="preserve">
          <source>Write an error message to the server&amp;rsquo;s log.</source>
          <target state="translated">将错误消息写入服务器的日志。</target>
        </trans-unit>
        <trans-unit id="63dbb48f79311b945d143d6838d8a92702053301" translate="yes" xml:space="preserve">
          <source>Xcode Command Line Tools are required to compile Cython. Install them with this command:</source>
          <target state="translated">编译Cython需要Xcode命令行工具。用这个命令安装它们。</target>
        </trans-unit>
        <trans-unit id="f60f75a250258dedcf5016aa5cc04c550b8f8a79" translate="yes" xml:space="preserve">
          <source>You can also create a middleware component to automatically check out database connections for each request, but this can make it harder to track down errors, or to tune for the needs of individual requests.</source>
          <target state="translated">你也可以创建一个中间件组件,为每个请求自动检查出数据库连接,但这可能会增加跟踪错误的难度,或者针对单个请求的需求进行调整。</target>
        </trans-unit>
        <trans-unit id="980a90aa68dc0e276f956287011d35fe5c025d46" translate="yes" xml:space="preserve">
          <source>You can also instruct the client to remove a cookie with the &lt;a href=&quot;request_and_response#falcon.Response.unset_cookie&quot;&gt;&lt;code&gt;unset_cookie()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">您还可以使用&lt;a href=&quot;request_and_response#falcon.Response.unset_cookie&quot;&gt; &lt;code&gt;unset_cookie()&lt;/code&gt; &lt;/a&gt;方法指示客户端删除cookie ：</target>
        </trans-unit>
        <trans-unit id="2845239ff9c2d9cb3c23b6852cba1e1aae550d6e" translate="yes" xml:space="preserve">
          <source>You can implement this sort of API by simply using two Python classes, one to represent a single resource, and another to represent the collection of said resources. It is common to place both classes in the same module (see also &lt;a href=&quot;tutorial#tutorial-serving-images&quot;&gt;this section of the tutorial&lt;/a&gt;.)</source>
          <target state="translated">您可以通过简单地使用两个Python类来实现这种API，一个类代表一个资源，另一个类代表所述资源的集合。通常将两个类放在同一模块中（另请参见&lt;a href=&quot;tutorial#tutorial-serving-images&quot;&gt;本节内容&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d14a2d35bb07bdbd0f3e8b7418efbcaa540d26c7" translate="yes" xml:space="preserve">
          <source>You can implement this sort of API by simply using two Python classes, one to represent a single resource, and another to represent the collection of said resources. It is common to place both classes in the same module.</source>
          <target state="translated">你可以通过简单地使用两个 Python 类来实现这种 API,一个代表单个资源,另一个代表上述资源的集合。通常将这两个类放在同一个模块中。</target>
        </trans-unit>
        <trans-unit id="9f735d8674e2de5cfcdbdf00cd9e9f855b2ed552" translate="yes" xml:space="preserve">
          <source>You can inject extra responder kwargs from a hook by adding them to the &lt;em&gt;params&lt;/em&gt; dict passed into the hook. You can also add custom data to the &lt;code&gt;req.context&lt;/code&gt; dict, as a way of passing contextual information around.</source>
          <target state="translated">您可以通过将额外的响应者kwarg添加到传递给该挂钩的&lt;em&gt;param&lt;/em&gt; dict中，从而从该挂钩中注入它们。您还可以将自定义数据添加到 &lt;code&gt;req.context&lt;/code&gt; dict，作为传递上下文信息的一种方式。</target>
        </trans-unit>
        <trans-unit id="4872128f5d4c7b24705019f8d2fe9ccc8b2f137f" translate="yes" xml:space="preserve">
          <source>You can inject extra responder kwargs from a hook by adding them to the &lt;em&gt;params&lt;/em&gt; dict passed into the hook. You can also set custom attributes on the &lt;code&gt;req.context&lt;/code&gt; object, as a way of passing contextual information around:</source>
          <target state="translated">您可以通过将额外的响应者kwarg添加到传递到该挂钩中的&lt;em&gt;params&lt;/em&gt; dict中，从而从该挂钩中注入它们。您还可以在 &lt;code&gt;req.context&lt;/code&gt; 对象上设置自定义属性，以作为传递上下文信息的方式：</target>
        </trans-unit>
        <trans-unit id="536278b7175149e76eeaaf6ea6df40dd2dce2ae6" translate="yes" xml:space="preserve">
          <source>You can manually test changes to the Falcon framework by switching to the directory of the cloned repo and then running pytest:</source>
          <target state="translated">你可以手动测试Falcon框架的变化,切换到克隆的repo目录,然后运行pytest。</target>
        </trans-unit>
        <trans-unit id="968bec380a9070e2422a41503e55a4fa6ef65fec" translate="yes" xml:space="preserve">
          <source>You can now start uWSGI like this:</source>
          <target state="translated">现在你可以像这样启动uWSGI。</target>
        </trans-unit>
        <trans-unit id="0c9d37c044435ad9485949c1e5b3271834115f1f" translate="yes" xml:space="preserve">
          <source>You can of course also set the domain, path and lifetime of the cookie.</source>
          <target state="translated">当然,你也可以设置cookie的域名、路径和寿命。</target>
        </trans-unit>
        <trans-unit id="8213796246cc13c7a664c2b4cff5b6ee3472e803" translate="yes" xml:space="preserve">
          <source>You can run the above example using any WSGI server, such as uWSGI or Gunicorn. For example:</source>
          <target state="translated">你可以使用任何WSGI服务器来运行上面的例子,比如uWSGI或Gunicorn。例如</target>
        </trans-unit>
        <trans-unit id="39fb6ff96745c5f1646439add75c67fd70380190" translate="yes" xml:space="preserve">
          <source>You can use this mixin when defining errors that either should not have a body (as dictated by HTTP standards or common practice), or in the case that a detailed error response may leak information to an attacker.</source>
          <target state="translated">当定义不应该有body的错误时,你可以使用这个mixin(按照HTTP标准或惯例),或者在一个详细的错误响应可能向攻击者泄露信息的情况下。</target>
        </trans-unit>
        <trans-unit id="71a99c75ffb85508225027ca9ac3ee50f1a0c466" translate="yes" xml:space="preserve">
          <source>You could use a tarball, zip file, scp or any other means to get your source onto a server.</source>
          <target state="translated">你可以使用tar球、zip文件、scp或其他任何方式将你的源代码放到服务器上。</target>
        </trans-unit>
        <trans-unit id="9c1f3825ed9f85c82ca1095819f6834f45037bed" translate="yes" xml:space="preserve">
          <source>You may raise an instance of &lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt;&lt;code&gt;falcon.HTTPError&lt;/code&gt;&lt;/a&gt; directly, or use any one of a number of &lt;a href=&quot;../api/errors#predefined-errors&quot;&gt;predefined errors&lt;/a&gt; that are designed to set the response headers and body appropriately for each error type.</source>
          <target state="translated">您可以直接引发&lt;a href=&quot;../api/errors#falcon.HTTPError&quot;&gt; &lt;code&gt;falcon.HTTPError&lt;/code&gt; &lt;/a&gt;实例，也可以使用多种&lt;a href=&quot;../api/errors#predefined-errors&quot;&gt;预定义错误&lt;/a&gt;中的任何一种，这些预定义错误旨在为每种错误类型适当地设置响应标头和正文。</target>
        </trans-unit>
        <trans-unit id="4ab748215e4a08b84f6e6d239604cb6df099862e" translate="yes" xml:space="preserve">
          <source>You might also like to view our &lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;Add-on Catalog&lt;/a&gt;, where you can find a list of add-ons maintained by the community.</source>
          <target state="translated">您可能还想查看我们的&lt;a href=&quot;https://github.com/falconry/falcon/wiki/Add-on-Catalog&quot;&gt;加载项目录&lt;/a&gt;，在这里可以找到社区维护的加载项列表。</target>
        </trans-unit>
        <trans-unit id="68093482c3d1393ed1022814b68c7d5988e22976" translate="yes" xml:space="preserve">
          <source>You might also see warnings about unused functions. You can work around these issues by setting additional Clang C compiler flags as follows:</source>
          <target state="translated">你也可能会看到关于未使用的函数的警告,你可以通过设置额外的Clang C编译器标志来解决这些问题。你可以通过设置额外的Clang C编译器标志来解决这些问题,具体如下。</target>
        </trans-unit>
        <trans-unit id="2ef956ed2f1ddeb4894205c896971bcbe1375f7a" translate="yes" xml:space="preserve">
          <source>You might also try this &lt;a href=&quot;https://streaming-form-data.readthedocs.io/en/latest/&quot;&gt;streaming_form_data&lt;/a&gt; package by Siddhant Goel, or searching PyPI for additional options from the community.</source>
          <target state="translated">您也可以尝试Siddhant Goel的&lt;a href=&quot;https://streaming-form-data.readthedocs.io/en/latest/&quot;&gt;streaming_form_data&lt;/a&gt;软件包，或在PyPI上搜索社区中的其他选项。</target>
        </trans-unit>
        <trans-unit id="a6b49ad2a5fe6075b147d65ca4f46f01b010b179" translate="yes" xml:space="preserve">
          <source>You only need to use the alternate form, &amp;lsquo;bytes */1234&amp;rsquo;, for responses that use the status &amp;lsquo;416 Range Not Satisfiable&amp;rsquo;. In this case, raising &lt;code&gt;falcon.HTTPRangeNotSatisfiable&lt;/code&gt; will do the right thing.</source>
          <target state="translated">对于状态为&amp;ldquo; 416 Range Not Satisfiable&amp;rdquo;的响应，您仅需要使用备用格式&amp;ldquo; bytes * / 1234&amp;rdquo;。在这种情况下，提高 &lt;code&gt;falcon.HTTPRangeNotSatisfiable&lt;/code&gt; 将做正确的事情。</target>
        </trans-unit>
        <trans-unit id="7f91513fb63afe28b5cce9c48866fa360096281f" translate="yes" xml:space="preserve">
          <source>You should get a 404. That&amp;rsquo;s actually OK, because we haven&amp;rsquo;t specified any routes yet. Falcon includes a default 404 response handler that will fire for any requested path for which a route does not exist.</source>
          <target state="translated">您应该得到404。实际上还可以，因为我们尚未指定任何路由。Falcon包括默认的404响应处理程序，该处理程序将针对任何不存在路由的请求路径触发。</target>
        </trans-unit>
        <trans-unit id="6c6ad4a9c30834116292de2f74b288644dff911e" translate="yes" xml:space="preserve">
          <source>You should get back a &lt;code&gt;400 Bad Request&lt;/code&gt; status and a nicely structured error body.</source>
          <target state="translated">您应该返回 &lt;code&gt;400 Bad Request&lt;/code&gt; 状态和结构良好的错误正文。</target>
        </trans-unit>
        <trans-unit id="d979d8dddb74508a627a3baf2396ea37f146b1ad" translate="yes" xml:space="preserve">
          <source>You should now be able to re-run the test and see it succeed:</source>
          <target state="translated">现在你应该可以重新运行测试并看到它成功。</target>
        </trans-unit>
        <trans-unit id="e37f43eaf002095fa4325a2a9e54646343505be8" translate="yes" xml:space="preserve">
          <source>You should now have a working application. Check your uWSGI and NGINX logs for errors if the application does not start.</source>
          <target state="translated">现在你应该有一个可以工作的应用程序。如果应用程序不能启动,请检查uWSGI和NGINX日志是否有错误。</target>
        </trans-unit>
        <trans-unit id="ceea30f0f00a45ae419f410e484e1a6f06df365d" translate="yes" xml:space="preserve">
          <source>You should receive a &lt;code&gt;200 OK&lt;/code&gt; response, including a JSON-encoded representation of the &amp;ldquo;images&amp;rdquo; resource.</source>
          <target state="translated">您应该收到 &lt;code&gt;200 OK&lt;/code&gt; 响应，包括&amp;ldquo;图像&amp;rdquo;资源的JSON编码表示。</target>
        </trans-unit>
        <trans-unit id="d0f6e1d28afc0ac0212f6101df094b071181e3e2" translate="yes" xml:space="preserve">
          <source>You should see a &lt;code&gt;TypeError&lt;/code&gt; as a consequence of adding the &lt;code&gt;storage_path&lt;/code&gt; parameter to &lt;code&gt;Resource.__init__()&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;storage_path&lt;/code&gt; 参数添加到 &lt;code&gt;Resource.__init__()&lt;/code&gt; 导致出现 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90138ddebcca4e1eadaf77570e260b1b6092ea76" translate="yes" xml:space="preserve">
          <source>You will need to expose the &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; instance in some way so that uWSGI can find it. For this tutorial we recommend creating a &lt;code&gt;wsgi.py&lt;/code&gt; file. Modify the logic of the following example file to properly configure your application. Ensure that you expose a variable called &lt;code&gt;application&lt;/code&gt; which is assigned to your &lt;a href=&quot;../api/api#falcon.API&quot;&gt;&lt;code&gt;falcon.API&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">您将需要以某种方式公开&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;实例，以便uWSGI可以找到它。对于本教程，我们建议创建一个 &lt;code&gt;wsgi.py&lt;/code&gt; 文件。修改以下示例文件的逻辑以正确配置您的应用程序。确保您公开一个名为 &lt;code&gt;application&lt;/code&gt; 的变量，该变量已分配给您的&lt;a href=&quot;../api/api#falcon.API&quot;&gt; &lt;code&gt;falcon.API&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="126a3300d6835c9b340758a88a9d1da96964ce06" translate="yes" xml:space="preserve">
          <source>You would attach this hook to an &lt;code&gt;on_post&lt;/code&gt; responder like so:</source>
          <target state="translated">您可以将此钩子附加到 &lt;code&gt;on_post&lt;/code&gt; 响应器上，如下所示：</target>
        </trans-unit>
        <trans-unit id="387a0f004258ddb8e71a64032869344bad02674e" translate="yes" xml:space="preserve">
          <source>Your code is well-tested, with high code coverage.</source>
          <target state="translated">你的代码是经过精心测试的,代码覆盖率高。</target>
        </trans-unit>
        <trans-unit id="606b3dcbbd39e2bb17d50bbae4ee2319f70ce136" translate="yes" xml:space="preserve">
          <source>Zero configuration is needed if you&amp;rsquo;re creating a JSON API. Just access or set the &lt;code&gt;media&lt;/code&gt; attribute as appropriate and let Falcon do the heavy lifting for you.</source>
          <target state="translated">如果要创建JSON API，则需要零配置。只需访问或适当地设置 &lt;code&gt;media&lt;/code&gt; 属性，然后让Falcon为您完成繁重的工作即可。</target>
        </trans-unit>
        <trans-unit id="e5aee47bb3c6f19c802da6b38b1b64eb80952a94" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;#falcon.testing.StartResponseMock&quot;&gt;&lt;code&gt;StartResponseMock&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#falcon.testing.StartResponseMock&quot;&gt; &lt;code&gt;StartResponseMock&lt;/code&gt; 的&lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="e4c56758791cb43e65ce47a0c133ae3cbe2c21a7" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;别名</target>
        </trans-unit>
        <trans-unit id="a29a4e6f49c8665e526a59be66fd37b7baee710d" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;API&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;API&lt;/code&gt; 的别名</target>
        </trans-unit>
        <trans-unit id="b55eaec9da687d675362db4377f1dae56d61f16f" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;falcon.util.structures.Context&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;falcon.util.structures.Context&lt;/code&gt; 的别名</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">bytes</target>
        </trans-unit>
        <trans-unit id="de9c72801733194831e17b9b87aa8e6dbdefbeae" translate="yes" xml:space="preserve">
          <source>can not be converted.</source>
          <target state="translated">不能转换。</target>
        </trans-unit>
        <trans-unit id="c262eb1a29fe5bc38ddeb9c0ee8a09151aa79da6" translate="yes" xml:space="preserve">
          <source>captured_kwargs</source>
          <target state="translated">captured_kwargs</target>
        </trans-unit>
        <trans-unit id="48511e86b4ad8da546c40fcc260597bc3c691395" translate="yes" xml:space="preserve">
          <source>captured_req</source>
          <target state="translated">captured_req</target>
        </trans-unit>
        <trans-unit id="5b8e028110db1e1db225fff0a866cc0279233287" translate="yes" xml:space="preserve">
          <source>captured_resp</source>
          <target state="translated">captured_resp</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="89ffad089c042f31dcc81269da38bef3ca44ab1f" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="translated">datetime</target>
        </trans-unit>
        <trans-unit id="e6efbb61348f24afba1c8ddd30d2ad8be7bcb213" translate="yes" xml:space="preserve">
          <source>datetime.date</source>
          <target state="translated">datetime.date</target>
        </trans-unit>
        <trans-unit id="53910fb46a116dbf1909866b879783e783b61217" translate="yes" xml:space="preserve">
          <source>datetime.datetime</source>
          <target state="translated">datetime.datetime</target>
        </trans-unit>
        <trans-unit id="3f0104c3ae690c900897cfff32dcdbbb5ba029cd" translate="yes" xml:space="preserve">
          <source>datetime.timedelta</source>
          <target state="translated">datetime.timedelta</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">dict</target>
        </trans-unit>
        <trans-unit id="4f7f64c1613218412d7173f07c7407d18b5776a8" translate="yes" xml:space="preserve">
          <source>e.g.:</source>
          <target state="translated">e.g.:</target>
        </trans-unit>
        <trans-unit id="c590afa9bb59191ffab30f223791e82d3fd3e3af" translate="yes" xml:space="preserve">
          <source>falcon</source>
          <target state="translated">falcon</target>
        </trans-unit>
        <trans-unit id="d3ef3ca87c676fc4d7094450194cbf2fa0164ba8" translate="yes" xml:space="preserve">
          <source>falcon.API</source>
          <target state="translated">falcon.API</target>
        </trans-unit>
        <trans-unit id="c958e1f0cced585001e6c74e4a2962395e6b216a" translate="yes" xml:space="preserve">
          <source>falcon.ETag</source>
          <target state="translated">falcon.ETag</target>
        </trans-unit>
        <trans-unit id="843ab9d54797d1e962170059457d1178094557a5" translate="yes" xml:space="preserve">
          <source>falcon.Request</source>
          <target state="translated">falcon.Request</target>
        </trans-unit>
        <trans-unit id="5e79000fed462fd6851eece6c1e777046acd7f08" translate="yes" xml:space="preserve">
          <source>falcon.Response</source>
          <target state="translated">falcon.Response</target>
        </trans-unit>
        <trans-unit id="00f06f73e37d07abc785f9701f81e7470745dd8d" translate="yes" xml:space="preserve">
          <source>falcon.http_error</source>
          <target state="translated">falcon.http_error</target>
        </trans-unit>
        <trans-unit id="3c21b206aadf450b92be33de294904f14a908d0f" translate="yes" xml:space="preserve">
          <source>falcon.media</source>
          <target state="translated">falcon.media</target>
        </trans-unit>
        <trans-unit id="2f1a5b71245f7ce590c3bf1a51bcc88f0b0b3c56" translate="yes" xml:space="preserve">
          <source>falcon.media.validators.jsonschema</source>
          <target state="translated">falcon.media.validators.jsonschema</target>
        </trans-unit>
        <trans-unit id="d5f6b3e61b8a2197513182e229f1b062f0871556" translate="yes" xml:space="preserve">
          <source>falcon.routing</source>
          <target state="translated">falcon.routing</target>
        </trans-unit>
        <trans-unit id="ee982cec8deb0cb1c68ef3bd0c3236199acd49bf" translate="yes" xml:space="preserve">
          <source>falcon.testing</source>
          <target state="translated">falcon.testing</target>
        </trans-unit>
        <trans-unit id="a5667ba70a60a487e5b0a1f2d9e999c755e4263b" translate="yes" xml:space="preserve">
          <source>falcon.uri</source>
          <target state="translated">falcon.uri</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="3a477d7834bb88d2370fd6aed584e6eb35a4add7" translate="yes" xml:space="preserve">
          <source>ing Falcon on Linux with NGINX and uWSGI</source>
          <target state="translated">使用NGINX和uWSGI在Linux上使用Falcon。</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="d30dbe0537c2c09dfccbe31c864115a796a2aba7" translate="yes" xml:space="preserve">
          <source>it was required to be there, or it was found but could not be converted to a &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">它必须存在，或者已找到但无法转换为 &lt;code&gt;UUID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe69f9581bd7a58b5e1c1e60e021f59349fe690f" translate="yes" xml:space="preserve">
          <source>it was required to be there, or it was found but could not be converted to an &lt;code&gt;float&lt;/code&gt;. Also raised if the param&amp;rsquo;s value falls outside the given interval, i.e., the value must be in the interval: min_value &amp;lt;= value &amp;lt;= max_value to avoid triggering an error.</source>
          <target state="translated">它必须存在，或者已找到但无法转换为 &lt;code&gt;float&lt;/code&gt; 。如果参数的值落在给定的间隔之外（即，该值必须在间隔内），则也会提高：min_value &amp;lt;= value &amp;lt;= max_value以避免触发错误。</target>
        </trans-unit>
        <trans-unit id="3d81c4df317bfab85f65c9f2994992354bc6b6d5" translate="yes" xml:space="preserve">
          <source>it was required to be there, or it was found but could not be converted to an &lt;code&gt;int&lt;/code&gt;. Also raised if the param&amp;rsquo;s value falls outside the given interval, i.e., the value must be in the interval: min &amp;lt;= value &amp;lt;= max to avoid triggering an error.</source>
          <target state="translated">它必须存在，或者已找到但无法转换为 &lt;code&gt;int&lt;/code&gt; 。如果参数的值落在给定的时间间隔之外，也将提高该值，即，该值必须在时间间隔之内：min &amp;lt;= value &amp;lt;= max，以避免触发错误。</target>
        </trans-unit>
        <trans-unit id="ebcc670dcb9c4d682ff9d9bccd79201012235e2d" translate="yes" xml:space="preserve">
          <source>it was required to be there, or it was found but could not be converted to an &lt;code&gt;int&lt;/code&gt;. Also raised if the param&amp;rsquo;s value falls outside the given interval, i.e., the value must be in the interval: min_value &amp;lt;= value &amp;lt;= max_value to avoid triggering an error.</source>
          <target state="translated">它必须存在，或者已找到但无法转换为 &lt;code&gt;int&lt;/code&gt; 。如果参数的值落在给定的间隔之外（即，该值必须在间隔内），则也会提高：min_value &amp;lt;= value &amp;lt;= max_value以避免触发错误。</target>
        </trans-unit>
        <trans-unit id="bef4aaaa11015ef79d88f3701f4c69ad690eb4c7" translate="yes" xml:space="preserve">
          <source>iterator</source>
          <target state="translated">iterator</target>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="translated">list</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="786c19c96c9218afc77e1e97cbb2be236ad9cc30" translate="yes" xml:space="preserve">
          <source>params, uri_template), or &lt;code&gt;None&lt;/code&gt; if no route matches the requested path.</source>
          <target state="translated">params，uri_template），如果没有路由与请求的路径匹配，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a454c3eeb05372d65db8974663884adbcdfe0e0b" translate="yes" xml:space="preserve">
          <source>status code e.g. &amp;ldquo;404 Not Found&amp;rdquo;</source>
          <target state="translated">状态代码，例如&amp;ldquo; 404未找到&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3442496b96dd01591a8cd44b1eec1368ab728aba" translate="yes" xml:space="preserve">
          <source>str</source>
          <target state="translated">str</target>
        </trans-unit>
        <trans-unit id="91a58bbf6422870801d8bf676712611df0dc19ca" translate="yes" xml:space="preserve">
          <source>tempfil.es</source>
          <target state="translated">tempfil.es</target>
        </trans-unit>
        <trans-unit id="49f80ea5aacfb5a957337dc906635fccbde446fc" translate="yes" xml:space="preserve">
          <source>tuple</source>
          <target state="translated">tuple</target>
        </trans-unit>
        <trans-unit id="61bca4e1c8e91e5f860b904a0e33a4ac88f252fd" translate="yes" xml:space="preserve">
          <source>tuple of int</source>
          <target state="translated">元组</target>
        </trans-unit>
        <trans-unit id="65fab00dbe412afe5b428b51f6d5d3c7bfccb378" translate="yes" xml:space="preserve">
          <source>unquoted string</source>
          <target state="translated">未引号字符串</target>
        </trans-unit>
        <trans-unit id="7013f74e318b89f5559deba7d2dc1e1ab3b9d133" translate="yes" xml:space="preserve">
          <source>with redirected(stderr=os.devnull):</source>
          <target state="translated">用重定向(stderr=os.devnull)。</target>
        </trans-unit>
        <trans-unit id="31aecd6741069fc1fdae0e4eb1c2a4bd36357d36" translate="yes" xml:space="preserve">
          <source>with this:</source>
          <target state="translated">与此。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
