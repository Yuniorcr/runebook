<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="1de275b3a330a676e1b3a19bf0483a26f7bea910" translate="yes" xml:space="preserve">
          <source>Read and write a subset of YAML for CPAN Meta files</source>
          <target state="translated">读写CPAN元文件的YAML子集。</target>
        </trans-unit>
        <trans-unit id="d3dae8f537b10a514d29cfd0d4064e961135e516" translate="yes" xml:space="preserve">
          <source>Read bzip2 files/buffers</source>
          <target state="translated">读取bzip2文件/缓冲区</target>
        </trans-unit>
        <trans-unit id="c2bc6c064289f3da35d9643e076b2182fbb33d0c" translate="yes" xml:space="preserve">
          <source>Read check compare operation.</source>
          <target state="translated">读取检查比较操作。</target>
        </trans-unit>
        <trans-unit id="5f496354721b34074a6d09386d4dfd90a7648131" translate="yes" xml:space="preserve">
          <source>Read data from the remote server until a line consisting of a single '.'. Any lines starting with '..' will have one of the '.'s removed.</source>
          <target state="translated">从远程服务器读取数据,直到有一行'.'组成。任何以'...'开头的行都会被删除一个'...'。</target>
        </trans-unit>
        <trans-unit id="58cff263782110131a866571e46995cb57864bc1" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; . If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">从文件读取。它使用文件描述符，例如通过调用 &lt;code&gt;POSIX::open&lt;/code&gt; 获得的文件描述符。如果缓冲区 &lt;code&gt;$buf&lt;/code&gt; 不足以进行读取，则Perl将对其进行扩展以为请求腾出空间。</target>
        </trans-unit>
        <trans-unit id="aed9d1fae1d177b75be64cba7887414ab09775c2" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;. If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">从文件读取。它使用文件描述符，例如通过调用 &lt;code&gt;POSIX::open&lt;/code&gt; 获得的文件描述符。如果缓冲区 &lt;code&gt;$buf&lt;/code&gt; 不足以进行读取，则Perl将对其进行扩展以为请求腾出空间。</target>
        </trans-unit>
        <trans-unit id="18cc7e8fd48d963fa396269e4c2ab7dfc690c7a1" translate="yes" xml:space="preserve">
          <source>Read on...</source>
          <target state="translated">继续阅读...</target>
        </trans-unit>
        <trans-unit id="38a567871f2319ef4608911cbaae63388beacceb" translate="yes" xml:space="preserve">
          <source>Read some bytes from the file. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">从文件中读取一些字节。返回实际读取的字节数,文件结束时返回0,错误时返回undef。</target>
        </trans-unit>
        <trans-unit id="928d9235e436434ac3a507c46f10d425ed6c1452" translate="yes" xml:space="preserve">
          <source>Read some bytes from the scalar. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">从标量中读取一些字节。返回实际读取的字节数,文件结束时返回0,错误时返回undef。</target>
        </trans-unit>
        <trans-unit id="6da6ecf1c98213777d74b19843e6892f664218a5" translate="yes" xml:space="preserve">
          <source>Read the</source>
          <target state="translated">阅读</target>
        </trans-unit>
        <trans-unit id="445df6f2b2a25f8116b39a5d89fac539c3d48c64" translate="yes" xml:space="preserve">
          <source>Read the FAQs and documentation specific to the port of perl to your operating system (eg, &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;, &lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt;, ...). These should contain more detailed information on the vagaries of your perl.</source>
          <target state="translated">阅读特定于perl操作系统端口的FAQ和文档（例如&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;，&lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt;等）。这些应该包含有关您的perl变化无常的详细信息。</target>
        </trans-unit>
        <trans-unit id="a3f312a281ee3fabbb4644cfca212e21dc23d819" translate="yes" xml:space="preserve">
          <source>Read the given tar file into memory. The first argument can either be the name of a file or a reference to an already open filehandle (or an IO::Zlib object if it's compressed)</source>
          <target state="translated">将给定的 tar 文件读入内存。第一个参数可以是文件名,也可以是一个已经打开的文件柄的引用(如果是压缩文件,也可以是一个IO::Zlib对象)。</target>
        </trans-unit>
        <trans-unit id="1b74d7333cb35735ec7d211619b3f8a0c7fbd713" translate="yes" xml:space="preserve">
          <source>Read zip files/buffers</source>
          <target state="translated">读取压缩文件/缓冲区</target>
        </trans-unit>
        <trans-unit id="d5283d26eb840638e1f550dc557572ba6542f3d4" translate="yes" xml:space="preserve">
          <source>Read-Only Values</source>
          <target state="translated">只读值</target>
        </trans-unit>
        <trans-unit id="5683a14e485b7046ea3107db40da5d887aa290ef" translate="yes" xml:space="preserve">
          <source>Read-only access to the data in the file.</source>
          <target state="translated">对文件中数据的只读访问。</target>
        </trans-unit>
        <trans-unit id="bdc983681241a5008bf0f2decf61749fdd356f1d" translate="yes" xml:space="preserve">
          <source>Read-only optrees</source>
          <target state="translated">只读选项</target>
        </trans-unit>
        <trans-unit id="cbcc1694c685273c78534f0d3e2cd46541b02c0d" translate="yes" xml:space="preserve">
          <source>Read/Write/Modify Perl/XS typemap files</source>
          <target state="translated">读/写/修改Perl/XS类型图文件。</target>
        </trans-unit>
        <trans-unit id="d7fd01a502310e8357802950d90a33ad1c88b094" translate="yes" xml:space="preserve">
          <source>ReadFile</source>
          <target state="translated">ReadFile</target>
        </trans-unit>
        <trans-unit id="5225f01f4c17d05f03bd8a6c2a2dfc128c7f65d7" translate="yes" xml:space="preserve">
          <source>ReadMe.txt</source>
          <target state="translated">ReadMe.txt</target>
        </trans-unit>
        <trans-unit id="5aee42c0aa7d8176e37f9692354e87f3f5b4679f" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;../perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">众所周知，读者会跳过&lt;a href=&quot;../perlguts&quot;&gt;Perlguts的&lt;/a&gt;重要部分，从而使所有人感到沮丧。</target>
        </trans-unit>
        <trans-unit id="debc59b4b15093cfa12c8a60b65cc716319f2d65" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">众所周知，读者会跳过&lt;a href=&quot;perlguts&quot;&gt;Perlguts的&lt;/a&gt;重要部分，从而给所有人带来很多挫败感。</target>
        </trans-unit>
        <trans-unit id="ecba0bec4829317939306f304d19e964a7a84e1d" translate="yes" xml:space="preserve">
          <source>Reading &lt;code&gt;Devel::Peek&lt;/code&gt; output takes a bit of practise, so let's go through it line by line.</source>
          <target state="translated">阅读 &lt;code&gt;Devel::Peek&lt;/code&gt; 输出需要一些实践，因此让我们逐行进行介绍。</target>
        </trans-unit>
        <trans-unit id="720629d599316203605d35ccc57d80ad0c87c1df" translate="yes" xml:space="preserve">
          <source>Reading an input line does not split it for you. You get to split it to an array yourself. And the split() operator has different arguments than &lt;b&gt;awk&lt;/b&gt;'s.</source>
          <target state="translated">读取输入行不会为您拆分它。您可以自己将其拆分为一个数组。而且split（）运算符的参数不同于&lt;b&gt;awk&lt;/b&gt;的参数。</target>
        </trans-unit>
        <trans-unit id="8d311759432844217fe6bc8debb947ac2204cfa0" translate="yes" xml:space="preserve">
          <source>Reading bgzip files with IO::Uncompress::Gunzip</source>
          <target state="translated">用IO::Uncompress::Gunzip读取bgzip文件。</target>
        </trans-unit>
        <trans-unit id="aca2d568455adb5d39f1f5a67763764982820867" translate="yes" xml:space="preserve">
          <source>Reading from &lt;code&gt;STDIN&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;STDIN&lt;/code&gt; 阅读</target>
        </trans-unit>
        <trans-unit id="43278435f6048011353ab3e1550aec2934094377" translate="yes" xml:space="preserve">
          <source>Reading from STDIN</source>
          <target state="translated">从STDIN阅读</target>
        </trans-unit>
        <trans-unit id="89c5bc3ff84bf2233b585e1ddc78bf444ba92547" translate="yes" xml:space="preserve">
          <source>Reading from a Filehandle and writing to an in-memory buffer</source>
          <target state="translated">从一个Filehandle读取并写入内存缓冲区。</target>
        </trans-unit>
        <trans-unit id="95bcf633adbf815edf186e3fb8ac37d67ee56f62" translate="yes" xml:space="preserve">
          <source>Reading from a file:</source>
          <target state="translated">从文件中读取。</target>
        </trans-unit>
        <trans-unit id="a3daaeaef0f24df245aaa3148b442905754f46bb" translate="yes" xml:space="preserve">
          <source>Reading in a file that you know happens to be encoded in one of the Unicode or legacy encodings does not magically turn the data into Unicode in Perl's eyes. To do that, specify the appropriate layer when opening files</source>
          <target state="translated">读取一个你知道恰好用Unicode或传统编码的文件,并不会在Perl的眼中神奇地将数据变成Unicode。要做到这一点,请在打开文件的时候指定适当的图层</target>
        </trans-unit>
        <trans-unit id="4846fec17a47b45717c157bbd8a0f9bd1ad2e3c9" translate="yes" xml:space="preserve">
          <source>Reading in the whole file at one time is called slurping. It can be useful but it may be a memory hog. Most text file processing can be done a line at a time with Perl's looping constructs.</source>
          <target state="translated">一次性读取整个文件被称为 &quot;啜饮&quot;。它可能很有用,但可能会占用内存。大多数文本文件的处理可以用Perl的循环结构一次一行地完成。</target>
        </trans-unit>
        <trans-unit id="d9ebc55e69603ca376de6c992a9642942d55aa0d" translate="yes" xml:space="preserve">
          <source>Reading/writing bytes from/to :utf8 handles.</source>
          <target state="translated">从:utf8句柄读取/写入字节。</target>
        </trans-unit>
        <trans-unit id="3765f01b49c43d45e4334a57b6fc21c7972c3951" translate="yes" xml:space="preserve">
          <source>Readline Support / History in the Debugger</source>
          <target state="translated">调试器中的读行支持/历史记录</target>
        </trans-unit>
        <trans-unit id="fd63187370525346d69be8508f8b50f415e9e87c" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt; . If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">从压缩文件中读取 &lt;code&gt;$size&lt;/code&gt; 个字节到 &lt;code&gt;$buffer&lt;/code&gt; 。如果未指定 &lt;code&gt;$size&lt;/code&gt; ，则默认值为4096。如果标量 &lt;code&gt;$buffer&lt;/code&gt; 不够大，它将自动扩展。</target>
        </trans-unit>
        <trans-unit id="a58a70a6e50fefa8c4f40ab5e8413ab2cdce14d2" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt;. If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">从压缩文件中读取 &lt;code&gt;$size&lt;/code&gt; 个字节到 &lt;code&gt;$buffer&lt;/code&gt; 。如果未指定 &lt;code&gt;$size&lt;/code&gt; ，则默认值为4096。如果标量 &lt;code&gt;$buffer&lt;/code&gt; 不够大，它将自动扩展。</target>
        </trans-unit>
        <trans-unit id="206a7f5e7297aa5bd7492bad4e008ac4bc46e49d" translate="yes" xml:space="preserve">
          <source>Reads SIZE bytes from a memory segment at ADDR starting at position POS. VAR must be a variable that will hold the data read. Returns true if successful, or false if there is an error. memread() taints the variable.</source>
          <target state="translated">从位置POS开始的ADDR处读取内存段的SIZE字节。VAR必须是一个变量,用来保存读取的数据。memread()会保留这个变量。</target>
        </trans-unit>
        <trans-unit id="799d4c2bbc52577dcbc3f454b2dcc4d5b936f889" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt; . If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">读取一个压缩数据块（压缩块的大小由构造函数中的 &lt;code&gt;Buffer&lt;/code&gt; 选项确定），将其解压缩并将所有未压缩的数据写入 &lt;code&gt;$buffer&lt;/code&gt; 。如果在构造函数中设置了 &lt;code&gt;Append&lt;/code&gt; 参数，则未压缩的数据将附加到 &lt;code&gt;$buffer&lt;/code&gt; 参数。否则 &lt;code&gt;$buffer&lt;/code&gt; 将被覆盖。</target>
        </trans-unit>
        <trans-unit id="2650257dc905190add8fc86376aaa1fd9ceb477d" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt;. If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">读取压缩数据块（压缩块的大小由构造函数中的 &lt;code&gt;Buffer&lt;/code&gt; 选项确定），将其解压缩并将所有未压缩的数据写入 &lt;code&gt;$buffer&lt;/code&gt; 。如果在构造函数中设置了 &lt;code&gt;Append&lt;/code&gt; 参数，则未压缩的数据将附加到 &lt;code&gt;$buffer&lt;/code&gt; 参数中。否则 &lt;code&gt;$buffer&lt;/code&gt; 将被覆盖。</target>
        </trans-unit>
        <trans-unit id="a18e9d62cd14286629fc6e76754c10fff378cc5e" translate="yes" xml:space="preserve">
          <source>Reads a single line.</source>
          <target state="translated">读取单行。</target>
        </trans-unit>
        <trans-unit id="60ee44c28be29184ce4a73c61b1ec7edf4671344" translate="yes" xml:space="preserve">
          <source>Reads are permitted i.e. opened &quot;r&quot; or &quot;w+&quot; (or even &quot;a+&quot; - ick).</source>
          <target state="translated">允许读,即打开 &quot;r &quot;或 &quot;w+&quot;(甚至 &quot;a+&quot;--ick)。</target>
        </trans-unit>
        <trans-unit id="e73f5d1f2a71ec4ec144dc42ca53439f338cb7c6" translate="yes" xml:space="preserve">
          <source>Reads bytes from a file or file-like device. Returns a true value if the read operation was successful. For failure, returns a false value and sets &lt;code&gt;fileLastError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; for the reason for the failure.</source>
          <target state="translated">从文件或类似文件的设备读取字节。如果读取操作成功，则返回true值。对于失败，返回错误值，并为失败原因设置 &lt;code&gt;fileLastError()&lt;/code&gt; 和 &lt;code&gt;$^E&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42f0afdf9d8c38585692746943b6766dbe732c8a" translate="yes" xml:space="preserve">
          <source>Reads from</source>
          <target state="translated">读作</target>
        </trans-unit>
        <trans-unit id="50c8ae4436eb90307a38380dc11b082198b860e7" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; in &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;). See &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&quot;$/&quot; in perlvar&lt;/a&gt;.</source>
          <target state="translated">从其typeglob包含在EXPR中的文件句柄中进行读取（如果未提供EXPR，则从 &lt;code&gt;*ARGV&lt;/code&gt; 中进行读取）。在标量上下文中，每个调用读取并返回下一行，直到到达文件末尾，随后的后续调用返回&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;。在列表上下文中，读取直到到达文件末尾并返回行列表。请注意，&amp;ldquo;线&amp;rdquo;的概念，这里使用的是不管你也许已经定义的&lt;a href=&quot;perlvar#%24%2F&quot;&gt; &lt;code&gt;$/&lt;/code&gt; &lt;/a&gt;（或 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 中&lt;a href=&quot;english&quot;&gt;英文&lt;/a&gt;）。请参见&lt;a href=&quot;perlvar#%24%2F&quot;&gt;perlvar中的&amp;ldquo; $ /&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2dc0c11f98a08996cb17f6c2572663d3f74f26f" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">从typeglob包含在EXPR中的文件句柄中读取（如果未提供EXPR，则从 &lt;code&gt;*ARGV&lt;/code&gt; 中读取）。在标量上下文中，每个调用读取并返回下一行，直到到达文件末尾，随后的调用返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。在列表上下文中，读取直到到达文件末尾并返回行列表。请注意，此处使用的&amp;ldquo;行&amp;rdquo;的概念是您可以用 &lt;code&gt;$/&lt;/code&gt; 或 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 定义的。请参阅&lt;a href=&quot;perlvar#%24%2f&quot;&gt;$ /在perlvar中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b4d819b245f8997ea46d716718b7b5137afee52" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">从typeglob包含在EXPR中的文件句柄中读取（如果未提供EXPR，则从 &lt;code&gt;*ARGV&lt;/code&gt; 中读取）。在标量上下文中，每个调用读取并返回下一行，直到到达文件末尾，随后的调用返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。在列表上下文中，读取直到到达文件末尾并返回行列表。请注意，此处使用的&amp;ldquo;行&amp;rdquo;的概念是您可以用 &lt;code&gt;$/&lt;/code&gt; 或 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 定义的。请参阅&lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$ /在perlvar中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="213d34b4c41155066cb47829608b83bcac6c4f80" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">读入下一个要分类的文本块，并将其附加到&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&amp;ldquo; PL_parser-&amp;gt; linestr&amp;rdquo;上&lt;/a&gt;。当词法分析代码查看当前块的末尾并希望了解更多信息时，应调用此方法。这是通常的，但不是必需的，此时词法已消耗掉了当前块的全部。</target>
        </trans-unit>
        <trans-unit id="5686d4cf607b2427e345e3a17783aa2d6f48772a" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">读取下一个要分类的文本块，并将其附加到&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr&lt;/a&gt;。当词法分析代码查看当前块的末尾并希望了解更多信息时，应调用此方法。这是通常的，但不是必需的，此时词法已消耗掉了当前块的全部。</target>
        </trans-unit>
        <trans-unit id="0e502d5f8379d8469e98c1ca45f22f6d653d22e2" translate="yes" xml:space="preserve">
          <source>Reads into</source>
          <target state="translated">读成</target>
        </trans-unit>
        <trans-unit id="b4633f7897c4780006d0f6007b4afc7f1f655f8b" translate="yes" xml:space="preserve">
          <source>Reads into &lt;code&gt;len&lt;/code&gt; the offset from &lt;code&gt;SvPVX&lt;/code&gt; back to the true start of the allocated buffer, which will be non-zero if &lt;code&gt;sv_chop&lt;/code&gt; has been used to efficiently remove characters from start of the buffer. Implemented as a macro, which takes the address of &lt;code&gt;len&lt;/code&gt;, which must be of type &lt;code&gt;STRLEN&lt;/code&gt;. Evaluates &lt;code&gt;sv&lt;/code&gt; more than once. Sets &lt;code&gt;len&lt;/code&gt; to 0 if &lt;code&gt;SvOOK(sv)&lt;/code&gt; is false.</source>
          <target state="translated">读入 &lt;code&gt;len&lt;/code&gt; 从偏移 &lt;code&gt;SvPVX&lt;/code&gt; 回到分配的缓冲区，这将是非零值，如果真正开始 &lt;code&gt;sv_chop&lt;/code&gt; 已被用于有效地从缓冲器的开始删除字符。实现为一个宏，该宏采用 &lt;code&gt;len&lt;/code&gt; 的地址，该地址必须为 &lt;code&gt;STRLEN&lt;/code&gt; 类型。多次评估 &lt;code&gt;sv&lt;/code&gt; 。如果 &lt;code&gt;SvOOK(sv)&lt;/code&gt; 为false，则将 &lt;code&gt;len&lt;/code&gt; 设置为0 。</target>
        </trans-unit>
        <trans-unit id="a7c14344c48adcd52ee096bd40b5d4a622c40abc" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">以Perl样式读取当前正在词典化的文本中的可选空格。空格可以包括普通的空格字符和Perl样式的注释。如果遇到 &lt;code&gt;#line&lt;/code&gt; 指令，将对其进行处理。&lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&amp;ldquo; PL_parser-&amp;gt; bufptr&amp;rdquo;&lt;/a&gt;移动到空格之外，以使其指向非空格字符（或输入文本的末尾）。</target>
        </trans-unit>
        <trans-unit id="0c3577c9b285cf2945e65a6e8c5f9d480cfc5c7d" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">以Perl样式读取当前正在词典化的文本中的可选空格。空格可以包括普通的空格字符和Perl样式的注释。如果遇到 &lt;code&gt;#line&lt;/code&gt; 指令，将对其进行处理。&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt;移到空格之外，以便指向非空格字符（或输入文本的末尾）。</target>
        </trans-unit>
        <trans-unit id="974a6462ab03e1de1ff9f8fd2c232affa76846af" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. &lt;a href=&quot;#shmread-ID%2CVAR%2CPOS%2CSIZE&quot;&gt;&lt;code&gt;shmread&lt;/code&gt;&lt;/a&gt; taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;&quot;SysV IPC&quot; in perlipc&lt;/a&gt; and the documentation for &lt;a href=&quot;IPC::SysV&quot;&gt;&lt;code&gt;IPC::SysV&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;IPC::Shareable&quot;&gt;&lt;code&gt;IPC::Shareable&lt;/code&gt;&lt;/a&gt; module from CPAN.</source>
          <target state="translated">读取或写入系统V共享内存段ID，从位置POS开始，大小为SIZE，方法是将其附加，复制/输出和从中分离出来。读取时，VAR必须是将保存读取数据的变量。写入时，如果STRING太长，则仅使用SIZE个字节；如果STRING太短，则将null写入以填充SIZE字节。如果成功，则返回true；如果错误，则返回false。&lt;a href=&quot;#shmread-ID%2CVAR%2CPOS%2CSIZE&quot;&gt; &lt;code&gt;shmread&lt;/code&gt; &lt;/a&gt;污染变量。另请参见&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipc中的&amp;ldquo; SysV IPC&amp;rdquo;&lt;/a&gt;和来自CPAN的&lt;a href=&quot;IPC::SysV&quot;&gt; &lt;code&gt;IPC::SysV&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;IPC::Shareable&quot;&gt; &lt;code&gt;IPC::Shareable&lt;/code&gt; &lt;/a&gt;模块的文档。</target>
        </trans-unit>
        <trans-unit id="8320a729c06e516aca0a96e512d594788146ecaf" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">通过大小为SIZE的System V共享内存段ID的读取或写入操作，方法是对其进行附着，复制/输出以及从中分离来进行读取。读取时，VAR必须是将保存读取数据的变量。写入时，如果STRING太长，则仅使用SIZE个字节；如果STRING太短，则将null写入以填充SIZE字节。如果成功，则返回true；如果错误，则返回false。shmread（）污染变量。另请参见&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipc中的SysV IPC&lt;/a&gt;， &lt;code&gt;IPC::SysV&lt;/code&gt; 和CPAN中的 &lt;code&gt;IPC::Shareable&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="f125d7e184df479fec94e499e44324e6ceb7098a" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">通过大小为SIZE的System V共享内存段ID的读取或写入操作，方法是对其进行附着，复制/输出以及从中分离来进行读取。读取时，VAR必须是将保存读取数据的变量。写入时，如果STRING太长，则仅使用SIZE个字节；如果STRING太短，则将null写入以填充SIZE字节。如果成功，则返回true；如果错误，则返回false。shmread（）污染变量。另请参见&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipc中的SysV IPC&lt;/a&gt;， &lt;code&gt;IPC::SysV&lt;/code&gt; 和CPAN中的 &lt;code&gt;IPC::Shareable&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="ea52dbfee11677b27a8ef60e0a8aad94aefd05ca" translate="yes" xml:space="preserve">
          <source>Reads regardless of lock.</source>
          <target state="translated">无论是否锁定,都可以读取。</target>
        </trans-unit>
        <trans-unit id="ff3932830db44982eec2ae215d9491c4fc84e2b9" translate="yes" xml:space="preserve">
          <source>Reads the YAML stream from a file instead of a string.</source>
          <target state="translated">从文件中读取YAML流而不是字符串。</target>
        </trans-unit>
        <trans-unit id="b5f50fa24a3e4fd3d77314b2073891ffb95299e6" translate="yes" xml:space="preserve">
          <source>Reads the contents of</source>
          <target state="translated">读取</target>
        </trans-unit>
        <trans-unit id="c0ef207c7fee9445bbf063cb6e3bc97ad3d05a6b" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt; , compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">读取 &lt;code&gt;$input&lt;/code&gt; 的内容，对其进行压缩，然后将压缩后的数据写入 &lt;code&gt;$output&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6f7764f30fcaf78fc4802def743662a39097660" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt;, compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="translated">读取 &lt;code&gt;$input&lt;/code&gt; 的内容，对其进行压缩，然后将压缩后的数据写入 &lt;code&gt;$output&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcbd8069c4dba18061616ddc8229fc59e4a96a91" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;&quot;lex_peek_unichar&quot;&lt;/a&gt; instead.</source>
          <target state="translated">读取当前被词法化的文本中的下一个（Unicode）字符。返回读取的字符的代码点（无符号整数值），并将&lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&amp;ldquo; PL_parser-&amp;gt; bufptr&amp;rdquo;&lt;/a&gt;移到字符后；如果词法到达输入文本的末尾，则返回-1。要非破坏性地检查下一个字符，请改用&lt;a href=&quot;#lex_peek_unichar&quot;&gt;&amp;ldquo; lex_peek_unichar&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69012285115dba7938e88e4e1d96760f57b6f1cd" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt; instead.</source>
          <target state="translated">读取当前被词法化的文本中的下一个（Unicode）字符。返回所读取字符的代码点（无符号整数值），并将&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt;移过该字符，或者如果lexing到达输入文本的末尾，则返回-1。要非破坏性地检查下一个字符，请改用&lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91c6ed682ed41c74c87caf67fe452fd0fd42fdad" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt; .</source>
          <target state="translated">将压缩文件的下一行读入 &lt;code&gt;$line&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e29fead37da1b87fbe62597de531632059dc6ee8" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt;.</source>
          <target state="translated">将压缩文件的下一行读入 &lt;code&gt;$line&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20f7c17840218f6790c690d1641eb71144f6c802" translate="yes" xml:space="preserve">
          <source>Real elapsed time &quot;wallclock seconds&quot;.</source>
          <target state="translated">实际经过的时间 &quot;挂钟秒&quot;。</target>
        </trans-unit>
        <trans-unit id="aec77234378ed55865902c265252eec7cd62f206" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">实数。例如 &lt;code&gt;3.14&lt;/code&gt; ， &lt;code&gt;-6.23E24&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="079d6b47b5dbd9b4acf74037b87b5594290349ba" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt;, &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">实数。例如 &lt;code&gt;3.14&lt;/code&gt; ， &lt;code&gt;-6.23E24&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="76f20337385d20643255669a22fe71db0ac20c35" translate="yes" xml:space="preserve">
          <source>Real numbers (floats and doubles) are in native machine format only. Due to the multiplicity of floating-point formats and the lack of a standard &quot;network&quot; representation for them, no facility for interchange has been made. This means that packed floating-point data written on one machine may not be readable on another, even if both use IEEE floating-point arithmetic (because the endianness of the memory representation is not part of the IEEE spec). See also &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">实数（浮点数和双精度数）仅采用本机格式。由于浮点格式的多样性以及它们缺乏标准的&amp;ldquo;网络&amp;rdquo;表示形式，因此尚未实现互换性。这意味着写在一台机器上的打包浮点数据可能无法在另一台机器上读取，即使它们都使用IEEE浮点算术（因为存储器表示的字节序不是IEEE规范的一部分）。另请参见&lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="511f764d325082297dba12502ae4d85c90f1ad3d" translate="yes" xml:space="preserve">
          <source>Real numbers (floats and doubles) are in native machine format only. Due to the multiplicity of floating-point formats and the lack of a standard &quot;network&quot; representation for them, no facility for interchange has been made. This means that packed floating-point data written on one machine may not be readable on another, even if both use IEEE floating-point arithmetic (because the endianness of the memory representation is not part of the IEEE spec). See also &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">实数（浮点数和双精度数）仅采用本机格式。由于浮点格式的多样性以及它们缺乏标准的&amp;ldquo;网络&amp;rdquo;表示形式，因此尚未实现互换性。这意味着写在一台机器上的打包浮点数据可能无法在另一台机器上读取，即使它们都使用IEEE浮点算术（因为存储器表示的字节序不是IEEE规范的一部分）。另请参见&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="345756ac5d37feff0f0546c1865e36b9fef67964" translate="yes" xml:space="preserve">
          <source>Real-valued asin and acos</source>
          <target state="translated">实值asin和acos</target>
        </trans-unit>
        <trans-unit id="98eae458347524e0a37c19eccffdef33a86d012d" translate="yes" xml:space="preserve">
          <source>Reallocates the lexer buffer (&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt;) to accommodate at least &lt;code&gt;len&lt;/code&gt; octets (including terminating &lt;code&gt;NUL&lt;/code&gt;). Returns a pointer to the reallocated buffer. This is necessary before making any direct modification of the buffer that would increase its length. &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;&quot;lex_stuff_pvn&quot;&lt;/a&gt; provides a more convenient way to insert text into the buffer.</source>
          <target state="translated">重新&lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;分配&lt;/a&gt;词法分析器缓冲区（&amp;ldquo; PL_parser-&amp;gt; linestr&amp;rdquo;）以容纳至少 &lt;code&gt;len&lt;/code&gt; 个八位字节（包括终止 &lt;code&gt;NUL&lt;/code&gt; ）。返回指向重新分配的缓冲区的指针。在对缓冲区进行任何直接修改以增加其长度之前，这是必需的。&lt;a href=&quot;#lex_stuff_pvn&quot;&gt;&amp;ldquo; lex_stuff_pvn&amp;rdquo;&lt;/a&gt;提供了一种将文本插入缓冲区的更方便的方法。</target>
        </trans-unit>
        <trans-unit id="cabe4e85411c8ef34282f94190186b8b9fc58c2f" translate="yes" xml:space="preserve">
          <source>Reallocates the lexer buffer (&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;) to accommodate at least</source>
          <target state="translated">重新&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;分配&lt;/a&gt;词法分析器缓冲区（PL_parser-&amp;gt; linestr）以至少容纳</target>
        </trans-unit>
        <trans-unit id="6938dd783f19a2f3db9807cf29082d79ed6cb489" translate="yes" xml:space="preserve">
          <source>Reallocation</source>
          <target state="translated">Reallocation</target>
        </trans-unit>
        <trans-unit id="61aa9bbb4c0a00690da2fb1168771f641dccdbf1" translate="yes" xml:space="preserve">
          <source>Reallocation too large: %x</source>
          <target state="translated">重新分配过大:%x</target>
        </trans-unit>
        <trans-unit id="4190f114778ebce2a04705901ceb6f8314011d5a" translate="yes" xml:space="preserve">
          <source>Really</source>
          <target state="translated">Really</target>
        </trans-unit>
        <trans-unit id="9705f19cb29576c25ae7985604008a2d57721c53" translate="yes" xml:space="preserve">
          <source>Really Symbolic Calculator</source>
          <target state="translated">真正的符号计算器</target>
        </trans-unit>
        <trans-unit id="66af3b687388d0a216b97c12ae6eef0ac4e6badc" translate="yes" xml:space="preserve">
          <source>Really means this:</source>
          <target state="translated">真的是这个意思。</target>
        </trans-unit>
        <trans-unit id="811ca5b8b081194af2cb6112878b04c438c79ce4" translate="yes" xml:space="preserve">
          <source>Really really odious function to implement. Returns absolute name of file which would have &lt;code&gt;name&lt;/code&gt; if CWD were &lt;code&gt;dir&lt;/code&gt; . &lt;code&gt;Dir&lt;/code&gt; defaults to the current dir.</source>
          <target state="translated">真的很可恶的功能要实现。返回文件的绝对名称，如果CWD为 &lt;code&gt;dir&lt;/code&gt; ，则将具有 &lt;code&gt;name&lt;/code&gt; 。 &lt;code&gt;Dir&lt;/code&gt; 默认为当前目录。</target>
        </trans-unit>
        <trans-unit id="6b196766d3f2e5fe326d267fa0e8dbb283269b53" translate="yes" xml:space="preserve">
          <source>Really really odious function to implement. Returns absolute name of file which would have &lt;code&gt;name&lt;/code&gt; if CWD were &lt;code&gt;dir&lt;/code&gt;. &lt;code&gt;Dir&lt;/code&gt; defaults to the current dir.</source>
          <target state="translated">真的很可恶的功能要实现。返回文件的绝对名称，如果CWD为 &lt;code&gt;dir&lt;/code&gt; ，则将具有 &lt;code&gt;name&lt;/code&gt; 。 &lt;code&gt;Dir&lt;/code&gt; 默认为当前目录。</target>
        </trans-unit>
        <trans-unit id="e7f09e464378ff3e2cda54610b59653e4b6a4242" translate="yes" xml:space="preserve">
          <source>Rearranged slightly by Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl&amp;gt; to put less emphasis on yield().</source>
          <target state="translated">伊丽莎白&amp;middot;马蒂森（Elizabeth Mattijsen）&amp;lt;liz@dijkmat.nl&amp;gt;对其进行了稍许重新排列，以减少对yield（）的重视。</target>
        </trans-unit>
        <trans-unit id="8b1549347e4087fcd87d6c01881ced2f24ad2286" translate="yes" xml:space="preserve">
          <source>Rearranged slightly by Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl&amp;lt;gt&amp;gt; to put less emphasis on yield().</source>
          <target state="translated">伊丽莎白&amp;middot;马蒂森（Elizabeth Mattijsen）&amp;lt;liz@dijkmat.nl &amp;lt;&amp;gt;&amp;gt;进行了稍许重新排列，以减少对yield（）的重视。</target>
        </trans-unit>
        <trans-unit id="5c5705151cccd0f7888f60304194ae2c9cd9a3ff" translate="yes" xml:space="preserve">
          <source>Reasonable effort was made to make this module efficient. Nevertheless, changing the size of a record in the middle of a large file will always be fairly slow, because everything after the new record must be moved.</source>
          <target state="translated">为了使这个模块高效,我们做出了合理的努力。然而,在一个大文件中改变记录的大小总是相当缓慢,因为新记录之后的所有东西都必须被移动。</target>
        </trans-unit>
        <trans-unit id="0b2e87d53c1bd4d2970bb9abec1535fdbf6be844" translate="yes" xml:space="preserve">
          <source>Reassign a list of disk blocks to the disk's spare-block pool. &lt;code&gt;$opOutBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$pInBuf&lt;/code&gt; should be a &lt;code&gt;REASSIGN_BLOCKS&lt;/code&gt; data structure:</source>
          <target state="translated">将磁盘块列表重新分配给磁盘的备用块池。 &lt;code&gt;$opOutBuf&lt;/code&gt; 应该是 &lt;code&gt;[]&lt;/code&gt; 。 &lt;code&gt;$pInBuf&lt;/code&gt; 应该是 &lt;code&gt;REASSIGN_BLOCKS&lt;/code&gt; 数据结构：</target>
        </trans-unit>
        <trans-unit id="366a2da021c72ceccf726ee373e11b71a20bf943" translate="yes" xml:space="preserve">
          <source>Rebase dll's with the global rebase database after installation.</source>
          <target state="translated">安装后用全局的rebase数据库重垒dll。</target>
        </trans-unit>
        <trans-unit id="33fbef776bfe0b931e07cfc875995536b06a1504" translate="yes" xml:space="preserve">
          <source>Recall that Perl recognizes an extension to UTF-8 that can encode code points larger than the ones defined by Unicode, which are 0..0x10FFFF.</source>
          <target state="translated">回想一下,Perl承认UTF-8的扩展,它可以编码比Unicode定义的代码点大的代码点,即0...0x10FFFF。</target>
        </trans-unit>
        <trans-unit id="b3679c3f6c1d56464e9b8199c035d6cb387d84b7" translate="yes" xml:space="preserve">
          <source>Recall that the usual method of determining the type of scalar you have is to use &lt;code&gt;Sv*OK&lt;/code&gt; macros. Because a scalar can be both a number and a string, usually these macros will always return TRUE and calling the &lt;code&gt;Sv*V&lt;/code&gt; macros will do the appropriate conversion of string to integer/double or integer/double to string.</source>
          <target state="translated">回想一下，确定标量类型的通常方法是使用 &lt;code&gt;Sv*OK&lt;/code&gt; 宏。因为标量既可以是数字，也可以是字符串，所以通常这些宏将始终返回TRUE，并且调用 &lt;code&gt;Sv*V&lt;/code&gt; 宏将可以将字符串正确转换为整数/双精度或整数/双精度至字符串。</target>
        </trans-unit>
        <trans-unit id="697aa894ae3557d90e8ed57f819aed04622ff78d" translate="yes" xml:space="preserve">
          <source>Recall that which of</source>
          <target state="translated">回顾一下,哪些</target>
        </trans-unit>
        <trans-unit id="ec663ccb44dacf5122cda8bcd99fadf939083b21" translate="yes" xml:space="preserve">
          <source>Recall that which of &lt;code&gt;yes-pattern&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; actually matches is already determined. The ordering of the matches is the same as for the chosen subexpression.</source>
          <target state="translated">回想一下，是的 &lt;code&gt;yes-pattern&lt;/code&gt; 还是 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; 实际上已经确定。匹配的顺序与所选子表达式的顺序相同。</target>
        </trans-unit>
        <trans-unit id="d263055fde281ba8a2782128f5b26bfb60c6278f" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive &lt;code&gt;$length&lt;/code&gt; characters of data into &lt;code&gt;$buffer&lt;/code&gt; from the specified socket. &lt;code&gt;$buffer&lt;/code&gt; will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if socket's protocol supports this; returns an empty string otherwise. If there's an error, returns &lt;code&gt;undef&lt;/code&gt;. This call is actually implemented in terms of the &lt;code&gt;recvfrom(2)&lt;/code&gt; system call.</source>
          <target state="translated">在套接字上接收消息。尝试从指定的套接字将 &lt;code&gt;$length&lt;/code&gt; 字符的数据接收到 &lt;code&gt;$buffer&lt;/code&gt; 。 &lt;code&gt;$buffer&lt;/code&gt; 将增长或缩小到实际读取的长度。与具有相同名称的系统调用使用相同的标志。如果套接字的协议支持，则返回发送者的地址。否则返回一个空字符串。如果有错误，则返回 &lt;code&gt;undef&lt;/code&gt; 。该调用实际上是根据 &lt;code&gt;recvfrom(2)&lt;/code&gt; 系统调用实现的。</target>
        </trans-unit>
        <trans-unit id="baa982fd4e6e1dcbe436dae28b9ec1d7a59a9b35" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of recvfrom(2) system call. See &lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">在套接字上接收消息。尝试从指定的SOCKET文件句柄将数据的LENGTH个字符接收到变量SCALAR中。SCALAR将增长或缩小到实际读取的长度。与具有相同名称的系统调用使用相同的标志。如果SOCKET的协议支持，则返回发送者的地址。否则返回一个空字符串。如果有错误，则返回未定义的值。该调用实际上是根据recvfrom（2）系统调用实现的。有关示例，请参见&lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;perlipc中的UDP：消息传递&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f25c6e85b1574838eeb148ca7e9557ca09fab6e8" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of recvfrom(2) system call. See &lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">在套接字上接收消息。尝试从指定的SOCKET文件句柄将数据的LENGTH个字符接收到变量SCALAR中。SCALAR将增长或缩小到实际读取的长度。与具有相同名称的系统调用使用相同的标志。如果SOCKET的协议支持，则返回发送者的地址。否则返回一个空字符串。如果有错误，则返回未定义的值。该调用实际上是根据recvfrom（2）系统调用实现的。有关示例，请参见&lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;perlipc中的UDP：消息传递&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="831f33025bc87648839d175b744e05ef47188610" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of the &lt;a href=&quot;http://man.he.net/man2/recvfrom&quot;&gt;recvfrom(2)&lt;/a&gt; system call. See &lt;a href=&quot;perlipc#UDP%3A-Message-Passing&quot;&gt;&quot;UDP: Message Passing&quot; in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">在套接字上接收消息。尝试从指定的SOCKET文件句柄将数据的LENGTH个字符接收到变量SCALAR中。 SCALAR将增长或缩小到实际读取的长度。与具有相同名称的系统调用使用相同的标志。如果SOCKET的协议支持，则返回发送者的地址。否则返回一个空字符串。如果有错误，则返回未定义的值。该调用实际上是根据&lt;a href=&quot;http://man.he.net/man2/recvfrom&quot;&gt;recvfrom（2）&lt;/a&gt;系统调用实现的。有关示例，请参见&lt;a href=&quot;perlipc#UDP%3A-Message-Passing&quot;&gt;perlipc中的&amp;ldquo; UDP：消息传递&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb0fdbf19a5aad7a7c626acf2e170a45e9945622" translate="yes" xml:space="preserve">
          <source>Recent additions and current maintenance by Paul Evans, &amp;lt;leonerd@leonerd.org.uk&amp;gt;.</source>
          <target state="translated">Paul Evans的最新添加内容和当前维护，&amp;lt;leonerd@leonerd.org.uk&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="34eaa50bdc006fd02951d60039d068fbfe490ffb" translate="yes" xml:space="preserve">
          <source>Recent changes in this release, especially incompatibilities</source>
          <target state="translated">该版本中的最新变化,尤其是不兼容的地方。</target>
        </trans-unit>
        <trans-unit id="ce746d3f125725bd67a16fc76426e418eb2553c2" translate="yes" xml:space="preserve">
          <source>Recent perl test suite is quite memory hungry. In addition to the comments above on memory limitations it is also worth checking for _CEE_RUNOPTS in your environment. Perl now has (in miniperlmain.c) a C #pragma to set CEE run options, but the environment variable wins.</source>
          <target state="translated">最近的perl测试套件相当耗费内存。除了上面关于内存限制的评论外,还值得检查环境中的_CEE_RUNOPTS。Perl现在有(在miniperlmain.c中)一个C #pragma来设置CEE运行选项,但环境变量获胜。</target>
        </trans-unit>
        <trans-unit id="cd809045ecd1f6fec2192a41771410596322bb48" translate="yes" xml:space="preserve">
          <source>Recent versions of</source>
          <target state="translated">最近的版本</target>
        </trans-unit>
        <trans-unit id="895baf2f2b923b6b05ff0ce7fe4004e464717b54" translate="yes" xml:space="preserve">
          <source>Recent versions of Emacs come with a start file for making &lt;b&gt;emacs&lt;/b&gt; act like a syntax-directed editor that understands (some of) Perl's syntax. See &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt;.</source>
          <target state="translated">Emacs的最新版本随附一个开始文件，用于使&lt;b&gt;emacs&lt;/b&gt;充当语法定向的编辑器，该编辑器了解Perl的（某些）语法。参见&lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee4c74e680482edd915062ce4b3176aca1d6a560" translate="yes" xml:space="preserve">
          <source>Recent versions of MakeMaker will only install man pages on Unix-like operating systems by default. To generate manpages on non-Unix operating systems, make the &quot;manifypods&quot; target.</source>
          <target state="translated">最新版本的MakeMaker默认只会在类Unix操作系统上安装man页。要在非Unix操作系统上生成manpages,请将 &quot;manifypods &quot;作为目标。</target>
        </trans-unit>
        <trans-unit id="73e20a3b8b070519bf410698695bcd5424fa0a92" translate="yes" xml:space="preserve">
          <source>Recent versions of MakeMaker will only install man pages on Unix-like operating systems.</source>
          <target state="translated">最近版本的MakeMaker只能在类似Unix的操作系统上安装man页。</target>
        </trans-unit>
        <trans-unit id="331a914f82c03970764682292750cf208864b12a" translate="yes" xml:space="preserve">
          <source>Recently I've been rekindling a two-decades-old interest in Forth. Evidently I have a masochistic streak that even Perl can't satisfy. I want to write tests in Forth and run them using prove (you can find my gforth TAP experiments at https://svn.hexten.net/andy/Forth/Testing/). I can use the --exec switch to tell prove to run the tests using gforth like this:</source>
          <target state="translated">最近,我又重新燃起了对Forth二十年来的兴趣。显然,我有一种连Perl都无法满足的受虐狂。我想用Forth写测试,然后用prove来运行它们(你可以在https://svn.hexten.net/andy/Forth/Testing/找到我的gforth TAP实验)。我可以用 --exec 开关告诉 prove 用 gforth 运行测试,就像这样。</target>
        </trans-unit>
        <trans-unit id="49d40e56ce8bbf7d9e92f3015c908f2c59ec4661" translate="yes" xml:space="preserve">
          <source>Recently someone mentioned to me that the Memoize module made his program run slower instead of faster. It turned out that he was memoizing the following function:</source>
          <target state="translated">最近有人跟我说,Memoize模块让他的程序运行速度不快反慢。原来他是在记忆下面的函数。</target>
        </trans-unit>
        <trans-unit id="8f7f4c997bb15ee0fbad757704fc3f421c86dab0" translate="yes" xml:space="preserve">
          <source>Recently, the plan has been to release a new version of Perl roughly every April, but getting the release right is more important than sticking rigidly to a calendar date, so the release date is somewhat flexible. The historical release dates can be viewed at &lt;a href=&quot;http://www.cpan.org/src/README.html&quot;&gt;http://www.cpan.org/src/README.html&lt;/a&gt;.</source>
          <target state="translated">最近，计划是大约在每个四月发布Perl的新版本，但是正确地发布版本比严格遵守日历日期更为重要，因此发布日期有些灵活。可以在&lt;a href=&quot;http://www.cpan.org/src/README.html&quot;&gt;http://www.cpan.org/src/README.html&lt;/a&gt;上查看历史发布日期。</target>
        </trans-unit>
        <trans-unit id="8eddef3b133a821ffbd00447eb75db2f14179551" translate="yes" xml:space="preserve">
          <source>Recipes for using Locale::Maketext</source>
          <target state="translated">使用Locale::Maketext的食谱。</target>
        </trans-unit>
        <trans-unit id="ede1bc7e918b59a97957a2f687780bd460ba3031" translate="yes" xml:space="preserve">
          <source>Recognise (or not) a number. The type of the number is returned (0 if unrecognised), otherwise it is a bit-ORed combination of &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt;, &lt;code&gt;IS_NUMBER_GREATER_THAN_UV_MAX&lt;/code&gt;, &lt;code&gt;IS_NUMBER_NOT_INT&lt;/code&gt;, &lt;code&gt;IS_NUMBER_NEG&lt;/code&gt;, &lt;code&gt;IS_NUMBER_INFINITY&lt;/code&gt;, &lt;code&gt;IS_NUMBER_NAN&lt;/code&gt; (defined in perl.h).</source>
          <target state="translated">识别（或不识别）数字。返回数字的类型（如果无法识别，则返回0），否则它是 &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; ， &lt;code&gt;IS_NUMBER_GREATER_THAN_UV_MAX&lt;/code&gt; ， &lt;code&gt;IS_NUMBER_NOT_INT&lt;/code&gt; ， &lt;code&gt;IS_NUMBER_NEG&lt;/code&gt; ， &lt;code&gt;IS_NUMBER_INFINITY&lt;/code&gt; ， &lt;code&gt;IS_NUMBER_NAN&lt;/code&gt; （在perl.h中定义）的按位或组合。</target>
        </trans-unit>
        <trans-unit id="df930bc1bb6845ff74e797986a213fc6ce80656c" translate="yes" xml:space="preserve">
          <source>Recognise (or not) a number. The type of the number is returned (0 if unrecognised), otherwise it is a bit-ORed combination of IS_NUMBER_IN_UV, IS_NUMBER_GREATER_THAN_UV_MAX, IS_NUMBER_NOT_INT, IS_NUMBER_NEG, IS_NUMBER_INFINITY, IS_NUMBER_NAN (defined in perl.h).</source>
          <target state="translated">识别(或不识别)一个数字。返回数字的类型(如果不识别,则返回0),否则是IS_NUMBER_IN_UV、IS_NUMBER_GREATER_THAN_UV_MAX、IS_NUMBER_NOT_INT、IS_NUMBER_NEG、IS_NUMBER_INFINITY、IS_NUMBER_NAN(在perl.h中定义)的位ORED组合。</target>
        </trans-unit>
        <trans-unit id="48f945d6ce4d07d534f69be50ec9c9e2fe4d3f0a" translate="yes" xml:space="preserve">
          <source>Recognized options:</source>
          <target state="translated">认可的选择。</target>
        </trans-unit>
        <trans-unit id="a0a67cdef15b0f52eba76cf8612a8ed9d2d8a77f" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (32-bit)</source>
          <target state="translated">推荐选项 AIX 5.1/5.2/5.3/6.1 和 7.1 (32 位)</target>
        </trans-unit>
        <trans-unit id="f3d64f9e3ff3dcc4eefb2197e40d43309ca7e6a3" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (64-bit)</source>
          <target state="translated">推荐选项 AIX 5.1/5.2/5.3/6.1 和 7.1 (64 位)</target>
        </trans-unit>
        <trans-unit id="b31d2b6abba1e2f8179abfdd96b832d8bddf377a" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (threaded/32-bit)</source>
          <target state="translated">推荐的选项 AIX 5.1/5.2/5.3/6.1 和 7.1 (线程/32 位)</target>
        </trans-unit>
        <trans-unit id="c49f6af3c553991267db33b3d58f14d3e0aa9ee3" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (threaded/64-bit)</source>
          <target state="translated">推荐的选项 AIX 5.1/5.2/5.3/6.1 和 7.1 (线程/64 位)</target>
        </trans-unit>
        <trans-unit id="49b95470925487b65a9afb790a266994f3a7ddad" translate="yes" xml:space="preserve">
          <source>Recommended Use</source>
          <target state="translated">推荐使用</target>
        </trans-unit>
        <trans-unit id="c50c28d98dabb65447337f277af23b0ca9dc0048" translate="yes" xml:space="preserve">
          <source>Recommended dependencies are</source>
          <target state="translated">建议的依赖性是</target>
        </trans-unit>
        <trans-unit id="dd03ceb13400e315c5a9286eed319bbbd63e0a42" translate="yes" xml:space="preserve">
          <source>Recompile perl with &lt;b&gt;-D&lt;/b&gt;DEBUGGING to use &lt;b&gt;-D&lt;/b&gt; switch</source>
          <target state="translated">用&lt;b&gt;-D&lt;/b&gt; DEBUGGING重新编译perl以使用&lt;b&gt;-D&lt;/b&gt;开关</target>
        </trans-unit>
        <trans-unit id="6a646fca38262c3ca1a32c554fc40f7863eca3a6" translate="yes" xml:space="preserve">
          <source>Recompiles dynamically loaded modules with CPAN::Shell-&amp;gt;recompile.</source>
          <target state="translated">使用CPAN :: Shell-&amp;gt; recompile重新编译动态加载的模块。</target>
        </trans-unit>
        <trans-unit id="f182056a2720c2953d88f0e5cd69ae2848c028f4" translate="yes" xml:space="preserve">
          <source>Record locking with fcntl()? Then the module might support an undo log and get real transactions. What a tour de force that would be.</source>
          <target state="translated">用fcntl()记录锁定?那么模块可能会支持撤销日志,并得到真实的事务。这将是一个多么大的工程。</target>
        </trans-unit>
        <trans-unit id="92e28284e7ee352d28c0bd931b575309548f82cd" translate="yes" xml:space="preserve">
          <source>Record processing operations. Takes one or more of the following in a comma-separated list:</source>
          <target state="translated">记录处理操作。在一个逗号分隔的列表中取下列一项或多项:</target>
        </trans-unit>
        <trans-unit id="5cd3bd505e5f53cd6f81827da82ec2481bd75fe7" translate="yes" xml:space="preserve">
          <source>Records &lt;code&gt;$(EXTRALIBS)&lt;/code&gt; in</source>
          <target state="translated">记录 &lt;code&gt;$(EXTRALIBS)&lt;/code&gt; 在</target>
        </trans-unit>
        <trans-unit id="f1e619d50396ad4502ee425b4e5f3f5650d0bbc5" translate="yes" xml:space="preserve">
          <source>Records read from the tied array do not have the record separator string on the end; this is to allow</source>
          <target state="translated">从绑定数组中读取的记录末端没有记录分隔符串,这是为了让</target>
        </trans-unit>
        <trans-unit id="da9b3804e9ca9a33e54f8c3271667fff796fffbf" translate="yes" xml:space="preserve">
          <source>Records read in from the file are cached, to avoid having to re-read them repeatedly. If you read the same record twice, the first time it will be stored in memory, and the second time it will be fetched from the</source>
          <target state="translated">从文件中读入的记录会被缓存,以避免重复读取。如果您两次读取同一条记录,第一次会存储在内存中,第二次会从</target>
        </trans-unit>
        <trans-unit id="7b78cb40d570e3f60ca3b4da5f634f6d92a8fb93" translate="yes" xml:space="preserve">
          <source>Recurse into subdirectories specified in podpath (default behaviour).</source>
          <target state="translated">递归到podpath中指定的子目录(默认行为)。</target>
        </trans-unit>
        <trans-unit id="d3a3445b075ca5a8f04946e660b954c88e2059b2" translate="yes" xml:space="preserve">
          <source>Recurse to a named subpattern. Identical to &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt; except that the parenthesis to recurse to is determined by name. If multiple parentheses have the same name, then it recurses to the leftmost.</source>
          <target state="translated">递归到命名子模式。与 &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt; 相同，只是要通过名称来确定要括号的括号。如果多个括号具有相同的名称，则递归到最左边。</target>
        </trans-unit>
        <trans-unit id="8f1975a7def41720ec9c94792bc4fc65a7c012e4" translate="yes" xml:space="preserve">
          <source>Recursion</source>
          <target state="translated">Recursion</target>
        </trans-unit>
        <trans-unit id="be1e2a304d878ad7f3f5a2be055fe28d861444b5" translate="yes" xml:space="preserve">
          <source>Recursive call to Perl_load_module in PerlIO_find_layer</source>
          <target state="translated">在PerlIO_find_layer中递归调用Perl_load_module。</target>
        </trans-unit>
        <trans-unit id="91cb555ad3b892f562583bbc57921ba568183365" translate="yes" xml:space="preserve">
          <source>Recursive inheritance detected in package '%s'</source>
          <target state="translated">在'%s'包中检测到递归继承。</target>
        </trans-unit>
        <trans-unit id="246ee04b92279ada2c0b85fda5857fb7391b5be9" translate="yes" xml:space="preserve">
          <source>Recursive patterns</source>
          <target state="translated">递归模式</target>
        </trans-unit>
        <trans-unit id="d7f3d9dfa25161f3fe4649ab6fce65682b6e58a7" translate="yes" xml:space="preserve">
          <source>Recursive search.</source>
          <target state="translated">递归搜索。</target>
        </trans-unit>
        <trans-unit id="97820f2ec75d21b98b64fe84aa408e0ba63fd922" translate="yes" xml:space="preserve">
          <source>Recursive subpattern. Treat the contents of a given capture buffer in the current pattern as an independent subpattern and attempt to match it at the current position in the string. Information about capture state from the caller for things like backreferences is available to the subpattern, but capture buffers set by the subpattern are not visible to the caller.</source>
          <target state="translated">递归子模式。将当前模式中给定的捕获缓冲区的内容视为一个独立的子模式,并尝试在字符串的当前位置进行匹配。子模式可以获得来自调用者的捕捉状态信息,比如回溯引用,但子模式设置的捕捉缓冲区对调用者是不可见的。</target>
        </trans-unit>
        <trans-unit id="f516457f12f560502881547f1fc2790272897352" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;clean&lt;/code&gt; method on all items contained in the bundle.</source>
          <target state="translated">对捆绑包中包含的所有项目递归运行 &lt;code&gt;clean&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8a9c50c69ca21ecd2a0997b67c05e3cb6d8e1a38" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;get&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">在捆绑包中包含的所有项目上递归运行 &lt;code&gt;get&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="7d5a98448c254c7fce0f1fe10cc12f05a5008e72" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;install&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">在捆绑包中包含的所有项目上递归运行 &lt;code&gt;install&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="0d569a98c2caf9322c96ff9458f79ae70190174a" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;make&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">在捆绑包中包含的所有项目上递归运行 &lt;code&gt;make&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="c0a4dc899fe7c2753be17aee552394719cd44ec2" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;readme&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">对捆绑包中包含的所有项目递归运行 &lt;code&gt;readme&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="7e62e1ec8c6026586ce9a911ace00bab6074bea8" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;test&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">对捆绑包中包含的所有项目递归运行 &lt;code&gt;test&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="56d7296135bfeab6ee6d5a820ce1e8dc27ad1624" translate="yes" xml:space="preserve">
          <source>RedHatism for &lt;code&gt;PREREQ_PRINT&lt;/code&gt; . The output format is different, though:</source>
          <target state="translated">适用于 &lt;code&gt;PREREQ_PRINT&lt;/code&gt; 的RedHatism。输出格式不同，但是：</target>
        </trans-unit>
        <trans-unit id="0a9239c3dc01f0fa55b0b4ac90add849358f4889" translate="yes" xml:space="preserve">
          <source>RedHatism for &lt;code&gt;PREREQ_PRINT&lt;/code&gt;. The output format is different, though:</source>
          <target state="translated">适用于 &lt;code&gt;PREREQ_PRINT&lt;/code&gt; 的RedHatism。输出格式不同，但是：</target>
        </trans-unit>
        <trans-unit id="ff05cca01ccf8ffdeed27cada2b61209b9002a1b" translate="yes" xml:space="preserve">
          <source>Redeclaration of &quot;sendpath&quot; with a different storage class specifier</source>
          <target state="translated">重新声明 &quot;sendpath&quot;,并使用不同的存储类指定符。</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="c605d032bec3cb73def9d5ef407371beb801bc9a" translate="yes" xml:space="preserve">
          <source>Redirection is very strict against the specification. Redirection is only automatic for response codes 301, 302, 307 and 308 if the request method is 'GET' or 'HEAD'. Response code 303 is always converted into a 'GET' redirection, as mandated by the specification. There is no automatic support for status 305 (&quot;Use proxy&quot;) redirections.</source>
          <target state="translated">重定向对规范的要求非常严格。只有当请求方法是 &quot;GET &quot;或 &quot;HEAD &quot;时,响应代码301、302、307和308才会自动重定向。响应代码303总是被转换为'GET'重定向,这是规范规定的。对状态305(&quot;使用代理&quot;)重定向没有自动支持。</target>
        </trans-unit>
        <trans-unit id="c20bb0f7c4d78b01fa838319a2981e9b417f1f05" translate="yes" xml:space="preserve">
          <source>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</source>
          <target state="translated">允许以源码和二进制形式重新分发和使用,无论是否修改,但必须满足以下条件:</target>
        </trans-unit>
        <trans-unit id="57ec4bae787e02e75ae9439f5fbfc851c887f70f" translate="yes" xml:space="preserve">
          <source>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</source>
          <target state="translated">二进制形式的再分发必须在发行版提供的文档和/或其他材料中复制上述版权声明、本条件列表和以下免责声明。</target>
        </trans-unit>
        <trans-unit id="b7338b5245c44e48d0d288fd4ec6f22445873f8e" translate="yes" xml:space="preserve">
          <source>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</source>
          <target state="translated">源代码的再分发必须保留上述版权声明、本条件清单和以下免责声明。</target>
        </trans-unit>
        <trans-unit id="c973a7f5a8278a6641ee3f8e956a635bbcd7ebfa" translate="yes" xml:space="preserve">
          <source>Redo a previous command (defaults to the previous command).</source>
          <target state="translated">重做以前的命令(默认为以前的命令)。</target>
        </trans-unit>
        <trans-unit id="8b58a997692ccbb4a9f3f4fa304e4fe3018df980" translate="yes" xml:space="preserve">
          <source>Redo last command that started with pattern. See &lt;code&gt;o recallCommand&lt;/code&gt; , too.</source>
          <target state="translated">重做以pattern开头的最后一个命令。另请参见 &lt;code&gt;o recallCommand&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="776cc5d74afe5dec3447fa4e9c0fac42aeef29e9" translate="yes" xml:space="preserve">
          <source>Redo last command that started with pattern. See &lt;code&gt;o recallCommand&lt;/code&gt;, too.</source>
          <target state="translated">重做以pattern开头的最后一个命令。另请参见 &lt;code&gt;o recallCommand&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4bb08e2752cb1397dda0f71ef9cf4a2939b7a5e" translate="yes" xml:space="preserve">
          <source>Redo number'th previous command.</source>
          <target state="translated">重做第几条命令。</target>
        </trans-unit>
        <trans-unit id="f6ec2506be7964996a498f212a0b64cf21b762f3" translate="yes" xml:space="preserve">
          <source>Redoing contexts</source>
          <target state="translated">重做上下文</target>
        </trans-unit>
        <trans-unit id="1ffb4e2ba37698b18269edd6a43127d0871bbd89" translate="yes" xml:space="preserve">
          <source>Reduce the number to the shortest form. This routine is called automatically whenever it is needed.</source>
          <target state="translated">将数字减少到最短的形式。每当需要时,这个例程会自动调用。</target>
        </trans-unit>
        <trans-unit id="501beaa6a05572fe80fbb3fbd41c4a5535a6ef36" translate="yes" xml:space="preserve">
          <source>Reduced to a standard form to facilitate comparison.</source>
          <target state="translated">缩小到标准形式,便于比较。</target>
        </trans-unit>
        <trans-unit id="f00e8d287f10014aba639a418b99c2272caeffd5" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;@list&lt;/code&gt; by calling &lt;code&gt;BLOCK&lt;/code&gt; in a scalar context multiple times, setting &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; each time. The first call will be with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to the first two elements of the list, subsequent calls will be done by setting &lt;code&gt;$a&lt;/code&gt; to the result of the previous call and &lt;code&gt;$b&lt;/code&gt; to the next element in the list.</source>
          <target state="translated">通过在标量上下文中多次调用 &lt;code&gt;BLOCK&lt;/code&gt; 来减少 &lt;code&gt;@list&lt;/code&gt; ，每次设置 &lt;code&gt;$a&lt;/code&gt; 和 &lt;code&gt;$b&lt;/code&gt; 。第一次调用将 &lt;code&gt;$a&lt;/code&gt; 和 &lt;code&gt;$b&lt;/code&gt; 设置为列表的前两个元素，随后的调用将通过将 &lt;code&gt;$a&lt;/code&gt; 设置为上一个调用的结果并将 &lt;code&gt;$b&lt;/code&gt; 设置为列表中的下一个元素来完成。</target>
        </trans-unit>
        <trans-unit id="b61d10e45aea4e949426fb83e76bebb4e7edd2ff" translate="yes" xml:space="preserve">
          <source>Redundant argument in %s</source>
          <target state="translated">%s中的冗余参数</target>
        </trans-unit>
        <trans-unit id="abb09f24d1bc63bc502ea1307f407f20e427bdf6" translate="yes" xml:space="preserve">
          <source>Reenable a member of the XOP which has been disabled.</source>
          <target state="translated">重新启用被禁用的XOP成员。</target>
        </trans-unit>
        <trans-unit id="a01849f5926530cff0486291b0913ad6097a74e9" translate="yes" xml:space="preserve">
          <source>Reenables overloading in the current lexical scope.</source>
          <target state="translated">重新启用当前词法作用域中的重载。</target>
        </trans-unit>
        <trans-unit id="e39fb607bec457bbec70d0b4d2e6890866daaa98" translate="yes" xml:space="preserve">
          <source>Reenables overloading only for specific ops in the current lexical scope.</source>
          <target state="translated">仅为当前词法范围内的特定操作重新启用重载。</target>
        </trans-unit>
        <trans-unit id="49241d1a0c34625fcb3a1e12e5c0773fb1c8acdc" translate="yes" xml:space="preserve">
          <source>Ref to array of *.c file names. Initialised from a directory scan and the values portion of the XS attribute hash. This is not currently used by MakeMaker but may be handy in Makefile.PLs.</source>
          <target state="translated">引用*.c文件名的数组。从目录扫描和XS属性哈希的值部分初始化。目前MakeMaker还没有使用,但在Makefile.PLs中可能很方便。</target>
        </trans-unit>
        <trans-unit id="3f81efa83fe1fc38e8187073f2e0f52f064e535b" translate="yes" xml:space="preserve">
          <source>Ref to array of *.h file names. Similar to C.</source>
          <target state="translated">引用到*.h文件名的数组。类似于C语言。</target>
        </trans-unit>
        <trans-unit id="9d8fd40f71bcbcbe2653e07a1c5b85da1cb0996a" translate="yes" xml:space="preserve">
          <source>Ref to array of executable files. The files will be copied to the INST_SCRIPT directory. Make realclean will delete them from there again.</source>
          <target state="translated">指可执行文件的数组。这些文件将被复制到INST_SCRIPT目录下。make realclean将再次从那里删除它们。</target>
        </trans-unit>
        <trans-unit id="d5aae7a215c3c723e9edaabfefe238e519090018" translate="yes" xml:space="preserve">
          <source>Ref to array of subdirectories containing Makefile.PLs e.g. ['sdbm'] in ext/SDBM_File</source>
          <target state="translated">参考包含Makefile.PLs的子目录数组,例如ext/SDBM_File中的['sdbm']。</target>
        </trans-unit>
        <trans-unit id="b3246e33411973b519919af08976977fb427aefe" translate="yes" xml:space="preserve">
          <source>Ref to array of subdirectories containing library files. Defaults to [ 'lib', $(BASEEXT) ]. The directories will be scanned and</source>
          <target state="translated">引用包含库文件的子目录数组。默认值为['lib',$(BASEEXT)]。这些目录将被扫描并</target>
        </trans-unit>
        <trans-unit id="f8aa887f63e79a2bb90542b3f76da6c5f5bbc259" translate="yes" xml:space="preserve">
          <source>Ref to array of typemap file names. Use this when the typemaps are in some directory other than the current directory or when they are not named &lt;b&gt;typemap&lt;/b&gt;. The last typemap in the list takes precedence. A typemap in the current directory has highest precedence, even if it isn't listed in TYPEMAPS. The default system typemap has lowest precedence.</source>
          <target state="translated">引用typemap文件名数组。当类型映射位于当前目录以外的某个目录中或未命名为&lt;b&gt;typemap&lt;/b&gt;时，请使用此选项。列表中的最后一个typemap优先。即使未在TYPEMAPS中列出，当前目录中的Typemap仍具有最高优先级。默认系统类型映射的优先级最低。</target>
        </trans-unit>
        <trans-unit id="385ed0cad910e2becc8ae487ad67a924dbc66159" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils::Typemaps&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参考&lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils :: Typemaps&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4228a9f20f5363e586dea50d4e8154b026ded097" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils::Typemaps&lt;/a&gt; for details. Object associates &lt;code&gt;ctype&lt;/code&gt; with &lt;code&gt;xstype&lt;/code&gt;, which is the index into the in- and output mapping tables.</source>
          <target state="translated">有关详细信息，请参考&lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils :: Typemaps&lt;/a&gt;。对象将 &lt;code&gt;ctype&lt;/code&gt; 与 &lt;code&gt;xstype&lt;/code&gt; 关联，xstype是入入和输出映射表的索引。</target>
        </trans-unit>
        <trans-unit id="daea75a6a04da98b5df7c9f5a64eefec91ec11f6" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; for details on writing typemaps.</source>
          <target state="translated">有关编写类型&lt;a href=&quot;perlxstypemap&quot;&gt;映射&lt;/a&gt;的详细信息，请参考perlxstypemap。</target>
        </trans-unit>
        <trans-unit id="2a36238bcb820ac10d7fd2ebcaada73b3581fba1" translate="yes" xml:space="preserve">
          <source>Refer to the</source>
          <target state="translated">参看</target>
        </trans-unit>
        <trans-unit id="9b040ece9e8bbd30990175a9f5306428cd1d82bf" translate="yes" xml:space="preserve">
          <source>Refer to the LWP::UserAgent manpage for more details.</source>
          <target state="translated">更多细节请参考LWP::UserAgent manpage。</target>
        </trans-unit>
        <trans-unit id="9432d6c3a3648b15dc0cea89b8e3582be2f2c693" translate="yes" xml:space="preserve">
          <source>Refer to the documentation in zlib.h for instructions on how to fly &lt;code&gt;deflateTune&lt;/code&gt; .</source>
          <target state="translated">有关如何运行 &lt;code&gt;deflateTune&lt;/code&gt; 的说明，请参考zlib.h中的文档。</target>
        </trans-unit>
        <trans-unit id="ae46e16822745ddb59647d3ecbeab34df7b4a533" translate="yes" xml:space="preserve">
          <source>Refer to the documentation in zlib.h for instructions on how to fly &lt;code&gt;deflateTune&lt;/code&gt;.</source>
          <target state="translated">有关如何运行 &lt;code&gt;deflateTune&lt;/code&gt; 的说明，请参考zlib.h中的文档。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="272eaac3a581c717e2c1bd7c98e040f99bd3050b" translate="yes" xml:space="preserve">
          <source>Reference Counts and Mortality</source>
          <target state="translated">参考计数和死亡率</target>
        </trans-unit>
        <trans-unit id="cb66c14f673d420b2446698ffd2295bef09bc762" translate="yes" xml:space="preserve">
          <source>Reference Lists</source>
          <target state="translated">参考清单</target>
        </trans-unit>
        <trans-unit id="6cc196b03aa468ab5cdd3b85dfb4b8e2460c2497" translate="yes" xml:space="preserve">
          <source>Reference Manual</source>
          <target state="translated">参考手册</target>
        </trans-unit>
        <trans-unit id="defa8b773888db11a0993efdc56f5359f1f4fada" translate="yes" xml:space="preserve">
          <source>Reference found where even-sized list expected</source>
          <target state="translated">在预期的偶数名单中找到参考资料</target>
        </trans-unit>
        <trans-unit id="1013adb3a453e41c5f85137f10d10101fc4a6865" translate="yes" xml:space="preserve">
          <source>Reference is already weak</source>
          <target state="translated">参考文献已经很薄弱</target>
        </trans-unit>
        <trans-unit id="881dcd6e1a633cb9b9e2043e477198a48105ce23" translate="yes" xml:space="preserve">
          <source>Reference is not weak</source>
          <target state="translated">参考文献并不薄弱</target>
        </trans-unit>
        <trans-unit id="b95e95010ca5155efc6312c2ce2dbac562f26482" translate="yes" xml:space="preserve">
          <source>Reference to &lt;code&gt;@INC&lt;/code&gt;.</source>
          <target state="translated">引用 &lt;code&gt;@INC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d6ba86e068ebcbb24f4c6f6a21a664050593544" translate="yes" xml:space="preserve">
          <source>Reference to an array of search directories. These are searched in order before looking in &lt;code&gt;@INC&lt;/code&gt; (if &lt;b&gt;-inc&lt;/b&gt;). Current directory is used if none are specified.</source>
          <target state="translated">引用搜索目录数组。在查找 &lt;code&gt;@INC&lt;/code&gt; 之前，&lt;b&gt;将按&lt;/b&gt;顺序搜索它们（如果&lt;b&gt;-inc&lt;/b&gt;）。如果未指定，则使用当前目录。</target>
        </trans-unit>
        <trans-unit id="86caba5eff40fddcf8846dc1d2d2754a6e719522" translate="yes" xml:space="preserve">
          <source>Reference to invalid group 0 in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">在正则表达式中引用无效的组0；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="b22008f10c7576ec8db1647eb7721bd7191a2c4e" translate="yes" xml:space="preserve">
          <source>Reference to nonexistent group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">引用正则表达式中不存在的组；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="b3f858831ae6f1434bc97cb50248f0c7a49fea6c" translate="yes" xml:space="preserve">
          <source>Reference to nonexistent named group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">引用正则表达式中不存在的命名组；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="475798cb7c7e061c7864e4e31937b86ac1c4960f" translate="yes" xml:space="preserve">
          <source>Reference to nonexistent or unclosed group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">引用正则表达式中不存在或未关闭的组；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="a0dc93bc9a996d0e87ee1869448bc7db3c222320" translate="yes" xml:space="preserve">
          <source>References are a special type of scalar that point to other data types (including other references).</source>
          <target state="translated">引用是一种特殊类型的标量,它指向其他数据类型(包括其他引用)。</target>
        </trans-unit>
        <trans-unit id="50974befcb2bfc7d0ac736bc11229b81ee3eaf79" translate="yes" xml:space="preserve">
          <source>References are also used to support object-oriented programming. In perl's OO lexicon, an object is simply a reference that has been blessed into a package (or class). Once blessed, the programmer may now use the reference to access the various methods in the class.</source>
          <target state="translated">引用也被用来支持面向对象的编程。在 perl 的 OO 词典中,一个对象只是一个被祝福到包(或类)中的引用。一旦被祝福,程序员就可以使用这个引用来访问类中的各种方法。</target>
        </trans-unit>
        <trans-unit id="4f023cf599a124b750291900889f7d314ec9caf2" translate="yes" xml:space="preserve">
          <source>References are documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;. Examples of complex data structures are given in &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; and &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;. Examples of structures and object-oriented classes are in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">参考文献在&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;和&lt;a href=&quot;perlreftut&quot;&gt;perlreftut中&lt;/a&gt;有记录。&lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;和&lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;中给出了复杂数据结构的示例。结构和面向对象类的例子在&lt;a href=&quot;perlootut&quot;&gt;perlootut中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92593a68da730f578acc31005d526d5997c8f515" translate="yes" xml:space="preserve">
          <source>References are easy to use in Perl. There is just one overriding principle: in general, Perl does no implicit referencing or dereferencing. When a scalar is holding a reference, it always behaves as a simple scalar. It doesn't magically start being an array or hash or subroutine; you have to tell it explicitly to do so, by dereferencing it.</source>
          <target state="translated">在Perl中,引用很容易使用。只有一个首要原则:一般来说,Perl不做隐式引用或取消引用。当一个标量持有一个引用时,它总是表现为一个简单的标量。它不会奇迹般地开始成为一个数组、散列或子程序;你必须明确地告诉它这样做,通过去引用它。</target>
        </trans-unit>
        <trans-unit id="1768d90c9296a75485266d150073e447cb77523f" translate="yes" xml:space="preserve">
          <source>References are often returned by special subroutines called constructors. Perl objects are just references to a special type of object that happens to know which package it's associated with. Constructors are just special subroutines that know how to create that association. They do so by starting with an ordinary reference, and it remains an ordinary reference even while it's also being an object. Constructors are often named &lt;code&gt;new()&lt;/code&gt; . You</source>
          <target state="translated">引用通常由称为构造函数的特殊子例程返回。Perl对象只是对一种特殊类型的对象的引用，这些对象恰巧知道它与哪个包相关联。构造函数只是知道如何创建该关联的特殊子例程。他们这样做是从普通引用开始的，即使它也是一个对象，它仍然是普通引用。构造函数通常被命名为 &lt;code&gt;new()&lt;/code&gt; 。您</target>
        </trans-unit>
        <trans-unit id="fce59c2ef726739b1c57e5452b73684a9e9c7f09" translate="yes" xml:space="preserve">
          <source>References are often returned by special subroutines called constructors. Perl objects are just references to a special type of object that happens to know which package it's associated with. Constructors are just special subroutines that know how to create that association. They do so by starting with an ordinary reference, and it remains an ordinary reference even while it's also being an object. Constructors are often named &lt;code&gt;new()&lt;/code&gt;. You</source>
          <target state="translated">引用通常由称为构造函数的特殊子例程返回。Perl对象只是对一种特殊类型的对象的引用，这种对象恰好知道与哪个包相关联。构造函数只是知道如何创建该关联的特殊子例程。他们这样做是从普通引用开始的，即使它也是一个对象，它仍然是普通引用。构造函数通常被命名为 &lt;code&gt;new()&lt;/code&gt; 。你</target>
        </trans-unit>
        <trans-unit id="3d3bfc78ea450f4a47c9b2b5d8626d9e79a01328" translate="yes" xml:space="preserve">
          <source>References can be created in several ways.</source>
          <target state="translated">引用可以通过多种方式创建。</target>
        </trans-unit>
        <trans-unit id="c9b0a1db4852d1281bb8500fdd9246c477d9a5c6" translate="yes" xml:space="preserve">
          <source>References in Perl are like names for arrays and hashes. They're Perl's private, internal names, so you can be sure they're unambiguous. Unlike &quot;Barack Obama&quot;, a reference only refers to one thing, and you always know what it refers to. If you have a reference to an array, you can recover the entire array from it. If you have a reference to a hash, you can recover the entire hash. But the reference is still an easy, compact scalar value.</source>
          <target state="translated">在 Perl 中,引用就像数组和哈希的名字一样。它们是 Perl 的私有内部名称,所以你可以确信它们是明确的。与 &quot;Barack Obama &quot;不同的是,一个引用只指向一件事,而且你总是知道它指向什么。如果你有一个数组的引用,你可以从中恢复整个数组。如果你有一个对哈希的引用,你可以恢复整个哈希。但引用仍然是一个简单、紧凑的标量值。</target>
        </trans-unit>
        <trans-unit id="ed52d17c4bb69885715255f306558324c6d7bc34" translate="yes" xml:space="preserve">
          <source>References in Perl are like names for arrays and hashes. They're Perl's private, internal names, so you can be sure they're unambiguous. Unlike a human name, a reference only refers to one thing, and you always know what it refers to. If you have a reference to an array, you can recover the entire array from it. If you have a reference to a hash, you can recover the entire hash. But the reference is still an easy, compact scalar value.</source>
          <target state="translated">在 Perl 中,引用就像数组和哈希的名字一样。它们是 Perl 的私有内部名称,所以你可以确信它们是明确的。与人名不同的是,引用只指向一件事,而且你总是知道它指向什么。如果你有一个数组的引用,你可以从中恢复整个数组。如果你有一个对哈希的引用,你可以恢复整个哈希。但引用仍然是一个简单、紧凑的标量值。</target>
        </trans-unit>
        <trans-unit id="acbfdecb2d2391d9c8e96eacd3749584f501d4a2" translate="yes" xml:space="preserve">
          <source>References of the appropriate type can spring into existence if you dereference them in a context that assumes they exist. Because we haven't talked about dereferencing yet, we can't show you any examples yet.</source>
          <target state="translated">如果你在一个假设存在的上下文中取消引用,那么适当类型的引用就会出现。因为我们还没有讨论过取消引用,所以我们还不能给你看任何例子。</target>
        </trans-unit>
        <trans-unit id="aeef9819bba63f30920ae81ea30d63fa3edcd4c4" translate="yes" xml:space="preserve">
          <source>References to other programs or functions are normally in the form of man page references so that cross-referencing tools can provide the user with links and the like. It's possible to overdo this, though, so be careful not to clutter your documentation with too much markup. References to other programs that are not given as man page references should be enclosed in B&amp;lt;&amp;gt;.</source>
          <target state="translated">对其他程序或功能的引用通常以手册页引用的形式进行，以便交叉引用工具可以为用户提供链接等。但是，有可能过分这样做，因此请注意不要使您的文档过于混乱。未作为手册页引用的其他程序的引用应放在B &amp;lt;&amp;gt;中。</target>
        </trans-unit>
        <trans-unit id="d09c42c7f2b995dd79a331f98e9794ecbbde7748" translate="yes" xml:space="preserve">
          <source>Referencing</source>
          <target state="translated">Referencing</target>
        </trans-unit>
        <trans-unit id="f870d7a74093b8fc74dfb143b0624f7654233dcd" translate="yes" xml:space="preserve">
          <source>Refetch the stack pointer. Used after a callback. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">重新获取堆栈指针。在回调之后使用。参见&lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0571dd6ea81c78a99a9749cc8a5e39a6b2c57a92" translate="yes" xml:space="preserve">
          <source>Reflect the functionality of the module, not the implementation.</source>
          <target state="translated">反映模块的功能,而不是实现。</target>
        </trans-unit>
        <trans-unit id="280f134f03fe31eaa265a45b3d43b18db4aca4fa" translate="yes" xml:space="preserve">
          <source>Reflects certain Unicode settings of Perl. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; documentation for the &lt;code&gt;-C&lt;/code&gt; switch for more information about the possible values.</source>
          <target state="translated">反映Perl的某些Unicode设置。有关可能的值的更多信息，请参见 &lt;code&gt;-C&lt;/code&gt; 开关的&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="f226676f8892468419d6150f13a81d0446fa3a1f" translate="yes" xml:space="preserve">
          <source>Reflects certain Unicode settings of Perl. See &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt; documentation for the &lt;code&gt;-C&lt;/code&gt; switch for more information about the possible values.</source>
          <target state="translated">反映Perl的某些Unicode设置。有关可能的值的更多信息，请参见 &lt;code&gt;-C&lt;/code&gt; 开关的&lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="5e62264a7243d9609841cb3cc728146cbc309ed0" translate="yes" xml:space="preserve">
          <source>Reflects if safe locale operations are available to this perl (when the value is 1) or not (the value is 0). This variable is always 1 if the perl has been compiled without threads. It is also 1 if this perl is using thread-safe locale operations. Note that an individual thread may choose to use the global locale (generally unsafe) by calling &lt;a href=&quot;perlapi#switch_to_global_locale&quot;&gt;&quot;switch_to_global_locale&quot; in perlapi&lt;/a&gt;. This variable currently is still set to 1 in such threads.</source>
          <target state="translated">反映此Perl是否可以使用安全的语言环境操作（值是1时）（否）（值是0）。如果perl是在没有线程的情况下编译的，则此变量始终为1。如果此perl使用线程安全的语言环境操作，则它也为1。请注意，单个线程可以通过&lt;a href=&quot;perlapi#switch_to_global_locale&quot;&gt;在perlapi中&lt;/a&gt;调用&amp;ldquo; switch_to_global_locale&amp;rdquo;选择使用全局语言环境（通常是不安全的）。在此类线程中，此变量当前仍设置为1。</target>
        </trans-unit>
        <trans-unit id="514989ce439f0131fd7d7ae03128f36f34fefe59" translate="yes" xml:space="preserve">
          <source>Reflects if taint mode is on or off. 1 for on (the program was run with &lt;b&gt;-T&lt;/b&gt;), 0 for off, -1 when only taint warnings are enabled (i.e. with &lt;b&gt;-t&lt;/b&gt; or &lt;b&gt;-TU&lt;/b&gt;).</source>
          <target state="translated">反映异味模式是打开还是关闭。1表示打开（该程序以&lt;b&gt;-T&lt;/b&gt;运行），0表示关闭，仅启用污点警告（即&lt;b&gt;-t&lt;/b&gt;或&lt;b&gt;-TU&lt;/b&gt;）时为-1 。</target>
        </trans-unit>
        <trans-unit id="6312ec67c8b0215a01635346ff23ce68e5ec5799" translate="yes" xml:space="preserve">
          <source>Regarding aesthetics of code lay out, about the only thing Larry cares strongly about is that the closing curly bracket of a multi-line BLOCK should line up with the keyword that started the construct. Beyond that, he has other preferences that aren't so strong:</source>
          <target state="translated">关于代码布局的美学,Larry唯一非常在意的是,多行BLOCK的收尾大括号应该与开始构造的关键字对齐。除此之外,他还有其他不是那么强烈的偏好。</target>
        </trans-unit>
        <trans-unit id="2790589b45378975738284e2ca51f4e9c6e7a880" translate="yes" xml:space="preserve">
          <source>Regarding precedence, the filetest operators, like &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-M&lt;/code&gt; , etc. are treated like named unary operators, but they don't follow this functional parenthesis rule. That means, for example, that &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; .</source>
          <target state="translated">关于优先级，文件测试运算符（如 &lt;code&gt;-f&lt;/code&gt; ， &lt;code&gt;-M&lt;/code&gt; 等）被视为命名的一元运算符，但是它们不遵循此功能括号规则。例如，这意味着 &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; 等效于 &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a0fddc99d50a84665cce5cb5eb6cad37dc7b84c" translate="yes" xml:space="preserve">
          <source>Regarding precedence, the filetest operators, like &lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;-M&lt;/code&gt;, etc. are treated like named unary operators, but they don't follow this functional parenthesis rule. That means, for example, that &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt;.</source>
          <target state="translated">关于优先级，文件测试运算符（如 &lt;code&gt;-f&lt;/code&gt; ， &lt;code&gt;-M&lt;/code&gt; 等）被视为已命名的一元运算符，但它们不遵循此功能括号规则。例如，这意味着 &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; 等效于 &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06476efc9400736e9db491e3b8f7668fdea23d10" translate="yes" xml:space="preserve">
          <source>Regardless of calling context, calling &lt;code&gt;survey&lt;/code&gt; saves its results in its &lt;code&gt;name2path&lt;/code&gt; and &lt;code&gt;path2name&lt;/code&gt; attributes.</source>
          <target state="translated">无论调用上下文如何，调用 &lt;code&gt;survey&lt;/code&gt; 将其结果保存在其 &lt;code&gt;name2path&lt;/code&gt; 和 &lt;code&gt;path2name&lt;/code&gt; 属性中。</target>
        </trans-unit>
        <trans-unit id="cb2078f0558afa439d00e67d405247b9ba4edc0b" translate="yes" xml:space="preserve">
          <source>Regardless of the machine architecture on which it runs, the example above should print the following table:</source>
          <target state="translated">无论在哪种机器架构上运行,上面的例子都应该打印出以下表格。</target>
        </trans-unit>
        <trans-unit id="32cd324f16f0c0c9cdd19f6acf5633153c13722a" translate="yes" xml:space="preserve">
          <source>Regardless of the package in which it is declared, if a lexical variable is ascribed an attribute, the handler that is invoked is the one belonging to the package to which it is typed. For example, the following declarations:</source>
          <target state="translated">无论在哪个包中声明,如果一个词汇变量被赋予了一个属性,那么被调用的处理程序就是属于该变量类型的包。例如,下面的声明。</target>
        </trans-unit>
        <trans-unit id="b769c472f18cb9e8ca1c53a6014fda42b17a5a44" translate="yes" xml:space="preserve">
          <source>Regex examples:</source>
          <target state="translated">Regex的例子。</target>
        </trans-unit>
        <trans-unit id="d215aa4b8eb14ea4cfa03d5ffdb7cdb3f3dbaea8" translate="yes" xml:space="preserve">
          <source>Regex options may be placed on the end (&lt;code&gt;'/expected/i'&lt;/code&gt; ).</source>
          <target state="translated">正则表达式选项可以放在末尾（ &lt;code&gt;'/expected/i'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="048ba323608ccb16af07783e4cfa75580476efce" translate="yes" xml:space="preserve">
          <source>Regex options may be placed on the end (&lt;code&gt;'/expected/i'&lt;/code&gt;).</source>
          <target state="translated">正则表达式选项可以放在末尾（ &lt;code&gt;'/expected/i'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3663d4a808abbda041c4b36d4f0656fc5a085294" translate="yes" xml:space="preserve">
          <source>Regexes</source>
          <target state="translated">Regexes</target>
        </trans-unit>
        <trans-unit id="d956a551e67ebad4724cd69086824a44b7bd001d" translate="yes" xml:space="preserve">
          <source>Regexes are treated mostly as double-quoted strings, so variable substitution works:</source>
          <target state="translated">Regexes主要是作为双引号字符串处理的,所以变量替换是可行的。</target>
        </trans-unit>
        <trans-unit id="cfae4e7b72fa21099236ad796e16fa7db3a6c71a" translate="yes" xml:space="preserve">
          <source>Regexes must match a part of the string</source>
          <target state="translated">注册表必须与字符串的一部分相匹配。</target>
        </trans-unit>
        <trans-unit id="338cff56c80a479d055611c7247bcf9a164e1505" translate="yes" xml:space="preserve">
          <source>Regexp Quote-Like Operators</source>
          <target state="translated">再表达式类似引号的操作符</target>
        </trans-unit>
        <trans-unit id="0797bbd01faf35095dfd65dfc63b42205de17751" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;%c&quot; may appear a maximum of twice in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正则表达式修饰符&amp;ldquo;％c&amp;rdquo;在正则表达式中最多出现两次；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="bcb81d351898c2f7a5565e69ba2547046fe22056" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;%c&quot; may not appear after the &quot;-&quot; in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正则表达式修饰符&amp;ldquo;％c&amp;rdquo;可能不会出现在正则表达式中的&amp;ldquo;-&amp;rdquo;之后；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="07a5747b037f2e20cf9ed2334368f64dcfd6bb03" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;%c&quot; may not appear twice in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正则表达式修饰符&amp;ldquo;％c&amp;rdquo;在正则表达式中可能不会出现两次；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="3bac88e5d2d4649a661481ca7e6cae835dc77a65" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;/%c&quot; may appear a maximum of twice</source>
          <target state="translated">Regexp修饰语&quot;/%c &quot;最多可以出现两次。</target>
        </trans-unit>
        <trans-unit id="bf7452e2ee126d0b5bdcd122aa94e0317d0229c2" translate="yes" xml:space="preserve">
          <source>Regexp modifier &quot;/%c&quot; may not appear twice</source>
          <target state="translated">Regexp修饰符&quot;/%c &quot;可能不会出现两次。</target>
        </trans-unit>
        <trans-unit id="16baf5ed0dc60f5788ba1338c41e4e4d3e10cdec" translate="yes" xml:space="preserve">
          <source>Regexp modifiers &quot;%c&quot; and &quot;%c&quot; are mutually exclusive in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正则表达式修饰符&amp;ldquo;％c&amp;rdquo;和&amp;ldquo;％c&amp;rdquo;在正则表达式中互斥；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="ff695a22d914eb768a20894db3075de4a22ddb2d" translate="yes" xml:space="preserve">
          <source>Regexp modifiers &quot;/%c&quot; and &quot;/%c&quot; are mutually exclusive</source>
          <target state="translated">Regexp修饰符&quot;/%c &quot;和&quot;/%c &quot;是相互排斥的。</target>
        </trans-unit>
        <trans-unit id="df3f82844a8ba1dcb10494bd3434657cd0fcf5f2" translate="yes" xml:space="preserve">
          <source>Regexp out of space in regex m/%s/</source>
          <target state="translated">在regex m/%s/中,Regexpress没有空间了。</target>
        </trans-unit>
        <trans-unit id="4c193fd7834dd4e2f2d0c3df7459dd9b6d0cff66" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">类似于正则表达式的报价。请参阅&lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;perlop中的Regexp类引用运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c316c1c2a82166bf54ba8bc390604c2af941f39" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">类似于正则表达式的报价。请参阅&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;perlop中的&amp;ldquo;正则表达式类似引用的运算符&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ca599ed3fe6de770a51caf60b0f6908ce450eaf" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">类似于正则表达式的报价。请参阅&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;perlop中的Regexp类引用运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d463a4b21b2664cb244b9f40e3a444f1afd09cd" translate="yes" xml:space="preserve">
          <source>Register a closure to be called when this job is destroyed. The callback will be passed the &lt;code&gt;TAP::Parser::Scheduler::Job&lt;/code&gt; object as it's only argument.</source>
          <target state="translated">注册一个销毁该作业时要调用的闭包。回调将通过 &lt;code&gt;TAP::Parser::Scheduler::Job&lt;/code&gt; 对象传递，因为它是唯一的参数。</target>
        </trans-unit>
        <trans-unit id="792c390525190720715e6a233a6f94bb60a405c6" translate="yes" xml:space="preserve">
          <source>Register a custom op. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;&quot;Custom Operators&quot; in perlguts&lt;/a&gt;.</source>
          <target state="translated">注册自定义操作。请参阅&lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;perlguts中的&amp;ldquo;自定义运算符&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32768c69ecf0dff5e646d0bfd71db75d2879eebb" translate="yes" xml:space="preserve">
          <source>Register a custom op. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Custom Operators in perlguts&lt;/a&gt;.</source>
          <target state="translated">注册自定义操作。请参阅&lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;perlguts中的自定义运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7df342aca740956846e18c993fdf1ade81d92c02" translate="yes" xml:space="preserve">
          <source>Register a set of hooks to be called when the Perl lexical scope changes at compile time. See &lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;&quot;Compile-time scope hooks&quot; in perlguts&lt;/a&gt;.</source>
          <target state="translated">在Perl词法作用域在编译时更改时，注册一组要调用的钩子。请参阅&lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;perlguts中的&amp;ldquo;编译时作用域挂钩&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5424e4e93ac098b5e8beea3526819cfd99f58b1" translate="yes" xml:space="preserve">
          <source>Register a set of hooks to be called when the Perl lexical scope changes at compile time. See &lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;Compile-time scope hooks in perlguts&lt;/a&gt;.</source>
          <target state="translated">注册Perl词法作用域在编译时更改时要调用的一组挂钩。请参阅&lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;perlguts中的编译时作用域挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="df9ad37004c27557ab53b912f7280b8fb9962ace" translate="yes" xml:space="preserve">
          <source>Registered CPAN sites</source>
          <target state="translated">注册的CPAN站点</target>
        </trans-unit>
        <trans-unit id="19d2e7547fd048a0e32411d06c1a221c81a8573d" translate="yes" xml:space="preserve">
          <source>Registered message handlers will receive the &lt;code&gt;autodie::exception&lt;/code&gt; object as the first parameter.</source>
          <target state="translated">注册的消息处理程序将接收 &lt;code&gt;autodie::exception&lt;/code&gt; 对象作为第一个参数。</target>
        </trans-unit>
        <trans-unit id="deac9f762ddb959ea1c9d2d14ab852216c07b6f9" translate="yes" xml:space="preserve">
          <source>Registers a custom mro plugin. See &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt; for details on this and other mro functions.</source>
          <target state="translated">注册自定义mro插件。有关此功能和其他mro功能的详细信息，请参见&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7877ae3d518e5a3ac907b1ca5135e66d3b9d8241" translate="yes" xml:space="preserve">
          <source>Registers a custom mro plugin. See &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt; for details.</source>
          <target state="translated">注册自定义mro插件。有关详细信息，请参见&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af5502384881efff18844660ff13ec7313be06e2" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; with this factory.</source>
          <target state="translated">向该工厂注册一个新的&lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7129f516a29ae1b88f95a70e0ada41004cf9e1d" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; with this factory.</source>
          <target state="translated">向该工厂注册一个新的&lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2077a060ced5f4acb1e56596b98c0e4478aa005" translate="yes" xml:space="preserve">
          <source>Registers call-backs to wait for user input (i.e., during &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; method). This supersedes tkRunning.</source>
          <target state="translated">注册回调以等待用户输入（即，在 &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; 方法期间）。这取代了tkRunning。</target>
        </trans-unit>
        <trans-unit id="c39f71f5b90a44a32487947bf411e99cb07b957c" translate="yes" xml:space="preserve">
          <source>Registers call-backs to wait for user input (i.e., during &lt;code&gt;readline&lt;/code&gt; method). This supersedes tkRunning.</source>
          <target state="translated">注册回调以等待用户输入（即在 &lt;code&gt;readline&lt;/code&gt; 方法期间）。这取代了tkRunning。</target>
        </trans-unit>
        <trans-unit id="e27b06aab15f95234c4446552363f21ecaed6e8c" translate="yes" xml:space="preserve">
          <source>Registry also implies thread support. When a new thread is created, all references are replaced with new ones, including all objects. If a hash uses the reference address of an object as a key, that connection would be broken. With a registered object, its id will be updated in all hashes registered with it.</source>
          <target state="translated">注册表还意味着线程支持。当一个新的线程被创建时,所有的引用都会被替换成新的引用,包括所有的对象。如果一个哈希使用一个对象的引用地址作为键,那么这个连接就会被破坏。对于一个注册的对象,它的id将在所有与它注册的哈希中被更新。</target>
        </trans-unit>
        <trans-unit id="4bacb90045e51515a8cca4133e12bf8882319e99" translate="yes" xml:space="preserve">
          <source>Regops</source>
          <target state="translated">Regops</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正则表达式</target>
        </trans-unit>
        <trans-unit id="125fc51b3041de14563de9cacb9226f187d6dd39" translate="yes" xml:space="preserve">
          <source>Regular Expressions for Version Parsing</source>
          <target state="translated">用于版本解析的正则表达式</target>
        </trans-unit>
        <trans-unit id="0fbc4a31dd22babd111133268afa4401e34123ac" translate="yes" xml:space="preserve">
          <source>Regular expression checks for safe file names or mail addresses using &lt;code&gt;\w&lt;/code&gt; may be spoofed by an &lt;code&gt;LC_CTYPE&lt;/code&gt; locale that claims that characters such as &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;|&quot;&lt;/code&gt; are alphanumeric.</source>
          <target state="translated">使用 &lt;code&gt;\w&lt;/code&gt; 正则表达式检查安全文件名或邮件地址可能被 &lt;code&gt;LC_CTYPE&lt;/code&gt; 语言环境所欺骗，该语言环境声称诸如 &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;|&quot;&lt;/code&gt; 字符 是字母数字。</target>
        </trans-unit>
        <trans-unit id="f653e70d0a5f34832e6fd555fea8d484a6091ad7" translate="yes" xml:space="preserve">
          <source>Regular expression look-ahead</source>
          <target state="translated">正则表达式前瞻</target>
        </trans-unit>
        <trans-unit id="c681a6966d51e6a568123eb7bf664ff2a725cf29" translate="yes" xml:space="preserve">
          <source>Regular expression lookahead</source>
          <target state="translated">正则表达式先看</target>
        </trans-unit>
        <trans-unit id="b487cbb4d657a7c4f73278c4486e7c1daa79c258" translate="yes" xml:space="preserve">
          <source>Regular expression modifiers are usually written in documentation as</source>
          <target state="translated">正则表达式修饰符在文档中通常写为</target>
        </trans-unit>
        <trans-unit id="6656538264030cf82789e744d1ce709e6f5c78ee" translate="yes" xml:space="preserve">
          <source>Regular expression modifiers are usually written in documentation as e.g., &quot;the &lt;code&gt;/x&lt;/code&gt; modifier&quot;, even though the delimiter in question might not really be a slash. The modifiers &lt;code&gt;/imsxadlup&lt;/code&gt; may also be embedded within the regular expression itself using the &lt;code&gt;(?...)&lt;/code&gt; construct, see &lt;a href=&quot;#Extended-Patterns&quot;&gt;Extended Patterns&lt;/a&gt; below.</source>
          <target state="translated">正则表达式修饰符通常在文档中以&amp;ldquo; &lt;code&gt;/x&lt;/code&gt; 修饰符&amp;rdquo;的形式编写，即使所讨论的分隔符可能不是真正的斜杠。修饰符 &lt;code&gt;/imsxadlup&lt;/code&gt; 也可以使用 &lt;code&gt;(?...)&lt;/code&gt; 构造嵌入在正则表达式本身中，请参见下面的&lt;a href=&quot;#Extended-Patterns&quot;&gt;扩展模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="214669761a8c7d463593822e661ec6c927253157" translate="yes" xml:space="preserve">
          <source>Regular expression pattern matching may surprise you if you're not accustomed to Unicode. Starting in Perl 5.14, several pattern modifiers are available to control this, called the character set modifiers. Details are given in &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;&quot;Character set modifiers&quot; in perlre&lt;/a&gt;.</source>
          <target state="translated">如果您不习惯Unicode，则正则表达式模式匹配可能会让您感到惊讶。从Perl 5.14开始，可以使用几种模式修饰符来控制它，称为字符集修饰符。详细信息&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;在perlre的&amp;ldquo;字符集修饰符&amp;rdquo;中给出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7b9b0569784ec03684164534290764251f5a4a5" translate="yes" xml:space="preserve">
          <source>Regular expression pattern matching may surprise you if you're not accustomed to Unicode. Starting in Perl 5.14, several pattern modifiers are available to control this, called the character set modifiers. Details are given in &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt;.</source>
          <target state="translated">如果您不习惯Unicode，则正则表达式模式匹配可能会让您感到惊讶。从Perl 5.14开始，可以使用几种模式修饰符来控制它，称为字符集修饰符。详细信息&lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;在perlre的&amp;ldquo;字符集&amp;rdquo;修饰符中给出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f537368aa5e4503b1bb0486efde9146cb1692cce" translate="yes" xml:space="preserve">
          <source>Regular expression patterns can be compiled using &lt;a href=&quot;perlop#qr%2FSTRING%2Fmsixpodualn&quot;&gt;qr//&lt;/a&gt; with actual matching deferred to later. Again, it is whether or not the compilation was done within the scope of &lt;code&gt;use locale&lt;/code&gt; that determines the match behavior, not if the matches are done within such a scope or not.</source>
          <target state="translated">可以使用&lt;a href=&quot;perlop#qr%2FSTRING%2Fmsixpodualn&quot;&gt;qr //&lt;/a&gt;编译正则表达式模式，并将实际匹配推迟到以后。同样，是由编译是否在 &lt;code&gt;use locale&lt;/code&gt; 的范围内完成来确定匹配行为的，而不是由匹配是否在这样的范围内完成来确定的。</target>
        </trans-unit>
        <trans-unit id="7a6506eb05d7e28ac20c066a5dc5a473a5b60331" translate="yes" xml:space="preserve">
          <source>Regular expression patterns can be compiled using &lt;a href=&quot;perlop#qr%2fSTRING%2fmsixpodualn&quot;&gt;qr//&lt;/a&gt; with actual matching deferred to later. Again, it is whether or not the compilation was done within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; that determines the match behavior, not if the matches are done within such a scope or not.</source>
          <target state="translated">可以使用&lt;a href=&quot;perlop#qr%2fSTRING%2fmsixpodualn&quot;&gt;qr //&lt;/a&gt;编译正则表达式模式，而实际匹配则推迟到以后。同样，是由编译是否在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 的范围内完成来确定匹配行为的，而不是由是否在这样的范围内进行匹配来确定的。</target>
        </trans-unit>
        <trans-unit id="3172c4ae8fee97c04bb506eac2e6f47443f5a679" translate="yes" xml:space="preserve">
          <source>Regular expressions</source>
          <target state="translated">正则表达式</target>
        </trans-unit>
        <trans-unit id="58710b0061794045424cb99635316dd1d5bcaa15" translate="yes" xml:space="preserve">
          <source>Regular expressions - Perl's regular expression engine is so called NFA (Non-deterministic Finite Automaton), which among other things means that it can rather easily consume large amounts of both time and space if the regular expression may match in several ways. Careful crafting of the regular expressions can help but quite often there really isn't much one can do (the book &quot;Mastering Regular Expressions&quot; is required reading, see &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;). Running out of space manifests itself by Perl running out of memory.</source>
          <target state="translated">正则表达式-Perl的正则表达式引擎称为NFA（非确定性有限自动机），这意味着，如果正则表达式可以通过多种方式匹配，它很容易消耗大量的时间和空间。精心设计正则表达式可能会有所帮助，但很多时候确实确实无能为力（需要阅读&amp;ldquo;精通正则表达式&amp;rdquo;这本书，请参阅&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;）。 Perl内存不足将显示空间不足。</target>
        </trans-unit>
        <trans-unit id="be374f79f7a6dda7b312225eccc1af30acb48497" translate="yes" xml:space="preserve">
          <source>Regular expressions also play a big role in</source>
          <target state="translated">正则表达式也起到了很大的作用。</target>
        </trans-unit>
        <trans-unit id="75267a865c88ae1ca6e094d943e4c9a5facfa7f6" translate="yes" xml:space="preserve">
          <source>Regular expressions and pattern matching</source>
          <target state="translated">正则表达式和模式匹配</target>
        </trans-unit>
        <trans-unit id="7fe7f76389310f95a034b6d8e308094e4de06035" translate="yes" xml:space="preserve">
          <source>Regular expressions are strings with the very particular syntax and meaning described in this document and auxiliary documents referred to by this one. The strings are called &quot;patterns&quot;. Patterns are used to determine if some other string, called the &quot;target&quot;, has (or doesn't have) the characteristics specified by the pattern. We call this &quot;matching&quot; the target string against the pattern. Usually the match is done by having the target be the first operand, and the pattern be the second operand, of one of the two binary operators &lt;code&gt;=~&lt;/code&gt; and &lt;code&gt;!~&lt;/code&gt;, listed in &lt;a href=&quot;perlop#Binding-Operators&quot;&gt;&quot;Binding Operators&quot; in perlop&lt;/a&gt;; and the pattern will have been converted from an ordinary string by one of the operators in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&quot;Regexp Quote-Like Operators&quot; in perlop&lt;/a&gt;, like so:</source>
          <target state="translated">正则表达式是具有非常特殊的语法和含义的字符串，这些语法和含义在本文档和本文档所引用的辅助文档中都有描述。这些字符串称为&amp;ldquo;模式&amp;rdquo;。模式用于确定其他字符串（称为&amp;ldquo;目标&amp;rdquo;）是否具有（或不具有）模式指定的特征。我们称此为目标字符串与模式的&amp;ldquo;匹配&amp;rdquo;。通常，匹配是通过&lt;a href=&quot;perlop#Binding-Operators&quot;&gt;在perlop的&amp;ldquo;绑定运算符&amp;rdquo;中&lt;/a&gt;列出的两个二进制运算符 &lt;code&gt;=~&lt;/code&gt; 和 &lt;code&gt;!~&lt;/code&gt; 的一个作为目标的第一个操作数，而模式是第二个操作数来完成的；并且该模式将由&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;&amp;ldquo; Regexp Quote-Like运算符&amp;rdquo;&lt;/a&gt;中的运算符之一从普通字符串转换而来在perlop中，就像这样：</target>
        </trans-unit>
        <trans-unit id="e793789416bdeebd608abb2fbd64ea7f19b94580" translate="yes" xml:space="preserve">
          <source>Regular expressions have the undeserved reputation of being abstract and difficult to understand. Regular expressions are constructed using simple concepts like conditionals and loops and are no more difficult to understand than the corresponding &lt;code&gt;if&lt;/code&gt; conditionals and &lt;code&gt;while&lt;/code&gt; loops in the Perl language itself. In fact, the main challenge in learning regular expressions is just getting used to the terse notation used to express these concepts.</source>
          <target state="translated">正则表达式具有抽象和难以理解的不应有的声誉。正则表达式是使用简单的概念（如条件和循环）构造的，与Perl语言本身中的条件和 &lt;code&gt;while&lt;/code&gt; 循环对应的 &lt;code&gt;if&lt;/code&gt; 一样,不难理解。实际上，学习正则表达式的主要挑战只是适应用于表达这些概念的简洁符号。</target>
        </trans-unit>
        <trans-unit id="864a45cdc12d75f30e64c50fcb15f5b075030aac" translate="yes" xml:space="preserve">
          <source>Regular expressions have the undeserved reputation of being abstract and difficult to understand. This really stems simply because the notation used to express them tends to be terse and dense, and not because of inherent complexity. We recommend using the &lt;code&gt;/x&lt;/code&gt; regular expression modifier (described below) along with plenty of white space to make them less dense, and easier to read. Regular expressions are constructed using simple concepts like conditionals and loops and are no more difficult to understand than the corresponding &lt;code&gt;if&lt;/code&gt; conditionals and &lt;code&gt;while&lt;/code&gt; loops in the Perl language itself.</source>
          <target state="translated">正则表达式具有抽象和难以理解的不应有的声誉。造成这种情况的真正原因仅仅是因为用来表达它们的符号往往是简洁而密集的，而不是因为其固有的复杂性。我们建议使用 &lt;code&gt;/x&lt;/code&gt; 正则表达式修饰符（如下所述）以及足够的空格，以使它们不太密集并且更易于阅读。正则表达式使用的是像条件和循环简单的概念，构建并没有更多的困难比相应的了解 &lt;code&gt;if&lt;/code&gt; 条件语句，并 &lt;code&gt;while&lt;/code&gt; 在Perl语言本身的循环。</target>
        </trans-unit>
        <trans-unit id="7c932d258fd79007d480838ca74a010e59fd68d2" translate="yes" xml:space="preserve">
          <source>Regular expressions match whole characters. For example, &lt;code&gt;&quot;.&quot;&lt;/code&gt; matches a whole character instead of only a single byte.</source>
          <target state="translated">正则表达式匹配整个字符。例如， &lt;code&gt;&quot;.&quot;&lt;/code&gt; 匹配整个字符，而不是单个字节。</target>
        </trans-unit>
        <trans-unit id="a79155533f0f2c06638d1868af933b0e25966e2d" translate="yes" xml:space="preserve">
          <source>Regular expressions provide a terse and powerful programming language. As with most other power tools, power comes together with the ability to wreak havoc.</source>
          <target state="translated">正则表达式提供了一种简洁而强大的编程语言。与大多数其他电动工具一样,强大的力量与肆虐的能力一起出现。</target>
        </trans-unit>
        <trans-unit id="632284d6d44cd285a0879407d2b79c59fd92e9cc" translate="yes" xml:space="preserve">
          <source>Regular file.</source>
          <target state="translated">常规文件。</target>
        </trans-unit>
        <trans-unit id="fa2c6bd7eee60827022c13e6cc38e892107043fd" translate="yes" xml:space="preserve">
          <source>Regular variables and functions are quite easy to pass: just pass in a reference to an existing or anonymous variable or function:</source>
          <target state="translated">常规变量和函数的传递非常简单:只需传递一个对现有的或匿名变量或函数的引用。</target>
        </trans-unit>
        <trans-unit id="af06404eb846b3d81ab18b2196a8e2e5e357705a" translate="yes" xml:space="preserve">
          <source>Reini Urban &amp;lt;rurban@cpan.org&amp;gt;</source>
          <target state="translated">Reini Urban &amp;lt;rurban@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d6331fbf9d7d8d43382e44e21b406e367129ecf9" translate="yes" xml:space="preserve">
          <source>Reinitialize the connection, flushing all I/O and account information.</source>
          <target state="translated">重新初始化连接,刷新所有I/O和账户信息。</target>
        </trans-unit>
        <trans-unit id="438740077328d1b63fd3768d9bcfec9fe8cf3156" translate="yes" xml:space="preserve">
          <source>Reinitialize the encodings from the locale. You want to call this function if you changed anything in the environment that might influence the locale.</source>
          <target state="translated">重新初始化locale的编码。如果你在环境中改变了任何可能影响locale的东西,你要调用这个函数。</target>
        </trans-unit>
        <trans-unit id="3df1d5b7df0c57f96ce32609e0558ca2f232e641" translate="yes" xml:space="preserve">
          <source>Reinitializes the Test::Builder singleton to its original state. Mostly useful for tests run in persistent environments where the same test might be run multiple times in the same process.</source>
          <target state="translated">将 Test::Builder 单元重新初始化为原始状态。对于在持久化环境中运行的测试非常有用,因为同一个测试可能会在同一个进程中运行多次。</target>
        </trans-unit>
        <trans-unit id="207e12a4b3002c04d19de8b0142ced7d247caee9" translate="yes" xml:space="preserve">
          <source>Reinventing the wheel</source>
          <target state="translated">重塑车轮</target>
        </trans-unit>
        <trans-unit id="5080ebd78aaa8f3e4acd6d4cd153e6b28156a27a" translate="yes" xml:space="preserve">
          <source>Related Projects</source>
          <target state="translated">相关项目</target>
        </trans-unit>
        <trans-unit id="717630b2cad6e540d8db910a43ea8b5ec4baa4f7" translate="yes" xml:space="preserve">
          <source>Related to this, you probably should not use the &lt;code&gt;-r&lt;/code&gt; option of Configure in AIX, because that affects of how the &lt;code&gt;nm&lt;/code&gt; tool is used.</source>
          <target state="translated">与此相关的是，您可能不应该在AIX中使用Configure 的 &lt;code&gt;-r&lt;/code&gt; 选项，因为这会影响 &lt;code&gt;nm&lt;/code&gt; 工具的使用方式。</target>
        </trans-unit>
        <trans-unit id="354032ada697719ccb58ca87cd221831508c42b3" translate="yes" xml:space="preserve">
          <source>Relational Operators</source>
          <target state="translated">关系运算符</target>
        </trans-unit>
        <trans-unit id="229981dd1dc44fcc3bf72493583bb63fa236cecf" translate="yes" xml:space="preserve">
          <source>Relationships</source>
          <target state="translated">Relationships</target>
        </trans-unit>
        <trans-unit id="ad91c52a0a60eb223f0b73047b8954c0e909fcea" translate="yes" xml:space="preserve">
          <source>Relative backreferences</source>
          <target state="translated">相对后参照</target>
        </trans-unit>
        <trans-unit id="9025d894508169e5e903de46adc4c6ac9d714912" translate="yes" xml:space="preserve">
          <source>Relative referencing</source>
          <target state="translated">相对引用</target>
        </trans-unit>
        <trans-unit id="d41f56cea1ac933d25c57aebc6522e2b6c58eb87" translate="yes" xml:space="preserve">
          <source>Release</source>
          <target state="translated">Release</target>
        </trans-unit>
        <trans-unit id="8ebf1f02960a88683ce31dd07c926d87fc656eab" translate="yes" xml:space="preserve">
          <source>Release 5.005 grandfathered old global symbol names by providing preprocessor macros for extension source compatibility. As of release 5.6, these preprocessor definitions are not available by default. The POLLUTE flag specifies that the old names should still be defined:</source>
          <target state="translated">5.005版通过提供预处理程序宏来实现扩展源的兼容性,从而使旧的全局符号名称成为过去。从5.6版开始,这些预处理程序的定义在默认情况下不可用。POLLUTE标志指定旧名称仍应被定义。</target>
        </trans-unit>
        <trans-unit id="656417ddc071609de63ac9a1f4d853854b5a0fdc" translate="yes" xml:space="preserve">
          <source>Release considerations</source>
          <target state="translated">释放考虑因素</target>
        </trans-unit>
        <trans-unit id="fac91889aeb38f3b3b4a4db4a0e6d3642a61874e" translate="yes" xml:space="preserve">
          <source>Release notes or changelogs should be produced for each release of your software describing user-visible changes to your module, in terms relevant to the user.</source>
          <target state="translated">应该为您的软件的每一个版本制作发行说明或变更日志,用与用户相关的术语描述用户可见的模块变更。</target>
        </trans-unit>
        <trans-unit id="c8cc0888a14f29d38afa66572a91a53acc990a60" translate="yes" xml:space="preserve">
          <source>Released as Module::Metadata by Matt S Trout (mst) &amp;lt;mst@shadowcat.co.uk&amp;gt; with assistance from David Golden (xdg) &amp;lt;dagolden@cpan.org&amp;gt;.</source>
          <target state="translated">在David Golden（xdg）&amp;lt;dagolden@cpan.org&amp;gt;的协助下，由Matt S Trout（mst）&amp;lt;mst@shadowcat.co.uk&amp;gt;作为Module :: Metadata发布。</target>
        </trans-unit>
        <trans-unit id="6ba1c61f378b869ee5ff1bf4815e10dba0616c84" translate="yes" xml:space="preserve">
          <source>Releases a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">释放一个Perl解释器。见&lt;a href=&quot;perlembed&quot;&gt;临危&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00d2b450b5b036ad7f71725bacd2b3202c175677" translate="yes" xml:space="preserve">
          <source>Releases a mutual exclusion lock on &lt;code&gt;sv&lt;/code&gt; if a suitable module has been loaded.</source>
          <target state="translated">如果已加载合适的模块，则释放 &lt;code&gt;sv&lt;/code&gt; 上的互斥锁。</target>
        </trans-unit>
        <trans-unit id="be7b5a45a9634bcc78901f710b5c0f2b2c340dd7" translate="yes" xml:space="preserve">
          <source>Releases a mutual exclusion lock on sv if a suitable module has been loaded.</source>
          <target state="translated">如果加载了合适的模块,则释放sv的互斥锁。</target>
        </trans-unit>
        <trans-unit id="3fa7f726b17b30c4cd0c57ed6fafc444c8997592" translate="yes" xml:space="preserve">
          <source>Releases a previous device reservation. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">释放先前的设备预留。 &lt;code&gt;$pInBuf&lt;/code&gt; 和 &lt;code&gt;$opOutBuf&lt;/code&gt; 都应为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0bb1a7f09c12615b854828283a55811f8578efc" translate="yes" xml:space="preserve">
          <source>Releasing the context tells the system you are done with it. This gives it a chance to run any necessary callbacks or cleanup tasks. If you forget to release the context it will try to detect the problem and warn you about it.</source>
          <target state="translated">释放上下文告诉系统你已经完成了它。这使它有机会运行任何必要的回调或清理任务。如果你忘记释放上下文,它将尝试检测问题并警告你。</target>
        </trans-unit>
        <trans-unit id="15aaabc3fc05a859dc53c1dbd9485280dc3c8707" translate="yes" xml:space="preserve">
          <source>Relevant only if Perl is compiled with the &lt;code&gt;malloc&lt;/code&gt; included with the Perl distribution; that is, if &lt;code&gt;perl -V:d_mymalloc&lt;/code&gt; is &quot;define&quot;.</source>
          <target state="translated">仅当使用Perl发行版中包含的 &lt;code&gt;malloc&lt;/code&gt; 编译Perl时才相关；也就是说，如果 &lt;code&gt;perl -V:d_mymalloc&lt;/code&gt; 为&amp;ldquo;定义&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="943874c75240886ef86a43aa1a27aa553887e60b" translate="yes" xml:space="preserve">
          <source>Relevant only if your Perl executable was built with &lt;b&gt;-DDEBUGGING&lt;/b&gt;, this controls the behaviour of global destruction of objects and other references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt; for more information.</source>
          <target state="translated">仅当您的Perl可执行文件是使用&lt;b&gt;-DDEBUGGING生成的时&lt;/b&gt;，此&lt;b&gt;选项才相关&lt;/b&gt;，这将控制对象和其他引用的全局销毁行为。有关更多信息，请参见&lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;perlhacktips中的PERL_DESTRUCT_LEVEL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9212a457c3732633841ee386978ed99e344f1331" translate="yes" xml:space="preserve">
          <source>Relies on being called from within CPAN.pm.</source>
          <target state="translated">依靠从CPAN.pm内调用。</target>
        </trans-unit>
        <trans-unit id="bc501c27012ecb7ab368ca72ce5b915779f3eaba" translate="yes" xml:space="preserve">
          <source>Reloads all indices if they have not been read for more than &lt;code&gt;$CPAN::Config-&amp;gt;{index_expire}&lt;/code&gt; days.</source>
          <target state="translated">如果没有被读取超过 &lt;code&gt;$CPAN::Config-&amp;gt;{index_expire}&lt;/code&gt; 天，则重新装入所有索引。</target>
        </trans-unit>
        <trans-unit id="9800d194d04e01bd77c19b66a3f04a5d9ee107e4" translate="yes" xml:space="preserve">
          <source>Remainder when</source>
          <target state="translated">剩余时间</target>
        </trans-unit>
        <trans-unit id="a1313ebbb85f6da8d318130886abe1f13a261393" translate="yes" xml:space="preserve">
          <source>Remaining arguments will be slurped into a &lt;code&gt;%params&lt;/code&gt; hash.</source>
          <target state="translated">其余参数将被混入 &lt;code&gt;%params&lt;/code&gt; 哈希中。</target>
        </trans-unit>
        <trans-unit id="d7020f448aaf8aacc8b4d63537e375e865fff9d8" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Remarks</target>
        </trans-unit>
        <trans-unit id="fd0fbd5e977146b9d49a1bb9513dae2c00d4cab0" translate="yes" xml:space="preserve">
          <source>Remember not to encode a full URI, you need to escape each component separately and then join them together.</source>
          <target state="translated">记住不要对一个完整的URI进行编码,你需要分别转义每个组件,然后将它们连接在一起。</target>
        </trans-unit>
        <trans-unit id="9a11550a2b50920bc08b8bae13e607c48b5110ac" translate="yes" xml:space="preserve">
          <source>Remember not to use &lt;code&gt;=&lt;/code&gt; when you need &lt;code&gt;=~&lt;/code&gt; ; these two constructs are quite different:</source>
          <target state="translated">记住在需要 &lt;code&gt;=~&lt;/code&gt; 时不要使用 &lt;code&gt;=&lt;/code&gt; ; 这两个构造有很大的不同：</target>
        </trans-unit>
        <trans-unit id="558184d42ecf9b7592eb4fd3cf38515d7785ce07" translate="yes" xml:space="preserve">
          <source>Remember not to use &lt;code&gt;=&lt;/code&gt; when you need &lt;code&gt;=~&lt;/code&gt;; these two constructs are quite different:</source>
          <target state="translated">记住在需要 &lt;code&gt;=~&lt;/code&gt; 时不要使用 &lt;code&gt;=&lt;/code&gt; ; 这两个构造有很大的不同：</target>
        </trans-unit>
        <trans-unit id="67fc2e258765c2443b977ec7fde73394c2ad46f9" translate="yes" xml:space="preserve">
          <source>Remember that &quot;my&quot;, &quot;our&quot;, &quot;local&quot; and &quot;state&quot; bind tighter than comma.</source>
          <target state="translated">记住 &quot;我的&quot;、&quot;我们的&quot;、&quot;地方的&quot;、&quot;国家的 &quot;比逗号捆绑得更紧。</target>
        </trans-unit>
        <trans-unit id="1eaeae41b9d2cba51fd4b49832eb6ea43d3d9e3e" translate="yes" xml:space="preserve">
          <source>Remember that &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;'s diag function will not add newlines to the end of output and test_diag will. So to check</source>
          <target state="translated">请记住，&lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt;的diag函数不会在输出末尾添加换行符，而test_diag会添加。所以要检查</target>
        </trans-unit>
        <trans-unit id="6cbdfe78c607c608b002f37d835506efb4d9c8bd" translate="yes" xml:space="preserve">
          <source>Remember that &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt;'s diag function will not add newlines to the end of output and test_diag will. So to check</source>
          <target state="translated">请记住，&lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt;的diag函数不会在输出末尾添加换行符，而test_diag会添加。所以要检查</target>
        </trans-unit>
        <trans-unit id="ca827509fa317de9b151f205a99c10ad34bc2a42" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;$^N&lt;/code&gt; is set to whatever was matched by the last completed capture group. This prints</source>
          <target state="translated">请记住， &lt;code&gt;$^N&lt;/code&gt; 设置为最后完成的捕获组所匹配的值。此打印</target>
        </trans-unit>
        <trans-unit id="b2a6bc5b994852a181e7009e78d2e536abe58494" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; merely truncates toward 0. For rounding to a certain number of digits, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; is usually the easiest route.</source>
          <target state="translated">请记住， &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; 只会截断为0。为了舍入到一定位数， &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 通常是最简单的方法。</target>
        </trans-unit>
        <trans-unit id="d3286289db77afd9191ea9bf57cb305d2f1b7b35" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;hv_store&lt;/code&gt; and &lt;code&gt;hv_fetch&lt;/code&gt; return &lt;code&gt;SV**&lt;/code&gt; 's and not just &lt;code&gt;SV*&lt;/code&gt; . To access the scalar value, you must first dereference the return value. However, you should check to make sure that the return value is not NULL before dereferencing it.</source>
          <target state="translated">请记住， &lt;code&gt;hv_store&lt;/code&gt; 和 &lt;code&gt;hv_fetch&lt;/code&gt; 返回的是 &lt;code&gt;SV**&lt;/code&gt; ，而不仅仅是 &lt;code&gt;SV*&lt;/code&gt; 。要访问标量值，必须首先取消引用返回值。但是，在取消引用返回值之前，应检查以确保返回值不为NULL。</target>
        </trans-unit>
        <trans-unit id="fa6246e743537a206abf04f9ebac4c2bdc0eccb4" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;hv_store&lt;/code&gt; and &lt;code&gt;hv_fetch&lt;/code&gt; return &lt;code&gt;SV**&lt;/code&gt;'s and not just &lt;code&gt;SV*&lt;/code&gt;. To access the scalar value, you must first dereference the return value. However, you should check to make sure that the return value is not NULL before dereferencing it.</source>
          <target state="translated">请记住， &lt;code&gt;hv_store&lt;/code&gt; 和 &lt;code&gt;hv_fetch&lt;/code&gt; 返回的是 &lt;code&gt;SV**&lt;/code&gt; ，而不仅仅是 &lt;code&gt;SV*&lt;/code&gt; 。要访问标量值，必须首先取消引用返回值。但是，在取消引用返回值之前，应检查以确保返回值不为NULL。</target>
        </trans-unit>
        <trans-unit id="fc3d062f24df243d725170a57b6b1b242b0658db" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;int()&lt;/code&gt; merely truncates toward 0. For rounding to a certain number of digits, &lt;code&gt;sprintf()&lt;/code&gt; or &lt;code&gt;printf()&lt;/code&gt; is usually the easiest route.</source>
          <target state="translated">请记住， &lt;code&gt;int()&lt;/code&gt; 只会截断为0。为了舍入到一定位数， &lt;code&gt;sprintf()&lt;/code&gt; 或 &lt;code&gt;printf()&lt;/code&gt; 通常是最简单的方法。</target>
        </trans-unit>
        <trans-unit id="dd12c8c58071e3d0f8ec874ed5f0be457402b8c4" translate="yes" xml:space="preserve">
          <source>Remember that Perl distinguishes between a key not existing in the hash, and the key existing in the hash but having a corresponding value of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The two possibilities can be tested with the &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined()&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">请记住，Perl区分哈希中不存在的密钥和哈希中存在但具有相应值 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 的密钥。可以使用 &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined()&lt;/a&gt;&lt;/code&gt; 函数测试这两种可能性。</target>
        </trans-unit>
        <trans-unit id="01cb868bfbbfc1e5bc0989282c4a6baa8b9dae2e" translate="yes" xml:space="preserve">
          <source>Remember that Perl distinguishes between a key not existing in the hash, and the key existing in the hash but having a corresponding value of &lt;code&gt;undef&lt;/code&gt;. The two possibilities can be tested with the &lt;code&gt;exists()&lt;/code&gt; and &lt;code&gt;defined()&lt;/code&gt; functions.</source>
          <target state="translated">请记住，Perl区分哈希中不存在的密钥和哈希中存在但具有对应值 &lt;code&gt;undef&lt;/code&gt; 的密钥。可以使用 &lt;code&gt;exists()&lt;/code&gt; 和 &lt;code&gt;defined()&lt;/code&gt; 函数测试这两种可能性。</target>
        </trans-unit>
        <trans-unit id="b32d78dc03b8840549601d8279db2304a336e903" translate="yes" xml:space="preserve">
          <source>Remember that a umask is a number, usually given in octal; it is</source>
          <target state="translated">请记住,umask是一个数字,通常用八进制表示;它是指</target>
        </trans-unit>
        <trans-unit id="e8d7a726ced16e5e5bdec26b5e8725ff4effd3af" translate="yes" xml:space="preserve">
          <source>Remember that both map and grep expect a LIST argument, so doing this:</source>
          <target state="translated">请记住,map和grep都期望有一个LIST参数,所以这样做。</target>
        </trans-unit>
        <trans-unit id="cf98bc15c6d2e6d5b3119e11999c1516475b1b22" translate="yes" xml:space="preserve">
          <source>Remember that it has to be &lt;code&gt;patcopy+1&lt;/code&gt; because the first character of the string is the &lt;code&gt;U&lt;/code&gt; which has been swallowed into &lt;code&gt;datumtype!&lt;/code&gt;</source>
          <target state="translated">请记住，它必须是 &lt;code&gt;patcopy+1&lt;/code&gt; ,因为字符串的第一个字符是被吞入 &lt;code&gt;datumtype!&lt;/code&gt; 类型的 &lt;code&gt;U&lt;/code&gt; ！</target>
        </trans-unit>
        <trans-unit id="2fc569ae6eac2ea65834accd6b0d6887e151184a" translate="yes" xml:space="preserve">
          <source>Remember that lines consisting entirely of whitespace will disappear, since the first part of the alternation can match the entire string and replace it with nothing. If you need to keep embedded blank lines, you have to do a little more work. Instead of matching any whitespace (since that includes a newline), just match the other whitespace:</source>
          <target state="translated">请记住,完全由空格组成的行将会消失,因为交替的第一部分可以匹配整个字符串并将其替换为无。如果你需要保留嵌入的空行,你必须做更多的工作。不要匹配任何空白字符(因为这包括换行),而只需匹配其他空白字符。</target>
        </trans-unit>
        <trans-unit id="9e76ea83298c76444ca3d7987b1205c255f1a2be" translate="yes" xml:space="preserve">
          <source>Remember that many operations behave differently in a list context than they do in a scalar one. See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; for details.</source>
          <target state="translated">请记住，许多操作在列表上下文中的行为不同于在标量上下文中的行为。有关详细信息，请参见&lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="646cf6fab482d7d4b5340740e234cef55c79a20a" translate="yes" xml:space="preserve">
          <source>Remember that most patterns (using //) will need to be anchored with a leading ^, e.g., &lt;code&gt;/^EXIT/&lt;/code&gt; rather than &lt;code&gt;/EXIT/&lt;/code&gt; .</source>
          <target state="translated">请记住，大多数模式（使用//）都需要以前导^锚定，例如 &lt;code&gt;/^EXIT/&lt;/code&gt; 而不是 &lt;code&gt;/EXIT/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f8d784d1714e16eb8aa702b0b9232c4e90d1a0e" translate="yes" xml:space="preserve">
          <source>Remember that most patterns (using //) will need to be anchored with a leading ^, e.g., &lt;code&gt;/^EXIT/&lt;/code&gt; rather than &lt;code&gt;/EXIT/&lt;/code&gt;.</source>
          <target state="translated">请记住，大多数模式（使用//）都需要以前导^锚定，例如 &lt;code&gt;/^EXIT/&lt;/code&gt; 而不是 &lt;code&gt;/EXIT/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b5c399fc5d7626984daea5c2fe086f26307e484" translate="yes" xml:space="preserve">
          <source>Remember that the entry in the hash will still be there even if the referenced variable goes out of scope, and that it is entirely possible for Perl to subsequently allocate a different variable at the same address. This will mean a new variable might accidentally be associated with the value for an old.</source>
          <target state="translated">请记住,即使被引用的变量超出了作用域,散列中的条目仍然会存在,而且Perl完全有可能随后在同一地址分配一个不同的变量。这将意味着一个新变量可能会意外地与一个旧变量的值相关联。</target>
        </trans-unit>
        <trans-unit id="492d58ef7337b07b50ed2bd4540d00e6479ca36f" translate="yes" xml:space="preserve">
          <source>Remember that this code could be called every millisecond (depending on the output which external command generates), so try to make it as lightweight as possible.</source>
          <target state="translated">请记住,这段代码可能每一毫秒就会被调用一次(取决于外部命令产生的输出),所以要尽量使其轻量化。</target>
        </trans-unit>
        <trans-unit id="75914c58eabb7e0996be487e0e0807e7b8142b07" translate="yes" xml:space="preserve">
          <source>Remember that to use the named constants for flags you must import them, for example with &lt;code&gt;:bsd_glob&lt;/code&gt; described above. If not imported, and &lt;code&gt;use strict&lt;/code&gt; is not in effect, then the constants will be treated as bareword strings, which won't do what you what.</source>
          <target state="translated">请记住，要将命名的常量用于标志，必须导入它们，例如，使用上述的 &lt;code&gt;:bsd_glob&lt;/code&gt; 。如果未导入，并且 &lt;code&gt;use strict&lt;/code&gt; 无效，则这些常量将被视为裸字字符串，这将不会做什么。</target>
        </trans-unit>
        <trans-unit id="cf591952a26d00c380cfecee655ada8011d7bc35" translate="yes" xml:space="preserve">
          <source>Remember that unless you are working on a</source>
          <target state="translated">请记住,除非你的工作是在一个</target>
        </trans-unit>
        <trans-unit id="6358d39d1e6eaeb38857ebca766827c7301190a1" translate="yes" xml:space="preserve">
          <source>Remember that you don't have to do this for an &lt;code&gt;SV *&lt;/code&gt; . The reference documentation for all core typemaps can be found in &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;.</source>
          <target state="translated">请记住，您不必为 &lt;code&gt;SV *&lt;/code&gt; 执行此操作。所有核心类型映射的参考文档可以在&lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="ffda2167e30a1b5728dde670a7357c6cf09c73b2" translate="yes" xml:space="preserve">
          <source>Remember that you don't have to do this for an &lt;code&gt;SV *&lt;/code&gt;. The reference documentation for all core typemaps can be found in &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;.</source>
          <target state="translated">请记住，您不必为 &lt;code&gt;SV *&lt;/code&gt; 执行此操作。所有核心类型映射的参考文档都可以在&lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="555123372304909e0ad37527dea82816796217cb" translate="yes" xml:space="preserve">
          <source>Remember the following important rule: There is &lt;b&gt;no rule&lt;/b&gt; that relates the behavior of an expression in list context to its behavior in scalar context, or vice versa. It might do two totally different things. Each operator and function decides which sort of value would be most appropriate to return in scalar context. Some operators return the length of the list that would have been returned in list context. Some operators return the first value in the list. Some operators return the last value in the list. Some operators return a count of successful operations. In general, they do what you want, unless you want consistency.</source>
          <target state="translated">请记住以下重要规则：&lt;b&gt;没有规则&lt;/b&gt;将表达式在列表上下文中的行为与其在标量上下文中的行为相关联，反之亦然。它可能会做两件完全不同的事情。每个运算符和函数都决定哪种类型的值最适合在标量上下文中返回。一些运算符返回在列表上下文中应返回的列表长度。一些运算符返回列表中的第一个值。一些运算符返回列表中的最后一个值。一些操作员返回成功操作的计数。通常，除非您需要一致性，否则它们会执行您想要的操作。</target>
        </trans-unit>
        <trans-unit id="47e3bd79be5e16cdbfb3336b03f971bf4d0bdbdd" translate="yes" xml:space="preserve">
          <source>Remember these important facts:</source>
          <target state="translated">记住这些重要的事实。</target>
        </trans-unit>
        <trans-unit id="fe3be81bb1bc46e2fb0131edbb793025f77c5a69" translate="yes" xml:space="preserve">
          <source>Remember to ask your translators about numeral formatting in their language, so that you can override the &lt;code&gt;numf&lt;/code&gt; method as appropriate. Typical variables in number formatting are: what to use as a decimal point (comma? period?); what to use as a thousands separator (space? nonbreaking space? comma? period? small middot? prime? apostrophe?); and even whether the so-called &quot;thousands separator&quot; is actually for every third digit -- I've heard reports of two hundred thousand being expressible as &quot;2,00,000&quot; for some Indian (Subcontinental) languages, besides the less surprising &quot;200 000&quot;, &quot;200.000&quot;, &quot;200,000&quot;, and &quot;200'000&quot;. Also, using a set of numeral glyphs other than the usual ASCII &quot;0&quot;-&quot;9&quot; might be appreciated, as via &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/a&gt;&lt;/code&gt; for getting digits in Devanagari script (for Hindi, Konkani, others).</source>
          <target state="translated">请记住向翻译人员询问其语言中的数字格式，以便您可以适当地覆盖 &lt;code&gt;numf&lt;/code&gt; 方法。数字格式中的典型变量是：用作小数点的内容（逗号？句点？）；什么用作千位分隔符（空格，不间断空格，逗号，句点，小中点，质数或撇号）；甚至所谓的&amp;ldquo;千位分隔符&amp;rdquo;是否实际上是每三位数&amp;mdash;我听说有报道称，对于某些印度（次大陆）语言，二十万可以表示为&amp;ldquo; 2,00,000&amp;rdquo;，除了令人惊讶的&amp;ldquo; 200&amp;rdquo; 000&amp;rdquo;，&amp;ldquo; 200.000&amp;rdquo;，&amp;ldquo; 200,000&amp;rdquo;和&amp;ldquo; 200'000&amp;rdquo;。另外，可能会希望使用一组不同于通常的ASCII&amp;ldquo; 0&amp;rdquo;-&amp;ldquo; 9&amp;rdquo;的数字字形，如通过 &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/a&gt;&lt;/code&gt; 用于获取Devanagari脚本中的数字（适用于北印度语，Konkani等）。</target>
        </trans-unit>
        <trans-unit id="17f5daf5b82334e0438adbd9b9c19c4433a6fcb2" translate="yes" xml:space="preserve">
          <source>Remember to ask your translators about numeral formatting in their language, so that you can override the &lt;code&gt;numf&lt;/code&gt; method as appropriate. Typical variables in number formatting are: what to use as a decimal point (comma? period?); what to use as a thousands separator (space? nonbreaking space? comma? period? small middot? prime? apostrophe?); and even whether the so-called &quot;thousands separator&quot; is actually for every third digit -- I've heard reports of two hundred thousand being expressible as &quot;2,00,000&quot; for some Indian (Subcontinental) languages, besides the less surprising &quot;200 000&quot;, &quot;200.000&quot;, &quot;200,000&quot;, and &quot;200'000&quot;. Also, using a set of numeral glyphs other than the usual ASCII &quot;0&quot;-&quot;9&quot; might be appreciated, as via &lt;code&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/code&gt; for getting digits in Devanagari script (for Hindi, Konkani, others).</source>
          <target state="translated">请记住向翻译人员询问其语言中的数字格式，以便您可以适当地覆盖 &lt;code&gt;numf&lt;/code&gt; 方法。数字格式中的典型变量是：用作小数点的内容（逗号？句点？）；什么用作千位分隔符（空格，不间断空格，逗号，句点，小点，质数或撇号）；甚至所谓的&amp;ldquo;千位分隔符&amp;rdquo;是否实际上是每三位数&amp;mdash;我听说有报道称，对于某些印度（次大陆）语言，二十万可以表示为&amp;ldquo; 2,00,000&amp;rdquo;，除了令人惊讶的&amp;ldquo; 200&amp;rdquo; 000&amp;rdquo;，&amp;ldquo; 200.000&amp;rdquo;，&amp;ldquo; 200,000&amp;rdquo;和&amp;ldquo; 200'000&amp;rdquo;。此外，可能会希望使用一组不同于通常的ASCII&amp;ldquo; 0&amp;rdquo;-&amp;ldquo; 9&amp;rdquo;的数字字形，如通过 &lt;code&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/code&gt; 用于获取Devanagari脚本中的数字（适用于北印度语，Konkani等）。</target>
        </trans-unit>
        <trans-unit id="d70ea21e63ec82b011748c0d9ce786e8b0668fd8" translate="yes" xml:space="preserve">
          <source>Remember to check the modules that came with your distribution, and CPAN as well--someone may already have written a module to do it. On Windows, try &lt;a href=&quot;Win32::API&quot;&gt;Win32::API&lt;/a&gt;. On Macs, try &lt;a href=&quot;Mac::Carbon&quot;&gt;Mac::Carbon&lt;/a&gt;. If no module has an interface to the C function, you can inline a bit of C in your Perl source with &lt;a href=&quot;Inline::C&quot;&gt;Inline::C&lt;/a&gt;.</source>
          <target state="translated">切记要检查发行版以及CPAN附带的模块-可能已经有人编写了一个模块来执行此操作。在Windows上，尝试&lt;a href=&quot;Win32::API&quot;&gt;Win32 :: API&lt;/a&gt;。在Mac上，尝试&lt;a href=&quot;Mac::Carbon&quot;&gt;Mac :: Carbon&lt;/a&gt;。如果没有模块的C函数的接口，你可以在你的Perl源与内联位C的&lt;a href=&quot;Inline::C&quot;&gt;内联中：C&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f2114f10064a04bb74059d053450f0147cd1c5a" translate="yes" xml:space="preserve">
          <source>Remember to check the modules that came with your distribution, and CPAN as well--someone may already have written a module to do it. On Windows, try &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::API&quot;&gt;Win32::API&lt;/a&gt;. On Macs, try &lt;a href=&quot;http://search.cpan.org/perldoc/Mac::Carbon&quot;&gt;Mac::Carbon&lt;/a&gt;. If no module has an interface to the C function, you can inline a bit of C in your Perl source with &lt;a href=&quot;http://search.cpan.org/perldoc/Inline::C&quot;&gt;Inline::C&lt;/a&gt;.</source>
          <target state="translated">切记要检查发行版以及CPAN附带的模块-可能已经有人编写了一个模块来执行此操作。在Windows上，尝试&lt;a href=&quot;http://search.cpan.org/perldoc/Win32::API&quot;&gt;Win32 :: API&lt;/a&gt;。在Mac上，尝试&lt;a href=&quot;http://search.cpan.org/perldoc/Mac::Carbon&quot;&gt;Mac :: Carbon&lt;/a&gt;。如果没有模块的C函数的接口，你可以在你的Perl源与内联位C的&lt;a href=&quot;http://search.cpan.org/perldoc/Inline::C&quot;&gt;内联中：C&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d48f25750a4c2c92a30c148e6f484ab2fff22e2" translate="yes" xml:space="preserve">
          <source>Remember to free the previous PV buffer. There are many things to check. Beware that the existing pointer may be involved in copy-on-write or other mischief, so do &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; and use &lt;code&gt;sv_force_normal&lt;/code&gt; or &lt;code&gt;SvPV_force&lt;/code&gt; (or check the &lt;code&gt;SvIsCOW&lt;/code&gt; flag) first to make sure this modification is safe. Then finally, if it is not a COW, call &lt;code&gt;SvPV_free&lt;/code&gt; to free the previous PV buffer.</source>
          <target state="translated">记住要释放先前的PV缓冲区。有很多事情要检查。请注意，现有的指针可能涉及写时复制或其他问题，所以 &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; 也应这样做，并首先使用 &lt;code&gt;sv_force_normal&lt;/code&gt; 或 &lt;code&gt;SvPV_force&lt;/code&gt; （或检查 &lt;code&gt;SvIsCOW&lt;/code&gt; 标志）以确保此修改是安全的。最后，如果不是COW，则调用 &lt;code&gt;SvPV_free&lt;/code&gt; 释放先前的PV缓冲区。</target>
        </trans-unit>
        <trans-unit id="e578e97ce330a4635b211fac80fcb964a9a0c638" translate="yes" xml:space="preserve">
          <source>Remember to free the previous PV buffer. There are many things to check. Beware that the existing pointer may be involved in copy-on-write or other mischief, so do &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; and use &lt;code&gt;sv_force_normal&lt;/code&gt; or &lt;code&gt;SvPV_force&lt;/code&gt; (or check the SvIsCOW flag) first to make sure this modification is safe. Then finally, if it is not a COW, call &lt;code&gt;SvPV_free&lt;/code&gt; to free the previous PV buffer.</source>
          <target state="translated">记住要释放先前的PV缓冲区。有很多事情要检查。请注意，现有的指针可能涉及写时复制或其他问题，所以 &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; 也要这样做，并首先使用 &lt;code&gt;sv_force_normal&lt;/code&gt; 或 &lt;code&gt;SvPV_force&lt;/code&gt; （或检查SvIsCOW标志）以确保此修改是安全的。最后，如果不是COW，则调用 &lt;code&gt;SvPV_free&lt;/code&gt; 释放先前的PV缓冲区。</target>
        </trans-unit>
        <trans-unit id="edbdda7d015901994cff299901620d94df0e7929" translate="yes" xml:space="preserve">
          <source>Remember to keep in mind verb agreement (or adjectives too, in other languages), as in:</source>
          <target state="translated">记住,要记住动词协议(或其他语言中也有形容词),如。</target>
        </trans-unit>
        <trans-unit id="ea14aadc90613c4067d4c78691b62504dd496234" translate="yes" xml:space="preserve">
          <source>Remember to use a hefty wad of stack (I use 2000000)</source>
          <target state="translated">记得要用厚厚的一叠(我用2000000)。</target>
        </trans-unit>
        <trans-unit id="288c61995661b35931506b0caae197170c722414" translate="yes" xml:space="preserve">
          <source>Remember we're in our tiny program with a problem, we should have a look at where we are, and what our data looks like. First of all let's view some code at our present position (the first line of code in this case), via '&lt;b&gt;v&lt;/b&gt;':</source>
          <target state="translated">请记住，我们在我们的小程序中遇到问题，我们应该看看我们在哪里以及数据看起来如何。首先，让我们通过' &lt;b&gt;v&lt;/b&gt; ' 查看当前位置的某些代码（在本例中为第一行代码）：</target>
        </trans-unit>
        <trans-unit id="f6ef210dc6df90e5b38374c442963d215fab9ab2" translate="yes" xml:space="preserve">
          <source>Remember, the returned item is not removed from the queue, so manipulating a &lt;code&gt;peek&lt;/code&gt; ed at reference affects the item on the queue.</source>
          <target state="translated">请记住，返回的项目不会从队列中删除，因此对参考的 &lt;code&gt;peek&lt;/code&gt; 操作会影响队列中的项目。</target>
        </trans-unit>
        <trans-unit id="4586daac5ad820573b2f5fb4716eed6602dc1676" translate="yes" xml:space="preserve">
          <source>Remember, the returned item is not removed from the queue, so manipulating a &lt;code&gt;peek&lt;/code&gt;ed at reference affects the item on the queue.</source>
          <target state="translated">请记住，返回的项目不会从队列中删除，因此对参考的 &lt;code&gt;peek&lt;/code&gt; 操作会影响队列中的项目。</target>
        </trans-unit>
        <trans-unit id="11b6286bdc5e017cb5c74707ecac6d393f327b0a" translate="yes" xml:space="preserve">
          <source>Remember: if you want your subclass to be automatically used by the parser, you'll have to register it with &lt;a href=&quot;TAP::Parser::ResultFactory#register_type&quot;&gt;&quot;register_type&quot; in TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">请记住：如果要让解析器自动使用子类，则必须&lt;a href=&quot;TAP::Parser::ResultFactory#register_type&quot;&gt;在TAP :: Parser :: ResultFactory中&lt;/a&gt;使用&amp;ldquo; register_type&amp;rdquo;注册它。</target>
        </trans-unit>
        <trans-unit id="8ff4183fe49a6a6309b98413d71a4c51c83971ba" translate="yes" xml:space="preserve">
          <source>Remember: if you want your subclass to be automatically used by the parser, you'll have to register it with &lt;a href=&quot;resultfactory#register_type&quot;&gt;register_type in TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">请记住：如果您希望解析器自动使用您的子类，则必须&lt;a href=&quot;resultfactory#register_type&quot;&gt;在TAP :: Parser :: ResultFactory中&lt;/a&gt;使用register_type注册它。</target>
        </trans-unit>
        <trans-unit id="027c26e9ae112bc7c5d4192494b974ff4b801557" translate="yes" xml:space="preserve">
          <source>Remember: the value of &lt;code&gt;$/&lt;/code&gt; is a string, not a regex. &lt;b&gt;awk&lt;/b&gt; has to be better for something. :-)</source>
          <target state="translated">请记住： &lt;code&gt;$/&lt;/code&gt; 的值是一个字符串，而不是正则表达式。&lt;b&gt;awk&lt;/b&gt;必须在某些方面更好。:-)</target>
        </trans-unit>
        <trans-unit id="2304aa6585251451562aa451f542cd4915e4816b" translate="yes" xml:space="preserve">
          <source>Remind the translators to consider the case where N is 0: &quot;0 files found&quot; isn't exactly natural-sounding in any language, but it may be unacceptable in many -- or it may condition special kinds of agreement (similar to English &quot;I didN'T find ANY files&quot;).</source>
          <target state="translated">提醒译者考虑N为0的情况:&quot;找到0个文件 &quot;在任何语言中都不完全是自然的声音,但在许多语言中可能是不可接受的 ----或者它可能是特殊类型的协议的条件(类似于英文的 &quot;I didNT find ANY files&quot;)。</target>
        </trans-unit>
        <trans-unit id="4991fd19b1656961dba99a0989e6b6933395e321" translate="yes" xml:space="preserve">
          <source>Removals, like warnings, are public.</source>
          <target state="translated">搬家和警告一样,都是公开的。</target>
        </trans-unit>
        <trans-unit id="2c1a02136a4770873ad1351ec44089fc6396abba" translate="yes" xml:space="preserve">
          <source>Remove IO from the list of file descriptors for the next poll.</source>
          <target state="translated">从文件描述符列表中删除IO,以便下次投票。</target>
        </trans-unit>
        <trans-unit id="b4205c2e4e5f0753c53b4cd2157f83e877d79608" translate="yes" xml:space="preserve">
          <source>Remove a signal from the SigSet object.</source>
          <target state="translated">从SigSet对象中删除一个信号。</target>
        </trans-unit>
        <trans-unit id="7d773b7155edc83b83cb81a8d5e214998acde808" translate="yes" xml:space="preserve">
          <source>Remove all the given handles from the object. This method also works by the &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; of the handles. So the exact handles that were added need not be passed, just handles that have an equivalent &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从对象中删除所有给定的句柄。该方法也可以通过句柄的 &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; 来工作。因此，无需传递添加的确切句柄，只需传递具有等效 &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; 句柄即可。</target>
        </trans-unit>
        <trans-unit id="730d72f0daf35bb628a413ea2b124f3bb6469399" translate="yes" xml:space="preserve">
          <source>Remove all the given handles from the object. This method also works by the &lt;code&gt;fileno&lt;/code&gt; of the handles. So the exact handles that were added need not be passed, just handles that have an equivalent &lt;code&gt;fileno&lt;/code&gt;</source>
          <target state="translated">从对象中删除所有给定的句柄。该方法也可以通过句柄的 &lt;code&gt;fileno&lt;/code&gt; 来工作。因此，无需传递添加的确切句柄，只需传递具有等效 &lt;code&gt;fileno&lt;/code&gt; 句柄即可。</target>
        </trans-unit>
        <trans-unit id="ec5b86c026a0888d3d21b8af5552020cd0cfcac1" translate="yes" xml:space="preserve">
          <source>Remove and destroy the message queue from the system.</source>
          <target state="translated">从系统中删除并销毁消息队列。</target>
        </trans-unit>
        <trans-unit id="6aaf7cd9a2aecb8b071738d93a877aedd07453f1" translate="yes" xml:space="preserve">
          <source>Remove and destroy the semaphore set from the system.</source>
          <target state="translated">从系统中移除并销毁信号灯组。</target>
        </trans-unit>
        <trans-unit id="08922679889ead1233ce9875bead229564568322" translate="yes" xml:space="preserve">
          <source>Remove any magic of type</source>
          <target state="translated">移除任何类型的魔法</target>
        </trans-unit>
        <trans-unit id="1f89ce3a13bc7e8144d76a6e5ce921d9631062c9" translate="yes" xml:space="preserve">
          <source>Remove any magic of type &lt;code&gt;how&lt;/code&gt; from the SV &lt;code&gt;sv&lt;/code&gt;. See &lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;.</source>
          <target state="translated">删除类型的任何魔法 &lt;code&gt;how&lt;/code&gt; 从SV &lt;code&gt;sv&lt;/code&gt; 。参见&lt;a href=&quot;#sv_magic&quot;&gt;&amp;ldquo; sv_magic&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad52c40b6cbca8b2c2966740f3ef86babe9567f0" translate="yes" xml:space="preserve">
          <source>Remove any magic of type &lt;code&gt;how&lt;/code&gt; using virtual table &lt;code&gt;vtbl&lt;/code&gt; from the SV &lt;code&gt;sv&lt;/code&gt;. See &lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;.</source>
          <target state="translated">从SV &lt;code&gt;sv&lt;/code&gt; 删除 &lt;code&gt;how&lt;/code&gt; 使用虚拟表 &lt;code&gt;vtbl&lt;/code&gt; 的任何类型的魔术。参见&lt;a href=&quot;#sv_magic&quot;&gt;&amp;ldquo; sv_magic&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15e6d1c7c8255afa8c848bcdf81bba7435f9b1e6" translate="yes" xml:space="preserve">
          <source>Remove any string offset. You should normally use the &lt;code&gt;SvOOK_off&lt;/code&gt; macro wrapper instead.</source>
          <target state="translated">删除任何字符串偏移量。您通常应改为使用 &lt;code&gt;SvOOK_off&lt;/code&gt; 宏包装。</target>
        </trans-unit>
        <trans-unit id="34cc903788f314961384e40811dc3b186c10adf9" translate="yes" xml:space="preserve">
          <source>Remove build directory after a successful install? (yes/no)?</source>
          <target state="translated">安装成功后删除构建目录?(是/否)?</target>
        </trans-unit>
        <trans-unit id="ca26333c9cffa9dcdd1f9ac9077e465bdac01657" translate="yes" xml:space="preserve">
          <source>Remove last element of the array and return it.</source>
          <target state="translated">删除数组的最后一个元素并返回。</target>
        </trans-unit>
        <trans-unit id="dd74f70e82f716fe737ebdd68a369175399ee5d4" translate="yes" xml:space="preserve">
          <source>Remove last element of the array and return it. For example:</source>
          <target state="translated">删除数组的最后一个元素并返回。例如:</target>
        </trans-unit>
        <trans-unit id="3d7ce8cb1e76d7785d81a4336476884c3f8f3434" translate="yes" xml:space="preserve">
          <source>Remove the directory with the name &lt;code&gt;DIR&lt;/code&gt; . If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">删除名称为 &lt;code&gt;DIR&lt;/code&gt; 的目录。如果 &lt;code&gt;RECURSE&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="cd8df1b1af96c14b21f3ced740a495f3c3579a2a" translate="yes" xml:space="preserve">
          <source>Remove the directory with the name &lt;code&gt;DIR&lt;/code&gt;. If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">删除名称为 &lt;code&gt;DIR&lt;/code&gt; 的目录。如果 &lt;code&gt;RECURSE&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="01b3903b90ed14c4b645d49c69219c3c2b4eabbd" translate="yes" xml:space="preserve">
          <source>Remove the first element of the array (shifting other elements down) and return it.</source>
          <target state="translated">删除数组中的第一个元素(将其他元素向下移动)并返回。</target>
        </trans-unit>
        <trans-unit id="7915d09356edb2d08ee58387fa2807f4d9125c2f" translate="yes" xml:space="preserve">
          <source>Remove the first element of the array (shifting other elements down) and return it. For example:</source>
          <target state="translated">删除数组中的第一个元素(将其他元素向下移动)并返回。例如:</target>
        </trans-unit>
        <trans-unit id="af6da8ce6c3a71d84dabc65f4953446b1ad5eaa7" translate="yes" xml:space="preserve">
          <source>Remove the shared memory segment from the system or mark it as removed as long as any processes are still attached to it.</source>
          <target state="translated">将共享内存段从系统中移除,或标记为已移除,只要任何进程仍连接到它。</target>
        </trans-unit>
        <trans-unit id="6dd974eb46d793d3ce24c2722e5c3e3f7cb1247a" translate="yes" xml:space="preserve">
          <source>Removed 'license_uri' field</source>
          <target state="translated">删除了 &quot;license_uri &quot;字段。</target>
        </trans-unit>
        <trans-unit id="ee5b62938d735f3a3efecbef729a1a893cec2e34" translate="yes" xml:space="preserve">
          <source>Removed 'requires_packages', 'requires_os' and 'excluded_os' as valid subkeys</source>
          <target state="translated">删除了'request_packages'、'request_os'和'excluded_os'作为有效的子键。</target>
        </trans-unit>
        <trans-unit id="89a11020e54316d7391559587030489b184260d5" translate="yes" xml:space="preserve">
          <source>Removed a bunch of items (generation, requires_build_tools, requires_packages, configure, requires_os, excludes_os, auto_regenerate) that have never actually been supported, but were more like records of brainstorming.</source>
          <target state="translated">删除了一堆从未实际支持过的项目(generation,requires_build_tools,requires_packages,configure,requires_os,excludes_os,auto_regenerate),更像是头脑风暴的记录。</target>
        </trans-unit>
        <trans-unit id="fa2b8c36a992cb782bf9b719ffcacdc1994f25af" translate="yes" xml:space="preserve">
          <source>Removed features</source>
          <target state="translated">删除的功能</target>
        </trans-unit>
        <trans-unit id="ca09374fc77d4a9c28f5008d23302798f76def3f" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.10</source>
          <target state="translated">在Perl 5.10中删除</target>
        </trans-unit>
        <trans-unit id="7feda984d74007c898a3562e8d4b8c724e3687d4" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.8.8</source>
          <target state="translated">在Perl 5.8.8中删除</target>
        </trans-unit>
        <trans-unit id="8c003ba205d8c4fe73191a070ec08a0106b9f815" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.9.0</source>
          <target state="translated">在Perl 5.9.0中删除</target>
        </trans-unit>
        <trans-unit id="c5063928e2ec4eb91ad2be24363b0ef7098c167e" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.9.5</source>
          <target state="translated">在Perl 5.9.5中删除</target>
        </trans-unit>
        <trans-unit id="db90acb7ef3a6dde761f4676e88df84e20802090" translate="yes" xml:space="preserve">
          <source>Removed in Perl v5.10.0.</source>
          <target state="translated">在Perl v5.10.0中删除。</target>
        </trans-unit>
        <trans-unit id="9ffd3d68bce71e440bc44944ce7cd567641fc53d" translate="yes" xml:space="preserve">
          <source>Removed in: 5.11.3</source>
          <target state="translated">撤消于:5.11.3</target>
        </trans-unit>
        <trans-unit id="f91b8faa1861bcea02d7a01269af81386dd0b1c9" translate="yes" xml:space="preserve">
          <source>Removed the name &lt;code&gt;CPAN::META::Specification&lt;/code&gt;, since that implies a module that doesn't actually exist.</source>
          <target state="translated">删除了名称 &lt;code&gt;CPAN::META::Specification&lt;/code&gt; ，因为这意味着实际上不存在的模块。</target>
        </trans-unit>
        <trans-unit id="dd3aa518f2414226d56b71ebf663220219b2aa4e" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;$name&lt;/code&gt; from the set of symbols, where &lt;code&gt;$name&lt;/code&gt; is the original symbol name passed previously to addsym(). If &lt;code&gt;$name&lt;/code&gt; existed in the set of symbols, returns its &quot;trimmed&quot; equivalent, otherwise returns &lt;code&gt;undef&lt;/code&gt;. This method must be called via an existing object.</source>
          <target state="translated">从符号集中删除 &lt;code&gt;$name&lt;/code&gt; ，其中 &lt;code&gt;$name&lt;/code&gt; 是先前传递给addsym（）的原始符号名称。如果 &lt;code&gt;$name&lt;/code&gt; 存在于符号集中，则返回它的&amp;ldquo;修剪&amp;rdquo;等价项，否则返回 &lt;code&gt;undef&lt;/code&gt; 。必须通过现有对象调用此方法。</target>
        </trans-unit>
        <trans-unit id="7606a447a1adad6fd32090f792adebaa6d61391c" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@codes&lt;/code&gt; as valid codes for the parse.</source>
          <target state="translated">删除 &lt;code&gt;@codes&lt;/code&gt; 作为解析的有效代码。</target>
        </trans-unit>
        <trans-unit id="5bb1eea9e121152498b29c0887262ecf49f84161" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@directives&lt;/code&gt; as valid directives for the parse.</source>
          <target state="translated">删除 &lt;code&gt;@directives&lt;/code&gt; 作为解析的有效指令。</target>
        </trans-unit>
        <trans-unit id="3a7dce2ee5720ded6ace47211f4127a78a8bc823" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@targets&lt;/code&gt; as valid targets for the parse.</source>
          <target state="translated">删除 &lt;code&gt;@targets&lt;/code&gt; 作为解析的有效目标。</target>
        </trans-unit>
        <trans-unit id="298b7e75beb6592ddc99ba79f7f8687ba4ae9cd8" translate="yes" xml:space="preserve">
          <source>Removes a &lt;code&gt;TYPEMAP&lt;/code&gt; entry from the typemap.</source>
          <target state="translated">从类型 &lt;code&gt;TYPEMAP&lt;/code&gt; 表中删除TYPEMAP条目。</target>
        </trans-unit>
        <trans-unit id="78e457c2afa95057438297f0c2f7a08b01f2bed1" translate="yes" xml:space="preserve">
          <source>Removes a given test from results. This is a no-op if the test name is not found.</source>
          <target state="translated">从结果中删除一个测试。如果没有找到测试名称,这是一个无操作。</target>
        </trans-unit>
        <trans-unit id="6170266d9cf1abd067a88e768b95c547bffbe239" translate="yes" xml:space="preserve">
          <source>Removes a name from a stash's internal list of effective names. If this is the name returned by &lt;code&gt;HvENAME&lt;/code&gt; , then another name in the list will take its place (&lt;code&gt;HvENAME&lt;/code&gt; will use it).</source>
          <target state="translated">从存储区的有效名称的内部列表中删除名称。如果这是 &lt;code&gt;HvENAME&lt;/code&gt; 返回的名称，则列表中的另一个名称将代替它（ &lt;code&gt;HvENAME&lt;/code&gt; 将使用它）。</target>
        </trans-unit>
        <trans-unit id="853bfcfc57212f8b802e5ba747a3684310404dfb" translate="yes" xml:space="preserve">
          <source>Removes a name from a stash's internal list of effective names. If this is the name returned by &lt;code&gt;HvENAME&lt;/code&gt;, then another name in the list will take its place (&lt;code&gt;HvENAME&lt;/code&gt; will use it).</source>
          <target state="translated">从存储区的有效名称的内部列表中删除名称。如果这是 &lt;code&gt;HvENAME&lt;/code&gt; 返回的名称，则列表中的另一个名称将代替它（ &lt;code&gt;HvENAME&lt;/code&gt; 将使用它）。</target>
        </trans-unit>
        <trans-unit id="809993536a04c0412f321f50161f58b0d57e7cfc" translate="yes" xml:space="preserve">
          <source>Removes all key/value pairs with key &lt;code&gt;$key&lt;/code&gt; from the database.</source>
          <target state="translated">从数据库中删除所有带有键 &lt;code&gt;$key&lt;/code&gt; 键/值对。</target>
        </trans-unit>
        <trans-unit id="881ae4af57d8a01c05348ec9fb6a313da72be1db" translate="yes" xml:space="preserve">
          <source>Removes all magic of type &lt;code&gt;type&lt;/code&gt; from an SV.</source>
          <target state="translated">从SV 移除所有type &lt;code&gt;type&lt;/code&gt; 魔法。</target>
        </trans-unit>
        <trans-unit id="8d57ef147df287f0950a79a758b1f234220edab5" translate="yes" xml:space="preserve">
          <source>Removes all magic of type &lt;code&gt;type&lt;/code&gt; with the specified &lt;code&gt;vtbl&lt;/code&gt; from an SV.</source>
          <target state="translated">从SV 移除所有具有指定 &lt;code&gt;vtbl&lt;/code&gt; &lt;code&gt;type&lt;/code&gt; 魔法。</target>
        </trans-unit>
        <trans-unit id="a36777ffd18950871e8ee89c20b4299ff54332fb" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;INPUT&lt;/code&gt; entry from the typemap.</source>
          <target state="translated">从类型映射表中删除一个 &lt;code&gt;INPUT&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="0ef0360eff2e64e0016e3d57dae62a1a47303bb6" translate="yes" xml:space="preserve">
          <source>Removes an &lt;code&gt;OUTPUT&lt;/code&gt; entry from the typemap.</source>
          <target state="translated">从类型映射表中删除一个 &lt;code&gt;OUTPUT&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="2fb20ac267a12dd5bf7ea9c2de38f7f76336ee66" translate="yes" xml:space="preserve">
          <source>Removes and returns the first element of the array.</source>
          <target state="translated">删除并返回数组的第一个元素。</target>
        </trans-unit>
        <trans-unit id="57dd5066c021b71185b5e0fb65bafc28180f3c03" translate="yes" xml:space="preserve">
          <source>Removes and returns the last element of the array.</source>
          <target state="translated">删除并返回数组的最后一个元素。</target>
        </trans-unit>
        <trans-unit id="76d90152ed1c0eca472fdee0bd8ef8961b38208a" translate="yes" xml:space="preserve">
          <source>Removes and returns the specified number of items (defaults to 1) from the specified index position in the queue (0 is the head of the queue). When called with no arguments, &lt;code&gt;extract&lt;/code&gt; operates the same as &lt;code&gt;dequeue_nb&lt;/code&gt; .</source>
          <target state="translated">从队列中指定的索引位置（0是队列的开头）中删除并返回指定数量的项目（默认为1）。如果不带参数调用，则 &lt;code&gt;extract&lt;/code&gt; 的操作与 &lt;code&gt;dequeue_nb&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="15b4a09f54d48eabe7983cbd2bb5dd267d29b416" translate="yes" xml:space="preserve">
          <source>Removes and returns the specified number of items (defaults to 1) from the specified index position in the queue (0 is the head of the queue). When called with no arguments, &lt;code&gt;extract&lt;/code&gt; operates the same as &lt;code&gt;dequeue_nb&lt;/code&gt;.</source>
          <target state="translated">从队列中指定的索引位置（0是队列的开头）移除并返回指定数量的项目（默认为1）。如果不带参数调用，则 &lt;code&gt;extract&lt;/code&gt; 的操作与 &lt;code&gt;dequeue_nb&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="8f380bd3157b8fd25954da97a5468fe271c2abeb" translate="yes" xml:space="preserve">
          <source>Removes any entries with names matching any of the given filenames from the in-memory archive. Returns a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects that remain.</source>
          <target state="translated">从内存存档中删除名称与任何给定文件名匹配的所有条目。返回保留的 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 对象的列表。</target>
        </trans-unit>
        <trans-unit id="46574b8be47fb344cd76c91139f93a27d5320b33" translate="yes" xml:space="preserve">
          <source>Removes files (even if readonly)</source>
          <target state="translated">删除文件(即使是只读)。</target>
        </trans-unit>
        <trans-unit id="82a08e1d7b6e614e50d42b649760f9cfc8ea485c" translate="yes" xml:space="preserve">
          <source>Removes files and directories - recursively (even if readonly)</source>
          <target state="translated">递归地删除文件和目录(即使是只读)。</target>
        </trans-unit>
        <trans-unit id="a4f180c566519c24cd55bbd6c9be1a8802527bbf" translate="yes" xml:space="preserve">
          <source>Removes one SV from the end of the array, reducing its size by one and returning the SV (transferring control of one reference count) to the caller. Returns &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; if the array is empty.</source>
          <target state="translated">从数组末尾删除一个SV，将其大小减小1，然后将SV（转移一个参考计数的控制权）返回给调用者。如果数组为空，则返回 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="776a73e7b3694675ac208e6c27b3b30e60b64342" translate="yes" xml:space="preserve">
          <source>Removes one SV from the start of the array, reducing its size by one and returning the SV (transferring control of one reference count) to the caller. Returns &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; if the array is empty.</source>
          <target state="translated">从数组的开头删除一个SV，将其大小减小1，然后将SV（转移一个参考计数的控制权）返回给调用者。如果数组为空，则返回 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="735d1cbf14be45e8708ade1447bb133c3aac27be" translate="yes" xml:space="preserve">
          <source>Removes redundant portions of file specifications and returns results in native syntax unless Unix filename reporting has been enabled.</source>
          <target state="translated">删除文件规格的冗余部分,并以本地语法返回结果,除非已启用Unix文件名报告。</target>
        </trans-unit>
        <trans-unit id="9bea1ee738228f4d9f5b216586733974d74ba26c" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">从数组中删除由OFFSET和LENGTH指定的元素，并将它们替换为LIST的元素（如果有）。在列表上下文中，返回从数组中删除的元素。在标量上下文中，返回删除的最后一个元素；如果未删除任何元素，则返回&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;。数组根据需要增大或缩小。如果OFFSET为负，则从数组末尾开始。如果省略LENGTH，则从OFFSET开始删除所有内容。如果LENGTH为负数，则从偏移量开始删除元素，数组末尾的-LENGTH元素除外。如果同时忽略了OFFSET和LENGTH，则删除所有内容。如果OFFSET超出了数组的末尾并且提供了LENGTH，则Perl会发出警告，并在数组的末尾进行拼接。</target>
        </trans-unit>
        <trans-unit id="343f1c2f52c3d8dcf7da53d9d80db009530f49dd" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">从数组中删除由OFFSET和LENGTH指定的元素，并将它们替换为LIST的元素（如果有）。在列表上下文中，返回从数组中删除的元素。在标量上下文中，返回删除的最后一个元素；如果未删除任何元素，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。阵列根据需要增大或缩小。如果OFFSET为负，则从数组末尾开始。如果省略LENGTH，则从OFFSET开始删除所有内容。如果LENGTH为负，则从数组OFFSET后面的元素中除去-LENGTH元素。如果同时省略了OFFSET和LENGTH，则删除所有内容。如果OFFSET在数组末尾并且提供了LENGTH，则Perl会发出警告，并在数组末尾进行拼接。</target>
        </trans-unit>
        <trans-unit id="1e5f1083ce2b66e546ddef1a96560cdca11f2193" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">从数组中删除由OFFSET和LENGTH指定的元素，并将它们替换为LIST的元素（如果有）。在列表上下文中，返回从数组中删除的元素。在标量上下文中，返回删除的最后一个元素；如果未删除任何元素，则返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。阵列根据需要增大或缩小。如果OFFSET为负，则从数组末尾开始。如果省略LENGTH，则从OFFSET开始删除所有内容。如果LENGTH为负，则从数组OFFSET后面的元素中除去-LENGTH元素。如果同时省略了OFFSET和LENGTH，则删除所有内容。如果OFFSET在数组末尾并且提供了LENGTH，则Perl会发出警告，并在数组末尾进行拼接。</target>
        </trans-unit>
        <trans-unit id="4d4d21ffe02b9208cd41895cba1b6ac56478169b" translate="yes" xml:space="preserve">
          <source>Removes the files listed in a $packlist_file.</source>
          <target state="translated">删除$packlist_file中列出的文件。</target>
        </trans-unit>
        <trans-unit id="31c8fa888188962e0f82082eb5ec899f29cb7f2f" translate="yes" xml:space="preserve">
          <source>Removes the last filter that was applied to the DBM file associated with &lt;code&gt;$db&lt;/code&gt; , if present.</source>
          <target state="translated">删除应用于与 &lt;code&gt;$db&lt;/code&gt; 关联的DBM文件的最后一个过滤器（如果存在）。</target>
        </trans-unit>
        <trans-unit id="568644ad8cc92b707ff468c51cd41ce25b0c8f02" translate="yes" xml:space="preserve">
          <source>Removes the last filter that was applied to the DBM file associated with &lt;code&gt;$db&lt;/code&gt;, if present.</source>
          <target state="translated">删除应用于与 &lt;code&gt;$db&lt;/code&gt; 关联的DBM文件的最后一个过滤器（如果存在）。</target>
        </trans-unit>
        <trans-unit id="958639ea0aa2c2aa0215e5881cb6e9eecf4443b5" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then it immediately (i.e., non-blocking) returns whatever items there are on the queue. If the queue is empty, then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">从队列的开头删除请求的项目数（默认为1），并返回它们。如果队列中包含少于请求数量的项目，则它立即（即非阻塞）返回队列中存在的任何项目。如果队列为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd8a0b7da955d9fb86535777a2a26ba36037620a" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then it immediately (i.e., non-blocking) returns whatever items there are on the queue. If the queue is empty, then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="translated">从队列的开头删除请求的项目数（默认为1），并返回它们。如果队列中包含少于请求数量的项目，则它立即（即非阻塞）返回队列中存在的任何项目。如果队列为空，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cec50374edbc42fbde5226187a161063372e5a25" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available (i.e., until other threads &amp;lt;enqueue&amp;gt; more items).</source>
          <target state="translated">从队列的开头删除请求的项目数（默认为1），并返回它们。如果队列中所包含的项目少于所请求的数目，则该线程将被阻塞，直到所需数目的项目可用为止（即，直到其他线程&amp;lt;enqueue&amp;gt;更多的项目）。</target>
        </trans-unit>
        <trans-unit id="e8f4ef63ea30d8b6b0dbc9e1cb7647711d8a73fd" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available (i.e., until other threads &lt;code&gt;enqueue&lt;/code&gt; more items).</source>
          <target state="translated">从队列的开头删除请求的项目数（默认为1），并返回它们。如果队列中所包含的项目少于所请求的数目，则该线程将被阻塞，直到所需数目的项目可用为止（即，直到其他线程 &lt;code&gt;enqueue&lt;/code&gt; 更多的项目为止）。</target>
        </trans-unit>
        <trans-unit id="6df6cfbdfddf1fac82ca5fddb9891f3ddb2098dd" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available, or until the timeout is reached. If the timeout is reached, it returns whatever items there are on the queue, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">从队列的开头删除请求的项目数（默认为1），并返回它们。如果队列中所包含的项目少于所请求的数目，则该线程将被阻塞，直到所需数目的项目可用或达到超时为止。如果达到超时，它将返回队列中存在的所有项目，如果队列为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35a0d2733880763e274625057ffceed54ecf5303" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available, or until the timeout is reached. If the timeout is reached, it returns whatever items there are on the queue, or &lt;code&gt;undef&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">从队列的开头删除请求的项目数（默认为1），并返回它们。如果队列中所包含的项目少于所请求的数目，则该线程将被阻塞，直到所需数目的项目可用或达到超时为止。如果达到超时，它将返回队列中存在的所有项目，如果队列为空，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f94e09734e307d7590468dedfa423f230c227f4" translate="yes" xml:space="preserve">
          <source>Removes the restriction on the %hash's keyset.</source>
          <target state="translated">取消对%hash键集的限制。</target>
        </trans-unit>
        <trans-unit id="05f548f5216a2bff8836328b3856ebee4fa508c8" translate="yes" xml:space="preserve">
          <source>Removing things is a much more dangerous proposition than creating things. As such, there are certain conditions that &lt;code&gt;remove_tree&lt;/code&gt; may encounter that are so dangerous that the only sane action left is to kill the program.</source>
          <target state="translated">删除事物比创建事物要危险得多。因此，在某些情况下， &lt;code&gt;remove_tree&lt;/code&gt; 可能会遇到如此危险的情况，以至于剩下的唯一明智的行动就是杀死程序。</target>
        </trans-unit>
        <trans-unit id="80beee49629b23b85284ecc1862bdfaca20ee299" translate="yes" xml:space="preserve">
          <source>Rename a file on the remote FTP server from &lt;code&gt;OLDNAME&lt;/code&gt; to &lt;code&gt;NEWNAME&lt;/code&gt; . This is done by sending the RNFR and RNTO commands.</source>
          <target state="translated">将远程FTP服务器上的文件从 &lt;code&gt;OLDNAME&lt;/code&gt; 重命名为 &lt;code&gt;NEWNAME&lt;/code&gt; 。这是通过发送RNFR和RNTO命令来完成的。</target>
        </trans-unit>
        <trans-unit id="642d12bf15571956a8080b21ce2eca8371d01f61" translate="yes" xml:space="preserve">
          <source>Rename a file on the remote FTP server from &lt;code&gt;OLDNAME&lt;/code&gt; to &lt;code&gt;NEWNAME&lt;/code&gt;. This is done by sending the RNFR and RNTO commands.</source>
          <target state="translated">将远程FTP服务器上的文件从 &lt;code&gt;OLDNAME&lt;/code&gt; 重命名为 &lt;code&gt;NEWNAME&lt;/code&gt; 。这是通过发送RNFR和RNTO命令来完成的。</target>
        </trans-unit>
        <trans-unit id="dcd9e0a25ada8f075c3e6f944b88ac0d76972fc5" translate="yes" xml:space="preserve">
          <source>Rename a file, this wraps &lt;code&gt;rename()&lt;/code&gt; in a way that makes it more reliable cross-platform when trying to rename files you recently altered.</source>
          <target state="translated">重命名文件，这包装了 &lt;code&gt;rename()&lt;/code&gt; ，从而在尝试重命名最近更改的文件时使跨平台更可靠。</target>
        </trans-unit>
        <trans-unit id="dc3012ff7da46214e954150145eb0f38e1b162b8" translate="yes" xml:space="preserve">
          <source>Rename the current file to $new_name.</source>
          <target state="translated">将当前文件改名为$new_name。</target>
        </trans-unit>
        <trans-unit id="2143b98f30e20a57eafd5e99d8e4626187d94b19" translate="yes" xml:space="preserve">
          <source>Rename the file of the in-memory archive to $new_name.</source>
          <target state="translated">将内存存档的文件重命名为$new_name。</target>
        </trans-unit>
        <trans-unit id="3190f9fa89e7c1a578490836d655b0eef2259cde" translate="yes" xml:space="preserve">
          <source>Renamed to &lt;code&gt;Class::Struct&lt;/code&gt; and modified by Jim Miner, 1997-04-02.</source>
          <target state="translated">重命名为 &lt;code&gt;Class::Struct&lt;/code&gt; ，并由Jim Miner修改，1997-04-02。</target>
        </trans-unit>
        <trans-unit id="e47a07efe4c4b4772864c20ed858124878539f3b" translate="yes" xml:space="preserve">
          <source>Renames a file or directory. &lt;code&gt;$sOldName&lt;/code&gt; is the name of the existing file or directory that is to be renamed. &lt;code&gt;$sNewName&lt;/code&gt; is the new name to give the file or directory. Returns a true value if the move succeeds. For failure, returns a false value and sets &lt;code&gt;fileLastErorr()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; to the reason for the failure.</source>
          <target state="translated">重命名文件或目录。 &lt;code&gt;$sOldName&lt;/code&gt; 是要重命名的现有文件或目录的名称。 &lt;code&gt;$sNewName&lt;/code&gt; 是提供文件或目录的新名称。如果移动成功，则返回一个真值。对于失败，返回错误值，并将 &lt;code&gt;fileLastErorr()&lt;/code&gt; 和 &lt;code&gt;$^E&lt;/code&gt; 设置为失败原因。</target>
        </trans-unit>
        <trans-unit id="746933bbfadd0d015fb0f5cef0f99f8789b8c3b4" translate="yes" xml:space="preserve">
          <source>Render Pod with ANSI color escapes</source>
          <target state="translated">带有ANSI颜色转义的渲染舱</target>
        </trans-unit>
        <trans-unit id="d353704fc90d73163b33a1077fefe42f84d9a425" translate="yes" xml:space="preserve">
          <source>Render Pod with terminal escapes</source>
          <target state="translated">带终端逃逸的渲染舱</target>
        </trans-unit>
        <trans-unit id="96a06e164621da6212cb23a64e613b86284d9b8a" translate="yes" xml:space="preserve">
          <source>Renderings usually include a banner line identifying the function name or stringified subref. This suppresses the printing of the banner.</source>
          <target state="translated">渲染通常包括一行标语,标明函数名称或字符串化的子引用。这就抑制了对横幅的打印。</target>
        </trans-unit>
        <trans-unit id="2465d0a6e5df0d7a39af6d7760dce88c9cf728d8" translate="yes" xml:space="preserve">
          <source>Renders code in a typewriter font, or gives some other indication that this represents program text (&quot;&lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &quot;) or some other form of computerese (&quot;&lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &quot;).</source>
          <target state="translated">以打字机字体呈现代码，或提供其他指示，以表示程序文本（&amp;ldquo; &lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &amp;rdquo;）或某种其他形式的计算机语言（&amp;ldquo; &lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="ac8652a7c224531155b4f4957d03b8050523d895" translate="yes" xml:space="preserve">
          <source>Renders code in a typewriter font, or gives some other indication that this represents program text (&quot;&lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt;&quot;) or some other form of computerese (&quot;&lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt;&quot;).</source>
          <target state="translated">以打字机字体呈现代码，或提供其他指示，以表示程序文本（&amp;ldquo; &lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &amp;rdquo;）或某种其他形式的计算机语言（&amp;ldquo; &lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="de8802423802e5328366ef6d324218b46f675df5" translate="yes" xml:space="preserve">
          <source>Renders only bar() from foo.pl. To see main, drop the ',bar'. To see both, add ',-main'</source>
          <target state="translated">只渲染foo.pl中的bar()。要查看main,请删除',bar'。要同时看到这两个词,请添加',-main'。</target>
        </trans-unit>
        <trans-unit id="0165f7088a87c494db214706823267e37ced6eda" translate="yes" xml:space="preserve">
          <source>Renew</source>
          <target state="translated">Renew</target>
        </trans-unit>
        <trans-unit id="d5b868808deee1a81e947ec7b7a22e1fdba75fa5" translate="yes" xml:space="preserve">
          <source>Renewc</source>
          <target state="translated">Renewc</target>
        </trans-unit>
        <trans-unit id="1d7ffe27769737b77fe22a1b19e1f80904630a03" translate="yes" xml:space="preserve">
          <source>Reopen STDIN, STDOUT, and STDERR so they're not connected to the old tty.</source>
          <target state="translated">重新打开STDIN、STDOUT和STDERR,使它们不连接到旧的TTY。</target>
        </trans-unit>
        <trans-unit id="50403581fa8d364c53f5c65182aae61f98504ad4" translate="yes" xml:space="preserve">
          <source>Reopens file and restores pointer; if function fails, underlying filehandle may be closed, or pointer may be in a different position. (VMS)</source>
          <target state="translated">重新打开文件并恢复指针;如果函数失败,底层文件柄可能被关闭,或者指针可能在不同的位置。(VMS)</target>
        </trans-unit>
        <trans-unit id="7d932850e50913dc3862aecc2a74417d65c0b852" translate="yes" xml:space="preserve">
          <source>Repeat Step (2) in respect of the second operand.</source>
          <target state="translated">对第二个操作数重复步骤(2)。</target>
        </trans-unit>
        <trans-unit id="bb07dc7ea8229d420ce2ac387c7ea0a202d45562" translate="yes" xml:space="preserve">
          <source>Repeat last &lt;code&gt;n&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; command.</source>
          <target state="translated">重复最后一个 &lt;code&gt;n&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="2358b9bb07e78f814eae396390b961b02f59c0a8" translate="yes" xml:space="preserve">
          <source>Repeat last &lt;code&gt;n&lt;/code&gt; or &lt;code&gt;s&lt;/code&gt; command.</source>
          <target state="translated">重复最后一个 &lt;code&gt;n&lt;/code&gt; 或 &lt;code&gt;s&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="08efeab209d66736e16ea6a2dfdea9bdfe05db92" translate="yes" xml:space="preserve">
          <source>Repeated Patterns Matching a Zero-length Substring</source>
          <target state="translated">与零长度子串相匹配的重复模式。</target>
        </trans-unit>
        <trans-unit id="84e8fe3c507332660e120918ed6562e6b89b9c97" translate="yes" xml:space="preserve">
          <source>Repeated format line will never terminate (~~ and @#)</source>
          <target state="translated">重复的格式行永远不会终止(~~和@#)。</target>
        </trans-unit>
        <trans-unit id="fde43df7c92f017fb14d13de3aae28a8813ac4fe" translate="yes" xml:space="preserve">
          <source>Repeating Format Lines</source>
          <target state="translated">重复格式行</target>
        </trans-unit>
        <trans-unit id="43149858d5d5f79dfa2faccd2ca041cee85da454" translate="yes" xml:space="preserve">
          <source>Repeating a character in a character class has no effect; it's considered to be in the set only once.</source>
          <target state="translated">在一个角色类中重复一个角色没有任何影响,它被认为在集子里只有一次。</target>
        </trans-unit>
        <trans-unit id="a85fe8562748724d58fdb6dc77267e0147ad4210" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;5.22.0&lt;/code&gt; with your respective version of Perl.</source>
          <target state="translated">用您各自的Perl版本替换 &lt;code&gt;5.22.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="251e7c4bfc5f73e5cedbfa5879fd66caa5e45631" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;5.32.0&lt;/code&gt; with your respective version of Perl.</source>
          <target state="translated">用您各自的Perl版本替换 &lt;code&gt;5.32.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18962e5ac47b68c698be2cba09a95de209f42f3c" translate="yes" xml:space="preserve">
          <source>Replace functions with equivalents which succeed or die</source>
          <target state="translated">用成功或死亡的等价物代替函数。</target>
        </trans-unit>
        <trans-unit id="1c92ec8d2541924e350a8c75b34361906527bb30" translate="yes" xml:space="preserve">
          <source>Replace functions with ones that succeed or die with lexical scope</source>
          <target state="translated">用具有词法范围的成功或死亡的函数来代替函数。</target>
        </trans-unit>
        <trans-unit id="65506780247288f4a1b4afbb82774de37cac158d" translate="yes" xml:space="preserve">
          <source>Replace means the facet is intended to replace the normal rendering of the event.</source>
          <target state="translated">替换是指该面是为了替换事件的正常呈现。</target>
        </trans-unit>
        <trans-unit id="8c07f10b4913cc3e1911ba0677449ebf74f893b6" translate="yes" xml:space="preserve">
          <source>Replace the current content of the file with the new content. This only affects the in-memory archive, not the on-disk version until you write it.</source>
          <target state="translated">用新内容替换文件的当前内容。这只影响内存中的存档,而不会影响磁盘上的版本,直到你写入它。</target>
        </trans-unit>
        <trans-unit id="cdfd162910445bd1638ac0fe46839d15656532b8" translate="yes" xml:space="preserve">
          <source>Replace the existing formatter instance with a new one. Formatters must be objects that implement a &lt;code&gt;$formatter-&amp;gt;write($event)&lt;/code&gt; method.</source>
          <target state="translated">用一个新的实例替换现有的格式化程序实例。格式化程序必须是实现 &lt;code&gt;$formatter-&amp;gt;write($event)&lt;/code&gt; 方法的对象。</target>
        </trans-unit>
        <trans-unit id="986044e84011b0f7ab47c1f668359c3e1bfe3b0b" translate="yes" xml:space="preserve">
          <source>Replaced 'requires', 'build_requires', 'configure_requires', 'recommends' and 'conflicts' with new 'prereqs' data structure divided by</source>
          <target state="translated">用新的 &quot;prereqs &quot;数据结构替换了 &quot;requests&quot;、&quot;build_requires&quot;、&quot;configure_requires&quot;、&quot;recommendation &quot;和 &quot;conflicts&quot;,这些数据结构以</target>
        </trans-unit>
        <trans-unit id="971c11ee394d9f4c51d93debff09a5dab2b9fa14" translate="yes" xml:space="preserve">
          <source>Replaced by &lt;code&gt;license&lt;/code&gt; in &lt;code&gt;resources&lt;/code&gt;</source>
          <target state="translated">取而代之的 &lt;code&gt;license&lt;/code&gt; 在 &lt;code&gt;resources&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6afa37b5d673a2b9a6f60d0ff0852a76a39dc7e8" translate="yes" xml:space="preserve">
          <source>Replaced by &lt;code&gt;prereqs&lt;/code&gt;</source>
          <target state="translated">取而代之的是 &lt;code&gt;prereqs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79dbbb22c782734b0390b72859d9473c5da98f2d" translate="yes" xml:space="preserve">
          <source>Replacement UNIVERSAL::VERSION</source>
          <target state="translated">替换 UNIVERSAL::VERSION</target>
        </trans-unit>
        <trans-unit id="c30c0ec5760b9e4a57bed78b1c679a367eeb7c7c" translate="yes" xml:space="preserve">
          <source>Replacement list is longer than search list</source>
          <target state="translated">替换列表比搜索列表长</target>
        </trans-unit>
        <trans-unit id="371e4e5b4cb257eb82924fb9ef0648f95de6300d" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;#precision%28%29&quot;&gt;&quot;precision()&quot;&lt;/a&gt; with &lt;a href=&quot;#accuracy%28%29&quot;&gt;&quot;accuracy()&quot;&lt;/a&gt; is probably not what you want, either:</source>
          <target state="translated">用&lt;a href=&quot;#accuracy%28%29&quot;&gt;&amp;ldquo; accuracy（）&amp;rdquo;&lt;/a&gt;代替&lt;a href=&quot;#precision%28%29&quot;&gt;&amp;ldquo; precision（）&amp;rdquo;&lt;/a&gt;可能不是您想要的，或者：</target>
        </trans-unit>
        <trans-unit id="bcf1e4e8bdb2fe628a8abd000e1f839c770063f2" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;#precision()&quot;&gt;precision()&lt;/a&gt; with &lt;a href=&quot;#accuracy()&quot;&gt;accuracy()&lt;/a&gt; is probably not what you want, either:</source>
          <target state="translated">更换&lt;a href=&quot;#precision()&quot;&gt;精度（）&lt;/a&gt;与&lt;a href=&quot;#accuracy()&quot;&gt;精度（）&lt;/a&gt;是可能不是你想要什么，或者：</target>
        </trans-unit>
        <trans-unit id="04c3d01a224d7079c4a6658a1f97bf7007d32ca6" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;quotewords('\s+', 0, q{this   is...})&lt;/code&gt; with &lt;code&gt;shellwords(q{this   is...})&lt;/code&gt; is a simpler way to accomplish the same thing.</source>
          <target state="translated">更换 &lt;code&gt;quotewords('\s+', 0, q{this is...})&lt;/code&gt; 与 &lt;code&gt;shellwords(q{this is...})&lt;/code&gt; 是完成同样的事情，简单的方法。</target>
        </trans-unit>
        <trans-unit id="51ef2891517f4e84ea35ac7c1f8f4b5d17a11f57" translate="yes" xml:space="preserve">
          <source>Replacing gettext</source>
          <target state="translated">取代gettext</target>
        </trans-unit>
        <trans-unit id="ac4e98f2540d234d96786de45d1532a5d075c9c0" translate="yes" xml:space="preserve">
          <source>Replacing the Test::Builder singleton</source>
          <target state="translated">替换Test::Builder单体。</target>
        </trans-unit>
        <trans-unit id="0474936f96db9ffbfac4b5b976962e3518583bc1" translate="yes" xml:space="preserve">
          <source>Reply the message returning the results of any command. Set $rc = 0 for success and $result to the result string if appropriate.</source>
          <target state="translated">回复消息返回任何命令的结果。如果成功的话,设置$rc=0,如果合适的话,设置$result为结果字符串。</target>
        </trans-unit>
        <trans-unit id="c3db867fce0e13de8877d0bea95da44c88a5728a" translate="yes" xml:space="preserve">
          <source>Report &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;subroutine&lt;/code&gt; as well.</source>
          <target state="translated">同时报告 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;subroutine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5cd306c13e78fa562f58d53094a052ca27c9758" translate="yes" xml:space="preserve">
          <source>Report &lt;code&gt;goto &amp;amp;subroutine&lt;/code&gt; as well.</source>
          <target state="translated">同时报告 &lt;code&gt;goto &amp;amp;subroutine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d6dfbcd24681e5daa1341fd47a225dd5d1dd5cd" translate="yes" xml:space="preserve">
          <source>Report successful build on this system to perl porters. Forces &lt;b&gt;-S&lt;/b&gt; and &lt;b&gt;-C&lt;/b&gt;. Forces and supplies values for &lt;b&gt;-s&lt;/b&gt; and &lt;b&gt;-b&lt;/b&gt;. Only prompts for a return address if it cannot guess it (for use with &lt;b&gt;make&lt;/b&gt;). Honors return address specified with &lt;b&gt;-r&lt;/b&gt;. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data. Only makes a report if this system is less than 60 days old.</source>
          <target state="translated">向perl搬运工报告在该系统上的成功构建。强制&lt;b&gt;-S&lt;/b&gt;和&lt;b&gt;-C&lt;/b&gt;。强制和提供&lt;b&gt;-s&lt;/b&gt;和&lt;b&gt;-b的&lt;/b&gt;值。如果无法猜测返回地址，则仅提示输入返回地址（用于&lt;b&gt;make&lt;/b&gt;）。荣誉返回地址用&lt;b&gt;-r&lt;/b&gt;指定。您可以将其与&lt;b&gt;-v&lt;/b&gt;一起使用以获取更完整的数据。仅当此系统的使用时间少于60天时才进行报告。</target>
        </trans-unit>
        <trans-unit id="046a0ac0fa082001e63886b95b1ea0a1b3dc1186" translate="yes" xml:space="preserve">
          <source>Report unsuccessful build on this system. Forces &lt;b&gt;-C&lt;/b&gt;. Forces and supplies a value for &lt;b&gt;-s&lt;/b&gt;, then requires you to edit the report and say what went wrong. Alternatively, a prepared report may be supplied using &lt;b&gt;-f&lt;/b&gt;. Only prompts for a return address if it cannot guess it (for use with &lt;b&gt;make&lt;/b&gt;). Honors return address specified with &lt;b&gt;-r&lt;/b&gt;. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data. Only makes a report if this system is less than 60 days old.</source>
          <target state="translated">报告此系统上的构建失败。力&lt;b&gt;-C&lt;/b&gt;。强制并提供&lt;b&gt;-s&lt;/b&gt;的值，然后要求您编辑报告并说出问题所在。或者，可以使用&lt;b&gt;-f&lt;/b&gt;提供准备好的报告。如果无法猜测返回地址，则仅提示输入返回地址（用于&lt;b&gt;make&lt;/b&gt;）。荣誉返回地址用&lt;b&gt;-r&lt;/b&gt;指定。您可以将其与&lt;b&gt;-v&lt;/b&gt;一起使用以获取更完整的数据。仅当此系统的使用时间少于60天时才进行报告。</target>
        </trans-unit>
        <trans-unit id="ea266d59d6bb66aa6058e452a22d24952cd32375" translate="yes" xml:space="preserve">
          <source>Reporting Warnings from a Module</source>
          <target state="translated">从模块中报告警告</target>
        </trans-unit>
        <trans-unit id="f7901ce6e5184fe8ddf89e62878bc4bbe4231724" translate="yes" xml:space="preserve">
          <source>Reports on the SV's length in bytes, calling length magic if available, but does not set the UTF8 flag on &lt;code&gt;sv&lt;/code&gt;. It will fall back to 'get' magic if there is no 'length' magic, but with no indication as to whether it called 'get' magic. It assumes &lt;code&gt;sv&lt;/code&gt; is a &lt;code&gt;PVMG&lt;/code&gt; or higher. Use &lt;code&gt;sv_len()&lt;/code&gt; instead.</source>
          <target state="translated">报告SV的长度（以字节为单位），如果可用，则调用length magic，但未在 &lt;code&gt;sv&lt;/code&gt; 上设置UTF8标志。如果没有&amp;ldquo;长度&amp;rdquo;魔法，它将退回到&amp;ldquo;获得&amp;rdquo;魔法，但是没有迹象表明它是否称为&amp;ldquo;获得&amp;rdquo;魔法。假设 &lt;code&gt;sv&lt;/code&gt; 为 &lt;code&gt;PVMG&lt;/code&gt; 或更高。请改用 &lt;code&gt;sv_len()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffdffdcb8b2df49b8674c54cfb9fc8b8d0483959" translate="yes" xml:space="preserve">
          <source>Reports on the SV's length in bytes, calling length magic if available, but does not set the UTF8 flag on the sv. It will fall back to 'get' magic if there is no 'length' magic, but with no indication as to whether it called 'get' magic. It assumes the sv is a PVMG or higher. Use sv_len() instead.</source>
          <target state="translated">以字节为单位报告SV的长度,如果有的话会调用length魔法,但不会设置SV的UTF8标志。如果没有 &quot;length &quot;魔法,它将返回到 &quot;get &quot;魔法,但不显示是否调用了 &quot;get &quot;魔法。它假设sv是一个PVMG或更高版本。使用 sv_len()来代替。</target>
        </trans-unit>
        <trans-unit id="df0cd51690b308d83c8c2a5a9e2a3a4a64f9b99c" translate="yes" xml:space="preserve">
          <source>Reports the name of a directory only AFTER all its entries have been reported. Entry point &lt;code&gt;finddepth()&lt;/code&gt; is a shortcut for specifying &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; in the first argument of &lt;code&gt;find()&lt;/code&gt; .</source>
          <target state="translated">仅在报告了所有目录条目之后，才报告目录的名称。入口点 &lt;code&gt;finddepth()&lt;/code&gt; 是在 &lt;code&gt;find()&lt;/code&gt; 的第一个参数中指定 &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="4cd3ad596b0761c91589bf57f074644d8873be29" translate="yes" xml:space="preserve">
          <source>Reports the name of a directory only AFTER all its entries have been reported. Entry point &lt;code&gt;finddepth()&lt;/code&gt; is a shortcut for specifying &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; in the first argument of &lt;code&gt;find()&lt;/code&gt;.</source>
          <target state="translated">仅在报告了所有目录条目之后，才报告目录的名称。入口点 &lt;code&gt;finddepth()&lt;/code&gt; 是在 &lt;code&gt;find()&lt;/code&gt; 的第一个参数中指定 &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="de3875b10d66f76adea8b68994e05e1f77fbfd96" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given result has passed. Anything which is &lt;b&gt;not&lt;/b&gt; a test result returns true. This is merely provided as a convenient shortcut which allows you to do this:</source>
          <target state="translated">报告给定结果是否已通过。任何&lt;b&gt;不是&lt;/b&gt;测试结果的结果都将返回true。这仅仅是作为方便的快捷方式提供的，它使您可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="5162ff86f407ffbb175a07ee29f628d9cf194242" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given result has passed. Anything which is &lt;b&gt;not&lt;/b&gt; a test result returns true. This is merely provided as a convenient shortcut.</source>
          <target state="translated">报告给定结果是否已通过。任何&lt;b&gt;不是&lt;/b&gt;测试结果的结果都将返回true。这只是作为方便的快捷方式提供。</target>
        </trans-unit>
        <trans-unit id="df62cf802fb1309bc3020785649077d1b279257f" translate="yes" xml:space="preserve">
          <source>Repository available at &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&quot;&gt;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&lt;/a&gt;.</source>
          <target state="translated">可以从&lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&quot;&gt;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&lt;/a&gt;获得存储库。</target>
        </trans-unit>
        <trans-unit id="ae96cfe64a1056e26aed0b66585fcf6f95903fc4" translate="yes" xml:space="preserve">
          <source>Represent &quot;section&quot; attributes of L codes</source>
          <target state="translated">代表L码的 &quot;节 &quot;属性</target>
        </trans-unit>
        <trans-unit id="5cad6326d95f5c394a2a0ece052b89d37477f9a5" translate="yes" xml:space="preserve">
          <source>Represents a single test 'job'.</source>
          <target state="translated">代表一个测试 &quot;工作&quot;。</target>
        </trans-unit>
        <trans-unit id="4430b222f104d3155fe29036567cb4c70378e82a" translate="yes" xml:space="preserve">
          <source>Republic of Korea</source>
          <target state="translated">大韩民国</target>
        </trans-unit>
        <trans-unit id="5e8100db6b0c279e38c95d1ae67d91b656c907fd" translate="yes" xml:space="preserve">
          <source>Request For Comment, which despite the timid connotations is the name of a series of important standards documents.</source>
          <target state="translated">征求意见,尽管内涵胆小,但这是一系列重要标准文件的名称。</target>
        </trans-unit>
        <trans-unit id="b9a3fcb32a77e66b13c2ae9d619624b56b7a847e" translate="yes" xml:space="preserve">
          <source>Request For Comments -- need I say more? &lt;a href=&quot;http://www.rfc-editor.org/&quot;&gt;http://www.rfc-editor.org/&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc.html&quot;&gt;http://www.ietf.org/rfc.html&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/&quot;&gt;http://www.faqs.org/rfcs/&lt;/a&gt;</source>
          <target state="translated">征求意见-我还需要说更多吗？&lt;a href=&quot;http://www.rfc-editor.org/&quot;&gt;http://www.rfc-editor.org/&lt;/a&gt;，&lt;a href=&quot;http://www.ietf.org/rfc.html&quot;&gt;http://www.ietf.org/rfc.html&lt;/a&gt;，&lt;a href=&quot;http://www.faqs.org/rfcs/&quot;&gt;http://www.faqs.org/rfcs/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a412deeb26912aa5b9401986d548e3c4d9871efd" translate="yes" xml:space="preserve">
          <source>Request For Comments -- need I say more? &lt;a href=&quot;https://www.rfc-editor.org/&quot;&gt;http://www.rfc-editor.org/&lt;/a&gt;, &lt;a href=&quot;https://www.ietf.org/rfc.html&quot;&gt;http://www.ietf.org/rfc.html&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/&quot;&gt;http://www.faqs.org/rfcs/&lt;/a&gt;</source>
          <target state="translated">征求意见-我还需要说更多吗？&lt;a href=&quot;https://www.rfc-editor.org/&quot;&gt;http://www.rfc-editor.org/&lt;/a&gt;，&lt;a href=&quot;https://www.ietf.org/rfc.html&quot;&gt;http://www.ietf.org/rfc.html&lt;/a&gt;，&lt;a href=&quot;http://www.faqs.org/rfcs/&quot;&gt;http://www.faqs.org/rfcs/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c7883267dffd6a71ad1378c3d92086cbab7d043" translate="yes" xml:space="preserve">
          <source>Request a queue run for the DOMAIN given.</source>
          <target state="translated">要求对给定的DOMAIN进行队列运行。</target>
        </trans-unit>
        <trans-unit id="48a73e37efc9cbef432a388c9fbf6879bd9ac341" translate="yes" xml:space="preserve">
          <source>Request help text (a short summary of commands that are understood by this implementation) from the server. Returns the text or undef upon failure.</source>
          <target state="translated">向服务器请求帮助文本(本实施例所理解的命令的简短摘要)。失败时返回帮助文本或undef。</target>
        </trans-unit>
        <trans-unit id="aa1612b368042a2309ea4276ed98c83bd230e51f" translate="yes" xml:space="preserve">
          <source>Request help text from the server. Returns the text or undef upon failure</source>
          <target state="translated">向服务器请求帮助文本。返回文本或失败时返回undef。</target>
        </trans-unit>
        <trans-unit id="aa04b13719f18e39fe5cb28ed55eadcaf7d4293c" translate="yes" xml:space="preserve">
          <source>Request information about disk performance. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to contain a &lt;code&gt;DISK_PERFORMANCE&lt;/code&gt; data structure:</source>
          <target state="translated">请求有关磁盘性能的信息。 &lt;code&gt;$pInBuf&lt;/code&gt; 应该是 &lt;code&gt;[]&lt;/code&gt; 。 &lt;code&gt;$opOutBuf&lt;/code&gt; 将设置为包含 &lt;code&gt;DISK_PERFORMANCE&lt;/code&gt; 数据结构：</target>
        </trans-unit>
        <trans-unit id="f80b0881311a611ea1af797b6e84f227b8dcd269" translate="yes" xml:space="preserve">
          <source>Request information about the disk layout. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to contain &lt;code&gt;DRIVE_LAYOUT_INFORMATION&lt;/code&gt; structure including several &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; structures:</source>
          <target state="translated">请求有关磁盘布局的信息。 &lt;code&gt;$pInBuf&lt;/code&gt; 应该是 &lt;code&gt;[]&lt;/code&gt; 。 &lt;code&gt;$opOutBuf&lt;/code&gt; 将被设置为包含 &lt;code&gt;DRIVE_LAYOUT_INFORMATION&lt;/code&gt; 结构，其中包括几个 &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; 结构：</target>
        </trans-unit>
        <trans-unit id="54d0845e23b18fb99e717554d1184088701b388f" translate="yes" xml:space="preserve">
          <source>Request information about the size and geometry of the disk. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to a &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; data structure which can be decode via:</source>
          <target state="translated">请求有关磁盘大小和几何形状的信息。 &lt;code&gt;$pInBuf&lt;/code&gt; 应该是 &lt;code&gt;[]&lt;/code&gt; 。 &lt;code&gt;$opOutBuf&lt;/code&gt; 将设置为 &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; 数据结构，可以通过以下方式对其进行解码：</target>
        </trans-unit>
        <trans-unit id="3ad433c01870fd7f09ed98951f702ac06b39c5e8" translate="yes" xml:space="preserve">
          <source>Request information about the size and geometry of the partition. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to a &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; data structure which can be decode via:</source>
          <target state="translated">请求有关分区的大小和几何形状的信息。 &lt;code&gt;$pInBuf&lt;/code&gt; 应该是 &lt;code&gt;[]&lt;/code&gt; 。 &lt;code&gt;$opOutBuf&lt;/code&gt; 将被设置为 &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; 数据结构，可通过以下方式对其进行解码：</target>
        </trans-unit>
        <trans-unit id="f4100a502a9c8519f4e6dbb571077788846b32bb" translate="yes" xml:space="preserve">
          <source>Request less of something</source>
          <target state="translated">减少要求</target>
        </trans-unit>
        <trans-unit id="ddcdf3ecd72e075dd35b1b9f6a5a6a70bbfea05a" translate="yes" xml:space="preserve">
          <source>Request remote server status.</source>
          <target state="translated">请求远程服务器状态。</target>
        </trans-unit>
        <trans-unit id="06d352bc8e04baba583b9f5e42d86f03d7102ebd" translate="yes" xml:space="preserve">
          <source>Request remote server system identification.</source>
          <target state="translated">请求远程服务器系统识别。</target>
        </trans-unit>
        <trans-unit id="b5945a68b281549f7a7e833e39905826baf9a2a3" translate="yes" xml:space="preserve">
          <source>Request the server to expand the given address Returns an array which contains the text read from the server.</source>
          <target state="translated">请求服务器展开给定的地址 返回一个包含从服务器读取的文本的数组。</target>
        </trans-unit>
        <trans-unit id="2c10131bb29894d768d5b1a8f80ebec41f9e1827" translate="yes" xml:space="preserve">
          <source>Requesting a particular byte ordering may be necessary when you work with binary data coming from some specific architecture whereas your program could run on a totally different system. As an example, assume you have 24 bytes containing a stack frame as it happens on an Intel 8086:</source>
          <target state="translated">当你处理来自某些特定架构的二进制数据,而你的程序可能运行在一个完全不同的系统上时,要求一个特定的字节排序可能是必要的。举个例子,假设你有24个包含堆栈帧的字节,因为它发生在Intel 8086上。</target>
        </trans-unit>
        <trans-unit id="cae9a1066366d922cf90824c30342dd984d71dc4" translate="yes" xml:space="preserve">
          <source>Requesting an unknown identifier is a fatal error.</source>
          <target state="translated">请求一个未知的标识符是一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="d52cb52ccfe934101adae384fa985d0c14f60135" translate="yes" xml:space="preserve">
          <source>Requests a special operation on an I/O [input/output] device, such as ejecting a tape or formatting a disk. Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="translated">请求在I / O [输入/输出]设备上执行特殊操作，例如弹出磁带或格式化磁盘。像大多数例程一样，如果成功，则返回true值；如果失败，则返回false值[并设置 &lt;code&gt;$^E&lt;/code&gt; 和 &lt;code&gt;regLastError()&lt;/code&gt; ]。</target>
        </trans-unit>
        <trans-unit id="8d6f9f2703c9e8e1d97922d4e66763c115ed3a7f" translate="yes" xml:space="preserve">
          <source>Requests information about the type of media supported by the device. &lt;code&gt;$pInBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$opOutBuf&lt;/code&gt; will be set to contain a vector of &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; data structures, which can be decoded via:</source>
          <target state="translated">请求有关设备支持的媒体类型的信息。 &lt;code&gt;$pInBuf&lt;/code&gt; 应该是 &lt;code&gt;[]&lt;/code&gt; 。 &lt;code&gt;$opOutBuf&lt;/code&gt; 将设置为包含 &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; 数据结构的向量，可以通过以下方式对其进行解码：</target>
        </trans-unit>
        <trans-unit id="c41d48009beae4be2ae89ee98a0188705d8d3358" translate="yes" xml:space="preserve">
          <source>Requests that a definition be deleted. If &lt;code&gt;$sTargetPath&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt;], then the most recently added definition for &lt;code&gt;$sDosDeviceName&lt;/code&gt; is removed. Otherwise the most recently added definition matching &lt;code&gt;$sTargetPath&lt;/code&gt; is removed.</source>
          <target state="translated">请求删除定义。如果 &lt;code&gt;$sTargetPath&lt;/code&gt; 为 &lt;code&gt;[]&lt;/code&gt; [for &lt;code&gt;NULL&lt;/code&gt; ]，则将删除 &lt;code&gt;$sDosDeviceName&lt;/code&gt; 最新定义。否则，将删除与 &lt;code&gt;$sTargetPath&lt;/code&gt; 匹配的最新添加的定义。</target>
        </trans-unit>
        <trans-unit id="3bdde830ee962731505722af98db043d4e2b3e60" translate="yes" xml:space="preserve">
          <source>Requests that a human-readable string representation of the numeric address be returned directly, rather than performing a name resolve operation that may convert it into a hostname. This will also avoid potentially-blocking network IO.</source>
          <target state="translated">要求直接返回数字地址的人可读字符串表示,而不是执行可能将其转换为主机名的名称解析操作。这也将避免潜在的网络IO阻塞。</target>
        </trans-unit>
        <trans-unit id="c01c16e89cf540fee7a8d610f5ee506844edb5c3" translate="yes" xml:space="preserve">
          <source>Requests that the device be reserved. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">请求保留设备。 &lt;code&gt;$pInBuf&lt;/code&gt; 和 &lt;code&gt;$opOutBuf&lt;/code&gt; 都应为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce6228e7d5c476b0fc2645d7380e348b4647cdf8" translate="yes" xml:space="preserve">
          <source>Requests that the device eject the media. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">请求设备弹出媒体。 &lt;code&gt;$pInBuf&lt;/code&gt; 和 &lt;code&gt;$opOutBuf&lt;/code&gt; 都应为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea9f1e4078953886c0e39039cd350ff169c34987" translate="yes" xml:space="preserve">
          <source>Requests that the device load the media. &lt;code&gt;$pInBuf&lt;/code&gt; and &lt;code&gt;$opOutBuf&lt;/code&gt; should both be &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">请求设备加载媒体。 &lt;code&gt;$pInBuf&lt;/code&gt; 和 &lt;code&gt;$opOutBuf&lt;/code&gt; 都应为 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34dc163da627f35458c83c8246ac1cb61e2f2f2b" translate="yes" xml:space="preserve">
          <source>Requests that the port number be returned directly as a number representation rather than performing a name resolve operation that may convert it into a service name.</source>
          <target state="translated">要求直接将端口号作为数字表示返回,而不是执行可能将其转换为服务名的名称解析操作。</target>
        </trans-unit>
        <trans-unit id="bfa99d77de6103db99e699a2ff8298f2936928b5" translate="yes" xml:space="preserve">
          <source>Require that at least version</source>
          <target state="translated">要求至少有以下版本</target>
        </trans-unit>
        <trans-unit id="22fcedf182377afe7d9937912389585bf898ccac" translate="yes" xml:space="preserve">
          <source>Required Software for Compiling Perl on QNX4</source>
          <target state="translated">在 QNX4 上编译 Perl 所需的软件</target>
        </trans-unit>
        <trans-unit id="37b0c41751e7849dd79be6c01c066137fb2f5f19" translate="yes" xml:space="preserve">
          <source>Required named argument: &lt;code&gt;ctype&lt;/code&gt; to specify the entry to remove from the typemap.</source>
          <target state="translated">必需的命名参数： &lt;code&gt;ctype&lt;/code&gt; 以指定要从typemap中删除的条目。</target>
        </trans-unit>
        <trans-unit id="f70f6db3c0dfe5a546fc0170fc3a81003357748d" translate="yes" xml:space="preserve">
          <source>Required named argument: &lt;code&gt;string&lt;/code&gt; to specify the string to parse.</source>
          <target state="translated">必需的命名参数： &lt;code&gt;string&lt;/code&gt; 以指定要解析的字符串。</target>
        </trans-unit>
        <trans-unit id="7f823b1bc6f01bd92e5a552f8eb9d497667d3fa4" translate="yes" xml:space="preserve">
          <source>Required named argument: &lt;code&gt;xstype&lt;/code&gt; to specify the entry to remove from the typemap.</source>
          <target state="translated">必需的命名参数： &lt;code&gt;xstype&lt;/code&gt; 以指定要从类型映射中删除的条目。</target>
        </trans-unit>
        <trans-unit id="36573974909f5467ecfa5e62711b127ca4db7e75" translate="yes" xml:space="preserve">
          <source>Required named arguments: The &lt;code&gt;ctype&lt;/code&gt; (e.g. &lt;code&gt;ctype =&amp;gt; 'double'&lt;/code&gt;) and the &lt;code&gt;xstype&lt;/code&gt; (e.g. &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt;).</source>
          <target state="translated">必需的命名参数： &lt;code&gt;ctype&lt;/code&gt; （例如 &lt;code&gt;ctype =&amp;gt; 'double'&lt;/code&gt; ）和 &lt;code&gt;xstype&lt;/code&gt; （例如 &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="15eb37c3b4185b5530645af15d0e56c76ff77742" translate="yes" xml:space="preserve">
          <source>Required named arguments: The &lt;code&gt;xstype&lt;/code&gt; (e.g. &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt;) and the &lt;code&gt;code&lt;/code&gt; to associate with it for input.</source>
          <target state="translated">必需的命名参数： &lt;code&gt;xstype&lt;/code&gt; （例如 &lt;code&gt;xstype =&amp;gt; 'T_NV'&lt;/code&gt; ）和与其关联的 &lt;code&gt;code&lt;/code&gt; 以供输入。</target>
        </trans-unit>
        <trans-unit id="a06779f6d3d83b49a6d3ad4923852855b6333f51" translate="yes" xml:space="preserve">
          <source>Requirements for regular use must be listed in the &lt;code&gt;runtime&lt;/code&gt; phase. Other requirements should be listed in the earliest stage in which they are required and consumers must accumulate and satisfy requirements across phases before executing the activity. For example, &lt;code&gt;build&lt;/code&gt; requirements must also be available during the &lt;code&gt;test&lt;/code&gt; phase.</source>
          <target state="translated">必须在 &lt;code&gt;runtime&lt;/code&gt; 阶段中列出常规使用的要求。其他需求应在最早的需求阶段列出，并且消费者必须在执行活动之前跨阶段积累并满足需求。例如，在 &lt;code&gt;test&lt;/code&gt; 阶段还必须有 &lt;code&gt;build&lt;/code&gt; 要求。</target>
        </trans-unit>
        <trans-unit id="eb887cf384541e2b0ccb34a43dd92abcc11b1f21" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;xstype&lt;/code&gt; and &lt;code&gt;code&lt;/code&gt; parameters.</source>
          <target state="translated">需要 &lt;code&gt;xstype&lt;/code&gt; 和 &lt;code&gt;code&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="2d5d1c1676c0fd9a77cd7082dcfe1643557f4892" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;xstype&lt;/code&gt; and &lt;code&gt;ctype&lt;/code&gt; parameters.</source>
          <target state="translated">需要 &lt;code&gt;xstype&lt;/code&gt; 和 &lt;code&gt;ctype&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="b070a841a6544f8652efff9a9903ca945164a11a" translate="yes" xml:space="preserve">
          <source>Requires a MODULE name as an argument, returns the perl version when that module first appeared in core as ordered by perl version number or undef ( in scalar context ) or an empty list ( in list context ) if that module is not in core.</source>
          <target state="translated">需要一个MODULE名称作为参数,返回该模块在core中首次出现时的perl版本,按perl版本号排序,如果该模块不在core中,则返回undef(在scalar上下文中)或空列表(在list上下文中)。</target>
        </trans-unit>
        <trans-unit id="8cebc1b242bdc66e2f3ffebb8b55b2acf5d50d89" translate="yes" xml:space="preserve">
          <source>Requires a MODULE name as an argument, returns the perl version when that module first appeared in core as ordered by release date or undef ( in scalar context ) or an empty list ( in list context ) if that module is not in core.</source>
          <target state="translated">需要一个MODULE名称作为参数,返回该模块在core中首次出现时的perl版本,按发布日期排序,如果该模块不在core中,则返回undef(在scalar上下文中)或空列表(在list上下文中)。</target>
        </trans-unit>
        <trans-unit id="e3a13aaececc61b21709906ea7ed2c5f969fbd25" translate="yes" xml:space="preserve">
          <source>Requires a UTILITY name as an argument, returns the perl version when that utility first appeared in core as ordered by perl version number or undef ( in scalar context ) or an empty list ( in list context ) if that utility is not in core.</source>
          <target state="translated">需要一个UTILITY名称作为参数,返回该实用程序在core中首次出现时的perl版本,按perl版本号排序,如果该实用程序不在core中,则返回undef(在scalar上下文中)或空列表(在list上下文中)。</target>
        </trans-unit>
        <trans-unit id="1aefdd79ee42af104857cd7c79e88262bc7ac23c" translate="yes" xml:space="preserve">
          <source>Requires a UTILITY name as an argument, returns the perl version when that utility first appeared in core as ordered by release date or undef ( in scalar context ) or an empty list ( in list context ) if that utility is not in core.</source>
          <target state="translated">需要UTILITY名称作为参数,返回该实用程序首次出现在core中的perl版本,按发布日期排序,如果该实用程序不在core中,则返回undef(在scalar上下文中)或空列表(在list上下文中)。</target>
        </trans-unit>
        <trans-unit id="ed377c19feeec08e26544095ca753dc0820fb7e6" translate="yes" xml:space="preserve">
          <source>Requires a perl version as an argument, returns a list of utilities that shipped with that version of perl, or undef/empty list if that perl doesn't exist.</source>
          <target state="translated">需要一个perl版本作为参数,返回该版本perl所附带的实用程序列表,如果该perl不存在,则返回undef/empty列表。</target>
        </trans-unit>
        <trans-unit id="728771158c1bbd5031639e2b1c1d32b18089fed7" translate="yes" xml:space="preserve">
          <source>Requiring end-user programmers to change just a few language constructs, even language constructs which no well-educated developer would ever intentionally use is tantamount to saying &quot;you should not upgrade to a new release of Perl unless you have 100% test coverage and can do a full manual audit of your codebase.&quot; If we were to have tools capable of reliably upgrading Perl source code from one version of Perl to another, this concern could be significantly mitigated.</source>
          <target state="translated">要求最终用户程序员仅仅改变几个语言结构,甚至是没有受过良好教育的开发人员会有意使用的语言结构,这等于说 &quot;你不应该升级到新版本的Perl,除非你有100%的测试覆盖率,并能对你的代码库进行全面的人工审计&quot;。&quot;如果我们有能够可靠地将Perl源代码从一个版本升级到另一个版本的工具,这种担心就会大大减轻。</target>
        </trans-unit>
        <trans-unit id="00a9cad2d4b28b35c347301315fac8cb2ab7f4ff" translate="yes" xml:space="preserve">
          <source>Requiring this simple adjustment allows the returned arrays to be significantly smaller than otherwise, up to a factor of 10, speeding up searching through them.</source>
          <target state="translated">需要这个简单的调整,可以让返回的数组比其他情况下小很多,最多可以小10倍,加快搜索速度。</target>
        </trans-unit>
        <trans-unit id="6d159c7eddb97e9c21d2846efbaae518a7295999" translate="yes" xml:space="preserve">
          <source>Reserved special namespace for internals related functions</source>
          <target state="translated">为内部相关功能保留特殊命名空间</target>
        </trans-unit>
        <trans-unit id="4e74d4d9827f76033552c4bce7548c92601dd5bc" translate="yes" xml:space="preserve">
          <source>Reserved; do not use.</source>
          <target state="translated">保留,请勿使用。</target>
        </trans-unit>
        <trans-unit id="7ffbc8e70b6f684c19a724606837459e90fa36f2" translate="yes" xml:space="preserve">
          <source>Reset all state to the start. This sets the test count to 0, clears the plan, removes the failures, etc.</source>
          <target state="translated">将所有状态重置为开始。这将测试次数设置为0,清除计划,删除失败等。</target>
        </trans-unit>
        <trans-unit id="f7aaacc976d0136a0413180e35231597c9fc38df" translate="yes" xml:space="preserve">
          <source>Reset back to the default value &lt;code&gt;1&lt;/code&gt; when you are finished.</source>
          <target state="translated">完成后，请重置为默认值 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3734f4e5e4f9df543c5cf85be0da2c9f23c0797a" translate="yes" xml:space="preserve">
          <source>Reset the object to defaults.</source>
          <target state="translated">将对象重置为默认值。</target>
        </trans-unit>
        <trans-unit id="36172a6b379cf46ef3ee9780179fcadb80e672d8" translate="yes" xml:space="preserve">
          <source>Reset the status of the remote POP3 server. This includes resetting the status of all messages to not be deleted.</source>
          <target state="translated">重置远程POP3服务器的状态。这包括将所有邮件的状态重置为不被删除。</target>
        </trans-unit>
        <trans-unit id="4151da3198bcfc1a5da89032ab14cc889a12317e" translate="yes" xml:space="preserve">
          <source>Reset the status of the server. This may be called after a message has been initiated, but before any data has been sent, to cancel the sending of the message.</source>
          <target state="translated">重置服务器的状态。在消息被启动后,但在任何数据被发送之前,可以调用该函数来取消消息的发送。</target>
        </trans-unit>
        <trans-unit id="02dc3ed31f4b7eb772495a9ee888a245d069745b" translate="yes" xml:space="preserve">
          <source>Resets all the output filehandles back to their defaults.</source>
          <target state="translated">将所有输出文件柄重置为默认值。</target>
        </trans-unit>
        <trans-unit id="aa9cf9bd78e206bc610d834c679e0b74b254dd53" translate="yes" xml:space="preserve">
          <source>Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仅重置程序包变量；词法变量不受影响，但是无论如何它们都会在作用域退出时清理自身，因此您可能想要使用它们。看看&lt;a href=&quot;#my-VARLIST&quot;&gt; &lt;code&gt;my&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3445a8609a312ce76f3492ff2465c3caf78a329f" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%40INC&quot;&gt;&lt;code&gt;@INC&lt;/code&gt;&lt;/a&gt; arrays and your &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; hash.</source>
          <target state="translated">不建议重置 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; 因为您将清除&lt;a href=&quot;perlvar#%40ARGV&quot;&gt; &lt;code&gt;@ARGV&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;perlvar#%40INC&quot;&gt; &lt;code&gt;@INC&lt;/code&gt; &lt;/a&gt;数组以及&lt;a href=&quot;perlvar#%25ENV&quot;&gt; &lt;code&gt;%ENV&lt;/code&gt; &lt;/a&gt;哈希。</target>
        </trans-unit>
        <trans-unit id="df728e7bf105ac7f581a9dd0e636eb42c3068620" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;code&gt;@ARGV&lt;/code&gt; and &lt;code&gt;@INC&lt;/code&gt; arrays and your &lt;code&gt;%ENV&lt;/code&gt; hash. Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;#my&quot;&gt;my&lt;/a&gt;.</source>
          <target state="translated">不建议重置 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; 因为您将清除 &lt;code&gt;@ARGV&lt;/code&gt; 和 &lt;code&gt;@INC&lt;/code&gt; 数组以及 &lt;code&gt;%ENV&lt;/code&gt; 哈希。仅重置程序包变量；词法变量不受影响，但是无论如何它们都会在作用域退出时清理自身，因此您可能想要使用它们。看&lt;a href=&quot;#my&quot;&gt;我的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8f162e60a9bad148199eb54adf329825dd227d7" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;code&gt;@ARGV&lt;/code&gt; and &lt;code&gt;@INC&lt;/code&gt; arrays and your &lt;code&gt;%ENV&lt;/code&gt; hash. Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;.</source>
          <target state="translated">不建议重置 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; 因为您将清除 &lt;code&gt;@ARGV&lt;/code&gt; 和 &lt;code&gt;@INC&lt;/code&gt; 数组以及 &lt;code&gt;%ENV&lt;/code&gt; 哈希。仅重置程序包变量；词法变量不受影响，但是无论如何它们都会在作用域退出时清理自身，因此您可能想要使用它们。看&lt;a href=&quot;my&quot;&gt;我的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="76f899686a2e586116d54bb4545f857f59fe7fe9" translate="yes" xml:space="preserve">
          <source>Resolves a POD link target (typically a module or POD file name) and section name to a URL. The resulting link will be returned for the above examples as:</source>
          <target state="translated">将一个POD链接目标(通常是一个模块或POD文件名)和部分名称解析为一个URL。对于上面的例子,结果的链接将被返回为:。</target>
        </trans-unit>
        <trans-unit id="4fe8cda39bfcaf85efe77cca4bd558244a35eb77" translate="yes" xml:space="preserve">
          <source>Resolves a man page link target and numeric section to a URL. The resulting link will be returned for the above examples as:</source>
          <target state="translated">将一个man page链接目标和数字部分解析为一个URL。上述例子中的链接将被返回为。</target>
        </trans-unit>
        <trans-unit id="1f335f62fb1319094ed8c85a104148776a182ed6" translate="yes" xml:space="preserve">
          <source>Resolving hostnames into IP addresses</source>
          <target state="translated">将主机名解析为IP地址</target>
        </trans-unit>
        <trans-unit id="817f6d32d45791e684f36eedfcfbf9aabc013c92" translate="yes" xml:space="preserve">
          <source>Resource limits</source>
          <target state="translated">资源限制</target>
        </trans-unit>
        <trans-unit id="35aa9ad49c5f86755dbf02133b7dfb7ed2b55215" translate="yes" xml:space="preserve">
          <source>Respects current &lt;code&gt;LC_CTYPE&lt;/code&gt; locale for code points &amp;lt; 256; and uses Unicode rules for the remaining code points (this last can only happen if the UTF8 flag is also set). See &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">遵守当前 &lt;code&gt;LC_CTYPE&lt;/code&gt; 语言环境的代码点&amp;lt;256；并对其余代码点使用Unicode规则（仅在还设置了UTF8标志的情况下，才可以使用后一种规则）。参见&lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9857e06bf03652fa8f40c743891977f44df6226" translate="yes" xml:space="preserve">
          <source>Respects current &lt;code&gt;LC_CTYPE&lt;/code&gt; locale for code points &amp;lt; 256; and uses Unicode rules for the remaining code points (this last can only happen if the UTF8 flag is also set). See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">遵守当前 &lt;code&gt;LC_CTYPE&lt;/code&gt; 语言环境的代码点&amp;lt;256；并对其余代码点使用Unicode规则（仅在还设置了UTF8标志的情况下，才可以使用后一种规则）。参见&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bb5035288ee0c0593db52c81b02f88d18586fd6" translate="yes" xml:space="preserve">
          <source>Restart the debugger by &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;ing a new session. We try to maintain your history across this, but internal settings and command-line options may be lost.</source>
          <target state="translated">通过 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; 进行新的会话来重新启动调试器。我们会尽力维护您的历史记录，但是内部设置和命令行选项可能会丢失。</target>
        </trans-unit>
        <trans-unit id="027e8fcefdab1f31615a4163307c17117de6c12b" translate="yes" xml:space="preserve">
          <source>Restart the debugger by &lt;code&gt;exec()&lt;/code&gt;ing a new session. We try to maintain your history across this, but internal settings and command-line options may be lost.</source>
          <target state="translated">通过 &lt;code&gt;exec()&lt;/code&gt; 进行新的会话来重新启动调试器。我们会尽力维护您的历史记录，但是内部设置和命令行选项可能会丢失。</target>
        </trans-unit>
        <trans-unit id="0e302e4245c87b729532b5c42f98d00569ce709e" translate="yes" xml:space="preserve">
          <source>Restartable system calls</source>
          <target state="translated">可重新启动的系统调用</target>
        </trans-unit>
        <trans-unit id="597b72184e30367d0a4e7f1342f611c72bdc88c0" translate="yes" xml:space="preserve">
          <source>Restore &lt;code&gt;errno&lt;/code&gt; and any operating system specific error number that was saved by &lt;code&gt;dSAVE_ERRNO&lt;/code&gt; or &lt;code&gt;RESTORE_ERRNO&lt;/code&gt;.</source>
          <target state="translated">还原 &lt;code&gt;errno&lt;/code&gt; 和 &lt;code&gt;dSAVE_ERRNO&lt;/code&gt; 或 &lt;code&gt;RESTORE_ERRNO&lt;/code&gt; 保存的任何特定于操作系统的错误号。</target>
        </trans-unit>
        <trans-unit id="22e3b7ca390a6c1b757fcac8c3e1a1a537bfb39b" translate="yes" xml:space="preserve">
          <source>Restore the old pad saved into the local variable &lt;code&gt;opad&lt;/code&gt; by &lt;code&gt;PAD_SAVE_LOCAL()&lt;/code&gt;</source>
          <target state="translated">恢复通过 &lt;code&gt;PAD_SAVE_LOCAL()&lt;/code&gt; 保存到本地变量 &lt;code&gt;opad&lt;/code&gt; 中的旧键盘</target>
        </trans-unit>
        <trans-unit id="63a793362ef3ca43722345085de3438d880f6a16" translate="yes" xml:space="preserve">
          <source>Restore the old pad saved into the local variable opad by PAD_SAVE_LOCAL()</source>
          <target state="translated">通过PAD_SAVE_LOCAL()恢复保存在本地变量opad中的旧pad。</target>
        </trans-unit>
        <trans-unit id="4f1729fcc9821f2a0d1acba3f1a183f1116342c4" translate="yes" xml:space="preserve">
          <source>Restoring original @INC</source>
          <target state="translated">恢复原汁原味的@INC</target>
        </trans-unit>
        <trans-unit id="5d11c1b413768fba80561ed7ba82544986011373" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses for this protocol</source>
          <target state="translated">限制只为该协议生成地址。</target>
        </trans-unit>
        <trans-unit id="ad27d2b05e664f67f8116bdd57edeef1987e5429" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses in this address family</source>
          <target state="translated">限制只在该地址族中生成地址。</target>
        </trans-unit>
        <trans-unit id="23b0370fc27402e85db8bdba7a00eab25a9ff0bd" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses of this socket type</source>
          <target state="translated">限制只生成此套接字类型的地址。</target>
        </trans-unit>
        <trans-unit id="c16e1f0c25289d1e2f2b5219ef38e386a9adf34e" translate="yes" xml:space="preserve">
          <source>Restrict unsafe constructs</source>
          <target state="translated">限制不安全结构</target>
        </trans-unit>
        <trans-unit id="091038df15e856c37352b0be1f97c0135c975070" translate="yes" xml:space="preserve">
          <source>Restrict unsafe operations when compiling</source>
          <target state="translated">编译时限制不安全操作</target>
        </trans-unit>
        <trans-unit id="6dc4fcb6b9bae373de137f9cf069e3fd7447d402" translate="yes" xml:space="preserve">
          <source>Restricted hashes</source>
          <target state="translated">限制性哈希</target>
        </trans-unit>
        <trans-unit id="8617d55e624bcba9c7b74950b1041e1199647dc0" translate="yes" xml:space="preserve">
          <source>Restrictions of Perl on OpenVOS</source>
          <target state="translated">Perl对OpenVOS的限制</target>
        </trans-unit>
        <trans-unit id="9a968126c8536966642d8125340baafc91d326de" translate="yes" xml:space="preserve">
          <source>Restricts the given %hash's set of keys to @keys. If @keys is not given it restricts it to its current keyset. No more keys can be added. delete() and exists() will still work, but will not alter the set of allowed keys. &lt;b&gt;Note&lt;/b&gt;: the current implementation prevents the hash from being bless()ed while it is in a locked state. Any attempt to do so will raise an exception. Of course you can still bless() the hash before you call lock_keys() so this shouldn't be a problem.</source>
          <target state="translated">将给定的％hash的键集限制为@keys。如果未提供@keys，则将其限制为当前键集。不能再添加任何键。delete（）和exist（）仍将起作用，但不会更改允许的键集。&lt;b&gt;注意&lt;/b&gt;：当前的实现可防止在哈希处于锁定状态时对其进行bless（）处理。任何尝试这样做都会引发异常。当然，在调用lock_keys（）之前，您仍然可以bless（）哈希，因此这不成问题。</target>
        </trans-unit>
        <trans-unit id="d20e8533733a9999fd6c28dce159eeeba0391f34" translate="yes" xml:space="preserve">
          <source>Result looks like this:</source>
          <target state="translated">结果是这样的。</target>
        </trans-unit>
        <trans-unit id="a0ee06cbf0d3a077c8ec64125db655ac2b8a4f75" translate="yes" xml:space="preserve">
          <source>Result types</source>
          <target state="translated">结果类型</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="396addc43726f471d8b20eaa47f9efcfd781e187" translate="yes" xml:space="preserve">
          <source>Resulting in the program</source>
          <target state="translated">导致程序</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="2efc1923ac09640c75b64277892d583e2361bb83" translate="yes" xml:space="preserve">
          <source>Results are never tainted because otherwise even output from print, for example &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print(1/7)&lt;/a&gt;&lt;/code&gt;, should be tainted if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect.</source>
          <target state="translated">结果永远不会被污染，因为如果有效的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 区域设置，则甚至会污染来自print的输出，例如 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print(1/7)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c19e837b4f301baeae62a8871cae6d7985df728" translate="yes" xml:space="preserve">
          <source>Results are never tainted because otherwise even output from print, for example &lt;code&gt;print(1/7)&lt;/code&gt;, should be tainted if &lt;code&gt;use locale&lt;/code&gt; is in effect.</source>
          <target state="translated">结果永远不会被污染，因为如果 &lt;code&gt;use locale&lt;/code&gt; 有效，那么甚至来自print的输出 &lt;code&gt;print(1/7)&lt;/code&gt; 例如print（1/7））也应被污染。</target>
        </trans-unit>
        <trans-unit id="80229b8449770c6d400ff29bbd402430674d8e49" translate="yes" xml:space="preserve">
          <source>Results are never tainted.</source>
          <target state="translated">结果永远不会被污染。</target>
        </trans-unit>
        <trans-unit id="910730d509932b84b34b414ac4c857477d1d0180" translate="yes" xml:space="preserve">
          <source>Results are tainted if a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect.</source>
          <target state="translated">如果包含 &lt;code&gt;LC_CTYPE&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 形式有效，则会污染结果。</target>
        </trans-unit>
        <trans-unit id="025994ec6623714b4195ea5a6e004f41b96b4505" translate="yes" xml:space="preserve">
          <source>Results are tainted if a &lt;code&gt;use locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect.</source>
          <target state="translated">如果包含 &lt;code&gt;LC_CTYPE&lt;/code&gt; 的 &lt;code&gt;use locale&lt;/code&gt; 形式有效，则会污染结果。</target>
        </trans-unit>
        <trans-unit id="b6c3a225733e64bea8efa2629e852e0f9eb54d2b" translate="yes" xml:space="preserve">
          <source>Retains '::' in type names so that C++ hierarchical types can be mapped.</source>
          <target state="translated">在类型名中保留'::',以便C++层次类型可以被映射。</target>
        </trans-unit>
        <trans-unit id="66a67d8823304f8234e82df960c20ebaacbf345a" translate="yes" xml:space="preserve">
          <source>Retains &lt;code&gt;::&lt;/code&gt; in type names so that C++ hierarchical types can be mapped. Default is false.</source>
          <target state="translated">在类型名称中保留 &lt;code&gt;::&lt;/code&gt; ，以便可以映射C ++层次结构类型。默认为false。</target>
        </trans-unit>
        <trans-unit id="d7ae391f88a9b63319b85f5152615ab3754281a5" translate="yes" xml:space="preserve">
          <source>Rethink your design.</source>
          <target state="translated">重新思考你的设计。</target>
        </trans-unit>
        <trans-unit id="ca5a868361dd75a05afb31048a73c91a310fb914" translate="yes" xml:space="preserve">
          <source>Rethrows a previously caught exception. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;&quot;Exception Handling&quot; in perlguts&lt;/a&gt;.</source>
          <target state="translated">抛出先前捕获的异常。请参见&lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlguts中的&amp;ldquo;异常处理&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d864f634d34c4155822d46f8d91b346abeaaef02" translate="yes" xml:space="preserve">
          <source>Rethrows a previously caught exception. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">抛出先前捕获的异常。请参阅&lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlguts中的异常处理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f6bd37434498e4371fd88a4bfb1729adc9d5c9a" translate="yes" xml:space="preserve">
          <source>Retired langfam codes for the Locale::Codes::LangFam module</source>
          <target state="translated">Locale::Codes::LangFam模块的已退休的langfam代码。</target>
        </trans-unit>
        <trans-unit id="b3e0ea7f2d67a985903f2bdffd76452cdd561a93" translate="yes" xml:space="preserve">
          <source>Retreive the message &quot;command&quot; as a string;</source>
          <target state="translated">将 &quot;command &quot;的信息以字符串的形式重现。</target>
        </trans-unit>
        <trans-unit id="9e8f8f9dc55113068c79456626250be0fa9383d3" translate="yes" xml:space="preserve">
          <source>Retrieval of PM messages until window creation/destruction. If &lt;code&gt;force&lt;/code&gt; is false, will not dispatch messages if a real message loop is known to be present.</source>
          <target state="translated">检索PM消息，直到创建/销毁窗口为止。如果 &lt;code&gt;force&lt;/code&gt; 为false，则在已知存在真实消息循环的情况下将不会调度消息。</target>
        </trans-unit>
        <trans-unit id="9c9059c27f17082052b07415cc0c473e3351c1bf" translate="yes" xml:space="preserve">
          <source>Retrieve a value from the &lt;code&gt;c_cc&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object. The &lt;code&gt;c_cc&lt;/code&gt; field is an array so an index must be specified.</source>
          <target state="translated">从 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_cc&lt;/code&gt; 字段中检索一个值。所述 &lt;code&gt;c_cc&lt;/code&gt; 中字段是如此，必须指定一个索引的数组。</target>
        </trans-unit>
        <trans-unit id="e04e303f482dcced975e53b0a5073316852bb367" translate="yes" xml:space="preserve">
          <source>Retrieve an array containing the hyperlinks to things outside the current POD (as defined by &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">检索包含超链接的数组，该超链接指向当前POD之外的事物（由 &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; 定义）。</target>
        </trans-unit>
        <trans-unit id="6dd60623ab1f0fead77ed722c84110186b35b3d9" translate="yes" xml:space="preserve">
          <source>Retrieve one line, delimited by CRLF, from the remote server. Returns</source>
          <target state="translated">从远程服务器中获取一行以CRLF为界的数据。返回</target>
        </trans-unit>
        <trans-unit id="120622bbd6d958d0f9c367331115c5b3f99cbcf7" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_cflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">检索 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_cflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="9a43df9223bf1d671907cb79ad24e65e7a8da945" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_iflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">检索 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_iflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="5e27d54476a270ba05b730aea326a39f970e8caa" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_lflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">检索 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_lflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="ff4743799470ee7b920cd9fd1a21024d975f2d4a" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_oflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">检索 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_oflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="6dc4792ca5a24eb7ba3c253287755e63991cec8e" translate="yes" xml:space="preserve">
          <source>Retrieve the datum in</source>
          <target state="translated">检索</target>
        </trans-unit>
        <trans-unit id="4511f642a0428b9e7d0d6d89734a7f32ac28109c" translate="yes" xml:space="preserve">
          <source>Retrieve the first name</source>
          <target state="translated">检索名字</target>
        </trans-unit>
        <trans-unit id="df345846bd0c2d69e12b4a91aaf669983d7377b1" translate="yes" xml:space="preserve">
          <source>Retrieve the full name, the first and last name joined by a blank.</source>
          <target state="translated">检索全名,名字和姓氏由一个空白连接。</target>
        </trans-unit>
        <trans-unit id="f95d03de659d7e5c70bd3aa6dbca967eb0f4d19b" translate="yes" xml:space="preserve">
          <source>Retrieve the header, a blank line, then the body (text) of the specified article.</source>
          <target state="translated">检索指定文章的页眉、空行,然后是正文(文本)。</target>
        </trans-unit>
        <trans-unit id="bc385b4aceaf92215d1828a2e2ea727868f48f2f" translate="yes" xml:space="preserve">
          <source>Retrieve the input baud rate.</source>
          <target state="translated">检索输入波特率。</target>
        </trans-unit>
        <trans-unit id="601de4f2ebd867a526f1ea2777ad7a4bbeea163a" translate="yes" xml:space="preserve">
          <source>Retrieve the last name</source>
          <target state="translated">检索姓氏</target>
        </trans-unit>
        <trans-unit id="43b2d69c57387d7f84b4fed900b418d5c512cf9b" translate="yes" xml:space="preserve">
          <source>Retrieve the output baud rate.</source>
          <target state="translated">读取输出波特率。</target>
        </trans-unit>
        <trans-unit id="b3d3d02e049b87699655beb42bb9ab4ea07dbbd0" translate="yes" xml:space="preserve">
          <source>Retrieve the signal mask for the host port for use with Amiga::Exec Wait()</source>
          <target state="translated">读取主机端口的信号掩码,供Amiga::Exec Wait()使用。</target>
        </trans-unit>
        <trans-unit id="153bc75c411348eec881e255f76be1e64881b5cc" translate="yes" xml:space="preserve">
          <source>Retrieve the value of the tied scalar referenced by</source>
          <target state="translated">擷取由</target>
        </trans-unit>
        <trans-unit id="c7943c0d0949d2c5b85d164364d628b4d8b2a92d" translate="yes" xml:space="preserve">
          <source>Retrieves the flags associated with a Win32 native file handle or object handle.</source>
          <target state="translated">检索与Win32本地文件句柄或对象句柄相关的标志。</target>
        </trans-unit>
        <trans-unit id="03ee038fcaef73a536de77451717f2391e453473" translate="yes" xml:space="preserve">
          <source>Retrieves the function that will be used to fix up a call to</source>
          <target state="translated">检索将用于修复对</target>
        </trans-unit>
        <trans-unit id="fdb73b4c84229a769fa2e961fd33d28742facadb" translate="yes" xml:space="preserve">
          <source>Retrieves the function that will be used to fix up a call to &lt;code&gt;cv&lt;/code&gt;. Specifically, the function is applied to an &lt;code&gt;entersub&lt;/code&gt; op tree for a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, where the callee can be identified at compile time as &lt;code&gt;cv&lt;/code&gt;.</source>
          <target state="translated">检索将用于修复对 &lt;code&gt;cv&lt;/code&gt; 的调用的函数。具体来说，该函数将应用于子例程调用的 &lt;code&gt;entersub&lt;/code&gt; op树，该子例程未用 &lt;code&gt;&amp;amp;&lt;/code&gt; 标记，其中在编译时可以将被调用方标识为 &lt;code&gt;cv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="865c55659da47740ab3e48d9d595c810b1ab611d" translate="yes" xml:space="preserve">
          <source>Retrieves the product type for the operating system on the local computer, and maps the type to the product types supported by the specified operating system. Please refer to the Microsoft documentation of the GetProductInfo() function for more information about the parameters and return value. This function requires Windows Vista or later.</source>
          <target state="translated">检索本地计算机上操作系统的产品类型,并将该类型映射到指定操作系统支持的产品类型。请参考微软的GetProductInfo()函数文档,了解有关参数和返回值的更多信息。此函数需要Windows Vista或更高版本。</target>
        </trans-unit>
        <trans-unit id="8b7911710a3dab3cc73f8e7019303ffb596f175e" translate="yes" xml:space="preserve">
          <source>Retrieves the reparse point data associated with $hDevice.</source>
          <target state="translated">检索与$hDevice相关联的Reparse点数据。</target>
        </trans-unit>
        <trans-unit id="21780e4c57b1384c52e5ab6a031d8d4b467bcb54" translate="yes" xml:space="preserve">
          <source>Retrieves the specified system metric or system configuration setting. Please refer to the Microsoft documentation of the GetSystemMetrics() function for a reference of available INDEX values. All system metrics return integer values.</source>
          <target state="translated">检索指定的系统指标或系统配置设置。请参考Microsoft文档中的GetSystemMetrics()函数,获取可用的INDEX值。所有系统指标都返回整数值。</target>
        </trans-unit>
        <trans-unit id="9eec387679e71e59c66232709943e141d44d4414" translate="yes" xml:space="preserve">
          <source>Retrieves the time conversion information from the &lt;code&gt;tzname&lt;/code&gt; variable.</source>
          <target state="translated">从 &lt;code&gt;tzname&lt;/code&gt; 变量中检索时间转换信息。</target>
        </trans-unit>
        <trans-unit id="4da4b9355ca37de19201e461cad40244a9893d34" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory.</source>
          <target state="translated">检索文件或目录的可配置限制值。</target>
        </trans-unit>
        <trans-unit id="652c07db1d8a422e8f5d2293abd7abb4ee1fd964" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">检索文件或目录上可配置限制的值。它使用文件描述符，例如通过调用 &lt;code&gt;POSIX::open&lt;/code&gt; 获得的文件描述符。</target>
        </trans-unit>
        <trans-unit id="c3c8e75ebf55e9dd14ea6154954b644bf45304b7" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="translated">检索文件或目录上可配置限制的值。它使用文件描述符，例如通过调用 &lt;code&gt;POSIX::open&lt;/code&gt; 获得的文件描述符。</target>
        </trans-unit>
        <trans-unit id="e02559c3356326a3b1e599326bdaca8e1cd1d0bf" translate="yes" xml:space="preserve">
          <source>Retrieves values of system configurable variables.</source>
          <target state="translated">检索系统可配置变量的值。</target>
        </trans-unit>
        <trans-unit id="908262fdee5fbef995f0f45380b61275d7e304ec" translate="yes" xml:space="preserve">
          <source>Retrieving the backtrace from Perl level (using for example an XS extension) would be much less exciting than one would hope: normally you would see &lt;code&gt;runops&lt;/code&gt; , &lt;code&gt;entersub&lt;/code&gt; , and not much else. This API is intended to be called &lt;b&gt;from within&lt;/b&gt; the Perl implementation, not from Perl level execution.</source>
          <target state="translated">从Perl级别检索回溯（例如，使用XS扩展名）将比人们希望的要激动得多：通常，您会看到 &lt;code&gt;runops&lt;/code&gt; ， &lt;code&gt;entersub&lt;/code&gt; 以及其他内容。该API旨在&lt;b&gt;从&lt;/b&gt; Perl实现中调用，而不是从Perl级执行中调用。</target>
        </trans-unit>
        <trans-unit id="960a80c75df67c4eb399e9ea2d01232059619bba" translate="yes" xml:space="preserve">
          <source>Retrieving the backtrace from Perl level (using for example an XS extension) would be much less exciting than one would hope: normally you would see &lt;code&gt;runops&lt;/code&gt;, &lt;code&gt;entersub&lt;/code&gt;, and not much else. This API is intended to be called &lt;b&gt;from within&lt;/b&gt; the Perl implementation, not from Perl level execution.</source>
          <target state="translated">从Perl级别检索回溯（例如，使用XS扩展名）将比人们希望的要激动得多：通常，您会看到 &lt;code&gt;runops&lt;/code&gt; ， &lt;code&gt;entersub&lt;/code&gt; 以及其他内容。该API旨在&lt;b&gt;从&lt;/b&gt;Perl实现中调用，而不是从Perl级别执行中调用。</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="147311f53adc905469208b823e582ec70f5da4cf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mNO&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB 返回 &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; 。使用 &lt;code&gt;XST_mNO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2aa8731181e807473006de3af6e4c644ec56211" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mNO&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回 &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; 。使用 &lt;code&gt;XST_mNO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5551daa758eb4f1962ff204e60ac6d510f876260" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mUNDEF&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB 返回 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 。使用 &lt;code&gt;XST_mUNDEF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec92a7eaa3f0bd31322990cef9a2f9f9d9178daa" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mUNDEF&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 。使用 &lt;code&gt;XST_mUNDEF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="465dad58ecf69fa630bc3f710cfd58d97befa558" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mYES&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB 返回 &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; 。使用 &lt;code&gt;XST_mYES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3e8f831ab266215ab448f1eb54501bbb7cedd93" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mYES&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回 &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; 。使用 &lt;code&gt;XST_mYES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d434075170c323a77b75fb6a1dc64742b45bd22e" translate="yes" xml:space="preserve">
          <source>Return API version as a Perl scalar, 1 for Math::BigInt v1.70, 2 for Math::BigInt v1.83.</source>
          <target state="translated">以 Perl 标量形式返回 API 版本,1 代表 Math::BigInt v1.70,2 代表 Math::BigInt v1.83。</target>
        </trans-unit>
        <trans-unit id="d3b3f6da169bd793afaccd7c1d1ff1d877478bfb" translate="yes" xml:space="preserve">
          <source>Return Nth root of the object, truncated to int. N is &amp;gt;= 3.</source>
          <target state="translated">返回对象的第N个根，将其截断为int。N&amp;gt; = 3。</target>
        </trans-unit>
        <trans-unit id="ee7ade6a89266f0ce63300ffcdf5e3d44430e5cf" translate="yes" xml:space="preserve">
          <source>Return OBJ1 modulo OBJ2, i.e., the remainder after dividing OBJ1 by OBJ2.</source>
          <target state="translated">返回OBJ1与OBJ2的模数,即OBJ1除以OBJ2后的余数。</target>
        </trans-unit>
        <trans-unit id="c2d3149d101eee963ecad6da777888bf7deda306" translate="yes" xml:space="preserve">
          <source>Return OBJ1 to the power of OBJ2. By convention, 0**0 = 1.</source>
          <target state="translated">将OBJ1返回到OBJ2的幂。按照惯例,0**0=1。</target>
        </trans-unit>
        <trans-unit id="a7b7728606fe5548394ca030c9925c7c360c2129" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category has been set to FATAL in the first scope where the object is used. Otherwise returns FALSE.</source>
          <target state="translated">如果在使用该对象的第一个作用域中,该警告类别被设置为FATAL,则返回TRUE。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="b8471d332e30c305b7ffd23da02013a440c0b038" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">如果在调用模块中启用了警告类别,则返回TRUE,否则返回FALSE。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="427a27c6e94dc4cf9cfd1ee6dba724c6e8763ad0" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category is enabled in the first scope where the object is used. Otherwise returns FALSE.</source>
          <target state="translated">如果在使用该对象的第一个作用域中启用了警告类别,则返回TRUE。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="c94f996bfa47e593985fe4ec41527489b9731a07" translate="yes" xml:space="preserve">
          <source>Return TRUE if the name is safe.</source>
          <target state="translated">如果名字是安全的,返回TRUE。</target>
        </trans-unit>
        <trans-unit id="96be94a39b4300e1884dd9adc1a2936e7fc2bdc2" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category &lt;code&gt;$category&lt;/code&gt; has been set to FATAL in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">如果警告类别 &lt;code&gt;$category&lt;/code&gt; 在调用模块中已设置为FATAL，则返回TRUE 。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="b108b1cc9affb1337971003aad75911571c79e7b" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category with the same name as the current package has been set to FATAL in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">如果与当前包同名的警告类别在调用模块中被设置为FATAL,则返回TRUE。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="2702ef79f51a7a603a764187ab2c97d87823ae2a" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category, &lt;code&gt;$category&lt;/code&gt; , is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">如果在调用模块中启用了警告类别 &lt;code&gt;$category&lt;/code&gt; ，则返回TRUE 。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="95d9da3844579ef5ebf6944dcd53869dac5515aa" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category, &lt;code&gt;$category&lt;/code&gt;, is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">如果在调用模块中启用了警告类别 &lt;code&gt;$category&lt;/code&gt; ，则返回TRUE 。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="4ed1a51e3c7c6cf43a3633b3e58f69e74b9dd263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="dd8731f1ccd97a2ffba2dcddfde967debf1a72e1" translate="yes" xml:space="preserve">
          <source>Return a SV containing a string that must appear in the pattern. Used by &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; for optimising matches.</source>
          <target state="translated">返回包含必须在模式中出现的字符串的SV。由 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 用于优化匹配。</target>
        </trans-unit>
        <trans-unit id="1b2000e8899d573a7e22c51816568c7ed995a486" translate="yes" xml:space="preserve">
          <source>Return a SV containing a string that must appear in the pattern. Used by &lt;code&gt;split&lt;/code&gt; for optimising matches.</source>
          <target state="translated">返回一个SV，其中包含必须出现在模式中的字符串。由 &lt;code&gt;split&lt;/code&gt; 用于优化匹配。</target>
        </trans-unit>
        <trans-unit id="ef680f28e15ead0c97150a82245301402d6d3189" translate="yes" xml:space="preserve">
          <source>Return a copy of a string from an XSUB immediately. Uses &lt;code&gt;XST_mPV&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB返回字符串的副本。使用 &lt;code&gt;XST_mPV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8f8366fd236779edf8e36419f9f0cda4a8398ad" translate="yes" xml:space="preserve">
          <source>Return a copy of a string from an XSUB immediately. Uses &lt;code&gt;XST_mPV&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回字符串的副本。使用 &lt;code&gt;XST_mPV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d8a70dab10ae99b42cd2b1f2b638d4aa167541d" translate="yes" xml:space="preserve">
          <source>Return a double from an XSUB immediately. Uses &lt;code&gt;XST_mNV&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB返回一个double。使用 &lt;code&gt;XST_mNV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b10b4a7e72d3b5b362d50c059fd378a0bce9ae9" translate="yes" xml:space="preserve">
          <source>Return a double from an XSUB immediately. Uses &lt;code&gt;XST_mNV&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回一个double。使用 &lt;code&gt;XST_mNV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e233ff228d377735118fccb83e09d6507766800e" translate="yes" xml:space="preserve">
          <source>Return a formatted report of the information returned by bucket_stats(). An example report looks like this:</source>
          <target state="translated">返回由 bucket_stats()返回的格式化报告。一个例子的报告是这样的。</target>
        </trans-unit>
        <trans-unit id="8b2b0669279235775947aa2a2e43aa996d55f461" translate="yes" xml:space="preserve">
          <source>Return a formatted string about the elapsed (wall-clock) time and about the consumed CPU time.</source>
          <target state="translated">返回一个格式化的字符串,关于经过的时间(挂钟)和消耗的CPU时间。</target>
        </trans-unit>
        <trans-unit id="00a08fc2a49d16208a3da942556b8e6789f09ae3" translate="yes" xml:space="preserve">
          <source>Return a human readable representation of the scheduling tree. For example:</source>
          <target state="translated">返回调度树的可读性表示。例如:</target>
        </trans-unit>
        <trans-unit id="8d29859d693280c46e84547c235fda5f109149f7" translate="yes" xml:space="preserve">
          <source>Return a key based on PATH and ID, which can be used as a key for &lt;code&gt;&lt;a href=&quot;../functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;http://search.cpan.org/perldoc/ftok&quot;&gt;ftok&lt;/a&gt;.</source>
          <target state="translated">返回基于PATH和ID的密钥，可以将其用作 &lt;code&gt;&lt;a href=&quot;../functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; 的密钥。参见&lt;a href=&quot;http://search.cpan.org/perldoc/ftok&quot;&gt;ftok&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="769d5d9d53f1df5b085177af6c83e282e5460352" translate="yes" xml:space="preserve">
          <source>Return a key based on PATH and ID, which can be used as a key for &lt;code&gt;msgget&lt;/code&gt;, &lt;code&gt;semget&lt;/code&gt; and &lt;code&gt;shmget&lt;/code&gt;. See &lt;a href=&quot;http://man.he.net/man3/ftok&quot;&gt;ftok(3)&lt;/a&gt;.</source>
          <target state="translated">返回基于PATH和ID的密钥，可以将其用作 &lt;code&gt;msgget&lt;/code&gt; ， &lt;code&gt;semget&lt;/code&gt; 和 &lt;code&gt;shmget&lt;/code&gt; 的密钥。参见&lt;a href=&quot;http://man.he.net/man3/ftok&quot;&gt;ftok（3）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bf5b38903b48414eabe89f5d73486c7f125e1c6" translate="yes" xml:space="preserve">
          <source>Return a list consisting of (signed) numerator and (unsigned) denominator as BigInts.</source>
          <target state="translated">返回由(有符号)分子和(无符号)分母组成的BigInts列表。</target>
        </trans-unit>
        <trans-unit id="451b1d3213ee97d37f98d9e2159d9222ada4e531" translate="yes" xml:space="preserve">
          <source>Return a list of filehandles that may be used upstream in a select() call to signal that this Iterator is ready. Iterators that are not handle based should return an empty list.</source>
          <target state="translated">返回一个可以在上游的select()调用中使用的filehandles列表,以表示这个迭代器准备好了。不基于句柄的迭代器应该返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="43a2d1db010ca6f9905f00e7243c5c3558754b8a" translate="yes" xml:space="preserve">
          <source>Return a list of filehandles that may be used upstream in a select() call to signal that this Iterator is ready. Iterators that are not handle-based should return an empty list.</source>
          <target state="translated">返回一个可以在上游的select()调用中使用的filehandles列表,以表示这个迭代器已经准备好了。不基于句柄的迭代器应该返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="32067e232db5b4a2fbf7e768b9545020f7badd2e" translate="yes" xml:space="preserve">
          <source>Return a list of login, password and account information for the netrc entry</source>
          <target state="translated">返回netrc条目的登录名、密码和账户信息列表。</target>
        </trans-unit>
        <trans-unit id="bb492aaa479310c3cdf2aa3bd7e3c5fbe533f80a" translate="yes" xml:space="preserve">
          <source>Return a list of symbol names which remain undefined after load_file(). Returns &lt;code&gt;()&lt;/code&gt; if not known. Don't worry if your platform does not provide a mechanism for this. Most do not need it and hence do not provide it, they just return an empty list.</source>
          <target state="translated">返回在load_file（）之后未定义的符号名称列表。如果未知，则返回 &lt;code&gt;()&lt;/code&gt; 。如果您的平台没有为此提供机制，请不要担心。大多数不需要它，因此不提供它，它们只是返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="26152553b41eeb36a45b1fbc384250df3b61d1f3" translate="yes" xml:space="preserve">
          <source>Return a member of the XOP structure.</source>
          <target state="translated">返回XOP结构的一个成员。</target>
        </trans-unit>
        <trans-unit id="059cd9120afd60662940c8b642ff4e8f7c4204fb" translate="yes" xml:space="preserve">
          <source>Return a member of the XOP structure. &lt;code&gt;which&lt;/code&gt; is a cpp token indicating which entry to return. If the member is not set this will return a default value. The return type depends on &lt;code&gt;which&lt;/code&gt;. This macro evaluates its arguments more than once. If you are using &lt;code&gt;Perl_custom_op_xop&lt;/code&gt; to retreive a &lt;code&gt;XOP *&lt;/code&gt; from a &lt;code&gt;OP *&lt;/code&gt;, use the more efficient &lt;a href=&quot;#XopENTRYCUSTOM&quot;&gt;&quot;XopENTRYCUSTOM&quot;&lt;/a&gt; instead.</source>
          <target state="translated">返回XOP结构的成员。 &lt;code&gt;which&lt;/code&gt; 是一个cpp令牌，指示要返回的条目。如果未设置成员，则将返回默认值。返回类型取决于 &lt;code&gt;which&lt;/code&gt; 。该宏多次评估其自变量。如果您使用 &lt;code&gt;Perl_custom_op_xop&lt;/code&gt; 从 &lt;code&gt;OP *&lt;/code&gt; 检索 &lt;code&gt;XOP *&lt;/code&gt; *，请改用效率更高的&lt;a href=&quot;#XopENTRYCUSTOM&quot;&gt;&amp;ldquo; XopENTRYCUSTOM&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43350431e85cfdd2334b3ee96389493bdc28cb6b" translate="yes" xml:space="preserve">
          <source>Return a new, unattached scalar handle. If any arguments are given, they're sent to open().</source>
          <target state="translated">返回一个新的、未连接的标量句柄。如果给定了任何参数,它们会被发送到open()。</target>
        </trans-unit>
        <trans-unit id="241e1964cd5a05e9777847785a74cc4814336a34" translate="yes" xml:space="preserve">
          <source>Return a non-zero integer if the sign bit on an NV is set, and 0 if it is not.</source>
          <target state="translated">如果一个NV上的符号位被设置,则返回一个非零的整数,如果没有设置,则返回0。</target>
        </trans-unit>
        <trans-unit id="891cdbd9e57376291645fa15156771d6e6a9b800" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV, and set *lp to its length. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">返回一个指向SV的UTF-8编码表示的指针,并将*lp设置为其长度。可能会导致SV升级为UTF-8,这是一个副作用。</target>
        </trans-unit>
        <trans-unit id="c39edf7c9fbd5211275b489cdc895017fb30f9cc" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV, and set &lt;code&gt;*lp&lt;/code&gt; to its length. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">返回指向SV的UTF-8编码表示形式的指针，并将 &lt;code&gt;*lp&lt;/code&gt; 设置为其长度。作为副作用，可能会导致SV升级到UTF-8。</target>
        </trans-unit>
        <trans-unit id="9c3adaee605a1fad16113ef88e9f64319c503dfa" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">返回一个指向SV的UTF-8编码表示的指针。可能会导致SV升级为UTF-8的副作用。</target>
        </trans-unit>
        <trans-unit id="63b7b069ee4d507ec79e42a1161a1c581d1bcaad" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV, and set *lp to its length. May cause the SV to be downgraded from UTF-8 as a side-effect.</source>
          <target state="translated">返回一个指向SV的字节编码表示的指针,并将*lp设置为其长度。副作用是可能导致SV从UTF-8降级。</target>
        </trans-unit>
        <trans-unit id="6349f1bf9209a077da42f7dc3eb356b18171f5ca" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV, and set &lt;code&gt;*lp&lt;/code&gt; to its length. If the SV is marked as being encoded as UTF-8, it will downgrade it to a byte string as a side-effect, if possible. If the SV cannot be downgraded, this croaks.</source>
          <target state="translated">返回一个指向SV的字节编码表示形式的指针，并将 &lt;code&gt;*lp&lt;/code&gt; 设置为其长度。如果SV被标记为编码为UTF-8，则在可能的情况下，它将SV降级为字节字符串。如果SV不能降级，那么这很可能是错误的。</target>
        </trans-unit>
        <trans-unit id="07d05795d61474062c0a14f8e1c7b4e50543a85a" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV. May cause the SV to be downgraded from UTF-8 as a side-effect.</source>
          <target state="translated">返回指向SV的字节编码表示的指针。副作用是可能导致SV从UTF-8降级。</target>
        </trans-unit>
        <trans-unit id="ed2c1e0979757933a6bf33adef1b53f07b2683a8" translate="yes" xml:space="preserve">
          <source>Return a real-valued arcus cosine if the input is between [-1, 1], &lt;b&gt;inclusive&lt;/b&gt; the endpoints. For inputs greater than one, zero is returned. For inputs less than minus one, pi is returned.</source>
          <target state="translated">如果输入介于[-1，1]（&lt;b&gt;包括&lt;/b&gt;端点）之间，则返回实值反正弦余弦。对于大于一的输入，将返回零。对于小于负一的输入，将返回pi。</target>
        </trans-unit>
        <trans-unit id="0a96ea8a4c2eeacd78081e85ee39ee9c99c7759b" translate="yes" xml:space="preserve">
          <source>Return a real-valued arcus sine if the input is between [-1, 1], &lt;b&gt;inclusive&lt;/b&gt; the endpoints. For inputs greater than one, pi/2 is returned. For inputs less than minus one, -pi/2 is returned.</source>
          <target state="translated">如果输入介于[-1，1]（&lt;b&gt;包括&lt;/b&gt;端点）之间，则返回实值正弦正弦值。对于大于一的输入，将返回pi / 2。对于小于一的输入，将返回-pi / 2。</target>
        </trans-unit>
        <trans-unit id="fdf6e57474a1d775479b89f8208b393f0a75e6df" translate="yes" xml:space="preserve">
          <source>Return a reference to a hash of the capabilities of the server. APOP is added as a pseudo capability. Note that I've been unable to find a list of the standard capability values, and some appear to be multi-word and some are not. We make an attempt at intelligently parsing them, but it may not be correct.</source>
          <target state="translated">返回服务器能力的哈希引用。APOP是作为一个伪能力添加的。注意,我一直找不到标准能力值的列表,有些似乎是多字,有些不是。我们做了一个智能解析的尝试,但可能不正确。</target>
        </trans-unit>
        <trans-unit id="c5fd404f895e96834df66cd6d02d6a132e5d931b" translate="yes" xml:space="preserve">
          <source>Return a reference to a new Pod::Checker object that inherits from Pod::Parser and is used for calling the required methods later. The following options are recognized:</source>
          <target state="translated">返回一个新的Pod::Checker对象的引用,该对象继承自Pod::Parser,用于以后调用所需方法。以下选项被认可。</target>
        </trans-unit>
        <trans-unit id="5991bd9bc229ee00344f31453e06f47efec4dd1d" translate="yes" xml:space="preserve">
          <source>Return a reference to a new Pod::Checker object that inherits from Pod::Simple and is used for calling the required methods later. The following options are recognized:</source>
          <target state="translated">返回一个继承自Pod::Simple的新Pod::Checker对象的引用,用于以后调用所需方法。以下选项被认可。</target>
        </trans-unit>
        <trans-unit id="b83304166d7a7ddf35c66ba43508e38c451bead6" translate="yes" xml:space="preserve">
          <source>Return a reference to the underlying scalar.</source>
          <target state="translated">返回对底层标量的引用。</target>
        </trans-unit>
        <trans-unit id="44be791192716cc11f6cf8790fe7a9aa91d55565" translate="yes" xml:space="preserve">
          <source>Return a result from the next available parser. Returns a list containing the parser from which the result came, the stash that corresponds with that parser and the result.</source>
          <target state="translated">返回下一个可用解析器的结果。返回一个列表,其中包含结果所来自的解析器、与该解析器对应的储藏库和结果。</target>
        </trans-unit>
        <trans-unit id="66a0e0e3adf015ddaa0b315c9b035e774d2c4a4b" translate="yes" xml:space="preserve">
          <source>Return a set of basic information about a hash.</source>
          <target state="translated">返回一组关于哈希的基本信息。</target>
        </trans-unit>
        <trans-unit id="b0ef823680735fd50aee393df3d6a0a47495877c" translate="yes" xml:space="preserve">
          <source>Return a short description of the provided OP.</source>
          <target state="translated">返回提供的OP的简短描述。</target>
        </trans-unit>
        <trans-unit id="afe505b614a002a8797b055ea858ee27a1314b27" translate="yes" xml:space="preserve">
          <source>Return a string representing the object. The returned string should have no leading zeros, i.e., it should match &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; .</source>
          <target state="translated">返回表示对象的字符串。返回的字符串不应有前导零，即应匹配 &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad02dc2af39b43751576df209b0fc28331051482" translate="yes" xml:space="preserve">
          <source>Return a string representing this object.</source>
          <target state="translated">返回代表此对象的字符串。</target>
        </trans-unit>
        <trans-unit id="40d93510e48540756be01ae3bf688bac63f2f0ba" translate="yes" xml:space="preserve">
          <source>Return a true copy of the object.</source>
          <target state="translated">返回对象的真实副本。</target>
        </trans-unit>
        <trans-unit id="8dce44eeede98380084e686046d4f4c26cb13be4" translate="yes" xml:space="preserve">
          <source>Return a true value if OBJ is an even integer, and a false value otherwise.</source>
          <target state="translated">如果OBJ是偶数整数,则返回真值,否则返回假值。</target>
        </trans-unit>
        <trans-unit id="6a89d549d64c9589ce257226bcc136decec05091" translate="yes" xml:space="preserve">
          <source>Return a true value if the object is OK, and a false value otherwise. This is a check routine to test the internal state of the object for corruption.</source>
          <target state="translated">如果对象正常,则返回一个真值,否则返回一个假值。这是一个检查例程,用于测试对象的内部状态是否损坏。</target>
        </trans-unit>
        <trans-unit id="564da104aa49e7e61cb1b34a414d287d04cd3065" translate="yes" xml:space="preserve">
          <source>Return all the context acquire callback references.</source>
          <target state="translated">返回所有的上下文获取回调引用。</target>
        </trans-unit>
        <trans-unit id="4b56ea11fa7e09fd08e43c32263ce9d2f9c32994" translate="yes" xml:space="preserve">
          <source>Return an SV with the numeric value of the source SV, doing any necessary reference or overload conversion. The caller is expected to have handled get-magic already.</source>
          <target state="translated">返回一个带有源SV的数值的SV,并进行必要的引用或重载转换。希望调用者已经处理过get-magic。</target>
        </trans-unit>
        <trans-unit id="c6ea6ef7047a1702f443e01459bc3f879a9ce1bd" translate="yes" xml:space="preserve">
          <source>Return an absolute file specification from a relative one.</source>
          <target state="translated">从相对文件返回绝对文件规格。</target>
        </trans-unit>
        <trans-unit id="532b030b09f7dcee47e9ae2bed7fbfa482c1cbfb" translate="yes" xml:space="preserve">
          <source>Return an arbitrary selection of the information. If no &lt;code&gt;$conf&lt;/code&gt; is given, &lt;code&gt;myconfig ()&lt;/code&gt; is used instead.</source>
          <target state="translated">返回信息的任意选择。如果未给出 &lt;code&gt;$conf&lt;/code&gt; ，则使用 &lt;code&gt;myconfig ()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9949eba6aeab405ed78bd6939d900df50ed3361c" translate="yes" xml:space="preserve">
          <source>Return an array of all registered handles.</source>
          <target state="translated">返回所有注册句柄的数组。</target>
        </trans-unit>
        <trans-unit id="a383a6b51939f61c9e8f50dda6e9f216d54b7b25" translate="yes" xml:space="preserve">
          <source>Return an array of handles that are ready for reading. &lt;code&gt;TIMEOUT&lt;/code&gt; is the maximum amount of time to wait before returning an empty list (with &lt;code&gt;$!&lt;/code&gt; unchanged), in seconds, possibly fractional. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not given and any handles are registered then the call will block indefinitely. Upon error, an empty list is returned, with &lt;code&gt;$!&lt;/code&gt; set to indicate the error. To distinguish between timeout and error, set &lt;code&gt;$!&lt;/code&gt; to zero before calling this method, and check it after an empty list is returned.</source>
          <target state="translated">返回准备读取的句柄数组。 &lt;code&gt;TIMEOUT&lt;/code&gt; 是返回空列表（ &lt;code&gt;$!&lt;/code&gt; 不变）之前等待的最长时间，以秒为单位，可能是小数。如果未给出 &lt;code&gt;TIMEOUT&lt;/code&gt; 且未注册任何句柄，则该调用将无限期阻塞。出现错误时，将返回一个空列表，并带有 &lt;code&gt;$!&lt;/code&gt; 设置以指示错误。要区分超时和错误，请设置 &lt;code&gt;$!&lt;/code&gt; 为零，然后再调用此方法，并在返回空列表后进行检查。</target>
        </trans-unit>
        <trans-unit id="c1e82163b9eb16d68b95807d1026a6e53a268ba0" translate="yes" xml:space="preserve">
          <source>Return an array of handles that are ready for reading. &lt;code&gt;TIMEOUT&lt;/code&gt; is the maximum amount of time to wait before returning an empty list, in seconds, possibly fractional. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not given and any handles are registered then the call will block.</source>
          <target state="translated">返回准备读取的句柄数组。 &lt;code&gt;TIMEOUT&lt;/code&gt; 是返回空列表之前等待的最长时间，以秒为单位，可能是小数。如果未给出 &lt;code&gt;TIMEOUT&lt;/code&gt; 并且注册了任何句柄，则调用将阻塞。</target>
        </trans-unit>
        <trans-unit id="b56f2614a481fefe74274d254bd95335c5759694" translate="yes" xml:space="preserve">
          <source>Return an empty list from an XSUB immediately.</source>
          <target state="translated">立即从XSUB返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="158ae144c3e0a50b0764b0f6030b134afc94223e" translate="yes" xml:space="preserve">
          <source>Return an entry from the BHK structure.</source>
          <target state="translated">从BHK结构中返回一个条目。</target>
        </trans-unit>
        <trans-unit id="1aa01a9db2ea3f60f7f57284d6e35933e26f44aa" translate="yes" xml:space="preserve">
          <source>Return an entry from the BHK structure. &lt;code&gt;which&lt;/code&gt; is a preprocessor token indicating which entry to return. If the appropriate flag is not set this will return &lt;code&gt;NULL&lt;/code&gt;. The type of the return value depends on which entry you ask for.</source>
          <target state="translated">从BHK结构返回一个条目。 &lt;code&gt;which&lt;/code&gt; 是一个预处理器令牌，指示要返回的条目。如果未设置适当的标志，则将返回 &lt;code&gt;NULL&lt;/code&gt; 。返回值的类型取决于您要求的条目。</target>
        </trans-unit>
        <trans-unit id="8f6b2b84ace3e3e1bd4262e9a939baea254bec61" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mIV&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB返回一个整数。使用 &lt;code&gt;XST_mIV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f7a6469e188d1a3ef300a33ffc2ddde5644535e" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mIV&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回一个整数。使用 &lt;code&gt;XST_mIV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c26d41edbd3ecefa03ca709a9475c24b1fb205ad" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mUV&lt;/code&gt; .</source>
          <target state="translated">立即从XSUB返回一个整数。使用 &lt;code&gt;XST_mUV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a05e7096da0a28d2907eb5730206719d05e315f" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mUV&lt;/code&gt;.</source>
          <target state="translated">立即从XSUB返回一个整数。使用 &lt;code&gt;XST_mUV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29da77810c46bf5bf9d644169ef5a8f2a609a982" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a binary number. The input has a '0b' prefix and matches the regular expression &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; .</source>
          <target state="translated">返回一个给定字符串的对象，该字符串表示二进制数。输入的前缀为'0b'，并匹配正则表达式 &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86ab5502ecbd639c23feb33d4d440717ea45eb9a" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a binary number. The input has a '0b' prefix and matches the regular expression &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt;.</source>
          <target state="translated">返回一个给定对象的对象，该对象代表一个表示二进制数的字符串。输入的前缀为'0b'，并匹配正则表达式 &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb1a519206f28688ca4edd290761e39b7d94833d" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a hexadecimal number. The input has a '0x' prefix and matches the regular expression &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; .</source>
          <target state="translated">返回给定对象的字符串，该字符串表示十六进制数字。输入的前缀为&amp;ldquo; 0x&amp;rdquo;，并匹配正则表达式 &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cedb996bc79da31b51ea22d61f7b3425397ca9f5" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a hexadecimal number. The input has a '0x' prefix and matches the regular expression &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt;.</source>
          <target state="translated">返回一个给定对象的对象，该对象代表一个代表十六进制数字的字符串。输入的前缀为'0x'，并匹配正则表达式 &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f17a9d7a7bb03786cbbf9b8ebda2c95d3e3444c9" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing an octal number. The input has a '0' prefix and matches the regular expression &lt;code&gt;^0[1-7]*$&lt;/code&gt; .</source>
          <target state="translated">返回一个给定字符串的对象，该字符串表示一个八进制数字。输入的前缀为&amp;ldquo; 0&amp;rdquo;，并匹配正则表达式 &lt;code&gt;^0[1-7]*$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2a48d226e29be92016782ed6286225104df5f37" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing an octal number. The input has a '0' prefix and matches the regular expression &lt;code&gt;^0[1-7]*$&lt;/code&gt;.</source>
          <target state="translated">返回一个给定字符串的对象，该字符串表示一个八进制数字。输入的前缀为&amp;ldquo; 0&amp;rdquo;，并匹配正则表达式 &lt;code&gt;^0[1-7]*$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01e43911ac9c36690a2f4ab465817a65fde7ace6" translate="yes" xml:space="preserve">
          <source>Return an object representing the number 10**N where N &amp;gt;= 0 is a Perl scalar.</source>
          <target state="translated">返回表示数字10 ** N的对象，其中N&amp;gt; = 0是Perl标量。</target>
        </trans-unit>
        <trans-unit id="cc772c25af18a23490f3229752980abefde5db66" translate="yes" xml:space="preserve">
          <source>Return an object representing the number one.</source>
          <target state="translated">返回一个代表数字1的对象。</target>
        </trans-unit>
        <trans-unit id="a575fca380d4750e44b2dcf0a1f730c23eb1eaf7" translate="yes" xml:space="preserve">
          <source>Return an object representing the number ten.</source>
          <target state="translated">返回一个代表数字10的对象。</target>
        </trans-unit>
        <trans-unit id="ffb46871cf3e82de90a50f6e47e66fb291adad01" translate="yes" xml:space="preserve">
          <source>Return an object representing the number two.</source>
          <target state="translated">返回一个代表数字2的对象。</target>
        </trans-unit>
        <trans-unit id="188180beefc0cddc09d88d3d827fbf9ea081c539" translate="yes" xml:space="preserve">
          <source>Return an object representing the number zero.</source>
          <target state="translated">返回一个代表数字0的对象。</target>
        </trans-unit>
        <trans-unit id="11aecfff98a8afc40b049f542a98ed2aa2e77f95" translate="yes" xml:space="preserve">
          <source>Return an undefined value.</source>
          <target state="translated">返回一个未定义的值。</target>
        </trans-unit>
        <trans-unit id="549deb9cfd17d09d388b32e8d8879d7c6170d75b" translate="yes" xml:space="preserve">
          <source>Return array reference of the four-element list of CPU seconds, as with &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt;一样，返回四元素的CPU秒列表的数组引用。</target>
        </trans-unit>
        <trans-unit id="eb3baf23b796fecd6bbcf9eb18c730a7c6bf9904" translate="yes" xml:space="preserve">
          <source>Return array reference of the four-element list of CPU seconds, as with &lt;a href=&quot;perlfunc#times&quot;&gt;&quot;times&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">返回CPU秒的四元素列表的数组引用，如&lt;a href=&quot;perlfunc#times&quot;&gt;perlfunc中的&amp;ldquo; times&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50bda627656d52a5da7d72fbd0b32449c8c04ddc" translate="yes" xml:space="preserve">
          <source>Return as seconds the</source>
          <target state="translated">返回秒数</target>
        </trans-unit>
        <trans-unit id="8050ecfa06653b6203153732192a0001e197bc04" translate="yes" xml:space="preserve">
          <source>Return as seconds the current value of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt; . All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; , which is supposed to return results close to the results of &lt;code&gt;gettimeofday&lt;/code&gt; , or the number of seconds since 00:00:00:00 January 1, 1970 Greenwich Mean Time (GMT). Do not assume that CLOCK_REALTIME is zero, it might be one, or something else. Another potentially useful (but not available everywhere) value is &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; , which guarantees a monotonically increasing time value (unlike time() or gettimeofday(), which can be adjusted). See your system documentation for other possibly supported values.</source>
          <target state="translated">以秒为单位返回 &lt;code&gt;$which&lt;/code&gt; 指定的POSIX高分辨率计时器的当前值。所有支持POSIX高分辨率计时器的实现 &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 至少支持 &lt;code&gt;$which&lt;/code&gt; CLOCK_REALTIME的值，该值应返回接近于 &lt;code&gt;gettimeofday&lt;/code&gt; 的结果，或者返回自1月1日00：00：00：00以来的秒数。 1970格林威治标准时间（GMT）。不要假设CLOCK_REALTIME为零，也可能是1或其他。另一个可能有用（但并非在所有地方都可用）的值是 &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; ，以确保时间值单调增加（与time（）或gettimeofday（）不同，后者可以调整）。有关其他可能支持的值，请参阅系统文档。</target>
        </trans-unit>
        <trans-unit id="54d8f4ca52bbdf72f903a4390c269da9dec31261" translate="yes" xml:space="preserve">
          <source>Return as seconds the current value of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt;. All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt;, which is supposed to return results close to the results of &lt;code&gt;gettimeofday&lt;/code&gt;, or the number of seconds since 00:00:00:00 January 1, 1970 Greenwich Mean Time (GMT). Do not assume that CLOCK_REALTIME is zero, it might be one, or something else. Another potentially useful (but not available everywhere) value is &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt;, which guarantees a monotonically increasing time value (unlike time() or gettimeofday(), which can be adjusted). See your system documentation for other possibly supported values.</source>
          <target state="translated">以秒为单位返回由 &lt;code&gt;$which&lt;/code&gt; 指定的POSIX高分辨率计时器的当前值。所有支持POSIX高分辨率计时器的实现 &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 至少支持 &lt;code&gt;$which&lt;/code&gt; LOCK的CLOCK_REALTIME值，该值应返回接近于 &lt;code&gt;gettimeofday&lt;/code&gt; 的结果，或者返回自1月1日00：00：00：00以来的秒数。 1970年格林威治标准时间（GMT）。不要假定CLOCK_REALTIME为零，也可能是1或其他。另一个可能有用（但并非在所有地方都可用）的值是 &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; ，以确保时间值单调增加（与time（）或gettimeofday（）不同，后者可以调整）。有关其他可能支持的值，请参阅系统文档。</target>
        </trans-unit>
        <trans-unit id="93c21fc7af48808f69e496945f4fd4e94e21bce3" translate="yes" xml:space="preserve">
          <source>Return as seconds the resolution of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt; . All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; , see &lt;a href=&quot;#clock_gettime&quot;&gt;clock_gettime&lt;/a&gt;.</source>
          <target state="translated">以秒为单位返回 &lt;code&gt;$which&lt;/code&gt; 指定的POSIX高分辨率计时器的分辨率。所有支持POSIX高分辨率计时器的实现都应该至少支持 &lt;code&gt;$which&lt;/code&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 的值，请参见&lt;a href=&quot;#clock_gettime&quot;&gt;clock_gettime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="329c63485fb2a29681157d2d26f24a147550ae3b" translate="yes" xml:space="preserve">
          <source>Return as seconds the resolution of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt;. All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt;, see &lt;a href=&quot;#clock_gettime&quot;&gt;&quot;clock_gettime&quot;&lt;/a&gt;.</source>
          <target state="translated">以秒为单位返回 &lt;code&gt;$which&lt;/code&gt; 指定的POSIX高分辨率计时器的分辨率。所有支持POSIX高分辨率计时器的实现都应该至少支持 &lt;code&gt;$which&lt;/code&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 的值，请参见&lt;a href=&quot;#clock_gettime&quot;&gt;&amp;ldquo; clock_gettime&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e78a36f42fa7d49ff1c33db2428ad62e574418ef" translate="yes" xml:space="preserve">
          <source>Return bitwise and. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">返回位数和。如果需要,最小的数字用前导零填充。</target>
        </trans-unit>
        <trans-unit id="cb6e9a575d0b87f630e4d14061b502a84e725686" translate="yes" xml:space="preserve">
          <source>Return bitwise exclusive or. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">返回位上排他的或。如果需要,最小的数字用前导零填充。</target>
        </trans-unit>
        <trans-unit id="9385ddc48eab9b9c50d7efb48023e971e690c6ce" translate="yes" xml:space="preserve">
          <source>Return bitwise or. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">返回位或。如果需要,最小的数字用前导零填充。</target>
        </trans-unit>
        <trans-unit id="38b18a0a6537a1cc8c8b6fbdbdcf12df94a2b726" translate="yes" xml:space="preserve">
          <source>Return count of readable bytes in the buffer. Zero or negative return means no more bytes available.</source>
          <target state="translated">返回缓冲区中的可读字节数。零或负值表示没有可用的字节。</target>
        </trans-unit>
        <trans-unit id="cd4463fd2ee470a2b5cf9a4c7280fd1a57085d7b" translate="yes" xml:space="preserve">
          <source>Return encoding of the document, even if the encoding is not correctly handled.</source>
          <target state="translated">返回文档的编码,即使编码没有被正确处理。</target>
        </trans-unit>
        <trans-unit id="595fc3f7abd6ea0a21e0731028ef13f68f86a25f" translate="yes" xml:space="preserve">
          <source>Return end-of-file indicator. &lt;code&gt;PerlIOBase_eof()&lt;/code&gt; is normally sufficient.</source>
          <target state="translated">返回文件结束指示符。 &lt;code&gt;PerlIOBase_eof()&lt;/code&gt; 通常就足够了。</target>
        </trans-unit>
        <trans-unit id="989d4eb1544f5cecb97e15d2c7344839e09b6a8c" translate="yes" xml:space="preserve">
          <source>Return error indicator. &lt;code&gt;PerlIOBase_error()&lt;/code&gt; is normally sufficient.</source>
          <target state="translated">返回错误指示器。 &lt;code&gt;PerlIOBase_error()&lt;/code&gt; 通常就足够了。</target>
        </trans-unit>
        <trans-unit id="5fa68d98b35d49654c48b4d7a8996ea73d2e3793" translate="yes" xml:space="preserve">
          <source>Return factorial of object (1*2*3*4*...).</source>
          <target state="translated">返回对象的阶乘(1*2*3*4*...)。</target>
        </trans-unit>
        <trans-unit id="f6e2cbf875d6114c68a0b4ee75daf0f4c94ed406" translate="yes" xml:space="preserve">
          <source>Return from XSUB, indicating number of items on the stack. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">从XSUB返回，指示堆栈中的项目数。通常由 &lt;code&gt;xsubpp&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="5e7900ea53a453354adf9b0322a03bdaa9338b44" translate="yes" xml:space="preserve">
          <source>Return from XSUB, indicating number of items on the stack. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt;.</source>
          <target state="translated">从XSUB返回，指示堆栈中的项目数。通常由 &lt;code&gt;xsubpp&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="ad2850550de8af43dfe162fa88bbc2b95920fcb5" translate="yes" xml:space="preserve">
          <source>Return integer log of OBJ to base BASE. This method has two output arguments, the OBJECT and a STATUS. The STATUS is Perl scalar; it is 1 if OBJ is the exact result, 0 if the result was truncted to give OBJ, and undef if it is unknown whether OBJ is the exact result.</source>
          <target state="translated">将OBJ的整数日志返回到base base。本方法有两个输出参数,即 OBJECT 和 STATUS。STATUS是Perl的标量;如果OBJ是精确的结果,则为1;如果结果被截断为OBJ,则为0;如果不知道OBJ是否是精确的结果,则为undef。</target>
        </trans-unit>
        <trans-unit id="401944e8dca9d9309515015e83a9c3e7f09964dc" translate="yes" xml:space="preserve">
          <source>Return modular exponentiation, (OBJ1 ** OBJ2) % OBJ3.</source>
          <target state="translated">返回模块指数,(OBJ1 **OBJ2)% OBJ3。</target>
        </trans-unit>
        <trans-unit id="1b9909dafd1e851072a366e9a8cf14e8e203c382" translate="yes" xml:space="preserve">
          <source>Return modular multiplicative inverse, i.e., return OBJ3 so that</source>
          <target state="translated">返回模块化乘法反,即返回OBJ3,使</target>
        </trans-unit>
        <trans-unit id="0dea4b36ca573d9394db3d77e929d7e71b77ae61" translate="yes" xml:space="preserve">
          <source>Return name and handle of a temporary file safely</source>
          <target state="translated">安全返回临时文件的名称和句柄</target>
        </trans-unit>
        <trans-unit id="bd83c943899faf6221cdf045d4f14b83d1a38b0f" translate="yes" xml:space="preserve">
          <source>Return pointer to next readable byte in buffer, accessing via the pointer (dereferencing) is only safe if PerlIO_get_cnt() has returned a positive value. Only positive offsets up to value returned by PerlIO_get_cnt() are allowed.</source>
          <target state="translated">返回指向缓冲区中下一个可读字节的指针,只有当PerlIO_get_cnt()返回一个正值时,通过该指针进行访问(dereferencing)才是安全的。只有在PerlIO_get_cnt()返回的值以内才允许正偏移。</target>
        </trans-unit>
        <trans-unit id="e9400c2a972aac8273d7b5993703cef3de364c28" translate="yes" xml:space="preserve">
          <source>Return position in the file.</source>
          <target state="translated">返回文件中的位置。</target>
        </trans-unit>
        <trans-unit id="2ee013a6d785765733c1c186770c521fa7ad326e" translate="yes" xml:space="preserve">
          <source>Return source code for the body of a subroutine (a block, optionally preceded by a prototype in parens), given a reference to the sub. Because a subroutine can have no names, or more than one name, this method doesn't return a complete subroutine definition -- if you want to eval the result, you should prepend &quot;sub subname &quot;, or &quot;sub &quot; for an anonymous function constructor. Unless the sub was defined in the main:: package, the code will include a package declaration.</source>
          <target state="translated">给定一个子程序的引用,返回子程序主体的源代码(一个块,前面可以选择parens中的原型)。因为一个子程序可以没有名字,也可以有多个名字,所以这个方法不会返回一个完整的子程序定义--如果你想评估结果,你应该在前面加上 &quot;sub子名&quot;,或者 &quot;sub &quot;来表示一个匿名函数构造函数。除非sub是在main::包中定义的,否则代码将包含一个包声明。</target>
        </trans-unit>
        <trans-unit id="20da61fd12905e90a6c28f5d9d067763e08eb16e" translate="yes" xml:space="preserve">
          <source>Return the</source>
          <target state="translated">返回</target>
        </trans-unit>
        <trans-unit id="b13ef84886aa367ccced45d35b02a74b0ce63d0f" translate="yes" xml:space="preserve">
          <source>Return the 'command' being used for opening a file for reading using an external</source>
          <target state="translated">返回用于打开文件的 &quot;命令&quot;,以便使用外部的 &quot;命令 &quot;进行读取。</target>
        </trans-unit>
        <trans-unit id="7c4d88fb935d3655575a6cebe057c4b6b6e8de61" translate="yes" xml:space="preserve">
          <source>Return the 'command' being used for opening a file for writing using an external</source>
          <target state="translated">返回用于打开文件的 &quot;命令&quot;,以便使用外部的 &quot;命令 &quot;来写。</target>
        </trans-unit>
        <trans-unit id="4b25acaa88f87529f093504b66f0466d2bb94e73" translate="yes" xml:space="preserve">
          <source>Return the (faked) CV corresponding to the main part of the Perl program.</source>
          <target state="translated">返回Perl程序主体部分对应的(伪造的)CV。</target>
        </trans-unit>
        <trans-unit id="0fde1b84d2cd929e5f496f865362e84cf14b7c26" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;&lt;a href=&quot;../../functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; status for this iterator.</source>
          <target state="translated">返回此迭代器的 &lt;code&gt;&lt;a href=&quot;../../functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="8e6f2a254417828fe1c66669b6e2e1f924bfacb1" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;&lt;a href=&quot;../../functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; status for this iterator.</source>
          <target state="translated">返回此迭代器的 &lt;code&gt;&lt;a href=&quot;../../functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="b38298487fe5644011b9b6c50c2daeb2064a27c2" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;exit&lt;/code&gt; status for this iterator.</source>
          <target state="translated">返回此迭代器的 &lt;code&gt;exit&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="e161a28351448fa6bd7146f6281241b7e3d8b253" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;wait&lt;/code&gt; status for this iterator.</source>
          <target state="translated">返回此迭代器的 &lt;code&gt;wait&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="62f12e24aeabb29661a5f55adb61e41e418c1cbb" translate="yes" xml:space="preserve">
          <source>Return the AV from the GV.</source>
          <target state="translated">从GV中返回AV。</target>
        </trans-unit>
        <trans-unit id="22e67ba21f72e62248790c4cbcdcfff08f463285" translate="yes" xml:space="preserve">
          <source>Return the BHK's flags.</source>
          <target state="translated">返回BHK的旗帜。</target>
        </trans-unit>
        <trans-unit id="d86808e34dfc460432ef7a0048092ddc2c2f3d18" translate="yes" xml:space="preserve">
          <source>Return the CV from the GV.</source>
          <target state="translated">从GV中返回CV。</target>
        </trans-unit>
        <trans-unit id="db501e6a91d32269fe522aabe42b37024f7d29ba" translate="yes" xml:space="preserve">
          <source>Return the HV from the GV.</source>
          <target state="translated">从GV中返回HV。</target>
        </trans-unit>
        <trans-unit id="0cf9eb079f27b5e41549a87d1fe2e4be511e1548" translate="yes" xml:space="preserve">
          <source>Return the MD5 of the info returned by &lt;code&gt;summary ()&lt;/code&gt; without the &lt;code&gt;config_args&lt;/code&gt; entry.</source>
          <target state="translated">返回由 &lt;code&gt;summary ()&lt;/code&gt; 返回的信息的MD5，而不包含 &lt;code&gt;config_args&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="b09fd6b73251c98f0c6383f15ac2a7a38492e083" translate="yes" xml:space="preserve">
          <source>Return the N'ths digit from X when X is an integer value.</source>
          <target state="translated">当X是一个整数时,返回X的第N个数字。</target>
        </trans-unit>
        <trans-unit id="ae4e7fc79bf87d528da99d7549eb69b6a49628fc" translate="yes" xml:space="preserve">
          <source>Return the Nth digit as a Perl scalar. N is a Perl scalar, where zero refers to the rightmost (least significant) digit, and negative values count from the left (most significant digit). If $obj represents the number 123, then</source>
          <target state="translated">以Perl标量形式返回第N位数字。N是一个Perl标量,其中0表示最右边(最不重要)的数字,负值从左边(最重要的数字)开始计算。如果$obj代表数字123,那么</target>
        </trans-unit>
        <trans-unit id="95294de0a9d18d8d78c72fe0c4f06b8b579c020d" translate="yes" xml:space="preserve">
          <source>Return the PP function name (e.g. &quot;pp_add&quot;) of op number OPNUM.</source>
          <target state="translated">返回操作号OPNUM的PP函数名(如 &quot;pp_add&quot;)。</target>
        </trans-unit>
        <trans-unit id="02a39fd6c03ec1a2a83e8aab91a60f356bb07415" translate="yes" xml:space="preserve">
          <source>Return the SV from the GV.</source>
          <target state="translated">从GV中返回SV。</target>
        </trans-unit>
        <trans-unit id="727e15a3c8b6127eecea72f3f105819ff2ffa4e4" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; displaced by &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">返回UTF-8指针 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 通过位移 &lt;code&gt;off&lt;/code&gt; 字符，向前或向后。</target>
        </trans-unit>
        <trans-unit id="bc927562549ad902b9878983f628b677fae2ddd6" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">返回UTF-8指针 &lt;code&gt;s&lt;/code&gt; 通过位移 &lt;code&gt;off&lt;/code&gt; 字符，向前或向后。</target>
        </trans-unit>
        <trans-unit id="2cf2f707fbeb10cada8c0889721414c2f0bbdc68" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by up to &lt;code&gt;off&lt;/code&gt; characters, backward.</source>
          <target state="translated">返回UTF-8指针 &lt;code&gt;s&lt;/code&gt; 最多移动到 &lt;code&gt;off&lt;/code&gt; 字符，向后。</target>
        </trans-unit>
        <trans-unit id="121cab1d0e8d30d71b19d2e1f6fef9036c32516f" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by up to &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">返回UTF-8指针 &lt;code&gt;s&lt;/code&gt; ,该指针最多向前或向后偏移 &lt;code&gt;off&lt;/code&gt; 个字符。</target>
        </trans-unit>
        <trans-unit id="05b0c9a49da8197e8aec2c6ffacfe024b758d90d" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;s&lt;/code&gt; displaced by up to &lt;code&gt;off&lt;/code&gt; characters, forward.</source>
          <target state="translated">返回向前偏移最多为 &lt;code&gt;off&lt;/code&gt; 个字符的UTF-8指针 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26fd5060808698f7127e38b680523887e85e72ef" translate="yes" xml:space="preserve">
          <source>Return the XOP structure for a given custom op. This macro should be considered internal to &lt;code&gt;OP_NAME&lt;/code&gt; and the other access macros: use them instead. This macro does call a function. Prior to 5.19.6, this was implemented as a function.</source>
          <target state="translated">返回给定自定义操作的XOP结构。应该将此宏视为 &lt;code&gt;OP_NAME&lt;/code&gt; 和其他访问宏的内部宏：请改用它们。该宏确实调用了一个函数。在5.19.6之前，此功能已实现。</target>
        </trans-unit>
        <trans-unit id="8d968f68b024aece647e8680c726bc7db9edd52c" translate="yes" xml:space="preserve">
          <source>Return the XOP structure for a given custom op. This macro should be considered internal to OP_NAME and the other access macros: use them instead. This macro does call a function. Prior to 5.19.6, this was implemented as a function.</source>
          <target state="translated">这个宏应该被认为是OP_NAME和其他访问宏的内部结构:使用它们来代替。这个宏确实调用了一个函数。在5.19.6之前,这是作为一个函数实现的。</target>
        </trans-unit>
        <trans-unit id="634135ecd1da66792d8f094c18bc9346662586a8" translate="yes" xml:space="preserve">
          <source>Return the XOP's flags.</source>
          <target state="translated">返回XOP的标志。</target>
        </trans-unit>
        <trans-unit id="30487e1855ef653ab46905c98d480b77228f2aab" translate="yes" xml:space="preserve">
          <source>Return the account information for the netrc entry</source>
          <target state="translated">返回netrc条目的账户信息</target>
        </trans-unit>
        <trans-unit id="8b881b828bff901023c8e000918699ba5dbd0191" translate="yes" xml:space="preserve">
          <source>Return the address of the symbol $symbol or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if not found. If the target system has separate functions to search for symbols of different types then dl_find_symbol() should search for function symbols first and then other types.</source>
          <target state="translated">返回符号$ symbol的地址；如果找不到，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。如果目标系统具有单独的功能来搜索不同类型的符号，则dl_find_symbol（）应该首先搜索功能符号，然后再搜索其他类型。</target>
        </trans-unit>
        <trans-unit id="a6b2d4901e8fb560a62afa0a5597f88aca6814a8" translate="yes" xml:space="preserve">
          <source>Return the address of the symbol $symbol or &lt;code&gt;undef&lt;/code&gt; if not found. If the target system has separate functions to search for symbols of different types then dl_find_symbol() should search for function symbols first and then other types.</source>
          <target state="translated">返回符号$ symbol的地址；如果找不到，则返回 &lt;code&gt;undef&lt;/code&gt; 。如果目标系统具有单独的功能来搜索不同类型的符号，则dl_find_symbol（）应该首先搜索功能符号，然后再搜索其他类型。</target>
        </trans-unit>
        <trans-unit id="188e4da3acea0de525e548ebfc63a6dd15038a3f" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket</source>
          <target state="translated">返回套接字的sockaddr结构的地址部分。</target>
        </trans-unit>
        <trans-unit id="292e0b9e2c15c4128537706efd8468986e9f767c" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket in a text form xx.xx.xx.xx</source>
          <target state="translated">以文本形式返回套接字的sockaddr结构的地址部分xx.xx.xx.xx。</target>
        </trans-unit>
        <trans-unit id="417769e36400c4340bd0f0b1764bbffbfb180d51" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket on the peer host</source>
          <target state="translated">返回对等主机上套接字的sockaddr结构的地址部分。</target>
        </trans-unit>
        <trans-unit id="58670ef25d3d2e51912a0db902386a1f7c4b2ddb" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket on the peer host in a text form xx.xx.xx.xx</source>
          <target state="translated">以文本形式xx.xx.xx.xx返回对等主机上sockaddr结构的地址部分。</target>
        </trans-unit>
        <trans-unit id="29fcd26ac341953e060fac88133195a4a6ccd493" translate="yes" xml:space="preserve">
          <source>Return the approximate number of decimal digits of the object. The output is a Perl scalar.</source>
          <target state="translated">返回对象的小数点位数的近似数。输出是一个Perl标量。</target>
        </trans-unit>
        <trans-unit id="ce16968fe75861ae9734d1aaba4d7f185dc04169" translate="yes" xml:space="preserve">
          <source>Return the approximate number of decimal digits of the object. The output is one Perl scalar. This estimate must be greater than or equal to what &lt;code&gt;_len()&lt;/code&gt; returns.</source>
          <target state="translated">返回对象的近似十进制数字。输出是一个Perl标量。此估计值必须大于或等于 &lt;code&gt;_len()&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="837eb954405e12531332f24b523ef7f8a237f99e" translate="yes" xml:space="preserve">
          <source>Return the binary digest for the message.</source>
          <target state="translated">返回消息的二进制摘要。</target>
        </trans-unit>
        <trans-unit id="76859202fcb0e9ac7e5ba6622f8f634407cadd3a" translate="yes" xml:space="preserve">
          <source>Return the binary digest for the message. The returned string will be 16 bytes long.</source>
          <target state="translated">返回消息的二进制摘要。返回的字符串长度为16字节。</target>
        </trans-unit>
        <trans-unit id="4e3446d9a703719a4a80fdf1e47f4551c84d9a32" translate="yes" xml:space="preserve">
          <source>Return the binary string representation of the number. The string must have a '0b' prefix.</source>
          <target state="translated">返回数字的二进制字符串表示。字符串必须有'0b'前缀。</target>
        </trans-unit>
        <trans-unit id="9398b13cea50287ad888ffe06e99baabafe083b5" translate="yes" xml:space="preserve">
          <source>Return the binomial coefficient OBJ1 over OBJ1.</source>
          <target state="translated">返回OBJ1上的二项式系数OBJ1。</target>
        </trans-unit>
        <trans-unit id="9039484dd443692be46208d331c0b51159f8498e" translate="yes" xml:space="preserve">
          <source>Return the bit string suitable as argument to the core select() call.</source>
          <target state="translated">返回适合作为核心select()调用参数的位串。</target>
        </trans-unit>
        <trans-unit id="dcae368de925e7c76b147b1b529368eaa0da7b2f" translate="yes" xml:space="preserve">
          <source>Return the class of the provided OP: that is, which of the *OP structures it uses. For core ops this currently gets the information out of &lt;code&gt;PL_opargs&lt;/code&gt;, which does not always accurately reflect the type used; in v5.26 onwards, see also the function &lt;code&gt;&lt;a href=&quot;#op_class&quot;&gt;&quot;op_class&quot;&lt;/a&gt;&lt;/code&gt; which can do a better job of determining the used type.</source>
          <target state="translated">返回提供的OP的类：即，它使用哪种* OP结构。对于核心操作，当前从 &lt;code&gt;PL_opargs&lt;/code&gt; 中获取信息，该信息并不总是准确地反映所使用的类型。在v5.26及更高版本中，另请参见函数 &lt;code&gt;&lt;a href=&quot;#op_class&quot;&gt;&quot;op_class&quot;&lt;/a&gt;&lt;/code&gt; ，该函数可以更好地确定所使用的类型。</target>
        </trans-unit>
        <trans-unit id="a5f95075e02c5a8968b5fc02a316855e3f107893" translate="yes" xml:space="preserve">
          <source>Return the class of the provided OP: that is, which of the *OP structures it uses. For core ops this currently gets the information out of PL_opargs, which does not always accurately reflect the type used. For custom ops the type is returned from the registration, and it is up to the registree to ensure it is accurate. The value returned will be one of the OA_* constants from op.h.</source>
          <target state="translated">返回所提供的OP的类:即它使用的是*OP结构中的哪一个。对于核心操作来说,目前这是从PL_opargs中获取信息,而PL_opargs并不总是准确地反映出所使用的类型。对于自定义操作来说,类型是从注册中返回的,而确保它的准确性则由注册器决定。返回的值将是op.h中的OA_*常量之一。</target>
        </trans-unit>
        <trans-unit id="cdd22a89d0c0732056821d3e2652ff7471889395" translate="yes" xml:space="preserve">
          <source>Return the class that numbers are upgraded to, is in fact returning &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; .</source>
          <target state="translated">返回数字升级到的类，实际上返回 &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a3fbf46dfe4104c23aa91385ad0d8bdaa7233e3" translate="yes" xml:space="preserve">
          <source>Return the class that numbers are upgraded to, is in fact returning &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt;.</source>
          <target state="translated">返回数字升级到的类，实际上返回 &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f8cf3decb17230525b612d2ce53fb4008a0ff26" translate="yes" xml:space="preserve">
          <source>Return the content of the named file.</source>
          <target state="translated">返回命名文件的内容。</target>
        </trans-unit>
        <trans-unit id="5b13f6bcba216c050cb0e9d3fde283febb88a01d" translate="yes" xml:space="preserve">
          <source>Return the current position in the stream, as a numeric offset.</source>
          <target state="translated">返回流中的当前位置,作为数字偏移量。</target>
        </trans-unit>
        <trans-unit id="df96bc69b3ecead78ca02d2e506c37ff6e94c5b4" translate="yes" xml:space="preserve">
          <source>Return the current position in the stream, as a numeric offset. Not yet supported.</source>
          <target state="translated">返回当前在流中的位置,作为一个数字偏移量。还不支持。</target>
        </trans-unit>
        <trans-unit id="358784a38f2ec61d110b98168a8cc2734a694fe9" translate="yes" xml:space="preserve">
          <source>Return the current position in the string, as an opaque object.</source>
          <target state="translated">返回字符串中的当前位置,作为一个不透明的对象。</target>
        </trans-unit>
        <trans-unit id="e690559d4145f70cc5d3e5e11e25676e89322515" translate="yes" xml:space="preserve">
          <source>Return the current position in the string, as an opaque object. Not yet supported.</source>
          <target state="translated">返回字符串中的当前位置,作为一个不透明的对象。还不支持。</target>
        </trans-unit>
        <trans-unit id="fd7dca073919e493549e6e64d4f75ec4eba58456" translate="yes" xml:space="preserve">
          <source>Return the current read pointer relative to this layer's buffer.</source>
          <target state="translated">返回当前相对于本层缓冲区的读取指针。</target>
        </trans-unit>
        <trans-unit id="6785250f6235af7b741f8a0b71cd239d72b24f42" translate="yes" xml:space="preserve">
          <source>Return the current time using Time::HiRes if available.</source>
          <target state="translated">如果有的话,使用Time::HiRes返回当前时间。</target>
        </trans-unit>
        <trans-unit id="feac410def00a5756d079a14a8678c92c0fe254a" translate="yes" xml:space="preserve">
          <source>Return the description of a given custom op. This was once used by the &lt;code&gt;OP_DESC&lt;/code&gt; macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">返回给定自定义操作的描述。 &lt;code&gt;OP_DESC&lt;/code&gt; 宏曾经使用过此方法，但现在不再使用：仅为了兼容性而保留它，不应使用。</target>
        </trans-unit>
        <trans-unit id="dcf7b904f166347e463e02724517b44d0a199a33" translate="yes" xml:space="preserve">
          <source>Return the description of a given custom op. This was once used by the OP_DESC macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">返回一个给定的自定义操作的描述,这曾经被OP_DESC宏使用过,但现在已经不再使用了:它只是为了兼容而保留,不应该被使用。</target>
        </trans-unit>
        <trans-unit id="c624b8d833a8785007a3024ede7440f3302ebcf8" translate="yes" xml:space="preserve">
          <source>Return the encoding corresponding to &lt;code&gt;=encoding&lt;/code&gt; , but only if the encoding was recognized and handled.</source>
          <target state="translated">返回与 &lt;code&gt;=encoding&lt;/code&gt; encoding相对应的编码，但仅在识别并处理了编码的情况下。</target>
        </trans-unit>
        <trans-unit id="286ac9177dd3b901d0e9a65f6c59d0b628135eb4" translate="yes" xml:space="preserve">
          <source>Return the encoding corresponding to &lt;code&gt;=encoding&lt;/code&gt;, but only if the encoding was recognized and handled.</source>
          <target state="translated">返回与 &lt;code&gt;=encoding&lt;/code&gt; encoding相对应的编码，但仅在识别并处理了编码的情况下才返回。</target>
        </trans-unit>
        <trans-unit id="8a8a1fa7c8359855ac34f947f892a45599c7b805" translate="yes" xml:space="preserve">
          <source>Return the exponent of $x as BigInt.</source>
          <target state="translated">返回$x的指数为BigInt。</target>
        </trans-unit>
        <trans-unit id="1af38af4442f68a254a70479cdb8a6508b1be742" translate="yes" xml:space="preserve">
          <source>Return the exponent of $x as a Math::BigInt.</source>
          <target state="translated">以Math::BigInt的形式返回$x的指数。</target>
        </trans-unit>
        <trans-unit id="b123a2f9a5fbb5a8e843bffc94657f572853d43b" translate="yes" xml:space="preserve">
          <source>Return the file pointer. May be based on layers cached concept of position to avoid overhead.</source>
          <target state="translated">返回文件指针。可以基于层缓存的位置概念,避免开销。</target>
        </trans-unit>
        <trans-unit id="e4b8e0a203de9a2f8b0238606074a15dbdb144b6" translate="yes" xml:space="preserve">
          <source>Return the filename and filehandle as before except that the file is automatically removed when the program exits (dependent on $KEEP_ALL). Default is for the file to be removed if a file handle is requested and to be kept if the filename is requested. In a scalar context (where no filename is returned) the file is always deleted either (depending on the operating system) on exit or when it is closed (unless $KEEP_ALL is true when the temp file is created).</source>
          <target state="translated">返回文件名和文件柄,但在程序退出时,文件会被自动删除(取决于$KEEP_ALL)。默认情况下,如果要求提供文件句柄,文件将被删除,如果要求提供文件名,文件将被保留。在标量上下文中(没有返回文件名),文件总是在退出时或关闭时被删除(取决于操作系统)(除非创建临时文件时$KEEP_ALL为真)。</target>
        </trans-unit>
        <trans-unit id="c5ffe224e48ba96441026249d004d9eab1c64a92" translate="yes" xml:space="preserve">
          <source>Return the first key in the hash.</source>
          <target state="translated">返回哈希中的第一个键。</target>
        </trans-unit>
        <trans-unit id="cb3e931346eddc9e8b89e84c987ef41ee29ac911" translate="yes" xml:space="preserve">
          <source>Return the flags for the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Assumes a valid slot entry.</source>
          <target state="translated">在偏移 &lt;code&gt;po&lt;/code&gt; 处返回当前编译区名称的标志。假定一个有效的插槽条目。</target>
        </trans-unit>
        <trans-unit id="3067aa0f1eee86807ab20515528e32d250d48310" translate="yes" xml:space="preserve">
          <source>Return the flags for the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt;. Assumes a valid slot entry.</source>
          <target state="translated">在偏移 &lt;code&gt;po&lt;/code&gt; 处返回当前编译区名称的标志。假定一个有效的插槽条目。</target>
        </trans-unit>
        <trans-unit id="ca9c7b858ab6d79b29bc27e59d4583e4db63e5ff" translate="yes" xml:space="preserve">
          <source>Return the greatest common divisor of OBJ1 and OBJ2.</source>
          <target state="translated">返回OBJ1和OBJ2的最大公因子。</target>
        </trans-unit>
        <trans-unit id="26f5555affd43554d24ba89d3257ccbb070f4798" translate="yes" xml:space="preserve">
          <source>Return the hexadecimal string representation of the number. The string must have a '0x' prefix.</source>
          <target state="translated">返回数字的十六进制字符串表示。字符串必须有'0x'前缀。</target>
        </trans-unit>
        <trans-unit id="cbcee9b1cab2e8dd8d43b279a1e7563466b53b6c" translate="yes" xml:space="preserve">
          <source>Return the integer value of an SV, doing any necessary string conversion. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Normally used via the &lt;code&gt;SvIV(sv)&lt;/code&gt; and &lt;code&gt;SvIVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">返回SV的整数值，进行任何必要的字符串转换。如果 &lt;code&gt;flags&lt;/code&gt; 设置了 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位，则首先执行 &lt;code&gt;mg_get()&lt;/code&gt; 。通常通过 &lt;code&gt;SvIV(sv)&lt;/code&gt; 和 &lt;code&gt;SvIVx(sv)&lt;/code&gt; 宏使用。</target>
        </trans-unit>
        <trans-unit id="78300a10673d49aac2c7d2638118529a8fd24084" translate="yes" xml:space="preserve">
          <source>Return the integer value of an SV, doing any necessary string conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvIV(sv)&lt;/code&gt; and &lt;code&gt;SvIVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">返回SV的整数值，进行任何必要的字符串转换。如果标志包括SV_GMAGIC，则首先执行mg_get（）。通常通过 &lt;code&gt;SvIV(sv)&lt;/code&gt; 和 &lt;code&gt;SvIVx(sv)&lt;/code&gt; 宏使用。</target>
        </trans-unit>
        <trans-unit id="20ac31cc084af9a481fcfed39a383ae11d974451" translate="yes" xml:space="preserve">
          <source>Return the integral and fractional parts of a floating-point number.</source>
          <target state="translated">返回浮点数的整数和小数。</target>
        </trans-unit>
        <trans-unit id="c524f4cda2007c3b8d1ad04c8509f204d1ef649e" translate="yes" xml:space="preserve">
          <source>Return the internal debugger pointer to the line last executed, and print out that line.</source>
          <target state="translated">返回内部调试器指针到最后执行的行,并打印出该行。</target>
        </trans-unit>
        <trans-unit id="39400de946f1aa3e9ec46b7f11233b69379632e6" translate="yes" xml:space="preserve">
          <source>Return the least common multiple of OBJ1 and OBJ2.</source>
          <target state="translated">返回OBJ1和OBJ2的最小公倍数。</target>
        </trans-unit>
        <trans-unit id="2e078f55f1b0d95f9f0a40a5c03e2d9dd58e152f" translate="yes" xml:space="preserve">
          <source>Return the length of $x in digits for integer values.</source>
          <target state="translated">返回$x的长度,以整数为单位。</target>
        </trans-unit>
        <trans-unit id="f4ee3e3af109da20881554fc6a69449e5822abcf" translate="yes" xml:space="preserve">
          <source>Return the length of the UTF-8 char encoded string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; in characters. Stops at &lt;code&gt;e&lt;/code&gt; (inclusive). If &lt;code&gt;e &amp;lt; s&lt;/code&gt; or if the scan would end up past &lt;code&gt;e&lt;/code&gt; , croaks.</source>
          <target state="translated">返回以字符为单位的UTF-8 char编码字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 的长度。停在 &lt;code&gt;e&lt;/code&gt; （含）处。如果 &lt;code&gt;e &amp;lt; s&lt;/code&gt; 或扫描结束于 &lt;code&gt;e&lt;/code&gt; ，则会发出嘶哑的声音。</target>
        </trans-unit>
        <trans-unit id="55ba1cc60e9939952c43edce0b12715c2c47c113" translate="yes" xml:space="preserve">
          <source>Return the local address as a binary octet string</source>
          <target state="translated">返回一个二进制八位数的本地地址。</target>
        </trans-unit>
        <trans-unit id="a98197ef5c464a180db80d4a1b70572835f76fe4" translate="yes" xml:space="preserve">
          <source>Return the login id for the netrc entry</source>
          <target state="translated">返回netrc条目的登录ID</target>
        </trans-unit>
        <trans-unit id="7abdbea3f8d8b5305d72c400a8a2fb4c507eeec1" translate="yes" xml:space="preserve">
          <source>Return the mantissa and exponent of a floating-point number.</source>
          <target state="translated">返回浮点数的尾数和指数。</target>
        </trans-unit>
        <trans-unit id="52e7ccc84edd95ffadc7b3008a78f1aa229500a2" translate="yes" xml:space="preserve">
          <source>Return the maximum POSIX realtime signal number available, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">返回可用的最大POSIX实时信号数，如果没有可用的POSIX实时信号，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eaa82f774605490ebc39939fe2780e5c4f6a1064" translate="yes" xml:space="preserve">
          <source>Return the maximum POSIX realtime signal number available, or &lt;code&gt;undef&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">返回可用的最大POSIX实时信号数，如果没有可用的POSIX实时信号，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d206901a611b7a41b98e11262c76eb9f221e16d5" translate="yes" xml:space="preserve">
          <source>Return the minimum POSIX realtime signal number available, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">返回可用的最小POSIX实时信号号，如果没有可用的POSIX实时信号，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f63361af5a6058f537e1f634d519699fed5e945c" translate="yes" xml:space="preserve">
          <source>Return the minimum POSIX realtime signal number available, or &lt;code&gt;undef&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">返回可用的最小POSIX实时信号号，如果没有可用的POSIX实时信号，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c5e970c469d7e98dcea1dc1cf1a83c3e0d4ae12" translate="yes" xml:space="preserve">
          <source>Return the name for a given custom op. This was once used by the &lt;code&gt;OP_NAME&lt;/code&gt; macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">返回给定自定义操作的名称。 &lt;code&gt;OP_NAME&lt;/code&gt; 宏曾经使用过此方法，但现在不再使用：仅为了兼容性而保留它，不应使用。</target>
        </trans-unit>
        <trans-unit id="1636b01070f7a21a940b683cbf1b65b8f03329c2" translate="yes" xml:space="preserve">
          <source>Return the name for a given custom op. This was once used by the OP_NAME macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">返回一个给定的自定义操作的名称,这曾经被OP_NAME宏使用过,但现在已经不再使用了:它只是为了兼容性而保留,不应该被使用。</target>
        </trans-unit>
        <trans-unit id="5a9d9ac8a27b36e016655a4f66c042a7982e205f" translate="yes" xml:space="preserve">
          <source>Return the name of a temporary file in the specified directory using a prefix. The file is guaranteed not to exist at the time the function was called, but such guarantees are good for one clock tick only. Always use the proper form of &lt;code&gt;sysopen&lt;/code&gt; with &lt;code&gt;O_CREAT | O_EXCL&lt;/code&gt; if you must open such a filename.</source>
          <target state="translated">使用前缀返回指定目录中临时文件的名称。保证在调用函数时文件不存在，但是这种保证仅对一个时钟滴答有效。始终使用的适当形式 &lt;code&gt;sysopen&lt;/code&gt; 与 &lt;code&gt;O_CREAT | O_EXCL&lt;/code&gt; 如果必须打开这样的文件名，则为O_EXCL。</target>
        </trans-unit>
        <trans-unit id="5b4a9e25a270f75917473bbf152107544b56c883" translate="yes" xml:space="preserve">
          <source>Return the name of a temporary file in the specified directory using a prefix. The file is guaranteed not to exist at the time the function was called, but such guarantees are good for one clock tick only. Always use the proper form of C</source>
          <target state="translated">使用前缀返回指定目录下的临时文件名。保证该文件在函数被调用时不存在,但这种保证只适用于一个时钟刻度。始终使用C语言的正确形式</target>
        </trans-unit>
        <trans-unit id="3ba16b2b97049c4a659a40c354387eb93cbeb5af" translate="yes" xml:space="preserve">
          <source>Return the name of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Assumes a valid slot entry.</source>
          <target state="translated">返回当前编译区名称的名称，偏移量为 &lt;code&gt;po&lt;/code&gt; 。假定一个有效的插槽条目。</target>
        </trans-unit>
        <trans-unit id="289721f19b79a105de6afc1002459094dbb86597" translate="yes" xml:space="preserve">
          <source>Return the name of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt;. Assumes a valid slot entry.</source>
          <target state="translated">返回当前编译区名称的名称，偏移量为 &lt;code&gt;po&lt;/code&gt; 。假定一个有效的插槽条目。</target>
        </trans-unit>
        <trans-unit id="a033252f0cddc65cf92a783d450048bfe503245e" translate="yes" xml:space="preserve">
          <source>Return the name of the provided OP. For core ops this looks up the name from the op_type; for custom ops from the op_ppaddr.</source>
          <target state="translated">返回所提供的OP的名称,对于核心操作,会从op_type中查找名称;对于自定义操作,会从op_ppaddr中查找名称。对于核心操作,会从op_type中查找名称;对于自定义操作,会从op_ppaddr中查找。</target>
        </trans-unit>
        <trans-unit id="4bf700f08ee3f022ac28c6d6ad550913448dc57f" translate="yes" xml:space="preserve">
          <source>Return the name of the temporary directory associated with this object (if the object was created using the &quot;newdir&quot; constructor).</source>
          <target state="translated">返回与该对象相关联的临时目录的名称(如果该对象是使用 &quot;newdir &quot;构造函数创建的)。</target>
        </trans-unit>
        <trans-unit id="e43849324c1a533bb5838dd6a99118c7f4bb297c" translate="yes" xml:space="preserve">
          <source>Return the name of the temporary file associated with this object (if the object was created using the &quot;new&quot; constructor).</source>
          <target state="translated">返回与该对象相关联的临时文件的名称(如果该对象是使用 &quot;new &quot;构造函数创建的)。</target>
        </trans-unit>
        <trans-unit id="7d5481810737a34ca22e5228c3ffc851c3f7849d" translate="yes" xml:space="preserve">
          <source>Return the next available job as &lt;a href=&quot;TAP::Parser::Scheduler::Job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object or &lt;code&gt;undef&lt;/code&gt; if none are available. Returns a &lt;a href=&quot;TAP::Parser::Scheduler::Spinner&quot;&gt;TAP::Parser::Scheduler::Spinner&lt;/a&gt; if the scheduler still has pending jobs but none are available to run right now.</source>
          <target state="translated">返回下一个可用作业作为&lt;a href=&quot;TAP::Parser::Scheduler::Job&quot;&gt;TAP :: Parser :: Scheduler :: Job&lt;/a&gt;对象；如果没有可用的对象，则返回 &lt;code&gt;undef&lt;/code&gt; 。如果调度程序仍具有挂起的作业，但现在没有任何作业可运行，则返回&lt;a href=&quot;TAP::Parser::Scheduler::Spinner&quot;&gt;TAP :: Parser :: Scheduler :: Spinner&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02162d8694654f1de91669f0a540d00b7e0ea019" translate="yes" xml:space="preserve">
          <source>Return the next available job as &lt;a href=&quot;scheduler/job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object or &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if none are available. Returns a &lt;a href=&quot;scheduler/spinner&quot;&gt;TAP::Parser::Scheduler::Spinner&lt;/a&gt; if the scheduler still has pending jobs but none are available to run right now.</source>
          <target state="translated">返回下一个可用作业作为&lt;a href=&quot;scheduler/job&quot;&gt;TAP :: Parser :: Scheduler :: Job&lt;/a&gt;对象；如果没有可用的对象，则返回 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。如果调度程序仍有待处理的作业，但现在没有任何作业可运行，则返回&lt;a href=&quot;scheduler/spinner&quot;&gt;TAP :: Parser :: Scheduler :: Spinner&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b08468342f9e7382ad73acce7a48a0ae2c5d49c4" translate="yes" xml:space="preserve">
          <source>Return the next character from the file, or undef if none remain.</source>
          <target state="translated">返回文件中的下一个字符,如果没有剩余,则返回undef。</target>
        </trans-unit>
        <trans-unit id="dfadaa7525697a6600ade6dc897096f39cea986e" translate="yes" xml:space="preserve">
          <source>Return the next character, or undef if none remain.</source>
          <target state="translated">返回下一个字符,如果没有剩余,则返回undef。</target>
        </trans-unit>
        <trans-unit id="feda6626aed77511c6b3df7b02b5d54f5d9359f6" translate="yes" xml:space="preserve">
          <source>Return the next key in the hash.</source>
          <target state="translated">返回哈希中的下一个键。</target>
        </trans-unit>
        <trans-unit id="9efe519efe01a23e51434ba5d2dca6b1f2bbfa18" translate="yes" xml:space="preserve">
          <source>Return the next line from the file, or undef on end of string. Can safely be called in an array context. Currently ignores $/ ($INPUT_RECORD_SEPARATOR or $RS when &lt;a href=&quot;../english&quot;&gt;English&lt;/a&gt; is in use) and treats lines as delimited by &quot;\n&quot;.</source>
          <target state="translated">从文件返回下一行，或者在字符串末尾返回undef。可以在数组上下文中安全地调用。当前忽略$ /（使用&lt;a href=&quot;../english&quot;&gt;英语时&lt;/a&gt;为$ INPUT_RECORD_SEPARATOR或$ RS ），并将行以&amp;ldquo; \ n&amp;rdquo;分隔。</target>
        </trans-unit>
        <trans-unit id="f03f894c2ba5e0e4db02f98a9337797d3eb8ea02" translate="yes" xml:space="preserve">
          <source>Return the next line from the file, or undef on end of string. Can safely be called in an array context. Currently ignores $/ ($INPUT_RECORD_SEPARATOR or $RS when &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt; is in use) and treats lines as delimited by &quot;\n&quot;.</source>
          <target state="translated">从文件返回下一行，或者在字符串末尾返回undef。可以在数组上下文中安全地调用。当前忽略$ /（使用&lt;a href=&quot;english&quot;&gt;英语时&lt;/a&gt;为$ INPUT_RECORD_SEPARATOR或$ RS ），并将行以&amp;ldquo; \ n&amp;rdquo;分隔。</target>
        </trans-unit>
        <trans-unit id="fda8221116775cc4f1f6554deb90694030736981" translate="yes" xml:space="preserve">
          <source>Return the next line, or undef on end of string. Can safely be called in an array context. Currently, lines are delimited by &quot;\n&quot;.</source>
          <target state="translated">返回下一行,或者在字符串末尾返回undef。可以在数组上下文中安全调用。目前,字符串以&quot;\n &quot;为分界线。</target>
        </trans-unit>
        <trans-unit id="2e145c8fb25242c9cc027a20f826e642ab2b2e75" translate="yes" xml:space="preserve">
          <source>Return the next op in a depth-first traversal of the op tree, returning NULL when the traversal is complete.</source>
          <target state="translated">返回操作树深度优先遍历中的下一个操作,遍历完成后返回NULL。</target>
        </trans-unit>
        <trans-unit id="7e329a4fb8fec954dffa0699754eef5284855df1" translate="yes" xml:space="preserve">
          <source>Return the num value of an SV, doing any necessary string or integer conversion. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Normally used via the &lt;code&gt;SvNV(sv)&lt;/code&gt; and &lt;code&gt;SvNVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">返回SV的num值，进行任何必要的字符串或整数转换。如果 &lt;code&gt;flags&lt;/code&gt; 设置了 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位，则首先执行 &lt;code&gt;mg_get()&lt;/code&gt; 。通常通过 &lt;code&gt;SvNV(sv)&lt;/code&gt; 和 &lt;code&gt;SvNVx(sv)&lt;/code&gt; 宏使用。</target>
        </trans-unit>
        <trans-unit id="8c2510580b82e526e2c44344deb3c0f42c5dcd23" translate="yes" xml:space="preserve">
          <source>Return the num value of an SV, doing any necessary string or integer conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvNV(sv)&lt;/code&gt; and &lt;code&gt;SvNVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">返回SV的num值，进行任何必要的字符串或整数转换。如果标志包括SV_GMAGIC，则首先执行mg_get（）。通常通过 &lt;code&gt;SvNV(sv)&lt;/code&gt; 和 &lt;code&gt;SvNVx(sv)&lt;/code&gt; 宏使用。</target>
        </trans-unit>
        <trans-unit id="a997a1ffdb6dd3ce7910823fc3237fe33197cb4a" translate="yes" xml:space="preserve">
          <source>Return the number of bytes left to be read in the current buffer.</source>
          <target state="translated">返回当前缓冲区中剩余的待读字节数。</target>
        </trans-unit>
        <trans-unit id="cc25533fdf214ffc53e04458cec2a628e4850dd6" translate="yes" xml:space="preserve">
          <source>Return the number of bytes that last &lt;code&gt;Fill()&lt;/code&gt; put in the buffer.</source>
          <target state="translated">返回最后一个 &lt;code&gt;Fill()&lt;/code&gt; 放入缓冲区的字节数。</target>
        </trans-unit>
        <trans-unit id="3415ff5c3118088729d890b8e343a722f1c7ca32" translate="yes" xml:space="preserve">
          <source>Return the number of trailing decimal zeros. The output is a Perl scalar.</source>
          <target state="translated">返回尾部小数点的个数。输出是一个Perl标量。</target>
        </trans-unit>
        <trans-unit id="84290dcbcb02fb20862f31301933a3daa2675852" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the local address as a textual representation</source>
          <target state="translated">以文本形式返回本地地址的数字形式。</target>
        </trans-unit>
        <trans-unit id="b5c3e2a490d617a45b2e394a4d5f62ddf0c49f4d" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the local port number</source>
          <target state="translated">返回本地端口号的数字形式。</target>
        </trans-unit>
        <trans-unit id="3741c90e07dc257743922694a2988e6d6450fda5" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the peer address as a textual representation</source>
          <target state="translated">返回对等体地址的数字形式作为文本表示。</target>
        </trans-unit>
        <trans-unit id="074f1e4d4a4cf00d984929ff9f4e0d1c08dbbbc7" translate="yes" xml:space="preserve">
          <source>Return the numeric form of the peer port number</source>
          <target state="translated">返回同行端口号的数字形式。</target>
        </trans-unit>
        <trans-unit id="53d6332789548408c852117d2287bf3496bf502b" translate="yes" xml:space="preserve">
          <source>Return the octal string representation of the number. The string must have a '0x' prefix.</source>
          <target state="translated">返回数字的八进制字符串表示。字符串必须有'0x'前缀。</target>
        </trans-unit>
        <trans-unit id="0af150d92ccff6cf47986722b93faa80a783bef2" translate="yes" xml:space="preserve">
          <source>Return the parsed YAML data for this result</source>
          <target state="translated">返回这个结果的YAML数据的解析结果。</target>
        </trans-unit>
        <trans-unit id="6936f656b1022b3d515521882aee4f8e6b40cc55" translate="yes" xml:space="preserve">
          <source>Return the password for the netrc entry</source>
          <target state="translated">返回netrc条目的密码</target>
        </trans-unit>
        <trans-unit id="9bb796ccdb3793f7bfc398ee1de19600391fafef" translate="yes" xml:space="preserve">
          <source>Return the peer address as a binary octet string</source>
          <target state="translated">返回对等体的地址,作为二进制八位数字符串。</target>
        </trans-unit>
        <trans-unit id="6ee6509326cfe062105e077d56cad48771864d0d" translate="yes" xml:space="preserve">
          <source>Return the port number for the socket on the peer host.</source>
          <target state="translated">返回对等主机上套接字的端口号。</target>
        </trans-unit>
        <trans-unit id="bae0c64b302636d3436b0efcbbac0c778918a8b2" translate="yes" xml:space="preserve">
          <source>Return the port number that the socket is using on the local host</source>
          <target state="translated">返回套接字在本地主机上使用的端口号。</target>
        </trans-unit>
        <trans-unit id="d946a0a69c75f845e85b98b44929a152b598ea81" translate="yes" xml:space="preserve">
          <source>Return the positive square root of EXPR. If EXPR is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. Works only for non-negative operands unless you've loaded the &lt;a href=&quot;Math::Complex&quot;&gt;&lt;code&gt;Math::Complex&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">返回EXPR的正平方根。如果省略EXPR，则使用&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;。除非已加载&lt;a href=&quot;Math::Complex&quot;&gt; &lt;code&gt;Math::Complex&lt;/code&gt; &lt;/a&gt;模块，否则仅适用于非负操作数。</target>
        </trans-unit>
        <trans-unit id="69ae67650c145a18aadf88178cd2eaf271f56d73" translate="yes" xml:space="preserve">
          <source>Return the positive square root of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . Works only for non-negative operands unless you've loaded the &lt;code&gt;Math::Complex&lt;/code&gt; module.</source>
          <target state="translated">返回EXPR的正平方根。如果省略EXPR，则使用 &lt;code&gt;$_&lt;/code&gt; 。除非您已加载 &lt;code&gt;Math::Complex&lt;/code&gt; 模块，否则仅适用于非负操作数。</target>
        </trans-unit>
        <trans-unit id="89ca398524ee97aed064f109c0014774b8467f09" translate="yes" xml:space="preserve">
          <source>Return the raw YAMLish source from the most recent &lt;code&gt;&lt;a href=&quot;../../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回最近 &lt;code&gt;&lt;a href=&quot;../../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 的原始YAMLish源。</target>
        </trans-unit>
        <trans-unit id="f0513c9378f747cf570f5e7d7be8c8c61d18c228" translate="yes" xml:space="preserve">
          <source>Return the raw YAMLish source from the most recent &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">返回最近 &lt;code&gt;read&lt;/code&gt; 的原始YAMLish源。</target>
        </trans-unit>
        <trans-unit id="de1a7ced0f81af093a8f41863ef2c71d5d568215" translate="yes" xml:space="preserve">
          <source>Return the remaining time in the interval timer specified by &lt;code&gt;$which&lt;/code&gt; .</source>
          <target state="translated">返回由 &lt;code&gt;$which&lt;/code&gt; 指定的间隔计时器中的剩余时间。</target>
        </trans-unit>
        <trans-unit id="87843e54625e03aa350ffd71cf99d774264634cf" translate="yes" xml:space="preserve">
          <source>Return the remaining time in the interval timer specified by &lt;code&gt;$which&lt;/code&gt;.</source>
          <target state="translated">返回由 &lt;code&gt;$which&lt;/code&gt; 指定的间隔计时器中的剩余时间。</target>
        </trans-unit>
        <trans-unit id="675b76f8367988d85cd9b322d1c2a890473db910" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the local address</source>
          <target state="translated">返回本地地址的解析名</target>
        </trans-unit>
        <trans-unit id="bec7a2954cfcd42edef0d1ff425a4307b1d74d50" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the local port number</source>
          <target state="translated">返回本地端口号的解析名</target>
        </trans-unit>
        <trans-unit id="887f83df7ab7110d8c1acbb87357ce3cba9db2e9" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the peer address</source>
          <target state="translated">返回对等体地址的解析名称</target>
        </trans-unit>
        <trans-unit id="207af2743371dc8e9c6e5aba0ef0fc0ab125965a" translate="yes" xml:space="preserve">
          <source>Return the resolved name of the peer port number</source>
          <target state="translated">返回解析后的对等体端口号的名称</target>
        </trans-unit>
        <trans-unit id="f5c943ca1e7b87d7eb64817e23809542799e98fe" translate="yes" xml:space="preserve">
          <source>Return the sever's connection banner</source>
          <target state="translated">返回服务器的连接旗帜</target>
        </trans-unit>
        <trans-unit id="4e9f81c15dc0ff4925fd465d43570e1f6c64719d" translate="yes" xml:space="preserve">
          <source>Return the sign, of $x, meaning either &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;-inf&lt;/code&gt; , &lt;code&gt;+inf&lt;/code&gt; or NaN.</source>
          <target state="translated">返回的迹象，$ x的，这意味着无论是 &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;-inf&lt;/code&gt; ， &lt;code&gt;+inf&lt;/code&gt; 或NaN。</target>
        </trans-unit>
        <trans-unit id="10bd2e0795673d266230bfafe2a24a56dc6065bb" translate="yes" xml:space="preserve">
          <source>Return the sign, of $x, meaning either &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;, &lt;code&gt;+inf&lt;/code&gt; or NaN.</source>
          <target state="translated">返回的迹象，$ x的，这意味着无论是 &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;-inf&lt;/code&gt; ， &lt;code&gt;+inf&lt;/code&gt; 或NaN。</target>
        </trans-unit>
        <trans-unit id="a68dac6ce8097ce942d0b9d9018e95b0ed056421" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise and.</source>
          <target state="translated">返回签名的位面和。</target>
        </trans-unit>
        <trans-unit id="92027d6c5195925ff1e04f4b468405bed61a4ad7" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise exclusive or.</source>
          <target state="translated">返回签名的位上独占或。</target>
        </trans-unit>
        <trans-unit id="8aaddf7d04671db3e0e27536bf4bdbd8fdc46681" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise or.</source>
          <target state="translated">返回有符号的位或。</target>
        </trans-unit>
        <trans-unit id="fdcefa87799574af1010b6f5a87a9651f3b44f50" translate="yes" xml:space="preserve">
          <source>Return the signed mantissa of $x as BigInt.</source>
          <target state="translated">返回$x的签名咒语为BigInt。</target>
        </trans-unit>
        <trans-unit id="79310ad4b822f9de8b442ed576a2f46794110944" translate="yes" xml:space="preserve">
          <source>Return the signed mantissa of $x as a Math::BigInt.</source>
          <target state="translated">以Math::BigInt的形式返回$x的符号咒。</target>
        </trans-unit>
        <trans-unit id="7f626cb13b8df3915be47a73eb5046f1db65dc55" translate="yes" xml:space="preserve">
          <source>Return the square root of the object, truncated to integer.</source>
          <target state="translated">返回对象的平方根,截断为整数。</target>
        </trans-unit>
        <trans-unit id="c947b24354fbf3d8637c5d76e520b817c15cb81e" translate="yes" xml:space="preserve">
          <source>Return the stash associated with an &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; variable. Assumes the slot entry is a valid &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lexical.</source>
          <target state="translated">返回与 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 变量关联的存储。假设插槽条目是有效 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 词汇。</target>
        </trans-unit>
        <trans-unit id="d7843a84d97565c2cb1d8275d9a55252eeba2fc3" translate="yes" xml:space="preserve">
          <source>Return the stash associated with an &lt;code&gt;our&lt;/code&gt; variable. Assumes the slot entry is a valid &lt;code&gt;our&lt;/code&gt; lexical.</source>
          <target state="translated">返回与 &lt;code&gt;our&lt;/code&gt; 变量关联的存储。假设插槽条目是有效的 &lt;code&gt;our&lt;/code&gt; 词汇。</target>
        </trans-unit>
        <trans-unit id="3642aef1d3ef36347beebbb348941672ea0fe04e" translate="yes" xml:space="preserve">
          <source>Return the status value.</source>
          <target state="translated">返回状态值。</target>
        </trans-unit>
        <trans-unit id="ad259b3229b3f03ad7a05da79959b9bdfcb98992" translate="yes" xml:space="preserve">
          <source>Return the type (stash) of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Must be a valid name. Returns null if not typed.</source>
          <target state="translated">返回当前编译区名称的类型（隐藏），偏移量为 &lt;code&gt;po&lt;/code&gt; 。必须是有效名称。如果未键入，则返回null。</target>
        </trans-unit>
        <trans-unit id="a3dfd348809daead6fc32d328dad1cac345d58c0" translate="yes" xml:space="preserve">
          <source>Return the type (stash) of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt;. Must be a valid name. Returns null if not typed.</source>
          <target state="translated">返回当前编译区名称的类型（隐藏），偏移量为 &lt;code&gt;po&lt;/code&gt; 。必须是有效名称。如果未键入，则返回null。</target>
        </trans-unit>
        <trans-unit id="dba363cc65824433e926e3b44c5e85f0cb35c7ee" translate="yes" xml:space="preserve">
          <source>Return the unsigned integer value of an SV, doing any necessary string conversion. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, does an &lt;code&gt;mg_get()&lt;/code&gt; first. Normally used via the &lt;code&gt;SvUV(sv)&lt;/code&gt; and &lt;code&gt;SvUVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">返回SV的无符号整数值，进行任何必要的字符串转换。如果 &lt;code&gt;flags&lt;/code&gt; 设置了 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位，则首先执行 &lt;code&gt;mg_get()&lt;/code&gt; 。通常通过 &lt;code&gt;SvUV(sv)&lt;/code&gt; 和 &lt;code&gt;SvUVx(sv)&lt;/code&gt; 宏使用。</target>
        </trans-unit>
        <trans-unit id="6e1fd917f067439cdaa992595eba43fee3a95d2d" translate="yes" xml:space="preserve">
          <source>Return the unsigned integer value of an SV, doing any necessary string conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvUV(sv)&lt;/code&gt; and &lt;code&gt;SvUVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">返回SV的无符号整数值，进行任何必要的字符串转换。如果标志包括SV_GMAGIC，则首先执行mg_get（）。通常通过 &lt;code&gt;SvUV(sv)&lt;/code&gt; 和 &lt;code&gt;SvUVx(sv)&lt;/code&gt; 宏使用。</target>
        </trans-unit>
        <trans-unit id="9accb2f2600a64c2a60c9adc4585784021b20200" translate="yes" xml:space="preserve">
          <source>Return to the Mytest directory and add the following code to the end of Mytest.xs:</source>
          <target state="translated">返回Mytest目录,在Mytest.xs的末尾添加以下代码。</target>
        </trans-unit>
        <trans-unit id="16e157ca958c0aa92419c19fe9f34acb7d3e3a49" translate="yes" xml:space="preserve">
          <source>Return true if $x has a denominator of 1 (e.g. no fraction parts), otherwise false. Please note that '-inf', 'inf' and 'NaN' aren't integer.</source>
          <target state="translated">如果$x的分母是1,返回true,否则返回false。请注意'-inf'、'inf'和'NaN'不是整数。</target>
        </trans-unit>
        <trans-unit id="3e5085efd71ecbbc4c4f0d5c30df6dcd9453540b" translate="yes" xml:space="preserve">
          <source>Return true if $x is even, otherwise false.</source>
          <target state="translated">如果$x是偶数,返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="5a98829c6119b41b7da46ad43316dccea81b06d6" translate="yes" xml:space="preserve">
          <source>Return true if $x is exactly one, otherwise false.</source>
          <target state="translated">如果$x正好是1,返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="163f49b8f3bbe71386313ef1a2133dfbdc4d8126" translate="yes" xml:space="preserve">
          <source>Return true if $x is exactly zero, otherwise false.</source>
          <target state="translated">如果$x正好为零,返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="32d892363c3a52bfb8993dc9d140a02c83af3833" translate="yes" xml:space="preserve">
          <source>Return true if $x is negative (smaller than zero), otherwise false. Please note that '-inf' is also negative, while 'NaN' and '+inf' aren't.</source>
          <target state="translated">如果$x是负数(小于零),返回true,否则返回false.请注意'-inf'也是负数,而'NaN'和'+inf'不是。请注意,'-inf'也是负数,而'NaN'和'+inf'不是。</target>
        </trans-unit>
        <trans-unit id="87f25e6b0d7a878983f2344572ab5eda7cad6429" translate="yes" xml:space="preserve">
          <source>Return true if $x is odd, otherwise false.</source>
          <target state="translated">如果$x是奇数,返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="45c48544c3d0d53ce836775f04289df45ce6bdab" translate="yes" xml:space="preserve">
          <source>Return true if $x is positive (greater than or equal to zero), otherwise false. Please note that '+inf' is also positive, while 'NaN' and '-inf' aren't.</source>
          <target state="translated">如果$x为正值(大于或等于0),返回true,否则返回false.请注意,'+inf'也是正值,而'NaN'和'-inf'不是。请注意'+inf'也是正值,而'NaN'和'-inf'不是。</target>
        </trans-unit>
        <trans-unit id="8a6297003ef0b9ffe9635e65ad2f17339612fa0b" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;$var&lt;/code&gt; is tainted.</source>
          <target state="translated">如果 &lt;code&gt;$var&lt;/code&gt; 被污染，则返回true 。</target>
        </trans-unit>
        <trans-unit id="d3c512c943e1db417a0823b6edf8178852e9cfaa" translate="yes" xml:space="preserve">
          <source>Return true if all the tests passed and no parse errors were detected.</source>
          <target state="translated">如果所有测试都通过了,并且没有发现解析错误,则返回true。</target>
        </trans-unit>
        <trans-unit id="e7b9d0100742029e7ba236470903f3ba2036c8e3" translate="yes" xml:space="preserve">
          <source>Return true if the argument is a</source>
          <target state="translated">如果参数是一个</target>
        </trans-unit>
        <trans-unit id="730216ef2c3fed22da3e5fd25b9641b48475824e" translate="yes" xml:space="preserve">
          <source>Return true if the time returned by get_time is high resolution (i.e. if Time::HiRes is available).</source>
          <target state="translated">如果get_time返回的时间是高分辨率的,则返回true(即如果Time::HiRes可用)。</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="f9ab1cc2f5a6f7fa7cf3334ca9e0156816d4a68e" translate="yes" xml:space="preserve">
          <source>Return value: path to the written file.</source>
          <target state="translated">返回值:写入文件的路径。</target>
        </trans-unit>
        <trans-unit id="aa37c23df8c6e1a5476cb9bfe9992c9d3632c327" translate="yes" xml:space="preserve">
          <source>Return values (especially for device and inode) may be bogus. (Win32)</source>
          <target state="translated">返回值(特别是设备和inode的)可能是假的。(Win32)</target>
        </trans-unit>
        <trans-unit id="2ee45f810b0d5a87b3109e7a98dc00ce2ad95d67" translate="yes" xml:space="preserve">
          <source>Return values and Errors</source>
          <target state="translated">返回值和错误</target>
        </trans-unit>
        <trans-unit id="60b4a13548e07b2bc054b98557e39378fb1b5195" translate="yes" xml:space="preserve">
          <source>Return values are always objects, strings, Perl scalars, or true/false for comparison routines.</source>
          <target state="translated">返回值总是对象、字符串、Perl标量或比较例程的真/假。</target>
        </trans-unit>
        <trans-unit id="a9b10bedc7cb1c3e14966d1a3819d76dfc9e6417" translate="yes" xml:space="preserve">
          <source>Return your results in the most generic form possible and allow the user to choose how to use them. The most generic form possible is usually a Perl data structure which can then be used to generate a text report, HTML, XML, a database query, or whatever else your users require.</source>
          <target state="translated">以最通用的形式返回结果,并允许用户选择如何使用它们。最通用的形式通常是一个Perl数据结构,然后可以用来生成一个文本报告,HTML,XML,数据库查询,或者其他任何你的用户需要的形式。</target>
        </trans-unit>
        <trans-unit id="38b4b2f7afdfb729ac6e2e26257ac6ce6b48a054" translate="yes" xml:space="preserve">
          <source>Returned Data</source>
          <target state="translated">返回的数据</target>
        </trans-unit>
        <trans-unit id="aa0028982d694bb71d734c691957ac561c5d4e9c" translate="yes" xml:space="preserve">
          <source>Returned value: A LIST &lt;code&gt;($serialized, $ref1, $ref2, ...)&lt;/code&gt; where $serialized is the serialized form to be used, and the optional $ref1, $ref2, etc... are extra references that you wish to let the Storable engine serialize.</source>
          <target state="translated">返回值：LIST &lt;code&gt;($serialized, $ref1, $ref2, ...)&lt;/code&gt; ，其中$ serialized是要使用的序列化形式，而可选的$ ref1，$ ref2等是您希望获得的额外引用让Storable引擎序列化。</target>
        </trans-unit>
        <trans-unit id="ce1c2ea608cbde5f032e96aa31f665bfe3cb479f" translate="yes" xml:space="preserve">
          <source>Returned value: none.</source>
          <target state="translated">返回值:无。</target>
        </trans-unit>
        <trans-unit id="8433c4af8bada7af974e6de0632146d31d37a1fc" translate="yes" xml:space="preserve">
          <source>Returned value: object of type &lt;code&gt;class&lt;/code&gt;</source>
          <target state="translated">返回值： &lt;code&gt;class&lt;/code&gt; 类型的对象</target>
        </trans-unit>
        <trans-unit id="2826cc60681effcff36990251137b663bfeb2b44" translate="yes" xml:space="preserve">
          <source>Returning Data from Perl via the Parameter List</source>
          <target state="translated">通过参数列表从Perl中返回数据。</target>
        </trans-unit>
        <trans-unit id="03bd8e1f4409ce51cb32918ef08262dbb9855b2f" translate="yes" xml:space="preserve">
          <source>Returning SVs, AVs and HVs through RETVAL</source>
          <target state="translated">通过RETVAL返回SV、AV和HV。</target>
        </trans-unit>
        <trans-unit id="5da972aed07dfd92c54f5758d5b006f1b7bd67ff" translate="yes" xml:space="preserve">
          <source>Returning Undef And Empty Lists</source>
          <target state="translated">返回未定义和空列表</target>
        </trans-unit>
        <trans-unit id="586202e539edf3a25cd03377d1d0fa29e01333d8" translate="yes" xml:space="preserve">
          <source>Returning a List in Scalar Context</source>
          <target state="translated">在标量上下文中返回一个列表。</target>
        </trans-unit>
        <trans-unit id="7bbd7e11b07ff21c3115805bbbee9f1ad48a03e0" translate="yes" xml:space="preserve">
          <source>Returning a List in a Scalar Context</source>
          <target state="translated">在一个标量上下文中返回一个列表。</target>
        </trans-unit>
        <trans-unit id="6d881f622789472ae5074294a445f1a5e10a46db" translate="yes" xml:space="preserve">
          <source>Returning a List of Values</source>
          <target state="translated">返回数值列表</target>
        </trans-unit>
        <trans-unit id="47f8e7e7825fe920d32a8e36d5ca8d5824e35776" translate="yes" xml:space="preserve">
          <source>Returning a Scalar</source>
          <target state="translated">返回一个标量</target>
        </trans-unit>
        <trans-unit id="70e0a3e67d16c3e259eea9ef950eb9bffb32921e" translate="yes" xml:space="preserve">
          <source>Returning a list in a scalar context</source>
          <target state="translated">在标量上下文中返回一个列表</target>
        </trans-unit>
        <trans-unit id="f076044dab2ccb151f04e64c4086ddafdf56c6db" translate="yes" xml:space="preserve">
          <source>Returning a list of values</source>
          <target state="translated">返回一个值的列表</target>
        </trans-unit>
        <trans-unit id="3919f0144053d1b2839bd3303b2e55b3a1cb97fc" translate="yes" xml:space="preserve">
          <source>Returning blessed objects from threads</source>
          <target state="translated">从线程中返回受祝福的对象</target>
        </trans-unit>
        <trans-unit id="06915626d86e1674fc14afe083fc9e716d0edc97" translate="yes" xml:space="preserve">
          <source>Returning blessed objects from threads does not work. Depending on the classes involved, you may be able to work around this by returning a serialized version of the object (e.g., using &lt;a href=&quot;Data::Dumper&quot;&gt;Data::Dumper&lt;/a&gt; or &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;), and then reconstituting it in the joining thread. If you're using Perl 5.10.0 or later, and if the class supports &lt;a href=&quot;threads::shared#OBJECTS&quot;&gt;shared objects&lt;/a&gt;, you can pass them via &lt;a href=&quot;Thread::Queue&quot;&gt;shared queues&lt;/a&gt;.</source>
          <target state="translated">从线程返回被祝福的对象不起作用。根据所涉及的类，您可以通过返回对象的序列化版本（例如，使用&lt;a href=&quot;Data::Dumper&quot;&gt;Data :: Dumper&lt;/a&gt;或&lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;），然后在连接线程中重构它来解决此问题。如果您使用的是Perl 5.10.0或更高版本，并且该类支持&lt;a href=&quot;threads::shared#OBJECTS&quot;&gt;共享对象&lt;/a&gt;，则可以通过&lt;a href=&quot;Thread::Queue&quot;&gt;共享队列&lt;/a&gt;传递它们。</target>
        </trans-unit>
        <trans-unit id="a9369ecc429137365ab52f2e23b2dc4784efa0c0" translate="yes" xml:space="preserve">
          <source>Returning closures from threads should not be relied upon. Depending on the Perl version and the application code, results may range from success, to (apparently harmless) warnings of leaked scalar, or all the way up to crashing of the Perl interpreter.</source>
          <target state="translated">不应依赖从线程返回的闭包。根据Perl版本和应用程序代码的不同,结果可能从成功,到(表面上无害的)标量泄漏的警告,或者一直到Perl解释器的崩溃。</target>
        </trans-unit>
        <trans-unit id="71fee7775bbde8a5444661735c97423ac83b2588" translate="yes" xml:space="preserve">
          <source>Returning objects from threads does not work. Depending on the classes involved, you may be able to work around this by returning a serialized version of the object (e.g., using &lt;a href=&quot;data/dumper&quot;&gt;Data::Dumper&lt;/a&gt; or &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;), and then reconstituting it in the joining thread. If you're using Perl 5.10.0 or later, and if the class supports &lt;a href=&quot;threads/shared#OBJECTS&quot;&gt;shared objects&lt;/a&gt;, you can pass them via &lt;a href=&quot;thread/queue&quot;&gt;shared queues&lt;/a&gt;.</source>
          <target state="translated">从线程返回对象不起作用。根据所涉及的类，您可以通过返回对象的序列化版本（例如，使用&lt;a href=&quot;data/dumper&quot;&gt;Data :: Dumper&lt;/a&gt;或&lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;），然后在连接线程中重构它来解决此问题。如果您使用的是Perl 5.10.0或更高版本，并且该类支持&lt;a href=&quot;threads/shared#OBJECTS&quot;&gt;共享对象&lt;/a&gt;，则可以通过&lt;a href=&quot;thread/queue&quot;&gt;共享队列&lt;/a&gt;传递它们。</target>
        </trans-unit>
        <trans-unit id="44a1cd59e485508038ff5a9355cbb16e424183cc" translate="yes" xml:space="preserve">
          <source>Returning undef if unable to create file added in 0.12.</source>
          <target state="translated">如果无法创建0.12中添加的文件,返回undef。</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="49ffeaa4a0300791b51c9f28909d4d69c71e3c32" translate="yes" xml:space="preserve">
          <source>Returns $ENV{TMPDIR} or if that is unset, &quot;/t&quot;.</source>
          <target state="translated">返回$ENV{TMPDIR},如果没有设置,则返回&quot;/t&quot;。</target>
        </trans-unit>
        <trans-unit id="528b3e4ac6c75972df264473be40759653e505fc" translate="yes" xml:space="preserve">
          <source>Returns $x as a BigInt (truncated towards zero). In BigInt this is the same as &lt;code&gt;copy()&lt;/code&gt; .</source>
          <target state="translated">将$ x作为BigInt返回（截断为零）。在BigInt中，这与 &lt;code&gt;copy()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="1aaa28736356131cb6a054493ecf15ee6a09bda6" translate="yes" xml:space="preserve">
          <source>Returns $x modulo $y, i.e., the remainder after floored division (F-division). This method is like Perl's % operator. See &lt;a href=&quot;#bdiv%28%29&quot;&gt;&quot;bdiv()&quot;&lt;/a&gt;.</source>
          <target state="translated">返回$ x以$ y为模，即底数除法（F-除法）后的余数。此方法类似于Perl的％运算符。参见&lt;a href=&quot;#bdiv%28%29&quot;&gt;&amp;ldquo; bdiv（）&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf216af36545641882a4aa4eaed7a326c3fcc490" translate="yes" xml:space="preserve">
          <source>Returns $x modulo $y. When $x is finite, and $y is finite and non-zero, the result is identical to the remainder after floored division (F-division). If, in addition, both $x and $y are integers, the result is identical to the result from Perl's % operator.</source>
          <target state="translated">返回 $x modulo $y。当$x是有限的,而$y是有限的且非零时,结果与浮动除法(F-division)后的余数相同。此外,如果 $x 和 $y 都是整数,结果与 Perl 的 % 运算符的结果相同。</target>
        </trans-unit>
        <trans-unit id="0d3c5a8af51d00f168a13f7248c2c891045778f0" translate="yes" xml:space="preserve">
          <source>Returns -1 on error, which is considered to include the case where the layer cannot provide such a file descriptor.</source>
          <target state="translated">错误时返回-1,这被认为包括了层不能提供这样的文件描述符的情况。</target>
        </trans-unit>
        <trans-unit id="888c6b88522c271b9f85a8ccab52efe3a52513f1" translate="yes" xml:space="preserve">
          <source>Returns -1 on failure to get the file pointer.</source>
          <target state="translated">获取文件指针失败时返回-1。</target>
        </trans-unit>
        <trans-unit id="e338db6b8ffe7e74a318b586d3f57b25d2aa1fa0" translate="yes" xml:space="preserve">
          <source>Returns -1, 0, 1 depending on whether $x is less than, equal to, or grater than $y. Returns undef if any operand is a NaN.</source>
          <target state="translated">根据$x小于、等于或大于$y,返回-1、0、1。如果任何操作数是NaN,则返回undef。</target>
        </trans-unit>
        <trans-unit id="c6b094b94688621d2a5947917c78c4a0d99f860c" translate="yes" xml:space="preserve">
          <source>Returns -1, 0, 1 depending on whether the absolute value of $x is less than, equal to, or grater than the absolute value of $y. Returns undef if any operand is a NaN.</source>
          <target state="translated">根据$x的绝对值是小于、等于还是大于$y的绝对值,返回-1、0、1。如果任何操作数是NaN,则返回undef。</target>
        </trans-unit>
        <trans-unit id="d62fd37f5d52ca20d3195a468720be690b6b812e" translate="yes" xml:space="preserve">
          <source>Returns 0 if the sequence of bytes starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; is the UTF-8 encoding, as extended by Perl, for one or more code points. Otherwise, it returns 1 if there exists at least one non-empty sequence of bytes that when appended to sequence &lt;code&gt;s&lt;/code&gt;, starting at position &lt;code&gt;e&lt;/code&gt; causes the entire sequence to be the well-formed UTF-8 of some code point; otherwise returns 0.</source>
          <target state="translated">如果以 &lt;code&gt;s&lt;/code&gt; 开头且不超过 &lt;code&gt;e - 1&lt;/code&gt; 的字节序列是一个或多个代码点的UTF-8编码（由Perl扩展），则返回0 。否则，如果存在至少一个非空字节序列，则将其返回1，当将其附加到序列 &lt;code&gt;s&lt;/code&gt; 时，从位置 &lt;code&gt;e&lt;/code&gt; 开始使整个序列成为某个代码点的格式正确的UTF-8；否则，它返回1 。否则返回0。</target>
        </trans-unit>
        <trans-unit id="f57c4c00b98ef849f0e779ee1e73c2774ca69841" translate="yes" xml:space="preserve">
          <source>Returns 0 on end-of-file, 1 if not end-of-file, -1 on error.</source>
          <target state="translated">文件结束时返回0,不是文件结束时返回1,错误时返回-1。</target>
        </trans-unit>
        <trans-unit id="e5f02febc55ff88806274778fa60fd3b2c4df15e" translate="yes" xml:space="preserve">
          <source>Returns 0 on success and failure. If &lt;code&gt;Popped()&lt;/code&gt; returns</source>
          <target state="translated">如果成功和失败，则返回0。如果 &lt;code&gt;Popped()&lt;/code&gt; 返回</target>
        </trans-unit>
        <trans-unit id="ba44f8d92ad300a7e94db16c55bfdd6ecdd4afb0" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, -1 on failure.</source>
          <target state="translated">成功时返回0,失败时返回-1。</target>
        </trans-unit>
        <trans-unit id="63b5a5e25f5f4134ba8459b6bef0a63190538c27" translate="yes" xml:space="preserve">
          <source>Returns 0 on success.</source>
          <target state="translated">成功后返回0。</target>
        </trans-unit>
        <trans-unit id="e8046efb8fc3682fd19fe7808d60a87a9e5c745c" translate="yes" xml:space="preserve">
          <source>Returns 0 on success. On failure returns -1 and should set errno.</source>
          <target state="translated">成功时返回0,失败时返回-1,应设置errno。失败时返回-1,并应设置errno。</target>
        </trans-unit>
        <trans-unit id="73f81b7083f8b1af584f696d11723cadb45e8924" translate="yes" xml:space="preserve">
          <source>Returns 1 (when &lt;code&gt;$a&lt;/code&gt; is greater than &lt;code&gt;$b&lt;/code&gt; ) or 0 (when &lt;code&gt;$a&lt;/code&gt; is equal to &lt;code&gt;$b&lt;/code&gt; ) or -1 (when &lt;code&gt;$a&lt;/code&gt; is less than &lt;code&gt;$b&lt;/code&gt; ).</source>
          <target state="translated">返回1（当 &lt;code&gt;$a&lt;/code&gt; 大于 &lt;code&gt;$b&lt;/code&gt; ）或0（当 &lt;code&gt;$a&lt;/code&gt; 等于 &lt;code&gt;$b&lt;/code&gt; ）或-1（当 &lt;code&gt;$a&lt;/code&gt; 小于 &lt;code&gt;$b&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5dd768d30724c5272e10cfd27e726c6f231d1a5d" translate="yes" xml:space="preserve">
          <source>Returns 1 (when &lt;code&gt;$a&lt;/code&gt; is greater than &lt;code&gt;$b&lt;/code&gt;) or 0 (when &lt;code&gt;$a&lt;/code&gt; is equal to &lt;code&gt;$b&lt;/code&gt;) or -1 (when &lt;code&gt;$a&lt;/code&gt; is less than &lt;code&gt;$b&lt;/code&gt;).</source>
          <target state="translated">返回1（当 &lt;code&gt;$a&lt;/code&gt; 大于 &lt;code&gt;$b&lt;/code&gt; ）或0（当 &lt;code&gt;$a&lt;/code&gt; 等于 &lt;code&gt;$b&lt;/code&gt; ）或-1（当 &lt;code&gt;$a&lt;/code&gt; 小于 &lt;code&gt;$b&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cb16034d876707df8f96272a5dff4e89d28412d5" translate="yes" xml:space="preserve">
          <source>Returns 1 if a new stream was found, 0 if none was found, and -1 if an error was encountered.</source>
          <target state="translated">如果找到新的流,返回1;如果没有找到,返回0;如果遇到错误,返回-1。</target>
        </trans-unit>
        <trans-unit id="0102da941d55e0eb75291f811c83ed21853e46ba" translate="yes" xml:space="preserve">
          <source>Returns 1 if all the modules contained in the distribution are up-to-date. Relies on containsmods.</source>
          <target state="translated">如果发行版中包含的所有模块都是最新的,则返回1。依赖于包含mods。</target>
        </trans-unit>
        <trans-unit id="e1ee0b0c392190122ec7ba8d9d8a47a433cb8fa9" translate="yes" xml:space="preserve">
          <source>Returns 1 if the bundle itself and all its members are up-to-date.</source>
          <target state="translated">如果bundle本身和所有成员都是最新的,则返回1。</target>
        </trans-unit>
        <trans-unit id="c4757e4d71f85ab2279932983f16fd6cf23839fc" translate="yes" xml:space="preserve">
          <source>Returns 1 if the module is installed and up-to-date.</source>
          <target state="translated">如果模块已安装并且是最新版本,则返回1。</target>
        </trans-unit>
        <trans-unit id="405c713afd3e87c236988bdf5227a773db888110" translate="yes" xml:space="preserve">
          <source>Returns 1 if the next read on FILEHANDLE will return end of file</source>
          <target state="translated">如果FILEHANDLE的下一次读取将返回文件结束,则返回1。</target>
        </trans-unit>
        <trans-unit id="b1242f6c30157c63339a787c7ddbc442bf5b7836" translate="yes" xml:space="preserve">
          <source>Returns 1 if there is an error (usually when &lt;code&gt;PERLIO_F_ERROR&lt;/code&gt; is set), 0 otherwise.</source>
          <target state="translated">如果有错误（通常在设置了 &lt;code&gt;PERLIO_F_ERROR&lt;/code&gt; 时），则返回1，否则返回0。</target>
        </trans-unit>
        <trans-unit id="e4230f25ecb39ed98585d80e80f90d64f3e38024" translate="yes" xml:space="preserve">
          <source>Returns 1 if this distribution file seems to be a perl distribution. Normally this is derived from the file name only, but the index from CPAN can contain a hint to achieve a return value of true for other filenames too.</source>
          <target state="translated">如果这个发行版文件似乎是一个perl发行版,则返回1。通常这只是从文件名中得出的,但CPAN的索引可以包含一个提示,以实现对其他文件名的返回值为true。</target>
        </trans-unit>
        <trans-unit id="1e104bab9cb8759f62e14ccebe1f50ead99ecb96" translate="yes" xml:space="preserve">
          <source>Returns 1 on success, 0 on failure.</source>
          <target state="translated">成功时返回1,失败时返回0。</target>
        </trans-unit>
        <trans-unit id="b5d450067d1569a4292f6c764fc9ad7e6da162e2" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#config&quot;&gt;&quot;config&quot;&lt;/a&gt; for the $class given. Class names may be fully qualified or abbreviated, eg:</source>
          <target state="translated">返回给定的$ class的&lt;a href=&quot;#config&quot;&gt;&amp;ldquo; config&amp;rdquo;&lt;/a&gt;。类名可以完全限定或缩写，例如：</target>
        </trans-unit>
        <trans-unit id="95ceb615341b2778f45facc3ac91c64f1dcd7626" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; for the $class given. Class names may be fully qualified or abbreviated, eg:</source>
          <target state="translated">返回给定$ class的&lt;a href=&quot;#config&quot;&gt;配置&lt;/a&gt;。类名可以完全限定或缩写，例如：</target>
        </trans-unit>
        <trans-unit id="99ff4197b5764d632b5b57d44604a402c3417883" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; grammar object that will parse the TAP stream from the specified iterator. Both &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;parser&lt;/code&gt; are required arguments. If &lt;code&gt;version&lt;/code&gt; is not set it defaults to &lt;code&gt;12&lt;/code&gt; (see &lt;a href=&quot;#set_version&quot;&gt;set_version&lt;/a&gt; for more details).</source>
          <target state="translated">返回&lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt;语法对象，该对象将解析来自指定迭代器的TAP流。这两个 &lt;code&gt;iterator&lt;/code&gt; 和 &lt;code&gt;parser&lt;/code&gt; 是必需的参数。如果未设置 &lt;code&gt;version&lt;/code&gt; 则默认为 &lt;code&gt;12&lt;/code&gt; （有关更多详细信息，请参见&lt;a href=&quot;#set_version&quot;&gt;set_version&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ceb63837bf7b75a6c1037a412e0f6773a25342a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; grammar object that will parse the TAP stream from the specified iterator. Both &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;parser&lt;/code&gt; are required arguments. If &lt;code&gt;version&lt;/code&gt; is not set it defaults to &lt;code&gt;12&lt;/code&gt; (see &lt;a href=&quot;#set_version&quot;&gt;&quot;set_version&quot;&lt;/a&gt; for more details).</source>
          <target state="translated">返回&lt;a href=&quot;TAP::Parser&quot;&gt;TAP :: Parser&lt;/a&gt;语法对象，该对象将解析来自指定迭代器的TAP流。这两个 &lt;code&gt;iterator&lt;/code&gt; 和 &lt;code&gt;parser&lt;/code&gt; 是必需的参数。如果未设置 &lt;code&gt;version&lt;/code&gt; 则默认为 &lt;code&gt;12&lt;/code&gt; （有关更多详细信息，请参见&lt;a href=&quot;#set_version&quot;&gt;&amp;ldquo; set_version&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c991a0d06fdf084bc9de4bde379609419ebafebd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;$fh&lt;/code&gt; itself if &lt;code&gt;$fh&lt;/code&gt; may be used as a filehandle and is open, or is is a tied handle. Otherwise &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">如果 &lt;code&gt;$fh&lt;/code&gt; 可用作文件句柄并处于打开状态，或者是绑定句柄，则返回 &lt;code&gt;$fh&lt;/code&gt; 本身。否则，将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b29334943e1bc3dff8f970c1f199da3a44b40afc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;$fh&lt;/code&gt; itself, if &lt;code&gt;$fh&lt;/code&gt; may be used as a filehandle and is open, or if it is a tied handle. Otherwise &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="translated">如果 &lt;code&gt;$fh&lt;/code&gt; 可用作文件句柄并处于打开状态，或者它是绑定句柄，则返回 &lt;code&gt;$fh&lt;/code&gt; 本身。否则，将返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30d7a4e5d9ca7ba8584e4a0de65e1b14a456e3be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; for any other failure.</source>
          <target state="translated">返回 &lt;code&gt;1&lt;/code&gt; 表示成功；错误时，如果第一个参数不是有效的文件句柄，则返回&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;，或者返回 &lt;code&gt;0&lt;/code&gt; 并设置&lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;对于其他任何失败。</target>
        </trans-unit>
        <trans-unit id="e7bac7dcd1796b1dda62e6c1d9092908641c82ca" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">返回 &lt;code&gt;1&lt;/code&gt; 表示成功；出错时，如果第一个参数不是有效的文件句柄，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，或者返回 &lt;code&gt;0&lt;/code&gt; 并设置 &lt;code&gt;$!&lt;/code&gt; 对于其他任何失败。</target>
        </trans-unit>
        <trans-unit id="ade90323fde26274914df6d59126343322076239" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">返回 &lt;code&gt;1&lt;/code&gt; 表示成功；出错时，如果第一个参数不是有效的文件句柄，则返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，或者返回 &lt;code&gt;0&lt;/code&gt; 并设置 &lt;code&gt;$!&lt;/code&gt; 对于其他任何失败。</target>
        </trans-unit>
        <trans-unit id="c0574ede98ee7e97c60e0a1d4f2d232a8d707d60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;undef&lt;/code&gt; if the socket is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">返回 &lt;code&gt;1&lt;/code&gt; 表示成功；出错时，如果套接字不是有效的文件句柄，则返回 &lt;code&gt;undef&lt;/code&gt; ，或者返回 &lt;code&gt;0&lt;/code&gt; 并设置 &lt;code&gt;$!&lt;/code&gt; 对于其他任何失败。</target>
        </trans-unit>
        <trans-unit id="7fba5f4b2a8a65724290b52d186de9858fa6db2c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; upon success, &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="translated">成功返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="136cf3a05dcde424fd7cd5db77033d53cc62479d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the program has never failed.</source>
          <target state="translated">如果程序从未失败，则返回 &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c843475d97734dc686bf6af10cb54c997e3ca80" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the program has never passed.</source>
          <target state="translated">如果程序从未通过过，则返回 &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="168d3eac2c65ee157bac98482d92871d6026d13e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not called yet, otherwise bit 1 is set if on the previous call do_harderror was enabled, bit 2 is set if on previous call do_exception was enabled.</source>
          <target state="translated">如果尚未调用，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ；否则，如果在先前的调用中启用了do_harderror，则设置为1；如果在先前的调用中启用了do_exception，则将设置为2。</target>
        </trans-unit>
        <trans-unit id="01b2691d1600db97fed049bb755ceb8ab99064f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not called yet, otherwise return false if errors were not requested to be written to a hard drive, or the drive letter if this was requested.</source>
          <target state="translated">如果尚未调用 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ,则返回undef；如果不要求将错误写入硬盘，则返回false；如果要求，则返回驱动器号。</target>
        </trans-unit>
        <trans-unit id="627f39ba23bdb2924ba3451ee791b5899ecfb9e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">失败时返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0201821892ab945e07f6a5ef79660efddb739cd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. Note: do not use &lt;code&gt;access()&lt;/code&gt; for security purposes. Between the &lt;code&gt;access()&lt;/code&gt; call and the operation you are preparing for the permissions might change: a classic</source>
          <target state="translated">失败时返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。注意：请勿出于安全目的使用 &lt;code&gt;access()&lt;/code&gt; 。在 &lt;code&gt;access()&lt;/code&gt; 调用和您正在准备权限的操作之间可能会发生变化：经典</target>
        </trans-unit>
        <trans-unit id="55152abc1dc2e6224fe3924787bee88e509b5731" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. The &lt;code&gt;$mode&lt;/code&gt; is similar to the mode of &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;, though for &lt;code&gt;mkfifo&lt;/code&gt; you &lt;b&gt;must&lt;/b&gt; specify the &lt;code&gt;$mode&lt;/code&gt; .</source>
          <target state="translated">失败时返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。在 &lt;code&gt;$mode&lt;/code&gt; 是类似的模式 &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; ，见&lt;a href=&quot;functions/mkdir&quot;&gt;MKDIR&lt;/a&gt;，尽管对于 &lt;code&gt;mkfifo&lt;/code&gt; 您&lt;b&gt;必须&lt;/b&gt;指定 &lt;code&gt;$mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de0cd76033a138179245b5e46e05e3b7122e17aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. The &lt;code&gt;signal&lt;/code&gt; must be a number (like &lt;code&gt;SIGHUP&lt;/code&gt; ), not a string (like &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; ), though Perl does try hard to understand you.</source>
          <target state="translated">失败时返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。该 &lt;code&gt;signal&lt;/code&gt; 必须是数字（如 &lt;code&gt;SIGHUP&lt;/code&gt; ），而不是字符串（如 &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; ），但Perl并努力去理解你。</target>
        </trans-unit>
        <trans-unit id="b498767cb3177d1dfc4a86d61b4be055b2dcfcc2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or a reference to the method that implements &lt;code&gt;op&lt;/code&gt; .</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 或对实现 &lt;code&gt;op&lt;/code&gt; 的方法的引用。</target>
        </trans-unit>
        <trans-unit id="5b31fd014d364bd8f9aff893cccb0d2a3396dcb5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_OK&lt;/code&gt; if the uncompression was successful, but the end of the compressed data stream has not been reached. Returns &lt;code&gt;BZ_STREAM_END&lt;/code&gt; on successful uncompression and the end of the compression stream has been reached.</source>
          <target state="translated">如果解压缩成功，但未到达压缩数据流的末尾，则返回 &lt;code&gt;BZ_OK&lt;/code&gt; 。成功解压缩后返回 &lt;code&gt;BZ_STREAM_END&lt;/code&gt; ，并且已达到压缩流的末尾。</target>
        </trans-unit>
        <trans-unit id="8cee1dc76991a1ae94bb57e19977e67445c285f0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_RUN_OK&lt;/code&gt; on success and a &lt;code&gt;bzip2&lt;/code&gt; error code on failure.</source>
          <target state="translated">成功返回 &lt;code&gt;BZ_RUN_OK&lt;/code&gt; ，失败返回 &lt;code&gt;bzip2&lt;/code&gt; 错误代码。</target>
        </trans-unit>
        <trans-unit id="b0cc0a3e341e51f71c2e900bee437aaf7e78b43a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_STREAM_END&lt;/code&gt; on success and a &lt;code&gt;bzip2&lt;/code&gt; error code on failure.</source>
          <target state="translated">成功返回 &lt;code&gt;BZ_STREAM_END&lt;/code&gt; ，失败返回 &lt;code&gt;bzip2&lt;/code&gt; 错误代码。</target>
        </trans-unit>
        <trans-unit id="298af90e00483dcc786cec14907c140555481e3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;LOCAL_FILE&lt;/code&gt; , or the generated local file name if &lt;code&gt;LOCAL_FILE&lt;/code&gt; is not given. If an error was encountered undef is returned.</source>
          <target state="translated">返回 &lt;code&gt;LOCAL_FILE&lt;/code&gt; ，或者如果生成的本地文件名 &lt;code&gt;LOCAL_FILE&lt;/code&gt; 没有给出。如果遇到错误，则返回undef。</target>
        </trans-unit>
        <trans-unit id="f44e98db617e53ac0021ea2776bed5821937169c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;LOCAL_FILE&lt;/code&gt;, or the generated local file name if &lt;code&gt;LOCAL_FILE&lt;/code&gt; is not given. If an error was encountered undef is returned.</source>
          <target state="translated">返回 &lt;code&gt;LOCAL_FILE&lt;/code&gt; ，或者如果生成的本地文件名 &lt;code&gt;LOCAL_FILE&lt;/code&gt; 没有给出。如果遇到错误，则返回undef。</target>
        </trans-unit>
        <trans-unit id="a8b971bb70c1f8924bdec539cc9599d29222d1d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e51d6f8e14bead6e8bf8a7b3130669740d68f1ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NaN&lt;/code&gt;, not-a-number [C99].</source>
          <target state="translated">返回 &lt;code&gt;NaN&lt;/code&gt; ，不是数字[C99]。</target>
        </trans-unit>
        <trans-unit id="e6f167a2967a820d84c44fba64003e7df81c5006" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;REMOTE_FILE&lt;/code&gt; , or the generated remote filename if &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not given.</source>
          <target state="translated">返回 &lt;code&gt;REMOTE_FILE&lt;/code&gt; ，或者如果所产生的远程文件名 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 没有给出。</target>
        </trans-unit>
        <trans-unit id="a3356ded8cd7d483bf947878bfe98508cd281032" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;REMOTE_FILE&lt;/code&gt;, or the generated remote filename if &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not given.</source>
          <target state="translated">返回 &lt;code&gt;REMOTE_FILE&lt;/code&gt; ，或者如果所产生的远程文件名 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 没有给出。</target>
        </trans-unit>
        <trans-unit id="2e8469c11a7495a34575028d0cada4d0c590d322" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful and &lt;code&gt;Z_STREAM_END&lt;/code&gt; if the end of the compressed data has been successfully reached.</source>
          <target state="translated">返回 &lt;code&gt;Z_OK&lt;/code&gt; 如果成功， &lt;code&gt;Z_STREAM_END&lt;/code&gt; 如果压缩数据的结尾已经成功地达到了。</target>
        </trans-unit>
        <trans-unit id="8f59376906d764bd6babf5587091cb994788c043" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful and &lt;code&gt;Z_STREAM_END&lt;/code&gt; if the end of the compressed data has been successfully reached. If not successful, &lt;code&gt;$out&lt;/code&gt; will be</source>
          <target state="translated">返回 &lt;code&gt;Z_OK&lt;/code&gt; 如果成功， &lt;code&gt;Z_STREAM_END&lt;/code&gt; 如果压缩数据的结尾已经成功地达到了。如果不成功，则 &lt;code&gt;$out&lt;/code&gt; 将是</target>
        </trans-unit>
        <trans-unit id="d96ce4239a30d936bcce62812ba50c744b76b905" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful.</source>
          <target state="translated">如果成功，则返回 &lt;code&gt;Z_OK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cafeafb2bd7c17d7b50be85ae47dd3d48969d3d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt; , sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false, and die()s if &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; and $^E are true. The message to die is the concatenated strings &lt;code&gt;name1&lt;/code&gt; and &lt;code&gt;name2&lt;/code&gt; , separated by &lt;code&gt;&quot;: &quot;&lt;/code&gt; from the contents of $^E.</source>
          <target state="translated">返回 &lt;code&gt;expr&lt;/code&gt; ，如果 &lt;code&gt;expr&lt;/code&gt; 为假，则从WinGetLastError（）设置$ ^ E，如果 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 和$ ^ E为true ，则返回die（）。即将消亡的消息是连接字符串 &lt;code&gt;name1&lt;/code&gt; 和 &lt;code&gt;name2&lt;/code&gt; ，与$ ^ E的内容之间用 &lt;code&gt;&quot;: &quot;&lt;/code&gt; 分隔。</target>
        </trans-unit>
        <trans-unit id="aa35bf1c09a2c6ee81db488828bca0efa036827d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt; , sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false.</source>
          <target state="translated">返回 &lt;code&gt;expr&lt;/code&gt; ，如果 &lt;code&gt;expr&lt;/code&gt; 为false，则从WinGetLastError（）设置$ ^ E。</target>
        </trans-unit>
        <trans-unit id="8a43b4944f331e35fc17a23f32ff12adb9faa649" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt;, sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false, and die()s if &lt;code&gt;die&lt;/code&gt; and $^E are true. The message to die is the concatenated strings &lt;code&gt;name1&lt;/code&gt; and &lt;code&gt;name2&lt;/code&gt;, separated by &lt;code&gt;&quot;: &quot;&lt;/code&gt; from the contents of $^E.</source>
          <target state="translated">返回 &lt;code&gt;expr&lt;/code&gt; ，如果 &lt;code&gt;expr&lt;/code&gt; 为false，则从WinGetLastError（）设置$ ^ E；如果 &lt;code&gt;die&lt;/code&gt; 和$ ^ E为true ，则设置die（）s 。要消亡的消息是连接的字符串 &lt;code&gt;name1&lt;/code&gt; 和 &lt;code&gt;name2&lt;/code&gt; ，与$ ^ E的内容之间用 &lt;code&gt;&quot;: &quot;&lt;/code&gt; 分隔。</target>
        </trans-unit>
        <trans-unit id="40b53119485f925fa85d273f752e3f19d229bead" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt;, sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false.</source>
          <target state="translated">返回 &lt;code&gt;expr&lt;/code&gt; ，如果 &lt;code&gt;expr&lt;/code&gt; 为false，则从WinGetLastError（）设置$ ^ E。</target>
        </trans-unit>
        <trans-unit id="fca4e0508d78963dffc71ae7be5c14388673db33" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if it was not called yet, otherwise bit 1 is set if on the previous call do_harderror was enabled, bit 2 is set if on previous call do_exception was enabled.</source>
          <target state="translated">如果尚未调用，则返回 &lt;code&gt;undef&lt;/code&gt; ；否则，如果在先前的调用中启用了do_harderror，则设置为1；如果在先前的调用中启用了do_exception，则将设置为2。</target>
        </trans-unit>
        <trans-unit id="9f0538258dc233e2a7efd702af9ce9d3989d16da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if it was not called yet, otherwise return false if errors were not requested to be written to a hard drive, or the drive letter if this was requested.</source>
          <target state="translated">如果尚未调用 &lt;code&gt;undef&lt;/code&gt; ,则返回undef；如果不要求将错误写入硬盘，则返回false；如果请求将驱动器号写入驱动器号，则返回false。</target>
        </trans-unit>
        <trans-unit id="a0ba49fc52664c9768a2ab95d911eb2cb4b28988" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if the program has never failed.</source>
          <target state="translated">如果程序从未失败，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ff572d05bf067522f60b34abeda2ccdf51d0269" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; if the program has never passed.</source>
          <target state="translated">如果程序从未通过过，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb2541fab3c1c035bf15e71e852d3f39995774af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure.</source>
          <target state="translated">失败时返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="373bfd3ff3b853f161358ec4dc74a062cfd5990c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure. Note: do not use &lt;code&gt;access()&lt;/code&gt; for security purposes. Between the &lt;code&gt;access()&lt;/code&gt; call and the operation you are preparing for the permissions might change: a classic</source>
          <target state="translated">失败时返回 &lt;code&gt;undef&lt;/code&gt; 。注意：请勿出于安全目的使用 &lt;code&gt;access()&lt;/code&gt; 。在 &lt;code&gt;access()&lt;/code&gt; 调用和您准备为权限进行的操作之间可能会发生变化：经典</target>
        </trans-unit>
        <trans-unit id="fc9b1a0a3944ac45a98bd6dae10d908b7db916dd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure. The &lt;code&gt;$mode&lt;/code&gt; is similar to the mode of &lt;code&gt;mkdir()&lt;/code&gt;, see &lt;a href=&quot;perlfunc#mkdir&quot;&gt;&quot;mkdir&quot; in perlfunc&lt;/a&gt;, though for &lt;code&gt;mkfifo&lt;/code&gt; you &lt;b&gt;must&lt;/b&gt; specify the &lt;code&gt;$mode&lt;/code&gt;.</source>
          <target state="translated">失败时返回 &lt;code&gt;undef&lt;/code&gt; 。在 &lt;code&gt;$mode&lt;/code&gt; 是类似的模式 &lt;code&gt;mkdir()&lt;/code&gt; ，见&lt;a href=&quot;perlfunc#mkdir&quot;&gt;&amp;ldquo;MKDIR&amp;rdquo;在perlfunc&lt;/a&gt;，尽管对于 &lt;code&gt;mkfifo&lt;/code&gt; 您&lt;b&gt;必须&lt;/b&gt;指定 &lt;code&gt;$mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62c47c39950b06756b29ddbbe2589f0d6320095f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; on failure. The &lt;code&gt;signal&lt;/code&gt; must be a number (like &lt;code&gt;SIGHUP&lt;/code&gt;), not a string (like &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt;), though Perl does try hard to understand you.</source>
          <target state="translated">失败时返回 &lt;code&gt;undef&lt;/code&gt; 。该 &lt;code&gt;signal&lt;/code&gt; 必须是数字（如 &lt;code&gt;SIGHUP&lt;/code&gt; ），而不是字符串（如 &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; ），但Perl并努力去理解你。</target>
        </trans-unit>
        <trans-unit id="5f4dbf09a70ae3216a8079d6b87c588e31a9f3b4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; or a reference to the method that implements &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;undef&lt;/code&gt; 或对实现 &lt;code&gt;op&lt;/code&gt; 的方法的引用。</target>
        </trans-unit>
        <trans-unit id="694b6b5e4d4a0a0415aca6bfb2d028cdf70185a3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undef&lt;/code&gt; where unavailable.</source>
          <target state="translated">在不可用的地方返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec258314cd4c89e4c47daf34be20cf66b5d74187" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x * 2**y&lt;/code&gt; [C99].</source>
          <target state="translated">返回 &lt;code&gt;x * 2**y&lt;/code&gt; [C99]。</target>
        </trans-unit>
        <trans-unit id="c4d4745f47a74fcad081bf6ee100570bea174bb4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x&lt;/code&gt; but with the sign of &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; ,但符号为 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99]。</target>
        </trans-unit>
        <trans-unit id="565e702e93c7e7ecfd6c2a325f89a19bd154d1cd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x&lt;/code&gt; but with the sign of &lt;code&gt;y&lt;/code&gt; [C99].</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; ,但符号为 &lt;code&gt;y&lt;/code&gt; [C99]。</target>
        </trans-unit>
        <trans-unit id="7e87db4f05bd1544a961889bb18a4ae3bef71b6a" translate="yes" xml:space="preserve">
          <source>Returns EXPR on success for convenience. You may neglect the return value and manipulate EXPR as the filehandle directly if you prefer.</source>
          <target state="translated">为了方便,成功后返回EXPR。你可以忽略返回值,如果你喜欢的话,可以直接将EXPR作为文件柄进行操作。</target>
        </trans-unit>
        <trans-unit id="1617e19a5623494da8a4feec58e0db0d72c53d05" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; , aka exp(1).</source>
          <target state="translated">返回欧拉数 &lt;code&gt;e&lt;/code&gt; ，即exp（1）。</target>
        </trans-unit>
        <trans-unit id="850c587f24c6ccb55ebb1e6b233f6f1952faffd8" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; , aka exp(1). Note that under bigint, this is truncated to an integer, and hence simple '2'.</source>
          <target state="translated">返回欧拉数 &lt;code&gt;e&lt;/code&gt; ，即exp（1）。请注意，在bigint下，它被截断为整数，因此简单为&amp;ldquo; 2&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a3f19dca119e616910757674455d0bfea072343f" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; raised to the appropriate power, to the wanted accuracy.</source>
          <target state="translated">返回欧拉数 &lt;code&gt;e&lt;/code&gt; 升至适当的幂，以达到期望的精度。</target>
        </trans-unit>
        <trans-unit id="36a0a07be35d409b71ec1bc811648258d565575c" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt;, aka exp(1).</source>
          <target state="translated">返回Euler的数字 &lt;code&gt;e&lt;/code&gt; ，即exp（1）。</target>
        </trans-unit>
        <trans-unit id="6a15a9739f022d0bac33f75d4b3499f6e82c8fe0" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt;, aka exp(1). Note that under bigint, this is truncated to an integer, and hence simple '2'.</source>
          <target state="translated">返回Euler的数字 &lt;code&gt;e&lt;/code&gt; ，即exp（1）。请注意，在bigint下，它被截断为整数，因此简单为'2'。</target>
        </trans-unit>
        <trans-unit id="91d8fbbce4cc7e43c119b288ed43436b0f71b618" translate="yes" xml:space="preserve">
          <source>Returns FALSE if &lt;code&gt;pv&lt;/code&gt; doesn't represent a valid unsigned integer value (with no leading zeros). Otherwise it returns TRUE, and sets &lt;code&gt;*valptr&lt;/code&gt; to that value.</source>
          <target state="translated">如果 &lt;code&gt;pv&lt;/code&gt; 不代表有效的无符号整数值（无前导零），则返回FALSE 。否则，它返回TRUE，并将 &lt;code&gt;*valptr&lt;/code&gt; 设置为该值。</target>
        </trans-unit>
        <trans-unit id="4f7822d3c42f8e6aa818be71c2d686e69bd26438" translate="yes" xml:space="preserve">
          <source>Returns OBJ1 modulo OBJ2, i.e., the remainder after dividing OBJ1 by OBJ2.</source>
          <target state="translated">返回OBJ1与OBJ2的模数,即OBJ1除以OBJ2后的余数。</target>
        </trans-unit>
        <trans-unit id="60f69fe69a2ac54ea5d2fefc58a70a63f4bd427b" translate="yes" xml:space="preserve">
          <source>Returns OBJ1 raised to the power of OBJ2. By convention, 0**0 = 1.</source>
          <target state="translated">返回OBJ1升到OBJ2的幂。按照惯例,0**0=1。</target>
        </trans-unit>
        <trans-unit id="fa9f007c83aac949ac30fe49286841418b2898ad" translate="yes" xml:space="preserve">
          <source>Returns PI to the wanted accuracy.</source>
          <target state="translated">返回PI到想要的精度。</target>
        </trans-unit>
        <trans-unit id="c520053627c64fa3c2459265f3c98c69401d9f5f" translate="yes" xml:space="preserve">
          <source>Returns PI to the wanted accuracy. Note that under bigint, this is truncated to an integer, and hence simple '3'.</source>
          <target state="translated">返回PI到想要的精度。请注意,在bigint下,它被截断为一个整数,因此是简单的 &quot;3&quot;。</target>
        </trans-unit>
        <trans-unit id="327682c084c70fda486bfb3be771a0413c3229c3" translate="yes" xml:space="preserve">
          <source>Returns PI truncated to an integer, with the argument being ignored. This means under BigInt this always returns &lt;code&gt;3&lt;/code&gt; .</source>
          <target state="translated">返回截断为整数的PI，并忽略该参数。这意味着在BigInt下，它始终返回 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8da410a89af5164a0c8741909120b0e113c9a907" translate="yes" xml:space="preserve">
          <source>Returns PI.</source>
          <target state="translated">返回PI。</target>
        </trans-unit>
        <trans-unit id="bcf4afe04118d7851c0aac8680ab511af39c9cb4" translate="yes" xml:space="preserve">
          <source>Returns PI. Note that under bigint, this is truncated to an integer, and hence simple '3'.</source>
          <target state="translated">返回PI。请注意,在bigint下,它被截断为一个整数,因此是简单的 &quot;3&quot;。</target>
        </trans-unit>
        <trans-unit id="5c96d003c572d583a1138a19c98afcc3bdf85be8" translate="yes" xml:space="preserve">
          <source>Returns PID on success, -1 on error. The FLAGS argument is ignored in all cases.</source>
          <target state="translated">成功时返回PID,错误时返回-1。在所有情况下,FLAGS参数都被忽略。</target>
        </trans-unit>
        <trans-unit id="a707720802a033276a9d24c48e80bcab6ab43234" translate="yes" xml:space="preserve">
          <source>Returns TRUE if &lt;a href=&quot;perlapi#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot; in perlapi&lt;/a&gt; returns FALSE for the first &lt;code&gt;len&lt;/code&gt; bytes of the string &lt;code&gt;s&lt;/code&gt;, but they are, nonetheless, legal Perl-extended UTF-8; otherwise returns FALSE.</source>
          <target state="translated">如果&lt;a href=&quot;perlapi#is_utf8_invariant_string&quot;&gt;perlapi中的&amp;ldquo; is_utf8_invariant_string&amp;rdquo;&lt;/a&gt;对字符串 &lt;code&gt;s&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节返回FALSE，则返回TRUE ，但是它们是合法的Perl扩展的UTF-8；否则，返回TRUE 。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="3369ecb85791a580960d6df3bf0242855de4e972" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid Perl-extended-UTF-8 string; returns FALSE otherwise. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">如果字符串 &lt;code&gt;s&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节形成有效的Perl-extended-UTF-8字符串，则返回TRUE；否则，返回TRUE 。否则返回FALSE。如果 &lt;code&gt;len&lt;/code&gt; 为0，则将使用 &lt;code&gt;strlen(s)&lt;/code&gt; 进行计算（这意味着，如果使用此选项，则 &lt;code&gt;s&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，而必须具有终止 &lt;code&gt;NUL&lt;/code&gt; 字节）。注意，所有ASCII字符都构成&amp;ldquo;有效的UTF-8字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2e65f39d44c2bc3919a77d7f372c483cee447adb" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8 string, subject to the restrictions imposed by &lt;code&gt;flags&lt;/code&gt;; returns FALSE otherwise. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">如果string &lt;code&gt;s&lt;/code&gt; 前 &lt;code&gt;len&lt;/code&gt; 个字节形成有效的UTF-8字符串（受 &lt;code&gt;flags&lt;/code&gt; 限制），则返回TRUE 。否则返回FALSE。如果 &lt;code&gt;len&lt;/code&gt; 为0，则将使用 &lt;code&gt;strlen(s)&lt;/code&gt; 进行计算（这意味着，如果使用此选项，则 &lt;code&gt;s&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，而必须具有终止 &lt;code&gt;NUL&lt;/code&gt; 字节）。请注意，所有ASCII字符都构成&amp;ldquo;有效的UTF-8字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1eeadc7b0a8131444cf439e2e5bad7bbb8ac70e2" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8-encoded string that conforms to &lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;; otherwise it returns FALSE. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">如果字符串 &lt;code&gt;s&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节形成一个符合&lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode更正＃9&lt;/a&gt;的有效UTF-8编码字符串，则返回TRUE ；否则返回FALSE。如果 &lt;code&gt;len&lt;/code&gt; 为0，则将使用 &lt;code&gt;strlen(s)&lt;/code&gt; 进行计算（这意味着，如果使用此选项，则 &lt;code&gt;s&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，而必须具有终止 &lt;code&gt;NUL&lt;/code&gt; 字节）。请注意，所有ASCII字符都构成&amp;ldquo;有效的UTF-8字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5895f97c00a0441e7cb7ce57743144e89ef0da08" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8-encoded string that conforms to &lt;a href=&quot;https://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode Corrigendum #9&lt;/a&gt;; otherwise it returns FALSE. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">如果字符串 &lt;code&gt;s&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节形成一个符合&lt;a href=&quot;https://www.unicode.org/versions/corrigendum9.html&quot;&gt;Unicode更正＃9&lt;/a&gt;的有效UTF-8编码字符串，则返回TRUE ；否则返回FALSE。如果 &lt;code&gt;len&lt;/code&gt; 为0，则将使用 &lt;code&gt;strlen(s)&lt;/code&gt; 进行计算（这意味着，如果使用此选项，则 &lt;code&gt;s&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，而必须具有终止 &lt;code&gt;NUL&lt;/code&gt; 字节）。请注意，所有ASCII字符都构成&amp;ldquo;有效的UTF-8字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bfe96d433af32c3e1b115482badbc7cd871d72b7" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;s&lt;/code&gt; form a valid UTF-8-encoded string that is fully interchangeable by any application using Unicode rules; otherwise it returns FALSE. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">如果字符串 &lt;code&gt;s&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节形成有效的UTF-8编码的字符串，任何使用Unicode规则的应用程序都可以完全互换，则返回TRUE；否则，返回TRUE 。否则返回FALSE。如果 &lt;code&gt;len&lt;/code&gt; 为0，则将使用 &lt;code&gt;strlen(s)&lt;/code&gt; 进行计算（这意味着，如果使用此选项，则 &lt;code&gt;s&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，而必须具有终止 &lt;code&gt;NUL&lt;/code&gt; 字节）。请注意，所有ASCII字符都构成&amp;ldquo;有效的UTF-8字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9389eac211987c01151fa7a97c1a5559a1076348" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the first &lt;code&gt;len&lt;/code&gt; bytes of the string &lt;code&gt;s&lt;/code&gt; are the same regardless of the UTF-8 encoding of the string (or UTF-EBCDIC encoding on EBCDIC machines); otherwise it returns FALSE. That is, it returns TRUE if they are UTF-8 invariant. On ASCII-ish machines, all the ASCII characters and only the ASCII characters fit this definition. On EBCDIC machines, the ASCII-range characters are invariant, but so also are the C1 controls.</source>
          <target state="translated">如果字符串 &lt;code&gt;s&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节相同，则不管字符串的UTF-8编码（或EBCDIC机器上的UTF-EBCDIC编码）如何，都返回TRUE；否则，返回TRUE 。否则返回FALSE。也就是说，如果它们是UTF-8不变的，则返回TRUE。在使用ASCII的计算机上，所有ASCII字符且只有ASCII字符符合此定义。在EBCDIC机器上，ASCII范围字符是不变的，但是C1控件也是不变的。</target>
        </trans-unit>
        <trans-unit id="9e82ebad0d664e9456fc8b45e1158bc9b2bccc60" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the fixed-width buffer starting at &lt;code&gt;s&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; is entirely valid UTF-8, subject to the restrictions given by &lt;code&gt;flags&lt;/code&gt;; otherwise it returns FALSE.</source>
          <target state="translated">如果以 &lt;code&gt;s&lt;/code&gt; 开头的长度为 &lt;code&gt;len&lt;/code&gt; 的固定宽度缓冲区是完全有效的UTF-8，则返回TRUE ，但要受 &lt;code&gt;flags&lt;/code&gt; 限制。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="9207286e99fede61c8f119ac35db00d5ebabfdb9" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the remote server supports the given command.</source>
          <target state="translated">如果远程服务器支持给定的命令,返回TRUE。</target>
        </trans-unit>
        <trans-unit id="fd4c3e721557b5c97a46d6c7f452fa703131e69f" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the terminator was found, else returns FALSE.</source>
          <target state="translated">如果找到终止器,则返回TRUE,否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="86dd86eb01ddd05d19d1e07bf5b9874c6c8147fb" translate="yes" xml:space="preserve">
          <source>Returns TRUE if there are any filters applied to the DBM associated with &lt;code&gt;$db&lt;/code&gt; . Otherwise returns FALSE.</source>
          <target state="translated">如果有任何过滤器应用于与 &lt;code&gt;$db&lt;/code&gt; 关联的DBM，则返回TRUE 。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="12dec6ca322b394b68240bb4e94034cc07acd943" translate="yes" xml:space="preserve">
          <source>Returns TRUE if there are any filters applied to the DBM associated with &lt;code&gt;$db&lt;/code&gt;. Otherwise returns FALSE.</source>
          <target state="translated">如果有任何过滤器应用于与 &lt;code&gt;$db&lt;/code&gt; 关联的DBM，则返回TRUE 。否则返回FALSE。</target>
        </trans-unit>
        <trans-unit id="30a9ef16bb3602636a0c4bd0e8ea4e677a26c1f7" translate="yes" xml:space="preserve">
          <source>Returns a $command line which just runs a single test without Test::Harness. No checks are done on the results, they're just printed.</source>
          <target state="translated">返回一个$命令行,它只是运行一个测试,而不需要Test::Harness。不对结果进行检查,只打印结果。</target>
        </trans-unit>
        <trans-unit id="5829af1348c8ee2d3665fe45c3621cf88b170dca" translate="yes" xml:space="preserve">
          <source>Returns a $command line which runs the given set of $tests with Test::Harness and the given $perl.</source>
          <target state="translated">Returns a $command line which runs the given set of $tests with Test::Harness and the given $perl.</target>
        </trans-unit>
        <trans-unit id="3a40c2db110c83edc09c9f6521af47e1da86c94d" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; (not &lt;code&gt;_&lt;/code&gt;!). Returns the empty list if &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; fails. Typically used as follows:</source>
          <target state="translated">返回由13个元素组成的列表，该列表提供了文件的状态信息，该文件是通过FILEHANDLE或DIRHANDLE打开的文件，还是由EXPR命名的文件。如果省略EXPR，它的状态&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;（不是 &lt;code&gt;_&lt;/code&gt; ！）。如果&lt;a href=&quot;#stat-FILEHANDLE&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;失败，则返回空列表。通常使用如下：</target>
        </trans-unit>
        <trans-unit id="289c211dd90a016eae30bb66441a63ab247f6da9" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;code&gt;$_&lt;/code&gt; (not &lt;code&gt;_&lt;/code&gt; !). Returns the empty list if &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; fails. Typically used as follows:</source>
          <target state="translated">返回一个由13个元素组成的列表，其中提供了文件状态信息，该文件是通过FILEHANDLE或DIRHANDLE打开的文件，还是由EXPR命名的文件。如果省略EXPR，它的状态 &lt;code&gt;$_&lt;/code&gt; （不是 &lt;code&gt;_&lt;/code&gt; ！）。如果 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 失败，则返回空列表。通常使用如下：</target>
        </trans-unit>
        <trans-unit id="2ec72fef3a1a2c2a6ed8b2ae5861981436db00c7" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;code&gt;$_&lt;/code&gt; (not &lt;code&gt;_&lt;/code&gt; !). Returns the empty list if &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; fails. Typically used as follows:</source>
          <target state="translated">返回一个由13个元素组成的列表，其中提供了文件状态信息，该文件是通过FILEHANDLE或DIRHANDLE打开的文件，还是由EXPR命名的文件。如果省略EXPR，它的状态 &lt;code&gt;$_&lt;/code&gt; （不是 &lt;code&gt;_&lt;/code&gt; ！）。如果 &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 失败，则返回空列表。通常使用如下：</target>
        </trans-unit>
        <trans-unit id="078c2738638e39a25c2582868baa02e701ab1516" translate="yes" xml:space="preserve">
          <source>Returns a 32 bit integer representing the hash value of the string passed in. This value is only reliable for the lifetime of the process. It may be different depending on invocation, environment variables, perl version, architectures, and build options.</source>
          <target state="translated">返回一个32位整数,代表传入字符串的哈希值。这个值只有在进程的生命周期内才是可靠的,它可能会根据调用、环境变量、perl版本、架构和构建选项而有所不同。它可能会因调用、环境变量、perl版本、架构和构建选项而不同。</target>
        </trans-unit>
        <trans-unit id="0e62e0afcdc57c3924bdd7b1920314479b475d8e" translate="yes" xml:space="preserve">
          <source>Returns a 44 character description of this module. Only available for modules listed in The Module List (CPAN/modules/00modlist.long.html or 00modlist.long.txt.gz)</source>
          <target state="translated">返回该模块的44个字符描述。只适用于模块列表中的模块(CPAN/modules/00modlist.long.html或00modlist.long.txt.gz)。</target>
        </trans-unit>
        <trans-unit id="2159034bcd08ab99234b31a03ecf8dc70d5104f2" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt; containing the test results.</source>
          <target state="translated">返回包含测试结果的&lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e390c51112c15ffbe5db64a2c3bcd38009f02ae9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt; containing the test results.</source>
          <target state="translated">返回包含测试结果的&lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a424a5b675f3ec7726f5e9df584409c954569b1f" translate="yes" xml:space="preserve">
          <source>Returns a B::PADLIST object under Perl 5.18 or higher, or a B::AV in earlier versions.</source>
          <target state="translated">在Perl 5.18或更高版本下返回一个B::PADLIST对象,或者在早期版本中返回一个B::AV对象。</target>
        </trans-unit>
        <trans-unit id="10d9cc475b1cfda01f0a1f5c2639cf52a188395a" translate="yes" xml:space="preserve">
          <source>Returns a B::PADLIST object.</source>
          <target state="translated">返回一个B::PADLIST对象。</target>
        </trans-unit>
        <trans-unit id="54a87a96948366f5ea0c054b9ad57a438c86d7b6" translate="yes" xml:space="preserve">
          <source>Returns a Benchmark object.</source>
          <target state="translated">返回一个Benchmark对象。</target>
        </trans-unit>
        <trans-unit id="4ced754e5fbc28d1e4b57de20302b40996dde3f5" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. If EXPR is not present, &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; is checked.</source>
          <target state="translated">返回一个布尔值，该值指示EXPR是否具有未定义值&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;以外的值。如果不存在EXPR，则检查&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a71b4c05ed137f2d3e8d6342391043a58f5a5b03" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If EXPR is not present, &lt;code&gt;$_&lt;/code&gt; is checked.</source>
          <target state="translated">返回一个布尔值，该值指示EXPR是否具有未定义值 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 以外的值。如果不存在EXPR，则检查 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0836f5ca4f174fe06136c589e27a3f9ed4bde956" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If EXPR is not present, &lt;code&gt;$_&lt;/code&gt; is checked.</source>
          <target state="translated">返回一个布尔值，该值指示EXPR是否具有未定义值 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 以外的值。如果不存在EXPR，则检查 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5bbcda9d66da640b9b9960a3c98c45e42a946c0b" translate="yes" xml:space="preserve">
          <source>Returns a CC flag that tells the CC to emit a separate debugging symbol file when compiling an object file.</source>
          <target state="translated">返回一个CC标志,该标志告诉CC在编译对象文件时发出一个单独的调试符号文件。</target>
        </trans-unit>
        <trans-unit id="aab2656aa87969cc9dc5ce3c20e33dc2c8b93e83" translate="yes" xml:space="preserve">
          <source>Returns a Digest::SHA object representing the SHA state contained in</source>
          <target state="translated">Returns a Digest::SHA object representing the SHA state contained in the</target>
        </trans-unit>
        <trans-unit id="63f6546706550d09611771d933ff33e3dea07df0" translate="yes" xml:space="preserve">
          <source>Returns a Digest::SHA object that results from calling</source>
          <target state="translated">Returns a Digest::SHA object that results from calling</target>
        </trans-unit>
        <trans-unit id="ef380fd534237982692ba4a40419cc3751171608" translate="yes" xml:space="preserve">
          <source>Returns a Perl scalar from $x. It is used automatically whenever a scalar is needed, for instance in array index operations.</source>
          <target state="translated">从 $x 返回一个 Perl 标量。每当需要标量时,它会自动使用,例如在数组索引操作中。</target>
        </trans-unit>
        <trans-unit id="d939a263bcad05b96eee0e06b45a6d6cd1c9d059" translate="yes" xml:space="preserve">
          <source>Returns a Perl scalar number representing the number OBJ as close as possible. Since Perl scalars have limited precision, the returned value might not be exactly the same as OBJ.</source>
          <target state="translated">返回一个尽可能接近OBJ的Perl标量数。由于Perl标量的精度有限,所以返回的值可能与OBJ不完全相同。</target>
        </trans-unit>
        <trans-unit id="b63524d4a4118ca3217432bfc25b7c379525fb60" translate="yes" xml:space="preserve">
          <source>Returns a Perl value which may be used instead of the corresponding regular expression, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if its argument is not recognised.</source>
          <target state="translated">返回可以代替相应的正则表达式使用的Perl值；如果未识别其参数，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="442e12fb921df1b226c713f9c15d6c602cf12d9b" translate="yes" xml:space="preserve">
          <source>Returns a Perl value which may be used instead of the corresponding regular expression, or &lt;code&gt;undef&lt;/code&gt; if its argument is not recognized.</source>
          <target state="translated">返回一个Perl值，该值可以代替相应的正则表达式使用；如果未识别其参数，则返回 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7f67979a4434475a7e25e72d10c05204dab5944" translate="yes" xml:space="preserve">
          <source>Returns a SV a dump of |depth| frames of the call stack, skipping the |skip| innermost ones. depth of 20 is usually enough.</source>
          <target state="translated">Returns a SV a dump of the |depth| frames of the call stack,skip the |skip| innermost ones.depth of 20 is usually enough.</target>
        </trans-unit>
        <trans-unit id="84697339eee65b741749a67c4b0c169c3cd83c2b" translate="yes" xml:space="preserve">
          <source>Returns a SV containing a dump of &lt;code&gt;depth&lt;/code&gt; frames of the call stack, skipping the &lt;code&gt;skip&lt;/code&gt; innermost ones. &lt;code&gt;depth&lt;/code&gt; of 20 is usually enough.</source>
          <target state="translated">返回包含转储 &lt;code&gt;depth&lt;/code&gt; 堆栈的SV的SV ，并 &lt;code&gt;skip&lt;/code&gt; 最里面的跳过帧。 &lt;code&gt;depth&lt;/code&gt; 通常为20。</target>
        </trans-unit>
        <trans-unit id="7b38c54c50762d0d3766b9c69ecfd82a584d3bb7" translate="yes" xml:space="preserve">
          <source>Returns a SV describing what the SV passed in is a reference to.</source>
          <target state="translated">返回一个SV,描述传入的SV的引用。</target>
        </trans-unit>
        <trans-unit id="c6768357aea5c7d88a47d38f0e6a279e8cf943bc" translate="yes" xml:space="preserve">
          <source>Returns a Test::Builder object representing the current state of the test.</source>
          <target state="translated">返回代表测试当前状态的Test::Builder对象。</target>
        </trans-unit>
        <trans-unit id="98a91fa53370da7d8b3e71bd0a2931bb0d89f6ca" translate="yes" xml:space="preserve">
          <source>Returns a U32 indicating whether the pointer to the string buffer is offset. This hack is used internally to speed up removal of characters from the beginning of a &lt;code&gt;SvPV&lt;/code&gt;. When &lt;code&gt;SvOOK&lt;/code&gt; is true, then the start of the allocated string buffer is actually &lt;code&gt;SvOOK_offset()&lt;/code&gt; bytes before &lt;code&gt;SvPVX&lt;/code&gt;. This offset used to be stored in &lt;code&gt;SvIVX&lt;/code&gt;, but is now stored within the spare part of the buffer.</source>
          <target state="translated">返回一个U32，它指示指向字符串缓冲区的指针是否偏移。内部使用此hack来加快从 &lt;code&gt;SvPV&lt;/code&gt; 开头删除字符的速度。如果 &lt;code&gt;SvOOK&lt;/code&gt; 为true，则分配的字符串缓冲区的开始实际上是 &lt;code&gt;SvOOK_offset()&lt;/code&gt; 之前的 &lt;code&gt;SvPVX&lt;/code&gt; （）字节。该偏移量曾经存储在 &lt;code&gt;SvIVX&lt;/code&gt; 中，但现在存储在缓冲区的备用部分中。</target>
        </trans-unit>
        <trans-unit id="6b725a6e91e3175c5f263c7a33b2dd952f62bd6a" translate="yes" xml:space="preserve">
          <source>Returns a U32 indicating whether the pointer to the string buffer is offset. This hack is used internally to speed up removal of characters from the beginning of a SvPV. When SvOOK is true, then the start of the allocated string buffer is actually &lt;code&gt;SvOOK_offset()&lt;/code&gt; bytes before SvPVX. This offset used to be stored in SvIVX, but is now stored within the spare part of the buffer.</source>
          <target state="translated">返回一个U32，它指示指向字符串缓冲区的指针是否偏移。内部使用此hack来加快从SvPV开头删除字符的速度。如果SvOOK为true，则分配的字符串缓冲区的开始实际上是 &lt;code&gt;SvOOK_offset()&lt;/code&gt; 之前的SvOOK_offset （）字节。该偏移量曾经存储在SvIVX中，但是现在存储在缓冲区的备用部分中。</target>
        </trans-unit>
        <trans-unit id="1bc093229f26a252e76d58b28c1e3335fc644b9e" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating the UTF-8 status of an SV. If things are set-up properly, this indicates whether or not the SV contains UTF-8 encoded data. You should use this</source>
          <target state="translated">返回一个U32值,表示SV的UTF-8状态。如果设置正确的话,这个值表示SV是否包含UTF-8编码的数据。你应该使用这个</target>
        </trans-unit>
        <trans-unit id="fb51edcd90ab824e684efc4efb16d677a578ca29" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a character string.</source>
          <target state="translated">返回一个U32值,表示SV是否包含一个字符串。</target>
        </trans-unit>
        <trans-unit id="a5231fcdd123cafb5389cb102ea28e6b610241a3" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a character string. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvPOK&lt;/code&gt; instead.</source>
          <target state="translated">返回一个U32值，该值指示SV是否包含字符串。检查&lt;b&gt;私人&lt;/b&gt;设置。请改用 &lt;code&gt;SvPOK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebd2b6e3d5583cc0154203cda60cf1640fa9722d" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a double.</source>
          <target state="translated">返回一个U32值,表示SV是否包含一个双数。</target>
        </trans-unit>
        <trans-unit id="66ecaa4936290bb692aef7d62b280c98eca97624" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a double. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvNOK&lt;/code&gt; instead.</source>
          <target state="translated">返回一个U32值，该值指示SV是否包含一个double。检查&lt;b&gt;私人&lt;/b&gt;设置。请改用 &lt;code&gt;SvNOK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c4405c32c509ff06f034a5c5b10bb25707c59fb" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a number, integer or double.</source>
          <target state="translated">返回一个U32值,表示SV是否包含一个数字、整数或双数。</target>
        </trans-unit>
        <trans-unit id="ad5e936ea4eeca57a5da99afcf9f16adcf4ede7c" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a number, integer or double. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvNIOK&lt;/code&gt; instead.</source>
          <target state="translated">返回一个U32值，该值指示SV是包含数字，整数还是双精度数。检查&lt;b&gt;私人&lt;/b&gt;设置。请改用 &lt;code&gt;SvNIOK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f6a61eafc42cc19e0184cc99c2044eff3febadc" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains an integer.</source>
          <target state="translated">返回一个U32值,表示SV是否包含一个整数。</target>
        </trans-unit>
        <trans-unit id="cdd8f0a8bc1fc17c47a9a228bdaa77321017185e" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains an integer. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvIOK&lt;/code&gt; instead.</source>
          <target state="translated">返回一个U32值，该值指示SV是否包含整数。检查&lt;b&gt;私人&lt;/b&gt;设置。请改用 &lt;code&gt;SvIOK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2499712c178f4d22d2edb40ec424e1b89f24f911" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV is Copy-On-Write (either shared hash key scalars, or full Copy On Write scalars if 5.9.0 is configured for COW).</source>
          <target state="translated">返回一个U32值,表示SV是否为Copy-On-Write(共享哈希键标量,或者如果5.9.0配置为COW,则为完全Copy On Write标量)。</target>
        </trans-unit>
        <trans-unit id="fe8da2b4b2fa02649f81a16d557e3278d57dad57" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the value is defined. This is only meaningful for scalars.</source>
          <target state="translated">返回一个U32值,表示该值是否被定义。这只对标量有意义。</target>
        </trans-unit>
        <trans-unit id="fcc63de18f950cf36aa68d73532240d583a64a9e" translate="yes" xml:space="preserve">
          <source>Returns a binary string representation of the number. See also from_bin().</source>
          <target state="translated">返回数字的二进制字符串表示。参见from_bin()。</target>
        </trans-unit>
        <trans-unit id="7db7cf06b30a633c79d72700fa34db8ab8260cb5" translate="yes" xml:space="preserve">
          <source>Returns a blessed object reference which the user can then use to send the control strings to the terminal using &lt;b&gt;Tputs&lt;/b&gt; and &lt;b&gt;Tgoto&lt;/b&gt;.</source>
          <target state="translated">返回一个受祝福的对象引用，用户随后可以使用该引用使用&lt;b&gt;Tputs&lt;/b&gt;和&lt;b&gt;Tgoto&lt;/b&gt;将控制字符串发送到终端。</target>
        </trans-unit>
        <trans-unit id="d051c95c402809419ae2ea934579ebb0f6e885b8" translate="yes" xml:space="preserve">
          <source>Returns a bool as to whether or not the sequence of bytes from &lt;code&gt;s&lt;/code&gt; up to but not including &lt;code&gt;send&lt;/code&gt; form a &quot;script run&quot;. &lt;code&gt;utf8_target&lt;/code&gt; is TRUE iff the sequence starting at &lt;code&gt;s&lt;/code&gt; is to be treated as UTF-8. To be precise, except for two degenerate cases given below, this function returns TRUE iff all code points in it come from any combination of three &quot;scripts&quot; given by the Unicode &quot;Script Extensions&quot; property: Common, Inherited, and possibly one other. Additionally all decimal digits must come from the same consecutive sequence of 10.</source>
          <target state="translated">返回有关从 &lt;code&gt;s&lt;/code&gt; 到（但不包括） &lt;code&gt;send&lt;/code&gt; 形式的&amp;ldquo;脚本运行&amp;rdquo;字节序列的布尔值。如果将以 &lt;code&gt;s&lt;/code&gt; 开头的序列视为UTF-8，则 &lt;code&gt;utf8_target&lt;/code&gt; 为TRUE 。确切地说，除了下面给出的两种简并情况之外，如果函数中的所有代码点均来自Unicode&amp;ldquo;脚本扩展&amp;rdquo;属性给出的三个&amp;ldquo;脚本&amp;rdquo;的任意组合，则该函数返回TRUE：Common，Inherited以及可能的另一个。此外，所有十进制数字都必须来自相同的连续序列10。</target>
        </trans-unit>
        <trans-unit id="78a15a12352318889d6990a965effdfa78241deb" translate="yes" xml:space="preserve">
          <source>Returns a bool giving whether or not the PV in &lt;code&gt;sv&lt;/code&gt; is to be treated as being encoded in UTF-8.</source>
          <target state="translated">返回一个布尔值，给出是否将 &lt;code&gt;sv&lt;/code&gt; 中的PV 视为以UTF-8编码。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
