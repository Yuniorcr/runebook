<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="720bfdf023a4623ae35ff74918f32bc525e4e4ef" translate="yes" xml:space="preserve">
          <source>Logical paths specified by system variables containing comma-separated search lists are also allowed; hence &lt;code&gt;System:Modules&lt;/code&gt; is a valid filename, and the filesystem will prefix &lt;code&gt;Modules&lt;/code&gt; with each section of &lt;code&gt;System$Path&lt;/code&gt; until a name is made that points to an object on disk. Writing to a new file &lt;code&gt;System:Modules&lt;/code&gt; would be allowed only if &lt;code&gt;System$Path&lt;/code&gt; contains a single item list. The filesystem will also expand system variables in filenames if enclosed in angle brackets, so &lt;code&gt;&amp;lt;System$Dir&amp;gt;.Modules&lt;/code&gt; would look for the file &lt;code&gt;$ENV{'System$Dir'} . 'Modules'&lt;/code&gt;. The obvious implication of this is that &lt;b&gt;fully qualified filenames can start with &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;/b&gt; and the three-argument form of &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; should always be used.</source>
          <target state="translated">也允许由包含逗号分隔的搜索列表的系统变量指定的逻辑路径；因此 &lt;code&gt;System:Modules&lt;/code&gt; 是有效的文件名，文件系统将在 &lt;code&gt;System$Path&lt;/code&gt; 每个部分之前为 &lt;code&gt;Modules&lt;/code&gt; 加上前缀，直到建立一个指向磁盘上对象的名称为止。仅当 &lt;code&gt;System$Path&lt;/code&gt; 包含单个项目列表时，才允许写入新文件 &lt;code&gt;System:Modules&lt;/code&gt; 。如果用尖括号括起来，文件系统还将在文件名中扩展系统变量，因此 &lt;code&gt;&amp;lt;System$Dir&amp;gt;.Modules&lt;/code&gt; 将查找文件 &lt;code&gt;$ENV{'System$Dir'} . 'Modules'&lt;/code&gt; 。明显的含义是&lt;b&gt;完全限定的文件名可以以&lt;/b&gt;&lt;b&gt; &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;/b&gt;&lt;b&gt;开头&lt;/b&gt;&lt;b&gt;&lt;/b&gt;并且应始终使用&lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;的三参数形式。</target>
        </trans-unit>
        <trans-unit id="a2fc415f0920fda900bfdba2744ed1d28349d4d7" translate="yes" xml:space="preserve">
          <source>Logically impossible constraints will be identified immediately by thrown exceptions.</source>
          <target state="translated">逻辑上不可能的约束将通过抛出的异常立即被识别。</target>
        </trans-unit>
        <trans-unit id="79852f7a308fa757ef46ef50b492fb84497039eb" translate="yes" xml:space="preserve">
          <source>Logically joins the arguments into a single string, and returns its SHA-1/224/256/384/512 digest encoded as a Base64 string.</source>
          <target state="translated">将参数逻辑地连接成一个单一的字符串,并将其SHA-1/224/256/384/512摘要编码为Base64字符串返回。</target>
        </trans-unit>
        <trans-unit id="efb5f37aee3b9a117751bc32852449eef4e74e78" translate="yes" xml:space="preserve">
          <source>Logically joins the arguments into a single string, and returns its SHA-1/224/256/384/512 digest encoded as a binary string.</source>
          <target state="translated">将参数逻辑地连接成一个单一的字符串,并返回其SHA-1/224/256/384/512编码为二进制字符串的摘要。</target>
        </trans-unit>
        <trans-unit id="a5c5c8e8c0f54246b1b313dd050b036a30efb0a2" translate="yes" xml:space="preserve">
          <source>Logically joins the arguments into a single string, and returns its SHA-1/224/256/384/512 digest encoded as a hexadecimal string.</source>
          <target state="translated">将参数逻辑地连接成一个单一的字符串,并返回其SHA-1/224/256/384/512编码的十六进制字符串。</target>
        </trans-unit>
        <trans-unit id="04b474494be5436c1b0b4486d175dd6df25d94bc" translate="yes" xml:space="preserve">
          <source>Logically joins the arguments into a single string, and uses it to update the current digest state. In other words, the following statements have the same effect:</source>
          <target state="translated">在逻辑上将参数连接成一个单一的字符串,并使用它来更新当前的摘要状态。换句话说,下面的语句具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="aaef8ae01439927f0a6ee227f2d792c666fabc4e" translate="yes" xml:space="preserve">
          <source>Login name of the person who ran the Configure script and answered the questions. This is used to tag both</source>
          <target state="translated">运行配置脚本并回答问题的人的登录名。这将用于标记两个</target>
        </trans-unit>
        <trans-unit id="30c490b4b408ece1deda10e7b62b5b4cba9be12b" translate="yes" xml:space="preserve">
          <source>Logs will go on as long as they have to.</source>
          <target state="translated">日志只要有必要,就会继续下去。</target>
        </trans-unit>
        <trans-unit id="463552e32614f1099d813cd725ccdec3ad1aa628" translate="yes" xml:space="preserve">
          <source>Long Doubles on Tru64</source>
          <target state="translated">Tru64上的长双打</target>
        </trans-unit>
        <trans-unit id="943010215619f82aa64612ba50a6ccaed4ede293" translate="yes" xml:space="preserve">
          <source>Long Doubles.</source>
          <target state="translated">长双打。</target>
        </trans-unit>
        <trans-unit id="4d248c964e944a2e6c6cbd3e67c194423372f025" translate="yes" xml:space="preserve">
          <source>Long doubles</source>
          <target state="translated">长双打</target>
        </trans-unit>
        <trans-unit id="a209ad07aac520c10047b0552ae5c1c4441aaadc" translate="yes" xml:space="preserve">
          <source>Long integers. This is equivalent to T_IV but explicitly casts the return to type &lt;code&gt;long&lt;/code&gt; . The default typemap for &lt;code&gt;long&lt;/code&gt; is T_IV.</source>
          <target state="translated">长整数。这等效于T_IV，但显式将返回值强制转换为 &lt;code&gt;long&lt;/code&gt; 类型。 &lt;code&gt;long&lt;/code&gt; 的默认类型映射为T_IV。</target>
        </trans-unit>
        <trans-unit id="39185f77c0d669e9592abefffabc259acc02445d" translate="yes" xml:space="preserve">
          <source>Long integers. This is equivalent to T_IV but explicitly casts the return to type &lt;code&gt;long&lt;/code&gt;. The default typemap for &lt;code&gt;long&lt;/code&gt; is T_IV.</source>
          <target state="translated">长整数。这等效于T_IV，但显式将返回值强制转换为 &lt;code&gt;long&lt;/code&gt; 类型。 &lt;code&gt;long&lt;/code&gt; 的默认类型映射为T_IV。</target>
        </trans-unit>
        <trans-unit id="210129fcaec84064f201e7b1b9a66e1a7acd7738" translate="yes" xml:space="preserve">
          <source>Long lines broken after an operator (except &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; ).</source>
          <target state="translated">运算符后的长行（ &lt;code&gt;and&lt;/code&gt; 和 &lt;code&gt;or&lt;/code&gt; 除外）。</target>
        </trans-unit>
        <trans-unit id="82e02e558af4f23a10d83ce8c5069dd6822db360" translate="yes" xml:space="preserve">
          <source>Long lines broken after an operator (except &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt;).</source>
          <target state="translated">运算符后的长行（ &lt;code&gt;and&lt;/code&gt; 和 &lt;code&gt;or&lt;/code&gt; 除外）。</target>
        </trans-unit>
        <trans-unit id="106ccce59a41316ca39a9a555b12f40ffd8ebb31" translate="yes" xml:space="preserve">
          <source>Long plaguing users of MakeMaker based modules has been the problem of getting basic information about the module out of the sources</source>
          <target state="translated">长期以来,困扰基于MakeMaker的模块用户的是如何从源头获取模块的基本信息的问题</target>
        </trans-unit>
        <trans-unit id="d680241590e9a19c54d2635978661f5bb8739734" translate="yes" xml:space="preserve">
          <source>Long regexps like this may impress your friends, but can be hard to decipher. In complex situations like this, the &lt;code&gt;//x&lt;/code&gt; modifier for a match is invaluable. It allows one to put nearly arbitrary whitespace and comments into a regexp without affecting their meaning. Using it, we can rewrite our 'extended' regexp in the more pleasing form</source>
          <target state="translated">像这样的长正则表达式可能会给您的朋友留下深刻的印象，但可能很难破译。在像这样的复杂情况下，匹配的 &lt;code&gt;//x&lt;/code&gt; 修饰符是无价的。它允许将几乎任意的空格和注释放入正则表达式中，而不会影响其含义。使用它，我们可以用更令人满意的形式重写&amp;ldquo;扩展&amp;rdquo;正则表达式</target>
        </trans-unit>
        <trans-unit id="ea6c5bcada74abc0711c9dae9786d4c7cc139f2a" translate="yes" xml:space="preserve">
          <source>Long regexps like this may impress your friends, but can be hard to decipher. In complex situations like this, the &lt;code&gt;/x&lt;/code&gt; modifier for a match is invaluable. It allows one to put nearly arbitrary whitespace and comments into a regexp without affecting their meaning. Using it, we can rewrite our &quot;extended&quot; regexp in the more pleasing form</source>
          <target state="translated">像这样的长正则表达式可能会给您的朋友留下深刻的印象，但可能很难破译。在像这样的复杂情况下，匹配项的 &lt;code&gt;/x&lt;/code&gt; 修饰符非常宝贵。它允许人们将几乎任意的空格和注释放入正则表达式中，而不会影响其含义。使用它，我们可以以更令人愉悦的形式重写&amp;ldquo;扩展&amp;rdquo;正则表达式</target>
        </trans-unit>
        <trans-unit id="4f9e2648c307f1adbbaa0fd205252907f8be6f2a" translate="yes" xml:space="preserve">
          <source>Long sequences of elsifs will turn into nested ternary operators, which B::Deparse doesn't know how to indent nicely.</source>
          <target state="translated">长长的 elsifs 序列会变成嵌套的三元运算符,而 B::Deparse 不知道如何很好地缩进。</target>
        </trans-unit>
        <trans-unit id="5e129104b85153fb31ba0fceac8d1f977b315428" translate="yes" xml:space="preserve">
          <source>Long-running opcodes</source>
          <target state="translated">长期运行的操作码</target>
        </trans-unit>
        <trans-unit id="cf4ff04cfe182e8bc5dadb069506e27cabf50333" translate="yes" xml:space="preserve">
          <source>Look - search for key in dictionary file</source>
          <target state="translated">查找--在字典文件中搜索关键词</target>
        </trans-unit>
        <trans-unit id="6f72d2c8eec50883a232d838251fbb3eb807c0d1" translate="yes" xml:space="preserve">
          <source>Look around</source>
          <target state="translated">看看周围</target>
        </trans-unit>
        <trans-unit id="2505a112819d0c19797962a0a34b656ddfcb7762" translate="yes" xml:space="preserve">
          <source>Look at &lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt; to find out. If you are not using the latest released version, please try to replicate your bug on the latest stable release.</source>
          <target state="translated">查看&lt;a href=&quot;http://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;进行查找。如果您使用的不是最新发布的版本，请尝试在最新的稳定版本上复制您的错误。</target>
        </trans-unit>
        <trans-unit id="4b18742bc8ba824aa09d520589d9738a0dd5c669" translate="yes" xml:space="preserve">
          <source>Look at &lt;a href=&quot;https://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt; to find out. If you are not using the latest released version, please try to replicate your bug on the latest stable release.</source>
          <target state="translated">请访问&lt;a href=&quot;https://www.perl.org/&quot;&gt;http://www.perl.org/&lt;/a&gt;进行查找。如果您使用的不是最新发布的版本，请尝试在最新的稳定版本上复制您的错误。</target>
        </trans-unit>
        <trans-unit id="1788237e2a2e0b7dbd5185705c7d994a905e8de0" translate="yes" xml:space="preserve">
          <source>Look for a POD document named &lt;code&gt;$name&lt;/code&gt; in the cache. Returns the reference to the corresponding Pod::Cache::Item object or undef if not found.</source>
          <target state="translated">在缓存中查找名为 &lt;code&gt;$name&lt;/code&gt; 的POD文档。返回对相应Pod :: Cache :: Item对象的引用；如果未找到，则返回undef。</target>
        </trans-unit>
        <trans-unit id="fbd0681ce0f07813305ee76bbda2b9bf4d9e94bf" translate="yes" xml:space="preserve">
          <source>Look for a node or index entry named &lt;code&gt;$name&lt;/code&gt; in the object. Returns the unique id of the node (i.e. the second element of the array stored in the node array) or undef if not found.</source>
          <target state="translated">在对象中查找名为 &lt;code&gt;$name&lt;/code&gt; 的节点或索引条目。返回节点的唯一ID（即，存储在节点数组中的数组的第二个元素）或undef（如果找不到）。</target>
        </trans-unit>
        <trans-unit id="b4c07166f0931c9bcbab98ad548fcca2101f03fd" translate="yes" xml:space="preserve">
          <source>Look in &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s SEE ALSO for more testing modules.</source>
          <target state="translated">查看&lt;a href=&quot;Test::More&quot;&gt;Test :: More的更多内容，也请&lt;/a&gt;参阅。</target>
        </trans-unit>
        <trans-unit id="123c1cf1f88ba14e6964d416656f6e7d8fd3e930" translate="yes" xml:space="preserve">
          <source>Look in &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;'s SEE ALSO for more testing modules.</source>
          <target state="translated">在&lt;a href=&quot;more&quot;&gt;Test :: More中&lt;/a&gt;查找更多的测试模块。</target>
        </trans-unit>
        <trans-unit id="0f1649ed1326706b3a529a44e1b35a34e5184e5a" translate="yes" xml:space="preserve">
          <source>Look up Perl documentation in Pod format.</source>
          <target state="translated">以Pod格式查找Perl文档。</target>
        </trans-unit>
        <trans-unit id="c69ec9ef84491acf135ee455e26c4726d6d3736b" translate="yes" xml:space="preserve">
          <source>Look up the entry in the cop hints hash</source>
          <target state="translated">查一下警察提示中的条目。</target>
        </trans-unit>
        <trans-unit id="014395dfa88deac6c1367d0000e26afdf4422e38" translate="yes" xml:space="preserve">
          <source>Look up the entry in the cop hints hash &lt;code&gt;cophh&lt;/code&gt; with the key specified by &lt;code&gt;keypv&lt;/code&gt; and &lt;code&gt;keylen&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; bit set, the key octets are interpreted as UTF-8, otherwise they are interpreted as Latin-1. &lt;code&gt;hash&lt;/code&gt; is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar copy of the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">使用 &lt;code&gt;keypv&lt;/code&gt; 和 &lt;code&gt;keylen&lt;/code&gt; 指定的密钥在cop hints hash &lt;code&gt;cophh&lt;/code&gt; 中查找条目。如果 &lt;code&gt;flags&lt;/code&gt; 将 &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; 位置1，则密钥八位位组将解释为UTF-8，否则将其解释为Latin-1。 &lt;code&gt;hash&lt;/code&gt; 是键字符串的预先计算的哈希值；如果尚未预先计算，则为零。返回与键关联的值的 &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; 标量副本，如果没有与键关联的值，则返回＆PL_sv_placeholder。</target>
        </trans-unit>
        <trans-unit id="67f3f361744fabd99e65f601642d504f07f990e2" translate="yes" xml:space="preserve">
          <source>Look up the hint entry in the cop</source>
          <target state="translated">查一下警察中的提示条目</target>
        </trans-unit>
        <trans-unit id="0fee7ddf829801d66655e7ce043a04dd396f49fc" translate="yes" xml:space="preserve">
          <source>Look up the hint entry in the cop &lt;code&gt;cop&lt;/code&gt; with the key specified by &lt;code&gt;keypv&lt;/code&gt; and &lt;code&gt;keylen&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; bit set, the key octets are interpreted as UTF-8, otherwise they are interpreted as Latin-1. &lt;code&gt;hash&lt;/code&gt; is a precomputed hash of the key string, or zero if it has not been precomputed. Returns a mortal scalar copy of the value associated with the key, or &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; if there is no value associated with the key.</source>
          <target state="translated">使用 &lt;code&gt;keypv&lt;/code&gt; 和 &lt;code&gt;keylen&lt;/code&gt; 指定的密钥在cop &lt;code&gt;cop&lt;/code&gt; 中查找提示条目。如果 &lt;code&gt;flags&lt;/code&gt; 将 &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; 位置1，则密钥八位位组将解释为UTF-8，否则将其解释为Latin-1。 &lt;code&gt;hash&lt;/code&gt; 是键字符串的预先计算的哈希值；如果尚未预先计算，则为零。返回与键关联的值的 &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; 标量副本，如果没有与键关联的值，则返回＆PL_sv_placeholder。</target>
        </trans-unit>
        <trans-unit id="f10edb39dcb279e59fbd91c8271e8ebb8f360ce1" translate="yes" xml:space="preserve">
          <source>Look-around assertions are zero-width patterns which match a specific pattern without including it in &lt;code&gt;$&amp;amp;&lt;/code&gt; . Positive assertions match when their subpattern matches, negative assertions match when their subpattern fails. Look-behind matches text up to the current match position, look-ahead matches text following the current match position.</source>
          <target state="translated">环视断言是零宽度模式，该模式与特定模式匹配，但不包含在 &lt;code&gt;$&amp;amp;&lt;/code&gt; 中。正断言在子模式匹配时匹配，负断言在子模式失败时匹配。&amp;ldquo;后向匹配&amp;rdquo;匹配直到当前匹配位置的文本，&amp;ldquo;前瞻&amp;rdquo;匹配当前匹配位置之后的文本。</target>
        </trans-unit>
        <trans-unit id="66105958c37278697eabc3c9dfaee00ab8f9d704" translate="yes" xml:space="preserve">
          <source>Lookaround Assertions</source>
          <target state="translated">环视断言</target>
        </trans-unit>
        <trans-unit id="5aa1ce4ba86088b9e85e8744c8f85ec1b81ce088" translate="yes" xml:space="preserve">
          <source>Lookaround assertions are zero-width patterns which match a specific pattern without including it in &lt;code&gt;$&amp;amp;&lt;/code&gt;. Positive assertions match when their subpattern matches, negative assertions match when their subpattern fails. Lookbehind matches text up to the current match position, lookahead matches text following the current match position.</source>
          <target state="translated">环视断言是零宽度模式，该模式与特定模式匹配，但不将其包含在 &lt;code&gt;$&amp;amp;&lt;/code&gt; 中。正断言在子模式匹配时匹配，负断言在子模式失败时匹配。后向匹配将文本匹配到当前匹配位置，前向匹配将匹配当前匹配位置之后的文本。</target>
        </trans-unit>
        <trans-unit id="b99f3f115e8bd3af8ea91944ca784a0a9cfdd772" translate="yes" xml:space="preserve">
          <source>Lookbehind longer than %d not implemented in regex m/%s/</source>
          <target state="translated">在regex m/%s/中没有实现长于%d的 &quot;Lookbehind&quot;。</target>
        </trans-unit>
        <trans-unit id="724a065c84668bb1516bf7e41f33f4d7062d0ec4" translate="yes" xml:space="preserve">
          <source>Looking ahead and looking behind</source>
          <target state="translated">瞻前顾后</target>
        </trans-unit>
        <trans-unit id="ddd7aa41b84e676f5291b91d7146d3d34c4b037d" translate="yes" xml:space="preserve">
          <source>Looking at data and -w and v</source>
          <target state="translated">看数据和-w和v</target>
        </trans-unit>
        <trans-unit id="afd51bda07c9e5b3e347f595bec67763e831628e" translate="yes" xml:space="preserve">
          <source>Looking at it another way, writing portable code is usually about willfully limiting your available choices. Naturally, it takes discipline and sacrifice to do that. The product of portability and convenience may be a constant. You have been warned.</source>
          <target state="translated">从另一个角度来看,编写可移植的代码通常是故意限制你的可用选择。自然,要做到这一点需要纪律和牺牲。可移植性和便利性的产物可能是一个常态。你已经被警告过了。</target>
        </trans-unit>
        <trans-unit id="e8e461609613edac0a408d3ea9b1090c941ca168" translate="yes" xml:space="preserve">
          <source>Looking at your</source>
          <target state="translated">看着你的</target>
        </trans-unit>
        <trans-unit id="b9aa086b4410a1e5dda5b6bd9fecaa602b967f8c" translate="yes" xml:space="preserve">
          <source>Looking in to &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; and modern Perl web frameworks is highly recommended, though; web programming in Perl has evolved a long way from the old days of simple CGI scripts.</source>
          <target state="translated">展望到&lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;普拉克&lt;/a&gt;和现代的Perl Web框架强烈建议，虽然，Perl中的Web编程已从简单的CGI脚本的过去发展了很长的路要走。</target>
        </trans-unit>
        <trans-unit id="b407a01503c3f111b5f6d36e40ef6584bf2fa1ec" translate="yes" xml:space="preserve">
          <source>Looking into &lt;a href=&quot;https://plackperl.org&quot;&gt;https://plackperl.org&lt;/a&gt; and modern Perl web frameworks is highly recommended, though; web programming in Perl has evolved a long way from the old days of simple CGI scripts.</source>
          <target state="translated">展望&lt;a href=&quot;https://plackperl.org&quot;&gt;https://plackperl.org&lt;/a&gt;和现代的Perl Web框架强烈建议，虽然，Perl中的Web编程已从简单的CGI脚本的旧时代发展了很长的路要走。</target>
        </trans-unit>
        <trans-unit id="24076d6129adc62ded56328acb2536c0df4e3f06" translate="yes" xml:space="preserve">
          <source>Looking up every message is not the easiest way, so let perl to do it for you. Use the diagnostics pragma with turns perl's normal messages into longer discussions on the topic.</source>
          <target state="translated">查阅每一条消息并不是最简单的方法,所以让perl来帮你做。使用 diagnostics pragma 可以将 perl 的普通消息变成更长的主题讨论。</target>
        </trans-unit>
        <trans-unit id="0cda5c2d87b5464569d98d6b83dc0ced023afb49" translate="yes" xml:space="preserve">
          <source>Looking up module information / loading at runtime</source>
          <target state="translated">查询模块信息/在运行时加载</target>
        </trans-unit>
        <trans-unit id="747df9a5145420389182a3a0e2f8fb4f1afad4e4" translate="yes" xml:space="preserve">
          <source>Looks OK, after it's been through the syntax check (perl -c scriptname), we run it and all we get is a blank line again! Hmmmm.</source>
          <target state="translated">看起来没问题,在通过语法检查(perl -c scriptname)后,我们运行它,得到的又是一行空白。嗯。</target>
        </trans-unit>
        <trans-unit id="79047f1eed1c43aae002a2db39c10123a7158dcc" translate="yes" xml:space="preserve">
          <source>Looks ahead one (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the next character, or -1 if lexing has reached the end of the input text. To consume the peeked character, use &lt;a href=&quot;#lex_read_unichar&quot;&gt;&quot;lex_read_unichar&quot;&lt;/a&gt;.</source>
          <target state="translated">在当前被词法化的文本中向前看一个（Unicode）字符。返回下一个字符的代码点（无符号整数值），如果词法到达输入文本的末尾，则返回-1。要使用偷看的角色，请使用&lt;a href=&quot;#lex_read_unichar&quot;&gt;&amp;ldquo; lex_read_unichar&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e1ff3f5f8cd27194462e5af7c79ade692faba9a" translate="yes" xml:space="preserve">
          <source>Looks ahead one (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the next character, or -1 if lexing has reached the end of the input text. To consume the peeked character, use &lt;a href=&quot;#lex_read_unichar&quot;&gt;lex_read_unichar&lt;/a&gt;.</source>
          <target state="translated">在当前被词法化的文本中向前看一个（Unicode）字符。返回下一个字符的代码点（无符号整数值）；如果词法到达输入文本的末尾，则返回-1。要使用偷看的字符，请使用&lt;a href=&quot;#lex_read_unichar&quot;&gt;lex_read_unichar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56a09e0b7dcffea4a7ed21e9b73140689a5030bc" translate="yes" xml:space="preserve">
          <source>Looks for MakeMaker-like</source>
          <target state="translated">寻找类似MakeMaker的产品</target>
        </trans-unit>
        <trans-unit id="f560b4b8c550fee26628fb62462e2a0f00ebfb7f" translate="yes" xml:space="preserve">
          <source>Looks for Perl DLL in the directory &lt;code&gt;$exedir/../dll&lt;/code&gt;;</source>
          <target state="translated">在 &lt;code&gt;$exedir/../dll&lt;/code&gt; 目录中寻找Perl DLL ；</target>
        </trans-unit>
        <trans-unit id="0e20c33c03f2909dd222479a34a94e62a5aa2710" translate="yes" xml:space="preserve">
          <source>Looks good, let's just continue off the end of the script:</source>
          <target state="translated">看起来不错,让我们继续从剧本的结尾开始。</target>
        </trans-unit>
        <trans-unit id="27da418dc7160824d1f1cea0c0a27285c46f89f4" translate="yes" xml:space="preserve">
          <source>Looks like this:</source>
          <target state="translated">看起来像这样。</target>
        </trans-unit>
        <trans-unit id="3ccb11078ce15c4dd0a5f138c01c353d8c2f4351" translate="yes" xml:space="preserve">
          <source>Looks up ACCOUNT on SYSTEM and returns the domain name the SID and the SID type.</source>
          <target state="translated">在SYSTEM上查找ACCOUNT,并返回域名、SID和SID类型。</target>
        </trans-unit>
        <trans-unit id="8f3ed7a3dfb53ef1d6f3759b748f942473d585fb" translate="yes" xml:space="preserve">
          <source>Looks up SID on SYSTEM and returns the account name, domain name, and the SID type.</source>
          <target state="translated">在SYSTEM上查找SID,并返回账户名、域名和SID类型。</target>
        </trans-unit>
        <trans-unit id="4835cdf08a9f25eb81b07f89910dd3550584f529" translate="yes" xml:space="preserve">
          <source>Looks up the definition of a given &quot;DOS&quot; device name, yielding the active Windows NT native device name along with any currently dormant definitions.</source>
          <target state="translated">查找给定的 &quot;DOS &quot;设备名称的定义,产生活动的Windows NT本地设备名称以及任何当前休眠的定义。</target>
        </trans-unit>
        <trans-unit id="150d86722bc6a43c75ceadbe33863f7ae1a8f8cf" translate="yes" xml:space="preserve">
          <source>Looks up the type of the lexical variable at position</source>
          <target state="translated">查询位置上的词性变量的类型。</target>
        </trans-unit>
        <trans-unit id="998c8ddbb7e6740fa96f3b9ca124537de52289c1" translate="yes" xml:space="preserve">
          <source>Looks up the type of the lexical variable at position &lt;code&gt;po&lt;/code&gt; in the currently-compiling pad. If the variable is typed, the stash of the class to which it is typed is returned. If not, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">在当前编译的填充中的位置 &lt;code&gt;po&lt;/code&gt; 处查找词法变量的类型。如果键入了变量，则返回键入它的类的存储。如果不是，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dba7dbb2ccc77afc11256e6171420abb3f68326" translate="yes" xml:space="preserve">
          <source>Lookup and return a reference to the entry for &lt;code&gt;MACHINE&lt;/code&gt; . If &lt;code&gt;LOGIN&lt;/code&gt; is given then the entry returned will have the given login. If &lt;code&gt;LOGIN&lt;/code&gt; is not given then the first entry in the .netrc file for &lt;code&gt;MACHINE&lt;/code&gt; will be returned.</source>
          <target state="translated">查找并返回对 &lt;code&gt;MACHINE&lt;/code&gt; 条目的引用。如果给出 &lt;code&gt;LOGIN&lt;/code&gt; ,则返回的条目将具有给定的登录名。如果未提供 &lt;code&gt;LOGIN&lt;/code&gt; ，则将返回.netrc文件中 &lt;code&gt;MACHINE&lt;/code&gt; 的第一个条目。</target>
        </trans-unit>
        <trans-unit id="65d5fef357946c73156ad1815637c8d7d629904a" translate="yes" xml:space="preserve">
          <source>Lookup and return a reference to the entry for &lt;code&gt;MACHINE&lt;/code&gt;. If &lt;code&gt;LOGIN&lt;/code&gt; is given then the entry returned will have the given login. If &lt;code&gt;LOGIN&lt;/code&gt; is not given then the first entry in the .netrc file for &lt;code&gt;MACHINE&lt;/code&gt; will be returned.</source>
          <target state="translated">查找并返回对 &lt;code&gt;MACHINE&lt;/code&gt; 条目的引用。如果给出 &lt;code&gt;LOGIN&lt;/code&gt; ,则返回的条目将具有给定的登录名。如果未提供 &lt;code&gt;LOGIN&lt;/code&gt; ，则将返回.netrc文件中 &lt;code&gt;MACHINE&lt;/code&gt; 的第一个条目。</target>
        </trans-unit>
        <trans-unit id="e27af5395111fe3fb113c2e3d566816c9450bb06" translate="yes" xml:space="preserve">
          <source>Lookup for connect()</source>
          <target state="translated">查询连接()。</target>
        </trans-unit>
        <trans-unit id="cfef537fd2855cc3dbc568fc189f69bf8fa670d8" translate="yes" xml:space="preserve">
          <source>Loop Control</source>
          <target state="translated">环路控制</target>
        </trans-unit>
        <trans-unit id="4394b7785cf8e6687ab901e849d752a278fd046b" translate="yes" xml:space="preserve">
          <source>Loop control statements don't work in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;unless&lt;/code&gt; , since they aren't loops. You can double the braces to make them such, though.</source>
          <target state="translated">循环控制语句不适用于 &lt;code&gt;if&lt;/code&gt; 或 &lt;code&gt;unless&lt;/code&gt; ，因为它们不是循环。但是，您可以将大括号加倍以使它们如此。</target>
        </trans-unit>
        <trans-unit id="48c6bd9b37d87812f90fc0d2ca6f3d53c5a09810" translate="yes" xml:space="preserve">
          <source>Loop control statements don't work in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;unless&lt;/code&gt;, since they aren't loops. You can double the braces to make them such, though.</source>
          <target state="translated">循环控制语句不适用于 &lt;code&gt;if&lt;/code&gt; 或 &lt;code&gt;unless&lt;/code&gt; ，因为它们不是循环。不过，您可以将花括号加倍以使其如此。</target>
        </trans-unit>
        <trans-unit id="ee5406a6fab87283992041afaf3d98b63358ce87" translate="yes" xml:space="preserve">
          <source>Losing Overloading</source>
          <target state="translated">损失超载</target>
        </trans-unit>
        <trans-unit id="255b929d8a79cd2d34f3195e7105f962e8ff4cfe" translate="yes" xml:space="preserve">
          <source>Loss of information</source>
          <target state="translated">信息损失</target>
        </trans-unit>
        <trans-unit id="0af71f661f40a0d4f6c6a167f0b101bbfc974cb4" translate="yes" xml:space="preserve">
          <source>Lost precision when %s %f by 1</source>
          <target state="translated">当%s %f乘以1时,精度下降</target>
        </trans-unit>
        <trans-unit id="cfc0d37079134dcffb425a52ede17bc5bc48e470" translate="yes" xml:space="preserve">
          <source>Lots of junk will go past as gdb reads in the relevant source files and libraries, and then:</source>
          <target state="translated">在gdb读取相关源文件和库的时候,很多垃圾会过去,然后。</target>
        </trans-unit>
        <trans-unit id="cbf5af644412cf3c7e29c07a134f4f07b457d268" translate="yes" xml:space="preserve">
          <source>Lots of this documentation is duplicated from &lt;a href=&quot;Pod::Man&quot;&gt;Pod::Man&lt;/a&gt;.</source>
          <target state="translated">该文档中的许多内容都是从&lt;a href=&quot;Pod::Man&quot;&gt;Pod :: Man&lt;/a&gt;复制的。</target>
        </trans-unit>
        <trans-unit id="085dc9408c5b1c58693c372e333c4354a4cec51f" translate="yes" xml:space="preserve">
          <source>Lots of this documentation is duplicated from &lt;a href=&quot;pod/man&quot;&gt;Pod::Man&lt;/a&gt;.</source>
          <target state="translated">本文档中的许多内容都是从&lt;a href=&quot;pod/man&quot;&gt;Pod :: Man&lt;/a&gt;复制的。</target>
        </trans-unit>
        <trans-unit id="ab1f1ddd535328223bedffdfeaa44f30147b00a6" translate="yes" xml:space="preserve">
          <source>Lots. See</source>
          <target state="translated">很多。请看</target>
        </trans-unit>
        <trans-unit id="05699eeb34507ef8b7729483cad54f68e5da82dd" translate="yes" xml:space="preserve">
          <source>Low-Level Interface to bzip2 compression library</source>
          <target state="translated">bzip2压缩库的低级接口。</target>
        </trans-unit>
        <trans-unit id="daa6640df64c8d3fd04d48a86e9c6104202745fc" translate="yes" xml:space="preserve">
          <source>Low-Level Interface to zlib compression library</source>
          <target state="translated">zlib压缩库的低级接口</target>
        </trans-unit>
        <trans-unit id="a0c4ed2cdac85f3556324d12104692afb5867488" translate="yes" xml:space="preserve">
          <source>Low-level File Opens via sysopen</source>
          <target state="translated">通过sysopen打开低级文件</target>
        </trans-unit>
        <trans-unit id="bbbd1cb27a00deeb8c66f6ae061bb29e0862f1bd" translate="yes" xml:space="preserve">
          <source>Low-level access to Win32 system API calls for files/dirs.</source>
          <target state="translated">对Win32系统API调用文件/目录的低级访问。</target>
        </trans-unit>
        <trans-unit id="e8c85a684a62b80d06983e6e12e35335310bc09b" translate="yes" xml:space="preserve">
          <source>Low-level layer that calls &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;lseek&lt;/code&gt; , etc.</source>
          <target state="translated">调用 &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;lseek&lt;/code&gt; 等的低层。</target>
        </trans-unit>
        <trans-unit id="7f89e9304454a9ca27d4f058ae1ff5cae7d7d44b" translate="yes" xml:space="preserve">
          <source>Low-level layer that calls &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;lseek&lt;/code&gt;, etc.</source>
          <target state="translated">调用 &lt;code&gt;read&lt;/code&gt; ， &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;lseek&lt;/code&gt; 等的低层。</target>
        </trans-unit>
        <trans-unit id="55c868659706d4acf0f9a3d5d20af059cb10c22a" translate="yes" xml:space="preserve">
          <source>Low-level socket functions</source>
          <target state="translated">低级插座功能</target>
        </trans-unit>
        <trans-unit id="abf8ce4a5f4a2b06b346bb8ef9b168681a52fab2" translate="yes" xml:space="preserve">
          <source>Lowercase_Letter</source>
          <target state="translated">Lowercase_Letter</target>
        </trans-unit>
        <trans-unit id="a99d83c11e02cb19d312201ee35e6930d1ab9ee1" translate="yes" xml:space="preserve">
          <source>Lowers the reference count of the pad name list.</source>
          <target state="translated">降低垫名列表的引用次数。</target>
        </trans-unit>
        <trans-unit id="1b905a464c50eff889d1fabd4387275f0c86db4f" translate="yes" xml:space="preserve">
          <source>Lowers the reference count of the pad name.</source>
          <target state="translated">降低垫名的引用次数。</target>
        </trans-unit>
        <trans-unit id="64d41b1df2cdae534f1fdacc800338a809f214c6" translate="yes" xml:space="preserve">
          <source>Lowest level layer which provides basic PerlIO operations in terms of UNIX/POSIX numeric file descriptor calls (open(), read(), write(), lseek(), close()).</source>
          <target state="translated">最底层,以UNIX/POSIX数字文件描述符调用(open()、read()、write()、lseek()、close())的方式提供基本的PerlIO操作。</target>
        </trans-unit>
        <trans-unit id="46baacdecc30fd8131a5c1a06a482d538e74c4c5" translate="yes" xml:space="preserve">
          <source>Lowest level layer which provides basic PerlIO operations in terms of UNIX/POSIX numeric file descriptor calls (open(), read(), write(), lseek(), close()). It is used even on non-Unix architectures, and most other layers operate on top of it.</source>
          <target state="translated">最底层的一层,它以UNIX/POSIX数字文件描述符调用(open(),read(),write(),lseek(),close())的方式提供基本的PerlIO操作。即使在非Unix架构上也使用它,大多数其他层都是在它上面操作的。</target>
        </trans-unit>
        <trans-unit id="8f76153b489235de1b7ba0a13f749867749dbd1e" translate="yes" xml:space="preserve">
          <source>Lukas Eklund &amp;lt;leklund@gmail.com&amp;gt;</source>
          <target state="translated">卢卡斯&amp;middot;埃克伦（Lukas Eklund）&amp;lt;leklund@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="16b73d35c25cb2d87aaa9bb21b4aedfa85686027" translate="yes" xml:space="preserve">
          <source>Luther Huffman, lutherh@stratcom.com, Strategic Computer Solutions, Inc.</source>
          <target state="translated">Luther Huffman,lutherh@stratcom.com,Strategic Computer Solutions,Inc.</target>
        </trans-unit>
        <trans-unit id="992354f36023a64134d9045affe474e73e18db31" translate="yes" xml:space="preserve">
          <source>Luvverly! and to fix this we declare all variables explicitly and now our script looks like this:</source>
          <target state="translated">Luvverly!为了解决这个问题,我们明确地声明所有变量,现在我们的脚本看起来是这样的。</target>
        </trans-unit>
        <trans-unit id="dc6aa5975bc24ec633f5fcc8f9ccf2766d7ad7e9" translate="yes" xml:space="preserve">
          <source>Lvalue casts</source>
          <target state="translated">L值投</target>
        </trans-unit>
        <trans-unit id="c819825aaf49d2c99e8f8f2add24599bfbddb1a0" translate="yes" xml:space="preserve">
          <source>Lvalue subroutines</source>
          <target state="translated">L值子程序</target>
        </trans-unit>
        <trans-unit id="a77fcba977d5eb923b72725f6d5dc4fe49dee064" translate="yes" xml:space="preserve">
          <source>Lvalue subroutines are convenient, but you have to keep in mind that, when used with objects, they may violate encapsulation. A normal mutator can check the supplied argument before setting the attribute it is protecting, an lvalue subroutine cannot. If you require any special processing when storing and retrieving the values, consider using the CPAN module Sentinel or something similar.</source>
          <target state="translated">L-value子程序很方便,但你必须记住,当与对象一起使用时,它们可能违反封装。普通的突变器可以在设置它所保护的属性之前检查所提供的参数,而lvalue子程序则不能。如果你在存储和检索值时需要任何特殊处理,可以考虑使用CPAN模块Sentinel或类似的东西。</target>
        </trans-unit>
        <trans-unit id="01157c3907a273e426b801b96bad325cfefca606" translate="yes" xml:space="preserve">
          <source>Lzma (method 14)</source>
          <target state="translated">Lzma(方法14)</target>
        </trans-unit>
        <trans-unit id="53448a46968767fc3dc24857326ec00bf716b8a2" translate="yes" xml:space="preserve">
          <source>Lzma Compression Options</source>
          <target state="translated">Lzma压缩选项</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="c716084845f60944f0ccfd3046e9665113c093b0" translate="yes" xml:space="preserve">
          <source>MAGIC</source>
          <target state="translated">MAGIC</target>
        </trans-unit>
        <trans-unit id="9bc0ed9c361a62773b779bac20ca83bc337097db" translate="yes" xml:space="preserve">
          <source>MAGICXS</source>
          <target state="translated">MAGICXS</target>
        </trans-unit>
        <trans-unit id="15c8cbe6eb1479a64e132c9d7a73db9ce6a8aab3" translate="yes" xml:space="preserve">
          <source>MAILING LIST</source>
          <target state="translated">邮件列表</target>
        </trans-unit>
        <trans-unit id="b3b45a6a598ee27528bae4158cd460e7b0cab066" translate="yes" xml:space="preserve">
          <source>MAIN API EXPORTS</source>
          <target state="translated">主要API出口</target>
        </trans-unit>
        <trans-unit id="f672ec1a25cdbb81af49b4e2e09eb665a197b037" translate="yes" xml:space="preserve">
          <source>MAIN METHODS</source>
          <target state="translated">主要方法</target>
        </trans-unit>
        <trans-unit id="7bee61cc4b2ff6ceaa5bf2c847f0465ac92786f6" translate="yes" xml:space="preserve">
          <source>MAIN SEARCH METHODS</source>
          <target state="translated">主要搜索方法</target>
        </trans-unit>
        <trans-unit id="b2bcf80339bb8c2f5b627482d7224ef03323abc9" translate="yes" xml:space="preserve">
          <source>MAINTAINER</source>
          <target state="translated">MAINTAINER</target>
        </trans-unit>
        <trans-unit id="572378cf179c50ade4591b0f42a539fe3de5c4ba" translate="yes" xml:space="preserve">
          <source>MAINTAINERS</source>
          <target state="translated">MAINTAINERS</target>
        </trans-unit>
        <trans-unit id="a573378dd124c5aff03b74a9a4dee3c0207dd14a" translate="yes" xml:space="preserve">
          <source>MAINTENANCE AND SUPPORT</source>
          <target state="translated">保养和支持</target>
        </trans-unit>
        <trans-unit id="381f8b8847a78b52a5c355f7a396ec94cdfb3fe2" translate="yes" xml:space="preserve">
          <source>MAINTENANCE BRANCHES</source>
          <target state="translated">维修分公司</target>
        </trans-unit>
        <trans-unit id="5f4395a75c71fe04b6156d6290da65a27f17e138" translate="yes" xml:space="preserve">
          <source>MAKE</source>
          <target state="translated">MAKE</target>
        </trans-unit>
        <trans-unit id="0124d424fb4888dc5f53bb1ef59aaa8406bebab8" translate="yes" xml:space="preserve">
          <source>MAKE ASSERTIONS -&amp;gt; SEND EVENTS</source>
          <target state="translated">断言-&amp;gt;发送事件</target>
        </trans-unit>
        <trans-unit id="c8c08604e5e552ec9e9c63c71fc8f4ef53453d1a" translate="yes" xml:space="preserve">
          <source>MAKE ON CYGWIN</source>
          <target state="translated">制作CYGWIN</target>
        </trans-unit>
        <trans-unit id="1f0292102c8114ed4accdb4b3187dd3355fe606e" translate="yes" xml:space="preserve">
          <source>MAKE PROBLEMS.</source>
          <target state="translated">制造问题。</target>
        </trans-unit>
        <trans-unit id="606cfc5f8f22b0f666e90c16494ce8cfe5172b45" translate="yes" xml:space="preserve">
          <source>MAKE TEST</source>
          <target state="translated">制作测试</target>
        </trans-unit>
        <trans-unit id="4197ed452e3e67bf334841bde4210f984cf23e44" translate="yes" xml:space="preserve">
          <source>MAKEAPERL</source>
          <target state="translated">MAKEAPERL</target>
        </trans-unit>
        <trans-unit id="df6262932ccb109dce90e30936b4e6b9e6d0d4c2" translate="yes" xml:space="preserve">
          <source>MAKEFILE_OLD</source>
          <target state="translated">MAKEFILE_OLD</target>
        </trans-unit>
        <trans-unit id="d33b61e914eef018d44c2af2392dd8a8bb3f0814" translate="yes" xml:space="preserve">
          <source>MAKEMAKER: path to the MakeMaker module.</source>
          <target state="translated">MAKEMAKER:MakeMaker模块的路径。</target>
        </trans-unit>
        <trans-unit id="fba0fd0dd60434c9d108881cdd60c2cfbd09f893" translate="yes" xml:space="preserve">
          <source>MAN PAGES</source>
          <target state="translated">人页</target>
        </trans-unit>
        <trans-unit id="c64d5c48751d39c885c4bcdfb24a588e7e222136" translate="yes" xml:space="preserve">
          <source>MAN1PODS</source>
          <target state="translated">MAN1PODS</target>
        </trans-unit>
        <trans-unit id="c7fb89700825cc5dfcebfd44326a8eec88015a73" translate="yes" xml:space="preserve">
          <source>MAN3PODS</source>
          <target state="translated">MAN3PODS</target>
        </trans-unit>
        <trans-unit id="41d43d8ceb08d1444c2cfb5b56c19af1bc2840bf" translate="yes" xml:space="preserve">
          <source>MANAGING FORMATTERS</source>
          <target state="translated">管理格式</target>
        </trans-unit>
        <trans-unit id="9ae61f13c66eb261147f9d4b1d89a27b5c697890" translate="yes" xml:space="preserve">
          <source>MANIFEST</source>
          <target state="translated">MANIFEST</target>
        </trans-unit>
        <trans-unit id="ee43e9094077d72c1da72a9a91b89d3593977bf3" translate="yes" xml:space="preserve">
          <source>MANIFEST ON CYGWIN</source>
          <target state="translated">MANIFEST ON CYGWIN</target>
        </trans-unit>
        <trans-unit id="99aec53b52aee7fd41e057b43112a2b07b20b1fa" translate="yes" xml:space="preserve">
          <source>MANIFEST.SKIP</source>
          <target state="translated">MANIFEST.SKIP</target>
        </trans-unit>
        <trans-unit id="93ba9a2acb7ece879d6eae4b3780b55ff65e53c6" translate="yes" xml:space="preserve">
          <source>MANIFEST.bak</source>
          <target state="translated">MANIFEST.bak</target>
        </trans-unit>
        <trans-unit id="71154a1d58b708083b1b8a9a53cc03dfaac27380" translate="yes" xml:space="preserve">
          <source>MAP DATA</source>
          <target state="translated">地图数据</target>
        </trans-unit>
        <trans-unit id="b315cd523ae2ef826dbad53529ba6c9c2ad21ff1" translate="yes" xml:space="preserve">
          <source>MAPPING</source>
          <target state="translated">MAPPING</target>
        </trans-unit>
        <trans-unit id="209ca025362fc9c148579a1bf701af6d3fbee6d2" translate="yes" xml:space="preserve">
          <source>MAP_TARGET</source>
          <target state="translated">MAP_TARGET</target>
        </trans-unit>
        <trans-unit id="20b7a63446bb07c65998bdd386758cc1d4e47490" translate="yes" xml:space="preserve">
          <source>MARK</source>
          <target state="translated">MARK</target>
        </trans-unit>
        <trans-unit id="ce71241b2af9817fe6f961964423ded83b2b2446" translate="yes" xml:space="preserve">
          <source>MATCH</source>
          <target state="translated">MATCH</target>
        </trans-unit>
        <trans-unit id="34a4dfce34585d297b90edd353506556851a5017" translate="yes" xml:space="preserve">
          <source>MATH</source>
          <target state="translated">MATH</target>
        </trans-unit>
        <trans-unit id="72a965b84fe5d8bf2c44aadc341ef716b1bb9f90" translate="yes" xml:space="preserve">
          <source>MATH LIBRARY</source>
          <target state="translated">数学图书馆</target>
        </trans-unit>
        <trans-unit id="7b186e235f284107df6b4dbe6060d2b6a5d9f1e5" translate="yes" xml:space="preserve">
          <source>MAX</source>
          <target state="translated">MAX</target>
        </trans-unit>
        <trans-unit id="792fd2692b3061f3e55fd6e6d06b2216b2041c0f" translate="yes" xml:space="preserve">
          <source>MAXCOMPLEN is the maximum length of a filename component (the part between two backslashes) on this file system.</source>
          <target state="translated">MAXCOMPLEN是这个文件系统中文件名组件的最大长度(两个反斜杠之间的部分)。</target>
        </trans-unit>
        <trans-unit id="f68525ad751f8a1d932458c4c58a214bdf0b30e9" translate="yes" xml:space="preserve">
          <source>MEDIUM</source>
          <target state="translated">MEDIUM</target>
        </trans-unit>
        <trans-unit id="f4b1c471ce1efbe25d7232b293140a21b7fea826" translate="yes" xml:space="preserve">
          <source>MEMORY</source>
          <target state="translated">MEMORY</target>
        </trans-unit>
        <trans-unit id="cdf5b879eba064baae0d94237dbf7820fdcbb018" translate="yes" xml:space="preserve">
          <source>MEMORY DEBUGGERS</source>
          <target state="translated">存储器调试器</target>
        </trans-unit>
        <trans-unit id="e31b925235cc3be7fd5e0670fdc195273a9cff6f" translate="yes" xml:space="preserve">
          <source>MEMORY STORE</source>
          <target state="translated">存储器</target>
        </trans-unit>
        <trans-unit id="4c1e46b92295867a7e3aedb69823f567f1577697" translate="yes" xml:space="preserve">
          <source>MERGE STRATEGIES</source>
          <target state="translated">融合战略</target>
        </trans-unit>
        <trans-unit id="af3e8367fd77b35795f6a4515a82e2821f81990d" translate="yes" xml:space="preserve">
          <source>MESSAGE-SPEC</source>
          <target state="translated">MESSAGE-SPEC</target>
        </trans-unit>
        <trans-unit id="c459b150dd079f2662d2dc95f57ad127cc7aa8df" translate="yes" xml:space="preserve">
          <source>META CHARACTERS</source>
          <target state="translated">META CHARACTERS</target>
        </trans-unit>
        <trans-unit id="e3b3cae38e87b40132568c5a00d9fdb4dbf0d028" translate="yes" xml:space="preserve">
          <source>META Concerns</source>
          <target state="translated">META关注的问题</target>
        </trans-unit>
        <trans-unit id="a0396a803e296b3603471fd9fe995f4d3b469448" translate="yes" xml:space="preserve">
          <source>META-KEY RESTRICTIONS</source>
          <target state="translated">META-KEY限制</target>
        </trans-unit>
        <trans-unit id="4a6da301633ce81aa21cac64ffb95d87c6894995" translate="yes" xml:space="preserve">
          <source>META.json</source>
          <target state="translated">META.json</target>
        </trans-unit>
        <trans-unit id="3b7f8f92275828b66b32cb6c6aeb61e73c1d7587" translate="yes" xml:space="preserve">
          <source>META.yml</source>
          <target state="translated">META.yml</target>
        </trans-unit>
        <trans-unit id="b763622141e2fabeb07a88720f777618ff14ff8f" translate="yes" xml:space="preserve">
          <source>META_ADD</source>
          <target state="translated">META_ADD</target>
        </trans-unit>
        <trans-unit id="ffea654c220d2875e7a864f30439535466d152eb" translate="yes" xml:space="preserve">
          <source>META_MERGE</source>
          <target state="translated">META_MERGE</target>
        </trans-unit>
        <trans-unit id="296be0aba5c6db10945a86505a9c35adbc0a5da7" translate="yes" xml:space="preserve">
          <source>METHOD CALLING</source>
          <target state="translated">调用方法</target>
        </trans-unit>
        <trans-unit id="7541f2ddbea83515621139a06393c2c41632b2df" translate="yes" xml:space="preserve">
          <source>METHODS</source>
          <target state="translated">METHODS</target>
        </trans-unit>
        <trans-unit id="7347dda2b461e7f991ef3bb4cbeac4cccce22688" translate="yes" xml:space="preserve">
          <source>METHODS AND FIELDS</source>
          <target state="translated">方法和领域</target>
        </trans-unit>
        <trans-unit id="3cb215be859943e6d7b15dec190189887d7849cd" translate="yes" xml:space="preserve">
          <source>METHODS FOR PARSING AND PROCESSING</source>
          <target state="translated">筛选和处理方法</target>
        </trans-unit>
        <trans-unit id="e6e31389588ce3a302e9399908d50ba1bc9b2ff6" translate="yes" xml:space="preserve">
          <source>METHODS SUBCLASSES MAY IMPLEMENT OR OVERRIDE</source>
          <target state="translated">各子类可能实施或推翻的方法。</target>
        </trans-unit>
        <trans-unit id="ab46e61362be7095bd0ecea299cf9afde867e32c" translate="yes" xml:space="preserve">
          <source>METHODS SUBCLASSES MUST IMPLEMENT</source>
          <target state="translated">各子类必须实施的方法。</target>
        </trans-unit>
        <trans-unit id="bac1668d54ba3469d07436c3cb4d6c63921e8439" translate="yes" xml:space="preserve">
          <source>MILLIONS OF MACROS</source>
          <target state="translated">数以百万计的MACROS</target>
        </trans-unit>
        <trans-unit id="8c54fa1663ec8e58feaa0f76d0ad16806f96497d" translate="yes" xml:space="preserve">
          <source>MIME 'B' and 'Q' header encoding</source>
          <target state="translated">MIME'B'和'Q'头编码。</target>
        </trans-unit>
        <trans-unit id="f0186eb413ae0fe1b04a58826d46062c8207cd98" translate="yes" xml:space="preserve">
          <source>MIME (Multipurpose Internet Mail Extensions)</source>
          <target state="translated">多用途邮件扩展项</target>
        </trans-unit>
        <trans-unit id="448dc4536185fa521763a707f1aaa251c78a81e2" translate="yes" xml:space="preserve">
          <source>MIME encoding for an unstructured email header</source>
          <target state="translated">非结构化邮件头的MIME编码。</target>
        </trans-unit>
        <trans-unit id="ced61424802296ffb38430fa8f0fab4da3883207" translate="yes" xml:space="preserve">
          <source>MIME::Base64</source>
          <target state="translated">MIME::Base64</target>
        </trans-unit>
        <trans-unit id="7fe3ea65bc04a88102c03df5c340d4e7c1520d18" translate="yes" xml:space="preserve">
          <source>MIME::Base64 - Encoding and decoding of base64 strings</source>
          <target state="translated">MIME::Base64-base64字符串的编码和解码。</target>
        </trans-unit>
        <trans-unit id="7ffae17f904a8de9b8c01b15e74d1504ffbc2043" translate="yes" xml:space="preserve">
          <source>MIME::QuotedPrint</source>
          <target state="translated">MIME::QuotedPrint</target>
        </trans-unit>
        <trans-unit id="65095920906e9bf0fe024eb72fdfbbe098341dd5" translate="yes" xml:space="preserve">
          <source>MIME::QuotedPrint - Encoding and decoding of quoted-printable strings</source>
          <target state="translated">MIME::QuotedPrint-可引用打印的字符串的编码和解码</target>
        </trans-unit>
        <trans-unit id="7f1f9a719a9f150e508497c923f92b8123e37935" translate="yes" xml:space="preserve">
          <source>MIME_ENCODING</source>
          <target state="translated">MIME_ENCODING</target>
        </trans-unit>
        <trans-unit id="79b8daea186e0e9dd2d8665c8e357ddbbf0a21c4" translate="yes" xml:space="preserve">
          <source>MIN_PERL_VERSION</source>
          <target state="translated">MIN_PERL_VERSION</target>
        </trans-unit>
        <trans-unit id="8d9cb354f1b92318e37511c8328e0bfc3a396a31" translate="yes" xml:space="preserve">
          <source>MISC</source>
          <target state="translated">MISC</target>
        </trans-unit>
        <trans-unit id="fbc28147d7dae55d07ef20379522673d2cd4aff7" translate="yes" xml:space="preserve">
          <source>MISCELLANEOUS</source>
          <target state="translated">MISCELLANEOUS</target>
        </trans-unit>
        <trans-unit id="0e2957d871def6ecf380e593a975af27f56d18ea" translate="yes" xml:space="preserve">
          <source>MISCELLANEOUS TRICKS</source>
          <target state="translated">杂七杂八的技巧</target>
        </trans-unit>
        <trans-unit id="8727bad0374de5d99b1e6473dee31baa8ae41493" translate="yes" xml:space="preserve">
          <source>MKTEMP FUNCTIONS</source>
          <target state="translated">MKTEMP功能</target>
        </trans-unit>
        <trans-unit id="38de91e68bd653a65240e9601577373f8b2878b4" translate="yes" xml:space="preserve">
          <source>MM_REVISION: ExtUtils::MakeMaker version control revision (for backwards compat)</source>
          <target state="translated">MM_REVISION:ExtUtils::MakeMaker版本控制修订版 (用于向后兼容)</target>
        </trans-unit>
        <trans-unit id="065dc1eef187bb989bef804cda0869075be856b3" translate="yes" xml:space="preserve">
          <source>MM_VERSION: ExtUtils::MakeMaker Version</source>
          <target state="translated">MM_VERSION:ExtUtils::MakeMaker 版本。</target>
        </trans-unit>
        <trans-unit id="b630876e2ee4a66e53ca42c0024ca639bccd9170" translate="yes" xml:space="preserve">
          <source>MM_VMS_REVISION is for backwards compatibility before MM_VMS had a $VERSION.</source>
          <target state="translated">MM_VMS_REVISION是为了在MM_VMS有$VERSION之前向后兼容。</target>
        </trans-unit>
        <trans-unit id="5a5019b6901ec4e0159788b99019a468b1278f03" translate="yes" xml:space="preserve">
          <source>MODE</source>
          <target state="translated">MODE</target>
        </trans-unit>
        <trans-unit id="11d727b07a2ef2f226c24b7b3ca7ffbcc8a440f3" translate="yes" xml:space="preserve">
          <source>MODIFICATION HISTORY</source>
          <target state="translated">修改历史</target>
        </trans-unit>
        <trans-unit id="3506eba054bea9f2aa92527050cd8aa61b12595f" translate="yes" xml:space="preserve">
          <source>MODIFY_</source>
          <target state="translated">MODIFY_</target>
        </trans-unit>
        <trans-unit id="66bffe2295ae671e5d45439c77216938c792414b" translate="yes" xml:space="preserve">
          <source>MODULE</source>
          <target state="translated">MODULE</target>
        </trans-unit>
        <trans-unit id="a3e25a142bc9338d99e21ddb92754631acdb233f" translate="yes" xml:space="preserve">
          <source>MODULENAME is the Perl module name, e.g. Devel::SelfStubber, NOT 'Devel/SelfStubber' or 'Devel/SelfStubber.pm'.</source>
          <target state="translated">MODULENAME是Perl模块的名称,例如:Devel::SelfStubber,而不是'Devel/SelfStubber'或'Devel/SelfStubber.pm'。</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="630e8cd715da84adcb106243940c860db346e2eb" translate="yes" xml:space="preserve">
          <source>MODULES USED</source>
          <target state="translated">使用的模块</target>
        </trans-unit>
        <trans-unit id="b3c85e8affa5446d487b201bbc63d337d6d7f54d" translate="yes" xml:space="preserve">
          <source>MOD[=bar,baz]</source>
          <target state="translated">MOD[=bar,baz]</target>
        </trans-unit>
        <trans-unit id="c47b9589ffc380689e211aa66dac2ba8473cc24a" translate="yes" xml:space="preserve">
          <source>MONO CASE then sort data (for non-digits, non-underscore)</source>
          <target state="translated">MONO CASE 然后对数据进行排序(对于非数字、非下划线)。</target>
        </trans-unit>
        <trans-unit id="b537891a9c0b5c8f4e6ee16a9ec71caca75f6730" translate="yes" xml:space="preserve">
          <source>MORAL</source>
          <target state="translated">MORAL</target>
        </trans-unit>
        <trans-unit id="2c624e5265a05c5d2c6e21783801e9896aa0132f" translate="yes" xml:space="preserve">
          <source>MORE</source>
          <target state="translated">MORE</target>
        </trans-unit>
        <trans-unit id="bc4fc594140fde77e059ad4498ad554e3cbee3e9" translate="yes" xml:space="preserve">
          <source>MORE ELABORATE RECORDS</source>
          <target state="translated">更多ELABORATE记录</target>
        </trans-unit>
        <trans-unit id="64bf6c143dc817670181bbd264688b3acbcd5d5a" translate="yes" xml:space="preserve">
          <source>MORE EXAMPLES</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="9ad9881a7f17afaec8c4ae609d85b1187596ee5b" translate="yes" xml:space="preserve">
          <source>MORE INFORMATION</source>
          <target state="translated">更多信息</target>
        </trans-unit>
        <trans-unit id="76991e71012a76451fe2a0cc0849f44f697181ec" translate="yes" xml:space="preserve">
          <source>MORE READING FOR GUTS HACKERS</source>
          <target state="translated">更多GUTS HACKERS的阅读</target>
        </trans-unit>
        <trans-unit id="e7fd50abbfbafe75448c31d50672233d0a7980c6" translate="yes" xml:space="preserve">
          <source>MOREMAGIC</source>
          <target state="translated">MOREMAGIC</target>
        </trans-unit>
        <trans-unit id="abdd28bdcd2ff588ed4391e2849b71273a64ab04" translate="yes" xml:space="preserve">
          <source>MRO Functions</source>
          <target state="translated">MRO功能</target>
        </trans-unit>
        <trans-unit id="b105d95acedcd0df5c653c0e1be8aac0aa3534a5" translate="yes" xml:space="preserve">
          <source>MS-DOS</source>
          <target state="translated">MS-DOS</target>
        </trans-unit>
        <trans-unit id="304ff724cf80bd1102c4a52a83e37a5a11d51edf" translate="yes" xml:space="preserve">
          <source>MSG_BCAST, MSG_OOB, MSG_TRUNC, ...</source>
          <target state="translated">MSG_BCAST,MSG_OOB,MSG_TRUNC,...。</target>
        </trans-unit>
        <trans-unit id="95ed316aead6f0a90227220b98ed2c6a72173129" translate="yes" xml:space="preserve">
          <source>MSWin32 case-tolerance depends on GetVolumeInformation() $ouFsFlags == FS_CASE_SENSITIVE, indicating the case significance when comparing file specifications. Since XP FS_CASE_SENSITIVE is effectively disabled for the NT subsubsystem. See &lt;a href=&quot;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt; Default: 1</source>
          <target state="translated">MSWin32的区分大小写取决于GetVolumeInformation（）$ ouFsFlags == FS_CASE_SENSITIVE，指示在比较文件规范时区分大小写。由于XP FS_CASE_SENSITIVE已被NT子系统有效禁用。参见&lt;a href=&quot;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt;默认值：1</target>
        </trans-unit>
        <trans-unit id="4c8b67f6f1723257ca0a34dfc2fdb28e277dc1cd" translate="yes" xml:space="preserve">
          <source>MSWin32 case-tolerance depends on GetVolumeInformation() $ouFsFlags == FS_CASE_SENSITIVE, indicating the case significance when comparing file specifications. Since XP FS_CASE_SENSITIVE is effectively disabled for the NT subsubsystem. See &lt;a href=&quot;https://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt; Default: 1</source>
          <target state="translated">MSWin32的区分大小写取决于GetVolumeInformation（）$ ouFsFlags == FS_CASE_SENSITIVE，指示在比较文件规范时区分大小写。由于XP FS_CASE_SENSITIVE已为NT子系统有效地禁用。参见&lt;a href=&quot;https://cygwin.com/ml/cygwin/2007-07/msg00891.html&quot;&gt;http://cygwin.com/ml/cygwin/2007-07/msg00891.html&lt;/a&gt;默认值：1</target>
        </trans-unit>
        <trans-unit id="46b420891abbe816108b89b151663fa05cb3b237" translate="yes" xml:space="preserve">
          <source>MULTI-OCTET CHARACTER SETS</source>
          <target state="translated">多重八位数字符集。</target>
        </trans-unit>
        <trans-unit id="1157801a76643907eaa464d8d8b432b909f3f592" translate="yes" xml:space="preserve">
          <source>MULTICALL</source>
          <target state="translated">MULTICALL</target>
        </trans-unit>
        <trans-unit id="410655851813ae42e29a8af5e0c4bbe60816fe96" translate="yes" xml:space="preserve">
          <source>MULTITHREADED APPLICATIONS</source>
          <target state="translated">多线程应用</target>
        </trans-unit>
        <trans-unit id="112f1bc5464cbf86ad8abc28805d58542d252dc7" translate="yes" xml:space="preserve">
          <source>MUST decode</source>
          <target state="translated">必须解码</target>
        </trans-unit>
        <trans-unit id="f3f97d4e65bbf8e05b9d2003dabed48039672a9b" translate="yes" xml:space="preserve">
          <source>MUST return the octet sequence representing</source>
          <target state="translated">必须返回代表</target>
        </trans-unit>
        <trans-unit id="f37495c410f3672ad3b7e5f75ff69fe1801eda14" translate="yes" xml:space="preserve">
          <source>MUST return the string representing the IANA charset name of the encoding.</source>
          <target state="translated">必须返回代表编码的IANA charset名称的字符串。</target>
        </trans-unit>
        <trans-unit id="df44e8bf9f5bb85b1c861873578524b02eaca16a" translate="yes" xml:space="preserve">
          <source>MUST return the string representing the canonical name of the encoding.</source>
          <target state="translated">必须返回代表编码规范名称的字符串。</target>
        </trans-unit>
        <trans-unit id="4a6d2a5fac9fc009e8ef2c66dccfa9c0e7765210" translate="yes" xml:space="preserve">
          <source>MUST return the string that</source>
          <target state="translated">必须返回的字符串是</target>
        </trans-unit>
        <trans-unit id="d2008ef579d429eb9f21f1dee25cb60d820de1c0" translate="yes" xml:space="preserve">
          <source>MUTATION</source>
          <target state="translated">MUTATION</target>
        </trans-unit>
        <trans-unit id="bcbdfcff47f36a4bd295e8dcb4203d07f1343372" translate="yes" xml:space="preserve">
          <source>MYEXTLIB</source>
          <target state="translated">MYEXTLIB</target>
        </trans-unit>
        <trans-unit id="8a1a4fa060cab0b9420887b26bf1330d0275e0dd" translate="yes" xml:space="preserve">
          <source>MYMETA.json</source>
          <target state="translated">MYMETA.json</target>
        </trans-unit>
        <trans-unit id="2f5e6a42d1d484cbbde0efe806d130305e765ea2" translate="yes" xml:space="preserve">
          <source>MYMETA.yml</source>
          <target state="translated">MYMETA.yml</target>
        </trans-unit>
        <trans-unit id="c83e0148da9329e1a74fae48edd72325f87db2ab" translate="yes" xml:space="preserve">
          <source>MY_CXT</source>
          <target state="translated">MY_CXT</target>
        </trans-unit>
        <trans-unit id="c92b11ff7ab5a4c5fd081db7883c7b3a71c6ef70" translate="yes" xml:space="preserve">
          <source>MY_CXT REFERENCE</source>
          <target state="translated">MY_CXT REFERENCE</target>
        </trans-unit>
        <trans-unit id="71c4b4f77dd6aa81ae33d939a92a8e29b5de3e34" translate="yes" xml:space="preserve">
          <source>MY_CXT_CLONE</source>
          <target state="translated">MY_CXT_CLONE</target>
        </trans-unit>
        <trans-unit id="8f9145c9f6a580d204ffb3a2156f8854c633e0db" translate="yes" xml:space="preserve">
          <source>MY_CXT_INIT</source>
          <target state="translated">MY_CXT_INIT</target>
        </trans-unit>
        <trans-unit id="b0c38180ec37e61376fb7d95221d9077a44d5cc9" translate="yes" xml:space="preserve">
          <source>MY_CXT_INIT_INTERP(my_perl)</source>
          <target state="translated">MY_CXT_INIT_INTERP(my_perl)</target>
        </trans-unit>
        <trans-unit id="8d47e1fdc3a026db13eae6a6b125df6ba8c7928c" translate="yes" xml:space="preserve">
          <source>MY_CXT_KEY</source>
          <target state="translated">MY_CXT_KEY</target>
        </trans-unit>
        <trans-unit id="61ad4287cd41e2e97ad96a7d5cba5a661af2c472" translate="yes" xml:space="preserve">
          <source>MY_LIB_DIR defaults to '.' if not present.</source>
          <target state="translated">如果没有,MY_LIB_DIR默认为'.'。</target>
        </trans-unit>
        <trans-unit id="9790a85a1a9e58a2ddd68bd085adb9c931b1b046" translate="yes" xml:space="preserve">
          <source>Mac OS 9 and earlier used &lt;code&gt;:&lt;/code&gt; as a path separator instead of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">在Mac OS 9和更早的版本中，使用 &lt;code&gt;:&lt;/code&gt; 代替 &lt;code&gt;/&lt;/code&gt; 作为路径分隔符。</target>
        </trans-unit>
        <trans-unit id="b48af28979910507a72300805b16b39786c09205" translate="yes" xml:space="preserve">
          <source>Mac OS X</source>
          <target state="translated">Mac OS X</target>
        </trans-unit>
        <trans-unit id="9208982d7e71273ee9421bf88e0b53b6ad837f35" translate="yes" xml:space="preserve">
          <source>Mac OS X 10.5 &quot;Leopard&quot; and above do not require the 'u' variant.</source>
          <target state="translated">Mac OS X 10.5 &quot;Leopard &quot;及以上版本不需要 &quot;u &quot;版本。</target>
        </trans-unit>
        <trans-unit id="27e0400e4107eec8c9b3ecfab19987f0725198d4" translate="yes" xml:space="preserve">
          <source>Mac OS X documentation on syslog, &lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</source>
          <target state="translated">syslog上的Mac OS X文档，&lt;a href=&quot;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http：//developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf780731fdb5006f173d3396e62c8dc1b6431239" translate="yes" xml:space="preserve">
          <source>Mac OS X documentation on syslog, &lt;a href=&quot;https://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</source>
          <target state="translated">syslog上的Mac OS X文档，&lt;a href=&quot;https://developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&quot;&gt;http：//developer.apple.com/documentation/Darwin/Reference/ManPages/man3/syslog.3.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4c0bf3f7dab7b087f55de5614ca5cbaddeea9b9" translate="yes" xml:space="preserve">
          <source>Mac OS X ships with a dynamically-loaded libperl, but the default for this release is to compile a static libperl. The reason for this is pre-binding. Dynamic libraries can be pre-bound to a specific address in memory in order to decrease load time. To do this, one needs to be aware of the location and size of all previously-loaded libraries. Apple collects this information as part of their overall OS build process, and thus has easy access to it when building Perl, but ordinary users would need to go to a great deal of effort to obtain the information needed for pre-binding.</source>
          <target state="translated">Mac OS X 提供了一个动态加载的 libperl,但这个版本的默认值是编译一个静态 libperl。这样做的原因是预绑定。动态库可以预先绑定到内存中的特定地址,以减少加载时间。要做到这一点,需要了解所有之前加载的库的位置和大小。苹果公司将这些信息作为其整个操作系统构建过程的一部分进行收集,因此在构建Perl时很容易获得这些信息,但普通用户要想获得预绑定所需的信息,则需要花费很大的精力。</target>
        </trans-unit>
        <trans-unit id="0343b2a40016db738fa670b19df9f47fc227d16f" translate="yes" xml:space="preserve">
          <source>Mac OS X.</source>
          <target state="translated">Mac OS X。</target>
        </trans-unit>
        <trans-unit id="05365d617a6f81e5ccef6d039b61942e2b328dfe" translate="yes" xml:space="preserve">
          <source>MacOS's epoch is midnight January 1st, 1904. VMS's is midnight, November 17th, 1858, but vmsperl emulates the Unix epoch so it's not a problem.</source>
          <target state="translated">MacOS的纪元是1904年1月1日午夜。VMS的纪元是1858年11月17日午夜,但vmsperl模拟Unix的纪元,所以这不是问题。</target>
        </trans-unit>
        <trans-unit id="546928a146336cd7f40c7bb8263ae0c9584726db" translate="yes" xml:space="preserve">
          <source>Macintosh encodings don't seem to be registered in such entities as IANA. &quot;Canonical&quot; names in Encode are based upon Apple's Tech Note 1150. See &lt;a href=&quot;http://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http://developer.apple.com/technotes/tn/tn1150.html&lt;/a&gt; for details.</source>
          <target state="translated">Macintosh编码似乎未在IANA这样的实体中注册。Encode中的&amp;ldquo;规范&amp;rdquo;名称基于Apple的技术说明1150。有关详细信息，请参见&lt;a href=&quot;http://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http://developer.apple.com/technotes/tn/tn1150.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ec2f86726016fc395a6f45e7abcd45ec6840ce1" translate="yes" xml:space="preserve">
          <source>Macintosh encodings don't seem to be registered in such entities as IANA. &quot;Canonical&quot; names in Encode are based upon Apple's Tech Note 1150. See &lt;a href=&quot;https://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http://developer.apple.com/technotes/tn/tn1150.html&lt;/a&gt; for details.</source>
          <target state="translated">Macintosh编码似乎未在IANA这样的实体中注册。Encode中的&amp;ldquo;规范&amp;rdquo;名称基于Apple的技术说明1150。有关详细信息，请参见&lt;a href=&quot;https://developer.apple.com/technotes/tn/tn1150.html&quot;&gt;http://developer.apple.com/technotes/tn/tn1150.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e813bad999ce5a75f4490c8ed14ec07ab9d63a2d" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list explicitly exporting the symbols.</source>
          <target state="translated">用于声明XSUB及其C参数列表的宏,明确导出符号。</target>
        </trans-unit>
        <trans-unit id="3f0040307b52caa52d747905fa724ed6b830cee4" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list without exporting the symbols. This is handled by &lt;code&gt;xsubpp&lt;/code&gt; and generally preferable over exporting the XSUB symbols unnecessarily.</source>
          <target state="translated">宏，用于声明XSUB及其C参数列表，而无需导出符号。这由 &lt;code&gt;xsubpp&lt;/code&gt; 处理，通常优于不必要地导出XSUB符号。</target>
        </trans-unit>
        <trans-unit id="1376083aeef8a0b2b3a5461de74e71c6974c467b" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list. This is handled by &lt;code&gt;xsubpp&lt;/code&gt; . It is the same as using the more explicit XS_EXTERNAL macro.</source>
          <target state="translated">宏，用于声明XSUB及其C参数列表。这由 &lt;code&gt;xsubpp&lt;/code&gt; 处理。它与使用更明确的XS_EXTERNAL宏相同。</target>
        </trans-unit>
        <trans-unit id="e18a81f50de73a3bc24953bde393f35d1ef8d9ce" translate="yes" xml:space="preserve">
          <source>Macro to declare an XSUB and its C parameter list. This is handled by &lt;code&gt;xsubpp&lt;/code&gt;. It is the same as using the more explicit &lt;code&gt;XS_EXTERNAL&lt;/code&gt; macro.</source>
          <target state="translated">宏，用于声明XSUB及其C参数列表。这由 &lt;code&gt;xsubpp&lt;/code&gt; 处理。它与使用更明确的 &lt;code&gt;XS_EXTERNAL&lt;/code&gt; 宏相同。</target>
        </trans-unit>
        <trans-unit id="7aea32d1102862e7b6b0c8089588079d1bf46bd9" translate="yes" xml:space="preserve">
          <source>Macro to verify that a PM module's $VERSION variable matches the XS module's &lt;code&gt;XS_VERSION&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;a href=&quot;perlxs#The-VERSIONCHECK%3a-Keyword&quot;&gt;The VERSIONCHECK: Keyword in perlxs&lt;/a&gt;.</source>
          <target state="translated">用于验证PM模块的$ VERSION变量与XS模块的 &lt;code&gt;XS_VERSION&lt;/code&gt; 变量匹配的宏。这通常由 &lt;code&gt;xsubpp&lt;/code&gt; 自动处理。请参阅&lt;a href=&quot;perlxs#The-VERSIONCHECK%3a-Keyword&quot;&gt;VERSIONCHECK：perlxs中的关键字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7597f0d069d4377113f05c6161af543ea57a3c7" translate="yes" xml:space="preserve">
          <source>Macro to verify that a PM module's &lt;code&gt;$VERSION&lt;/code&gt; variable matches the XS module's &lt;code&gt;XS_VERSION&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;a href=&quot;perlxs#The-VERSIONCHECK%3A-Keyword&quot;&gt;&quot;The VERSIONCHECK: Keyword&quot; in perlxs&lt;/a&gt;.</source>
          <target state="translated">用于验证PM模块的 &lt;code&gt;$VERSION&lt;/code&gt; 变量与XS模块的 &lt;code&gt;XS_VERSION&lt;/code&gt; 变量匹配的宏。这通常由 &lt;code&gt;xsubpp&lt;/code&gt; 自动处理。请参见&lt;a href=&quot;perlxs#The-VERSIONCHECK%3A-Keyword&quot;&gt;perlxs中的&amp;ldquo; VERSIONCHECK：关键字&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66fb64fe6d247cc13c8ba2ecc02f6b2d75c4b93f" translate="yes" xml:space="preserve">
          <source>Macro to verify that the perl api version an XS module has been compiled against matches the api version of the perl interpreter it's being loaded into.</source>
          <target state="translated">宏,用于验证XS模块所编译的perl api版本是否与被加载的perl解释器的api版本一致。</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="8f66f4521e615face2c94f9f782a4b88e0deefae" translate="yes" xml:space="preserve">
          <source>Macros that have string constants and their arguments as substrings of the string constants</source>
          <target state="translated">将字符串常量及其参数作为字符串常量的子串的宏。</target>
        </trans-unit>
        <trans-unit id="25a3c890eb4b69b9115b7b04758963775564c7b0" translate="yes" xml:space="preserve">
          <source>Made 'dynamic_config' mandatory to reduce confusion</source>
          <target state="translated">将'dynamic_config'设为必填项,以减少混乱。</target>
        </trans-unit>
        <trans-unit id="696a489ce86f443d3bd7f260f57fe68b0f5e0740" translate="yes" xml:space="preserve">
          <source>Magic Autogeneration</source>
          <target state="translated">魔法自发电</target>
        </trans-unit>
        <trans-unit id="5b951438b2b5824d83645ebbc34942743d54e18e" translate="yes" xml:space="preserve">
          <source>Magic Variables</source>
          <target state="translated">魔法变量</target>
        </trans-unit>
        <trans-unit id="88fd65fe2e12d0229bfa9aa8c0f337c8c7a34525" translate="yes" xml:space="preserve">
          <source>Magic Virtual Tables</source>
          <target state="translated">魔法虚拟表</target>
        </trans-unit>
        <trans-unit id="2de64b7079eac3534ed35bf9a982a56cf8fb08a0" translate="yes" xml:space="preserve">
          <source>Magic autogeneration increases the potential for inadvertently creating self-referential structures. Currently Perl will not free self-referential structures until cycles are explicitly broken. For example,</source>
          <target state="translated">魔法自动生成增加了无意中创建自引用结构的可能性。目前Perl不会释放自引用结构,直到循环被显式打破。例如</target>
        </trans-unit>
        <trans-unit id="2e0ebd98fa5e6d797bebdd2c2d2dbacb085a7bcb" translate="yes" xml:space="preserve">
          <source>Magic constants</source>
          <target state="translated">魔法常数</target>
        </trans-unit>
        <trans-unit id="9331d05bb9a05caf542c2c62dec84da956dc266b" translate="yes" xml:space="preserve">
          <source>Magical Functions</source>
          <target state="translated">神奇的功能</target>
        </trans-unit>
        <trans-unit id="680b5ac69f610dca4407e4b841e7311dee05c4d1" translate="yes" xml:space="preserve">
          <source>Magical list constants are not supported</source>
          <target state="translated">不支持神奇的列表常数</target>
        </trans-unit>
        <trans-unit id="4bc605047ccd6740cec0a34132f6861a236ee5db" translate="yes" xml:space="preserve">
          <source>Magical values and references can be made into constants at compile time, allowing for way cool stuff like this. (These error numbers aren't totally portable, alas.)</source>
          <target state="translated">神奇的值和引用可以在编译时变成常量,从而实现像这样的酷炫的东西。(这些错误数字并不是完全可移植的,唉。)</target>
        </trans-unit>
        <trans-unit id="df66650e348a506121860cd76f075780d1c6aedd" translate="yes" xml:space="preserve">
          <source>Mail and Usenet News</source>
          <target state="translated">邮件和Usenet新闻</target>
        </trans-unit>
        <trans-unit id="c9124b10840a3572bd767d51874576c37a45a513" translate="yes" xml:space="preserve">
          <source>MailList.U</source>
          <target state="translated">MailList.U</target>
        </trans-unit>
        <trans-unit id="56482927c5fda76aa41942ba11941327d4620c99" translate="yes" xml:space="preserve">
          <source>Mailing Lists and Newsgroups</source>
          <target state="translated">邮件列表和新闻组</target>
        </trans-unit>
        <trans-unit id="d2a1123e6461654a07e49c2ea0e3f5b116e7bf06" translate="yes" xml:space="preserve">
          <source>Mailing list</source>
          <target state="translated">邮件列表</target>
        </trans-unit>
        <trans-unit id="d50c2a333e418a4af64720c969c0846d34975a97" translate="yes" xml:space="preserve">
          <source>Mailing list for Perl on OS/390</source>
          <target state="translated">OS/390上的Perl邮件列表</target>
        </trans-unit>
        <trans-unit id="8422598c648ad701facadb193807fe8a68e5374e" translate="yes" xml:space="preserve">
          <source>Mailing list: cpan-testers-discuss@perl.org</source>
          <target state="translated">邮寄名单:cpan-testers-discuss@perl.org</target>
        </trans-unit>
        <trans-unit id="34f27bf89d43b27b257ba6f69d1461ec437f5745" translate="yes" xml:space="preserve">
          <source>Main Perl library</source>
          <target state="translated">主Perl库</target>
        </trans-unit>
        <trans-unit id="e42a6ff891c095b97c9c8d1876b99ab388267a2b" translate="yes" xml:space="preserve">
          <source>Mainly listed here to shut up the pitiful screams of the pod coverage tests. They keep me awake at night.</source>
          <target state="translated">主要列在这里关闭可怜的尖叫声 荚覆盖测试。他们让我晚上睡不着觉。</target>
        </trans-unit>
        <trans-unit id="5bb034a4bb66b7bb5137187d878df13fb04beae4" translate="yes" xml:space="preserve">
          <source>Mainly used to exclude version control administrative directories and base-level</source>
          <target state="translated">主要用于排除版本控制管理目录和基层的</target>
        </trans-unit>
        <trans-unit id="2a025894cae9180557ea2537add4f6943dbc4f8b" translate="yes" xml:space="preserve">
          <source>Mainly used to exclude version control administrative directories from installation.</source>
          <target state="translated">主要用于从安装中排除版本控制管理目录。</target>
        </trans-unit>
        <trans-unit id="af2040fc4cdf263d0853758e669e36927b733e94" translate="yes" xml:space="preserve">
          <source>Maintain Round Trip Integrity</source>
          <target state="translated">保持往返的完整性</target>
        </trans-unit>
        <trans-unit id="6cc92c03b00f2d20d0dd8de351bcdf848cd97ae9" translate="yes" xml:space="preserve">
          <source>Maintained by Ken Williams &amp;lt;KWILLIAMS@cpan.org&amp;gt;</source>
          <target state="translated">由Ken Williams维护&amp;lt;KWILLIAMS@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="809e72cee268c819612dba25360f847662fc4877" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern</source>
          <target state="translated">由Michael G Schwern维护</target>
        </trans-unit>
        <trans-unit id="3d8d67b0bc713d08e1431289fef2c4da24e0a6d9" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; within the ExtUtils-MakeMaker package and, as a separate CPAN package, by Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; .</source>
          <target state="translated">由Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; 维护在ExtUtils-MakeMaker软件包中，作为单独的CPAN软件包，由Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; 维护。</target>
        </trans-unit>
        <trans-unit id="d8d07256ae5a012857da9cd78f0221bd4cddaeb8" translate="yes" xml:space="preserve">
          <source>Maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; within the ExtUtils-MakeMaker package and, as a separate CPAN package, by Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt;.</source>
          <target state="translated">由Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; 在ExtUtils-MakeMaker软件包中维护，作为一个单独的CPAN软件包，由Randy Kobes &lt;code&gt;r.kobes@uwinnipeg.ca&lt;/code&gt; 维护。</target>
        </trans-unit>
        <trans-unit id="7fabc766fc2d9f0543a1727cc606d915b6b064d9" translate="yes" xml:space="preserve">
          <source>Maintained by Peter John Acklam &amp;lt;pjacklam@gmail.com&amp;lt;gt&amp;gt;, 2014-.</source>
          <target state="translated">由Peter John Acklam &amp;lt;pjacklam@gmail.com &amp;lt;&amp;gt;&amp;gt;维护，2014-。</target>
        </trans-unit>
        <trans-unit id="471bc1c750a06353374af1e53ce3ea6cd2e96c5b" translate="yes" xml:space="preserve">
          <source>Maintained by Peter John Acklam &amp;lt;pjacklam@online.no&amp;gt; 2011-</source>
          <target state="translated">由Peter John Acklam维护&amp;lt;pjacklam@online.no&amp;gt; 2011-</target>
        </trans-unit>
        <trans-unit id="66e8214c4bf741c76a84a61b0611d2148c0182fd" translate="yes" xml:space="preserve">
          <source>Maintained by:</source>
          <target state="translated">维护者:</target>
        </trans-unit>
        <trans-unit id="0fb7ae643e6e22eda1f0c20766a595198d76696b" translate="yes" xml:space="preserve">
          <source>Maintained since 1996 by The Perl Porters &amp;lt;</source>
          <target state="translated">自1996年以来由Perl Porters进行维护&amp;lt;</target>
        </trans-unit>
        <trans-unit id="643bbd5f57059016b08fdfc7624d83297d263211" translate="yes" xml:space="preserve">
          <source>Maintainer note:</source>
          <target state="translated">维护者说明:</target>
        </trans-unit>
        <trans-unit id="8a3300746df857e116a8c0e1c6dce416561209ca" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release is Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;. Contact him with technical difficulties with respect to the packaging of the CPAN module.</source>
          <target state="translated">CPAN版本的维护者是Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;。有关CPAN模块包装方面的技术困难，请与他联系。</target>
        </trans-unit>
        <trans-unit id="430b90ac2c360a8a68d16871970bc138c6d2cbdd" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release is Steffen Mueller (smueller@cpan.org). Contact him with technical difficulties with respect to the packaging of the CPAN module.</source>
          <target state="translated">CPAN版本的维护者是Steffen Mueller (smueller@cpan.org)。如果在CPAN模块打包方面遇到技术困难,请与他联系。</target>
        </trans-unit>
        <trans-unit id="b4afb7f985f5bfec03da261851d526768b0a7bd1" translate="yes" xml:space="preserve">
          <source>Maintainer of the CPAN release: Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;</source>
          <target state="translated">CPAN版本的维护者：Steffen Mueller &amp;lt;smueller@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="53ca95cbad19caeb958b071a4ed842e8b82f2816" translate="yes" xml:space="preserve">
          <source>Maintainer: Alexandr Ciornii &amp;lt;alexchornyATgmail.com&amp;gt;.</source>
          <target state="translated">维护者：Alexandr Ciornii &amp;lt;alexchornyATgmail.com&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="619bd6770e2cd62e7bc43b49020d0710c816e356" translate="yes" xml:space="preserve">
          <source>Maintainer: The Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</source>
          <target state="translated">维护者：Perl5-Porters &amp;lt;perl5-porters@perl.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5ce563e21b8be07e4d9e4006d6894792ae6105a5" translate="yes" xml:space="preserve">
          <source>Maintainers</source>
          <target state="translated">Maintainers</target>
        </trans-unit>
        <trans-unit id="2a2a346bb89ad48931388628d64c4379a03e9c7a" translate="yes" xml:space="preserve">
          <source>Maintainers.pl</source>
          <target state="translated">Maintainers.pl</target>
        </trans-unit>
        <trans-unit id="82aa676cb87f65983d0f9f426c9258e2f5ab0e48" translate="yes" xml:space="preserve">
          <source>Maintainers.pm</source>
          <target state="translated">Maintainers.pm</target>
        </trans-unit>
        <trans-unit id="9c61980ffa7774c0d3835c4f170771e00a8354d6" translate="yes" xml:space="preserve">
          <source>Maintaining a bundle definition file means keeping track of two things: dependencies and interactivity. CPAN.pm sometimes fails on calculating dependencies because not all modules define all MakeMaker attributes correctly, so a bundle definition file should specify prerequisites as early as possible. On the other hand, it's annoying that so many distributions need some interactive configuring. So what you can try to accomplish in your private bundle file is to have the packages that need to be configured early in the file and the gentle ones later, so you can go out for coffee after a few minutes and leave CPAN.pm to churn away unattended.</source>
          <target state="translated">维护一个bundle定义文件意味着要跟踪两件事:依赖性和交互性。CPAN.pm有时会在计算依赖性时失败,因为并不是所有模块都能正确定义所有MakeMaker属性,所以bundle定义文件应该尽早指定前提条件。另一方面,很多发行版都需要一些交互式的配置,这很烦人。所以你可以尝试在你的私有捆绑文件中实现的是,把需要配置的包早早地放在文件中,温柔的包放在后面,这样你就可以在几分钟后出去喝咖啡,让CPAN.pm在无人看管的情况下搅局。</target>
        </trans-unit>
        <trans-unit id="683b0250521f89ab5a7d8609ffca71e78293a058" translate="yes" xml:space="preserve">
          <source>Maintaining a persistent interpreter</source>
          <target state="translated">维持一个持久的口译员</target>
        </trans-unit>
        <trans-unit id="e88a9990f5d2ac06c40799dcdbc0bd3efadf5b36" translate="yes" xml:space="preserve">
          <source>Maintaining multiple interpreter instances</source>
          <target state="translated">维护多个解释器实例</target>
        </trans-unit>
        <trans-unit id="b029f6d7dda6875610cf345a0d379a80456960cd" translate="yes" xml:space="preserve">
          <source>Maintaining the urllist parameter</source>
          <target state="translated">维护urllist参数</target>
        </trans-unit>
        <trans-unit id="6f70b10eb8a3bbc7f2d0b2c546e6531ac6d2bbc3" translate="yes" xml:space="preserve">
          <source>Maintenance is now done by cperl &lt;a href=&quot;http://perl11.org/cperl&quot;&gt;http://perl11.org/cperl&lt;/a&gt;</source>
          <target state="translated">维护现在由cperl &lt;a href=&quot;http://perl11.org/cperl&quot;&gt;http://perl11.org/cperl&lt;/a&gt;完成</target>
        </trans-unit>
        <trans-unit id="ecb8b463e1c71f307f7fc72628792a15f4e1bd31" translate="yes" xml:space="preserve">
          <source>Maintenance is now done by the perl5-porters</source>
          <target state="translated">维护工作现在由perl5-porters完成。</target>
        </trans-unit>
        <trans-unit id="181c04cdf23fecb3236b336490e5b2cafa1a0b7f" translate="yes" xml:space="preserve">
          <source>Maintenance versions should only be altered to add critical bug fixes, see &lt;a href=&quot;perlpolicy&quot;&gt;perlpolicy&lt;/a&gt;.</source>
          <target state="translated">只能更改维护版本以添加重要的错误修复程序，请参见&lt;a href=&quot;perlpolicy&quot;&gt;perlpolicy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ed12a7152f7b0abf838c20d65d39c62ba0a8766" translate="yes" xml:space="preserve">
          <source>Makamaka Hannyaharamitu, &amp;lt;makamaka[at]cpan.org&amp;gt;</source>
          <target state="translated">Makamaka Hannyaharamitu, &amp;lt;makamaka[at]cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a94431ee22f05f141107f9355ed3127d0f0c4d5a" translate="yes" xml:space="preserve">
          <source>Make</source>
          <target state="translated">Make</target>
        </trans-unit>
        <trans-unit id="890209e34ccf3fc03b7d07817868a97cdbfea649" translate="yes" xml:space="preserve">
          <source>Make Rule 1</source>
          <target state="translated">制定规则1</target>
        </trans-unit>
        <trans-unit id="c7128fd2836e77abc7fc2fd97115996dd6b6b258" translate="yes" xml:space="preserve">
          <source>Make Rule 2</source>
          <target state="translated">制定规则2</target>
        </trans-unit>
        <trans-unit id="04eff5d74d7ffc64b3c7d9b1b09aff266f1e0a57" translate="yes" xml:space="preserve">
          <source>Make a bootstrap file for use by DynaLoader</source>
          <target state="translated">制作一个引导文件,供DynaLoader使用。</target>
        </trans-unit>
        <trans-unit id="1b789b62a7dc7a41add071dab3e403c719b4a9f2" translate="yes" xml:space="preserve">
          <source>Make a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;&quot;LIGHTWEIGHT CALLBACKS&quot; in perlcall&lt;/a&gt;.</source>
          <target state="translated">进行轻量级回调。请参阅&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall中的&amp;ldquo;轻量级回调&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a9fad7783334940c292ba0169f35e46fcaae627" translate="yes" xml:space="preserve">
          <source>Make a lightweight callback. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">进行轻量级回调。请参阅&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall中的轻量级回调&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9cb6efc54c38064ba236700f9dcc12b0629e07ff" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">制作一个新的&lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt;对象并返回它。传递给定的任何参数。</target>
        </trans-unit>
        <trans-unit id="f15e6a07de5aec5f1e96a02e428c35fecd418678" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">制作一个新的&lt;a href=&quot;TAP::Parser::IteratorFactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;对象并返回它。传递给定的任何参数。</target>
        </trans-unit>
        <trans-unit id="ea4827e6585683095f4c0885205596b5426a5ef3" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object using the parser's &lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;, and return it. Passes through any arguments given.</source>
          <target state="translated">使用解析器的&lt;a href=&quot;TAP::Parser::ResultFactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt;新建一个&lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;对象，然后将其返回。传递给定的任何参数。</target>
        </trans-unit>
        <trans-unit id="2b212bd484216f27062e119a0984e12eb2f1ca4b" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">新建一个&lt;a href=&quot;parser/grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt;对象并返回它。传递给定的任何参数。</target>
        </trans-unit>
        <trans-unit id="d5ad132f57df20c380d03727edf6efc89d530812" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; object and return it. Passes through any arguments given.</source>
          <target state="translated">新建一个&lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;对象并返回它。传递给定的任何参数。</target>
        </trans-unit>
        <trans-unit id="fa28fa8c90cb86c9b3f8c83899652b5dd29ba4e0" translate="yes" xml:space="preserve">
          <source>Make a new &lt;a href=&quot;parser/result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object using the parser's &lt;a href=&quot;parser/resultfactory&quot;&gt;TAP::Parser::ResultFactory&lt;/a&gt;, and return it. Passes through any arguments given.</source>
          <target state="translated">使用解析器的&lt;a href=&quot;parser/resultfactory&quot;&gt;TAP :: Parser :: ResultFactory&lt;/a&gt;新建一个&lt;a href=&quot;parser/result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;对象，然后将其返回。传递给定的任何参数。</target>
        </trans-unit>
        <trans-unit id="3a0cb5edb690cd6db709e001b8158abfba90d3f9" translate="yes" xml:space="preserve">
          <source>Make a new parser and display formatter session. Typically used and/or overridden in subclasses.</source>
          <target state="translated">制作一个新的解析器和显示formatter会话。通常在子类中使用和/或重写。</target>
        </trans-unit>
        <trans-unit id="f4f6bf31d70d3b5261f262791889974009fba962" translate="yes" xml:space="preserve">
          <source>Make and return a complete copy of the cop hints hash</source>
          <target state="translated">制作并返还一份完整的警察提示哈希。</target>
        </trans-unit>
        <trans-unit id="ad04abc96b9c23f58bf05411355a885d67609d70" translate="yes" xml:space="preserve">
          <source>Make and return a complete copy of the cop hints hash &lt;code&gt;cophh&lt;/code&gt;.</source>
          <target state="translated">制作并返回警察提示哈希 &lt;code&gt;cophh&lt;/code&gt; 的完整副本。</target>
        </trans-unit>
        <trans-unit id="5b886b01d91d82d72977b5c37dc6c5f47e7167a8" translate="yes" xml:space="preserve">
          <source>Make bsd_glob() return an error (GLOB_NOSPACE) when the pattern expands to a size bigger than the system constant &lt;code&gt;ARG_MAX&lt;/code&gt; (usually found in limits.h). If your system does not define this constant, bsd_glob() uses &lt;code&gt;sysconf(_SC_ARG_MAX)&lt;/code&gt; or &lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt; where available (in that order). You can inspect these values using the standard &lt;code&gt;POSIX&lt;/code&gt; extension.</source>
          <target state="translated">当模式扩展到大于系统常数 &lt;code&gt;ARG_MAX&lt;/code&gt; （通常在limits.h中找到）的大小时，使bsd_glob（）返回错误（GLOB_NOSPACE ）。如果您的系统未定义此常数，则bsd_glob（）使用 &lt;code&gt;sysconf(_SC_ARG_MAX)&lt;/code&gt; 或 &lt;code&gt;_POSIX_ARG_MAX&lt;/code&gt; （按该顺序）。您可以使用标准 &lt;code&gt;POSIX&lt;/code&gt; 扩展名检查这些值。</target>
        </trans-unit>
        <trans-unit id="08523af5b76fef9eaed2b77615eb4a213597d67b" translate="yes" xml:space="preserve">
          <source>Make functions faster by trading space for time</source>
          <target state="translated">以空间换时间,让功能更快</target>
        </trans-unit>
        <trans-unit id="6103567e9e837abb5d1943da6a6814ed98577b8b" translate="yes" xml:space="preserve">
          <source>Make pattern matching case-insensitive.</source>
          <target state="translated">使模式匹配不区分大小写。</target>
        </trans-unit>
        <trans-unit id="4b434c4028abbf501b87f9ee8429bc6772c12c60" translate="yes" xml:space="preserve">
          <source>Make perl executable and create a symlink for libperl:</source>
          <target state="translated">使 perl 可执行,并为 libperl 创建一个符号链接。</target>
        </trans-unit>
        <trans-unit id="cb00e29cd519edaa5436add62cd37675b6854ffa" translate="yes" xml:space="preserve">
          <source>Make some changes, build perl and test your changes, then commit them to your local branch. Then push your local branch to a remote smoke-me branch:</source>
          <target state="translated">做一些改动,构建 perl 并测试你的改动,然后提交到你的本地分支。然后把你的本地分支推送到远程的smoke-me分支。</target>
        </trans-unit>
        <trans-unit id="c9c4fd59ea8eb511f1da67cfee226b250f7a4749" translate="yes" xml:space="preserve">
          <source>Make sure &lt;a href=&quot;#gethostbyname-NAME&quot;&gt;&lt;code&gt;gethostbyname&lt;/code&gt;&lt;/a&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">确保在SCALAR上下文中调用&lt;a href=&quot;#gethostbyname-NAME&quot;&gt; &lt;code&gt;gethostbyname&lt;/code&gt; &lt;/a&gt;，并检查其返回值是否已定义。</target>
        </trans-unit>
        <trans-unit id="631c39697ec2fc47f9fdac3b73868b5eac8535e4" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">确保在SCALAR上下文中调用 &lt;code&gt;&lt;a href=&quot;functions/gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; ，并检查其返回值是否已定义。</target>
        </trans-unit>
        <trans-unit id="1af92bfd9067c908f166333d8740f6095af6a588" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;&lt;a href=&quot;gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; is called in SCALAR context and that its return value is checked for definedness.</source>
          <target state="translated">确保在SCALAR上下文中调用 &lt;code&gt;&lt;a href=&quot;gethostbyname&quot;&gt;gethostbyname()&lt;/a&gt;&lt;/code&gt; ，并检查其返回值是否已定义。</target>
        </trans-unit>
        <trans-unit id="9aee806c3df793514446c4364ffe009cca7c0176" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;CPAN.pm&lt;/code&gt; can download files from CPAN. If not, you may need to manually install &lt;code&gt;Net::FTP&lt;/code&gt; .</source>
          <target state="translated">确保 &lt;code&gt;CPAN.pm&lt;/code&gt; 可以从CPAN下载文件。如果没有，您可能需要手动安装 &lt;code&gt;Net::FTP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ab54a8b3ec25f60b45ddf50dac5e3bb5f61317d" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;CPAN.pm&lt;/code&gt; can download files from CPAN. If not, you may need to manually install &lt;code&gt;Net::FTP&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;CPAN.pm&lt;/code&gt; 可以从CPAN下载文件。如果没有，您可能需要手动安装 &lt;code&gt;Net::FTP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d90bf5e032808a1790937eefc282a0216577eb91" translate="yes" xml:space="preserve">
          <source>Make sure that the directory &lt;b&gt;above&lt;/b&gt; the directory with manpages is on our &lt;code&gt;MANPATH&lt;/code&gt; , like this</source>
          <target state="translated">确保带有手册页的目录&lt;b&gt;上方&lt;/b&gt;的目录在我们的 &lt;code&gt;MANPATH&lt;/code&gt; 上，像这样</target>
        </trans-unit>
        <trans-unit id="a8decd758e6ca0f6998ca613347958cb822b733d" translate="yes" xml:space="preserve">
          <source>Make sure that the directory &lt;b&gt;above&lt;/b&gt; the directory with manpages is on our &lt;code&gt;MANPATH&lt;/code&gt;, like this</source>
          <target state="translated">确保带有手册页的目录&lt;b&gt;上方&lt;/b&gt;的目录位于我们的 &lt;code&gt;MANPATH&lt;/code&gt; 上，像这样</target>
        </trans-unit>
        <trans-unit id="6d62a68cc52f846e8b7cd7e34bad20513f656424" translate="yes" xml:space="preserve">
          <source>Make sure that the installed modules are actually installed in the location of the new Perl, and are not inherited from entries of @INC given for inheritance from the older versions of Perl: set &lt;code&gt;PERLLIB_582_PREFIX&lt;/code&gt; to redirect the new version of Perl to a new location, and copy the installed files to this new location. Redo the tests to make sure that the versions of modules inherited from older versions of Perl are not needed.</source>
          <target state="translated">确保已安装的模块实际上安装在新的Perl的位置，并且没有从为从旧版本的Perl继承而提供的@INC条目继承而来：设置 &lt;code&gt;PERLLIB_582_PREFIX&lt;/code&gt; 以将新版本的Perl重定向到新位置，并将安装的文件复制到此新位置。重做测试，以确保不需要从较早版本的Perl继承的模块版本。</target>
        </trans-unit>
        <trans-unit id="8e40ae3a79feffa50f9360f35cfc29b12c2563ad" translate="yes" xml:space="preserve">
          <source>Make sure that you &lt;code&gt;make realclean&lt;/code&gt; in your copy of Perl to remove any build artifacts, or you may get a confusing result.</source>
          <target state="translated">确保在Perl副本 &lt;code&gt;make realclean&lt;/code&gt; 删除所有构建构件，否则可能会导致混淆。</target>
        </trans-unit>
        <trans-unit id="c48620eee0813f53db06b1d13fb05c7d0b30ec92" translate="yes" xml:space="preserve">
          <source>Make sure that your module has a license, and that the full text of it is included in the distribution (unless it's a common one and the terms of the license don't require you to include it).</source>
          <target state="translated">确保你的模块有一个许可证,并且它的全文包含在发行版中(除非它是一个普通的许可证,并且许可证的条款不要求你包含它)。</target>
        </trans-unit>
        <trans-unit id="b4b22689c7f11757036113b227d7cdc8128156e0" translate="yes" xml:space="preserve">
          <source>Make sure the commit message describes your change in a single sentence. For example, &quot;Fixed spelling errors in perlhack.pod&quot;.</source>
          <target state="translated">确保提交信息用一句话来描述你的修改,比如 &quot;修正了perlhack.pod中的拼写错误&quot;。例如,&quot;修正了 perlhack.pod 中的拼写错误&quot;。</target>
        </trans-unit>
        <trans-unit id="31c004e759b68f9d5539083901242f08c624a89b" translate="yes" xml:space="preserve">
          <source>Make sure the newlines for the modules are in Mac format, not Unix format. If they are not then you might have decompressed them incorrectly. Check your decompression and unpacking utilities settings to make sure they are translating text files properly.</source>
          <target state="translated">确保模块的换行是Mac格式,而不是Unix格式。如果不是,那么你可能解压错误。检查你的解压和解压工具设置,以确保它们正确翻译文本文件。</target>
        </trans-unit>
        <trans-unit id="0da095bfcf60a5da0d5078d4fb200d212838fa47" translate="yes" xml:space="preserve">
          <source>Make sure the patch is not reversed (the first argument to diff is typically the original file, the second argument your changed file). Make sure you test your patch by applying it with &lt;code&gt;git am&lt;/code&gt; or the &lt;code&gt;patch&lt;/code&gt; program before you send it on its way. Try to follow the same style as the code you are trying to patch. Make sure your patch really does work (&lt;code&gt;make test&lt;/code&gt; , if the thing you're patching is covered by Perl's test suite).</source>
          <target state="translated">确保补丁没有反转（diff的第一个参数通常是原始文件，第二个参数是更改后的文件）。在发送 &lt;code&gt;patch&lt;/code&gt; 之前，请确保使用 &lt;code&gt;git am&lt;/code&gt; 或补丁程序对其进行测试。尝试遵循与您要修补的代码相同的样式。确保你的补丁确实工作（ &lt;code&gt;make test&lt;/code&gt; ，如果事情你是修补由Perl的测试套件覆盖）。</target>
        </trans-unit>
        <trans-unit id="bda29a86fe66e1909a0c4600719933cf688a2cb2" translate="yes" xml:space="preserve">
          <source>Make sure the patch is not reversed (the first argument to diff is typically the original file, the second argument your changed file). Make sure you test your patch by applying it with &lt;code&gt;git am&lt;/code&gt; or the &lt;code&gt;patch&lt;/code&gt; program before you send it on its way. Try to follow the same style as the code you are trying to patch. Make sure your patch really does work (&lt;code&gt;make test&lt;/code&gt;, if the thing you're patching is covered by Perl's test suite).</source>
          <target state="translated">确保补丁没有反转（diff的第一个参数通常是原始文件，第二个参数是更改后的文件）。在发送 &lt;code&gt;patch&lt;/code&gt; 之前，请确保通过使用 &lt;code&gt;git am&lt;/code&gt; 或补丁程序对其进行测试，以测试您的补丁。尝试遵循与您要修补的代码相同的样式。确保你的补丁确实工作（ &lt;code&gt;make test&lt;/code&gt; ，如果事情你是修补由Perl的测试套件覆盖）。</target>
        </trans-unit>
        <trans-unit id="6fe3ef49c50e09399f8e7e0ae50f650120ed9ba3" translate="yes" xml:space="preserve">
          <source>Make sure the path to the build directory does not contain spaces. The build usually works in this circumstance, but some tests will fail.</source>
          <target state="translated">确保通往构建目录的路径不包含空格。在这种情况下,构建通常会成功,但有些测试会失败。</target>
        </trans-unit>
        <trans-unit id="b12b8debe1b2db03630198cf21bf4b854e3bc2a9" translate="yes" xml:space="preserve">
          <source>Make sure to read about creating modules in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; and the perils of indirect objects in &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;&quot;Method Invocation&quot; in perlobj&lt;/a&gt;.</source>
          <target state="translated">确保阅读有关在&lt;a href=&quot;perlmod&quot;&gt;perlmod中&lt;/a&gt;创建模块和在perlobj中的&lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;&amp;ldquo;方法调用&amp;rdquo;中创建&lt;/a&gt;间接对象​​的风险的信息。</target>
        </trans-unit>
        <trans-unit id="b25e9d6769a32bda0cb16adea51fc9a9577bd44e" translate="yes" xml:space="preserve">
          <source>Make sure to read about creating modules in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; and the perils of indirect objects in &lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;Method Invocation in perlobj&lt;/a&gt;.</source>
          <target state="translated">确保阅读有关在&lt;a href=&quot;perlmod&quot;&gt;perlmod中&lt;/a&gt;创建模块和在perlobj中的&lt;a href=&quot;perlobj#Method-Invocation&quot;&gt;Method Invocation中&lt;/a&gt;间接对象​​的风险的信息。</target>
        </trans-unit>
        <trans-unit id="83ed513e31fceec21b34e65bf0ccb8e2f135bfc2" translate="yes" xml:space="preserve">
          <source>Make sure you are in the &quot;win32&quot; subdirectory under the perl toplevel. This directory contains a &quot;Makefile&quot; that will work with versions of nmake that come with Visual C++ or the Windows SDK, and a GNU make &quot;GNUmakefile&quot; or dmake &quot;makefile.mk&quot; that will work for all supported compilers. The defaults in the gmake and dmake makefile are setup to build using MinGW/gcc.</source>
          <target state="translated">确保你在perl toplevel下的 &quot;win32 &quot;子目录中。这个目录中包含了一个 &quot;Makefile&quot;,它可以和Visual C++或Windows SDK中的nmake版本一起使用,还有一个GNU make &quot;GNUmakefile &quot;或dmake &quot;makefile.mk&quot;,它可以和所有支持的编译器一起使用。gmake和dmake makefile中的默认设置是使用MinGW/gcc构建。</target>
        </trans-unit>
        <trans-unit id="c9bbcc12fd16263e19bc5318e960269249316b2e" translate="yes" xml:space="preserve">
          <source>Make sure you are in the &quot;win32&quot; subdirectory under the perl toplevel. This directory contains a &quot;Makefile&quot; that will work with versions of nmake that come with Visual C++ or the Windows SDK, and a dmake &quot;makefile.mk&quot; that will work for all supported compilers. The defaults in the dmake makefile are setup to build using MinGW/gcc.</source>
          <target state="translated">确保你在perl toplevel下的 &quot;win32 &quot;子目录中。这个目录包含了一个 &quot;Makefile&quot;,它可以和Visual C++或Windows SDK中的nmake版本一起使用,还有一个dmake &quot;makefile.mk&quot;,它可以和所有支持的编译器一起使用。dmake makefile中的默认设置是使用MinGW/gcc构建。</target>
        </trans-unit>
        <trans-unit id="b578a0bba566a5e009cf7a1e8f93afb16265f4fa" translate="yes" xml:space="preserve">
          <source>Make sure you choose an appropriate name for your module early on. This will help people find and remember your module, and make programming with your module more intuitive.</source>
          <target state="translated">确保你在早期为你的模块选择一个合适的名字。这将帮助人们找到并记住你的模块,并使你的模块编程更加直观。</target>
        </trans-unit>
        <trans-unit id="b8dca7eb87954059e67d6baf9d117854dccfc284" translate="yes" xml:space="preserve">
          <source>Make sure you have MMS (from Digital) or the freeware MMK ( available from MadGoat at &lt;a href=&quot;http://www.madgoat.com&quot;&gt;http://www.madgoat.com&lt;/a&gt; ). Then type this to create the DESCRIP.MMS for the module:</source>
          <target state="translated">确保您拥有MMS（来自Digital）或免费软件MMK（可从MadGoat &lt;a href=&quot;http://www.madgoat.com&quot;&gt;网站http://www.madgoat.com获得&lt;/a&gt;）。然后键入以下内容以为模块创建DESCRIP.MMS：</target>
        </trans-unit>
        <trans-unit id="41203b5dff78423d936ef4a4e1c0f8291555b765" translate="yes" xml:space="preserve">
          <source>Make sure you have a good commit message. See &lt;a href=&quot;perlhack#Commit-message&quot;&gt;&quot;Commit message&quot; in perlhack&lt;/a&gt; for details.</source>
          <target state="translated">确保您有一个良好的提交消息。有关详细信息，请参见&lt;a href=&quot;perlhack#Commit-message&quot;&gt;perlhack中的&amp;ldquo;提交消息&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45bcb550cc19143c5e8dd91291c0c6d1da90642e" translate="yes" xml:space="preserve">
          <source>Make sure you have the appropriate permissions to install the module in your Perl 5 library directory. Often, you'll need to be root.</source>
          <target state="translated">确保你有适当的权限在你的Perl 5库目录下安装该模块。通常情况下,你需要有root权限。</target>
        </trans-unit>
        <trans-unit id="8c6288609b67d4900e3a7acdb0708c647b7ddea0" translate="yes" xml:space="preserve">
          <source>Make sure you use a tab and not spaces on the lines beginning with &quot;$(AR)&quot; and &quot;$(RANLIB)&quot;. Make will not function properly if you use spaces. It has also been reported that the &quot;cr&quot; argument to $(AR) is unnecessary on Win32 systems.</source>
          <target state="translated">确保在&quot;$(AR)&quot;和&quot;$(RANLIB)&quot;开头的行上使用制表符而不是空格。如果你使用空格,Make将无法正常运行。也有报道称,在Win32系统上,$(AR)的 &quot;cr &quot;参数是不必要的。</target>
        </trans-unit>
        <trans-unit id="6aa0752b0b4c6627413012df0488bf1ad6b435f3" translate="yes" xml:space="preserve">
          <source>Make sure your PATH includes the compiler (/opt/SUNWspro/bin/ if you're using Sun's compiler) as well as /usr/ccs/bin/ to pick up the other development tools (such as make, ar, as, and ld). Make sure your path either doesn't include /usr/ucb or that it includes it after the compiler and compiler tools and other standard Solaris directories. You definitely don't want /usr/ucb/cc.</source>
          <target state="translated">确保你的PATH包括编译器(/opt/SUNWspro/bin/,如果你使用的是Sun的编译器),以及/usr/ccs/bin/来获取其他开发工具(如make、ar、as和ld)。确保你的路径要么不包括/usr/ucb,要么在编译器和编译工具以及其他标准的Solaris目录之后包括它。你肯定不想让/usr/ucb/cc。</target>
        </trans-unit>
        <trans-unit id="da98ff8151fcc7f9259493c3bc630b4f6abd18b6" translate="yes" xml:space="preserve">
          <source>Make sure your gcc is good for &lt;code&gt;-Zomf&lt;/code&gt; linking: run &lt;code&gt;omflibs&lt;/code&gt; script in</source>
          <target state="translated">确保您的gcc适合 &lt;code&gt;-Zomf&lt;/code&gt; 链接：在以下位置运行 &lt;code&gt;omflibs&lt;/code&gt; 脚本</target>
        </trans-unit>
        <trans-unit id="a248163580a9e29ef4a7312495856815f271337b" translate="yes" xml:space="preserve">
          <source>Make the first argument a copy of the second, then delete the original. The target SV physically takes over ownership of the body of the source SV and inherits its flags; however, the target keeps any magic it owns, and any magic in the source is discarded. Note that this is a rather specialist SV copying operation; most of the time you'll want to use &lt;code&gt;sv_setsv&lt;/code&gt; or one of its many macro front-ends.</source>
          <target state="translated">将第一个参数复制为第二个参数，然后删除原始参数。目标SV物理上接管源SV主体的所有权并继承其标志；但是，目标保留其拥有的所有魔咒，而源中的任何魔咒也会被丢弃。请注意，这是相当专业的SV复制操作。大多数时候，您会想使用 &lt;code&gt;sv_setsv&lt;/code&gt; 或它的许多宏前端之一。</target>
        </trans-unit>
        <trans-unit id="f4bb5d8584647cb5cbfe371da2ee93cc6742e08f" translate="yes" xml:space="preserve">
          <source>Make the most of the opportunity.</source>
          <target state="translated">充分利用机会。</target>
        </trans-unit>
        <trans-unit id="0aff0a17d7bda6c607f6b94065807887a26ea78b" translate="yes" xml:space="preserve">
          <source>Make the specified modules.</source>
          <target state="translated">制作指定的模块。</target>
        </trans-unit>
        <trans-unit id="87a3a748935c5363a3cfdc69fbfc39c4592f4900" translate="yes" xml:space="preserve">
          <source>Make the string $content be the content for the file named $file.</source>
          <target state="translated">让字符串$content成为名为$file的文件的内容。</target>
        </trans-unit>
        <trans-unit id="b14a5a45500c708bfc2adecf45938f8ddfc95c0a" translate="yes" xml:space="preserve">
          <source>Make updating the '1..42' string unnecessary. Or make sure that you update it.</source>
          <target state="translated">让更新'1...42'这个字符串没有必要。或者确保你更新它。</target>
        </trans-unit>
        <trans-unit id="fec86bec8c09394515f33cb2e0c1c11e1bbbc3fc" translate="yes" xml:space="preserve">
          <source>Make your change</source>
          <target state="translated">找零</target>
        </trans-unit>
        <trans-unit id="596d9cf2b55f30476a38bd041bc47cf1626a134d" translate="yes" xml:space="preserve">
          <source>Make your module use the Test::Tester::Capture object instead of the Test::Builder one. How to do this depends on your module but assuming that your module holds the Test::Builder object in $Test and that all your test routines access it through $Test then providing a function something like this</source>
          <target state="translated">让你的模块使用 Test::Tester::Capture 对象而不是 Test::Builder 对象。如何做到这一点取决于你的模块,但是假设你的模块在$Test中保存了Test::Builder对象,并且你所有的测试例程都通过$Test来访问它,那么提供一个类似这样的函数。</target>
        </trans-unit>
        <trans-unit id="951e86d639f2ed613d02f1c077ce05396f017abb" translate="yes" xml:space="preserve">
          <source>MakeMaker (as of 6.31) and Module::Build (as of 0.28) both can install to the same locations using the &quot;install_base&quot; concept. See &lt;a href=&quot;../makemaker#INSTALL_BASE&quot;&gt;INSTALL_BASE in ExtUtils::MakeMaker&lt;/a&gt; for details. To get MM and MB to install to the same location simply set INSTALL_BASE in MM and &lt;code&gt;--install_base&lt;/code&gt; in MB to the same location.</source>
          <target state="translated">MakeMaker（自6.31起）和Module :: Build（自0.28起）都可以使用&amp;ldquo; install_base&amp;rdquo;概念安装到相同位置。有关详细信息，请参见&lt;a href=&quot;../makemaker#INSTALL_BASE&quot;&gt;ExtUtils :: MakeMaker中的INSTALL_BASE&lt;/a&gt;。要使MM和MB安装到同一位置，只需将MM中的INSTALL_BASE设置为MB，将MB中的 &lt;code&gt;--install_base&lt;/code&gt; 设置为相同位置。</target>
        </trans-unit>
        <trans-unit id="5c9d90bcb0e3741266cfc2e63ed8d7436fe1c84f" translate="yes" xml:space="preserve">
          <source>MakeMaker (as of 6.31) and Module::Build (as of 0.28) both can install to the same locations using the &quot;install_base&quot; concept. See &lt;a href=&quot;ExtUtils::MakeMaker#INSTALL_BASE&quot;&gt;&quot;INSTALL_BASE&quot; in ExtUtils::MakeMaker&lt;/a&gt; for details. To get MM and MB to install to the same location simply set INSTALL_BASE in MM and &lt;code&gt;--install_base&lt;/code&gt; in MB to the same location.</source>
          <target state="translated">MakeMaker（自6.31起）和Module :: Build（自0.28起）都可以使用&amp;ldquo; install_base&amp;rdquo;概念安装到相同位置。有关详细信息，请参见&lt;a href=&quot;ExtUtils::MakeMaker#INSTALL_BASE&quot;&gt;ExtUtils :: MakeMaker中的&amp;ldquo; INSTALL_BASE&amp;rdquo;&lt;/a&gt;。要使MM和MB安装到同一位置，只需将MM中的INSTALL_BASE和MB中的 &lt;code&gt;--install_base&lt;/code&gt; 设置到同一位置。</target>
        </trans-unit>
        <trans-unit id="f57976a42f4d4f108960d3047b05d9b0bd7410ad" translate="yes" xml:space="preserve">
          <source>MakeMaker also checks for any files matching glob(&quot;t/*.t&quot;). It will execute all matching files in alphabetical order via the &lt;a href=&quot;../test/harness&quot;&gt;Test::Harness&lt;/a&gt; module with the &lt;code&gt;-I&lt;/code&gt; switches set correctly.</source>
          <target state="translated">MakeMaker还会检查是否有任何匹配glob（&amp;ldquo; t / *。t&amp;rdquo;）的文件。通过正确设置 &lt;code&gt;-I&lt;/code&gt; 开关的&lt;a href=&quot;../test/harness&quot;&gt;Test :: Harness&lt;/a&gt;模块，它将按字母顺序执行所有匹配的文件。</target>
        </trans-unit>
        <trans-unit id="181073f157ed87afd7d4a36cdc4890d3df65a53c" translate="yes" xml:space="preserve">
          <source>MakeMaker also checks for any files matching glob(&quot;t/*.t&quot;). It will execute all matching files in alphabetical order via the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; module with the &lt;code&gt;-I&lt;/code&gt; switches set correctly.</source>
          <target state="translated">MakeMaker还检查是否有任何匹配glob（&amp;ldquo; t / *。t&amp;rdquo;）的文件。它将通过&lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt;模块以正确设置 &lt;code&gt;-I&lt;/code&gt; 开关的字母顺序执行所有匹配的文件。</target>
        </trans-unit>
        <trans-unit id="ea4d9ecb21fe83e2ef44aa02cc6eba3ee3c63cf7" translate="yes" xml:space="preserve">
          <source>MakeMaker also honors the MAKE environment variable. This parameter takes precedence.</source>
          <target state="translated">MakeMaker还尊重MAKE环境变量。这个参数优先。</target>
        </trans-unit>
        <trans-unit id="6ce95146fa946e6764eac19b0f7702edb2af3abd" translate="yes" xml:space="preserve">
          <source>MakeMaker can run programs to generate files for you at build time. By default any file named *.PL (except Makefile.PL and Build.PL) in the top level directory will be assumed to be a Perl program and run passing its own basename in as an argument. For example...</source>
          <target state="translated">MakeMaker可以在构建时运行程序为你生成文件。默认情况下,顶层目录下任何名为*.PL的文件(除了Makefile.PL和Build.PL)都会被假定为Perl程序,并通过自己的基名作为参数运行。例如...</target>
        </trans-unit>
        <trans-unit id="0b27f17fb6be8902dd15dc474df4292373ebba16" translate="yes" xml:space="preserve">
          <source>MakeMaker can run programs to generate files for you at build time. By default any file named *.PL (except Makefile.PL and Build.PL) in the top level directory will be assumed to be a Perl program and run passing its own basename in as an argument. This basename is actually a build target, and there is an intention, but not a requirement, that the *.PL file make the file passed to to as an argument. For example...</source>
          <target state="translated">MakeMaker可以在构建时运行程序为你生成文件。默认情况下,顶层目录下任何名为*.PL的文件(除了Makefile.PL和Build.PL)都会被假设为Perl程序,并将自己的基名作为参数传入运行。这个基名实际上是一个构建目标,并且有一个意图,但不是要求,*.PL文件使文件传递到作为一个参数。例如...</target>
        </trans-unit>
        <trans-unit id="f4a59e2381035838e81553acd07a6dbd71a643d2" translate="yes" xml:space="preserve">
          <source>MakeMaker checks for the existence of a file named</source>
          <target state="translated">MakeMaker会检查是否存在一个名为</target>
        </trans-unit>
        <trans-unit id="7e46986c8cad84d029006573feccd2e12b58af53" translate="yes" xml:space="preserve">
          <source>MakeMaker comes with a default MANIFEST.SKIP to avoid things like version control directories and backup files. Specifying your own will override this default.</source>
          <target state="translated">MakeMaker自带一个默认的MANIFEST.SKIP,以避免版本控制目录和备份文件等事情。指定你自己的会覆盖这个默认值。</target>
        </trans-unit>
        <trans-unit id="9177c899e90b4ecb1a9e016234bba13b638eedd6" translate="yes" xml:space="preserve">
          <source>MakeMaker gives you much more freedom than needed to configure internal variables and get different results. It is worth mentioning that make(1) also lets you configure most of the variables that are used in the Makefile. But in the majority of situations this will not be necessary, and should only be done if the author of a package recommends it (or you know what you're doing).</source>
          <target state="translated">MakeMaker给了你比配置内部变量更多的自由度,并得到不同的结果。值得一提的是,make(1)还可以让你配置Makefile中使用的大部分变量。但在大多数情况下,这样做是没有必要的,只有在软件包的作者推荐的情况下(或者你知道自己在做什么)才应该这样做。</target>
        </trans-unit>
        <trans-unit id="666dfa9a2df2803aca52ee89b75129726d38981a" translate="yes" xml:space="preserve">
          <source>MakeMaker modules are installed using this simple mantra</source>
          <target state="translated">使用这个简单的口令安装MakeMaker模块。</target>
        </trans-unit>
        <trans-unit id="6eebe1cd37eee2ec321b36b14411ecc5f97674e6" translate="yes" xml:space="preserve">
          <source>MakeMaker needs to know, or to guess, where certain things are located. Especially INST_LIB and INST_ARCHLIB (where to put the files during the make(1) run), PERL_LIB and PERL_ARCHLIB (where to read existing modules from), and PERL_INC (header files and &lt;code&gt;libperl*.*&lt;/code&gt;).</source>
          <target state="translated">MakeMaker需要知道或猜测某些事物的位置。特别是INST_LIB和INST_ARCHLIB（在运行make（1）时将文件放在哪里），PERL_LIB和PERL_ARCHLIB（从中读取现有模块的地方）以及PERL_INC（头文件和 &lt;code&gt;libperl*.*&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1794fe2317715149406a57e4edb43a113c75b0e3" translate="yes" xml:space="preserve">
          <source>MakeMaker object hierarchy (real)</source>
          <target state="translated">MakeMaker对象层次结构(实</target>
        </trans-unit>
        <trans-unit id="5c459908262333c218dd37bde4b33c42a42bd948" translate="yes" xml:space="preserve">
          <source>MakeMaker object hierarchy (simplified)</source>
          <target state="translated">MakeMaker对象层次结构(简化</target>
        </trans-unit>
        <trans-unit id="955e1b765c6718c7db11e68ac1240b76cf36838e" translate="yes" xml:space="preserve">
          <source>MakeMaker will figure out if an extension contains linkable code anywhere down the directory tree, and will set this variable accordingly, but you can speed it up a very little bit if you define this boolean variable yourself.</source>
          <target state="translated">MakeMaker会计算出一个扩展是否包含目录树下任何地方的可链接代码,并会相应地设置这个变量,但如果你自己定义这个布尔变量,可以加快一点速度。</target>
        </trans-unit>
        <trans-unit id="4bbacb6ac277a541e0abc4615218907895ae391a" translate="yes" xml:space="preserve">
          <source>MakeMaker will turn it into an array with one element.</source>
          <target state="translated">MakeMaker会把它变成一个有一个元素的数组。</target>
        </trans-unit>
        <trans-unit id="e6de50a7c31889077966d7620ec5db61a68c67cc" translate="yes" xml:space="preserve">
          <source>MakeMaker.pm uses the architecture-specific information from Config.pm. In addition it evaluates architecture specific hints files in a &lt;code&gt;hints/&lt;/code&gt; directory. The hints files are expected to be named like their counterparts in &lt;code&gt;PERL_SRC/hints&lt;/code&gt; , but with an &lt;code&gt;.pl&lt;/code&gt; file name extension (eg. &lt;code&gt;next_3_2.pl&lt;/code&gt; ). They are simply &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed by MakeMaker within the WriteMakefile() subroutine, and can be used to execute commands as well as to include special variables. The rules which hintsfile is chosen are the same as in Configure.</source>
          <target state="translated">MakeMaker.pm使用Config.pm中特定于体系结构的信息。此外，它还会在 &lt;code&gt;hints/&lt;/code&gt; 目录中评估特定于体系结构的提示文件。提示文件应像在 &lt;code&gt;PERL_SRC/hints&lt;/code&gt; 中的对应文件一样命名，但是文件扩展名为 &lt;code&gt;.pl&lt;/code&gt; （例如 &lt;code&gt;next_3_2.pl&lt;/code&gt; ）。它们只是 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ED由WriteMakefile（）子程序内MakeMaker的，并且可以用来执行命令，以及以包括特殊变量。选择提示文件的规则与&amp;ldquo;配置&amp;rdquo;中的规则相同。</target>
        </trans-unit>
        <trans-unit id="85ffcac06be8bba3c10e447c47204872c6672f8a" translate="yes" xml:space="preserve">
          <source>MakeMaker.pm uses the architecture-specific information from Config.pm. In addition it evaluates architecture specific hints files in a &lt;code&gt;hints/&lt;/code&gt; directory. The hints files are expected to be named like their counterparts in &lt;code&gt;PERL_SRC/hints&lt;/code&gt;, but with an &lt;code&gt;.pl&lt;/code&gt; file name extension (eg. &lt;code&gt;next_3_2.pl&lt;/code&gt;). They are simply &lt;code&gt;eval&lt;/code&gt;ed by MakeMaker within the WriteMakefile() subroutine, and can be used to execute commands as well as to include special variables. The rules which hintsfile is chosen are the same as in Configure.</source>
          <target state="translated">MakeMaker.pm使用Config.pm中特定于体系结构的信息。此外，它还会在 &lt;code&gt;hints/&lt;/code&gt; 目录中评估特定于体系结构的提示文件。提示文件应像在 &lt;code&gt;PERL_SRC/hints&lt;/code&gt; 中的对应文件一样命名，但文件扩展名为 &lt;code&gt;.pl&lt;/code&gt; （例如 &lt;code&gt;next_3_2.pl&lt;/code&gt; ）。它们只是 &lt;code&gt;eval&lt;/code&gt; ED由WriteMakefile（）子程序内MakeMaker的，并且可以用来执行命令，以及以包括特殊变量。选择提示文件的规则与&amp;ldquo;配置&amp;rdquo;中的规则相同。</target>
        </trans-unit>
        <trans-unit id="836efb6e25a091dcb4ff8e1dbb2f0be6a5cbf14c" translate="yes" xml:space="preserve">
          <source>Makefile</source>
          <target state="translated">Makefile</target>
        </trans-unit>
        <trans-unit id="a6a4139b0f32af1594c237ebe008acaf8217f505" translate="yes" xml:space="preserve">
          <source>Makefile.PL</source>
          <target state="translated">Makefile.PL</target>
        </trans-unit>
        <trans-unit id="7b63f64a9d58c97e157e981bc21fc3592f84d63a" translate="yes" xml:space="preserve">
          <source>Makefile.SH</source>
          <target state="translated">Makefile.SH</target>
        </trans-unit>
        <trans-unit id="7703506e8273da38efd2a8cfe539dd5151c3f507" translate="yes" xml:space="preserve">
          <source>Makefile.aperl</source>
          <target state="translated">Makefile.aperl</target>
        </trans-unit>
        <trans-unit id="c9fdff62ddc7b582d9333af8bb3618798e22507b" translate="yes" xml:space="preserve">
          <source>Makefile.ce</source>
          <target state="translated">Makefile.ce</target>
        </trans-unit>
        <trans-unit id="f59062c8b44c1bb393273cea0b6483c724adc359" translate="yes" xml:space="preserve">
          <source>Makes LZMA compression a lot slower, but a small compression gain.</source>
          <target state="translated">使得LZMA压缩速度慢了很多,但压缩增益很小。</target>
        </trans-unit>
        <trans-unit id="42141d0e6f7cf55bf1aa53a30a2f72e384ff774e" translate="yes" xml:space="preserve">
          <source>Makes a deep copy of the object.</source>
          <target state="translated">对对象进行深度复制。</target>
        </trans-unit>
        <trans-unit id="1ff909c4c06b83ac514fd30202e92170c2be88e6" translate="yes" xml:space="preserve">
          <source>Makes a distdir first, and runs a &lt;code&gt;perl Makefile.PL&lt;/code&gt; , a make, and a make test in that directory.</source>
          <target state="translated">首先创建一个distdir，然后在该目录中运行 &lt;code&gt;perl Makefile.PL&lt;/code&gt; ，一个make和一个make测试。</target>
        </trans-unit>
        <trans-unit id="8128104f9c2607926a021874ef102e7bc1c7d502" translate="yes" xml:space="preserve">
          <source>Makes a distdir first, and runs a &lt;code&gt;perl Makefile.PL&lt;/code&gt;, a make, and a make test in that directory.</source>
          <target state="translated">首先创建一个distdir，然后在该目录中运行 &lt;code&gt;perl Makefile.PL&lt;/code&gt; ，一个make和一个make测试。</target>
        </trans-unit>
        <trans-unit id="0126aa7337111c40fd3d8ee768267099e88c4e18" translate="yes" xml:space="preserve">
          <source>Makes an idhash from the argument, which must be a hash.</source>
          <target state="translated">从参数中产生一个idhash,它必须是一个哈希值。</target>
        </trans-unit>
        <trans-unit id="0c2559af9d3a61aae60ee275b6a01f1105ed29e6" translate="yes" xml:space="preserve">
          <source>Makes files exist, with current timestamp</source>
          <target state="translated">使文件存在,有当前的时间戳。</target>
        </trans-unit>
        <trans-unit id="277c90e53937992c5799a554ef17ea6240ac0378" translate="yes" xml:space="preserve">
          <source>Makes sure at run time that the object file (derived from the &lt;code&gt;.xs&lt;/code&gt; file) and the &lt;code&gt;.pm&lt;/code&gt; files have the same version number. Default is true.</source>
          <target state="translated">确保在运行时目标文件（来自 &lt;code&gt;.xs&lt;/code&gt; 文件）和 &lt;code&gt;.pm&lt;/code&gt; 文件具有相同的版本号。默认为true。</target>
        </trans-unit>
        <trans-unit id="53d81221f3002a7a58139dee2348d32bcaf0b4e5" translate="yes" xml:space="preserve">
          <source>Makes the entry in the table completely ignorable; i.e. as if the weights were zero at all level.</source>
          <target state="translated">使得表中的条目完全可以忽略;即好像各级权重都是零一样。</target>
        </trans-unit>
        <trans-unit id="6ce592c7c5a83ac8509be2294340cdf6b4e97842" translate="yes" xml:space="preserve">
          <source>Makes the thread unjoinable, and causes any eventual return value to be discarded. When the program exits, any detached threads that are still running are silently terminated.</source>
          <target state="translated">使线程无法连接,并导致任何最终的返回值被丢弃。当程序退出时,任何仍在运行的分离线程都会被默默终止。</target>
        </trans-unit>
        <trans-unit id="5a6eb05f63da2ef0fda20fc271a95dd2522c3f73" translate="yes" xml:space="preserve">
          <source>Maketext and gettext have a notable difference: gettext is in C, accessible thru C library calls, whereas Maketext is in Perl, and really can't work without a Perl interpreter (although I suppose something like it could be written for C). Accidents of history (and not necessarily lucky ones) have made C++ the most common language for the implementation of applications like word processors, Web browsers, and even many in-house applications like custom query systems. Current conditions make it somewhat unlikely that the next one of any of these kinds of applications will be written in Perl, albeit clearly more for reasons of custom and inertia than out of consideration of what is the right tool for the job.</source>
          <target state="translated">Maketext和gettext有一个明显的区别:gettext是用C语言编写的,可以通过C库调用来访问,而Maketext是用Perl编写的,没有Perl解释器确实无法工作(虽然我想类似的东西可以为C语言编写)。历史的意外(也不一定是幸运的意外)使得C++成为实现文字处理机、Web浏览器等应用的最常用语言,甚至很多内部应用,如自定义查询系统。目前的情况使得下一个这类应用中的任何一个都不太可能用Perl来编写,尽管显然更多的是出于习惯和惯性的原因,而不是出于什么是合适的工具的考虑。</target>
        </trans-unit>
        <trans-unit id="f1346f72588900d324cb2f158adbed7a88d53077" translate="yes" xml:space="preserve">
          <source>Making</source>
          <target state="translated">Making</target>
        </trans-unit>
        <trans-unit id="c20d8b723d9ceaa1b7e38a56a86d1d8e27a837d5" translate="yes" xml:space="preserve">
          <source>Making Perl on AmigaOS</source>
          <target state="translated">在AmigaOS上制作Perl</target>
        </trans-unit>
        <trans-unit id="4fbad71d4049f75dae54b6a49e4082e7c3867bbe" translate="yes" xml:space="preserve">
          <source>Making References</source>
          <target state="translated">制作参考资料</target>
        </trans-unit>
        <trans-unit id="b3d460b24ff971356f57aa8043b7e5b49b73273b" translate="yes" xml:space="preserve">
          <source>Making a human-readable string out of an address</source>
          <target state="translated">从地址中提取人可读的字符串。</target>
        </trans-unit>
        <trans-unit id="ec8a39930df65d8d70bb72152bc2ebfcb5ef6f12" translate="yes" xml:space="preserve">
          <source>Making a system call for each byte you want to read is not very efficient (to put it mildly) but is the simplest to explain and works reasonably well.</source>
          <target state="translated">为每一个要读取的字节进行系统调用,虽然效率不高(说得轻巧),但却是最简单的解释,而且效果相当好。</target>
        </trans-unit>
        <trans-unit id="6bc23e8c3bea5e39366cc40e690baa6e822bc4b0" translate="yes" xml:space="preserve">
          <source>Making executables with a custom collection of statically loaded extensions</source>
          <target state="translated">使用自定义的静态加载扩展集合制作可执行文件。</target>
        </trans-unit>
        <trans-unit id="cebf6e10212157e6416340db92e3bf9d920a30bf" translate="yes" xml:space="preserve">
          <source>Making executables with a custom search-paths</source>
          <target state="translated">使用自定义搜索路径制作可执行文件。</target>
        </trans-unit>
        <trans-unit id="a0f26bb1828a797c6495fc430a1532f4f3524259" translate="yes" xml:space="preserve">
          <source>Making things worse is that UTF-8 support was a later addition to the regex engine (as it was to perl) and this necessarily made things a lot more complicated. Obviously it is easier to design a regex engine with Unicode support in mind from the beginning than it is to retrofit it to one that wasn't.</source>
          <target state="translated">更糟糕的是,UTF-8支持是后来才加入到regex引擎中的(就像perl一样),这必然使事情变得更加复杂。很明显,从一开始就设计一个支持Unicode的regex引擎要比改造一个不支持Unicode的引擎要容易得多。</target>
        </trans-unit>
        <trans-unit id="a78f322195b8416c4ac155ecbbc78299380d03d5" translate="yes" xml:space="preserve">
          <source>Making up your own directives breaks compatibility with other Pod formatters, in a way that using &quot;=for</source>
          <target state="translated">编写你自己的指令会破坏与其他Pod格式化的兼容性,就像使用&quot;=for &quot;一样。</target>
        </trans-unit>
        <trans-unit id="bf00c544b1ffc6b4c5073f7dd35eacd07c2aa8d1" translate="yes" xml:space="preserve">
          <source>Making your module threadsafe</source>
          <target state="translated">让你的模块线程安全</target>
        </trans-unit>
        <trans-unit id="24e9d209d23730e356bf6cdf6439fa711205639d" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt;</source>
          <target state="translated">马尔科姆&amp;middot;比蒂（Malcolm Beattie）， &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b41df4a623efa0a4562a894886ab9c56b063a3e" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt; Reini Urban &lt;code&gt;rurban@cpan.org&lt;/code&gt;</source>
          <target state="translated">马尔科姆&amp;middot;比蒂（Malcolm Beattie）， &lt;code&gt;mbeattie@sable.ox.ac.uk&lt;/code&gt; Reini Urban &lt;code&gt;rurban@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19631f035a3084a6fe635dc5c4bba7828f7afbd3" translate="yes" xml:space="preserve">
          <source>Malcolm Beattie, mbeattie@sable.ox.ac.uk.</source>
          <target state="translated">Malcolm Beattie,mbeattie@sable.ox.ac.uk。</target>
        </trans-unit>
        <trans-unit id="a0e351e0c684eaf1740f72fcfc804df5ea2bda20" translate="yes" xml:space="preserve">
          <source>Malformed PERLLIB_PREFIX</source>
          <target state="translated">畸形的PERLLIB_PREFIX。</target>
        </trans-unit>
        <trans-unit id="95bfcc7f20890119ba5507d8e4b227db1bf7b616" translate="yes" xml:space="preserve">
          <source>Malformed UTF-16 surrogate</source>
          <target state="translated">畸形的UTF-16代用词</target>
        </trans-unit>
        <trans-unit id="76d7492febbbbb102be4a6084b9574c6324cf62a" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8</source>
          <target state="translated">畸形的UTF-8</target>
        </trans-unit>
        <trans-unit id="840809324950f1542de4d0696f6aa6d5b081a4b2" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 character%s</source>
          <target state="translated">畸形的UTF-8字符%s</target>
        </trans-unit>
        <trans-unit id="f86646a5e724c4c0935d99ba9fa1363951791303" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 returned by \N{%s} immediately after '%s'</source>
          <target state="translated">在'%s'后面的UTF-8格式错误的返回。</target>
        </trans-unit>
        <trans-unit id="3629da68a2c9e61eb2ed5a9305a630d15d03a5fd" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in &quot;%s&quot;</source>
          <target state="translated">&quot;%s &quot;中的UTF-8格式字符串出现错误。</target>
        </trans-unit>
        <trans-unit id="6c75c74bdc6a4b14a7b5100d51b32e10dbf5f347" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in '%c' format in unpack</source>
          <target state="translated">在解包过程中,格式为'%c'的UTF-8字符串出现错误。</target>
        </trans-unit>
        <trans-unit id="88cc49e1e61c18146c03f559c55b4b5ca3c7443d" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in pack</source>
          <target state="translated">包中的UTF-8字符串有问题</target>
        </trans-unit>
        <trans-unit id="ebe2537af48af16788aae98b0417a1713098f07e" translate="yes" xml:space="preserve">
          <source>Malformed UTF-8 string in unpack</source>
          <target state="translated">解包中的UTF-8字符串不正常</target>
        </trans-unit>
        <trans-unit id="eceeeccb5dcd41d822277f4b9a9a892eb9541d0a" translate="yes" xml:space="preserve">
          <source>Malformed integer in [] in pack</source>
          <target state="translated">包中[]中的畸形整数。</target>
        </trans-unit>
        <trans-unit id="791860e6c4e8eb2c20a1be93f5c34476ec1a52b9" translate="yes" xml:space="preserve">
          <source>Malformed integer in [] in unpack</source>
          <target state="translated">解包中[]中的畸形整数。</target>
        </trans-unit>
        <trans-unit id="5b8c467b1ea34859e334a2f3c6542838d86881fb" translate="yes" xml:space="preserve">
          <source>Malformed prototype for %s: %s</source>
          <target state="translated">%s的畸形原型:%s。</target>
        </trans-unit>
        <trans-unit id="1c0e8bc778fcc6e629304edc324bee00f7f54935" translate="yes" xml:space="preserve">
          <source>Malloc Issues with perl on Solaris.</source>
          <target state="translated">Solaris上perl的Malloc问题。</target>
        </trans-unit>
        <trans-unit id="118d45651d8f268c43f0d79ab0bbae66d29235b4" translate="yes" xml:space="preserve">
          <source>Malloc in Irix</source>
          <target state="translated">Irix中的Malloc</target>
        </trans-unit>
        <trans-unit id="25b61228c020a688cfd6c5a06fa24fca08bfdf7b" translate="yes" xml:space="preserve">
          <source>Manage .packlist files</source>
          <target state="translated">管理.packlist文件</target>
        </trans-unit>
        <trans-unit id="35931f68fb7263b16c5ab46a487b802fec9cd2f9" translate="yes" xml:space="preserve">
          <source>Managing Unknown Symbols</source>
          <target state="translated">管理未知符号</target>
        </trans-unit>
        <trans-unit id="a55abc0bd6c1b774adb064c2106381d9bf863837" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: Either &lt;code&gt;typemap =&amp;gt; $another_typemap_obj&lt;/code&gt; or &lt;code&gt;file =&amp;gt; $path_to_typemap_file&lt;/code&gt; but not both.</source>
          <target state="translated">强制命名参数： &lt;code&gt;typemap =&amp;gt; $another_typemap_obj&lt;/code&gt; 或 &lt;code&gt;file =&amp;gt; $path_to_typemap_file&lt;/code&gt; 但不能两者都选。</target>
        </trans-unit>
        <trans-unit id="ce16d065fa0516da01a691954a3b7eedd61a0753" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;ctype&lt;/code&gt; of the entry.</source>
          <target state="translated">强制命名参数：条目的 &lt;code&gt;ctype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58aaf34da96668087981ecd9c92610d9f0dca398" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;xstype&lt;/code&gt; of the entry or the &lt;code&gt;ctype&lt;/code&gt; of the typemap that can be used to find the &lt;code&gt;xstype&lt;/code&gt;. To wit, the following pieces of code are equivalent:</source>
          <target state="translated">强制命名参数：可用于查找 &lt;code&gt;xstype&lt;/code&gt; 的条目的 &lt;code&gt;xstype&lt;/code&gt; 或typemap的 &lt;code&gt;ctype&lt;/code&gt; 。明智地，以下代码段是等效的：</target>
        </trans-unit>
        <trans-unit id="a99b477f4c3ec9d1fec66aced41b9bbadd1b95f7" translate="yes" xml:space="preserve">
          <source>Mandatory named arguments: The &lt;code&gt;xstype&lt;/code&gt; of the entry or the &lt;code&gt;ctype&lt;/code&gt; of the typemap that can be used to resolve the &lt;code&gt;xstype&lt;/code&gt;. (See above for an example.)</source>
          <target state="translated">强制命名参数：可用于解析 &lt;code&gt;xstype&lt;/code&gt; 的条目的 &lt;code&gt;xstype&lt;/code&gt; 或类型映射的 &lt;code&gt;ctype&lt;/code&gt; 。（请参见上面的示例。）</target>
        </trans-unit>
        <trans-unit id="94f5d715eb57168bf68f55ea9554b6cf192f682a" translate="yes" xml:space="preserve">
          <source>Mandatory parameter follows optional parameter</source>
          <target state="translated">必备参数在可选参数之后</target>
        </trans-unit>
        <trans-unit id="04f195c5450e541e2f347f3f01dadb29f21cee9c" translate="yes" xml:space="preserve">
          <source>Mandatory section; should be a comma-separated list of programs or functions documented by this POD page, such as:</source>
          <target state="translated">必须填写的部分;应该是本POD页面所记录的程序或功能的逗号分隔的列表,例如:</target>
        </trans-unit>
        <trans-unit id="95b5420abf959d7eeb8c5172873e22e522cf809a" translate="yes" xml:space="preserve">
          <source>Manipulate @INC at compile time</source>
          <target state="translated">在编译时操纵@INC</target>
        </trans-unit>
        <trans-unit id="95363fed4c5c92c85bfefb937ad574a5059a5ae7" translate="yes" xml:space="preserve">
          <source>Manipulate Perl symbols and their names</source>
          <target state="translated">操作Perl符号和它们的名称</target>
        </trans-unit>
        <trans-unit id="a8c36443cbda2a6067ad5c937b50ce063c2df504" translate="yes" xml:space="preserve">
          <source>Manipulate threads in Perl (for old code only)</source>
          <target state="translated">在Perl中操纵线程(仅适用于旧代码)</target>
        </trans-unit>
        <trans-unit id="8a33f921aa98603ac2e48c7701dc159e3e29d6c1" translate="yes" xml:space="preserve">
          <source>Manipulating Opsets</source>
          <target state="translated">操纵Opsets</target>
        </trans-unit>
        <trans-unit id="2b13545245f98ef36404c536b49d9995e39a33e1" translate="yes" xml:space="preserve">
          <source>Manpages</source>
          <target state="translated">Manpages</target>
        </trans-unit>
        <trans-unit id="9f704bb02675db15a09798f0c1baac9cf37ee338" translate="yes" xml:space="preserve">
          <source>Manpages for Perl and utilities</source>
          <target state="translated">Perl和实用程序的Manpages</target>
        </trans-unit>
        <trans-unit id="c6b4a6c33e94dc77d759627b76f10310db491611" translate="yes" xml:space="preserve">
          <source>Manpages for Perl modules</source>
          <target state="translated">Perl模块的Manpages</target>
        </trans-unit>
        <trans-unit id="2c5bfd7444f7b80d647fb722cd55c67b0650aba4" translate="yes" xml:space="preserve">
          <source>Manpages for Perl on AmigaOS</source>
          <target state="translated">Manpages for Perl on AmigaOS</target>
        </trans-unit>
        <trans-unit id="d013bfb63d4447b01e40780ba1cecae093576e1b" translate="yes" xml:space="preserve">
          <source>Manual Pages</source>
          <target state="translated">手册页面</target>
        </trans-unit>
        <trans-unit id="9cec485eab07667ef580f14404756c7cdf469fd8" translate="yes" xml:space="preserve">
          <source>Manual binary installation</source>
          <target state="translated">手动二进制安装</target>
        </trans-unit>
        <trans-unit id="572276926686cc7cc3f5283d7ffd30b0fe5dbb1a" translate="yes" xml:space="preserve">
          <source>Manual page indexers are often extremely picky about the format of this section, so don't put anything in it except this line. Every program or function documented by this POD page should be listed, separated by a comma and a space. For a Perl module, just give the module name. A single dash, and only a single dash, should separate the list of programs or functions from the description. Do not use any markup such as C&amp;lt;&amp;gt; or B&amp;lt;&amp;gt; anywhere in this line. Functions should not be qualified with &lt;code&gt;()&lt;/code&gt; or the like. The description should ideally fit on a single line, even if a man program replaces the dash with a few tabs.</source>
          <target state="translated">手动页面索引器通常对本节的格式非常挑剔，因此除此行外，请勿在其中添加任何内容。应该列出此POD页面记录的每个程序或功能，并用逗号和空格分隔。对于Perl模块，只需提供模块名称。单个破折号和仅单个破折号应将程序或功能列表与描述分开。不要在此行中的任何地方使用任何标记，例如C &amp;lt;&amp;gt;或B &amp;lt;&amp;gt;。函数不应使用 &lt;code&gt;()&lt;/code&gt; 等限定。理想情况下，即使手动程序用一些选项卡代替破折号，该描述也应该适合一行。</target>
        </trans-unit>
        <trans-unit id="00b4c0e2070e1a2565707d57c993afbbae4c0c2e" translate="yes" xml:space="preserve">
          <source>Manual: FAQs</source>
          <target state="translated">手册:常见问题</target>
        </trans-unit>
        <trans-unit id="db75f57bcc4f9ed3d56d92896abd677a771bded6" translate="yes" xml:space="preserve">
          <source>Manual: Overview</source>
          <target state="translated">手册。概述</target>
        </trans-unit>
        <trans-unit id="950d94e419183f62360b7a18d309980db9dca27b" translate="yes" xml:space="preserve">
          <source>Manual: Tutorials</source>
          <target state="translated">手册:教程</target>
        </trans-unit>
        <trans-unit id="ac0e5ddc596dea92cba4c0e2c3555f39d4f7c5f0" translate="yes" xml:space="preserve">
          <source>Manually put</source>
          <target state="translated">手动放入</target>
        </trans-unit>
        <trans-unit id="4fddc764751f961b3d597ce52116c4021c09dadd" translate="yes" xml:space="preserve">
          <source>Manually setting hints from within your program</source>
          <target state="translated">在您的程序中手动设置提示</target>
        </trans-unit>
        <trans-unit id="c84207b4c45d8ef84a1d774f5c8bf8efd5fcd50a" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;AUTOLOAD&lt;/code&gt; routines load in a definition for the requested subroutine using eval(), then execute that subroutine using a special form of goto() that erases the stack frame of the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine without a trace. (See the source to the standard module documented in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;, for example.) But an &lt;code&gt;AUTOLOAD&lt;/code&gt; routine can also just emulate the routine and never define it. For example, let's pretend that a function that wasn't defined should just invoke &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; with those arguments. All you'd do is:</source>
          <target state="translated">许多 &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程使用eval（）来为请求的子例程加载定义，然后使用特殊形式的goto（）执行该子例程，该形式将擦除 &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程的堆栈帧而不会产生任何跟踪。（例如，请参见&lt;a href=&quot;autoloader&quot;&gt;AutoLoader中&lt;/a&gt;记录的标准模块的源代码。）但是， &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程也只能模拟该例程，而不用对其进行定义。例如，让我们假设未定义的函数应仅使用这些参数调用 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 。您要做的只是：</target>
        </trans-unit>
        <trans-unit id="1a7290a6ed663a7c77bc4c6109fa00f035bb42d3" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;AUTOLOAD&lt;/code&gt; routines load in a definition for the requested subroutine using eval(), then execute that subroutine using a special form of goto() that erases the stack frame of the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine without a trace. (See the source to the standard module documented in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt;, for example.) But an &lt;code&gt;AUTOLOAD&lt;/code&gt; routine can also just emulate the routine and never define it. For example, let's pretend that a function that wasn't defined should just invoke &lt;code&gt;system&lt;/code&gt; with those arguments. All you'd do is:</source>
          <target state="translated">许多 &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程使用eval（）来为请求的子例程加载定义，然后使用特殊形式的goto（）执行该子例程，该形式将擦除 &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程的堆栈帧而不会产生任何跟踪。 （例如，请参见&lt;a href=&quot;autoloader&quot;&gt;AutoLoader中&lt;/a&gt;记录的标准模块的源代码。）但是， &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程也只能模拟该例程，而不用对其进行定义。例如，让我们假设未定义的函数应仅使用这些参数调用 &lt;code&gt;system&lt;/code&gt; 。您要做的就是：</target>
        </trans-unit>
        <trans-unit id="077443aca86ab6f4e2738e61b48baa6af4d5929a" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;TAP::*&lt;/code&gt; classes have a</source>
          <target state="translated">许多 &lt;code&gt;TAP::*&lt;/code&gt; 类都有一个</target>
        </trans-unit>
        <trans-unit id="ff6afc71dae16e6a2fa7c473b44e2b45df859fad" translate="yes" xml:space="preserve">
          <source>Many Test2 developers and users lurk on &lt;a href=&quot;irc://irc.perl.org/#perl-qa&quot;&gt;irc://irc.perl.org/#perl-qa&lt;/a&gt; and &lt;a href=&quot;irc://irc.perl.org/#toolchain&quot;&gt;irc://irc.perl.org/#toolchain&lt;/a&gt;. We also have a slack team that can be joined by anyone with an &lt;code&gt;@cpan.org&lt;/code&gt; email address &lt;a href=&quot;https://perl-test2.slack.com/&quot;&gt;https://perl-test2.slack.com/&lt;/a&gt; If you do not have an &lt;code&gt;@cpan.org&lt;/code&gt; email you can ask for a slack invite by emailing Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="translated">许多Test2开发人员和用户都&lt;a href=&quot;irc://irc.perl.org/#perl-qa&quot;&gt;喜欢irc：//irc.perl.org/#perl-qa&lt;/a&gt;和&lt;a href=&quot;irc://irc.perl.org/#toolchain&quot;&gt;irc：//irc.perl.org/#toolchain&lt;/a&gt;。我们还有一个松弛的团队，任何拥有 &lt;code&gt;@cpan.org&lt;/code&gt; 电子邮件地址&lt;a href=&quot;https://perl-test2.slack.com/&quot;&gt;https://perl-test2.slack.com/&lt;/a&gt;的人都可以加入。如果您没有 &lt;code&gt;@cpan.org&lt;/code&gt; 电子邮件，则可以要求松弛的邀请通过发送电子邮件给Chad Granum &amp;lt;exodist@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="7697e7d09f9c98694e67e6f7f7b568fc62b09264" translate="yes" xml:space="preserve">
          <source>Many Unicode properties have more than one name (or alias). &lt;code&gt;prop_invmap&lt;/code&gt; understands all of these, including Perl extensions to them. Ambiguities are resolved as described above for &lt;a href=&quot;#prop_aliases%28%29&quot;&gt;&quot;prop_aliases()&quot;&lt;/a&gt; (except if a property has both a complete mapping, and a binary &lt;code&gt;Y&lt;/code&gt;/&lt;code&gt;N&lt;/code&gt; mapping, then specifying the property name prefixed by &lt;code&gt;&quot;is&quot;&lt;/code&gt; causes the binary one to be returned). The Perl internal property &quot;Perl_Decimal_Digit, described below, is also accepted. An empty list is returned if the property name is unknown. See &lt;a href=&quot;perluniprops#Properties-accessible-through-Unicode%3A%3AUCD&quot;&gt;&quot;Properties accessible through Unicode::UCD&quot; in perluniprops&lt;/a&gt; for the properties acceptable as inputs to this function.</source>
          <target state="translated">许多Unicode属性具有多个名称（或别名）。 &lt;code&gt;prop_invmap&lt;/code&gt; 可以理解所有这些内容，包括对它们的Perl扩展。如上文针对&lt;a href=&quot;#prop_aliases%28%29&quot;&gt;&amp;ldquo; prop_aliases（）&amp;rdquo;&lt;/a&gt;所述解决歧义问题（除非属性同时具有完整的映射和二进制 &lt;code&gt;Y&lt;/code&gt; / &lt;code&gt;N&lt;/code&gt; 映射，然后指定以 &lt;code&gt;&quot;is&quot;&lt;/code&gt; 为前缀的属性名称将导致返回二进制二进制）。还接受下面描述的Perl内部属性&amp;ldquo; Perl_Decimal_Digit。如果属性名称未知，则返回一个空列表。请参阅&lt;a href=&quot;perluniprops#Properties-accessible-through-Unicode%3A%3AUCD&quot;&gt;perluniprops&lt;/a&gt;中的&amp;ldquo;可通过Unicode :: UCD访问的属性&amp;rdquo;，以了解可以用作此函数输入的属性。</target>
        </trans-unit>
        <trans-unit id="d7a6d0011c1051ce0333abc0265080896a481453" translate="yes" xml:space="preserve">
          <source>Many Unicode properties have more than one name (or alias). &lt;code&gt;prop_invmap&lt;/code&gt; understands all of these, including Perl extensions to them. Ambiguities are resolved as described above for &lt;a href=&quot;#prop_aliases()&quot;&gt;prop_aliases()&lt;/a&gt;. The Perl internal property &quot;Perl_Decimal_Digit, described below, is also accepted. An empty list is returned if the property name is unknown. See &lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;Properties accessible through Unicode::UCD in perluniprops&lt;/a&gt; for the properties acceptable as inputs to this function.</source>
          <target state="translated">许多Unicode属性具有多个名称（或别名）。 &lt;code&gt;prop_invmap&lt;/code&gt; 可以理解所有这些内容，包括对它们的Perl扩展。如上文对&lt;a href=&quot;#prop_aliases()&quot;&gt;prop_aliases（）&lt;/a&gt;所述解决歧义。还接受下面描述的Perl内部属性&amp;ldquo; Perl_Decimal_Digit。如果属性名称未知，则返回一个空列表。请参见&lt;a href=&quot;../perluniprops#Properties-accessible-through-Unicode%3a%3aUCD&quot;&gt;perluniprops中可通过Unicode :: UCD访问的属性，以获取&lt;/a&gt;可以用作此函数输入的属性。</target>
        </trans-unit>
        <trans-unit id="33c4abda8cada5094d54134f3094015df454f077" translate="yes" xml:space="preserve">
          <source>Many applications contain some Perl code that could be reused.</source>
          <target state="translated">许多应用程序包含一些可以重复使用的Perl代码。</target>
        </trans-unit>
        <trans-unit id="48c7aff02ac4959c101106add7455533fff396df" translate="yes" xml:space="preserve">
          <source>Many built-in functions may be overridden, though this should be tried only occasionally and for good reason. Typically this might be done by a package attempting to emulate missing built-in functionality on a non-Unix system.</source>
          <target state="translated">许多内置的功能可能会被覆盖,尽管这只应该偶尔尝试,并且有充分的理由。一般来说,这可能是由一个试图在非Unix系统上模拟缺失的内置功能的软件包完成的。</target>
        </trans-unit>
        <trans-unit id="294c60617a28cb2d00c28e138e9bdc873720df06" translate="yes" xml:space="preserve">
          <source>Many cases of using &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in a conditional can be written using &lt;code&gt;any&lt;/code&gt; instead, as it can short-circuit after the first true result.</source>
          <target state="translated">在条件中使用 &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 的许多情况都可以用 &lt;code&gt;any&lt;/code&gt; 代替，因为在第一个真实结果之后它可能会短路。</target>
        </trans-unit>
        <trans-unit id="8f257ebd5355ea10d707c95712fc0e9530be11ec" translate="yes" xml:space="preserve">
          <source>Many cases of using &lt;code&gt;grep&lt;/code&gt; in a conditional can be written using &lt;code&gt;any&lt;/code&gt; instead, as it can short-circuit after the first true result.</source>
          <target state="translated">在条件中使用 &lt;code&gt;grep&lt;/code&gt; 的许多情况都可以用 &lt;code&gt;any&lt;/code&gt; 代替，因为它会在第一个真实结果后短路。</target>
        </trans-unit>
        <trans-unit id="c53c00d79c1b4a5caf2dbf3b1b3871ad968ba47e" translate="yes" xml:space="preserve">
          <source>Many cities around the world have local Perl Mongers chapters. A Perl Mongers chapter is a local user group which typically holds regular in-person meetings, both social and technical; helps organize local conferences, workshops, and hackathons; and provides a mailing list or other continual contact method for its members to keep in touch.</source>
          <target state="translated">世界上许多城市都有当地的 Perl Mongers 分会。Perl Mongers 分会是一个地方性的用户团体,它通常会定期举行社交和技术性的面对面会议;帮助组织地方性的会议、研讨会和黑客运动;并提供一个邮件列表或其他持续的联系方法让其成员保持联系。</target>
        </trans-unit>
        <trans-unit id="1333a5caee67ed3743b1573e310fc69a41dedbcf" translate="yes" xml:space="preserve">
          <source>Many forms are mutually un-intelligible in spoken media. Notable forms: {ar-ae} UAE Arabic; {ar-bh} Bahrain Arabic; {ar-dz} Algerian Arabic; {ar-eg} Egyptian Arabic; {ar-iq} Iraqi Arabic; {ar-jo} Jordanian Arabic; {ar-kw} Kuwait Arabic; {ar-lb} Lebanese Arabic; {ar-ly} Libyan Arabic; {ar-ma} Moroccan Arabic; {ar-om} Omani Arabic; {ar-qa} Qatari Arabic; {ar-sa} Sauda Arabic; {ar-sy} Syrian Arabic; {ar-tn} Tunisian Arabic; {ar-ye} Yemen Arabic.</source>
          <target state="translated">许多形式在口语媒体中是互不相识的。值得注意的形式:{ar-ae}。{ar-ae}阿联酋阿拉伯语;{ar-bh}巴林阿拉伯语;{ar-dz}阿尔及利亚阿拉伯语;{ar-eg}埃及阿拉伯语;{ar-iq}。伊拉克阿拉伯语;{ar-jo}约旦阿拉伯语;{ar-kw}科威特阿拉伯语;{ar-lb}黎巴嫩阿拉伯语;{ar-ly}利比亚阿拉伯语;{ar-ma}摩洛哥阿拉伯语;{ar-om}摩洛哥阿拉伯语。阿曼阿拉伯语;{ar-qa}。卡塔尔阿拉伯语;{ar-sa}。Sauda Arabic;{ar-sy}叙利亚阿拉伯语;{ar-tn}。突尼斯阿拉伯语;{ar-ye}也门阿拉伯语:</target>
        </trans-unit>
        <trans-unit id="22b65de1b1ff16b769feb6a461c534e2b3b49857" translate="yes" xml:space="preserve">
          <source>Many forms are mutually un-intelligible in spoken media. Notable forms: {zh-Hans} Chinese, in simplified script; {zh-Hant} Chinese, in traditional script; {zh-tw} Taiwan Chinese; {zh-cn} PRC Chinese; {zh-sg} Singapore Chinese; {zh-mo} Macau Chinese; {zh-hk} Hong Kong Chinese; {zh-guoyu} Mandarin [Putonghua/Guoyu]; {zh-hakka} Hakka [formerly &quot;i-hakka&quot;]; {zh-min} Hokkien; {zh-min-nan} Southern Hokkien; {zh-wuu} Shanghaiese; {zh-xiang} Hunanese; {zh-gan} Gan; {zh-yue} Cantonese.</source>
          <target state="translated">许多形式在口语媒体中是互不相识的。值得注意的形式:{zh-Hans}中文,简体字;{zh-Hant}中文,简体字。{zh-Hans}中文,简体字;{zh-Hant}。中文,繁体字;{zh-tw}。台湾人;{zh-cn}中国话;{zh-sg}新加坡华人;{zh-mo}澳门话;{zh-hk}香港中文;{zh-guoyu}普通话/国语;{zh-hakka}。客家[原 &quot;i-hakka&quot;];{zh-min}。福建;{zh-min-nan}福建南部;{zh-wuu}上海;{zh-xiang}。匈奴人;{zh-gan}甘;{zh-yue}广东人。</target>
        </trans-unit>
        <trans-unit id="453c2424198e6c72c7985d52564f33ad8ed6bde5" translate="yes" xml:space="preserve">
          <source>Many functions have some kind of reference manipulation as part of their purpose. Sometimes this is documented in terms of ownership of references, and sometimes it is (less helpfully) documented in terms of changes to reference counts. For example, the &lt;a href=&quot;perlapi#newRV_inc&quot;&gt;newRV_inc()&lt;/a&gt; function is documented to create a new RV (with reference count 1) and increment the reference count of the referent that was supplied by the caller. This is best understood as creating a new reference to the referent, which is owned by the created RV, and returning to the caller ownership of the sole reference to the RV. The &lt;a href=&quot;perlapi#newRV_noinc&quot;&gt;newRV_noinc()&lt;/a&gt; function instead does not increment the reference count of the referent, but the RV nevertheless ends up owning a reference to the referent. It is therefore implied that the caller of &lt;code&gt;newRV_noinc()&lt;/code&gt; is relinquishing a reference to the referent, making this conceptually a more complicated operation even though it does less to the data structures.</source>
          <target state="translated">许多功能将某种类型的引用操作作为其目的的一部分。有时，这是根据引用的所有权记录的，而有时（不太有用）是根据引用计数的更改来记录的。例如，记录了&lt;a href=&quot;perlapi#newRV_inc&quot;&gt;newRV_inc（）&lt;/a&gt;函数以创建新的RV（引用计数为1）并增加调用者提供的引用对象的引用计数。最好将其理解为创建对引用对象的新引用，该引用由创建的RV拥有，并返回到对RV的唯一引用的调用者所有权。该&lt;a href=&quot;perlapi#newRV_noinc&quot;&gt;newRV_noinc（）&lt;/a&gt;函数，而不是不增加所指的引用计数，但尽管如此，RV最终拥有对所指的参考。因此，暗示 &lt;code&gt;newRV_noinc()&lt;/code&gt; 放弃了对引用对象的引用，即使它对数据结构的影响较小，从概念上讲，它也使操作更加复杂。</target>
        </trans-unit>
        <trans-unit id="ce036cf5b80f30684cc79c208c3479e5b4b012ed" translate="yes" xml:space="preserve">
          <source>Many good books have been written about Perl--see the section later in &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for more details.</source>
          <target state="translated">关于Perl的许多好书已经写出来了&amp;mdash; 有关更多详细信息，请参见&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2的&lt;/a&gt;稍后部分。</target>
        </trans-unit>
        <trans-unit id="daec66bc8e44bcc2464b1a0d6c4a9145c9a7595a" translate="yes" xml:space="preserve">
          <source>Many members of the community have a Perl-related blog on this site. If you'd like to join them, you can sign up for free.</source>
          <target state="translated">许多社区成员在这个网站上都有一个与Perl相关的博客,如果你想加入他们,可以免费注册。如果你想加入他们,你可以免费注册。</target>
        </trans-unit>
        <trans-unit id="a71a9a58452bd2f82710c97492e2e55820847a42" translate="yes" xml:space="preserve">
          <source>Many modules are included in the Perl distribution. These are described below, and all end in</source>
          <target state="translated">Perl发行版中包含了许多模块。这些模块将在下面描述,所有模块都以</target>
        </trans-unit>
        <trans-unit id="1f04b4ad6b9470f5a4263506a665427c873dff64" translate="yes" xml:space="preserve">
          <source>Many modules make use of &lt;code&gt;AUTOLOAD&lt;/code&gt; ing for constant subroutines to avoid having to compile and waste memory on rarely used values (see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for details on constant subroutines). Calls to such constant subroutines are not optimized away at compile time because they can't be checked at compile time for constancy.</source>
          <target state="translated">许多模块对常 &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程使用AUTOLOAD，以避免不得不编译和浪费很少使用的值的内存（有关常&lt;a href=&quot;perlsub&quot;&gt;量子&lt;/a&gt;例程的详细信息，请参见perlsub）。在编译时并不会优化对此类常量子例程的调用，因为无法在编译时检查它们的恒定性。</target>
        </trans-unit>
        <trans-unit id="730337ad35302b76d62b0f02a8d67322d180f0d7" translate="yes" xml:space="preserve">
          <source>Many modules make use of &lt;code&gt;AUTOLOAD&lt;/code&gt;ing for constant subroutines to avoid having to compile and waste memory on rarely used values (see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for details on constant subroutines). Calls to such constant subroutines are not optimized away at compile time because they can't be checked at compile time for constancy.</source>
          <target state="translated">许多模块对常 &lt;code&gt;AUTOLOAD&lt;/code&gt; 例程使用AUTOLOAD，以避免必须编译和浪费很少使用的值的内存（有关常&lt;a href=&quot;perlsub&quot;&gt;量子&lt;/a&gt;例程的详细信息，请参见perlsub）。此类常量子例程的调用在编译时并未进行优化，因为无法在编译时检查它们的恒定性。</target>
        </trans-unit>
        <trans-unit id="77a0e7ba88e55cf427d9e31a53ffbec21a7210c5" translate="yes" xml:space="preserve">
          <source>Many more features</source>
          <target state="translated">更多的功能</target>
        </trans-unit>
        <trans-unit id="bd64827a8fe9cbce8371a7bcfdacc99021bfba74" translate="yes" xml:space="preserve">
          <source>Many of Perl's syntactic elements are &lt;b&gt;optional&lt;/b&gt;. Rather than requiring you to put parentheses around every function call and declare every variable, you can often leave such explicit elements off and Perl will figure out what you meant. This is known as &lt;b&gt;Do What I Mean&lt;/b&gt;, abbreviated &lt;b&gt;DWIM&lt;/b&gt;. It allows programmers to be &lt;b&gt;lazy&lt;/b&gt; and to code in a style with which they are comfortable.</source>
          <target state="translated">Perl的许多语法元素都是&lt;b&gt;可选的&lt;/b&gt;。不必要求在每个函数调用前都加上括号并声明每个变量，您通常可以不使用此类显式元素，而Perl会弄清楚您的意思。这被称为&amp;ldquo;按&lt;b&gt;我的意思做&amp;rdquo;&lt;/b&gt;，简称&lt;b&gt;DWIM&lt;/b&gt;。它使程序员可以&lt;b&gt;懒惰，&lt;/b&gt;并以自己喜欢的风格进行编码。</target>
        </trans-unit>
        <trans-unit id="a80a79f26d84c2cb761d54166d1d73c391965f8f" translate="yes" xml:space="preserve">
          <source>Many of the comments in the existing code ignore the possibility of EBCDIC, and may be wrong therefore, even if the code works. This is actually a tribute to the successful transparent insertion of being able to handle EBCDIC without having to change pre-existing code.</source>
          <target state="translated">现有代码中的许多评论忽略了EBCDIC的可能性,因此即使代码有效,也可能是错误的。这实际上是对成功地透明插入能够处理EBCDIC而不必改变现有代码的一种赞誉。</target>
        </trans-unit>
        <trans-unit id="9898a42f1ac737909964257112ee94f7d9cf02b3" translate="yes" xml:space="preserve">
          <source>Many of the examples which follow will concentrate on creating an interface between Perl and the ONC+ RPC bind library functions. The rpcb_gettime() function is used to demonstrate many features of the XS language. This function has two parameters; the first is an input parameter and the second is an output parameter. The function also returns a status value.</source>
          <target state="translated">下面的许多例子将集中在创建Perl和ONC+RPC绑定库函数之间的接口。rpcb_gettime()函数用来演示XS语言的许多特性。这个函数有两个参数,第一个是输入参数,第二个是输出参数。该函数还返回一个状态值。</target>
        </trans-unit>
        <trans-unit id="921520a4912c2671d68673bde14f85005a75001d" translate="yes" xml:space="preserve">
          <source>Many of the functions and methods listed below take a list of operators as parameters. Most operator lists can be made up of several types of element. Each element can be one of</source>
          <target state="translated">下面列出的许多函数和方法都采用运算符列表作为参数。大多数运算符列表可以由几种类型的元素组成。每个元素都可以是以下类型之一</target>
        </trans-unit>
        <trans-unit id="7ce44f55ac189a65855572d397cff0134d70bf83" translate="yes" xml:space="preserve">
          <source>Many of the functions in this module return a Benchmark object, or in the case of &lt;code&gt;timethese()&lt;/code&gt; , a reference to a hash, the values of which are Benchmark objects. This is useful if you want to store or further process results from Benchmark functions.</source>
          <target state="translated">此模块中的许多函数返回Benchmark对象，或者在 &lt;code&gt;timethese()&lt;/code&gt; 的情况下，返回对哈希的引用，该哈希的值是Benchmark对象。如果您要存储或进一步处理基准功能的结果，这将很有用。</target>
        </trans-unit>
        <trans-unit id="0de1482c88cef756f8728fbc7e608916bb4e2062" translate="yes" xml:space="preserve">
          <source>Many of the functions in this module return a Benchmark object, or in the case of &lt;code&gt;timethese()&lt;/code&gt;, a reference to a hash, the values of which are Benchmark objects. This is useful if you want to store or further process results from Benchmark functions.</source>
          <target state="translated">该模块中的许多函数返回Benchmark对象，或者在 &lt;code&gt;timethese()&lt;/code&gt; 的情况下，返回对哈希的引用，其值是Benchmark对象。如果您要存储或进一步处理基准功能的结果，这将很有用。</target>
        </trans-unit>
        <trans-unit id="f7fa695823c4cf174fe101c150852b83035705c8" translate="yes" xml:space="preserve">
          <source>Many of these fit entirely into 8 bits, using ASCII as 0-127, while specifying what 128-255 mean, and not using anything above 255. Thus, these are single-byte (or octet if you prefer) character sets. One important one (since Unicode is a superset of it) is the ISO 8859-1 character set.</source>
          <target state="translated">其中许多完全适合于8位,使用ASCII作为0-127,同时指定128-255的意思,而不使用255以上的任何东西。因此,这些都是单字节(如果你喜欢的话,也可以是八字节)字符集。其中一个重要的(因为Unicode是它的一个超集)是ISO 8859-1字符集。</target>
        </trans-unit>
        <trans-unit id="0b3bf50d1b5911ce9e6512eaf6849f76aed2a52f" translate="yes" xml:space="preserve">
          <source>Many of these functions are not safe in a multi-threaded environment where more than one thread can be using them. In particular, functions like &lt;code&gt;getpwent()&lt;/code&gt; iterate per-process and not per-thread, so if two threads are simultaneously iterating, neither will get all the records.</source>
          <target state="translated">这些功能中的许多功能在多线程环境中可能是不安全的，在多线程环境中，一个以上的线程可以使用它们。特别是，像 &lt;code&gt;getpwent()&lt;/code&gt; 这样的函数会按进程而不是按线程进行迭代，因此，如果两个线程同时进行迭代，则任何一个都不会获取所有记录。</target>
        </trans-unit>
        <trans-unit id="05f3b55f18e683ceb0e20e5811ee8daf9fe6a35d" translate="yes" xml:space="preserve">
          <source>Many older Pod parsers did not accept a line consisting of spaces/tabs and then a newline as a blank line. The only lines they considered blank were lines consisting of</source>
          <target state="translated">许多旧的Pod解析器不接受由空格/制表符和换行组成的行作为空行。他们认为唯一的空行是由以下元素组成的行。</target>
        </trans-unit>
        <trans-unit id="77b79be2ba71305e951ed06673ece959275013dd" translate="yes" xml:space="preserve">
          <source>Many older Pod translators require the lines before every Pod command and after every Pod command (including &quot;=cut&quot;!) to be a blank line. Having something like this:</source>
          <target state="translated">许多老的Pod翻译要求每条Pod命令前和每条Pod命令后的行(包括&quot;=cut&quot;!)都是空行。有这样的东西。</target>
        </trans-unit>
        <trans-unit id="5fdba737024348a43ba7029975783958d0026e67" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; from other values. (A simple Boolean test will not distinguish among &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt;, which are all equally false.) Note that since &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">许多操作都会返回&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;来指示失败，文件结束，系统错误，未初始化的变量以及其他特殊情况。此功能使您可以将&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;与其他值区分开。（简单的布尔测试不会将&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;，零，空字符串和 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 都区分为假。）请注意，由于&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;是有效的标量，因此它的存在不会</target>
        </trans-unit>
        <trans-unit id="a404450a4f0d183d7e5d43b166d410dc6203e579" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; from other values. (A simple Boolean test will not distinguish among &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt; , which are all equally false.) Note that since &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">许多操作返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 来指示失败，文件结束，系统错误，未初始化的变量和其他特殊情况。此功能使您可以将 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 与其他值区分开。（简单的布尔测试不会区分 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，零，空字符串和 &lt;code&gt;&quot;0&quot;&lt;/code&gt; ，它们都是同等假的。）请注意，由于 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 是有效的标量，因此它的存在不会</target>
        </trans-unit>
        <trans-unit id="98e1178b6db9a17ccdf3a94478a8066c1df5bc3a" translate="yes" xml:space="preserve">
          <source>Many operations return &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate failure, end of file, system error, uninitialized variable, and other exceptional conditions. This function allows you to distinguish &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; from other values. (A simple Boolean test will not distinguish among &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, zero, the empty string, and &lt;code&gt;&quot;0&quot;&lt;/code&gt; , which are all equally false.) Note that since &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is a valid scalar, its presence doesn't</source>
          <target state="translated">许多操作返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 来指示失败，文件结束，系统错误，未初始化的变量和其他特殊情况。此功能使您可以将 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 与其他值区分开。（简单的布尔测试不会区分 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，零，空字符串和 &lt;code&gt;&quot;0&quot;&lt;/code&gt; ，它们都是同等假的。）请注意，由于 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 是有效的标量，因此它的存在不会</target>
        </trans-unit>
        <trans-unit id="2dfa8b77d5259786f771a6e4ace0bfcdbd85aa18" translate="yes" xml:space="preserve">
          <source>Many operators can be combined with a &lt;code&gt;=&lt;/code&gt; as follows:</source>
          <target state="translated">许多运算符可以与 &lt;code&gt;=&lt;/code&gt; 结合使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="a7edb2d97b3af3ae2394d677e142e5033e9352fd" translate="yes" xml:space="preserve">
          <source>Many operators can be overloaded for objects. See &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;.</source>
          <target state="translated">许多运算符可以重载对象。参见&lt;a href=&quot;overload&quot;&gt;重载&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0786026e69f66286ea639842ce2404d2adc40ac" translate="yes" xml:space="preserve">
          <source>Many people contributed in one or more ways to the final beast, see the file CREDITS for an (incomplete) list. If you miss your name, please drop me a mail. Thank you!</source>
          <target state="translated">许多人以一种或多种方式为最终的野兽做出了贡献,参见文件CREDITS中的(不完整)名单。如果你错过了你的名字,请给我发邮件。谢谢你</target>
        </trans-unit>
        <trans-unit id="3cd694c993c7766c158f0bde0cae8406dd835121" translate="yes" xml:space="preserve">
          <source>Many people enter the CPAN shell by running the &lt;a href=&quot;cpan&quot;&gt;cpan&lt;/a&gt; utility program which is installed in the same directory as perl itself. So if you have this directory in your PATH variable (or some equivalent in your operating system) then typing &lt;code&gt;cpan&lt;/code&gt; in a console window will work for you as well. Above that the utility provides several commandline shortcuts.</source>
          <target state="translated">许多人通过运行&lt;a href=&quot;cpan&quot;&gt;cpan&lt;/a&gt;实用程序进入CPAN shell，该实用程序与perl本身安装在同一目录中。因此，如果您在PATH变量（或操作系统中的某个等效目录）中包含此目录，则在控制台窗口中键入 &lt;code&gt;cpan&lt;/code&gt; 同样适用。除此之外，该实用程序还提供了几个命令行快捷方式。</target>
        </trans-unit>
        <trans-unit id="cf066e941decde490ba46743ad80acc7ad0c1d13" translate="yes" xml:space="preserve">
          <source>Many platforms, quite rightly so, will give you a core dump instead of a pony if the p happens not to be correctly aligned.</source>
          <target state="translated">很多平台,很正确,如果p恰好没有正确对齐,会给你一个核心转储而不是小马。</target>
        </trans-unit>
        <trans-unit id="ad441fa89d95482888ef0338d65a9d30f90b64d7" translate="yes" xml:space="preserve">
          <source>Many popular C extension modules do not come bundled (at least, not completely) due to their sizes, volatility, or simply lack of time for adequate testing and configuration across the multitude of platforms on which Perl was beta-tested. You are encouraged to look for them on CPAN (described below), or using web search engines like Alta Vista or Google.</source>
          <target state="translated">许多流行的 C 扩展模块没有捆绑在一起(至少,没有完全捆绑),这是因为它们的大小、不稳定性,或者仅仅是缺乏时间在 Perl 测试的众多平台上进行充分的测试和配置。我们鼓励你在CPAN上寻找它们(如下所述),或者使用Alta Vista或Google等网络搜索引擎。</target>
        </trans-unit>
        <trans-unit id="65b9676d9f89e15e127ab7753c58e60a602e2704" translate="yes" xml:space="preserve">
          <source>Many popular C extension modules do not come bundled (at least, not completely) due to their sizes, volatility, or simply lack of time for adequate testing and configuration across the multitude of platforms on which Perl was beta-tested. You are encouraged to look for them on CPAN (described below), or using web search engines like Google or DuckDuckGo.</source>
          <target state="translated">许多流行的 C 扩展模块并没有捆绑在一起(至少,没有完全捆绑),这是因为它们的大小、不稳定性,或者只是缺乏时间在 Perl 测试的众多平台上进行充分的测试和配置。我们鼓励你在CPAN上寻找它们(如下所述),或者使用Google或DuckDuckGo等网络搜索引擎。</target>
        </trans-unit>
        <trans-unit id="bdd710785412d1136d5d2fe923caa1de40582889" translate="yes" xml:space="preserve">
          <source>Many porters are also active on the &lt;a href=&quot;irc://irc.perl.org/#p5p&quot;&gt;irc://irc.perl.org/#p5p&lt;/a&gt; channel. Feel free to join the channel and ask questions about hacking on the Perl core.</source>
          <target state="translated">&lt;a href=&quot;irc://irc.perl.org/#p5p&quot;&gt;irc：//irc.perl.org/#p5p&lt;/a&gt;频道上也有许多搬运工。随时加入该频道，并提出有关在Perl内核上进行黑客攻击的问题。</target>
        </trans-unit>
        <trans-unit id="1b93f4b5b9979ea7052f6313958e026f6e2ea4a2" translate="yes" xml:space="preserve">
          <source>Many regular expression constructs don't work on EBCDIC platforms.</source>
          <target state="translated">许多正则表达式结构在EBCDIC平台上无法使用。</target>
        </trans-unit>
        <trans-unit id="2c09ff3401dc02f5920da9178fc87b7ee9d234ec" translate="yes" xml:space="preserve">
          <source>Many system or library calls set &lt;code&gt;errno&lt;/code&gt; if they fail, to indicate the cause of failure. They usually do &lt;b&gt;not&lt;/b&gt; set &lt;code&gt;errno&lt;/code&gt; to zero if they succeed. This means &lt;code&gt;errno&lt;/code&gt; , hence &lt;code&gt;$!&lt;/code&gt; , is meaningful only</source>
          <target state="translated">如果失败，许多系统或库调用都会设置 &lt;code&gt;errno&lt;/code&gt; ，以指示失败原因。如果成功，它们通常&lt;b&gt;不会&lt;/b&gt;将 &lt;code&gt;errno&lt;/code&gt; 设置为零。这意味着 &lt;code&gt;errno&lt;/code&gt; ，因此是 &lt;code&gt;$!&lt;/code&gt; ，仅有意义</target>
        </trans-unit>
        <trans-unit id="d15215c411905dc2055f214138f50c4dd6d3b024" translate="yes" xml:space="preserve">
          <source>Many system or library calls set &lt;code&gt;errno&lt;/code&gt; if they fail, to indicate the cause of failure. They usually do &lt;b&gt;not&lt;/b&gt; set &lt;code&gt;errno&lt;/code&gt; to zero if they succeed. This means &lt;code&gt;errno&lt;/code&gt;, hence &lt;code&gt;$!&lt;/code&gt;, is meaningful only</source>
          <target state="translated">如果失败，许多系统或库调用都会设置 &lt;code&gt;errno&lt;/code&gt; ，以指示失败原因。如果成功，它们通常&lt;b&gt;不会&lt;/b&gt;将 &lt;code&gt;errno&lt;/code&gt; 设置为零。这意味着 &lt;code&gt;errno&lt;/code&gt; ，因此是 &lt;code&gt;$!&lt;/code&gt; ，仅有意义</target>
        </trans-unit>
        <trans-unit id="c790c1897e3e898f761b95151fd508249c16664d" translate="yes" xml:space="preserve">
          <source>Many systems (DOS, VMS ODS-2) cannot have more than one &lt;code&gt;.&lt;/code&gt; in their filenames.</source>
          <target state="translated">许多系统（DOS，VMS ODS-2）不能具有多个 &lt;code&gt;.&lt;/code&gt; 在他们的文件名中。</target>
        </trans-unit>
        <trans-unit id="7efce1a3865da7dfdc9c988fdb8235136031c9dd" translate="yes" xml:space="preserve">
          <source>Many thanks to Florian Ragwitz for administration and packaging assistance, to John Tromp for bug reports, to Jonathan Roy for bug reports and suggestions, to Michael Schwern for other bug reports and patches, to Mike Cariaso for helping me to figure out the Right Thing to Do About Expiration, to Joshua Gerth, Joshua Chamas, Jonathan Roy (again), Mark D. Anderson, and Andrew Johnson for more suggestions about expiration, to Brent Powers for the Memoize::ExpireLRU module, to Ariel Scolnicov for delightful messages about the Fibonacci function, to Dion Almaer for thought-provoking suggestions about the default normalizer, to Walt Mankowski and Kurt Starsinic for much help investigating problems under threaded Perl, to Alex Dudkevich for reporting the bug in prototyped functions and for checking my patch, to Tony Bass for many helpful suggestions, to Jonathan Roy (again) for finding a use for &lt;code&gt;unmemoize()&lt;/code&gt; , to Philippe Verdret for enlightening discussion of &lt;code&gt;Hook::PrePostCall&lt;/code&gt; , to Nat Torkington for advice I ignored, to Chris Nandor for portability advice, to Randal Schwartz for suggesting the '&lt;code&gt;flush_cache&lt;/code&gt; function, and to Jenda Krynicky for being a light in the world.</source>
          <target state="translated">非常感谢Florian Ragwitz的管理和打包帮助，感谢John Tromp的bug报告，感谢Jonathan Roy的bug报告和建议，感谢Michael Schwern的其他bug报告和补丁，以及Mike Cariaso的帮助，以帮助我找出正确的方法。请向Joshua Gerth，Joshua Chamas，Jonathan Roy（再次），Mark D. Anderson和Andrew Johnson了解有关过期的更多建议，向Brent Powers的Memoize :: ExpireLRU模块，以及Ariel Scolnicov以获得有关该过期的消息。斐波那契函数，Dion Almaer提供有关默认规范化器的深思熟虑的建议，Walt Mankowski和Kurt Starsinic提供了许多帮助，以研究线程Perl下的问题，Alex Dudkevich报告了原型函数中的错误并检查了我的补丁，Tony Bass对于许多有用的建议，再次向乔纳森&amp;middot;罗伊（Jonathan Roy）寻找用途， &lt;code&gt;unmemoize()&lt;/code&gt; ，对Philippe Verdret有益于 &lt;code&gt;Hook::PrePostCall&lt;/code&gt; 讨论，对Nat Torkington提出了我忽略的建议，对Chris Nandor提出了可移植性建议，对Randal Schwartz提出了&amp;ldquo; &lt;code&gt;flush_cache&lt;/code&gt; 函数&amp;rdquo;建议，对Jenda Krynicky 提出了建议。世界。</target>
        </trans-unit>
        <trans-unit id="08e2587ccaa6d7cfd0ff49e65ee53ee4cc5fb187" translate="yes" xml:space="preserve">
          <source>Many thanks to Florian Ragwitz for administration and packaging assistance, to John Tromp for bug reports, to Jonathan Roy for bug reports and suggestions, to Michael Schwern for other bug reports and patches, to Mike Cariaso for helping me to figure out the Right Thing to Do About Expiration, to Joshua Gerth, Joshua Chamas, Jonathan Roy (again), Mark D. Anderson, and Andrew Johnson for more suggestions about expiration, to Brent Powers for the Memoize::ExpireLRU module, to Ariel Scolnicov for delightful messages about the Fibonacci function, to Dion Almaer for thought-provoking suggestions about the default normalizer, to Walt Mankowski and Kurt Starsinic for much help investigating problems under threaded Perl, to Alex Dudkevich for reporting the bug in prototyped functions and for checking my patch, to Tony Bass for many helpful suggestions, to Jonathan Roy (again) for finding a use for &lt;code&gt;unmemoize()&lt;/code&gt;, to Philippe Verdret for enlightening discussion of &lt;code&gt;Hook::PrePostCall&lt;/code&gt;, to Nat Torkington for advice I ignored, to Chris Nandor for portability advice, to Randal Schwartz for suggesting the '&lt;code&gt;flush_cache&lt;/code&gt; function, and to Jenda Krynicky for being a light in the world.</source>
          <target state="translated">非常感谢Florian Ragwitz提供的管理和打包帮助，感谢John Tromp的bug报告，感谢Jonathan Roy的bug报告和建议，感谢Michael Schwern的其他bug报告和补丁，以及Mike Cariaso的帮助，请向Joshua Gerth，Joshua Chamas，Jonathan Roy（再次），Mark D. Anderson和Andrew Johnson了解有关过期的更多建议，向Brent Powers的Memoize :: ExpireLRU模块，以及Ariel Scolnicov可获得有关该过期的消息。 Fibonacci函数，Dion Almaer提供有关默认规范化器的深思熟虑的建议，Walt Mankowski和Kurt Starsinic帮助调查Perl线程下的问题，Alex Dudkevich报告了原型函数中的错误并检查了我的补丁，Tony Bass对于许多有用的建议，再次向乔纳森&amp;middot;罗伊（Jonathan Roy）寻求用处 &lt;code&gt;unmemoize()&lt;/code&gt; ，对Philippe Verdret启发性地讨论了 &lt;code&gt;Hook::PrePostCall&lt;/code&gt; ，对Nat Torkington提出了我忽略的建议，对Chris Nandor提出了可移植性建议，对Randal Schwartz提出了&amp;ldquo; &lt;code&gt;flush_cache&lt;/code&gt; 函数&amp;rdquo;建议，对Jenda Krynicky提出了建议。世界。</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="0b06a5289fc2a1842dff3a88be9b7be213a3d5b9" translate="yes" xml:space="preserve">
          <source>Map ASCII unchanged.</source>
          <target state="translated">映射ASCII码不变。</target>
        </trans-unit>
        <trans-unit id="6cd0cefd9b93740b2ce288b59bbfa2506b7603b6" translate="yes" xml:space="preserve">
          <source>Map Perl operating system names to generic types</source>
          <target state="translated">将Perl操作系统名称映射为通用类型</target>
        </trans-unit>
        <trans-unit id="7d32a75bc17a4709e9d1141d1ebfa60b6cd43879" translate="yes" xml:space="preserve">
          <source>Map always returns a list, which can be assigned to a hash such that the elements become key/value pairs. See &lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt; for more details.</source>
          <target state="translated">Map总是返回一个列表，该列表可以分配给哈希，这样元素就可以成为键/值对。有关更多详细信息，请参见&lt;a href=&quot;../perldata&quot;&gt;perldata&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5dd04ccd71f6dc1b0c4b39870ec7fbae4d0141a" translate="yes" xml:space="preserve">
          <source>Map always returns a list, which can be assigned to a hash such that the elements become key/value pairs. See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; for more details.</source>
          <target state="translated">Map总是返回一个列表，该列表可以分配给哈希，这样元素就可以成为键/值对。有关更多详细信息，请参见&lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a9b87b1050e7882b468c1ddc762f864cd1b3ca5" translate="yes" xml:space="preserve">
          <source>Map such a character set that consists of 94 or 96 powered by N members by adding 0x80 to each byte.</source>
          <target state="translated">通过在每个字节上添加0x80来映射这样一个由N个成员组成的94或96供电的字符集。</target>
        </trans-unit>
        <trans-unit id="d4fa0aeb10d9944cd20c23c3471632b3053b6c36" translate="yes" xml:space="preserve">
          <source>Mapping \x00 to '@' causes too much pain everywhere.</source>
          <target state="translated">把x00映射成'@'会导致到处都太痛苦。</target>
        </trans-unit>
        <trans-unit id="b05d51e1bee28ea12c20512307467a2c4ee871f8" translate="yes" xml:space="preserve">
          <source>Maps certain Unicode code points to their legacy Japanese cell-phone values</source>
          <target state="translated">将某些Unicode码点映射到其传统的日本手机值。</target>
        </trans-unit>
        <trans-unit id="67c10042685d0de63983cda038f2ff8c2785c051" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the Unicode value that each stands for. For example, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 201, and &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 8364. You get the correct Unicode value, regardless of the version of Perl you're using -- which differs from &lt;code&gt;%Name2character&lt;/code&gt; 's behavior under pre-5.7 Perls.</source>
          <target state="translated">从名称（如 &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ）（例如&amp;ldquo; eacute&amp;rdquo;或&amp;ldquo; sol&amp;rdquo;）映射到各自代表的Unicode值。例如， &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; 是201， &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; 是8364。无论使用的是哪个Perl版本，您都将获得正确的Unicode值-与 &lt;code&gt;%Name2character&lt;/code&gt; 的不同Perls 5.7之前的行为。</target>
        </trans-unit>
        <trans-unit id="9536673c9e3743e558f91c5129ada427b7fd5a55" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the Unicode value that each stands for. For example, &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 201, and &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; is 8364. You get the correct Unicode value, regardless of the version of Perl you're using -- which differs from &lt;code&gt;%Name2character&lt;/code&gt;'s behavior under pre-5.7 Perls.</source>
          <target state="translated">从名称（如 &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ）（例如&amp;ldquo; eacute&amp;rdquo;或&amp;ldquo; sol&amp;rdquo;）映射到各自代表的Unicode值。例如， &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; 为201， &lt;code&gt;$Name2character_number{'eacute'}&lt;/code&gt; 为8364。无论使用的是哪个Perl版本，您都将获得正确的Unicode值-与 &lt;code&gt;%Name2character&lt;/code&gt; 的不同Perls 5.7之前的行为。</target>
        </trans-unit>
        <trans-unit id="6d2553254721ed355ac347e903abc341219f5deb" translate="yes" xml:space="preserve">
          <source>Maps from names (as in &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt;) like &quot;eacute&quot; or &quot;sol&quot; to the string that each stands for. Note that this does not include numerics (like &quot;64&quot; or &quot;x981c&quot;). Under old Perl versions (before 5.7) you get a &quot;?&quot; in place of characters whose Unicode value is over 255.</source>
          <target state="translated">从名称（如 &lt;code&gt;E&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; ）（例如&amp;ldquo; eacute&amp;rdquo;或&amp;ldquo; sol&amp;rdquo;）映射到每个代表的字符串。请注意，这不包括数字（例如&amp;ldquo; 64&amp;rdquo;或&amp;ldquo; x981c&amp;rdquo;）。在旧的Perl版本（5.7之前）下，您会收到&amp;ldquo;？&amp;rdquo; 代替Unicode值超过255的字符。</target>
        </trans-unit>
        <trans-unit id="a1b78ee004c9a2fbd85f8f626a722e3fe6da6945" translate="yes" xml:space="preserve">
          <source>Maps the kRSUnicode property values to corresponding code points</source>
          <target state="translated">将kRSUnicode属性值映射到相应的代码点。</target>
        </trans-unit>
        <trans-unit id="7b909fc95f2b4e5f8d9967846d9866d42fccc70f" translate="yes" xml:space="preserve">
          <source>Marc Green, &amp;lt;marcgreen@cpan.org&amp;gt;.</source>
          <target state="translated">马克&amp;middot;格林（Marc Green），&amp;lt;marcgreen@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="0650171f58161c1a60dbd003ef755368668ef874" translate="yes" xml:space="preserve">
          <source>March 14, 2003 (Pi day)</source>
          <target state="translated">2003年3月14日</target>
        </trans-unit>
        <trans-unit id="8ca9751b38a5ce5495d1bc4a93437267f7e09312" translate="yes" xml:space="preserve">
          <source>March 18th, 2000</source>
          <target state="translated">2000年3月18日</target>
        </trans-unit>
        <trans-unit id="777916db149dc5cc899516f42c23bd6b0847475c" translate="yes" xml:space="preserve">
          <source>March 2003</source>
          <target state="translated">2003年3月</target>
        </trans-unit>
        <trans-unit id="6188237b0da82f2fd62e1940dd4c6b739e5e4019" translate="yes" xml:space="preserve">
          <source>March 28th, 1997; by Hugo van der Sanden: added support for code references and the already documented 'debug' method; revamped documentation.</source>
          <target state="translated">1997年3月28日;作者:Hugo van der Sanden:增加了对代码引用的支持和已经记录的 &quot;调试 &quot;方法;修改了文档。</target>
        </trans-unit>
        <trans-unit id="719b2885e137f36b196d43363c080ddacf1c5a2e" translate="yes" xml:space="preserve">
          <source>Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</source>
          <target state="translated">Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1dfd6571ab219bad3b1cec579d53f1dfc162bfba" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;</source>
          <target state="translated">Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="264476e951a0a1cdd02faca9ecf02d9d3dd7bcf9" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;, borrowing a lot of things from &lt;a href=&quot;../pod2man&quot;&gt;pod2man&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/pod2roff&quot;&gt;pod2roff&lt;/a&gt; as well as other POD processing tools by Tom Christiansen, Brad Appleton and Russ Allbery.</source>
          <target state="translated">Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;，从&lt;a href=&quot;../pod2man&quot;&gt;pod2man&lt;/a&gt;和&lt;a href=&quot;http://search.cpan.org/perldoc/pod2roff&quot;&gt;pod2roff&lt;/a&gt;以及Tom Tomsensen，Brad Appleton和Russ Allbery的其他POD处理工具中借了很多东西。</target>
        </trans-unit>
        <trans-unit id="c079bae77060ca37ba3c2926c71f4d4859c75bac" translate="yes" xml:space="preserve">
          <source>Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;, heavily borrowing code from Nick Ing-Simmons' PodToHtml.</source>
          <target state="translated">Marek Rouchal &amp;lt;marekr@cpan.org&amp;gt;，从Nick Ing-Simmons的PodToHtml中大量借用了代码。</target>
        </trans-unit>
        <trans-unit id="9069d6c0e29c4952ab3d16ec4d73d5cdcc560d93" translate="yes" xml:space="preserve">
          <source>Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">马克&amp;middot;艾伦 &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c83f3f033b2fc96f5fc9ad533bd899a9d4b6ecc0" translate="yes" xml:space="preserve">
          <source>Mark Biggar said, when asked about to drop the '+' altogether, or make only &lt;code&gt;cmp&lt;/code&gt; work:</source>
          <target state="translated">马克&amp;middot;比格（Mark Biggar）说，当被问及是否完全放弃&amp;ldquo; +&amp;rdquo;或仅使 &lt;code&gt;cmp&lt;/code&gt; 起作用时：</target>
        </trans-unit>
        <trans-unit id="41a097411cd8ebbee57a678e8ee8e205e4008c67" translate="yes" xml:space="preserve">
          <source>Mark Biggar, overloaded interface by Ilya Zakharevich, 1996-2001.</source>
          <target state="translated">Mark Biggar,Ilya Zakharevich的超载接口,1996-2001年。</target>
        </trans-unit>
        <trans-unit id="377509d88d53597d4ff4d33c6f13c1974a06e69d" translate="yes" xml:space="preserve">
          <source>Mark Biggar, overloaded interface by Ilya Zakharevich. Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; in 2001 - 2006, and still at it in 2007.</source>
          <target state="translated">Mark Biggar，Ilya Zakharevich重载了界面。由Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt;于2001年至2006年完全重写，并于2007年仍在使用。</target>
        </trans-unit>
        <trans-unit id="ac261964132320c5f1e5015540d01455408eb496" translate="yes" xml:space="preserve">
          <source>Mark Fowler &amp;lt;markf@cpan.org&amp;gt;</source>
          <target state="translated">马克&amp;middot;福勒&amp;lt;markf@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d300b7701521ff8a33f7b33d0188a117c431b382" translate="yes" xml:space="preserve">
          <source>Mark Jason Dominus</source>
          <target state="translated">Mark Jason Dominus</target>
        </trans-unit>
        <trans-unit id="450f27b0693fb0a8da6251b3b74d437c26be547d" translate="yes" xml:space="preserve">
          <source>Mark Kettenis &amp;lt;kettenis@gnu.org&amp;gt;</source>
          <target state="translated">马克&amp;middot;凯特尼斯&amp;lt;kettenis@gnu.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="81bc652b2afe581a8637a9ead94c1a383e00b3d9" translate="yes" xml:space="preserve">
          <source>Mark Reed and Roland Giersig -- Klingon translators.</source>
          <target state="translated">Mark Reed和Roland Giersig --克林贡语翻译。</target>
        </trans-unit>
        <trans-unit id="e1debb6f407e6933148527bee46b8099a40b610d" translate="yes" xml:space="preserve">
          <source>Mark Stack</source>
          <target state="translated">马克-斯塔克</target>
        </trans-unit>
        <trans-unit id="c8ddbdd441714aa3b5957a06f9bf2537de77f045" translate="yes" xml:space="preserve">
          <source>Mark Stosberg</source>
          <target state="translated">Mark Stosberg</target>
        </trans-unit>
        <trans-unit id="e5f44ec87511dcf9977a4ec17e09815c5d4e4d80" translate="yes" xml:space="preserve">
          <source>Mark all the current temporaries for reuse</source>
          <target state="translated">标记所有当前的临时性项目,以便重复使用。</target>
        </trans-unit>
        <trans-unit id="9cd6842e0e13563dce83b0a4158f7d6424282172" translate="yes" xml:space="preserve">
          <source>Mark an object as not-readonly. Exactly what this mean depends on the object type. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="translated">将一个对象标记为非只读对象。具体是什么意思取决于对象的类型。通过Internals::SvREADONLY()暴露给perl代码。</target>
        </trans-unit>
        <trans-unit id="31a02aa032f48d5863f9a1d17981d5d9567c8844" translate="yes" xml:space="preserve">
          <source>Mark an object as readonly. Exactly what this means depends on the object type. Exposed to perl code via Internals::SvREADONLY().</source>
          <target state="translated">将一个对象标记为只读。具体是什么意思取决于对象的类型。通过Internals::SvREADONLY()暴露给perl代码。</target>
        </trans-unit>
        <trans-unit id="434c6b3d12f78673c6f025dc43bd2b5e87746cf6" translate="yes" xml:space="preserve">
          <source>Mark message &lt;code&gt;MSGNUM&lt;/code&gt; to be deleted from the remote mailbox. All messages that are marked to be deleted will be removed from the remote mailbox when the server connection closed.</source>
          <target state="translated">将邮件 &lt;code&gt;MSGNUM&lt;/code&gt; 标记为要从远程邮箱中删除。关闭服务器连接后，将从远程邮箱中删除所有标记为要删除的邮件。</target>
        </trans-unit>
        <trans-unit id="3fc451fa99eddaf84abe45f817ed60d28d73925f" translate="yes" xml:space="preserve">
          <source>Mark modules as loaded or unloaded</source>
          <target state="translated">标记模块为加载或卸载</target>
        </trans-unit>
        <trans-unit id="0952995ce715e0fcf16177cb607a92712143f22b" translate="yes" xml:space="preserve">
          <source>Mark places that need to be revisited with XXX (and revisit often!)</source>
          <target state="translated">将需要重访的地方用XXX标记出来(并经常重访!)。</target>
        </trans-unit>
        <trans-unit id="f890cc48bd62c292c1b2117bad32ccde46514a4e" translate="yes" xml:space="preserve">
          <source>Mark stack</source>
          <target state="translated">标记堆栈</target>
        </trans-unit>
        <trans-unit id="757fbf6071a2b2fed849d8ec18f9f6866d396b4c" translate="yes" xml:space="preserve">
          <source>Mark the stream as line buffered. &lt;code&gt;PerlIOBase_setlinebuf()&lt;/code&gt; sets the PERLIO_F_LINEBUF flag and is normally sufficient.</source>
          <target state="translated">将流标记为行缓冲。 &lt;code&gt;PerlIOBase_setlinebuf()&lt;/code&gt; 设置PERLIO_F_LINEBUF标志，通常就足够了。</target>
        </trans-unit>
        <trans-unit id="0da58592dac4b83b59b8524c503019ad8f94d0df" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (&lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ), Plover Systems co.</source>
          <target state="translated">Mark-Jason Dominus（ &lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ），Plover Systems公司。</target>
        </trans-unit>
        <trans-unit id="f0e3d2177b8ac5226b97d7fae88a022b0452ed9f" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (&lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt;), Plover Systems co.</source>
          <target state="translated">Mark-Jason Dominus（ &lt;code&gt;mjd-perl-memoize+@plover.com&lt;/code&gt; ），Plover Systems公司。</target>
        </trans-unit>
        <trans-unit id="46fb530910c2bcc92b57abfd9b169a4f2b074dec" translate="yes" xml:space="preserve">
          <source>Mark-Jason Dominus (mjd-perl-memoize+@plover.com)</source>
          <target state="translated">Mark-Jason Dominus (mjd-perl-memoize+@plover.com)</target>
        </trans-unit>
        <trans-unit id="5686a25e5fb2f469692e134a738a6ecc07d28f5e" translate="yes" xml:space="preserve">
          <source>Marks &lt;code&gt;o&lt;/code&gt; as having no further siblings and marks o as having the specified parent. See also &lt;code&gt;&lt;a href=&quot;#OpMORESIB_set&quot;&gt;&quot;OpMORESIB_set&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt;. For a higher-level interface, see &lt;code&gt;&lt;a href=&quot;#op_sibling_splice&quot;&gt;&quot;op_sibling_splice&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;o&lt;/code&gt; 标记为没有其他同级，并且将o标记为具有指定的父级。另请参见 &lt;code&gt;&lt;a href=&quot;#OpMORESIB_set&quot;&gt;&quot;OpMORESIB_set&quot;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; 。有关更高级别的界面，请参见 &lt;code&gt;&lt;a href=&quot;#op_sibling_splice&quot;&gt;&quot;op_sibling_splice&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98f68109ba2dde58a98de8a29bc502b61b464f61" translate="yes" xml:space="preserve">
          <source>Marks an SV as tainted if tainting is enabled.</source>
          <target state="translated">如果启用了污点,则将SV标记为污点。</target>
        </trans-unit>
        <trans-unit id="a080fe5381afacd2d95df891fcd34ffb1b062407" translate="yes" xml:space="preserve">
          <source>Marks an existing SV as mortal. The SV will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. &lt;code&gt;SvTEMP()&lt;/code&gt; is turned on which means that the SV's string buffer can be &quot;stolen&quot; if this SV is copied. See also &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将现有的SV标记为凡人。通过显式调用 &lt;code&gt;FREETMPS&lt;/code&gt; 或在语句边界之类的位置进行隐式调用，将很快&amp;ldquo;破坏&amp;rdquo; SV 。 &lt;code&gt;SvTEMP()&lt;/code&gt; 已打开，这意味着如果复制了该SV，则可以&amp;ldquo;窃取&amp;rdquo;该SV的字符串缓冲区。另请参见 &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2db65aa42a74dc9034cc35ce6c1faf364427ed3b" translate="yes" xml:space="preserve">
          <source>Marks an existing SV as mortal. The SV will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. SvTEMP() is turned on which means that the SV's string buffer can be &quot;stolen&quot; if this SV is copied. See also &lt;code&gt;sv_newmortal&lt;/code&gt; and &lt;code&gt;sv_mortalcopy&lt;/code&gt; .</source>
          <target state="translated">将现有的SV标记为凡人。通过显式调用FREETMPS或在语句边界之类的位置进行隐式调用，将很快&amp;ldquo;破坏&amp;rdquo; SV。SvTEMP（）已打开，这意味着如果复制了该SV，则可以&amp;ldquo;窃取&amp;rdquo;该SV的字符串缓冲区。另请参见 &lt;code&gt;sv_newmortal&lt;/code&gt; 和 &lt;code&gt;sv_mortalcopy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff643d8dde56f37f877ff7ade1da6aae5c6540db" translate="yes" xml:space="preserve">
          <source>Marks o as having no further siblings. On &lt;code&gt;PERL_OP_PARENT&lt;/code&gt; builds, marks o as having the specified parent. See also &lt;code&gt;OpMORESIB_set&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; . For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">将o标记为没有其他兄弟姐妹。在 &lt;code&gt;PERL_OP_PARENT&lt;/code&gt; 构建中，将o标记为具有指定的父级。另请参阅 &lt;code&gt;OpMORESIB_set&lt;/code&gt; 和 &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; 。有关更高级别的接口，请参见 &lt;code&gt;op_sibling_splice&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f648546860128e7a1516008b618e091f14b60522" translate="yes" xml:space="preserve">
          <source>Marks the object as taint-clean, and as such data read from it will also be considered taint-clean. Note that this is a very trusting action to take, and appropriate consideration for the data source and potential vulnerability should be kept in mind. Returns 0 on success, -1 if setting the taint-clean flag failed. (eg invalid handle)</source>
          <target state="translated">将该对象标记为污点清除,因此从该对象读取的数据也将被视为污点清除。请注意,这是一个非常信任的操作,应该适当考虑数据源和潜在的漏洞。成功时返回0,如果设置taint-clean标志失败则返回-1。(例如无效的句柄)</target>
        </trans-unit>
        <trans-unit id="4a22faf92173de5f56b8198d2fcad5f9500ee814" translate="yes" xml:space="preserve">
          <source>Marks the package as loaded to perl. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">将软件包标记为已加载到perl。 &lt;code&gt;PACKAGE&lt;/code&gt; 可以是空词或字符串。</target>
        </trans-unit>
        <trans-unit id="04902927b1471c77962c6cabf557af3a4b22b23b" translate="yes" xml:space="preserve">
          <source>Marks the package as unloaded to perl, which is the exact opposite of &lt;code&gt;mark_as_loaded&lt;/code&gt; . &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">将软件包标记为已卸载到perl，这与 &lt;code&gt;mark_as_loaded&lt;/code&gt; 完全相反。 &lt;code&gt;PACKAGE&lt;/code&gt; 可以是空词或字符串。</target>
        </trans-unit>
        <trans-unit id="719514f0bc1e227795966e35c172acb7e89879e5" translate="yes" xml:space="preserve">
          <source>Marks the package as unloaded to perl, which is the exact opposite of &lt;code&gt;mark_as_loaded&lt;/code&gt;. &lt;code&gt;PACKAGE&lt;/code&gt; can be a bareword or string.</source>
          <target state="translated">将软件包标记为已卸载到perl，这与 &lt;code&gt;mark_as_loaded&lt;/code&gt; 完全相反。 &lt;code&gt;PACKAGE&lt;/code&gt; 可以是空词或字符串。</target>
        </trans-unit>
        <trans-unit id="6c1f770624b796cd596d3a67943a0c4353130d2c" translate="yes" xml:space="preserve">
          <source>Marks the variable as multiply defined, thus preventing the:</source>
          <target state="translated">标记变量为乘法定义,从而防止。</target>
        </trans-unit>
        <trans-unit id="cff46171564d3d534ef0fb1847dbfa00e48f231c" translate="yes" xml:space="preserve">
          <source>Martin J. Evans &amp;lt;mjegh@ntlworld.com&amp;gt;</source>
          <target state="translated">马丁&amp;middot;J&amp;middot;埃文斯&amp;lt;mjegh@ntlworld.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85406e2038d0243edddde001716b01684f2778ce" translate="yes" xml:space="preserve">
          <source>Martin-Louis Bright &amp;lt;mlbright@gmail.com&amp;gt;</source>
          <target state="translated">马丁&amp;middot;路易斯&amp;middot;布赖特&amp;lt;mlbright@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d429907f8fad8de61eed79786629c962a0844da0" translate="yes" xml:space="preserve">
          <source>Massachusetts</source>
          <target state="translated">Massachusetts</target>
        </trans-unit>
        <trans-unit id="37e5fcb1ae2486eac4310780e954d1d2153d08b1" translate="yes" xml:space="preserve">
          <source>Mastering Perl</source>
          <target state="translated">掌握Perl</target>
        </trans-unit>
        <trans-unit id="ea351e672a82e1244cd8779022e09f0034f5a7e1" translate="yes" xml:space="preserve">
          <source>Mastering Regular Expressions</source>
          <target state="translated">掌握正则表达式</target>
        </trans-unit>
        <trans-unit id="22d4d02d8da4f8d133bb080e8bf0a53687196993" translate="yes" xml:space="preserve">
          <source>Match 'a' followed by 'b' followed by 'c'. We are on a roll and have satisfied the first group. Set $1 to 'abc'.</source>
          <target state="translated">匹配'a',然后是'b',接着是'c'。我们正在进行中,已经满足了第一组的要求。将$1设为'abc'。</target>
        </trans-unit>
        <trans-unit id="11c4d0b2479d50705f90c54d0532f70025aab256" translate="yes" xml:space="preserve">
          <source>Match 'a' followed by 'b'. So far so good.</source>
          <target state="translated">匹配'a',然后是'b'。到目前为止还不错。</target>
        </trans-unit>
        <trans-unit id="2d4b771841aed044053e2a7426782a75fac41932" translate="yes" xml:space="preserve">
          <source>Match all subsections of &lt;code&gt;DESCRIPTION&lt;/code&gt;</source>
          <target state="translated">匹配 &lt;code&gt;DESCRIPTION&lt;/code&gt; 的所有小节</target>
        </trans-unit>
        <trans-unit id="0b37627cd568766a8a2fde5b6baa2adc0dd0c782" translate="yes" xml:space="preserve">
          <source>Match all top level sections but none of their subsections:</source>
          <target state="translated">匹配所有顶层部分,但不匹配其子部分。</target>
        </trans-unit>
        <trans-unit id="d0596c8f0742f8f130e5e576d30972fa9f4302b5" translate="yes" xml:space="preserve">
          <source>Match only the &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Answer&lt;/code&gt; subsections of the &lt;code&gt;DESCRIPTION&lt;/code&gt; section:</source>
          <target state="translated">只匹配 &lt;code&gt;Question&lt;/code&gt; 和 &lt;code&gt;Answer&lt;/code&gt; 的的小节 &lt;code&gt;DESCRIPTION&lt;/code&gt; 部分：</target>
        </trans-unit>
        <trans-unit id="c0e7fa8eb9c5a3355dde0bfcb14e87f4ae52937c" translate="yes" xml:space="preserve">
          <source>Match the 'd'.</source>
          <target state="translated">匹配'd'。</target>
        </trans-unit>
        <trans-unit id="be1f5f366bde2e61ff344fc7793ee6e0a4508408" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;Comments&lt;/code&gt; subsection of</source>
          <target state="translated">匹配的&amp;ldquo; &lt;code&gt;Comments&lt;/code&gt; 小节</target>
        </trans-unit>
        <trans-unit id="e025337ed7c230f237c28a1acfe5d3575399196a" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;DESCRIPTION&lt;/code&gt; section but do</source>
          <target state="translated">匹配 &lt;code&gt;DESCRIPTION&lt;/code&gt; 部分，但可以</target>
        </trans-unit>
        <trans-unit id="809b44171d8c193bc9b4db448d041eca1d612988" translate="yes" xml:space="preserve">
          <source>Match the &lt;code&gt;NAME&lt;/code&gt; and &lt;code&gt;SYNOPSIS&lt;/code&gt; sections and all of their subsections:</source>
          <target state="translated">匹配 &lt;code&gt;NAME&lt;/code&gt; 和 &lt;code&gt;SYNOPSIS&lt;/code&gt; 部分及其所有子部分：</target>
        </trans-unit>
        <trans-unit id="94b47b1709b60267b313ebe40e8ce16e55fa004d" translate="yes" xml:space="preserve">
          <source>Matched non-Unicode code point 0x%X against Unicode property; may not be portable</source>
          <target state="translated">与Unicode属性匹配的非Unicode码点0x%X;可能无法移植。</target>
        </trans-unit>
        <trans-unit id="d89688e77597d0f0b5bc24a196b8aa4f24d28f78" translate="yes" xml:space="preserve">
          <source>Matches a character that has a non-canonical decomposition.</source>
          <target state="translated">匹配一个具有非正则分解的字符。</target>
        </trans-unit>
        <trans-unit id="a6f252d85159e471dcc7245d171fafb38fcd2b97" translate="yes" xml:space="preserve">
          <source>Matches a literal '.'. Equivalent to the Perl regular expression</source>
          <target state="translated">匹配'.'字样。相当于Perl的正则表达式</target>
        </trans-unit>
        <trans-unit id="93575811859840b893fbf3a9e80a1bb8c50a691a" translate="yes" xml:space="preserve">
          <source>Matches any character that is graphic. Theoretically, this means a character that on a printer would cause ink to be used.</source>
          <target state="translated">匹配任何图形字符。理论上,这意味着一个字符在打印机上会导致墨水被使用。</target>
        </trans-unit>
        <trans-unit id="d54b8cec84523d2bbc940d4158b99d956e15f640" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;SSS...S&lt;/code&gt; (repeated as many times as necessary).</source>
          <target state="translated">与 &lt;code&gt;SSS...S&lt;/code&gt; 匹配（必要时重复多次）。</target>
        </trans-unit>
        <trans-unit id="c4ff6981c871c3a904b9e8169f3626531b5fd219" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;S{max}|S{max-1}|...|S{min+1}|S{min}&lt;/code&gt;.</source>
          <target state="translated">匹配为 &lt;code&gt;S{max}|S{max-1}|...|S{min+1}|S{min}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd5e1550fb89dce10a89ca6b24a5232964ff2f7b" translate="yes" xml:space="preserve">
          <source>Matches as &lt;code&gt;S{min}|S{min+1}|...|S{max-1}|S{max}&lt;/code&gt;.</source>
          <target state="translated">匹配为 &lt;code&gt;S{min}|S{min+1}|...|S{max-1}|S{max}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5723f68cdd1b82a0a16aaa3d449fb53afe9be816" translate="yes" xml:space="preserve">
          <source>Matches in the Block property have shortcuts that begin with &quot;In_&quot;. For example, &lt;code&gt;\p{Block=Latin1}&lt;/code&gt; can be written as &lt;code&gt;\p{In_Latin1}&lt;/code&gt; . For backward compatibility, if there is no conflict with another shortcut, these may also be written as &lt;code&gt;\p{Latin1}&lt;/code&gt; or &lt;code&gt;\p{Is_Latin1}&lt;/code&gt; . But, N.B., there are numerous such conflicting shortcuts. Use of these forms for Block is discouraged, and are flagged as such, not only because of the potential confusion as to what is meant, but also because a later release of Unicode may preempt the shortcut, and your program would no longer be correct. Use the &quot;In_&quot; form instead to avoid this, or even more clearly, use the compound form, e.g., &lt;code&gt;\p{blk:latin1}&lt;/code&gt; . See &lt;a href=&quot;perlunicode#Blocks&quot;&gt;Blocks in perlunicode&lt;/a&gt; for more information about this.</source>
          <target state="translated">&amp;ldquo;块&amp;rdquo;属性中的匹配项具有以&amp;ldquo; In_&amp;rdquo;开头的快捷方式。例如， &lt;code&gt;\p{Block=Latin1}&lt;/code&gt; 可以写为 &lt;code&gt;\p{In_Latin1}&lt;/code&gt; 。为了向后兼容，如果与另一个快捷方式没有冲突，则这些快捷方式也可以写为 &lt;code&gt;\p{Latin1}&lt;/code&gt; 或 &lt;code&gt;\p{Is_Latin1}&lt;/code&gt; 。但是，请注意，有许多此类相互冲突的快捷方式。不鼓励将这些形式用于Block，并对其进行标记，这不仅是由于含义上的潜在混淆，而且还因为更高版本的Unicode可能会抢占该快捷方式，并且您的程序将不再是正确的。请改用&amp;ldquo; In_&amp;rdquo;形式来避免这种情况，或更清楚地说，应使用复合形式，例如 &lt;code&gt;\p{blk:latin1}&lt;/code&gt; 。看到&lt;a href=&quot;perlunicode#Blocks&quot;&gt;&lt;/a&gt;有关更多信息，请在perlunicode中阻止。</target>
        </trans-unit>
        <trans-unit id="dc2bbbf4e6e6201407867c19a270d77748d37bd5" translate="yes" xml:space="preserve">
          <source>Matches the best match for &lt;code&gt;&quot;S&quot;&lt;/code&gt; and only that.</source>
          <target state="translated">仅匹配 &lt;code&gt;&quot;S&quot;&lt;/code&gt; 的最佳匹配。</target>
        </trans-unit>
        <trans-unit id="80d7f5dbe400c6fc8812e001032594152a2faa28" translate="yes" xml:space="preserve">
          <source>Matches the best match for &lt;code&gt;S&lt;/code&gt; and only that.</source>
          <target state="translated">仅匹配 &lt;code&gt;S&lt;/code&gt; 的最佳匹配。</target>
        </trans-unit>
        <trans-unit id="099232daa21ff3b64c97abd1d81e14f11a613969" translate="yes" xml:space="preserve">
          <source>Matches zero or more characters, except '/'. Equivalent to the Perl regular expression</source>
          <target state="translated">匹配除'/'以外的零或多个字符。相当于Perl的正则表达式</target>
        </trans-unit>
        <trans-unit id="6a1984e70dd40a8e14356e78cd264d97a21884d9" translate="yes" xml:space="preserve">
          <source>Matches zero or one character, except '/'. Equivalent to the Perl regular expression</source>
          <target state="translated">匹配除'/'以外的零或一个字符。相当于Perl的正则表达式</target>
        </trans-unit>
        <trans-unit id="5150558ec125a3f4852d898bf9fb73076c3ddf80" translate="yes" xml:space="preserve">
          <source>Matching</source>
          <target state="translated">Matching</target>
        </trans-unit>
        <trans-unit id="68a934788aa891939224fba053b378c53192480e" translate="yes" xml:space="preserve">
          <source>Matching Partial Keys</source>
          <target state="translated">匹配部分密钥</target>
        </trans-unit>
        <trans-unit id="5fa10e5481e42bdee7f9fef5a014c3afab8e48c3" translate="yes" xml:space="preserve">
          <source>Matching Scripts and Blocks</source>
          <target state="translated">匹配脚本和块</target>
        </trans-unit>
        <trans-unit id="3b17040c55a83f3f4f7b152219e6e526f7ca9a2a" translate="yes" xml:space="preserve">
          <source>Matching any of several properties in regular expressions.</source>
          <target state="translated">匹配正则表达式中的任意几个属性。</target>
        </trans-unit>
        <trans-unit id="deda9db8be66cd716c834c123a9cb9611817c650" translate="yes" xml:space="preserve">
          <source>Matching in list context</source>
          <target state="translated">列表中的匹配</target>
        </trans-unit>
        <trans-unit id="6220591a5ccdb9123634e1caf4ce8dc3384cfc2e" translate="yes" xml:space="preserve">
          <source>Matching operations can have various modifiers. Modifiers that relate to the interpretation of the regular expression inside are listed below. Modifiers that alter the way a regular expression is used by Perl are detailed in &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt; and &lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;Gory details of parsing quoted constructs in perlop&lt;/a&gt;.</source>
          <target state="translated">匹配操作可以具有各种修饰符。下面列出了与内部正则表达式的解释有关的修饰符。这改变正则表达式通常被Perl的方式修饰符在详细的&lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;正则表达式报价样算perlop得到&lt;/a&gt;和&lt;a href=&quot;perlop#Gory-details-of-parsing-quoted-constructs&quot;&gt;在perlop中解析引用构造的血淋淋的细节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc4353fa78241930d31f3d814bb73f45e31af0a6" translate="yes" xml:space="preserve">
          <source>Matching repetitions</source>
          <target state="translated">匹配的重复</target>
        </trans-unit>
        <trans-unit id="292a005613f8b511eb0b5b4a734aa7ff4e96c83f" translate="yes" xml:space="preserve">
          <source>Matching this or that</source>
          <target state="translated">匹配这个或那个</target>
        </trans-unit>
        <trans-unit id="7bedce9e99b3de1dadd0cc8345ab455769b51642" translate="yes" xml:space="preserve">
          <source>Math Library</source>
          <target state="translated">数学图书馆</target>
        </trans-unit>
        <trans-unit id="dbc9077ff7ea4f194a50599f69ee6ce9e49343a0" translate="yes" xml:space="preserve">
          <source>Math library</source>
          <target state="translated">数学库</target>
        </trans-unit>
        <trans-unit id="5dde5a34dad7754b1821ed0116c07f6b3c7c4405" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called</source>
          <target state="translated">数字的数学是由一个叫做</target>
        </trans-unit>
        <trans-unit id="65a2121388185141d7f0caa9707912405aa48f4e" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; . This is equivalent to saying:</source>
          <target state="translated">默认情况下，带有数字的数学运算是由名为 &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; 的模块完成的。这相当于说：</target>
        </trans-unit>
        <trans-unit id="1d07c5c8a1e8adee66f831b9574d087918f9c747" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called &lt;code&gt;Math::BigInt::Calc&lt;/code&gt;. This is equivalent to saying:</source>
          <target state="translated">默认情况下，带有数字的数学运算是由名为 &lt;code&gt;Math::BigInt::Calc&lt;/code&gt; 的模块完成的。这相当于说：</target>
        </trans-unit>
        <trans-unit id="51f99b48efcd60261390302dfaa9e7f1788ebcc0" translate="yes" xml:space="preserve">
          <source>Math with the numbers is done (by default) by a module called Math::BigInt::Calc. This is equivalent to saying:</source>
          <target state="translated">数字的数学是由一个叫做 Math::BigInt::Calc 的模块完成的(默认情况下)。这相当于说。</target>
        </trans-unit>
        <trans-unit id="a07cdeda4567e42eb8f69d272a000e41f1b29c0e" translate="yes" xml:space="preserve">
          <source>Math::BigFloat</source>
          <target state="translated">Math::BigFloat</target>
        </trans-unit>
        <trans-unit id="fe59e6f09a28dc58e14251546f9c9f1708a1bf4c" translate="yes" xml:space="preserve">
          <source>Math::BigFloat - Arbitrary size floating point math package</source>
          <target state="translated">Math::BigFloat-任意大小的浮点数学包。</target>
        </trans-unit>
        <trans-unit id="0764aaf5c109cb7a50fb7de2184cafba8feab350" translate="yes" xml:space="preserve">
          <source>Math::BigFloat provides support for arbitrary precision floating point. Overloading is also provided for Perl operators.</source>
          <target state="translated">Math::BigFloat 提供了对任意精度浮点的支持。还为Perl运算符提供了重载。</target>
        </trans-unit>
        <trans-unit id="d51b07374f8cf291c43bbc72e105d93bd0861cc4" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports all methods that Math::BigInt supports, except it calculates non-integer results when possible. Please see &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt; for a full description of each method. Below are just the most important differences:</source>
          <target state="translated">Math :: BigFloat支持Math :: BigInt支持的所有方法，但在可能的情况下会计算非整数结果。有关每种方法的完整说明，请参见&lt;a href=&quot;Math::BigInt&quot;&gt;Math :: BigInt&lt;/a&gt;。以下是最重要的区别：</target>
        </trans-unit>
        <trans-unit id="8e8c8a53ad2ae8063e325c75dd2f5dac801b81e3" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports all methods that Math::BigInt supports, except it calculates non-integer results when possible. Please see &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt; for a full description of each method. Below are just the most important differences:</source>
          <target state="translated">Math :: BigFloat支持Math :: BigInt支持的所有方法，但在可能时会计算非整数结果。有关每种方法的完整说明，请参见&lt;a href=&quot;bigint&quot;&gt;Math :: BigInt&lt;/a&gt;。以下是最重要的区别：</target>
        </trans-unit>
        <trans-unit id="b207eda77e8bcb4cfdb781c992961d80a17ed622" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports both precision (rounding to a certain place before or after the dot) and accuracy (rounding to a certain number of digits). For a full documentation, examples and tips on these topics please see the large section about rounding in &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt;.</source>
          <target state="translated">Math :: BigFloat支持精度（四舍五入到点之前或之后的某个位置）和精度（四舍五入到一定位数）。有关这些主题的完整文档，示例和提示，请参阅关于&lt;a href=&quot;Math::BigInt&quot;&gt;Math :: BigInt中的&lt;/a&gt;舍入的较大部分。</target>
        </trans-unit>
        <trans-unit id="780bc62d9e1c2da0b867ab07361ad578cdc89952" translate="yes" xml:space="preserve">
          <source>Math::BigFloat supports both precision (rounding to a certain place before or after the dot) and accuracy (rounding to a certain number of digits). For a full documentation, examples and tips on these topics please see the large section about rounding in &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt;.</source>
          <target state="translated">Math :: BigFloat支持精度（四舍五入到点之前或之后的某个位置）和精度（四舍五入到一定位数）。有关这些主题的完整文档，示例和技巧，请参阅关于&lt;a href=&quot;bigint&quot;&gt;Math :: BigInt中的&lt;/a&gt;舍入的较大部分。</target>
        </trans-unit>
        <trans-unit id="7b2789f47b2fa742bffb303cb5ea1d3e3348e9f0" translate="yes" xml:space="preserve">
          <source>Math::BigInt</source>
          <target state="translated">Math::BigInt</target>
        </trans-unit>
        <trans-unit id="5c0b5ec1b926593506155ef502257108ea19865c" translate="yes" xml:space="preserve">
          <source>Math::BigInt - Arbitrary size integer/float math package</source>
          <target state="translated">Math::BigInt-任意大小的整数/浮点数数学包。</target>
        </trans-unit>
        <trans-unit id="4abcb1313f3f34175afd42fcf44f38a824ea23a7" translate="yes" xml:space="preserve">
          <source>Math::BigInt and Math::BigFloat have full support for accuracy and precision based rounding, both automatically after every operation, as well as manually.</source>
          <target state="translated">Math::BigInt和Math::BigFloat完全支持基于精度和精密的四舍五入,既可以在每次操作后自动进行,也可以手动进行。</target>
        </trans-unit>
        <trans-unit id="e145603092e31477779f0bafc7a4914f97dc56cf" translate="yes" xml:space="preserve">
          <source>Math::BigInt provides support for arbitrary precision integers. Overloading is also provided for Perl operators.</source>
          <target state="translated">Math::BigInt 提供了对任意精度整数的支持。还为Perl运算符提供了重载。</target>
        </trans-unit>
        <trans-unit id="d6c99c78464ade46f8079c42dd339841ba07d8ba" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc</source>
          <target state="translated">Math::BigInt::Calc</target>
        </trans-unit>
        <trans-unit id="fb8a4bd98ced9e335bf9d9e0731551b00eb92084" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc - Pure Perl module to support Math::BigInt</source>
          <target state="translated">Math::BigInt::Calc-用于支持 Math::BigInt 的 Pure Perl 模块。</target>
        </trans-unit>
        <trans-unit id="d0217de2885343284f5e67144b9c98117886dd87" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc inherits from Math::BigInt::Lib.</source>
          <target state="translated">Math::BigInt::Calc继承自Math::BigInt::Lib。</target>
        </trans-unit>
        <trans-unit id="83eed48c0cfaa744405df7e64a828e97c7dc018c" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Calc with some XS for more speed</source>
          <target state="translated">Math::BigInt::Calc用一些XS来提高速度。</target>
        </trans-unit>
        <trans-unit id="37cc8c4470bd2dc063bf4602791a5a2898c073f2" translate="yes" xml:space="preserve">
          <source>Math::BigInt::CalcEmu</source>
          <target state="translated">Math::BigInt::CalcEmu</target>
        </trans-unit>
        <trans-unit id="bd9adb285778e576dd3a1c8d47e1303fcd5d2e82" translate="yes" xml:space="preserve">
          <source>Math::BigInt::CalcEmu - Emulate low-level math with BigInt code</source>
          <target state="translated">Math::BigInt::CalcEmu-用BigInt代码模拟低级数学。</target>
        </trans-unit>
        <trans-unit id="a6065b7a8854e3e8b505e0d8a52c5366a086da7a" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc</source>
          <target state="translated">Math::BigInt::FastCalc</target>
        </trans-unit>
        <trans-unit id="07a7add3262d9f2bcc6e971e59caaf7ebde004ed" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more speed</source>
          <target state="translated">Math::BigInt::FastCalc-Math::BigInt::Calc加入一些XS以提高速度。</target>
        </trans-unit>
        <trans-unit id="1f2ff58ab3e905796e4394ce75ed113142144b4e" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc inherits from Math::BigInt::Calc.</source>
          <target state="translated">Math::BigInt::FastCalc 继承自 Math::BigInt::Calc。</target>
        </trans-unit>
        <trans-unit id="be4788ce129ade27059132f77e1626e6603cd2ee" translate="yes" xml:space="preserve">
          <source>Math::BigInt::FastCalc works exactly like Math::BigInt::Calc. Numbers are stored in decimal form chopped into parts.</source>
          <target state="translated">Math::BigInt::FastCalc 的工作原理与 Math::BigInt::Calc 完全相同。数字是以十进制形式存储的,被切成几部分。</target>
        </trans-unit>
        <trans-unit id="81bb13328947ab5168b53e9d6a7a4bf1b2e650dc" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Lib</source>
          <target state="translated">Math::BigInt::Lib</target>
        </trans-unit>
        <trans-unit id="1048528123aeb8d39ba7c3b96a0179eac5a9dc21" translate="yes" xml:space="preserve">
          <source>Math::BigInt::Lib - virtual parent class for Math::BigInt libraries</source>
          <target state="translated">Math::BigInt::Lib-Math::BigInt库的虚拟父类。</target>
        </trans-unit>
        <trans-unit id="4b2aca3f9cc0a116b76f8d86d32d03b2be17c352" translate="yes" xml:space="preserve">
          <source>Math::BigRat</source>
          <target state="translated">Math::BigRat</target>
        </trans-unit>
        <trans-unit id="ac918a8052350ca0ef4432d06915fcf97fe7f4ff" translate="yes" xml:space="preserve">
          <source>Math::BigRat - Arbitrary big rational numbers</source>
          <target state="translated">Math::BigRat-任意的大有理数。</target>
        </trans-unit>
        <trans-unit id="5a51ed6183023c12205f7010c9031e0ea41bd8ab" translate="yes" xml:space="preserve">
          <source>Math::BigRat complements Math::BigInt and Math::BigFloat by providing support for arbitrary big rational numbers.</source>
          <target state="translated">Math::BigRat 补充了 Math::BigInt 和 Math::BigFloat,提供了对任意大有理数的支持。</target>
        </trans-unit>
        <trans-unit id="c80a28032631e0b53fe6cfb473619c4706043d3a" translate="yes" xml:space="preserve">
          <source>Math::Complex</source>
          <target state="translated">Math::Complex</target>
        </trans-unit>
        <trans-unit id="33bb8bb129e5a0d683c736bb8619d7d51a89c445" translate="yes" xml:space="preserve">
          <source>Math::Complex - complex numbers and associated mathematical functions</source>
          <target state="translated">Math::Complex-复数和相关数学函数。</target>
        </trans-unit>
        <trans-unit id="1e616d3d033099b786d6a5348898f4e4eaaef6c6" translate="yes" xml:space="preserve">
          <source>Math::Trig</source>
          <target state="translated">Math::Trig</target>
        </trans-unit>
        <trans-unit id="c69768dcbf705d5dd806188830336370c242165f" translate="yes" xml:space="preserve">
          <source>Math::Trig - trigonometric functions</source>
          <target state="translated">Math::Trig-三角函数</target>
        </trans-unit>
        <trans-unit id="1c3decdb38e1f19ad133e95ff4746595003c9925" translate="yes" xml:space="preserve">
          <source>Mathemagic, Mutators, and Copy Constructors</source>
          <target state="translated">数学魔术、突变器和复制构造器。</target>
        </trans-unit>
        <trans-unit id="8edc9ac7baa876487a18001d1e0613039a5fb80e" translate="yes" xml:space="preserve">
          <source>Mathematical functions</source>
          <target state="translated">数学函数</target>
        </trans-unit>
        <trans-unit id="418773dca64d526cfea9242d86f08af7459acfc2" translate="yes" xml:space="preserve">
          <source>Mathematical jargon for a list of &lt;b&gt;scalar values&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;标量值&lt;/b&gt;列表的数学术语。</target>
        </trans-unit>
        <trans-unit id="aa8961350eea449561e0373a262893039189bac1" translate="yes" xml:space="preserve">
          <source>Mathematically, a mapping of each of a set of input values to a particular output value. In computers, refers to a &lt;b&gt;subroutine&lt;/b&gt; or &lt;b&gt;operator&lt;/b&gt; that returns a &lt;b&gt;value&lt;/b&gt;. It may or may not have input values (called &lt;b&gt;arguments&lt;/b&gt;).</source>
          <target state="translated">在数学上，一组输入值到特定输出值的映射。在计算机中，是指返回&lt;b&gt;值&lt;/b&gt;的&lt;b&gt;子例程&lt;/b&gt;或&lt;b&gt;运算符&lt;/b&gt;。它可能有也可能没有输入值（称为&lt;b&gt;arguments&lt;/b&gt;）。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="58227b459a1ed9747b8ae17f0db465ba9897bda0" translate="yes" xml:space="preserve">
          <source>Matt Kraai</source>
          <target state="translated">Matt Kraai</target>
        </trans-unit>
        <trans-unit id="3b9691065df69a421dca45239b2430dd14f8c4f5" translate="yes" xml:space="preserve">
          <source>Matt S Trout &amp;lt;mst@shadowcat.co.uk&amp;gt;</source>
          <target state="translated">Matt S Trout &amp;lt;mst@shadowcat.co.uk&amp;gt;</target>
        </trans-unit>
        <trans-unit id="08452ede2be309e7d15ec8e7c08c3981bd4285e0" translate="yes" xml:space="preserve">
          <source>Matt Sergeant, matt@sergeant.org</source>
          <target state="translated">Matt Sergeant,matt@sergeant.org</target>
        </trans-unit>
        <trans-unit id="667478bd6904915672e26b2134308dabeb1c00d5" translate="yes" xml:space="preserve">
          <source>Matt Sergeant, matt@sergeant.org Jarkko Hietaniemi, jhi@iki.fi (while creating Time::Piece for core perl)</source>
          <target state="translated">Matt Sergeant,matt@sergeant.org Jarkko Hietaniemi,jhi@iki.fi (在为核心 perl 创建 Time::Piece 时)</target>
        </trans-unit>
        <trans-unit id="a5b0f4aadc0e2c80f215b9e66188372b0c8b6032" translate="yes" xml:space="preserve">
          <source>Max Maischein &lt;code&gt; corion@cpan.org &lt;/code&gt;</source>
          <target state="translated">马克斯&amp;middot;麦 &lt;code&gt; corion@cpan.org &lt;/code&gt; Max Maischein）corion@cpan.org</target>
        </trans-unit>
        <trans-unit id="cfb7aa9e8b9c834788a3aa7abbda0d104b6ff028" translate="yes" xml:space="preserve">
          <source>Max. codesize limited to 32-bit</source>
          <target state="translated">最大代码大小限制为32位</target>
        </trans-unit>
        <trans-unit id="2bc25b9c27334b35a5cb78bdecefd32cc568034e" translate="yes" xml:space="preserve">
          <source>Maximal count of pending signals (%u) exceeded</source>
          <target state="translated">超出待处理信号的最大数量(%u)</target>
        </trans-unit>
        <trans-unit id="c6400e7876545feb6ada4a737cb20190ee5f945e" translate="yes" xml:space="preserve">
          <source>Maximize version number.</source>
          <target state="translated">最大化版本号。</target>
        </trans-unit>
        <trans-unit id="2bc823b3979073e6178e0296c0aebc017c151728" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt; , returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; 的最大值（除非一个是 &lt;code&gt;NaN&lt;/code&gt; ）会返回另一个[C99]。</target>
        </trans-unit>
        <trans-unit id="e12ab395f246967e38c39d0164a8a0da4c633fb6" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt;, returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最大值（除非一个是 &lt;code&gt;NaN&lt;/code&gt; ）会返回另一个[C99]。</target>
        </trans-unit>
        <trans-unit id="d9d1027058fd884db456494cfd72c7b066e0129a" translate="yes" xml:space="preserve">
          <source>Maximum record size</source>
          <target state="translated">最大记录大小</target>
        </trans-unit>
        <trans-unit id="271672ee5b929c229ec830e1084ec7061feed01f" translate="yes" xml:space="preserve">
          <source>Maximum requirements are inclusive. No version strictly greater than the given version is allowed.</source>
          <target state="translated">最大要求是包括在内的。不允许有严格大于给定版本的版本。</target>
        </trans-unit>
        <trans-unit id="650306b9428b07712d05d5e699489f15d25896b7" translate="yes" xml:space="preserve">
          <source>May 2003</source>
          <target state="translated">2003年5月</target>
        </trans-unit>
        <trans-unit id="8d8f71838e536df93422bf7418bcffe308e1974e" translate="yes" xml:space="preserve">
          <source>May 8, 2003</source>
          <target state="translated">2003年5月8日</target>
        </trans-unit>
        <trans-unit id="afc54fe3511cd56aa93944ccd6c2072e2ca51d94" translate="yes" xml:space="preserve">
          <source>May also be called as a</source>
          <target state="translated">也可称其为</target>
        </trans-unit>
        <trans-unit id="76be650e3300b2492c54955a124602e50e04fd33" translate="yes" xml:space="preserve">
          <source>May be called as a class method</source>
          <target state="translated">可作为类方法调用</target>
        </trans-unit>
        <trans-unit id="373dacfb6afd2988bb2976a418753e29f34aa9dd" translate="yes" xml:space="preserve">
          <source>May be interrupted if the process receives a signal such as &lt;code&gt;SIGALRM&lt;/code&gt; .</source>
          <target state="translated">如果该过程收到诸如 &lt;code&gt;SIGALRM&lt;/code&gt; 之类的信号，则可能会中断。</target>
        </trans-unit>
        <trans-unit id="62f3ade73a821f1ea24a0f8d795c26cf1e6ce565" translate="yes" xml:space="preserve">
          <source>May be interrupted if the process receives a signal such as &lt;code&gt;SIGALRM&lt;/code&gt;.</source>
          <target state="translated">如果该过程收到诸如 &lt;code&gt;SIGALRM&lt;/code&gt; 之类的信号，则可能会中断。</target>
        </trans-unit>
        <trans-unit id="2230ed94de04068bc4c024644ecc248cb32a6f12" translate="yes" xml:space="preserve">
          <source>May be set to &lt;code&gt;-protoypes&lt;/code&gt; , &lt;code&gt;-noprototypes&lt;/code&gt; or the empty string. The empty string is equivalent to the xsubpp default, or &lt;code&gt;-noprototypes&lt;/code&gt; . See the xsubpp documentation for details. MakeMaker defaults to the empty string.</source>
          <target state="translated">可以设置为 &lt;code&gt;-protoypes&lt;/code&gt; ， &lt;code&gt;-noprototypes&lt;/code&gt; 或空字符串。空字符串等效于xsubpp缺省值或 &lt;code&gt;-noprototypes&lt;/code&gt; 。有关详细信息，请参见xsubpp文档。MakeMaker默认为空字符串。</target>
        </trans-unit>
        <trans-unit id="7fbcb527743fae7057a349e19014df074468e03d" translate="yes" xml:space="preserve">
          <source>May be set to &lt;code&gt;-protoypes&lt;/code&gt;, &lt;code&gt;-noprototypes&lt;/code&gt; or the empty string. The empty string is equivalent to the xsubpp default, or &lt;code&gt;-noprototypes&lt;/code&gt;. See the xsubpp documentation for details. MakeMaker defaults to the empty string.</source>
          <target state="translated">可以设置为 &lt;code&gt;-protoypes&lt;/code&gt; ， &lt;code&gt;-noprototypes&lt;/code&gt; 或空字符串。空字符串等效于xsubpp缺省值或 &lt;code&gt;-noprototypes&lt;/code&gt; 。有关详细信息，请参见xsubpp文档。MakeMaker默认为空字符串。</target>
        </trans-unit>
        <trans-unit id="61bbde05c6ed2bdfce6b99696af957752900542f" translate="yes" xml:space="preserve">
          <source>May be used to disable a filter, but is rarely needed. See &lt;a href=&quot;filter_del&quot;&gt;filter_del&lt;/a&gt;.</source>
          <target state="translated">可用于禁用过滤器，但很少需要。参见&lt;a href=&quot;filter_del&quot;&gt;filter_del&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d4efb207d6eec8eaeb59feea09701cb59c03617" translate="yes" xml:space="preserve">
          <source>May be used with -d to modify the first release criteria.</source>
          <target state="translated">可与-d一起使用,以修改第一个释放标准。</target>
        </trans-unit>
        <trans-unit id="f8aed58dc1a5779f9d540d01df5f9836265ac5aa" translate="yes" xml:space="preserve">
          <source>May not be available if library or source was not provided when building perl. (Win32)</source>
          <target state="translated">如果在构建perl时没有提供库或源码,可能无法使用。(Win32)</target>
        </trans-unit>
        <trans-unit id="21d4e632642238bf57dcc94af3549a614c826f30" translate="yes" xml:space="preserve">
          <source>May not behave as expected. Behavior depends on the C runtime library's implementation of &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt;, and the filesystem being used. The FAT filesystem typically does not support an &quot;access time&quot; field, and it may limit timestamps to a granularity of two seconds. (Win32)</source>
          <target state="translated">可能无法达到预期的效果。行为取决于C运行时库对 &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; 的实现以及所使用的文件系统。FAT文件系统通常不支持&amp;ldquo;访问时间&amp;rdquo;字段，并且可能会将时间戳限制为两秒。（Win32的）</target>
        </trans-unit>
        <trans-unit id="55f01979402408f498d72bc9013d9ad19e4f0e16" translate="yes" xml:space="preserve">
          <source>May take extra time to study SCALAR (&lt;code&gt;$_&lt;/code&gt; if unspecified) in anticipation of doing many pattern matches on the string before it is next modified. This may or may not save time, depending on the nature and number of patterns you are searching and the distribution of character frequencies in the string to be searched; you probably want to compare run times with and without it to see which is faster. Those loops that scan for many short constant strings (including the constant parts of more complex patterns) will benefit most.</source>
          <target state="translated">可能需要花费更多的时间来研究SCALAR（如果未指定， &lt;code&gt;$_&lt;/code&gt; ），因为预期在字符串下一次修改之前会对字符串进行许多模式匹配。这可能会或可能不会节省时间，具体取决于要搜索的模式的性质和数量以及要搜索的字符串中字符频率的分布；您可能想比较带有和不带有它的运行时间，以查看哪个更快。那些扫描许多短常量字符串（包括更复杂的模式的常量部分）的循环将大为受益。</target>
        </trans-unit>
        <trans-unit id="5740917ad4ecd92dc69b592bee2c126f65bf64cc" translate="yes" xml:space="preserve">
          <source>Maybe an autolocking mode?</source>
          <target state="translated">也许是自动锁定模式?</target>
        </trans-unit>
        <trans-unit id="17baa904576f5c89cb04e825ade31958aeaa5cd3" translate="yes" xml:space="preserve">
          <source>Maybe simply that your function did not need to be exported in the first place. Perl has a long and not so glorious history of exporting functions that it should not have.</source>
          <target state="translated">也许只是因为你的函数本来就不需要导出。Perl有一段很长的历史,而且并不光彩,它导出了一些本不该导出的函数。</target>
        </trans-unit>
        <trans-unit id="0e936eae5362c54e4c8af6287c324b783d9e5c3e" translate="yes" xml:space="preserve">
          <source>McAfee Guardian</source>
          <target state="translated">McAfee Guardian</target>
        </trans-unit>
        <trans-unit id="cde7070dd55ab5fad4aecced0aebd3d04e8674c3" translate="yes" xml:space="preserve">
          <source>Meaningless. (RISC OS)</source>
          <target state="translated">毫无意义。(RISC OS)</target>
        </trans-unit>
        <trans-unit id="64570578bb629125c651aed9b004e56379071150" translate="yes" xml:space="preserve">
          <source>Means that the optimizer information is all that the regular expression contains, and thus one does not need to enter the regex engine at all.</source>
          <target state="translated">意味着优化器信息就是正则表达式所包含的全部信息,因此根本不需要进入regex引擎。</target>
        </trans-unit>
        <trans-unit id="5c65173ed0ec89e479fa09fd6c0c7e73dddb4a5c" translate="yes" xml:space="preserve">
          <source>Means you can still run your old program because we didn&amp;rsquo;t break any of the features or bugs it was relying on.</source>
          <target state="translated">意味着您仍然可以运行旧程序，因为我们没有破坏它所依赖的任何功能或错误。</target>
        </trans-unit>
        <trans-unit id="2c883ddc8815110562192710c7cee3da6f78c83a" translate="yes" xml:space="preserve">
          <source>Means you don&amp;rsquo;t have to pay money to get it, but the copyright on it may still belong to someone else (like Larry).</source>
          <target state="translated">意味着您不必花钱就可以买到它，但是它的版权可能仍然属于其他人（例如Larry）。</target>
        </trans-unit>
        <trans-unit id="bbf0f10f278f2fd9b8fbb27cda2cf259516fe6e6" translate="yes" xml:space="preserve">
          <source>Means you&amp;rsquo;re not in legal trouble if you give a bootleg copy of it to your friends and we find out about it. In fact, we&amp;rsquo;d rather you gave a copy to all your friends.</source>
          <target state="translated">意味着如果您将其盗版副本提供给您的朋友，我们会找到相关信息，那么您就不会遇到法律麻烦。实际上，我们希望您将副本提供给所有朋友。</target>
        </trans-unit>
        <trans-unit id="b4f338c26fdb57033fabc6dbb73636186214a368" translate="yes" xml:space="preserve">
          <source>Meanwhile in script.pl:</source>
          <target state="translated">同时在script.pl中。</target>
        </trans-unit>
        <trans-unit id="e31c01e90d9e8d19ca2313d7b406547f59ae64e3" translate="yes" xml:space="preserve">
          <source>Meanwhile, back in the main thread, we first create a queue (line 33) and queue up all the numbers from 3 to 1000 for checking, plus a termination notice. Then all we have to do to get the ball rolling is pass the queue and the first prime to the &lt;code&gt;check_num()&lt;/code&gt; subroutine (line 34).</source>
          <target state="translated">同时，回到主线程中，我们首先创建一个队列（第33行），并将所有从3到1000的数字排队以进行检查，以及终止通知。然后，为了使球滚动，我们要做的就是将队列和第一个素数传递给 &lt;code&gt;check_num()&lt;/code&gt; 子例程（第34行）。</target>
        </trans-unit>
        <trans-unit id="8aa7bb99b5f3a119fade7cc10eb9fede5a084e8b" translate="yes" xml:space="preserve">
          <source>Meanwhile, special identifiers don't follow the above rules; For the most part, all of the identifiers in this category have a special meaning given by Perl. Because they have special parsing rules, these generally can't be fully-qualified. They come in four forms:</source>
          <target state="translated">同时,特殊标识符并不遵循上述规则;大多数情况下,这一类标识符都有Perl赋予的特殊含义。因为它们有特殊的解析规则,所以这些一般不能完全限定。它们有四种形式。</target>
        </trans-unit>
        <trans-unit id="01b22c5ba29e5ca443c76b69d7a2fdd28452d640" translate="yes" xml:space="preserve">
          <source>Meanwhile, special identifiers don't follow the above rules; For the most part, all of the identifiers in this category have a special meaning given by Perl. Because they have special parsing rules, these generally can't be fully-qualified. They come in six forms (but don't use forms 5 and 6):</source>
          <target state="translated">同时,特殊标识符并不遵循上述规则;大多数情况下,这一类标识符都有Perl赋予的特殊含义。因为它们有特殊的解析规则,所以这些一般不能完全限定。它们有六种形式(但不要使用形式5和6)。</target>
        </trans-unit>
        <trans-unit id="83a5148d83732e363f572eb9f62ae4a34ffe78f8" translate="yes" xml:space="preserve">
          <source>Mechanisms are available to help modules writers split their modules into autoloadable files. See the standard AutoLoader module described in &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt; and in &lt;a href=&quot;autosplit&quot;&gt;AutoSplit&lt;/a&gt;, the standard SelfLoader modules in &lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt;, and the document on adding C functions to Perl code in &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="translated">可以使用一些机制来帮助模块编写者将其模块拆分为可自动加载的文件。见中所述的标准自动装载模块&lt;a href=&quot;autoloader&quot;&gt;自动装载&lt;/a&gt;和&lt;a href=&quot;autosplit&quot;&gt;自动分割&lt;/a&gt;，在标准SelfLoader模块&lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt;，以及在加入C函数到Perl代码文档&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8b192f4447d1edc034616ab7c4aca49390dec0c" translate="yes" xml:space="preserve">
          <source>Memoization is not a cure-all:</source>
          <target state="translated">记忆化不是万能的。</target>
        </trans-unit>
        <trans-unit id="e35c7de9275e303103a9cca4277120ada2fcee2d" translate="yes" xml:space="preserve">
          <source>Memoization is not magical.</source>
          <target state="translated">记忆力并不神奇。</target>
        </trans-unit>
        <trans-unit id="6f890b039269df17d39e9aef284c419ab8ca6d7a" translate="yes" xml:space="preserve">
          <source>Memoize</source>
          <target state="translated">Memoize</target>
        </trans-unit>
        <trans-unit id="5f81d99ecb62730206abe574a7c1d1cbed900a6f" translate="yes" xml:space="preserve">
          <source>Memoize - Make functions faster by trading space for time</source>
          <target state="translated">Memoize-以空间换时间,让功能更快实现</target>
        </trans-unit>
        <trans-unit id="843238e6a586f32a34512ff5be6c4efe5893f4d3" translate="yes" xml:space="preserve">
          <source>Memoize would then call &lt;code&gt;function&lt;/code&gt; whenever a cached value was entirely absent or was older than ten seconds.</source>
          <target state="translated">然后，只要完全不存在缓存值或早于十秒钟，Memoize就会调用 &lt;code&gt;function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="029c7227d55a1555d4ad9945591262ad934bfa62" translate="yes" xml:space="preserve">
          <source>Memoize::AnyDBM_File</source>
          <target state="translated">Memoize::AnyDBM_File</target>
        </trans-unit>
        <trans-unit id="f7222db52a03e50045b47cd151cf03999d99b842" translate="yes" xml:space="preserve">
          <source>Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for Storable use</source>
          <target state="translated">Memoize::AnyDBM_File-为可存储使用的AnyDBM_File提供EXISTS胶水。</target>
        </trans-unit>
        <trans-unit id="ab0d35e554a3be52fed5431a1db1dc0af18b1554" translate="yes" xml:space="preserve">
          <source>Memoize::Expire</source>
          <target state="translated">Memoize::Expire</target>
        </trans-unit>
        <trans-unit id="68da8c7a0efad73320d46b4b430e0877571aa887" translate="yes" xml:space="preserve">
          <source>Memoize::Expire - Plug-in module for automatic expiration of memoized values</source>
          <target state="translated">Memoize::Expire-用于自动过期记忆值的插件模块。</target>
        </trans-unit>
        <trans-unit id="0361cce2dcbb0a8d3953fc3f935563867ef2d797" translate="yes" xml:space="preserve">
          <source>Memoize::Expire is a layer of software that you can insert in between Memoize itself and whatever underlying package implements the cache. The layer presents a hash variable whose values expire whenever they get too old, have been used too often, or both. You tell &lt;code&gt;Memoize&lt;/code&gt; to use this forgetful hash as its cache instead of the default, which is an ordinary hash.</source>
          <target state="translated">Memoize :: Expire是一层软件，您可以在Memoize本身与任何实现缓存的基础包之间插入。该层提供了一个哈希变量，其值一旦变旧，使用频率过高或两者兼而有之，它们就会过期。您告诉 &lt;code&gt;Memoize&lt;/code&gt; 使用此健忘的哈希作为其缓存，而不是默认值（即普通哈希）。</target>
        </trans-unit>
        <trans-unit id="5ce5e44b5b097a389f35898a0295eae63ccf4c6e" translate="yes" xml:space="preserve">
          <source>Memoize::Expire is a plug-in module for Memoize. It allows the cached values for memoized functions to expire automatically. This manual assumes you are already familiar with the Memoize module. If not, you should study that manual carefully first, paying particular attention to the HASH feature.</source>
          <target state="translated">Memoize::Expire是Memoize的一个插件模块。它允许记忆函数的缓存值自动过期。本手册假定你已经熟悉Memoize模块。如果不熟悉,你应该先仔细研究那本手册,特别注意HASH功能。</target>
        </trans-unit>
        <trans-unit id="058ef175eeea79174423065d5def30710bbd9b3d" translate="yes" xml:space="preserve">
          <source>Memoize::Expire uses a real hash internally to store the cached data. You can use the &lt;code&gt;HASH&lt;/code&gt; option to Memoize::Expire to supply a tied hash in place of the ordinary hash that Memoize::Expire will normally use. You can use this feature to add Memoize::Expire as a layer in between a persistent disk hash and Memoize. If you do this, you get a persistent disk cache whose entries expire automatically. For example:</source>
          <target state="translated">Memoize :: Expire在内部使用一个真实的哈希值来存储缓存的数据。您可以使用 &lt;code&gt;HASH&lt;/code&gt; 选项来Memoize :: Expire来提供绑定的哈希，以代替Memoize :: Expire通常使用的普通哈希。您可以使用此功能将Memoize :: Expire添加为持久磁盘哈希和Memoize之间的一层。如果这样做，您将获得一个永久性磁盘缓存，其条目将自动过期。例如：</target>
        </trans-unit>
        <trans-unit id="d269b32ccc7d9c3a39d79c1bc38b7d11bdeedce9" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireFile</source>
          <target state="translated">Memoize::ExpireFile</target>
        </trans-unit>
        <trans-unit id="832a8b2c800fc41add4efb073f8dd0755c8d611b" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireFile - test for Memoize expiration semantics</source>
          <target state="translated">Memoize::ExpireFile-测试Memoize过期语义。</target>
        </trans-unit>
        <trans-unit id="cfe63b7749d0c4b0ed459ed8a03537e27ee0964b" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireTest</source>
          <target state="translated">Memoize::ExpireTest</target>
        </trans-unit>
        <trans-unit id="39f28a417ca2b739bec2a2c936fff15da4323299" translate="yes" xml:space="preserve">
          <source>Memoize::ExpireTest - test for Memoize expiration semantics</source>
          <target state="translated">Memoize::ExpireTest-测试Memoize过期语义。</target>
        </trans-unit>
        <trans-unit id="76efc803a2cb3f46d2d6c0879436aa10ce1458f5" translate="yes" xml:space="preserve">
          <source>Memoize::NDBM_File</source>
          <target state="translated">Memoize::NDBM_File</target>
        </trans-unit>
        <trans-unit id="746b4220ae70f33c450a28158673789c9a546fde" translate="yes" xml:space="preserve">
          <source>Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for Storable use</source>
          <target state="translated">Memoize::NDBM_File-为可存储使用的NDBM_File提供EXISTS胶水。</target>
        </trans-unit>
        <trans-unit id="fd4bdbba9a5e54216d1795015c434a21a9711f86" translate="yes" xml:space="preserve">
          <source>Memoize::SDBM_File</source>
          <target state="translated">Memoize::SDBM_File</target>
        </trans-unit>
        <trans-unit id="da914c13c14b27bc717bfbef4040f10310d95a2d" translate="yes" xml:space="preserve">
          <source>Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for Storable use</source>
          <target state="translated">Memoize::SDBM_File-为SDBM_File提供EXISTS,供Storable使用。</target>
        </trans-unit>
        <trans-unit id="21eebbc5fdb9d06943ca49fe99d3577c31994277" translate="yes" xml:space="preserve">
          <source>Memoize::Storable</source>
          <target state="translated">Memoize::Storable</target>
        </trans-unit>
        <trans-unit id="38149e962712243ad8d3efeb22a8323aef23996c" translate="yes" xml:space="preserve">
          <source>Memoize::Storable - store Memoized data in Storable database</source>
          <target state="translated">Memoize::Storable-在Storable数据库中存储Memoized数据。</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="38b88ba291aedc801f0cf1ace141ae388b9947cc" translate="yes" xml:space="preserve">
          <source>Memory Allocation</source>
          <target state="translated">内存分配</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">内存管理</target>
        </trans-unit>
        <trans-unit id="08cfd5338de5adae5d3a77de3eba507e6e489994" translate="yes" xml:space="preserve">
          <source>Memory Management and String Handling</source>
          <target state="translated">内存管理和字符串处理</target>
        </trans-unit>
        <trans-unit id="c9a7ab7f07e403c0ae91c30f84e4c67c80a6e037" translate="yes" xml:space="preserve">
          <source>Memory allocated by external libraries is not counted.</source>
          <target state="translated">外部库分配的内存不计算在内。</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">内存分配</target>
        </trans-unit>
        <trans-unit id="ab42bb6faf1372452bd96901de22f5faa6ef497c" translate="yes" xml:space="preserve">
          <source>Memory consumption</source>
          <target state="translated">内存消耗</target>
        </trans-unit>
        <trans-unit id="14ff314163f3b5b04d3fe92dafa744f973c3e836" translate="yes" xml:space="preserve">
          <source>Memory footprint debugging</source>
          <target state="translated">内存占用调试</target>
        </trans-unit>
        <trans-unit id="f7c5b8ee1bf3d6c206de6c158ee1895b1a26d8cc" translate="yes" xml:space="preserve">
          <source>Memory logging is somewhat similar to &lt;code&gt;-Dm&lt;/code&gt; but is independent of &lt;code&gt;-DDEBUGGING&lt;/code&gt; , and at a higher level; all uses of Newx(), Renew(), and Safefree() are logged with the caller's source code file and line number (and C function name, if supported by the C compiler). In contrast, &lt;code&gt;-Dm&lt;/code&gt; is directly at the point of &lt;code&gt;malloc()&lt;/code&gt; . SV logging is similar.</source>
          <target state="translated">内存日志记录有点类似于 &lt;code&gt;-Dm&lt;/code&gt; ,但是独立于 &lt;code&gt;-DDEBUGGING&lt;/code&gt; ，并且级别更高；Newx（），Renew（）和Safefree（）的所有使用都记录有调用者的源代码文件和行号（以及C函数名称，如果C编译器支持的话）。相反， &lt;code&gt;-Dm&lt;/code&gt; 直接位于 &lt;code&gt;malloc()&lt;/code&gt; 的位置。SV日志记录与此类似。</target>
        </trans-unit>
        <trans-unit id="7916d3e59a9fde6fdcb6cfdf74b28bd45e1783e8" translate="yes" xml:space="preserve">
          <source>Memory logging is somewhat similar to &lt;code&gt;-Dm&lt;/code&gt; but is independent of &lt;code&gt;-DDEBUGGING&lt;/code&gt;, and at a higher level; all uses of Newx(), Renew(), and Safefree() are logged with the caller's source code file and line number (and C function name, if supported by the C compiler). In contrast, &lt;code&gt;-Dm&lt;/code&gt; is directly at the point of &lt;code&gt;malloc()&lt;/code&gt;. SV logging is similar.</source>
          <target state="translated">内存日志记录有点类似于 &lt;code&gt;-Dm&lt;/code&gt; ,但是独立于 &lt;code&gt;-DDEBUGGING&lt;/code&gt; ，并且级别更高；Newx（），Renew（）和Safefree（）的所有使用都记录有调用者的源代码文件和行号（以及C函数名称，如果C编译器支持的话）。相反， &lt;code&gt;-Dm&lt;/code&gt; 直接位于 &lt;code&gt;malloc()&lt;/code&gt; 的位置。SV日志记录与此类似。</target>
        </trans-unit>
        <trans-unit id="4c2c814c19b69f35d9db7c2c6ebf3d08f352fd38" translate="yes" xml:space="preserve">
          <source>Memory mapped IO</source>
          <target state="translated">内存映射IO</target>
        </trans-unit>
        <trans-unit id="6c6a6deece93cee8a3277158bc8df3a089d2c6dd" translate="yes" xml:space="preserve">
          <source>Memory obtained by this should &lt;b&gt;ONLY&lt;/b&gt; be freed with &lt;a href=&quot;#Safefree&quot;&gt;&quot;Safefree&quot;&lt;/a&gt;.</source>
          <target state="translated">由此获得的内存&lt;b&gt;仅&lt;/b&gt;应使用&lt;a href=&quot;#Safefree&quot;&gt;&amp;ldquo; Safefree&amp;rdquo;&lt;/a&gt;释放。</target>
        </trans-unit>
        <trans-unit id="26466bc4a0a5892915da9639400d4d78c9148962" translate="yes" xml:space="preserve">
          <source>Memory obtained by this should &lt;b&gt;ONLY&lt;/b&gt; be freed with &lt;a href=&quot;#Safefree&quot;&gt;Safefree&lt;/a&gt;.</source>
          <target state="translated">由此获得的内存&lt;b&gt;仅&lt;/b&gt;应使用&lt;a href=&quot;#Safefree&quot;&gt;Safefree&lt;/a&gt;释放。</target>
        </trans-unit>
        <trans-unit id="c13fdc13d6ff4f45a77804ad2cceb15673c95db3" translate="yes" xml:space="preserve">
          <source>Mercifully, most localization tasks are a matter of finding ways to translate whole phrases, generally sentences, where the context is relatively set, and where the only variation in content is</source>
          <target state="translated">值得庆幸的是,大多数本地化任务都是想办法翻译整个短语,一般是句子,上下文是相对固定的,唯一的内容变化是</target>
        </trans-unit>
        <trans-unit id="2a5792cd53fd5c07c6e156f110cc9bdc59c69569" translate="yes" xml:space="preserve">
          <source>Mercifully, this design decision becomes crucial only in the hairiest of inflected languages, of which Russian is by no means the</source>
          <target state="translated">值得庆幸的是,这个设计决定只有在最毛躁的变调语言中才会变得至关重要,而俄语绝不是其中之一。</target>
        </trans-unit>
        <trans-unit id="a19110119cfc0a6eeba94dd28976c27677eeeaf2" translate="yes" xml:space="preserve">
          <source>Merge all &lt;code&gt;@fragments&lt;/code&gt; together. It will accept both CPAN::Meta objects and (possibly incomplete) hashrefs of metadata.</source>
          <target state="translated">合并所有 &lt;code&gt;@fragments&lt;/code&gt; 。它将接受CPAN :: Meta对象和元数据（可能不完整）的hashref。</target>
        </trans-unit>
        <trans-unit id="8b83c2b2bc6eb3815752c6b70aceb628db5830bb" translate="yes" xml:space="preserve">
          <source>Merged disk caches</source>
          <target state="translated">合并的磁盘缓存</target>
        </trans-unit>
        <trans-unit id="3bf6a951ac9a11e06dc7c59a3e9100f420a4948a" translate="yes" xml:space="preserve">
          <source>Merges a given typemap into the object. Note that a failed merge operation leaves the object in an inconsistent state so clone it if necessary.</source>
          <target state="translated">将指定的类型映射合并到对象中。请注意,失败的合并操作会使对象处于不一致的状态,所以必要时可以克隆它。</target>
        </trans-unit>
        <trans-unit id="139306e2016e825bc98a4c26d30108bdfa5d60f7" translate="yes" xml:space="preserve">
          <source>Merging CPAN Meta fragments</source>
          <target state="translated">合并CPAN元片段</target>
        </trans-unit>
        <trans-unit id="2294ad7eb76da674941c37151d49f37527c0d994" translate="yes" xml:space="preserve">
          <source>Merging and Resolving Prerequisites</source>
          <target state="translated">合并和解决前提条件</target>
        </trans-unit>
        <trans-unit id="e83dc47ddb09693487317e8066e16ecf7ac94e51" translate="yes" xml:space="preserve">
          <source>Message flag constants for send() and recv().</source>
          <target state="translated">send()和recv()的消息标志常量。</target>
        </trans-unit>
        <trans-unit id="bc36800e17eaf7f803d98c577d91569b6c7f036b" translate="yes" xml:space="preserve">
          <source>Messing with Perl's Internals</source>
          <target state="translated">乱用Perl的内部结构</target>
        </trans-unit>
        <trans-unit id="b9828e06647e7ffc584e789aea4d7e68962a3966" translate="yes" xml:space="preserve">
          <source>Meta keys must be defined, and must be true when used as a boolean. Keys may not be references. You are free to stringify a reference &lt;code&gt;&quot;$ref&quot;&lt;/code&gt; for use as a key, but this package will not stringify it for you.</source>
          <target state="translated">元键必须定义，并且在用作布尔值时必须为true。键可能不是引用。您可以随意对引用 &lt;code&gt;&quot;$ref&quot;&lt;/code&gt; 进行字符串化以用作键，但是此软件包不会为您对其进行字符串化。</target>
        </trans-unit>
        <trans-unit id="884d7f1593f68104d33ecab4f4bbe9381f348cdd" translate="yes" xml:space="preserve">
          <source>MetaCPAN</source>
          <target state="translated">MetaCPAN</target>
        </trans-unit>
        <trans-unit id="d754d67910f4c2642d4f88945d3605a6a4025a42" translate="yes" xml:space="preserve">
          <source>Metacharacters</source>
          <target state="translated">Metacharacters</target>
        </trans-unit>
        <trans-unit id="44522bc3b457b440444e21774a3b6c8607931812" translate="yes" xml:space="preserve">
          <source>Metaphoric Quotations</source>
          <target state="translated">隐喻语录</target>
        </trans-unit>
        <trans-unit id="798b3e1c6f8b0a74eece2abb46cfe2fd57a06fe6" translate="yes" xml:space="preserve">
          <source>Method %s not permitted</source>
          <target state="translated">方法%s不允许</target>
        </trans-unit>
        <trans-unit id="8c86ca70f3e85fdec1d74a21fb3963c31fdcdd7f" translate="yes" xml:space="preserve">
          <source>Method Call Variations</source>
          <target state="translated">方法调用变化</target>
        </trans-unit>
        <trans-unit id="d8949e17ae84d7a06765768cb82b20ae6019661d" translate="yes" xml:space="preserve">
          <source>Method Calls on Filehandles</source>
          <target state="translated">文件柄的方法调用</target>
        </trans-unit>
        <trans-unit id="6fd706a5558ebea104b27041341cb1ea5fac0c06" translate="yes" xml:space="preserve">
          <source>Method Invocation</source>
          <target state="translated">方法调用</target>
        </trans-unit>
        <trans-unit id="4f453985833ca25c15ccb8b4ce0b4ada21b9adb4" translate="yes" xml:space="preserve">
          <source>Method Names as Strings</source>
          <target state="translated">方法名称为字符串</target>
        </trans-unit>
        <trans-unit id="169d21aab45387c970c5fa19ac363def6ba831e8" translate="yes" xml:space="preserve">
          <source>Method Names with a Fully Qualified Name</source>
          <target state="translated">具有完全限定名称的方法名称</target>
        </trans-unit>
        <trans-unit id="149bc56a4796369142e80bb8e93236ae91c74251" translate="yes" xml:space="preserve">
          <source>Method Resolution Caching</source>
          <target state="translated">方法解析缓存</target>
        </trans-unit>
        <trans-unit id="0c84198ff44a95ef84e9c8366e0d425cc63a174e" translate="yes" xml:space="preserve">
          <source>Method Resolution Order</source>
          <target state="translated">方法解析顺序</target>
        </trans-unit>
        <trans-unit id="aa23ba323c11de2437b737ae399da090864345e1" translate="yes" xml:space="preserve">
          <source>Method calls</source>
          <target state="translated">方法调用</target>
        </trans-unit>
        <trans-unit id="bcdf1b1bb254fccb870b04cffc381c4e506b716b" translate="yes" xml:space="preserve">
          <source>Method calls are not influenced by prototypes either, because the function to be called is indeterminate at compile time, since the exact code called depends on inheritance.</source>
          <target state="translated">方法调用也不受原型的影响,因为要调用的函数在编译时是不确定的,因为具体调用的代码取决于继承。</target>
        </trans-unit>
        <trans-unit id="5c72d128e104c59ad0c3c2a4128e634028dba480" translate="yes" xml:space="preserve">
          <source>Method for operation %s not found in package %s during blessing</source>
          <target state="translated">祈福时在包中找不到%s的操作方法。</target>
        </trans-unit>
        <trans-unit id="9c1f923c258569220ac20750fe41c9eb6cce3bef" translate="yes" xml:space="preserve">
          <source>Method names in the &lt;code&gt;use overload&lt;/code&gt; directive</source>
          <target state="translated">&lt;code&gt;use overload&lt;/code&gt; 指令中的方法名称</target>
        </trans-unit>
        <trans-unit id="8bf68fe4a9ba9d42e80a08fe93064afd994243cb" translate="yes" xml:space="preserve">
          <source>Method resolution order only matters in the case of multiple inheritance. In the case of single inheritance, Perl simply looks up the inheritance chain to find a method:</source>
          <target state="translated">方法解析顺序只有在多重继承的情况下才重要。在单继承的情况下,Perl只需在继承链上查找一个方法。</target>
        </trans-unit>
        <trans-unit id="d67544f861de65aff5df7b6f9ed170e715ea2ab1" translate="yes" xml:space="preserve">
          <source>Method such as &lt;code&gt;ok&lt;/code&gt;, and &lt;code&gt;note&lt;/code&gt; are shortcuts for generating common 1-task events based on the old API, however they are forward compatible, and easy to use. If these meet your needs then go ahead and use them, but please check back often for alternatives that may be added.</source>
          <target state="translated">作为这样的方法 &lt;code&gt;ok&lt;/code&gt; ，和 &lt;code&gt;note&lt;/code&gt; 是产生基于旧的API共同1-任务事件的快捷方式，但他们是向前兼容，并且易于使用。如果这些满足您的需求，请继续使用它们，但是请经常回来查看是否可能添加其他选择。</target>
        </trans-unit>
        <trans-unit id="34cec11dfde693ed2754d2e489ae4f0bbc9cc853" translate="yes" xml:space="preserve">
          <source>Method that protects Makefile single-value constants (mainly filenames), so that make will still treat them as single values even if they inconveniently have spaces in. If the make program being used cannot achieve such protection and the given text would need it, throws an exception.</source>
          <target state="translated">保护Makefile单值常量(主要是文件名)的方法,这样即使它们有不方便的空格,make也会把它们当作单值。如果正在使用的make程序不能实现这样的保护,而给定的文本又需要这样的保护,则抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="b801c10b1ac5aa2b998ab1658d5c860e220086a7" translate="yes" xml:space="preserve">
          <source>Method to customize MakeMaker for Win9X</source>
          <target state="translated">定制MakeMaker for Win9X的方法</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="c9952f904ebdacb612e4e6f4d7de0226ec975738" translate="yes" xml:space="preserve">
          <source>Methods I can't really figure out where they should go yet.</source>
          <target state="translated">方法我还真想不出他们应该去哪里。</target>
        </trans-unit>
        <trans-unit id="40af0f1172251b1f0d2a538bd0e00ae001b2fcaf" translate="yes" xml:space="preserve">
          <source>Methods always loaded</source>
          <target state="translated">方法总是加载</target>
        </trans-unit>
        <trans-unit id="a68695b030e2ecbb7c261ec2a9c505d5cb18c649" translate="yes" xml:space="preserve">
          <source>Methods are overridden here: not dynamic_lib itself, but the utility ones that do the OS-specific work.</source>
          <target state="translated">这里的方法是重写的:不是dynamic_lib本身,而是那些做操作系统特定工作的实用方法。</target>
        </trans-unit>
        <trans-unit id="ddc9c9bf62381c038cf262a1503103fafba0ddfa" translate="yes" xml:space="preserve">
          <source>Methods disallowed by the blacklist cannot be permitted by the whitelist.</source>
          <target state="translated">被黑名单不允许的方法不能被白名单允许。</target>
        </trans-unit>
        <trans-unit id="3492e94289b56d2304db645e851cbd229618f6f3" translate="yes" xml:space="preserve">
          <source>Methods for Collation</source>
          <target state="translated">整理方法</target>
        </trans-unit>
        <trans-unit id="dffdf0d2cd8722a265661b1c3c208de439bb95a7" translate="yes" xml:space="preserve">
          <source>Methods for Cygwin file specs</source>
          <target state="translated">Cygwin文件规范的方法</target>
        </trans-unit>
        <trans-unit id="82ca12b02f71920ae1348327f9c5bc0dd81da215" translate="yes" xml:space="preserve">
          <source>Methods for Epoc file specs</source>
          <target state="translated">Epoc文件规格的方法</target>
        </trans-unit>
        <trans-unit id="68812b66a62e2047690bf9da1c3c46de5cc3d232" translate="yes" xml:space="preserve">
          <source>Methods for OS/2 file specs</source>
          <target state="translated">OS/2文件规格的方法</target>
        </trans-unit>
        <trans-unit id="4d421ef7bd512b00bbdb44912712ec892bca2014" translate="yes" xml:space="preserve">
          <source>Methods for Searching</source>
          <target state="translated">搜索方法</target>
        </trans-unit>
        <trans-unit id="27e99810c06b72d2d33936fc288406b84f55b203" translate="yes" xml:space="preserve">
          <source>Methods for VMS file specs</source>
          <target state="translated">VMS文件规格的方法</target>
        </trans-unit>
        <trans-unit id="b9b3a715e48f22629289b2063628d2443ae0ab52" translate="yes" xml:space="preserve">
          <source>Methods for Win32 file specs</source>
          <target state="translated">Win32文件规格的方法</target>
        </trans-unit>
        <trans-unit id="5d7bf3463f69bf3ade9275de1811133bd2e8b4a6" translate="yes" xml:space="preserve">
          <source>Methods for manipulating file specifications.</source>
          <target state="translated">操作文件规格的方法。</target>
        </trans-unit>
        <trans-unit id="ebbba6a759fd4eaa9d94e1633b1a4e4abe7f7a45" translate="yes" xml:space="preserve">
          <source>Methods for manipulating file specifications. Other File::Spec modules, such as File::Spec::Mac, inherit from File::Spec::Unix and override specific methods.</source>
          <target state="translated">用于操作文件规范的方法。其他 File::Spec 模块,如 File::Spec::Mac,继承自 File::Spec::Unix 并重写特定的方法。</target>
        </trans-unit>
        <trans-unit id="7481ef085e93898eccd2d4291e104c0ca1eaac16" translate="yes" xml:space="preserve">
          <source>Methods for the adventurous</source>
          <target state="translated">冒险者的方法</target>
        </trans-unit>
        <trans-unit id="8b4c41334b1f0849f43409490279c73ebfa5df79" translate="yes" xml:space="preserve">
          <source>Methods in Detail</source>
          <target state="translated">方法详解</target>
        </trans-unit>
        <trans-unit id="e068233ba30d5c340de8033909e63f34a39f8d3e" translate="yes" xml:space="preserve">
          <source>Methods in the other Classes</source>
          <target state="translated">其他类的方法</target>
        </trans-unit>
        <trans-unit id="6e829311e4b065fb2f2e0f38edceb6d95375c55c" translate="yes" xml:space="preserve">
          <source>Methods that you may find it handy to use, from routines of yours that you put in %Lexicon entries.</source>
          <target state="translated">你可能会发现它很方便使用的方法,从你放在%Lexicon条目中的例程。</target>
        </trans-unit>
        <trans-unit id="52c4361c86c7fd471a806b4c8215e5369dfc731b" translate="yes" xml:space="preserve">
          <source>Methods to do with constructing language handles.</source>
          <target state="translated">与构建语言句柄有关的方法。</target>
        </trans-unit>
        <trans-unit id="b6f9f2fbd170ec9c9489d0e901a7e3b7214949c3" translate="yes" xml:space="preserve">
          <source>Methods to override UN*X behaviour in ExtUtils::MakeMaker</source>
          <target state="translated">在ExtUtils::MakeMaker中覆盖UN*X行为的方法。</target>
        </trans-unit>
        <trans-unit id="ab3b6636bc321fcd9f46d8689a767ed7e52e65e7" translate="yes" xml:space="preserve">
          <source>Methods used by ExtUtils::MakeMaker</source>
          <target state="translated">ExtUtils::MakeMaker使用的方法</target>
        </trans-unit>
        <trans-unit id="7f996e6a1460bfdcd35f19090247cb216f784336" translate="yes" xml:space="preserve">
          <source>Methods which help initialize the MakeMaker object and macros.</source>
          <target state="translated">帮助初始化MakeMaker对象和宏的方法。</target>
        </trans-unit>
        <trans-unit id="3e6fda3ab5c8fa6834ff71aef9c511f877f6c23d" translate="yes" xml:space="preserve">
          <source>Methods you should implement</source>
          <target state="translated">您应该实施的方法</target>
        </trans-unit>
        <trans-unit id="41937b20fbe8c71d9c6c3346aff43c001aa25e33" translate="yes" xml:space="preserve">
          <source>Mexico</source>
          <target state="translated">Mexico</target>
        </trans-unit>
        <trans-unit id="bd97b56132ac0bfc7557be46520b5fd83aff153a" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; and the denizens of makemaker@perl.org with code from ExtUtils::MM_Unix and ExtUtils::MM_Win32.</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;和makemaker@perl.org的居民使用ExtUtils :: MM_Unix和ExtUtils :: MM_Win32中的代码。</target>
        </trans-unit>
        <trans-unit id="52068be64791a464b661dac455db8140aea835a5" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; and the perl-qa dancers!</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;和perl-qa舞者！</target>
        </trans-unit>
        <trans-unit id="88af124e71f22819d4d398414f274e80611dc1ac" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; on top of code by Nick Ing-Simmons and Jeffrey Friedl.</source>
          <target state="translated">迈克尔&amp;middot;G&amp;middot;施韦恩（Michael G Schwern）&amp;lt;schwern@pobox.com&amp;gt;（尼克&amp;middot;英格&amp;middot;西蒙斯和杰弗里&amp;middot;弗里德尔的代码）。</target>
        </trans-unit>
        <trans-unit id="609a8e114c05509c720089b4066abb697390e6b3" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; with code from ExtUtils::MM_Unix</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;，带有来自ExtUtils :: MM_Unix的代码</target>
        </trans-unit>
        <trans-unit id="976aacead2152d3736e5ca6c6514a1e5684482c5" translate="yes" xml:space="preserve">
          <source>Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt; with much inspiration from Joshua Pritikin's Test module and lots of help from Barrie Slaymaker, Tony Bowden, blackstar.co.uk, chromatic, Fergal Daly and the perl-qa gang.</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;受Joshua Pritikin的&amp;ldquo;测试&amp;rdquo;模块的启发，并从Barrie Slaymaker，Tony Bowden，blackstar.co.uk，chrom，Fergal Daly和perl-qa帮派那里获得了很多帮助。</target>
        </trans-unit>
        <trans-unit id="f21627f7b936980d951472d8f3b9d11843e6ffcc" translate="yes" xml:space="preserve">
          <source>Michael G. Schwern &amp;lt;mschwern@cpan.org&amp;gt;</source>
          <target state="translated">迈克尔&amp;middot;G&amp;middot;施瓦恩（Michael G.Schwern）&amp;lt;mschwern@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b7e8898e084b205078364468d25648e9b0ec170d" translate="yes" xml:space="preserve">
          <source>Michael Peters &amp;lt;mpeters at plusthree dot com&amp;gt;</source>
          <target state="translated">迈克尔&amp;middot;彼得斯（Michael Peters）&amp;lt;plusthree dot com的mpeters&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dd33a21f26a7d4f2cb826da8d8de1e33bcd542ba" translate="yes" xml:space="preserve">
          <source>Michael Schwern</source>
          <target state="translated">Michael Schwern</target>
        </trans-unit>
        <trans-unit id="5110b352c6bc056ec40bf3aebc4144eb1ae0e1d8" translate="yes" xml:space="preserve">
          <source>Michigan</source>
          <target state="translated">Michigan</target>
        </trans-unit>
        <trans-unit id="a8c99518c0df8eeda3f71152b09117cad644595c" translate="yes" xml:space="preserve">
          <source>MicroEMACS</source>
          <target state="translated">MicroEMACS</target>
        </trans-unit>
        <trans-unit id="359924accaba027302f36e848227bed8498f3885" translate="yes" xml:space="preserve">
          <source>Microsoft Platform SDK 64-bit Compiler</source>
          <target state="translated">微软平台SDK 64位编译器</target>
        </trans-unit>
        <trans-unit id="19e1b99fc64b8852de8ab31bb7d1b51525551308" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++</source>
          <target state="translated">Microsoft Visual C++</target>
        </trans-unit>
        <trans-unit id="50a674447acfb53f080e5c7a940380d878d668e4" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 2005 Express Edition</source>
          <target state="translated">Microsoft Visual C++2005 Express版</target>
        </trans-unit>
        <trans-unit id="b0803900f0583cc04c7c50cafeaa151ade70dcde" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 2008-2019 Express/Community Edition</source>
          <target state="translated">Microsoft Visual C++2008-2019 Express/Community Edition</target>
        </trans-unit>
        <trans-unit id="d286550ff77bf9e5cdb6de350a40b896ae0aa2a8" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ Toolkit 2003</source>
          <target state="translated">Microsoft Visual C++Toolkit 2003</target>
        </trans-unit>
        <trans-unit id="9476515c776c7ffa5f23daf6605041d17cb39e43" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;Big5&lt;/code&gt;.</source>
          <target state="translated">Microsoft对 &lt;code&gt;Big5&lt;/code&gt; 的扩展。</target>
        </trans-unit>
        <trans-unit id="35bc8ec91b9bc1d48aec480ad01ccf1d9a2cc4f5" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;EUC-CN&lt;/code&gt;.</source>
          <target state="translated">Microsoft对 &lt;code&gt;EUC-CN&lt;/code&gt; 的扩展。</target>
        </trans-unit>
        <trans-unit id="46a667be64853bfcf4ee2942093cec7a4847183a" translate="yes" xml:space="preserve">
          <source>Microsoft extension to &lt;code&gt;EUC-KR&lt;/code&gt;.</source>
          <target state="translated">Microsoft对 &lt;code&gt;EUC-KR&lt;/code&gt; 的扩展。</target>
        </trans-unit>
        <trans-unit id="e8d72bfd184d60d481c76b37ef21c0a642dd30ee" translate="yes" xml:space="preserve">
          <source>Microsoft products misuse the following names:</source>
          <target state="translated">微软产品误用以下名称。</target>
        </trans-unit>
        <trans-unit id="624c2711360f576ebf12a94ce042cede4b18471f" translate="yes" xml:space="preserve">
          <source>Microsoft's understanding of &lt;code&gt;Shift_JIS&lt;/code&gt;.</source>
          <target state="translated">微软对 &lt;code&gt;Shift_JIS&lt;/code&gt; 的理解。</target>
        </trans-unit>
        <trans-unit id="46246987fa909ac6d3b3544d378e153a25558858" translate="yes" xml:space="preserve">
          <source>Microsoft-related naming mess</source>
          <target state="translated">微软相关命名乱象</target>
        </trans-unit>
        <trans-unit id="6bb062409e93c0885568573482cc58a0d290f0ac" translate="yes" xml:space="preserve">
          <source>Midnight BSD</source>
          <target state="translated">午夜 BSD</target>
        </trans-unit>
        <trans-unit id="78f6e604b99e20fee4d55d99822d486186bfc9da" translate="yes" xml:space="preserve">
          <source>Might be a runaway multi-line %s string starting on line %d</source>
          <target state="translated">可能是一个失控的多行 %s 字符串,从 %d 行开始。</target>
        </trans-unit>
        <trans-unit id="3d917d6d7fad51d62d22d6b5c32840fa7d5b5e8e" translate="yes" xml:space="preserve">
          <source>Migration from &lt;code&gt;DynaLoader&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;DynaLoader&lt;/code&gt; 迁移</target>
        </trans-unit>
        <trans-unit id="2ceffec12b40d21f869eb5b84598130f16f111e6" translate="yes" xml:space="preserve">
          <source>Migration from DynaLoader</source>
          <target state="translated">从DynaLoader迁移</target>
        </trans-unit>
        <trans-unit id="12654a571e20ea45eaec45ab50ad734768e09847" translate="yes" xml:space="preserve">
          <source>Mike Cariaso provided valuable insight into the best way to solve this problem.</source>
          <target state="translated">Mike Cariaso对解决这一问题的最佳方法提出了宝贵的见解。</target>
        </trans-unit>
        <trans-unit id="234bc19cd7be72665729799de11490c9dd83bf27" translate="yes" xml:space="preserve">
          <source>Mike Doherty &amp;lt;doherty@cpan.org&amp;gt;</source>
          <target state="translated">Mike Doherty &amp;lt;doherty@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="039e707fb015ae5335982d49bab4f238cf134377" translate="yes" xml:space="preserve">
          <source>Mind that argv[argc] must be NULL, same as those passed to a main function in C.</source>
          <target state="translated">注意 argv[argc]必须是 NULL,和 C 语言中传递给主函数的一样。</target>
        </trans-unit>
        <trans-unit id="326f115f454ad964c4545e76abb586c5dfa4774e" translate="yes" xml:space="preserve">
          <source>Mind, that any element of the array contains a complete set of arguments for the ld command. So do not specify</source>
          <target state="translated">注意,数组中的任何元素都包含了ld命令的完整参数集。所以不要在数组中指定</target>
        </trans-unit>
        <trans-unit id="e509f9fc49b801b1d3cb79b36c8621b4642edef8" translate="yes" xml:space="preserve">
          <source>Minimal Set of Overloaded Operations</source>
          <target state="translated">最小的过载操作集</target>
        </trans-unit>
        <trans-unit id="447f6cc3c1201528e85c548d7378d0bbb259ea5f" translate="yes" xml:space="preserve">
          <source>Minimal code</source>
          <target state="translated">最少的代码</target>
        </trans-unit>
        <trans-unit id="b9bbc06fd8287f4f714cc43f7b852676d2d7a603" translate="yes" xml:space="preserve">
          <source>Minimal patches that fix platform-specific test failures.</source>
          <target state="translated">修复平台特定测试失败的最小补丁。</target>
        </trans-unit>
        <trans-unit id="9add73fb8f3d0c44a5715a5d41747422c62c935b" translate="yes" xml:space="preserve">
          <source>Minimal set of supported functions</source>
          <target state="translated">支持的最小功能集</target>
        </trans-unit>
        <trans-unit id="390af1977edf4e133548c8556281c14e4c310537" translate="yes" xml:space="preserve">
          <source>Minimal setup (looks for</source>
          <target state="translated">最小化设置(寻找</target>
        </trans-unit>
        <trans-unit id="906ea91bd1c9c6378b061a822858462af43e979d" translate="yes" xml:space="preserve">
          <source>Minimum length of string (measured in bytes from &lt;code&gt;stringarg&lt;/code&gt; ) that must match; if the engine reaches the end of the match but hasn't reached this position in the string, it should fail.</source>
          <target state="translated">必须匹配的最小字符串长度（以 &lt;code&gt;stringarg&lt;/code&gt; 的字节数为单位）；如果引擎到达比赛结束但尚未到达字符串中的该位置，则它应该失败。</target>
        </trans-unit>
        <trans-unit id="be12c32ff84593686015cc2e0cb0d89d77831ed3" translate="yes" xml:space="preserve">
          <source>Minimum length of string (measured in bytes from &lt;code&gt;stringarg&lt;/code&gt;) that must match; if the engine reaches the end of the match but hasn't reached this position in the string, it should fail.</source>
          <target state="translated">必须匹配的最小字符串长度（以 &lt;code&gt;stringarg&lt;/code&gt; 为单位，以字节为单位）；如果引擎到达比赛结束但尚未到达字符串中的该位置，则它应该失败。</target>
        </trans-unit>
        <trans-unit id="5343fd4802dbdf5cd1789ee30e8d69ca6cabadc2" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt; , returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; 的最小值（除非一个是 &lt;code&gt;NaN&lt;/code&gt; ）返回另一个[C99]。</target>
        </trans-unit>
        <trans-unit id="e0302c55180fe62d506dfe28ff33373c2560204c" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, except when either is &lt;code&gt;NaN&lt;/code&gt;, returns the other [C99].</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的最小值（除非一个是 &lt;code&gt;NaN&lt;/code&gt; ）返回另一个[C99]。</target>
        </trans-unit>
        <trans-unit id="32d3a57a3bd71eb3c56ac46e121c1eb2dc0a4ca8" translate="yes" xml:space="preserve">
          <source>Minimum requirements are inclusive. &lt;code&gt;$version&lt;/code&gt; is required, along with any greater version number.</source>
          <target state="translated">最低要求包括在内。需要 &lt;code&gt;$version&lt;/code&gt; 以及任何更大的版本号。</target>
        </trans-unit>
        <trans-unit id="2a013cdfce3e9c596d4b9cb32825ab89339bddcd" translate="yes" xml:space="preserve">
          <source>Miniperl.Exe</source>
          <target state="translated">Miniperl.Exe</target>
        </trans-unit>
        <trans-unit id="5783432e3d972b6894919df1e5c308c82f9c7634" translate="yes" xml:space="preserve">
          <source>MirOS BSD</source>
          <target state="translated">MirOS BSD</target>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">Misc</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="319c19b9e813f94557eb26c26b7b4388bfdc0145" translate="yes" xml:space="preserve">
          <source>Miscellaneous Functions</source>
          <target state="translated">杂项功能</target>
        </trans-unit>
        <trans-unit id="e9886ca0fdacee4b74dfbeeffc975d27efbdeb6b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Modules</source>
          <target state="translated">杂项模块</target>
        </trans-unit>
        <trans-unit id="99463edffe28d703da1b6e42d1ae7b9d31c1b070" translate="yes" xml:space="preserve">
          <source>Miscellaneous Things</source>
          <target state="translated">杂项</target>
        </trans-unit>
        <trans-unit id="7b60f144da88cbf71ee28b893333af2adba91042" translate="yes" xml:space="preserve">
          <source>Miscellaneous Usage</source>
          <target state="translated">其他用途</target>
        </trans-unit>
        <trans-unit id="7549a52ededf0abbc51eaa6563f958964d60ea6e" translate="yes" xml:space="preserve">
          <source>Miscellaneous Utility Functions</source>
          <target state="translated">杂项实用功能</target>
        </trans-unit>
        <trans-unit id="b1c2f1326539aaa7427ad9b1469de4ff74f87ee5" translate="yes" xml:space="preserve">
          <source>Miscellaneous commentary.</source>
          <target state="translated">杂项评论。</target>
        </trans-unit>
        <trans-unit id="342a5f135351fd510e40f97d2fab9f29fe7f026d" translate="yes" xml:space="preserve">
          <source>Miscellaneous constants. Used for the &lt;code&gt;$uCreate&lt;/code&gt; argument of &lt;code&gt;CreateFile&lt;/code&gt; or the &lt;code&gt;$uFromWhere&lt;/code&gt; argument of &lt;code&gt;SetFilePointer&lt;/code&gt;. Plus &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt;, which you usually won't need to check for since most routines translate it into a false value.</source>
          <target state="translated">杂项常数。用于 &lt;code&gt;$uCreate&lt;/code&gt; 的参数 &lt;code&gt;CreateFile&lt;/code&gt; 或 &lt;code&gt;$uFromWhere&lt;/code&gt; 的参数 &lt;code&gt;SetFilePointer&lt;/code&gt; 。加上 &lt;code&gt;INVALID_HANDLE_VALUE&lt;/code&gt; ，通常无需检查，因为大多数例程将其转换为假值。</target>
        </trans-unit>
        <trans-unit id="a37adce83d6fa2179beba32ceeacd3778204fcfb" translate="yes" xml:space="preserve">
          <source>Miscellaneous encodings</source>
          <target state="translated">杂项编码</target>
        </trans-unit>
        <trans-unit id="314bb4fc83d55b365225efaa4fc333e95057e960" translate="yes" xml:space="preserve">
          <source>Miscellaneous functions</source>
          <target state="translated">杂项职能</target>
        </trans-unit>
        <trans-unit id="9da774369baa717644789be36b08da5ef92ca224" translate="yes" xml:space="preserve">
          <source>Misfeatures</source>
          <target state="translated">Misfeatures</target>
        </trans-unit>
        <trans-unit id="ce60b331195543a6746d022bb20ad15f338c66de" translate="yes" xml:space="preserve">
          <source>Misplaced _ in number</source>
          <target state="translated">错位_数量</target>
        </trans-unit>
        <trans-unit id="a95de1c6435f8743842f21d48536596257568105" translate="yes" xml:space="preserve">
          <source>Misplaced plan</source>
          <target state="translated">错位计划</target>
        </trans-unit>
        <trans-unit id="9c5c9d737a51552824a8f054a3830ede7eb73132" translate="yes" xml:space="preserve">
          <source>Missing $ on loop variable</source>
          <target state="translated">循环变量中缺少$</target>
        </trans-unit>
        <trans-unit id="07f4c05777767269c3fe2fd5ee568ca57fbd5be9" translate="yes" xml:space="preserve">
          <source>Missing ']' in prototype for %s : %s</source>
          <target state="translated">在%s的原型中缺少']':%s。</target>
        </trans-unit>
        <trans-unit id="492deed501b2e8f77f0d5bf65e92ebc107c3988d" translate="yes" xml:space="preserve">
          <source>Missing argument for %n in %s</source>
          <target state="translated">在%s中缺少%n的参数</target>
        </trans-unit>
        <trans-unit id="6d29fb503cf20ccfb86deead9f1e147184da6314" translate="yes" xml:space="preserve">
          <source>Missing argument in %s</source>
          <target state="translated">%s中缺少参数</target>
        </trans-unit>
        <trans-unit id="905237197bd9811f9b09e25f0763d52acfbe8f9d" translate="yes" xml:space="preserve">
          <source>Missing argument to -%c</source>
          <target state="translated">-%c缺少参数</target>
        </trans-unit>
        <trans-unit id="c8ff0f07a4c291aedab0828071c7e5be901eca1d" translate="yes" xml:space="preserve">
          <source>Missing braces on \N{}</source>
          <target state="translated">缺少括号的/N{}</target>
        </trans-unit>
        <trans-unit id="65ab85b2077b61fe9a0b2696a10440f202845e30" translate="yes" xml:space="preserve">
          <source>Missing braces on \N{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正则表达式中\ N {}上缺少大括号；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="f2b7f0d0959c77816c06bcafc45fa06ad6622507" translate="yes" xml:space="preserve">
          <source>Missing braces on \o{}</source>
          <target state="translated">缺少括号的/o{}</target>
        </trans-unit>
        <trans-unit id="77272a604bbc7df55b2cbf61f879522fe8ed6ffd" translate="yes" xml:space="preserve">
          <source>Missing comma after first argument to %s function</source>
          <target state="translated">%s函数的第一个参数后缺少逗号。</target>
        </trans-unit>
        <trans-unit id="5527cff2b5c9e125b749b05c07f90a92a547a921" translate="yes" xml:space="preserve">
          <source>Missing command in piped open</source>
          <target state="translated">在管道打开中缺少命令</target>
        </trans-unit>
        <trans-unit id="8fb97fb839a7785ff8deb8f6a3434e5842793e89" translate="yes" xml:space="preserve">
          <source>Missing control char name in \c</source>
          <target state="translated">缺少控制字符名称</target>
        </trans-unit>
        <trans-unit id="38d01981943106f56a9819e6a7268d9a6454e8a9" translate="yes" xml:space="preserve">
          <source>Missing name in &quot;%s sub&quot;</source>
          <target state="translated">&quot;%s子 &quot;中缺少名称</target>
        </trans-unit>
        <trans-unit id="d72d7995bf8862606c4717d1a2053eff2624ec07" translate="yes" xml:space="preserve">
          <source>Missing or undefined argument to %s</source>
          <target state="translated">%s参数缺失或未定义</target>
        </trans-unit>
        <trans-unit id="05c054b8f3d0a5a4b72b812cbfe4bb1cd415154f" translate="yes" xml:space="preserve">
          <source>Missing right brace on \%c{} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">正则表达式中\％c {}上缺少右大括号；以&amp;lt;-HERE标记，以m /％s /</target>
        </trans-unit>
        <trans-unit id="9b28d6622907b838faba9a35172b03ffbf93af4a" translate="yes" xml:space="preserve">
          <source>Missing right brace on \N{}</source>
          <target state="translated">缺少右括号。</target>
        </trans-unit>
        <trans-unit id="e3e8c9cf38694cb1369209c024da00e671eb2a06" translate="yes" xml:space="preserve">
          <source>Missing right brace on \N{} or unescaped left brace after \N</source>
          <target state="translated">缺少/N{}上的右括号或/N后的左括号未封顶。</target>
        </trans-unit>
        <trans-unit id="256a6056983709743749fcd95a4f7e468cbb0a7f" translate="yes" xml:space="preserve">
          <source>Missing right curly or square bracket</source>
          <target state="translated">缺少右大括号或方括号</target>
        </trans-unit>
        <trans-unit id="e6560a728cc75a6b103e706dc673d7ef4bcf29de" translate="yes" xml:space="preserve">
          <source>Mixing #define and #ifdef</source>
          <target state="translated">混合#define和#ifdef</target>
        </trans-unit>
        <trans-unit id="29c40186eed76e6033a40498c6fe7f4e2e466bc7" translate="yes" xml:space="preserve">
          <source>Mixing UTF-8 and non-UTF-8 strings is tricky. Use &lt;code&gt;bytes_to_utf8&lt;/code&gt; to get a new string which is UTF-8 encoded, and then combine them.</source>
          <target state="translated">混合使用UTF-8和非UTF-8字符串比较棘手。使用 &lt;code&gt;bytes_to_utf8&lt;/code&gt; 来获取UTF-8编码的新字符串，然后将它们组合在一起。</target>
        </trans-unit>
        <trans-unit id="66bca4e0f37fde6f6d5033a86915673ed0b48f44" translate="yes" xml:space="preserve">
          <source>Mixing command line option with other arguments</source>
          <target state="translated">混合命令行选项和其他参数</target>
        </trans-unit>
        <trans-unit id="c85d9a78c1b4d78ca553de634935cfea419df54e" translate="yes" xml:space="preserve">
          <source>Mixing declarations and code</source>
          <target state="translated">混合声明和代码</target>
        </trans-unit>
        <trans-unit id="191dad4eb9e454325153296d486b75e87731816d" translate="yes" xml:space="preserve">
          <source>Mixing different object types</source>
          <target state="translated">混合不同的对象类型</target>
        </trans-unit>
        <trans-unit id="4f1e7f7efdba287b74e8142b1268ce27b211ade2" translate="yes" xml:space="preserve">
          <source>Mixing it up</source>
          <target state="translated">混合起来</target>
        </trans-unit>
        <trans-unit id="9355f7a3087594f002f5e9c67bfdb7357b2d09c8" translate="yes" xml:space="preserve">
          <source>Mixing signed char pointers with unsigned char pointers</source>
          <target state="translated">混合有符号的字符指针和无符号的字符指针。</target>
        </trans-unit>
        <trans-unit id="c8ded3624005b356d9a738f8bbff4c65caab09bc" translate="yes" xml:space="preserve">
          <source>MkTemp family:</source>
          <target state="translated">MkTemp家族。</target>
        </trans-unit>
        <trans-unit id="89e86a83d22490472fadfccc84db9971217f00e2" translate="yes" xml:space="preserve">
          <source>Mkbootstrap typically gets called from an extension Makefile.</source>
          <target state="translated">Mkbootstrap通常从扩展Makefile中被调用。</target>
        </trans-unit>
        <trans-unit id="bf642b0445fa1b197a3f404144c575c97857e845" translate="yes" xml:space="preserve">
          <source>Mnemonic for &lt;code&gt;(?^...)&lt;/code&gt; : A fresh beginning since the usual use of a caret is to match at the beginning.</source>
          <target state="translated">&lt;code&gt;(?^...)&lt;/code&gt; 助记符：一个崭新的开始，因为通常使用脱字符号作为开头。</target>
        </trans-unit>
        <trans-unit id="7fb71ad054736a057594bb08cc0713a551c20ae5" translate="yes" xml:space="preserve">
          <source>Mnemonic for &lt;code&gt;(?^...)&lt;/code&gt;: A fresh beginning since the usual use of a caret is to match at the beginning.</source>
          <target state="translated">&lt;code&gt;(?^...)&lt;/code&gt; 助记符：一个崭新的开始，因为通常使用脱字符号作为开头。</target>
        </trans-unit>
        <trans-unit id="a58694480088720e80e9150ab4b17e65401d3e57" translate="yes" xml:space="preserve">
          <source>Mnemonic:</source>
          <target state="translated">Mnemonic:</target>
        </trans-unit>
        <trans-unit id="a4609f4e9d1567a8be9be3013a68cb5f9077d509" translate="yes" xml:space="preserve">
          <source>Mnemonic: / delimits line boundaries when quoting poetry.</source>
          <target state="translated">记忆法。/当引用诗歌时,划定行界。</target>
        </trans-unit>
        <trans-unit id="a17c263d1e94a797a2f907b413a2e6937babe3bd" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;%&lt;/code&gt; is page number in &lt;b&gt;nroff&lt;/b&gt;.</source>
          <target state="translated">助记符： &lt;code&gt;%&lt;/code&gt; 是&lt;b&gt;nroff中的&lt;/b&gt;页码。</target>
        </trans-unit>
        <trans-unit id="ff8f7e9ef271156c4cf38cda15862d7d90c4cb37" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;'&lt;/code&gt; often follows a quoted string.</source>
          <target state="translated">助记符： &lt;code&gt;'&lt;/code&gt; 通常在带引号的字符串后面。</target>
        </trans-unit>
        <trans-unit id="03462936fc4d222008baee163c91bca679bcf610" translate="yes" xml:space="preserve">
          <source>Mnemonic: &lt;code&gt;`&lt;/code&gt; often precedes a quoted string.</source>
          <target state="translated">助记符： &lt;code&gt;`&lt;/code&gt; 通常在加引号的字符串之前。</target>
        </trans-unit>
        <trans-unit id="6d89fd4acfd6e65581a03c1bccc5077a0683b53d" translate="yes" xml:space="preserve">
          <source>Mnemonic: = has horizontal lines.</source>
          <target state="translated">口诀:=有横线。</target>
        </trans-unit>
        <trans-unit id="a4fee04f913df1ce7e585c0d4cb5cf688bad64b1" translate="yes" xml:space="preserve">
          <source>Mnemonic: Complement of</source>
          <target state="translated">记忆力。补语:</target>
        </trans-unit>
        <trans-unit id="00d81532eead6e059ec9226bf31a1d7bc4d3c648" translate="yes" xml:space="preserve">
          <source>Mnemonic: Extra error explanation.</source>
          <target state="translated">记忆法。额外的错误解释:</target>
        </trans-unit>
        <trans-unit id="f3adb972eb89279dcbf38ffdb2b34cb01ac80557" translate="yes" xml:space="preserve">
          <source>Mnemonic: Is this version of perl in the right bracket?</source>
          <target state="translated">口诀:这个版本的perl是否在正确的括号里?</target>
        </trans-unit>
        <trans-unit id="c83fc5eabe67c53a88a66531db063afe5a8798fe" translate="yes" xml:space="preserve">
          <source>Mnemonic: Perl's (original) space</source>
          <target state="translated">记忆法。Perl的(原始)空间</target>
        </trans-unit>
        <trans-unit id="de5973eb3bd2f2951a919587c5a581d934fb917e" translate="yes" xml:space="preserve">
          <source>Mnemonic: Perl's (original) word.</source>
          <target state="translated">记忆法。Perl的(原)字。</target>
        </trans-unit>
        <trans-unit id="e3688e90b8ece4a626d04ff3f6b6b3e5cd816fdf" translate="yes" xml:space="preserve">
          <source>Mnemonic: Space, as modified by Perl. (It doesn't include the vertical tab until v5.18, which both the Posix standard and Unicode consider white space.)</source>
          <target state="translated">记忆法。空间,经Perl修改。(直到 v5.18 才包含垂直制表符,Posix 标准和 Unicode 都将其视为白色空间。)</target>
        </trans-unit>
        <trans-unit id="e034d1e8207da0718183c9081637de75a93ba2ae" translate="yes" xml:space="preserve">
          <source>Mnemonic: What just went bang?</source>
          <target state="translated">记忆力。什么刚刚去砰?</target>
        </trans-unit>
        <trans-unit id="1f52600a3a5911b067b3374a8879381b17ea1317" translate="yes" xml:space="preserve">
          <source>Mnemonic: Where was the error &quot;at&quot;?</source>
          <target state="translated">记忆法。&quot;在 &quot;的错误在哪里?</target>
        </trans-unit>
        <trans-unit id="c2d59c20bf5fe5e92f4fce8a028d68d9472173f0" translate="yes" xml:space="preserve">
          <source>Mnemonic: Where was the syntax error &quot;at&quot;?</source>
          <target state="translated">记忆法。语法错误 &quot;在 &quot;哪里?</target>
        </trans-unit>
        <trans-unit id="13036ce2395db627a394493e09b57d820655a6e3" translate="yes" xml:space="preserve">
          <source>Mnemonic: [ begins subscripts.</source>
          <target state="translated">记忆法:【开始分词。</target>
        </trans-unit>
        <trans-unit id="6478e17d9b14a75686fa2aeaa0fda7fc477e3a6c" translate="yes" xml:space="preserve">
          <source>Mnemonic: a &quot;colon&quot; in poetry is a part of a line.</source>
          <target state="translated">记忆:诗歌中的 &quot;冒号 &quot;是诗行的一部分。</target>
        </trans-unit>
        <trans-unit id="06be15525bc8ff40fc0fd75c1aede3dd3e6eca7f" translate="yes" xml:space="preserve">
          <source>Mnemonic: be positive and forward looking.</source>
          <target state="translated">口诀:积极向上,勇往直前。</target>
        </trans-unit>
        <trans-unit id="45c1dcc3d237500077fd6705954bc10a0da68241" translate="yes" xml:space="preserve">
          <source>Mnemonic: brother to &lt;code&gt;$^&lt;/code&gt; .</source>
          <target state="translated">助记符： &lt;code&gt;$^&lt;/code&gt; 兄弟。</target>
        </trans-unit>
        <trans-unit id="8016703b31a155c2a574fa23c4f3718d5f24c64b" translate="yes" xml:space="preserve">
          <source>Mnemonic: brother to &lt;code&gt;$^&lt;/code&gt;.</source>
          <target state="translated">助记符： &lt;code&gt;$^&lt;/code&gt; 兄弟。</target>
        </trans-unit>
        <trans-unit id="8bfbe3b8dd831a42303599b72a7a29a0dbbce16e" translate="yes" xml:space="preserve">
          <source>Mnemonic: comma (the syntactic subscript separator) is a semi-semicolon.</source>
          <target state="translated">记忆:逗号(句法分标分隔符)是分号。</target>
        </trans-unit>
        <trans-unit id="a5e54620ad7fc3dd7f83e5824baaa97ef210abf7" translate="yes" xml:space="preserve">
          <source>Mnemonic: e</source>
          <target state="translated">助记符:e</target>
        </trans-unit>
        <trans-unit id="fb1dad35694a1d1c6e8b249b4963e948af75d628" translate="yes" xml:space="preserve">
          <source>Mnemonic: he</source>
          <target state="translated">记忆:他</target>
        </trans-unit>
        <trans-unit id="4f25fdfd275a765786269fb643e1c55e1a9c1820" translate="yes" xml:space="preserve">
          <source>Mnemonic: it's the uid you came</source>
          <target state="translated">Mnemonic:it's the uid you came.</target>
        </trans-unit>
        <trans-unit id="f53200593eb86ae8dd4c325941dd8eb32bcbba07" translate="yes" xml:space="preserve">
          <source>Mnemonic: it's the uid you went</source>
          <target state="translated">记忆:是你去的uid。</target>
        </trans-unit>
        <trans-unit id="c2560fee0f5b656addb6e58657f827dd080975cc" translate="yes" xml:space="preserve">
          <source>Mnemonic: like &lt;code&gt;&amp;amp;&lt;/code&gt; in some editors.</source>
          <target state="translated">助记符： &lt;code&gt;&amp;amp;&lt;/code&gt; 在某些编辑器中一样。</target>
        </trans-unit>
        <trans-unit id="0bf53d6e2ef8b1852f6e6460d639d8a6d511e87d" translate="yes" xml:space="preserve">
          <source>Mnemonic: like \digits.</source>
          <target state="translated">记忆:像数字一样。</target>
        </trans-unit>
        <trans-unit id="29345f5f1506a434b700483b03581bba2252ef83" translate="yes" xml:space="preserve">
          <source>Mnemonic: lines_on_page - lines_printed.</source>
          <target state="translated">记忆法:lines_on_page-lines_printed。</target>
        </trans-unit>
        <trans-unit id="a3b3edfce1b2a7630b3d4258477c440ecb3338e9" translate="yes" xml:space="preserve">
          <source>Mnemonic: many programs use &quot;.&quot; to mean the current line number.</source>
          <target state="translated">记忆法:很多程序用&quot;.&quot;来表示当前的行号。</target>
        </trans-unit>
        <trans-unit id="de8f32b4ce704e3d490515551c6116db336ffdaf" translate="yes" xml:space="preserve">
          <source>Mnemonic: none really. &lt;code&gt;\R&lt;/code&gt; was picked because PCRE already uses &lt;code&gt;\R&lt;/code&gt; , and more importantly because Unicode recommends such a regular expression metacharacter, and suggests &lt;code&gt;\R&lt;/code&gt; as its notation.</source>
          <target state="translated">助记符：完全没有。 &lt;code&gt;\R&lt;/code&gt; 是因为PCRE已经使用 &lt;code&gt;\R&lt;/code&gt; ，更重要的是因为Unicode建议使用这样的正则表达式元字符，并建议使用 &lt;code&gt;\R&lt;/code&gt; 作为其表示法。</target>
        </trans-unit>
        <trans-unit id="2857bfcf8f813920b6e4a8a1bb14270872f38cb1" translate="yes" xml:space="preserve">
          <source>Mnemonic: none really. &lt;code&gt;\R&lt;/code&gt; was picked because PCRE already uses &lt;code&gt;\R&lt;/code&gt;, and more importantly because Unicode recommends such a regular expression metacharacter, and suggests &lt;code&gt;\R&lt;/code&gt; as its notation.</source>
          <target state="translated">助记符：完全没有。 &lt;code&gt;\R&lt;/code&gt; 是因为PCRE已经使用 &lt;code&gt;\R&lt;/code&gt; ，更重要的是因为Unicode建议使用这样的正则表达式元字符，并建议使用 &lt;code&gt;\R&lt;/code&gt; 作为其表示法。</target>
        </trans-unit>
        <trans-unit id="17515742cc5afa87aeabc73678286fa741ba5388" translate="yes" xml:space="preserve">
          <source>Mnemonic: o</source>
          <target state="translated">助记符:o</target>
        </trans-unit>
        <trans-unit id="5c7eacbc6cb333f80ee9f35aec3e8dd35063c97b" translate="yes" xml:space="preserve">
          <source>Mnemonic: parentheses are used to</source>
          <target state="translated">记忆:括号用于</target>
        </trans-unit>
        <trans-unit id="145851845d42b7c2837eb05551e2eb9b2cae8660" translate="yes" xml:space="preserve">
          <source>Mnemonic: points to top of page.</source>
          <target state="translated">口诀:点到页首。</target>
        </trans-unit>
        <trans-unit id="18d03cec8eedf712bc3cc92498d0bd974ac29168" translate="yes" xml:space="preserve">
          <source>Mnemonic: related to the &lt;b&gt;-w&lt;/b&gt; switch.</source>
          <target state="translated">助记符：与&lt;b&gt;-w&lt;/b&gt;开关有关。</target>
        </trans-unit>
        <trans-unit id="6ff59e0f3c29d42ff6b4f1943a0cb62f85b10dbe" translate="yes" xml:space="preserve">
          <source>Mnemonic: same as &lt;b&gt;sh&lt;/b&gt; and &lt;b&gt;ksh&lt;/b&gt;.</source>
          <target state="translated">助记符：与&lt;b&gt;sh&lt;/b&gt;和&lt;b&gt;ksh&lt;/b&gt;相同。</target>
        </trans-unit>
        <trans-unit id="3b46ac9389c1562addebeca3277c06599213ca1b" translate="yes" xml:space="preserve">
          <source>Mnemonic: same as shells.</source>
          <target state="translated">口诀:同贝壳。</target>
        </trans-unit>
        <trans-unit id="9c5494af227b04c5edebf85d05b3fe69b8e73df2" translate="yes" xml:space="preserve">
          <source>Mnemonic: similar to &lt;b&gt;sh&lt;/b&gt; and &lt;b&gt;ksh&lt;/b&gt;.</source>
          <target state="translated">助记符：类似于&lt;b&gt;sh&lt;/b&gt;和&lt;b&gt;ksh&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="894f0484590bcbb3b693d6aab805d5dfd400684a" translate="yes" xml:space="preserve">
          <source>Mnemonic: the (possibly) Nested parenthesis that most recently closed.</source>
          <target state="translated">记忆:最近关闭的(可能)嵌套小括号。</target>
        </trans-unit>
        <trans-unit id="2bc5f6f15e84df55129e74766d50c6d3ec861d52" translate="yes" xml:space="preserve">
          <source>Mnemonic: underline is understood in certain operations.</source>
          <target state="translated">口诀:下划线在某些操作中是可以理解的。</target>
        </trans-unit>
        <trans-unit id="4a9ec9ee0bfa06bee48fc042c23120f429cc4720" translate="yes" xml:space="preserve">
          <source>Mnemonic: use ^V for a version object.</source>
          <target state="translated">记忆法:用^V表示版本对象。</target>
        </trans-unit>
        <trans-unit id="06e3f9eef28e584212eb3b651afb663309c25b17" translate="yes" xml:space="preserve">
          <source>Mnemonic: value of &lt;b&gt;-D&lt;/b&gt; switch.</source>
          <target state="translated">助记符&lt;b&gt;：-D&lt;/b&gt;开关的值。</target>
        </trans-unit>
        <trans-unit id="8b8a29220f27a6ded73512e3ded3085fc6e23796" translate="yes" xml:space="preserve">
          <source>Mnemonic: value of &lt;b&gt;-i&lt;/b&gt; switch.</source>
          <target state="translated">助记符：&lt;b&gt;-i&lt;/b&gt;开关的值。</target>
        </trans-unit>
        <trans-unit id="d86dda32bcccc36b30321a061a593c0839054c6b" translate="yes" xml:space="preserve">
          <source>Mnemonic: what is printed when there is a &quot;,&quot; in your print statement.</source>
          <target state="translated">记忆:当你的打印语句中出现&quot;,&quot;时,打印的内容。</target>
        </trans-unit>
        <trans-unit id="a2e0668e848f30f9c617ffa35513e900bc8c74ef" translate="yes" xml:space="preserve">
          <source>Mnemonic: when you want your pipes to be piping hot.</source>
          <target state="translated">口诀:当你想让你的管道热起来的时候。</target>
        </trans-unit>
        <trans-unit id="83f42ef2607c96d6744ccfc26dd35c90a66a4662" translate="yes" xml:space="preserve">
          <source>Mnemonic: works in double-quoted context.</source>
          <target state="translated">口诀:在双引号语境中起作用。</target>
        </trans-unit>
        <trans-unit id="c5df1d9e3c7f07b6813c1d51005b98006207f133" translate="yes" xml:space="preserve">
          <source>Mnemonic: you set &lt;code&gt;$\&lt;/code&gt; instead of adding &quot;\n&quot; at the end of the print. Also, it's just like &lt;code&gt;$/&lt;/code&gt; , but it's what you get &quot;back&quot; from Perl.</source>
          <target state="translated">助记符：您设置 &lt;code&gt;$\&lt;/code&gt; 而不是在打印末尾添加&amp;ldquo; \ n&amp;rdquo;。同样，它就像 &lt;code&gt;$/&lt;/code&gt; ，但这是您从Perl中获得的&amp;ldquo;回报&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d1e77a5dc7fffdb724bdfb2b1a696e56046f4e46" translate="yes" xml:space="preserve">
          <source>Mnemonic: you set &lt;code&gt;$\&lt;/code&gt; instead of adding &quot;\n&quot; at the end of the print. Also, it's just like &lt;code&gt;$/&lt;/code&gt;, but it's what you get &quot;back&quot; from Perl.</source>
          <target state="translated">助记符：您设置 &lt;code&gt;$\&lt;/code&gt; 而不是在打印末尾添加&amp;ldquo; \ n&amp;rdquo;。同样，它就像 &lt;code&gt;$/&lt;/code&gt; ，但这就是您从Perl中获得的&amp;ldquo;回报&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="774459fcd854849578678b44d17052997274c5ac" translate="yes" xml:space="preserve">
          <source>Mnemonics:</source>
          <target state="translated">Mnemonics:</target>
        </trans-unit>
        <trans-unit id="cafc128f90bdc8e24af8dd2187160ad19d568274" translate="yes" xml:space="preserve">
          <source>Model =&amp;gt; $hModelFile</source>
          <target state="translated">型号=&amp;gt; $ hModelFile</target>
        </trans-unit>
        <trans-unit id="6ff39ea59358932273dd96de0a90c680140ef641" translate="yes" xml:space="preserve">
          <source>Modifed values of three of the arguments passed to the function. In particular, the &lt;code&gt;XSStack&lt;/code&gt; and &lt;code&gt;InitFileCode&lt;/code&gt; attributes are modified.</source>
          <target state="translated">传递给函数的三个参数的修改后的值。特别是，修改了 &lt;code&gt;XSStack&lt;/code&gt; 和 &lt;code&gt;InitFileCode&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="bfe5ea1c0f4c46a2237b24e5b3f2887e00aa6466" translate="yes" xml:space="preserve">
          <source>Modification of a read-only value attempted</source>
          <target state="translated">试图修改一个只读值。</target>
        </trans-unit>
        <trans-unit id="5f76e7ff47044fa8dd85e924ec7a4e874884a8b4" translate="yes" xml:space="preserve">
          <source>Modification of non-creatable array value attempted, %s</source>
          <target state="translated">试图修改不可创建的数组值,%s。</target>
        </trans-unit>
        <trans-unit id="5d49a6e4a1e825b5489876269856cd19dd0c32a5" translate="yes" xml:space="preserve">
          <source>Modification of non-creatable hash value attempted, %s</source>
          <target state="translated">试图修改不可创建的哈希值,%s。</target>
        </trans-unit>
        <trans-unit id="54e708f372bd6f49e75185b1eedbc1c5b10e7365" translate="yes" xml:space="preserve">
          <source>Modification time. Adjusted to mac-time on MacOS if required</source>
          <target state="translated">修改时间。必要时调整为MacOS上的mac时间。</target>
        </trans-unit>
        <trans-unit id="405f45092d843a1d3838d8a5b8852228db0dfbb7" translate="yes" xml:space="preserve">
          <source>Modifications</source>
          <target state="translated">Modifications</target>
        </trans-unit>
        <trans-unit id="6acab8f4be86f5c68401444e88bc8209222cbc50" translate="yes" xml:space="preserve">
          <source>Modifications from the original:</source>
          <target state="translated">在原有基础上进行修改。</target>
        </trans-unit>
        <trans-unit id="d15d3e35d08a4f905aca29a53f32a6a9324f7e00" translate="yes" xml:space="preserve">
          <source>Modified - 13 July 2001</source>
          <target state="translated">2001年7月13日修改</target>
        </trans-unit>
        <trans-unit id="c28e2457b8697ed01bbb5ecba237019fd1dcb3c9" translate="yes" xml:space="preserve">
          <source>Modified - 25 June 2001</source>
          <target state="translated">2001年6月25日修改</target>
        </trans-unit>
        <trans-unit id="d8e50120460706cd8f55da079850b9b27d5d7356" translate="yes" xml:space="preserve">
          <source>Modified - 28 May 2002</source>
          <target state="translated">2002年5月28日修改</target>
        </trans-unit>
        <trans-unit id="32979a38ecc2f0753d6d680873cd17c8a6ba6155" translate="yes" xml:space="preserve">
          <source>Modified by Casey West, 2000-11-08, v0.59.</source>
          <target state="translated">修改者:Casey West,2000-11-08,v0.59。</target>
        </trans-unit>
        <trans-unit id="e5f3cf35626877ebe81f40ef6a55ba3d9279e043" translate="yes" xml:space="preserve">
          <source>Modified by Damian Conway, 1999-03-05, v0.58.</source>
          <target state="translated">由Damian Conway修改,1999-03-05,v0.58。</target>
        </trans-unit>
        <trans-unit id="94d5fe9080184121ea2c9a038a3632538b976fe0" translate="yes" xml:space="preserve">
          <source>Modified by Damian Conway, 2001-09-10, v0.62.</source>
          <target state="translated">修改者:Damian Conway,2001-09-10,v0.62。</target>
        </trans-unit>
        <trans-unit id="9877a0e2ec14746d54f44a96609db5de1a2c19ac" translate="yes" xml:space="preserve">
          <source>Modified in Perl 5.10.1, 5.12.0</source>
          <target state="translated">在Perl 5.10.1,5.12.0中修改。</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="1c2e8964e53a3974ad38a662a6a136aa94d17d1a" translate="yes" xml:space="preserve">
          <source>Modifies Test::Builder internals.</source>
          <target state="translated">修改 Test::Builder 的内部结构。</target>
        </trans-unit>
        <trans-unit id="e880a783bbd37d3dea3114db13bc60aa06662623" translate="yes" xml:space="preserve">
          <source>Modifies and queries the program's underlying locale. Users of this function should read &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;, whch provides a comprehensive discussion of Perl locale handling, knowledge of which is necessary to properly use this function. It contains &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;a section devoted to this function&lt;/a&gt;. The discussion here is merely a summary reference for &lt;code&gt;setlocale()&lt;/code&gt; . Note that Perl itself is almost entirely unaffected by the locale except within the scope of &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; . (Exceptions are listed in &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;Not within the scope of use locale in perllocale&lt;/a&gt;.)</source>
          <target state="translated">修改并查询程序的基础语言环境。使用此功能的用户应阅读&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;，其中提供了有关Perl语言环境处理的全面讨论，有关正确使用此功能所必需的知识。它包含&lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;专门介绍此功能的部分&lt;/a&gt;。这里的讨论仅仅是 &lt;code&gt;setlocale()&lt;/code&gt; 的简要参考。请注意，Perl本身几乎不受语言环境的影响，除非在 &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; 的范围内。（异常&lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;不在perllocale的使用区域设置范围内&lt;/a&gt;列出。）</target>
        </trans-unit>
        <trans-unit id="c9b51ea52a3a827c7ad9340f3c3175b008c79459" translate="yes" xml:space="preserve">
          <source>Modifies the list of places temp directory information is looked for.</source>
          <target state="translated">修改临时目录信息查找的地方列表。</target>
        </trans-unit>
        <trans-unit id="1d7a12e5c51dea8cde2ad6652de6b9359a21545b" translate="yes" xml:space="preserve">
          <source>Modifying and =</source>
          <target state="translated">修改和=</target>
        </trans-unit>
        <trans-unit id="ce1dfce837138cff453bdea39c7c4c418d1f1de3" translate="yes" xml:space="preserve">
          <source>Modifying the timestamps may not be possible at all: for example, the &lt;code&gt;noatime&lt;/code&gt; filesystem mount option may prohibit you from changing the access time timestamp.</source>
          <target state="translated">根本不可能修改时间戳：例如， &lt;code&gt;noatime&lt;/code&gt; 文件系统挂载选项可能会禁止您更改访问时间时间戳。</target>
        </trans-unit>
        <trans-unit id="b2d78ea62126eeb6ac9e086c6864dab2d0e3c3a1" translate="yes" xml:space="preserve">
          <source>Module Installation</source>
          <target state="translated">模块安装</target>
        </trans-unit>
        <trans-unit id="5e8ed13e4781f62782d5aa23493e665d1640aba0" translate="yes" xml:space="preserve">
          <source>Module Meta-Data (META and MYMETA)</source>
          <target state="translated">模块元数据(META和MYMETA)</target>
        </trans-unit>
        <trans-unit id="1454ab039736e265b3314e2865bba939a5971c09" translate="yes" xml:space="preserve">
          <source>Module Version Checking</source>
          <target state="translated">模块版本检查</target>
        </trans-unit>
        <trans-unit id="d108ead0085bbd00f6a4bbc9931939d7eccf7683" translate="yes" xml:space="preserve">
          <source>Module Writing</source>
          <target state="translated">模块写作</target>
        </trans-unit>
        <trans-unit id="516af6a787a862724252123e2bd3b762619e9ffe" translate="yes" xml:space="preserve">
          <source>Module authors should carefully consider whether to rely on other modules, and which modules to rely on.</source>
          <target state="translated">模块作者应慎重考虑是否依赖其他模块,以及依赖哪些模块。</target>
        </trans-unit>
        <trans-unit id="8471831f64e1887291d945952d1e1daa28722f62" translate="yes" xml:space="preserve">
          <source>Module for manipulations of tar archives</source>
          <target state="translated">对焦油档案进行操作的模块</target>
        </trans-unit>
        <trans-unit id="e65640d58920cc799b38907083a95415ef4b8a66" translate="yes" xml:space="preserve">
          <source>Module installation tools have ways of resolving unmet dependencies but to do that they need a</source>
          <target state="translated">模块安装工具有办法解决未满足的依赖关系,但要做到这一点,他们需要一个</target>
        </trans-unit>
        <trans-unit id="b1ac20aedfee381805b19478ff3a953f19bfd201" translate="yes" xml:space="preserve">
          <source>Module name must be constant</source>
          <target state="translated">模块名称必须是常数</target>
        </trans-unit>
        <trans-unit id="296ea56fdcb62556504377c9806acdeebb07b6ba" translate="yes" xml:space="preserve">
          <source>Module name required with -%c option</source>
          <target state="translated">模块名称需要用-%c选项</target>
        </trans-unit>
        <trans-unit id="8b521a1c525dc29431bbdbd97b08d7337321f5f4" translate="yes" xml:space="preserve">
          <source>Module tests</source>
          <target state="translated">模块测试</target>
        </trans-unit>
        <trans-unit id="09c1308ed6b0c63e3397790cc4f67693af0f82c7" translate="yes" xml:space="preserve">
          <source>Module to convert pod files to HTML</source>
          <target state="translated">将 pod 文件转换为 HTML 的模块</target>
        </trans-unit>
        <trans-unit id="15ecde6b9e55280e32d99a40c501f4e2e8c2ff44" translate="yes" xml:space="preserve">
          <source>Module to test the XS typemaps distributed with perl</source>
          <target state="translated">测试用perl分发的XS类型图的模块。</target>
        </trans-unit>
        <trans-unit id="b97c2d8aa7bcb68996cb4a6d31701bee24ce1615" translate="yes" xml:space="preserve">
          <source>Module use may give one of the following errors during import.</source>
          <target state="translated">在导入过程中,模块的使用可能会给出以下错误之一。</target>
        </trans-unit>
        <trans-unit id="3674e804d761cb13678499f67d99449dc4f27a48" translate="yes" xml:space="preserve">
          <source>Module.pm</source>
          <target state="translated">Module.pm</target>
        </trans-unit>
        <trans-unit id="ab9ab41c22948665a29f42a31b28aeddb3d8a91e" translate="yes" xml:space="preserve">
          <source>Module.pod</source>
          <target state="translated">Module.pod</target>
        </trans-unit>
        <trans-unit id="ae8d8ff480dfbba731116e004a9d3f57c4bd6cdb" translate="yes" xml:space="preserve">
          <source>Module::Build</source>
          <target state="translated">Module::Build</target>
        </trans-unit>
        <trans-unit id="62fb86405abcf275344b08fc9af2288d90dc6412" translate="yes" xml:space="preserve">
          <source>Module::Build 0.28 added support for &lt;code&gt;--prefix&lt;/code&gt; which works like MakeMaker's PREFIX.</source>
          <target state="translated">Module :: Build 0.28增加了对 &lt;code&gt;--prefix&lt;/code&gt; 的支持，其功能类似于MakeMaker的PREFIX。</target>
        </trans-unit>
        <trans-unit id="150dc2d2e198e343abd0bea909de778fbe14be58" translate="yes" xml:space="preserve">
          <source>Module::Build design plans</source>
          <target state="translated">模块::构建设计方案</target>
        </trans-unit>
        <trans-unit id="91d488d471a8bc496d78b2b13e521d55c3f0cdef" translate="yes" xml:space="preserve">
          <source>Module::Build is a project by Ken Williams to supplant MakeMaker. Its primary advantages are:</source>
          <target state="translated">Module::Build是Ken Williams为取代MakeMaker而做的一个项目。它的主要优点是:</target>
        </trans-unit>
        <trans-unit id="6b1f0f8f3e8bc54c1732e312db2a7505d466061a" translate="yes" xml:space="preserve">
          <source>Module::Build was long the official heir apparent to MakeMaker. The rate of both its development and adoption has slowed in recent years, though, and it is unclear what the future holds for it. That said, Module::Build set the stage for</source>
          <target state="translated">Module::Build长期以来一直是MakeMaker的官方继承者。不过,近年来它的发展和应用速度都有所放缓,目前还不清楚它的未来会如何。尽管如此,Module::Build为MakeMaker的发展奠定了基础。</target>
        </trans-unit>
        <trans-unit id="8def62b03ff3b40aeadb216948bd496a8840b87f" translate="yes" xml:space="preserve">
          <source>Module::Build, as of 0.28, supports two ways to install to the same location as MakeMaker.</source>
          <target state="translated">Module::Build,从0.28开始,支持两种方式安装到与MakeMaker相同的位置。</target>
        </trans-unit>
        <trans-unit id="a1edaf280214fd94706296d20c3b0f2bfdf9eb59" translate="yes" xml:space="preserve">
          <source>Module::CoreList</source>
          <target state="translated">Module::CoreList</target>
        </trans-unit>
        <trans-unit id="c1eab53f65667256b290f34243d94d7ecdff687e" translate="yes" xml:space="preserve">
          <source>Module::CoreList - what modules shipped with versions of perl</source>
          <target state="translated">Module::CoreList-perl版本中包含哪些模块?</target>
        </trans-unit>
        <trans-unit id="cf24a0df2a2fe48d90f4a8337763728341cb900f" translate="yes" xml:space="preserve">
          <source>Module::CoreList currently covers the 5.000, 5.001, 5.002, 5.003_07, 5.004, 5.004_05, 5.005, 5.005_03, 5.005_04 and 5.7.3 releases of perl.</source>
          <target state="translated">Module::CoreList 目前涵盖了 perl 的 5.000,5.001,5.002,5.003_07,5.004,5.004_05,5.005,5.005_03,5.005_04 和 5.7.3 版本。</target>
        </trans-unit>
        <trans-unit id="b23a69ee7bbcaf5f395d8275dba4f3efac0eee37" translate="yes" xml:space="preserve">
          <source>Module::CoreList provides information on which core and dual-life modules shipped with each version of &lt;a href=&quot;../perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreList提供有关每个版本的&lt;a href=&quot;../perl&quot;&gt;perl&lt;/a&gt;附带的核心和双寿命模块的信息。</target>
        </trans-unit>
        <trans-unit id="734252a85fe5c8339de69573b5216ab8f0aa64b1" translate="yes" xml:space="preserve">
          <source>Module::CoreList provides information on which core and dual-life modules shipped with each version of &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreList提供有关每个版本的&lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;随附的核心和双寿命模块的信息。</target>
        </trans-unit>
        <trans-unit id="de86ec78c4d249d74b590b22c867ee4d58aa762e" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils</source>
          <target state="translated">Module::CoreList::Utils</target>
        </trans-unit>
        <trans-unit id="50d08dcfe907005aefae6a40958e4b055750c23b" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils - what utilities shipped with versions of perl</source>
          <target state="translated">Module::CoreList::Utils-perl版本中附带了哪些实用工具。</target>
        </trans-unit>
        <trans-unit id="5d96066f93fab25da99dd68aa81cda10b29454b6" translate="yes" xml:space="preserve">
          <source>Module::CoreList::Utils provides information on which core and dual-life utilities shipped with each version of &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;.</source>
          <target state="translated">Module :: CoreList :: Utils提供有关每个版本的&lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;附带哪些核心和双寿命实用程序的信息。</target>
        </trans-unit>
        <trans-unit id="e4b689d99705fdc907aba90226fb7f6ee6929e63" translate="yes" xml:space="preserve">
          <source>Module::Install</source>
          <target state="translated">Module::Install</target>
        </trans-unit>
        <trans-unit id="79bce9e07f8b204000334e6031e7ea0b0960701f" translate="yes" xml:space="preserve">
          <source>Module::Load</source>
          <target state="translated">Module::Load</target>
        </trans-unit>
        <trans-unit id="e3d85e08676b05b2e538b0685147bf01f13faa38" translate="yes" xml:space="preserve">
          <source>Module::Load - runtime require of both modules and files</source>
          <target state="translated">Module::Load-运行时对模块和文件的要求</target>
        </trans-unit>
        <trans-unit id="6e16ca7f251db467f65f169ccb90bd1775b9be31" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional</source>
          <target state="translated">Module::Load::Conditional</target>
        </trans-unit>
        <trans-unit id="0333daac2dc5711d6aa41b0b76a07a8abee4d3b5" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional - Looking up module information / loading at runtime</source>
          <target state="translated">Module::Load::Conditional-在运行时查找模块信息/加载。</target>
        </trans-unit>
        <trans-unit id="c96b8d051cb4352b076673e1abc0268f29fa107f" translate="yes" xml:space="preserve">
          <source>Module::Load::Conditional provides simple ways to query and possibly load any of the modules you have installed on your system during runtime.</source>
          <target state="translated">Module::Load::Conditional提供了简单的方法来查询并可能在运行时加载你在系统上安装的任何模块。</target>
        </trans-unit>
        <trans-unit id="fffd2566f2af4b448df67c2c105f5e1f1b680583" translate="yes" xml:space="preserve">
          <source>Module::Loaded</source>
          <target state="translated">Module::Loaded</target>
        </trans-unit>
        <trans-unit id="ce11901e21f211fb61728e8347b6913869d01fec" translate="yes" xml:space="preserve">
          <source>Module::Loaded - mark modules as loaded or unloaded</source>
          <target state="translated">Module::Loaded-将模块标记为已加载或未加载。</target>
        </trans-unit>
        <trans-unit id="bb6885dcfda6105816579eb1110d8a0af233720c" translate="yes" xml:space="preserve">
          <source>Module::Metadata</source>
          <target state="translated">Module::Metadata</target>
        </trans-unit>
        <trans-unit id="5e8e22f998099970e72ea7db019f086e11a0adef" translate="yes" xml:space="preserve">
          <source>Module::Metadata - Gather package and POD information from perl module files</source>
          <target state="translated">Module::Metadata-从perl模块文件中收集包和POD信息。</target>
        </trans-unit>
        <trans-unit id="02e77c62a7e1cc7db95a64ce9a1c2d0f806647c6" translate="yes" xml:space="preserve">
          <source>Module::bootstrap()</source>
          <target state="translated">Module::bootstrap()</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="801dc9760f104617b6ed8b09b3bc552754857caf" translate="yes" xml:space="preserve">
          <source>Modules Used</source>
          <target state="translated">使用的模块</target>
        </trans-unit>
        <trans-unit id="ba45166087559a8d4da3018515bba6d0e5511862" translate="yes" xml:space="preserve">
          <source>Modules and Extensions for Perl on OS/390</source>
          <target state="translated">OS/390上Perl的模块和扩展程序</target>
        </trans-unit>
        <trans-unit id="cfe4151bcba7eda23509b603930bf7ee0bf81221" translate="yes" xml:space="preserve">
          <source>Modules are installed on a case-by-case basis (as provided by the methods described in the previous section), and in the operating system. All of these paths are stored in @INC, which you can display with the one-liner</source>
          <target state="translated">模块的安装是根据具体情况而定的(由上一节所述的方法提供),在操作系统中也是如此。所有这些路径都存储在 @INC 中,你可以用单行字来表示</target>
        </trans-unit>
        <trans-unit id="2c98c46b9ec45777efe9604a1088b3e507328331" translate="yes" xml:space="preserve">
          <source>Modules in the</source>
          <target state="translated">各模块</target>
        </trans-unit>
        <trans-unit id="387c58c36e26384b5c37e68bd7e39af265275a1f" translate="yes" xml:space="preserve">
          <source>Modules know their associated Distribution objects. They always refer to the most recent official release. Developers may mark their releases as unstable development versions (by inserting an underscore into the module version number which will also be reflected in the distribution name when you run 'make dist'), so the really hottest and newest distribution is not always the default. If a module Foo circulates on CPAN in both version 1.23 and 1.23_90, CPAN.pm offers a convenient way to install version 1.23 by saying</source>
          <target state="translated">模块知道它们相关的发行对象。它们总是指最新的官方版本。开发者可能会把他们的发行版标记为不稳定的开发版本(通过在模块版本号中插入下划线,当你运行'make dist'时,这个下划线也会反映在发行版的名称中),所以真正最热门和最新的发行版并不总是默认的。如果一个模块Foo在CPAN上同时流传着1.23和1.23_90两个版本,CPAN.pm提供了一个方便的方法来安装1.23版本,方法是说</target>
        </trans-unit>
        <trans-unit id="5f3d6f058f458ef7f23d8ca7c1fa07e5fdffa37c" translate="yes" xml:space="preserve">
          <source>Modules not available from CPAN</source>
          <target state="translated">CPAN不提供的模块</target>
        </trans-unit>
        <trans-unit id="8de09ade33dff4d30d378d32e3f399e05899232c" translate="yes" xml:space="preserve">
          <source>Modules shipped as part of the Perl core live in four subdirectories. Two of these directories contain modules that live in the core, and two contain modules that can also be released separately on CPAN. Modules which can be released on cpan are known as &quot;dual-life&quot; modules.</source>
          <target state="translated">作为 Perl 核心的一部分,模块被存放在四个子目录中。其中两个子目录包含了核心中的模块,另外两个子目录包含了可以在 cpan 上单独发布的模块。可以在 cpan 上发布的模块被称为 &quot;双寿命 &quot;模块。</target>
        </trans-unit>
        <trans-unit id="e0e8aed9f80a1dc002e318b7643af4d7677ed672" translate="yes" xml:space="preserve">
          <source>Modules should be packaged using one of the standard packaging tools. Currently you have the choice between ExtUtils::MakeMaker and the more platform independent Module::Build, allowing modules to be installed in a consistent manner. When using ExtUtils::MakeMaker, you can use &quot;make dist&quot; to create your package. Tools exist to help you to build your module in a MakeMaker-friendly style. These include ExtUtils::ModuleMaker and h2xs. See also &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt;.</source>
          <target state="translated">模块应使用标准包装工具之一进行包装。当前，您可以在ExtUtils :: MakeMaker和更独立于平台的Module :: Build之间进行选择，从而可以以一致的方式安装模块。使用ExtUtils :: MakeMaker时，可以使用&amp;ldquo; make dist&amp;rdquo;创建您的包。有一些工具可以帮助您以MakeMaker友好的样式构建模块。这些包括ExtUtils :: ModuleMaker和h2xs。另请参见&lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6eefcfbc44b095f906993d6a3ee0e852ebab6785" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;a href=&quot;Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; and &lt;a href=&quot;Tie::File&quot;&gt;Tie::File&lt;/a&gt; can help with that too. If you can, however, avoid reading the entire file at once. Perl won't give that memory back to the operating system until the process finishes.</source>
          <target state="translated">诸如&lt;a href=&quot;Path::Tiny&quot;&gt;Path :: Tiny&lt;/a&gt;和&lt;a href=&quot;Tie::File&quot;&gt;Tie :: File之类的模块&lt;/a&gt;也可以提供帮助。但是，如果可以，请避免一次读取整个文件。在过程完成之前，Perl不会将内存退还给操作系统。</target>
        </trans-unit>
        <trans-unit id="eba7daa98709598366c3537d2ec9862d20e4985a" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path::Tiny&lt;/a&gt; and &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; can help with that too. If you can, however, avoid reading the entire file at once. Perl won't give that memory back to the operating system until the process finishes.</source>
          <target state="translated">诸如&lt;a href=&quot;http://search.cpan.org/perldoc/Path::Tiny&quot;&gt;Path :: Tiny&lt;/a&gt;和&lt;a href=&quot;tie/file&quot;&gt;Tie :: File之类的模块&lt;/a&gt;也可以提供帮助。但是，如果可以，请避免一次读取整个文件。在过程完成之前，Perl不会将该内存还给操作系统。</target>
        </trans-unit>
        <trans-unit id="8e39293c10b487ab181c13d36712d552c93decf5" translate="yes" xml:space="preserve">
          <source>Modules that calculate message digests</source>
          <target state="translated">计算信息摘要的模块</target>
        </trans-unit>
        <trans-unit id="c5ea83baff39996a0d7cf4b745d2c4d5aed9fdd5" translate="yes" xml:space="preserve">
          <source>Modules that provide OS-specific behaviors often need to know if the current operating system matches a more generic type of operating systems. For example, 'linux' is a type of 'Unix' operating system and so is 'freebsd'.</source>
          <target state="translated">提供操作系统特定行为的模块通常需要知道当前的操作系统是否匹配一个更通用的操作系统类型。例如,'linux'是'Unix'操作系统的一种类型,'freebsd'也是如此。</target>
        </trans-unit>
        <trans-unit id="7e640dc8698a54c30ce2b25e1b3caa6b2de29019" translate="yes" xml:space="preserve">
          <source>Modules uploaded to CPAN are tested by a variety of volunteers on different platforms. These CPAN testers are notified by mail of each new upload, and reply to the list with PASS, FAIL, NA (not applicable to this platform), or UNKNOWN (unknown), along with any relevant notations.</source>
          <target state="translated">上传到CPAN的模块由不同平台的志愿者进行测试。这些CPAN的测试人员会通过邮件通知每一个新上传的模块,并在列表中回复PASS、FAIL、NA(不适用于这个平台)或UNKNOWN(未知),以及任何相关的注释。</target>
        </trans-unit>
        <trans-unit id="9c1cf1fbeb1d4ad27fd965e462b1a6f05eea74e9" translate="yes" xml:space="preserve">
          <source>Modules which are &quot;stable&quot; should not break backwards compatibility without at least a long transition phase and a major change in version number.</source>
          <target state="translated">属于 &quot;稳定 &quot;的模块,如果没有至少漫长的过渡阶段和版本号的重大变化,就不应该破坏向后的兼容性。</target>
        </trans-unit>
        <trans-unit id="d737814ec2d252aed0d9553090a83af593402cf6" translate="yes" xml:space="preserve">
          <source>Modules: Creation, Use, and Abuse</source>
          <target state="translated">模块。创建、使用和滥用</target>
        </trans-unit>
        <trans-unit id="cedf0a043a8175adc7d112f8794910834f961fb1" translate="yes" xml:space="preserve">
          <source>Mohammad S Anwar &amp;lt;mohammad.anwar@yahoo.com&amp;gt;</source>
          <target state="translated">Mohammad S Anwar &amp;lt;mohammad.anwar@yahoo.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bf3a7ff6bdc4145b967af70ab8f39f386ae3ec49" translate="yes" xml:space="preserve">
          <source>Mojolicious</source>
          <target state="translated">Mojolicious</target>
        </trans-unit>
        <trans-unit id="9791bc4d7273587d61fef79841bd342381f5e321" translate="yes" xml:space="preserve">
          <source>Moldova</source>
          <target state="translated">Moldova</target>
        </trans-unit>
        <trans-unit id="1946c31aeef030db495b0e13ad1403e9cb0aa7a2" translate="yes" xml:space="preserve">
          <source>Moo</source>
          <target state="translated">Moo</target>
        </trans-unit>
        <trans-unit id="9fdbf7859aefc5d1a01b970f830cbc34f4ef18a9" translate="yes" xml:space="preserve">
          <source>Moose</source>
          <target state="translated">Moose</target>
        </trans-unit>
        <trans-unit id="4bab2d8fe13fa6ab57f80098b414f0f734c5dd25" translate="yes" xml:space="preserve">
          <source>More</source>
          <target state="translated">More</target>
        </trans-unit>
        <trans-unit id="5696d6a7f215fb3987b13af506efed308c8661bb" translate="yes" xml:space="preserve">
          <source>More Pod::Simple Methods</source>
          <target state="translated">更多Pod::简单方法</target>
        </trans-unit>
        <trans-unit id="82e29b39da9785f5a818efe5d3fe3de6e587d533" translate="yes" xml:space="preserve">
          <source>More Problems</source>
          <target state="translated">更多问题</target>
        </trans-unit>
        <trans-unit id="53057b4dfd56a329af03f74d8aab9d36470ceecf" translate="yes" xml:space="preserve">
          <source>More about XSUB arguments</source>
          <target state="translated">更多关于XSUB参数</target>
        </trans-unit>
        <trans-unit id="108f2973ee0fc68f8bd1c87f7945bdef10ce9b19" translate="yes" xml:space="preserve">
          <source>More advanced specifications for parallel vs sequence run rules</source>
          <target state="translated">并行与顺序运行规则的更高级规范</target>
        </trans-unit>
        <trans-unit id="fd4e82e5da3e4dda041a0cb49fdccc789d8158c0" translate="yes" xml:space="preserve">
          <source>More complete API.</source>
          <target state="translated">更完整的API。</target>
        </trans-unit>
        <trans-unit id="efa61b2946cd3153b1a26ff99517443d74f92f4b" translate="yes" xml:space="preserve">
          <source>More complex cases will require to write a parser, probably using a parsing module from CPAN, like &lt;a href=&quot;Regexp::Grammars&quot;&gt;Regexp::Grammars&lt;/a&gt;, &lt;a href=&quot;Parse::RecDescent&quot;&gt;Parse::RecDescent&lt;/a&gt;, &lt;a href=&quot;Parse::Yapp&quot;&gt;Parse::Yapp&lt;/a&gt;, &lt;a href=&quot;Text::Balanced&quot;&gt;Text::Balanced&lt;/a&gt;, or &lt;a href=&quot;Marpa::R2&quot;&gt;Marpa::R2&lt;/a&gt;.</source>
          <target state="translated">更复杂的情况可能需要编写一个解析器，可能使用CPAN的解析模块，例如&lt;a href=&quot;Regexp::Grammars&quot;&gt;Regexp :: Grammars&lt;/a&gt;，&lt;a href=&quot;Parse::RecDescent&quot;&gt;Parse :: RecDescent&lt;/a&gt;，&lt;a href=&quot;Parse::Yapp&quot;&gt;Parse :: Yapp&lt;/a&gt;，&lt;a href=&quot;Text::Balanced&quot;&gt;Text :: Balanced&lt;/a&gt;或&lt;a href=&quot;Marpa::R2&quot;&gt;Marpa :: R2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13a55c80ed5c83f1c889c62320fc4a034a2333c3" translate="yes" xml:space="preserve">
          <source>More complex cases will require to write a parser, probably using a parsing module from CPAN, like &lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Grammars&quot;&gt;Regexp::Grammars&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::RecDescent&quot;&gt;Parse::RecDescent&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parse::Yapp&quot;&gt;Parse::Yapp&lt;/a&gt;, &lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/Marpa::R2&quot;&gt;Marpa::R2&lt;/a&gt;.</source>
          <target state="translated">更复杂的情况可能需要编写解析器，可能使用CPAN的解析模块，例如&lt;a href=&quot;http://search.cpan.org/perldoc/Regexp::Grammars&quot;&gt;Regexp :: Grammars&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Parse::RecDescent&quot;&gt;Parse :: RecDescent&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Parse::Yapp&quot;&gt;Parse :: Yapp&lt;/a&gt;，&lt;a href=&quot;text/balanced&quot;&gt;Text :: Balanced&lt;/a&gt;或&lt;a href=&quot;http://search.cpan.org/perldoc/Marpa::R2&quot;&gt;Marpa :: R2&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b11b4dd1cd41cf4f86d96c0b775f01a4fba8ea41" translate="yes" xml:space="preserve">
          <source>More complex data types can be constructed using references, which allow you to build lists and hashes within lists and hashes.</source>
          <target state="translated">可以使用引用构建更复杂的数据类型,它允许你在列表和哈希中构建列表和哈希。</target>
        </trans-unit>
        <trans-unit id="4020daf37582247db604f50a3dd13402fd4a026e" translate="yes" xml:space="preserve">
          <source>More complex regular expressions</source>
          <target state="translated">更复杂的正则表达式</target>
        </trans-unit>
        <trans-unit id="22de1dce99fa44a08c2393686bc2b8372b954725" translate="yes" xml:space="preserve">
          <source>More complex sub-classes may have to replicate more of the logic internal of Math::BigInt if they need to change more basic behaviors. A subclass that needs to merely change the output only needs to overload &lt;code&gt;bstr()&lt;/code&gt; .</source>
          <target state="translated">如果更复杂的子类需要更改更多基本行为，则可能必须复制Math :: BigInt内部的更多逻辑。仅需要更改输出的子类只需要重载 &lt;code&gt;bstr()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="756589b88b61cce058613ae89757234c6572a356" translate="yes" xml:space="preserve">
          <source>More complex sub-classes may have to replicate more of the logic internal of Math::BigInt if they need to change more basic behaviors. A subclass that needs to merely change the output only needs to overload &lt;code&gt;bstr()&lt;/code&gt;.</source>
          <target state="translated">如果更复杂的子类需要更改更多基本行为，则可能必须复制Math :: BigInt内部的更多逻辑。仅需要更改输出的子类只需要重载 &lt;code&gt;bstr()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79f15d6cc7c0d2273ae329858641605f6bede3c4" translate="yes" xml:space="preserve">
          <source>More complicated XSUBs may contain many other sections. Each section of an XSUB starts with the corresponding keyword, such as INIT: or CLEANUP:. However, the first two lines of an XSUB always contain the same data: descriptions of the return type and the names of the function and its parameters. Whatever immediately follows these is considered to be an INPUT: section unless explicitly marked with another keyword. (See &lt;a href=&quot;#The-INPUT%3A-Keyword&quot;&gt;&quot;The INPUT: Keyword&quot;&lt;/a&gt;.)</source>
          <target state="translated">更复杂的XSUB可能包含许多其他部分。XSUB的每个部分都以相应的关键字开头，例如INIT：或CLEANUP:。但是，XSUB的前两行始终包含相同的数据：返回类型的描述以及函数名称及其参数。紧随其后的内容均视为INPUT：部分，除非已用其他关键字明确标记。（请参阅&lt;a href=&quot;#The-INPUT%3A-Keyword&quot;&gt;&amp;ldquo;输入：关键字&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="2fbe3042a0cc3a612b8a82908d39dc629d888d5d" translate="yes" xml:space="preserve">
          <source>More complicated XSUBs may contain many other sections. Each section of an XSUB starts with the corresponding keyword, such as INIT: or CLEANUP:. However, the first two lines of an XSUB always contain the same data: descriptions of the return type and the names of the function and its parameters. Whatever immediately follows these is considered to be an INPUT: section unless explicitly marked with another keyword. (See &lt;a href=&quot;#The-INPUT%3a-Keyword&quot;&gt;The INPUT: Keyword&lt;/a&gt;.)</source>
          <target state="translated">更复杂的XSUB可能包含许多其他部分。XSUB的每个部分都以相应的关键字开头，例如INIT：或CLEANUP:。但是，XSUB的前两行始终包含相同的数据：返回类型的描述以及函数名称及其参数。紧随其后的内容均视为INPUT：部分，除非已用其他关键字明确标记。（请参见&lt;a href=&quot;#The-INPUT%3a-Keyword&quot;&gt;输入：关键字&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="d66d0268f9a384b521bc030afaac1581d909de98" translate="yes" xml:space="preserve">
          <source>More confusing options than you can shake a big stick at! It's not as bad as it looks and it's very useful to know more about all of it, and fun too!</source>
          <target state="translated">混乱的选项比你能摇动的大棒还多! 其实并不像看上去那么糟糕,多了解一下都是很有用的,而且也很有趣!</target>
        </trans-unit>
        <trans-unit id="526d1ff4132ac0e34dbd3812351d44fc0c1c9026" translate="yes" xml:space="preserve">
          <source>More detail on each of the modifiers follows. Most likely you don't need to know this detail for &lt;code&gt;/l&lt;/code&gt; , &lt;code&gt;/u&lt;/code&gt; , and &lt;code&gt;/d&lt;/code&gt;, and can skip ahead to &lt;a href=&quot;#%2fa-(and-%2faa)&quot;&gt;/a&lt;/a&gt;.</source>
          <target state="translated">以下是每个修饰符的更多详细信息。很可能您不需要了解 &lt;code&gt;/l&lt;/code&gt; ， &lt;code&gt;/u&lt;/code&gt; 和 &lt;code&gt;/d&lt;/code&gt; 的详细信息，可以跳到&lt;a href=&quot;#%2fa-(and-%2faa)&quot;&gt;/ a&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b6f6bf6105714de1c120dd3b291d9add613ebf8" translate="yes" xml:space="preserve">
          <source>More detail on each of the modifiers follows. Most likely you don't need to know this detail for &lt;code&gt;/l&lt;/code&gt;, &lt;code&gt;/u&lt;/code&gt;, and &lt;code&gt;/d&lt;/code&gt;, and can skip ahead to &lt;a href=&quot;#%2Fa-%28and-%2Faa%29&quot;&gt;/a&lt;/a&gt;.</source>
          <target state="translated">有关每个修饰符的更多详细信息，请参见下文。很可能您不需要了解 &lt;code&gt;/l&lt;/code&gt; ， &lt;code&gt;/u&lt;/code&gt; 和 &lt;code&gt;/d&lt;/code&gt; 的详细信息，可以跳到&lt;a href=&quot;#%2Fa-%28and-%2Faa%29&quot;&gt;/ a&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5d17cbfc12e087be467835457f4aeb7c6f18f60" translate="yes" xml:space="preserve">
          <source>More detailed example</source>
          <target state="translated">更详细的例子</target>
        </trans-unit>
        <trans-unit id="f2fe550e6e93ebe700899518f39fbee8a6928544" translate="yes" xml:space="preserve">
          <source>More detailed information about Perl syntax can be found in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;perlsyn&quot;&gt;Perlsyn中&lt;/a&gt;可以找到有关Perl语法的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="d4d020339877fe2163d2f4652ee795295ae937b6" translate="yes" xml:space="preserve">
          <source>More details on hacking the Perl core. This document focuses on lower level details such as how to write tests, compilation issues, portability, debugging, etc.</source>
          <target state="translated">更多关于黑客入侵Perl核心的细节。本文档主要介绍低级别的细节,如如何编写测试、编译问题、可移植性、调试等。</target>
        </trans-unit>
        <trans-unit id="5f269e55bd34be0e508b0040a6ba9834ce17dd8a" translate="yes" xml:space="preserve">
          <source>More details on the categories used by Perl are given below in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;&quot;LOCALE CATEGORIES&quot;&lt;/a&gt;.</source>
          <target state="translated">Perl使用的类别的更多详细信息在下面的&lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;&amp;ldquo;本地类别&amp;rdquo;中给出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8bbc3f15f8c3d6fccfab2c6f797ecddb3a71815" translate="yes" xml:space="preserve">
          <source>More details on the categories used by Perl are given below in &lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;LOCALE CATEGORIES&lt;/a&gt;.</source>
          <target state="translated">Perl使用的类别的更多详细信息在下面的&lt;a href=&quot;#LOCALE-CATEGORIES&quot;&gt;LOCALE CATEGORIES&lt;/a&gt;中给出。</target>
        </trans-unit>
        <trans-unit id="f8e3c44663c4ead5df55d85ed7952e7012ae119b" translate="yes" xml:space="preserve">
          <source>More examples of different modes in action:</source>
          <target state="translated">更多的例子说明不同模式的作用。</target>
        </trans-unit>
        <trans-unit id="08965269be31a1f77226663d4b16152886fa2985" translate="yes" xml:space="preserve">
          <source>More examples:</source>
          <target state="translated">更多的例子。</target>
        </trans-unit>
        <trans-unit id="58b102e56a8f6f1fc1426db346097f8c24db1a1b" translate="yes" xml:space="preserve">
          <source>More flags to pass to the &lt;code&gt;getaddrinfo()&lt;/code&gt; function. If not supplied, a default of &lt;code&gt;AI_ADDRCONFIG&lt;/code&gt; will be used.</source>
          <target state="translated">更多标志传递给 &lt;code&gt;getaddrinfo()&lt;/code&gt; 函数。如果未提供，将使用默认值 &lt;code&gt;AI_ADDRCONFIG&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abe7c3d7dc58312e0a715568eb7fe1648b80945e" translate="yes" xml:space="preserve">
          <source>More formally, &lt;code&gt;\p{Uppercase}&lt;/code&gt; matches any single character whose Unicode &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;True&lt;/code&gt; , and &lt;code&gt;\P{Uppercase}&lt;/code&gt; matches any character whose &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;False&lt;/code&gt; , and they could have been written as &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; and &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; , respectively.</source>
          <target state="translated">更正式地说， &lt;code&gt;\p{Uppercase}&lt;/code&gt; 匹配其Unicode &lt;code&gt;Uppercase&lt;/code&gt; 属性值为 &lt;code&gt;True&lt;/code&gt; 的任何单个字符， &lt;code&gt;\P{Uppercase}&lt;/code&gt; 匹配其 &lt;code&gt;Uppercase&lt;/code&gt; 属性值为 &lt;code&gt;False&lt;/code&gt; 的任何字符，它们可能被写为 &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; 和 &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="950f5b581b5e9dd9bda925ea96c7e3efb17146e5" translate="yes" xml:space="preserve">
          <source>More formally, &lt;code&gt;\p{Uppercase}&lt;/code&gt; matches any single character whose Unicode &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;\P{Uppercase}&lt;/code&gt; matches any character whose &lt;code&gt;Uppercase&lt;/code&gt; property value is &lt;code&gt;False&lt;/code&gt;, and they could have been written as &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; and &lt;code&gt;\p{Uppercase=False}&lt;/code&gt;, respectively.</source>
          <target state="translated">更正式地讲， &lt;code&gt;\p{Uppercase}&lt;/code&gt; 匹配其Unicode &lt;code&gt;Uppercase&lt;/code&gt; 属性值为 &lt;code&gt;True&lt;/code&gt; 的任何单个字符， &lt;code&gt;\P{Uppercase}&lt;/code&gt; 匹配其 &lt;code&gt;Uppercase&lt;/code&gt; 属性值为 &lt;code&gt;False&lt;/code&gt; 的任何字符，它们可能被写为 &lt;code&gt;\p{Uppercase=True}&lt;/code&gt; 和 &lt;code&gt;\p{Uppercase=False}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27451c770878f49944a4e46db9a7b7a2c5c07101" translate="yes" xml:space="preserve">
          <source>More formally, it will be false if anything has happened which makes it impossible for the test suite to pass. True otherwise.</source>
          <target state="translated">更正式地说,如果有任何事情发生,导致测试套件无法通过,它将是假的。否则为真。</target>
        </trans-unit>
        <trans-unit id="e4f15e11fdfe41914601fd2b52ca88c4e0b2db11" translate="yes" xml:space="preserve">
          <source>More fun with &lt;code&gt;?{}&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;?{}&lt;/code&gt; 更有趣：</target>
        </trans-unit>
        <trans-unit id="3d785a8d06f0122559b61ab5ff5e1ae77216b585" translate="yes" xml:space="preserve">
          <source>More generally, &lt;code&gt;\&lt;i&gt;nnn&lt;/i&gt;&lt;/code&gt;, where</source>
          <target state="translated">更一般地， &lt;code&gt;\&lt;i&gt;nnn&lt;/i&gt;&lt;/code&gt; ，其中</target>
        </trans-unit>
        <trans-unit id="4da98cf1b684d1edc72215ded0f14b15a6f1b445" translate="yes" xml:space="preserve">
          <source>More important (and less obvious) is the necessity of garbage collection. When a normal object dies, anything stored in the object body is garbage-collected by perl. With inside-out objects, Perl knows nothing about the data stored in field hashes by a class, but these must be deleted when the object goes out of scope. Thus the class must provide a &lt;code&gt;DESTROY&lt;/code&gt; method to take care of that.</source>
          <target state="translated">更为重要（但不太明显）的是垃圾回收的必要性。当普通对象死亡时，存储在对象主体中的所有内容都会被perl垃圾回收。对于由内而外的对象，Perl对类存储在字段哈希中的数据一无所知，但是当对象超出范围时，必须将其删除。因此，该类必须提供 &lt;code&gt;DESTROY&lt;/code&gt; 方法来解决这一问题。</target>
        </trans-unit>
        <trans-unit id="4232744f447684a298c82dce2791eb6cf2ae4bde" translate="yes" xml:space="preserve">
          <source>More importantly, you assume</source>
          <target state="translated">更重要的是,你假设</target>
        </trans-unit>
        <trans-unit id="dbb4a7aa9653e873e873e3d4f83808761932aa49" translate="yes" xml:space="preserve">
          <source>More information on the terminal capabilities will be found in the termcap manpage on most Unix-like systems.</source>
          <target state="translated">关于终端功能的更多信息可以在大多数类似Unix系统的termcap manpage中找到。</target>
        </trans-unit>
        <trans-unit id="aa9cc3109d4e7c580c76561d1b8bded0209caf69" translate="yes" xml:space="preserve">
          <source>More layers than just the encoding can be specified here. For example, the incantation &lt;code&gt;&quot;:raw :encoding(UTF-16LE) :crlf&quot;&lt;/code&gt; includes implicit CRLF handling.</source>
          <target state="translated">在这里可以指定的层不只是编码。例如，咒语 &lt;code&gt;&quot;:raw :encoding(UTF-16LE) :crlf&quot;&lt;/code&gt; 包括隐式CRLF处理。</target>
        </trans-unit>
        <trans-unit id="e8d55c7fe7068672e98b5466a50eadff1658752a" translate="yes" xml:space="preserve">
          <source>More likely, &lt;code&gt;$svAccess&lt;/code&gt; is a string describing the generic type of access you desire and possibly the file creation options to use. In this case, &lt;code&gt;$svAccess&lt;/code&gt; should contain zero or more characters from &lt;code&gt;&quot;qrw&quot;&lt;/code&gt; [access desired], zero or one character each from &lt;code&gt;&quot;ktn&quot;&lt;/code&gt; and &lt;code&gt;&quot;ce&quot;&lt;/code&gt;, and optional white space. These letters stand for, respectively, &quot;Query access&quot;, &quot;Read access&quot;, &quot;Write access&quot;, &quot;Keep if exists&quot;, &quot;Truncate if exists&quot;, &quot;New file only&quot;, &quot;Create if none&quot;, and &quot;Existing file only&quot;. Case is ignored.</source>
          <target state="translated">&lt;code&gt;$svAccess&lt;/code&gt; 更可能是一个字符串，描述您想要的通用访问类型以及可能使用的文件创建选项。在这种情况下， &lt;code&gt;$svAccess&lt;/code&gt; 应该包含来自 &lt;code&gt;&quot;qrw&quot;&lt;/code&gt; （需要访问）的零个或多个字符，来自 &lt;code&gt;&quot;ktn&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;ce&quot;&lt;/code&gt; 零个或一个字符以及可选的空白。这些字母分别代表&amp;ldquo;查询访问权&amp;rdquo;，&amp;ldquo;读取访问权&amp;rdquo;，&amp;ldquo;写访问权&amp;rdquo;，&amp;ldquo;如果存在则保留&amp;rdquo;，&amp;ldquo;如果存在则截断&amp;rdquo;，&amp;ldquo;仅新文件&amp;rdquo;，&amp;ldquo;如果不存在则创建&amp;rdquo;和&amp;ldquo;现有文件&amp;rdquo;只要&amp;rdquo;。大小写被忽略。</target>
        </trans-unit>
        <trans-unit id="c7d270a53a536b611473a25cb95f7037520a02f0" translate="yes" xml:space="preserve">
          <source>More matching</source>
          <target state="translated">更多配套</target>
        </trans-unit>
        <trans-unit id="b707ad370452316dedfbb6479f84b90feffeb14b" translate="yes" xml:space="preserve">
          <source>More on characters, strings, and character classes</source>
          <target state="translated">更多关于字符、字符串和字符类的内容。</target>
        </trans-unit>
        <trans-unit id="0e20dff8fe6d2b34d7e4d4cac19464fdb760259e" translate="yes" xml:space="preserve">
          <source>More sophisticated example:</source>
          <target state="translated">更复杂的例子。</target>
        </trans-unit>
        <trans-unit id="969a983581a527717c64f4e926ceeb9fb3c1079b" translate="yes" xml:space="preserve">
          <source>More testing functions! Once you outgrow Test::Simple, look at &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;. Test::Simple is 100% forward compatible with &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; (i.e. you can just use &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; instead of Test::Simple in your programs and things will still work).</source>
          <target state="translated">更多测试功能！一旦超出Test :: Simple的范围，请查看&lt;a href=&quot;Test::More&quot;&gt;Test :: More&lt;/a&gt;。Test :: Simple与&lt;a href=&quot;Test::More&quot;&gt;Test :: More&lt;/a&gt;是100％向前兼容的（即，您可以在程序中使用&lt;a href=&quot;Test::More&quot;&gt;Test :: More&lt;/a&gt;而不是Test :: Simple，否则一切仍然可以进行）。</target>
        </trans-unit>
        <trans-unit id="58cc9a8a265ceaaf00e7a02c5fa1c3956c64ee64" translate="yes" xml:space="preserve">
          <source>More testing functions! Once you outgrow Test::Simple, look at &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;. Test::Simple is 100% forward compatible with &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt; (i.e. you can just use &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt; instead of Test::Simple in your programs and things will still work).</source>
          <target state="translated">更多测试功能！一旦超出Test :: Simple的范围，请查看&lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt;。Test :: Simple与&lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; 100％向前兼容（即，您可以在程序中使用&lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt;而不是Test :: Simple，并且仍然可以使用）。</target>
        </trans-unit>
        <trans-unit id="dca60a28cf5bfac5c3931dc141dffe59abb6ab5a" translate="yes" xml:space="preserve">
          <source>More tests.</source>
          <target state="translated">更多的测试。</target>
        </trans-unit>
        <trans-unit id="280bbf061032f32980db94b9cf615b5506c7b962" translate="yes" xml:space="preserve">
          <source>More tests. (Stuff I didn't think of yet.)</source>
          <target state="translated">更多的测试。(我还没有想到的东西。)</target>
        </trans-unit>
        <trans-unit id="6f210a3f7fd112870193ebdf353aec3e59ed0eb5" translate="yes" xml:space="preserve">
          <source>More than one argument to '%s' open</source>
          <target state="translated">多于一个参数的'%s'打开。</target>
        </trans-unit>
        <trans-unit id="cfb0a049a65b7b6c69262ebd324033d41d896fe4" translate="yes" xml:space="preserve">
          <source>More than one plan</source>
          <target state="translated">一个以上的计划</target>
        </trans-unit>
        <trans-unit id="de0e63649914291795f2314152800444162a6954" translate="yes" xml:space="preserve">
          <source>Moreover, a third possibility may even be simpler than anything discussed above: &quot;Just require that all possible (or at least applicable) forms be provided in the call to the given language's quant method, as in:&quot;</source>
          <target state="translated">此外,第三种可能性甚至可能比上面讨论的任何东西都要简单。&quot;只要要求在调用特定语言的量子方法时提供所有可能的(或至少是适用的)形式,如:&quot;</target>
        </trans-unit>
        <trans-unit id="371109ba4b8859f3e3185200282a3a250ce94866" translate="yes" xml:space="preserve">
          <source>Moreover, inside &lt;code&gt;(?{BLOCK})&lt;/code&gt;, &lt;code&gt;(?# comment )&lt;/code&gt;, and a &lt;code&gt;#&lt;/code&gt; -comment in a &lt;code&gt;/x&lt;/code&gt;-regular expression, no processing is performed whatsoever. This is the first step at which the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant.</source>
          <target state="translated">此外，内部 &lt;code&gt;(?{BLOCK})&lt;/code&gt; （？＃ &lt;code&gt;(?# comment )&lt;/code&gt; ，和 &lt;code&gt;#&lt;/code&gt; -comment在一个 &lt;code&gt;/x&lt;/code&gt; -regular表达，是任何不进行任何处理。这是与 &lt;code&gt;/x&lt;/code&gt; 修饰符相关的第一步。</target>
        </trans-unit>
        <trans-unit id="8b50b703e8f733eb18bd373161aa2549aa4cf9d1" translate="yes" xml:space="preserve">
          <source>Moreover, inside &lt;code&gt;(?{BLOCK})&lt;/code&gt;, &lt;code&gt;(?# comment )&lt;/code&gt;, and a &lt;code&gt;#&lt;/code&gt;-comment in a &lt;code&gt;/x&lt;/code&gt;-regular expression, no processing is performed whatsoever. This is the first step at which the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant.</source>
          <target state="translated">此外，内部 &lt;code&gt;(?{BLOCK})&lt;/code&gt; （？＃ &lt;code&gt;(?# comment )&lt;/code&gt; ，和 &lt;code&gt;#&lt;/code&gt; -comment在一个 &lt;code&gt;/x&lt;/code&gt; -regular表达，是任何不进行任何处理。这是与 &lt;code&gt;/x&lt;/code&gt; 修饰符的存在相关的第一步。</target>
        </trans-unit>
        <trans-unit id="766af651754c70019b0147c9aabb389875f6513e" translate="yes" xml:space="preserve">
          <source>Moreover, the Perl interpreter itself has had serious bugs involving fatalized warnings. For a summary of resolved and unresolved problems as of January 2015, please see &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f2015%2f01%2fmsg225235.html&quot;&gt;this perl5-porters post&lt;/a&gt;.</source>
          <target state="translated">此外，Perl解释器本身也存在严重错误，涉及致命警告。有关截至2015年1月已解决和未解决的问题的摘要，请参阅&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.nntp.perl.org%2fgroup%2fperl.perl5.porters%2f2015%2f01%2fmsg225235.html&quot;&gt;此perl5-porters帖子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eeff5d75841a1da3989f3e49cb3c5fb4a15531c1" translate="yes" xml:space="preserve">
          <source>Moreover, the Perl interpreter itself has had serious bugs involving fatalized warnings. For a summary of resolved and unresolved problems as of January 2015, please see &lt;a href=&quot;http://www.nntp.perl.org/group/perl.perl5.porters/2015/01/msg225235.html&quot;&gt;this perl5-porters post&lt;/a&gt;.</source>
          <target state="translated">此外，Perl解释器本身已经存在涉及致命警告的严重错误。有关截至2015年1月的已解决问题和未解决问题的摘要，请参阅&lt;a href=&quot;http://www.nntp.perl.org/group/perl.perl5.porters/2015/01/msg225235.html&quot;&gt;此perl5-porters帖子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71781bd1796397c70432d8ed26a8fe5878ffc4aa" translate="yes" xml:space="preserve">
          <source>Moreover, users may expect this:</source>
          <target state="translated">此外,用户可能会对此有所期待。</target>
        </trans-unit>
        <trans-unit id="7d0005685b4ea3ed15fd588977e2973569a7d7be" translate="yes" xml:space="preserve">
          <source>Mortal references are mainly used for xVs that are placed on perl's main stack. The stack is problematic for reference tracking, because it contains a lot of xV references, but doesn't own those references: they are not counted. Currently, there are many bugs resulting from xVs being destroyed while referenced by the stack, because the stack's uncounted references aren't enough to keep the xVs alive. So when putting an (uncounted) reference on the stack, it is vitally important to ensure that there will be a counted reference to the same xV that will last at least as long as the uncounted reference. But it's also important that that counted reference be cleaned up at an appropriate time, and not unduly prolong the xV's life. For there to be a mortal reference is often the best way to satisfy this requirement, especially if the xV was created especially to be put on the stack and would otherwise be unreferenced.</source>
          <target state="translated">凡人引用主要用于放在perl主栈上的xV。栈对于引用跟踪来说是有问题的,因为它包含了大量的xV引用,但并不拥有这些引用:它们不被计算在内。目前,有很多bug是由于xV在被栈引用时被破坏而导致的,因为栈的未计数引用不足以让xV活着。所以,当把一个(未计数的)引用放在栈上时,确保对同一个xV有一个计数的引用,至少和未计数的引用一样长的时间是非常重要的。但同样重要的是,该计数引用要在适当的时候进行清理,而不是不适当地延长xV的寿命。对于有一个凡人的参照物往往是满足这一要求的最好方法,特别是当xV是为了放在堆栈上而特别创建的,否则就不会被参照。</target>
        </trans-unit>
        <trans-unit id="fd0ec74af25710eb89dcb326b64083f39f30db7a" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket()&lt;/a&gt;&lt;/code&gt; related calls are supported, but they may not behave as on Unix platforms. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for the full list.</source>
          <target state="translated">支持大多数与 &lt;code&gt;&lt;a href=&quot;functions/socket&quot;&gt;socket()&lt;/a&gt;&lt;/code&gt; 相关的调用，但它们的行为可能与Unix平台上的行为不同。有关完整列表，请参见&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8bd7ca1c6bc950dfa343636c44e8a991660d9872" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;Config&lt;/code&gt; variables are determined by the &lt;code&gt;Configure&lt;/code&gt; script on platforms supported by it (which is most UNIX platforms). Some platforms have custom-made &lt;code&gt;Config&lt;/code&gt; variables, and may thus not have some of the variables described below, or may have extraneous variables specific to that particular port. See the port specific documentation in such cases.</source>
          <target state="translated">大多数 &lt;code&gt;Config&lt;/code&gt; 变量由 &lt;code&gt;Configure&lt;/code&gt; 脚本在其支持的平台（大多数UNIX平台）上确定。某些平台具有定制的 &lt;code&gt;Config&lt;/code&gt; 变量，因此可能没有下面描述的某些变量，或者可能具有特定于该特定端口的无关变量。在这种情况下，请参阅端口特定的文档。</target>
        </trans-unit>
        <trans-unit id="28f2f1dbf78786489093dd79f20f32255da8bbeb" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;socket()&lt;/code&gt; related calls are supported, but they may not behave as on Unix platforms. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for the full list.</source>
          <target state="translated">支持大多数与 &lt;code&gt;socket()&lt;/code&gt; 相关的调用，但它们的行为可能与Unix平台上的行为不同。有关完整列表，请参见&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cb850eec5c7ca91283476032e5d18060f62e376" translate="yes" xml:space="preserve">
          <source>Most OS have a maximum command length they can execute at once. Large modules can easily generate commands well past that limit. Its necessary to split long commands up into a series of shorter commands.</source>
          <target state="translated">大多数操作系统都有一次可以执行的最大命令长度。大型模块很容易产生远远超过这个限制的命令。它有必要将长命令分割成一系列较短的命令。</target>
        </trans-unit>
        <trans-unit id="c9a73cc9d93ff9ac0d82b0de181da65c3c3f7d7f" translate="yes" xml:space="preserve">
          <source>Most Operating Systems record time as the number of seconds since a certain date. This date is the beginning of the epoch. Unix's starts at midnight January 1st, 1970 GMT.</source>
          <target state="translated">大多数操作系统将时间记录为某个日期以来的秒数。这个日期是纪元的开始。Unix的开始时间是1970年1月1日午夜GMT。</target>
        </trans-unit>
        <trans-unit id="87aec58e27c477535ee7ea89c7549f2b78b3f922" translate="yes" xml:space="preserve">
          <source>Most POSIX character classes have two Unicode-style &lt;code&gt;\p&lt;/code&gt; property counterparts. (They are not official Unicode properties, but Perl extensions derived from official Unicode properties.) The table below shows the relation between POSIX character classes and these counterparts.</source>
          <target state="translated">大多数POSIX字符类都有两个对应的Unicode样式 &lt;code&gt;\p&lt;/code&gt; 属性。（它们不是正式的Unicode属性，而是从正式的Unicode属性派生的Perl扩展。）下表显示了POSIX字符类与这些对应类之间的关系。</target>
        </trans-unit>
        <trans-unit id="937bd5a8c80916c93da68ee3bf243ef6728b4836" translate="yes" xml:space="preserve">
          <source>Most Perl Web Frameworks will have a mechanism for doing this, using the &lt;a href=&quot;catalyst&quot;&gt;Catalyst&lt;/a&gt; framework it would be:</source>
          <target state="translated">大多数Perl Web框架都将具有执行此操作的机制，使用&lt;a href=&quot;catalyst&quot;&gt;Catalyst&lt;/a&gt;框架将是：</target>
        </trans-unit>
        <trans-unit id="dc62d968e4cf48df873bc6b26766e14aed8bb9a1" translate="yes" xml:space="preserve">
          <source>Most Perl Web Frameworks will have a mechanism for doing this, using the &lt;a href=&quot;http://search.cpan.org/perldoc/Catalyst&quot;&gt;Catalyst&lt;/a&gt; framework it would be:</source>
          <target state="translated">大多数Perl Web框架将具有执行此操作的机制，使用&lt;a href=&quot;http://search.cpan.org/perldoc/Catalyst&quot;&gt;Catalyst&lt;/a&gt;框架将是：</target>
        </trans-unit>
        <trans-unit id="536328dda2b64b33176fd10e64fdf2366a37e10b" translate="yes" xml:space="preserve">
          <source>Most Perl features behave in a natural way within pseudo-processes.</source>
          <target state="translated">大多数Perl特性在伪进程中表现得很自然。</target>
        </trans-unit>
        <trans-unit id="cc5eff88f8f7c24acf735b42756c6ec6877ad919" translate="yes" xml:space="preserve">
          <source>Most Perl-related projects set up mailing lists for both users and contributors. If you don't see a certain project listed at &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt;, check the particular website for that project. Most mailing lists are archived at &lt;a href=&quot;http://nntp.perl.org/&quot;&gt;http://nntp.perl.org/&lt;/a&gt;.</source>
          <target state="translated">大多数与Perl相关的项目都会为用户和贡献者设置邮件列表。如果您在&lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org上&lt;/a&gt;未看到某个项目，请查看该项目的特定网站。大多数邮件列表都存档在&lt;a href=&quot;http://nntp.perl.org/&quot;&gt;http://nntp.perl.org/上&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b0a52de9bf06827eb244cce4b2303069fe873df" translate="yes" xml:space="preserve">
          <source>Most Unicode character properties have at least two synonyms (or aliases if you prefer): a short one that is easier to type and a longer one that is more descriptive and hence easier to understand. Thus the &lt;code&gt;&quot;L&quot;&lt;/code&gt; and &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; properties above are equivalent and can be used interchangeably. Likewise, &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; is a synonym for &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; , and we could have written &lt;code&gt;\p{Uppercase}&lt;/code&gt; equivalently as &lt;code&gt;\p{Upper}&lt;/code&gt; . Also, there are typically various synonyms for the values the property can be. For binary properties, &lt;code&gt;&quot;True&quot;&lt;/code&gt; has 3 synonyms: &lt;code&gt;&quot;T&quot;&lt;/code&gt; , &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; , and &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ; and &lt;code&gt;&quot;False&quot;&lt;/code&gt; has correspondingly &lt;code&gt;&quot;F&quot;&lt;/code&gt; , &lt;code&gt;&quot;No&quot;&lt;/code&gt; , and &lt;code&gt;&quot;N&quot;&lt;/code&gt; . But be careful. A short form of a value for one property may not mean the same thing as the same short form for another. Thus, for the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; , but for the &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidi_Class &lt;/a&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Left&quot;&lt;/code&gt; . A complete list of properties and synonyms is in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;.</source>
          <target state="translated">大多数Unicode字符属性至少具有两个同义词（或别名，如果您愿意的话）：较短的一个易于键入，而较长的一个则更具描述性，因此更易于理解。因此，上面的 &lt;code&gt;&quot;L&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; 属性是等效的，可以互换使用。同样， &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; 是 &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; 的同义词，我们可以将 &lt;code&gt;\p{Uppercase}&lt;/code&gt; 等效地写为 &lt;code&gt;\p{Upper}&lt;/code&gt; 。同样，对于属性可以是的值，通常存在各种同义词。对于二进制属性， &lt;code&gt;&quot;True&quot;&lt;/code&gt; 具有3个同义词： &lt;code&gt;&quot;T&quot;&lt;/code&gt; ， &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ;和 &lt;code&gt;&quot;False&quot;&lt;/code&gt; 分别具有 &lt;code&gt;&quot;F&quot;&lt;/code&gt; ， &lt;code&gt;&quot;No&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;N&quot;&lt;/code&gt; 。但小心点。一种属性的简短形式的值可能与另一种属性的相同形式的含义不同。因此，对于 &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;General_Category&lt;/a&gt;&lt;/code&gt; 属性， &lt;code&gt;&quot;L&quot;&lt;/code&gt; 表示 &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; ，而对于&lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidi_Class&lt;/a&gt;属性， &lt;code&gt;&quot;L&quot;&lt;/code&gt; 表示 &lt;code&gt;&quot;Left&quot;&lt;/code&gt; 。属性和同义词的完整列表在&lt;a href=&quot;perluniprops&quot;&gt;perluniprops中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53043f2844348d956e6cb65224a0ae9814e3772c" translate="yes" xml:space="preserve">
          <source>Most Unicode character properties have at least two synonyms (or aliases if you prefer): a short one that is easier to type and a longer one that is more descriptive and hence easier to understand. Thus the &lt;code&gt;&quot;L&quot;&lt;/code&gt; and &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; properties above are equivalent and can be used interchangeably. Likewise, &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; is a synonym for &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt;, and we could have written &lt;code&gt;\p{Uppercase}&lt;/code&gt; equivalently as &lt;code&gt;\p{Upper}&lt;/code&gt;. Also, there are typically various synonyms for the values the property can be. For binary properties, &lt;code&gt;&quot;True&quot;&lt;/code&gt; has 3 synonyms: &lt;code&gt;&quot;T&quot;&lt;/code&gt;, &lt;code&gt;&quot;Yes&quot;&lt;/code&gt;, and &lt;code&gt;&quot;Y&quot;&lt;/code&gt;; and &lt;code&gt;&quot;False&quot;&lt;/code&gt; has correspondingly &lt;code&gt;&quot;F&quot;&lt;/code&gt;, &lt;code&gt;&quot;No&quot;&lt;/code&gt;, and &lt;code&gt;&quot;N&quot;&lt;/code&gt;. But be careful. A short form of a value for one property may not mean the same thing as the short form spelled the same for another. Thus, for the &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Letter&quot;&lt;/code&gt;, but for the &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;&lt;code&gt;Bidi_Class&lt;/code&gt;&lt;/a&gt; property, &lt;code&gt;&quot;L&quot;&lt;/code&gt; means &lt;code&gt;&quot;Left&quot;&lt;/code&gt;. A complete list of properties and synonyms is in &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;.</source>
          <target state="translated">大多数Unicode字符属性至少具有两个同义词（或别名，如果您愿意的话）：较短的一个易于键入，而较长的一个则更具描述性，因此更易于理解。因此，上面的 &lt;code&gt;&quot;L&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; 属性是等效的，可以互换使用。同样， &lt;code&gt;&quot;Upper&quot;&lt;/code&gt; 是 &lt;code&gt;&quot;Uppercase&quot;&lt;/code&gt; 的同义词，我们可以将 &lt;code&gt;\p{Uppercase}&lt;/code&gt; 等效地写为 &lt;code&gt;\p{Upper}&lt;/code&gt; 。同样，对于属性可以具有的值，通常存在各种同义词。对于二进制属性， &lt;code&gt;&quot;True&quot;&lt;/code&gt; 具有3个同义词： &lt;code&gt;&quot;T&quot;&lt;/code&gt; ， &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;Y&quot;&lt;/code&gt; ;和 &lt;code&gt;&quot;False&quot;&lt;/code&gt; 分别具有 &lt;code&gt;&quot;F&quot;&lt;/code&gt; ， &lt;code&gt;&quot;No&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;N&quot;&lt;/code&gt; 。不过要小心。一种属性的简短形式的值可能与另一种形式的简写形式的含义不同。因此，对于 &lt;code&gt;&lt;a href=&quot;#General_Category&quot;&gt;&quot;General_Category&quot;&lt;/a&gt;&lt;/code&gt; 属性， &lt;code&gt;&quot;L&quot;&lt;/code&gt; 表示 &lt;code&gt;&quot;Letter&quot;&lt;/code&gt; ，而对于&lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt; &lt;code&gt;Bidi_Class&lt;/code&gt; &lt;/a&gt;属性， &lt;code&gt;&quot;L&quot;&lt;/code&gt; 表示 &lt;code&gt;&quot;Left&quot;&lt;/code&gt; 。属性和同义词的完整列表在&lt;a href=&quot;perluniprops&quot;&gt;perluniprops中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c33601ec8592d8b99971745f555ad60f8af01ae0" translate="yes" xml:space="preserve">
          <source>Most Unicode properties have several synonymous names. Typically, there is at least a short name, convenient to type, and a long name that more fully describes the property, and hence is more easily understood.</source>
          <target state="translated">大多数Unicode属性都有几个同义词名称。通常情况下,至少有一个短名,方便输入,还有一个长名,可以更全面地描述该属性,因此更容易理解。</target>
        </trans-unit>
        <trans-unit id="c27a5f71254b1b3c6a849e7bef1eacb3f778bdb9" translate="yes" xml:space="preserve">
          <source>Most algorithms are only defined for strings of bytes and this method might therefore croak if the provided arguments contain chars with ordinal number above 255.</source>
          <target state="translated">大多数算法只定义了字节串,因此如果提供的参数中包含序数大于255的chars,这个方法可能会崩溃。</target>
        </trans-unit>
        <trans-unit id="437ac38b2b73f7517fd2a5637f9c4e0ca58f6e94" translate="yes" xml:space="preserve">
          <source>Most behaviour, including environment variables and configuration, comes directly from CPAN.pm.</source>
          <target state="translated">大多数行为,包括环境变量和配置,都直接来自CPAN.pm。</target>
        </trans-unit>
        <trans-unit id="283ae0258fda6ce570af6540f2c58627624b3cdb" translate="yes" xml:space="preserve">
          <source>Most callers of &lt;code&gt;cx_pushblock&lt;/code&gt; simply set the new args stack floor to the top of the previous stack frame, but for &lt;code&gt;CXt_LOOP_LIST&lt;/code&gt; it stores the items being iterated over on the stack, and so sets &lt;code&gt;blk_oldsp&lt;/code&gt; to the top of these items instead. Note that, contrary to its name, &lt;code&gt;blk_oldsp&lt;/code&gt; doesn't always represent the value to restore &lt;code&gt;PL_stack_sp&lt;/code&gt; to on scope exit.</source>
          <target state="translated">大多数 &lt;code&gt;cx_pushblock&lt;/code&gt; 的调用者只是将新的args堆栈底限设置为上一个堆栈框架的顶部，但是对于 &lt;code&gt;CXt_LOOP_LIST&lt;/code&gt; ,它将要迭代的项存储在堆栈中，因此将 &lt;code&gt;blk_oldsp&lt;/code&gt; 设置为这些项的顶部。请注意，与其名称相反， &lt;code&gt;blk_oldsp&lt;/code&gt; 并不总是代表将 &lt;code&gt;PL_stack_sp&lt;/code&gt; 恢复到作用域出口时的值。</target>
        </trans-unit>
        <trans-unit id="b83511857d278656d99d572ed9af8349be0ed8d8" translate="yes" xml:space="preserve">
          <source>Most characters that are meta characters in regular expressions (that is, characters that carry a special meaning like &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , or &lt;code&gt;(&lt;/code&gt;) lose their special meaning and can be used inside a character class without the need to escape them. For instance, &lt;code&gt;[()]&lt;/code&gt; matches either an opening parenthesis, or a closing parenthesis, and the parens inside the character class don't group or capture.</source>
          <target state="translated">在正则表达式中作为元字符的大多数字符（即具有特殊含义的字符，如 &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;(&lt;/code&gt; ）都失去了特殊含义，可以在字符类内部使用而无需对其进行转义。例如， &lt;code&gt;[()]&lt;/code&gt; 匹配圆括号或圆括号，并且字符类内的括号不会分组或捕获。</target>
        </trans-unit>
        <trans-unit id="662368a274868c093a1187793ee53785736a4eef" translate="yes" xml:space="preserve">
          <source>Most characters that are meta characters in regular expressions (that is, characters that carry a special meaning like &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;(&lt;/code&gt;) lose their special meaning and can be used inside a character class without the need to escape them. For instance, &lt;code&gt;[()]&lt;/code&gt; matches either an opening parenthesis, or a closing parenthesis, and the parens inside the character class don't group or capture. Be aware that, unless the pattern is evaluated in single-quotish context, variable interpolation will take place before the bracketed class is parsed:</source>
          <target state="translated">大多数在正则表达式中是元字符的字符（即，具有特殊含义的字符，如 &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;(&lt;/code&gt; ）都失去了特殊含义，可以在字符类内部使用而无需对其进行转义。例如， &lt;code&gt;[()]&lt;/code&gt; 匹配开括号或闭括号，并且字符类内的括号不会分组或捕获，请注意，除非在单引号上下文中评估模式，否则变量插值将在括号内的类被解析：</target>
        </trans-unit>
        <trans-unit id="a75f1bf80c368f3dc4a94d23cd008a9dbf44eec2" translate="yes" xml:space="preserve">
          <source>Most code should use &lt;code&gt;&lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot;&lt;/a&gt;()&lt;/code&gt; rather than call this directly.</source>
          <target state="translated">大多数代码应使用 &lt;code&gt;&lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot;&lt;/a&gt;()&lt;/code&gt; 而不是直接调用此代码。</target>
        </trans-unit>
        <trans-unit id="0df73814a9b3dab0955308c1ef467807cec3d266" translate="yes" xml:space="preserve">
          <source>Most compiler backends use the following conventions: OPTIONS consists of a comma-separated list of words (no white-space). The &lt;code&gt;-v&lt;/code&gt; option usually puts the backend into verbose mode. The &lt;code&gt;-ofile&lt;/code&gt; option generates output to &lt;b&gt;file&lt;/b&gt; instead of stdout. The &lt;code&gt;-D&lt;/code&gt; option followed by various letters turns on various internal debugging flags. See the documentation for the desired backend (named &lt;code&gt;B::Backend&lt;/code&gt; for the example above) to find out about that backend.</source>
          <target state="translated">大多数编译器后端使用以下约定：OPTIONS由逗号分隔的单词列表组成（无空格）。该 &lt;code&gt;-v&lt;/code&gt; 选项通常把后端进入详细模式。该 &lt;code&gt;-ofile&lt;/code&gt; 选项生成输出到&lt;b&gt;文件&lt;/b&gt;，而不是标准输出。该 &lt;code&gt;-D&lt;/code&gt; 选项，然后在各种内部调试标志各种字母圈。请参阅所需后端的文档（在上面的示例中名为 &lt;code&gt;B::Backend&lt;/code&gt; ）以了解有关该后端的信息。</target>
        </trans-unit>
        <trans-unit id="2ceb62989a1effad36bd037ec531f4c70cb866db" translate="yes" xml:space="preserve">
          <source>Most digest algorithms are byte based and for these it is not possible to add bits that are not a multiple of 8, and the add_bits() method will croak if you try.</source>
          <target state="translated">大多数的摘要算法都是基于字节的,对于这些算法来说,不可能添加不是8的倍数的位,如果你尝试的话,add_bits()方法会呱呱叫。</target>
        </trans-unit>
        <trans-unit id="e8e0432f156912c28405beeb7541e8a07073675c" translate="yes" xml:space="preserve">
          <source>Most extensions (whether they require a C compiler or not) can be built, tested and installed with the standard mantra:</source>
          <target state="translated">大多数扩展(无论是否需要C编译器)都可以通过标准的口令来构建、测试和安装。</target>
        </trans-unit>
        <trans-unit id="6c36d3b16152dc2e4c3eb43bb1840617dcd58c24" translate="yes" xml:space="preserve">
          <source>Most frequently called functions</source>
          <target state="translated">最常调用的功能</target>
        </trans-unit>
        <trans-unit id="e2f7deae35b5b32265a212cc23f97fad9e01f8ca" translate="yes" xml:space="preserve">
          <source>Most functions in package CPAN are exported by default. The reason for this is that the primary use is intended for the cpan shell or for one-liners.</source>
          <target state="translated">CPAN包中的大部分函数都是默认导出的。这样做的原因是主要用于cpan shell或单行本。</target>
        </trans-unit>
        <trans-unit id="7d52830eddc7f522e9b94c8937811fe2f95508ad" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;srand(42)&lt;/code&gt; will usually produce the same results as &lt;code&gt;srand(42.1)&lt;/code&gt;. To be safe, always pass &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; an integer.</source>
          <target state="translated">&lt;a href=&quot;#srand-EXPR&quot;&gt; &lt;code&gt;srand&lt;/code&gt; 的&lt;/a&gt;大多数实现都采用整数，并且会无声地截断十进制数字。这意味着 &lt;code&gt;srand(42)&lt;/code&gt; 通常会产生与 &lt;code&gt;srand(42.1)&lt;/code&gt; 相同的结果。为了安全起见，请始终向&lt;a href=&quot;#srand-EXPR&quot;&gt; &lt;code&gt;srand&lt;/code&gt; &lt;/a&gt;传递一个整数。</target>
        </trans-unit>
        <trans-unit id="5781421ac333dfdfd58bada47c5083697a175449" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; will usually produce the same results as &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt;. To be safe, always pass &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; an integer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 的大多数实现都采用整数，并且会无声地截断十进制数字。这意味着 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; 通常将产生与 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt; 相同的结果。为了安全起见，请始终向 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 传递一个整数。</target>
        </trans-unit>
        <trans-unit id="405bded6ca944a37e6c3b479ff1de785ad3f9801" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; take an integer and will silently truncate decimal numbers. This means &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; will usually produce the same results as &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt;. To be safe, always pass &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; an integer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 的大多数实现都采用整数，并且会无声地截断十进制数字。这意味着 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42)&lt;/a&gt;&lt;/code&gt; 通常将产生与 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand(42.1)&lt;/a&gt;&lt;/code&gt; 相同的结果。为了安全起见，请始终向 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 传递一个整数。</target>
        </trans-unit>
        <trans-unit id="5d6b5dfca3c0039899dcb7cae60483d04f370ee8" translate="yes" xml:space="preserve">
          <source>Most importantly, CPAN includes around a thousand unbundled modules, some of which require a C compiler to build. Major categories of modules are:</source>
          <target state="translated">最重要的是,CPAN包含了大约1000个未捆绑的模块,其中一些模块需要C编译器来构建。模块的主要类别有:</target>
        </trans-unit>
        <trans-unit id="acf589d2649f04394cc8c6cda103470ec97cfc12" translate="yes" xml:space="preserve">
          <source>Most importantly, choose modules which are as stable as possible. In order of preference:</source>
          <target state="translated">最重要的是,尽可能选择稳定的模块。依次为:</target>
        </trans-unit>
        <trans-unit id="2a11d2785522a93f5420fa16470f086a6da1b3ea" translate="yes" xml:space="preserve">
          <source>Most mentioned distributions are depots. H.Merijn Brand has made prebuilt gcc binaries available on &lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt; and/or &lt;a href=&quot;http://www.cmve.net/~merijn/&quot;&gt;http://www.cmve.net/~merijn/&lt;/a&gt; for HP-UX 10.20 (only 32bit), HP-UX 11.00, HP-UX 11.11 (HP-UX 11i v1), and HP-UX 11.23 (HP-UX 11i v2 PA-RISC) in both 32- and 64-bit versions. For HP-UX 11.23 IPF and HP-UX 11.31 IPF depots are available too. The IPF versions do not need two versions of GNU gcc.</source>
          <target state="translated">提及最多的分布是仓库。H.Merijn Brand已在HP-UX 10.20（仅32位），HP的&lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt;和/或&lt;a href=&quot;http://www.cmve.net/~merijn/&quot;&gt;http://www.cmve.net/~merijn/&lt;/a&gt;上提供了预构建的gcc二进制文件32位和64位版本的-UX 11.00，HP-UX 11.11（HP-UX 11i v1）和HP-UX 11.23（HP-UX 11i v2 PA-RISC）。对于HP-UX 11.23 IPF和HP-UX 11.31 IPF库也可用。IPF版本不需要两个版本的GNU gcc。</target>
        </trans-unit>
        <trans-unit id="236aab386cc9ca4c5e8adffaa67e969c764a4805" translate="yes" xml:space="preserve">
          <source>Most methods you write will expect to operate on objects:</source>
          <target state="translated">你写的大多数方法都会期望对对象进行操作。</target>
        </trans-unit>
        <trans-unit id="e42995ec64ef087af8c046e70f5daf6eb0079f02" translate="yes" xml:space="preserve">
          <source>Most modern X terminal emulators support 256 colors. Known to not support those colors are aterm, rxvt, Terminal.app, and TTY/VC.</source>
          <target state="translated">大多数现代X终端仿真器支持256种颜色。已知不支持这些颜色的有 aterm、rxvt、Terminal.app 和 TTY/VC。</target>
        </trans-unit>
        <trans-unit id="09fdc7d65b76d3e363653e14537a18e5aea28f56" translate="yes" xml:space="preserve">
          <source>Most modern operating systems support preemptive multitasking nowadays.</source>
          <target state="translated">现在大多数现代操作系统都支持预置多任务。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
