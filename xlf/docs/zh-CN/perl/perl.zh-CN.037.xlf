<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="10a3726f3632f6869d052300b4a97061a0f2783d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../pod/usage&quot;&gt;Pod::Usage&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;../pod/usage&quot;&gt;Pod ::用法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d290c4d73a4c9a30883498ca11623a61519662b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../spec&quot;&gt;File::Spec&lt;/a&gt; and &lt;a href=&quot;unix&quot;&gt;File::Spec::Unix&lt;/a&gt;. This package overrides the implementation of these methods, not the semantics.</source>
          <target state="translated">参见&lt;a href=&quot;../spec&quot;&gt;File :: Spec&lt;/a&gt;和&lt;a href=&quot;unix&quot;&gt;File :: Spec :: Unix&lt;/a&gt;。该程序包将覆盖这些方法的实现，而不是语义。</target>
        </trans-unit>
        <trans-unit id="a6b10fbdc874b5a4a77103b24979b9c350436caa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../tap/parser&quot;&gt;TAP::Parser&lt;/a&gt;, &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; for the main documentation for this distribution.</source>
          <target state="translated">有关此发行版的主要文档，请参见&lt;a href=&quot;../tap/parser&quot;&gt;TAP :: Parser&lt;/a&gt;和&lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c447f42578e43ae3e6605205bdde05967a7faf96" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; for more information about lexical warnings.</source>
          <target state="translated">见&lt;a href=&quot;../warnings&quot;&gt;警告&lt;/a&gt;有关词汇警告的详细信息。</target>
        </trans-unit>
        <trans-unit id="44b382b16fffe92577f19c159253d88a0e5a86e3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; for more information on this module's usage.</source>
          <target state="translated">请参阅&lt;a href=&quot;../warnings&quot;&gt;警告&lt;/a&gt;以获取有关此模块用法的更多信息。</target>
        </trans-unit>
        <trans-unit id="30eb3c4ed6fdf895cda2c46d24fb41f9287a7fb0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;autodie/exception&quot;&gt;autodie::exception&lt;/a&gt; for further information on interrogating exceptions.</source>
          <target state="translated">有关&lt;a href=&quot;autodie/exception&quot;&gt;查询异常&lt;/a&gt;的更多信息，请参见autodie :: exception。</target>
        </trans-unit>
        <trans-unit id="bb8954af7fb5ccdc28f9968184aa62f0cd0dd631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;base&quot;&gt;TAP::Formatter::Base&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;base&quot;&gt;TAP :: Formatter :: Base&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3c2614a4bf281c7ef55cc34f337c1d619fa1884" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt; for more details than you ever wanted to know about using a different low-level library.</source>
          <target state="translated">有关使用其他低级库的详细信息，请参见&lt;a href=&quot;bigint&quot;&gt;Math :: BigInt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce4247dde2e63b0f8b6a60cd50088d3656354822" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; or &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; for some interesting tie() implementations. A good starting point for many tie() implementations is with one of the modules &lt;a href=&quot;tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, &lt;a href=&quot;tie/array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;tie/hash&quot;&gt;Tie::Hash&lt;/a&gt;, or &lt;a href=&quot;tie/handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="translated">有关一些有趣的tie（）实现，请参见&lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;或&lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt;。对于许多tie（）实现而言，一个好的起点就是使用模块之一&lt;a href=&quot;tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt;，&lt;a href=&quot;tie/array&quot;&gt;Tie :: Array&lt;/a&gt;，&lt;a href=&quot;tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt;或&lt;a href=&quot;tie/handle&quot;&gt;Tie :: Handle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c9bd4f48f3f6ae98b30c07f5d71cc57a272c1d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;. Requires symbolic links.</source>
          <target state="translated">参见&lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;。需要符号链接。</target>
        </trans-unit>
        <trans-unit id="4296f20f12dfc0132d56a792670dce7e38a57723" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;encode&quot;&gt;编码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a67af7c8913351d114f65a7936594b2d41f06da" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encode/alias&quot;&gt;Encode::Alias&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;encode/alias&quot;&gt;Encode :: Alias&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8517af08323f5f094acafe117a103b971b6890a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encode/encoding&quot;&gt;Encode::Encoding&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;encode/encoding&quot;&gt;Encode :: Encoding&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2043e4cc4b14000fecd0ef098d0ed8991642e3a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;encoding&quot;&gt;编码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ab13f06779fa0e51f4b4f1ab1ab086b89de4b8b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;expire&quot;&gt;Memoize::Expire&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;expire&quot;&gt;Memoize :: Expire&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f5a809c446d4dccbb74031c3ad04c52cccf00c0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;faq#Apache%3a%3aGZip-Revisited&quot;&gt;IO::Compress::FAQ&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;faq#Apache%3a%3aGZip-Revisited&quot;&gt;IO :: Compress :: FAQ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11726ce061a925f71cc1ea30a25c1dc96572d5a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO::Compress::FAQ&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO :: Compress :: FAQ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4bbce97bf5c8d683b28b867daee7323eefafa16" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;, &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;, &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; for additional information.</source>
          <target state="translated">有关其他信息，请参见&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;，&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;，&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;和&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da7361a43bb9b0019562a0b989d95d7ab39d2deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;. Note also that the loop control statements described later will</source>
          <target state="translated">见&lt;a href=&quot;functions/do&quot;&gt;做&lt;/a&gt;。还请注意，稍后描述的循环控制语句将</target>
        </trans-unit>
        <trans-unit id="40183fcc1ae5b8277c08c3330164903ddccf2ec4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db782e508dd1270856c14c5063a050794cf72b17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;functions/print&quot;&gt;打印&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfb55bb6b51a2ed413b15caf26a9050829c0f423" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89b99f617beb3c9ebbaa01979b8eb5328c56f3b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt; for the exact definition of characters that are quoted by &lt;code&gt;\Q&lt;/code&gt; .</source>
          <target state="translated">有关 &lt;code&gt;\Q&lt;/code&gt; 引用的字符的确切定义，请参见&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfd34654a6d253af136f4d30dc3e3d3012379d65" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; for details.</source>
          <target state="translated">有关详情，请参见&lt;a href=&quot;functions/say&quot;&gt;说&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80ac004d25eee837fc4957cc10b52c48abd10e0f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt; and &lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt; about the SEEK_* constants.</source>
          <target state="translated">有关SEEK_ *常量，请参见&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;和&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b0b5bdfe60761c96a19b4890ab4c2a8bb2151e3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt; about the S_I* constants.</source>
          <target state="translated">有关S_I *常数，请参见&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c60c634f7df4c71aad5b44e31e08941bfd64020" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;, &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;, &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;，&lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;，&lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2bcd07d2431ac860252ec173305db3f690b09ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt; for information on how to manipulate individual bits in a bit vector.</source>
          <target state="translated">有关如何操作位向量中各个位的信息，请参见&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e5faab760890d79b2e8bc315d24e6c65c65fe07" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&quot;&gt;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&lt;/a&gt; It helps if not too many DLLs are loaded in memory so the available address space is larger, e.g. stopping the MS Internet Explorer might help.</source>
          <target state="translated">请参见&lt;a href=&quot;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&quot;&gt;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&lt;/a&gt;。如果内存中没有加载太多的DLL，这将有所帮助，因此可用地址空间更大，例如，停止MS Internet资源管理器可能会有所帮助。</target>
        </trans-unit>
        <trans-unit id="945e0c7eadb84d3f07c95ef0218c299b85e26b64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&quot;&gt;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&lt;/a&gt; for instructions to set up your device prior to attempting anything else.</source>
          <target state="translated">请参阅&lt;a href=&quot;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&quot;&gt;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html，&lt;/a&gt;以获取在尝试进行任何其他操作之前设置设备的说明。</target>
        </trans-unit>
        <trans-unit id="12695444c245fc3e26b3c842dfd1ab394b22bd66" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://search.cpan.org/dist/PGPLOT&quot;&gt;http://search.cpan.org/dist/PGPLOT&lt;/a&gt; for the code.</source>
          <target state="translated">有关代码，请参见&lt;a href=&quot;http://search.cpan.org/dist/PGPLOT&quot;&gt;http://search.cpan.org/dist/PGPLOT&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2468367eb8d553c9e424fb8393624c4bd2fffd92" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Deflate&quot;&gt;IO::Deflate&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Inflate&quot;&gt;IO::Inflate&lt;/a&gt; included with this distribution for an alternative interface for reading/writing RFC 1950 files/buffers.</source>
          <target state="translated">请参阅此发行版随附的&lt;a href=&quot;http://search.cpan.org/perldoc/IO::Deflate&quot;&gt;IO :: Deflate&lt;/a&gt;和&lt;a href=&quot;http://search.cpan.org/perldoc/IO::Inflate&quot;&gt;IO :: Inflate，&lt;/a&gt;以获取用于读取/写入RFC 1950文件/缓冲区的备用接口。</target>
        </trans-unit>
        <trans-unit id="7b2f03bb8037ab899f4bb184a9045b3b297eddea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2fports%2f&quot;&gt;CPAN Ports&lt;/a&gt;</source>
          <target state="translated">查看&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2fports%2f&quot;&gt;CPAN端口&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e4c2383d84186885975bc1ea266c546fbcbe6d7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.alanwood.net/unicode/&quot;&gt;http://www.alanwood.net/unicode/&lt;/a&gt; and &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/unicode.html&quot;&gt;http://www.cl.cam.ac.uk/~mgk25/unicode.html&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;http://www.alanwood.net/unicode/&quot;&gt;http://www.alanwood.net/unicode/&lt;/a&gt;和&lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/unicode.html&quot;&gt;http://www.cl.cam.ac.uk/~mgk25/unicode.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99ce21958aa0db22b5723ac337d2286f8c5e33a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.cs.rice.edu/~scrosby/hash/&quot;&gt;http://www.cs.rice.edu/~scrosby/hash/&lt;/a&gt; for more information, and any computer science textbook on algorithmic complexity.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://www.cs.rice.edu/~scrosby/hash/&quot;&gt;http://www.cs.rice.edu/~scrosby/hash/&lt;/a&gt;，以及有关算法复杂性的任何计算机科学教科书。</target>
        </trans-unit>
        <trans-unit id="ce02b3b9db93f433f63696e3d1917e7f9836187b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.perl.com/perl/misc/Artistic.html&quot;&gt;http://www.perl.com/perl/misc/Artistic.html&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;http://www.perl.com/perl/misc/Artistic.html&quot;&gt;http://www.perl.com/perl/misc/Artistic.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc52ab8ff41c4d0c988b0b199b0c86093ae8fd01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt; for a history of Perl revisions.</source>
          <target state="translated">有关Perl修订历史，请参见&lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0931c0ab9141f229a0c6af999f002972965c4586" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;i18n/langinfo&quot;&gt;I18N :: Langinfo&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea88ee3cb91b0285e8521da3ad715c02458ef952" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt;, &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, and &lt;a href=&quot;perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;Bidirectional Communication with Another Process in perlipc&lt;/a&gt; for examples of such things.</source>
          <target state="translated">有关&lt;a href=&quot;ipc/open2&quot;&gt;此类示例&lt;/a&gt;，请参见IPC :: Open2，&lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt;和&lt;a href=&quot;perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;perlipc中与另一个进程的双向通信&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb7c82adcc75b32ae9e253fb64a0d32eb6b79e18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; for patching and contact information.</source>
          <target state="translated">有关修补程序和联系信息，请参见&lt;a href=&quot;makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ca559ae70940dd6aa2f3e8deb924f98b53d6a27" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;makemaker/tutorial&quot;&gt;ExtUtils::MakeMaker::Tutorial&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;makemaker/tutorial&quot;&gt;ExtUtils :: MakeMaker :: Tutorial&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a7ca226b3ffe2ea5d0f1d6a0d50f654317a3960" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;mm_unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; for &lt;a href=&quot;mm_any&quot;&gt;ExtUtils::MM_Any&lt;/a&gt; for documentation on the methods overridden here.</source>
          <target state="translated">有关此处重写的方法的文档，请参见&lt;a href=&quot;mm_unix&quot;&gt;ExtUtils :: MM_Any&lt;/a&gt;的&lt;a href=&quot;mm_any&quot;&gt;ExtUtils :: MM_Unix&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fb95d1acac93c5f08cddc5497b853220bb3ab6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;module/corelist&quot;&gt;Module::CoreList&lt;/a&gt; for one.</source>
          <target state="translated">参见&lt;a href=&quot;module/corelist&quot;&gt;Module :: CoreList&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afe93e58af18b14c3b068b54d5ad18108232c97f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; for an alternative that handles STDERR as well. This function is really just a wrapper around open3().</source>
          <target state="translated">有关处理STDERR的替代方法，请参见&lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt;。该函数实际上只是open3（）的包装。</target>
        </trans-unit>
        <trans-unit id="7fad32865e66fae2d9c012b4a69e272f754e4ebe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt; for more examples and notes.</source>
          <target state="translated">有关更多示例和注释，请参见&lt;a href=&quot;pack&quot;&gt;包装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01c329e88ceb1777b6d32a7cc55b6911aa2a7bec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;parser&quot;&gt;Pod::Parser&lt;/a&gt;, &lt;a href=&quot;select&quot;&gt;Pod::Select&lt;/a&gt;</source>
          <target state="translated">见&lt;a href=&quot;parser&quot;&gt;Pod :: Parser&lt;/a&gt;，&lt;a href=&quot;select&quot;&gt;Pod :: Select&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cd20a4a0f216e0c7f6fa18c97df852db257f281" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;, &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; and subclasses for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;，&lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt;和子类。</target>
        </trans-unit>
        <trans-unit id="fc836e4fa8490d1237ffacc6441c56c6507773e2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin in perlapi&lt;/a&gt; for the mechanism.</source>
          <target state="translated">有关&lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;机制，&lt;/a&gt;请参见perlapi中的PL_keyword_plugin。</target>
        </trans-unit>
        <trans-unit id="537dd0698345523cc865f14852d1db2c03bb7c70" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlapi#svtype&quot;&gt;svtype in perlapi&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;perlapi#svtype&quot;&gt;perlapi中的svtype&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1acf9d127e57a859c95eb32236787ede1adcc482" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldebguts#Debugger-Internals&quot;&gt;Debugger Internals in perldebguts&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perldebguts#Debugger-Internals&quot;&gt;perldebguts中的Debugger Internals&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ef90f2eaa033cc70947d426569b755d35159524" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; for details and variations.</source>
          <target state="translated">有关详细信息和变体，请参见&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ab48d58dafe2080846717e88408c47a657578ac" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldebug#Configurable-Options&quot;&gt;Configurable Options in perldebug&lt;/a&gt; for a description of options parsed by &lt;code&gt;DB::parse_options(string)&lt;/code&gt; .</source>
          <target state="translated">有关由 &lt;code&gt;DB::parse_options(string)&lt;/code&gt; 解析的选项的描述，请参见&lt;a href=&quot;perldebug#Configurable-Options&quot;&gt;perldebug中的&lt;/a&gt;可配置选项。</target>
        </trans-unit>
        <trans-unit id="507fce40ea81e1d2b2136e58ea87bdcdbec4dcf6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; for details about error messages.</source>
          <target state="translated">有关错误消息的详细信息，请参见&lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc3cede9685eccbaf724f0cc2e01b5e840d93d61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; for explanations of all Perl's diagnostics. The &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
diagnostics&lt;/code&gt; pragma automatically turns Perl's normally terse warnings and errors into these longer forms.</source>
          <target state="translated">有关所有Perl诊断程序的说明，请参见&lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;。在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; diagnostics&lt;/code&gt; 编译自动开启Perl的简短的警告和错误转换为长格式。</target>
        </trans-unit>
        <trans-unit id="96d5159d1cbd73f127422735b4b7f257183ca119" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99a8c6ca7ea639ec9ceaca35f003ab62962b4710" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; for many details and examples.</source>
          <target state="translated">有关更多详细信息和示例，请参见&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebb59b17bbac7855100933a8e5aee451474a1653" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;FileHandle&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">有关以下每个受支持的 &lt;code&gt;FileHandle&lt;/code&gt; 方法的完整描述，请参见&lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;，它们只是相应内置函数的前端：</target>
        </trans-unit>
        <trans-unit id="24f1df6d0c2aa9bd5f9f7bae780034b85ed98920" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; for detailed information about Perl's Git repository.</source>
          <target state="translated">有关Perl的Git存储库的详细信息，请参见&lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="856a30771ae6f035504c5ee6c944c0c181d73b8a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;How multiple interpreters and concurrency are supported in perlguts&lt;/a&gt; for further discussion about context.</source>
          <target state="translated">有关上下文的进一步讨论，请参见&lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;perlguts中如何支持多个解释器和并发&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="018cb5a7e283b5d6dcfd2da2d70718c9c3a039f4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Localizing-changes&quot;&gt;Localizing changes in perlguts&lt;/a&gt; for how to use the save stack.</source>
          <target state="translated">有关如何使用保存堆栈的信息，请参见&lt;a href=&quot;perlguts#Localizing-changes&quot;&gt;本地化perlguts中的更改&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8daeddf17b7ab12abdff68d06e4e96aa92ce25bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays in perlguts&lt;/a&gt; for more information on how to use this function on tied arrays.</source>
          <target state="translated">有关如何在绑定数组上使用此功能的更多信息，请参见&lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;了解perlguts中的绑定哈希和数组的魔力&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0afe304992d62dbdef57f985c4d7a8fa8c29cf6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays in perlguts&lt;/a&gt; for more information on how to use this function on tied hashes.</source>
          <target state="translated">有关如何在绑定哈希上使用此功能的更多信息，请参见&lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;了解perlguts中的绑定哈希和数组的魔术&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23816187840d5b58e8ce23aa1d1f945499e59413" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Unicode-Support&quot;&gt;Unicode Support in perlguts&lt;/a&gt; for an introduction to Unicode at the XS level, and &lt;a href=&quot;perlapi#Unicode-Support&quot;&gt;Unicode Support in perlapi&lt;/a&gt; for the API details.</source>
          <target state="translated">有关XS级别Unicode的介绍，请参见&lt;a href=&quot;perlguts#Unicode-Support&quot;&gt;perlguts&lt;/a&gt;中的&lt;a href=&quot;perlapi#Unicode-Support&quot;&gt;Unicode支持&lt;/a&gt;；有关API的详细信息，请参阅perlapi中的Unicode Support。</target>
        </trans-unit>
        <trans-unit id="9826310e53066a41827e95ae082ef5e101adb996" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#XSUBs-and-the-Argument-Stack&quot;&gt;XSUBs and the Argument Stack in perlguts&lt;/a&gt; for details on how the XPUSH macros work.</source>
          <target state="translated">有关XPUSH宏如何工作的详细信息，请参见&lt;a href=&quot;perlguts#XSUBs-and-the-Argument-Stack&quot;&gt;perlguts中的XSUB和参数堆栈&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fda0e3817b220a865963f0c4dad0e4830032feaf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; for an explanation of Perl development, including the &lt;a href=&quot;perlhack#SUPER-QUICK-PATCH-GUIDE&quot;&gt;Super Quick Patch Guide&lt;/a&gt; for making and submitting a small patch.</source>
          <target state="translated">有关Perl开发的说明，请参见&lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt;，包括用于制作和提交小补丁的《&lt;a href=&quot;perlhack#SUPER-QUICK-PATCH-GUIDE&quot;&gt;超级快速补丁指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2898d2e4a5f89f77754a8e61409566e6f2be9654" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; for details on how to submit this patch.</source>
          <target state="translated">有关如何提交此修补程序的详细信息，请参见&lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee1671ee83deb45f1ba85aeb36ac184cf85218eb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlhpux#nss_delete-core-dump-from-op%2fpwent-or-op%2fgrent&quot;&gt;nss_delete core dump from op/pwent or op/grent in perlhpux&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;perlhpux#nss_delete-core-dump-from-op%2fpwent-or-op%2fgrent&quot;&gt;perlhpux中的op / pwent或op / grent中的nss_delete核心转储&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8405e2fe730d81b8f5c9bd5d83e543241916750" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlinterp&quot;&gt;perlinterp&lt;/a&gt; for more details on the files that make up the Perl interpreter, as well as details on how it works.</source>
          <target state="translated">有关组成Perl解释器的文件的更多详细信息以及其工作方式的详细信息，请参见&lt;a href=&quot;perlinterp&quot;&gt;perlinterp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9abeb4449ef2604d5e96502e4503f28ae32dd249" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for the &lt;code&gt;:utf8&lt;/code&gt; layer, &lt;a href=&quot;perlio/encoding&quot;&gt;PerlIO::encoding&lt;/a&gt; and &lt;a href=&quot;encode/perlio&quot;&gt;Encode::PerlIO&lt;/a&gt; for the &lt;code&gt;:encoding()&lt;/code&gt; layer, and &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt; for many encodings supported by the &lt;code&gt;Encode&lt;/code&gt; module.</source>
          <target state="translated">有关 &lt;code&gt;:utf8&lt;/code&gt; 层，请参见&lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;；有关： &lt;code&gt;:encoding()&lt;/code&gt; 层，请参见PerlIO &lt;a href=&quot;perlio/encoding&quot;&gt;:: encoding&lt;/a&gt;和&lt;a href=&quot;encode/perlio&quot;&gt;Encode :: PerlIO&lt;/a&gt;；有关&lt;a href=&quot;encode/supported&quot;&gt;受&lt;/a&gt; &lt;code&gt;Encode&lt;/code&gt; 模块支持的许多编码，请参见Encode :: Supported。</target>
        </trans-unit>
        <trans-unit id="3fa171ec2c92cf5c9eaa78b53a24c1f2c996c988" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlio/via&quot;&gt;PerlIO::via&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlio/via&quot;&gt;PerlIO :: via&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7feec36eccfe24a9f8a7490c2b31f01ace9585f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt; for detailed info on PerlIO.</source>
          <target state="translated">有关&lt;a href=&quot;perliol&quot;&gt;PerlIO&lt;/a&gt;的详细信息，请参见perliol。</target>
        </trans-unit>
        <trans-unit id="d7fd1c83582e8199c35bed1061ad6e5667788b6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt; for more information on the Perl IO abstraction layer. Perl must have been built with &lt;code&gt;-Duseperlio&lt;/code&gt; .</source>
          <target state="translated">有关Perl IO抽象层的更多信息，请参见&lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt;。Perl必须使用 &lt;code&gt;-Duseperlio&lt;/code&gt; 构建。</target>
        </trans-unit>
        <trans-unit id="b3c00cb07b2b80671a11dd5dc8ccc4445d7a1964" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for an example of socketpair use. Perl 5.8 and later will emulate socketpair using IP sockets to localhost if your system implements sockets but not socketpair.</source>
          <target state="translated">有关使用套接字对的示例，请参见&lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt;。如果您的系统实现套接字而不是套接字对，则Perl 5.8和更高版本将使用IP套接字模拟localhost来模拟套接字对。</target>
        </trans-unit>
        <trans-unit id="de48b95e37613b5f75eaa879c8a2561ec7993e4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens in perlipc&lt;/a&gt; for more examples of this.</source>
          <target state="translated">有关更多示例，请参见&lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;perlipc中的&amp;ldquo;安全管道打开&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ec51ff1a9c16a2a5c094bd7e3d3e4d9afc76551" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;perlipc#Signals&quot;&gt;perlipc中的Signals&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c30bde8dacb2d8eb0fb67145aba7ca1921b53523" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; for other examples of code to do this. Zombies are not an issue with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;(&quot;prog &amp;amp;&quot;)&lt;/code&gt; .</source>
          <target state="translated">有关其他代码示例，请参见&lt;a href=&quot;perlipc#Signals&quot;&gt;perlipc中的Signals&lt;/a&gt;。僵尸不是 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;(&quot;prog &amp;amp;&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1569e04ff3547cc6071c23ed540183d9dff460a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f5ede378ffc0a712bf0fa5426e3fc697fc7cac1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for information on locales. The L10N files are in</source>
          <target state="translated">有关语言环境的信息，请参见&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。L10N文件在</target>
        </trans-unit>
        <trans-unit id="c8bf9c5c77cbc62b1d02711bc7615d4c76744ce0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for more detailed information on how Perl supports locales.</source>
          <target state="translated">有关Perl如何支持语言环境的更多详细信息，请参见&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac645e018e12e374a0abdd122f552472ebe60927" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;Unicode and UTF-8 in perllocale&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;perllocale中的Unicode和UTF-8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="251639eb084694b07f94fed6ff3488fc99fd4a64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba3a8f253da47d638d7046ba2322a3afb976f0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK, CHECK, INIT and END in perlmod&lt;/a&gt; about the special triggered code blocks, &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; .</source>
          <target state="translated">见&lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN，UNITCHECK，CHECK，INIT和perlmod的结束&lt;/a&gt;有关的特殊触发代码块， &lt;code&gt;BEGIN&lt;/code&gt; ， &lt;code&gt;UNITCHECK&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; ， &lt;code&gt;INIT&lt;/code&gt; 和 &lt;code&gt;END&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48920c0784fa7847466f7fc8f760b78486c8bd0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#Making-your-module-threadsafe&quot;&gt;Making your module threadsafe in perlmod&lt;/a&gt; when creating modules that may be used in threaded applications, especially if those modules use non-Perl data, or XS code.</source>
          <target state="translated">创建可在线程应用程序中使用的模块时，请参阅&lt;a href=&quot;perlmod#Making-your-module-threadsafe&quot;&gt;在perlmod中使模块具有线程安全性&lt;/a&gt;，尤其是在那些模块使用非Perl数据或XS代码的情况下。</target>
        </trans-unit>
        <trans-unit id="2dbec0bf12a50070137a3b7b8cef3b5cd4178658" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#Packages&quot;&gt;Packages in perlmod&lt;/a&gt; for more information about packages, modules, and classes. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for other scoping issues.</source>
          <target state="translated">有关软件包，模块和类的更多信息，请参见&lt;a href=&quot;perlmod#Packages&quot;&gt;perlmod&lt;/a&gt;中的软件包。有关其他范围问题，请参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c314b6a45d86fe3727f9c31efb044a2e44ccbf8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#Perl-Modules&quot;&gt;Perl Modules in perlmod&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;perlmod#Perl-Modules&quot;&gt;perlmod中的Perl模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06c2074fd797e7147bc8190fe65185f9c82cba22" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for a list of standard modules and pragmas. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for the &lt;code&gt;-M&lt;/code&gt; and &lt;code&gt;-m&lt;/code&gt; command-line options to Perl that give &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; functionality from the command-line.</source>
          <target state="translated">有关标准模块和&lt;a href=&quot;perlmodlib&quot;&gt;实用&lt;/a&gt;程序的列表，请参见perlmodlib。有关&lt;a href=&quot;perlrun&quot;&gt;Perl&lt;/a&gt;的 &lt;code&gt;-M&lt;/code&gt; 和 &lt;code&gt;-m&lt;/code&gt; 命令行选项的信息，请参见perlrun，这些选项提供了命令行的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="0b6df179cd0b52b85173df251cbf179f4ebcee9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for general style issues related to building Perl modules and classes, as well as descriptions of the standard library and CPAN, &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; for how Perl's standard import/export mechanism works, &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; and &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for in-depth information on creating classes, &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for a hard-core reference document on objects, &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for an explanation of functions and scoping, and &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; for more information on writing extension modules.</source>
          <target state="translated">见&lt;a href=&quot;perlmodlib&quot;&gt;阅读perlmodlib&lt;/a&gt;相关建设Perl模块和类，以及标准库和CPAN的描述一般的作风问题，&lt;a href=&quot;exporter&quot;&gt;出口商&lt;/a&gt;如何Perl的标准导入/导出机制工程，&lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;和&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;深入了解如何创建类，&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;为有关对象的硬性参考文档，有关功能和作用域说明的&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;，有关编写扩展模块的更多信息的&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;和&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a67f36c355c94afa5f2194abf5d2edb2e81009d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt; and &lt;a href=&quot;strict#strict-subs&quot;&gt;strict subs in strict&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib中的实用模块&lt;/a&gt;和&lt;a href=&quot;strict#strict-subs&quot;&gt;strict中的strict子&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9da8e13c45415ffe502ec4f548998fe2b55c8623" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt;, &lt;a href=&quot;perlop#Integer-Arithmetic&quot;&gt;Integer Arithmetic in perlop&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib中的实用模块，perlop&lt;/a&gt;中的&lt;a href=&quot;perlop#Integer-Arithmetic&quot;&gt;整数算法&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62976d8a73c6c4cbfdf369b6880fc6ac9c73f3b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib中的实用模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="563e259b553a2d0543c74163b5549c690239d3e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more details on unary operators and the comma operator.</source>
          <target state="translated">有关一元运算符和逗号运算符的更多详细信息，请参见&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e56170f575bd7555ba5a7ac522a6168d3e660440" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;Bitwise String Operators in perlop&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;perlop中的按位字符串运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0daac143e24931678e410c1147c16bad218f0bdf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; for a kinder, gentler explanation of opening files.</source>
          <target state="translated">请参阅&lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;，以获取对打开文件的更详尽的解释。</target>
        </trans-unit>
        <trans-unit id="1dd9474682f3f28a797a9e84ffa970a5bc4b9ecc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; to learn about the uses of the O_* constants with sysopen().</source>
          <target state="translated">请参阅&lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;以了解O_ *常量在sysopen（）中的用法。</target>
        </trans-unit>
        <trans-unit id="f19e2229a02aef738f8ea7f0705a7c74e50cdbe1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlpacktut&quot;&gt;perlpacktut&lt;/a&gt; for an introduction to this function.</source>
          <target state="translated">有关此功能的介绍，请参见&lt;a href=&quot;perlpacktut&quot;&gt;perlpacktut&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0285eafffc012e2606f0adde1cbfc987985c7680" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; for more information about the pod format.</source>
          <target state="translated">有关荚格式的更多信息，请参见&lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d34c6a98d24a87a7c24f60e7bcaa7dfda004973e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;, and several points in &lt;a href=&quot;#Notes-on-Implementing-Pod-Processors&quot;&gt;Notes on Implementing Pod Processors&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpod中的格式化代码&lt;/a&gt;，以及&lt;a href=&quot;#Notes-on-Implementing-Pod-Processors&quot;&gt;有关实现Pod处理器的注释中的&lt;/a&gt;几点。</target>
        </trans-unit>
        <trans-unit id="0b4ce36dc97a65c73b2e6189ec760aafbcbf4066" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; for additional information on valid syntax for</source>
          <target state="translated">有关有效语法的更多信息，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8b3213fac417f18926d75a4a003d38c5e1c238b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlre#(%3f%5b-%5d)&quot;&gt;(?[ ]) in perlre&lt;/a&gt;. If you don't want to use an experimental feature, you can use one of the following:</source>
          <target state="translated">请参见&lt;a href=&quot;perlre#(%3f%5b-%5d)&quot;&gt;perlre中的（？[]）&lt;/a&gt;。如果您不想使用实验性功能，则可以使用以下功能之一：</target>
        </trans-unit>
        <trans-unit id="1463c792e5b0f58dcb85fd04f04951c9b87eb661" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlre#n&quot;&gt;n in perlre&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;perlre#n&quot;&gt;perlre中的n&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c3716991c5281411a2fbc0a40a0c4b755db9afa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrebackslash#Misc&quot;&gt;Misc in perlrebackslash&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlrebackslash#Misc&quot;&gt;perlrebackslash中的Misc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddc98254c656473d6aaa3815176dcb32a9a66139" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Backslash-sequences&quot;&gt;Backslash sequences in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlrecharclass#Backslash-sequences&quot;&gt;perlrecharclass中的反斜杠序列&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a82392c75c07f9f8b49b790483d506827f344fa8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Bracketed-Character-Classes&quot;&gt;Bracketed Character Classes in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlrecharclass#Bracketed-Character-Classes&quot;&gt;perlrecharclass中的方括号字符类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23d8e0736ea0023293ece7bbd3c8ea37f080ff55" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;Extended Bracketed Character Classes in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;perlrecharclass中的扩展括号字符类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8b2f908e662577514076a06d71fc832dbf4d519" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;Extended Bracketed Character Classes in perlrecharclass&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;perlrecharclass中的扩展括号字符类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b06ce23f66b1a9b680964a359a19520b20adccb3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;perlrecharclass中的POSIX字符类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f57adcb45e08033573c3f56d2477bcd8f9d261de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Assigning to References in perlref&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;perlref中的&amp;ldquo;分配给引用&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e6e625bd7b12488354f5742899a0cebc0d1a2d5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Function Templates in perlref&lt;/a&gt; for more about manipulating functions by name in this way.</source>
          <target state="translated">有关以这种方式按名称操作函数的更多信息，请参见&lt;a href=&quot;perlref#Function-Templates&quot;&gt;perlref中的函数模板&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67f9bc227802927aafe326cae82167361c057e62" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Function Templates in perlref&lt;/a&gt; for more about references and closures. See &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; if you'd like to learn about calling C subroutines from Perl. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; if you'd like to learn about calling Perl subroutines from C. See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; to learn about bundling up your functions in separate files. See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; to learn what library modules come standard on your system. See &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; to learn how to make object method calls.</source>
          <target state="translated">有关参考和闭包的更多信息，请参见&lt;a href=&quot;perlref#Function-Templates&quot;&gt;perlref中的功能模板&lt;/a&gt;。如果您想了解有关从Perl调用C子例程的信息，请参见&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;。见&lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;如果您想了解有关调用子程序的Perl从C见&lt;a href=&quot;perlmod&quot;&gt;perlmod的&lt;/a&gt;了解在不同的文件中捆绑了自己的函数。请参阅&lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt;以了解哪些库模块是您系统上的标准配置。请参阅&lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;以了解如何进行对象方法调用。</target>
        </trans-unit>
        <trans-unit id="7a2c4441f9c059045721d8856b0625292d24d5b3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05a32756b04d398c3c77dcd7261586f5d74c0150" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt; and &lt;a href=&quot;#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED&lt;/a&gt; and &lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG&lt;/a&gt; for more information. You can get and set the key traversal mask for a specific hash by using the &lt;code&gt;hash_traversal_mask()&lt;/code&gt; function from &lt;a href=&quot;hash/util&quot;&gt;Hash::Util&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;perlsec&lt;/a&gt;和&lt;a href=&quot;#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED&lt;/a&gt;和&lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG中的&lt;/a&gt;算法复杂度攻击。您可以使用&lt;a href=&quot;hash/util&quot;&gt;Hash :: Util中&lt;/a&gt;的 &lt;code&gt;hash_traversal_mask()&lt;/code&gt; 函数来获取并设置特定哈希的密钥遍历掩码。</target>
        </trans-unit>
        <trans-unit id="bc83066c109af1f74bc6e736ae6976fb535c3a68" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt;, &lt;a href=&quot;#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS&lt;/a&gt;, and &lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;perlsec&lt;/a&gt;，&lt;a href=&quot;#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS&lt;/a&gt;和&lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG中的&lt;/a&gt;算法复杂度攻击。</target>
        </trans-unit>
        <trans-unit id="7578b1f97324785fc4944af282d89e98f8efd38c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for details about subroutines and references; see &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; and &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt; for more information about attributes.</source>
          <target state="translated">有关子例程和引用的详细信息，请参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;和&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;。有关属性的更多信息，请参见&lt;a href=&quot;attributes&quot;&gt;attribute&lt;/a&gt;和&lt;a href=&quot;attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbff563dc59a3b875542ce0184005c83684591e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for examples of using these as indirect filehandles in functions.</source>
          <target state="translated">有关在函数中将它们用作间接文件句柄的示例，请参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11900e927e19141a3c018aa0869d632e04dd84ec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for other scoping issues related to my() and local(), and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; regarding closures.</source>
          <target state="translated">有关与my（）和local（）有关的其他作用域问题，请参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;；有关闭包的问题，请参见&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9825e954666eb7c1bfeda7e6a661634f25dc5c34" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c88488f2e512f35271305383f908466cf8057f33" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;perlsub中的持久专用变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a320e9fd6f29231c75d7198e851a4c7383e39db8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for more information. The discussion of closures in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; may help you even though we did not use anonymous subroutines in this answer. See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;perlsub中的Persistent Private Variables&lt;/a&gt;。即使我们在此答案中未使用匿名子例程，在&lt;a href=&quot;perlref&quot;&gt;perlref中&lt;/a&gt;讨论闭包也可能对您有所帮助。有关详细信息，请参见&lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;perlsub中的持久专用变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5902f43c66efafac0892acaf6b04042096839dc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; and &lt;a href=&quot;perlsub#Temporary-Values-via-local()&quot;&gt;Temporary Values via local() in perlsub&lt;/a&gt; for excruciating details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;perlsub中的my（）的私有变量&lt;/a&gt;和perlsub中的&lt;a href=&quot;perlsub#Temporary-Values-via-local()&quot;&gt;local（）的临时值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fca40b43307292de3ffd6cd7918940ab49650e50" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Signatures&quot;&gt;Signatures in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlsub#Signatures&quot;&gt;perlsub中的签名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f454fad7196b37cd19f741a5805c180c5619ba68" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; for other examples in this style.</source>
          <target state="translated">有关此样式的其他示例，请参见&lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca5e0e6381ecee516815ca12d328b85e216e2e52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;Switch Statements in perlsyn&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;perlsyn中的Switch语句&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="580fba8485f5c5a1625260f46bfa7d3fe92e342b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for more about Unicode.</source>
          <target state="translated">有关Unicode的更多信息，请参见&lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bfd96ba5ce0763e2daff8d02efe4e68dcdfc7be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlunicode#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points in perlunicode&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;perlunicode#Beyond-Unicode-code-points&quot;&gt;perlunicode中的Unicode代码点之外&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e340a20d7e0f22a460b9c2169b23aa2e358a35a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perluniintro#Unicode-and-EBCDIC&quot;&gt;Unicode and EBCDIC in perluniintro&lt;/a&gt; and &lt;a href=&quot;#CONVERSIONS&quot;&gt;CONVERSIONS&lt;/a&gt; for other options.</source>
          <target state="translated">有关其他选项，请参见&lt;a href=&quot;perluniintro#Unicode-and-EBCDIC&quot;&gt;perluniintro中的Unicode和EBCDIC&lt;/a&gt;和&lt;a href=&quot;#CONVERSIONS&quot;&gt;CONVERSIONS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d42789cfdaacbb5c92c9515872baf49bf8c2e8fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for a complete list of these.</source>
          <target state="translated">有关这些的完整列表，请参见&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0604ead8033077a764aa6344677fdfceddb2d21" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for a description of Perl's built-in variables and a discussion of legal variable names. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;, &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;, and &lt;a href=&quot;perlmod#Symbol-Tables&quot;&gt;Symbol Tables in perlmod&lt;/a&gt; for more discussion on typeglobs and the &lt;code&gt;*foo{THING}&lt;/code&gt; syntax.</source>
          <target state="translated">有关Perl内置变量的描述以及有关合法变量名称的讨论，请参见&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;。有关typeglob和 &lt;code&gt;*foo{THING}&lt;/code&gt; 语法的更多讨论，请参见&lt;a href=&quot;perlref&quot;&gt;perlmod中的perlref&lt;/a&gt;，&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;和&lt;a href=&quot;perlmod#Symbol-Tables&quot;&gt;Symbol Tables&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="814867dbf4101593902d2d34050b5fa67499d1a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;FileHandle&lt;/code&gt; methods:</source>
          <target state="translated">有关以下每个受支持的 &lt;code&gt;FileHandle&lt;/code&gt; 方法的完整说明，请参见&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="98e3e1631bf77453f6eed4d5fbc7596b58ccbf6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details on setting &lt;code&gt;%SIG&lt;/code&gt; entries and for more examples. See the Carp module for other kinds of warnings using its carp() and cluck() functions.</source>
          <target state="translated">有关设置 &lt;code&gt;%SIG&lt;/code&gt; 条目的详细信息和更多示例，请参见&lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;。请参阅Carp模块，以使用其carp（）和cluck（）函数获得其他类型的警告。</target>
        </trans-unit>
        <trans-unit id="c566c9fdb8fd38a28ebc9a39b4d0c1b84510579e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; for additional details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;和&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5be4ec63877dd46a323d6acef0aca557f1f53ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; for a tutorial on the whole extension creation process.</source>
          <target state="translated">有关整个扩展创建过程的教程，请参见&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e651b6ac791a176d6926f404d81718d149a809d0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;pod/html&quot;&gt;Pod::Html&lt;/a&gt; for a list of known bugs in the translator.</source>
          <target state="translated">有关翻译器中已知错误的列表，请参见&lt;a href=&quot;pod/html&quot;&gt;Pod :: Html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="607e168a654f06346ceee0e0923bb2430ed2cf7c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;re#'strict'-mode&quot;&gt;'strict' in re&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;re#'strict'-mode&quot;&gt;re中的&amp;ldquo; strict&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bb5b43713359435a05f7058014a413c0c96e506" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;re#'strict'-mode&quot;&gt;'strict' mode in re&lt;/a&gt;</source>
          <target state="translated">请参阅&lt;a href=&quot;re#'strict'-mode&quot;&gt;&amp;ldquo;严格&amp;rdquo;模式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="563dde6d6a958ec86edd1335087ed33faccb2cc7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt; for some details about mixing reading and writing.</source>
          <target state="translated">请参阅&lt;a href=&quot;seek&quot;&gt;寻求&lt;/a&gt;有关混合阅读和写作的详细信息。</target>
        </trans-unit>
        <trans-unit id="b0421444fdb3fc6676183669854331211545c5d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt; for more description of __DATA__, and an example of its use. Note that you cannot read from the DATA filehandle in a BEGIN block: the BEGIN block is executed as soon as it is seen (during compilation), at which point the corresponding __DATA__ (or __END__) token has not yet been seen.</source>
          <target state="translated">有关&lt;a href=&quot;selfloader&quot;&gt;__DATA__&lt;/a&gt;的更多说明及其用法的示例，请参见SelfLoader。请注意，您无法从BEGIN块中的DATA文件句柄中读取：BEGIN块一被看到就执行（在编译过程中），此时尚未看到相应的__DATA __（或__END__）标记。</target>
        </trans-unit>
        <trans-unit id="8a5a8b8f53959db4074a0bb8ac96dd364eb59fa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;simple&quot;&gt;Pod::Simple&lt;/a&gt; for more specific details on the methods available to all derived parsers.</source>
          <target state="translated">有关可用于所有派生解析器的方法的更多详细信息，请参见&lt;a href=&quot;simple&quot;&gt;Pod :: Simple&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b67db36788f09e724759b4da084a895bc2435f7f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tap/parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; for more details on how configuration is passed to</source>
          <target state="translated">有关如何将配置传递到的更多详细信息，请参见&lt;a href=&quot;tap/parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2781a80c865d3f858dcd034db3d104567e0b8582" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aaecbb2712f6e07f3bb4d72df95b2c397d541543" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;argument&lt;/b&gt;.</source>
          <target state="translated">见&lt;b&gt;论点&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="5527b76a89c84a3ca14083852a888ee89dc297d3" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;base class&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;基类&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="0748adf6a78e7ea444a29edad6885bee003090b4" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;data structure&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;数据结构&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="19d3657a7c4d7865035e86e5b6971f8109ca7410" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;data type&lt;/b&gt; and &lt;b&gt;class&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;数据类型&lt;/b&gt;和&lt;b&gt;类&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="536c823324eb912b5c6244acf9b1ad5b55274a15" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;derived class&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;派生类&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="9bbb63a1d46d83899c7bf380b014546dfe04fc11" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;exception&lt;/b&gt; or &lt;b&gt;fatal error&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;异常&lt;/b&gt;或&lt;b&gt;致命错误&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="4e8461f566a09044dc7768e7650ed2d914866938" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;file descriptor&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;文件描述符&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="728a43e22381fb172962b9311e37123518029976" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;hash&lt;/b&gt;. Please. The term associative array is the old Perl 4 term for a &lt;b&gt;hash&lt;/b&gt;. Some languages call it a dictionary.</source>
          <target state="translated">参见&lt;b&gt;hash&lt;/b&gt;。请。术语关联数组是&lt;b&gt;哈希&lt;/b&gt;的旧Perl 4术语。一些语言将其称为字典。</target>
        </trans-unit>
        <trans-unit id="ecfad27e5c20c1c422bfd033e340d7a94a46d5ea" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;instance variable&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;实例变量&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="09cf9adb87abb2fdc9b722f9671176f116f6eaf1" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;little-endian&lt;/b&gt; and &lt;b&gt;big-endian&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;小端&lt;/b&gt;和&lt;b&gt;大端&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="53169c0ed3cca9fd3ac35d9b2a576b71c93fbd4d" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;metasymbol&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;metasymbol&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="04b090ce5f4f9a586fd7338c912c87f5ab48ad3b" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;method resolution order&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;方法解析顺序&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="2a67ffa745980843ec4798ce242765953fac1072" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;pattern matching&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;模式匹配&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="e03f83556afaaee2a7459215684ee750fab69deb" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;regular expression&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;正则表达式&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="b4e93b3654f60d19d5e6df12edadaceca1d7c9fc" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;reserved words&lt;/b&gt;.</source>
          <target state="translated">查看&lt;b&gt;保留字&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="b70d2dbf5552822e8a4e9a8bbd769b42f344b20e" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;script&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;脚本&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="0062ca63f61155baeb3b58435240563ecef43a39" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard I/O&lt;/b&gt;.</source>
          <target state="translated">见&lt;b&gt;标准I / O&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="c97fe936681e308451898325cb155ebbd3fa3a38" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard error&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;标准错误&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="9f1e232666e3d5326b83af45670f2d972b518acd" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard input&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;标准输入&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8dd3a4c4d799c613a92fca0b60748ad19fcb74ad" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard output&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;标准输出&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="81e346e31ae7bb88fdefcf9e8b772c0b3efeafd9" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;statement modifier&lt;/b&gt;, &lt;b&gt;regular expression&lt;/b&gt;, and &lt;b&gt;lvalue&lt;/b&gt;, not necessarily in that order.</source>
          <target state="translated">请参阅&lt;b&gt;语句修饰符&lt;/b&gt;，&lt;b&gt;正则表达式&lt;/b&gt;和&lt;b&gt;左值&lt;/b&gt;，不一定&lt;b&gt;按此&lt;/b&gt;顺序。</target>
        </trans-unit>
        <trans-unit id="63abefbc8f300d9b01a8f5c13b84488e6c55d52c" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;status&lt;/b&gt;.</source>
          <target state="translated">查看&lt;b&gt;状态&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="ee6f005aebce1d17193e47a0853321211fba4131" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;symbolic reference&lt;/b&gt;.</source>
          <target state="translated">参见&lt;b&gt;符号参考&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8e0f31d0091da46dadf21ed976d401fbdc1b241b" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;syntax tree&lt;/b&gt;.</source>
          <target state="translated">请参见&lt;b&gt;语法树&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="9942ef8b2e1b0f40e37e415bcc45da2076b094f7" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;working directory&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;工作目录&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="d1c3bf77896ec5e7bf92d411728c3f92460b476f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Archive::Tar-&amp;gt;extract_file&lt;/code&gt; for details.</source>
          <target state="translated">有关详细信息，请参见 &lt;code&gt;Archive::Tar-&amp;gt;extract_file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb6744ea1b330755a03c5caecbc6012f2c2ed506" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Archive::Tar::File&lt;/code&gt; for details about supported properties.</source>
          <target state="translated">有关支持的属性的详细信息，请参见 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0bd1dd87bd8e70e1edbf4cd67e8662d9ca94804" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;auto_help&lt;/code&gt; in section &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt;.</source>
          <target state="translated">请参阅&amp;ldquo; &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;配置Getopt :: Long&amp;rdquo;&lt;/a&gt;部分中的 &lt;code&gt;auto_help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da665e8e9ea4c05dfda727ea78d6fabfcaffdccc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;sv_magicext&lt;/code&gt; (which &lt;code&gt;sv_magic&lt;/code&gt; now calls) for a description of the handling of the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;namlen&lt;/code&gt; arguments.</source>
          <target state="translated">请参阅 &lt;code&gt;sv_magicext&lt;/code&gt; （现在 &lt;code&gt;sv_magic&lt;/code&gt; 对其进行调用）以获取有关 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;namlen&lt;/code&gt; 参数处理的描述。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="40a9fc383ece7f1e65fcc691dcc88ac639270dec" translate="yes" xml:space="preserve">
          <source>See Example 3 below for an example of initialization.</source>
          <target state="translated">关于初始化的例子,请看下面的例3。</target>
        </trans-unit>
        <trans-unit id="a14749ce187bd20bd7da6610b8411db7cdd8a684" translate="yes" xml:space="preserve">
          <source>See ExtUtils::MM_Unix for a documentation of the methods provided there.</source>
          <target state="translated">参见ExtUtils::MM_Unix提供的方法文档。</target>
        </trans-unit>
        <trans-unit id="23675ee7e59903f4fcc6bbbc8585eec695f2738c" translate="yes" xml:space="preserve">
          <source>See ExtUtils::MM_Unix for a documentation of the methods provided there. This package overrides the implementation of these methods, not the semantics.</source>
          <target state="translated">请参阅ExtUtils::MM_Unix来了解那里提供的方法文档。这个包覆盖了这些方法的实现,而不是语义。</target>
        </trans-unit>
        <trans-unit id="6e7f4022de93636a70f2034ffffc634b0c5eaaf5" translate="yes" xml:space="preserve">
          <source>See File::Spec::Unix for a documentation of the methods provided there. This package overrides the implementation of these methods, not the semantics.</source>
          <target state="translated">参见File::Spec::Unix中提供的方法文档。这个包覆盖了这些方法的实现,而不是语义。</target>
        </trans-unit>
        <trans-unit id="040029afc0c435d1070fedbcbc1dbe6449072649" translate="yes" xml:space="preserve">
          <source>See L&amp;lt;:file&amp;gt; and L&amp;lt;:mktemp&amp;gt;, L&amp;lt;:tempfile&amp;gt; for different implementations of temporary file handling.</source>
          <target state="translated">有关临时文件处理的不同实现，请参见L &amp;lt;：file&amp;gt;和L &amp;lt;：mktemp&amp;gt;，L &amp;lt;：tempfile&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="602796314f08763ea9cbfdfcf8d45237b3a6d56c" translate="yes" xml:space="preserve">
          <source>See L&amp;lt;:spec&amp;gt; for information on the choice of temporary directory for a particular operating system.</source>
          <target state="translated">有关为特定操作系统选择临时目录的信息，请参见L &amp;lt;：spec&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="78e55777cc6a58da6b4816d5f2fab7c78a0fce98" translate="yes" xml:space="preserve">
          <source>See L&amp;lt;:tempdir&amp;gt; for an alternative object-oriented wrapper for the C</source>
          <target state="translated">有关C的另一种面向对象包装，请参见L &amp;lt;：tempdir&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="3616670bb678e824ef72b8f884f7cd63c250a2a2" translate="yes" xml:space="preserve">
          <source>See Locale::Codes for full author history.</source>
          <target state="translated">参见Locale::Codes了解完整的作者历史。</target>
        </trans-unit>
        <trans-unit id="2a6abbf3a02e8d7e6adbbf788540ae8a9bb2c9c3" translate="yes" xml:space="preserve">
          <source>See Math::BigInt's bfround() function for details.</source>
          <target state="translated">详见Math::BigInt的bfround()函数。</target>
        </trans-unit>
        <trans-unit id="2d1d8acbdeab97d7d379916d75cd769f1b13fed7" translate="yes" xml:space="preserve">
          <source>See Memoize::Expire, which is a plug-in module that adds expiration functionality to Memoize. If you don't like the kinds of policies that Memoize::Expire implements, it is easy to write your own plug-in module to implement whatever policy you desire. Memoize comes with several examples. An expiration manager that implements a LRU policy is available on CPAN as Memoize::ExpireLRU.</source>
          <target state="translated">请看Memoize::Expire,它是一个插件模块,为Memoize增加了过期功能。如果你不喜欢Memoize::Expire实现的策略,你可以很容易地编写自己的插件模块来实现任何你想要的策略。Memoize提供了几个例子。在CPAN上有一个实现LRU策略的过期管理器,名为Memoize::ExpireLRU。</target>
        </trans-unit>
        <trans-unit id="ea80271894db188740b7c5f477686f8cf867460a" translate="yes" xml:space="preserve">
          <source>See ODBM_File/Makefile.PL for an example, where an array is needed. If you specify a scalar as in</source>
          <target state="translated">请参阅 ODBM_File/Makefile.PL 来了解一个需要数组的例子。如果您指定了一个标量,如</target>
        </trans-unit>
        <trans-unit id="284a29f8c15b61f241963444d7589f9d02c61896" translate="yes" xml:space="preserve">
          <source>See Server error.</source>
          <target state="translated">见服务器错误。</target>
        </trans-unit>
        <trans-unit id="432cb254f15763b7805bdd86025f5f8cf43aec8f" translate="yes" xml:space="preserve">
          <source>See above.</source>
          <target state="translated">见上文。</target>
        </trans-unit>
        <trans-unit id="2de5674c9b950736ceb1f267b92b6764d97d28bd" translate="yes" xml:space="preserve">
          <source>See above. This should be set using the &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; quoting operator. The default is set to &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr|^([-+@\w./]+)$|&lt;/a&gt;&lt;/code&gt;. Note that the parentheses are vital.</source>
          <target state="translated">往上看。这应该使用 &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; 引用运算符进行设置。默认设置为 &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr|^([-+@\w./]+)$|&lt;/a&gt;&lt;/code&gt; 。请注意，括号至关重要。</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="ab8a382e25be0097477fc99486e44a4eaa18498e" translate="yes" xml:space="preserve">
          <source>See also &quot;How can I make my Perl program take less memory?&quot;</source>
          <target state="translated">另请参见 &quot;如何让我的Perl程序占用更少的内存?&quot;</target>
        </trans-unit>
        <trans-unit id="b03b87df29ccf9a96c0a6c18592a5afe15402ced" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#%5cb%7b%7d%2c-%5cb%2c-%5cB%7b%7d%2c-%5cB&quot;&gt;\b{gcb} &lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#%5cb%7b%7d%2c-%5cb%2c-%5cB%7b%7d%2c-%5cB&quot;&gt;\ b {gcb}&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f192185570d73f9e4777f3d0179ed00539012a0a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#(%3fPARNO)-(%3f-PARNO)-(%3f%2bPARNO)-(%3fR)-(%3f0)&quot;&gt;(?PARNO)&lt;/a&gt; for a different, more efficient way to accomplish the same task.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#(%3fPARNO)-(%3f-PARNO)-(%3f%2bPARNO)-(%3fR)-(%3f0)&quot;&gt;（？PARNO）&lt;/a&gt;，以获取另一种更有效的方法来完成同一任务。</target>
        </trans-unit>
        <trans-unit id="3589a77158a5b9f87ba699d99d29f15928e730c7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;Blocks versus Scripts&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;块与脚本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b15ef7343c7f7652cb677f6cccc299824145c621" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Character-classification&quot;&gt;Character classification&lt;/a&gt;, and &lt;a href=&quot;#Character-case-changing&quot;&gt;Character case changing&lt;/a&gt;. Various functions outside this section also work specially with Unicode. Search for the string &quot;utf8&quot; in this document.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#Character-classification&quot;&gt;字符分类&lt;/a&gt;和&lt;a href=&quot;#Character-case-changing&quot;&gt;字符大小写更改&lt;/a&gt;。本节之外的各种功能也特别适用于Unicode。在此文档中搜索字符串&amp;ldquo; utf8&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="858e5e57ae8e49908c96c28676e440fe9ce3fd13" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators&lt;/a&gt; toward the end of this section, as well as &lt;a href=&quot;#I%2fO-Operators&quot;&gt;I/O Operators&lt;/a&gt;.</source>
          <target state="translated">另请参阅本节末尾的&lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;Quote和类似Quote的运算符&lt;/a&gt;，以及&lt;a href=&quot;#I%2fO-Operators&quot;&gt;I / O运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94f252cf62959c5890d7b67aa4440dd5b5e285d2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward)&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;术语和列表运算符（向左）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="caba875660075eb3804e76fe4c78379b91129b4a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt; above.</source>
          <target state="translated">另请参见上面&lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;的Unicode错误&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd6b64b3f2c71c02bbc70fd00e0624e4797d9ee9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Thread-Safety-of-System-Libraries&quot;&gt;Thread-Safety of System Libraries&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#Thread-Safety-of-System-Libraries&quot;&gt;系统库的线程安全&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2d9a4c0bef03df823525ad84d4e474cab9c19ee" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#blog()&quot;&gt;blog()&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#blog()&quot;&gt;blog（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8d8a6f47fddbd2872f4758e889e1633aab774d1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;, &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;, &lt;a href=&quot;#lround&quot;&gt;lround&lt;/a&gt;, &lt;a href=&quot;#modf&quot;&gt;modf&lt;/a&gt;, and &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;，&lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;，&lt;a href=&quot;#lround&quot;&gt;lround&lt;/a&gt;，&lt;a href=&quot;#modf&quot;&gt;modf&lt;/a&gt;和&lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f693a972498a768d082bf320dd3eb9faf82a6061" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;, &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;, &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;，&lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;，&lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb862acd06c511fb848997aab8e77fbcc22f96bc" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;, &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;, and &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;，&lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;和&lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a76930ab35a96cb3b3d7d6e8056b8db22e34985" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#chomp&quot;&gt;chomp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b055a1e11c207e13b94aaaa8cf42ef6651307f63" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#continue&quot;&gt;continue&lt;/a&gt; for an illustration of how &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; work.</source>
          <target state="translated">另请参见&lt;a href=&quot;#continue&quot;&gt;继续&lt;/a&gt;，以了解 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 的工作方式。</target>
        </trans-unit>
        <trans-unit id="664f70b05592b396f0b7230a57571ee6981c3850" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#exp&quot;&gt;exp&lt;/a&gt; for the inverse operation.</source>
          <target state="translated">另请参见&lt;a href=&quot;#exp&quot;&gt;exp&lt;/a&gt;的逆运算。</target>
        </trans-unit>
        <trans-unit id="e92bbb120353deeb65851ba7bc977367be7e23d3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#expm1&quot;&gt;expm1&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#expm1&quot;&gt;expm1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e20907c7f1f3f18a1cd9dfba23f841b9521b3a02" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#frexp&quot;&gt;frexp&lt;/a&gt; and &lt;a href=&quot;#ldexp&quot;&gt;ldexp&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#frexp&quot;&gt;frexp&lt;/a&gt;和&lt;a href=&quot;#ldexp&quot;&gt;ldexp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6334ba605210bd171886129dc560240dcd264e3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#hv_clear&quot;&gt;hv_clear&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#hv_clear&quot;&gt;hv_clear&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5bb3270aa61a8e9a219e8fca2933e276729a3e5c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ilogb&quot;&gt;ilogb&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#ilogb&quot;&gt;ilogb&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2038a390f40558644402d2dbfb075919fc5f4845" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt;(), &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;(), and &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;().</source>
          <target state="translated">另请参见&lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt;（），&lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;（）和&lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="c075f84322d3bd478ca12430aff16457c9603d4a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;(), &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;(), and &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;().</source>
          <target state="translated">另请参见&lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;（），&lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;（）和&lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="24661fc71daa651c7fde8e4cf4ce2981eec9de00" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;() and &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;().</source>
          <target state="translated">另请参见&lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;（）和&lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5cbaff39e6d415017199632a470e616f1e19f95d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;() and &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;().</source>
          <target state="translated">另请参见&lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;（）和&lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="aabcb07e7cfaf293af50a5d1698777df63583972" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt;和&lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21ff70d398c113b1b482cbd7e58305182ff055a7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt;, &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt;，&lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;和&lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da3a984fbdfda9a3758e450455f51828721a28fe" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;, &lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;，&lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt;和&lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3660bcf22e0b3e27c20131126f3d0f9b9f0117e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb0a3e67b2320719a59317a8928b603e22a5e53f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#lgamma&quot;&gt;lgamma&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#lgamma&quot;&gt;lgamma&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="705ca1f6cc7a7ee05d9dd10cfeea8147d99b89ab" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#log1p&quot;&gt;log1p&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#log1p&quot;&gt;log1p&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0693f6ef561145706cf85f2965bdaf8ea0de2bf8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#logb&quot;&gt;logb&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#logb&quot;&gt;logb&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03a0072e3404bbfe332c09386a0be28693d5e3ba" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#make_grammar&quot;&gt;make_grammar&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#make_grammar&quot;&gt;make_grammar&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="868b7ec0221306550a570fdbaba5284f790eaad1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#make_result&quot;&gt;make_result&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#make_result&quot;&gt;make_result&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8c182711f3cc11ba7c9987efcb02d0c1bd0d91a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt; for a list composed of the results of the BLOCK or EXPR.</source>
          <target state="translated">另请参见&lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt;以获取由BLOCK或EXPR结果组成的列表。</target>
        </trans-unit>
        <trans-unit id="2181084db3035408ebef2c2fd15e9ebf15a821b4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#nan&quot;&gt;nan&lt;/a&gt;, &lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#nan&quot;&gt;nan&lt;/a&gt;，&lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt;和&lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0970e55eff62d0613ebe03421267140e37ea9590" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#quadmath_format_needed&quot;&gt;quadmath_format_needed&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#quadmath_format_needed&quot;&gt;quadmath_format_needed&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94885f895c488377fc0b3782a6d2a63d8c4108e6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#remquo&quot;&gt;remquo&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#remquo&quot;&gt;remquo&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a263e61a865bd6bffc4dc3c7a6fc2aa207c34712" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eef0472f324b1b1a285224044fbfa565222f82b1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#signbit&quot;&gt;signbit&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#signbit&quot;&gt;signbit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18edb8be670e43eac3e6249c3e9b7347fbd22037" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#sv_uni_display&quot;&gt;sv_uni_display&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#sv_uni_display&quot;&gt;sv_uni_display&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88e872ff667d7d8dfeeb1ebbffe71abe41dea5af" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#tgamma&quot;&gt;tgamma&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#tgamma&quot;&gt;tgamma&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9dc5b5b29119e9974a1e2c360e8b1ca50d736fc7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#undef&quot;&gt;undef&lt;/a&gt;, &lt;a href=&quot;#exists&quot;&gt;exists&lt;/a&gt;, &lt;a href=&quot;#ref&quot;&gt;ref&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#undef&quot;&gt;undef&lt;/a&gt;，&lt;a href=&quot;#exists&quot;&gt;存在&lt;/a&gt;，&lt;a href=&quot;#ref&quot;&gt;参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dac47d91c6d79ac62a9f6e623a74c1ef65cc5a25" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; for a more general description of the pros and cons of the various dbm approaches, as well as &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; for a particularly rich implementation.</source>
          <target state="translated">有关各种dbm方法的优缺点的更一般描述，另请参见&lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt;；有关特别丰富的实现，请参见&lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="312ddfc0e7683843cb0df77946503b368ac080f4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; for other flock() examples.</source>
          <target state="translated">另请参见&lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt;以获取其他flock（）示例。</target>
        </trans-unit>
        <trans-unit id="e86acc20fd91f9ea01f8172e1c0f9a68f1048788" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b508429b9263acf9e838c10a4f1fe24132296566" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; for a more general description of the pros and cons of the various dbm approaches, as well as &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; for a particularly rich implementation.</source>
          <target state="translated">有关各种dbm方法的优缺点的更一般描述，另请参见&lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt;；有关特别丰富的实现，请参见&lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="feb5ce40c9730fd7587808e9f860ec02bd3be1ad" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;attributes&quot;&gt;attribute.pm&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3922359b5e2cc94ef6004dee14189087b9538adb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;chomp&quot;&gt;chomp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c51b1811fb584bf70eaf14342f6a310ceb94f036" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt; for an illustration of how &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; work.</source>
          <target state="translated">另请参见&lt;a href=&quot;continue&quot;&gt;继续&lt;/a&gt;，以了解 &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 的工作方式。</target>
        </trans-unit>
        <trans-unit id="1d9f2093b0fbde7d0467eedd84ba92736ecc192e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; for other flock() examples.</source>
          <target state="translated">另请参见&lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;以获取其他flock（）示例。</target>
        </trans-unit>
        <trans-unit id="72eab4295e6e160fa298c78fb9aff9f0809dd59e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;Handling Malformed Data in Encode&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;在编码中处理格式错误的数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e637f559901257cbf0080e5c7378783b591aaaa" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;exp&quot;&gt;exp&lt;/a&gt; for the inverse operation.</source>
          <target state="translated">另请参见&lt;a href=&quot;exp&quot;&gt;exp&lt;/a&gt;的逆运算。</target>
        </trans-unit>
        <trans-unit id="32afb89976b8082427e91c7ba7b68f177d9957da" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;fatal#DIAGNOSTICS&quot;&gt;DIAGNOSTICS in Fatal&lt;/a&gt;.</source>
          <target state="translated">另请参阅《&lt;a href=&quot;fatal#DIAGNOSTICS&quot;&gt;致命》中的&amp;ldquo;诊断&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61443df97502e07ec91115ca890b81aba6194b6f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbb958f9cb413fdbaacbf4efae0496e3ec667177" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/pipe&quot;&gt;管道&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab6d2210c32c0fa16336844238db7c8e0eb5830d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt; and its &lt;code&gt;O_CREAT&lt;/code&gt; flag.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;及其 &lt;code&gt;O_CREAT&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="a7e197eb6c34bd082986ddcd3f81baad30986106" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b2d92b440215a9afbc0f46be4ef2ecc3855f446" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cadfdea7910f878665cf246af7e50bb1ef44226" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f28ff989c5f5390057e474ea8b343abfa0401399" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&quot;&gt;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&quot;&gt;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82106c45b9e3ca378d3051a24f5f6c2b255decb4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Dump::Streamer&quot;&gt;Data::Dump::Streamer&lt;/a&gt;, which combines B::Deparse and &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; to serialize closures properly.</source>
          <target state="translated">另请参见&lt;a href=&quot;http://search.cpan.org/perldoc/Data::Dump::Streamer&quot;&gt;Data :: Dump :: Streamer&lt;/a&gt;，它结合了B :: Deparse和&lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt;来正确地序列化闭包。</target>
        </trans-unit>
        <trans-unit id="38b013a98a32f2ee2957ec73990271963411af4d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&quot;&gt;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&lt;/a&gt; .</source>
          <target state="translated">另请参见&lt;a href=&quot;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&quot;&gt;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1aca38a03e337aedcb772fb6525dd0b1d2f3fdf4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; and &lt;code&gt;ABDAY_1&lt;/code&gt; ..&lt;code&gt;ABDAY_7&lt;/code&gt; , &lt;code&gt;DAY_1&lt;/code&gt; ..&lt;code&gt;DAY_7&lt;/code&gt; , &lt;code&gt;ABMON_1&lt;/code&gt; ..&lt;code&gt;ABMON_12&lt;/code&gt; , and &lt;code&gt;ABMON_1&lt;/code&gt; ..&lt;code&gt;ABMON_12&lt;/code&gt; .</source>
          <target state="translated">另请参见&lt;a href=&quot;i18n/langinfo&quot;&gt;国际化:: Langinfo&lt;/a&gt;和 &lt;code&gt;ABDAY_1&lt;/code&gt; .. &lt;code&gt;ABDAY_7&lt;/code&gt; ， &lt;code&gt;DAY_1&lt;/code&gt; .. &lt;code&gt;DAY_7&lt;/code&gt; ， &lt;code&gt;ABMON_1&lt;/code&gt; .. &lt;code&gt;ABMON_12&lt;/code&gt; 和 &lt;code&gt;ABMON_1&lt;/code&gt; .. &lt;code&gt;ABMON_12&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da50321fcfa4a145f69966ce9e58c833dd8a31ed" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; and &lt;code&gt;CRNCYSTR&lt;/code&gt; .</source>
          <target state="translated">另请参见&lt;a href=&quot;i18n/langinfo&quot;&gt;I18N :: Langinfo&lt;/a&gt;和 &lt;code&gt;CRNCYSTR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b829e89e45a680e36a1fea3315c1376f162c2031" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; and &lt;code&gt;RADIXCHAR&lt;/code&gt; .</source>
          <target state="translated">另请参见&lt;a href=&quot;i18n/langinfo&quot;&gt;I18N :: Langinfo&lt;/a&gt;和 &lt;code&gt;RADIXCHAR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dcec256f7af2ce9577bceedca06f5f648fc32ea" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; for a list composed of the results of the BLOCK or EXPR.</source>
          <target state="translated">另请参见&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;以获取由BLOCK或EXPR结果组成的列表。</target>
        </trans-unit>
        <trans-unit id="ba5e022d3743e074d09494fd4057f576c9532ddc" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;, &lt;a href=&quot;perldebtut&quot;&gt;perldebtut&lt;/a&gt;</source>
          <target state="translated">另请参见&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;和&lt;a href=&quot;perldebtut&quot;&gt;perldebtut&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3900b49761f7cfc17e9f59b2833dbd67b3d9bdb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; and &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; for how to use references to create complex data structures, and &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; and &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for how to use them to create objects.</source>
          <target state="translated">另请参阅&lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;和&lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;了解如何使用引用创建复杂的数据结构，以及&lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;和&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;了解如何使用引用创建对象。</target>
        </trans-unit>
        <trans-unit id="4a939c6bfd06b3f233cb5194d56a9df0427e718a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;</source>
          <target state="translated">另见&lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="038a0c9cb52f615684f065959a94bfe216d7fc71" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt; and &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib&lt;/a&gt;和&lt;a href=&quot;perldiag&quot;&gt;perldiag中的&lt;/a&gt;实用模块。</target>
        </trans-unit>
        <trans-unit id="54a2e97103596d963fe29f14a4036177ce51b589" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;, a tutorial that covers class creation, and &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;（涉及类创建的教程）和&lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09b8181c3f9ece672518ba89da5dd2ed05d947f9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f84300de0c00b2cea1c19289305e37ca7e3cef56" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlport#Newlines&quot;&gt;Newlines in perlport&lt;/a&gt;. Also see &lt;a href=&quot;#%24.&quot;&gt;$.&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;perlport#Newlines&quot;&gt;perlport中的换行符&lt;/a&gt;。另请参阅&lt;a href=&quot;#%24.&quot;&gt;$。&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="049bfdb2960ee0bd10a6891d989bd1f10ba1feda" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84c3eedc28e0411704fb9ad3cbda7f1a7281102c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10f03e3c6d8716cd8d154f5d4f40c95fd2e87f9f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;</source>
          <target state="translated">另见&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0ef6aadcbffe5c23ec9a5346fa2be14f2cf695d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;</source>
          <target state="translated">另见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c300a2208a59c3e92860c0fe316027e85641a6bd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlxs#Thread-aware-system-interfaces&quot;&gt;Thread-aware system interfaces in perlxs&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;perlxs#Thread-aware-system-interfaces&quot;&gt;perlxs中的线程感知系统接口&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f250914d937ad2e085cf64d128cbfa1691f6586" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;</source>
          <target state="translated">又见&lt;a href=&quot;socket&quot;&gt;插座&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc26e7328351b379ed5d17eb2dfaaeffbbb9413b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;, &lt;a href=&quot;exists&quot;&gt;exists&lt;/a&gt;, &lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;，&lt;a href=&quot;exists&quot;&gt;存在&lt;/a&gt;，&lt;a href=&quot;ref&quot;&gt;参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d3fc828754e6528837615c426ddc7bef3997af8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d31731dd5d45a94f24c01a2e4721ffa55ed2062" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;$Module::Load::Conditional::DEPRECATED&lt;/code&gt; , which affects the outcome of this value.</source>
          <target state="translated">另请参见 &lt;code&gt;$Module::Load::Conditional::DEPRECATED&lt;/code&gt; ，这会影响此值的结果。</target>
        </trans-unit>
        <trans-unit id="cd6010ba4ac41e571c685c864d5dfddc74518ef8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;$]&lt;/code&gt; for a decimal representation of the Perl version.</source>
          <target state="translated">有关Perl版本的十进制表示，另请参见 &lt;code&gt;$]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f3cadc97a35414c53b5b4ced055817f6f902bce" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; and possessive quantifiers for other ways to control backtracking. In some cases, the use of &lt;code&gt;(*PRUNE)&lt;/code&gt; can be replaced with a &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; with no functional difference; however, &lt;code&gt;(*PRUNE)&lt;/code&gt; can be used to handle cases that cannot be expressed using a &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; alone.</source>
          <target state="translated">另请参阅 &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; 和所有格修饰符以了解其他控制回溯的方法。在某些情况下，可以将 &lt;code&gt;(*PRUNE)&lt;/code&gt; 的使用替换为 &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; ，而没有功能上的区别；但是， &lt;code&gt;(*PRUNE)&lt;/code&gt; 可用于处理不能仅使用 &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; 表示的情况。</target>
        </trans-unit>
        <trans-unit id="d9225ba080018d7c5c1a1d008a8d53f734ca8a25" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;. If EXPR is omitted, exits with &lt;code&gt;0&lt;/code&gt; status. The only universally recognized values for EXPR are &lt;code&gt;0&lt;/code&gt; for success and &lt;code&gt;1&lt;/code&gt; for error; other values are subject to interpretation depending on the environment in which the Perl program is running. For example, exiting 69 (EX_UNAVAILABLE) from a</source>
          <target state="translated">另见 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 。如果省略EXPR，则以 &lt;code&gt;0&lt;/code&gt; 状态退出。唯一公认的EXPR &lt;code&gt;0&lt;/code&gt; 表示成功， &lt;code&gt;1&lt;/code&gt; 表示错误。其他值取决于Perl程序运行的环境。例如，从一个出口退出69（EX_UNAVAILABLE）</target>
        </trans-unit>
        <trans-unit id="3cea1c25b3337bcf63df8e46046184cbf81519a6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1359ca66e378f741dfbd245fa252e05e3072e4f4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;. If EXPR is omitted, exits with &lt;code&gt;0&lt;/code&gt; status. The only universally recognized values for EXPR are &lt;code&gt;0&lt;/code&gt; for success and &lt;code&gt;1&lt;/code&gt; for error; other values are subject to interpretation depending on the environment in which the Perl program is running. For example, exiting 69 (EX_UNAVAILABLE) from a</source>
          <target state="translated">另见 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 。如果省略EXPR，则以 &lt;code&gt;0&lt;/code&gt; 状态退出。唯一公认的EXPR &lt;code&gt;0&lt;/code&gt; 表示成功， &lt;code&gt;1&lt;/code&gt; 表示错误。其他值取决于Perl程序运行的环境。例如，从一个出口退出69（EX_UNAVAILABLE）</target>
        </trans-unit>
        <trans-unit id="2f24bea2ac99cea2d4c8a36087486d58737a2abb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fd8aa3be1dbf4a33c6a1909a8b78b0c57536b93" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 键和 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a744e171fb1158e9d1732277124eef8eb6736bf9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d4f0c2bfcaf936a86dc92ecec864ad87bddc74a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; do the same thing to the left end of an array that &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; do to the right end.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; 在数组的左端执行相同的操作，而 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 在右端执行。</target>
        </trans-unit>
        <trans-unit id="caf8ab2e34d97a666cef57f465212286aca5ce76" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 键和 &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc3ccde61e06a276638618c5a81572f42f73aeac" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3effdc9e9719c17049bd0a15fb9f730b482944c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; do the same thing to the left end of an array that &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; do to the right end.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; 在数组的左端执行相同的操作，而 &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 在右端执行。</target>
        </trans-unit>
        <trans-unit id="42bb17c4fce277f1b63b388f77acdc054e99f8a2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Apache::DProf&lt;/code&gt; which hooks &lt;code&gt;Devel::DProf&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">另请参阅 &lt;code&gt;Apache::DProf&lt;/code&gt; ，它将 &lt;code&gt;Devel::DProf&lt;/code&gt; 挂钩到 &lt;code&gt;mod_perl&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="30c9df84a4f8d5bb6552f0fb2e215aa7a50280fb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Apache::SmallProf&lt;/code&gt; which hooks &lt;code&gt;Devel::SmallProf&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">另请参见将 &lt;code&gt;Devel::SmallProf&lt;/code&gt; 到 &lt;code&gt;mod_perl&lt;/code&gt; 中的 &lt;code&gt;Apache::SmallProf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e33fce8ff6adc655e93cc1158e62614ab91d8bb7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Devel::Apache::Profiler&lt;/code&gt; which hooks &lt;code&gt;Devel::Profiler&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">另请参阅 &lt;code&gt;Devel::Apache::Profiler&lt;/code&gt; ，它将 &lt;code&gt;Devel::Profiler&lt;/code&gt; 挂钩到 &lt;code&gt;mod_perl&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="84d36c0ff87030ed272d248a2736c8a3f6cbf3ec" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Devel::NYTProf::Apache&lt;/code&gt; which hooks &lt;code&gt;Devel::NYTProf&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">另请参阅 &lt;code&gt;Devel::NYTProf::Apache&lt;/code&gt; ，它将 &lt;code&gt;Devel::NYTProf&lt;/code&gt; 挂钩到 &lt;code&gt;mod_perl&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="86286084c63771dd6bdd5d93863fb70cc79b36c2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;PL_sv_yes&lt;/code&gt; and &lt;code&gt;PL_sv_no&lt;/code&gt; .</source>
          <target state="translated">另请参见 &lt;code&gt;PL_sv_yes&lt;/code&gt; 和 &lt;code&gt;PL_sv_no&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09945a80e8e04b2b27fe5027ac1bd4e5e6a9a0b2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;blog()&lt;/code&gt; .</source>
          <target state="translated">另请参阅 &lt;code&gt;blog()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ed855d062748c44f50e0c12d79b5b208e551776" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;identical&lt;/code&gt; .</source>
          <target state="translated">另请参见 &lt;code&gt;identical&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86a6e1ff669076c3ac3f923bcd4119157edfdd71" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;permute&lt;/code&gt; , which is the opposite of &lt;code&gt;require_order&lt;/code&gt; .</source>
          <target state="translated">另请参见 &lt;code&gt;permute&lt;/code&gt; ，这与 &lt;code&gt;require_order&lt;/code&gt; 相反。</target>
        </trans-unit>
        <trans-unit id="bdd58dd0c357fd171783417cceab2dc185356f3d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;sv_magicext&lt;/code&gt; in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for a more flexible way to add magic to an SV.</source>
          <target state="translated">另请参阅 &lt;code&gt;sv_magicext&lt;/code&gt; 中的&lt;a href=&quot;perlapi&quot;&gt;sv_magicext&lt;/a&gt;，以了解向SV添加魔术的更灵活的方法。</target>
        </trans-unit>
        <trans-unit id="1bafaa0d36c187ba60d6845649051a45f6ee6b67" translate="yes" xml:space="preserve">
          <source>See also Perl_sv_add_backref(), Perl_sv_del_backref(), Perl_sv_kill_backrefs()</source>
          <target state="translated">参见 Perl_sv_add_backref(),Perl_sv_del_backref(),Perl_sv_kill_backrefs()</target>
        </trans-unit>
        <trans-unit id="b8ee0d43bbd6314b08a48b2c13e478e9ccbe9925" translate="yes" xml:space="preserve">
          <source>See also bucket_info() and bucket_array().</source>
          <target state="translated">参见 bucket_info()和 bucket_array()。</target>
        </trans-unit>
        <trans-unit id="8cd9527fbd94acf64a5c84812edc3701f61dd923" translate="yes" xml:space="preserve">
          <source>See also bucket_stats() and bucket_array().</source>
          <target state="translated">参见 bucket_stats()和 bucket_array()。</target>
        </trans-unit>
        <trans-unit id="bd153b57031966245c6990a8d9df7c3a12fdc1dc" translate="yes" xml:space="preserve">
          <source>See also discussion of list operators in &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward)&lt;/a&gt;.</source>
          <target state="translated">另请参阅&amp;ldquo; &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;术语和列表运算符（向左）&amp;rdquo;中&lt;/a&gt;有关列表运算符的讨论。</target>
        </trans-unit>
        <trans-unit id="303e32a7e050a24a88278e7a410b579432fbbbdf" translate="yes" xml:space="preserve">
          <source>See also exit(), warn(), and the Carp module.</source>
          <target state="translated">参见exit()、war()和Carp模块。</target>
        </trans-unit>
        <trans-unit id="34b1d500b949544057d7d0d41fbe556d19d872ff" translate="yes" xml:space="preserve">
          <source>See also getaddrinfo() for a more powerful and flexible function to look up socket addresses given hostnames or textual addresses.</source>
          <target state="translated">参见getaddrinfo(),它是一个更强大、更灵活的函数,用于查找给定主机名或文本地址的套接字地址。</target>
        </trans-unit>
        <trans-unit id="51611c0d549c4f13d08aadfaa7eb73986d77f3f8" translate="yes" xml:space="preserve">
          <source>See also getnameinfo() for a more powerful and flexible function to turn socket addresses into human-readable textual representations.</source>
          <target state="translated">参见getnameinfo(),它是一个更强大、更灵活的函数,可以将套接字地址变成人类可读的文本表示。</target>
        </trans-unit>
        <trans-unit id="3c9541f70af426eada4963661a5e76927d14033d" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; section.</source>
          <target state="translated">另请参见&lt;a href=&quot;#EXAMPLES&quot;&gt;示例&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="950888a5c439afc133bbbbcf76c9f289c65a4df0" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS&lt;/a&gt; below, which can be exported individually.</source>
          <target state="translated">另请参见下面的&lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX标志&lt;/a&gt;，可以单独导出。</target>
        </trans-unit>
        <trans-unit id="b2bbb3cbeb9546d32423b56f3b6e8cad08e47d09" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://search.cpan.org/perldoc/DBIx::Profile&quot;&gt;DBIx::Profile&lt;/a&gt; which will profile database queries running under the &lt;code&gt;DBIx::*&lt;/code&gt; namespace.</source>
          <target state="translated">另请参见&lt;a href=&quot;http://search.cpan.org/perldoc/DBIx::Profile&quot;&gt;DBIx :: Profile&lt;/a&gt;，它将分析在 &lt;code&gt;DBIx::*&lt;/code&gt; 名称空间下运行的数据库查询。</target>
        </trans-unit>
        <trans-unit id="1361dd7d2c2bd52b263e3b68649b6fc568d06fee" translate="yes" xml:space="preserve">
          <source>See also the OS390::Stdio module on CPAN.</source>
          <target state="translated">也请参见CPAN上的OS390::Stdio模块。</target>
        </trans-unit>
        <trans-unit id="a0a5320be18b6d51495d235fe86650b56ae37fee" translate="yes" xml:space="preserve">
          <source>See also the POSIX module's &lt;code&gt;pause&lt;/code&gt; function.</source>
          <target state="translated">另请参见POSIX模块的 &lt;code&gt;pause&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="bcf22177096541c608e12df64316f788e1b9f418" translate="yes" xml:space="preserve">
          <source>See also the documentation for overload.pm regarding &lt;code&gt;=&lt;/code&gt; .</source>
          <target state="translated">有关 &lt;code&gt;=&lt;/code&gt; 的信息，另请参见overload.pm的文档。</target>
        </trans-unit>
        <trans-unit id="24aad35d071d1f6e5724bdc66e64add6114641cb" translate="yes" xml:space="preserve">
          <source>See also the documentation for the Test and Test::Harness modules, for more environment variables that affect testing.</source>
          <target state="translated">也请参见 Test 和 Test::Harness 模块的文档,了解更多影响测试的环境变量。</target>
        </trans-unit>
        <trans-unit id="eb3ef9318d2ff536c37c7f919b9b535ff3c0da0d" translate="yes" xml:space="preserve">
          <source>See also the documentation of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; for a convenient way to fail if the running Perl interpreter is too old.</source>
          <target state="translated">如果正在运行的Perl解释器太旧，请参阅 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 的文档，并 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; 以方便的方式使其失败。</target>
        </trans-unit>
        <trans-unit id="6a7acbe251726a5c6c893ef946218c6a477bfbb6" translate="yes" xml:space="preserve">
          <source>See also the effects of the &lt;code&gt;-C&lt;/code&gt; switch and its cousin, the &lt;code&gt;PERL_UNICODE&lt;/code&gt; environment variable, in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;PERL_UNICODE&lt;/code&gt; 中的 &lt;code&gt;-C&lt;/code&gt; 开关及其表亲PERL_UNICODE环境变量的&lt;a href=&quot;perlrun&quot;&gt;效果&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12dd0ec3281d19f4664ce0084bbb14814b4a8af0" translate="yes" xml:space="preserve">
          <source>See also the question later in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; on sorting hashes.</source>
          <target state="translated">另请参见稍后在&lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4中&lt;/a&gt;有关排序散列的问题。</target>
        </trans-unit>
        <trans-unit id="c0dbd0cacf774e5e56ef712e004e689ecf38404f" translate="yes" xml:space="preserve">
          <source>See also the script &lt;code&gt;pfind&lt;/code&gt; on CPAN for a nice application of this module.</source>
          <target state="translated">另请参阅CPAN上的脚本 &lt;code&gt;pfind&lt;/code&gt; 以获取该模块的良好应用。</target>
        </trans-unit>
        <trans-unit id="34e3cbd59762152cba621f3c14b64923435705a7" translate="yes" xml:space="preserve">
          <source>See also the section about &lt;a href=&quot;#Infinity-and-Not-a-Number&quot;&gt;Infinity and Not a Number&lt;/a&gt; for problems in comparing NaNs.</source>
          <target state="translated">有关比较NaN的问题，另请参阅关于&lt;a href=&quot;#Infinity-and-Not-a-Number&quot;&gt;无穷大而不是数字&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">另见:</target>
        </trans-unit>
        <trans-unit id="8fb61b8f7581126c42cfbb281a9efdf2f8c172ab" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Rounding&quot;&gt;Rounding&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;#Rounding&quot;&gt;舍入&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fffb7d4e9c0633d7fa04d7123f0865b0d619df2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;encode/encoding&quot;&gt;Encode::Encoding&lt;/a&gt;</source>
          <target state="translated">另请参阅：&lt;a href=&quot;encode/encoding&quot;&gt;Encode :: Encoding&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8e3d5311d7d86ca2b21b6b0c86aeb3b642adadb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;Bitwise String Operators in perlop&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;perlop中的按位字符串运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f33bd2fb971b9e485ec30974e79d41960f0f0eaa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;Extended Bracketed Character Classes in perlrecharclass&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;perlrecharclass中的扩展方括号字符类&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff63f1036be059a709c795a2c9e17166be1b529c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Assigning to References in perlref&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;在perlref中分配给引用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="294c7b81d556a38e8f63c019326342cbea7a1f46" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的常量函数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="399b88ea69898133db71e6d96568e2fa890a8253" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;Lexical Subroutines in perlsub&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;perlsub中的词法子例程&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04083ff70a9e05cd8adfcd185f1ca1596107ee24" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&quot;extract_quotelike&quot;&lt;/code&gt; and &lt;code&gt;&quot;extract_codeblock&quot;&lt;/code&gt; .</source>
          <target state="translated">另请参见： &lt;code&gt;&quot;extract_quotelike&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;extract_codeblock&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d54aa0d2b835810f29436bc75eb77b3333657eae" translate="yes" xml:space="preserve">
          <source>See attribute &lt;code&gt;depend&lt;/code&gt; below.</source>
          <target state="translated">请参阅下面的属性 &lt;code&gt;depend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e209530cb731d2c6ed80fd9e56ee0996a9dfdecf" translate="yes" xml:space="preserve">
          <source>See below and hints/qnx.sh for more information.</source>
          <target state="translated">更多信息请参见下面的hints/qnx.sh。</target>
        </trans-unit>
        <trans-unit id="5e94ffa964eb8148a5b7b44e3218f55c7b6a5f7a" translate="yes" xml:space="preserve">
          <source>See below for more description of the switches.</source>
          <target state="translated">关于开关的更多描述请看下文。</target>
        </trans-unit>
        <trans-unit id="a8c5ac01636644c6c2c7a306c349b1544c648097" translate="yes" xml:space="preserve">
          <source>See comment on fork in &lt;a href=&quot;#Miscellaneous&quot;&gt;Miscellaneous&lt;/a&gt; below.</source>
          <target state="translated">查看评论叉在&lt;a href=&quot;#Miscellaneous&quot;&gt;杂项&lt;/a&gt;下面。</target>
        </trans-unit>
        <trans-unit id="b09836a76dfa7e890b82a509295f12ae70b14260" translate="yes" xml:space="preserve">
          <source>See cop.h: je_mustcatch, when set at any runlevel to TRUE, means eval ops must establish a local jmpenv to handle exception traps.</source>
          <target state="translated">参见 cop.h:je_mustcatch,当在任何运行级别设置为 TRUE 时,意味着 eval ops 必须建立一个本地 jmpenv 来处理异常陷阱。</target>
        </trans-unit>
        <trans-unit id="2b761641535ca282b73de8042196ecbd1e908438" translate="yes" xml:space="preserve">
          <source>See documentation of &lt;code&gt;subtest&lt;/code&gt; in Test::More.</source>
          <target state="translated">请参阅Test :: More中的 &lt;code&gt;subtest&lt;/code&gt; 测试文档。</target>
        </trans-unit>
        <trans-unit id="8e5b968746ee31a1cfd2e25034fe29fe133c880b" translate="yes" xml:space="preserve">
          <source>See either &lt;b&gt;instance variable&lt;/b&gt; or &lt;b&gt;character property&lt;/b&gt;.</source>
          <target state="translated">请参见&lt;b&gt;实例变量&lt;/b&gt;或&lt;b&gt;角色属性&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="c93485a9bf7ab70246c2bb25b81b685338032bee" translate="yes" xml:space="preserve">
          <source>See either &lt;b&gt;switches&lt;/b&gt; or &lt;b&gt;regular expression modifiers&lt;/b&gt;.</source>
          <target state="translated">请参阅&lt;b&gt;开关&lt;/b&gt;或&lt;b&gt;正则表达式修饰符&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="bca27e73c5af96160e310f88f005bfd242ca416d" translate="yes" xml:space="preserve">
          <source>See examples in &lt;a href=&quot;#The-NO_OUTPUT-Keyword&quot;&gt;The NO_OUTPUT Keyword&lt;/a&gt; and &lt;a href=&quot;#Returning-Undef-And-Empty-Lists&quot;&gt;Returning Undef And Empty Lists&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;#The-NO_OUTPUT-Keyword&quot;&gt;NO_OUTPUT关键字&lt;/a&gt;和&lt;a href=&quot;#Returning-Undef-And-Empty-Lists&quot;&gt;返回Undef和空列表中的&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="ceb23395b7ff892f97e42af84489440c4a02a6b7" translate="yes" xml:space="preserve">
          <source>See for example the limitations in Switch, which uses source filters, and thus is does not work inside a string eval, the presence of regexes with embedded newlines that are specified with raw /.../ delimiters and don't have a modifier //x are indistinguishable from code chunks beginning with the division operator /. As a workaround you must use m/.../ or m?...? for such patterns. Also, the presence of regexes specified with raw ?...? delimiters may cause mysterious errors. The workaround is to use m?...? instead. See &lt;a href=&quot;http://search.cpan.org/perldoc?Switch#LIMITATIONS&quot;&gt;http://search.cpan.org/perldoc?Switch#LIMITATIONS&lt;/a&gt;</source>
          <target state="translated">参见例如Switch中的限制，它使用源过滤器，因此在字符串eval中不起作用，存在带有嵌入换行符的正则表达式，这些正则表达式由raw /.../分隔符指定，并且没有修饰符/ / x与以除法运算符/开头的代码块没有区别。解决方法是必须使用m /.../或m？...？对于这种模式。另外，存在用原始？...？指定的正则表达式。分隔符可能会导致神秘的错误。解决方法是使用m？...？代替。看到&lt;a href=&quot;http://search.cpan.org/perldoc?Switch#LIMITATIONS&quot;&gt;http://search.cpan.org/perldoc?Switch#LIMITATIONS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2924f082858dd71261929cfa3aa3fdf58f5e82c" translate="yes" xml:space="preserve">
          <source>See for the full list of hardware/OS support and expected end-of-life &lt;a href=&quot;http://www.hp.com/go/hpuxservermatrix&quot;&gt;http://www.hp.com/go/hpuxservermatrix&lt;/a&gt;</source>
          <target state="translated">有关完整的硬件/ OS支持和预期寿命终止的信息，&lt;a href=&quot;http://www.hp.com/go/hpuxservermatrix&quot;&gt;请参见http://www.hp.com/go/hpuxservermatrix&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9cac07c3a5031bc58ed0d4641c1e831bf299803" translate="yes" xml:space="preserve">
          <source>See how much easier this is? It's cleaner, safer, and faster. It's cleaner because it's less noisy. It's safer because if code gets added between the inner and outer loops later on, the new code won't be accidentally executed. The &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; explicitly iterates the other loop rather than merely terminating the inner one. And it's faster because Perl executes a &lt;code&gt;foreach&lt;/code&gt; statement more rapidly than it would the equivalent &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">看看这有多容易？更干净，更安全，更快。它更干净，因为它的噪音更少。这是更安全的，因为如果稍后在内部循环和外部循环之间添加了代码，则不会意外执行新代码。在 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 明确的迭代循环等，而不仅仅是终止内部之一。而且速度更快，因为Perl执行 &lt;code&gt;foreach&lt;/code&gt; 语句的速度比等效的 &lt;code&gt;for&lt;/code&gt; 循环要快。</target>
        </trans-unit>
        <trans-unit id="fff03238825b47d71884937869bfce10a8b5c0e3" translate="yes" xml:space="preserve">
          <source>See https://metacpan.org/release/ExtUtils-MakeMaker.</source>
          <target state="translated">见https://metacpan.org/release/ExtUtils-MakeMaker。</target>
        </trans-unit>
        <trans-unit id="88733ada1546a673c0dbee91911afa2ab1e52139" translate="yes" xml:space="preserve">
          <source>See if the web framework you are using has an authentication system and if that fits your needs.</source>
          <target state="translated">看看你使用的网络框架是否有认证系统,是否符合你的需求。</target>
        </trans-unit>
        <trans-unit id="e2f42e5fd2aaa4c6aa831bc277c3b494ee196f99" translate="yes" xml:space="preserve">
          <source>See passwd(5) and getpwent(3) for details.</source>
          <target state="translated">详见passwd(5)和 getpwent(3)。</target>
        </trans-unit>
        <trans-unit id="075e3f5e18c179398bc43c4ab7f0926aeb85cca7" translate="yes" xml:space="preserve">
          <source>See previous FAQ item.</source>
          <target state="translated">请看前面的FAQ项目。</target>
        </trans-unit>
        <trans-unit id="acc2c52c24a5f8259e0f2ce1e052d9cf22c641ab" translate="yes" xml:space="preserve">
          <source>See the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f3a8cb36b9b33d47d443f8468d020d9ca6511b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section for more details.</source>
          <target state="translated">有关更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;#Constructor-Options&quot;&gt;构造器选项&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="43abd257abdf69c73d5be5761204cdfb28133096" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#HOW-IT-WORKS&quot;&gt;HOW IT WORKS&lt;/a&gt; section below to see how &lt;code&gt;IPC::Cmd&lt;/code&gt; decides what modules or function calls to use when issuing a command.</source>
          <target state="translated">请参阅下面的&amp;ldquo; &lt;a href=&quot;#HOW-IT-WORKS&quot;&gt;如何工作&amp;rdquo;&lt;/a&gt;部分，以了解 &lt;code&gt;IPC::Cmd&lt;/code&gt; 如何确定发出命令时要使用的模块或函数调用。</target>
        </trans-unit>
        <trans-unit id="dd05f1a1763e3ac883d61441090452812cc7eb8c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Resource&quot;&gt;BSD::Resource&lt;/a&gt; and your systems documentation for the gory details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Resource&quot;&gt;BSD :: Resource&lt;/a&gt;和您的系统文档。</target>
        </trans-unit>
        <trans-unit id="40b878a314357dca797baa2a8cee58f135011aad" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local::lib&lt;/a&gt; documentation for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local :: lib&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="25e71bd547060c51814b7b6becb838b195fce0a3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;opcode&quot;&gt;Opcode&lt;/a&gt; module for information about opcodes, optags, opmasks and important information about safety.</source>
          <target state="translated">有关&lt;a href=&quot;opcode&quot;&gt;操作&lt;/a&gt;码，操作标签，操作掩码的信息以及有关安全性的重要信息，请参见操作码模块。</target>
        </trans-unit>
        <trans-unit id="d12dff4667632c72fccecf6522c62e799bd934d4" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; function, of which &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; is the opposite.</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 功能，反之为 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1a694b2c9c4e7154192a15cf9fc1aa34b89f6f9" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; function, of which &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; is the opposite.</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 功能，反之为 &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b249700609418ebf44cd57258a74d127f00ece2c" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; section to see how to change this preference.</source>
          <target state="translated">请参阅&amp;ldquo; &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; 部分，以了解如何更改此首选项。</target>
        </trans-unit>
        <trans-unit id="2b239b93bdb113b7db924e9e6e1c8679cc3b9771" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;HOW IT WORKS&lt;/code&gt; section further down for details.</source>
          <target state="translated">有关详细信息，请参见下方的&amp;ldquo; &lt;code&gt;HOW IT WORKS&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="a9f9e5a0d99ec9e84fec92a948a2b98903855c8f" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;Memoize.pm&lt;/code&gt; Page at &lt;a href=&quot;http://perl.plover.com/Memoize/&quot;&gt;http://perl.plover.com/Memoize/&lt;/a&gt; for news and upgrades. Near this page, at &lt;a href=&quot;http://perl.plover.com/MiniMemoize/&quot;&gt;http://perl.plover.com/MiniMemoize/&lt;/a&gt; there is an article about memoization and about the internals of Memoize that appeared in The Perl Journal, issue #13. (This article is also included in the Memoize distribution as `article.html'.)</source>
          <target state="translated">有关新闻和升级，请参阅&lt;a href=&quot;http://perl.plover.com/Memoize/&quot;&gt;http://perl.plover.com/Memoize/上&lt;/a&gt;的 &lt;code&gt;Memoize.pm&lt;/code&gt; 页面。在此页面附近的&lt;a href=&quot;http://perl.plover.com/MiniMemoize/&quot;&gt;http://perl.plover.com/MiniMemoize/&lt;/a&gt;上，《 Perl Journal》第13期上刊登了一篇有关备忘录和备忘录内容的文章。（本文也作为&amp;ldquo; article.html&amp;rdquo;包含在&amp;ldquo;备忘录&amp;rdquo;发行版中。）</target>
        </trans-unit>
        <trans-unit id="4bba6998f19fbd03af482ef65b9510cbaa5fae00" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;README&lt;/code&gt; in the &lt;code&gt;examples&lt;/code&gt; directory of this distribution.</source>
          <target state="translated">请参阅此发行版的 &lt;code&gt;examples&lt;/code&gt; 目录中的 &lt;code&gt;README&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="bf3a9502c15d00637d12054d98327f56167519da" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;allow()&lt;/code&gt; function for details.</source>
          <target state="translated">有关详细信息，请参见 &lt;code&gt;allow()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="74d7550b08cbab72120e12fa13822ee435ab10ff" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;autoload&lt;/code&gt; function and the &lt;code&gt;autoload_remote&lt;/code&gt; function from &lt;a href=&quot;../load&quot;&gt;Module::Load&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;../load&quot;&gt;Module :: Load中&lt;/a&gt;的 &lt;code&gt;autoload&lt;/code&gt; 函数和 &lt;code&gt;autoload_remote&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="1e423604a1b60cbb6339c26afc8a58724c582f8f" translate="yes" xml:space="preserve">
          <source>See the CPAN FAQ at &lt;a href=&quot;http://www.cpan.org/misc/cpan-faq.html&quot;&gt;http://www.cpan.org/misc/cpan-faq.html&lt;/a&gt; for answers to the most frequently asked questions about CPAN.</source>
          <target state="translated">有关有关CPAN 的最常见问题的解答，请参见&lt;a href=&quot;http://www.cpan.org/misc/cpan-faq.html&quot;&gt;http://www.cpan.org/misc/cpan-faq.html上&lt;/a&gt;的CPAN常见问题解答。</target>
        </trans-unit>
        <trans-unit id="607b3a7869f52b5842876abd8b4f375d4245815f" translate="yes" xml:space="preserve">
          <source>See the CPAN::Reporter documentation for additional details and configuration settings. If your firewall blocks outgoing traffic, you may need to configure CPAN::Reporter before sending reports.</source>
          <target state="translated">有关其他详细信息和配置设置,请参见 CPAN::Reporter 文档。如果您的防火墙阻止了出站流量,您可能需要在发送报告之前配置 CPAN::Reporter。</target>
        </trans-unit>
        <trans-unit id="7aba5ca9b45599787560bfb2afd7a0e9cf3c9f34" translate="yes" xml:space="preserve">
          <source>See the Changes file.</source>
          <target state="translated">见 &quot;变更 &quot;文件。</target>
        </trans-unit>
        <trans-unit id="1c8c02a8fa1ad32731232c8c310d53fc47ee543e" translate="yes" xml:space="preserve">
          <source>See the INSTALL file for general information regarding 64-bit compiles. In general, the defaults should be fine for most people.</source>
          <target state="translated">关于64位编译的一般信息,请参见INSTALL文件。一般来说,默认值对大多数人来说都是好的。</target>
        </trans-unit>
        <trans-unit id="9ba403735f1b0853cf6c42f682cd71f9040fc277" translate="yes" xml:space="preserve">
          <source>See the INSTALL file for general information regarding Configure. Only Solaris-specific issues are discussed here. Usually, the defaults should be fine.</source>
          <target state="translated">有关配置的一般信息,请参见INSTALL文件。这里只讨论Solaris特有的问题。通常情况下,默认值应该是没有问题的。</target>
        </trans-unit>
        <trans-unit id="faa04af1eab5ace0a18b7ea38f2f5d8491391afd" translate="yes" xml:space="preserve">
          <source>See the Net::POP3 and Net::SMTP modules for examples of this.</source>
          <target state="translated">请参阅 Net::POP3 和 Net::SMTP 模块来了解这方面的例子。</target>
        </trans-unit>
        <trans-unit id="00f6b4f37ceaafbb02fe1c9b33be7ac70154b89e" translate="yes" xml:space="preserve">
          <source>See the Symbol module for a way to create anonymous symbol table entries.</source>
          <target state="translated">创建匿名符号表项的方法请参见符号模块。</target>
        </trans-unit>
        <trans-unit id="1c93fd5ae730337ac1cf24d8d9d41ea44b6db206" translate="yes" xml:space="preserve">
          <source>See the YAML and Data::Dumper files that come with the &lt;code&gt;CPAN.pm&lt;/code&gt; distribution in the &lt;code&gt;distroprefs/&lt;/code&gt; directory for examples.</source>
          <target state="translated">有关示例，请 &lt;code&gt;distroprefs/&lt;/code&gt; 目录中 &lt;code&gt;CPAN.pm&lt;/code&gt; 发行版随附的YAML和Data :: Dumper文件。</target>
        </trans-unit>
        <trans-unit id="7de8bb3c2dde975b8a0f3c38ce1f6bdae6932300" translate="yes" xml:space="preserve">
          <source>See the answer to the previous question.</source>
          <target state="translated">请看上一个问题的答案。</target>
        </trans-unit>
        <trans-unit id="239f1061c9f649d13d28c85c2cc34e6f36fc310a" translate="yes" xml:space="preserve">
          <source>See the appropriate</source>
          <target state="translated">见适当的</target>
        </trans-unit>
        <trans-unit id="838accd091e073a4e4a620e7a6475dfe1cb73c48" translate="yes" xml:space="preserve">
          <source>See the authors list in</source>
          <target state="translated">见作者名单</target>
        </trans-unit>
        <trans-unit id="44e0b1268a441d58c97c9174c3132c41e9df0b15" translate="yes" xml:space="preserve">
          <source>See the brief discussion in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpod&lt;/a&gt;中的&amp;ldquo; 设置代码格式&amp;rdquo;中的简短讨论。</target>
        </trans-unit>
        <trans-unit id="291a0ebbbec03b08710f5ad3e40715d6cafecaea" translate="yes" xml:space="preserve">
          <source>See the comments at the top of &lt;code&gt;embed.fnc&lt;/code&gt; for others.</source>
          <target state="translated">有关其他信息，请参见 &lt;code&gt;embed.fnc&lt;/code&gt; 顶部的注释。</target>
        </trans-unit>
        <trans-unit id="8c1c5dd902524760ea293fd54aa24dc28de5008d" translate="yes" xml:space="preserve">
          <source>See the discussion of &lt;code&gt;&lt;a href=&quot;#pack()&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">参见上面关于 &lt;code&gt;&lt;a href=&quot;#pack()&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; 的讨论。</target>
        </trans-unit>
        <trans-unit id="34b50de2cb94e2f5733b571c3907a9372a967f36" translate="yes" xml:space="preserve">
          <source>See the discussion of &lt;code&gt;&lt;a href=&quot;#printf()&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; above. An example of the use of sprintf would be:</source>
          <target state="translated">请参阅上面对 &lt;code&gt;&lt;a href=&quot;#printf()&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 的讨论。使用sprintf的一个示例是：</target>
        </trans-unit>
        <trans-unit id="e4df8ddf2842e84ed3cc6225530d69e4aa2b505d" translate="yes" xml:space="preserve">
          <source>See the documentation about the copy constructor and &lt;code&gt;=&lt;/code&gt; in overload, as well as the documentation in BigInt for further details.</source>
          <target state="translated">有关更多详细信息，请参见有关复制构造函数和重载 &lt;code&gt;=&lt;/code&gt; 的文档以及BigInt中的文档。</target>
        </trans-unit>
        <trans-unit id="3a5795626bd886fc84b5b3161c91f427201f7acc" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; to appreciate its many capabilities.</source>
          <target state="translated">有关&lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformat的&lt;/a&gt;功能，请参见文档。</target>
        </trans-unit>
        <trans-unit id="c25e441faf735f723987df3964a8c84deff8b0a3" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">请参阅文档 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 在&lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9af3ab1ea4081603ca7ba1db505f142d92a5d411" translate="yes" xml:space="preserve">
          <source>See the documentation for either of those commands to see what else you can do.</source>
          <target state="translated">请参阅这两个命令的文档,看看你还能做什么。</target>
        </trans-unit>
        <trans-unit id="413a3d22d49065def44419ce8b97e5b6502bcdf5" translate="yes" xml:space="preserve">
          <source>See the documentation for flow-control keywords in &lt;a href=&quot;../perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../perlsyn#Compound-Statements&quot;&gt;perlsyn&lt;/a&gt;中的&amp;ldquo; 复合语句&amp;rdquo;中有关流控制关键字的文档。</target>
        </trans-unit>
        <trans-unit id="97571b9edce8f08599cc2aae5c1b1a942d44701b" translate="yes" xml:space="preserve">
          <source>See the documentation for flow-control keywords in &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;perlsyn&lt;/a&gt;中的&amp;ldquo; 复合语句&amp;rdquo;中有关流控制关键字的文档。</target>
        </trans-unit>
        <trans-unit id="73e4b041d28a8fef241cdecb379b15f3b0c87aba" translate="yes" xml:space="preserve">
          <source>See the documentation of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; for a convenient way to fail if the running Perl interpreter is too old.</source>
          <target state="translated">如果正在运行的Perl解释器太旧，请参阅 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 的文档，并 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; 以方便的方式使其失败。</target>
        </trans-unit>
        <trans-unit id="9a9856c7ed82189e0c58b57cf7ab0022fab179c2" translate="yes" xml:space="preserve">
          <source>See the entry for &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见在&lt;a href=&quot;perlfunc&quot;&gt;perlfunc中&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 的条目。</target>
        </trans-unit>
        <trans-unit id="579c02009e5d33672d2b3bf1f32a8aea43b4c283" translate="yes" xml:space="preserve">
          <source>See the entry on &lt;code&gt;backticks&lt;/code&gt; above.</source>
          <target state="translated">请参阅上方 &lt;code&gt;backticks&lt;/code&gt; 的条目。</target>
        </trans-unit>
        <trans-unit id="8cdcfdb1e496ac40c473ef1643148795b19bf7d5" translate="yes" xml:space="preserve">
          <source>See the example at &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 上的示例。</target>
        </trans-unit>
        <trans-unit id="5c6243aa712e4e987437456b02e7925a1f94d2b3" translate="yes" xml:space="preserve">
          <source>See the example at &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 上的示例。</target>
        </trans-unit>
        <trans-unit id="394ea296d9fea402ea28f14c1f9fbece6086398e" translate="yes" xml:space="preserve">
          <source>See the example in &lt;a href=&quot;packlist&quot;&gt;ExtUtils::Packlist&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;packlist&quot;&gt;ExtUtils :: Packlist中&lt;/a&gt;的示例。</target>
        </trans-unit>
        <trans-unit id="6142ee968e835bf0e6a4b4bc0768ee08a0e5da77" translate="yes" xml:space="preserve">
          <source>See the file</source>
          <target state="translated">见文件</target>
        </trans-unit>
        <trans-unit id="10dad421044f18b7af163a82ed9974550acc8db7" translate="yes" xml:space="preserve">
          <source>See the file pod/perlport.pod for more information about the OpenVOS port of Perl.</source>
          <target state="translated">请参阅文件 pod/perlport.pod 了解更多关于 Perl 的 OpenVOS 移植的信息。</target>
        </trans-unit>
        <trans-unit id="8853d25a4754f2571518c761e9e5c75905dbead7" translate="yes" xml:space="preserve">
          <source>See the filters at the end of this documents for examples of using context information using both</source>
          <target state="translated">有关使用上下文信息的例子,请参见本文档末尾的过滤器,同时使用了</target>
        </trans-unit>
        <trans-unit id="afde646d9a8a44c9d93270380997df97dcfabba6" translate="yes" xml:space="preserve">
          <source>See the following pages for more information:</source>
          <target state="translated">更多信息请参见以下页面。</target>
        </trans-unit>
        <trans-unit id="feed0aa953e0b86b29a7e0e2e208f79a66c19281" translate="yes" xml:space="preserve">
          <source>See the header files and the C code in the supplied OS/2-related modules for the details on usage of these functions.</source>
          <target state="translated">关于这些函数的详细用法,请参见头文件和提供的OS/2相关模块中的C代码。</target>
        </trans-unit>
        <trans-unit id="cad24f9fdd0b59fb39db9be5afe5f8508c3a09ce" translate="yes" xml:space="preserve">
          <source>See the individual methods/properties for details.</source>
          <target state="translated">详见各方法/属性。</target>
        </trans-unit>
        <trans-unit id="e6fee35f7690a0f0b6ecb1890246b8a2510a2ec3" translate="yes" xml:space="preserve">
          <source>See the module &lt;a href=&quot;http://search.cpan.org/perldoc/Compress::Bzip2&quot;&gt;Compress::Bzip2&lt;/a&gt;</source>
          <target state="translated">参见模块&lt;a href=&quot;http://search.cpan.org/perldoc/Compress::Bzip2&quot;&gt;Compress :: Bzip2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49a35fd32da3daa48c9fe6c8672989822d967a15" translate="yes" xml:space="preserve">
          <source>See the module &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String::Approx&lt;/a&gt; available from CPAN.</source>
          <target state="translated">请参阅可从CPAN获得的模块&lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String :: Approx&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0422f47d6a927439d2983f60fd547b2b2ad5672e" translate="yes" xml:space="preserve">
          <source>See the modules under the Solaris:: and Sun::Solaris namespaces on CPAN, see &lt;a href=&quot;http://www.cpan.org/modules/by-module/Solaris/&quot;&gt;http://www.cpan.org/modules/by-module/Solaris/&lt;/a&gt; and &lt;a href=&quot;http://www.cpan.org/modules/by-module/Sun/&quot;&gt;http://www.cpan.org/modules/by-module/Sun/&lt;/a&gt;.</source>
          <target state="translated">请参见CPAN上Solaris ::和Sun :: Solaris命名空间下的模块，请参见&lt;a href=&quot;http://www.cpan.org/modules/by-module/Solaris/&quot;&gt;http://www.cpan.org/modules/by-module/Solaris/&lt;/a&gt;和&lt;a href=&quot;http://www.cpan.org/modules/by-module/Sun/&quot;&gt;http://www.cpan.org/modules/by -module / Sun /&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bb41c596a1759330b9cb513876ca708593201a0" translate="yes" xml:space="preserve">
          <source>See the note on &lt;code&gt;MAPPING&lt;/code&gt; below.</source>
          <target state="translated">请参阅下面有关 &lt;code&gt;MAPPING&lt;/code&gt; 的注释。</target>
        </trans-unit>
        <trans-unit id="68f4783a31000cc0f3cc312dced3acc380009fdc" translate="yes" xml:space="preserve">
          <source>See the respective low-level library documentation for further details.</source>
          <target state="translated">更多细节请参见各自的低级库文档。</target>
        </trans-unit>
        <trans-unit id="612405692ced11f2d636b784df0fd90038603316" translate="yes" xml:space="preserve">
          <source>See the respective math library module documentation for further details.</source>
          <target state="translated">详见各数学库模块文档。</target>
        </trans-unit>
        <trans-unit id="c03cfde13d1c8612778c8b7cda8a4e02a8a5d6ea" translate="yes" xml:space="preserve">
          <source>See the section</source>
          <target state="translated">见本节</target>
        </trans-unit>
        <trans-unit id="b55c21a2a29981505e847c69ae7d241753cd7552" translate="yes" xml:space="preserve">
          <source>See the section titled &quot;Compliance&quot; in RFC 1952 for a definition of the values used for the fields in the gzip header.</source>
          <target state="translated">请参阅RFC 1952中题为 &quot;合规性 &quot;的章节,了解gzip头中使用的字段值的定义。</target>
        </trans-unit>
        <trans-unit id="9122e68aefefe819f538fe0c0dfb8e87eb5e7b86" translate="yes" xml:space="preserve">
          <source>See the source for Pod::Simple::RTF for an example of a formatter that uses Pod::Simple::PullParser.</source>
          <target state="translated">请参阅Pod::Simple::RTF的源码,了解一个使用Pod::Simple::PullParser的格式器的例子。</target>
        </trans-unit>
        <trans-unit id="d787e04a99446f8085850e40f2ba5ba07770a2cd" translate="yes" xml:space="preserve">
          <source>See the source for Pod::Simple::Text for an example of using this class.</source>
          <target state="translated">请看Pod::Simple::Text的源码,了解使用这个类的例子。</target>
        </trans-unit>
        <trans-unit id="3c2d503a731fb8b122b64577756341a2fe8a9f91" translate="yes" xml:space="preserve">
          <source>See the source for details.</source>
          <target state="translated">详见来源。</target>
        </trans-unit>
        <trans-unit id="408481221a85a1107cf74e093de1b4644532b226" translate="yes" xml:space="preserve">
          <source>See these manpages, some of which are CPAN modules: &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;, &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;, &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt;, &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;, &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;, &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt;, &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;, &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;, &lt;a href=&quot;dbm_filter&quot;&gt;DBM_Filter&lt;/a&gt;, &lt;a href=&quot;dbm_filter/utf8&quot;&gt;DBM_Filter::utf8&lt;/a&gt;, &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode::Locale&lt;/a&gt;, &lt;a href=&quot;unicode/ucd&quot;&gt;Unicode::UCD&lt;/a&gt;, &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::GCString&quot;&gt;Unicode::GCString&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::LineBreak&quot;&gt;Unicode::LineBreak&lt;/a&gt;, &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt;, &lt;a href=&quot;unicode/collate/locale&quot;&gt;Unicode::Collate::Locale&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Unihan&quot;&gt;Unicode::Unihan&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::CaseFold&quot;&gt;Unicode::CaseFold&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Tussle&quot;&gt;Unicode::Tussle&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::JA::Romanize::Japanese&quot;&gt;Lingua::JA::Romanize::Japanese&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::ZH::Romanize::Pinyin&quot;&gt;Lingua::ZH::Romanize::Pinyin&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::KO::Romanize::Hangul&quot;&gt;Lingua::KO::Romanize::Hangul&lt;/a&gt;.</source>
          <target state="translated">请参阅这些手册页，其中一些是CPAN模块：&lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;，&lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;，&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;，&lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt;，&lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;，&lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;，&lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt;，&lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;，&lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;，&lt;a href=&quot;dbm_filter&quot;&gt;DBM_Filter&lt;/a&gt;，&lt;a href=&quot;dbm_filter/utf8&quot;&gt;DBM_Filter :: utf8&lt;/a&gt;，&lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode :: Locale&lt;/a&gt;，&lt;a href=&quot;unicode/ucd&quot;&gt;Unicode :: UCD&lt;/a&gt;，&lt;a href=&quot;unicode/normalize&quot;&gt;Unicode： ：Normalize&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::GCString&quot;&gt;Unicode :: GCString&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::LineBreak&quot;&gt;Unicode :: LineBreak&lt;/a&gt;，&lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collat​​e&lt;/a&gt;，&lt;a href=&quot;unicode/collate/locale&quot;&gt;Unicode :: Collat​​e :: Locale&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Unihan&quot;&gt;Unicode :: Unihan&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::CaseFold&quot;&gt;Unicode :: CaseFold&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Tussle&quot;&gt;Unicode :: Tussle&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::JA::Romanize::Japanese&quot;&gt;Lingua :: JA :: Romanize :: Japanese&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::ZH::Romanize::Pinyin&quot;&gt;Lingua :: ZH :: Romanize :: Pinyin&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::KO::Romanize::Hangul&quot;&gt;Lingua :: KO :: Romanize :: Hangul&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30650f0df9a1acd0b0652292e24337b060a25b76" translate="yes" xml:space="preserve">
          <source>See your</source>
          <target state="translated">看你的</target>
        </trans-unit>
        <trans-unit id="e46d7c35a12113e9e7669e54efe39266a3357c57" translate="yes" xml:space="preserve">
          <source>See your native chmod(2) and stat(2) documentation for more details about the &lt;code&gt;S_*&lt;/code&gt; constants. To get status info for a symbolic link instead of the target file behind the link, use the &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">有关 &lt;code&gt;S_*&lt;/code&gt; 常量的更多详细信息，请参见本机chmod（2）和stat（2）文档。要获取符号链接而不是链接后面的目标文件的状态信息，请使用 &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="9970744d5ba8330d81e88cb8dc9f142d55054d8d" translate="yes" xml:space="preserve">
          <source>See your native chmod(2) and stat(2) documentation for more details about the &lt;code&gt;S_*&lt;/code&gt; constants. To get status info for a symbolic link instead of the target file behind the link, use the &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">有关 &lt;code&gt;S_*&lt;/code&gt; 常量的更多详细信息，请参见本机chmod（2）和stat（2）文档。要获取符号链接而不是链接后面的目标文件的状态信息，请使用 &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="3be2ec8135463b21af282b57ee1ce24fe06e37d5" translate="yes" xml:space="preserve">
          <source>See, the whole entry is gone!</source>
          <target state="translated">你看,整个条目都没了!</target>
        </trans-unit>
        <trans-unit id="1555af10085ff0ea32cf7ff9252f6ff3cf4d9e99" translate="yes" xml:space="preserve">
          <source>Seek the IO::File to position POS, relative to WHENCE:</source>
          <target state="translated">寻找IO::File到位置POS,相对于WHENCE。</target>
        </trans-unit>
        <trans-unit id="1d086939b65b06d9d3a44991f14621044cf912f1" translate="yes" xml:space="preserve">
          <source>Seek to a given position in the stream. Not yet supported.</source>
          <target state="translated">在流中寻找到一个给定的位置。尚未支持。</target>
        </trans-unit>
        <trans-unit id="1dea335f8b8af18f43df2ccadf7446de12d02c86" translate="yes" xml:space="preserve">
          <source>Seeks to the beginning of the file.</source>
          <target state="translated">寻找到文件的开头。</target>
        </trans-unit>
        <trans-unit id="62c1916dc6ff314613f1d9b5bd5205d1a7f41ea9" translate="yes" xml:space="preserve">
          <source>Segfault in make</source>
          <target state="translated">误操作</target>
        </trans-unit>
        <trans-unit id="04fce5d13d8be20647c8f188f4020b39414daee7" translate="yes" xml:space="preserve">
          <source>Select a name for the module.</source>
          <target state="translated">为模块选择一个名称。</target>
        </trans-unit>
        <trans-unit id="b1457cb228bb4f3a070abfd3120fa19370b966d8" translate="yes" xml:space="preserve">
          <source>Select the UDP socket mechanism:</source>
          <target state="translated">选择UDP套接字机制。</target>
        </trans-unit>
        <trans-unit id="265fd1b21508be2f8973560ec771ad89f03bc658" translate="yes" xml:space="preserve">
          <source>Select the riscos hint file. The default answers for the rest of the questions are usually sufficient.</source>
          <target state="translated">选择riscos提示文件。其余问题的默认答案通常就可以了。</target>
        </trans-unit>
        <trans-unit id="c1fac0c731922ce2c4368448cad241941c2fbd27" translate="yes" xml:space="preserve">
          <source>Select what to export.</source>
          <target state="translated">选择要导出的内容。</target>
        </trans-unit>
        <trans-unit id="81bbdb3cd17072c5ce722e1560232e797f8c121a" translate="yes" xml:space="preserve">
          <source>SelectSaver</source>
          <target state="translated">SelectSaver</target>
        </trans-unit>
        <trans-unit id="229070ca5374c2a9cb038771a48f86c718c9d853" translate="yes" xml:space="preserve">
          <source>SelectSaver - save and restore selected file handle</source>
          <target state="translated">SelectSaver-保存和恢复选定的文件句柄。</target>
        </trans-unit>
        <trans-unit id="5c943420278d1c8954b1c5773786bea97f613852" translate="yes" xml:space="preserve">
          <source>Selecting What to Export</source>
          <target state="translated">选择要输出的内容</target>
        </trans-unit>
        <trans-unit id="b17c7a1c4a92c96c8491e85a0462c238e3896397" translate="yes" xml:space="preserve">
          <source>Selective install</source>
          <target state="translated">选择性安装</target>
        </trans-unit>
        <trans-unit id="84aa6bd605893b309ed096501a015b4639a428b5" translate="yes" xml:space="preserve">
          <source>Selects which scheme is to be used for conversion. Available schemes are as follows:</source>
          <target state="translated">选择用于转换的方案。可用的方案如下:</target>
        </trans-unit>
        <trans-unit id="add69b113685f74f15320b557f83862e13c1544e" translate="yes" xml:space="preserve">
          <source>Self explanatory.</source>
          <target state="translated">不言自明。</target>
        </trans-unit>
        <trans-unit id="54e1d154f8f2875647f17eba14956a859053e7ab" translate="yes" xml:space="preserve">
          <source>SelfLoader</source>
          <target state="translated">SelfLoader</target>
        </trans-unit>
        <trans-unit id="d8cab5e5bb875b977b911e8babfcf26bd70b64fd" translate="yes" xml:space="preserve">
          <source>SelfLoader - load functions only on demand</source>
          <target state="translated">SelfLoader--仅按需加载功能</target>
        </trans-unit>
        <trans-unit id="e773e20132ac6e7474cba68c63018cfb17743647" translate="yes" xml:space="preserve">
          <source>SelfLoader and AutoLoader</source>
          <target state="translated">自加载器和自动加载器</target>
        </trans-unit>
        <trans-unit id="f310694fd37172c1158ec0f92581c2541456029e" translate="yes" xml:space="preserve">
          <source>SelfLoader autoloading</source>
          <target state="translated">自加载器自动加载</target>
        </trans-unit>
        <trans-unit id="f3e306caeca3c8bc4157585e84e5dc7d26a4f2b5" translate="yes" xml:space="preserve">
          <source>Semaphores are a kind of generic locking mechanism. In their most basic form, they behave very much like lockable scalars, except that they can't hold data, and that they must be explicitly unlocked. In their advanced form, they act like a kind of counter, and can allow multiple threads to have the</source>
          <target state="translated">Semaphores是一种通用的锁定机制。在它们最基本的形式中,它们的行为很像可锁定的标量,除了它们不能保存数据,而且它们必须被显式解锁。在它们的高级形式中,它们的行为就像一种计数器,并且可以允许多个线程拥有</target>
        </trans-unit>
        <trans-unit id="8699ad0a8f54bbc917e3bb45de5d78b0cf17084b" translate="yes" xml:space="preserve">
          <source>Semaphores created by &lt;a href=&quot;semaphore&quot;&gt;Thread::Semaphore&lt;/a&gt; can be used in both threaded and non-threaded applications. This allows you to write modules and packages that potentially make use of semaphores, and that will function in either environment.</source>
          <target state="translated">&lt;a href=&quot;semaphore&quot;&gt;Thread ::&lt;/a&gt; Semaphore创建的信号量可以在线程和非线程应用程序中使用。这样，您就可以编写可能使用信号量的模块和程序包，并且这些模块和程序包可以在两种环境中都可以使用。</target>
        </trans-unit>
        <trans-unit id="3c22a014e16e0edc6a027ed2ae5d6eec415fc366" translate="yes" xml:space="preserve">
          <source>Semaphores don't limit their values to zero and one, so they can be used to control access to some resource that there may be more than one of (e.g., filehandles). Increment and decrement amounts aren't fixed at one either, so threads can reserve or return multiple resources at once.</source>
          <target state="translated">Semaphores的值不限制为0和1,所以可以用来控制对一些可能有多个资源的访问(如文件柄)。增量和减量也不是固定的1,所以线程可以同时保留或返回多个资源。</target>
        </trans-unit>
        <trans-unit id="d20dc8c89f291c0d4e65def7764a4fc1152824c3" translate="yes" xml:space="preserve">
          <source>Semaphores have two methods, &lt;code&gt;down()&lt;/code&gt; and &lt;code&gt;up()&lt;/code&gt; : &lt;code&gt;down()&lt;/code&gt; decrements the resource count, while &lt;code&gt;up()&lt;/code&gt; increments it. Calls to &lt;code&gt;down()&lt;/code&gt; will block if the semaphore's current count would decrement below zero. This program gives a quick demonstration:</source>
          <target state="translated">信号量有两种方法， &lt;code&gt;down()&lt;/code&gt; 和 &lt;code&gt;up()&lt;/code&gt; ： &lt;code&gt;down()&lt;/code&gt; 减少资源数量，而 &lt;code&gt;up()&lt;/code&gt; 增加资源数量。如果信号量的当前计数减少到零以下，则对 &lt;code&gt;down()&lt;/code&gt; 的调用将阻塞。该程序提供了快速演示：</target>
        </trans-unit>
        <trans-unit id="796b9a2e2e39d11dbfa1741282a431155e4bbeba" translate="yes" xml:space="preserve">
          <source>Semaphores provide a mechanism to regulate access to resources. Unlike locks, semaphores aren't tied to particular scalars, and so may be used to control access to anything you care to use them for.</source>
          <target state="translated">Semaphores提供了一种机制来调节对资源的访问。与锁不同,semaphores并不绑定在特定的标量上,因此可以用来控制对任何你想使用它们的东西的访问。</target>
        </trans-unit>
        <trans-unit id="356e03859529b6fe855b8990f468b4b738134047" translate="yes" xml:space="preserve">
          <source>Semaphores with counters greater than one are also useful for establishing quotas. Say, for example, that you have a number of threads that can do I/O at once. You don't want all the threads reading or writing at once though, since that can potentially swamp your I/O channels, or deplete your process's quota of filehandles. You can use a semaphore initialized to the number of concurrent I/O requests (or open files) that you want at any one time, and have your threads quietly block and unblock themselves.</source>
          <target state="translated">计数器大于1的语素对于建立配额也很有用。比如说,你有许多线程可以同时进行I/O。但你不希望所有的线程同时读写,因为这可能会淹没你的I/O通道,或者耗尽你的进程的文件柄配额。你可以使用一个semaphore,初始化为你在任何时候想要的并发I/O请求(或打开的文件)的数量,让你的线程安静地阻塞和解除阻塞。</target>
        </trans-unit>
        <trans-unit id="d787d045573b4c994cdbd4823b535d6dabe2c620" translate="yes" xml:space="preserve">
          <source>Semaphores: Synchronizing Data Access</source>
          <target state="translated">Semaphores:同步数据访问</target>
        </trans-unit>
        <trans-unit id="a05ee7033ccef1b142b6235829e01c52062ee7b7" translate="yes" xml:space="preserve">
          <source>Semi-list for executables.</source>
          <target state="translated">可执行文件的半清单。</target>
        </trans-unit>
        <trans-unit id="630d774f800ee1cd20d1064679a19e8edab879c3" translate="yes" xml:space="preserve">
          <source>Semicolon omitted in &quot;short&quot; one-line BLOCK.</source>
          <target state="translated">在 &quot;短 &quot;单行BLOCK中省略分号。</target>
        </trans-unit>
        <trans-unit id="ce25bcbf0fddbfafcbbf78d8ff1922c5ddee8929" translate="yes" xml:space="preserve">
          <source>Semicolons are required after all simple statements in Perl (except at the end of a block). Newline is not a statement delimiter.</source>
          <target state="translated">在 Perl 中,所有简单的语句后面都需要使用分号(除了在代码块的结尾处)。Newline不是语句定界符。</target>
        </trans-unit>
        <trans-unit id="da89265fe8629af6dc7f2d520015f68ac5895b1b" translate="yes" xml:space="preserve">
          <source>Send a &lt;code&gt;PORT&lt;/code&gt; (IPv4) or &lt;code&gt;EPRT&lt;/code&gt; (IPv6) command to the server. If &lt;code&gt;PORT&lt;/code&gt; is specified then it is sent to the server. If not, then a listen socket is created and the correct information sent to the server.</source>
          <target state="translated">将 &lt;code&gt;PORT&lt;/code&gt; （IPv4）或 &lt;code&gt;EPRT&lt;/code&gt; （IPv6）命令发送到服务器。如果指定了 &lt;code&gt;PORT&lt;/code&gt; ，则将其发送到服务器。如果不是，则创建一个侦听套接字，并将正确的信息发送到服务器。</target>
        </trans-unit>
        <trans-unit id="52080e6741be66508f4cfdc06a392762420be982" translate="yes" xml:space="preserve">
          <source>Send a SITE command to the remote server and wait for a response.</source>
          <target state="translated">向远程服务器发送SITE命令并等待响应。</target>
        </trans-unit>
        <trans-unit id="bbe6336423849caa2042b02152be321aae6b5054" translate="yes" xml:space="preserve">
          <source>Send a command to the command server. All arguments are first joined with a space character and CRLF is appended, this string is then sent to the command server.</source>
          <target state="translated">向命令服务器发送一条命令。所有的参数首先用空格字符连接,并附加CRLF,然后将此字符串发送到命令服务器。</target>
        </trans-unit>
        <trans-unit id="13c260a730e1509d61e6de1590f9e61836ad529f" translate="yes" xml:space="preserve">
          <source>Send a command, that Net::FTP does not directly support, to the remote server and wait for a response.</source>
          <target state="translated">向远程服务器发送Net::FTP不直接支持的命令,并等待响应。</target>
        </trans-unit>
        <trans-unit id="06c1dceebd9dfcae281255787fb6713160305097" translate="yes" xml:space="preserve">
          <source>Send a request to the server to delete &lt;code&gt;FILENAME&lt;/code&gt; .</source>
          <target state="translated">向服务器发送删除 &lt;code&gt;FILENAME&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="f6d5a327a2f39dffcf23330396f1cf4deb1c5ff5" translate="yes" xml:space="preserve">
          <source>Send a thank-you note instead of a bug report.</source>
          <target state="translated">发送感谢信而不是错误报告。</target>
        </trans-unit>
        <trans-unit id="1bf932ad3989c17c94151811580a197344612caa" translate="yes" xml:space="preserve">
          <source>Send an &lt;code&gt;NLST&lt;/code&gt; command to the server, with an optional parameter.</source>
          <target state="translated">使用可选参数将 &lt;code&gt;NLST&lt;/code&gt; 命令发送到服务器。</target>
        </trans-unit>
        <trans-unit id="6b3bf632e8ef2f9feae566ac2e7c3497f279404b" translate="yes" xml:space="preserve">
          <source>Send both the USER and PASS commands. If &lt;code&gt;PASS&lt;/code&gt; is not given the &lt;code&gt;Net::POP3&lt;/code&gt; uses &lt;code&gt;Net::Netrc&lt;/code&gt; to lookup the password using the host and username. If the username is not specified then the current user name will be used.</source>
          <target state="translated">同时发送USER和PASS命令。如果未提供 &lt;code&gt;PASS&lt;/code&gt; ,则 &lt;code&gt;Net::POP3&lt;/code&gt; 使用 &lt;code&gt;Net::Netrc&lt;/code&gt; 使用主机和用户名查找密码。如果未指定用户名，则将使用当前用户名。</target>
        </trans-unit>
        <trans-unit id="0fb10510d35b8d68dbce68dcecc3a46a06267b1b" translate="yes" xml:space="preserve">
          <source>Send bug reports via &lt;a href=&quot;http://rt.cpan.org/&quot;&gt;http://rt.cpan.org/&lt;/a&gt;. Please send your generated Makefile along with your report.</source>
          <target state="translated">通过&lt;a href=&quot;http://rt.cpan.org/&quot;&gt;http://rt.cpan.org/&lt;/a&gt;发送错误报告。请发送生成的Makefile和报告。</target>
        </trans-unit>
        <trans-unit id="7ac564802d486774a9892c6aff1b1c0a2f8cafee" translate="yes" xml:space="preserve">
          <source>Send data to the remote server without performing any conversions. &lt;code&gt;DATA&lt;/code&gt; is a scalar.</source>
          <target state="translated">将数据发送到远程服务器而无需执行任何转换。 &lt;code&gt;DATA&lt;/code&gt; 是标量。</target>
        </trans-unit>
        <trans-unit id="57e97cdb6dd06bb0868e8cb9640a99325aaa18ea" translate="yes" xml:space="preserve">
          <source>Send data to the remote server, converting LF to CRLF. Any line starting with a '.' will be prefixed with another '.'. &lt;code&gt;DATA&lt;/code&gt; may be an array or a reference to an array.</source>
          <target state="translated">将数据发送到远程服务器，将LF转换为CRLF。以&amp;ldquo;。&amp;rdquo;开头的任何行。将以另一个&amp;ldquo;。&amp;rdquo;作为前缀。 &lt;code&gt;DATA&lt;/code&gt; 可以是数组或对数组的引用。</target>
        </trans-unit>
        <trans-unit id="cd25761fcb28fefeb75b3177743c9ba470230188" translate="yes" xml:space="preserve">
          <source>Send error messages about invalid POD to standard error instead of appending a POD ERRORS section to the generated *roff output. This is equivalent to setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;stderr&lt;/code&gt; if &lt;code&gt;errors&lt;/code&gt; is not already set. It is supported for backward compatibility.</source>
          <target state="translated">将关于无效POD的错误消息发送到标准错误，而不是将POD ERRORS部分附加到生成的* roff输出中。这等效于如果尚未设置 &lt;code&gt;errors&lt;/code&gt; ，则将 &lt;code&gt;errors&lt;/code&gt; 设置为 &lt;code&gt;stderr&lt;/code&gt; 。支持向后兼容。</target>
        </trans-unit>
        <trans-unit id="83176277760067307722b45efeb2403c4d726af3" translate="yes" xml:space="preserve">
          <source>Send error messages about invalid POD to standard error instead of appending a POD ERRORS section to the generated output. This is equivalent to setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;stderr&lt;/code&gt; if &lt;code&gt;errors&lt;/code&gt; is not already set. It is supported for backward compatibility.</source>
          <target state="translated">将有关无效POD的错误消息发送到标准错误，而不是将POD ERRORS部分附加到生成的输出。这等效于如果尚未设置 &lt;code&gt;errors&lt;/code&gt; ，则将 &lt;code&gt;errors&lt;/code&gt; 设置为 &lt;code&gt;stderr&lt;/code&gt; 。支持向后兼容。</target>
        </trans-unit>
        <trans-unit id="175242b5e5a3a51babac9f6fd0141ab1ff1d3b80" translate="yes" xml:space="preserve">
          <source>Send messages to a remote host using the TCP socket mechanism:</source>
          <target state="translated">使用TCP套接字机制向远程主机发送消息。</target>
        </trans-unit>
        <trans-unit id="4b352aef54374a51117ddaee7478eb1aed5c0620" translate="yes" xml:space="preserve">
          <source>Send messages using the TCP socket mechanism on a custom port:</source>
          <target state="translated">在自定义端口上使用TCP套接字机制发送消息。</target>
        </trans-unit>
        <trans-unit id="95879d49e234e123b226b1861b81ec39f64c5abc" translate="yes" xml:space="preserve">
          <source>Send patches and ideas to &lt;code&gt;makemaker@perl.org&lt;/code&gt; .</source>
          <target state="translated">将补丁和想法发送到 &lt;code&gt;makemaker@perl.org&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c91135e737ed31a349e0756df108a779ae22af2" translate="yes" xml:space="preserve">
          <source>Send the PASS command. Returns the number of messages in the mailbox.</source>
          <target state="translated">发送PASS命令。返回邮箱中的邮件数量。</target>
        </trans-unit>
        <trans-unit id="a5a5c4bc54dbfee7d7df6b13afe8690b267ed309" translate="yes" xml:space="preserve">
          <source>Send the QUIT command to the remote FTP server and close the socket connection.</source>
          <target state="translated">向远程FTP服务器发送QUIT命令并关闭套接字连接。</target>
        </trans-unit>
        <trans-unit id="6ec736fe911616cab9d412d30eff7201ebe79ae5" translate="yes" xml:space="preserve">
          <source>Send the QUIT command to the remote SMTP server and close the socket connection.</source>
          <target state="translated">向远程SMTP服务器发送QUIT命令并关闭套接字连接。</target>
        </trans-unit>
        <trans-unit id="8bd48cd01789052a1aae4608930df1802a9a35fb" translate="yes" xml:space="preserve">
          <source>Send the USER command.</source>
          <target state="translated">发送USER命令。</target>
        </trans-unit>
        <trans-unit id="a5a01f9b9fd642efa2608d22bc54a63404559f83" translate="yes" xml:space="preserve">
          <source>Send the appropriate command to the server MAIL, SEND, SOML or SAML. &lt;code&gt;ADDRESS&lt;/code&gt; is the address of the sender. This initiates the sending of a message. The method &lt;code&gt;recipient&lt;/code&gt; should be called for each address that the message is to be sent to.</source>
          <target state="translated">将适当的命令发送到服务器MAIL，SEND，SOML或SAML。 &lt;code&gt;ADDRESS&lt;/code&gt; 是发送者的地址。这将启动消息发送。应该为消息要发送到的每个地址调用方法 &lt;code&gt;recipient&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab136dc2c0bcc386b29481c5eb4c91db18355fa1" translate="yes" xml:space="preserve">
          <source>Send without asking for confirmation.</source>
          <target state="translated">不要求确认就发送。</target>
        </trans-unit>
        <trans-unit id="76680f33d63f4baf96426d9b02d94c58ab1ea9ad" translate="yes" xml:space="preserve">
          <source>Sending a signal to a negative process ID means that you send the signal to the entire Unix process group. This code sends a hang-up signal to all processes in the current process group, and also sets $SIG{HUP} to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; so it doesn't kill itself:</source>
          <target state="translated">将信号发送到否定的进程ID意味着您将信号发送到整个Unix进程组。这段代码向当前进程组中的所有进程发送挂断信号，并将$ SIG {HUP}设置为 &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; 这样它不会杀死自己：</target>
        </trans-unit>
        <trans-unit id="9a654ee6f8d01c324fc62fd6a540d937cf4a0a44" translate="yes" xml:space="preserve">
          <source>Sending a signal to a terminated/finished thread is ignored.</source>
          <target state="translated">向终止/结束的线程发送信号会被忽略。</target>
        </trans-unit>
        <trans-unit id="1da6243eb6698a2e9c5ba8aed1445bba73f250b4" translate="yes" xml:space="preserve">
          <source>Sends a message on a socket. Attempts to send the scalar MSG to the SOCKET filehandle. Takes the same flags as the system call of the same name. On unconnected sockets, you must specify a destination to</source>
          <target state="translated">在socket上发送消息。试图将标量MSG发送到SOCKET文件柄。采取与同名系统调用相同的标志。在未连接的套接字上,你必须指定一个目的地到</target>
        </trans-unit>
        <trans-unit id="771e146572af3680e3f5745ae30f4777037832e1" translate="yes" xml:space="preserve">
          <source>Sends a signal to a list of processes. Returns the number of arguments that were successfully used to signal (which is not necessarily the same as the number of processes actually killed, e.g. where a process group is killed).</source>
          <target state="translated">向进程列表发送信号。返回成功发送信号的参数数(不一定与实际被杀的进程数相同,例如在进程组被杀的情况下)。</target>
        </trans-unit>
        <trans-unit id="e0bff1132f5af9057b37aaabd1421549847a04df" translate="yes" xml:space="preserve">
          <source>Sends the specified signal to the current process. See also &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; and the &lt;code&gt;$$&lt;/code&gt; in &lt;a href=&quot;perlvar#%24PID&quot;&gt;$PID in perlvar&lt;/a&gt;.</source>
          <target state="translated">将指定的信号发送到当前进程。又见&lt;a href=&quot;functions/kill&quot;&gt;杀&lt;/a&gt;和 &lt;code&gt;$$&lt;/code&gt; 在&lt;a href=&quot;perlvar#%24PID&quot;&gt;在perlvar $ PID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15f74f69cd66e334277cea94fbbb2c2fdda68097" translate="yes" xml:space="preserve">
          <source>Sends the specified signal to the thread. Signal names and (positive) signal numbers are the same as those supported by &lt;a href=&quot;functions/kill&quot;&gt;kill SIGNAL, LIST&lt;/a&gt;. For example, 'SIGTERM', 'TERM' and (depending on the OS) 15 are all valid arguments to &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; .</source>
          <target state="translated">将指定的信号发送到线程。信号名称和（正）信号编号与&lt;a href=&quot;functions/kill&quot;&gt;kill SIGNAL，LIST&lt;/a&gt;支持的那些相同。例如，'SIGTERM'，'TERM'和（取决于OS）15都是 &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; 的有效参数。</target>
        </trans-unit>
        <trans-unit id="a449a6b7439f2abf27299f47fccad5c63b9cd342" translate="yes" xml:space="preserve">
          <source>Separate functionality from output</source>
          <target state="translated">功能与输出分离</target>
        </trans-unit>
        <trans-unit id="d02cc80e6bf2d5cc54bd43f2d3b385d1316c539b" translate="yes" xml:space="preserve">
          <source>Separated from BigInt and shaped API with the help of John Peacock.</source>
          <target state="translated">从BigInt分离出来,在John Peacock的帮助下塑造了API。</target>
        </trans-unit>
        <trans-unit id="88aee4aceed86d713a450288b36a045eaad93f77" translate="yes" xml:space="preserve">
          <source>Separating the loading of Filter::Simple:</source>
          <target state="translated">分别加载Filter::Simple。</target>
        </trans-unit>
        <trans-unit id="96c4b99bf2dac21233a650fb9e4225f35f064f66" translate="yes" xml:space="preserve">
          <source>Separators accepted are \ and /.</source>
          <target state="translated">接受的分隔符是/和/。</target>
        </trans-unit>
        <trans-unit id="853cedcb493818fb7dd7ff54631eefab9d7c736c" translate="yes" xml:space="preserve">
          <source>September 8th, 1994; by Tim Bunce.</source>
          <target state="translated">1994年9月8日;由蒂姆-邦斯。</target>
        </trans-unit>
        <trans-unit id="f9dd9bb04503c5d3dd3e8ab5f681af6d1c56048b" translate="yes" xml:space="preserve">
          <source>September, 1999; by Barrie Slaymaker: math fixes and accuracy and efficiency tweaks. Added cmpthese(). A result is now returned from timethese(). Exposed countit() (was runfor()).</source>
          <target state="translated">1999 年 9 月;作者:Barrie Slaymaker:数学修正以及准确性和效率调整。添加了 cmpthese()。现在 timethese()会返回一个结果。公开了 countit()(原 runfor())。</target>
        </trans-unit>
        <trans-unit id="a1a0fbeb2a4b06770650abeca286ce50260e6d9c" translate="yes" xml:space="preserve">
          <source>September, 2002; by Jarkko Hietaniemi: add ':hireswallclock' special tag.</source>
          <target state="translated">2002年9月;Jarkko Hietaniemi:增加':hireswallclock'特别标签。</target>
        </trans-unit>
        <trans-unit id="88ae5be2d6d888bb16dff39911d6e3067f36196d" translate="yes" xml:space="preserve">
          <source>Sequence numbers representing the scope within which a lexical is visible. Meaningless if PADNAMEt_OUTER is set.</source>
          <target state="translated">代表词库可见范围的序列号。如果设置了PADNAMEt_OUTER,则无意义。</target>
        </trans-unit>
        <trans-unit id="544f380bfe8a0f67f6564420a0e87cb049e06041" translate="yes" xml:space="preserve">
          <source>Serialization of CODE references and deserialization in a safe compartment:</source>
          <target state="translated">对CODE引用进行序列化,并在安全舱中进行反序列化。</target>
        </trans-unit>
        <trans-unit id="8a2b4a973c93275f52c99996b779e6d6d379919c" translate="yes" xml:space="preserve">
          <source>Seriously, you can't if they are Unix password files--the Unix password system employs one-way encryption. It's more like hashing than encryption. The best you can do is check whether something else hashes to the same string. You can't turn a hash back into the original string. Programs like Crack can forcibly (and intelligently) try to guess passwords, but don't (can't) guarantee quick success.</source>
          <target state="translated">说真的,如果它们是Unix密码文件,你就不能这样做--Unix密码系统采用单向加密。它更像是哈希而不是加密。你能做的最好的是检查是否有其他的东西散列到相同的字符串。你不能把哈希值变回原来的字符串。像Crack这样的程序可以强行(和智能)尝试猜测密码,但不能(不能)保证快速成功。</target>
        </trans-unit>
        <trans-unit id="4f13fa1c7820625cf04d4c7f1c83dd6398d904f3" translate="yes" xml:space="preserve">
          <source>Server and Daemon Utilities</source>
          <target state="translated">服务器和守护进程实用程序</target>
        </trans-unit>
        <trans-unit id="ab921e03df699faf948bd826b1cb601ef928435c" translate="yes" xml:space="preserve">
          <source>Set $x to the next bigger integer value (e.g. truncate the number to integer and then increment it by one).</source>
          <target state="translated">将$x设为下一个更大的整数值(例如,将数字截断为整数,然后将其递增1)。</target>
        </trans-unit>
        <trans-unit id="fb5e64e9563743dd7dba5cbafd5756a884f0ce62" translate="yes" xml:space="preserve">
          <source>Set $x to the remainder of the division of $x by $y.</source>
          <target state="translated">设$x为$x除以$y的余数。</target>
        </trans-unit>
        <trans-unit id="f0f87e0ec5d1b57769b831155b30feea6695fe68" translate="yes" xml:space="preserve">
          <source>Set (if argument specified) and retrieve the canonical name of POD as found in the &lt;code&gt;=head1 NAME&lt;/code&gt; section.</source>
          <target state="translated">设置（如果指定了参数）并检索在 &lt;code&gt;=head1 NAME&lt;/code&gt; 部分中找到的POD的规范名称。</target>
        </trans-unit>
        <trans-unit id="6f913eab1f09444d6746c0c8ee0da1d3118faf54" translate="yes" xml:space="preserve">
          <source>Set (if argument specified) and retrieve the number of errors found.</source>
          <target state="translated">设置(如果指定参数)并检索发现的错误数量。</target>
        </trans-unit>
        <trans-unit id="555abf19864aa59ef436a0bb073b4b9696ad43e3" translate="yes" xml:space="preserve">
          <source>Set (if argument specified) and retrieve the number of warnings found.</source>
          <target state="translated">设置(如果指定了参数)并检索发现的警告数量。</target>
        </trans-unit>
        <trans-unit id="c8c804eb9b30a04c998d826d31522b856640bf5a" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;PERL_SH_DIR&lt;/code&gt; (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;) if you move</source>
          <target state="translated">如果您移动，请设置 &lt;code&gt;PERL_SH_DIR&lt;/code&gt; （请参阅&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d82cba9bbef0466d60c9badd40cd24deeb77bc34" translate="yes" xml:space="preserve">
          <source>Set a breakpoint at first line of subroutine after it is compiled.</source>
          <target state="translated">在子程序编译后的第一行设置断点。</target>
        </trans-unit>
        <trans-unit id="8000c21d5f6a0e70714e65dc08afbb6d1aa48fad" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the first executed line of the</source>
          <target state="translated">在执行的第一行之前设置一个断点。</target>
        </trans-unit>
        <trans-unit id="cea53470d6bac6053a0de5a61d3cc4e2c70616d9" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the first line of the named subroutine.</source>
          <target state="translated">在命名子程序的第一行之前设置一个断点。</target>
        </trans-unit>
        <trans-unit id="5638a132c6c8ee5427997acfb725cf55f691b9cf" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the given line in a (possibly different) file. If a condition is specified, it's evaluated each time the statement is reached: a breakpoint is taken only if the condition is true. Breakpoints may only be set on lines that begin an executable statement. Conditions don't use &lt;code&gt;if&lt;/code&gt; :</source>
          <target state="translated">在（可能不同的）文件中的给定行之前设置一个断点。如果指定了条件，则每次达到该语句时都会对其进行评估：仅当条件为true时才会使用断点。断点只能在以可执行语句开头的行上设置。在以下情况下不使用 &lt;code&gt;if&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fe3cd72abb20a5167109bc8fe1d44e573a5fe7d3" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the given line. If a condition is specified, it's evaluated each time the statement is reached: a breakpoint is taken only if the condition is true. Breakpoints may only be set on lines that begin an executable statement. Conditions don't use &lt;code&gt;if&lt;/code&gt; :</source>
          <target state="translated">在给定的行之前设置一个断点。如果指定了条件，则每次达到该语句时都会对其进行评估：仅当条件为true时才会使用断点。断点只能在以可执行语句开头的行上设置。在以下情况下不使用 &lt;code&gt;if&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ff0e698d1dcc0f8a798426c3c9fbf8e2d66e67f7" translate="yes" xml:space="preserve">
          <source>Set a default title for the page if no title can be determined from the content. The value of this string should already be &amp;amp;-escaped.</source>
          <target state="translated">如果无法从内容确定标题，请为页面设置默认标题。此字符串的值应该已经＆换码了。</target>
        </trans-unit>
        <trans-unit id="f2616e97365cb7f6b0e4603f26d96fcf376c23f0" translate="yes" xml:space="preserve">
          <source>Set a member of the XOP structure.</source>
          <target state="translated">设置XOP结构的一个成员。</target>
        </trans-unit>
        <trans-unit id="dc9f75b0aa359534af415de26967ce708c0fc394" translate="yes" xml:space="preserve">
          <source>Set a string identifying the user's account.</source>
          <target state="translated">设置一个识别用户账户的字符串。</target>
        </trans-unit>
        <trans-unit id="fe86334e2d278dfbdcc3fb8bdb35ba9ec2e9c5fc" translate="yes" xml:space="preserve">
          <source>Set a value in the &lt;code&gt;c_cc&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object. The &lt;code&gt;c_cc&lt;/code&gt; field is an array so an index must be specified.</source>
          <target state="translated">在 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_cc&lt;/code&gt; 字段中设置一个值。所述 &lt;code&gt;c_cc&lt;/code&gt; 中字段是如此，必须指定一个索引的数组。</target>
        </trans-unit>
        <trans-unit id="d5be582c93072a29a50a70d51245fdd965d5a20c" translate="yes" xml:space="preserve">
          <source>Set an action (Perl command) to happen after the prompt when you've just given a command to return to executing the script. A multi-line command may be entered by backslashing the newlines (we bet you couldn't have guessed this by now).</source>
          <target state="translated">设置一个动作(Perl命令),当你刚下达命令时,在提示符后发生,返回执行脚本。多行命令可以通过反斜线输入(我们打赌你现在一定猜不到这一点)。</target>
        </trans-unit>
        <trans-unit id="0fc012651b8b4c32b0fb08830c02802ae741b971" translate="yes" xml:space="preserve">
          <source>Set an action (Perl command) to happen before every debugger prompt. A multi-line command may be entered by backslashing the newlines.</source>
          <target state="translated">在每个调试器提示符前设置一个动作(Perl命令)。可以通过反斜线输入多行命令。</target>
        </trans-unit>
        <trans-unit id="eadb053e8ef1742f83d58cfc846967936fb3e20e" translate="yes" xml:space="preserve">
          <source>Set an action (debugger command) to happen before every debugger prompt. A multi-line command may be entered in the customary fashion.</source>
          <target state="translated">设置一个动作(调试器命令)在每个调试器提示符前发生。可以按惯例输入多行命令。</target>
        </trans-unit>
        <trans-unit id="ffa1676f766d51de518d327212cbb03953035c46" translate="yes" xml:space="preserve">
          <source>Set an action to be done before the line is executed. If</source>
          <target state="translated">设置在该行执行前要做的动作。如果</target>
        </trans-unit>
        <trans-unit id="8ff28a72a57699005a808bb50fea4029f88ce5a2" translate="yes" xml:space="preserve">
          <source>Set an entry in the BHK structure, and set the flags to indicate it is valid.</source>
          <target state="translated">在BHK结构中设置一个条目,并设置标志来表示它是有效的。</target>
        </trans-unit>
        <trans-unit id="1f7f888f25e207f269d2077b56bacc68bd53447f" translate="yes" xml:space="preserve">
          <source>Set and/or get the current group. If &lt;code&gt;GROUP&lt;/code&gt; is not given then information is returned on the current group.</source>
          <target state="translated">设置和/或获取当前组。如果未给出 &lt;code&gt;GROUP&lt;/code&gt; ,则返回当前组的信息。</target>
        </trans-unit>
        <trans-unit id="f8abe979d3cfc9431b63ee219fc5e8fd8f6d7c81" translate="yes" xml:space="preserve">
          <source>Set arguments that have not been provided to the default</source>
          <target state="translated">设置没有提供给默认的参数。</target>
        </trans-unit>
        <trans-unit id="258050c4ed0fa2eef9213ce0f50db3368b280502" translate="yes" xml:space="preserve">
          <source>Set attributes immediately for stdout.</source>
          <target state="translated">立即为stdout设置属性。</target>
        </trans-unit>
        <trans-unit id="b1478e96d18bd7e3396a6676029248e5b136b9cf" translate="yes" xml:space="preserve">
          <source>Set current value of extended library search path. If &lt;code&gt;type&lt;/code&gt; is present and positive, works with &amp;lt;END_LIBPATH&amp;gt;, if negative, works with &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; , otherwise with &lt;code&gt;BEGIN_LIBPATH&lt;/code&gt; .</source>
          <target state="translated">设置扩展库搜索路径的当前值。如果 &lt;code&gt;type&lt;/code&gt; 存在且为正，则与&amp;lt;END_LIBPATH&amp;gt;一起使用；如果为负，则与 &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; 一起使用，否则与 &lt;code&gt;BEGIN_LIBPATH&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="ee9c6ef001c20cf084c8558f1d4444e36b18509a" translate="yes" xml:space="preserve">
          <source>Set default PerlIO layers for input and output</source>
          <target state="translated">为输入和输出设置默认的PerlIO层</target>
        </trans-unit>
        <trans-unit id="68053c6dea9587ed3e9809ad25350441927ee7ba" translate="yes" xml:space="preserve">
          <source>Set each listed Boolean option to the value &lt;code&gt;1&lt;/code&gt; .</source>
          <target state="translated">将列出的每个布尔选项设置为值 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34bbdb6a82240469f9ad8d2d9feb42cd1e0de42e" translate="yes" xml:space="preserve">
          <source>Set if the pattern contain eval-groups, such as &lt;code&gt;(?{ code })&lt;/code&gt; and &lt;code&gt;(??{ code })&lt;/code&gt; .</source>
          <target state="translated">设置模式是否包含评估组，例如 &lt;code&gt;(?{ code })&lt;/code&gt; 和 &lt;code&gt;(??{ code })&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4442299e6a1006852000da4e91e1acbc38c80ee5" translate="yes" xml:space="preserve">
          <source>Set if the pattern contains &lt;code&gt;\G&lt;/code&gt; .</source>
          <target state="translated">如果该模式包含设置 &lt;code&gt;\G&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94ab3854ad150bd5fe7143364537bedb55064afe" translate="yes" xml:space="preserve">
          <source>Set if the pattern starts with &lt;code&gt;.*&lt;/code&gt;.</source>
          <target state="translated">设置模式是否以 &lt;code&gt;.*&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="6c9248d9fa918c2b6a94ddbb8ca8fd246b8cd2bb" translate="yes" xml:space="preserve">
          <source>Set if the pattern starts with a repeated char (as in &lt;code&gt;x+y&lt;/code&gt;).</source>
          <target state="translated">设置模式是否以重复的char开头（如 &lt;code&gt;x+y&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="29d790ebdfd1bdd7a590e9a372101f1d05e0ec63" translate="yes" xml:space="preserve">
          <source>Set indexing base via $[</source>
          <target state="translated">通过$[]设置索引基数。</target>
        </trans-unit>
        <trans-unit id="feb8723b424b50d3d7b7cf0abd922f64fdbc635a" translate="yes" xml:space="preserve">
          <source>Set it to some true value if you want to have an index (in reality a table of contents) to be added at the top of the generated HTML.</source>
          <target state="translated">如果你想在生成的HTML的顶部添加一个索引(实际上是一个目录),请将其设置为真值。</target>
        </trans-unit>
        <trans-unit id="2f4f3702d185e94f169ddb1f3074292ed4bb6358" translate="yes" xml:space="preserve">
          <source>Set only when MakeMaker is building the extensions of the Perl core distribution.</source>
          <target state="translated">仅在MakeMaker正在构建Perl核心发行版的扩展时设置。</target>
        </trans-unit>
        <trans-unit id="0fe4658257dfb05b84f9d2ef686b5a25924965a2" translate="yes" xml:space="preserve">
          <source>Set option associated with the socket. Other levels than SOL_SOCKET may be specified here.</source>
          <target state="translated">设置与套接字相关的选项,这里可以指定SOL_SOCKET以外的其他级别。除了SOL_SOCKET之外,还可以在这里指定其他级别。</target>
        </trans-unit>
        <trans-unit id="92c4066c2c61e06e1e7118ec6fe43c7175fa5f23" translate="yes" xml:space="preserve">
          <source>Set or get if data connections will be initiated in passive mode.</source>
          <target state="translated">设置或获取数据连接是否会在被动模式下启动。</target>
        </trans-unit>
        <trans-unit id="35a8ec7624c7f4f035d4a1cc226b27c2481a9ecc" translate="yes" xml:space="preserve">
          <source>Set or get if files will be transferred in ASCII or binary mode.</source>
          <target state="translated">设置或获取文件是否以ASCII或二进制模式传输。</target>
        </trans-unit>
        <trans-unit id="dbbd4131f1d194712698d60b9476bf9f798c1e2f" translate="yes" xml:space="preserve">
          <source>Set or get the global or local accuracy, aka how many significant digits the results have. If you set a global accuracy, then this also applies to new()!</source>
          <target state="translated">设置或获取全局或局部精度,也就是结果有多少个有意义的数字。如果你设置了一个全局精度,那么这也适用于new()!</target>
        </trans-unit>
        <trans-unit id="146f3942958232e0d21f7bac38c73f20923da62a" translate="yes" xml:space="preserve">
          <source>Set or get the timeout value (in seconds) associated with this socket. If called without any arguments then the current setting is returned. If called with an argument the current setting is changed and the previous value returned.</source>
          <target state="translated">设置或获取与该套接字相关的超时值(以秒为单位)。如果调用时没有任何参数,则返回当前的设置。如果调用时有参数,则改变当前设置并返回之前的值。</target>
        </trans-unit>
        <trans-unit id="f36a4dcb58387042602a6a6c89f7257c7b935b4d" translate="yes" xml:space="preserve">
          <source>Set pointer into buffer, and a count of bytes still in the buffer. Should be used only to set pointer to within range implied by previous calls to &lt;code&gt;PerlIO_get_ptr&lt;/code&gt; and &lt;code&gt;PerlIO_get_cnt&lt;/code&gt; . The two values</source>
          <target state="translated">将指针设置到缓冲区中，并且字节数仍在缓冲区中。仅应将指针设置为先前调用 &lt;code&gt;PerlIO_get_ptr&lt;/code&gt; 和 &lt;code&gt;PerlIO_get_cnt&lt;/code&gt; 所隐含的范围内。两个值</target>
        </trans-unit>
        <trans-unit id="98c15be8ce82513edc5e20f2395cd31ae3ced533" translate="yes" xml:space="preserve">
          <source>Set terminal control attributes.</source>
          <target state="translated">设置终端控制属性。</target>
        </trans-unit>
        <trans-unit id="ef1a5f874fc09882b0eaad885d1eb2cce0c7dc80" translate="yes" xml:space="preserve">
          <source>Set the &quot;current article pointer&quot; to the next article in the current newsgroup.</source>
          <target state="translated">设置 &quot;当前文章指针 &quot;为当前新闻组中的下一篇文章。</target>
        </trans-unit>
        <trans-unit id="fe9c6a4b2ad9119af782f9f176b76dfe491a13d8" translate="yes" xml:space="preserve">
          <source>Set the &quot;current article pointer&quot; to the previous article in the current newsgroup.</source>
          <target state="translated">设置 &quot;当前文章指针 &quot;为当前新闻组中的前一篇文章。</target>
        </trans-unit>
        <trans-unit id="129e44c75987d754522e8294400ec8bed47c8f13" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;N&lt;/code&gt; th value in the semaphore set to &lt;code&gt;VALUE&lt;/code&gt;</source>
          <target state="translated">将信号量中的第 &lt;code&gt;N&lt;/code&gt; 个值设置为 &lt;code&gt;VALUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81b3ed905236c4848d2eb7b4d90c6ed8a3b1eb81" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;PATH&lt;/code&gt; environment variable so that Configure finds the Cygwin versions of programs. Any not-needed Windows directories should be removed or moved to the end of your &lt;code&gt;PATH&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;PATH&lt;/code&gt; 环境变量，以便Configure可以找到程序的Cygwin版本。任何不需要的Windows目录都应删除或移到 &lt;code&gt;PATH&lt;/code&gt; 的末尾。</target>
        </trans-unit>
        <trans-unit id="4a41a3429b4626ac1e2009837021aebb8ffeb644" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_cflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">设置 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_cflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="a71485df0cc15865bf7b8bbc260b24c2e05c6b7f" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_iflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">设置 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_iflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="1cc6d1351ad8ad398fce9a19c23db043fe922565" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_lflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">设置 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_lflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="94ed32b52e68bacc0adccd70e78108c281792310" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_oflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">设置 &lt;code&gt;termios&lt;/code&gt; 对象的 &lt;code&gt;c_oflag&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="a978b282606d77f44b327d2e45a326d453456b0d" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;inhibit_exit&lt;/code&gt; option to 0 if you want to be able to step off the end the script. You may also need to set $finished to 0 if you want to step through global destruction.</source>
          <target state="translated">如果您希望能够退出脚本的最后，请将 &lt;code&gt;inhibit_exit&lt;/code&gt; 选项设置为0。如果要逐步破坏全局，可能还需要将$ finished设置为0。</target>
        </trans-unit>
        <trans-unit id="b7bcca13877bb147437c0598c8adc18a322e3186" translate="yes" xml:space="preserve">
          <source>Set the HTML output at the beginning and end of each file. The default header includes a title, a doctype tag (if &lt;code&gt;html_doctype&lt;/code&gt; is set), a content tag (customized by &lt;code&gt;html_header_tags&lt;/code&gt; ), a tag for a CSS file (if &lt;code&gt;html_css&lt;/code&gt; is set), and a tag for a Javascript file (if &lt;code&gt;html_javascript&lt;/code&gt; is set). The default footer simply closes the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; tags.</source>
          <target state="translated">在每个文件的开头和结尾处设置HTML输出。默认的标题包括一个标题，一个DOCTYPE标签（如果 &lt;code&gt;html_doctype&lt;/code&gt; 是集），内容标签（通过定制 &lt;code&gt;html_header_tags&lt;/code&gt; ），对于一个CSS文件标签（如果 &lt;code&gt;html_css&lt;/code&gt; 是集），以及JavaScript文件中的标签（如果 &lt;code&gt;html_javascript&lt;/code&gt; 是组）。默认页脚仅关闭 &lt;code&gt;html&lt;/code&gt; 和 &lt;code&gt;body&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="98d4465bdeabff8b8498033ad82d521aff2d3640" translate="yes" xml:space="preserve">
          <source>Set the actual length of the string which is in the SV. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">设置SV中字符串的实际长度。参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab84d69f945e09c1eb7749df157a9890899786e6" translate="yes" xml:space="preserve">
          <source>Set the byte offset at which to begin the next data transfer. Net::FTP simply records this value and uses it when during the next data transfer. For this reason this method will not return an error, but setting it may cause a subsequent data transfer to fail.</source>
          <target state="translated">设置开始下一次数据传输的字节偏移量。Net::FTP 会简单地记录这个值,并在下一次数据传输时使用它。因此,本方法不会返回错误,但设置它可能会导致后续数据传输失败。</target>
        </trans-unit>
        <trans-unit id="8cd0fd4cead65fd572452c84cd76a61272305db0" translate="yes" xml:space="preserve">
          <source>Set the centered footer. By default, this is the version of Perl you run &lt;b&gt;pod2man&lt;/b&gt; under. Note that some system an macro sets assume that the centered footer will be a modification date and will prepend something like &quot;Last modified: &quot;; if this is the case, you may want to set &lt;b&gt;--release&lt;/b&gt; to the last modified date and &lt;b&gt;--date&lt;/b&gt; to the version number.</source>
          <target state="translated">设置居中的页脚。默认情况下，这是您在其下运行&lt;b&gt;pod2man&lt;/b&gt;的Perl的版本。请注意，某些宏设置系统假定居中的页脚将是修改日期，并且会以&amp;ldquo; Last Modify：&amp;rdquo;开头。在这种情况下，您可能需要将&lt;b&gt;--release&lt;/b&gt;设置为上次修改日期，并将&lt;b&gt;--date&lt;/b&gt;设置为版本号。</target>
        </trans-unit>
        <trans-unit id="321a1673ea9882b874d1a1aad6d11dc8a438079b" translate="yes" xml:space="preserve">
          <source>Set the centered footer. By default, this is the version of Perl you run Pod::Man under. Note that some system an macro sets assume that the centered footer will be a modification date and will prepend something like &quot;Last modified: &quot;; if this is the case, you may want to set &lt;code&gt;release&lt;/code&gt; to the last modified date and &lt;code&gt;date&lt;/code&gt; to the version number.</source>
          <target state="translated">设置居中的页脚。默认情况下，这是您在其下运行Pod :: Man的Perl的版本。请注意，某些宏设置系统假定居中的页脚将是修改日期，并且会以&amp;ldquo; Last Modify：&amp;rdquo;开头。在这种情况下，您可能需要将 &lt;code&gt;release&lt;/code&gt; 设置为上次修改日期，并将 &lt;code&gt;date&lt;/code&gt; 设置为版本号。</target>
        </trans-unit>
        <trans-unit id="8214f55b990464e2e8c22afb79c6512b0ec251c3" translate="yes" xml:space="preserve">
          <source>Set the content type:</source>
          <target state="translated">设置内容类型。</target>
        </trans-unit>
        <trans-unit id="960ca764a887ff7187a7bb8509e838d035f503ac" translate="yes" xml:space="preserve">
          <source>Set the content-type in the HTML head: (defaults to ISO-8859-1)</source>
          <target state="translated">设置HTML头部的内容类型。(默认为ISO-8859-1)</target>
        </trans-unit>
        <trans-unit id="b9c66cace097e648754e60eb3adba5a65c7e471d" translate="yes" xml:space="preserve">
          <source>Set the current length of the string which is in the SV. See &lt;code&gt;SvCUR&lt;/code&gt; and &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">设置SV中字符串的当前长度。请参阅 &lt;code&gt;SvCUR&lt;/code&gt; 和 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1cc357837a67efdc931d9a2ed4913fd6bd1879b" translate="yes" xml:space="preserve">
          <source>Set the current pad to be pad &lt;code&gt;n&lt;/code&gt; in the padlist, saving the previous current pad. NB currently this macro expands to a string too long for some compilers, so it's best to replace it with</source>
          <target state="translated">将当前打击垫设置为打击垫列表中的打击垫 &lt;code&gt;n&lt;/code&gt; ，保存先前的当前打击垫。注意：当前，对于某些编译器，此宏扩展为字符串太长，因此最好将其替换为</target>
        </trans-unit>
        <trans-unit id="1a38250e5b2747407cd2b8722d0b8d14c28da5b4" translate="yes" xml:space="preserve">
          <source>Set the current position, using the opaque value returned by &lt;code&gt;getpos()&lt;/code&gt; . Not yet supported.</source>
          <target state="translated">使用 &lt;code&gt;getpos()&lt;/code&gt; 返回的不透明值设置当前位置。尚不支持。</target>
        </trans-unit>
        <trans-unit id="69382d453505c7bf8a7a7a038d3e295dc3fd2b8c" translate="yes" xml:space="preserve">
          <source>Set the default header to indicate that this page is part of the standard Perl release, if &lt;b&gt;--center&lt;/b&gt; is not also given.</source>
          <target state="translated">设置默认标题，以指示此页面是标准Perl版本的一部分，如果未提供&lt;b&gt;--center的&lt;/b&gt;话。</target>
        </trans-unit>
        <trans-unit id="10c12ebce94e713af1ea1defa218a79b08cdce52" translate="yes" xml:space="preserve">
          <source>Set the directive associated with this token. Used internally to fake TODO tests.</source>
          <target state="translated">设置与此令牌相关的指令。在内部用于伪造TODO测试。</target>
        </trans-unit>
        <trans-unit id="0a16e5af625314bf88ad6b2bec36a4b8e1aa9a05" translate="yes" xml:space="preserve">
          <source>Set the error handling style. &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; says to throw an exception on any POD formatting error. &lt;code&gt;stderr&lt;/code&gt; says to report errors on standard error, but not to throw an exception. &lt;code&gt;pod&lt;/code&gt; says to include a POD ERRORS section in the resulting documentation summarizing the errors. &lt;code&gt;none&lt;/code&gt; ignores POD errors entirely, as much as possible.</source>
          <target state="translated">设置错误处理样式。 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 说对任何POD格式化错误都抛出异常。 &lt;code&gt;stderr&lt;/code&gt; 说要报告有关标准错误的错误，但不要引发异常。 &lt;code&gt;pod&lt;/code&gt; 说在结果文档中包括POD ERRORS部分，以总结错误。 &lt;code&gt;none&lt;/code&gt; 完全忽略POD错误。</target>
        </trans-unit>
        <trans-unit id="c374003f8061a0f37ba1c8b709954cff45ff4c26" translate="yes" xml:space="preserve">
          <source>Set the formatter_class of the harness being run. Since the &lt;code&gt;HARNESS_OPTIONS&lt;/code&gt; is seperated by &lt;code&gt;:&lt;/code&gt; , we use &lt;code&gt;-&lt;/code&gt; instead.</source>
          <target state="translated">设置要运行的线束的formatter_class。由于 &lt;code&gt;HARNESS_OPTIONS&lt;/code&gt; 以 &lt;code&gt;:&lt;/code&gt; 分隔，因此我们使用 &lt;code&gt;-&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="4cd2954ce82dcc6c55f66520ddbd7db9e25038d3" translate="yes" xml:space="preserve">
          <source>Set the highest index in the array to the given number, equivalent to Perl's &lt;code&gt;$#array = $fill;&lt;/code&gt; .</source>
          <target state="translated">将数组中的最高索引设置为给定的数字，相当于Perl的 &lt;code&gt;$#array = $fill;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c9b7103cb01ab810deebdec7c8ba3708db9493b" translate="yes" xml:space="preserve">
          <source>Set the input baud rate.</source>
          <target state="translated">设置输入波特率。</target>
        </trans-unit>
        <trans-unit id="1e1a3bc8ac2300a6771401476bf158aa1fb9f610" translate="yes" xml:space="preserve">
          <source>Set the left-hand footer string to this value. By default, the modification date of the input file will be used, or the current date if input comes from &lt;code&gt;STDIN&lt;/code&gt; .</source>
          <target state="translated">将左侧的页脚字符串设置为此值。默认情况下，将使用输入文件的修改日期，如果输入来自 &lt;code&gt;STDIN&lt;/code&gt; ,则使用当前日期。</target>
        </trans-unit>
        <trans-unit id="64ca0bc6de4e6864f3583e031971a4ee1d5448cd" translate="yes" xml:space="preserve">
          <source>Set the level of debug information for this object. If &lt;code&gt;VALUE&lt;/code&gt; is not given then the current state is returned. Otherwise the state is changed to &lt;code&gt;VALUE&lt;/code&gt; and the previous state returned.</source>
          <target state="translated">设置此对象的调试信息的级别。如果未提供 &lt;code&gt;VALUE&lt;/code&gt; ,则返回当前状态。否则，状态将更改为 &lt;code&gt;VALUE&lt;/code&gt; ,并返回先前的状态。</target>
        </trans-unit>
        <trans-unit id="bf87375566591ae1cf3a120294b92ff86451dd36" translate="yes" xml:space="preserve">
          <source>Set the maximum level. Any higher levels than the specified one are ignored.</source>
          <target state="translated">设置最大级别。比指定等级更高的等级将被忽略。</target>
        </trans-unit>
        <trans-unit id="0d455f6e6aab5e848eef75fedff2472f333772e8" translate="yes" xml:space="preserve">
          <source>Set the name of the manual page to</source>
          <target state="translated">将手册页的名称设置为</target>
        </trans-unit>
        <trans-unit id="13972b9081123782e32921714d08237e9346628e" translate="yes" xml:space="preserve">
          <source>Set the name of the manual page. Without this option, the manual name is set to the uppercased base name of the file being converted unless the manual section is 3, in which case the path is parsed to see if it is a Perl module path. If it is, a path like &lt;code&gt;.../lib/Pod/Man.pm&lt;/code&gt; is converted into a name like &lt;code&gt;Pod::Man&lt;/code&gt; . This option, if given, overrides any automatic determination of the name.</source>
          <target state="translated">设置手册页的名称。如果没有此选项，则除非将手册部分设置为3，否则手册名称将设置为要转换的文件的大写基本名称，在这种情况下，将解析该路径以查看其是否为Perl模块路径。如果是这样，则将 &lt;code&gt;.../lib/Pod/Man.pm&lt;/code&gt; 之类的路径转换为 &lt;code&gt;Pod::Man&lt;/code&gt; 类的名称。如果提供此选项，它将覆盖名称的任何自动确定。</target>
        </trans-unit>
        <trans-unit id="1b12474a7382b60b419fef4621bdea9e461e96f3" translate="yes" xml:space="preserve">
          <source>Set the number of spaces to indent regular text, and the default indentation for &lt;code&gt;=over&lt;/code&gt; blocks. Defaults to 4 spaces if this option isn't given.</source>
          <target state="translated">设置空格数以使常规文本缩进，并为 &lt;code&gt;=over&lt;/code&gt; 块设置默认缩进。如果未提供此选项，则默认为4个空格。</target>
        </trans-unit>
        <trans-unit id="4a08b4fd33e2048d6c4f1c28a1a6b7bdb127bd20" translate="yes" xml:space="preserve">
          <source>Set the number to its absolute value, e.g. change the sign from '-' to '+' and from '-inf' to '+inf', respectively. Does nothing for NaN or positive numbers.</source>
          <target state="translated">将数字设置为绝对值,例如将符号从'-'改为'+',从'-inf'改为'+inf'。对NaN或正数不做任何处理。</target>
        </trans-unit>
        <trans-unit id="e91c823eccd0419f2e6a1e13e049de31dd5cf5fc" translate="yes" xml:space="preserve">
          <source>Set the output baud rate.</source>
          <target state="translated">设置输出波特率。</target>
        </trans-unit>
        <trans-unit id="a4ef2a5ea1c9bb7c5562bc2b2f016d8973a6e1be" translate="yes" xml:space="preserve">
          <source>Set the output color.</source>
          <target state="translated">设置输出颜色。</target>
        </trans-unit>
        <trans-unit id="a4732b9a88448b89c53f22f559150640e50bd14c" translate="yes" xml:space="preserve">
          <source>Set the section for the &lt;code&gt;.TH&lt;/code&gt; macro. The standard section numbering convention is to use 1 for user commands, 2 for system calls, 3 for functions, 4 for devices, 5 for file formats, 6 for games, 7 for miscellaneous information, and 8 for administrator commands. There is a lot of variation here, however; some systems (like Solaris) use 4 for file formats, 5 for miscellaneous information, and 7 for devices. Still others use 1m instead of 8, or some mix of both. About the only section numbers that are reliably consistent are 1, 2, and 3.</source>
          <target state="translated">设置 &lt;code&gt;.TH&lt;/code&gt; 宏的部分。标准部分的编号约定是将1用于用户命令，2用于系统调用，3用于功能，4用于设备，5用于文件格式，6用于游戏，7用于其他信息以及8用于管理员命令。但是，这里有很多变化。某些系统（如Solaris）使用4表示文件格式，使用5表示其他信息，使用7表示设备。还有一些使用1m而不是8m或两者混合使用。关于唯一可靠一致的部分编号是1、2和3。</target>
        </trans-unit>
        <trans-unit id="ff6b57adeb605260c9317d8175c37bce0585fd3f" translate="yes" xml:space="preserve">
          <source>Set the slot at offset &lt;code&gt;po&lt;/code&gt; in the current pad to &lt;code&gt;sv&lt;/code&gt;</source>
          <target state="translated">将当前焊盘中偏移 &lt;code&gt;po&lt;/code&gt; 处的插槽设置为 &lt;code&gt;sv&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4cb27ad4c5eee83092ab663d58aaca30cd70f3d" translate="yes" xml:space="preserve">
          <source>Set the string that is included before the opening &amp;lt;html&amp;gt; tag:</source>
          <target state="translated">设置开始&amp;lt;html&amp;gt;标记之前包含的字符串：</target>
        </trans-unit>
        <trans-unit id="30905183a403c70c69c00e9a32fe1eda8d3eeb11" translate="yes" xml:space="preserve">
          <source>Set the value at offset</source>
          <target state="translated">设置偏移量的值</target>
        </trans-unit>
        <trans-unit id="a829cba7c061fa542b2731502551149a89454ffc" translate="yes" xml:space="preserve">
          <source>Set the value of a numbered capture variable. &lt;code&gt;value&lt;/code&gt; is the scalar that is to be used as the new value. It's up to the engine to make sure this is used as the new value (or reject it).</source>
          <target state="translated">设置编号捕获变量的值。 &lt;code&gt;value&lt;/code&gt; 是将用作新值的标量。由引擎决定是否将此值用作新值（或拒绝它）。</target>
        </trans-unit>
        <trans-unit id="d40cca8b0068b8cf59958fcbe3fe13fb1458d0b1" translate="yes" xml:space="preserve">
          <source>Set the value of one or more options. If the value has internal whitespace, it should be quoted. For example, you could set &lt;code&gt;o
pager=&quot;less -MQeicsNfr&quot;&lt;/code&gt; to call &lt;b&gt;less&lt;/b&gt; with those specific options. You may use either single or double quotes, but if you do, you must escape any embedded instances of same sort of quote you began with, as well as any escaping any escapes that immediately precede that quote but which are not meant to escape the quote itself. In other words, you follow single-quoting rules irrespective of the quote; eg: &lt;code&gt;o option='this isn\'t bad'&lt;/code&gt; or &lt;code&gt;o option=&quot;She said, \&quot;Isn't
it?\&quot;&quot;&lt;/code&gt; .</source>
          <target state="translated">设置一个或多个选项的值。如果该值具有内部空格，则应将其引起来。例如，您可以设置 &lt;code&gt;o pager=&quot;less -MQeicsNfr&quot;&lt;/code&gt; 以使用这些特定选项进行&lt;b&gt;更少的&lt;/b&gt;呼叫。您可以使用单引号或双引号，但是如果这样做，则必须转义与您起初使用的引号相同的任何嵌入式实例，并且必须转义该引号之前的所有转义符，但这些转义符不打算转义引号。本身。换句话说，无论引用如何，都遵循单引号规则。例如： &lt;code&gt;o option='this isn\'t bad'&lt;/code&gt; 或 &lt;code&gt;o option=&quot;She said, \&quot;Isn't it?\&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cc136251cb32fcfbe3d04221687aa62a0883948" translate="yes" xml:space="preserve">
          <source>Set the value of the IV pointer in sv to val. It is possible to perform the same function of this macro with an lvalue assignment to &lt;code&gt;SvIVX&lt;/code&gt; . With future Perls, however, it will be more efficient to use &lt;code&gt;SvIV_set&lt;/code&gt; instead of the lvalue assignment to &lt;code&gt;SvIVX&lt;/code&gt; .</source>
          <target state="translated">将sv中的IV指针的值设置为val。通过为 &lt;code&gt;SvIVX&lt;/code&gt; 分配左值，可以执行此宏的相同功能。但是，在将来的Perls中，使用 &lt;code&gt;SvIV_set&lt;/code&gt; 代替分配给 &lt;code&gt;SvIVX&lt;/code&gt; 的左值将更加有效。</target>
        </trans-unit>
        <trans-unit id="22e4c903a5d72261424a11bc3757c9f4a37a76ba" translate="yes" xml:space="preserve">
          <source>Set the value of the MAGIC pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">将sv中的MAGIC指针的值设置为val。参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a494211327b600de30ab8718fb411a59a7f58c6" translate="yes" xml:space="preserve">
          <source>Set the value of the NV pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">将sv中的NV指针的值设置为val。参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d9c377a0b2e06b10d8641151ba6301894489521" translate="yes" xml:space="preserve">
          <source>Set the value of the PV pointer in &lt;code&gt;sv&lt;/code&gt; to the Perl allocated &lt;code&gt;NUL&lt;/code&gt; -terminated string &lt;code&gt;val&lt;/code&gt; . See also &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">将 &lt;code&gt;sv&lt;/code&gt; 中的PV指针的值设置为Perl分配的 &lt;code&gt;NUL&lt;/code&gt; 终止的字符串 &lt;code&gt;val&lt;/code&gt; 。另请参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="974caccd437c55b24a3029576f3d67323db7a99d" translate="yes" xml:space="preserve">
          <source>Set the value of the RV pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">将sv中的RV指针的值设置为val。参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a4945f80a4ef90380ec198942123c4c53398424" translate="yes" xml:space="preserve">
          <source>Set the value of the STASH pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">将sv中的STASH指针的值设置为val。参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61e2b8af95b67e74054b4785448a38bdfa4d841a" translate="yes" xml:space="preserve">
          <source>Set the value of the UV pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">将sv中的UV指针的值设置为val。参见 &lt;code&gt;SvIV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee3c9044a521bf001f33a0b0f5dc534176c74d5f" translate="yes" xml:space="preserve">
          <source>Set the value that will be embedded in the opening tags of F, C tags and verbatim text. F maps to &amp;lt;em&amp;gt;, C maps to &amp;lt;code&amp;gt;, Verbatim text maps to &amp;lt;pre&amp;gt; (Computerese defaults to &quot;&quot;)</source>
          <target state="translated">设置将嵌入在F，C标签和逐字记录文本的开头标签中的值。F映射到&amp;lt;em&amp;gt;，C映射到&amp;lt;code&amp;gt;，Verbatim文本映射到&amp;lt;pre&amp;gt;（计算机默认为&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="eb7a062a0b6ba69d7136129c02cfec08998ab139" translate="yes" xml:space="preserve">
          <source>Set the verbosity level.</source>
          <target state="translated">设置啰嗦程度。</target>
        </trans-unit>
        <trans-unit id="d5df7fc87263e18096be39ec6768717dbc7ae7d2" translate="yes" xml:space="preserve">
          <source>Set the verbosity level:</source>
          <target state="translated">设置啰嗦程度。</target>
        </trans-unit>
        <trans-unit id="194f7ae4760084100ac6e9d46a1742704127659d" translate="yes" xml:space="preserve">
          <source>Set this value to true if you don't want the formatter to try putting a hidden code on all Perl symbols (as best as it can notice them) that labels them as being not in English, and so not worth spellchecking.</source>
          <target state="translated">如果你不想让格式化程序在所有Perl符号上加一个隐藏的代码(在它能注意到的范围内),标明它们不是英文,所以不值得拼写检查,就把这个值设置为true。</target>
        </trans-unit>
        <trans-unit id="6fd106288bdb4ff77709d6356213cdc720c68b6d" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;0&lt;/code&gt; if you do not want any warnings printed. Personally I recommend against doing this, but people asked for the option. Also, be advised that this is of course not threadsafe.</source>
          <target state="translated">如果您不想打印任何警告，请将此变量设置为 &lt;code&gt;0&lt;/code&gt; 。我个人不建议这样做，但是人们要求这样做。另外，请注意，这当然不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="30679c688aa273db6ac778240eaadb8fcf96dea6" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;1&lt;/code&gt; to always get the &lt;code&gt;Carp::longmess&lt;/code&gt; output of the warnings, instead of the regular &lt;code&gt;carp&lt;/code&gt; . This is the same message you would get by doing:</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 总是获得警告的 &lt;code&gt;Carp::longmess&lt;/code&gt; 输出，而不是常规 &lt;code&gt;carp&lt;/code&gt; 。这是通过执行以下操作将得到的相同消息：</target>
        </trans-unit>
        <trans-unit id="ccf2a66ca30e8eff3f9eec8d1c8f7819471b7948" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;1&lt;/code&gt; to make &lt;code&gt;Archive::Tar&lt;/code&gt; effectively make a copy of the file when extracting. Default is &lt;code&gt;0&lt;/code&gt; , which means the symlink stays intact. Of course, you will have to pack the file linked to as well.</source>
          <target state="translated">将此变量设置为 &lt;code&gt;1&lt;/code&gt; 可使 &lt;code&gt;Archive::Tar&lt;/code&gt; 在提取时有效地复制文件。默认值为 &lt;code&gt;0&lt;/code&gt; ，这意味着符号链接保持完整。当然，您也必须打包链接到的文件。</target>
        </trans-unit>
        <trans-unit id="383aacff95eb6a78e74e64bda42dfd0cbc4da0e9" translate="yes" xml:space="preserve">
          <source>Set to 1 and the md5sum of files will be returned (instead of file data) my $iter = Archive::Tar-&amp;gt;iter( $file, 1, {md5 =&amp;gt; 1} ); while( my $f = $iter-&amp;gt;() ) { print $f-&amp;gt;data . &quot;\t&quot; . $f-&amp;gt;full_path . $/; }</source>
          <target state="translated">设置为1，将返回文件的md5sum（而不是文件数据）my $ iter = Archive :: Tar-&amp;gt; iter（$ file，1，{md5 =&amp;gt; 1}）; while（my $ f = $ iter-&amp;gt;（））{打印$ f-&amp;gt; data。&amp;ldquo; \ t&amp;rdquo;。$ f-&amp;gt; full_path。$ /; }</target>
        </trans-unit>
        <trans-unit id="0e0a386d8dc4c1874b46a680e437e74ee0ffba92" translate="yes" xml:space="preserve">
          <source>Set to 1 to allow the use of non-IFS compatible LSPs (Layered Service Providers). Perl normally searches for an IFS-compatible LSP because this is required for its emulation of Windows sockets as real filehandles. However, this may cause problems if you have a firewall such as</source>
          <target state="translated">设置为1,允许使用非IFS兼容的LSP(分层服务提供者)。Perl通常会搜索一个IFS兼容的LSP,因为这是将Windows套接字模拟为真实文件柄所必需的。然而,如果你有一个防火墙,例如</target>
        </trans-unit>
        <trans-unit id="987c16056188115f9ec16c909bb6308c3ba73d79" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&quot;1&quot;&lt;/code&gt; to have Perl resolve</source>
          <target state="translated">设置为 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 以解决Perl</target>
        </trans-unit>
        <trans-unit id="cc83033c6d49c4dc40d2c5e241cb0a6ce60549f1" translate="yes" xml:space="preserve">
          <source>Set to a true value to normalize the TAP that is emitted in verbose modes.</source>
          <target state="translated">设置为真值,以规范在verbose模式下发出的TAP。</target>
        </trans-unit>
        <trans-unit id="546342f8d8f12d542539c974b91270e85e9f6de4" translate="yes" xml:space="preserve">
          <source>Set to false to silence warnings. Inspect the output of the &lt;code&gt;error()&lt;/code&gt; method manually to see what went wrong.</source>
          <target state="translated">设置为false可使警告静音。手动检查 &lt;code&gt;error()&lt;/code&gt; 方法的输出以查看出了什么问题。</target>
        </trans-unit>
        <trans-unit id="834dbdc33e6a642f5eddbc75564f9d8b610489f4" translate="yes" xml:space="preserve">
          <source>Set up a module that does a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; and then calls &lt;code&gt;FILTER { ... }&lt;/code&gt; .</source>
          <target state="translated">设置一个 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; 的模块，然后调用 &lt;code&gt;FILTER { ... }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73a34667fa5cc5eb569d7c1aef07a1af8859d495" translate="yes" xml:space="preserve">
          <source>Set up a module that does a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Util::Call&lt;/code&gt; .</source>
          <target state="translated">设置一个 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Util::Call&lt;/code&gt; 的模块。</target>
        </trans-unit>
        <trans-unit id="5e688569ed0e829b38315a3e8fcf014d5ccc4ea2" translate="yes" xml:space="preserve">
          <source>Set up necessary local variables for exception handling. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">设置必要的局部变量以进行异常处理。请参阅&lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlguts中的异常处理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e4838c0ccda6d92839ab4417c66fdd6b838d3e4" translate="yes" xml:space="preserve">
          <source>Set what type of data channel protection the client and server will be using. Only &lt;code&gt;LEVEL&lt;/code&gt; s &quot;C&quot; (clear) and &quot;P&quot; (private) are supported.</source>
          <target state="translated">设置客户端和服务器将使用哪种类型的数据通道保护。仅支持 &lt;code&gt;LEVEL&lt;/code&gt; 的&amp;ldquo; C&amp;rdquo;（清除）和&amp;ldquo; P&amp;rdquo;（专用）。</target>
        </trans-unit>
        <trans-unit id="0f18d395c62f798a17ecac938a24ac02d508300b" translate="yes" xml:space="preserve">
          <source>Set whether or not the connect behavior should enforce remote service availability as well as reachability. Normally, if the remote server reported ECONNREFUSED, it must have been reachable because of the status packet that it reported. With this option enabled, the full three-way tcp handshake must have been established successfully before it will claim it is reachable. NOTE: It still does nothing more than connect and disconnect. It does not speak any protocol (i.e., HTTP or FTP) to ensure the remote server is sane in any way. The remote server CPU could be grinding to a halt and unresponsive to any clients connecting, but if the kernel throws the ACK packet, it is considered alive anyway. To really determine if the server is responding well would be application specific and is beyond the scope of Net::Ping. For udp protocol, enabling this option demands that the remote server replies with the same udp data that it was sent as defined by the udp echo service.</source>
          <target state="translated">设置连接行为是否应该强制执行远程服务可用性以及可到达性。通常情况下,如果远程服务器报告的是ECONNREFUSED,那么它一定是可以到达的,因为它报告的是状态包。启用这个选项后,必须在成功建立完整的三方tcp握手后,它才会声称自己是可到达的。注意:它仍然只是连接和断开连接。它不讲任何协议(即HTTP或FTP),以任何方式确保远程服务器是正常的。远程服务器的CPU可能会陷入瘫痪,对任何客户端的连接都没有反应,但如果内核抛出ACK包,它就被认为是活着的。要真正确定服务器是否有良好的响应是特定的应用程序,而且超出了Net::Ping的范围。对于udp协议,启用这个选项需要远程服务器使用与udp echo服务定义的相同的udp数据进行回复。</target>
        </trans-unit>
        <trans-unit id="a07a8228695d929da97229f651f30da0684bf45b" translate="yes" xml:space="preserve">
          <source>Set/get the class for downgrade/upgrade operations. Thuis is used for instance by &lt;a href=&quot;../bignum&quot;&gt;bignum&lt;/a&gt;. The defaults are '', thus the following operation will create a BigInt, not a BigFloat:</source>
          <target state="translated">设置/获取用于降级/升级操作的类。例如，&lt;a href=&quot;../bignum&quot;&gt;bignum&lt;/a&gt;使用了Thuis。默认值为''，因此以下操作将创建一个BigInt而不是一个BigFloat：</target>
        </trans-unit>
        <trans-unit id="691f046ca0340609c296b4c74a67356c9723a876" translate="yes" xml:space="preserve">
          <source>Set/get the current round mode.</source>
          <target state="translated">设置/获取当前的轮回模式。</target>
        </trans-unit>
        <trans-unit id="37d56e2c5033e2c05ba27dafc68fc7e7f70db64b" translate="yes" xml:space="preserve">
          <source>Set/get the number of digits for the default precision in divide operations.</source>
          <target state="translated">设置/获取除法运算中默认精度的位数。</target>
        </trans-unit>
        <trans-unit id="18b8ca3f3f3965e8a4d0e32c6680ecb26c5b068b" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD document name (e.g. &quot;Pod::Parser&quot;).</source>
          <target state="translated">设置/检索POD文档名称(如 &quot;Pod::Parser&quot;)。</target>
        </trans-unit>
        <trans-unit id="87ce229873ff022aa8725cfc84a33e2e54210869" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD file name.</source>
          <target state="translated">设置/找回POD文件名。</target>
        </trans-unit>
        <trans-unit id="5515910de1d3463cece3939b2b845d2ea822ab16" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD file storage path.</source>
          <target state="translated">设置/找回POD文件存储路径。</target>
        </trans-unit>
        <trans-unit id="54c04c07b3166e5540744836415a0e65a4cf9f82" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD short description as found in the &lt;code&gt;=head1 NAME&lt;/code&gt; section.</source>
          <target state="translated">设置/获取POD简短描述，该描述在 &lt;code&gt;=head1 NAME&lt;/code&gt; 部分中找到。</target>
        </trans-unit>
        <trans-unit id="f0459ef370f13af05319975f24455e8cb8659f84" translate="yes" xml:space="preserve">
          <source>Set/retrieve the textual value of the link. This string contains special markers &lt;code&gt;P&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;Q&amp;lt;&amp;gt;&lt;/code&gt; that should be expanded by the translator's interior sequence expansion engine to the formatter-specific code to highlight/activate the hyperlink. The details have to be implemented in the translator.</source>
          <target state="translated">设置/获取链接的文本值。此字符串包含特殊标记 &lt;code&gt;P&amp;lt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;Q&amp;lt;&amp;gt;&lt;/code&gt; ，这些标记应由翻译者的内部序列扩展引擎扩展为特定于格式设置的代码，以突出显示/激活超链接。细节必须在翻译器中实现。</target>
        </trans-unit>
        <trans-unit id="419764a46761f0fffa0aea35a7f43cfa71691b84" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Perl_rc&lt;/code&gt; to &lt;code&gt;rc&lt;/code&gt; , and sets $^E to the corresponding value.</source>
          <target state="translated">将 &lt;code&gt;Perl_rc&lt;/code&gt; 设置为 &lt;code&gt;rc&lt;/code&gt; ，并将$ ^ E设置为相应的值。</target>
        </trans-unit>
        <trans-unit id="63d789ee5142a732c194f4cb7f568e6b7dd23323" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Perl_rc&lt;/code&gt; to the return value of WinGetLastError(), and sets $^E to the corresponding value.</source>
          <target state="translated">将 &lt;code&gt;Perl_rc&lt;/code&gt; 设置为WinGetLastError（）的返回值，并将$ ^ E设置为相应的值。</target>
        </trans-unit>
        <trans-unit id="de7e955a511acb169ac3ac70a054207750d70232" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Perl_rc&lt;/code&gt; to the return value of WinGetLastError().</source>
          <target state="translated">将 &lt;code&gt;Perl_rc&lt;/code&gt; 设置为WinGetLastError（）的返回值。</target>
        </trans-unit>
        <trans-unit id="fa98fad37059e0f6a0224425b5d152583e99f44d" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;compactDump&lt;/code&gt; and &lt;code&gt;veryCompact&lt;/code&gt; options simultaneously.</source>
          <target state="translated">同时设置 &lt;code&gt;compactDump&lt;/code&gt; 和 &lt;code&gt;veryCompact&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="d1ec724f2d81ce2a30fc1934fd14acd2f79f0c80" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;compactDump&lt;/code&gt; option. If the value is 1, sets to a reasonable big number.</source>
          <target state="translated">设置 &lt;code&gt;compactDump&lt;/code&gt; 选项。如果值为1，则设置为合理的大数。</target>
        </trans-unit>
        <trans-unit id="bf62caf04c459720678a2165a622ec33f206a57f" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;tick&lt;/code&gt; and &lt;code&gt;unctrl&lt;/code&gt; options to suitable values for printout with the given quote char. Possible values are &lt;code&gt;auto&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;tick&lt;/code&gt; 和 &lt;code&gt;unctrl&lt;/code&gt; 选项设置为合适的值，以使用给定的报价char进行打印。可能的值为 &lt;code&gt;auto&lt;/code&gt; ， &lt;code&gt;'&lt;/code&gt; 和 &lt;code&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f2eb3a09d485c46a23ddef7fa09e4c2212f3e2c" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;unctrl&lt;/code&gt; option with checking for an invalid argument. Possible values are &lt;code&gt;unctrl&lt;/code&gt; and &lt;code&gt;quote&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;unctrl&lt;/code&gt; 选项，以检查是否有无效的参数。可能的值为 &lt;code&gt;unctrl&lt;/code&gt; 和 &lt;code&gt;quote&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45e333dd26438c1a1300c286b84cba0c915c5552" translate="yes" xml:space="preserve">
          <source>Sets DEV_NULL to nothing because I don't know how to do it on VMS.</source>
          <target state="translated">将DEV_NULL设置为无,因为我不知道如何在VMS上做。</target>
        </trans-unit>
        <trans-unit id="8a3a24fcacbf3045f6de9c146889add9f9588b1b" translate="yes" xml:space="preserve">
          <source>Sets FILEHANDLE's position, just like the &lt;code&gt;fseek&lt;/code&gt; call of &lt;code&gt;stdio&lt;/code&gt; . FILEHANDLE may be an expression whose value gives the name of the filehandle. The values for WHENCE are &lt;code&gt;0&lt;/code&gt; to set the new position</source>
          <target state="translated">设置FILEHANDLE的位置，就像 &lt;code&gt;stdio&lt;/code&gt; 的 &lt;code&gt;fseek&lt;/code&gt; 调用一样。FILEHANDLE可以是一个表达式，其值给出文件句柄的名称。WHENCE的 &lt;code&gt;0&lt;/code&gt; 以设置新位置</target>
        </trans-unit>
        <trans-unit id="3cce28c93400f831accb05f30b475b61e877d939" translate="yes" xml:space="preserve">
          <source>Sets FILEHANDLE's system position in bytes using lseek(2). FILEHANDLE may be an expression whose value gives the name of the filehandle. The values for WHENCE are &lt;code&gt;0&lt;/code&gt; to set the new position to POSITION; &lt;code&gt;1&lt;/code&gt; to set the it to the current position plus POSITION; and &lt;code&gt;2&lt;/code&gt; to set it to EOF plus POSITION, typically negative.</source>
          <target state="translated">使用lseek（2）以字节为单位设置FILEHANDLE的系统位置。FILEHANDLE可以是一个表达式，其值给出文件句柄的名称。WHENCE的 &lt;code&gt;0&lt;/code&gt; 以将新位置设置为POSITION； &lt;code&gt;1&lt;/code&gt; 将其设置为当前位置加上POSITION；和 &lt;code&gt;2&lt;/code&gt; 将其设置为EOF加POSITION，通常为负数。</target>
        </trans-unit>
        <trans-unit id="bb1b911e2c7e353c665b4c26821503bb0c47fef5" translate="yes" xml:space="preserve">
          <source>Sets PERL_SKIP_TTY_TEST to true before running normal test.</source>
          <target state="translated">在运行正常测试之前,将PERL_SKIP_TTY_TEST设置为true。</target>
        </trans-unit>
        <trans-unit id="0418ff3145cb972dc7d9a0b1a71a1ef6cf8cba37" translate="yes" xml:space="preserve">
          <source>Sets PL_defoutgv, the default file handle for output, to the passed in typeglob. As PL_defoutgv &quot;owns&quot; a reference on its typeglob, the reference count of the passed in typeglob is increased by one, and the reference count of the typeglob that PL_defoutgv points to is decreased by one.</source>
          <target state="translated">将输出的默认文件句柄PL_defoutgv设置为传入的typeglob。由于PL_defoutgv在它的typeglob上 &quot;拥有 &quot;一个引用,所以传递进来的typeglob的引用数增加1,PL_defoutgv指向的typeglob的引用数减少1。</target>
        </trans-unit>
        <trans-unit id="a32ecc2237c7ab3fc00a5757f0738e34dae88a22" translate="yes" xml:space="preserve">
          <source>Sets UNIX like permissions 'mode' on all the files. e.g. 0666</source>
          <target state="translated">为所有文件设置类似UNIX的权限 &quot;模式&quot;,例如:0666</target>
        </trans-unit>
        <trans-unit id="38d605da2e9eb3427c6a2a3cdec1e9c177ee521f" translate="yes" xml:space="preserve">
          <source>Sets a breakpoint before the first statement executed after the specified subroutine is compiled.</source>
          <target state="translated">在指定子程序编译后执行的第一条语句前设置一个断点。</target>
        </trans-unit>
        <trans-unit id="ebf27016895d9056071f474212eb987eed42917c" translate="yes" xml:space="preserve">
          <source>Sets a new default per-thread stack size, and returns the previous setting.</source>
          <target state="translated">设置新的默认每线程堆栈大小,并返回之前的设置。</target>
        </trans-unit>
        <trans-unit id="2c55e7129849ec0fb7e59b5665f0386b97faf02a" translate="yes" xml:space="preserve">
          <source>Sets all values in the semaphore set to those given on the &lt;code&gt;VALUES&lt;/code&gt; list. &lt;code&gt;VALUES&lt;/code&gt; must contain the correct number of values.</source>
          <target state="translated">将信号量集中的所有值设置为 &lt;code&gt;VALUES&lt;/code&gt; 列表中给定的值。 &lt;code&gt;VALUES&lt;/code&gt; 必须包含正确数量的值。</target>
        </trans-unit>
        <trans-unit id="836b026ce35e78f78f71560f079ca22225c6fe9a" translate="yes" xml:space="preserve">
          <source>Sets and returns the random number seed for the &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">设置并返回 &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; 运算符的随机数种子。</target>
        </trans-unit>
        <trans-unit id="4e983d1284c4a007e72e6fbd7d1a4c9631581eec" translate="yes" xml:space="preserve">
          <source>Sets and returns the random number seed for the &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">设置并返回 &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; 运算符的随机数种子。</target>
        </trans-unit>
        <trans-unit id="618d6fee27357361ed90e8b7f4220edca50b6a1a" translate="yes" xml:space="preserve">
          <source>Sets breakpoint on current line</source>
          <target state="translated">设置当前行的断点</target>
        </trans-unit>
        <trans-unit id="2cc89d204452a8656dcaf4c4306e33ee025f58fe" translate="yes" xml:space="preserve">
          <source>Sets file position in FILEHANDLE to be first line greater than or equal (stringwise) to</source>
          <target state="translated">将FILEHANDLE中的文件位置设置为第一行大于或等于(字符串上)FILEHANDLE的位置。</target>
        </trans-unit>
        <trans-unit id="b0fc60baba67f86b5e1c8062d116af997854f9df" translate="yes" xml:space="preserve">
          <source>Sets modified time of destination to that of source.</source>
          <target state="translated">将目标时间修改为源时间。</target>
        </trans-unit>
        <trans-unit id="644b7fcbb973cd9c06effd39831ad990dfaef35a" translate="yes" xml:space="preserve">
          <source>Sets or returns an alternative text specified in the link.</source>
          <target state="translated">设置或返回链接中指定的备选文本。</target>
        </trans-unit>
        <trans-unit id="1c22fdeace66367c0da67c7386d2f4f5e2c3a1f1" translate="yes" xml:space="preserve">
          <source>Sets the MRO of the given class to the &lt;code&gt;$type&lt;/code&gt; argument (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; ).</source>
          <target state="translated">将给定类的MRO设置为 &lt;code&gt;$type&lt;/code&gt; 参数（ &lt;code&gt;c3&lt;/code&gt; 或 &lt;code&gt;dfs&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fde4a46e40fb48045c09644691e377f0ba99e8f1" translate="yes" xml:space="preserve">
          <source>Sets the MTIME field in the gzip header to $number.</source>
          <target state="translated">将gzip头中的MTIME字段设置为$number。</target>
        </trans-unit>
        <trans-unit id="d43065cf70ac0a8eb19c630d78e3d81648e2753b" translate="yes" xml:space="preserve">
          <source>Sets the XFL byte in the gzip header to &lt;code&gt;$value&lt;/code&gt; .</source>
          <target state="translated">将gzip标头中的XFL字节设置为 &lt;code&gt;$value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e028d291d4fde41fe0a3fdd9a42628da1f89b203" translate="yes" xml:space="preserve">
          <source>Sets the base URL for the HTML files. When cross-references are made, the HTML root is prepended to the URL.</source>
          <target state="translated">设置HTML文件的基本URL。当进行交叉引用时,HTML根目录会被预置到URL中。</target>
        </trans-unit>
        <trans-unit id="5264f30df0b2d9d3f6c49b4d8c0750b7451ab2df" translate="yes" xml:space="preserve">
          <source>Sets the centered page header to</source>
          <target state="translated">将页眉居中设置为</target>
        </trans-unit>
        <trans-unit id="636257c1cd11b9ecb3439e7f89cb2f6bb499ffb2" translate="yes" xml:space="preserve">
          <source>Sets the centered page header to use instead of &quot;User Contributed Perl Documentation&quot;.</source>
          <target state="translated">设置要使用居中的页眉来代替 &quot;User Contributed Perl Documentation&quot;。</target>
        </trans-unit>
        <trans-unit id="7c65fa2c8bdd4ae594981736a5e8e9ff7d7aa453" translate="yes" xml:space="preserve">
          <source>Sets the config variable KEY to VALUE. The empty string can be specified as usual in shells, with &lt;code&gt;''&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">将配置变量KEY设置为VALUE。可以照常在shell中使用 &lt;code&gt;''&lt;/code&gt; 或 &lt;code&gt;&quot;&quot;&lt;/code&gt; 指定空字符串</target>
        </trans-unit>
        <trans-unit id="12fa70009ccfd49c6a19a03ced68f6ca52304c2e" translate="yes" xml:space="preserve">
          <source>Sets the current &lt;code&gt;cutting&lt;/code&gt; state to the given value and returns the result.</source>
          <target state="translated">将当前 &lt;code&gt;cutting&lt;/code&gt; 状态设置为给定值并返回结果。</target>
        </trans-unit>
        <trans-unit id="9c6107fe87d551884ecb7deee2ee53b3ef11fce7" translate="yes" xml:space="preserve">
          <source>Sets the current position for the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE. POS must be a value returned by &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; also has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">在DIRHANDLE上设置 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 例程的当前位置。POS必须是 &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; 返回的值。 &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; 对于可能的目录压缩也具有与相应的系统库例程相同的警告。</target>
        </trans-unit>
        <trans-unit id="9e3ecdb54a0f348732126e86e4c3fec0047045ef" translate="yes" xml:space="preserve">
          <source>Sets the current position for the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE. POS must be a value returned by &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; also has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">在DIRHANDLE上设置 &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 例程的当前位置。POS必须是 &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; 返回的值。 &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; 对于可能的目录压缩也具有与相应的系统库例程相同的警告。</target>
        </trans-unit>
        <trans-unit id="30be77264aa234a4268b758bb5e6c9d2e1a0feb9" translate="yes" xml:space="preserve">
          <source>Sets the current position to the beginning of the directory for the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE.</source>
          <target state="translated">将当前位置设置为DIRHANDLE上 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 例程的目录的开头。</target>
        </trans-unit>
        <trans-unit id="be5280cc0cd78c81604e4b1cafeaedf7e270c73b" translate="yes" xml:space="preserve">
          <source>Sets the current position to the beginning of the directory for the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE.</source>
          <target state="translated">将当前位置设置为DIRHANDLE上 &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 例程的目录的开头。</target>
        </trans-unit>
        <trans-unit id="8641202e53c20978a82abe0aaed8f374c2ee88ed" translate="yes" xml:space="preserve">
          <source>Sets the current priority for a process, a process group, or a user. (See setpriority(2).) Raises an exception when used on a machine that doesn't implement setpriority(2).</source>
          <target state="translated">设置一个进程、一个进程组或一个用户的当前优先级。(参见 setpriority(2)。)在没有实现 setpriority(2)的机器上使用时会引发异常。</target>
        </trans-unit>
        <trans-unit id="de415dc26fe0167b813d8b41becb203c77bcf037" translate="yes" xml:space="preserve">
          <source>Sets the current process group for the specified PID, &lt;code&gt;0&lt;/code&gt; for the current process. Raises an exception when used on a machine that doesn't implement POSIX setpgid(2) or BSD setpgrp(2). If the arguments are omitted, it defaults to &lt;code&gt;0,0&lt;/code&gt; . Note that the BSD 4.2 version of &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; does not accept any arguments, so only &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; is portable. See also &lt;code&gt;POSIX::setsid()&lt;/code&gt; .</source>
          <target state="translated">为指定的PID设置当前进程组，为当前进程设置 &lt;code&gt;0&lt;/code&gt; 。在未实现POSIX setpgid（2）或BSD setpgrp（2）的计算机上使用时引发异常。如果省略参数，则默认为 &lt;code&gt;0,0&lt;/code&gt; 。请注意，BSD 4.2版本的 &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; 不接受任何参数，因此只有 &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; 是可移植的。参见 &lt;code&gt;POSIX::setsid()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="241ef80b4a2a966bef7fdabf75b36a0a852743fd" translate="yes" xml:space="preserve">
          <source>Sets the current process group for the specified PID, &lt;code&gt;0&lt;/code&gt; for the current process. Raises an exception when used on a machine that doesn't implement POSIX setpgid(2) or BSD setpgrp(2). If the arguments are omitted, it defaults to &lt;code&gt;0,0&lt;/code&gt; . Note that the BSD 4.2 version of &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; does not accept any arguments, so only &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; is portable. See also &lt;code&gt;POSIX::setsid()&lt;/code&gt; .</source>
          <target state="translated">为指定的PID设置当前进程组，为当前进程设置 &lt;code&gt;0&lt;/code&gt; 。在未实现POSIX setpgid（2）或BSD setpgrp（2）的计算机上使用时引发异常。如果省略参数，则默认为 &lt;code&gt;0,0&lt;/code&gt; 。请注意，BSD 4.2版本的 &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; 不接受任何参数，因此只有 &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; 是可移植的。参见 &lt;code&gt;POSIX::setsid()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f75284aa5b437fc82cf79d56b0ff94804625a6c5" translate="yes" xml:space="preserve">
          <source>Sets the directory to which all cross references in the resulting HTML file will be relative. Not passing this causes all links to be absolute since this is the value that tells Pod::Html the root of the documentation tree.</source>
          <target state="translated">设置生成的HTML文件中所有交叉引用的相对目录。不传递这个值会导致所有的链接都是绝对的,因为这个值会告诉Pod::Html文件树的根。</target>
        </trans-unit>
        <trans-unit id="a3ab1b7e6bbd6a8e94f997553f1dc4e778b5287a" translate="yes" xml:space="preserve">
          <source>Sets the directory to which all cross references in the resulting html file will be relative. Not passing this causes all links to be absolute since this is the value that tells Pod::Html the root of the documentation tree.</source>
          <target state="translated">设置生成的html文件中所有交叉引用的相对目录。不传递这个值会导致所有的链接都是绝对的,因为这个值会告诉Pod::Html文件树的根目录。</target>
        </trans-unit>
        <trans-unit id="88c79ef3e6324c22574d5016c69c76a2e1bc9009" translate="yes" xml:space="preserve">
          <source>Sets the floating point rounding mode, see &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;.</source>
          <target state="translated">设置浮点舍入模式，请参见&lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46227126063f2ea245a077112e75b448294c804c" translate="yes" xml:space="preserve">
          <source>Sets the function that will be used to fix up a call to</source>
          <target state="translated">设置将用于固定调用到</target>
        </trans-unit>
        <trans-unit id="3ca97d8d4ea19ed97199f2a27770c7e465fe2399" translate="yes" xml:space="preserve">
          <source>Sets the generation number of the name at offset &lt;code&gt;po&lt;/code&gt; in the current ling pad (lvalue) to &lt;code&gt;gen&lt;/code&gt; . Note that &lt;code&gt;SvUV_set&lt;/code&gt; is hijacked for this purpose.</source>
          <target state="translated">将当前连接垫（左值）在偏移 &lt;code&gt;po&lt;/code&gt; 处的名称的生成编号设置为 &lt;code&gt;gen&lt;/code&gt; 。请注意，为此目的劫持了 &lt;code&gt;SvUV_set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f344c852d3e03fd145a036b4917130abaa308bdd" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the deflation buffer. If the buffer has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">设置放气缓冲区的初始大小。如果必须重新分配缓冲区以增加大小，它将以 &lt;code&gt;Bufsize&lt;/code&gt; 的增量增长。</target>
        </trans-unit>
        <trans-unit id="fe9376b4142de714d0978819d6ad38a5e8dbbabf" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the inflation buffer. If the buffer has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">设置通胀缓冲的初始大小。如果必须重新分配缓冲区以增加大小，它将以 &lt;code&gt;Bufsize&lt;/code&gt; 的增量增长。</target>
        </trans-unit>
        <trans-unit id="b91bb4c078fc7d0a126636b0334a9745decc8767" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the output buffer used by the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods. If the buffer has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; 和 &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; 方法使用的输出缓冲区的初始大小。如果必须重新分配缓冲区以增加大小，它将以 &lt;code&gt;Bufsize&lt;/code&gt; 的增量增长。</target>
        </trans-unit>
        <trans-unit id="f66e2b7f1166adb8a82f61d0398a2b4c8f9f144a" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the output buffer used by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method. If the output buffer in this method has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; 方法使用的输出缓冲区的初始大小。如果必须重新分配此方法中的输出缓冲区以增加大小，它将以 &lt;code&gt;Bufsize&lt;/code&gt; 的增量增长。</target>
        </trans-unit>
        <trans-unit id="f44beb7ce8c6cb2ef09cc7354d148af06cfd3d64" translate="yes" xml:space="preserve">
          <source>Sets the key to a given &lt;code&gt;SV*&lt;/code&gt; , taking care to set the appropriate flags to indicate the presence of an &lt;code&gt;SV*&lt;/code&gt; key, and returns the same &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">将密钥设置为给定的 &lt;code&gt;SV*&lt;/code&gt; ，注意设置适当的标志以指示 &lt;code&gt;SV*&lt;/code&gt; 密钥的存在，并返回相同的 &lt;code&gt;SV*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15e89128170b4ceee0bf4ce373fab73b9a97c332" translate="yes" xml:space="preserve">
          <source>Sets the last modified time field in the zip header to $number.</source>
          <target state="translated">将zip头中最后修改的时间字段设置为$number。</target>
        </trans-unit>
        <trans-unit id="38b389d97514c7bb25db24ba526bedb9f8b2216d" translate="yes" xml:space="preserve">
          <source>Sets the left-hand footer. By default, the modification date of the input file will be used, or the current date if stat() can't find that file (the case if the input is from &lt;code&gt;STDIN&lt;/code&gt; ), and the date will be formatted as &lt;code&gt;YYYY-MM-DD&lt;/code&gt; .</source>
          <target state="translated">设置左侧的页脚。默认情况下，将使用输入文件的修改日期，如果stat（）找不到该文件，则使用当前日期（如果输入来自 &lt;code&gt;STDIN&lt;/code&gt; ），日期将被格式化为 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d105f6277e2009539c1ac8e150df2092a6d8f644" translate="yes" xml:space="preserve">
          <source>Sets the log mask for the current process to &lt;code&gt;$mask_priority&lt;/code&gt; and returns the old mask. If the mask argument is 0, the current log mask is not modified. See &lt;a href=&quot;#Levels&quot;&gt;Levels&lt;/a&gt; for the list of available levels. You can use the &lt;code&gt;LOG_UPTO()&lt;/code&gt; function to allow all levels up to a given priority (but it only accept the numeric macros as arguments).</source>
          <target state="translated">将当前进程的日志掩码设置为 &lt;code&gt;$mask_priority&lt;/code&gt; 并返回旧掩码。如果mask参数为0，则不会修改当前的日志掩码。请参阅&lt;a href=&quot;#Levels&quot;&gt;级别&lt;/a&gt;以获取可用级别列表。您可以使用 &lt;code&gt;LOG_UPTO()&lt;/code&gt; 函数来允许所有级别达到给定的优先级（但它仅接受数字宏作为参数）。</target>
        </trans-unit>
        <trans-unit id="82edfdb50dedbcc054fea4a76a2bd3b980946f83" translate="yes" xml:space="preserve">
          <source>Sets the maximum time the command is allowed to run before aborting, using the built-in &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; call. If the timeout is triggered, the &lt;code&gt;errorcode&lt;/code&gt; in the return value will be set to an object of the &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; class. See the &lt;a href=&quot;#error-message&quot;&gt;error message&lt;/a&gt; section below for details.</source>
          <target state="translated">使用内置的 &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; 调用来设置中止命令之前允许运行的最长时间。如果触发了超时，则返回值中的 &lt;code&gt;errorcode&lt;/code&gt; 将设置为 &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; 类的对象。有关详细信息，请参见下面的&lt;a href=&quot;#error-message&quot;&gt;错误消息&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="682fa9cf99d050c0fba7523085ad62faa4146524" translate="yes" xml:space="preserve">
          <source>Sets the prototype of the function given by the &lt;code&gt;$code&lt;/code&gt; reference, or deletes it if &lt;code&gt;$prototype&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Returns the &lt;code&gt;$code&lt;/code&gt; reference itself.</source>
          <target state="translated">设置 &lt;code&gt;$code&lt;/code&gt; 参考给出的函数原型，如果 &lt;code&gt;$prototype&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，则将其删除。返回 &lt;code&gt;$code&lt;/code&gt; 引用本身。</target>
        </trans-unit>
        <trans-unit id="7d70a908eb9214fc5d1f6c0a57f83628d66e50e0" translate="yes" xml:space="preserve">
          <source>Sets the quote marks used to surround C&amp;lt;&amp;gt; text to</source>
          <target state="translated">将用于包围C &amp;lt;&amp;gt;文本的引号设置为</target>
        </trans-unit>
        <trans-unit id="444c29bfbf96689f054e0998ba5d7d599a625105" translate="yes" xml:space="preserve">
          <source>Sets the quote marks used to surround C&amp;lt;&amp;gt; text. If the value is a single character, it is used as both the left and right quote; if it is two characters, the first character is used as the left quote and the second as the right quoted; and if it is four characters, the first two are used as the left quote and the second two as the right quote.</source>
          <target state="translated">设置用于包围C &amp;lt;&amp;gt;文本的引号。如果值是单个字符，则将其用作左引号和右引号；否则，将其用作左引号。如果是两个字符，则第一个字符用作左引号，第二个字符用作右引号；如果是四个字符，则前两个用作左引号，后两个用作右引号。</target>
        </trans-unit>
        <trans-unit id="3a0b233eb34eea305c7c4099287c812f67d2ec7d" translate="yes" xml:space="preserve">
          <source>Sets the real group identifier and the effective group identifier for this process. Similar to assigning a value to the Perl's builtin &lt;code&gt;$)&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24EGID&quot;&gt;$EGID in perlvar&lt;/a&gt;, except that the latter will change only the real user identifier, and that the setgid() uses only a single numeric argument, as opposed to a space-separated list of numbers.</source>
          <target state="translated">设置此过程的真实组标识符和有效组标识符。与为Perl的内置 &lt;code&gt;$)&lt;/code&gt; 变量分配值类似，请参见&lt;a href=&quot;perlvar#%24EGID&quot;&gt;perlvar中的$ EGID&lt;/a&gt;，不同之处在于后者将仅更改实际用户标识符，并且setgid（）仅使用单个数字参数，而不是空格。分开的数字列表。</target>
        </trans-unit>
        <trans-unit id="6446262a06e2d17b931d62f0fce95ea62dd1b18f" translate="yes" xml:space="preserve">
          <source>Sets the real user identifier and the effective user identifier for this process. Similar to assigning a value to the Perl's builtin &lt;code&gt;$&amp;lt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24UID&quot;&gt;$UID in perlvar&lt;/a&gt;, except that the latter will change only the real user identifier.</source>
          <target state="translated">设置此过程的真实用户标识符和有效用户标识符。与为Perl的内置 &lt;code&gt;$&amp;lt;&lt;/code&gt; 变量分配值类似，请参见&lt;a href=&quot;perlvar#%24UID&quot;&gt;perlvar中的$ UID&lt;/a&gt;，不同之处在于后者将仅更改实际用户标识符。</target>
        </trans-unit>
        <trans-unit id="02d01eed0c48fc1293b8f18b0caad609bb3115cc" translate="yes" xml:space="preserve">
          <source>Sets the sibling of o to the non-zero value sib. See also &lt;code&gt;OpLASTSIB_set&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; . For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">将o的同级设置为非零值sib。另请参阅 &lt;code&gt;OpLASTSIB_set&lt;/code&gt; 和 &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; 。有关更高级别的接口，请参见 &lt;code&gt;op_sibling_splice&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d86afb1e7c7263c10b89aacd368ee2602cae29a" translate="yes" xml:space="preserve">
          <source>Sets the socket option requested. Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error. Use integer constants provided by the &lt;code&gt;Socket&lt;/code&gt; module for LEVEL and OPNAME. Values for LEVEL can also be obtained from getprotobyname. OPTVAL might either be a packed string or an integer. An integer OPTVAL is shorthand for pack(&quot;i&quot;, OPTVAL).</source>
          <target state="translated">设置请求的套接字选项。返回错误时的 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。将 &lt;code&gt;Socket&lt;/code&gt; 模块提供的整数常量用于LEVEL和OPNAME。LEVEL的值也可以从getprotobyname获得。OPTVAL可以是压缩字符串或整数。整数OPTVAL是pack（&amp;ldquo; i&amp;rdquo;，OPTVAL）的简写。</target>
        </trans-unit>
        <trans-unit id="476b473e54c30f55552f8a4f709ce3c08424127a" translate="yes" xml:space="preserve">
          <source>Sets the socket option requested. Returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error. Use integer constants provided by the &lt;code&gt;Socket&lt;/code&gt; module for LEVEL and OPNAME. Values for LEVEL can also be obtained from getprotobyname. OPTVAL might either be a packed string or an integer. An integer OPTVAL is shorthand for pack(&quot;i&quot;, OPTVAL).</source>
          <target state="translated">设置请求的套接字选项。返回错误时的 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。将 &lt;code&gt;Socket&lt;/code&gt; 模块提供的整数常量用于LEVEL和OPNAME。LEVEL的值也可以从getprotobyname获得。OPTVAL可以是压缩字符串或整数。整数OPTVAL是pack（&amp;ldquo; i&amp;rdquo;，OPTVAL）的简写。</target>
        </trans-unit>
        <trans-unit id="93bb929591d0528a35cd2069a37354aa3d054448" translate="yes" xml:space="preserve">
          <source>Sets the socket type and options to be used for the next call to &lt;code&gt;openlog()&lt;/code&gt; or &lt;code&gt;syslog()&lt;/code&gt; . Returns true on success, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">设置套接字类型和用于下一次调用 &lt;code&gt;openlog()&lt;/code&gt; 或 &lt;code&gt;syslog()&lt;/code&gt; 的选项。成功返回true，失败返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b86e212af2f126faa3544cc569f9b087e3aee0ca" translate="yes" xml:space="preserve">
          <source>Sets the source address from which pings will be sent. This must be the address of one of the interfaces on the local host. $local_addr may be specified as a hostname or as a text IP address such as &quot;192.168.1.1&quot;.</source>
          <target state="translated">设置发送 ping 的源地址。这必须是本地主机上的一个接口的地址。$local_addr 可以指定为主机名或文本 IP 地址,如 &quot;192.168.1.1&quot;。</target>
        </trans-unit>
        <trans-unit id="92ce4dae9146598ac7553e913aebeb64b00cf916" translate="yes" xml:space="preserve">
          <source>Sets the status code to 580 and the response text to 'Unsupported command'. Returns zero.</source>
          <target state="translated">将状态码设置为580,响应文本设置为 &quot;Unsupported command&quot;。返回0。</target>
        </trans-unit>
        <trans-unit id="9936295e045b1c4d6375ecd1e9facebf69d817b6" translate="yes" xml:space="preserve">
          <source>Sets the total number of items in the tied array associated with object</source>
          <target state="translated">设置与对象相关的并列数组中的项目总数。</target>
        </trans-unit>
        <trans-unit id="40249eaa342f002e4c8097a609cf593eebb47890" translate="yes" xml:space="preserve">
          <source>Sets the umask for the process to EXPR and returns the previous value. If EXPR is omitted, merely returns the current umask.</source>
          <target state="translated">将进程的掩码设置为EXPR,并返回之前的值。如果省略EXPR,则只返回当前的掩码。</target>
        </trans-unit>
        <trans-unit id="96a8396b70ef80374f00155bbbbd208815e4f883" translate="yes" xml:space="preserve">
          <source>Sets the value of the</source>
          <target state="translated">设置</target>
        </trans-unit>
        <trans-unit id="da35a68431a43130ea5825a62bfd2765d5c19d3d" translate="yes" xml:space="preserve">
          <source>Sets up any variable needed by the &lt;code&gt;UNDERBAR&lt;/code&gt; macro. It used to define &lt;code&gt;padoff_du&lt;/code&gt; , but it is currently a noop. However, it is strongly advised to still use it for ensuring past and future compatibility.</source>
          <target state="translated">设置 &lt;code&gt;UNDERBAR&lt;/code&gt; 宏所需的任何变量。它曾经用来定义 &lt;code&gt;padoff_du&lt;/code&gt; ，但目前是noop。但是，强烈建议您仍然使用它来确保过去和将来的兼容性。</target>
        </trans-unit>
        <trans-unit id="d3979a66aaf6a4132bfe358718ac0f220a93191b" translate="yes" xml:space="preserve">
          <source>Sets up macros having to do with XS code. Currently just INST_STATIC, INST_DYNAMIC and INST_BOOT.</source>
          <target state="translated">设置与XS代码有关的宏。目前只有INST_STATIC、INST_DYNAMIC和INST_BOOT。</target>
        </trans-unit>
        <trans-unit id="d872b0d7d162b74be74e6f23f9ddcaccb891eda0" translate="yes" xml:space="preserve">
          <source>Sets up stack and mark pointers for an XSUB, calling dSP and dMARK. Sets up the &lt;code&gt;ax&lt;/code&gt; and &lt;code&gt;items&lt;/code&gt; variables by calling &lt;code&gt;dAX&lt;/code&gt; and &lt;code&gt;dITEMS&lt;/code&gt; . This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">为XSUB设置堆栈和标记指针，调用dSP和dMARK。通过调用 &lt;code&gt;dAX&lt;/code&gt; 和 &lt;code&gt;dITEMS&lt;/code&gt; 来设置 &lt;code&gt;ax&lt;/code&gt; 和 &lt;code&gt;items&lt;/code&gt; 变量。这通常由 &lt;code&gt;xsubpp&lt;/code&gt; 自动处理。</target>
        </trans-unit>
        <trans-unit id="50c1d31f3b0a1748548fed8579f46b56c74b7d28" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;ax&lt;/code&gt; variable and stack marker variable &lt;code&gt;mark&lt;/code&gt; . This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; by calling &lt;code&gt;dXSARGS&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;ax&lt;/code&gt; 变量和堆栈标记变量 &lt;code&gt;mark&lt;/code&gt; 。通常由 &lt;code&gt;xsubpp&lt;/code&gt; 通过调用 &lt;code&gt;dXSARGS&lt;/code&gt; 自动处理。</target>
        </trans-unit>
        <trans-unit id="336d4ca0113d319afd8c3b15eb7125c19977386b" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;ax&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; by calling &lt;code&gt;dXSARGS&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;ax&lt;/code&gt; 变量。通常由 &lt;code&gt;xsubpp&lt;/code&gt; 通过调用 &lt;code&gt;dXSARGS&lt;/code&gt; 自动处理。</target>
        </trans-unit>
        <trans-unit id="769232c787891f58bc6352e4ad486992f3752ce0" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;items&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; by calling &lt;code&gt;dXSARGS&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;items&lt;/code&gt; 变量。通常由 &lt;code&gt;xsubpp&lt;/code&gt; 通过调用 &lt;code&gt;dXSARGS&lt;/code&gt; 自动处理。</target>
        </trans-unit>
        <trans-unit id="82914d021c66bde36ac95fca91c293751209673a" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;ix&lt;/code&gt; variable for an XSUB which has aliases. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">为具有别名的XSUB 设置 &lt;code&gt;ix&lt;/code&gt; 变量。这通常由 &lt;code&gt;xsubpp&lt;/code&gt; 自动处理。</target>
        </trans-unit>
        <trans-unit id="70f73bf30c084eaafe7cce604897dbd04c3dc416" translate="yes" xml:space="preserve">
          <source>Setting $!</source>
          <target state="translated">设置$!</target>
        </trans-unit>
        <trans-unit id="751f2128bdd975d372eba41571f3151993f0658a" translate="yes" xml:space="preserve">
          <source>Setting $ENV{TZ} in Threads on Win32</source>
          <target state="translated">在Win32的线程中设置$ENV{TZ}。</target>
        </trans-unit>
        <trans-unit id="7f4ae0b32e0a64452b967cad0f6223cbd4944c43" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;http://search.cpan.org/perldoc/%24Test::Builder::Level&quot;&gt;$Test::Builder::Level&lt;/a&gt; overrides. This is typically useful localized:</source>
          <target state="translated">设置&lt;a href=&quot;http://search.cpan.org/perldoc/%24Test::Builder::Level&quot;&gt;$ Test :: Builder :: Level&lt;/a&gt;覆盖。这通常在本地有用：</target>
        </trans-unit>
        <trans-unit id="794ce9ed7ea02215107551f7430c3152412d539f" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$/&lt;/code&gt; to a reference to an integer, scalar containing an integer, or scalar that's convertible to an integer will attempt to read records instead of lines, with the maximum record size being the referenced integer number of characters. So this:</source>
          <target state="translated">将 &lt;code&gt;$/&lt;/code&gt; 设置为对整数的引用，包含整数的标量或可转换为整数的标量将尝试读取记录而不是行，最大记录大小为引用的整数个字符。所以这：</target>
        </trans-unit>
        <trans-unit id="17ddd91296b80d48f63b97d11f86bf92fa707898" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$Storable::canonical&lt;/code&gt; may not yield frozen strings that compare equal due to possible stringification of numbers. When the string version of a scalar exists, it is the form stored; therefore, if you happen to use your numbers as strings between two freezing operations on the same data structures, you will get different results.</source>
          <target state="translated">由于可能的数字字符串化，设置 &lt;code&gt;$Storable::canonical&lt;/code&gt; 可能不会产生比较相等的冻结字符串。当存在标量的字符串版本时，它就是存储的形式；因此，如果您碰巧将数字用作对相同数据结构的两次冻结操作之间的字符串，则会得到不同的结果。</target>
        </trans-unit>
        <trans-unit id="24a709bc63116d6d03dcd3b4fd0b3541521b8558" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$|&lt;/code&gt; for an I/O stream causes data to be flushed all the way to disk on each write (</source>
          <target state="translated">设置 &lt;code&gt;$|&lt;/code&gt; 对于I / O流，每次写入都会导致数据一直刷新到磁盘上（</target>
        </trans-unit>
        <trans-unit id="7bdb73ae2acf769ed4bd9afac1e469320505fda3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; also resets the</source>
          <target state="translated">设置 &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 也会重置</target>
        </trans-unit>
        <trans-unit id="ce72a4be942d96b86ceb3742d54f6473d82ec88a" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; also resets the</source>
          <target state="translated">设置 &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 也会重置</target>
        </trans-unit>
        <trans-unit id="81e935f5e5ab31635e7b03bba630b9938eecfc87" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; makes everything squeaky clean:</source>
          <target state="translated">将 &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; 设置为 &lt;code&gt;1&lt;/code&gt; 会使一切变得干净整洁：</target>
        </trans-unit>
        <trans-unit id="50fa85492558cd44d6b9f1afbdff70a2e4108f54" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;STDIN&lt;/code&gt; and/or &lt;code&gt;STDOUT&lt;/code&gt; individually</source>
          <target state="translated">设置 &lt;code&gt;STDIN&lt;/code&gt; 和/或 &lt;code&gt;STDOUT&lt;/code&gt; 单独</target>
        </trans-unit>
        <trans-unit id="4f9eb8079771b6da74df870a0a1370a3cb9be87d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;complain_stderr&lt;/code&gt; also sets &lt;code&gt;no_errata_section&lt;/code&gt; .</source>
          <target state="translated">设置 &lt;code&gt;complain_stderr&lt;/code&gt; &lt;code&gt;no_errata_section&lt;/code&gt; 也设置no_errata_section。</target>
        </trans-unit>
        <trans-unit id="10362b055af0308648ca63d33ff10a0c0f9934a6" translate="yes" xml:space="preserve">
          <source>Setting STDIN and/or STDOUT individually</source>
          <target state="translated">单独设置STDIN和/或STDOUT</target>
        </trans-unit>
        <trans-unit id="7dde8cccfbe3175df65836547f417ec4e979d0f3" translate="yes" xml:space="preserve">
          <source>Setting Up Perl on Windows</source>
          <target state="translated">在Windows上设置Perl</target>
        </trans-unit>
        <trans-unit id="2f1417ccd3a0143c9a40476570cd8fb02ccad4ed" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;%SIGRT&lt;/code&gt; elements is equivalent to calling this:</source>
          <target state="translated">设置 &lt;code&gt;%SIGRT&lt;/code&gt; 元素等效于调用此命令：</target>
        </trans-unit>
        <trans-unit id="82ec05020c3a0391ac46c3f2c9e7e9c6639db3b3" translate="yes" xml:space="preserve">
          <source>Setting the exec bit on some locations (generally</source>
          <target state="translated">在某些位置上设置exec位(一般为</target>
        </trans-unit>
        <trans-unit id="7b1515ddab2e35849ea7ad601162395461e45ef5" translate="yes" xml:space="preserve">
          <source>Setting the memory limit to 0 will inhibit caching; records will be fetched from disk every time you examine them.</source>
          <target state="translated">将内存限制设置为0会抑制缓存;每次检查记录时都会从磁盘上获取记录。</target>
        </trans-unit>
        <trans-unit id="f70563603bae0022751c2fbafcf703970f2af6b4" translate="yes" xml:space="preserve">
          <source>Setting this adds perl command line switches to each test file run.</source>
          <target state="translated">设置这个选项会给每个测试文件的运行添加perl命令行开关。</target>
        </trans-unit>
        <trans-unit id="3a36ae3404b81240dcc4f244db3b5d9e9fe68945" translate="yes" xml:space="preserve">
          <source>Setting this appropriately is useful if you want to use the RTF to spellcheck, and/or if you want it to hyphenate right.</source>
          <target state="translated">如果你想使用RTF来进行拼写检查,和/或你希望它的连字符正确,那么适当地设置这个选项是很有用的。</target>
        </trans-unit>
        <trans-unit id="eb28c99d71e509270976d6187ac7708f64d8198f" translate="yes" xml:space="preserve">
          <source>Setting this attribute (to a value that's a regexp) means that you want to limit the results just to items whose podnames match the given regexp. Normally this option is not needed, and the more efficient &lt;code&gt;limit_glob&lt;/code&gt; attribute is used instead.</source>
          <target state="translated">设置此属性（值为正则表达式）意味着您只想将结果限制为Podname与给定正则表达式匹配的项目。通常，不需要此选项，而是使用效率更高的 &lt;code&gt;limit_glob&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="978f31a63d0a75abda9032068834ce25f6f936c4" translate="yes" xml:space="preserve">
          <source>Setting this attribute to a string value means that the searches should begin in the specified subdirectory name (like &quot;Pod&quot; or &quot;File::Find&quot;, also expressible as &quot;File/Find&quot;). For example, the search option &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; is the same as the combination of the search options &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt; .</source>
          <target state="translated">将此属性设置为字符串值意味着搜索应从指定的子目录名称（例如&amp;ldquo; Pod&amp;rdquo;或&amp;ldquo; File :: Find&amp;rdquo;，也可以表示为&amp;ldquo; File / Find&amp;rdquo;）开始。例如，搜索选项 &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; 与搜索选项 &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="428f294c336f76408adb1fa256045589284c8f18" translate="yes" xml:space="preserve">
          <source>Setting this environment variable to 1 means that Perl will simply use the first suitable LSP enumerated in the catalog, which keeps</source>
          <target state="translated">将这个环境变量设置为1,意味着Perl将简单地使用目录中列举的第一个合适的LSP,这将使</target>
        </trans-unit>
        <trans-unit id="4c601f26f0773d007fbfc9c3dd2bd190b39a86e1" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the error stream does not match that declared with &lt;code&gt;test_err&lt;/code&gt; .</source>
          <target state="translated">如果将此值设置为true，将导致测试忽略测试发送到错误流的输出与 &lt;code&gt;test_err&lt;/code&gt; 声明的输出不匹配。</target>
        </trans-unit>
        <trans-unit id="dc6a7f1ac441089e81cf334470f68a0350c3eeb4" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the output stream does not match that declared with &lt;code&gt;test_out&lt;/code&gt; .</source>
          <target state="translated">将此值设置为true会导致测试忽略，如果测试发送到输出流的输出与 &lt;code&gt;test_out&lt;/code&gt; 声明的输出不匹配。</target>
        </trans-unit>
        <trans-unit id="a18b09e20cf39c98db8028c26245168d90e6eceb" translate="yes" xml:space="preserve">
          <source>Setting this to true will make the harness display the number of milliseconds each test took. You can also use</source>
          <target state="translated">将此设置为 &quot;true &quot;将使线束显示每次测试的毫秒数。你也可以使用</target>
        </trans-unit>
        <trans-unit id="83b02bd49b46e2f5bcb31f889abff75ab229e8cf" translate="yes" xml:space="preserve">
          <source>Setting this variable includes the tests in</source>
          <target state="translated">设置这个变量包括在</target>
        </trans-unit>
        <trans-unit id="748c80296dffa5e7f806097b537391f16d71d73d" translate="yes" xml:space="preserve">
          <source>Setting this variable runs all the Net::Ping modules tests, otherwise some tests that interact with the outside world are skipped. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl58delta.html&quot;&gt;perl58delta&lt;/a&gt;.</source>
          <target state="translated">设置此变量将运行所有Net :: Ping模块测试，否则将跳过一些与外界交互的测试。参见&lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl58delta.html&quot;&gt;perl58delta&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7593ed09c7d1c65b5b02df3383bcc07c6f89e435" translate="yes" xml:space="preserve">
          <source>Setting this variable skips the vrexx.t tests for OS2::REXX.</source>
          <target state="translated">设置这个变量可以跳过OS2::REX的vrexx.t测试。</target>
        </trans-unit>
        <trans-unit id="34781ef166af178f4a16f210ffda5361e9f8fee9" translate="yes" xml:space="preserve">
          <source>Setting this variable to any other value than &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is deprecated due to fundamental defects in its design and implementation. It is planned to remove it from a future Perl version. Its purpose was to allow your non-ASCII Perl scripts to not have to be written in UTF-8; this was useful before editors that worked on UTF-8 encoded text were common, but that was long ago. It causes problems, such as affecting the operation of other modules that aren't expecting it, causing general mayhem. Its use can lead to segfaults.</source>
          <target state="translated">由于其设计和实现的基本缺陷，不建议将此变量设置为 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 以外的任何其他值。计划从将来的Perl版本中将其删除。其目的是使您不必使用UTF-8编写非ASCII Perl脚本。在使用UTF-8编码的文本的编辑器普及之前，这很有用，但这是很久以前的事情了。它会引起问题，例如影响其他模块的操作，从而导致混乱。它的使用可能导致段错误。</target>
        </trans-unit>
        <trans-unit id="a486a54881ca4944733417c8d453b816b797adac" translate="yes" xml:space="preserve">
          <source>Setting up a cross-compilation environment</source>
          <target state="translated">设置交叉编译环境</target>
        </trans-unit>
        <trans-unit id="6edda08937ce5437ef2f9deb1364a59b1289c766" translate="yes" xml:space="preserve">
          <source>Setting up a signal handler will need to be carefully considered and controlled. What mask is in effect when a signal handler gets called? If a user can get an imported function to get an exception and call the user's signal handler, does that user's restricted mask get re-instated before the handler is called? Does an imported handler get called with its original mask or the user's one?</source>
          <target state="translated">设置信号处理程序需要仔细考虑和控制。当一个信号处理程序被调用时,什么掩码是有效的?如果一个用户可以让一个导入的函数获得异常并调用用户的信号处理程序,那么在处理程序被调用之前,该用户的限制掩码是否会被重新设置?导入的处理程序被调用时,是用它原来的掩码还是用用户的掩码?</target>
        </trans-unit>
        <trans-unit id="8a164660ff7c0aea058ea9a4d65db581e8d4cbe7" translate="yes" xml:space="preserve">
          <source>Setting up tests</source>
          <target state="translated">设置测试</target>
        </trans-unit>
        <trans-unit id="13bf8ac5cbad88170c30283bc7715ae8986fb23c" translate="yes" xml:space="preserve">
          <source>Setuid scripts have additional constraints that can produce error messages such as &quot;Insecure dependency&quot;. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">Setuid脚本具有其他约束，这些约束可能产生错误消息，例如&amp;ldquo;不安全的依赖关系&amp;rdquo;。参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="7542e5edaf78a7e51c593cd897bf4d6df150673c" translate="yes" xml:space="preserve">
          <source>Setup and utilities for Perl on OS/390</source>
          <target state="translated">OS/390上Perl的设置和实用程序。</target>
        </trans-unit>
        <trans-unit id="e42bc033db0c04c8f20ac694388fa4c4bbcb2050" translate="yes" xml:space="preserve">
          <source>Several &quot;Eskimo&quot; languages.</source>
          <target state="translated">几种 &quot;爱斯基摩 &quot;语言;</target>
        </trans-unit>
        <trans-unit id="a5a086e14a1c43e8380db16eefaab3f189882d72" translate="yes" xml:space="preserve">
          <source>Several CPAN modules may be able to help, including &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt; or &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::Jobs&quot;&gt;Parallel::Jobs&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::ForkManager&quot;&gt;Parallel::ForkManager&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/POE&quot;&gt;POE&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Proc::Background&quot;&gt;Proc::Background&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Process&quot;&gt;Win32::Process&lt;/a&gt;. There are many other modules you might use, so check those namespaces for other options too.</source>
          <target state="translated">几个CPAN模块可能可以提供帮助，包括&lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt;或&lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::Jobs&quot;&gt;Parallel :: Jobs&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::ForkManager&quot;&gt;Parallel :: ForkManager&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/POE&quot;&gt;POE&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Proc::Background&quot;&gt;Proc :: Background&lt;/a&gt;和&lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Process&quot;&gt;Win32 :: Process&lt;/a&gt;。您可能会使用许多其他模块，因此也请检查那些名称空间中的其他选项。</target>
        </trans-unit>
        <trans-unit id="72ba89d4b4f03b960d7a7c1b62fec8c497398f12" translate="yes" xml:space="preserve">
          <source>Several Perl functions and modules depend on the existence of some optional libraries. Configure will find them if they are installed in one of the directories listed as being used for library searches. Pre-built packages for most of these are available from the Cygwin installer.</source>
          <target state="translated">一些Perl函数和模块依赖于一些可选库的存在。如果它们安装在列出的某个库搜索目录中,Configure 会找到它们。大部分库的预制包可以从Cygwin安装程序中获得。</target>
        </trans-unit>
        <trans-unit id="b507fbc9e6ee713770906faa20b03579b86f6852" translate="yes" xml:space="preserve">
          <source>Several Unix/Linux related magazines frequently include articles on Perl.</source>
          <target state="translated">一些与Unix/Linux相关的杂志经常收录关于Perl的文章。</target>
        </trans-unit>
        <trans-unit id="36833c191e11bf7ea7ef7228e804dddd43eea89d" translate="yes" xml:space="preserve">
          <source>Several cleanups prompted by lack of compatible perlglob.exe under Borland (GSAR 27-MAY-97)</source>
          <target state="translated">因Borland下缺乏兼容的perlglob.exe而进行了几次清理(GSAR 27-MAY-97)</target>
        </trans-unit>
        <trans-unit id="db13e38fcdff385659bc07b56eda3f3ec8420c2f" translate="yes" xml:space="preserve">
          <source>Several configuration variables can be used to control the kind of output generated when using the procedural interface. These variables are usually &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;ized in a block so that other parts of the code are not affected by the change.</source>
          <target state="translated">使用过程接口时，可以使用几个配置变量来控制生成的输出的种类。这些变量通常在一个块中 &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 化，以使代码的其他部分不受更改的影响。</target>
        </trans-unit>
        <trans-unit id="025ea220ceeecd1a101f60931a1651e8d46a3ae1" translate="yes" xml:space="preserve">
          <source>Several constructs above specify a character by a number. That number gives the character's position in the character set encoding (indexed from 0). This is called synonymously its ordinal, code position, or code point. Perl works on platforms that have a native encoding currently of either ASCII/Latin1 or EBCDIC, each of which allow specification of 256 characters. In general, if the number is 255 (0xFF, 0377) or below, Perl interprets this in the platform's native encoding. If the number is 256 (0x100, 0400) or above, Perl interprets it as a Unicode code point and the result is the corresponding Unicode character. For example &lt;code&gt;\x{50}&lt;/code&gt; and &lt;code&gt;\o{120}&lt;/code&gt; both are the number 80 in decimal, which is less than 256, so the number is interpreted in the native character set encoding. In ASCII the character in the 80th position (indexed from 0) is the letter &lt;code&gt;&quot;P&quot;&lt;/code&gt; , and in EBCDIC it is the ampersand symbol &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; . &lt;code&gt;\x{100}&lt;/code&gt; and &lt;code&gt;\o{400}&lt;/code&gt; are both 256 in decimal, so the number is interpreted as a Unicode code point no matter what the native encoding is. The name of the character in the 256th position (indexed by 0) in Unicode is &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt; .</source>
          <target state="translated">上面的几种构造通过数字指定字符。该数字给出了字符在字符集编码中的位置（从0开始索引）。这就是其序数，代码位置或代码点的同义词。 Perl在当前具有本机编码为ASCII / Latin1或EBCDIC的平台上工作，每种平台均允许指定256个字符。通常，如果该数字为255（0xFF，0377）或更低，则Perl会以平台的本机编码解释它。如果该数字是256（0x100，0400）或更高，Perl会将其解释为Unicode代码点，结果是相应的Unicode字符。例如 &lt;code&gt;\x{50}&lt;/code&gt; 和 &lt;code&gt;\o{120}&lt;/code&gt; 两者都是十进制数字80，小于256，因此该数字以本机字符集编码解释。在ASCII中，位于第80位（从0开始索引）的字符是字母 &lt;code&gt;&quot;P&quot;&lt;/code&gt; ，而在EBCDIC中，它是 &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; 符号。 &lt;code&gt;\x{100}&lt;/code&gt; 和 &lt;code&gt;\o{400}&lt;/code&gt; 均为十进制256，因此无论本机编码是什么，该数字都被解释为Unicode代码点。 Unicode中位于第256位（索引为0）的字符名称为 &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbb881b9834838039d809c3bb093fb3ca4e17bb6" translate="yes" xml:space="preserve">
          <source>Several modules can handle this sort of parsing--&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text::CSV&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text::CSV_XS&lt;/a&gt;, and &lt;a href=&quot;text/parsewords&quot;&gt;Text::ParseWords&lt;/a&gt;, among others.</source>
          <target state="translated">几个模块可以处理这种解析-Text &lt;a href=&quot;text/balanced&quot;&gt;:: Balanced&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text :: CSV&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text :: CSV_XS&lt;/a&gt;和&lt;a href=&quot;text/parsewords&quot;&gt;Text :: ParseWords&lt;/a&gt;等。</target>
        </trans-unit>
        <trans-unit id="ec37cc7162eb28d20005e06a7dec3c5b338debaf" translate="yes" xml:space="preserve">
          <source>Several modules let you calculate with unlimited or fixed precision (bound only by memory and CPU time). There are also some non-standard modules that provide faster implementations via external C libraries.</source>
          <target state="translated">有几个模块可以让你进行无限制或固定精度的计算(只受内存和CPU时间的限制)。还有一些非标准模块通过外部C库提供更快的实现。</target>
        </trans-unit>
        <trans-unit id="67c147f88fedb964246268fefad75f6aa72aeeaf" translate="yes" xml:space="preserve">
          <source>Several other minor changes</source>
          <target state="translated">其他几处小改动</target>
        </trans-unit>
        <trans-unit id="cbd707922dc7f0ac0b710570868c333b9e909d87" translate="yes" xml:space="preserve">
          <source>Several parameters correspond to &lt;code&gt;ExtUtils::Mksymlists::Mksymlists()&lt;/code&gt; options, as follows:</source>
          <target state="translated">几个参数对应于 &lt;code&gt;ExtUtils::Mksymlists::Mksymlists()&lt;/code&gt; 选项，如下所示：</target>
        </trans-unit>
        <trans-unit id="51ce731fa04ac92371342430f3071e509e7a9526" translate="yes" xml:space="preserve">
          <source>Several required files will still be missing:</source>
          <target state="translated">仍会缺少几个必要的文件。</target>
        </trans-unit>
        <trans-unit id="12bb0a278c9f044c640d0d62fedbff6f2aff8b1d" translate="yes" xml:space="preserve">
          <source>Several special variables also refer back to portions of the previous match. &lt;code&gt;$+&lt;/code&gt; returns whatever the last bracket match matched. &lt;code&gt;$&amp;amp;&lt;/code&gt; returns the entire matched string. (At one point &lt;code&gt;$0&lt;/code&gt; did also, but now it returns the name of the program.) &lt;code&gt;$`&lt;/code&gt; returns everything before the matched string. &lt;code&gt;$'&lt;/code&gt; returns everything after the matched string. And &lt;code&gt;$^N&lt;/code&gt; contains whatever was matched by the most-recently closed group (submatch). &lt;code&gt;$^N&lt;/code&gt; can be used in extended patterns (see below), for example to assign a submatch to a variable.</source>
          <target state="translated">几个特殊变量还返回到先前匹配的部分。 &lt;code&gt;$+&lt;/code&gt; 返回最后一个匹配的括号。 &lt;code&gt;$&amp;amp;&lt;/code&gt; 返回整个匹配的字符串。 （ &lt;code&gt;$0&lt;/code&gt; 有时也会这样做，但现在它返回程序的名称。） &lt;code&gt;$`&lt;/code&gt; 返回匹配字符串之前的所有内容。 &lt;code&gt;$'&lt;/code&gt; 返回匹配字符串之后的所有内容。和 &lt;code&gt;$^N&lt;/code&gt; 含有任何由-最近封闭组（子匹配）匹配。 &lt;code&gt;$^N&lt;/code&gt; 可用于扩展模式（请参见下文），例如为变量分配子匹配。</target>
        </trans-unit>
        <trans-unit id="353c61ff546c0748767d65edffd80e2d9a48d8cb" translate="yes" xml:space="preserve">
          <source>Several styles of output are possible, all controlled by setting the &lt;code&gt;Indent&lt;/code&gt; flag. See &lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;Configuration Variables or Methods&lt;/a&gt; below for details.</source>
          <target state="translated">可能有几种输出样式，所有样式都可以通过设置 &lt;code&gt;Indent&lt;/code&gt; 标志来控制。有关详细信息，请参见下面的&lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;配置变量或方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3fa635b974cdf4d0bafcdf7021b5b41371ca982" translate="yes" xml:space="preserve">
          <source>Several tools needed to build perl are located in /usr/ccs/bin/: ar, as, ld, and make. Make sure that /usr/ccs/bin/ is in your PATH.</source>
          <target state="translated">构建perl所需的一些工具位于/usr/ccs/bin/中:ar、as、ld和make。确保/usr/ccs/bin/在你的PATH中。</target>
        </trans-unit>
        <trans-unit id="e75716eac93d8afc288ec94b4c657ebfcf948efd" translate="yes" xml:space="preserve">
          <source>Severe warnings are always enabled, unless they are explicitly disabled with the &lt;code&gt;warnings&lt;/code&gt; pragma or the &lt;b&gt;-X&lt;/b&gt; switch.</source>
          <target state="translated">除非已通过 &lt;code&gt;warnings&lt;/code&gt; pragma或&lt;b&gt;-X&lt;/b&gt;开关明确禁用了严重警告，否则始终会启用它们。</target>
        </trans-unit>
        <trans-unit id="e7dd772b3854a8bc3b300bf85e9a40b9bf25a50f" translate="yes" xml:space="preserve">
          <source>Shall we always set the FTP_PASSIVE environment variable when dealing with ftp download (yes/no)?</source>
          <target state="translated">当处理ftp下载时,我们是否应该总是设置FTP_PASSIVE环境变量(是/否)?</target>
        </trans-unit>
        <trans-unit id="b8bf62db0a202cfe8b527778be027079163e0d35" translate="yes" xml:space="preserve">
          <source>Share what you did with the other people. Relax. Enjoy fruits of your work.</source>
          <target state="translated">与其他人分享你所做的事。放松心情。享受你的工作成果。</target>
        </trans-unit>
        <trans-unit id="df3c637adb69abac13b29419d0cfa8b766ae4adc" translate="yes" xml:space="preserve">
          <source>Shared And Unshared Data</source>
          <target state="translated">共享和非共享数据</target>
        </trans-unit>
        <trans-unit id="2ad8427c8c9758999d3e74a7bdd5fb7162a57750" translate="yes" xml:space="preserve">
          <source>Shared libraries created on a platform using a particular PA-RISC version are not usable on platforms using an earlier PA-RISC version by default. However, this backwards compatibility may be enabled using the same +DAportable compiler flag (with the same PA-RISC 1.0 caveat mentioned above).</source>
          <target state="translated">在使用特定PA-RISC版本的平台上创建的共享库默认不能在使用早期PA-RISC版本的平台上使用。然而,这种向后兼容性可以使用相同的+DAportable编译器标志来启用(与上面提到的PA-RISC 1.0的注意事项相同)。</target>
        </trans-unit>
        <trans-unit id="193a001ab941319380e15850d6f5c791732088df" translate="yes" xml:space="preserve">
          <source>Shared libraries created on an Itanium platform cannot be loaded on a PA-RISC platform. Shared libraries created on a PA-RISC platform can only be loaded on an Itanium platform if it is a PA-RISC executable that is attempting to load the PA-RISC library. A PA-RISC shared library cannot be loaded into an Itanium executable nor vice-versa.</source>
          <target state="translated">在Itanium平台上创建的共享库不能在PA-RISC平台上加载。在PA-RISC平台上创建的共享库只有在PA-RISC可执行文件试图加载PA-RISC库的情况下才能加载到Itanium平台上。PA-RISC 共享库不能被加载到 Itanium 可执行文件中,反之亦然。</target>
        </trans-unit>
        <trans-unit id="6953ee78fc5edeec2d6a50098821da893b0458f7" translate="yes" xml:space="preserve">
          <source>Shared references among objects will not stay shared: if we're serializing the list of object [A, C] where both object A and C refer to the SAME object B, and if there is a serializing hook in A that says freeze(B), then when deserializing, we'll get [A', C'] where A' refers to B', but C' refers to D, a deep clone of B'. The topology was not preserved.</source>
          <target state="translated">对象之间的共享引用不会保持共享:如果我们在序列化对象[A,C]的列表中,对象A和C都引用了SAME对象B,如果A中有一个序列化钩子,说冻结(B),那么在反序列化时,我们会得到[A',C'],其中A'引用了B',但C'引用了D,是B'的深度克隆。拓扑结构没有被保留下来。</target>
        </trans-unit>
        <trans-unit id="f728eba8dfb3236f1667f74466840c95e5a7b8ee" translate="yes" xml:space="preserve">
          <source>Shared variables can only store scalars, refs of shared variables, or refs of shared data (discussed in next section):</source>
          <target state="translated">共享变量只能存储标量、共享变量的refs或共享数据的refs(在下一节讨论)。</target>
        </trans-unit>
        <trans-unit id="001c163e34c30bd422c6c0b180836b52f1afdb17" translate="yes" xml:space="preserve">
          <source>Sharing Databases With C Applications</source>
          <target state="translated">与C应用程序共享数据库</target>
        </trans-unit>
        <trans-unit id="bd8715c47f235864c2ceb04d785a7b7ec14fa56b" translate="yes" xml:space="preserve">
          <source>Sharing typemaps Between CPAN Distributions</source>
          <target state="translated">在CPAN分布之间共享类型图</target>
        </trans-unit>
        <trans-unit id="0a07afc00eaa14a561ef50fb9dc88822e22b041a" translate="yes" xml:space="preserve">
          <source>Sharp shell programmers should take note of the following:</source>
          <target state="translated">锐壳程序员应该注意以下几点。</target>
        </trans-unit>
        <trans-unit id="6aa79f294b4ff3f2bd0e6980c0d9d3429325e3b2" translate="yes" xml:space="preserve">
          <source>Shawn M Moore &lt;code&gt;sartak@gmail.com&lt;/code&gt;</source>
          <target state="translated">肖恩M摩尔 &lt;code&gt;sartak@gmail.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46f2fc676064cd202c006928e29b43973667f22c" translate="yes" xml:space="preserve">
          <source>Shell Traps</source>
          <target state="translated">诱捕器</target>
        </trans-unit>
        <trans-unit id="05e1aa29dff23edb2a5976ffe3e3f5926084ec96" translate="yes" xml:space="preserve">
          <source>Shell escapes newlines in $text.</source>
          <target state="translated">Shell逃逸$text中的换行。</target>
        </trans-unit>
        <trans-unit id="411430d5faea18a48223083d430d03ec02723be9" translate="yes" xml:space="preserve">
          <source>Shell mode</source>
          <target state="translated">外壳模式</target>
        </trans-unit>
        <trans-unit id="ae8110256e73e2d29bfd2b0361c6084818dcf5fb" translate="yes" xml:space="preserve">
          <source>Shell variables from the</source>
          <target state="translated">壳变量从</target>
        </trans-unit>
        <trans-unit id="a5efec93b7817b727267bf3e97356065022021aa" translate="yes" xml:space="preserve">
          <source>Shell::Command which is these same functions but take arguments normally.</source>
          <target state="translated">Shell::Command是这些相同的函数,但通常会接受参数。</target>
        </trans-unit>
        <trans-unit id="5597033de9e3a9ee3ab28b086225929f8384f842" translate="yes" xml:space="preserve">
          <source>Shells (especially &lt;b&gt;csh&lt;/b&gt;) do several levels of substitution on each command line. Perl does substitution in only certain constructs such as double quotes, backticks, angle brackets, and search patterns.</source>
          <target state="translated">Shell（尤其是&lt;b&gt;csh&lt;/b&gt;）在每个命令行上执行多个替换级别。Perl仅在某些构造（例如双引号，反引号，尖括号和搜索模式）中进行替换。</target>
        </trans-unit>
        <trans-unit id="c3085316e59739c3d0881dec21da7ebe8e1387d1" translate="yes" xml:space="preserve">
          <source>Shells interpret scripts a little bit at a time. Perl compiles the entire program before executing it (except for &lt;code&gt;BEGIN&lt;/code&gt; blocks, which execute at compile time).</source>
          <target state="translated">Shell一次解释一点脚本。Perl在执行之前先编译整个程序（ &lt;code&gt;BEGIN&lt;/code&gt; 块除外，后者在编译时执行）。</target>
        </trans-unit>
        <trans-unit id="d740f71b4c0205327f8285c81beee6b58843073b" translate="yes" xml:space="preserve">
          <source>Shift Operators</source>
          <target state="translated">轮班操作员</target>
        </trans-unit>
        <trans-unit id="53ffaf0e7e7ca17703b35ea2272d3800a2b8789e" translate="yes" xml:space="preserve">
          <source>Shift object N digits right in base B and return the resulting object. This is equivalent to performing integer division by B**N and discarding the remainder, except that it might be much faster, depending on how the number is represented internally.</source>
          <target state="translated">将对象的N个数字以B为基数右移,并返回结果对象。这相当于执行整数除以B**N并丢弃余数,只是它可能快得多,这取决于数字的内部表示方式。</target>
        </trans-unit>
        <trans-unit id="816ba91c6c549fed8497fc4ed9fd5be93db7467c" translate="yes" xml:space="preserve">
          <source>Shift the object N digits left in base B. This is equivalent to multiplying by B**N, except that it might be much faster, depending on how the number is represented internally.</source>
          <target state="translated">这相当于用B**N做乘法,只是可能会快得多,这取决于数字的内部表示方式。</target>
        </trans-unit>
        <trans-unit id="2bbd5485928f42790ecd61230b448ed394726e75" translate="yes" xml:space="preserve">
          <source>Shifts $x right by $y in base $n. Default is base 2, used are usually 10 and 2, but others work, too.</source>
          <target state="translated">将$x右移$y,基数为$n。默认是基数2,使用的通常是10和2,但其他的也可以。</target>
        </trans-unit>
        <trans-unit id="cab6779d1c4d586e5a686816d2490a5a885e59ca" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;code&gt;@_&lt;/code&gt; array within the lexical scope of subroutines and formats, and the &lt;code&gt;@ARGV&lt;/code&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; , and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="translated">将数组的第一个值移开并返回它，将数组缩短1并向下移动所有内容。如果数组中没有元素，则返回未定义的值。如果省略了ARRAY，则将 &lt;code&gt;@_&lt;/code&gt; 数组移到子例程和格式的词法范围内，并将 &lt;code&gt;@ARGV&lt;/code&gt; 数组移到子例程的外部，并移到 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; ， &lt;code&gt;BEGIN {}&lt;/code&gt; ， &lt;code&gt;INIT {}&lt;/code&gt; ， &lt;code&gt;CHECK {}&lt;/code&gt; 建立的词法范围内， &lt;code&gt;UNITCHECK {}&lt;/code&gt; 和 &lt;code&gt;END {}&lt;/code&gt; 构造。</target>
        </trans-unit>
        <trans-unit id="ceb6ece5170a4ff335501d527cf25219b25ce8af" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;code&gt;@_&lt;/code&gt; array within the lexical scope of subroutines and formats, and the &lt;code&gt;@ARGV&lt;/code&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; , and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="translated">将数组的第一个值移开并返回它，将数组缩短1并向下移动所有内容。如果数组中没有元素，则返回未定义的值。如果省略了ARRAY，则将 &lt;code&gt;@_&lt;/code&gt; 数组移到子例程和格式的词法范围内，并将 &lt;code&gt;@ARGV&lt;/code&gt; 数组移到子例程的外部，并移到 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; ， &lt;code&gt;BEGIN {}&lt;/code&gt; ， &lt;code&gt;INIT {}&lt;/code&gt; ， &lt;code&gt;CHECK {}&lt;/code&gt; 建立的词法范围内， &lt;code&gt;UNITCHECK {}&lt;/code&gt; 和 &lt;code&gt;END {}&lt;/code&gt; 构造。</target>
        </trans-unit>
        <trans-unit id="e560762a5e85f4245145df0a3d5f14955ebfbe7e" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;an instance of a class&amp;rdquo;, meaning an &lt;b&gt;object&lt;/b&gt; of that &lt;b&gt;class&lt;/b&gt;.</source>
          <target state="translated">简称&amp;ldquo;一类的实例&amp;rdquo;，这意味着一个&lt;b&gt;对象&lt;/b&gt;是的&lt;b&gt;类&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="bf0f9ba179007d01df18b67571c95890eacf53a2" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;array value&amp;rdquo;, which refers to one of Perl&amp;rsquo;s internal data types that holds an &lt;b&gt;array&lt;/b&gt;. The &lt;code&gt;AV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">&amp;ldquo;数组值&amp;rdquo;（array value）的简称，它是指Perl的内部数据类型之一，该数据类型保存一个&lt;b&gt;array&lt;/b&gt;。的 &lt;code&gt;AV&lt;/code&gt; 类型是子类&lt;b&gt;SV&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="daa4e28096f49e40bca183e69c8dbf8fb7d81587" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;scalar value&amp;rdquo;. But within the Perl interpreter, every &lt;b&gt;referent&lt;/b&gt; is treated as a member of a class derived from SV, in an object-oriented sort of way. Every &lt;b&gt;value&lt;/b&gt; inside Perl is passed around as a C language &lt;code&gt;SV*&lt;/code&gt; pointer. The SV &lt;b&gt;struct&lt;/b&gt; knows its own &amp;ldquo;referent type&amp;rdquo;, and the code is smart enough (we hope) not to try to call a &lt;b&gt;hash&lt;/b&gt; function on a &lt;b&gt;subroutine&lt;/b&gt;.</source>
          <target state="translated">&amp;ldquo;标量值&amp;rdquo;的缩写。但是在Perl解释器中，每个&lt;b&gt;引用&lt;/b&gt;对象都以面向对象的方式被视为从SV派生的类的成员。Perl中的每个&lt;b&gt;值&lt;/b&gt;都作为C语言 &lt;code&gt;SV*&lt;/code&gt; 指针传递。SV &lt;b&gt;结构&lt;/b&gt;知道其自己的&amp;ldquo;引用类型&amp;rdquo;，并且代码足够聪明（我们希望如此），以便不尝试在&lt;b&gt;子例程&lt;/b&gt;上调用&lt;b&gt;哈希&lt;/b&gt;函数。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5d19c4596f6bfea39cf19abcb0120dd79077a176" translate="yes" xml:space="preserve">
          <source>Short for &lt;b&gt;scratchpad&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;暂存器的&lt;/b&gt;简称。</target>
        </trans-unit>
        <trans-unit id="11be5993935a64f6ec9ea9395f4cafbeb6afecc6" translate="yes" xml:space="preserve">
          <source>Short for Nevada, no part of which will ever be confused with civilization. NV also means an internal floating- point Numeric Value of the type a &lt;b&gt;scalar&lt;/b&gt; can hold, not to be confused with an &lt;b&gt;IV&lt;/b&gt;.</source>
          <target state="translated">内华达州的简称，内华达州永远不会与文明相混淆。NV还表示&lt;b&gt;标量&lt;/b&gt;可以容纳的内部浮点数值，不要与&lt;b&gt;IV&lt;/b&gt;混淆。</target>
        </trans-unit>
        <trans-unit id="753c68d3ba41db74e4df8914f2ce920431708ec4" translate="yes" xml:space="preserve">
          <source>Short for Transmission Control Protocol. A protocol wrapped around the Internet Protocol to make an unreliable packet transmission mechanism appear to the application program to be a reliable &lt;b&gt;stream&lt;/b&gt; of bytes. (Usually.)</source>
          <target state="translated">传输控制协议的缩写。包裹在Internet协议周围的协议，使不可靠的数据包传输机制在应用程序中看起来像是可靠的字节&lt;b&gt;流&lt;/b&gt;。（通常）</target>
        </trans-unit>
        <trans-unit id="dc5ee68c69bf44299748c4c256b80c120fb271e9" translate="yes" xml:space="preserve">
          <source>Short for a &amp;ldquo;hash value&amp;rdquo; typedef, which holds Perl&amp;rsquo;s internal representation of a hash. The &lt;code&gt;HV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">&amp;ldquo;哈希值&amp;rdquo; typedef的缩写，其中包含Perl对哈希的内部表示。的 &lt;code&gt;HV&lt;/code&gt; 类型是子类&lt;b&gt;SV&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="641d12dc5680debd9252f30257e835d77f2b58b5" translate="yes" xml:space="preserve">
          <source>Short for a &amp;ldquo;terminal&amp;rdquo;&amp;mdash;that is, a leaf node of a &lt;b&gt;syntax tree&lt;/b&gt;. A thing that functions grammatically as an &lt;b&gt;operand&lt;/b&gt; for the operators in an expression.</source>
          <target state="translated">&amp;ldquo;终端&amp;rdquo;的缩写，即&lt;b&gt;语法树&lt;/b&gt;的叶节点。在语法上用作表达式中运算符的&lt;b&gt;操作数的&lt;/b&gt;事物。</target>
        </trans-unit>
        <trans-unit id="2a34ff2be32b26b7b9b0b3b4f346552a9899d102" translate="yes" xml:space="preserve">
          <source>Short for one member of &lt;b&gt;Perl mongers&lt;/b&gt;, a purveyor of Perl.</source>
          <target state="translated">对于短的一个成员&lt;b&gt;的Perl贩子&lt;/b&gt;，Perl中的传播者。</target>
        </trans-unit>
        <trans-unit id="215e423928369d110ed59f1768219b3b38101a83" translate="yes" xml:space="preserve">
          <source>Short integers. This is equivalent to T_IV but explicitly casts the return to type &lt;code&gt;short&lt;/code&gt; . The default typemap for &lt;code&gt;short&lt;/code&gt; is T_IV.</source>
          <target state="translated">短整数。这等效于T_IV，但显式将返回值强制转换为 &lt;code&gt;short&lt;/code&gt; 类型。 &lt;code&gt;short&lt;/code&gt; 的默认类型映射是T_IV。</target>
        </trans-unit>
        <trans-unit id="e173f44ce033e23615a07008598ed98e0724ec82" translate="yes" xml:space="preserve">
          <source>Short of loading the file into a database or pre-indexing the lines in the file, there are a couple of things that you can do.</source>
          <target state="translated">除了将文件加载到数据库或预先索引文件中的行之外,还有一些事情可以做。</target>
        </trans-unit>
        <trans-unit id="342f19ffca54484d831bc22d60422377cb72128f" translate="yes" xml:space="preserve">
          <source>Short summary: You need to create a package that defines four methods:</source>
          <target state="translated">小结:你需要创建一个包,定义四个方法。</target>
        </trans-unit>
        <trans-unit id="c1b21662873145e63208c0c220c63eecf3382545" translate="yes" xml:space="preserve">
          <source>Short tests may produce negative figures because perl can appear to take longer to execute the empty loop than a short test; try:</source>
          <target state="translated">短测试可能会产生负数,因为perl执行空循环的时间似乎比短测试的时间要长;尝试。</target>
        </trans-unit>
        <trans-unit id="3c291d239a5572586d5800f8940e243040b2c7b5" translate="yes" xml:space="preserve">
          <source>Shortcomings of Perl under AmigaOS</source>
          <target state="translated">AmigaOS下Perl的不足之处</target>
        </trans-unit>
        <trans-unit id="fa78e77c849e3197f1c80d2dbbfe4db374f3b001" translate="yes" xml:space="preserve">
          <source>Shortcomings of Perl under DOS</source>
          <target state="translated">DOS下Perl的缺点</target>
        </trans-unit>
        <trans-unit id="a84b9d9cc1ba4235d4b9a38a4443bc225f0a9d86" translate="yes" xml:space="preserve">
          <source>Should I do anything special if I call perl from multiple threads?</source>
          <target state="translated">如果我从多个线程调用perl,我应该做什么特别的事情吗?</target>
        </trans-unit>
        <trans-unit id="41623a0ef32a13c7058b74719f5d1256441b7302" translate="yes" xml:space="preserve">
          <source>Should I use a web framework?</source>
          <target state="translated">我应该使用网络框架吗?</target>
        </trans-unit>
        <trans-unit id="706821549d14c573be320aadd1615ad49253a11a" translate="yes" xml:space="preserve">
          <source>Should a user have the need for compiling Perl in the LP64 environment, use the -Duse64bitall flag to Configure. This will force Perl to be compiled in a pure LP64 environment (with the +DD64 flag for HP C-ANSI-C, with no additional options for GNU gcc 64-bit on PA-RISC, and with -mlp64 for GNU gcc on Itanium). If you want to compile Perl using gcc, you will have to get a version of the compiler that supports 64-bit operations.)</source>
          <target state="translated">如果用户需要在LP64环境下编译Perl,可以使用-Duse64bitall标志来配置。这将强制Perl在纯LP64环境下编译(对于HP C-ANSI-C,使用+DD64标志,对于PA-RISC上的GNU gcc 64位,没有额外的选项,对于Itanium上的GNU gcc,使用-mlp64)。如果你想用gcc编译Perl,你必须得到一个支持64位操作的编译器版本)。)</target>
        </trans-unit>
        <trans-unit id="efca6f20e60abb6462f2115cc6f4f778b3e904aa" translate="yes" xml:space="preserve">
          <source>Should an &lt;code&gt;ok()&lt;/code&gt; fail, it will produce some diagnostics:</source>
          <target state="translated">如果 &lt;code&gt;ok()&lt;/code&gt; 失败，它将产生一些诊断信息：</target>
        </trans-unit>
        <trans-unit id="7aa2401927f1002b79d1cf0dcfbafc98b85b5c42" translate="yes" xml:space="preserve">
          <source>Should be used if the perl library is moved from the default location in preference to &lt;code&gt;PERL(5)LIB&lt;/code&gt;, since this would not leave wrong entries in @INC. For example, if the compiled version of perl looks for @INC in</source>
          <target state="translated">如果将perl库从默认位置优先移至 &lt;code&gt;PERL(5)LIB&lt;/code&gt; ，则应使用此方法，因为这不会在@INC中留下错误的条目。例如，如果perl的编译版本在以下位置查找@INC</target>
        </trans-unit>
        <trans-unit id="56e9538fa48dc5397d7704d11be1b316f1409e45" translate="yes" xml:space="preserve">
          <source>Should make stream's state consistent with layers below. That is, any buffered write data should be written, and file position of lower layers adjusted for data read from below but not actually consumed. (Should perhaps &lt;code&gt;Unread()&lt;/code&gt; such data to the lower layer.)</source>
          <target state="translated">应该使流的状态与下面的层一致。也就是说，应该写入任何缓冲的写入数据，并针对从下面读取但实际上并未消耗的数据调整较低层的文件位置。（也许应该将 &lt;code&gt;Unread()&lt;/code&gt; 这样的数据发送到下层。）</target>
        </trans-unit>
        <trans-unit id="1c3d2c3d146bd37267ff2248c2cd5e844253f599" translate="yes" xml:space="preserve">
          <source>Should not be set with newer Perls, since this may hide some</source>
          <target state="translated">不应该在较新的Perls中设置,因为这可能会隐藏一些。</target>
        </trans-unit>
        <trans-unit id="ed8ff1c4976aa7b4301ba319829b15d5951b2c6e" translate="yes" xml:space="preserve">
          <source>Should probably be built into the core, and needs to stop pandering to DOS habits. Needs a dose of optimization too.</source>
          <target state="translated">可能应该内置于核心,需要不再迎合DOS的习惯。也需要一定的优化。</target>
        </trans-unit>
        <trans-unit id="fbde5e966385ab1512ea67e3f35d08dd24d83ceb" translate="yes" xml:space="preserve">
          <source>Should return 0 on success, -1 on error. Optional.</source>
          <target state="translated">成功时应返回0,错误时应返回-1。可选。</target>
        </trans-unit>
        <trans-unit id="f8c399f86acf033efef1e2751ef404b5ddaa2865" translate="yes" xml:space="preserve">
          <source>Should return 0 on success, -1 on error. Optional. Default is to fail, but that is likely to be changed in future.</source>
          <target state="translated">成功时应返回0,错误时应返回-1。可选。默认值是失败,但将来可能会改变。</target>
        </trans-unit>
        <trans-unit id="246758221cfd3e60868d6718c892fa1bb87177ab" translate="yes" xml:space="preserve">
          <source>Should return a string to be placed in the buffer. Optional. If not provided, must provide READ or reject handles open for reading in PUSHED.</source>
          <target state="translated">应该返回一个要放在缓冲区的字符串。可选的,如果没有提供,必须提供READ或拒绝句柄开放给PUSHED中读取。如果没有提供,必须提供READ或拒绝句柄,在PUSHED中打开读取。</target>
        </trans-unit>
        <trans-unit id="d3cbfd0fcf4f24975313de4df8de49164d7ee2fd" translate="yes" xml:space="preserve">
          <source>Should return an object or the class, or -1 on failure. (Compare TIEHANDLE.) The arguments are an optional mode string (&quot;r&quot;, &quot;w&quot;, &quot;w+&quot;, ...) and a filehandle for the PerlIO layer below. Mandatory.</source>
          <target state="translated">应该返回一个对象或类,失败时返回-1。(比较TIEHANDLE。)参数是一个可选的模式字符串(&quot;r&quot;,&quot;w&quot;,&quot;w+&quot;,...)和下面PerlIO层的filehandle。必备。</target>
        </trans-unit>
        <trans-unit id="5642f34ce9dcd1c3ffa2dfc0c58640c6cb31044d" translate="yes" xml:space="preserve">
          <source>Should the $prefix fail to match</source>
          <target state="translated">如果$prefix不符合</target>
        </trans-unit>
        <trans-unit id="1690346ded0caeaa5dcdd766cbbfd423effb3884" translate="yes" xml:space="preserve">
          <source>Should yield no problems with AIX 5.1 / 5.2 / 5.3 / 6.1 / 7.1.</source>
          <target state="translated">在AIX 5.1/5.2/5.3/6.1/7.1的情况下应该不会产生问题。</target>
        </trans-unit>
        <trans-unit id="377f03a2a4c9b170d5d73c84fdd0fa6c29b00142" translate="yes" xml:space="preserve">
          <source>Should yield no problems.</source>
          <target state="translated">应该不会产生问题。</target>
        </trans-unit>
        <trans-unit id="0b16df946245605727ff1e16d4791f2bf174400d" translate="yes" xml:space="preserve">
          <source>Should you wish to build a statically-linked executable on a system which can dynamically load libraries, you may, in all the following examples, where the command &quot;&lt;code&gt;make&lt;/code&gt; &quot; with no arguments is executed, run the command &quot;&lt;code&gt;make perl&lt;/code&gt; &quot; instead.</source>
          <target state="translated">如果希望在可以动态加载库的系统上构建静态链接的可执行文件，则在以下所有示例中，如果执行不带参数的命令&amp;ldquo; &lt;code&gt;make&lt;/code&gt; &amp;rdquo;，请运行命令&amp;ldquo; &lt;code&gt;make perl&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4ad198af5ed254b36c0129bab30cb66de4af9306" translate="yes" xml:space="preserve">
          <source>Show all individual modules that have a $VERSION of zero?</source>
          <target state="translated">显示所有单个模块的$VERSION为0?</target>
        </trans-unit>
        <trans-unit id="5886e6a19b112ccca7d7e5c6a420d33f7dc320f4" translate="yes" xml:space="preserve">
          <source>Show all individual modules that have no $VERSION?</source>
          <target state="translated">显示所有没有$VERSION?</target>
        </trans-unit>
        <trans-unit id="432657faf9897211c68f4ccc299c680506ae0f85" translate="yes" xml:space="preserve">
          <source>Show lexical variables used in functions or files</source>
          <target state="translated">显示函数或文件中使用的词汇变量</target>
        </trans-unit>
        <trans-unit id="15563729135e9ba264fbcba30a709d66c8a1dd93" translate="yes" xml:space="preserve">
          <source>Show test comments (this is a no-op if &lt;code&gt;verbose&lt;/code&gt; is selected).</source>
          <target state="translated">显示测试注释（如果选择了 &lt;code&gt;verbose&lt;/code&gt; 则为空操作）。</target>
        </trans-unit>
        <trans-unit id="453672f22864e2ecabd52010a0251f21457a02b2" translate="yes" xml:space="preserve">
          <source>Show test failures (this is a no-op if &lt;code&gt;verbose&lt;/code&gt; is selected).</source>
          <target state="translated">显示测试失败（如果选择了 &lt;code&gt;verbose&lt;/code&gt; 则为空操作）。</target>
        </trans-unit>
        <trans-unit id="e3deb58d49160799c00454338107f604ea794ed5" translate="yes" xml:space="preserve">
          <source>Show usage.</source>
          <target state="translated">显示用途。</target>
        </trans-unit>
        <trans-unit id="66970db782112b1077801cd655daa3c67c2cdecf" translate="yes" xml:space="preserve">
          <source>Shows if the given module is primarily maintained in perl core or on CPAN and bug tracker URL.</source>
          <target state="translated">显示给定的模块是否主要在perl core或CPAN和bug跟踪器URL上维护。</target>
        </trans-unit>
        <trans-unit id="ac75e459283e311c2d85839794c7648cec7df9c2" translate="yes" xml:space="preserve">
          <source>Shuts down a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">关闭Perl解释器。见&lt;a href=&quot;perlembed&quot;&gt;临危&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90e62e13ea37ff3f7a2ddce5609c724fd7e64daf" translate="yes" xml:space="preserve">
          <source>Shuts down a socket connection in the manner indicated by HOW, which has the same interpretation as in the syscall of the same name.</source>
          <target state="translated">以HOW表示的方式关闭一个套接字连接,其解释与同名syscall相同。</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="76e3a47c3cea2b4bc39210e8f1a7a4f458325f46" translate="yes" xml:space="preserve">
          <source>Signal flag. Will be set to a true value if a signal was caught. Clients may check for this flag to abort time-consuming operations.</source>
          <target state="translated">信号标志。如果捕捉到信号,将被设置为真值。客户端可以检查这个标志来中止耗时的操作。</target>
        </trans-unit>
        <trans-unit id="47e8409eab6e54647df4cb7cecc41ee28c30a02b" translate="yes" xml:space="preserve">
          <source>Signal handlers deal with signal names, not numbers. Use &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; to find their names on your system.</source>
          <target state="translated">信号处理程序处理信号名称，而不是数字。使用 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; 在系统上找到它们的名称。</target>
        </trans-unit>
        <trans-unit id="a89722759e06611996072c09d8d893f78366be03" translate="yes" xml:space="preserve">
          <source>Signal handlers need to be set up in the threads for the signals they are expected to act upon. Here's an example for</source>
          <target state="translated">信号处理程序需要在线程中为它们要执行的信号设置。下面是一个例子</target>
        </trans-unit>
        <trans-unit id="4c81c67cfc40c99d8beeb124cd5a299ed53f7fa3" translate="yes" xml:space="preserve">
          <source>Signal handling is also used for timeouts in Unix. While safely protected within an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; block, you set a signal handler to trap alarm signals and then schedule to have one delivered to you in some number of seconds. Then try your blocking operation, clearing the alarm when it's done but not before you've exited your &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; block. If it goes off, you'll use die() to jump out of the block.</source>
          <target state="translated">信号处理也用于Unix中的超时。在 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; 块中受到安全保护的同时，您可以设置信号处理程序以捕获警报信号，然后计划在几秒钟内将信号传递给您。然后尝试您的阻止操作，在完成警报后清除警报，但在退出 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; 块之前不要清除警报。如果不成功，您将使用die（）跳出该块。</target>
        </trans-unit>
        <trans-unit id="c9cd055a7cd87b137130bb8b93c1c2e53904764f" translate="yes" xml:space="preserve">
          <source>Signal handling may not behave as on Unix platforms (where it doesn't exactly &quot;behave&quot;, either :). For instance, calling &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; from signal handlers will cause an exception, since most implementations of &lt;code&gt;signal()&lt;/code&gt; on Windows are severely crippled. Thus, signals may work only for simple things like setting a flag variable in the handler. Using signals under this port should currently be considered unsupported.</source>
          <target state="translated">信号处理的行为可能不如Unix平台（在此也不完全是&amp;ldquo;行为&amp;rdquo; ：）。例如，从信号处理程序调用 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 会导致异常，因为Windows上的 &lt;code&gt;signal()&lt;/code&gt; 的大多数实现都受到严重破坏。因此，信号仅可用于简单的事情，例如在处理程序中设置标志变量。当前应认为不支持在此端口下使用信号。</target>
        </trans-unit>
        <trans-unit id="2e6c417fd537a17b001daa7dbea3a3b50cef51ef" translate="yes" xml:space="preserve">
          <source>Signal number zero may fail because you lack permission to send the signal when directed at a process whose real or saved UID is not identical to the real or effective UID of the sending process, even though the process is alive. You may be able to determine the cause of failure using &lt;code&gt;$!&lt;/code&gt; or &lt;code&gt;%!&lt;/code&gt; .</source>
          <target state="translated">零号信号可能会失败，因为当您定向到其实际或保存的UID与发送过程的实际或有效UID不相同的进程时，即使该进程处于活动状态，您也无法发送信号。您可以使用 &lt;code&gt;$!&lt;/code&gt; 确定故障原因！或 &lt;code&gt;%!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="fec07adfbf089fdf5b54412a5f3085422a9dd0ae" translate="yes" xml:space="preserve">
          <source>Signals are</source>
          <target state="translated">信号是</target>
        </trans-unit>
        <trans-unit id="43861fb85280c34c4b0e58573e896842254a1d10" translate="yes" xml:space="preserve">
          <source>Signals in Plan 9 Perl</source>
          <target state="translated">Plan 9 Perl中的信号</target>
        </trans-unit>
        <trans-unit id="e4cf0392296064579858651f856889aadbc2805e" translate="yes" xml:space="preserve">
          <source>Signatures</source>
          <target state="translated">Signatures</target>
        </trans-unit>
        <trans-unit id="d9d7c542958055b1904998cdb447122ec36a75ab" translate="yes" xml:space="preserve">
          <source>Signed bitwise operators.</source>
          <target state="translated">符号位运算符。</target>
        </trans-unit>
        <trans-unit id="2622f509b356185fe6a42f6313ddbc8e57057af2" translate="yes" xml:space="preserve">
          <source>Significant performance improvements</source>
          <target state="translated">性能显著提高</target>
        </trans-unit>
        <trans-unit id="ae6207f79c10c58b3e0ef4c08bbf6c86acc82fd9" translate="yes" xml:space="preserve">
          <source>Signum function. Set the number to -1, 0, or 1, depending on whether the number is negative, zero, or positive, respectively. Does not modify NaNs.</source>
          <target state="translated">符号功能。根据数字是负数、零、还是正数,分别设置为-1、0、1。不修改NaNs。</target>
        </trans-unit>
        <trans-unit id="31506097adfa948440134c0119e5a52038393445" translate="yes" xml:space="preserve">
          <source>Silberschatz, Abraham, and Peter B. Galvin. Operating System Concepts, 4th ed. Addison-Wesley, 1995, ISBN 0-201-59292-4</source>
          <target state="translated">Silberschatz,Abraham,and Peter B.Galvin.操作系统概念》,第4版。Addison-Wesley,1995年,ISBN 0-201-59292-4。</target>
        </trans-unit>
        <trans-unit id="8c4b469b48eb970781d347cff775a6eb6ed07b9c" translate="yes" xml:space="preserve">
          <source>Similar problems can occur when storing &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; in HVs:</source>
          <target state="translated">在HV中存储 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 时，可能会发生类似的问题：</target>
        </trans-unit>
        <trans-unit id="0939c3fe5c0d5d2bff40d1b5db20a06321bba976" translate="yes" xml:space="preserve">
          <source>Similar to</source>
          <target state="translated">类似于</target>
        </trans-unit>
        <trans-unit id="ca29a7deeeb800f3b647ae8e447ace2495bd48e6" translate="yes" xml:space="preserve">
          <source>Similar to &quot;CHECK&quot;, but for &lt;code&gt;INIT&lt;/code&gt; -blocks, not &lt;code&gt;CHECK&lt;/code&gt; blocks.</source>
          <target state="translated">与&amp;ldquo; CHECK&amp;rdquo;类似，但是对于 &lt;code&gt;INIT&lt;/code&gt; -blocks，不是 &lt;code&gt;CHECK&lt;/code&gt; 块。</target>
        </trans-unit>
        <trans-unit id="a02dc2c9e4fd99225658784381bc57431376c4f2" translate="yes" xml:space="preserve">
          <source>Similar to $io-&amp;gt;seek, but sets the IO::File's position using the system call lseek(2) directly, so will confuse most perl IO operators except sysread and syswrite (see &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for full details)</source>
          <target state="translated">与$ io-&amp;gt; seek相似，但是直接使用系统调用lseek（2）设置IO :: File的位置，因此会混淆大多数perl IO操作符，但sysread和syswrite除外（有关详细信息，请参阅&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="aeabee18f75813e1d32d468eb7ba172bf546eaed" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt; and &lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;, but with the return sense inverted. &lt;code&gt;none&lt;/code&gt; returns true only if no value in the &lt;code&gt;@list&lt;/code&gt; causes the &lt;code&gt;BLOCK&lt;/code&gt; to return true, and &lt;code&gt;notall&lt;/code&gt; returns true only if not all of the values do.</source>
          <target state="translated">类似&lt;a href=&quot;#any&quot;&gt;的任何&lt;/a&gt;和&lt;a href=&quot;#all&quot;&gt;所有的&lt;/a&gt;，但倒回的感觉。 &lt;code&gt;none&lt;/code&gt; 返回true只有在没有价值 &lt;code&gt;@list&lt;/code&gt; 导致 &lt;code&gt;BLOCK&lt;/code&gt; 返回true，并 &lt;code&gt;notall&lt;/code&gt; 返回true，只有当不是所有的价值做。</target>
        </trans-unit>
        <trans-unit id="e0b3d2d208d62b5b40ff53db1e72a57e69459f20" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;, except that it requires all elements of the &lt;code&gt;@list&lt;/code&gt; to make the &lt;code&gt;BLOCK&lt;/code&gt; return true. If any element returns false, then it returns false. If the &lt;code&gt;BLOCK&lt;/code&gt; never returns false or the &lt;code&gt;@list&lt;/code&gt; was empty then it returns true.</source>
          <target state="translated">类似于&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;，除了它需要 &lt;code&gt;@list&lt;/code&gt; 的所有元素以使 &lt;code&gt;BLOCK&lt;/code&gt; 返回true。如果任何元素返回false，则返回false。如果 &lt;code&gt;BLOCK&lt;/code&gt; 从不返回false或 &lt;code&gt;@list&lt;/code&gt; 为空，则返回true。</target>
        </trans-unit>
        <trans-unit id="b9665cd00110ac2a060c12898dd3b9d89a35f309" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt; but returns the entry in the list with the lowest numerical value. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">与&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;相似，但返回列表中具有最低数值的条目。如果列表为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1acc3d00496e9a8972d2b21602c04ac03da5cacb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;, but treats all the entries in the list as strings and returns the highest string as defined by the &lt;code&gt;gt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">与&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;相似，但是将列表中的所有条目都视为字符串，并返回 &lt;code&gt;gt&lt;/code&gt; 运算符定义的最高字符串。如果列表为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a68b93abd1f3ba4015d6e167facf857ecad51b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;, but treats all the entries in the list as strings and returns the lowest string as defined by the &lt;code&gt;lt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">与&lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;相似，但是将列表中的所有条目都视为字符串，并返回由 &lt;code&gt;lt&lt;/code&gt; 运算符定义的最低字符串。如果列表为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="720744a95bf0e839c040c184fab6270aac42881d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#sum&quot;&gt;sum&lt;/a&gt;, except this returns 0 when given an empty list, rather than &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#sum&quot;&gt;sum&lt;/a&gt;相似，除了在给定空列表而不是 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 时返回0 。</target>
        </trans-unit>
        <trans-unit id="de0c5d81a8f59f78025d72fb656f559ed47e0b02" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;%+&lt;/code&gt; , this variable allows access to the named capture groups in the last successful match in the currently active dynamic scope. To each capture group name found in the regular expression, it associates a reference to an array containing the list of values captured by all buffers with that name (should there be several of them), in the order where they appear.</source>
          <target state="translated">与 &lt;code&gt;%+&lt;/code&gt; 相似，此变量允许访问当前活动动态范围中的最后一次成功匹配中的命名捕获组。对于在正则表达式中找到的每个捕获组名称，它将引用与包含该名称（应有多个）的所有缓冲区捕获的值列表的数组相关联（按它们出现的顺序）。</target>
        </trans-unit>
        <trans-unit id="e85d1cf5a45c378c11b14a61c254003e40f86d06" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(??{ code })&lt;/code&gt; except that it does not involve executing any code or potentially compiling a returned pattern string; instead it treats the part of the current pattern contained within a specified capture group as an independent pattern that must match at the current position. Also different is the treatment of capture buffers, unlike &lt;code&gt;(??{ code })&lt;/code&gt; recursive patterns have access to their callers match state, so one can use backreferences safely.</source>
          <target state="translated">与 &lt;code&gt;(??{ code })&lt;/code&gt; 类似，不同之处在于它不涉及执行任何代码或潜在地编译返回的模式字符串；相反，它将包含在指定捕获组中的当前模式部分视为必须在当前位置匹配的独立模式。捕获缓冲区的处理也有所不同，与 &lt;code&gt;(??{ code })&lt;/code&gt; 递归模式可以访问其调用者的匹配状态不同，因此可以安全地使用反向引用。</target>
        </trans-unit>
        <trans-unit id="7b5e1028f59af1e35880841b72d98eb83a4ac03c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(R1)&lt;/code&gt; , this predicate checks to see if we're executing directly inside of the leftmost group with a given name (this is the same logic used by &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; to disambiguate). It does not check the full stack, but only the name of the innermost active recursion.</source>
          <target state="translated">与 &lt;code&gt;(R1)&lt;/code&gt; 相似，此谓词检查是否在给定名称的最左边的组中直接执行（这与 &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; 用于消除歧义的逻辑相同）。它不检查完整堆栈，仅检查最内部活动递归的名称。</target>
        </trans-unit>
        <trans-unit id="d819c8539b4d29d94e8d4689944b0f7272e6c433" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;any&lt;/code&gt; returns true if any element makes the &lt;code&gt;BLOCK&lt;/code&gt; return a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then it returns false.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 相似，它依次评估对 &lt;code&gt;@list&lt;/code&gt; 的每个元素的 &lt;code&gt;BLOCK&lt;/code&gt; 设置 &lt;code&gt;$_&lt;/code&gt; 。 &lt;code&gt;any&lt;/code&gt; 如有元素使返回true &lt;code&gt;BLOCK&lt;/code&gt; 返回真值。如果 &lt;code&gt;BLOCK&lt;/code&gt; 从不返回true或 &lt;code&gt;@list&lt;/code&gt; 为空，则返回false。</target>
        </trans-unit>
        <trans-unit id="309f2e4aced8f70bc86983e34f644c5eeda43d60" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;first&lt;/code&gt; returns the first element where the result from &lt;code&gt;BLOCK&lt;/code&gt; is a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 相似，它依次评估对 &lt;code&gt;@list&lt;/code&gt; 的每个元素的 &lt;code&gt;BLOCK&lt;/code&gt; 设置 &lt;code&gt;$_&lt;/code&gt; 。 &lt;code&gt;first&lt;/code&gt; 返回第一个元素，其中 &lt;code&gt;BLOCK&lt;/code&gt; 的结果为真值。如果 &lt;code&gt;BLOCK&lt;/code&gt; 从不返回true或 &lt;code&gt;@list&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e075f217be25d05567036ad66b6856b5e68b562" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;@+&lt;/code&gt; , the &lt;code&gt;%+&lt;/code&gt; hash allows access to the named capture buffers, should they exist, in the last successful match in the currently active dynamic scope.</source>
          <target state="translated">与 &lt;code&gt;@+&lt;/code&gt; 相似， &lt;code&gt;%+&lt;/code&gt; 哈希允许访问命名捕获缓冲区（如果存在），如果它们存在，则在当前活动动态范围的最后成功匹配中。</target>
        </trans-unit>
        <trans-unit id="a8d5383c2abb4219427283869f7f92149d2a972c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Open&lt;/code&gt; , returns PerlIO* on success, &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">与 &lt;code&gt;Open&lt;/code&gt; 类似，成功时返回PerlIO *，失败时返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b9b990cdb77a226953210e003d5b8ec28f7e6d4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;eq_array()&lt;/code&gt; , except the order of the elements is &lt;b&gt;not&lt;/b&gt; important. This is a deep check, but the irrelevancy of order only applies to the top level.</source>
          <target state="translated">与 &lt;code&gt;eq_array()&lt;/code&gt; 类似，除了元素的顺序&lt;b&gt;并不&lt;/b&gt;重要。这是一个深层检查，但顺序的无关性仅适用于顶层。</target>
        </trans-unit>
        <trans-unit id="799cf1cf4afc49012909146223bfe3d0985a8027" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;htmlify()&lt;/code&gt; , but turns non-alphanumerics into underscores. Note that &lt;code&gt;anchorify()&lt;/code&gt; is not exported by default.</source>
          <target state="translated">与 &lt;code&gt;htmlify()&lt;/code&gt; 类似，但是将非字母数字转换为下划线。请注意，默认情况下不会导出 &lt;code&gt;anchorify()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e12c5c9a9a0658e780b40222b20b1585f58ad997" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;is()&lt;/code&gt; , except that if $got and $expected are references, it does a deep comparison walking each data structure to see if they are equivalent. If the two structures are different, it will display the place where they start differing.</source>
          <target state="translated">与 &lt;code&gt;is()&lt;/code&gt; 相似，不同之处在于如果$ got和$ expected是引用，它将对每个数据结构进行深度比较以查看它们是否等效。如果两个结构不同，它将显示它们开始不同的位置。</target>
        </trans-unit>
        <trans-unit id="78a60ea110d9d9e2f388b25322faf3b4d38a6a8c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt; but only active groups that match the pattern are returned. &lt;code&gt;PATTERN&lt;/code&gt; can be a group pattern.</source>
          <target state="translated">与 &lt;code&gt;list&lt;/code&gt; 类似，但仅返回与模式匹配的活动组。 &lt;code&gt;PATTERN&lt;/code&gt; 可以是组模式。</target>
        </trans-unit>
        <trans-unit id="8394e4ee5f103a1c48fa6ce025d057e64f7170cc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;lock_keys()&lt;/code&gt; , with the difference being that the optional key list specifies keys that may or may not be already in the hash. Essentially this is an easier way to say</source>
          <target state="translated">与 &lt;code&gt;lock_keys()&lt;/code&gt; 相似，不同之处在于可选密钥列表指定了可能已经或可能不在哈希中的密钥。本质上，这是一种更简单的说法</target>
        </trans-unit>
        <trans-unit id="ffb0fd1c6610a16c5e7d118e0a5ba89092c8069d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;newUNOP&lt;/code&gt; , but creates an UNOP_AUX struct instead, with op_aux initialised to aux</source>
          <target state="translated">与 &lt;code&gt;newUNOP&lt;/code&gt; 相似，但是创建一个UNOP_AUX结构，而op_aux初始化为aux</target>
        </trans-unit>
        <trans-unit id="cc376b4266acbbeb8358039fda2afe78067b9523" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;is()&lt;/code&gt; and &lt;code&gt;isnt()&lt;/code&gt; compare their two arguments with &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;ne&lt;/code&gt; respectively and use the result of that to determine if the test succeeded or failed. So these:</source>
          <target state="translated">与 &lt;code&gt;ok()&lt;/code&gt; 相似， &lt;code&gt;is()&lt;/code&gt; 和 &lt;code&gt;isnt()&lt;/code&gt; 分别将它们的两个参数与 &lt;code&gt;eq&lt;/code&gt; 和 &lt;code&gt;ne&lt;/code&gt; 进行比较，并使用其结果确定测试是成功还是失败。所以这些：</target>
        </trans-unit>
        <trans-unit id="2d613f276bedf9458ff8ce32e8990c5576137f0b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;like()&lt;/code&gt; matches $got against the regex &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/expected/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;ok()&lt;/code&gt; 类似， &lt;code&gt;like()&lt;/code&gt; 将$ got与regex &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/expected/&lt;/a&gt;&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="050d8bfd9d6dd81a6f8789b0e8d9cd7b8f6780b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt; , but localize &lt;code&gt;@gv&lt;/code&gt; and &lt;code&gt;%gv&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;save_scalar&lt;/code&gt; 相似，但是将 &lt;code&gt;@gv&lt;/code&gt; 和 &lt;code&gt;%gv&lt;/code&gt; 本地化。</target>
        </trans-unit>
        <trans-unit id="07501a6bba290a81025a9cc58f969fd7da78b384" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt; , but will reinstate an &lt;code&gt;SV *&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;save_scalar&lt;/code&gt; 类似，但是将恢复 &lt;code&gt;SV *&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1390e677f6a0ebeb104aa1d188d2523b30d8bc4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_svref&lt;/code&gt; , but localize &lt;code&gt;AV *&lt;/code&gt; and &lt;code&gt;HV *&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;save_svref&lt;/code&gt; 相似，但是将 &lt;code&gt;AV *&lt;/code&gt; 和 &lt;code&gt;HV *&lt;/code&gt; 本地化。</target>
        </trans-unit>
        <trans-unit id="7cf1c2a19f0b0ee74a54bd214a8ec4d84f8e3cf9" translate="yes" xml:space="preserve">
          <source>Similar to C</source>
          <target state="translated">与C相似</target>
        </trans-unit>
        <trans-unit id="a64ea60affb2a9690ec81f413108d64202543e9b" translate="yes" xml:space="preserve">
          <source>Similar to T_PTR except that the pointer is stored in a scalar and the reference to that scalar is returned to the caller. This can be used to hide the actual pointer value from the programmer since it is usually not required directly from within perl.</source>
          <target state="translated">类似于T_PTR,除了指针被存储在一个标量中,而对该标量的引用被返回给调用者。这可以用来向程序员隐藏实际的指针值,因为在perl中通常不需要直接使用它。</target>
        </trans-unit>
        <trans-unit id="4ed1b14b67aa9193491a3dd6d65f8409d185456b" translate="yes" xml:space="preserve">
          <source>Similar to T_PTROBJ in that the pointer is blessed into a scalar object. The difference is that when the object is passed back into XS it must be of the correct type (inheritance is not supported) while T_PTROBJ supports inheritance.</source>
          <target state="translated">与T_PTROBJ类似,指针被祝福成一个标量对象。不同的是,当对象传回XS时,它必须是正确的类型(不支持继承),而T_PTROBJ支持继承。</target>
        </trans-unit>
        <trans-unit id="98345bece5539f546d5a8e96d6aece125a75354c" translate="yes" xml:space="preserve">
          <source>Similar to T_PTRREF except that the reference is blessed into a class. This allows the pointer to be used as an object. Most commonly used to deal with C structs. The typemap checks that the perl object passed into the XS routine is of the correct class (or part of a subclass).</source>
          <target state="translated">类似于T_PTRREF,除了引用被祝福成一个类。这使得指针可以作为一个对象使用。最常用于处理C结构。类型映射检查传递到XS例程中的perl对象是否属于正确的类(或子类的一部分)。</target>
        </trans-unit>
        <trans-unit id="a0e3f786e5320b6b926d5843480fabad22b49df4" translate="yes" xml:space="preserve">
          <source>Similar to T_PTRREF, except the pointer stored in the referenced scalar is dereferenced and copied to the output variable. This means that T_REFREF is to T_PTRREF as T_OPAQUE is to T_OPAQUEPTR. All clear?</source>
          <target state="translated">类似于T_PTRREF,除了存储在被引用标量中的指针被取消引用并复制到输出变量中。这意味着T_REFREF之于T_PTRREF就像T_OPAQUE之于T_OPAQUEPTR一样。都清楚了吗?</target>
        </trans-unit>
        <trans-unit id="316a66a038c9003e3588353dd7b06b4570041574" translate="yes" xml:space="preserve">
          <source>Similar to key/value hash slices (and also introduced in Perl 5.20), the % array slice syntax returns a list of index/value pairs:</source>
          <target state="translated">类似于键/值哈希分片(在Perl 5.20中也有介绍),%数组分片语法返回一个索引/值对的列表。</target>
        </trans-unit>
        <trans-unit id="fcdb3335ff45dd421a45fea8e6567734b9ec0cac" translate="yes" xml:space="preserve">
          <source>Similar to mkstemp(), except that an extra argument can be supplied with a suffix to be appended to the template.</source>
          <target state="translated">类似于mkstemp(),只是可以提供一个额外的参数,并在模板中添加一个后缀。</target>
        </trans-unit>
        <trans-unit id="4cf9bfb3c81fe1275534c974c84d67c5db310bda" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">与perl的 &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 关键字相似，但是将给定列表解释为偶数大小的对列表。它在标量上下文中多次调用 &lt;code&gt;BLOCK&lt;/code&gt; ，并将 &lt;code&gt;$a&lt;/code&gt; 和 &lt;code&gt;$b&lt;/code&gt; 设置为 &lt;code&gt;@kvlist&lt;/code&gt; 中的连续值对。</target>
        </trans-unit>
        <trans-unit id="20605e6412e378f2426dfa2ecf790a73c30912ee" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in list context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">与perl的 &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; 关键字相似，但是将给定列表解释为偶数大小的对列表。它在列表上下文中多次调用 &lt;code&gt;BLOCK&lt;/code&gt; ，并将 &lt;code&gt;$a&lt;/code&gt; 和 &lt;code&gt;$b&lt;/code&gt; 设置为 &lt;code&gt;@kvlist&lt;/code&gt; 中的连续值对。</target>
        </trans-unit>
        <trans-unit id="d4e0979e74abc467bf78f9a39fbc983727e9baaf" translate="yes" xml:space="preserve">
          <source>Similar to strings, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; acts like apostrophes on a regexp; all other &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; delimiters act like quotes. If the regexp evaluates to the empty string, the regexp in the</source>
          <target state="translated">与字符串相似， &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; 的作用类似于正则表达式上的撇号；所有其他 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 个定界符的作用就像引号。如果regexp计算为空字符串，则</target>
        </trans-unit>
        <trans-unit id="b7ef33d2521670adf2f6b3cf61cae1999ab3778c" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#first&quot;&gt;first&lt;/a&gt; function, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">与第&lt;a href=&quot;#first&quot;&gt;一个&lt;/a&gt;函数相似，但是将给定列表解释为偶数大小的对列表。它在标量上下文中多次调用 &lt;code&gt;BLOCK&lt;/code&gt; ，并将 &lt;code&gt;$a&lt;/code&gt; 和 &lt;code&gt;$b&lt;/code&gt; 设置为 &lt;code&gt;@kvlist&lt;/code&gt; 中的连续值对。</target>
        </trans-unit>
        <trans-unit id="0747626402d2dd7f7c45b97cc24e9304db46b6d7" translate="yes" xml:space="preserve">
          <source>Similar to the above, a sigil, followed by bareword text in brackets, where the first character is either a caret followed by an uppercase letter, like &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; or a non-&lt;code&gt;NUL&lt;/code&gt; , non-space literal control like &lt;code&gt;${\7LOBAL_PHASE}&lt;/code&gt; . Like the above, when not under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; , the characters in &lt;code&gt;[0x80-0xFF]&lt;/code&gt; are considered controls, but as of v5.22, the use of any that are non-graphical are deprecated, and as of v5.20 the use of any ASCII-range literal control is deprecated. Support for these will be removed in a future version of perl.</source>
          <target state="translated">与上述类似，标记符后跟方括号内的裸字文本，其中第一个字符是插入符号，后跟大写字母（例如 &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; 或非 &lt;code&gt;NUL&lt;/code&gt; ，非空格文字控件（例如 &lt;code&gt;${\7LOBAL_PHASE}&lt;/code&gt; 。与上述类似，当不在 &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; &lt;code&gt;[0x80-0xFF]&lt;/code&gt; ，[0x80-0xFF]中的字符被视为控件，但是从v5.22开始，不使用任何非图形字符，而从v5.20开始，不建议使用任何ASCII范围文字控件。在perl的将来版本中将删除对这些功能的支持。</target>
        </trans-unit>
        <trans-unit id="3f2112c220c2b71523b70f673d7ec4dcde3c15e0" translate="yes" xml:space="preserve">
          <source>Similarly &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'Debug'&lt;/code&gt; produces debugging output, the difference being that it allows the fine tuning of what debugging output will be emitted. Options are divided into three groups, those related to compilation, those related to execution and those related to special purposes. The options are as follows:</source>
          <target state="translated">类似地， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'Debug'&lt;/code&gt; 产生调试输出，不同之处在于它允许对将发出的调试输出进行微调。选项分为三类，与编译有关的选项，与执行有关的选项和与特殊目的有关的选项。选项如下：</target>
        </trans-unit>
        <trans-unit id="84d106c3869ea4929caecddf63406cc3cb977903" translate="yes" xml:space="preserve">
          <source>Similarly all warnings are disabled in a block by either of these:</source>
          <target state="translated">同样,在一个区块中,所有的警告都会被这两种方式禁用。</target>
        </trans-unit>
        <trans-unit id="55dea1c41dc940323d881fe12ebce9ec69c591cf" translate="yes" xml:space="preserve">
          <source>Similarly if you opened that handle &lt;code&gt;FH&lt;/code&gt; with regular &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, you may use:</source>
          <target state="translated">同样，如果您通过常规 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; 打开了处理 &lt;code&gt;FH&lt;/code&gt; 的代码，则可以使用：</target>
        </trans-unit>
        <trans-unit id="53be67a31768325e220272f535bb98f85e3fcddf" translate="yes" xml:space="preserve">
          <source>Similarly one could take the output of the third numbers column from recipe 2 to obtain a &lt;code&gt;$cp_1047&lt;/code&gt; table. The fourth numbers column of the output from recipe 2 could provide a &lt;code&gt;$cp_posix_bc&lt;/code&gt; table suitable for transcoding as well.</source>
          <target state="translated">同样，可以从配方2中获取第三个数字列的输出，以获得 &lt;code&gt;$cp_1047&lt;/code&gt; 表。配方2输出的第四个数字列可以提供一个 &lt;code&gt;$cp_posix_bc&lt;/code&gt; 适合转码的$ cp_posix_bc表。</target>
        </trans-unit>
        <trans-unit id="d0f4815a422eaba46c3d84f219793b24d2375a6b" translate="yes" xml:space="preserve">
          <source>Similarly the NULL needs to be taken into account when you are considering the length of existing keys/values.</source>
          <target state="translated">同样,在考虑现有键/值的长度时,也需要考虑到NULL。</target>
        </trans-unit>
        <trans-unit id="cc4fb6a726563143c1c04086d201d673d7729dd3" translate="yes" xml:space="preserve">
          <source>Similarly,</source>
          <target state="translated">Similarly,</target>
        </trans-unit>
        <trans-unit id="90864fd67d3db4c105028d84006c631220f52597" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; is part of the hash referred to by the scalar variable &lt;code&gt;$href&lt;/code&gt; , perhaps even one with no name. &lt;code&gt;$href{'red'}&lt;/code&gt; is part of the deceptively named &lt;code&gt;%href&lt;/code&gt; hash. It's easy to forget to leave out the &lt;code&gt;-&amp;gt;&lt;/code&gt; , and if you do, you'll get bizarre results when your program gets array and hash elements out of totally unexpected hashes and arrays that weren't the ones you wanted to use.</source>
          <target state="translated">类似地， &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; 是标量变量 &lt;code&gt;$href&lt;/code&gt; 引用的哈希的一部分，甚至可能是没有名字的变量。 &lt;code&gt;$href{'red'}&lt;/code&gt; 是具有欺骗性的 &lt;code&gt;%href&lt;/code&gt; 哈希的一部分。忘记 &lt;code&gt;-&amp;gt;&lt;/code&gt; 是很容易的，如果这样做，当程序从不是您要使用的完全意外的散列和数组中获取数组和散列元素时，就会得到奇怪的结果。</target>
        </trans-unit>
        <trans-unit id="4d9f2629494d34ddc3413b1763638df2e3855408" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;-&amp;gt;autodefer(1)&lt;/code&gt; re-enables autodeferment, and &lt;code&gt;-&amp;gt;autodefer()&lt;/code&gt; recovers the current value of the autodefer setting.</source>
          <target state="translated">同样， &lt;code&gt;-&amp;gt;autodefer(1)&lt;/code&gt; 重新启用自动防御， &lt;code&gt;-&amp;gt;autodefer()&lt;/code&gt; 恢复自动防御设置的当前值。</target>
        </trans-unit>
        <trans-unit id="ed0a74921b522c90d239c941839d98f9f544df9e" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;.=&lt;/code&gt; and &lt;code&gt;x=&lt;/code&gt; operators lose their mathemagical properties if the string conversion substitution is applied.</source>
          <target state="translated">同样，如果应用了字符串转换替换，则 &lt;code&gt;.=&lt;/code&gt; 和 &lt;code&gt;x=&lt;/code&gt; 运算符将失去其数学性质。</target>
        </trans-unit>
        <trans-unit id="98381cd292cecc23499c5a97dc7663476a411916" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; magic can be used much like tie() to call a C function any time a scalar's value is used or changed. The &lt;code&gt;MAGIC&lt;/code&gt; 's &lt;code&gt;mg_ptr&lt;/code&gt; field points to a &lt;code&gt;ufuncs&lt;/code&gt; structure:</source>
          <target state="translated">类似地， &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; 使用或更改标量值时，可以像tie（）一样使用PERL_MAGIC_uvar魔术来调用C函数。在 &lt;code&gt;MAGIC&lt;/code&gt; 的 &lt;code&gt;mg_ptr&lt;/code&gt; 场指向 &lt;code&gt;ufuncs&lt;/code&gt; 结构：</target>
        </trans-unit>
        <trans-unit id="e1434bb43847966624ccbd7c82a8d888d8931593" translate="yes" xml:space="preserve">
          <source>Similarly, Perl's built-in &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; function treats a reference to a blessed object specially. If you call &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref($thing)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;$thing&lt;/code&gt; holds a reference to an object, it will return the name of the class that the object has been blessed into.</source>
          <target state="translated">同样，Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; 函数特别对待对祝福对象的引用。如果调用 &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref($thing)&lt;/a&gt;&lt;/code&gt; 并且 &lt;code&gt;$thing&lt;/code&gt; 拥有对对象的引用，它将返回该对象被祝福的类的名称。</target>
        </trans-unit>
        <trans-unit id="ed57441510534192d07967fc62d33e33379b4e80" translate="yes" xml:space="preserve">
          <source>Similarly, a list assignment in list context produces the list of lvalues assigned to, and a list assignment in scalar context returns the number of elements produced by the expression on the right hand side of the assignment.</source>
          <target state="translated">同理,列表上下文中的列表赋值会产生赋值的l值列表,标量上下文中的列表赋值会返回赋值右侧表达式产生的元素数。</target>
        </trans-unit>
        <trans-unit id="105351b9ff1ce0c3b0da126c3158372b6f241c09" translate="yes" xml:space="preserve">
          <source>Similarly, a value assigned to &lt;code&gt;$)&lt;/code&gt; must also be a space-separated list of numbers. The first number sets the effective gid, and the rest (if any) are passed to &lt;code&gt;setgroups()&lt;/code&gt; . To get the effect of an empty list for &lt;code&gt;setgroups()&lt;/code&gt; , just repeat the new effective gid; that is, to force an effective gid of 5 and an effectively empty &lt;code&gt;setgroups()&lt;/code&gt; list, say &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt; .</source>
          <target state="translated">同样，分配给 &lt;code&gt;$)&lt;/code&gt; 的值也必须是用空格分隔的数字列表。第一个数字设置有效的gid，其余的数字（如果有的话）传递给 &lt;code&gt;setgroups()&lt;/code&gt; 。要获得 &lt;code&gt;setgroups()&lt;/code&gt; 空列表的效果，只需重复新的有效gid；也就是说，强制有效值为5且有效为空的 &lt;code&gt;setgroups()&lt;/code&gt; 列表，例如 &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f830d9f2bf12f89de4edd3497ea1af8e153890fe" translate="yes" xml:space="preserve">
          <source>Similarly, an expression that returns a reference to a scalar can be dereferenced via &lt;code&gt;${...}&lt;/code&gt; . Thus, the above expression may be written as:</source>
          <target state="translated">类似地，可以通过 &lt;code&gt;${...}&lt;/code&gt; 取消引用返回标量引用的表达式。因此，以上表达式可以写为：</target>
        </trans-unit>
        <trans-unit id="d1370fc5b87a4deef9433fab962c63dda2bb0891" translate="yes" xml:space="preserve">
          <source>Similarly, autogeneration for keys &lt;code&gt;'+='&lt;/code&gt; and &lt;code&gt;'++'&lt;/code&gt; is analogous to &lt;code&gt;'-='&lt;/code&gt; and &lt;code&gt;'--'&lt;/code&gt; above:</source>
          <target state="translated">同样，键 &lt;code&gt;'+='&lt;/code&gt; 和 &lt;code&gt;'++'&lt;/code&gt; 自动生成类似于上面的 &lt;code&gt;'-='&lt;/code&gt; 和 &lt;code&gt;'--'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="22f4fe3ff0b7318ce2f9a1f22a4a30c916f48517" translate="yes" xml:space="preserve">
          <source>Similarly, because of all the subscripting that is done using single words, the same rule applies to any bareword that is used for subscripting a hash. So now, instead of writing</source>
          <target state="translated">同样,由于所有的下标都是使用单字完成的,所以同样的规则也适用于任何用于下标哈希的裸字。所以,现在,不用再写</target>
        </trans-unit>
        <trans-unit id="1ef17c2e729b74afc14b925795781df60a813811" translate="yes" xml:space="preserve">
          <source>Similarly, decimal strings can represent only those numbers which have a finite decimal expansion. Being strings, and thus of arbitrary length, there is no practical limit for the exponent or number of decimal digits for these numbers. (But realize that what we are discussing the rules for just the</source>
          <target state="translated">同样,十进制字符串只能表示那些具有有限十进制扩展的数字。作为字符串,因此是任意长度的,对于这些数字的指数或小数位数没有实际的限制。但要知道,我们所讨论的规则仅仅是对于</target>
        </trans-unit>
        <trans-unit id="d345f5b26d91c2f90c4bf682659d17c36e269cb0" translate="yes" xml:space="preserve">
          <source>Similarly, for repeated &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/()/g&lt;/a&gt;&lt;/code&gt; the second-best match is the match at the position one notch further in the string.</source>
          <target state="translated">类似地，对于重复的 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/()/g&lt;/a&gt;&lt;/code&gt; ，第二个最佳匹配是字符串中更远一个位置处的匹配。</target>
        </trans-unit>
        <trans-unit id="dee2c36ef0fdac4abda9dcad28ab4aed983df538" translate="yes" xml:space="preserve">
          <source>Similarly, functions that return text data--such as a function that fetches a web page--should sometimes translate newlines before returning the data, if they've not yet been translated to the local newline representation. A single line of code will often suffice:</source>
          <target state="translated">同样,返回文本数据的函数--比如获取网页的函数--有时应该在返回数据之前翻译换行,如果它们还没有被翻译成本地换行表示。一行代码通常就足够了。</target>
        </trans-unit>
        <trans-unit id="6397152c0c35f4b75972d06222dcea4b97f1756f" translate="yes" xml:space="preserve">
          <source>Similarly, if the &lt;code&gt;compress&lt;/code&gt; program is available, you can use this to write a &lt;code&gt;.tar.Z&lt;/code&gt; file</source>
          <target state="translated">同样，如果有 &lt;code&gt;compress&lt;/code&gt; 程序，则可以使用它编写一个 &lt;code&gt;.tar.Z&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="5e75a2bb501471358d82a9998e95b65710f45b03" translate="yes" xml:space="preserve">
          <source>Similarly, if you need the threads object, but your thread will not be returning a value (i.e.,</source>
          <target state="translated">同样,如果你需要线程对象,但你的线程不会返回一个值(即。</target>
        </trans-unit>
        <trans-unit id="5871ebe0fa13ed14449c1f6ca87d126616162345" translate="yes" xml:space="preserve">
          <source>Similarly, in the failure branch we could use &lt;code&gt;PUSHs&lt;/code&gt;</source>
          <target state="translated">同样，在失败分支中，我们可以使用 &lt;code&gt;PUSHs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9077bdc5741605a4137fa6215e60fd225b8f3e44" translate="yes" xml:space="preserve">
          <source>Similarly, it would be better to use &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; instead of,</source>
          <target state="translated">同样，最好 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="c46d4cfe15f7f292996d268d497a4ca8dd6bd83c" translate="yes" xml:space="preserve">
          <source>Similarly, just because an operator lets you assume default arguments doesn't mean that you have to make use of the defaults. The defaults are there for lazy systems programmers writing one-shot programs. If you want your program to be readable, consider supplying the argument.</source>
          <target state="translated">同样,一个操作符让你假设默认参数并不意味着你必须使用默认值。默认值是为懒惰的系统程序员编写一次性程序而存在的。如果你希望你的程序是可读的,可以考虑提供参数。</target>
        </trans-unit>
        <trans-unit id="aab81862aa9c1688c2206840c0db77adfc7697fb" translate="yes" xml:space="preserve">
          <source>Similarly, mixing signals and threads may be problematic. Implementations are platform-dependent, and even the POSIX semantics may not be what you expect (and Perl doesn't even give you the full POSIX API). For example, there is no way to guarantee that a signal sent to a multi-threaded Perl application will get intercepted by any particular thread. (However, a recently added feature does provide the capability to send signals between threads. See &lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING in threads&lt;/a&gt; for more details.)</source>
          <target state="translated">类似地，混合信号和线程可能会出现问题。实现是依赖于平台的，甚至POSIX语义也可能不是您期望的（Perl甚至没有提供完整的POSIX API）。例如，没有办法保证发送到多线程Perl应用程序的信号将被任何特定线程截获。（然而，最近添加的功能并提供在线程之间发送信号的能力。见&lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;在线程的线程信令&lt;/a&gt;的更多细节。）</target>
        </trans-unit>
        <trans-unit id="2fa030e076fa248a433f0f83ee4a1aceaeee249f" translate="yes" xml:space="preserve">
          <source>Similarly, the parameter &lt;code&gt;inc_override&lt;/code&gt; may be a reference to an array which is used in place of the default module search paths from &lt;code&gt;@INC&lt;/code&gt; .</source>
          <target state="translated">类似地，参数 &lt;code&gt;inc_override&lt;/code&gt; 可以是对数组的引用，该数组用于代替 &lt;code&gt;@INC&lt;/code&gt; 的默认模块搜索路径。</target>
        </trans-unit>
        <trans-unit id="1497da8abe3ed6eca13bd6302e3d281ea65007d7" translate="yes" xml:space="preserve">
          <source>Similarly, the resultant filespec will contain the file version only if one was present in the input filespec.</source>
          <target state="translated">类似地,只有当输入的 filespec 中存在文件版本时,结果的 filespec 才会包含文件版本。</target>
        </trans-unit>
        <trans-unit id="0dacead88183b1e9c6304a4ceec665b6c24796d7" translate="yes" xml:space="preserve">
          <source>Similarly, they can be used in regular expression literals</source>
          <target state="translated">同样,它们也可以用于正则表达式的字面意义中</target>
        </trans-unit>
        <trans-unit id="395326d4967b38aae5eb742109108213c899c254" translate="yes" xml:space="preserve">
          <source>Similarly, this is invalid:</source>
          <target state="translated">同样,这也是无效的。</target>
        </trans-unit>
        <trans-unit id="6c8f54b856913d21b69f361a1a90203715ac01de" translate="yes" xml:space="preserve">
          <source>Similarly, this recipe can be used for properties that do require adjustments:</source>
          <target state="translated">同样,这个配方也可以用于确实需要调整的属性。</target>
        </trans-unit>
        <trans-unit id="e4b2e4fdd23d41dfea9d8225a12a424a715230bb" translate="yes" xml:space="preserve">
          <source>Similarly, this:</source>
          <target state="translated">同样,这。</target>
        </trans-unit>
        <trans-unit id="d1bdda2be136926ef9a893301ff91d18747c507f" translate="yes" xml:space="preserve">
          <source>Similarly, to copy an anonymous hash, you can use</source>
          <target state="translated">同样,要复制匿名哈希,你可以使用</target>
        </trans-unit>
        <trans-unit id="7850beac28db723d025cfad11fb93ce97e2ced9b" translate="yes" xml:space="preserve">
          <source>Similarly, using &lt;code&gt;$^W&lt;/code&gt; to either disable or enable blocks of code is fundamentally flawed. For a start, say you want to disable warnings in a block of code. You might expect this to be enough to do the trick:</source>
          <target state="translated">同样，使用 &lt;code&gt;$^W&lt;/code&gt; 禁用或启用代码块从根本上来说也是有缺陷的。首先，假设您要禁用代码块中的警告。您可能希望这足以解决问题：</target>
        </trans-unit>
        <trans-unit id="2664530a7df4eabf1ac2e9d54c9f06c6deee6b41" translate="yes" xml:space="preserve">
          <source>Similarly, with this code</source>
          <target state="translated">同样,在这个代码中</target>
        </trans-unit>
        <trans-unit id="b0293d771b0de8656e1c85bf1faad486bf545599" translate="yes" xml:space="preserve">
          <source>Similarly, you may use these I/O layers on output streams to automatically convert Unicode to the specified encoding when it is written to the stream. For example, the following snippet copies the contents of the file &quot;text.jis&quot; (encoded as ISO-2022-JP, aka JIS) to the file &quot;text.utf8&quot;, encoded as UTF-8:</source>
          <target state="translated">同样,您可以在输出流上使用这些 I/O 层,当它被写入流时,自动将 Unicode 转换为指定的编码。例如,以下代码段将文件 &quot;text.jis&quot;(编码为ISO-2022-JP,又名JIS)的内容复制到文件 &quot;text.utf8 &quot;中,编码为UTF-8。</target>
        </trans-unit>
        <trans-unit id="a9548affa7e4acbe2593b885978a8755658bc00f" translate="yes" xml:space="preserve">
          <source>Similary to</source>
          <target state="translated">类似于</target>
        </trans-unit>
        <trans-unit id="d038c3b0b4f25db2b86d3e73c906bad029553a54" translate="yes" xml:space="preserve">
          <source>Simon Cozens &amp;lt;simon AT brecon DOT co DOT uk&amp;gt; - Being there to answer zillions of annoying questions</source>
          <target state="translated">Simon Cozens &amp;lt;simon AT brecon DOT co DOT UK&amp;gt;-在那里回答不计其数的烦人问题</target>
        </trans-unit>
        <trans-unit id="db6a8ce8a7b56a60b15a1e81509c2149cf995dfb" translate="yes" xml:space="preserve">
          <source>Simon Cozens and Wolfgang Laun.</source>
          <target state="translated">Simon Cozens和Wolfgang Laun.</target>
        </trans-unit>
        <trans-unit id="911ebed02457e684e0b32e14a35ae78fa21f67e0" translate="yes" xml:space="preserve">
          <source>Simon Cozens, &lt;code&gt;simon@cpan.org&lt;/code&gt;</source>
          <target state="translated">Simon Cozens， &lt;code&gt;simon@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c339f709f7b43634c7fbcb9cbd9eccd0f9cc3ac2" translate="yes" xml:space="preserve">
          <source>Simple Mail Transfer Protocol Client</source>
          <target state="translated">简单邮件传输协议客户端</target>
        </trans-unit>
        <trans-unit id="83f59937d173df040577971290f0e1cacd671a9c" translate="yes" xml:space="preserve">
          <source>Simple Statements</source>
          <target state="translated">简单声明</target>
        </trans-unit>
        <trans-unit id="fd89bedbaeb791041cff4fe148dbfde653b95d00" translate="yes" xml:space="preserve">
          <source>Simple assignment is not overloadable (the &lt;code&gt;'='&lt;/code&gt; key is used for the &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;). Perl does have a way to make assignments to an object do whatever you want, but this involves using tie(), not overload - see &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt; and the &lt;a href=&quot;#COOKBOOK&quot;&gt;COOKBOOK&lt;/a&gt; examples below.</source>
          <target state="translated">简单分配是不可重载的（ &lt;code&gt;'='&lt;/code&gt; 键用于&lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;）。Perl确实有一种使对象赋值的方法，可以执行您想要的任何事情，但这涉及使用tie（）而不是重载-请参见下面的&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;和&lt;a href=&quot;#COOKBOOK&quot;&gt;COOKBOOK&lt;/a&gt;示例。</target>
        </trans-unit>
        <trans-unit id="94eac8882772ef72bea55863ece1200dedf301b7" translate="yes" xml:space="preserve">
          <source>Simple enough. Now compile and run:</source>
          <target state="translated">很简单。现在编译并运行。</target>
        </trans-unit>
        <trans-unit id="764eff41a5149cfadde2c6b72cdd2e21368ca43b" translate="yes" xml:space="preserve">
          <source>Simple examples to open a file for reading:</source>
          <target state="translated">打开文件阅读的简单例子。</target>
        </trans-unit>
        <trans-unit id="8bbdbbffdc1d0c057f0470ba8573e7773f1d085a" translate="yes" xml:space="preserve">
          <source>Simple interface to Locale::Maketext::Lexicon</source>
          <target state="translated">Locale::Maketext::Lexicon的简单接口。</target>
        </trans-unit>
        <trans-unit id="d1a65de4566d838633c7cfe8d2f3954d6165e02e" translate="yes" xml:space="preserve">
          <source>Simple methods for simple tasks</source>
          <target state="translated">简单任务的简单方法</target>
        </trans-unit>
        <trans-unit id="107deb5b12e566d319794bc7ce2d8bcc70c508d0" translate="yes" xml:space="preserve">
          <source>Simple options</source>
          <target state="translated">简单选项</target>
        </trans-unit>
        <trans-unit id="b3c11d00394d5efd68e3089882ea99ef88db2b49" translate="yes" xml:space="preserve">
          <source>Simple subroutine to insert the macros defined by the macro attribute into the Makefile.</source>
          <target state="translated">将宏属性定义的宏插入到Makefile中的简单子程序。</target>
        </trans-unit>
        <trans-unit id="4f78d32b59c097fb10ad26d36f2e74fdbebe4e64" translate="yes" xml:space="preserve">
          <source>Simple word matching</source>
          <target state="translated">简单的词语搭配</target>
        </trans-unit>
        <trans-unit id="f7b02d0f94f21913ddb8d295324658b8720d69e0" translate="yes" xml:space="preserve">
          <source>Simple, eh?</source>
          <target state="translated">很简单,嗯?</target>
        </trans-unit>
        <trans-unit id="4ee1790ba48c5c5f5aec6b6de12f218c366e78db" translate="yes" xml:space="preserve">
          <source>Simple... Now look:</source>
          <target state="translated">简单...现在看。</target>
        </trans-unit>
        <trans-unit id="6c9330b7a2ff965f7db6cafb9f575b4d58374515" translate="yes" xml:space="preserve">
          <source>Simpler definition of attribute handlers</source>
          <target state="translated">简化属性处理程序的定义</target>
        </trans-unit>
        <trans-unit id="50c361747016ee3aff5355a6c96f0c2b139551ef" translate="yes" xml:space="preserve">
          <source>Simplest way to do it automatically is to use your version control system's revision number (you are using version control, right?).</source>
          <target state="translated">最简单的方法是使用你的版本控制系统的版本号(你使用的是版本控制,对吧)来自动完成。</target>
        </trans-unit>
        <trans-unit id="68be18029150583164f9438753e32a72fd3e4c87" translate="yes" xml:space="preserve">
          <source>Simplified source filtering</source>
          <target state="translated">简化的源头过滤</target>
        </trans-unit>
        <trans-unit id="66f7f6fe24549ec54694a312ab799bde4d89b2f3" translate="yes" xml:space="preserve">
          <source>Simply not portable. Get your lvalue to be of the right type, or maybe use temporary variables, or dirty tricks with unions.</source>
          <target state="translated">根本无法移植。让你的lvalue成为正确的类型,或者可能使用临时变量,或者使用联合的肮脏技巧。</target>
        </trans-unit>
        <trans-unit id="20084b93a5f754ce0ccd01de74eb0172d18babfc" translate="yes" xml:space="preserve">
          <source>Simply put:</source>
          <target state="translated">简单的说。</target>
        </trans-unit>
        <trans-unit id="991f810db6d12637f2fd5bbddcb5e86f7ab43bb2" translate="yes" xml:space="preserve">
          <source>Simply put: for each extension linked with your Perl executable (determined during its initial configuration on your computer or when adding a new extension), a Perl subroutine is created to incorporate the extension's routines. Normally, that subroutine is named</source>
          <target state="translated">简单地说:对于每一个与你的Perl可执行文件相连的扩展(在你的计算机上初始配置时或添加新的扩展时确定),都会创建一个Perl子程序来合并扩展的例程。通常,这个子程序的名字是</target>
        </trans-unit>
        <trans-unit id="86b802f817d8db47f98e358e0df4e43c122569da" translate="yes" xml:space="preserve">
          <source>Simply run</source>
          <target state="translated">只需运行</target>
        </trans-unit>
        <trans-unit id="14c3e2e53d9dfb6b8072093e8b927f77f6a76d42" translate="yes" xml:space="preserve">
          <source>Simply says that we're Unix.</source>
          <target state="translated">简单地说,我们是Unix。</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="60dbe9f3bc2001b2c722387a7d49aaabb3da33d1" translate="yes" xml:space="preserve">
          <source>Since # can be used for comments, # must be escaped.</source>
          <target state="translated">由于#可以用于注释,所以#必须被转义。</target>
        </trans-unit>
        <trans-unit id="af160de91abb536123124eac1ecabfc37de02e74" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; does a &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">由于 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 执行 &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; 并 &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; 因此可能会影响 &lt;code&gt;SIGCHLD&lt;/code&gt; 处理程序。有关详细信息，请参见&lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aba59b2cf00e40d21bac4c0a192544510ddcbae0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; will also call the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; method, the actual value for &lt;code&gt;MODULE&lt;/code&gt; must be a bareword. That is, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; cannot load files by name, although &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; can:</source>
          <target state="translated">由于 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 也将调用 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 方法，因此 &lt;code&gt;MODULE&lt;/code&gt; 的实际值必须为空字。也就是说，尽管 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 可以，但 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 无法按名称加载文件：</target>
        </trans-unit>
        <trans-unit id="73d2921b742823e6f578c98791a72739f4a21337" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; does a &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">由于 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 执行 &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; 并 &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; 因此可能会影响 &lt;code&gt;SIGCHLD&lt;/code&gt; 处理程序。有关详细信息，请参见&lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53cc6266d93eb2a78be0857ad5ecd43af7e2b644" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Archive::Tar&lt;/code&gt; doesn't change the current directory internally while it is extracting the items in a tarball, all calls to &lt;code&gt;Cwd::cwd()&lt;/code&gt; can be avoided if we can guarantee that the current directory doesn't get changed externally.</source>
          <target state="translated">由于 &lt;code&gt;Archive::Tar&lt;/code&gt; 在压缩包中提取项目时不会在内部更改当前目录，因此，如果我们可以保证当前目录不会在外部更改，则可以避免对 &lt;code&gt;Cwd::cwd()&lt;/code&gt; 所有调用。</target>
        </trans-unit>
        <trans-unit id="8c3c7a53144e6a3302e2a2f9e7b6229b194fa174" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="translated">由于 &lt;code&gt;SIGINT&lt;/code&gt; 和 &lt;code&gt;SIGQUIT&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 执行期间会被忽略，因此，如果您希望程序在收到这些信号后终止，则您需要根据返回值自行安排这样做。</target>
        </trans-unit>
        <trans-unit id="e4f45d5c1543b43feed600201b8df9285b671829" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="translated">由于 &lt;code&gt;SIGINT&lt;/code&gt; 和 &lt;code&gt;SIGQUIT&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 执行期间会被忽略，因此，如果您希望程序在收到这些信号后终止，则您需要根据返回值自行安排这样做。</target>
        </trans-unit>
        <trans-unit id="c78eaa920d9b2c6c4c17bb6231c81108ebdc9ea7" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;XSRETURN_*&lt;/code&gt; macros can be used with CODE blocks as well, one can rewrite this example as:</source>
          <target state="translated">由于 &lt;code&gt;XSRETURN_*&lt;/code&gt; 宏也可以与CODE块一起使用，因此可以将该示例重写为：</target>
        </trans-unit>
        <trans-unit id="4ae1fb90f2e2a999e504c7cb0f71e0777fa542ca" translate="yes" xml:space="preserve">
          <source>Since CPAN.pm version 1.88_51 modules declared as &lt;code&gt;build_requires&lt;/code&gt; by a distribution are treated differently depending on the config variable &lt;code&gt;build_requires_install_policy&lt;/code&gt; . By setting &lt;code&gt;build_requires_install_policy&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;, such a module is not installed. It is only built and tested, and then kept in the list of tested but uninstalled modules. As such, it is available during the build of the dependent module by integrating the path to the &lt;code&gt;blib/arch&lt;/code&gt; and &lt;code&gt;blib/lib&lt;/code&gt; directories in the environment variable PERL5LIB. If &lt;code&gt;build_requires_install_policy&lt;/code&gt; is set ti &lt;code&gt;yes&lt;/code&gt; , then both modules declared as &lt;code&gt;requires&lt;/code&gt; and those declared as &lt;code&gt;build_requires&lt;/code&gt; are treated alike. By setting to &lt;code&gt;ask/yes&lt;/code&gt; or &lt;code&gt;ask/&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , CPAN.pm asks the user and sets the default accordingly.</source>
          <target state="translated">由于发行版声明为 &lt;code&gt;build_requires&lt;/code&gt; 的CPAN.pm版本1.88_51模块将根据配置变量 &lt;code&gt;build_requires_install_policy&lt;/code&gt; 进行不同处理。通过将 &lt;code&gt;build_requires_install_policy&lt;/code&gt; 设置为 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; ，不会安装这样的模块。它仅经过构建和测试，然后保留在经过测试但已卸载的模块列表中。这样，通过在环境变量PERL5LIB中集成到 &lt;code&gt;blib/arch&lt;/code&gt; 和 &lt;code&gt;blib/lib&lt;/code&gt; 目录的路径，可以在依赖模块的构建过程中使用它。如果 &lt;code&gt;build_requires_install_policy&lt;/code&gt; 设置TI &lt;code&gt;yes&lt;/code&gt; ，那么这两个模块声明 &lt;code&gt;requires&lt;/code&gt; 与那些声明为 &lt;code&gt;build_requires&lt;/code&gt; 的对象一样。通过设置为&amp;ldquo; &lt;code&gt;ask/yes&lt;/code&gt; 或&amp;ldquo; 是 &lt;code&gt;ask/&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; ，CPAN.pm会询问用户并相应地设置默认值。</target>
        </trans-unit>
        <trans-unit id="92bd94b93ba7aa98da9b694cc55416c0183aa164" translate="yes" xml:space="preserve">
          <source>Since DLLs may be loaded at run time, to have the same mechanism for DLLs one needs to have the address range of</source>
          <target state="translated">由于DLLs可能在运行时被加载,所以要想对DLLs有同样的机制,就需要将地址范围为</target>
        </trans-unit>
        <trans-unit id="b8d7eab0940cbd19c7e5c0a0410f1af9f2b70a97" translate="yes" xml:space="preserve">
          <source>Since Emacs version 19 patchlevel 22 or so, there have been both a perl-mode.el and support for the Perl debugger built in. These should come with the standard Emacs 19 distribution.</source>
          <target state="translated">自从 Emacs 19 补丁级别 22 左右,已经有了 perl-mode.el 和对 Perl 调试器的内置支持。这些应该是标准的 Emacs 19 发行版中的内容。</target>
        </trans-unit>
        <trans-unit id="ae992899a872766d28cfb8b692b2e7f7ecf24212" translate="yes" xml:space="preserve">
          <source>Since File::Spec is object oriented, subroutines should not be called directly, as in:</source>
          <target state="translated">由于File::Spec是面向对象的,所以不应直接调用子程序,如。</target>
        </trans-unit>
        <trans-unit id="58330cb00aafa72e888d41a23aef159c39b70e0c" translate="yes" xml:space="preserve">
          <source>Since INPUT sections allow declaration of C variables which do not appear in the parameter list of a subroutine, this may be shortened to:</source>
          <target state="translated">由于INPUT部分允许声明不出现在子程序参数列表中的C变量,因此可以将其缩短为。</target>
        </trans-unit>
        <trans-unit id="45546e69c804ad74560b03b1bfa0ada21545dbab" translate="yes" xml:space="preserve">
          <source>Since Math::BigInt and BigFloat also overload the normal math operations, the following line will still work:</source>
          <target state="translated">由于Math::BigInt和BigFloat也会重载普通的数学运算,所以下面这行还是可以的。</target>
        </trans-unit>
        <trans-unit id="bfdb84eddf5f43124818a551b78d4d19bef89ac6" translate="yes" xml:space="preserve">
          <source>Since OS/2 port of perl uses a remarkable EMX environment, it can run (and build extensions, and - possibly - be built itself) under any environment which can run EMX. The current list is DOS, DOS-inside-OS/2, Win0.3*, Win0.95 and WinNT. Out of many perl flavors, only one works, see &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;.</source>
          <target state="translated">由于perl的OS / 2端口使用了出色的EMX环境，因此它可以在任何可以运行EMX的环境下运行（并构建扩展，并且可能自己构建）。当前列表是DOS，DOS-inside-OS / 2，Win0.3 *，Win0.95和WinNT。在许多perl风格中，只有一种起作用，请参见&lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6084ebce66f9d95008fbd76add0c4721f5880c4b" translate="yes" xml:space="preserve">
          <source>Since PERL_SYS_INIT3() may change &lt;code&gt;env&lt;/code&gt; , it may be more appropriate to provide &lt;code&gt;env&lt;/code&gt; as an argument to perl_parse().</source>
          <target state="translated">由于PERL_SYS_INIT3（）可能会更改 &lt;code&gt;env&lt;/code&gt; ，因此提供 &lt;code&gt;env&lt;/code&gt; 作为perl_parse（）的参数可能更合适。</target>
        </trans-unit>
        <trans-unit id="908c64d54ba36fa8efadd65bbb91e193ec071dc5" translate="yes" xml:space="preserve">
          <source>Since Perl 5.004, however, this situation is a special case and Perl creates the hash key only when you make the assignment:</source>
          <target state="translated">但从Perl 5.004开始,这种情况属于特殊情况,Perl只在你进行赋值时才创建哈希键。</target>
        </trans-unit>
        <trans-unit id="a9ff67b0f4d57746c4f60694c82d05a6c7b9009b" translate="yes" xml:space="preserve">
          <source>Since Perl 5.16.0, the &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; token is available under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'current_sub'&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16.0&lt;/code&gt; . It will evaluate to a reference to the currently-running sub, which allows for recursive calls without knowing your subroutine's name.</source>
          <target state="translated">因为Perl 5.16.0中， &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; 令牌下可 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'current_sub'&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16.0&lt;/code&gt; 。它将评估对当前正在运行的子程序的引用，该引用允许递归调用而无需知道子程序的名称。</target>
        </trans-unit>
        <trans-unit id="1fd1865b1bb90979ee802c45310e91e7b7152674" translate="yes" xml:space="preserve">
          <source>Since Perl 5.6.1 the special variables @- and @+ can functionally replace $`, $&amp;amp; and $'. These arrays contain pointers to the beginning and end of each match (see perlvar for the full story), so they give you essentially the same information, but without the risk of excessive string copying.</source>
          <target state="translated">从Perl 5.6.1开始，特殊变量@-和@ +可以在功能上替换$`，$＆和$'。这些数组包含指向每个匹配的开始和结束的指针（有关完整信息，请参见perlvar），因此它们可以为您提供基本相同的信息，但不会产生过多的字符串复制风险。</target>
        </trans-unit>
        <trans-unit id="0c3b5811fc581b714a97d98184d154d442e77a68" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8, thread programming has been available using a model called</source>
          <target state="translated">从Perl 5.8开始,线程编程已经可以使用一个叫做</target>
        </trans-unit>
        <trans-unit id="8b1528960c7f653f3987ab48deb0e1d4226f3c72" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0 a file handle referring to a string can be created by calling open with a reference to that string instead of the filename. This file handle can then be used to read from or write to the string:</source>
          <target state="translated">从Perl 5.8.0开始,可以通过调用open来创建一个指向字符串的文件句柄,并引用该字符串而不是文件名。这个文件句柄可以用来读取或写入该字符串。</target>
        </trans-unit>
        <trans-unit id="bd9a4f3a496c7e0b6fbb6d2a333860ae199a0774" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the utime(2) syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="translated">从Perl 5.8.0开始，如果列表的前两个元素为 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，则使用空第二个参数调用C库中的utime（2）syscall。在大多数系统上，这会将文件的访问和修改时间设置为当前时间（即，等同于上面的示例），并且即使您拥有写权限，也可以在您不拥有的文件上使用：</target>
        </trans-unit>
        <trans-unit id="82732a952fbe092bd928ea5f2a3dfaabc967f5cd" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the utime(2) syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="translated">从Perl 5.8.0开始，如果列表的前两个元素为 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，则使用空第二个参数调用C库中的utime（2）syscall。在大多数系统上，这会将文件的访问和修改时间设置为当前时间（即，等同于上面的示例），并且即使您拥有写权限，也可以在您不拥有的文件上使用：</target>
        </trans-unit>
        <trans-unit id="e51f3522d03a5b3a232bf4033ea382564508f931" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, signals have been made safer in Perl by postponing their handling until the interpreter is in a</source>
          <target state="translated">从Perl 5.8.0开始,Perl中的信号处理已经变得更安全了,它将信号的处理推迟到解释器在</target>
        </trans-unit>
        <trans-unit id="f2d46e3f9d2d01548c43a50c625a8e637b891700" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, you can also use the list form of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; for pipes. This is preferred when you wish to avoid having the shell interpret metacharacters that may be in your command string.</source>
          <target state="translated">从Perl 5.8.0开始，您还可以使用 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; for pipe的列表形式。当您希望避免让Shell解释命令字符串中可能包含的元字符时，这是首选方法。</target>
        </trans-unit>
        <trans-unit id="3480b6dbc008fbf05d437030616ffbd60db1a205" translate="yes" xml:space="preserve">
          <source>Since Perl 5.9.5</source>
          <target state="translated">从Perl 5.9.5开始</target>
        </trans-unit>
        <trans-unit id="83749785256b2bd98e45a0b0907ae739a924facc" translate="yes" xml:space="preserve">
          <source>Since Perl doesn't currently do anything with the &lt;code&gt;LC_MONETARY&lt;/code&gt; category, specifying &lt;code&gt;:monetary&lt;/code&gt; does effectively nothing. Some systems have other categories, such as &lt;code&gt;LC_PAPER_SIZE&lt;/code&gt; , but Perl also doesn't know anything about them, and there is no way to specify them in this pragma's arguments.</source>
          <target state="translated">由于Perl目前不对 &lt;code&gt;LC_MONETARY&lt;/code&gt; 类别执行任何操作，因此指定 &lt;code&gt;:monetary&lt;/code&gt; 实际上不会执行任何操作。某些系统具有其他类别，例如 &lt;code&gt;LC_PAPER_SIZE&lt;/code&gt; ，但Perl也不了解它们，因此无法在此编译指示中指定它们。</target>
        </trans-unit>
        <trans-unit id="7873f3b494192ca12067337abef4df445eb77998" translate="yes" xml:space="preserve">
          <source>Since Perl may compile the pattern at the moment of execution of the &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; operator, using &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; may have speed advantages in some situations, notably if the result of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; is used standalone:</source>
          <target state="translated">由于Perl可能会在执行 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 运算符时编译模式，因此在某些情况下使用 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 可能具有速度优势，特别是如果单独使用 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 的结果：</target>
        </trans-unit>
        <trans-unit id="a306c8d466811a3ef5f554b084c63b5f925fc7a3" translate="yes" xml:space="preserve">
          <source>Since Perl processes the &lt;code&gt;#!&lt;/code&gt; -line (cf. &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPTION in perlrun&lt;/a&gt;, &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;, &lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;No Perl script found in input in perldiag&lt;/a&gt;), it should know when a program</source>
          <target state="translated">由于Perl处理 &lt;code&gt;#!&lt;/code&gt; 直插式（参见&lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;在perlrun描述&lt;/a&gt;，&lt;a href=&quot;perlrun#Command-Switches&quot;&gt;命令在perlrun开关&lt;/a&gt;，&lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;无Perl脚本在perldiag输入中找到&lt;/a&gt;），就应该知道，当一个程序</target>
        </trans-unit>
        <trans-unit id="8b7890be1aa1eaa7cb9334a73bda7962f1d481f1" translate="yes" xml:space="preserve">
          <source>Since Perl recognizes a Unicode Byte Order Mark at the start of files as signaling that the file is Unicode encoded as in UTF-16 (whether big-endian or little-endian) or UTF-8, Pod parsers should do the same. Otherwise, the character encoding should be understood as being UTF-8 if the first highbit byte sequence in the file seems valid as a UTF-8 sequence, or otherwise as CP-1252 (earlier versions of this specification used Latin-1 instead of CP-1252).</source>
          <target state="translated">由于Perl在文件开始时识别Unicode字节顺序标记,作为文件是Unicode编码的信号,如UTF-16(不管是big-endian还是little-endian)或UTF-8,Pod解析器也应该这样做。否则,如果文件中的第一个高位字节序列似乎是有效的UTF-8序列,那么字符编码应该被理解为UTF-8,否则就是CP-1252(本规范的早期版本使用Latin-1代替CP-1252)。</target>
        </trans-unit>
        <trans-unit id="6b73dcb8330d72308d60b51669745466fec012ac" translate="yes" xml:space="preserve">
          <source>Since Perl v5.22.0, calls to this function are optimized out on ASCII platforms, so there is no performance hit in using it there.</source>
          <target state="translated">从 Perl v5.22.0 开始,对这个函数的调用在 ASCII 平台上被优化了,所以在那里使用它不会影响性能。</target>
        </trans-unit>
        <trans-unit id="9077183204414786a18b0b5b41280a8b58d8fe93" translate="yes" xml:space="preserve">
          <source>Since Perl v5.6.0, Perl variable names may be alphanumeric strings that begin with a caret (or a control character, but this form is deprecated). These variables must be written in the form &lt;code&gt;${^Foo}&lt;/code&gt; ; the braces are not optional. &lt;code&gt;${^Foo}&lt;/code&gt; denotes the scalar variable whose name is a control-&lt;code&gt;F&lt;/code&gt; followed by two &lt;code&gt;o&lt;/code&gt; 's. These variables are reserved for future special uses by Perl, except for the ones that begin with &lt;code&gt;^_&lt;/code&gt; (control-underscore or caret-underscore). No control-character name that begins with &lt;code&gt;^_&lt;/code&gt; will acquire a special meaning in any future version of Perl; such names may therefore be used safely in programs. &lt;code&gt;$^_&lt;/code&gt; itself, however,</source>
          <target state="translated">从Perl v5.6.0开始，Perl变量名称可以是以脱字符号（或控制字符，但不建议使用此格式）开头的字母数字字符串。这些变量必须以 &lt;code&gt;${^Foo}&lt;/code&gt; 的形式编写；大括号不是可选的。 &lt;code&gt;${^Foo}&lt;/code&gt; 表示标量变量，名称为Control- &lt;code&gt;F&lt;/code&gt; ,后跟两个 &lt;code&gt;o&lt;/code&gt; 。这些变量保留给Perl供将来特殊用途，但以 &lt;code&gt;^_&lt;/code&gt; 开头的变量（control-underscore或caret-underscore）除外。以 &lt;code&gt;^_&lt;/code&gt; 开头的控制字符名称在任何将来的Perl版本中都不会具有特殊含义；因此，可以在程序中安全使用此类名称。 &lt;code&gt;$^_&lt;/code&gt; 本身，</target>
        </trans-unit>
        <trans-unit id="33f810cef075561e9d829f100d7d5982e746f4f2" translate="yes" xml:space="preserve">
          <source>Since PodParser-1.24 the &lt;b&gt;Pod::Checker&lt;/b&gt; module uses only the &lt;b&gt;poderror&lt;/b&gt; method to print errors and warnings. The summary output (e.g. &quot;Pod syntax OK&quot;) has been dropped from the module and has been included in &lt;b&gt;podchecker&lt;/b&gt; (the script). This allows users of &lt;b&gt;Pod::Checker&lt;/b&gt; to control completely the output behavior. Users of &lt;b&gt;podchecker&lt;/b&gt; (the script) get the well-known behavior.</source>
          <target state="translated">从PodParser-1.24开始，&lt;b&gt;Pod :: Checker&lt;/b&gt;模块仅使用&lt;b&gt;poderror&lt;/b&gt;方法打印错误和警告。摘要输出（例如&amp;ldquo; Pod语法正常&amp;rdquo;）已从模块中删除，并已包含在&lt;b&gt;podchecker&lt;/b&gt;（脚本）中。这使&lt;b&gt;Pod :: Checker的&lt;/b&gt;用户可以完全控制输出行为。用户&lt;b&gt;podchecker&lt;/b&gt;（脚本）获得著名的行为。</target>
        </trans-unit>
        <trans-unit id="c62ae1b79550d7e8d8b071446dadbd144fa9a44a" translate="yes" xml:space="preserve">
          <source>Since Storable version 2.05, CODE references may be serialized with the help of &lt;a href=&quot;b/deparse&quot;&gt;B::Deparse&lt;/a&gt;. To enable this feature, set &lt;code&gt;$Storable::Deparse&lt;/code&gt; to a true value. To enable deserialization, &lt;code&gt;$Storable::Eval&lt;/code&gt; should be set to a true value. Be aware that deserialization is done through &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, which is dangerous if the Storable file contains malicious data. You can set &lt;code&gt;$Storable::Eval&lt;/code&gt; to a subroutine reference which would be used instead of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. See below for an example using a &lt;a href=&quot;safe&quot;&gt;Safe&lt;/a&gt; compartment for deserialization of CODE references.</source>
          <target state="translated">从Storable 2.05版开始，CODE引用可以在&lt;a href=&quot;b/deparse&quot;&gt;B :: Deparse&lt;/a&gt;的帮助下进行序列化。要启用此功能，请将 &lt;code&gt;$Storable::Deparse&lt;/code&gt; 设置为真实值。要启用反序列化，应将 &lt;code&gt;$Storable::Eval&lt;/code&gt; 设置为真实值。请注意，反序列化是通过 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 完成的，如果Storable文件包含恶意数据，则这很危险。您可以将 &lt;code&gt;$Storable::Eval&lt;/code&gt; 设置为子例程引用，而不是 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 。请参阅下面的示例，该示例使用&lt;a href=&quot;safe&quot;&gt;安全&lt;/a&gt;隔间对CODE引用进行反序列化。</target>
        </trans-unit>
        <trans-unit id="f0441a16b2e74d4d0e51c5a02d816d3fcef92571" translate="yes" xml:space="preserve">
          <source>Since UTF-7 is a 7-bit (re)encoded version of UTF-16BE, It is not part of Unicode's Character Encoding Scheme. It is separately implemented in Encode::Unicode::UTF7. For details see &lt;a href=&quot;unicode/utf7&quot;&gt;Encode::Unicode::UTF7&lt;/a&gt;.</source>
          <target state="translated">由于UTF-7是UTF-16BE的7位（重新）编码版本，因此它不是Unicode字符编码方案的一部分。它在Encode :: Unicode :: UTF7中单独实现。有关详细信息，请参见&lt;a href=&quot;unicode/utf7&quot;&gt;Encode :: Unicode :: UTF7&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2162d18e9f113918db80108542b383e4720b61a0" translate="yes" xml:space="preserve">
          <source>Since Unicode rules are not defined on these code points, if a Unicode-defined operation is done on them, Perl uses what we believe are sensible rules, while generally warning, using the &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; category. For example, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc(&quot;\x{11_0000}&quot;)&lt;/a&gt;&lt;/code&gt; will generate such a warning, returning the input parameter as its result, since Perl defines the uppercase of every non-Unicode code point to be the code point itself. (All the case changing operations, not just uppercasing, work this way.)</source>
          <target state="translated">由于未在这些代码点上定义Unicode规则，因此如果对它们进行Unicode定义的操作，Perl将使用我们认为是明智的规则，同时通常会使用 &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; 类别进行警告。例如，由于Perl将每个非Unicode代码点的大写字母定义为代码点本身，因此 &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc(&quot;\x{11_0000}&quot;)&lt;/a&gt;&lt;/code&gt; 会生成这样的警告，并返回输入参数作为其结果。（所有大小写更改操作（不仅是大写字母）都以这种方式工作。）</target>
        </trans-unit>
        <trans-unit id="7285a56d9c4d213c9ad280d3cdcf143edd27d7d8" translate="yes" xml:space="preserve">
          <source>Since VMS keeps track of files according to a different scheme than Unix, it's not really possible to represent the file's ID in the &lt;code&gt;st_dev&lt;/code&gt; and &lt;code&gt;st_ino&lt;/code&gt; fields of a &lt;code&gt;struct &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; . Perl tries its best, though, and the values it uses are pretty unlikely to be the same for two different files. We can't guarantee this, though, so caveat scriptor.</source>
          <target state="translated">由于VMS根据与Unix不同的方案跟踪文件，因此实际上不可能在 &lt;code&gt;struct &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;的 &lt;code&gt;st_dev&lt;/code&gt; 和 &lt;code&gt;st_ino&lt;/code&gt; 字段中表示文件的ID 。但是，Perl会尽力而为，并且对于两个不同的文件，它使用的值几乎不可能相同。但是，我们不能保证这一点，所以请告诫脚本编写者。</target>
        </trans-unit>
        <trans-unit id="5c5a9b6174ae871df152be709da101732e21f32c" translate="yes" xml:space="preserve">
          <source>Since Windows has nothing as simple as an executable bit, we check the file extension.</source>
          <target state="translated">由于Windows没有可执行位这么简单,我们检查文件扩展名。</target>
        </trans-unit>
        <trans-unit id="fd9730169823a0770803a5925e2496af06ca17b1" translate="yes" xml:space="preserve">
          <source>Since a TODO test does not need a reason, this function can return an empty string even when inside a TODO block. Use &lt;code&gt;$Test-&amp;gt;in_todo&lt;/code&gt; to determine if you are currently inside a TODO block.</source>
          <target state="translated">由于TODO测试不需要理由，因此即使在TODO块中，此函数也可以返回空字符串。使用 &lt;code&gt;$Test-&amp;gt;in_todo&lt;/code&gt; 确定您当前是否在TODO块中。</target>
        </trans-unit>
        <trans-unit id="9ae46893bafbcba3b5e81c0b6866dc9c42e9443c" translate="yes" xml:space="preserve">
          <source>Since a wide character does not fit into a byte, the Digest::SHA routines croak if they encounter one. Whereas if a Unicode string contains no wide characters, the module accepts it quite happily. The following code illustrates the two cases:</source>
          <target state="translated">由于宽字符不适合放在一个字节中,Digest::SHA例程在遇到宽字符时就会崩溃。而如果一个Unicode字符串不包含宽字符,模块就会很高兴地接受它。下面的代码说明了这两种情况。</target>
        </trans-unit>
        <trans-unit id="cf5ecd8beadbfc6894afc9b33f8c568a935ac82c" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; directives are executed at compile-time, the only way to change overloading during run-time is to</source>
          <target state="translated">由于所有 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 指令都是在编译时执行的，因此在运行时更改重载的唯一方法是</target>
        </trans-unit>
        <trans-unit id="121e9d461e86db932f5cbbcefdf834cbc71c32ee" translate="yes" xml:space="preserve">
          <source>Since all numbers are not objects, you can use all functions that are part of the BigInt or BigFloat API. It is wise to use only the bxxx() notation, and not the fxxx() notation, though. This makes you independent on the fact that the underlying object might morph into a different class than BigFloat.</source>
          <target state="translated">因为所有的数字都不是对象,所以你可以使用BigInt或BigFloat API中的所有函数。但明智的做法是只使用bxxx()符号,而不是fxxx()符号。这使得你可以独立于底层对象可能变形为一个不同于BigFloat的类的事实。</target>
        </trans-unit>
        <trans-unit id="a8ab3cbd0a89b8927ddf254335c455bf7a9e0853" translate="yes" xml:space="preserve">
          <source>Since all numbers are now objects, you can use all functions that are part of the BigInt API. You can only use the bxxx() notation, and not the fxxx() notation, though.</source>
          <target state="translated">由于所有的数字都是对象,你可以使用 BigInt API 的所有函数。你只能使用 bxxx()符号,而不能使用 fxxx()符号。</target>
        </trans-unit>
        <trans-unit id="4e2f7ef257d55f0fed05e16ea09bffefc9e8b92c" translate="yes" xml:space="preserve">
          <source>Since all numbers are now objects, you can use all functions that are part of the BigInt or BigFloat API. It is wise to use only the bxxx() notation, and not the fxxx() notation, though. This makes it possible that the underlying object might morph into a different class than BigFloat.</source>
          <target state="translated">由于现在所有的数字都是对象,所以你可以使用BigInt或BigFloat API中的所有函数。但明智的做法是只使用bxxx()符号,而不是fxxx()符号。这使得底层对象有可能变成一个不同于BigFloat的类。</target>
        </trans-unit>
        <trans-unit id="6baa6e390f30e8a9126d448dab3ed477bfa1776f" translate="yes" xml:space="preserve">
          <source>Since an expression &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; is just a shortcut for &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt; , it is expected that overloaded constant strings are equipped with reasonable overloaded catenation operator, otherwise absurd results will result. Similarly, negative numbers are considered as negations of positive constants.</source>
          <target state="translated">由于表达式 &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; 只是 &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt; 的快捷方式。$ cd。',,'，期望重载常量字符串配备合理的重载分类运算符，否则将导致荒谬的结果。类似地，负数被视为正常数的负数。</target>
        </trans-unit>
        <trans-unit id="6ad22ba0685e5d4fac9ab43140e5e8b95922e320" translate="yes" xml:space="preserve">
          <source>Since any scalar can be passed as a pattern, it's possible to implement an engine that does something with an array (&lt;code&gt;&quot;ook&quot; =~ [ qw/ eek
hlagh / ]&lt;/code&gt; ) or with the non-stringified form of a compiled regular expression (&lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt; ). Perl's own engine will always stringify everything using the snippet above, but that doesn't mean other engines have to.</source>
          <target state="translated">由于任何标量都可以作为模式传递，因此可以实现一种使用数组（ &lt;code&gt;&quot;ook&quot; =~ [ qw/ eek hlagh / ]&lt;/code&gt; ）或编译后的正则表达式的非字符串化形式（ &lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt; ）。Perl自己的引擎将始终使用上面的代码片段对所有内容进行字符串化处理，但这并不意味着其他引擎必须这样做。</target>
        </trans-unit>
        <trans-unit id="641d084a3985af991bd9e2608e23022b03d9ab2f" translate="yes" xml:space="preserve">
          <source>Since blessed objects are actually stored as RV's, it is useful to use the typemap features to preprocess parameters and extract the actual SV stored within the blessed RV. See the sample for T_PTROBJ_SPECIAL below.</source>
          <target state="translated">由于受祝福的对象实际上是以RV的形式存储的,因此使用类型映射特征来预处理参数并提取受祝福的RV中存储的实际SV是很有用的。请看下面T_PTROBJ_SPECIAL的示例。</target>
        </trans-unit>
        <trans-unit id="8c4a595ff52b120e783068a746cfa5bbb3e02fd1" translate="yes" xml:space="preserve">
          <source>Since changing a slice changes the original array or hash that it's slicing, a &lt;code&gt;foreach&lt;/code&gt; construct will alter some--or even all--of the values of the array or hash.</source>
          <target state="translated">由于更改切片会更改切片的原始数组或哈希，因此 &lt;code&gt;foreach&lt;/code&gt; 构造会更改数组或哈希的某些（甚至全部）值。</target>
        </trans-unit>
        <trans-unit id="fe77918163189e19fb5ee32ad02fe79f3b55c3d3" translate="yes" xml:space="preserve">
          <source>Since code that runs both with and without threads is usually pretty messy, it's best to isolate the thread-specific code in its own module. In our example above, that's what &lt;code&gt;MyMod_threaded&lt;/code&gt; is, and it's only imported if we're running on a threaded Perl.</source>
          <target state="translated">由于同时运行和不运行线程的代码通常都很混乱，因此最好在其自己的模块中隔离特定于线程的代码。在上面的示例中，这就是 &lt;code&gt;MyMod_threaded&lt;/code&gt; ，仅当我们在线程Perl上运行时才导入。</target>
        </trans-unit>
        <trans-unit id="7cbe078e4c38d00728f285597cf545219cabca7e" translate="yes" xml:space="preserve">
          <source>Since cygwin-1.7 pathnames are UTF-8 encoded.</source>
          <target state="translated">因为cygwin-1.7的路径名是UTF-8编码的。</target>
        </trans-unit>
        <trans-unit id="266d3a18d9d36b211495f4b1c929d7f21c8d9c1c" translate="yes" xml:space="preserve">
          <source>Since cygwin-1.7 textmounts are deprecated and strongly discouraged.</source>
          <target state="translated">自 cygwin-1.7 以来,textmounts 已被废弃,并被强烈反对。</target>
        </trans-unit>
        <trans-unit id="d1be23ed029f3a9d2b3315834beff1a066fe092b" translate="yes" xml:space="preserve">
          <source>Since environment variables are normally in all uppercase, no additional special formatting is generally needed; they're glaring enough as it is.</source>
          <target state="translated">由于环境变量通常都是大写的,所以一般不需要额外的特殊格式,它们已经足够醒目了。</target>
        </trans-unit>
        <trans-unit id="af76bf7b4202770a0de3b09fc13dec72dab7c4f4" translate="yes" xml:space="preserve">
          <source>Since evaluation of the translation function (see &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;CUSTOM TRANSLATORS&lt;/a&gt;) happens in the middle of compilation (of a string literal), the translation function should not do any &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;s. This restriction should be lifted (but is low priority) in a future version of Perl.</source>
          <target state="translated">由于对转换函数的评估（请参阅&lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;CUSTOM TRANSLATORS&lt;/a&gt;）发生在（字符串文字的）编译过程中，因此转换函数不应执行任何 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 。在Perl的未来版本中，应取消此限制（但优先级较低）。</target>
        </trans-unit>
        <trans-unit id="e702e67c36d5f56f32c4ca887c029adc55bb2d25" translate="yes" xml:space="preserve">
          <source>Since file associations don't work everywhere, and there are reportedly bugs with file associations where it does work, the old method of wrapping the perl script to make it look like a regular batch file to the OS, may be used. The install process makes available the &quot;pl2bat.bat&quot; script which can be used to wrap perl scripts into batch files. For example:</source>
          <target state="translated">由于文件关联并不是到处都能用,而且据说在能用的地方,文件关联也有错误,所以可以使用老方法,即包装 perl 脚本,让它看起来像一个普通的批处理文件。安装过程中提供了 &quot;pl2bat.bat &quot;脚本,可以用来将perl脚本包装成批处理文件。例如</target>
        </trans-unit>
        <trans-unit id="23fd0e0c0c88af650bd14da915c09ac6e76b1837" translate="yes" xml:space="preserve">
          <source>Since hash keys are strings, the default normalizer will not distinguish between &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and the empty string. It also won't work when the function's arguments are references. For example, consider a function &lt;code&gt;g&lt;/code&gt; which gets two arguments: A number, and a reference to an array of numbers:</source>
          <target state="translated">由于哈希键是字符串，因此默认规范化器将不会区分 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 和空字符串。当函数的参数是引用时，它也将不起作用。例如，考虑一个具有两个参数的函数 &lt;code&gt;g&lt;/code&gt; ：一个数字和对数字数组的引用：</target>
        </trans-unit>
        <trans-unit id="fa1b02458a611387371114bfc83a2b6bef610aa1" translate="yes" xml:space="preserve">
          <source>Since in this example only the hostname was used, the redundant conversion of the port number into a service name may be omitted by passing the &lt;code&gt;NIx_NOSERV&lt;/code&gt; flag.</source>
          <target state="translated">由于在此示例中仅使用了主机名，因此可以通过传递 &lt;code&gt;NIx_NOSERV&lt;/code&gt; 标志来省略端口号到服务名的冗余转换。</target>
        </trans-unit>
        <trans-unit id="43ba5f496d72ffff6bead4e713df055d0751d289" translate="yes" xml:space="preserve">
          <source>Since it is an actual &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; (not a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;),</source>
          <target state="translated">由于这是实际 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; （而不是 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; ），</target>
        </trans-unit>
        <trans-unit id="0d7acf7de7efee5f314675d9545729adcf4f4695" translate="yes" xml:space="preserve">
          <source>Since it is only at the compilation stage that the operator mask applies, controlled access to potentially unsafe operations can be achieved by having a handle to a wrapper subroutine (written outside the compartment) placed into the compartment. For example,</source>
          <target state="translated">由于只有在编译阶段才会应用操作者掩码,因此可以通过将封装子程序(写在隔间外)的句柄放入隔间内,实现对潜在的不安全操作的控制访问。例如</target>
        </trans-unit>
        <trans-unit id="194e3b48a27a3bdaa4b431c05b89584d736f7041" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, Perl warns you if &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is called in void context and if there is a following statement that isn't &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (if &lt;code&gt;-w&lt;/code&gt; is set--but you always do that, right?). If you</source>
          <target state="translated">由于使用 &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 是一个常见的错误，因此Perl会警告您，如果在void上下文中调用 &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; ，并且以下语句不是 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; （如果设置了 &lt;code&gt;-w&lt;/code&gt; ，但始终这样做吧？）。如果你</target>
        </trans-unit>
        <trans-unit id="84dfc8fed05280b5766bcde26ffe3ad58754f68f" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, Perl warns you if &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is called in void context and if there is a following statement that isn't &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (if &lt;code&gt;-w&lt;/code&gt; is set--but you always do that, right?). If you</source>
          <target state="translated">由于使用 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 是一个常见的错误，因此Perl会警告您，如果在void上下文中调用 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; ，并且以下语句不是 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; （如果设置了 &lt;code&gt;-w&lt;/code&gt; ，但始终这样做吧？）。如果你</target>
        </trans-unit>
        <trans-unit id="738084392e8e6e74486d375f063b4666c3458a7c" translate="yes" xml:space="preserve">
          <source>Since just passing an SV to an XS function and copying the data of the SV is not enough to copy the UTF8 flags, even less right is just passing a &lt;code&gt;char *&lt;/code&gt; to an XS function.</source>
          <target state="translated">由于仅将SV传递给XS函数并复制SV的数据不足以复制UTF8标志，因此，将 &lt;code&gt;char *&lt;/code&gt; 传递给XS函数的权利就更少了。</target>
        </trans-unit>
        <trans-unit id="b9469e3eb840b801f9d7d7208ec99b06d836b6ea" translate="yes" xml:space="preserve">
          <source>Since kernel threading can interrupt a thread at any time, they will uncover some of the implicit locking assumptions you may make in your program. For example, something as simple as &lt;code&gt;$x = $x + 2&lt;/code&gt; can behave unpredictably with kernel threads if &lt;code&gt;$x&lt;/code&gt; is visible to other threads, as another thread may have changed &lt;code&gt;$x&lt;/code&gt; between the time it was fetched on the right hand side and the time the new value is stored.</source>
          <target state="translated">由于内核线程可以随时中断线程，因此它们将揭示您可能在程序中做出的一些隐式锁定假设。例如，如果 &lt;code&gt;$x&lt;/code&gt; 对其他线程可见，则诸如 &lt;code&gt;$x = $x + 2&lt;/code&gt; 简单事件在内核线程中的行为可能无法预测，因为另一个线程可能在从右侧获取 &lt;code&gt;$x&lt;/code&gt; 到取回$ x的时间之间已经更改了$ x。新值的存储时间。</target>
        </trans-unit>
        <trans-unit id="c3c7d09052cf4af0cf4ad320357c5a1a11966392" translate="yes" xml:space="preserve">
          <source>Since numbers are actually objects, you can call all the usual methods from BigInt/BigFloat on them. This even works to some extent on expressions:</source>
          <target state="translated">因为数字实际上是对象,所以你可以调用BigInt/BigFloat的所有常用方法。这甚至在一定程度上可以用于表达式。</target>
        </trans-unit>
        <trans-unit id="ae2a46b8ade0fb9460587cc2799fe61eb4a8fb37" translate="yes" xml:space="preserve">
          <source>Since perl 5.17.1</source>
          <target state="translated">从perl 5.17.1开始</target>
        </trans-unit>
        <trans-unit id="3f51453ac56d21d59ae3e879a25ac51097e95502" translate="yes" xml:space="preserve">
          <source>Since perl does not (yet?) support constant objects, these constants are in seconds only, so you cannot, for example, do this: &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</source>
          <target state="translated">由于perl还不支持常量对象，因此这些常量仅以秒为单位，因此，例如，您不能这样做： &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6206d48617efe1643080f044370ee3db2757b71" translate="yes" xml:space="preserve">
          <source>Since release 1.77, CPAN.pm has been able to verify cryptographically signed module distributions using Module::Signature. The CPAN modules can be signed by their authors, thus giving more security. The simple unsigned MD5 checksums that were used before by CPAN protect mainly against accidental file corruption.</source>
          <target state="translated">自1.77版本以来,CPAN.pm已经能够使用Module::Signature来验证加密签名的模块发布。CPAN模块可以由它们的作者签名,从而提供更多的安全性。CPAN之前使用的简单的无符号MD5校验和,主要是为了防止意外的文件损坏。</target>
        </trans-unit>
        <trans-unit id="f410d2ff83f136d497487286db5d2eccb910e974" translate="yes" xml:space="preserve">
          <source>Since some operations can be automatically generated from others, there is a minimal set of operations that need to be overloaded in order to have the complete set of overloaded operations at one's disposal. Of course, the autogenerated operations may not do exactly what the user expects. The minimal set is:</source>
          <target state="translated">由于有些操作可以从其他操作中自动生成,因此,要想拥有一套完整的过载操作供自己支配,就需要有一套最小的操作。当然,自动生成的操作可能并不完全按照用户的期望来做。这个最小集是:</target>
        </trans-unit>
        <trans-unit id="9e13ee98073f6b6ff77b6bcc87f449d4c9298e6d" translate="yes" xml:space="preserve">
          <source>Since static extensions are incorporated directly into</source>
          <target state="translated">由于静态扩展是直接纳入到</target>
        </trans-unit>
        <trans-unit id="a88aba659efeb2d72344fd5945ed041580ceab14" translate="yes" xml:space="preserve">
          <source>Since storage is performed recursively, you might want to stuff references to objects that share a lot of common data into a single array or hash table, and then store that object. That way, when you retrieve back the whole thing, the objects will continue to share what they originally shared.</source>
          <target state="translated">由于存储是以递归方式进行的,所以你可能想把共享很多共同数据的对象的引用塞进一个数组或哈希表中,然后存储这个对象。这样,当你检索回整个对象时,这些对象将继续共享它们最初共享的内容。</target>
        </trans-unit>
        <trans-unit id="e4b31e0831fe480c7543658e6a5c02d003d2e334" translate="yes" xml:space="preserve">
          <source>Since subroutines implementing assignment operators are not required to modify their operands (see &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Overloadable Operations&lt;/a&gt; above), we do not need anything special to make &lt;code&gt;+=&lt;/code&gt; and friends work, besides adding these operators to %subr and defining a copy constructor (needed since Perl has no way to know that the implementation of &lt;code&gt;'+='&lt;/code&gt; does not mutate the argument - see &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;).</source>
          <target state="translated">由于实现赋值运算符的子例程不需要修改其操作数（请参见上面的可&lt;a href=&quot;#Overloadable-Operations&quot;&gt;重载操作&lt;/a&gt;），因此，除了将这些运算符添加到％subr并定义副本构造函数（Perl具有此功能而需要）之外，使 &lt;code&gt;+=&lt;/code&gt; 和好友工作不需要任何特殊操作。没有办法知道 &lt;code&gt;'+='&lt;/code&gt; 的实现不会改变参数-请参见&lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24efb6846ccb0dd586c9a2d632cd24665dcacdba" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; method treats the &lt;code&gt;$VERSION&lt;/code&gt; number as a simple numeric value it will regard version 1.10 as lower than 1.9. For this reason it is strongly recommended that you use numbers with at least two decimal places, e.g., 1.09.</source>
          <target state="translated">由于 &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; 方法将 &lt;code&gt;$VERSION&lt;/code&gt; 数字视为一个简单的数字值，因此它将版本1.10低于1.9。因此，强烈建议您使用至少两个小数位的数字，例如1.09。</target>
        </trans-unit>
        <trans-unit id="9984a40959f39d46f91cc9c90e354da67e76965d" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;ops&lt;/code&gt; pragma currently has an irreversible global effect, it is only of significant practical use with the &lt;code&gt;-M&lt;/code&gt; option on the command line.</source>
          <target state="translated">由于 &lt;code&gt;ops&lt;/code&gt; pragma当前具有不可逆的全局效果，因此仅在命令行上带有 &lt;code&gt;-M&lt;/code&gt; 选项才具有实际意义。</target>
        </trans-unit>
        <trans-unit id="926a29507017e24c08c49eb96c57773fd03c95dd" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is byte oriented you might only add bits as multiples of 8, so you probably want to just use add() instead. The add_bits() method is provided for compatibility with other digest implementations. See &lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt; for description of the arguments that add_bits() take.</source>
          <target state="translated">由于MD5算法是面向字节的，因此您可能只将位添加为8的倍数，因此您可能只想使用add（）。提供add_bits（）方法是为了与其他摘要实现兼容。有关add_bits（）接受的参数的说明，请参见&lt;a href=&quot;../digest&quot;&gt;摘要&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcf00ba41dfb6029d72bbfa314d984c685681962" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is only defined for strings of bytes, it can not be used on strings that contains chars with ordinal number above 255 (Unicode strings). The MD5 functions and methods will croak if you try to feed them such input data:</source>
          <target state="translated">由于 MD5 算法只定义了字节串,所以它不能用于包含序数大于 255 的字符的字符串(Unicode 字符串)。如果你试图输入这样的输入数据,MD5函数和方法会崩溃。</target>
        </trans-unit>
        <trans-unit id="4504893c7038fe54de5cf229bf7abc99b79c512f" translate="yes" xml:space="preserve">
          <source>Since the Perl extension DLLs are always loaded with the full path, there is no need to mangle their names in a version-specific ways: their directory already reflects the corresponding version of perl, and @INC takes into account binary compatibility with older version. Starting from &lt;code&gt;5.6.2&lt;/code&gt; the name mangling scheme is fixed to be the same as for Perl 5.005_53 (same as in a popular binary release). Thus new Perls will be able to</source>
          <target state="translated">由于Perl扩展DLL始终以完整路径加载，因此无需以版本特定的方式更改名称：它们的目录已经反映了Perl的相应版本，并且@INC考虑到与旧版本的二进制兼容性。从 &lt;code&gt;5.6.2&lt;/code&gt; 开始，名称处理方案已固定为与Perl 5.005_53相同（与流行的二进制发行版中的相同）。因此，新的Perls将能够</target>
        </trans-unit>
        <trans-unit id="b3bc7c77475d3cf936d8648a172f314719ec1f56" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regex, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="translated">由于$ x的第一个字符与正则表达式匹配，所以 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 在列表的前面添加了一个空的初始元素。</target>
        </trans-unit>
        <trans-unit id="2334de3a289af7777d7979b79868746517ddea3f" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regexp, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="translated">由于$ x的第一个字符与正则表达式匹配，所以 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 在列表的前面添加了一个空的初始元素。</target>
        </trans-unit>
        <trans-unit id="c9108eba2d411db85e70e8df1569d830e2a5d25c" translate="yes" xml:space="preserve">
          <source>Since the fork() emulation runs code in multiple threads, extensions calling into non-thread-safe libraries may not work reliably when calling fork(). As Perl's threading support gradually becomes more widely adopted even on platforms with a native fork(), such extensions are expected to be fixed for thread-safety.</source>
          <target state="translated">由于fork()仿真是在多个线程中运行代码,所以在调用fork()时,调用到非线程安全库的扩展可能无法可靠地工作。随着Perl的线程支持逐渐被广泛采用,即使是在有原生fork()的平台上,这类扩展也有望得到线程安全的修复。</target>
        </trans-unit>
        <trans-unit id="b5c6d6292298eef29abac825fb611cdb8dbc410b" translate="yes" xml:space="preserve">
          <source>Since the logging doesn't use PerlIO, all SV allocations are logged and no extra SV allocations are introduced by enabling the logging. If compiled with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; , the serial number for each SV allocation is also logged.</source>
          <target state="translated">由于日志记录不使用PerlIO，因此将记录所有SV分配，并且通过启用日志记录不会引入额外的SV分配。如果使用 &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; 进行编译，则还将记录每个SV分配的序列号。</target>
        </trans-unit>
        <trans-unit id="3279571aa6d0a69a5a2abdeb30f262cc44dbbdae" translate="yes" xml:space="preserve">
          <source>Since the match operator &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, the substitution operator &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, and the regular expression quoting operator &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; are double-quotish constructs, you can interpolate variables into the pattern. See the answer to &quot;How can I quote a variable to use in a regex?&quot; for more details.</source>
          <target state="translated">由于匹配运算符 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; ，替换运算符 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 和正则表达式引用运算符 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; 是双引号的构造，因此可以将变量插值到模式中。请参阅&amp;ldquo;如何引用要在正则表达式中使用的变量？&amp;rdquo;的答案。更多细节。</target>
        </trans-unit>
        <trans-unit id="84b10458d44f04e31c63c483bc8240735b5e37c7" translate="yes" xml:space="preserve">
          <source>Since the null filehandle uses the two argument form of &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; it interprets special characters, so if you have a script like this:</source>
          <target state="translated">由于null文件句柄使用&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;的两个参数形式，因此它将解释特殊字符，因此，如果您具有如下脚本：</target>
        </trans-unit>
        <trans-unit id="cd81accbd1bb6c167fba1a41e5f2407058ac7a87" translate="yes" xml:space="preserve">
          <source>Since the object is also a hash, you can treat it as one, using it to store data associated with the object. Typically, code inside the class can treat the hash as an accessible data structure, while code outside the class should always treat the object as opaque. This is called &lt;b&gt;encapsulation&lt;/b&gt;. Encapsulation means that the user of an object does not have to know how it is implemented. The user simply calls documented methods on the object.</source>
          <target state="translated">由于对象也是哈希，因此您可以将其视为一个哈希，使用它来存储与对象关联的数据。通常，类内部的代码可以将哈希视为可访问的数据结构，而类外部的代码应始终将对象视为不透明。这称为&lt;b&gt;封装&lt;/b&gt;。封装意味着对象的用户不必知道其实现方式。用户只需在对象上调用记录的方法。</target>
        </trans-unit>
        <trans-unit id="db12f27020b74e90b153b0c7282afabc69308986" translate="yes" xml:space="preserve">
          <source>Since the original &lt;code&gt;big5&lt;/code&gt; encoding (1984) is not supported anywhere (glibc and DOS-based systems uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;big5-eten&lt;/code&gt; ; Microsoft uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;cp950&lt;/code&gt; ), a conscious decision was made to alias &lt;code&gt;big5&lt;/code&gt; to &lt;code&gt;big5-eten&lt;/code&gt; , which is the de facto superset of the original big5.</source>
          <target state="translated">由于原来的 &lt;code&gt;big5&lt;/code&gt; 编码（1984）不被任何支持（glibc的和基于DOS的系统中的使用 &lt;code&gt;big5&lt;/code&gt; 的意思 &lt;code&gt;big5-eten&lt;/code&gt; ;微软使用 &lt;code&gt;big5&lt;/code&gt; 的意思 &lt;code&gt;cp950&lt;/code&gt; ），有意识的决定，以别名做 &lt;code&gt;big5&lt;/code&gt; 到 &lt;code&gt;big5-eten&lt;/code&gt; ，这是原始big5的事实上的超集。</target>
        </trans-unit>
        <trans-unit id="e096824f5ca19792394259581d18c44d0fb48327" translate="yes" xml:space="preserve">
          <source>Since the path separators are different on some operating systems ('/' on Unix, ':' on MacPerl, etc...) we recommend you use the File::Spec modules wherever portability is a concern.</source>
          <target state="translated">因为在某些操作系统上,路径分隔符是不同的(Unix上的'/',MacPerl上的':'等),所以我们建议你在考虑到可移植性的地方使用File::Spec模块。</target>
        </trans-unit>
        <trans-unit id="afc1d2d6e3b782b2dd5e1481aef1464f9b2e04bc" translate="yes" xml:space="preserve">
          <source>Since the scope wasn't lexical, other modules' use of &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">由于范围不是词法，其他模块的使用的 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="b0b947b7b4bc7b90e1cd94b89023d67ed8fe406b" translate="yes" xml:space="preserve">
          <source>Since the symbols listed within &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; must also appear in either &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; , two utility functions are provided which allow you to easily add tagged sets of symbols to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; :</source>
          <target state="translated">由于 &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; 中列出的符号还必须出现在 &lt;code&gt;@EXPORT&lt;/code&gt; 或 &lt;code&gt;@EXPORT_OK&lt;/code&gt; 中，因此提供了两个实用程序功能，使您可以轻松地将标记的符号集添加到 &lt;code&gt;@EXPORT&lt;/code&gt; 或 &lt;code&gt;@EXPORT_OK&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1a1ad4491daa19cab8cfcffcbf76d31fdb6dedaa" translate="yes" xml:space="preserve">
          <source>Since the text to insert should be different in &lt;code&gt;bytes&lt;/code&gt; mode and out of it, the function should check the current state of &lt;code&gt;bytes&lt;/code&gt; -flag as in:</source>
          <target state="translated">由于要插入的文本在 &lt;code&gt;bytes&lt;/code&gt; 模式下和在字节模式下应该不同，因此该函数应检查 &lt;code&gt;bytes&lt;/code&gt; -flag 的当前状态，如下所示：</target>
        </trans-unit>
        <trans-unit id="50530d766e72e0b6fff4d2cca6e94d3aad2090a6" translate="yes" xml:space="preserve">
          <source>Since there are relatively few objects in a picture, there are only a few colors, which get looked up over and over again. Memoizing &lt;code&gt;ColorToRGB&lt;/code&gt; sped up the program by several percent.</source>
          <target state="translated">由于图片中的对象相对较少，因此只有少数几种颜色会一遍又一遍地查找。记忆 &lt;code&gt;ColorToRGB&lt;/code&gt; 使程序加速了百分之几。</target>
        </trans-unit>
        <trans-unit id="b29f8659dcd90c4211c87b64479756be9287fa54" translate="yes" xml:space="preserve">
          <source>Since there is a bijection between a point in the 2D plane and a complex number (i.e. the mapping is unique and reciprocal), a complex number can also be uniquely identified with polar coordinates:</source>
          <target state="translated">由于二维平面上的点与复数之间存在着双项关系(即映射是唯一的、往复的),所以复数也可以与极坐标进行唯一的识别。</target>
        </trans-unit>
        <trans-unit id="3716c24306b4924201a3a983711259349f4d7b7c" translate="yes" xml:space="preserve">
          <source>Since these functions are different for most operating systems, each set of OS specific routines is available in a separate module, including:</source>
          <target state="translated">由于这些功能对大多数操作系统来说都是不同的,每一套操作系统的特定例程都在一个单独的模块中提供,包括:</target>
        </trans-unit>
        <trans-unit id="c3d20e57f802de1056f71e94f07efcc76036480f" translate="yes" xml:space="preserve">
          <source>Since things like &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;1 / 3&lt;/code&gt; must presented with a limited accuracy lest a operation consumes all resources, each operation produces no more than the requested number of digits.</source>
          <target state="translated">由于必须以有限的精度呈现诸如 &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;1 / 3&lt;/code&gt; ，以免操作消耗所有资源，因此每个操作产生的位数不超过请求的位数。</target>
        </trans-unit>
        <trans-unit id="b1a21b989b9d575d7d2eef7cf2bea0c2bc7b6c1e" translate="yes" xml:space="preserve">
          <source>Since this document was first written, the convention has become more and more to use hexadecimal notation for code points. To do this with the recipes and to also sort is a multi-step process, so here, for convenience, is the table from above, re-sorted to be in Code Page 1047 order, and using hex notation.</source>
          <target state="translated">自本文档写成以来,越来越多的约定俗成地使用十六进制的码点符号。要做到这一点,对菜谱也要进行排序,是一个多步骤的过程,所以这里为了方便起见,是上面的表格,重新排序为码页1047顺序,并使用十六进制符号。</target>
        </trans-unit>
        <trans-unit id="ef4f428bd8f59049b7e023a3a37d2ecfa135c01b" translate="yes" xml:space="preserve">
          <source>Since this is 0.something release, any future releases are almost guaranteed to be binary incompatible. As a sign of this the Symbian symbol exports are kept unfrozen and the .def files fully rebuilt every time.</source>
          <target state="translated">由于这是0.something版本,任何未来的版本几乎都保证是二进制不兼容的。作为一个标志,Symbian的符号出口被解冻,每次都会完全重建.def文件。</target>
        </trans-unit>
        <trans-unit id="a29b3865557e1b6dfb498bcdde9cd5a7a83c05b9" translate="yes" xml:space="preserve">
          <source>Since this module is most often used only indirectly from extension &lt;code&gt;Makefile.PL&lt;/code&gt; files, here is an example &lt;code&gt;Makefile.PL&lt;/code&gt; entry to add a library to the build process for an extension:</source>
          <target state="translated">由于此模块最常仅从扩展 &lt;code&gt;Makefile.PL&lt;/code&gt; 文件间接使用，因此以下示例 &lt;code&gt;Makefile.PL&lt;/code&gt; 条目将库添加到扩展的构建过程中：</target>
        </trans-unit>
        <trans-unit id="01f476f0532c2e2f8ff2160a3485f37336e92c5d" translate="yes" xml:space="preserve">
          <source>Since this module refers to perl core's Unicode database in the directory</source>
          <target state="translated">因为这个模块引用了perl core的Unicode数据库,在目录中的</target>
        </trans-unit>
        <trans-unit id="e87fdde57834ef3e5b68a023cf000c8017fe6842" translate="yes" xml:space="preserve">
          <source>Since this procedure may take quite a long time to complete, it makes sense to &quot;freeze&quot; your CPAN configuration by disabling periodic updates of the local copy of CPAN index: set &lt;code&gt;index_expire&lt;/code&gt; to some big value (I use 365), then save the settings</source>
          <target state="translated">由于此过程可能需要很长时间才能完成，因此通过禁用CPAN索引的本地副本的定期更新来&amp;ldquo;冻结&amp;rdquo;您的CPAN配置是有意义的：将 &lt;code&gt;index_expire&lt;/code&gt; 设置为某个大值（我使用365），然后保存设置</target>
        </trans-unit>
        <trans-unit id="db30ab250873c1062c4781e4e7b7fad867ddcab0" translate="yes" xml:space="preserve">
          <source>Since this will lead to issues as described above.</source>
          <target state="translated">由于这将导致上述问题。</target>
        </trans-unit>
        <trans-unit id="5b8353c61df27001cdfae1689cea0393e824247d" translate="yes" xml:space="preserve">
          <source>Since threads are also subroutines, they can return values. To wait for a thread to exit and extract any values it might return, you can use the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">由于线程也是子例程，因此它们可以返回值。要等待线程退出并提取其可能返回的任何值，可以使用 &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="865359543cead83315159b60389211a49302275e" translate="yes" xml:space="preserve">
          <source>Since to call certain OS/2 API one needs to have a correctly initialized &lt;code&gt;Win&lt;/code&gt; subsystem, OS/2-specific extensions may require getting &lt;code&gt;HAB&lt;/code&gt; s and &lt;code&gt;HMQ&lt;/code&gt; s. If an extension would do it on its own, another extension could fail to initialize.</source>
          <target state="translated">由于要调用某些OS / 2 API，需要具有正确初始化的 &lt;code&gt;Win&lt;/code&gt; 子系统，因此，特定于OS / 2的扩展可能需要获取 &lt;code&gt;HAB&lt;/code&gt; 和 &lt;code&gt;HMQ&lt;/code&gt; 。如果扩展将自己执行，则另一个扩展可能无法初始化。</target>
        </trans-unit>
        <trans-unit id="993c2506a3b501e251a227378341211573ee7139" translate="yes" xml:space="preserve">
          <source>Since v5.6.0, Perl's CORE::glob() is implemented in terms of bsd_glob(). Note that they don't share the same prototype--CORE::glob() only accepts a single argument. Due to historical reasons, CORE::glob() will also split its argument on whitespace, treating it as multiple patterns, whereas bsd_glob() considers them as one pattern. But see &lt;code&gt;:bsd_glob&lt;/code&gt; under &lt;a href=&quot;#EXPORTS&quot;&gt;EXPORTS&lt;/a&gt;, below.</source>
          <target state="translated">从v5.6.0开始，Perl的CORE :: glob（）是根据bsd_glob（）实现的。请注意，它们不共享相同的原型-CORE :: glob（）仅接受单个参数。由于历史原因，CORE :: glob（）还将在空白上拆分其参数，将其视为多种模式，而bsd_glob（）则将其视为一种模式。但是请参见下面&lt;a href=&quot;#EXPORTS&quot;&gt;EXPORTS&lt;/a&gt;下的 &lt;code&gt;:bsd_glob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ad68534057bbff035849577fdc9d02265e92498" translate="yes" xml:space="preserve">
          <source>Since valgrind adds significant overhead, tests will take much longer to run. The valgrind tests support being run in parallel to help with this:</source>
          <target state="translated">由于 valgrind 增加了大量的开销,测试将需要更长的时间来运行。valgrind测试支持并行运行以帮助解决这个问题。</target>
        </trans-unit>
        <trans-unit id="cddab41a34bae01a0c375cc55e93affd1f3991b2" translate="yes" xml:space="preserve">
          <source>Since version 1.26.</source>
          <target state="translated">自1.26版本以来。</target>
        </trans-unit>
        <trans-unit id="6b04b338e1bf6330ffba84da282f69c260eb86f1" translate="yes" xml:space="preserve">
          <source>Since version 1.29.</source>
          <target state="translated">自1.29版本以来。</target>
        </trans-unit>
        <trans-unit id="90fa8ea868e9b39ffa1222c302c6573df472b992" translate="yes" xml:space="preserve">
          <source>Since version 1.30.</source>
          <target state="translated">自1.30版本以来。</target>
        </trans-unit>
        <trans-unit id="b46b7661e42d1c9773df584f5695782bec0ddb2f" translate="yes" xml:space="preserve">
          <source>Since version 1.33.</source>
          <target state="translated">自1.33版本以来。</target>
        </trans-unit>
        <trans-unit id="4b40436a29419119d4b78bb2f402e947b823a0e2" translate="yes" xml:space="preserve">
          <source>Since version 1.35.</source>
          <target state="translated">自1.35版本以来。</target>
        </trans-unit>
        <trans-unit id="3a2c4273e02619f5ed86c67adac94047a5ca0b70" translate="yes" xml:space="preserve">
          <source>Since version 1.36.</source>
          <target state="translated">自1.36版本以来。</target>
        </trans-unit>
        <trans-unit id="2498504f50455260e9635ae498353ef8c9decaca" translate="yes" xml:space="preserve">
          <source>Since version 5.8 Perl uses the PerlIO I/O library. This enables you to use different encodings per IO channel. For example you may use</source>
          <target state="translated">从5.8版本开始,Perl使用PerlIO I/O库。这使得你可以对每个IO通道使用不同的编码。例如,你可以使用</target>
        </trans-unit>
        <trans-unit id="656ca296455da01a08e031bd90f196ae0bd4a55c" translate="yes" xml:space="preserve">
          <source>Since version 5.8 Perl uses the new PerlIO on BS2000. This enables you using different encodings per IO channel. For example you may use</source>
          <target state="translated">从5.8版本开始,Perl在BS2000上使用新的PerlIO。这使得你可以在每个IO通道上使用不同的编码。例如,您可以使用</target>
        </trans-unit>
        <trans-unit id="5792847b18d8585cbe32d073b79aab824b6fbb3d" translate="yes" xml:space="preserve">
          <source>Since version 5.8.0, hashes can be</source>
          <target state="translated">从5.8.0版本开始,哈希值可以是</target>
        </trans-unit>
        <trans-unit id="3045986b0102a2064e1410bb295874d9fe22b31d" translate="yes" xml:space="preserve">
          <source>Since version &lt;code&gt;1.39&lt;/code&gt; these ARRAY references are blessed objects, recognising the two methods &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; . The following code is equivalent:</source>
          <target state="translated">从版本 &lt;code&gt;1.39&lt;/code&gt; 开始,这些ARRAY引用是受祝福的对象，可以识别 &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 这两种方法。以下代码是等效的：</target>
        </trans-unit>
        <trans-unit id="4da1ba2b2bc63ba7f5a165684b362132feb79be8" translate="yes" xml:space="preserve">
          <source>Since version v1.33, Math::BigInt and Math::BigFloat have full support for accuracy and precision based rounding, both automatically after every operation, as well as manually.</source>
          <target state="translated">从v1.33版本开始,Math::BigInt和Math::BigFloat完全支持基于精度和精密度的四舍五入,既可以在每次操作后自动进行,也可以手动进行。</target>
        </trans-unit>
        <trans-unit id="75e1e7b33ae8faf22bfba9121d2d99d1efb7768e" translate="yes" xml:space="preserve">
          <source>Since we didn't define a &lt;code&gt;save()&lt;/code&gt; method in the &lt;code&gt;File::MP3&lt;/code&gt; class, Perl will look at the &lt;code&gt;File::MP3&lt;/code&gt; class's parent classes to find the &lt;code&gt;save()&lt;/code&gt; method. If Perl cannot find a &lt;code&gt;save()&lt;/code&gt; method anywhere in the inheritance hierarchy, it will die.</source>
          <target state="translated">由于我们没有在 &lt;code&gt;File::MP3&lt;/code&gt; 类中定义 &lt;code&gt;save()&lt;/code&gt; 方法，因此Perl将查看 &lt;code&gt;File::MP3&lt;/code&gt; 类的父类以找到 &lt;code&gt;save()&lt;/code&gt; 方法。如果Perl 在继承层次结构中的任何地方都找不到 &lt;code&gt;save()&lt;/code&gt; 方法，它将死亡。</target>
        </trans-unit>
        <trans-unit id="3e236441f92cccda5b2d49a5d2e52d11313518e5" translate="yes" xml:space="preserve">
          <source>Since we don't have an NV for &lt;code&gt;$b&lt;/code&gt; , we'll have to use &lt;code&gt;sv_2nv&lt;/code&gt; to convert it. If we step again, we'll find ourselves there:</source>
          <target state="translated">由于我们没有 &lt;code&gt;$b&lt;/code&gt; 的NV ，因此必须使用 &lt;code&gt;sv_2nv&lt;/code&gt; 进行转换。如果我们再次走下去，我们会发现自己在那里：</target>
        </trans-unit>
        <trans-unit id="3708f0927e1925f92bdee0634ab63e7742c6b549" translate="yes" xml:space="preserve">
          <source>Since we don't know if &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; works, or even subroutines, use ad hoc tests for these three. Step carefully to avoid using the feature being tested. Tests in</source>
          <target state="translated">由于我们不知道是否 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 工作，甚至子例程，因此请对这三个应用临时测试。小心执行以避免使用要测试的功能。测试中</target>
        </trans-unit>
        <trans-unit id="b3f9ededf0cd07d09b1ffd3609acb21770a40353" translate="yes" xml:space="preserve">
          <source>Since we feed a list of ten 2-digit hexadecimal strings to &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, the pack template should contain ten pack codes. If this is run on a computer with ASCII character coding, it will print &lt;code&gt;0123456789&lt;/code&gt; .</source>
          <target state="translated">由于我们要输入要 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 的十个2位十六进制字符串的列表，所以打包模板应包含十个打包代码。如果这是在使用ASCII字符编码的计算机上运行的，它将打印 &lt;code&gt;0123456789&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1a3bb738728020d7b3d2bd56167deba0672548c" translate="yes" xml:space="preserve">
          <source>Since we said earlier:</source>
          <target state="translated">既然我们前面说了。</target>
        </trans-unit>
        <trans-unit id="78829eafb6296e19175ed55a3097f673b5dc1d5f" translate="yes" xml:space="preserve">
          <source>Since you can assign to a list of variables, you can also assign to an array or hash slice.</source>
          <target state="translated">既然可以赋值给变量列表,也可以赋值给数组或哈希片。</target>
        </trans-unit>
        <trans-unit id="35b796faff1e6866bc3d8ff9ecdff8f636cea4f9" translate="yes" xml:space="preserve">
          <source>Since you only run one test per program &lt;code&gt;new&lt;/code&gt; always returns the same Test::Builder object. No matter how many times you call &lt;code&gt;new()&lt;/code&gt; , you're getting the same object. This is called a singleton. This is done so that multiple modules share such global information as the test counter and where test output is going.</source>
          <target state="translated">由于每个程序只运行一个测试，因此 &lt;code&gt;new&lt;/code&gt; 总是返回相同的Test :: Builder对象。无论您调用 &lt;code&gt;new()&lt;/code&gt; 多少次，都将获得相同的对象。这称为单例。这样做是为了使多个模块共享全局信息，例如测试计数器和测试输出的去向。</target>
        </trans-unit>
        <trans-unit id="5df43da3b7bd5966cc2c20737e50dc599284dd8e" translate="yes" xml:space="preserve">
          <source>Since you want to be a good programmer, you probably want to use a lexical filehandle, even though formats are designed to work with bareword filehandles since the default format names take the filehandle name. However, you can control this with some Perl special per-filehandle variables: &lt;code&gt;$^&lt;/code&gt; , which names the top-of-page format, and &lt;code&gt;$~&lt;/code&gt; which shows the line format. You have to change the default filehandle to set these variables:</source>
          <target state="translated">由于您想成为一名优秀的程序员，因此即使格式被设计为与裸字文件句柄一起使用，也可能要使用词汇文件句柄，因为默认格式名采用文件句柄名称。但是，您可以使用一些Perl特殊的每文件句柄变量来控制此操作： &lt;code&gt;$^&lt;/code&gt; 命名页面顶部格式，而 &lt;code&gt;$~&lt;/code&gt; 表示行格式。您必须更改默认文件句柄才能设置以下变量：</target>
        </trans-unit>
        <trans-unit id="31ee6b56ac231ef340b4b0ce7a9b1c774baa56bb" translate="yes" xml:space="preserve">
          <source>Since you're assigning to a scalar, the righthand side is in scalar context. The comma operator (yes, it's an operator!) in scalar context evaluates its lefthand side, throws away the result, and evaluates it's righthand side and returns the result. In effect, that list-lookalike assigns to &lt;code&gt;$scalar&lt;/code&gt; it's rightmost value. Many people mess this up because they choose a list-lookalike whose last element is also the count they expect:</source>
          <target state="translated">由于您要分配给标量，因此右侧位于标量上下文中。标量上下文中的逗号运算符（是的，它是运算符！）会评估其左侧，丢弃结果，并评估其右侧并返回结果。实际上，该类似列表将 &lt;code&gt;$scalar&lt;/code&gt; 赋给它最右边的值。许多人把它弄乱了，因为他们选择了一个看起来相似的列表，其最后一个元素也是他们期望的计数：</target>
        </trans-unit>
        <trans-unit id="b227b1e063b8171583fca32f48c11de71e845c84" translate="yes" xml:space="preserve">
          <source>Single 8-bit characters.</source>
          <target state="translated">单个8位字符。</target>
        </trans-unit>
        <trans-unit id="62539aaf022cade9262a4b6494d3943b6956e5a8" translate="yes" xml:space="preserve">
          <source>Single Byte Encodings</source>
          <target state="translated">单字节编码</target>
        </trans-unit>
        <trans-unit id="6a8a4e28358318025ab4a8b973931c58f9de9358" translate="yes" xml:space="preserve">
          <source>Single quotes indicate the text is to be treated literally with no interpolation of its content. This is similar to single quoted strings except that backslashes have no special meaning, with &lt;code&gt;\\&lt;/code&gt; being treated as two backslashes and not one as they would in every other quoting construct.</source>
          <target state="translated">单引号表示该文本将按字面意义进行处理，而不会插入其内容。这与单引号字符串相似，不同之处在于反斜杠没有特殊含义，其中 &lt;code&gt;\\&lt;/code&gt; 被视为两个反斜杠，而不是它们在其他所有引号构造中的反斜杠。</target>
        </trans-unit>
        <trans-unit id="2988b7ce72e4ef43941b210b5d2de77bb3a0210b" translate="yes" xml:space="preserve">
          <source>Single space after keywords that are followed by parens, no space between function name and following paren</source>
          <target state="translated">在关键字后的单空格,函数名和后面的父母之间没有空格。</target>
        </trans-unit>
        <trans-unit id="998773a99793919677d4844303decc2eb2f960f3" translate="yes" xml:space="preserve">
          <source>Single step. Executes until the beginning of another statement, descending into subroutine calls. If an expression is supplied that includes function calls, it too will be single-stepped.</source>
          <target state="translated">单步。执行到另一条语句的开始,降为子程序调用。如果提供的表达式包含函数调用,它也将是单步的。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
