<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="246b91b96e62d4665dc1c91df63b1c10f4839a54" translate="yes" xml:space="preserve">
          <source>, as you'll need to understand the &lt;a href=&quot;parser&quot;&gt;TAP::Parser&lt;/a&gt; API. A good place to start is by understanding how &lt;a href=&quot;#aggregate_tests&quot;&gt;aggregate_tests&lt;/a&gt; works.</source>
          <target state="translated">，因为您需要了解&lt;a href=&quot;parser&quot;&gt;TAP :: Parser&lt;/a&gt; API。一个好的开始是通过了解&lt;a href=&quot;#aggregate_tests&quot;&gt;aggregate_tests的&lt;/a&gt;工作原理。</target>
        </trans-unit>
        <trans-unit id="883a2167578552cc32e56e34c60f2a72656b4d09" translate="yes" xml:space="preserve">
          <source>, assumed to be a sequence of octets in</source>
          <target state="translated">，假设是中的八位字节序列</target>
        </trans-unit>
        <trans-unit id="97655fb802994ecc260e5ef2fb866ce517a9c299" translate="yes" xml:space="preserve">
          <source>, at least once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f734969a140ce2aea92a8a6a21bc618d5f511646" translate="yes" xml:space="preserve">
          <source>, at least once, but as few times as possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751512716d9aa9f5b3c28259b944c1f3b0c56d1" translate="yes" xml:space="preserve">
          <source>, attempts to bring some of the newer Perl API features to older versions of Perl, so that you can worry less about keeping track of old releases, but users can still reap the benefit.</source>
          <target state="translated">尝试将一些较新的Perl API功能引入旧版本的Perl，以便您不必担心跟踪旧版本，但用户仍然可以从中受益。</target>
        </trans-unit>
        <trans-unit id="dcf124669e071fb32c507b660ca8a45e10a33382" translate="yes" xml:space="preserve">
          <source>, because the $1 variable is magical and read-only :</source>
          <target state="translated">，因为$ 1变量是神奇的且只读的：</target>
        </trans-unit>
        <trans-unit id="24f1b41d67d203257d6ce62a6d577842a88809d7" translate="yes" xml:space="preserve">
          <source>, because the reduced pollution of newer Perl versions is an important thing. It's so important that the old polluting ways of original Perl modules will not be supported very far into the future, and your module will almost certainly break! By adapting to it now, you'll gain compatibility and a sense of having done the electronic ecology some good.</source>
          <target state="translated">，因为减少更新的Perl版本的污染是重要的事情。至关重要的是，在不久的将来将不再支持原始Perl模块的旧污染方式，并且您的模块几乎肯定会损坏！通过现在进行适应，您将获得兼容性以及对电子生态学有所帮助的感觉。</target>
        </trans-unit>
        <trans-unit id="cd35ebaf87e878605763ba0f4d65f6bf7f75dcc8" translate="yes" xml:space="preserve">
          <source>, because you were accidentally accessing &lt;code&gt;@aref&lt;/code&gt; , an undeclared variable, and it would thereby remind you to write instead:</source>
          <target state="translated">，因为您不小心访问了 &lt;code&gt;@aref&lt;/code&gt; ，这是一个未声明的变量，因此它会提醒您编写：</target>
        </trans-unit>
        <trans-unit id="d0ee637a4d76e416584c4c77f040993c430048a2" translate="yes" xml:space="preserve">
          <source>, because you were accidentally accessing &lt;code&gt;@aref&lt;/code&gt;, an undeclared variable, and it would thereby remind you to write instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc90bbfbb3e4cc7f9f2ca2bbceaeebbd891dbeb9" translate="yes" xml:space="preserve">
          <source>, below takes 2 parameters and increments each directly.</source>
          <target state="translated">，下面有2个参数，每个参数直接递增。</target>
        </trans-unit>
        <trans-unit id="a6beabe044ad8f9d1627ed533c6a9c88995aa997" translate="yes" xml:space="preserve">
          <source>, but $siteprefix might be</source>
          <target state="translated">，但$ siteprefix可能是</target>
        </trans-unit>
        <trans-unit id="6fce1e601c1523c8b2526a111e9e136024aa2709" translate="yes" xml:space="preserve">
          <source>, but are no longer available with</source>
          <target state="translated">，但不再适用于</target>
        </trans-unit>
        <trans-unit id="64ad796371383427b4cd0ba4371e73bd89ebb1b2" translate="yes" xml:space="preserve">
          <source>, but because &lt;code&gt;Foo&lt;/code&gt; defines a symbol (the &lt;code&gt;exclaim&lt;/code&gt; subroutine), &lt;code&gt;base&lt;/code&gt; will not die when the &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; fails to load</source>
          <target state="translated">，但是由于 &lt;code&gt;Foo&lt;/code&gt; 定义了一个符号（ &lt;code&gt;exclaim&lt;/code&gt; 子例程），所以当 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 无法加载时， &lt;code&gt;base&lt;/code&gt; 不会死</target>
        </trans-unit>
        <trans-unit id="c525aea4fc6dee1fd7c69c615565d059f44dd5dd" translate="yes" xml:space="preserve">
          <source>, but because &lt;code&gt;Foo&lt;/code&gt; defines a symbol (the &lt;code&gt;exclaim&lt;/code&gt; subroutine), &lt;code&gt;base&lt;/code&gt; will not die when the &lt;code&gt;require&lt;/code&gt; fails to load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7380af3179cca867b3885f99b22e74a3249cf" translate="yes" xml:space="preserve">
          <source>, but because you access them via the &lt;code&gt;maketext&lt;/code&gt; method, which looks for entries across all the &lt;code&gt;%Lexicon&lt;/code&gt; hashes in a language class</source>
          <target state="translated">，但是因为您是通过 &lt;code&gt;maketext&lt;/code&gt; 方法访问它们的，所以该方法将查找语言类中所有 &lt;code&gt;%Lexicon&lt;/code&gt; 哈希的条目</target>
        </trans-unit>
        <trans-unit id="a42a597d11c292d0f56cbf1684a5eac6028a67a1" translate="yes" xml:space="preserve">
          <source>, but can also be</source>
          <target state="translated">，但也可以</target>
        </trans-unit>
        <trans-unit id="7909130b18300cbb98ea4bbe9e66d49642019dec" translate="yes" xml:space="preserve">
          <source>, but cannot come at the end of a string, because the backslash would be parsed as escaping the end quote.</source>
          <target state="translated">，但不能出现在字符串的末尾，因为反斜杠将被解析为转义结束引号。</target>
        </trans-unit>
        <trans-unit id="42948efb81aca3fb2bd97534710c99990f79587a" translate="yes" xml:space="preserve">
          <source>, but from line 4.</source>
          <target state="translated">，但从第4行开始。</target>
        </trans-unit>
        <trans-unit id="bd1670f6de47acc9c9b7267ab71cba06c196ce25" translate="yes" xml:space="preserve">
          <source>, but it causes no harm.)</source>
          <target state="translated">，但不会造成任何伤害。）</target>
        </trans-unit>
        <trans-unit id="37120fa0734b652eb610ce4ae8b5f1bcc7d622f5" translate="yes" xml:space="preserve">
          <source>, but it does not contain all the characters from those blocks. It does not, for example, contain the digits 0-9, because those digits are shared across many scripts, and hence are in the &lt;code&gt;Common&lt;/code&gt; script.</source>
          <target state="translated">，但不包含这些块中的所有字符。例如，它不包含数字0-9，因为这些数字在许多脚本中共享，因此在&amp;ldquo; &lt;code&gt;Common&lt;/code&gt; 脚本中。</target>
        </trans-unit>
        <trans-unit id="1f2db577fa7893e92367cf784603b9d9d657f707" translate="yes" xml:space="preserve">
          <source>, but it has no problem linking to symbols in the</source>
          <target state="translated">，但是链接到</target>
        </trans-unit>
        <trans-unit id="bfb0016f55f0d3d559ba19fb54ebc0f455007395" translate="yes" xml:space="preserve">
          <source>, but it is a PM application.</source>
          <target state="translated">，但这是PM应用程序。</target>
        </trans-unit>
        <trans-unit id="bbe2c80423e439b3e4c161c99b0cea935717fc61" translate="yes" xml:space="preserve">
          <source>, but it is a very bad idea for two reasons.</source>
          <target state="translated">，但这是一个非常糟糕的主意，原因有两个。</target>
        </trans-unit>
        <trans-unit id="cdd23309b99a536c1f9d3df8a7c3d7430cce3c6b" translate="yes" xml:space="preserve">
          <source>, but it's really a 2D plane). The number</source>
          <target state="translated">，但实际上是2D平面）。数字</target>
        </trans-unit>
        <trans-unit id="b1b91a2c92813f244d7d492decf11786f03248cc" translate="yes" xml:space="preserve">
          <source>, but parameter order has been &quot;tidied up a little&quot;.</source>
          <target state="translated">，但参数顺序已经&amp;ldquo;整理了一点&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="14b0058af4ca943727004b79d41d8ab59c3a8dd9" translate="yes" xml:space="preserve">
          <source>, but should prefer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114efd0755f2064562435a7b7db5cf78b23a339b" translate="yes" xml:space="preserve">
          <source>, but that the meaning of the code point has been</source>
          <target state="translated">，但是代码点的含义是</target>
        </trans-unit>
        <trans-unit id="75a1a26b1e5fe270ec7a97baa5b4e4135475611b" translate="yes" xml:space="preserve">
          <source>, but the &lt;a href=&quot;Email::Valid&quot;&gt;Email::Valid&lt;/a&gt; module will do both part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48be256548eb3d87af3b99e921dd4b6fcf05890" translate="yes" xml:space="preserve">
          <source>, but the &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; module was unable to locate this library. See &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt;.</source>
          <target state="translated">，但是&lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt;模块无法找到该库。请参阅&lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bec967278894f864c70eea888e73e74018b65bcb" translate="yes" xml:space="preserve">
          <source>, but the &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Valid&quot;&gt;Email::Valid&lt;/a&gt; module will do both part</source>
          <target state="translated">，但&lt;a href=&quot;http://search.cpan.org/perldoc/Email::Valid&quot;&gt;Email :: Valid&lt;/a&gt;模块将同时完成这两项工作</target>
        </trans-unit>
        <trans-unit id="7536c70955b6a15d5f19153fc86efe49d7b1220b" translate="yes" xml:space="preserve">
          <source>, but the latter parts after</source>
          <target state="translated">，但之后的部分</target>
        </trans-unit>
        <trans-unit id="6b70056cdd55185377fa7fb36dcc37e7dfcc656b" translate="yes" xml:space="preserve">
          <source>, but there are legitimate cases where the polar style</source>
          <target state="translated">，但在某些情况下，极地风格</target>
        </trans-unit>
        <trans-unit id="b30d41b915336fadcad5858b5a1e924cedc04255" translate="yes" xml:space="preserve">
          <source>, but there are some issues with this form, described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083b89b36ef467b16cb732332b28ca7c58c02c6f" translate="yes" xml:space="preserve">
          <source>, but these are also sufficiently generic that the actual version of perl probably doesn't matter too much.)</source>
          <target state="translated">，但是它们也足够通用，因此perl的实际版本可能没有太大关系。）</target>
        </trans-unit>
        <trans-unit id="440fbd28d07d5c795b6c02a88a168111c4c2b6d4" translate="yes" xml:space="preserve">
          <source>, but they are &quot;shared in the private address space of the process&quot;; this is possible because the address at which different sections of the</source>
          <target state="translated">，但它们&amp;ldquo;在进程的专用地址空间中共享&amp;rdquo;；这是可能的，因为地址的不同部分</target>
        </trans-unit>
        <trans-unit id="e5d0a0fe8de2f9a20207b5984a8a5c6b03dfd271" translate="yes" xml:space="preserve">
          <source>, but those are both created with customizable</source>
          <target state="translated">，但两者都是使用可自定义的方式创建的</target>
        </trans-unit>
        <trans-unit id="8a1d6fa8427fbb9da10acb5f650733e9aa4df3f0" translate="yes" xml:space="preserve">
          <source>, but unicode-strings are downgraded with UTF-8 encoding. This happens because the first 256 codepoints in Unicode happens to agree with Latin-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f76102144f22e473a3819c08962f84a35f7781" translate="yes" xml:space="preserve">
          <source>, but without any arguments at all, meaning it was called as &lt;code&gt;&amp;amp;infested&lt;/code&gt; . The next stack frame shows that the function &lt;code&gt;Ambulation::legs&lt;/code&gt; was called in list context from the</source>
          <target state="translated">，但完全没有任何参数，这意味着它被称为 &lt;code&gt;&amp;amp;infested&lt;/code&gt; 。下一个堆栈帧显示了 &lt;code&gt;Ambulation::legs&lt;/code&gt; 函数是从列表上下文中调用的。</target>
        </trans-unit>
        <trans-unit id="ae798928c9d09a028636501055f75aa984c26a2d" translate="yes" xml:space="preserve">
          <source>, but without any arguments at all, meaning it was called as &lt;code&gt;&amp;amp;infested&lt;/code&gt;. The next stack frame shows that the function &lt;code&gt;Ambulation::legs&lt;/code&gt; was called in list context from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ba937cc0e16bb306ca2b4bf857c5037ec4cf2e" translate="yes" xml:space="preserve">
          <source>, but you can also find it with &lt;code&gt;(get&lt;/code&gt;&lt;code&gt;pwuid($&amp;lt;))[7]&lt;/code&gt; . (Some platforms do not have a concept of a home directory.)</source>
          <target state="translated">，但您也可以使用 &lt;code&gt;(get&lt;/code&gt; &lt;code&gt;pwuid($&amp;lt;))[7]&lt;/code&gt; 找到它。（某些平台没有主目录的概念。）</target>
        </trans-unit>
        <trans-unit id="66bf2d68f3062e2f5b926174869b8b87c1d69bb9" translate="yes" xml:space="preserve">
          <source>, but you can also find it with &lt;code&gt;(get&lt;/code&gt;&lt;code&gt;pwuid($&amp;lt;))[7]&lt;/code&gt;. (Some platforms do not have a concept of a home directory.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30cbc2585551375d5776769096b997571f847fa" translate="yes" xml:space="preserve">
          <source>, by J.R.R. Tolkien and published posthumously by his son and literary executor, C.J.R. Tolkien, being the 3rd of the 12 volumes in Christopher's mammoth</source>
          <target state="translated">由JRR Tolkien撰写，由他的儿子和文学执行者CJR Tolkien死后出版，是克里斯托弗猛oth象的12卷中的第3卷</target>
        </trans-unit>
        <trans-unit id="20a4c36993cdadf5b45a96ba6612a7047ca32e20" translate="yes" xml:space="preserve">
          <source>, by J.R.R. Tolkien. The hardcover, 50th-anniversary edition of 2004 was used, published in the UK by Harper Collins Publishers and in the US by the Houghton Mifflin Company.</source>
          <target state="translated">，由JRR Tolkien撰写。该精装本是2004年50周年纪念版，由Harper Collins Publishers在英国出版，由Houghton Mifflin Company在美国出版。</target>
        </trans-unit>
        <trans-unit id="efffb220c955e443cccb58c8907e329a0175c1d5" translate="yes" xml:space="preserve">
          <source>, by J.R.R. Tolkien. The hardcover, 70th-anniversary edition of 2007 was used, published in the UK by Harper Collins Publishers and in the US by the Houghton Mifflin Company.</source>
          <target state="translated">，由JRR Tolkien撰写。该精装本是2007年的70周年纪念版，由Harper Collins Publishers在英国出版，由Houghton Mifflin Company在美国出版。</target>
        </trans-unit>
        <trans-unit id="074cc72ccfc535a7fd2e5dfd0338a00ba7d4e394" translate="yes" xml:space="preserve">
          <source>, by default. The format of the file looks like this:</source>
          <target state="translated">， 默认。该文件的格式如下：</target>
        </trans-unit>
        <trans-unit id="15848886de9254fb610ee7af8ef183ea5520e125" translate="yes" xml:space="preserve">
          <source>, calling its check function, allocating a target if it needs one, and folding constants.</source>
          <target state="translated">，调用其check函数，在需要时分配目标并折叠常量。</target>
        </trans-unit>
        <trans-unit id="f1dcc83c1274d4f418815f27c4f79fd6d2c788ff" translate="yes" xml:space="preserve">
          <source>, chapter 20, or</source>
          <target state="translated">，第20章或</target>
        </trans-unit>
        <trans-unit id="8ad183a82720f028dc83a25268edf18aae60bbed" translate="yes" xml:space="preserve">
          <source>, chapter 5.</source>
          <target state="translated">，第5章。</target>
        </trans-unit>
        <trans-unit id="1757193dd1ff5a7e70ef0ab65fa059299037848a" translate="yes" xml:space="preserve">
          <source>, characters in the target string that match a character in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae0b48133bb856879ab9974c904d27120fd6b88" translate="yes" xml:space="preserve">
          <source>, consisting of a first and last name (no middle initial). The name class has four methods:</source>
          <target state="translated">，由名字和姓氏组成（无中间名缩写）。名称类具有四个方法：</target>
        </trans-unit>
        <trans-unit id="13383455434bc33fbc4b94aaa1a7d28b9e8cf222" translate="yes" xml:space="preserve">
          <source>, depending on the operating system. The variable &lt;a href=&quot;config#_exe&quot;&gt;&lt;code&gt;$Config{_exe}&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;config&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; module holds the executable suffix, if any. Third, the VMS port carefully sets up &lt;a href=&quot;perlvar#%24%5EX&quot;&gt;&lt;code&gt;$^X&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;config#perlpath&quot;&gt;&lt;code&gt;$Config{perlpath}&lt;/code&gt;&lt;/a&gt; so that no further processing is required. This is just as well, because the matching regular expression used below would then have to deal with a possible trailing version number in the VMS file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7deb52a5ffa60ddf7faa0bfee1739d2eee5281b4" translate="yes" xml:space="preserve">
          <source>, depending on the operating system. The variable &lt;code&gt;&quot;_exe&quot;&lt;/code&gt; in the &lt;code&gt;Config&lt;/code&gt; module holds the executable suffix, if any. Third, the VMS port carefully sets up &lt;code&gt;$^X&lt;/code&gt; and &lt;code&gt;$Config{perlpath}&lt;/code&gt; so that no further processing is required. This is just as well, because the matching regular expression used below would then have to deal with a possible trailing version number in the VMS file name.</source>
          <target state="translated">，具体取决于操作系统。变量 &lt;code&gt;&quot;_exe&quot;&lt;/code&gt; 中 &lt;code&gt;Config&lt;/code&gt; 模块保存的可执行后缀，如果有的话。第三，VMS端口会仔细设置 &lt;code&gt;$^X&lt;/code&gt; 和 &lt;code&gt;$Config{perlpath}&lt;/code&gt; 以便不需要进一步处理。这也是一样，因为下面使用的匹配正则表达式必须处理VMS文件名中可能存在的尾随版本号。</target>
        </trans-unit>
        <trans-unit id="641474390807c65a1ea8e6d8031b0ad22844d890" translate="yes" xml:space="preserve">
          <source>, described in &lt;a href=&quot;Hash::Util::FieldHash&quot;&gt;Hash::Util::FieldHash&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5a4498d5cd3fe648547701b8b083a3ff8ca97c" translate="yes" xml:space="preserve">
          <source>, described in &lt;a href=&quot;util/fieldhash&quot;&gt;Hash::Util::FieldHash&lt;/a&gt;.</source>
          <target state="translated">，如&lt;a href=&quot;util/fieldhash&quot;&gt;Hash :: Util :: FieldHash中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcd04308b32b6687d7bf86d16ef25fad4d5ae88a" translate="yes" xml:space="preserve">
          <source>, didn't find it, and set &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; to a non-zero value indicating failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191488e37062f1a4cf41a5aeb9e53d937285dc2f" translate="yes" xml:space="preserve">
          <source>, didn't find it, and set &lt;code&gt;$?&lt;/code&gt; to a non-zero value indicating failure.</source>
          <target state="translated">，没有找到，并设置了 &lt;code&gt;$?&lt;/code&gt; 表示失败的非零值。</target>
        </trans-unit>
        <trans-unit id="bffed554a4db53bd8f296b3affa5430997fc3de5" translate="yes" xml:space="preserve">
          <source>, do</source>
          <target state="translated">，做</target>
        </trans-unit>
        <trans-unit id="94c2dbf1b9eb9f81052b5cb53ad3879e10f289ae" translate="yes" xml:space="preserve">
          <source>, do not fit into any of the other directories, but which, in addition, cannot use</source>
          <target state="translated">，不适合其他任何目录，但不能使用</target>
        </trans-unit>
        <trans-unit id="c65676655ea7406a8fc174f69430a531377ea940" translate="yes" xml:space="preserve">
          <source>, documented above, &lt;a href=&quot;#events-with-an-element_name-of-over-empty&quot;&gt;&quot;events with an element_name of over-empty&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0a59da47187262d9d4bfa48199c7bce6f4c216" translate="yes" xml:space="preserve">
          <source>, does the opposite of the</source>
          <target state="translated">，做相反的事情</target>
        </trans-unit>
        <trans-unit id="8fcd667169652690ef5e54800f7ff7538897e19e" translate="yes" xml:space="preserve">
          <source>, e.g. once you created a number under the influence of &lt;code&gt;CLASS-&amp;gt;accuracy($A)&lt;/code&gt; , all results from math operations with that number will also be rounded.</source>
          <target state="translated">，例如，一旦您在 &lt;code&gt;CLASS-&amp;gt;accuracy($A)&lt;/code&gt; 的影响下创建了一个数字，则使用该数字进行数学运算的所有结果也会被四舍五入。</target>
        </trans-unit>
        <trans-unit id="95f1a8ea281395023f3212b3e7fe5e8e678b9f23" translate="yes" xml:space="preserve">
          <source>, e.g. once you created a number under the influence of &lt;code&gt;CLASS-&amp;gt;accuracy($A)&lt;/code&gt;, all results from math operations with that number will also be rounded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d483da9af92e1cedaee73a77b0f92e783cee701" translate="yes" xml:space="preserve">
          <source>, encountering an 8 or 9 will also trigger a warning. On return</source>
          <target state="translated">，遇到8或9也会触发警告。退货时</target>
        </trans-unit>
        <trans-unit id="d2f5d265b5802df06743d0d56f8ee6faa03ca24f" translate="yes" xml:space="preserve">
          <source>, encountering an invalid character will also trigger a warning. On return</source>
          <target state="translated">，遇到无效字符也会触发警告。退货时</target>
        </trans-unit>
        <trans-unit id="04677f3fac90b98f6c1dae663782f13b8cbddc16" translate="yes" xml:space="preserve">
          <source>, et al.) for your machine: &lt;code&gt;perl -MConfig -e 'print $Config{cc}'&lt;/code&gt; will tell you what to use.</source>
          <target state="translated">等） &lt;code&gt;perl -MConfig -e 'print $Config{cc}'&lt;/code&gt; 将告诉您使用什么。</target>
        </trans-unit>
        <trans-unit id="cad820714976d3b25c5367f0c02ee50a22785739" translate="yes" xml:space="preserve">
          <source>, etc) determined by &lt;b&gt;Configure&lt;/b&gt; (&lt;code&gt;$Config{'libpth'}&lt;/code&gt; ). This should ensure portability across a wide range of platforms.</source>
          <target state="translated">，等等）由&lt;b&gt;Configure&lt;/b&gt;（ &lt;code&gt;$Config{'libpth'}&lt;/code&gt; ）确定。这应确保跨各种平台的可移植性。</target>
        </trans-unit>
        <trans-unit id="f468a305e52e41fabae609fe5a43188262dfd717" translate="yes" xml:space="preserve">
          <source>, etc) determined by &lt;b&gt;Configure&lt;/b&gt; (&lt;code&gt;$Config{'libpth'}&lt;/code&gt;). This should ensure portability across a wide range of platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a212453865c3ae5d769c013e9814daf8f2a214a4" translate="yes" xml:space="preserve">
          <source>, etc.</source>
          <target state="translated">等</target>
        </trans-unit>
        <trans-unit id="f74d93dc922dc52c2fedf5e569c92696750decef" translate="yes" xml:space="preserve">
          <source>, etc. Have your top-level &lt;code&gt;WriteMakefile&lt;/code&gt; set the variable &lt;code&gt;XSMULTI&lt;/code&gt; to a true value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b565fb66bcacd3184f91a476fa76a2a7c0432910" translate="yes" xml:space="preserve">
          <source>, etc. It is only used to set defaults for things in</source>
          <target state="translated">等等。它仅用于为中的内容设置默认值</target>
        </trans-unit>
        <trans-unit id="254162fca7c5d2117d855ce88363b775777d261a" translate="yes" xml:space="preserve">
          <source>, etc. Unfortunately, sometimes these filenames won't even work if you include an explicit directory prefix. It is best to avoid such filenames, if you want your code to be portable to DOS and its derivatives. It's hard to know what these all are, unfortunately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a688c0b28a7df2e9a7d253a82e6c6e84a3330b9" translate="yes" xml:space="preserve">
          <source>, etc. Windows and VMS have their own Configure-like scripts, in their respective directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547884f80573a30a2c1775d0d189f35232800ed1" translate="yes" xml:space="preserve">
          <source>, etc.) show examples of general tied hashes, as does the &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; module. While these do not utilize &lt;b&gt;Tie::Hash&lt;/b&gt;, they serve as good working examples.</source>
          <target state="translated">等），以及&lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;模块一样，显示了常规绑定哈希的示例。尽管这些未使用&lt;b&gt;Tie :: Hash&lt;/b&gt;，但它们是很好的工作示例。</target>
        </trans-unit>
        <trans-unit id="14799a215b2ab9755e0f596823ecf4dbc0d72f12" translate="yes" xml:space="preserve">
          <source>, etc.) show examples of general tied hashes, as does the &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; module. While these do not utilize &lt;b&gt;Tie::Hash&lt;/b&gt;, they serve as good working examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1210937e081e362e85df120171033ff4b61361" translate="yes" xml:space="preserve">
          <source>, etc., not keeping separate files for each little release.</source>
          <target state="translated">等等，对于每个小版本，不保留单独的文件。</target>
        </trans-unit>
        <trans-unit id="800135a8cf871bdccfdf925e7c9f67cb8dbd1d91" translate="yes" xml:space="preserve">
          <source>, even if the old Unicode string used EBCDIC.</source>
          <target state="translated">，即使旧的Unicode字符串使用EBCDIC。</target>
        </trans-unit>
        <trans-unit id="727fb7fe0065fed08079bab1144d37e69c258b0f" translate="yes" xml:space="preserve">
          <source>, except that under &lt;code&gt;/s&lt;/code&gt;, the 2nd and following characters are squeezed out in a sequence of characters in a row that all translate to the same character. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae4a1230d3f708e9962358a9ef97eda0e7da8ca" translate="yes" xml:space="preserve">
          <source>, executes three Perl strings, extracting an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; from the first, a &lt;code&gt;float&lt;/code&gt; from the second, and a &lt;code&gt;char *&lt;/code&gt; from the third.</source>
          <target state="translated">，执行三个Perl字符串，从第一个字符串中提取一个 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; ，从第二个字符串中提取一个 &lt;code&gt;float&lt;/code&gt; ，并从第三个字符串中提取一个 &lt;code&gt;char *&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="787d143c6cf0b043068fb80fa8b4344c2a645b40" translate="yes" xml:space="preserve">
          <source>, executes three Perl strings, extracting an &lt;code&gt;int&lt;/code&gt; from the first, a &lt;code&gt;float&lt;/code&gt; from the second, and a &lt;code&gt;char *&lt;/code&gt; from the third.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8592f41382d4e5c2d5d57b842dd51b103596cdc2" translate="yes" xml:space="preserve">
          <source>, first two will be issued to make the prompt standout, last two to make the input line standout.</source>
          <target state="translated">，将发出前两个以使提示突出，后两个将使输入行突出。</target>
        </trans-unit>
        <trans-unit id="e326c61927837140eb9a99bc562c35954b12ff00" translate="yes" xml:space="preserve">
          <source>, followed by &quot;.&quot;, to represent the current directory. (&quot;.&quot; will not be appended if taint checks are enabled, either by &lt;code&gt;-T&lt;/code&gt; or by &lt;code&gt;-t&lt;/code&gt; .) If you need to modify this at runtime, you should use the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; lib&lt;/code&gt; pragma to get the machine-dependent library properly loaded also:</source>
          <target state="translated">，后跟&amp;ldquo;。&amp;rdquo;，代表当前目录。（如果通过 &lt;code&gt;-T&lt;/code&gt; 或 &lt;code&gt;-t&lt;/code&gt; 启用了污点检查，则不会附加&amp;ldquo;。&amp;rdquo; 。）如果需要在运行时进行修改，则还应使用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; lib&lt;/code&gt; pragma来正确加载与机器相关的库。 ：</target>
        </trans-unit>
        <trans-unit id="e47c6b2622df17cb9ac51798532485ad11e9ba2e" translate="yes" xml:space="preserve">
          <source>, for &quot;interpreter threads&quot;.</source>
          <target state="translated">，用于&amp;ldquo;解释器线程&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3da21179cff23cf6f4725a6914c2f3067c8f2e68" translate="yes" xml:space="preserve">
          <source>, for example &lt;code&gt;constant_5&lt;/code&gt; for names 5 characters long. The default</source>
          <target state="translated">，例如 &lt;code&gt;constant_5&lt;/code&gt; 表示名称长度为5个字符。默认值</target>
        </trans-unit>
        <trans-unit id="2fee34f87618999ee14e21bb687483c9271ed175" translate="yes" xml:space="preserve">
          <source>, for example).</source>
          <target state="translated">， 例如）。</target>
        </trans-unit>
        <trans-unit id="28da9ec75c809bccb5f08bba4f669c3533c7ba7b" translate="yes" xml:space="preserve">
          <source>, for example, this would include</source>
          <target state="translated">，例如，这将包括</target>
        </trans-unit>
        <trans-unit id="7c331f0b5befe1a82f2eeb7e08fd9a086e46b9f4" translate="yes" xml:space="preserve">
          <source>, for example, which is usually in</source>
          <target state="translated">，例如，通常位于</target>
        </trans-unit>
        <trans-unit id="1611b180f41bef969e37c18e79566f4a39e16c29" translate="yes" xml:space="preserve">
          <source>, for instance, have been placed there rather than in</source>
          <target state="translated">，例如，已放置在此处而不是放置在</target>
        </trans-unit>
        <trans-unit id="56372a1dac8b69b17464e5a00569b03f0872fcdf" translate="yes" xml:space="preserve">
          <source>, freeing all resources associated with it.</source>
          <target state="translated">，释放与之关联的所有资源。</target>
        </trans-unit>
        <trans-unit id="f4b8256a6099f4e144fd62a3869c42ca7b38c688" translate="yes" xml:space="preserve">
          <source>, greater-than. Or Pod parsers may offer the alternative option of processing such unknown &quot;E&amp;lt;</source>
          <target state="translated">， 比...更棒。或Pod解析器可能会提供处理此类未知&amp;ldquo; E &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e7f34752016620eedb00a8cbd6624ed4757364db" translate="yes" xml:space="preserve">
          <source>, handing it NULL for the second argument:</source>
          <target state="translated">，为第二个参数传递NULL：</target>
        </trans-unit>
        <trans-unit id="13918e9d4ee7ed5a5b531e3ce1c4548f829845bb" translate="yes" xml:space="preserve">
          <source>, has very helpful pictures:</source>
          <target state="translated">，有非常有用的图片：</target>
        </trans-unit>
        <trans-unit id="5b2d144fe487b3bdc6b5822c043f233ce157080f" translate="yes" xml:space="preserve">
          <source>, have aliases</source>
          <target state="translated">，有别名</target>
        </trans-unit>
        <trans-unit id="4f6137d9065b22f545ac392077aa91739c927e9e" translate="yes" xml:space="preserve">
          <source>, however, a module under</source>
          <target state="translated">但是，在</target>
        </trans-unit>
        <trans-unit id="9205ef8665795fce8cf05345636ac2832fbc1a01" translate="yes" xml:space="preserve">
          <source>, if any. If it returns the empty string, use &lt;a href=&quot;#getpwuid-UID&quot;&gt;&lt;code&gt;getpwuid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa65a22e2f2e07e3150f049e4c966e6fcd3df9ae" translate="yes" xml:space="preserve">
          <source>, if any. If it returns the empty string, use &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（如果有）。如果返回空字符串，请使用 &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb8b8da23653cf06debe3b23d1da5fd0c356db27" translate="yes" xml:space="preserve">
          <source>, if any. If it returns the empty string, use &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（如果有）。如果返回空字符串，请使用 &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6769873a1cbe047b8a844d6fbd4ad589c9faed9" translate="yes" xml:space="preserve">
          <source>, if given, is the file to which to write the formatted output. If</source>
          <target state="translated">（如果提供）是将格式化输出写入的文件。如果</target>
        </trans-unit>
        <trans-unit id="77eafd03fdb7f9d16237f45a4ce317d87b94c553" translate="yes" xml:space="preserve">
          <source>, if non-null, provides a string (in SV form) containing code to be parsed. A copy of the string is made, so subsequent modification of</source>
          <target state="translated">，如果为非null，则提供一个包含要解析的代码的字符串（以SV形式）。复制了字符串，因此随后进行了修改</target>
        </trans-unit>
        <trans-unit id="030106d2304ec93f9cf5e7c3317d1e0cb410b3da" translate="yes" xml:space="preserve">
          <source>, if non-null, provides an input stream from which code will be read to be parsed. If both are non-null, the code in</source>
          <target state="translated">，如果为非null，则提供一个输入流，将从中读取要解析的代码。如果两者都不为空，则代码在</target>
        </trans-unit>
        <trans-unit id="6cbeb9fe895f728ef42c186aa976bba1c9ce0104" translate="yes" xml:space="preserve">
          <source>, if you're running setgid.</source>
          <target state="translated">，如果您正在运行setgid。</target>
        </trans-unit>
        <trans-unit id="0dbb5d893ddb3b24557057bead5ebb8bfe161473" translate="yes" xml:space="preserve">
          <source>, if you're running setuid.</source>
          <target state="translated">，如果您正在运行setuid。</target>
        </trans-unit>
        <trans-unit id="359ce93de57e677d41e4feae3db26ccadd5f4602" translate="yes" xml:space="preserve">
          <source>, in that order, unless the environment variable</source>
          <target state="translated">，除非环境变量</target>
        </trans-unit>
        <trans-unit id="790ae18f398610e33985ad234301f212b618f615" translate="yes" xml:space="preserve">
          <source>, in that order.</source>
          <target state="translated">， 以该顺序。</target>
        </trans-unit>
        <trans-unit id="a9ca71fd641028e60feb39e0200097fbb26b663e" translate="yes" xml:space="preserve">
          <source>, in the mode value it returns, if you need an approximation of the file's protections.</source>
          <target state="translated">，如果您需要文件保护的近似值，它将在模式值中返回。</target>
        </trans-unit>
        <trans-unit id="4a46a8b425bb0176ffac49f9bb0407a8c91faaf3" translate="yes" xml:space="preserve">
          <source>, in which case it does a &lt;a href=&quot;http://man.he.net/man2/sendto&quot;&gt;sendto(2)&lt;/a&gt; syscall. Returns the number of characters sent, or the undefined value on error. The &lt;a href=&quot;http://man.he.net/man2/sendmsg&quot;&gt;sendmsg(2)&lt;/a&gt; syscall is currently unimplemented. See &lt;a href=&quot;perlipc#UDP%3A-Message-Passing&quot;&gt;&quot;UDP: Message Passing&quot; in perlipc&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba423002f3a8458818555c6df33df9999f3fd327" translate="yes" xml:space="preserve">
          <source>, in which case it does a sendto(2) syscall. Returns the number of characters sent, or the undefined value on error. The sendmsg(2) syscall is currently unimplemented. See &lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">，在这种情况下，它将执行sendto（2）syscall。返回发送的字符数，或返回错误时的未定义值。sendmsg（2）系统调用当前未实现。有关示例，请参见&lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;perlipc中的UDP：消息传递&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="adc9b471306d3e563016072b65846bf606376045" translate="yes" xml:space="preserve">
          <source>, in which case it does a sendto(2) syscall. Returns the number of characters sent, or the undefined value on error. The sendmsg(2) syscall is currently unimplemented. See &lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">，在这种情况下，它将执行sendto（2）syscall。返回发送的字符数，或返回错误时的未定义值。sendmsg（2）系统调用当前未实现。有关示例，请参见&lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;perlipc中的UDP：消息传递&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8770c2665fa7656dfe5c162a8df3a289203cc335" translate="yes" xml:space="preserve">
          <source>, included in the source distribution. Here's a bastardized, non-portable version of</source>
          <target state="translated">，包括在源代码分发中。这是一个混蛋，不可携带的版本</target>
        </trans-unit>
        <trans-unit id="eb5f00bc57f8a74444c521b49f19146de255153e" translate="yes" xml:space="preserve">
          <source>, included with Perl 3.0. It was converted as a module with Perl 5.0, but had a version number only starting with Perl 5.6. Here is a small table with the matching Perl and &lt;code&gt;Sys::Syslog&lt;/code&gt; versions.</source>
          <target state="translated">，包含在Perl 3.0中。它在Perl 5.0中被转换为模块，但是仅从Perl 5.6开始具有版本号。这是一张带有匹配Perl和 &lt;code&gt;Sys::Syslog&lt;/code&gt; 版本的小表。</target>
        </trans-unit>
        <trans-unit id="8ea24d1d602be3c931482d6a832964fc845b16f4" translate="yes" xml:space="preserve">
          <source>, instructs &lt;code&gt;autosplit&lt;/code&gt; to check the module currently being split to ensure that it includes a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; specification for the AutoLoader module, and skips the module if AutoLoader is not detected. $check defaults to 1.</source>
          <target state="translated">，指示 &lt;code&gt;autosplit&lt;/code&gt; 检查当前正在拆分的模块，以确保其中包括AutoLoader模块的 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 规范，如果未检测到AutoLoader，则跳过该模块。 $ check默认为1。</target>
        </trans-unit>
        <trans-unit id="968584f650e6dedd255b15fa43ea5c603f1d972b" translate="yes" xml:space="preserve">
          <source>, instructs &lt;code&gt;autosplit&lt;/code&gt; to check the module currently being split to ensure that it includes a &lt;code&gt;use&lt;/code&gt; specification for the AutoLoader module, and skips the module if AutoLoader is not detected. $check defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d83a3f144336c31c776a79a37fb93513e38ad4" translate="yes" xml:space="preserve">
          <source>, intended for debugging or generating backtraces, and should not be relied upon. In particular, as &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt; contains aliases to the caller's arguments, Perl does not take a copy of &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt;, so &lt;code&gt;@DB::args&lt;/code&gt; will contain modifications the subroutine makes to &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt; or its contents, not the original values at call time. &lt;code&gt;@DB::args&lt;/code&gt;, like &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt;, does not hold explicit references to its elements, so under certain cases its elements may have become freed and reallocated for other variables or temporary values. Finally, a side effect of the current implementation is that the effects of &lt;code&gt;shift @_&lt;/code&gt; can</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6083d57ec1ee8a0d3d6d5459b1cec9032efce60" translate="yes" xml:space="preserve">
          <source>, intended for debugging or generating backtraces, and should not be relied upon. In particular, as &lt;code&gt;@_&lt;/code&gt; contains aliases to the caller's arguments, Perl does not take a copy of &lt;code&gt;@_&lt;/code&gt; , so &lt;code&gt;@DB::args&lt;/code&gt; will contain modifications the subroutine makes to &lt;code&gt;@_&lt;/code&gt; or its contents, not the original values at call time. &lt;code&gt;@DB::args&lt;/code&gt; , like &lt;code&gt;@_&lt;/code&gt; , does not hold explicit references to its elements, so under certain cases its elements may have become freed and reallocated for other variables or temporary values. Finally, a side effect of the current implementation is that the effects of &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt; @_&lt;/code&gt; can</source>
          <target state="translated">，用于调试或生成回溯，因此不应依赖。特别地，由于 &lt;code&gt;@_&lt;/code&gt; 包含调用者参数的别名，Perl不会复制 &lt;code&gt;@_&lt;/code&gt; ，因此 &lt;code&gt;@DB::args&lt;/code&gt; 将包含子例程对 &lt;code&gt;@_&lt;/code&gt; 或其内容所做的修改，而不是调用时的原始值。 &lt;code&gt;@DB::args&lt;/code&gt; 像 &lt;code&gt;@_&lt;/code&gt; 一样，没有对其元素的显式引用，因此在某些情况下，其元素可能已释放并重新分配给其他变量或临时值。最后，当前实现的副作用是 &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt; @_&lt;/code&gt; 的影响可以</target>
        </trans-unit>
        <trans-unit id="d6fb9ba10623dfd1aded621d9ddedd7e1c61500b" translate="yes" xml:space="preserve">
          <source>, intended for debugging or generating backtraces, and should not be relied upon. In particular, as &lt;code&gt;@_&lt;/code&gt; contains aliases to the caller's arguments, Perl does not take a copy of &lt;code&gt;@_&lt;/code&gt; , so &lt;code&gt;@DB::args&lt;/code&gt; will contain modifications the subroutine makes to &lt;code&gt;@_&lt;/code&gt; or its contents, not the original values at call time. &lt;code&gt;@DB::args&lt;/code&gt; , like &lt;code&gt;@_&lt;/code&gt; , does not hold explicit references to its elements, so under certain cases its elements may have become freed and reallocated for other variables or temporary values. Finally, a side effect of the current implementation is that the effects of &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt; @_&lt;/code&gt; can</source>
          <target state="translated">，用于调试或生成回溯，因此不应依赖。特别地，由于 &lt;code&gt;@_&lt;/code&gt; 包含调用者参数的别名，Perl不会复制 &lt;code&gt;@_&lt;/code&gt; ，因此 &lt;code&gt;@DB::args&lt;/code&gt; 将包含子例程对 &lt;code&gt;@_&lt;/code&gt; 或其内容所做的修改，而不是调用时的原始值。 &lt;code&gt;@DB::args&lt;/code&gt; 像 &lt;code&gt;@_&lt;/code&gt; 一样，没有对其元素的显式引用，因此在某些情况下，其元素可能已释放并重新分配给其他变量或临时值。最后，当前实现的副作用是 &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt; @_&lt;/code&gt; 的影响可以</target>
        </trans-unit>
        <trans-unit id="13eb87bdfb3a3624e2f9e8a8d87bc78f8db7280d" translate="yes" xml:space="preserve">
          <source>, into Perl's internal form. As with encode(),</source>
          <target state="translated">，转换为Perl的内部形式。与encode（）一样，</target>
        </trans-unit>
        <trans-unit id="cfa0115c245a8b3ea3252178af8759b7405c3a1b" translate="yes" xml:space="preserve">
          <source>, is copied under</source>
          <target state="translated">，复制到</target>
        </trans-unit>
        <trans-unit id="aa6135a1a196ba8c00d8ec8b4a64ca9d1706801d" translate="yes" xml:space="preserve">
          <source>, is false, then any pre-existing &lt;code&gt;*.al&lt;/code&gt; files in the autoload directory are removed if they are no longer part of the module (obsoleted functions). $keep defaults to 0.</source>
          <target state="translated">如果为，则为false，如果autoload目录中的所有先前 &lt;code&gt;*.al&lt;/code&gt; 文件不再是模块的一部分（已废弃的功能），则将其删除。$ keep默认为0。</target>
        </trans-unit>
        <trans-unit id="51eed46bc6e5b10c08d79ee20d1f1a587cafafba" translate="yes" xml:space="preserve">
          <source>, is similar to</source>
          <target state="translated">， 类似于</target>
        </trans-unit>
        <trans-unit id="79817a35af4a945dfd5b54b07a8db380c4bf6155" translate="yes" xml:space="preserve">
          <source>, is the op type. It's an addition operator, so we want the type to be &lt;code&gt;ADDOP&lt;/code&gt; . We could specify this directly, but it's right there as the second token in the input, so we use &lt;code&gt;$2&lt;/code&gt; . The second parameter is the op's flags: 0 means &quot;nothing special&quot;. Then the things to add: the left and right hand side of our expression, in scalar context.</source>
          <target state="translated">，是op类型。这是一个加法运算符，因此我们希望类型为 &lt;code&gt;ADDOP&lt;/code&gt; 。我们可以直接指定它，但是它在那里作为输入中的第二个标记，因此我们使用 &lt;code&gt;$2&lt;/code&gt; 。第二个参数是op的标志：0表示&amp;ldquo;没什么特别的&amp;rdquo;。然后要添加的东西：在标量上下文中，表达式的左侧和右侧。</target>
        </trans-unit>
        <trans-unit id="0d4e379c51b0a4ee2a90ac03f59a5e363e730701" translate="yes" xml:space="preserve">
          <source>, is the op type. It's an addition operator, so we want the type to be &lt;code&gt;ADDOP&lt;/code&gt;. We could specify this directly, but it's right there as the second token in the input, so we use &lt;code&gt;$2&lt;/code&gt;. The second parameter is the op's flags: 0 means &quot;nothing special&quot;. Then the things to add: the left and right hand side of our expression, in scalar context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0080e719ea6b38d68de4ba8b7693bc8dba72e5a" translate="yes" xml:space="preserve">
          <source>, it doesn't redirect stderr to stdout.</source>
          <target state="translated">，它不会将stderr重定向到stdout。</target>
        </trans-unit>
        <trans-unit id="664f4ea1afd52b971da3d2f089f2511da29b2351" translate="yes" xml:space="preserve">
          <source>, it is enough to have them on your path. One does not need to specify them explicitly (though this</source>
          <target state="translated">，将它们放在您的路径上就足够了。不需要显式地指定它们（尽管这</target>
        </trans-unit>
        <trans-unit id="01bd8dd935a29b3fddd9c06ac4b13a42b2abe139" translate="yes" xml:space="preserve">
          <source>, it is not necessarily the case that any output will be produced by this method. So don't rely on the fact that &lt;code&gt;$out&lt;/code&gt; is empty for an error test.</source>
          <target state="translated">，这种方法不一定会产生任何输出。因此，请勿依赖 &lt;code&gt;$out&lt;/code&gt; 为空进行错误测试这一事实。</target>
        </trans-unit>
        <trans-unit id="9b3b34697471a7e2dc56c68064b05288c536a237" translate="yes" xml:space="preserve">
          <source>, it is still good practice to check the return code from</source>
          <target state="translated">，仍然是从以下位置检查返回代码的好习惯</target>
        </trans-unit>
        <trans-unit id="d91455e8d254597cb96fe4e096fe840d6a39837b" translate="yes" xml:space="preserve">
          <source>, it is substituted with</source>
          <target state="translated">，它被替换为</target>
        </trans-unit>
        <trans-unit id="651848b5afecc31a5c38cd73df7324f50c74618a" translate="yes" xml:space="preserve">
          <source>, it passes &lt;code&gt;&lt;a href=&quot;perlapi#isUTF8_CHAR&quot;&gt;&quot;isUTF8_CHAR&quot; in perlapi&lt;/a&gt;&lt;/code&gt;. Surrogates, non-character code points, and non-Unicode code points are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bef723cdeef4c4aad0269573935dc64dcabf73" translate="yes" xml:space="preserve">
          <source>, just type:</source>
          <target state="translated">，只需输入：</target>
        </trans-unit>
        <trans-unit id="ec7445398596752b90e13adb72725edcb5f55fb9" translate="yes" xml:space="preserve">
          <source>, left justified to fill</source>
          <target state="translated">，左对齐即可填充</target>
        </trans-unit>
        <trans-unit id="58977f34d6981ce10f380c393153c619fec7c3b0" translate="yes" xml:space="preserve">
          <source>, library stuff in</source>
          <target state="translated">，其中的图书馆资料</target>
        </trans-unit>
        <trans-unit id="ba5ebce04882b3b845e0e11a0351a954b9d067f9" translate="yes" xml:space="preserve">
          <source>, lowest-to-highest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481f764300170b8cc2c8ab1fea2d90f4659012a0" translate="yes" xml:space="preserve">
          <source>, man pages in</source>
          <target state="translated">，手册页在</target>
        </trans-unit>
        <trans-unit id="c1eff063fa64539df3525a8920a33c120431c1d5" translate="yes" xml:space="preserve">
          <source>, man pages into</source>
          <target state="translated">，手册页进入</target>
        </trans-unit>
        <trans-unit id="8377baa929d3123ee7913b5c12c57a279c130a4b" translate="yes" xml:space="preserve">
          <source>, may crash the phone, causing it to turn itself off once, and then back on again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7745ab1fa8731e058fe3471019aec70206d842" translate="yes" xml:space="preserve">
          <source>, meaning it exposes several</source>
          <target state="translated">，这意味着它暴露了几个</target>
        </trans-unit>
        <trans-unit id="23ecae591165a2e14c8b3c0c33e4b172cfbcd078" translate="yes" xml:space="preserve">
          <source>, meaning that functions and subroutines altered with &lt;code&gt;autodie&lt;/code&gt; will only change their behaviour until the end of the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">，这意味着使用 &lt;code&gt;autodie&lt;/code&gt; 更改的函数和子例程将仅更改其行为，直到封闭的块，文件或 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 结束为止。</target>
        </trans-unit>
        <trans-unit id="eddeb78a7e3264256b6a8045f7a56faf717a121d" translate="yes" xml:space="preserve">
          <source>, meaning that functions and subroutines altered with &lt;code&gt;autodie&lt;/code&gt; will only change their behaviour until the end of the enclosing block, file, or &lt;code&gt;eval&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ecb4223ec353ce10e70829975cf221b865ce31" translate="yes" xml:space="preserve">
          <source>, namely</source>
          <target state="translated">，即</target>
        </trans-unit>
        <trans-unit id="59fec1966dbdc2d3f0c4d7aede4a65102f1621b8" translate="yes" xml:space="preserve">
          <source>, nor does it allow executables in the sdcard, we need to find somewhere in the device for Configure to put some files in, as well as for the tests to run in. If your device is rooted, then you're good. Try running these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22a8444b47d43b843adb69f4a032eaa8696f19f" translate="yes" xml:space="preserve">
          <source>, normally via</source>
          <target state="translated">，通常通过</target>
        </trans-unit>
        <trans-unit id="48a0cd2493fd04c9f828dcacdd2caee749e13027" translate="yes" xml:space="preserve">
          <source>, not</source>
          <target state="translated">，不是</target>
        </trans-unit>
        <trans-unit id="c7bd8970e5dd3c5d725e534ee2e953570f617caa" translate="yes" xml:space="preserve">
          <source>, not byte.)</source>
          <target state="translated">，而不是字节。）</target>
        </trans-unit>
        <trans-unit id="11afc5e199c01f78460727b395aceca036378181" translate="yes" xml:space="preserve">
          <source>, not its line. So in the examples below, you can see that every command needs the blank line after it, to end its paragraph. (And some older Pod translators may require the &lt;code&gt;=encoding&lt;/code&gt; line to have a following blank line as well, even though it should be legal to omit.)</source>
          <target state="translated">，而不是它的行。因此，在下面的示例中，您可以看到每个命令都需要在其后的空白行结束其段落。（而且，一些较早的Pod转换器可能要求 &lt;code&gt;=encoding&lt;/code&gt; 行也必须包含以下空白行，即使省略是合法的。）</target>
        </trans-unit>
        <trans-unit id="77cbf0d5e9d48924c33742650619cd201e79e361" translate="yes" xml:space="preserve">
          <source>, not programs. For programs, use the &lt;a href=&quot;Module::CoreList&quot;&gt;Module::CoreList&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da92391795f61ed6c37622d31636bf92df08886e" translate="yes" xml:space="preserve">
          <source>, not programs. For programs, use the &lt;a href=&quot;module/corelist&quot;&gt;Module::CoreList&lt;/a&gt; API.</source>
          <target state="translated">，而不是程序。对于程序，请使用&lt;a href=&quot;module/corelist&quot;&gt;Module :: CoreList&lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="43dff97702ab1cbd05f2458bbf9136c2e78c118d" translate="yes" xml:space="preserve">
          <source>, of which</source>
          <target state="translated">， 其中</target>
        </trans-unit>
        <trans-unit id="731aa264d48130cd3456e01ac07965045097c74f" translate="yes" xml:space="preserve">
          <source>, one pair per line. Strings used as values must be quoted. Barewords are treated as numbers.</source>
          <target state="translated">，每行一对。用作值的字符串必须加引号。否词被视为数字。</target>
        </trans-unit>
        <trans-unit id="ba34082476e7f40b29ef9dab02566944508fe137" translate="yes" xml:space="preserve">
          <source>, one should call these API via a dynamic linking API. There is a subsystem in Perl to simplify such type of calls. A large number of entry points available for such linking is provided (see &lt;code&gt;entries_ordinals&lt;/code&gt; - and also &lt;code&gt;PMWIN_entries&lt;/code&gt; - in</source>
          <target state="translated">，则应通过动态链接API调用这些API。Perl中有一个子系统来简化此类调用。提供了许多可用于此类链接的入口点（请参阅 &lt;code&gt;entries_ordinals&lt;/code&gt; 以及 &lt;code&gt;PMWIN_entries&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">， 要么</target>
        </trans-unit>
        <trans-unit id="942f527c84fd76c3bdcee70a53190e472c342844" translate="yes" xml:space="preserve">
          <source>, or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">或 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0d8ec5c736f2db07e822b274ee99f50708b0284" translate="yes" xml:space="preserve">
          <source>, or &lt;code&gt;eval&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ba229fbb681a07aa0e4294378d9012aef942cf" translate="yes" xml:space="preserve">
          <source>, or Perl, such as the following:</source>
          <target state="translated">或Perl，例如：</target>
        </trans-unit>
        <trans-unit id="55bfcc1de58da3cf74a6ff01324919bf5c853ff5" translate="yes" xml:space="preserve">
          <source>, or code, the &lt;code&gt;Rr&lt;/code&gt; are</source>
          <target state="translated">或代码， &lt;code&gt;Rr&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="ffbadeb5936aabdc02bac70dff1ebf6c39606cc2" translate="yes" xml:space="preserve">
          <source>, or editing</source>
          <target state="translated">，或编辑</target>
        </trans-unit>
        <trans-unit id="54a2f6c3e0bbeef4006390919d7b396d9e2b4da3" translate="yes" xml:space="preserve">
          <source>, or even</source>
          <target state="translated">， 甚至</target>
        </trans-unit>
        <trans-unit id="579214064014c46082b00e9396995d722bdba307" translate="yes" xml:space="preserve">
          <source>, or even something such as D:</source>
          <target state="translated">，甚至是D之类的东西：</target>
        </trans-unit>
        <trans-unit id="dd3dabc0fe007ede17230bb03b9e7e04c79af333" translate="yes" xml:space="preserve">
          <source>, or if there is no such callback, calls the</source>
          <target state="translated">，或者如果没有此类回调，则调用</target>
        </trans-unit>
        <trans-unit id="00c06bb9d1dbbcd4ab3b41b1fd0ea954aed36a82" translate="yes" xml:space="preserve">
          <source>, or if there is no such callback, set errno to EINVAL. Or if the f is invalid, set errno to EBADF and return</source>
          <target state="translated">，或者如果没有此类回调，请将errno设置为EINVAL。或者，如果f无效，则将errno设置为EBADF并返回</target>
        </trans-unit>
        <trans-unit id="1db68edf4d518c843f678ca5c930a828630ad1ff" translate="yes" xml:space="preserve">
          <source>, or if there is no such callback, set errno to EINVAL. Or if the f is invalid, set errno to EBADF.</source>
          <target state="translated">，或者如果没有此类回调，请将errno设置为EINVAL。或者，如果f无效，则将errno设置为EBADF。</target>
        </trans-unit>
        <trans-unit id="3748c8a3236d4aa94aa312fa69d106a59ad85b20" translate="yes" xml:space="preserve">
          <source>, or if they compare equal with &lt;code&gt;eq&lt;/code&gt; .</source>
          <target state="translated">，或者它们是否等于 &lt;code&gt;eq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e15eaa1b8fa5c1f2a044cb1df03bafea1f454eca" translate="yes" xml:space="preserve">
          <source>, or if they compare equal with &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8290ca58e4b337d2e457234b98a169d325bc21" translate="yes" xml:space="preserve">
          <source>, or printing using</source>
          <target state="translated">，或使用</target>
        </trans-unit>
        <trans-unit id="b97bcf82807eb070d0f663f018d630dbd84dfcb4" translate="yes" xml:space="preserve">
          <source>, or supply the stack size to &lt;code&gt;CreateThread()&lt;/code&gt;</source>
          <target state="translated">，或将堆栈大小提供给 &lt;code&gt;CreateThread()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="345ba69cc2fea67ce22656b09e83f149b6b96534" translate="yes" xml:space="preserve">
          <source>, or the</source>
          <target state="translated">， 或者</target>
        </trans-unit>
        <trans-unit id="9a264e54b25fdd7cfde7bd05762f5bc9a49c0c3a" translate="yes" xml:space="preserve">
          <source>, or the pattern contained by capture group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62689d1cb8a9641695ea27a2f748331b9e8bf893" translate="yes" xml:space="preserve">
          <source>, or the type and version must be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2724928018abae8bc9e57d76c637373cc20ea5" translate="yes" xml:space="preserve">
          <source>, or to restore &lt;code&gt;$!&lt;/code&gt; to a meaningful state.</source>
          <target state="translated">，或恢复 &lt;code&gt;$!&lt;/code&gt; 达到有意义的状态</target>
        </trans-unit>
        <trans-unit id="e7d923ba957c225be8a72ed7a758380976e4b860" translate="yes" xml:space="preserve">
          <source>, or using a separate</source>
          <target state="translated">，或使用单独的</target>
        </trans-unit>
        <trans-unit id="9d0d91ae0fa92bac5f7cd8243e072cd7aef018d9" translate="yes" xml:space="preserve">
          <source>, or you could change certain filenames as needed:</source>
          <target state="translated">，或者您可以根据需要更改某些文件名：</target>
        </trans-unit>
        <trans-unit id="f9173cbefc36581419831ce91b8068d884c10958" translate="yes" xml:space="preserve">
          <source>, otherwise nothing.</source>
          <target state="translated">，否则什么也没有。</target>
        </trans-unit>
        <trans-unit id="a7f26ed799fd2c4c11b462f3e47d17d2a8c2c4ca" translate="yes" xml:space="preserve">
          <source>, overwriting the file with the new contents. With the &lt;code&gt;-p&lt;/code&gt; switch, Perl wraps a &lt;code&gt;while&lt;/code&gt; loop around the code you specify with &lt;code&gt;-e&lt;/code&gt; , and &lt;code&gt;-i&lt;/code&gt; turns on in-place editing. The current line is in &lt;code&gt;$_&lt;/code&gt; . With &lt;code&gt;-p&lt;/code&gt; , Perl automatically prints the value of &lt;code&gt;$_&lt;/code&gt; at the end of the loop. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more details.</source>
          <target state="translated">，用新内容覆盖文件。使用 &lt;code&gt;-p&lt;/code&gt; 开关，Perl 在您使用 &lt;code&gt;-e&lt;/code&gt; 指定的代码周围包裹一个 &lt;code&gt;while&lt;/code&gt; 循环，然后 &lt;code&gt;-i&lt;/code&gt; 打开就地编辑。当前行在 &lt;code&gt;$_&lt;/code&gt; 。使用 &lt;code&gt;-p&lt;/code&gt; ，Perl 在循环结束时自动打印 &lt;code&gt;$_&lt;/code&gt; 的值。有关更多详细信息，请参见&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2beb40374d1ba6b830b11c24eadb2a2464d618a5" translate="yes" xml:space="preserve">
          <source>, overwriting the file with the new contents. With the &lt;code&gt;-p&lt;/code&gt; switch, Perl wraps a &lt;code&gt;while&lt;/code&gt; loop around the code you specify with &lt;code&gt;-e&lt;/code&gt;, and &lt;code&gt;-i&lt;/code&gt; turns on in-place editing. The current line is in &lt;code&gt;$_&lt;/code&gt;. With &lt;code&gt;-p&lt;/code&gt;, Perl automatically prints the value of &lt;code&gt;$_&lt;/code&gt; at the end of the loop. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d0c96d2d2b2aafa291574fbf6087350a9988db" translate="yes" xml:space="preserve">
          <source>, performing the correct bookkeeping whenever a newline character is passed. This is the normal way to consume lexed text.</source>
          <target state="translated">，只要传递换行符，就执行正确的簿记。这是使用词汇化文本的正常方法。</target>
        </trans-unit>
        <trans-unit id="75a085778831d29e999e10d1d80353eeb630cc4b" translate="yes" xml:space="preserve">
          <source>, period.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ef65c7d96d2bd885c5b7612ef8e3946ac09c5f" translate="yes" xml:space="preserve">
          <source>, period.) If the &lt;code&gt;/s&lt;/code&gt; modifier is specified, sequences of characters that were transliterated to the same character are squashed down to a single instance of the character.</source>
          <target state="translated">（，period。）。如果指定了 &lt;code&gt;/s&lt;/code&gt; 修饰符，则将音译为相同字符的字符序列压缩为该字符的单个实例。</target>
        </trans-unit>
        <trans-unit id="60007a5d7f11a8090fc943b98a4327b72a97056b" translate="yes" xml:space="preserve">
          <source>, pointing up from the &lt;b&gt;theta&lt;/b&gt;-plane.</source>
          <target state="translated">，从&lt;b&gt;theta&lt;/b&gt;平面指向上方。</target>
        </trans-unit>
        <trans-unit id="c4604eaf3d1d886deab27e44f9f084a7eebe60a8" translate="yes" xml:space="preserve">
          <source>, presumably because of caching issues even when using autoflush (this is usually overcome by waiting a while after writing to the tempfile before attempting to C</source>
          <target state="translated">，大概是因为即使使用autoflush时也存在缓存问题（通常可以通过在写入tempfile之后等待一段时间再尝试C来解决此问题，</target>
        </trans-unit>
        <trans-unit id="a2f167a172a1e8be32df955ad41d6bc58487f037" translate="yes" xml:space="preserve">
          <source>, provides access to the following elements of the Perl API that are not otherwise available in Perl releases older than when the elements were first introduced. (Note that many of these are not supported all the way back to 5.003_07, but it may be that they are supported back as far as you need; see &lt;a href=&quot;#Supported-Perl-API%2C-sorted-by-version&quot;&gt;&quot;Supported Perl API, sorted by version&quot;&lt;/a&gt; for that information.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700f9b2825afd309ca4619c11e0d2d9e2e77290a" translate="yes" xml:space="preserve">
          <source>, provides access to the following elements of the Perl API that is not available in older Perl releases:</source>
          <target state="translated">，提供对Perl API的以下元素的访问，这些元素在较早的Perl版本中不可用：</target>
        </trans-unit>
        <trans-unit id="65e4734d8fbb856132be8332b98473e9a6090b22" translate="yes" xml:space="preserve">
          <source>, rather than something that it</source>
          <target state="translated">，而不是它</target>
        </trans-unit>
        <trans-unit id="f4e7af1322b9da55c415c39f9e7ff17666928572" translate="yes" xml:space="preserve">
          <source>, regardless of where STDOUT may be redirected to.</source>
          <target state="translated">，无论STDOUT可能重定向到何处。</target>
        </trans-unit>
        <trans-unit id="778526e92b1eabba1ba99018f377d78629f31fa4" translate="yes" xml:space="preserve">
          <source>, respectively. &lt;code&gt;Re&lt;/code&gt; , &lt;code&gt;Im&lt;/code&gt; , &lt;code&gt;arg&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;rho&lt;/code&gt; , and &lt;code&gt;theta&lt;/code&gt; can be used also as mutators. The &lt;code&gt;cbrt&lt;/code&gt; returns only one of the solutions: if you want all three, use the &lt;code&gt;root&lt;/code&gt; function.</source>
          <target state="translated">， 分别。 &lt;code&gt;Re&lt;/code&gt; ， &lt;code&gt;Im&lt;/code&gt; ， &lt;code&gt;arg&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;rho&lt;/code&gt; 和 &lt;code&gt;theta&lt;/code&gt; 也可以用作变异体。该 &lt;code&gt;cbrt&lt;/code&gt; 只返回的解决方案之一：如果你想所有的三个，使用 &lt;code&gt;root&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="1432aa0361b53e3a3db3eff5fece905dc02f63c0" translate="yes" xml:space="preserve">
          <source>, respectively. &lt;code&gt;Re&lt;/code&gt;, &lt;code&gt;Im&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;, &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;rho&lt;/code&gt;, and &lt;code&gt;theta&lt;/code&gt; can be used also as mutators. The &lt;code&gt;cbrt&lt;/code&gt; returns only one of the solutions: if you want all three, use the &lt;code&gt;root&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7afdf070db2b17186b849dea9ccbae8490266d4" translate="yes" xml:space="preserve">
          <source>, returns false; otherwise returns true.</source>
          <target state="translated">，返回false；否则返回true。</target>
        </trans-unit>
        <trans-unit id="ff419dfd1490efd2af497c9629d6cd9180c57c34" translate="yes" xml:space="preserve">
          <source>, right? But, the submitter's email address had changed since the last of their submissions, and this caused other tests to fail. Running the test target given in the next item would have caught this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613c35a1e740b0c235d0f18f6677ec6eca7c3e11" translate="yes" xml:space="preserve">
          <source>, rounded towards zero. Division by zero generates an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294f1e85971ddf3faffa14fe9c113e1fb49247ca" translate="yes" xml:space="preserve">
          <source>, run</source>
          <target state="translated">， 跑</target>
        </trans-unit>
        <trans-unit id="405cbdde629a3d6806c42e7498957799c0c7e735" translate="yes" xml:space="preserve">
          <source>, run:</source>
          <target state="translated">， 跑：</target>
        </trans-unit>
        <trans-unit id="bbe01f117bad48eb679b7748a19ed0966f1fba4d" translate="yes" xml:space="preserve">
          <source>, same with</source>
          <target state="translated">，与</target>
        </trans-unit>
        <trans-unit id="f3e57458037c62794ca5968e5d5cd43577521d99" translate="yes" xml:space="preserve">
          <source>, say, by issuing a command like</source>
          <target state="translated">例如，通过发出类似</target>
        </trans-unit>
        <trans-unit id="5cc91dd4b05c40ee3836cd8a51b18923b0309266" translate="yes" xml:space="preserve">
          <source>, says which packages are</source>
          <target state="translated">，说明哪些软件包是</target>
        </trans-unit>
        <trans-unit id="7bea033bd7bdaed455f219df3563798009d97e30" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;&quot;Handling Malformed Data&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b0061f7d598e9846a6cb4198408f6e62c1c966" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;Handling Malformed Data&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#Handling-Malformed-Data&quot;&gt;处理格式错误的数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5cf1b7b60bc751870d9bee94d589e7e13b098d6" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;#Making&quot;&gt;&quot;Making&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d832948372c398a9280338201f9092bcd809e94" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;#Making&quot;&gt;Making&lt;/a&gt;.</source>
          <target state="translated">，请参阅&lt;a href=&quot;#Making&quot;&gt;制作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6de0215f7a739d4e3e3822c99e1d1856c89071b2" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;#PERLLIB_PREFIX&quot;&gt;&quot;&lt;code&gt;PERLLIB_PREFIX&lt;/code&gt;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3e32c9f4e25b163e62562a312fffb640ca872c" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;#PERLLIB_PREFIX&quot;&gt;PERLLIB_PREFIX&lt;/a&gt;.</source>
          <target state="translated">，请参阅&lt;a href=&quot;#PERLLIB_PREFIX&quot;&gt;PERLLIB_PREFIX&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee0c1ad5d5b448bff9df5b0bab0d2210c95e514e" translate="yes" xml:space="preserve">
          <source>, see below.</source>
          <target state="translated">， 见下文。</target>
        </trans-unit>
        <trans-unit id="4165c20cc560175b963da6bc4d77312447940a05" translate="yes" xml:space="preserve">
          <source>, setting &lt;code&gt;IS_NUMBER_TRAILING&lt;/code&gt; on the result.</source>
          <target state="translated">，在结果上设置 &lt;code&gt;IS_NUMBER_TRAILING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba2c6475f8f940fb92ea77b169a003790260386a" translate="yes" xml:space="preserve">
          <source>, shows how you can make use of</source>
          <target state="translated">，显示了如何利用</target>
        </trans-unit>
        <trans-unit id="9c021cd1028629354df63a6c9de35015825f27c6" translate="yes" xml:space="preserve">
          <source>, since they work on similar inter-process communication principles as Unix pipelines. Such a filehandle has an active program instead of a static file on its external end, but in every other sense it works just like a more typical file-based filehandle, with all the techniques discussed earlier in this article just as applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd3298c6d1bd33b1bddecc4419b76b21ac63113" translate="yes" xml:space="preserve">
          <source>, so G_DISCARD is specified. Even if</source>
          <target state="translated">，因此指定了G_DISCARD。即使</target>
        </trans-unit>
        <trans-unit id="74317a6fb7a862910bba2f815752e8625fde38fb" translate="yes" xml:space="preserve">
          <source>, so here's some opportunity for some patching.</source>
          <target state="translated">，因此这里有一些修补的机会。</target>
        </trans-unit>
        <trans-unit id="99d2a210f65f1b750acbf3003b2617a271c06034" translate="yes" xml:space="preserve">
          <source>, so that it does not create a link between a VIO session and the session of &lt;code&gt;pm_porg&lt;/code&gt; . (Such a link closes the VIO window.) E.g., this works with</source>
          <target state="translated">，这样就不会在VIO会话和 &lt;code&gt;pm_porg&lt;/code&gt; 会话之间创建链接。（这样的链接将关闭VIO窗口。）例如，这适用于</target>
        </trans-unit>
        <trans-unit id="b431b99c75fdc1f8394d149668a8cc3e91aa8961" translate="yes" xml:space="preserve">
          <source>, so that it does not create a link between a VIO session and the session of &lt;code&gt;pm_porg&lt;/code&gt;. (Such a link closes the VIO window.) E.g., this works with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8075e1a34058df98200120ef8d7277ea339786f0" translate="yes" xml:space="preserve">
          <source>, so the directories are searched through for linkable libraries again.</source>
          <target state="translated">，因此将再次在目录中搜索可链接的库。</target>
        </trans-unit>
        <trans-unit id="2a07866af21835710bc9a6f54723c0b9d52d41d7" translate="yes" xml:space="preserve">
          <source>, so there is no special &quot;test_harness&quot; target.</source>
          <target state="translated">，因此没有特殊的&amp;ldquo; test_harness&amp;rdquo;目标。</target>
        </trans-unit>
        <trans-unit id="39d37d1b4683a3fb66c0c9cb4ab07337524f0bd5" translate="yes" xml:space="preserve">
          <source>, so we may ignore them. The following list shows our errors, your results may differ:</source>
          <target state="translated">，因此我们可能会忽略它们。以下列表显示了我们的错误，您的结果可能有所不同：</target>
        </trans-unit>
        <trans-unit id="04d17676d801558b107d5b7f04560aca2950977f" translate="yes" xml:space="preserve">
          <source>, so you also pay a price for each pattern that contains capturing parentheses. (To avoid this cost while retaining the grouping behaviour, use the extended regular expression &lt;code&gt;(?: ... )&lt;/code&gt; instead.) But if you never use &lt;code&gt;$&amp;amp;&lt;/code&gt;, &lt;code&gt;$`&lt;/code&gt; or &lt;code&gt;$'&lt;/code&gt;, then patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf90afd63e53252a0999bd1484eafacffe771fa0" translate="yes" xml:space="preserve">
          <source>, so you can't set sh with a &lt;code&gt;-D&lt;/code&gt; option, though you can override this (and startsh) with &lt;code&gt;-O -Dsh=&lt;i&gt;/bin/whatever&lt;/i&gt; -Dstartsh=whatever&lt;/code&gt;</source>
          <target state="translated">，所以您无法使用 &lt;code&gt;-D&lt;/code&gt; 选项设置sh ，尽管您可以使用 &lt;code&gt;-O -Dsh=&lt;i&gt;/bin/whatever&lt;/i&gt; -Dstartsh=whatever&lt;/code&gt; 覆盖（和startsh）-Dsh = &lt;i&gt;/ bin / whatever&lt;/i&gt; -Dstartsh = whatever</target>
        </trans-unit>
        <trans-unit id="f6d839faa6ea4a6b5e97b5d7bc7e2a56a2c58137" translate="yes" xml:space="preserve">
          <source>, so you might examine them if your console has only a limited number of cols.</source>
          <target state="translated">，因此如果您的控制台上只有有限数量的列数，则可以检查它们。</target>
        </trans-unit>
        <trans-unit id="2276c8b5c561790372b3ca4478529f74cf3b1e94" translate="yes" xml:space="preserve">
          <source>, some systems may have to replace the &lt;code&gt;#!&lt;/code&gt; line with a line containing just a colon, which will be politely ignored by Perl. Other systems can't control that, and need a totally devious construct that will work under any of</source>
          <target state="translated">，某些系统可能必须替换 &lt;code&gt;#!&lt;/code&gt; 行与仅包含冒号的行，Perl会礼貌地忽略它。其他系统无法控制它，并且需要一个完全弯曲的构造，该构造可以在任何以下情况下工作</target>
        </trans-unit>
        <trans-unit id="a23e4409511836342736b9f02167e4000d6c659b" translate="yes" xml:space="preserve">
          <source>, sorcery, or wonder working. [From Middle English.]</source>
          <target state="translated">，法术或奇效。[来自中古英语。]</target>
        </trans-unit>
        <trans-unit id="fd25e4b237d0de2bbe9c20b33a4bfd410153bc18" translate="yes" xml:space="preserve">
          <source>, specifically a listing of functions, macros, flags, and variables that may be used by extension writers. &lt;a href=&quot;#Undocumented-functions&quot;&gt;At the end&lt;/a&gt; is a list of functions which have yet to be documented. The interfaces of those are subject to change without notice. Anything not listed here is not part of the public API, and should not be used by extension writers at all. For these reasons, blindly using functions listed in proto.h is to be avoided when writing extensions.</source>
          <target state="translated">，特别是扩展编写器可以使用的函数，宏，标志和变量的列表。&lt;a href=&quot;#Undocumented-functions&quot;&gt;最后&lt;/a&gt;是尚未记录的功能列表。这些接口如有更改，恕不另行通知。此处未列出的任何内容都不是公共API的一部分，扩展编写人员完全不应使用。由于这些原因，在编写扩展名时应避免盲目使用proto.h中列出的函数。</target>
        </trans-unit>
        <trans-unit id="bd6869e59a3a41f4025ac1776272a94fc706f68e" translate="yes" xml:space="preserve">
          <source>, specify where your tests are located with the &lt;code&gt;test&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eace3842ea85c92144047677156c458ddf9586e" translate="yes" xml:space="preserve">
          <source>, standard input (</source>
          <target state="translated">，标准输入（</target>
        </trans-unit>
        <trans-unit id="dacd7df5d67e86f62828aca14d84822ce104e1a0" translate="yes" xml:space="preserve">
          <source>, stripped of their leading &quot;pw_&quot; parts, namely &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;passwd&lt;/code&gt; , &lt;code&gt;uid&lt;/code&gt; , &lt;code&gt;gid&lt;/code&gt; , &lt;code&gt;change&lt;/code&gt; , &lt;code&gt;age&lt;/code&gt; , &lt;code&gt;quota&lt;/code&gt; , &lt;code&gt;comment&lt;/code&gt; , &lt;code&gt;class&lt;/code&gt; , &lt;code&gt;gecos&lt;/code&gt; , &lt;code&gt;dir&lt;/code&gt; , &lt;code&gt;shell&lt;/code&gt; , and &lt;code&gt;expire&lt;/code&gt; . The &lt;code&gt;passwd&lt;/code&gt; , &lt;code&gt;gecos&lt;/code&gt; , and &lt;code&gt;shell&lt;/code&gt; fields are tainted when running in taint mode.</source>
          <target state="translated">，去除了它们的前导&amp;ldquo; pw_&amp;rdquo;部分，即 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;passwd&lt;/code&gt; ， &lt;code&gt;uid&lt;/code&gt; ， &lt;code&gt;gid&lt;/code&gt; ， &lt;code&gt;change&lt;/code&gt; ， &lt;code&gt;age&lt;/code&gt; ， &lt;code&gt;quota&lt;/code&gt; ， &lt;code&gt;comment&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; ， &lt;code&gt;gecos&lt;/code&gt; ， &lt;code&gt;dir&lt;/code&gt; ， &lt;code&gt;shell&lt;/code&gt; 和 &lt;code&gt;expire&lt;/code&gt; 。在 &lt;code&gt;gecos&lt;/code&gt; 模式下运行时， &lt;code&gt;passwd&lt;/code&gt; ，gecos和 &lt;code&gt;shell&lt;/code&gt; 字段会被污染。</target>
        </trans-unit>
        <trans-unit id="c572293c3193296a30f83f937ead06ce5f40aaae" translate="yes" xml:space="preserve">
          <source>, stripped of their leading &quot;pw_&quot; parts, namely &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;passwd&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;quota&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;gecos&lt;/code&gt;, &lt;code&gt;dir&lt;/code&gt;, &lt;code&gt;shell&lt;/code&gt;, and &lt;code&gt;expire&lt;/code&gt;. The &lt;code&gt;passwd&lt;/code&gt;, &lt;code&gt;gecos&lt;/code&gt;, and &lt;code&gt;shell&lt;/code&gt; fields are tainted when running in taint mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957091e96ecfa54157cc0d4139600a9a7f9d62d7" translate="yes" xml:space="preserve">
          <source>, such as having $x run from 4..8 and $y run from 7 to 12? Hmm... here's the simple way:</source>
          <target state="translated">，例如$ x从4..8运行而$ y从7运行至12？嗯...这是简单的方法：</target>
        </trans-unit>
        <trans-unit id="656da3fea3006661322b08824becf92984dd0aa9" translate="yes" xml:space="preserve">
          <source>, such as within an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or a file, even though the statements aren&amp;rsquo;t delimited by braces.</source>
          <target state="translated">，例如在 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 或文件中，即使语句不是用大括号分隔的。</target>
        </trans-unit>
        <trans-unit id="9aed239505bdee24ade4401579d4e55a499648de" translate="yes" xml:space="preserve">
          <source>, such as within an &lt;code&gt;eval&lt;/code&gt; or a file, even though the statements aren&amp;rsquo;t delimited by braces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1146b3e5752905896b7897a3617a9463f973fcbf" translate="yes" xml:space="preserve">
          <source>, such that &lt;code&gt;Foo::Bar&lt;/code&gt; is in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08e5efec9e9e043f2abcc148b97927bd245fcae" translate="yes" xml:space="preserve">
          <source>, terminated by a newline.)</source>
          <target state="translated">，由换行符终止。）</target>
        </trans-unit>
        <trans-unit id="4cc374921dd851c3d7f16bd01a5e82be341ff39e" translate="yes" xml:space="preserve">
          <source>, that is, a string beginning with a letter or underscore, and containing letters, underscores, and digits. In some cases, it may be a chain of identifiers, separated by &lt;code&gt;::&lt;/code&gt; (or by the slightly archaic &lt;code&gt;'&lt;/code&gt;); all but the last are interpreted as names of packages, to locate the namespace in which to look up the final identifier (see &lt;a href=&quot;perlmod#Packages&quot;&gt;&quot;Packages&quot; in perlmod&lt;/a&gt; for details). For a more in-depth discussion on identifiers, see &lt;a href=&quot;#Identifier-parsing&quot;&gt;&quot;Identifier parsing&quot;&lt;/a&gt;. It's possible to substitute for a simple identifier, an expression that produces a reference to the value at runtime. This is described in more detail below and in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e9bba4a207b86aa8dee08a4810ed2206bed901" translate="yes" xml:space="preserve">
          <source>, that is, a string beginning with a letter or underscore, and containing letters, underscores, and digits. In some cases, it may be a chain of identifiers, separated by &lt;code&gt;::&lt;/code&gt; (or by the slightly archaic &lt;code&gt;'&lt;/code&gt;); all but the last are interpreted as names of packages, to locate the namespace in which to look up the final identifier (see &lt;a href=&quot;perlmod#Packages&quot;&gt;Packages in perlmod&lt;/a&gt; for details). For a more in-depth discussion on identifiers, see &lt;a href=&quot;#Identifier-parsing&quot;&gt;Identifier parsing&lt;/a&gt;. It's possible to substitute for a simple identifier, an expression that produces a reference to the value at runtime. This is described in more detail below and in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">，即以字母或下划线开头并包含字母，下划线和数字的字符串。在某些情况下，它可能是一连串的标识符，由 &lt;code&gt;::&lt;/code&gt; 分隔（或由稍稍过时的 &lt;code&gt;'&lt;/code&gt; ）分隔；除最后一个以外的所有&lt;a href=&quot;perlmod#Packages&quot;&gt;字符&lt;/a&gt;都解释为程序包的名称，以查找在其中查找最终标识符的名称空间（有关详细信息，请参见perlmod中的程序包）。有关标识符的更深入讨论，请参阅&lt;a href=&quot;#Identifier-parsing&quot;&gt;标识符解析&lt;/a&gt;。可以替换一个简单的标识符，一个在运行时生成对该值的引用的表达式。这将在下面和&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;中更详细地描述。</target>
        </trans-unit>
        <trans-unit id="5ebe898ca0c994ef13e630acb20dae497030f2a1" translate="yes" xml:space="preserve">
          <source>, that is, all elements in either A or in B but not in both. Think of it as an xor operation.</source>
          <target state="translated">，即A或B中的所有元素，但不是两者都包含。将其视为异或运算。</target>
        </trans-unit>
        <trans-unit id="ef6731e3871cff7ef7e6cb224e37d6e60b555955" translate="yes" xml:space="preserve">
          <source>, that is, it is complemented. If &lt;code&gt;/d&lt;/code&gt; and/or &lt;code&gt;/s&lt;/code&gt; are also specified, they apply to the complemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1f30a577a9e343978298cf00190fde48358aaf" translate="yes" xml:space="preserve">
          <source>, that is, visible. This class consists of all alphanumeric characters and all punctuation characters.</source>
          <target state="translated">，即可见。此类包含所有字母数字字符和所有标点字符。</target>
        </trans-unit>
        <trans-unit id="3e5dd609a84255a29408216ee64e75b7eda290c6" translate="yes" xml:space="preserve">
          <source>, that returns the token type, among other things). And &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066c5c23cfa29a9ad5d5bae17b8dc8aeb40e3312" translate="yes" xml:space="preserve">
          <source>, that takes 2 integer parameters and simply returns their sum.</source>
          <target state="translated">，它接受2个整数参数，并简单地返回它们的总和。</target>
        </trans-unit>
        <trans-unit id="72fb706cc8e6bb54ff9e026e88c6735beb29bae1" translate="yes" xml:space="preserve">
          <source>, that uses all three (long lines have been wrapped here):</source>
          <target state="translated">，它使用全部三个（长行已在此处换行）：</target>
        </trans-unit>
        <trans-unit id="c4ff75230dcb5fc1cf1b33f194533921c76a1f94" translate="yes" xml:space="preserve">
          <source>, that was introduced in release 5.005. That model was deprecated, and has been removed in version 5.10.</source>
          <target state="translated">，是5.005版中引入的。该模型已弃用，并已在5.10版中删除。</target>
        </trans-unit>
        <trans-unit id="4c76a9f1c0aa51a13c1e721f68f5b80a4fdeaee7" translate="yes" xml:space="preserve">
          <source>, that would involve ensuring any &lt;code&gt;lib/&lt;/code&gt; in front of the module location were removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bcafc2113daaac812f1518346b8bb3f4ad5920" translate="yes" xml:space="preserve">
          <source>, the</source>
          <target state="translated">，</target>
        </trans-unit>
        <trans-unit id="bbc14ad4bef82ce943fa383c1ed92a04f35ae9a8" translate="yes" xml:space="preserve">
          <source>, the C function required to call it is now a bit more complex.</source>
          <target state="translated">，调用它所需的C函数现在更加复杂。</target>
        </trans-unit>
        <trans-unit id="4f74cf35d928e36b23641e736801a45580f16870" translate="yes" xml:space="preserve">
          <source>, the Perl library module for the extension, and</source>
          <target state="translated">，用于扩展的Perl库模块，以及</target>
        </trans-unit>
        <trans-unit id="83dee3890eb5dca0adacf7473711167c68e17275" translate="yes" xml:space="preserve">
          <source>, the YACC grammar. Let's look at the code that constructs the tree for &lt;code&gt;$a = $b + $c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97438a08eda84c3bfc06c55a3bea0450b5e8f958" translate="yes" xml:space="preserve">
          <source>, the YACC grammar. Let's take the piece we need to construct the tree for &lt;code&gt;$a = $b + $c&lt;/code&gt;</source>
          <target state="translated">，YACC语法。让我们看一下我们需要为 &lt;code&gt;$a = $b + $c&lt;/code&gt; 构造树的那一部分</target>
        </trans-unit>
        <trans-unit id="d3a75d4660639ffe74acee5e5672e890c4814fdd" translate="yes" xml:space="preserve">
          <source>, the character used to separate elements in the command shell search &lt;code&gt;PATH&lt;/code&gt; .</source>
          <target state="translated">，用于分隔命令外壳程序 &lt;code&gt;PATH&lt;/code&gt; 中的元素的字符。</target>
        </trans-unit>
        <trans-unit id="bd63bb9f2cda3373d022c883344f5c3faec730a6" translate="yes" xml:space="preserve">
          <source>, the character used to separate elements in the command shell search &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855214b2662c5c1d8b850e9feee34272d5af2679" translate="yes" xml:space="preserve">
          <source>, the file</source>
          <target state="translated">， 文件</target>
        </trans-unit>
        <trans-unit id="b1abcc10b694dd0025270a3db184b16a0fa38af6" translate="yes" xml:space="preserve">
          <source>, the final character is replicated till it is long enough. If the</source>
          <target state="translated">，最终字符将被复制到足够长的时间。如果</target>
        </trans-unit>
        <trans-unit id="806b344895d4421bd236f5401f77d9edb8ff3fd2" translate="yes" xml:space="preserve">
          <source>, the final character, if any, is replicated until it is long enough. There won't be a final character if and only if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1c5f98cffb439007008844e3a20f10ba40b400" translate="yes" xml:space="preserve">
          <source>, the first 16-bit unit being the</source>
          <target state="translated">，第一个16位单元是</target>
        </trans-unit>
        <trans-unit id="59d3c2b1e7a8f0fbf1d7438a5d2e3652d3735b95" translate="yes" xml:space="preserve">
          <source>, the lexer, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eeefd53f32ac80210e3e0524fe0f5c1cfb2e5e7" translate="yes" xml:space="preserve">
          <source>, the number of matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0e409bb9bfdd351b146c8736f3bc9ef0f9e327" translate="yes" xml:space="preserve">
          <source>, the offset is relative to the start of the</source>
          <target state="translated">，则偏移量是相对于的开始</target>
        </trans-unit>
        <trans-unit id="f8c58b0bde45ddae936256535fca27e27919543c" translate="yes" xml:space="preserve">
          <source>, the process</source>
          <target state="translated">，过程</target>
        </trans-unit>
        <trans-unit id="b71ad629342bbdad0ed5613b27effd49a287ff4b" translate="yes" xml:space="preserve">
          <source>, the quote (&lt;code&gt;'&quot;'&lt;/code&gt;) is used as a delimiter, the forward slash &lt;code&gt;'/'&lt;/code&gt; becomes an ordinary character and can be used in this regexp without trouble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d7028c2014dc1d6e04f06a4cda352756b2fdc6" translate="yes" xml:space="preserve">
          <source>, the reference can be used to store context information. The reference will be</source>
          <target state="translated">，该引用可用于存储上下文信息。参考将是</target>
        </trans-unit>
        <trans-unit id="8bcb5240076feedf18abb68075e1dc6583b4d7fb" translate="yes" xml:space="preserve">
          <source>, the regexp matches the whole string. Consider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91072da43b1733feac0b5401a10be38a14e4f911" translate="yes" xml:space="preserve">
          <source>, the result of subtracting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceccdaca653d534a67528d8ff70abcd0789f20d" translate="yes" xml:space="preserve">
          <source>, the result of the last statement) is used to determine truth or falsehood. If the code expression is not used as a conditional, the assertion always evaluates true and the result is put into the special variable &lt;code&gt;$^R&lt;/code&gt;. The variable &lt;code&gt;$^R&lt;/code&gt; can then be used in code expressions later in the regexp. Here are some silly examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503654fe46496135690eb6d481b68797ec8a3d06" translate="yes" xml:space="preserve">
          <source>, the resulting UTF8 flag is &lt;b&gt;on&lt;/b&gt;--</source>
          <target state="translated">时，所得UTF8标志为&lt;b&gt;上&lt;/b&gt; -</target>
        </trans-unit>
        <trans-unit id="3421355fa3000d28b30b10777add4df0ffdfb58a" translate="yes" xml:space="preserve">
          <source>, the resulting UTF8 flag is always &lt;b&gt;off&lt;/b&gt;.</source>
          <target state="translated">，生成的UTF8标志始终处于&lt;b&gt;关闭状态&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="68c1b175b8542016c468fb6ae172829284030bdd" translate="yes" xml:space="preserve">
          <source>, the second requests a</source>
          <target state="translated">，第二个要求</target>
        </trans-unit>
        <trans-unit id="5099e16a5fb708a04487a027b0394f0a1a320dc4" translate="yes" xml:space="preserve">
          <source>, the substring &lt;code&gt;GTT GAA&lt;/code&gt; gives a match. A better solution is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bac92aa165b5fcbe5d15dd2a3c4caac7ecba0a" translate="yes" xml:space="preserve">
          <source>, the table file is searched as</source>
          <target state="translated">，表文件搜索为</target>
        </trans-unit>
        <trans-unit id="80701e28ff7424b803181d8d7ce930f56b53f8c9" translate="yes" xml:space="preserve">
          <source>, the year 1995 is 95; the year 2001 is 101. Consult your system's &lt;code&gt;mktime()&lt;/code&gt; manpage for details about these and the other arguments.</source>
          <target state="translated">，1995年为95；2001年为101。有关这些参数和其他参数的详细信息，请查阅系统的 &lt;code&gt;mktime()&lt;/code&gt; 联机帮助页。</target>
        </trans-unit>
        <trans-unit id="9aea9e329eab2b9adcc970b72067fd0793c21cb5" translate="yes" xml:space="preserve">
          <source>, the year 1995 is 95; the year 2001 is 101. Consult your system's &lt;code&gt;strftime()&lt;/code&gt; manpage for details about these and the other arguments.</source>
          <target state="translated">，1995年为95；2001年是101。有关这些参数和其他参数的详细信息，请查阅系统的 &lt;code&gt;strftime()&lt;/code&gt; 联机帮助页。</target>
        </trans-unit>
        <trans-unit id="e189049326051591313d1c5688fafbf491aeaf0f" translate="yes" xml:space="preserve">
          <source>, then</source>
          <target state="translated">， 然后</target>
        </trans-unit>
        <trans-unit id="2d7357221c057e21e0603b99d486d8d01e9f1d7b" translate="yes" xml:space="preserve">
          <source>, then each cached data item will be discarded and looked up afresh after the</source>
          <target state="translated">，则每个缓存的数据项将被丢弃并在</target>
        </trans-unit>
        <trans-unit id="0664c5508add1cbceda996e5b9d179cefd229787" translate="yes" xml:space="preserve">
          <source>, then extraction continues until</source>
          <target state="translated">，然后继续提取直到</target>
        </trans-unit>
        <trans-unit id="e9be5594e1731bd928c54113aa6bba78d9d10daa" translate="yes" xml:space="preserve">
          <source>, then the above system() is translated to</source>
          <target state="translated">，然后将上述system（）转换为</target>
        </trans-unit>
        <trans-unit id="56ed743dadd72fa853ae506be49d8e7ef23c11ba" translate="yes" xml:space="preserve">
          <source>, then the verbose level will default to 1 if the exit status is less than 2 and will default to 0 otherwise.</source>
          <target state="translated">，则如果退出状态小于2，则详细级别将默认为1，否则将默认为0。</target>
        </trans-unit>
        <trans-unit id="f388bd8ed28d6ec5148837e6886a6224018735fc" translate="yes" xml:space="preserve">
          <source>, then this is a no-op. Returns the number of octets necessary to represent the string as</source>
          <target state="translated">，那么这是个禁忌行动。返回将字符串表示为所需的八位字节数</target>
        </trans-unit>
        <trans-unit id="3e93eac954f44cb11630b056721e2f26edaf81c2" translate="yes" xml:space="preserve">
          <source>, then we actually define $Lexicon{</source>
          <target state="translated">，那么我们实际上定义了$ Lexicon {</target>
        </trans-unit>
        <trans-unit id="981255f700628f4a04da30c05e1f1345be156be9" translate="yes" xml:space="preserve">
          <source>, then we need to tell the &lt;code&gt;perl&lt;/code&gt; executable where it will be able to find the installed</source>
          <target state="translated">，那么我们需要告诉 &lt;code&gt;perl&lt;/code&gt; 可执行文件在哪里可以找到已安装的文件</target>
        </trans-unit>
        <trans-unit id="a97f83b483632edd32d7566630fdf0b16cc8ac52" translate="yes" xml:space="preserve">
          <source>, then you need to change the path following the &lt;code&gt;-L&lt;/code&gt; . If it complains that it can't find</source>
          <target state="translated">，那么您需要更改 &lt;code&gt;-L&lt;/code&gt; 之后的路径。如果它抱怨找不到</target>
        </trans-unit>
        <trans-unit id="35f0f0578043f1ce353b282bba5a6f6dd3502f20" translate="yes" xml:space="preserve">
          <source>, then you need to change the path following the &lt;code&gt;-L&lt;/code&gt;. If it complains that it can't find</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8911f644fb0560e46f52310cd354bac6558884ff" translate="yes" xml:space="preserve">
          <source>, there is no upper bound to the number of argument values taken.</source>
          <target state="translated">，所取参数值的数量没有上限。</target>
        </trans-unit>
        <trans-unit id="8da1ee6882503c12e13b4824907fc0653955992a" translate="yes" xml:space="preserve">
          <source>, there is the entry:</source>
          <target state="translated">，有条目：</target>
        </trans-unit>
        <trans-unit id="17e4f4b7efc3bfddeaaec858218e98d597284597" translate="yes" xml:space="preserve">
          <source>, there's no sense in being able to enable() or disable() processing.</source>
          <target state="translated">，便无法启用enable（）或disable（）处理。</target>
        </trans-unit>
        <trans-unit id="d5fc8a5e02b68374b799d5535dec84e053e8816a" translate="yes" xml:space="preserve">
          <source>, this directory contains modules which are only released as part of the core. Unlike</source>
          <target state="translated">，此目录包含仅作为核心一部分发布的模块。不像</target>
        </trans-unit>
        <trans-unit id="133358768c237ba7c13e2e36ef10a76ee918db2a" translate="yes" xml:space="preserve">
          <source>, this is referred to as &lt;code&gt;PERL_REVISION&lt;/code&gt; .</source>
          <target state="translated">，这称为 &lt;code&gt;PERL_REVISION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cfc59cfaeff38d725334bbe1d5ea2b1ff52b207" translate="yes" xml:space="preserve">
          <source>, this is referred to as &lt;code&gt;PERL_REVISION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5a14e004f2bf1eeac71229fa7540bd21823c5b" translate="yes" xml:space="preserve">
          <source>, this is referred to as &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; . This is unique to perl.</source>
          <target state="translated">，这称为 &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; 。这是perl独有的。</target>
        </trans-unit>
        <trans-unit id="248a9ab41d2f9ab16a0738c6bed505d36cb3c82c" translate="yes" xml:space="preserve">
          <source>, this is referred to as &lt;code&gt;PERL_SUBVERSION&lt;/code&gt;. This is unique to perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714cd1f92b0d5db09f723a91ae82e2d32331d86e" translate="yes" xml:space="preserve">
          <source>, this is referred to as &lt;code&gt;PERL_VERSION&lt;/code&gt; .</source>
          <target state="translated">，这称为 &lt;code&gt;PERL_VERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41e73dd1f9ca8349934ee78ba9a50704f4b426d9" translate="yes" xml:space="preserve">
          <source>, this is referred to as &lt;code&gt;PERL_VERSION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba8cba024fa50efc2185c250a93c4684f50f8b2" translate="yes" xml:space="preserve">
          <source>, this method is a read-once operation. Call</source>
          <target state="translated">，此方法是一次读取操作。呼叫</target>
        </trans-unit>
        <trans-unit id="c5419160a5194a27a2e9670569f35b7ce53eec75" translate="yes" xml:space="preserve">
          <source>, this pragma looks in the table of standard Unicode names for the names</source>
          <target state="translated">，此杂注会在标准Unicode名称表中查找名称</target>
        </trans-unit>
        <trans-unit id="96d19878d35455aef11308cd825aac00f74c2c5b" translate="yes" xml:space="preserve">
          <source>, those without any runtime variable interpolations. As documented in &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt;, this conversion will work only over literal parts of regular expressions. For &lt;code&gt;\Y|$re\Y|&lt;/code&gt; the variable part of this regular expression needs to be converted explicitly (but only if the special meaning of &lt;code&gt;\Y|&lt;/code&gt; should be enabled inside &lt;code&gt;$re&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0263513f039c38507b3d70b68ab4c5b60dd7020" translate="yes" xml:space="preserve">
          <source>, though it simply delegates to the</source>
          <target state="translated">，尽管它只是委派给</target>
        </trans-unit>
        <trans-unit id="18f1b111c2282bb1d52143843bb53f0e42f90748" translate="yes" xml:space="preserve">
          <source>, though it's possible that some systems will have</source>
          <target state="translated">，尽管某些系统可能会</target>
        </trans-unit>
        <trans-unit id="2399ea48546f62dda016b66c915a33efba5ece8f" translate="yes" xml:space="preserve">
          <source>, to check use</source>
          <target state="translated">，检查使用</target>
        </trans-unit>
        <trans-unit id="426b172db6893b6e9657e6e9162888abed4f4794" translate="yes" xml:space="preserve">
          <source>, to handle these for us. He suggests (assuming your string is contained in &lt;code&gt;$text&lt;/code&gt; ):</source>
          <target state="translated">，为我们处理这些。他建议（假设您的字符串包含在 &lt;code&gt;$text&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="6f2a786ff4175338fb515aef2c29bd307cd29baa" translate="yes" xml:space="preserve">
          <source>, to handle these for us. He suggests (assuming your string is contained in &lt;code&gt;$text&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78af069883ae74a128985778bc16fd41b2d43bde" translate="yes" xml:space="preserve">
          <source>, to have the effect of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a97e60b438c8a77e2cd328d323df609691a533" translate="yes" xml:space="preserve">
          <source>, to print out the UID of the process.</source>
          <target state="translated">，以打印出该进程的UID。</target>
        </trans-unit>
        <trans-unit id="5263066869df6bcc590c2451eb837a61c2634447" translate="yes" xml:space="preserve">
          <source>, typing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbd4041e99913f2cfa30fb2cec88d030e327667" translate="yes" xml:space="preserve">
          <source>, use a name recognized by the &lt;a href=&quot;Encode::Supported&quot;&gt;Encode::Supported&lt;/a&gt; module. Some pod formatters may try to guess between a Latin-1 or CP-1252 versus UTF-8 encoding, but they may guess wrong. It's best to be explicit if you use anything besides strict ASCII. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faee7867e8ebfc988e6546f4dcbe9ad6cb8c536a" translate="yes" xml:space="preserve">
          <source>, use a name recognized by the &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt; module. Some pod formatters may try to guess between a Latin-1 or CP-1252 versus UTF-8 encoding, but they may guess wrong. It's best to be explicit if you use anything besides strict ASCII. Examples:</source>
          <target state="translated">，请使用由&lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt;模块识别的名称。一些pod格式化程序可能会尝试在Latin-1或CP-1252与UTF-8编码之间进行猜测，但他们可能会猜错。如果您使用严格的ASCII以外的其他内容，则最好是明确的。例子：</target>
        </trans-unit>
        <trans-unit id="2a7de5b14d2a34b3272730993fe2dee6018ff3fd" translate="yes" xml:space="preserve">
          <source>, using embedded whitespace as the word delimiters. It can be understood as being roughly equivalent to:</source>
          <target state="translated">，使用嵌入式空白作为单词定界符。可以理解为大致等同于：</target>
        </trans-unit>
        <trans-unit id="e169e875a0353d0299dee5c8ba5ef4c88de61df4" translate="yes" xml:space="preserve">
          <source>, when it detects its program running with differing real and effective user or group IDs. The setuid bit in Unix permissions is mode 04000, the setgid bit mode 02000; either or both may be set. You can also enable taint mode explicitly by using the &lt;b&gt;-T&lt;/b&gt; command line flag. This flag is</source>
          <target state="translated">，当它检测到以不同的实际和有效用户或组ID运行的程序时。Unix权限中的setuid位为04000模式，setgid位为02000模式；可以设置一个或两个。您还可以使用&lt;b&gt;-T&lt;/b&gt;命令行标志显式启用异味模式。这个标志是</target>
        </trans-unit>
        <trans-unit id="a8fbd0202d5d59bb16abfc27a4a724fcbb5feb8c" translate="yes" xml:space="preserve">
          <source>, where</source>
          <target state="translated">，在哪里</target>
        </trans-unit>
        <trans-unit id="8924bb9dd1f684020a4cba15af279a4d0d20f15e" translate="yes" xml:space="preserve">
          <source>, where &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; myint;&lt;/code&gt; is in effect, addition operations are forced to integer, whereas by default they are not, with the default behaviour being restored via &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt;</source>
          <target state="translated">，在哪里 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; myint;&lt;/code&gt; 实际上，加法运算被强制为整数，而默认情况下则不为整数，默认行为通过 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; myint恢复；</target>
        </trans-unit>
        <trans-unit id="c021dacf080e62f8123f183415639c30e95ffabe" translate="yes" xml:space="preserve">
          <source>, where &lt;code&gt;use myint;&lt;/code&gt; is in effect, addition operations are forced to integer, whereas by default they are not, with the default behaviour being restored via &lt;code&gt;no myint;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c470a8a84cae4c6227806e7867bd89a887b344e3" translate="yes" xml:space="preserve">
          <source>, where each member has an associated filename, known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f41ab59091bd1f06b31a77ab9df95b2bc91cbcd" translate="yes" xml:space="preserve">
          <source>, where the &lt;code&gt;.al&lt;/code&gt; file has the same name as the subroutine, sans package. If such a file exists, AUTOLOAD will read and evaluate it, thus (presumably) defining the needed subroutine. AUTOLOAD will then &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; the newly defined subroutine.</source>
          <target state="translated">，其中 &lt;code&gt;.al&lt;/code&gt; 文件与sans包子例程具有相同的名称。如果存在这样的文件，则AUTOLOAD将读取并评估该文件，从而（大概）定义了所需的子例程。然后，AUTOLOAD将 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; 新定义的子例程。</target>
        </trans-unit>
        <trans-unit id="ded3ee142ecb7daceaf87b1f95d3c198051ca123" translate="yes" xml:space="preserve">
          <source>, where the &lt;code&gt;.al&lt;/code&gt; file has the same name as the subroutine, sans package. If such a file exists, AUTOLOAD will read and evaluate it, thus (presumably) defining the needed subroutine. AUTOLOAD will then &lt;code&gt;goto&lt;/code&gt; the newly defined subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aea3fc4b54551faf648d0b392baddc5ecb694ab" translate="yes" xml:space="preserve">
          <source>, whereas</source>
          <target state="translated">，而</target>
        </trans-unit>
        <trans-unit id="26c934aa9a989416f6aadbafbbddd8e4c4e1b0e5" translate="yes" xml:space="preserve">
          <source>, which are abstract numbers. To use these numbers, various encodings are needed.</source>
          <target state="translated">，它们是抽象数字。为了使用这些数字，需要各种编码。</target>
        </trans-unit>
        <trans-unit id="03649386e3bc4e7a816e4620f028cf88bdb23bf9" translate="yes" xml:space="preserve">
          <source>, which are actually the same program but behave differently depending on how they are called, provide another way of getting at C with Perl - they'll convert C structures and union declarations to Perl code. This is deprecated in favour of</source>
          <target state="translated">，它们实际上是同一程序，但是根据调用方式的不同而有所不同，它们提供了另一种使用Perl进行C语言编程的方法-它们会将C结构和联合声明转换为Perl代码。不赞成这样做，而赞成</target>
        </trans-unit>
        <trans-unit id="39b81ba625528bfbfbdeb767e8a690b6857a169b" translate="yes" xml:space="preserve">
          <source>, which attempts to simplify as much as possible, making bisecting as simple as running a Perl one-liner. For example, if you want to know when this became an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b151974aee7344a268313e90f86adde43defa23" translate="yes" xml:space="preserve">
          <source>, which creates a Perl counterpart for each of the extension's XSUBs. Don't worry about this part; leave that to the</source>
          <target state="translated">，这会为每个扩展的XSUB创建一个Perl副本。不用担心这部分；留给</target>
        </trans-unit>
        <trans-unit id="5a5edb1a67afcdce7292393be6ccd46e15cc154a" translate="yes" xml:space="preserve">
          <source>, which describes the distribution, its contents, and the requirements for building and installing the distribution. The data structure stored in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4ba048b9a7447e52c228c8f75341de76908cb5" translate="yes" xml:space="preserve">
          <source>, which is always a good idea to supply if the number is known.</source>
          <target state="translated">，如果知道数字，总是提供一个好主意。</target>
        </trans-unit>
        <trans-unit id="77693f9b1b48d8ec17c40b859e5d00f6c499c0e5" translate="yes" xml:space="preserve">
          <source>, which is currently used (when needed) by all regular non-possessive expression quantifiers, namely &lt;code&gt;&quot;*&quot;&lt;/code&gt;, &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;&quot;+&quot;&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{n,m}&lt;/code&gt;, and &lt;code&gt;{n,m}?&lt;/code&gt;. Backtracking is often optimized internally, but the general principle outlined here is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17829fa2132953972da0914ccd97c3e350358fce" translate="yes" xml:space="preserve">
          <source>, which is currently used (when needed) by all regular non-possessive expression quantifiers, namely &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{n,m}&lt;/code&gt;, and &lt;code&gt;{n,m}?&lt;/code&gt;. Backtracking is often optimized internally, but the general principle outlined here is valid.</source>
          <target state="translated">，当前所有正则表达式（即 &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;*?&lt;/code&gt; ）都使用（需要时）。， &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;+?&lt;/code&gt; ， &lt;code&gt;{n,m}&lt;/code&gt; 和 &lt;code&gt;{n,m}?&lt;/code&gt; 。回溯通常在内部进行优化，但是此处概述的一般原理是有效的。</target>
        </trans-unit>
        <trans-unit id="03d1757cccf78573ee0182fd5b28a73a2d407dd6" translate="yes" xml:space="preserve">
          <source>, which is either a decimal or a hexadecimal scalar designating a code point in the platform's native character set (extended to Unicode), or a string containing &lt;code&gt;U+&lt;/code&gt; followed by hexadecimals designating a Unicode code point. A leading 0 will force a hexadecimal interpretation, as will a hexadecimal digit that isn't a decimal digit.</source>
          <target state="translated">，它是指定平台本机字符集中的代码点（扩展为Unicode）的十进制或十六进制标量，或者是包含 &lt;code&gt;U+&lt;/code&gt; 后跟指定Unicode代码点的十六进制的字符串。前导0将强制执行十六进制解释，非十进制数字的十六进制数字也将强制执行。</target>
        </trans-unit>
        <trans-unit id="baf38326329741523715bffba499968b7d0e87ce" translate="yes" xml:space="preserve">
          <source>, which is not the winpid. Use &lt;code&gt;Cygwin::pid_to_winpid()&lt;/code&gt; and &lt;code&gt;Cygwin::winpid_to_pid()&lt;/code&gt; to translate between them.</source>
          <target state="translated">，这不是Winpid。使用 &lt;code&gt;Cygwin::pid_to_winpid()&lt;/code&gt; 和 &lt;code&gt;Cygwin::winpid_to_pid()&lt;/code&gt; 在它们之间进行翻译。</target>
        </trans-unit>
        <trans-unit id="32dea819029bc45dc941d184378ae2d614b06ad7" translate="yes" xml:space="preserve">
          <source>, which is the common case for most CPAN distributions with their</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c16c9a97ba5ea538f1979d7f7d2fb2c51566d3a" translate="yes" xml:space="preserve">
          <source>, which matches any character but those in the brackets. Both &lt;code&gt;[...]&lt;/code&gt; and &lt;code&gt;[^...]&lt;/code&gt; must match a character, or the match fails. Then</source>
          <target state="translated">，它匹配方括号中的所有字符。无论 &lt;code&gt;[...]&lt;/code&gt; 和 &lt;code&gt;[^...]&lt;/code&gt; 必须一个字符匹配，否则匹配失败。然后</target>
        </trans-unit>
        <trans-unit id="3d38775c49ebe935515da064eb664cbc8495f661" translate="yes" xml:space="preserve">
          <source>, which may also backtrack as necessary; however, should B not match, then no further backtracking will take place, and the pattern will fail outright at the current starting position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4454811042a626c864b08d42e1e9fe1a6f89db8" translate="yes" xml:space="preserve">
          <source>, which means it's going to be false in any sane context.</source>
          <target state="translated">，这意味着在任何理智的情况下它都是错误的。</target>
        </trans-unit>
        <trans-unit id="a89b512ac155f333bc1a9e0edf340080f66fee9a" translate="yes" xml:space="preserve">
          <source>, which must be an encoding name that &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; recognizes. (Encode's list of supported encodings, in &lt;a href=&quot;Encode::Supported&quot;&gt;Encode::Supported&lt;/a&gt;, is useful here.) If the Pod parser cannot decode the declared encoding, it should emit a warning and may abort parsing the document altogether.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86643bdbf232568e22729fc55a9633ebd6eca7bc" translate="yes" xml:space="preserve">
          <source>, which must be an encoding name that &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; recognizes. (Encode's list of supported encodings, in &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt;, is useful here.) If the Pod parser cannot decode the declared encoding, it should emit a warning and may abort parsing the document altogether.</source>
          <target state="translated">，必须是&lt;a href=&quot;encode&quot;&gt;Encode可以&lt;/a&gt;识别的编码名称。（此处的&lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt;中的Encode支持的编码列表很有用。）如果Pod解析器无法解码声明的编码，则应发出警告，并可能完全中止对文档的解析。</target>
        </trans-unit>
        <trans-unit id="6946244e23fae74ad07a1325f15207b7d2a7623a" translate="yes" xml:space="preserve">
          <source>, which must be of type &lt;code&gt;STRLEN&lt;/code&gt; . Evaluates</source>
          <target state="translated">，其类型必须为 &lt;code&gt;STRLEN&lt;/code&gt; 。评估</target>
        </trans-unit>
        <trans-unit id="1b3bfca1e6560c4b294dd00bf14e384c23b6db35" translate="yes" xml:space="preserve">
          <source>, which proceeds to try to execute the Perl program as a shell script. The shell executes the second line as a normal shell command, and thus starts up the Perl interpreter. On some systems $0 doesn't always contain the full pathname, so the &lt;a href=&quot;#-S&quot;&gt;&quot;-S&quot;&lt;/a&gt; tells Perl to search for the program if necessary. After Perl locates the program, it parses the lines and ignores them because the variable $running_under_some_shell is never true. If the program will be interpreted by csh, you will need to replace &lt;code&gt;${1+&quot;$@&quot;}&lt;/code&gt; with &lt;code&gt;$*&lt;/code&gt;, even though that doesn't understand embedded spaces (and such) in the argument list. To start up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c4d6b2342d9336a15bff4441fdc806ef9f1dda" translate="yes" xml:space="preserve">
          <source>, which proceeds to try to execute the Perl program as a shell script. The shell executes the second line as a normal shell command, and thus starts up the Perl interpreter. On some systems $0 doesn't always contain the full pathname, so the &lt;b&gt;-S&lt;/b&gt; tells Perl to search for the program if necessary. After Perl locates the program, it parses the lines and ignores them because the variable $running_under_some_shell is never true. If the program will be interpreted by csh, you will need to replace &lt;code&gt;${1+&quot;$@&quot;}&lt;/code&gt; with &lt;code&gt;$*&lt;/code&gt; , even though that doesn't understand embedded spaces (and such) in the argument list. To start up</source>
          <target state="translated">，然后尝试将Perl程序作为shell脚本执行。 Shell将第二行作为常规Shell命令执行，从而启动Perl解释器。在某些系统上，$ 0并不总是包含完整的路径名，因此&lt;b&gt;-S&lt;/b&gt;告诉Perl必要时搜索程序。 Perl找到程序后，它将分析行并忽略它们，因为变量$ running_under_some_shell永远不会为true。如果程序将由csh解释，则您将需要用 &lt;code&gt;$*&lt;/code&gt; 替换 &lt;code&gt;${1+&quot;$@&quot;}&lt;/code&gt; ，即使这样无法理解参数列表中的嵌入空格（等等）。开始</target>
        </trans-unit>
        <trans-unit id="d03971d8e8f6aae96dc846db2bbccfa1c43aa02c" translate="yes" xml:space="preserve">
          <source>, which processes the command line options, sets up any statically linked XS modules, opens the program and calls &lt;code&gt;yyparse&lt;/code&gt; to parse it.</source>
          <target state="translated">，它处理命令行选项，设置所有静态链接的XS模块，打开程序并调用 &lt;code&gt;yyparse&lt;/code&gt; 对其进行解析。</target>
        </trans-unit>
        <trans-unit id="d38a80b5f16db8cd8592888fcbc6ecb5cbfb16e6" translate="yes" xml:space="preserve">
          <source>, which provides a core to which the Perl executable image and all Perl extensions are linked. It is generally located via the logical name</source>
          <target state="translated">，它提供了Perl可执行映像和所有Perl扩展都链接到的核心。通常通过逻辑名定位</target>
        </trans-unit>
        <trans-unit id="5d983c580d2a071fc02ee59631c5c9b624e3d132" translate="yes" xml:space="preserve">
          <source>, which requires that all applications use its LSP but which is not IFS-compatible, because clearly Perl will normally avoid using such an LSP.</source>
          <target state="translated">，这要求所有应用程序都使用其LSP，但它不兼容IFS，因为显然Perl通常会避免使用这种LSP。</target>
        </trans-unit>
        <trans-unit id="8ae6e3dda98fae8d31622d67dcd619e9e43cefbe" translate="yes" xml:space="preserve">
          <source>, which shall not modify any input argument, and</source>
          <target state="translated">，不得修改任何输入参数，以及</target>
        </trans-unit>
        <trans-unit id="b3cd0cd1142152776fc2bac2a2e89c7f139dc35e" translate="yes" xml:space="preserve">
          <source>, which should be a full pathname found amongst the %INC values.</source>
          <target state="translated">，应为％INC值中的完整路径名。</target>
        </trans-unit>
        <trans-unit id="9149915d9aff75a334b3f754d9220c360d8f395f" translate="yes" xml:space="preserve">
          <source>, which will be open in a manner compatible with the supplied mode string, the call is thus equivalent to &lt;code&gt;PerlIO_fdopen&lt;/code&gt; . In this case</source>
          <target state="translated">，它将以与提供的模式字符串兼容的方式打开，因此该调用等效于 &lt;code&gt;PerlIO_fdopen&lt;/code&gt; 。在这种情况下</target>
        </trans-unit>
        <trans-unit id="dd6c0f5b6ad990f4eef424bfc58e42542222405e" translate="yes" xml:space="preserve">
          <source>, which will be open in a manner compatible with the supplied mode string, the call is thus equivalent to &lt;code&gt;PerlIO_fdopen&lt;/code&gt;. In this case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd3b2c159dbde7db4131aab3fae489835bc0cb5" translate="yes" xml:space="preserve">
          <source>, which you should copy &lt;b&gt;outside&lt;/b&gt; of the repository, as the bisect process will reset the state to a clean checkout as it runs. The instructions below assume that you copied it as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29affdf4265c07a24e87380ae0fc86e7811b273" translate="yes" xml:space="preserve">
          <source>, which you'll also need) will reside in a directory that looks like this:</source>
          <target state="translated">，您也将需要它）驻留在一个看起来像这样的目录中：</target>
        </trans-unit>
        <trans-unit id="b91b3346b580b5a72bcf19156716e69a40617494" translate="yes" xml:space="preserve">
          <source>, whichever is writable.</source>
          <target state="translated">，以可写为准。</target>
        </trans-unit>
        <trans-unit id="1521c3e5024fb9d201b1510098752e0fbfadaa8f" translate="yes" xml:space="preserve">
          <source>, whichever is writable. For example Solaris and IRIX system may prefer &lt;code&gt;&quot;stream&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;unix&quot;&lt;/code&gt; .</source>
          <target state="translated">，以可写为准。例如，Solaris和IRIX系统可能更喜欢 &lt;code&gt;&quot;stream&quot;&lt;/code&gt; 而不是 &lt;code&gt;&quot;unix&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df4fa17a3a3ee864c8ff01e92b96136a59a67d85" translate="yes" xml:space="preserve">
          <source>, whichever is writable. For example Solaris and IRIX system may prefer &lt;code&gt;&quot;stream&quot;&lt;/code&gt; instead of &lt;code&gt;&quot;unix&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1e6ea7c63a016f19ff1f20a75d322ca9d606dc" translate="yes" xml:space="preserve">
          <source>, will copy the files onto the NetWare server.</source>
          <target state="translated">，将文件复制到NetWare服务器上。</target>
        </trans-unit>
        <trans-unit id="542c63558f82cc60301de087610ae8d702c1444e" translate="yes" xml:space="preserve">
          <source>, will the expression be treated as boolean. Otherwise, smartmatching is used.</source>
          <target state="translated">，将表达式视为布尔值。否则，将使用智能匹配。</target>
        </trans-unit>
        <trans-unit id="434f72658ad0db42fd472dfe71b1d976ec669e77" translate="yes" xml:space="preserve">
          <source>, with a function</source>
          <target state="translated">，具有功能</target>
        </trans-unit>
        <trans-unit id="ff76a65744d509bad3b866f1e9b378a7560d811c" translate="yes" xml:space="preserve">
          <source>, with one command (and no other files) it's easy to find out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b8ca3ac41e774d45998884fc92354c868b6717" translate="yes" xml:space="preserve">
          <source>, with the result encoded as a Base64 string. Multiple</source>
          <target state="translated">，结果编码为Base64字符串。多</target>
        </trans-unit>
        <trans-unit id="677a292feedbf48a082a00acc87c06021be08f63" translate="yes" xml:space="preserve">
          <source>, with the result encoded as a binary string. Multiple</source>
          <target state="translated">，结果编码为二进制字符串。多</target>
        </trans-unit>
        <trans-unit id="2a314e18b1b4fa535233316b8d18d5a2b276138b" translate="yes" xml:space="preserve">
          <source>, with the result encoded as a hexadecimal string. Multiple</source>
          <target state="translated">，结果编码为十六进制字符串。多</target>
        </trans-unit>
        <trans-unit id="b99d3c828cce13fde4656fc0fc0105ea617a8091" translate="yes" xml:space="preserve">
          <source>, yet another utility under Encode/bin directory.</source>
          <target state="translated">，还是Encode / bin目录下的另一个实用程序。</target>
        </trans-unit>
        <trans-unit id="51f521f34eb9dfa708aba7876dbcd25e0b33259e" translate="yes" xml:space="preserve">
          <source>, you are encouraged to use &lt;code&gt;catpath()&lt;/code&gt; (see below).</source>
          <target state="translated">，建议您使用 &lt;code&gt;catpath()&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="50c611f29a4f4c3132ca368f4ed25bf3706ad044" translate="yes" xml:space="preserve">
          <source>, you are encouraged to use &lt;code&gt;catpath()&lt;/code&gt; to concatenate</source>
          <target state="translated">，建议您使用 &lt;code&gt;catpath()&lt;/code&gt; 进行串联</target>
        </trans-unit>
        <trans-unit id="6e0466cebd730e6f201e1dc3e0fa65a5e7288ff5" translate="yes" xml:space="preserve">
          <source>, you can often gain a 10-25% performance benefit by rebuilding it to link with a static libc.a instead. This will make a bigger perl executable, but your Perl programs (and programmers) may thank you for it. See the</source>
          <target state="translated">，您通常可以通过将其重建为与静态libc.a链接来获得10-25％的性能优势。这将使perl可执行文件更大，但是您的Perl程序（和程序员）可能对此表示感谢。见</target>
        </trans-unit>
        <trans-unit id="1d331b88bfc2c65e1619a12d857298426cd92d30" translate="yes" xml:space="preserve">
          <source>, you can recompile with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; , which will cause the addresses of all those leaked SVs to be dumped along with details as to where each SV was originally allocated. This information is also displayed by Devel::Peek. Note that the extra details recorded with each SV increases memory usage, so it shouldn't be used in production environments. It also converts &lt;code&gt;new_SV()&lt;/code&gt; from a macro into a real function, so you can use your favourite debugger to discover where those pesky SVs were allocated.</source>
          <target state="translated">，您可以使用 &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; 重新编译，这将导致转储所有这些泄漏的SV的地址以及有关每个SV最初分配位置的详细信息。该信息也由Devel :: Peek显示。请注意，每个SV记录的额外详细信息会增加内存使用量，因此不应在生产环境中使用它。它还会将 &lt;code&gt;new_SV()&lt;/code&gt; 从宏转换为实函数，因此您可以使用自己喜欢的调试器来发现那些烦人的SV分配在哪里。</target>
        </trans-unit>
        <trans-unit id="8ff7a955490d6c2be94e15abefb85a6178673401" translate="yes" xml:space="preserve">
          <source>, you can recompile with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt;, (&lt;code&gt;Configure -Accflags=-DDEBUG_LEAKING_SCALARS&lt;/code&gt;), which will cause the addresses of all those leaked SVs to be dumped along with details as to where each SV was originally allocated. This information is also displayed by Devel::Peek. Note that the extra details recorded with each SV increases memory usage, so it shouldn't be used in production environments. It also converts &lt;code&gt;new_SV()&lt;/code&gt; from a macro into a real function, so you can use your favourite debugger to discover where those pesky SVs were allocated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c36a989390f694a86b3a7b319006e18a55b93a" translate="yes" xml:space="preserve">
          <source>, you could offload all that merging and sorting into your operating system's own &lt;code&gt;sort&lt;/code&gt; command by opening a pipe directly into its output, and get to work that much faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3880ec30cc2d5ebf349c1017f97c2cb7881519a" translate="yes" xml:space="preserve">
          <source>, you do not need to change anything. However, for perl to find the library if you use a different path, you need to &lt;code&gt;set PERLLIB_PREFIX&lt;/code&gt; in</source>
          <target state="translated">，则无需更改任何内容。但是，如果你使用一个不同的路径Perl来找到库，您需要 &lt;code&gt;set PERLLIB_PREFIX&lt;/code&gt; 在</target>
        </trans-unit>
        <trans-unit id="022efe6a8ac93e208088ce727015f5bc2ef4dbd9" translate="yes" xml:space="preserve">
          <source>, you may need to be extra careful when running Configure to not to confuse Configure and Perl about which libraries to use. Being confused will show up for example as &quot;dyld&quot; errors about symbol problems, for example during &quot;make test&quot;. The safest bet is to run Configure as</source>
          <target state="translated">，在运行&amp;ldquo;配置&amp;rdquo;时可能需要格外小心，以免将配置库和Perl混淆使用的库。感到困惑的情况将显示为例如关于符号问题的&amp;ldquo; dyld&amp;rdquo;错误，例如在&amp;ldquo; make test&amp;rdquo;期间。最安全的选择是运行&amp;ldquo;配置为&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="021d52a6c6807f7976d981e9998715c511d43a0f" translate="yes" xml:space="preserve">
          <source>, you may need to reboot in between. Check EMX runtime by running</source>
          <target state="translated">，您可能需要在两者之间重新启动。通过运行检查EMX运行时</target>
        </trans-unit>
        <trans-unit id="5e7e307de07db29b07b1256c40e790d188182a74" translate="yes" xml:space="preserve">
          <source>, you may prefer to read &lt;a href=&quot;perldebguts&quot;&gt;perldebguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a357b8113a9e22a3eef60456621417078f84daeb" translate="yes" xml:space="preserve">
          <source>, you must explicitly &lt;code&gt;share()&lt;/code&gt; variables between the threads.</source>
          <target state="translated">，则必须在线程之间显式 &lt;code&gt;share()&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="0a4cfad2d578d98a081e5b91f17f3d149edfc150" translate="yes" xml:space="preserve">
          <source>, you need to change the path following the &lt;code&gt;-I&lt;/code&gt; .</source>
          <target state="translated">，您需要更改 &lt;code&gt;-I&lt;/code&gt; 之后的路径。</target>
        </trans-unit>
        <trans-unit id="35017a6e3c131f7bdfef6a610d63fbd565947e16" translate="yes" xml:space="preserve">
          <source>, you need to change the path following the &lt;code&gt;-I&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08a1ac95983f38539380ed39b4f27bf1fbb7125" translate="yes" xml:space="preserve">
          <source>, you probably don't expect it to run on both Unix and CP/M.)</source>
          <target state="translated">，您可能不希望它同时在Unix和CP / M上运行。）</target>
        </trans-unit>
        <trans-unit id="a2d62578b1a9440577c8f95b2ea11ee98fbc944b" translate="yes" xml:space="preserve">
          <source>, you should always try to use</source>
          <target state="translated">，您应该始终尝试使用</target>
        </trans-unit>
        <trans-unit id="80d72f99e8c254f3d7a046575ea8e94531af8c78" translate="yes" xml:space="preserve">
          <source>, you should expect a bit of whimsy.</source>
          <target state="translated">，您应该会感到有些异想天开。</target>
        </trans-unit>
        <trans-unit id="87c1c3490c4a0eecd8de20c3cc69883c07b4ba2e" translate="yes" xml:space="preserve">
          <source>, you will need to run &lt;code&gt;make regen_headers&lt;/code&gt; to force a rebuild of</source>
          <target state="translated">，您将需要运行 &lt;code&gt;make regen_headers&lt;/code&gt; 来强制重建</target>
        </trans-unit>
        <trans-unit id="fe63382b1e40b321c4efec02e51e7ac510a9674a" translate="yes" xml:space="preserve">
          <source>, you will see that it returns an &lt;code&gt;ADDOP&lt;/code&gt; token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d419e3c5bc7f5ea63240258fff8fb0654e4cb8f" translate="yes" xml:space="preserve">
          <source>, you'll have to rebuild Perl to incorporate a new extension. You should edit the main</source>
          <target state="translated">，则必须重新构建Perl才能合并新的扩展。您应该编辑主</target>
        </trans-unit>
        <trans-unit id="ce52b2b3c8d31f579675006498299716435e428b" translate="yes" xml:space="preserve">
          <source>, you'll probably need to subclass &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; too, or else it'll never get used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf357edc958470810c296ee519d97c4d17b676d" translate="yes" xml:space="preserve">
          <source>, you'll probably need to subclass &lt;a href=&quot;grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt; too, or else it'll never get used.</source>
          <target state="translated">，您可能也需要将&lt;a href=&quot;grammar&quot;&gt;TAP :: Parser :: Grammar&lt;/a&gt;子类化，否则它将永远不会被使用。</target>
        </trans-unit>
        <trans-unit id="8ce53fda25a5521f4426b98fc34aff8c177f37f2" translate="yes" xml:space="preserve">
          <source>, you'll see the results of using</source>
          <target state="translated">，您将看到使用的结果</target>
        </trans-unit>
        <trans-unit id="3085b957b5d3ec5b39e504d18f16596194b3898c" translate="yes" xml:space="preserve">
          <source>, your issue is likely to receive more attention. You may want to start with &lt;b&gt;perldoc&lt;/b&gt;&lt;a href=&quot;perltrap&quot;&gt;perltrap&lt;/a&gt; for pointers to common traps that new (and experienced) Perl programmers run into.</source>
          <target state="translated">，您的问题很可能会受到更多关注。您可能&lt;a href=&quot;perltrap&quot;&gt;要从&lt;/a&gt;&lt;b&gt;perldoc &lt;/b&gt;perltrap开始，以获取指向新的（和经验丰富的）Perl程序员遇到的常见陷阱的指针。</target>
        </trans-unit>
        <trans-unit id="001b22edb2fbe2a87d8cf96a1c82ed43978ed889" translate="yes" xml:space="preserve">
          <source>,...) was.</source>
          <target state="translated">，...）是。</target>
        </trans-unit>
        <trans-unit id="ad72be5c0d7fc1b8f77fe6354bc971428558be05" translate="yes" xml:space="preserve">
          <source>,...params...) can give up with:</source>
          <target state="translated">，... params ...）可以放弃：</target>
        </trans-unit>
        <trans-unit id="3ec37b4898d8fa711d06edd7a451aef6a2e60168" translate="yes" xml:space="preserve">
          <source>,...params...) gives up and calls:</source>
          <target state="translated">，... params ...）放弃并致电：</target>
        </trans-unit>
        <trans-unit id="722cba868d267a82e7010bf92e684897c598bb02" translate="yes" xml:space="preserve">
          <source>,as that program depends on functionality which the test file itself is testing.</source>
          <target state="translated">，因为该程序取决于测试文件本身正在测试的功能。</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="92ec08014ef6e3572ce18cd210390b5494877bb0" translate="yes" xml:space="preserve">
          <source>- Home directory.</source>
          <target state="translated">-主目录。</target>
        </trans-unit>
        <trans-unit id="bc43692f24635fad130f4c0b7605b093da1c6edc" translate="yes" xml:space="preserve">
          <source>- Root for accessing some special files, i.e.</source>
          <target state="translated">-用于访问某些特殊文件的根，即</target>
        </trans-unit>
        <trans-unit id="3173574745b2a94d3ecbd9aad3aac008e1c75cf4" translate="yes" xml:space="preserve">
          <source>- Rows/cols for console.</source>
          <target state="translated">-控制台的行数/列数。</target>
        </trans-unit>
        <trans-unit id="2a8384c45900eafb56b7372e12c87d95403210dd" translate="yes" xml:space="preserve">
          <source>- Size for console font.</source>
          <target state="translated">-控制台字体的大小。</target>
        </trans-unit>
        <trans-unit id="ec35a1fcb1bf308cd068a9bee9a8176d037f75a7" translate="yes" xml:space="preserve">
          <source>- Tempdir.</source>
          <target state="translated">-Tempdir。</target>
        </trans-unit>
        <trans-unit id="46c7d034edab58069ac51b4607fbe57881cd6eda" translate="yes" xml:space="preserve">
          <source>- make official location for installed *distributions*, which can contain tests, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58249eb112a301215e90f4449910a61cde2399f" translate="yes" xml:space="preserve">
          <source>- may fail on recent cygwin installs.</source>
          <target state="translated">-在最近安装的cygwin上可能会失败。</target>
        </trans-unit>
        <trans-unit id="aa47440f5821f7fcd42136d522f634642510d036" translate="yes" xml:space="preserve">
          <source>- most probably RSX - decided to implement.</source>
          <target state="translated">-很可能是RSX-决定实施。</target>
        </trans-unit>
        <trans-unit id="586ed566ba05975ffadf370f1c6ecf01acb6d01a" translate="yes" xml:space="preserve">
          <source>- non-zero if the current XSUB has any aliases declared with &lt;code&gt;ALIAS&lt;/code&gt; .</source>
          <target state="translated">-非零（如果当前XSUB具有使用 &lt;code&gt;ALIAS&lt;/code&gt; 声明的任何别名）。</target>
        </trans-unit>
        <trans-unit id="36721d3a2a547695d4793029011114667064f57d" translate="yes" xml:space="preserve">
          <source>- non-zero if the current XSUB has any aliases declared with &lt;code&gt;ALIAS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30b5265745c008d5265e386cbdf1dab87c47bde" translate="yes" xml:space="preserve">
          <source>- or with Perl!</source>
          <target state="translated">-或使用Perl！</target>
        </trans-unit>
        <trans-unit id="4e30556a5f49da4f43234bec9f7aaab8f8cf28e1" translate="yes" xml:space="preserve">
          <source>- possibly separate out test-time prereqs, complications include: can tests be meaningfully preserved for later running? are test-time prereqs in addition to build-time, or exclusive?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6681529bb3ccd36ba6275ff29adce31783c01d2c" translate="yes" xml:space="preserve">
          <source>- see &lt;a href=&quot;#Indexing-distributions-a-la-PAUSE&quot;&gt;&quot;Indexing distributions a la PAUSE&quot;&lt;/a&gt; in the implementors notes for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a10b5776a842eeeedbba99e8e17c5c9a17237c7" translate="yes" xml:space="preserve">
          <source>- see &lt;a href=&quot;https://github.com/Perl/perl5/issues/10750&quot;&gt;https://github.com/Perl/perl5/issues/10750&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5e7bde75d15d42f045f6c58b079f3857fc8edd" translate="yes" xml:space="preserve">
          <source>- see &lt;a href=&quot;https://rt.perl.org/Ticket/Display.html?id=78502&quot;&gt;https://rt.perl.org/Ticket/Display.html?id=78502&lt;/a&gt;</source>
          <target state="translated">-请参阅&lt;a href=&quot;https://rt.perl.org/Ticket/Display.html?id=78502&quot;&gt;https://rt.perl.org/Ticket/Display.html?id=78502&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9eb095bd84343fa039df7c15c40c25123fcea513" translate="yes" xml:space="preserve">
          <source>- the argument stack offset of the argument. ie. 0 for the first argument, etc.</source>
          <target state="translated">-参数的参数堆栈偏移量。即。第一个参数为0，依此类推。</target>
        </trans-unit>
        <trans-unit id="b6fd27381e71b1b032ec8f7e7eff0c7d9ea88d03" translate="yes" xml:space="preserve">
          <source>- the full name of the XSUB, with including the &lt;code&gt;PACKAGE&lt;/code&gt; name, with any &lt;code&gt;PREFIX&lt;/code&gt; stripped. This is the non-ALIAS name.</source>
          <target state="translated">-XSUB的全名，包括 &lt;code&gt;PACKAGE&lt;/code&gt; 名称，其中不带任何 &lt;code&gt;PREFIX&lt;/code&gt; 。这是非ALIAS名称。</target>
        </trans-unit>
        <trans-unit id="ac306b045d6143c752e53a46375c4935a0210024" translate="yes" xml:space="preserve">
          <source>- the name of the input or output variable, eg. RETVAL for return values.</source>
          <target state="translated">-输入或输出变量的名称，例如。RETVAL返回值。</target>
        </trans-unit>
        <trans-unit id="98a3328bb076d8bd2503f9a31ae579ee61669de1" translate="yes" xml:space="preserve">
          <source>- the package specified by the most recent &lt;code&gt;PACKAGE&lt;/code&gt; keyword.</source>
          <target state="translated">-最新的 &lt;code&gt;PACKAGE&lt;/code&gt; 关键字指定的软件包。</target>
        </trans-unit>
        <trans-unit id="f124ed3063522cd2ff8b8f4829e2a95edb5ad519" translate="yes" xml:space="preserve">
          <source>- the raw C type of the parameter, any &lt;code&gt;:&lt;/code&gt; replaced with &lt;code&gt;_&lt;/code&gt; . e.g. for a type of &lt;code&gt;Foo::Bar&lt;/code&gt; ,</source>
          <target state="translated">-参数的原始C类型，任意 &lt;code&gt;:&lt;/code&gt; 用 &lt;code&gt;_&lt;/code&gt; 代替。例如，对于 &lt;code&gt;Foo::Bar&lt;/code&gt; 类型，</target>
        </trans-unit>
        <trans-unit id="ff9ef50c9a5f15c75392db11b12752cdcd7f93a8" translate="yes" xml:space="preserve">
          <source>- the raw C type of the parameter, any &lt;code&gt;:&lt;/code&gt; replaced with &lt;code&gt;_&lt;/code&gt;. e.g. for a type of &lt;code&gt;Foo::Bar&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a588dc109d4b97adb8746f1e4fa8bce8a72431" translate="yes" xml:space="preserve">
          <source>- the stack entry, that the parameter is input from or output to, e.g. &lt;code&gt;ST(0)&lt;/code&gt;</source>
          <target state="translated">-堆栈条目，参数是从中输入或输出到的，例如 &lt;code&gt;ST(0)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9cef40f084c3c3cb1207d8771f055a5a821202e" translate="yes" xml:space="preserve">
          <source>- the supplied type with &lt;code&gt;*&lt;/code&gt; replaced with &lt;code&gt;Ptr&lt;/code&gt; . e.g. for a type of &lt;code&gt;Foo*&lt;/code&gt; ,</source>
          <target state="translated">-提供的带 &lt;code&gt;*&lt;/code&gt; 的类型替换为 &lt;code&gt;Ptr&lt;/code&gt; 。例如，对于 &lt;code&gt;Foo*&lt;/code&gt; 类型，</target>
        </trans-unit>
        <trans-unit id="a2658124eb09e0e6dbc56f97854aaa96beef3464" translate="yes" xml:space="preserve">
          <source>- the supplied type with &lt;code&gt;*&lt;/code&gt; replaced with &lt;code&gt;Ptr&lt;/code&gt;. e.g. for a type of &lt;code&gt;Foo*&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85eb1c4ce6755d438f46363a51bca99a55296fd" translate="yes" xml:space="preserve">
          <source>-%s is not implemented on a File::stat object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bb4d83c0add62ff40fbc7293cb0e0652fe9572" translate="yes" xml:space="preserve">
          <source>-%s on unopened filehandle %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d0e64f62d0aa67fc64844708eb009021bf6273" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Bless(</source>
          <target state="translated">-&amp;gt;Bless(</target>
        </trans-unit>
        <trans-unit id="f0722d974b50edb39d61682893cf91b3ae50c4aa" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Deepcopy(</source>
          <target state="translated">-&amp;gt;Deepcopy(</target>
        </trans-unit>
        <trans-unit id="5c0edfb04a76d90d803deb5fa319ba2663d74d18" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Deparse(</source>
          <target state="translated">-&amp;gt;Deparse(</target>
        </trans-unit>
        <trans-unit id="46853692fb69fcc992b6b4ff256e26998ad6aad6" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Dump</source>
          <target state="translated">-&amp;gt;Dump</target>
        </trans-unit>
        <trans-unit id="5784853989f6ebd5b873dce937c9d73bd2876587" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Dump(</source>
          <target state="translated">-&amp;gt;Dump(</target>
        </trans-unit>
        <trans-unit id="dba6f17f00a3608b5502035af168005f1d2e47c7" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Freezer(</source>
          <target state="translated">-&amp;gt;Freezer(</target>
        </trans-unit>
        <trans-unit id="f1b9e5eef8b3fe06ef615011915677eb670538c6" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Indent(</source>
          <target state="translated">-&amp;gt;Indent(</target>
        </trans-unit>
        <trans-unit id="31b6bc539e0d7c7b5901a7311b172dd6898b322b" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Maxdepth(</source>
          <target state="translated">-&amp;gt;Maxdepth(</target>
        </trans-unit>
        <trans-unit id="2d566bc2e1d524d8205bee44364bc31e0a8e9197" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Maxrecurse(</source>
          <target state="translated">-&amp;gt;Maxrecurse(</target>
        </trans-unit>
        <trans-unit id="30c7c29da8a4c244b680992630d60ee9fd854104" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Names(</source>
          <target state="translated">-&amp;gt;Names(</target>
        </trans-unit>
        <trans-unit id="413ec10070e2ce7e4378ffb0f5cbabab43709ca5" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Pad(</source>
          <target state="translated">-&amp;gt;Pad(</target>
        </trans-unit>
        <trans-unit id="e06d02c9fdb1747ec2039cea96f30fea04b5b25b" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Pair(</source>
          <target state="translated">-&amp;gt;Pair(</target>
        </trans-unit>
        <trans-unit id="7e25804050e4aa77c61e8ee63bad263c485c56c6" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Purity(</source>
          <target state="translated">-&amp;gt;Purity(</target>
        </trans-unit>
        <trans-unit id="56a023253cf1c514dba0cbce82b8b3814335f445" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Quotekeys(</source>
          <target state="translated">-&amp;gt;Quotekeys(</target>
        </trans-unit>
        <trans-unit id="d0e96e7ee3eaa848b0019dd15c7b0898915ebead" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Reset</source>
          <target state="translated">-&amp;gt;Reset</target>
        </trans-unit>
        <trans-unit id="f6e1d3513dca6e864199d6f50d923904e922a65d" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Seen(</source>
          <target state="translated">-&amp;gt;Seen(</target>
        </trans-unit>
        <trans-unit id="c1f9dd12120a54d49e86f3d8be13375c987724d2" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Sortkeys(</source>
          <target state="translated">-&amp;gt;Sortkeys(</target>
        </trans-unit>
        <trans-unit id="d589d85ec436baef14dce8d2143c792a949aba0d" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Sparseseen(</source>
          <target state="translated">-&amp;gt;Sparseseen(</target>
        </trans-unit>
        <trans-unit id="0057fcbaafc36dc5c0f396e5d6075530bfac1848" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Terse(</source>
          <target state="translated">-&amp;gt;Terse(</target>
        </trans-unit>
        <trans-unit id="71b97fccb0554a000a087174f590ad69f5d41fc2" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Toaster(</source>
          <target state="translated">-&amp;gt;Toaster(</target>
        </trans-unit>
        <trans-unit id="73a061c2d64a288ee13a8c231396eeb85d92a7ce" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Trailingcomma(</source>
          <target state="translated">-&amp;gt;Trailingcomma(</target>
        </trans-unit>
        <trans-unit id="b282f78e8ba680fc5f27fc13dba94b8c3b531e79" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Useperl(</source>
          <target state="translated">-&amp;gt;Useperl(</target>
        </trans-unit>
        <trans-unit id="4c7197d6a5caad4a177ca1b9e2de81de03660a61" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Useqq(</source>
          <target state="translated">-&amp;gt;Useqq(</target>
        </trans-unit>
        <trans-unit id="52bbdbdc2d57eba80469c834be7d9a9ff43f4fd6" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Values(</source>
          <target state="translated">-&amp;gt;Values(</target>
        </trans-unit>
        <trans-unit id="36470c86321f280aefd62b4ed122aaace7e7a771" translate="yes" xml:space="preserve">
          <source>-&amp;gt;Varname(</source>
          <target state="translated">-&amp;gt;Varname(</target>
        </trans-unit>
        <trans-unit id="35fb17f9530c86268b78d97fdb827f559bc940eb" translate="yes" xml:space="preserve">
          <source>-&amp;gt;cat_decode($destination, $octets, $offset, $terminator [,$check])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9daddffd9b981f6281405c1c04027e176594b0" translate="yes" xml:space="preserve">
          <source>-&amp;gt;decode($octets [,$check])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdd1abb9e34c25319ad5264ae027ffa2daac48c" translate="yes" xml:space="preserve">
          <source>-&amp;gt;dequeue()</source>
          <target state="translated">-&amp;gt;dequeue()</target>
        </trans-unit>
        <trans-unit id="4d7aefbfbe740bd78dd5d84db5e40f6cd5e76192" translate="yes" xml:space="preserve">
          <source>-&amp;gt;dequeue(COUNT)</source>
          <target state="translated">-&amp;gt;dequeue(COUNT)</target>
        </trans-unit>
        <trans-unit id="cea351acb884a2f074f92c6120b147de295f77ef" translate="yes" xml:space="preserve">
          <source>-&amp;gt;dequeue_nb()</source>
          <target state="translated">-&amp;gt;dequeue_nb()</target>
        </trans-unit>
        <trans-unit id="43a7e952ee08d9bccce1e2571162cd37a77f0862" translate="yes" xml:space="preserve">
          <source>-&amp;gt;dequeue_nb(COUNT)</source>
          <target state="translated">-&amp;gt;dequeue_nb(COUNT)</target>
        </trans-unit>
        <trans-unit id="d3cf565d010a4937dada68e1d74e0bb9e9dbd97e" translate="yes" xml:space="preserve">
          <source>-&amp;gt;dequeue_timed(TIMEOUT)</source>
          <target state="translated">-&amp;gt;dequeue_timed(TIMEOUT)</target>
        </trans-unit>
        <trans-unit id="d9c7bc7b9adebf5460dce967ce74b1f2ff09e645" translate="yes" xml:space="preserve">
          <source>-&amp;gt;dequeue_timed(TIMEOUT, COUNT)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ec4a2aaa5d89ee457c079d620114c01cedc119" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down()</source>
          <target state="translated">-&amp;gt;down()</target>
        </trans-unit>
        <trans-unit id="e280be72b096fcafbbcb6c26f34f8ec25ebec1f5" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down(NUMBER)</source>
          <target state="translated">-&amp;gt;down(NUMBER)</target>
        </trans-unit>
        <trans-unit id="959fcbb597f256ca764340b992b42a780d9b10eb" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down_force()</source>
          <target state="translated">-&amp;gt;down_force()</target>
        </trans-unit>
        <trans-unit id="d35de91fc5b908072b3cc1e653b4c1130a10f5bc" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down_force(NUMBER)</source>
          <target state="translated">-&amp;gt;down_force(NUMBER)</target>
        </trans-unit>
        <trans-unit id="54a3c00e26ade542b380f6fb5438c5d24a049741" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down_nb()</source>
          <target state="translated">-&amp;gt;down_nb()</target>
        </trans-unit>
        <trans-unit id="47efab5e5fdd527498b687a2c89c75cfe4286391" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down_nb(NUMBER)</source>
          <target state="translated">-&amp;gt;down_nb(NUMBER)</target>
        </trans-unit>
        <trans-unit id="baca2a6a08394e245be94c0cffcbeb363c878eeb" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down_timed(TIMEOUT)</source>
          <target state="translated">-&amp;gt;down_timed(TIMEOUT)</target>
        </trans-unit>
        <trans-unit id="0670ccbb5cb182c387c366ac98bb22a66cd4c593" translate="yes" xml:space="preserve">
          <source>-&amp;gt;down_timed(TIMEOUT, NUMBER)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcacd24e0c5e07cc196ddcc04c77b538245a1e7c" translate="yes" xml:space="preserve">
          <source>-&amp;gt;encode($string [,$check])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9594b538714946f3a717ab42bd21d5b9f5f9da1" translate="yes" xml:space="preserve">
          <source>-&amp;gt;end()</source>
          <target state="translated">-&amp;gt;end()</target>
        </trans-unit>
        <trans-unit id="9506efffd1fa092e7f0ef9285a047d84fe11f0fb" translate="yes" xml:space="preserve">
          <source>-&amp;gt;enqueue(LIST)</source>
          <target state="translated">-&amp;gt;enqueue(LIST)</target>
        </trans-unit>
        <trans-unit id="13d2304da8edb26745fca41a477e98754d871cc0" translate="yes" xml:space="preserve">
          <source>-&amp;gt;extract()</source>
          <target state="translated">-&amp;gt;extract()</target>
        </trans-unit>
        <trans-unit id="6a1f138b6ed0a54949392a723847801722030479" translate="yes" xml:space="preserve">
          <source>-&amp;gt;extract(INDEX)</source>
          <target state="translated">-&amp;gt;extract(INDEX)</target>
        </trans-unit>
        <trans-unit id="88e68114691d92bba226890e6c606ea2bb77adf0" translate="yes" xml:space="preserve">
          <source>-&amp;gt;extract(INDEX, COUNT)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2af4afeef504e2df2e4aec2276c4e54268215a3" translate="yes" xml:space="preserve">
          <source>-&amp;gt;insert(INDEX, LIST)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162565272f324c21e5dc34632217143c2c4d7582" translate="yes" xml:space="preserve">
          <source>-&amp;gt;limit</source>
          <target state="translated">-&amp;gt;limit</target>
        </trans-unit>
        <trans-unit id="6ef6b7dd1a5dafda1e37fde8e3e49c89a09bc0fa" translate="yes" xml:space="preserve">
          <source>-&amp;gt;mime_name</source>
          <target state="translated">-&amp;gt;mime_name</target>
        </trans-unit>
        <trans-unit id="973c06c03cb669af5e35f7d4dc026750fa74ebed" translate="yes" xml:space="preserve">
          <source>-&amp;gt;name</source>
          <target state="translated">-&amp;gt;name</target>
        </trans-unit>
        <trans-unit id="f18662b6b65a2a3a5333aaa90290cd700c1cbf21" translate="yes" xml:space="preserve">
          <source>-&amp;gt;needs_lines()</source>
          <target state="translated">-&amp;gt;needs_lines()</target>
        </trans-unit>
        <trans-unit id="f766e349e601c262c2ca67b30ebb9b52181666d2" translate="yes" xml:space="preserve">
          <source>-&amp;gt;new(</source>
          <target state="translated">-&amp;gt;new(</target>
        </trans-unit>
        <trans-unit id="842d04ade7a944de7b63fb54f6e1728efbe69fc7" translate="yes" xml:space="preserve">
          <source>-&amp;gt;new()</source>
          <target state="translated">-&amp;gt;new()</target>
        </trans-unit>
        <trans-unit id="fa657bcce0cc7fe5acc50debb5fcfb4b7bdb8fc4" translate="yes" xml:space="preserve">
          <source>-&amp;gt;new().</source>
          <target state="translated">-&amp;gt;new().</target>
        </trans-unit>
        <trans-unit id="ca35a1a50210567070c4cfbf08aae7e9cce265b2" translate="yes" xml:space="preserve">
          <source>-&amp;gt;new(LIST)</source>
          <target state="translated">-&amp;gt;new(LIST)</target>
        </trans-unit>
        <trans-unit id="d1bb77b97b0ebcefb9cde8c53c5e6317ebcb3cee" translate="yes" xml:space="preserve">
          <source>-&amp;gt;new(NUMBER)</source>
          <target state="translated">-&amp;gt;new(NUMBER)</target>
        </trans-unit>
        <trans-unit id="f16847bb22747fb7d3af10183f0cc2affeeec244" translate="yes" xml:space="preserve">
          <source>-&amp;gt;peek()</source>
          <target state="translated">-&amp;gt;peek()</target>
        </trans-unit>
        <trans-unit id="94046a4fbdc442bc7514e1de57b7ec0410d9595b" translate="yes" xml:space="preserve">
          <source>-&amp;gt;peek(INDEX)</source>
          <target state="translated">-&amp;gt;peek(INDEX)</target>
        </trans-unit>
        <trans-unit id="f4415914a21aacf867626430495be4c2a6f7745d" translate="yes" xml:space="preserve">
          <source>-&amp;gt;pending()</source>
          <target state="translated">-&amp;gt;pending()</target>
        </trans-unit>
        <trans-unit id="9e3cb4581bccdebf2e3e87af880d0d8f9663f1e5" translate="yes" xml:space="preserve">
          <source>-&amp;gt;perlio_ok()</source>
          <target state="translated">-&amp;gt;perlio_ok()</target>
        </trans-unit>
        <trans-unit id="03822a827b55f1cf6d57bfec6366994a07686513" translate="yes" xml:space="preserve">
          <source>-&amp;gt;renew</source>
          <target state="translated">-&amp;gt;renew</target>
        </trans-unit>
        <trans-unit id="ba668c651ef8229684bda7d2a29d614b424db530" translate="yes" xml:space="preserve">
          <source>-&amp;gt;renewed</source>
          <target state="translated">-&amp;gt;renewed</target>
        </trans-unit>
        <trans-unit id="5065a3018b9da2ea1d8c8103d02620427dcbdeba" translate="yes" xml:space="preserve">
          <source>-&amp;gt;up()</source>
          <target state="translated">-&amp;gt;up()</target>
        </trans-unit>
        <trans-unit id="77d9721fba7632668a4b6dd2e5d9907ce2faf9c3" translate="yes" xml:space="preserve">
          <source>-&amp;gt;up(NUMBER)</source>
          <target state="translated">-&amp;gt;up(NUMBER)</target>
        </trans-unit>
        <trans-unit id="2d61ca753759230bedde8cc40a1707eb6fef4cc2" translate="yes" xml:space="preserve">
          <source>-&amp;tau;&amp;omicron;&amp;mu;&amp;omicron;&amp;sigmaf;</source>
          <target state="translated">-&amp;tau;&amp;omicron;&amp;mu;&amp;omicron;&amp;sigmaf;</target>
        </trans-unit>
        <trans-unit id="c73415d27a902ee544cc97c1b064046aa369c3f6" translate="yes" xml:space="preserve">
          <source>-- First Networking Truth, RFC 1925</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ca49c228dda32aff593d5c4091da8d43e4d365" translate="yes" xml:space="preserve">
          <source>-- Harald Tveit Alvestrand, in RFC 1766, &quot;Tags for the Identification of Languages&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7237e0004144ef0ea4f5752d2e69f5cec1dfdcf5" translate="yes" xml:space="preserve">
          <source>-- The Eighth Networking Truth, from RFC 1925</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ad6b1974639a6ad49066e89047b76e4ed28ab6" translate="yes" xml:space="preserve">
          <source>-- merits special attention. When &lt;code&gt;$/&lt;/code&gt; is set to &lt;code&gt;&quot;&quot;&lt;/code&gt; and the entire file is read in with that setting, any sequence of consecutive newlines &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; at the beginning of the file is discarded. With the exception of the final record in the file, each sequence of characters ending in two or more newlines is treated as one record and is read in to end in exactly two newlines. If the last record in the file ends in zero or one consecutive newlines, that record is read in with that number of newlines. If the last record ends in two or more consecutive newlines, it is read in with two newlines like all preceding records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e840705228b64bcf8b19330a928bbb3f1a9bf97" translate="yes" xml:space="preserve">
          <source>-- see 1.1.1 U+FFFE, UTS #35 (LDML) Part 5: Collation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6343e91df97da6c3ef931cb12700fb150ca898" translate="yes" xml:space="preserve">
          <source>-- see 2.4 Tailored noncharacter weights, UTS #35 (LDML) Part 5: Collation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b2af8bbbc3b7f147e3e677dc52ca28d10188c3" translate="yes" xml:space="preserve">
          <source>-- see 3.12 Special-Purpose Commands, UTS #35 (LDML) Part 5: Collation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585f1706ae18bcdc63ca722b491c6df4f0dde510" translate="yes" xml:space="preserve">
          <source>-- see 3.2.2 Alternate Weighting, version 8 of UTS #10</source>
          <target state="translated">-参见3.2.2替代权重，UTS＃10的版本8</target>
        </trans-unit>
        <trans-unit id="3a8cc74f261c3d51571350ca2868bd10ef52769b" translate="yes" xml:space="preserve">
          <source>-- see 3.4 Backward Accents, UTS #10.</source>
          <target state="translated">-请参阅3.4后向重音，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="07d3a1d428fe3461f8d9c80032441d87278b9654" translate="yes" xml:space="preserve">
          <source>-- see 3.5 Rearrangement, UTS #10.</source>
          <target state="translated">-请参阅3.5重排，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="5ee3edd6f51f1ea7fa47e8f98453c7d17eaea820" translate="yes" xml:space="preserve">
          <source>-- see 3.6 Variable Weighting, UTS #10.</source>
          <target state="translated">-请参阅3.6可变权重，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="cd9a420c85ac25af87c2565ef4416f3f6d6ba5b1" translate="yes" xml:space="preserve">
          <source>-- see 3.8 Default Unicode Collation Element Table, UTS #10.</source>
          <target state="translated">-请参阅3.8默认Unicode归类元素表，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="a697b3f4a09d78b35f6bcaf2e5ac4b9c059bb5f9" translate="yes" xml:space="preserve">
          <source>-- see 3.8.2 Well-Formedness of the DUCET, 4.2 Produce Array, UTS #10.</source>
          <target state="translated">-请参阅3.8.2 DUCET的格式正确性，4.2产生数组，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="7b4d0507deac646ef7351b3ecb3ba07f748dfa61" translate="yes" xml:space="preserve">
          <source>-- see 4.1 Normalize, UTS #10.</source>
          <target state="translated">-请参阅4.1标准化，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="1cb743acecb2ab375f527cbafc47c0bbe3cabad0" translate="yes" xml:space="preserve">
          <source>-- see 4.3 Form Sort Key, UTS #10.</source>
          <target state="translated">-请参阅4.3表格排序键，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="cdabeb0028ef19f65abe871e2f9a75ea7690910d" translate="yes" xml:space="preserve">
          <source>-- see 5 Tailoring; 9.1 Allkeys File Format, UTS #10.</source>
          <target state="translated">-见5裁缝; 9.1 Allkeys文件格式，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="5974db4d3861eb1b0da28b6b74de30e8c4d8e699" translate="yes" xml:space="preserve">
          <source>-- see 5.1 Parametric Tailoring, UTS #10.</source>
          <target state="translated">-参见5.1参数定制，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="3269e638f6b6a348970d76d447ba7f62ead918d9" translate="yes" xml:space="preserve">
          <source>-- see 5.14 Collation Elements, UTS #35.</source>
          <target state="translated">-请参阅5.14整理元素，UTS＃35。</target>
        </trans-unit>
        <trans-unit id="ba76558f052a895590fcc20803249a87f4f1a0f2" translate="yes" xml:space="preserve">
          <source>-- see 5.4 Preprocessing, UTS #10.</source>
          <target state="translated">-参见5.4预处理，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="e1aeb46917eaf8a02e52c345b2ef987cc9482829" translate="yes" xml:space="preserve">
          <source>-- see 6.3.3 Reducing the Repertoire, UTS #10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41b8036c6ccf65060a4662dca1e11556455fd38" translate="yes" xml:space="preserve">
          <source>-- see 6.3.4 Reducing the Repertoire, UTS #10.</source>
          <target state="translated">-请参阅6.3.4缩减曲目，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="0e79a7c892b3daf587f7a8b3225aabd06c6a3025" translate="yes" xml:space="preserve">
          <source>-- see 6.5 Avoiding Normalization, UTS #10.</source>
          <target state="translated">-请参阅6.5避免标准化，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="1e7a49b0b256e287ad6547d96d0e85e9098bf1e7" translate="yes" xml:space="preserve">
          <source>-- see 6.6 Case Comparisons, UTS #10.</source>
          <target state="translated">-参见6.6案例比较，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="921de278b720df4682ccde20a8a07d16048240f4" translate="yes" xml:space="preserve">
          <source>-- see 7.1 Derived Collation Elements, UTS #10.</source>
          <target state="translated">-请参阅7.1派生整理元素，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="e6189b5fe4e700972d5d0c46522002017f4b74b4" translate="yes" xml:space="preserve">
          <source>-- see 7.1.1 Handling Ill-Formed Code Unit Sequences, UTS #10.</source>
          <target state="translated">-请参阅7.1.1处理格式错误的代码单元序列，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="d9b914c66e4ecd398f8a0454a4abbd3845ef4cdf" translate="yes" xml:space="preserve">
          <source>-- see 7.1.4 Trailing Weights, UTS #10.</source>
          <target state="translated">-参见7.1.4尾重，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="152aade877325529ccd0de6317a273f029c69056" translate="yes" xml:space="preserve">
          <source>-- see 7.2 Tertiary Weight Table, UTS #10.</source>
          <target state="translated">-参见7.2第三级重量表，UTS＃10。</target>
        </trans-unit>
        <trans-unit id="800fd8691cb7a6b6fe172573590fed9e2fc75f8f" translate="yes" xml:space="preserve">
          <source>-- see A.3 Deterministic Comparison, UTS #10.</source>
          <target state="translated">-请参阅A.3确定性比较（UT​​S＃10）。</target>
        </trans-unit>
        <trans-unit id="70594be556b0b2420c5652817454d7573669880a" translate="yes" xml:space="preserve">
          <source>-- see suppress contractions in 5.14.11 Special-Purpose Commands, UTS #35 (LDML).</source>
          <target state="translated">-请参阅5.14.11专用命令（UTS＃35（LDML））中的抑制收缩。</target>
        </trans-unit>
        <trans-unit id="0a3b88931de0f8a1585b737f1744b827120ed7e3" translate="yes" xml:space="preserve">
          <source>-- they are NOT used for</source>
          <target state="translated">-它们不用于</target>
        </trans-unit>
        <trans-unit id="afe09f38de5b8547467dba38b00faf6ea82e1825" translate="yes" xml:space="preserve">
          <source>-----8&amp;lt;-----/usr/local/bin/yacc-----8&amp;lt;----- #! /usr/bin/sh</source>
          <target state="translated">----- 8 &amp;lt;----- // usr / local / bin / yacc ----- 8 &amp;lt;-----＃！/ usr / bin / sh</target>
        </trans-unit>
        <trans-unit id="928eb328085d5dd1ea864cbc7fa6fcd93239323f" translate="yes" xml:space="preserve">
          <source>--bringing things to life automatically. Perl saw that the key wasn't in the hash, so it created a new hash entry automatically. Perl saw that you wanted to use the hash value as an array, so it created a new empty array and installed a reference to it in the hash automatically. And as usual, Perl made the array one element longer to hold the new city name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ee483d8885043b1d86e8f54b300cc2d0d8aa5d" translate="yes" xml:space="preserve">
          <source>--diff</source>
          <target state="translated">--diff</target>
        </trans-unit>
        <trans-unit id="4c145d5d792c0de7497818416a3583ddc4ef3aed" translate="yes" xml:space="preserve">
          <source>--exec</source>
          <target state="translated">--exec</target>
        </trans-unit>
        <trans-unit id="e69ab1b6739dbe6687f9d0fa8d25e100eaff418c" translate="yes" xml:space="preserve">
          <source>--feature, -f</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1080c2b75030b9db6089441c365cd2e618af5b72" translate="yes" xml:space="preserve">
          <source>--help and --version</source>
          <target state="translated">--help和--version</target>
        </trans-unit>
        <trans-unit id="63e664f3c0b161a2cbf63173f5e4286a40b94c51" translate="yes" xml:space="preserve">
          <source>--htmlcref</source>
          <target state="translated">--htmlcref</target>
        </trans-unit>
        <trans-unit id="02f5609e10ee7026f1e54d036cb62940935a9c3e" translate="yes" xml:space="preserve">
          <source>--libpods in Pod::Html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de00e86b4b1adf7de42f72b04311752a53fdd076" translate="yes" xml:space="preserve">
          <source>--merge</source>
          <target state="translated">--merge</target>
        </trans-unit>
        <trans-unit id="85bf17ebe87204a1c560eec7e29e5131edbd78fb" translate="yes" xml:space="preserve">
          <source>--no dangling statements allowed. If you want to write conditionals without curly brackets, there are several other ways to do it. The following all do the same thing:</source>
          <target state="translated">-不允许悬空的陈述。如果要编写不带大括号的条件语句，则可以使用其他几种方法。以下所有操作均相同：</target>
        </trans-unit>
        <trans-unit id="180267a3a01343dd30c8a524372d694ddfbee330" translate="yes" xml:space="preserve">
          <source>--or--</source>
          <target state="translated">--or--</target>
        </trans-unit>
        <trans-unit id="5f9031d8f64ccf1adae3a5bad83b3f0e15a74b6b" translate="yes" xml:space="preserve">
          <source>--rules</source>
          <target state="translated">--rules</target>
        </trans-unit>
        <trans-unit id="1c4f9522981e50119882c53cf2d78fbc6dacf356" translate="yes" xml:space="preserve">
          <source>--rules Glob-style pattern matching</source>
          <target state="translated">--rules球形样式匹配</target>
        </trans-unit>
        <trans-unit id="b8de924ed5d19fde35d5385ab4502ea63fe9053a" translate="yes" xml:space="preserve">
          <source>--rules examples</source>
          <target state="translated">-规则示例</target>
        </trans-unit>
        <trans-unit id="b82e47ebb1972aa0b6e7d7ff1370d40055cb198c" translate="yes" xml:space="preserve">
          <source>--rules resolution</source>
          <target state="translated">-规则解析</target>
        </trans-unit>
        <trans-unit id="c60ab85f89bb24a2195d98fc15206ae225307de2" translate="yes" xml:space="preserve">
          <source>--state</source>
          <target state="translated">--state</target>
        </trans-unit>
        <trans-unit id="f102bd60a1627e203f05c569bd70be2475447fb4" translate="yes" xml:space="preserve">
          <source>--trap</source>
          <target state="translated">--trap</target>
        </trans-unit>
        <trans-unit id="1c943333bd1bb515c4452598c745fa2120f0f81c" translate="yes" xml:space="preserve">
          <source>--upstream, -u</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be41ad7a4148c9611162eaff167e30cd14981272" translate="yes" xml:space="preserve">
          <source>--utils</source>
          <target state="translated">--utils</target>
        </trans-unit>
        <trans-unit id="60701558636e9ff7e4e4a5391e29bda4c6ef2db8" translate="yes" xml:space="preserve">
          <source>--xmlcref</source>
          <target state="translated">--xmlcref</target>
        </trans-unit>
        <trans-unit id="6ec1cf6284eb5ed1401a0fa4abb8cf38b2067e4a" translate="yes" xml:space="preserve">
          <source>-1 or +1 is returned if the shorter string was identical to the start of the longer string. -2 or +2 is returned if there was a difference between characters within the strings.</source>
          <target state="translated">如果较短的字符串与较长的字符串的开头相同，则返回-1或+1。如果字符串中的字符之间存在差异，则返回-2或+2。</target>
        </trans-unit>
        <trans-unit id="bd7373f38ce34820b3e621b28cd4de8215e371f8" translate="yes" xml:space="preserve">
          <source>-8 locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556591f45bb0ffdc476da93680ff2e9343566fc5" translate="yes" xml:space="preserve">
          <source>-? or -help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5439c619dbb3b08873b649d979d89875a271f4f" translate="yes" xml:space="preserve">
          <source>-A module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be3f07d6ecc59410e75ba068c300b83155bed03" translate="yes" xml:space="preserve">
          <source>-Accflags=-fsanitize=address</source>
          <target state="translated">-Accflags=-fsanitize=address</target>
        </trans-unit>
        <trans-unit id="bf6cc6c5525e05c78a90bb8dd8ce302a6fde9f46" translate="yes" xml:space="preserve">
          <source>-Alddlflags=-shared\ -fsanitize=address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c63d44edc0c1509106ffb2dcafcd19ce1d4e52" translate="yes" xml:space="preserve">
          <source>-Aldflags=-fsanitize=address</source>
          <target state="translated">-Aldflags=-fsanitize=address</target>
        </trans-unit>
        <trans-unit id="7db9de3fe8117d6a6778bcc8f88e7690eec078b4" translate="yes" xml:space="preserve">
          <source>-C module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691bdf37190984a4fe90d8640f5e52f09bb33010" translate="yes" xml:space="preserve">
          <source>-C,--check</source>
          <target state="translated">-C,--check</target>
        </trans-unit>
        <trans-unit id="ad9aee0e02aa7df5696f88c33c3f5b0003d54711" translate="yes" xml:space="preserve">
          <source>-D</source>
          <target state="translated">-D</target>
        </trans-unit>
        <trans-unit id="1d1f99fc093e5e1ae8d544e1d9a06037f841d2ae" translate="yes" xml:space="preserve">
          <source>-D module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeacf3e5a9f96831b5805fd75e3e1221c5f5ee22" translate="yes" xml:space="preserve">
          <source>-D,--debug</source>
          <target state="translated">-D,--debug</target>
        </trans-unit>
        <trans-unit id="f455830ea22636b94e2621cba89906b9cf086ace" translate="yes" xml:space="preserve">
          <source>-Dcc=clang</source>
          <target state="translated">-Dcc=clang</target>
        </trans-unit>
        <trans-unit id="ccdf319fc9b8ab52413c4b1c6ce664c414d5cf27" translate="yes" xml:space="preserve">
          <source>-F</source>
          <target state="translated">-F</target>
        </trans-unit>
        <trans-unit id="dc1da24059fac98482b02ebc06841c689eaca7b4" translate="yes" xml:space="preserve">
          <source>-G module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71e105f8a133b9bda2f781740d497e34f38d669" translate="yes" xml:space="preserve">
          <source>-I</source>
          <target state="translated">-I</target>
        </trans-unit>
        <trans-unit id="3768ddf11606c0d712122f6d7cf70de7821c62b5" translate="yes" xml:space="preserve">
          <source>-J</source>
          <target state="translated">-J</target>
        </trans-unit>
        <trans-unit id="7a443de8d05c259afd05cb6941e512eadbc81ec9" translate="yes" xml:space="preserve">
          <source>-L author [ author ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b046afcc916bed407dbbdb049d502fceb08d96a3" translate="yes" xml:space="preserve">
          <source>-Level</source>
          <target state="translated">-Level</target>
        </trans-unit>
        <trans-unit id="a865f5c84febf7bb127859a28c7f9921091e23e9" translate="yes" xml:space="preserve">
          <source>-M</source>
          <target state="translated">-M</target>
        </trans-unit>
        <trans-unit id="286442bdb595d2f8d281251d800e0353042699bc" translate="yes" xml:space="preserve">
          <source>-M mirror1,mirror2,...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baef33bc876a687b961751394c8f81f05f3e79c2" translate="yes" xml:space="preserve">
          <source>-O</source>
          <target state="translated">-O</target>
        </trans-unit>
        <trans-unit id="5bb32e12d567b52d9769dd6d1b502cbafaf5b407" translate="yes" xml:space="preserve">
          <source>-P</source>
          <target state="translated">-P</target>
        </trans-unit>
        <trans-unit id="6422eedc12255e6b5d4e04ab2b26ee196c74c4c7" translate="yes" xml:space="preserve">
          <source>-Q</source>
          <target state="translated">-Q</target>
        </trans-unit>
        <trans-unit id="3e0eab9f94000d4317af98881d10968930b431a1" translate="yes" xml:space="preserve">
          <source>-S</source>
          <target state="translated">-S</target>
        </trans-unit>
        <trans-unit id="f1b7687a81f3bfab61c7281767bf9051e13659d3" translate="yes" xml:space="preserve">
          <source>-S,--scheme</source>
          <target state="translated">-S,--scheme</target>
        </trans-unit>
        <trans-unit id="67648e47a5435ce1e50f56fbe845fa12a5cdb381" translate="yes" xml:space="preserve">
          <source>-Strategy</source>
          <target state="translated">-Strategy</target>
        </trans-unit>
        <trans-unit id="332ec780f224383a9f30f4660fe42ecd1206e248" translate="yes" xml:space="preserve">
          <source>-T</source>
          <target state="translated">-T</target>
        </trans-unit>
        <trans-unit id="66445fecf3db004bb006e432cfd80e60057aed1e" translate="yes" xml:space="preserve">
          <source>-Unicode bytes is not necessarily obvious. Probably only the first of these is what you want:</source>
          <target state="translated">-Unicode字节不一定很明显。可能只有这些中的第一个是您想要的：</target>
        </trans-unit>
        <trans-unit id="6bfad0cb61ec04c8e83fbc02d3e02c478a1f6e49" translate="yes" xml:space="preserve">
          <source>-V</source>
          <target state="translated">-V</target>
        </trans-unit>
        <trans-unit id="7241f5aad8466e538eb18ce72bac37865cce783f" translate="yes" xml:space="preserve">
          <source>-X</source>
          <target state="translated">-X</target>
        </trans-unit>
        <trans-unit id="f02421666194942fbfd487a0b89bc8e62902d2fe" translate="yes" xml:space="preserve">
          <source>-X DIRHANDLE</source>
          <target state="translated">-X DIRHANDLE</target>
        </trans-unit>
        <trans-unit id="2ab1b601b35fe8f8841c979e875fa9193b77c019" translate="yes" xml:space="preserve">
          <source>-X EXPR</source>
          <target state="translated">-X EXPR</target>
        </trans-unit>
        <trans-unit id="bc19678a7061febac0619b2e971988a6337acd07" translate="yes" xml:space="preserve">
          <source>-X FILEHANDLE</source>
          <target state="translated">-X FILEHANDLE</target>
        </trans-unit>
        <trans-unit id="6db1fada730596c747bd0e1cc542c04190614170" translate="yes" xml:space="preserve">
          <source>-a</source>
          <target state="translated">-a</target>
        </trans-unit>
        <trans-unit id="f1141527e901e4fc62f73312648aa01ec2a552d5" translate="yes" xml:space="preserve">
          <source>-axis is &lt;b&gt;phi&lt;/b&gt;, also known as the</source>
          <target state="translated">轴是&lt;b&gt;phi&lt;/b&gt;，也称为</target>
        </trans-unit>
        <trans-unit id="60c94d22393c772d0f184d991bea821b935b05c4" translate="yes" xml:space="preserve">
          <source>-axis) is &lt;b&gt;theta&lt;/b&gt;, also known as the</source>
          <target state="translated">-axis）是&lt;b&gt;theta&lt;/b&gt;，也称为</target>
        </trans-unit>
        <trans-unit id="e48240bfde6ac93310ae055c2eebf9ff6e622f84" translate="yes" xml:space="preserve">
          <source>-b</source>
          <target state="translated">-b</target>
        </trans-unit>
        <trans-unit id="a9dbc90b755d775e7f6bcfa29813702306e16afa" translate="yes" xml:space="preserve">
          <source>-based) logarithm of the numerical argument, see &lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;.</source>
          <target state="translated">值的对数，请参阅&lt;a href=&quot;functions/log&quot;&gt;log&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c18479c603e32fac5be9dbd6c1629662d5b9853e" translate="yes" xml:space="preserve">
          <source>-based) logarithm of the numerical argument, see &lt;a href=&quot;perlfunc#log&quot;&gt;&quot;log&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7abb535a243486c680796806de8db55fd67e96f" translate="yes" xml:space="preserve">
          <source>-based) of the numerical argument, see &lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;.</source>
          <target state="translated">基于数值的参数），请参见&lt;a href=&quot;functions/exp&quot;&gt;exp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9f25adb346a99ee88bddd351c93c06e02471293" translate="yes" xml:space="preserve">
          <source>-based) of the numerical argument, see &lt;a href=&quot;perlfunc#exp&quot;&gt;&quot;exp&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbfe46d29072725b61a3ee03c6abfefa0973acd" translate="yes" xml:space="preserve">
          <source>-c</source>
          <target state="translated">-c</target>
        </trans-unit>
        <trans-unit id="8226f9320a58094195bd2b8e654e97c627118403" translate="yes" xml:space="preserve">
          <source>-c (--color) requires Term::ANSIColor be installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9d31753faa1f5c2566df806d8aa964dd978fe8" translate="yes" xml:space="preserve">
          <source>-c module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a878f037fdf80e6f7650a48c7b4019c798e1bf" translate="yes" xml:space="preserve">
          <source>-coordinates.</source>
          <target state="translated">-coordinates.</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-d</target>
        </trans-unit>
        <trans-unit id="392e2d4e9f5cba19f45990bd08bafb3b6c76ad53" translate="yes" xml:space="preserve">
          <source>-d destination_dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2360917b9377a0f8f526499aa422e769e1252d5b" translate="yes" xml:space="preserve">
          <source>-e</source>
          <target state="translated">-e</target>
        </trans-unit>
        <trans-unit id="238695a38c232937a8a6d11443d7b294962357c5" translate="yes" xml:space="preserve">
          <source>-e routine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae22cd44cab421b74b9cb1b713b21791222034bd" translate="yes" xml:space="preserve">
          <source>-equivalent suffix.</source>
          <target state="translated">-等价的后缀。</target>
        </trans-unit>
        <trans-unit id="f9734ee333a629165fa782b725db07885fb85d5a" translate="yes" xml:space="preserve">
          <source>-expansion done.</source>
          <target state="translated">-扩展完成。</target>
        </trans-unit>
        <trans-unit id="0abbcbcbe6d61abda4c58f24b76e0809f7c8b425" translate="yes" xml:space="preserve">
          <source>-f</source>
          <target state="translated">-f</target>
        </trans-unit>
        <trans-unit id="d1aab55443fd6d41c1821fb0098c28a59834c83c" translate="yes" xml:space="preserve">
          <source>-f routine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ced84e4352580b814a3c831d005fc7fe42bbe3" translate="yes" xml:space="preserve">
          <source>-f,--from</source>
          <target state="translated">-f,--from</target>
        </trans-unit>
        <trans-unit id="9768b3fca97bf2d2b773d639aae85af5d3472b58" translate="yes" xml:space="preserve">
          <source>-foo</source>
          <target state="translated">-foo</target>
        </trans-unit>
        <trans-unit id="1a7928193ef3f3d9bf22f22d8e56318d501a71bd" translate="yes" xml:space="preserve">
          <source>-fsanitize-blacklist=`pwd`/asan_ignore</source>
          <target state="translated">-fsanitize-blacklist=`pwd`/asan_ignore</target>
        </trans-unit>
        <trans-unit id="908ef382f902c5e030db6c76a3e6446bcc9e5ec4" translate="yes" xml:space="preserve">
          <source>-g module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3003f7f0bedaf2a7334f932c515378a93f1402" translate="yes" xml:space="preserve">
          <source>-h</source>
          <target state="translated">-h</target>
        </trans-unit>
        <trans-unit id="13164925a0cd22470235c5e8907dc7dc055dab88" translate="yes" xml:space="preserve">
          <source>-h,--help</source>
          <target state="translated">-h,--help</target>
        </trans-unit>
        <trans-unit id="91edc8362c7518c1b0e4a9a4a7bcb6c02d8e498b" translate="yes" xml:space="preserve">
          <source>-i</source>
          <target state="translated">-i</target>
        </trans-unit>
        <trans-unit id="051fa67f29f2a258f11d9c26669bfd28448cd877" translate="yes" xml:space="preserve">
          <source>-i module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8f3e5cba188512d6d65a4a9cf410c33f086158" translate="yes" xml:space="preserve">
          <source>-i used with no filenames on the command line, reading from STDIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814937af05964f89600befa6ae3bfe386bb151b0" translate="yes" xml:space="preserve">
          <source>-ish meanings:</source>
          <target state="translated">-ish含义：</target>
        </trans-unit>
        <trans-unit id="89343dccabe72d08e1c4b86cd111151ff113e89e" translate="yes" xml:space="preserve">
          <source>-j Config.pm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ecbf5c742a07d94719d70cfc27033de855195e" translate="yes" xml:space="preserve">
          <source>-l</source>
          <target state="translated">-l</target>
        </trans-unit>
        <trans-unit id="3c4a5714426402e6a879069c8235ce5a2796770b" translate="yes" xml:space="preserve">
          <source>-l,--list</source>
          <target state="translated">-l,--list</target>
        </trans-unit>
        <trans-unit id="d913657d8a33916405c4c67553ab3a2992d6c95e" translate="yes" xml:space="preserve">
          <source>-like construct is created by a pair of &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt; macros (see &lt;a href=&quot;perlcall#Returning-a-Scalar&quot;&gt;Returning a Scalar in perlcall&lt;/a&gt;). Such a construct may be created specially for some important localized task, or an existing one (like boundaries of enclosing Perl subroutine/block, or an existing pair for freeing TMPs) may be used. (In the second case the overhead of additional localization must be almost negligible.) Note that any XSUB is automatically enclosed in an &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt; pair.</source>
          <target state="translated">类似的构造是由一对 &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; 宏创建的（请参阅&lt;a href=&quot;perlcall#Returning-a-Scalar&quot;&gt;在perlcall中返回标量&lt;/a&gt;）。可以为某些重要的本地化任务专门创建这样的构造，或者可以使用现有的构造（如封装Perl子例程/块的边界，或用于释放TMP的现有对）。（在第二种情况下，附加本地化的开销几乎可以忽略不计。）请注意，任何XSUB都会自动包含在 &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; 对中。</target>
        </trans-unit>
        <trans-unit id="d764287429ae69a6b55559d0da992c92cd681258" translate="yes" xml:space="preserve">
          <source>-like construct is created by a pair of &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;LEAVE&lt;/code&gt; macros (see &lt;a href=&quot;perlcall#Returning-a-Scalar&quot;&gt;&quot;Returning a Scalar&quot; in perlcall&lt;/a&gt;). Such a construct may be created specially for some important localized task, or an existing one (like boundaries of enclosing Perl subroutine/block, or an existing pair for freeing TMPs) may be used. (In the second case the overhead of additional localization must be almost negligible.) Note that any XSUB is automatically enclosed in an &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;LEAVE&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98c9dc82b0940ee66ebaf6b3ab25db4d7a0b7ee" translate="yes" xml:space="preserve">
          <source>-lperl</source>
          <target state="translated">-lperl</target>
        </trans-unit>
        <trans-unit id="8cc195760cf823702a9c3a4e38316c503826cf72" translate="yes" xml:space="preserve">
          <source>-m</source>
          <target state="translated">-m</target>
        </trans-unit>
        <trans-unit id="7d457e0ddd706b0631c75d46533797809ea7a042" translate="yes" xml:space="preserve">
          <source>-man</source>
          <target state="translated">-man</target>
        </trans-unit>
        <trans-unit id="d868a680affb6ad2c7e2392566b6adc4e3201dea" translate="yes" xml:space="preserve">
          <source>-n</source>
          <target state="translated">-n</target>
        </trans-unit>
        <trans-unit id="f768616ef823e7864962e05cfb8231fce774193d" translate="yes" xml:space="preserve">
          <source>-p</source>
          <target state="translated">-p</target>
        </trans-unit>
        <trans-unit id="653332e9ad9ed292b475028118162353cc479d16" translate="yes" xml:space="preserve">
          <source>-p,--perlqq</source>
          <target state="translated">-p,--perlqq</target>
        </trans-unit>
        <trans-unit id="00a354ab6ba325dfea1f93fc702984e336b57ca9" translate="yes" xml:space="preserve">
          <source>-pi</source>
          <target state="translated">-pi</target>
        </trans-unit>
        <trans-unit id="d0ab9098221f275f405a3db51c04c836d2cd668f" translate="yes" xml:space="preserve">
          <source>-plane (around the</source>
          <target state="translated">-飞机（围绕</target>
        </trans-unit>
        <trans-unit id="90cdb7ea49538fa14a6fddf9d2eb1811417d042f" translate="yes" xml:space="preserve">
          <source>-r</source>
          <target state="translated">-r</target>
        </trans-unit>
        <trans-unit id="3c1161c663136dd9f9b6a603933f75e4defae1c1" translate="yes" xml:space="preserve">
          <source>-r,--resolve</source>
          <target state="translated">-r,--resolve</target>
        </trans-unit>
        <trans-unit id="e6ab9816305be2242bcc92ac5c609d4a088fd6f8" translate="yes" xml:space="preserve">
          <source>-re LIST OF PATTERNS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c647df34524053914b0fa32a75ea6b3ed9a1e0" translate="yes" xml:space="preserve">
          <source>-re=PATTERN</source>
          <target state="translated">-re=PATTERN</target>
        </trans-unit>
        <trans-unit id="fe06637685c925d5eec8bbd543cd92c006d957fa" translate="yes" xml:space="preserve">
          <source>-removal would give you. If you want to do this kind of processing, you probably want &lt;code&gt;Cwd&lt;/code&gt; 's &lt;code&gt;realpath()&lt;/code&gt; function to actually traverse the filesystem cleaning up paths like this.</source>
          <target state="translated">-删除会给你。如果要进行此类处理，则可能希望 &lt;code&gt;Cwd&lt;/code&gt; 的 &lt;code&gt;realpath()&lt;/code&gt; 函数实际遍历文件系统，以清理此类路径。</target>
        </trans-unit>
        <trans-unit id="91953f3be86960dbb0426f033ce652ec6a050ab6" translate="yes" xml:space="preserve">
          <source>-removal would give you. If you want to do this kind of processing, you probably want &lt;code&gt;Cwd&lt;/code&gt;'s &lt;code&gt;realpath()&lt;/code&gt; function to actually traverse the filesystem cleaning up paths like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840c8c1b085e301c44de24e07c1100e2497b9568" translate="yes" xml:space="preserve">
          <source>-s</source>
          <target state="translated">-s</target>
        </trans-unit>
        <trans-unit id="1ca3d40459b0228ae087f3489d216f8db272fba3" translate="yes" xml:space="preserve">
          <source>-s,--string</source>
          <target state="translated">-s,--string</target>
        </trans-unit>
        <trans-unit id="1a8854d13cc7eda216c70c1e5b536a20cbd2d0a9" translate="yes" xml:space="preserve">
          <source>-style format specifier (without the leading '%') to use to print the times. It defaults to '5.2f'.</source>
          <target state="translated">样式的格式说明符（不带前导'％'）用于打印时间。默认为&amp;ldquo; 5.2f&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bdc6cf8c21c664c9faf3b4b838269f152cd31578" translate="yes" xml:space="preserve">
          <source>-t module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d2e9e72dce0fabd51e5cb93cdb7743931a2d19" translate="yes" xml:space="preserve">
          <source>-t,--to</source>
          <target state="translated">-t,--to</target>
        </trans-unit>
        <trans-unit id="39757b603166b52e1a1e2021e629c21418eee11a" translate="yes" xml:space="preserve">
          <source>-th subpattern, or undef if the subpattern did not match.</source>
          <target state="translated">-th子模式，如果子模式不匹配，则为undef。</target>
        </trans-unit>
        <trans-unit id="66000995bef80f7fce654adc5353777229997bce" translate="yes" xml:space="preserve">
          <source>-torture</source>
          <target state="translated">-torture</target>
        </trans-unit>
        <trans-unit id="2c2dcf44f1bc9aa15d180db1d30d26a50922272d" translate="yes" xml:space="preserve">
          <source>-u</source>
          <target state="translated">-u</target>
        </trans-unit>
        <trans-unit id="aaf1e4f6a10d49a5901590bb3b8c0dba1ef3ca8c" translate="yes" xml:space="preserve">
          <source>-utilities on path manually. They are installed in &lt;code&gt;$prefix/bin&lt;/code&gt; , here &lt;code&gt;$prefix&lt;/code&gt; is what you gave to</source>
          <target state="translated">-手动在路径上使用。它们安装在 &lt;code&gt;$prefix/bin&lt;/code&gt; ，这里 &lt;code&gt;$prefix&lt;/code&gt; 是您给的</target>
        </trans-unit>
        <trans-unit id="6b057029c4063bde864f6f94434aed99cf91301c" translate="yes" xml:space="preserve">
          <source>-utilities on path manually. They are installed in &lt;code&gt;$prefix/bin&lt;/code&gt;, here &lt;code&gt;$prefix&lt;/code&gt; is what you gave to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75262c839fe7bdce825dee598401d72dc8394722" translate="yes" xml:space="preserve">
          <source>-v</source>
          <target state="translated">-v</target>
        </trans-unit>
        <trans-unit id="55b84beaebd3dd9ce3fdbc2382374c7a228132cc" translate="yes" xml:space="preserve">
          <source>-w</source>
          <target state="translated">-w</target>
        </trans-unit>
        <trans-unit id="04728bd7fc7483a16ca722feb0ed8c18f1fc301a" translate="yes" xml:space="preserve">
          <source>-x module [ module ... ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fe7418deee5c61282eab45e5fe930c1cf1ab80" translate="yes" xml:space="preserve">
          <source>-z</source>
          <target state="translated">-z</target>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="46b9ed05b810c35c030b14df53138c9f8fb2464a" translate="yes" xml:space="preserve">
          <source>. (Equivalent to &lt;code&gt;&lt;a href=&quot;../functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">。（等效于 &lt;code&gt;&lt;a href=&quot;../functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b8d281ef9104c2b48d48df2a7cf5ddced0cf7e72" translate="yes" xml:space="preserve">
          <source>. (Equivalent to &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt;). For example:</source>
          <target state="translated">。（相当于 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(@array)&lt;/a&gt;&lt;/code&gt; ）。例如：</target>
        </trans-unit>
        <trans-unit id="94c582d1658acfd4933003032c4471f9c701f1c4" translate="yes" xml:space="preserve">
          <source>. (Equivalent to &lt;code&gt;scalar(@array)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a996d62cf71fd6ebf46de7b113603888dc7060a" translate="yes" xml:space="preserve">
          <source>. (Equivalent to &lt;code&gt;scalar(@array)&lt;/code&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694f35049a7ec5dc2b360d57bd881a28fa07da34" translate="yes" xml:space="preserve">
          <source>. (For the cleanup at program exit when the CLEANUP flag is set, this happens automatically.)</source>
          <target state="translated">。（对于在设置了CLEANUP标志时在程序退出时进行的清除，此操作会自动发生。）</target>
        </trans-unit>
        <trans-unit id="15693b683bd6294eb09618d3328be4ea6360e2ed" translate="yes" xml:space="preserve">
          <source>. (If you interrupt it, you would better reset &lt;code&gt;LineInfo&lt;/code&gt; to something &quot;interactive&quot;!)</source>
          <target state="translated">。（如果中断它，则最好将 &lt;code&gt;LineInfo&lt;/code&gt; 重置为&amp;ldquo;交互式&amp;rdquo;！）</target>
        </trans-unit>
        <trans-unit id="181e9a15b21b5b303a16988869863732a3c74ac2" translate="yes" xml:space="preserve">
          <source>. (If you interrupt it, you'd better reset &lt;code&gt;LineInfo&lt;/code&gt; to</source>
          <target state="translated">。（如果您将其中断，则最好将 &lt;code&gt;LineInfo&lt;/code&gt; 重置为</target>
        </trans-unit>
        <trans-unit id="4f2dc4447c7e1cbcca5316cceaa252e9049281ff" translate="yes" xml:space="preserve">
          <source>. (Perhaps, in retrospect, the &lt;code&gt;lib&lt;/code&gt; style should never have been supported, but it did seem like a nice idea at the time.)</source>
          <target state="translated">。（也许，回想起来，本来不应该支持 &lt;code&gt;lib&lt;/code&gt; 样式，但在当时看来确实是个不错的主意。）</target>
        </trans-unit>
        <trans-unit id="9f0b8aeca7daf268ae4d3b7f58d2547cb18964da" translate="yes" xml:space="preserve">
          <source>. (Setting BEGINLIBPATH to just &lt;code&gt;.&lt;/code&gt; is ignored by the OS/2 kernel.)</source>
          <target state="translated">。（设置BEGINLIBPATH只是 &lt;code&gt;.&lt;/code&gt; 由OS / 2内核忽略）。</target>
        </trans-unit>
        <trans-unit id="3cc75d93f4261d9260f179d2d05bf50125a26b04" translate="yes" xml:space="preserve">
          <source>. (The usage below indicates it is for integers, but it works for any type.) Use instead of these, since the C library ones force their argument to be what it is expecting, potentially leading to disaster. But also beware that this evaluates its argument twice, so no &lt;code&gt;x++&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd50589315deafe5011fdea5a89280d20abb432c" translate="yes" xml:space="preserve">
          <source>. (There are some exceptions and gotchas with this; see &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; for a full discussion.) The &lt;code&gt;[:digit:]&lt;/code&gt;, &lt;code&gt;[:word:]&lt;/code&gt;, and &lt;code&gt;[:space:]&lt;/code&gt; correspond to the familiar &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\w&lt;/code&gt;, and &lt;code&gt;\s&lt;/code&gt; character classes. To negate a POSIX class, put a &lt;code&gt;'^'&lt;/code&gt; in front of the name, so that,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db51a060293e1873f6869f67d8e79713a69ef25" translate="yes" xml:space="preserve">
          <source>. (There is a Perl script called &lt;b&gt;h2ph&lt;/b&gt; that comes with the Perl kit that may help you in this, but it's nontrivial.) SCALAR will be read and/or written depending on the FUNCTION; a C pointer to the string value of SCALAR will be passed as the third argument of the actual &lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt; call. (If SCALAR has no string value but does have a numeric value, that value will be passed rather than a pointer to the string value. To guarantee this to be true, add a &lt;code&gt;0&lt;/code&gt; to the scalar before using it.) The &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt; functions may be needed to manipulate the values of structures used by &lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbcb028023ba5ec4bf990fcf6eb37768723056e" translate="yes" xml:space="preserve">
          <source>. (There is a Perl script called &lt;b&gt;h2ph&lt;/b&gt; that comes with the Perl kit that may help you in this, but it's nontrivial.) SCALAR will be read and/or written depending on the FUNCTION; a C pointer to the string value of SCALAR will be passed as the third argument of the actual &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; call. (If SCALAR has no string value but does have a numeric value, that value will be passed rather than a pointer to the string value. To guarantee this to be true, add a &lt;code&gt;0&lt;/code&gt; to the scalar before using it.) The &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; functions may be needed to manipulate the values of structures used by &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">。 （Perl套件随附了一个名为&lt;b&gt;h2ph&lt;/b&gt;的Perl脚本，可以帮助您解决此问题，但这并不平凡。）SCALAR将根据功能进行读写。指向SCALAR字符串值的C指针将作为实际 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; 调用的第三个参数传递。 （如果SCALAR没有字符串值，但确实具有数字值，则将传递该值而不是指向字符串值的指针。为确保此值为真，请在使用标量之前将其添加 &lt;code&gt;0&lt;/code&gt; 。） &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 并 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 可能需要使用函数来操作 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; 使用的结构的值。</target>
        </trans-unit>
        <trans-unit id="cbf29a1e7711e856247e88a22d78403cd4097d96" translate="yes" xml:space="preserve">
          <source>. (There is a Perl script called &lt;b&gt;h2ph&lt;/b&gt; that comes with the Perl kit that may help you in this, but it's nontrivial.) SCALAR will be read and/or written depending on the FUNCTION; a C pointer to the string value of SCALAR will be passed as the third argument of the actual &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; call. (If SCALAR has no string value but does have a numeric value, that value will be passed rather than a pointer to the string value. To guarantee this to be true, add a &lt;code&gt;0&lt;/code&gt; to the scalar before using it.) The &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; functions may be needed to manipulate the values of structures used by &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">。 （Perl套件随附了一个名为&lt;b&gt;h2ph&lt;/b&gt;的Perl脚本，可以帮助您解决此问题，但这并不平凡。）SCALAR将根据功能进行读写。指向SCALAR字符串值的C指针将作为实际 &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; 调用的第三个参数传递。 （如果SCALAR没有字符串值，但确实具有数字值，则将传递该值而不是指向字符串值的指针。为确保此值为真，请在使用标量之前将其添加 &lt;code&gt;0&lt;/code&gt; 。） &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 并 &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 可能需要使用函数来操作 &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; 使用的结构的值。</target>
        </trans-unit>
        <trans-unit id="bc82a4dc120028594b84107495cbc0deaebe016c" translate="yes" xml:space="preserve">
          <source>. (Yes, Virginia, there &lt;b&gt;is&lt;/b&gt; a YACC grammar for Perl!) The job of the parser is to take your code and &quot;understand&quot; it, splitting it into sentences, deciding which operands go with which operators and so on.</source>
          <target state="translated">。（是的，弗吉尼亚州，那里&lt;b&gt;是&lt;/b&gt; Perl的一个YACC语法！）解析器的工作就是把你的代码和&amp;ldquo;理解&amp;rdquo;它，它分裂成句子，决定哪些操作数与运营商等去。</target>
        </trans-unit>
        <trans-unit id="690c1a79ec29589f49d7e8d06988c85b3fcab0f7" translate="yes" xml:space="preserve">
          <source>. (in these examples &lt;code&gt;&quot;S&quot;&lt;/code&gt; and &lt;code&gt;&quot;T&quot;&lt;/code&gt; are regular subexpressions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac2ef42eac4291ce9782faa9a407fa44d35265d" translate="yes" xml:space="preserve">
          <source>. (or</source>
          <target state="translated">。（要么</target>
        </trans-unit>
        <trans-unit id="236152725d137990a457e4cd09f9fd7d5e6c1e40" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; and &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt; explain the</source>
          <target state="translated">。&lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;和&lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt;解释了</target>
        </trans-unit>
        <trans-unit id="0b97909f09c9f763ca3dc7911d0df0016488e3ca" translate="yes" xml:space="preserve">
          <source>. &lt;b&gt;It is especially important to do this in modules to avoid penalizing all applications which use them.&lt;/b&gt;</source>
          <target state="translated">。&lt;b&gt;在模块中执行此操作尤为重要，以避免对使用它们的所有应用程序造成不利影响。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c84bd932de16eb29265e3c78e34c63425be61866" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;$&lt;/code&gt; is a shell prompt.</source>
          <target state="translated">。 &lt;code&gt;$&lt;/code&gt; 是一个shell提示符。</target>
        </trans-unit>
        <trans-unit id="a872501bd8eee376a90e33fd1da5d7ad22e00ebc" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;$Config{d_setlocale}&lt;/code&gt; is &lt;code&gt;'define'&lt;/code&gt; on OS/390 or z/OS.</source>
          <target state="translated">。 &lt;code&gt;$Config{d_setlocale}&lt;/code&gt; 在OS / 390或z / OS上为 &lt;code&gt;'define'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="689f2d81347c4e95450de6a6b67d57924dc6366c" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;OUTLIST&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt; keywords indicate that the C subroutine does not inspect the memory pointed by this parameter, but will write through this pointer to provide additional return values.</source>
          <target state="translated">。 &lt;code&gt;OUTLIST&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; 关键字指示C子例程不检查此参数指向的内存，但将通过此指针进行写操作以提供其他返回值。</target>
        </trans-unit>
        <trans-unit id="7fcdc380d7a23b700b238fab1e48c6a66ab49cbb" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;OUTLIST&lt;/code&gt;/&lt;code&gt;OUT&lt;/code&gt; keywords indicate that the C subroutine does not inspect the memory pointed by this parameter, but will write through this pointer to provide additional return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88901232fc748fdea60269bc910d226f97e1cb4d" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;Perl_runops_debug&lt;/code&gt; is used with DEBUGGING and &lt;code&gt;Perl_runops_standard&lt;/code&gt; is used otherwise. For fine control over the execution of the compile tree it is possible to provide your own runops function.</source>
          <target state="translated">。 &lt;code&gt;Perl_runops_debug&lt;/code&gt; 与DEBUGGING &lt;code&gt;Perl_runops_standard&lt;/code&gt; 使用，否则，与Perl_runops_standard一起使用。为了更好地控制编译树的执行，可以提供您自己的runops函数。</target>
        </trans-unit>
        <trans-unit id="84c7eee973f32ff4607b490bd51cf94d26808c4a" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;STDIN =&amp;gt; &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; turns the I/O transcoding completely off for that filehandle.</source>
          <target state="translated">。 &lt;code&gt;STDIN =&amp;gt; &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 完全关闭该文件句柄的I / O转码。</target>
        </trans-unit>
        <trans-unit id="ba96b39b2369555d32eba04ad56361c9a9156134" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;STDIN =&amp;gt; undef&lt;/code&gt; turns the I/O transcoding completely off for that filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e9affa2bbc7ae84004e12265378a617db34fa8" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;special&lt;/code&gt; (usually, but not always, a multicharacter mapping), is tried first.</source>
          <target state="translated">。首先尝试 &lt;code&gt;special&lt;/code&gt; （通常，但并非总是这样，多字符映射）。</target>
        </trans-unit>
        <trans-unit id="34b205465f826019a73312394da64a5166d0e847" translate="yes" xml:space="preserve">
          <source>. A &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; just gives temporary values to global (meaning package) variables. It does</source>
          <target state="translated">。一个 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 只是给临时值到全球（指包）变量。确实</target>
        </trans-unit>
        <trans-unit id="d92dc079e56072c4dd03f3a9fb094902868ede9d" translate="yes" xml:space="preserve">
          <source>. A &lt;code&gt;local&lt;/code&gt; just gives temporary values to global (meaning package) variables. It does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d7984adc37598924d34162f803580d6f8e4473" translate="yes" xml:space="preserve">
          <source>. A character class allows a set of possible characters, rather than just a single character, to match at a particular point in a regexp. You can define your own custom character classes. These are denoted by brackets &lt;code&gt;[...]&lt;/code&gt; , with the set of characters to be possibly matched inside. Here are some examples:</source>
          <target state="translated">。字符类允许一组可能的字符而不是单个字符在正则表达式的特定点进行匹配。您可以定义自己的自定义字符类。这些由括号表示 &lt;code&gt;[...]&lt;/code&gt; ，与所述的字符集被可能匹配的内部。这里有些例子：</target>
        </trans-unit>
        <trans-unit id="ea187136ae4e7e7c9da0097eccfa70e52bc2fedf" translate="yes" xml:space="preserve">
          <source>. A character class allows a set of possible characters, rather than just a single character, to match at a particular point in a regexp. You can define your own custom character classes. These are denoted by brackets &lt;code&gt;[...]&lt;/code&gt;, with the set of characters to be possibly matched inside. Here are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b629a81173e8b0555a45f0a8eab5759b801c2a12" translate="yes" xml:space="preserve">
          <source>. A code point is essentially the position of the character within the set of all possible Unicode characters, and thus in Perl, the term</source>
          <target state="translated">。代码点本质上是字符在所有可能的Unicode字符集中的位置，因此在Perl中，术语</target>
        </trans-unit>
        <trans-unit id="6967b877b0a6419ec120bcf48175f4179b1d1c97" translate="yes" xml:space="preserve">
          <source>. A module can install custom translations (inside the scope which &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;s the module) with the following magic incantation:</source>
          <target state="translated">。一个模块可以 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 以下魔咒来安装自定义转换（在使用该模块的范围内）：</target>
        </trans-unit>
        <trans-unit id="3fa39f453b27b8fde79ba1e37e6b3b686c6cd9fb" translate="yes" xml:space="preserve">
          <source>. A module can install custom translations (inside the scope which &lt;code&gt;use&lt;/code&gt;s the module) with the following magic incantation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654c9133d804ea9801de6c352e63b0d752c4c7a2" translate="yes" xml:space="preserve">
          <source>. A source stream is created when the Perl parser opens a file, it continues to exist as the source code is read into memory, and it is destroyed when Perl is finished parsing the file. If the parser encounters a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement in a source stream, a new and distinct stream is created just for that file.</source>
          <target state="translated">。当Perl解析器打开文件时，将创建一个源流，当源代码被读入内存时，该流将继续存在，并且在Perl完成对文件的解析后，该流将被销毁。如果解析器在源流中遇到 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 语句，则仅为该文件创建一个新的独特流。</target>
        </trans-unit>
        <trans-unit id="233c54b29b60b9e6d92cc6a4150b5bcf7faf5d59" translate="yes" xml:space="preserve">
          <source>. A source stream is created when the Perl parser opens a file, it continues to exist as the source code is read into memory, and it is destroyed when Perl is finished parsing the file. If the parser encounters a &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt; statement in a source stream, a new and distinct stream is created just for that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27177b505cdc14ed8afa64dfc9fa5c9897f8366d" translate="yes" xml:space="preserve">
          <source>. ASCII is used this way for most cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba2d601d95f584214b7a05377f233db7b020c5c" translate="yes" xml:space="preserve">
          <source>. Acts same as &lt;code&gt;find_encoding()&lt;/code&gt; but &lt;code&gt;mime_name()&lt;/code&gt; of returned object must match to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f1a39d92f2a76d4292eccf2b32f34370ade789" translate="yes" xml:space="preserve">
          <source>. Again, not using exactly two digits is a recipe for disaster, but you can use &lt;code&gt;\x{...}&lt;/code&gt; to specify any number of hex digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2efb2ba1e620dbacfedb286bb11ac9ae5ea4f4" translate="yes" xml:space="preserve">
          <source>. All regex engines must be able to correctly build such a structure in their &lt;a href=&quot;#comp&quot;&gt;&quot;comp&quot;&lt;/a&gt; routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be7e388b24fed423d29f693852a90533c3dce34" translate="yes" xml:space="preserve">
          <source>. All regex engines must be able to correctly build such a structure in their &lt;a href=&quot;#comp&quot;&gt;comp&lt;/a&gt; routine.</source>
          <target state="translated">。所有正则表达式引擎必须能够在其&lt;a href=&quot;#comp&quot;&gt;comp&lt;/a&gt;例程中正确构建这样的结构。</target>
        </trans-unit>
        <trans-unit id="0eb8ffacada74d7b0728dd1325a7888884aee218" translate="yes" xml:space="preserve">
          <source>. All the other functions are fairly simple wrappers which make it easier to call Perl subroutines in special cases. At the end of the day they will all call</source>
          <target state="translated">。所有其他函数都是相当简单的包装器，在特殊情况下，这使调用Perl子例程更加容易。在一天结束时，他们都会打电话</target>
        </trans-unit>
        <trans-unit id="27da16d87cc57fa070324d863cd8cedd53811405" translate="yes" xml:space="preserve">
          <source>. All versions of Berkeley DB are available there.</source>
          <target state="translated">。那里提供了所有版本的Berkeley DB。</target>
        </trans-unit>
        <trans-unit id="7101cbca81b1324605820165ddc0d74b9fe44d2a" translate="yes" xml:space="preserve">
          <source>. An empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233b57b3e77bae0ead5a8a30677ef0a77a1edf99" translate="yes" xml:space="preserve">
          <source>. And since the extension DLLs link with the Perl DLL, extension DLLs for older versions would load an older Perl DLL, and would most probably segfault (since the data in this DLL is not properly initialized).</source>
          <target state="translated">。并且由于扩展DLL与Perl DLL链接，所以用于较早版本的扩展DLL将加载较旧的Perl DLL，并且很可能会出现段错误（因为此DLL中的数据未正确初始化）。</target>
        </trans-unit>
        <trans-unit id="de259bd11ae330f9c68f383ed85ba6c2e159b450" translate="yes" xml:space="preserve">
          <source>. Any XS code should be in</source>
          <target state="translated">。任何XS代码都应位于</target>
        </trans-unit>
        <trans-unit id="75671be154b9c3d8b51b585074c5b9061967b6d3" translate="yes" xml:space="preserve">
          <source>. Any type of bracket not in the delimiter list is treated as an ordinary character.</source>
          <target state="translated">。不在定界符列表中的任何类型的方括号均视为普通字符。</target>
        </trans-unit>
        <trans-unit id="a6bdcf75e96f17cc2c4c3a8be735b514fb9c36ef" translate="yes" xml:space="preserve">
          <source>. As a binary operator, it has two children: the add operator, providing the result of &lt;code&gt;$b+$c&lt;/code&gt; , is uppermost on line 5, and the left hand side is on line 10.</source>
          <target state="translated">。作为二进制运算符，它有两个子运算符：提供 &lt;code&gt;$b+$c&lt;/code&gt; 结果的加运算符位于第5行的最上方，而左侧位于第10行。</target>
        </trans-unit>
        <trans-unit id="4b14231a260dc38bfc76eb01c0bd7737b636bfc6" translate="yes" xml:space="preserve">
          <source>. As a binary operator, it has two children: the add operator, providing the result of &lt;code&gt;$b+$c&lt;/code&gt;, is uppermost on line 5, and the left hand side is on line 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d4b5ccec1621f068b34a98df82654fe06d0665" translate="yes" xml:space="preserve">
          <source>. As a corollary, though the actual tree contains more nodes than our simplified example, the execution order is the same as in our example.</source>
          <target state="translated">。因此，尽管实际的树包含比简化示例更多的节点，但执行顺序与示例相同。</target>
        </trans-unit>
        <trans-unit id="c525726c99728c892ca019d38a86d797ed1a27e8" translate="yes" xml:space="preserve">
          <source>. As yet there is nothing useful you can do with the object at the perl level.</source>
          <target state="translated">。到目前为止，在perl级别上没有可用的对象。</target>
        </trans-unit>
        <trans-unit id="3a1ba0a96e2cd6c9d394a4472d471f9ff7cd31bc" translate="yes" xml:space="preserve">
          <source>. Assuming such an entry is found, various things then happen, depending on the value found:</source>
          <target state="translated">。假设找到了这样的条目，则根据找到的值发生各种事情：</target>
        </trans-unit>
        <trans-unit id="da93ec95ac544504e474beee8e0bb9e569ea1865" translate="yes" xml:space="preserve">
          <source>. Basic blocks are sections of code that are entered only in the beginning and exited only at the end. For example, a conditional jump starts a basic block. Basic block profiling usually works by</source>
          <target state="translated">。基本块是仅在开头输入且仅在结尾退出的代码段。例如，条件跳转将启动基本块。基本块分析通常通过</target>
        </trans-unit>
        <trans-unit id="922dde6fe40fcfb9ac9ff6d274634cfcd6f24ba2" translate="yes" xml:space="preserve">
          <source>. Because we want the program to continue after detecting this error, it is essential that the stack be tidied up by removing the</source>
          <target state="translated">。因为我们希望程序在检测到此错误后继续运行，所以必须通过删除堆栈来整理堆栈。</target>
        </trans-unit>
        <trans-unit id="38b8a4a88265debcef2bc8e73467237aa68e829c" translate="yes" xml:space="preserve">
          <source>. Both &lt;code&gt;sub1()&lt;/code&gt; and &lt;code&gt;sub2()&lt;/code&gt; access the global variable &lt;code&gt;$x&lt;/code&gt; , once to read and once to write. Depending on factors ranging from your thread implementation's scheduling algorithm to the phase of the moon, &lt;code&gt;$x&lt;/code&gt; can be 2 or 3.</source>
          <target state="translated">。无论 &lt;code&gt;sub1()&lt;/code&gt; 和 &lt;code&gt;sub2()&lt;/code&gt; 访问全局变量 &lt;code&gt;$x&lt;/code&gt; ，一次读取和一次写。根据从线程实现的调度算法到月球相位的各种因素， &lt;code&gt;$x&lt;/code&gt; 可以是2或3。</target>
        </trans-unit>
        <trans-unit id="9064d30b3dca30231b47ba8d42e2cf553d0ed288" translate="yes" xml:space="preserve">
          <source>. Both &lt;code&gt;sub1()&lt;/code&gt; and &lt;code&gt;sub2()&lt;/code&gt; access the global variable &lt;code&gt;$x&lt;/code&gt;, once to read and once to write. Depending on factors ranging from your thread implementation's scheduling algorithm to the phase of the moon, &lt;code&gt;$x&lt;/code&gt; can be 2 or 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998a439013a873f26870288508560a8fdb5f11eb" translate="yes" xml:space="preserve">
          <source>. But because of the nature of Macintosh paths, some additional possibilities are allowed to make using this routine give reasonable results for some common situations. In other words, you are also allowed to concatenate</source>
          <target state="translated">。但是由于Macintosh路径的性质，在某些常见情况下，允许使用此例程给出合理结果的某些其他可能性。换句话说，您也可以串联</target>
        </trans-unit>
        <trans-unit id="6917b39371bfc155816910776071467b756a0d87" translate="yes" xml:space="preserve">
          <source>. By default, the modification date of the input file will be used, or the current date if input comes from &lt;code&gt;STDIN&lt;/code&gt;, and will be based on UTC (so that the output will be reproducible regardless of local time zone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134d8dc01fba0b67a376310993c3d356147ceebd" translate="yes" xml:space="preserve">
          <source>. By default, this is set to the version of Perl you run &lt;b&gt;pod2man&lt;/b&gt; under. Setting this to the empty string will cause some *roff implementations to use the system default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd199e23140531c836914088d48f55487bf7e65c" translate="yes" xml:space="preserve">
          <source>. Can be used to make sure that the UTF-8 flag is on, so that &lt;code&gt;\w&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; work as Unicode on strings containing characters in the range 0x80-0xFF (on ASCII and derivatives).</source>
          <target state="translated">。可以用于确保UTF-8标志处于打开状态，以便 &lt;code&gt;\w&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; 在包含0x80-0xFF范围内的字符的字符串上（对于ASCII和派生类）用作Unicode。</target>
        </trans-unit>
        <trans-unit id="7b8d29b7aaa3a46be9be50380ab1ce3e867db600" translate="yes" xml:space="preserve">
          <source>. Chapters and page numbers are given using the following editions:</source>
          <target state="translated">。章节和页码使用以下版本给出：</target>
        </trans-unit>
        <trans-unit id="995d80ebe5e9c631b25033fd42a932b6fa61b6b7" translate="yes" xml:space="preserve">
          <source>. Child subroutines have &lt;code&gt;_&lt;/code&gt; and the name length appended, so constants with 10 character names would be in &lt;code&gt;constant_10&lt;/code&gt; with the default</source>
          <target state="translated">。子例程带有 &lt;code&gt;_&lt;/code&gt; 并附加了名称长度，因此具有10个字符名称的 &lt;code&gt;constant_10&lt;/code&gt; 将位于constant_10中，并且默认情况下</target>
        </trans-unit>
        <trans-unit id="c63971449e6c29f2a08f74ad23883b2558d36606" translate="yes" xml:space="preserve">
          <source>. Choice of American/British/Other spellings is left as an exercise for the author of each bit of documentation. When patching documentation, try to emulate the documentation around you, rather than changing the existing prose.</source>
          <target state="translated">。美国/英国/其他拼写的选择留给每份文件的作者作为练习。修补文档时，请尝试模仿您周围的文档，而不要更改现有的散文。</target>
        </trans-unit>
        <trans-unit id="7250762f6576023d602a07cc49bcc6fd77306c0e" translate="yes" xml:space="preserve">
          <source>. Common examples are &lt;code&gt;\t&lt;/code&gt; for a tab, &lt;code&gt;\n&lt;/code&gt; for a newline, &lt;code&gt;\r&lt;/code&gt; for a carriage return and &lt;code&gt;\a&lt;/code&gt; for a bell (or alert). If your string is better thought of as a sequence of arbitrary bytes, the octal escape sequence,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ab3092f216e58d0241856d21b4fdcc0acc1fa6" translate="yes" xml:space="preserve">
          <source>. Common examples are &lt;code&gt;\t&lt;/code&gt; for a tab, &lt;code&gt;\n&lt;/code&gt; for a newline, &lt;code&gt;\r&lt;/code&gt; for a carriage return and &lt;code&gt;\a&lt;/code&gt; for a bell (or alert). If your string is better thought of as a sequence of arbitrary bytes, the octal escape sequence, e.g., &lt;code&gt;\033&lt;/code&gt; , or hexadecimal escape sequence, e.g., &lt;code&gt;\x1B&lt;/code&gt; may be a more natural representation for your bytes. Here are some examples of escapes:</source>
          <target state="translated">。常见的示例是 &lt;code&gt;\t&lt;/code&gt; 用于制表符）， &lt;code&gt;\n&lt;/code&gt; 用于换行）， &lt;code&gt;\r&lt;/code&gt; 用于回车）和 &lt;code&gt;\a&lt;/code&gt; 用于响铃（或警报））。如果将字符串更好地看作是任意字节的序列，则八进制转义序列（例如 &lt;code&gt;\033&lt;/code&gt; ）或十六进制转义序列（例如 &lt;code&gt;\x1B&lt;/code&gt; 可能是您的字节的更自然的表示形式。以下是转义符的一些示例：</target>
        </trans-unit>
        <trans-unit id="3d7e30195a0de047a3242c04e44600623627b182" translate="yes" xml:space="preserve">
          <source>. Copy or link</source>
          <target state="translated">。复制或链接</target>
        </trans-unit>
        <trans-unit id="79825b16c77c06b44977118fac4eea014741e249" translate="yes" xml:space="preserve">
          <source>. Currently OS/2 support of threads is very preliminary.</source>
          <target state="translated">。当前OS / 2对线程的支持还很初步。</target>
        </trans-unit>
        <trans-unit id="135c9f2f36a34ddc0a2893c23665c762d2104afc" translate="yes" xml:space="preserve">
          <source>. Currently the maximum possible number of distinct regops is restricted to 256, with about a quarter already used.</source>
          <target state="translated">。当前，不同重拍的最大可能数量限制为256，其中已经使用了大约四分之一。</target>
        </trans-unit>
        <trans-unit id="f5a874263e45933953bf0ed324a58df137c7e708" translate="yes" xml:space="preserve">
          <source>. Currently, there are only two styles: &lt;code&gt;lib&lt;/code&gt; and</source>
          <target state="translated">。当前，只有两种样式： &lt;code&gt;lib&lt;/code&gt; 和</target>
        </trans-unit>
        <trans-unit id="53e5505050f1982d7363ce9cde826d9f92f57a58" translate="yes" xml:space="preserve">
          <source>. Decoding will terminate when $terminator (a string) appears in output.</source>
          <target state="translated">。当$ terminator（字符串）出现在输出中时，解码将终止。</target>
        </trans-unit>
        <trans-unit id="b4d5356abfd15d96c68ec478d2dd65b1348c5fec" translate="yes" xml:space="preserve">
          <source>. Determines how to map a Unicode character into a byte sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c539a141527ad47946cca8b46d791f7d164400" translate="yes" xml:space="preserve">
          <source>. Do not disturb that installation unless you really know what you are doing. If you remove the perl supplied with the OS, you will render some bits of your system inoperable. If you wish to install a newer version of perl, install it under a different prefix from /usr/perl5. Common prefixes to use are /usr/local and /opt/perl.</source>
          <target state="translated">。除非您真的知道自己在做什么，否则请勿打扰该安装。如果删除操作系统随附的perl，则会使系统的某些部分无法使用。如果要安装更新版本的perl，请使用与/ usr / perl5不同的前缀安装它。常用的前缀是/ usr / local和/ opt / perl。</target>
        </trans-unit>
        <trans-unit id="93b36a13a574d58a76b40f626c241af718c19914" translate="yes" xml:space="preserve">
          <source>. Don't use them in production code. Yet.</source>
          <target state="translated">。不要在生产代码中使用它们。然而。</target>
        </trans-unit>
        <trans-unit id="7fd37bab10468d9938f078309153e9437be5450a" translate="yes" xml:space="preserve">
          <source>. E.g.</source>
          <target state="translated">。例如</target>
        </trans-unit>
        <trans-unit id="25ce36fbbb17f8d1b0a4109d1371fa2f34186024" translate="yes" xml:space="preserve">
          <source>. Each has at least four hexdigits.</source>
          <target state="translated">。每个都有至少四个十六进制数字。</target>
        </trans-unit>
        <trans-unit id="b4404b6be911fb9ccd359c1128f3d94cffa4c329" translate="yes" xml:space="preserve">
          <source>. Each has at least four hexdigits. The codes may be preceded by a word enclosed in angle brackets, then a space, like &lt;code&gt;&amp;lt;compat&amp;gt; &lt;/code&gt; , giving the type of decomposition</source>
          <target state="translated">。每个都有至少四个十六进制数字。这些代码之前可以加上尖括号中的单词，然后是一个空格，例如 &lt;code&gt;&amp;lt;compat&amp;gt; &lt;/code&gt; ，给出分解的类型</target>
        </trans-unit>
        <trans-unit id="198cd1fd252c543c7320dd12efcd77fe03ea2db7" translate="yes" xml:space="preserve">
          <source>. Each has at least four hexdigits. The codes may be preceded by a word enclosed in angle brackets, then a space, like &lt;code&gt;&amp;lt;compat&amp;gt; &lt;/code&gt;, giving the type of decomposition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63141e3b2c36400b64267234149999ae2c55ef9a" translate="yes" xml:space="preserve">
          <source>. Either because it doesn't make sense to back-port that part of the API, or simply because it hasn't been implemented yet. Patches welcome!</source>
          <target state="translated">。要么因为向后移植API的那部分没有意义，要么仅仅是因为尚未实现。欢迎补丁！</target>
        </trans-unit>
        <trans-unit id="66213f4444d55cf06422645edab101d784d01cec" translate="yes" xml:space="preserve">
          <source>. Except on Windows, this will continue to use certain of the POSIX 2008 functions in some situations. If these are buggy, you can pass the following to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103da34daa28d7627bfd7c2b3ec90e61135c836c" translate="yes" xml:space="preserve">
          <source>. Finally, the &quot;.&quot; metacharacter matches any character except &quot;\n&quot; (unless you use &lt;code&gt;/s&lt;/code&gt;).</source>
          <target state="translated">。最后是&amp;ldquo;。&amp;rdquo; 元字符与除&amp;ldquo; \ n&amp;rdquo;以外的任何字符匹配（除非您使用 &lt;code&gt;/s&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dd14e4e8fe1dec95a597ebea05ec4794df85b973" translate="yes" xml:space="preserve">
          <source>. For compatibility with Unix usage, the type and version may also be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e6eee63986fc4ab76895ba12b2ec35a0403931" translate="yes" xml:space="preserve">
          <source>. For each thing you test, an &lt;code&gt;ok&lt;/code&gt; is printed. Simple. &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; interprets your test results to determine if you succeeded or failed (more on that later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d2c0dfaacb26c7f33418797db935878bbdde14" translate="yes" xml:space="preserve">
          <source>. For example,</source>
          <target state="translated">。例如，</target>
        </trans-unit>
        <trans-unit id="740611fcdc6870a843c2364c8e58c7ed97b112e4" translate="yes" xml:space="preserve">
          <source>. For example, a Korean Hangul syllable is considered a single logical character, but most often consists of three actual Unicode characters: a leading consonant followed by an interior vowel followed by a trailing consonant.</source>
          <target state="translated">。例如，朝鲜语的韩文音节被认为是单个逻辑字符，但通常由三个实际的Unicode字符组成：前导辅音，后跟内部元音，后跟辅音。</target>
        </trans-unit>
        <trans-unit id="cce03d7971acdd7f9bb1878ccf1c234bf855ffee" translate="yes" xml:space="preserve">
          <source>. For example, if you had tests in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042727f423f9fa6f93e1e3706fb37670c040c890" translate="yes" xml:space="preserve">
          <source>. For example, if your code would normally go into</source>
          <target state="translated">。例如，如果您的代码通常会进入</target>
        </trans-unit>
        <trans-unit id="4f3f25bc941622e7175e3969043f856eeb61133e" translate="yes" xml:space="preserve">
          <source>. For example, they may crash the Perl interpreter during execution, or may dump core on termination. Depending on the module and the requirements of your application, it may be possible to work around such difficulties.</source>
          <target state="translated">。例如，它们可能在执行期间使Perl解释器崩溃，或者可能在终止时转储核心。根据模块和应用程序的要求，可能会解决这些困难。</target>
        </trans-unit>
        <trans-unit id="b17ecac96b1adb18dd520ee9c0b9bae11aca3ab3" translate="yes" xml:space="preserve">
          <source>. For example:</source>
          <target state="translated">。例如：</target>
        </trans-unit>
        <trans-unit id="2fddca2af68b08afcb09b50d2195be9684be0734" translate="yes" xml:space="preserve">
          <source>. For exploring Unicode character names and character properties, see its</source>
          <target state="translated">。有关探索Unicode字符名称和字符属性的信息，请参见</target>
        </trans-unit>
        <trans-unit id="03024fb1bbe5faa78991a7214c34450e71dc2c32" translate="yes" xml:space="preserve">
          <source>. For other data types, or to examine return values, you'll need to manipulate the Perl stack. That's demonstrated in &lt;a href=&quot;#Fiddling-with-the-Perl-stack-from-your-C-program&quot;&gt;&quot;Fiddling with the Perl stack from your C program&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547c378c2449b9e81e8aa82ca93843bb7c621101" translate="yes" xml:space="preserve">
          <source>. For other data types, or to examine return values, you'll need to manipulate the Perl stack. That's demonstrated in &lt;a href=&quot;#Fiddling-with-the-Perl-stack-from-your-C-program&quot;&gt;Fiddling with the Perl stack from your C program&lt;/a&gt;.</source>
          <target state="translated">。对于其他数据类型，或检查返回值，您需要操纵Perl堆栈。&lt;a href=&quot;#Fiddling-with-the-Perl-stack-from-your-C-program&quot;&gt;用C程序中的Perl堆栈&lt;/a&gt;证明了这一点。</target>
        </trans-unit>
        <trans-unit id="cdc504208ff194a9a78aeb193e18917b2314acc4" translate="yes" xml:space="preserve">
          <source>. FreeBSD 7 and earlier has a bug where either approach sometimes returns an incorrect value (see &lt;a href=&quot;http://www.freebsd.org/cgi/query-pr.cgi?pr=35703&quot;&gt;http://www.freebsd.org/cgi/query-pr.cgi?pr=35703&lt;/a&gt; ). In these cases perl will fall back to the old behaviour of using C's &lt;code&gt;argv[0]&lt;/code&gt; value for &lt;code&gt;$^X&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acfc198f0b2223d41f4211f848b117ef3bae556" translate="yes" xml:space="preserve">
          <source>. FreeBSD 7 and earlier has a bug where either approach sometimes returns an incorrect value (see &lt;a href=&quot;http://www.freebsd.org/cgi/query-pr.cgi?pr=35703&quot;&gt;http://www.freebsd.org/cgi/query-pr.cgi?pr=35703&lt;/a&gt; ). In these cases perl will fall back to the old behaviour of using C's argv[0] value for &lt;code&gt;$^X&lt;/code&gt; .</source>
          <target state="translated">。FreeBSD 7和更早版本存在一个错误，其中的任何一种方法有时都会返回错误的值（请参阅&lt;a href=&quot;http://www.freebsd.org/cgi/query-pr.cgi?pr=35703&quot;&gt;http://www.freebsd.org/cgi/query-pr.cgi?pr=35703&lt;/a&gt;）。在这些情况下，perl会退回到使用C的argv [0]值 &lt;code&gt;$^X&lt;/code&gt; 的旧行为。</target>
        </trans-unit>
        <trans-unit id="776299a173a3d589b8f3795e2f8b4c589b03ee73" translate="yes" xml:space="preserve">
          <source>. Given the amount of time between releases of Perl the version that ships with Perl is quite likely to be out of date, so the most recent version can always be found on CPAN (see &lt;a href=&quot;perlmodlib#CPAN&quot;&gt;&quot;CPAN&quot; in perlmodlib&lt;/a&gt; for details), in the directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2b60383e9beeed5eccc01696d85bb58945bce4" translate="yes" xml:space="preserve">
          <source>. Given the amount of time between releases of Perl the version that ships with Perl is quite likely to be out of date, so the most recent version can always be found on CPAN (see &lt;a href=&quot;perlmodlib#CPAN&quot;&gt;CPAN in perlmodlib&lt;/a&gt; for details), in the directory</source>
          <target state="translated">。考虑到Perl发行之间的时间间隔，Perl附带的版本很可能已经过时，因此可以在目录中的&lt;a href=&quot;perlmodlib#CPAN&quot;&gt;CPAN&lt;/a&gt;上找到最新版本（有关详细信息，请参见perlmodlib中的CPAN）。</target>
        </trans-unit>
        <trans-unit id="6f9e68beb7f0b151bc8fceae81cb1b8ad5d7794e" translate="yes" xml:space="preserve">
          <source>. Having perl build itself would be impossible with</source>
          <target state="translated">。使用perl构建自身是不可能的</target>
        </trans-unit>
        <trans-unit id="1a7251116ddbed3c5631886b0448ee300597e327" translate="yes" xml:space="preserve">
          <source>. Here is a regexp with nested groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70c7aa2494034e63eb8b4f2b22846a01d30041b" translate="yes" xml:space="preserve">
          <source>. However, it is possible to</source>
          <target state="translated">。但是，有可能</target>
        </trans-unit>
        <trans-unit id="41c7fa0e40900a8664ba983241943a10f0848bc9" translate="yes" xml:space="preserve">
          <source>. However, your host system and Cygwin configuration will affect Perl's runtime behavior (see &lt;a href=&quot;#TEST&quot;&gt;&quot;TEST&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a0e55016332e0c5271c0854d6a9c26c89598fb" translate="yes" xml:space="preserve">
          <source>. However, your host system and Cygwin configuration will affect Perl's runtime behavior (see &lt;a href=&quot;#TEST&quot;&gt;TEST&lt;/a&gt;).</source>
          <target state="translated">。但是，您的主机系统和Cygwin配置将影响Perl的运行时行为（请参见&lt;a href=&quot;#TEST&quot;&gt;TEST&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="96283c0c3b8fe3d7cdfa1e152ea82dd4983135dd" translate="yes" xml:space="preserve">
          <source>. I suggest only to use this option to parse application-specific files written by humans (configuration files, resource files etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f863c23a93501fd973cdcb1d746f38bd8aa20cad" translate="yes" xml:space="preserve">
          <source>. If</source>
          <target state="translated">。如果</target>
        </trans-unit>
        <trans-unit id="7f0c2910442f1f0b575ce98071a1f0ff5753a782" translate="yes" xml:space="preserve">
          <source>. If &lt;code&gt;quoteHighBit&lt;/code&gt; is set, they will be quoted.</source>
          <target state="translated">。如果 &lt;code&gt;quoteHighBit&lt;/code&gt; 被设置，它们将被引用。</target>
        </trans-unit>
        <trans-unit id="da97ea613d41ccc8d570e6df5a8ec2180521c7e4" translate="yes" xml:space="preserve">
          <source>. If a group did not match, the associated backreference won't match either. (This can happen if the group is optional, or in a different branch of an alternation.) You can omit the &lt;code&gt;&quot;g&quot;&lt;/code&gt;, and write &lt;code&gt;&quot;\1&quot;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44fe27c9789df6d9edbedc8e0441cfadb796292" translate="yes" xml:space="preserve">
          <source>. If all that fails it &lt;code&gt;croak&lt;/code&gt; s.</source>
          <target state="translated">。如果全部失败，它就会发出 &lt;code&gt;croak&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14b2357e7fcb2bcf90785e6fef6ea540ef76b840" translate="yes" xml:space="preserve">
          <source>. If all that fails it &lt;code&gt;croak&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe4ccac3b5962271b48921e81142f21abf8b496" translate="yes" xml:space="preserve">
          <source>. If an object is a noun, then methods are its verbs (save, print, open).</source>
          <target state="translated">。如果对象是名词，则方法是其动词（保存，打印，打开）。</target>
        </trans-unit>
        <trans-unit id="d6d823fabc5313d54be7c53757154c9b35bde3e3" translate="yes" xml:space="preserve">
          <source>. If called as a class method, a new object is created; if called as an instance method, the object is reset to the state contained in</source>
          <target state="translated">。如果作为类方法调用，则会创建一个新对象；如果作为实例方法调用，则将对象重置为包含在其中的状态</target>
        </trans-unit>
        <trans-unit id="2be741d48d441b8c30f1f1c49c12f9fc308d28a8" translate="yes" xml:space="preserve">
          <source>. If defined, it should be a search list, each element of which specifies a location for &lt;code&gt;%ENV&lt;/code&gt; elements. If you tell Perl to read or set the element &lt;code&gt;$ENV{&lt;/code&gt;</source>
          <target state="translated">。如果已定义，它应该是一个搜索列表，其每个元素都指定 &lt;code&gt;%ENV&lt;/code&gt; 元素的位置。如果您告诉Perl读取或设置元素 &lt;code&gt;$ENV{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb88233b9470d06775dbd0f8abd50e567ad6f88f" translate="yes" xml:space="preserve">
          <source>. If found, Perl checks the start of the file for magic strings &lt;code&gt;&quot;#!&quot;&lt;/code&gt; and &lt;code&gt;&quot;extproc &quot;&lt;/code&gt; . If found, Perl uses the rest of the first line as the beginning of the command line to run this script. The only mangling done to the first line is extraction of arguments (currently up to 3), and ignoring of the path-part of the &quot;interpreter&quot; name if it can't be found using the full path.</source>
          <target state="translated">。如果找到，Perl将在文件的开头检查魔术字符串 &lt;code&gt;&quot;#!&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;extproc &quot;&lt;/code&gt; 。如果找到了，Perl将使用第一行的其余部分作为命令行的开头来运行此脚本。第一行的唯一处理是提取参数（当前最多3个），并且如果无法使用完整路径找到&amp;ldquo;解释器&amp;rdquo;名称的路径部分，则忽略该部分。</target>
        </trans-unit>
        <trans-unit id="ef1e5bf8cac901010071b6fa1937db5cb94871bc" translate="yes" xml:space="preserve">
          <source>. If found, Perl checks the start of the file for magic strings &lt;code&gt;&quot;#!&quot;&lt;/code&gt; and &lt;code&gt;&quot;extproc &quot;&lt;/code&gt;. If found, Perl uses the rest of the first line as the beginning of the command line to run this script. The only mangling done to the first line is extraction of arguments (currently up to 3), and ignoring of the path-part of the &quot;interpreter&quot; name if it can't be found using the full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7968febd03fe8bde1f86e5757cb445071be1de4f" translate="yes" xml:space="preserve">
          <source>. If it does not give an error -- wrong</source>
          <target state="translated">。如果没有给出错误-错误</target>
        </trans-unit>
        <trans-unit id="3246f36b641961e96375e555d041b988c40cef52" translate="yes" xml:space="preserve">
          <source>. If it has no repeat count or uses a '*', the number of available items is used.</source>
          <target state="translated">。如果没有重复计数或使用'*'，则使用可用项目数。</target>
        </trans-unit>
        <trans-unit id="cdd29a6866d7877a8bab1f7946635ac6580b7bf2" translate="yes" xml:space="preserve">
          <source>. If successful, the instance</source>
          <target state="translated">。如果成功，则实例</target>
        </trans-unit>
        <trans-unit id="c4f93a6d580968e7afb023f127bdef8253516411" translate="yes" xml:space="preserve">
          <source>. If the &lt;code&gt;/a&lt;/code&gt; regular expression modifier is in effect, it matches [0-9]. Otherwise, it matches anything that is matched by &lt;code&gt;\p{Digit}&lt;/code&gt; , which includes [0-9]. (An unlikely possible exception is that under locale matching rules, the current locale might not have &lt;code&gt;[0-9]&lt;/code&gt; matched by &lt;code&gt;\d&lt;/code&gt; , and/or might match other characters whose code point is less than 256. The only such locale definitions that are legal would be to match &lt;code&gt;[0-9]&lt;/code&gt; plus another set of 10 consecutive digit characters; anything else would be in violation of the C language standard, but Perl doesn't currently assume anything in regard to this.)</source>
          <target state="translated">。如果 &lt;code&gt;/a&lt;/code&gt; 正则表达式修饰符有效，则它匹配[0-9]。否则，它将匹配 &lt;code&gt;\p{Digit}&lt;/code&gt; 匹配的所有内容，其中包括[0-9]。（一个不太可能的例外是，在语言环境匹配规则下，当前语言环境可能没有与 &lt;code&gt;\d&lt;/code&gt; 匹配的 &lt;code&gt;[0-9]&lt;/code&gt; 和/或可能与代码点小于256的其他字符相匹配。唯一的此类语言环境定义是合法的是匹配 &lt;code&gt;[0-9]&lt;/code&gt; 加上另一组10个连续的数字字符；其他任何违反C语言标准的行为，但是Perl目前对此不承担任何责任。）</target>
        </trans-unit>
        <trans-unit id="34d095c4fc5388357c2c64a5e30566b16b7806a1" translate="yes" xml:space="preserve">
          <source>. If the &lt;code&gt;/a&lt;/code&gt; regular expression modifier is in effect, it matches [0-9]. Otherwise, it matches anything that is matched by &lt;code&gt;\p{Digit}&lt;/code&gt;, which includes [0-9]. (An unlikely possible exception is that under locale matching rules, the current locale might not have &lt;code&gt;[0-9]&lt;/code&gt; matched by &lt;code&gt;\d&lt;/code&gt;, and/or might match other characters whose code point is less than 256. The only such locale definitions that are legal would be to match &lt;code&gt;[0-9]&lt;/code&gt; plus another set of 10 consecutive digit characters; anything else would be in violation of the C language standard, but Perl doesn't currently assume anything in regard to this.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7f56f814a53f5d8a3417d988acd289ad7a8311" translate="yes" xml:space="preserve">
          <source>. If the argument is missing, or equal to the empty string, the state information will be read from STDIN.</source>
          <target state="translated">。如果参数丢失或等于空字符串，则将从STDIN中读取状态信息。</target>
        </trans-unit>
        <trans-unit id="5824b191dbb77148d2f73c4545651fad0017e95b" translate="yes" xml:space="preserve">
          <source>. If the argument is missing, or equal to the empty string, the state information will be written to STDOUT.</source>
          <target state="translated">。如果参数丢失，或者等于空字符串，则状态信息将被写入STDOUT。</target>
        </trans-unit>
        <trans-unit id="86c19918bb0e315fb37ff3bcb89d4d1d00e53177" translate="yes" xml:space="preserve">
          <source>. If the argument is missing, the object will continue using the same algorithm that was selected at creation.</source>
          <target state="translated">。如果缺少该参数，则对象将继续使用创建时选择的相同算法。</target>
        </trans-unit>
        <trans-unit id="ad394d00d49595ece3375d873bc65795f9a2a320" translate="yes" xml:space="preserve">
          <source>. If the value is &amp;gt; UV_MAX &lt;code&gt;grok_bin&lt;/code&gt; returns UV_MAX, sets &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; in the output flags, and writes the value to</source>
          <target state="translated">。如果值&amp;gt; UV_MAX，则 &lt;code&gt;grok_bin&lt;/code&gt; 返回UV_MAX，在输出标志中设置 &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; ，然后将值写入</target>
        </trans-unit>
        <trans-unit id="340acc0c90a3ff630e29f3732ec436ada4a5d8ab" translate="yes" xml:space="preserve">
          <source>. If the value is &amp;gt; UV_MAX &lt;code&gt;grok_hex&lt;/code&gt; returns UV_MAX, sets &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; in the output flags, and writes the value to</source>
          <target state="translated">。如果值&amp;gt; UV_MAX，则 &lt;code&gt;grok_hex&lt;/code&gt; 返回UV_MAX，在输出标志中设置 &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; ，然后将值写入</target>
        </trans-unit>
        <trans-unit id="d2fe051154b3bd8b24a4c3334242986da9165e62" translate="yes" xml:space="preserve">
          <source>. If the value is &amp;gt; UV_MAX &lt;code&gt;grok_oct&lt;/code&gt; returns UV_MAX, sets &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; in the output flags, and writes the value to</source>
          <target state="translated">。如果值&amp;gt; UV_MAX，则 &lt;code&gt;grok_oct&lt;/code&gt; 返回UV_MAX，在输出标志中设置 &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; ，并将该值写入</target>
        </trans-unit>
        <trans-unit id="206aba5c7d9a84ce157c9a5e9c114a73d70137fc" translate="yes" xml:space="preserve">
          <source>. If there is no single code point folding defined for</source>
          <target state="translated">。如果没有为</target>
        </trans-unit>
        <trans-unit id="1844efc2f3254e2a8d6a689f5eb6ab9ff69cba74" translate="yes" xml:space="preserve">
          <source>. If this makes the array larger then class's mapping of &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; should be returned for new positions.</source>
          <target state="translated">。如果这使数组更大，则应为新位置返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 的类映射。</target>
        </trans-unit>
        <trans-unit id="c3aca0699f7236e45654ffe7027a808f1c3c2b60" translate="yes" xml:space="preserve">
          <source>. If this makes the array larger then class's mapping of &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; should be returned for new positions. If the array becomes smaller then entries beyond count should be deleted.</source>
          <target state="translated">。如果这使数组更大，则应为新位置返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 的类映射。如果数组变小，则应删除超出计数的条目。</target>
        </trans-unit>
        <trans-unit id="08fb67d65bc5a9b5387592c9b07f875d13efe0ce" translate="yes" xml:space="preserve">
          <source>. If this makes the array larger then class's mapping of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; should be returned for new positions. If the array becomes smaller then entries beyond count should be deleted.</source>
          <target state="translated">。如果这使数组更大，则应为新位置返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 的类映射。如果数组变小，则应删除超出计数的条目。</target>
        </trans-unit>
        <trans-unit id="1e37729bd5e4487339f7d4fb9164549c3140fefc" translate="yes" xml:space="preserve">
          <source>. If this makes the array larger then class's mapping of &lt;code&gt;undef&lt;/code&gt; should be returned for new positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab97cd2cfab8913e7503a61e2eea4e88edee518" translate="yes" xml:space="preserve">
          <source>. If this makes the array larger then class's mapping of &lt;code&gt;undef&lt;/code&gt; should be returned for new positions. If the array becomes smaller then entries beyond count should be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b55cfc74642aa13a70757a2bc05c0c5ec795164" translate="yes" xml:space="preserve">
          <source>. If you are unsure about the proper location of a file that may have gotten copied while building the source distribution, consult the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dfc7aa5f4468ffdf4e181f7b588d8c5857bc31" translate="yes" xml:space="preserve">
          <source>. If you get into link386 prompts, press &lt;code&gt;Ctrl-C&lt;/code&gt; to exit.</source>
          <target state="translated">。如果进入link386提示符，请按 &lt;code&gt;Ctrl-C&lt;/code&gt; 退出。</target>
        </trans-unit>
        <trans-unit id="1e7886d9569f9834e6bdaa9aa8eb1f34132432b7" translate="yes" xml:space="preserve">
          <source>. If you have such data then you should set &lt;code&gt;$Storable::interwork_56_64bit&lt;/code&gt; to a true value to make this Storable read and write files with the old header. You should also migrate your data, or any older perl you are communicating with, to this current version of Storable.</source>
          <target state="translated">。如果您有这样的数据，则应将 &lt;code&gt;$Storable::interwork_56_64bit&lt;/code&gt; 设置为true值，以使此Storable可以使用旧标头读写文件。您还应该将数据或与之通信的任何较旧的Perl迁移到当前版本的Storable。</target>
        </trans-unit>
        <trans-unit id="d408ab7cf188c609a4c4840fba41a06a381a4651" translate="yes" xml:space="preserve">
          <source>. If your input lines might end in backslashes to indicate continuation, you want to skip ahead and get the next record.</source>
          <target state="translated">。如果您的输入行可能以反斜杠结尾以表示继续，则您想跳过并获取下一条记录。</target>
        </trans-unit>
        <trans-unit id="1e5ca4130c539ef91a8bd43fde83a107301c6560" translate="yes" xml:space="preserve">
          <source>. If your platform doesn't support &lt;code&gt;NaN&lt;/code&gt; 's then &lt;code&gt;NaN&lt;/code&gt; is just a string with numeric value 0.</source>
          <target state="translated">。如果您的平台不支持 &lt;code&gt;NaN&lt;/code&gt; ，则 &lt;code&gt;NaN&lt;/code&gt; 只是数字值为0的字符串。</target>
        </trans-unit>
        <trans-unit id="b6f709ff143f9f57f5b144c58bc6a764f7c6db40" translate="yes" xml:space="preserve">
          <source>. If your platform doesn't support &lt;code&gt;NaN&lt;/code&gt;'s then &lt;code&gt;NaN&lt;/code&gt; is just a string with numeric value 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ca80b61fe20e9969c2abb733817edd354f5d14" translate="yes" xml:space="preserve">
          <source>. In 2010, version 2 of the &lt;a href=&quot;../cpan/meta/spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; was released, which mandates JSON format for the metadata in order to overcome certain compatibility issues between YAML serializers and to avoid breaking older clients unable to handle a new version of the spec. The &lt;a href=&quot;../cpan/meta&quot;&gt;CPAN::Meta&lt;/a&gt; library is now standard for accessing old and new-style Meta files.</source>
          <target state="translated">。2010年，发布了&lt;a href=&quot;../cpan/meta/spec&quot;&gt;CPAN :: Meta ::: Spec&lt;/a&gt;版本2，该版本规定了元数据的JSON格式，以便克服YAML序列化程序之间的某些兼容性问题，并避免破坏无法处理新版本规范的旧客户端。在&lt;a href=&quot;../cpan/meta&quot;&gt;CPAN ::元&lt;/a&gt;库现在是访问新老风格的元文件标准。</target>
        </trans-unit>
        <trans-unit id="3d4088bf6eb687364405a322e155ff1cc18adb96" translate="yes" xml:space="preserve">
          <source>. In 2010, version 2 of the &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; was released, which mandates JSON format for the metadata in order to overcome certain compatibility issues between YAML serializers and to avoid breaking older clients unable to handle a new version of the spec. The &lt;a href=&quot;CPAN::Meta&quot;&gt;CPAN::Meta&lt;/a&gt; library is now standard for accessing old and new-style Meta files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c4b644424154ce3fe835b9230b290135cb482a" translate="yes" xml:space="preserve">
          <source>. In addition, if none of the functions in a list begin with the string &lt;b&gt;boot_&lt;/b&gt;, &lt;code&gt;Mksymlists&lt;/code&gt; will add a bootstrap function for that package, just as xsubpp does. (If a &lt;b&gt;boot_&amp;lt;pkg&amp;gt;&lt;/b&gt; function is present in the list, it is passed through unchanged.) If DL_FUNCS is not specified, it defaults to the bootstrap function for the extension specified in NAME.</source>
          <target state="translated">。另外，如果列表中的所有函数都不以字符串&lt;b&gt;boot_开头&lt;/b&gt;，则 &lt;code&gt;Mksymlists&lt;/code&gt; 将为该软件包添加一个引导函数，就像xsubpp一样。（如果列表中存在&lt;b&gt;boot_ &amp;lt;pkg&amp;gt;&lt;/b&gt;函数，则将其原封不动地传递。）如果未指定DL_FUNCS，则默认使用NAME中指定扩展名的引导程序函数。</target>
        </trans-unit>
        <trans-unit id="4f54f5e8eb8e964c049379a404dfcd3f689f59be" translate="yes" xml:space="preserve">
          <source>. In fact there are an exponential number of ways to partition a string as a function of its length. A regexp may get lucky and match early in the process, but if there is no match, Perl will try</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c632e42e7e1458b43dc1ad99933142821a596870" translate="yes" xml:space="preserve">
          <source>. In fact,</source>
          <target state="translated">。事实上，</target>
        </trans-unit>
        <trans-unit id="bce9b2b9f8142db7d9ce85b3fc070c1b985539e3" translate="yes" xml:space="preserve">
          <source>. In geographical terms</source>
          <target state="translated">。在地理上</target>
        </trans-unit>
        <trans-unit id="87c6ca62a4ff7bfc3de8b73b2cb60e71a538d7f6" translate="yes" xml:space="preserve">
          <source>. In the unlikely case this is not the correct root, it is possible to override this with a hint value or command line option. This will be used in subsequent tests for AFSness in the configure and test process.</source>
          <target state="translated">。在不太可能的情况下，这不是正确的根目录，可以用提示值或命令行选项覆盖它。在配置和测试过程中，将在以后的AFSness测试中使用它。</target>
        </trans-unit>
        <trans-unit id="dcbd585e38f590ba194a3793f06f22dab045cf12" translate="yes" xml:space="preserve">
          <source>. In this case all the above are true (but very simple) functions which call the underlying implementation.</source>
          <target state="translated">。在这种情况下，以上所有都是正确的（但非常简单）的函数，它们调用基础实现。</target>
        </trans-unit>
        <trans-unit id="d360c3eb53a832cf7747d52bf236e2b0eebf4a3e" translate="yes" xml:space="preserve">
          <source>. In those cases when you &lt;b&gt;require&lt;/b&gt; a &lt;b&gt;.ph&lt;/b&gt; file containing syntax errors, instead of the cryptic</source>
          <target state="translated">。在这种情况下，当您&lt;b&gt;需要&lt;/b&gt;一个包含语法错误而不是隐含语法的&lt;b&gt;.ph&lt;/b&gt;文件时</target>
        </trans-unit>
        <trans-unit id="7b376a04246f5e00596e857391b316083a63b99d" translate="yes" xml:space="preserve">
          <source>. In turn, this hooks into an XSUB,</source>
          <target state="translated">。反过来，这会钩接到XSUB中，</target>
        </trans-unit>
        <trans-unit id="3420f60f0bca96a2a73c405a1a85c20704cb3bc5" translate="yes" xml:space="preserve">
          <source>. Individual modules in</source>
          <target state="translated">。各个模块</target>
        </trans-unit>
        <trans-unit id="a59f10c336a81d1ca73f037a2b8c92f6334418a6" translate="yes" xml:space="preserve">
          <source>. Inspect the &lt;code&gt;install&lt;/code&gt; logs (in the example above</source>
          <target state="translated">。检查 &lt;code&gt;install&lt;/code&gt; 日志（在上面的示例中）</target>
        </trans-unit>
        <trans-unit id="25184bf63945467203d08f0de2a23c0f6dd54c05" translate="yes" xml:space="preserve">
          <source>. Instead, it will localize perl's notion of which filehandle &lt;code&gt;$.&lt;/code&gt; is currently aliased to.</source>
          <target state="translated">。相反，它将本地化​​perl关于哪个文件句柄 &lt;code&gt;$.&lt;/code&gt; 的概念。目前是别名。</target>
        </trans-unit>
        <trans-unit id="99f7f86480d4ea94cae9f5397fe0142ca2f2d10b" translate="yes" xml:space="preserve">
          <source>. It cannot be cleared or deleted; attempts to do so are silently ignored.</source>
          <target state="translated">。无法清除或删除它；这样做的尝试被默默地忽略了。</target>
        </trans-unit>
        <trans-unit id="e411fd2b458d1fe3f7731fd9a0f2621e9bb8a52f" translate="yes" xml:space="preserve">
          <source>. It couldn't possibly affect anything else, so no need to test beyond the single affected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9b899ea96554fef6c0b4c1d1118774a6a7f968" translate="yes" xml:space="preserve">
          <source>. It does suffer from the bug of mishandling newlines in pathnames, which you can fix if you follow the example under &lt;a href=&quot;#-0%5Boctal%2Fhexadecimal%5D&quot;&gt;-0&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f2139db1ad9c91528643fba773777f505b8d50" translate="yes" xml:space="preserve">
          <source>. It has the values &quot;unsigned char&quot; or &lt;code&gt;char&lt;/code&gt; .</source>
          <target state="translated">。它的值为&amp;ldquo; unsigned char&amp;rdquo;或 &lt;code&gt;char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6599a22ad2cd0d14a7e4506327cf7d32758c3e13" translate="yes" xml:space="preserve">
          <source>. It has the values &quot;unsigned char&quot; or &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358df296223d08b4fb71d6b3899c26c08092421e" translate="yes" xml:space="preserve">
          <source>. It helps to ensure your test program ran all the way through and didn't die or skip some tests. &lt;code&gt;ok 1&lt;/code&gt; &quot;The first test passed.&quot; &lt;code&gt;not ok 2&lt;/code&gt; &quot;The second test failed&quot;. Test::Simple helpfully prints out some extra commentary about your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f17a09d380724a3716b787a41ebd4613a73ee6f" translate="yes" xml:space="preserve">
          <source>. It is a plain '' if this is not the &lt;code&gt;GNU&lt;/code&gt; C library, or if the version is unknown.</source>
          <target state="translated">。如果这不是 &lt;code&gt;GNU&lt;/code&gt; C库，或者版本未知，则为纯文本。</target>
        </trans-unit>
        <trans-unit id="d9968fc8b94f6a056c1a481b9936f565e393c904" translate="yes" xml:space="preserve">
          <source>. It is also used instead of explicit</source>
          <target state="translated">。也用于代替显式</target>
        </trans-unit>
        <trans-unit id="d96c04f9a51ab5f437bd463e742a0003313be347" translate="yes" xml:space="preserve">
          <source>. It is conventionally invoked using the driver script &lt;b&gt;pod2man&lt;/b&gt;, but it can also be used directly.</source>
          <target state="translated">。通常使用驱动程序脚本&lt;b&gt;pod2man&lt;/b&gt;调用它，但也可以直接使用它。</target>
        </trans-unit>
        <trans-unit id="f513dd8d11fda24e9b49a220d530308d617cc39e" translate="yes" xml:space="preserve">
          <source>. It is defined primarily for backwards compatibility.</source>
          <target state="translated">。主要是为了向后兼容而定义的。</target>
        </trans-unit>
        <trans-unit id="e2436b894ff16e0565f80d082127a7c7776b277b" translate="yes" xml:space="preserve">
          <source>. It is mainly used by other Configure units.</source>
          <target state="translated">。它主要由其他配置单元使用。</target>
        </trans-unit>
        <trans-unit id="854700a6ac77224f1a5ecd22073ecc6739bef63d" translate="yes" xml:space="preserve">
          <source>. It is not for skipping genuine bugs (we'll get to that in a moment).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16adfccff5a0fd918744c61c6f8ff806837a3906" translate="yes" xml:space="preserve">
          <source>. It is passed the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b7a0d6e44f6ace7415a5296fb2dc7c29a44158" translate="yes" xml:space="preserve">
          <source>. It is primarily intended to be called from a message handler when they have been passed an exception they don't want to format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb63e0a589c7c79183e0aee5a650e0d846db99ab" translate="yes" xml:space="preserve">
          <source>. It is unrelated to English</source>
          <target state="translated">。与英语无关</target>
        </trans-unit>
        <trans-unit id="74da5ff365578d17c8b9c1fe91da0e3966c4c014" translate="yes" xml:space="preserve">
          <source>. It should not be used for any other general YAML parsing or generation task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38290ed6629f0ba79cc60e3f039d22be0b31883" translate="yes" xml:space="preserve">
          <source>. It will always be 0.</source>
          <target state="translated">。永远为0。</target>
        </trans-unit>
        <trans-unit id="c8ebeb64dfaf88dcb282fb968e8e06bb8fcc9b5f" translate="yes" xml:space="preserve">
          <source>. It will use the following search path to find default typemaps, with the rightmost typemap taking precedence.</source>
          <target state="translated">。它将使用以下搜索路径查找默认的类型图，其中最右边的类型图优先。</target>
        </trans-unit>
        <trans-unit id="47b5a45699abc71afa96d3e0e904645134ffab28" translate="yes" xml:space="preserve">
          <source>. It works similar to the result of the Unix command</source>
          <target state="translated">。它的工作原理类似于Unix命令的结果</target>
        </trans-unit>
        <trans-unit id="5a643ab8daccf23ddaa3fb22633cc5ec24e871a4" translate="yes" xml:space="preserve">
          <source>. It'll work similarly for the second argument, but the third will be loaded as a file first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf942d7c5a7a7cc8b5f51dca65695a4b4f21342" translate="yes" xml:space="preserve">
          <source>. It's an alternative to &lt;code&gt;make test&lt;/code&gt; .</source>
          <target state="translated">。这是 &lt;code&gt;make test&lt;/code&gt; 的替代方法。</target>
        </trans-unit>
        <trans-unit id="d08b15eaba20ae4ffc714d0b24aa505e603f8dee" translate="yes" xml:space="preserve">
          <source>. It's an alternative to &lt;code&gt;make test&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65c423102d4b2bb387d6ce7ac29cea0b802bdc1" translate="yes" xml:space="preserve">
          <source>. Just follow the instructions, and 99% of the installation blues would go away.</source>
          <target state="translated">。只需按照说明进行操作，即可消除99％的安装问题。</target>
        </trans-unit>
        <trans-unit id="f878690035ca0e58b744826cf63a8295cfc9f70e" translate="yes" xml:space="preserve">
          <source>. Later we'll see that this specification can contain more than just the option name. The reference to the variable is called the option</source>
          <target state="translated">。稍后，我们将看到该规范不仅可以包含选项名称。对变量的引用称为选项</target>
        </trans-unit>
        <trans-unit id="8885267f0ed54b9a7692c1088a926a7ac95563d7" translate="yes" xml:space="preserve">
          <source>. MODE is usually a literal string comprising special characters that define the intended I/O role of the filehandle being created: whether it's read-only, or read-and-write, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bea9eaa9bee5e3756e1d73231b1234be2ae6f1" translate="yes" xml:space="preserve">
          <source>. Mac OS support by Paul Schinder &amp;lt;schinder@pobox.com&amp;gt; and Thomas Wegner &amp;lt;wegner_thomas@yahoo.com&amp;gt;.</source>
          <target state="translated">。Paul Schinder &amp;lt;schinder@pobox.com&amp;gt;和Thomas Wegner &amp;lt;wegner_thomas@yahoo.com&amp;gt;对Mac OS的支持。</target>
        </trans-unit>
        <trans-unit id="fbb2a7d7d50b2bcb78d660bec6afabd731e0db6a" translate="yes" xml:space="preserve">
          <source>. Make sure each of those</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2af23a9a799aeb1d6f76fd39a5251808a1a50e8" translate="yes" xml:space="preserve">
          <source>. More information on how to write good perldelta entries is available in the &lt;code&gt;Style&lt;/code&gt; section of</source>
          <target state="translated">。如何写好perldelta项目的更多信息可在 &lt;code&gt;Style&lt;/code&gt; 的部分</target>
        </trans-unit>
        <trans-unit id="5fa79d5fe358db59b924db9e3afc91c8c4c97989" translate="yes" xml:space="preserve">
          <source>. None of the other processing of &lt;a href=&quot;perlapi#pad_add_name_pvn&quot;&gt;pad_add_name_pvn in perlapi&lt;/a&gt; is done. Returns the offset of the allocated pad slot.</source>
          <target state="translated">。&lt;a href=&quot;perlapi#pad_add_name_pvn&quot;&gt;perlapi中pad_add_name_pvn&lt;/a&gt;的其他处理均未完成。返回分配的焊盘插槽的偏移量。</target>
        </trans-unit>
        <trans-unit id="d7039f806afb4a2ecb55b3bcaacedf3640a4cd77" translate="yes" xml:space="preserve">
          <source>. Note that all names passed to the user's</source>
          <target state="translated">。请注意，所有传递给用户的名称</target>
        </trans-unit>
        <trans-unit id="9be56d94b765d15db97085ae687fb211fbd1c96d" translate="yes" xml:space="preserve">
          <source>. Note that all names passed to the user's &lt;code&gt;wanted()&lt;/code&gt; function are still tainted. If this option is used while not in taint-mode, &lt;code&gt;untaint&lt;/code&gt; is a no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bf0a4269dea3ad18ee10b385dbdaef11b74bf4" translate="yes" xml:space="preserve">
          <source>. Note that before these macros were added, Perl internals used to directly use character literals, so you may occasionally come across old code or documentation referring to 'U' magic rather than &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; for example.</source>
          <target state="translated">。请注意，在添加这些宏之前，Perl内部组件曾用于直接使用字符文字，因此，您有时可能会遇到涉及&amp;ldquo; U&amp;rdquo;魔术而不是例如 &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; 的旧代码或文档。</target>
        </trans-unit>
        <trans-unit id="d06789deb8b5a7ca71d14547a85c1b9baded3394" translate="yes" xml:space="preserve">
          <source>. Note that extension code should</source>
          <target state="translated">。请注意，扩展代码应</target>
        </trans-unit>
        <trans-unit id="12457e722ccfc654c8bad69405188c5af0f50ae7" translate="yes" xml:space="preserve">
          <source>. Now we can add our tests to the end. First, we'll test that the &lt;code&gt;U&lt;/code&gt; does indeed create Unicode strings.</source>
          <target state="translated">。现在，我们可以将测试添加到末尾。首先，我们将测试 &lt;code&gt;U&lt;/code&gt; 是否确实创建了Unicode字符串。</target>
        </trans-unit>
        <trans-unit id="95d8b82e403a24e94a8215ff5138e9129ce71d0a" translate="yes" xml:space="preserve">
          <source>. Of course, it'll need to be executable first, so &lt;code&gt;chmod 755 script.pl&lt;/code&gt; (under Unix).</source>
          <target state="translated">。当然，它首先需要是可执行的，因此是 &lt;code&gt;chmod 755 script.pl&lt;/code&gt; （在Unix下）。</target>
        </trans-unit>
        <trans-unit id="7c64ceea87287666f57ddc1224318c09f3091913" translate="yes" xml:space="preserve">
          <source>. On building, &lt;code&gt;Unicode::Collate::Locale&lt;/code&gt; doesn't require any of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537b462bbd527cd649466c0e0e150e64a30e9e53" translate="yes" xml:space="preserve">
          <source>. On operating systems which do not require a specific extension for executable files, this variable is empty.</source>
          <target state="translated">。在不需要特定扩展名的可执行文件的操作系统上，此变量为空。</target>
        </trans-unit>
        <trans-unit id="55026f126a81b220971a849c6c2cb68bb628095e" translate="yes" xml:space="preserve">
          <source>. Once the enclosing &quot;&amp;lt; ... &amp;gt;&quot; is removed, this is passed (more or less) unchanged to &lt;code&gt;File::Glob&lt;/code&gt; to carry out a file match.</source>
          <target state="translated">。一旦删除了封闭的&amp;ldquo; &amp;lt;...&amp;gt;&amp;rdquo;，则将其（或多或少）不变地传递到 &lt;code&gt;File::Glob&lt;/code&gt; 以执行文件匹配。</target>
        </trans-unit>
        <trans-unit id="96e2b5e9bec44f8daa5c9f8eb8f20596cf31be4b" translate="yes" xml:space="preserve">
          <source>. One more rule is needed to understand how a match is determined for the whole regular expression: a match at an earlier position is always better than a match at a later position.</source>
          <target state="translated">。还需要一条规则来了解如何确定整个正则表达式的匹配：早位置的匹配总是比后位置的匹配更好。</target>
        </trans-unit>
        <trans-unit id="4160bde3f72822338469aa8433b4b5304c3dcc97" translate="yes" xml:space="preserve">
          <source>. One way to do this on some systems is to set the environment variable &lt;code&gt;LD_RUN_PATH&lt;/code&gt; to the directory that will be the final location of the shared</source>
          <target state="translated">。在某些系统上执行此操作的一种方法是将环境变量 &lt;code&gt;LD_RUN_PATH&lt;/code&gt; 设置为目录，该目录将是共享目录的最终位置。</target>
        </trans-unit>
        <trans-unit id="7be1ea0808dfeddc5a5ce7a2663e5bdfc11b4e99" translate="yes" xml:space="preserve">
          <source>. Otherwise it matches any character but &lt;code&gt;\n&lt;/code&gt; .</source>
          <target state="translated">。否则，它匹配 &lt;code&gt;\n&lt;/code&gt; 任何字符。</target>
        </trans-unit>
        <trans-unit id="f01c61f87df64d743068995bf6071556f53df117" translate="yes" xml:space="preserve">
          <source>. Otherwise it matches any character but &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3e86c0fe5882b9760b15a3c30fea7570aedff9" translate="yes" xml:space="preserve">
          <source>. Otherwise, fall back on this implementation. The main use of this function is catching &lt;code&gt;-0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6969174e97789c0a8cbd61099ffc2a91dee5f32" translate="yes" xml:space="preserve">
          <source>. Otherwise, if the</source>
          <target state="translated">。否则，如果</target>
        </trans-unit>
        <trans-unit id="41e0e8c07d38f87111e8a525a5b3f67ff5e752ad" translate="yes" xml:space="preserve">
          <source>. Otherwise, it returns the value of &lt;code&gt;$@&lt;/code&gt; associated with the thread's execution status in its &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">。否则，它将返回与 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 上下文中的线程执行状态关联的 &lt;code&gt;$@&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5cc52cd40e11013f1b8d1c76e4bccb76648bab37" translate="yes" xml:space="preserve">
          <source>. Otherwise, it returns the value of &lt;code&gt;$@&lt;/code&gt; associated with the thread's execution status in its &lt;code&gt;eval&lt;/code&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e71ea4d22f53b2eb30fcb146b06118897444ae" translate="yes" xml:space="preserve">
          <source>. Over the years, it has become standard to keep this information in one or more CPAN Meta files distributed with each distribution.</source>
          <target state="translated">。多年来，将这些信息保存在随每个发行版一起分发的一个或多个CPAN元文件中已成为标准。</target>
        </trans-unit>
        <trans-unit id="06cf8affd89236a0eecaaa78bccddd732862b6d8" translate="yes" xml:space="preserve">
          <source>. Page numbers derive from the hardcover edition, first published in 1983 by George Allen &amp;amp; Unwin; no page numbers changed for the special 3-volume omnibus edition of 2002 or the various trade-paper editions, all again now by Harper Collins or Houghton Mifflin.</source>
          <target state="translated">。页码来自精装版，该版由乔治&amp;middot;艾伦＆温温（George Allen＆Unwin）于1983年首次出版；对于2002年的特殊3册综合版本或各种商业纸版，页码没有更改，现在由Harper Collins或Houghton Mifflin再次更改。</target>
        </trans-unit>
        <trans-unit id="d4f4aa3da68de58187b7c018e5336cbc71134a54" translate="yes" xml:space="preserve">
          <source>. People who are interested in how to localize things in the containing scope should take a look there too.</source>
          <target state="translated">。对如何在包含范围内进行本地化感兴趣的人也应该去看看。</target>
        </trans-unit>
        <trans-unit id="c2b14d3f3d78674e56bc67813f86b24d2db0c711" translate="yes" xml:space="preserve">
          <source>. Perhaps what we ought to do is take the hard-wired value from</source>
          <target state="translated">。也许我们应该做的就是从</target>
        </trans-unit>
        <trans-unit id="1bb197e77339ac738cd4c23655f60abef9ee8faa" translate="yes" xml:space="preserve">
          <source>. Perl does not do this for you. The &lt;code&gt;passwd&lt;/code&gt; is one-way hashed garble, not clear text, and may not be unhashed save by brute-force guessing. Secure systems use more a more secure hashing than DES. On systems supporting shadow password systems, Perl automatically returns the shadow password entry when called by a suitably empowered user, even if your underlying vendor-provided C library was too short-sighted to realize it should do this.</source>
          <target state="translated">。Perl不会为您执行此操作。在 &lt;code&gt;passwd&lt;/code&gt; 文件是单向散列断章取义，不清晰的文本，并且可能不会被蛮力被散列的保存猜测。安全系统比DES使用更安全的哈希。在支持影子密码系统的系统上，即使您的底层供应商提供的C库太短视了以至于无法意识到应该执行此操作，当Perl被适当授权的用户调用时，Perl也会自动返回影子密码条目。</target>
        </trans-unit>
        <trans-unit id="c2d4fd11e3c3c2ef4d3668c3eb6e94ff499b67de" translate="yes" xml:space="preserve">
          <source>. Perl isn't much like other computer languages; it's highly context sensitive at times, it can be tricky to work out what sort of token something is, or where a token ends. As such, there's a lot of interplay between the tokeniser and the parser, which can get pretty frightening if you're not used to it.</source>
          <target state="translated">。Perl与其他计算机语言不太相似。它有时是高度上下文相关的，弄清楚什么是令牌或令牌在何处结束可能很棘手。因此，令牌处理程序和解析器之间存在很多相互作用，如果您不习惯的话，这可能会令人恐惧。</target>
        </trans-unit>
        <trans-unit id="1515508cadc5797cd8ab959f1ca3339e49888887" translate="yes" xml:space="preserve">
          <source>. Please remove this variable and put &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&quot;&lt;code&gt;PERL_SH_DIR&lt;/code&gt;&quot;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba1355f82c45a8fef21484f747404a76ae86f23" translate="yes" xml:space="preserve">
          <source>. Please remove this variable and put &lt;code&gt;&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">。请删除此变量，然后 &lt;code&gt;&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f1457da5e48adfeddc76831c3066a31d1b57f2e" translate="yes" xml:space="preserve">
          <source>. Pod processors should warn about this being deprecated syntax.</source>
          <target state="translated">。Pod处理器应警告不要使用此语法。</target>
        </trans-unit>
        <trans-unit id="564d3ae644e1bfdb8a791d48b6f916dc882219b0" translate="yes" xml:space="preserve">
          <source>. Prior to Perl 5.26, &lt;code&gt;.&lt;/code&gt; -which represents the current directory, was included in &lt;code&gt;@INC&lt;/code&gt;; it has been removed. This change in behavior is documented in &lt;a href=&quot;perlrun#PERL_USE_UNSAFE_INC&quot;&gt;&lt;code&gt;PERL_USE_UNSAFE_INC&lt;/code&gt;&lt;/a&gt; and it is not recommended that &lt;code&gt;.&lt;/code&gt; be re-added to &lt;code&gt;@INC&lt;/code&gt;. If you need to modify &lt;code&gt;@INC&lt;/code&gt; at runtime, you should use the &lt;code&gt;use lib&lt;/code&gt; pragma to get the machine-dependent library properly loaded as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d896e0ef56e1d24740ae6e5074e45f9bb5ff12" translate="yes" xml:space="preserve">
          <source>. Programs must be prepared to deal with</source>
          <target state="translated">。程序必须准备好应对</target>
        </trans-unit>
        <trans-unit id="46be1dc32b301883ac9f960a586983088faefae1" translate="yes" xml:space="preserve">
          <source>. Programs using this variable must be prepared to deal with</source>
          <target state="translated">。使用此变量的程序必须准备好处理</target>
        </trans-unit>
        <trans-unit id="cd020a4f288e77d95d879b2ff99123114284aae5" translate="yes" xml:space="preserve">
          <source>. Programs using this variable must be prepared to deal with filename expansion.</source>
          <target state="translated">。使用此变量的程序必须准备好处理文件名扩展。</target>
        </trans-unit>
        <trans-unit id="16f0fa2c6457ccd5a1bef736f8b2f051584ca655" translate="yes" xml:space="preserve">
          <source>. Rarely needed.</source>
          <target state="translated">。很少需要。</target>
        </trans-unit>
        <trans-unit id="3fbe3d58c554ed4c1d1d1b42c9e80cc50c48ac8a" translate="yes" xml:space="preserve">
          <source>. Recall, that if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6a7d315e0a4101b03879bac7a3a3c3731c445f" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no matching</source>
          <target state="translated">。如果不匹配，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="086cca4baa9483c73d9d398b13433901fa57fcb1" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;undef&lt;/code&gt; if no matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bd24a798e55f262ddde9c7e4ea74e8f691a79b" translate="yes" xml:space="preserve">
          <source>. Returns the new file position, or -1 if an error occurs.</source>
          <target state="translated">。返回新文件的位置；如果发生错误，则返回-1。</target>
        </trans-unit>
        <trans-unit id="e4717fd7dfaf37fd66e5c1a6c2440f1a17feb75b" translate="yes" xml:space="preserve">
          <source>. Roles are relatively new to Perl, but have become rather popular. Roles are &lt;b&gt;applied&lt;/b&gt; to classes. Sometimes we say that classes &lt;b&gt;consume&lt;/b&gt; roles.</source>
          <target state="translated">。对于Perl而言，角色相对较新，但已变得相当流行。角色&lt;b&gt;应用于&lt;/b&gt;类。有时我们说类&lt;b&gt;消耗&lt;/b&gt;角色。</target>
        </trans-unit>
        <trans-unit id="85adbd9d6de0bb6d69a95e5ac09cd801db6ef4b2" translate="yes" xml:space="preserve">
          <source>. Running the profiled version of Perl will create an output file called</source>
          <target state="translated">。运行Perl的配置文件版本将创建一个名为</target>
        </trans-unit>
        <trans-unit id="e550a655605c6f097b311744bc2ad2d1f7e02cd4" translate="yes" xml:space="preserve">
          <source>. Save your work and repeat...</source>
          <target state="translated">。保存您的工作并重复...</target>
        </trans-unit>
        <trans-unit id="7143f409794e5396a72f2a6b101a534fc0b07928" translate="yes" xml:space="preserve">
          <source>. See</source>
          <target state="translated">。看到</target>
        </trans-unit>
        <trans-unit id="bee7c9ef88ceab887add88fe362e6d8481b88a47" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;#How-do-I-add-a-directory-to-my-include-path-%28%40INC%29-at-runtime%3F&quot;&gt;&quot;How do I add a directory to my include path (@INC) at runtime?&quot;&lt;/a&gt; for details on how to run your newly installed modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc553c5d634355fec3724ccd2a074361b8ba50a" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;#How-do-I-add-a-directory-to-my-include-path-(%40INC)-at-runtime%3f&quot;&gt;How do I add a directory to my include path (@INC) at runtime?&lt;/a&gt; for details on how to run your newly installed modules.</source>
          <target state="translated">。请参阅&lt;a href=&quot;#How-do-I-add-a-directory-to-my-include-path-(%40INC)-at-runtime%3f&quot;&gt;如何在运行时将目录添加到包含路径（@INC）？&lt;/a&gt;有关如何运行新安装的模块的详细信息。</target>
        </trans-unit>
        <trans-unit id="ddb90c9c599d24903a474a87fa3a2bc0c13144bb" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba073e24f104c94d46d8d40d53b310f205b091a4" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">。请参阅&lt;a href=&quot;#Prerequisites&quot;&gt;先决条件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d37a6f9d50749984cd729b9498de5dfbc561c7a6" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;#Using-call_sv&quot;&gt;&quot;Using call_sv&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108cb27bf7c8d7031e4a5603b633fe94497e91da" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;#sv_magic&quot;&gt;sv_magic&lt;/a&gt;.</source>
          <target state="translated">。参见&lt;a href=&quot;#sv_magic&quot;&gt;sv_magic&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1981f0c642c0f907ef847d7c17536d36f0ee8920" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;../../perlref&quot;&gt;perlref&lt;/a&gt; for more details on the mechanics of</source>
          <target state="translated">。参见&lt;a href=&quot;../../perlref&quot;&gt;perlref&lt;/a&gt;了解更多有关</target>
        </trans-unit>
        <trans-unit id="2b3ef3b8c9c5702c57fea51845f0a204e6ec73ba" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;Encode::Guess&quot;&gt;Encode::Guess&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10889f2e8189c79b1f86ade1e2c38e0b8038ce1d" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;charnames&quot;&gt;charnames&lt;/a&gt;.</source>
          <target state="translated">。请参阅&lt;a href=&quot;charnames&quot;&gt;字符名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7c3fb52af08419ccda7242724b917a43e565a5f" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for more details on the mechanics of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065f520588be974c5594d0397ea3e63f2dce18b1" translate="yes" xml:space="preserve">
          <source>. See AUTHORS for a full list of people involved. For any questions, send mail to</source>
          <target state="translated">。有关参与人员的完整列表，请参见作者。如有任何疑问，请发送邮件至</target>
        </trans-unit>
        <trans-unit id="497d401abf0f6a33f3af121175866d056f439fb1" translate="yes" xml:space="preserve">
          <source>. See also &lt;a href=&quot;#sleep-%28-%24floating_seconds-%29&quot;&gt;&lt;code&gt;Time::HiRes::sleep()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#usleep-%28-%24useconds-%29&quot;&gt;&lt;code&gt;Time::HiRes::usleep()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#clock_nanosleep-%28-%24which%2C-%24nanoseconds%2C-%24flags-%3D-0%29&quot;&gt;&lt;code&gt;clock_nanosleep()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2199e77491bf38a33dfa905f96269e305f46f1c" translate="yes" xml:space="preserve">
          <source>. See also &lt;a href=&quot;#sleep-%28-%24floating_seconds-%29&quot;&gt;&lt;code&gt;Time::HiRes::sleep()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#usleep-%28-%24useconds-%29&quot;&gt;&lt;code&gt;Time::HiRes::usleep()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#nanosleep-%28-%24nanoseconds-%29&quot;&gt;&lt;code&gt;Time::HiRes::nanosleep()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1f5ea9b95dca4e87c6eca7c63129285f89aa83" translate="yes" xml:space="preserve">
          <source>. See also &lt;a href=&quot;#sleep-%28-%24floating_seconds-%29&quot;&gt;&lt;code&gt;Time::HiRes::sleep()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#clock_nanosleep-%28-%24which%2C-%24nanoseconds%2C-%24flags-%3D-0%29&quot;&gt;&lt;code&gt;clock_nanosleep()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da2f25ee6e37cb910fd70d32927a95fc37e978b" translate="yes" xml:space="preserve">
          <source>. See also &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; , &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; , and &lt;code&gt;Time::HiRes::clock_nanosleep()&lt;/code&gt; .</source>
          <target state="translated">。另请参见 &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; ， &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; 和 &lt;code&gt;Time::HiRes::clock_nanosleep()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="526666d33c6dd6f0edce27a1b78dfa10ea26ace5" translate="yes" xml:space="preserve">
          <source>. See also &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; , &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; , and &lt;code&gt;Time::HiRes::nanosleep()&lt;/code&gt; .</source>
          <target state="translated">。另请参见 &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; ， &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; 和 &lt;code&gt;Time::HiRes::nanosleep()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="269fb40594ac38479767dd170994fea4ce252e54" translate="yes" xml:space="preserve">
          <source>. See also &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; , &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; , and &lt;code&gt;Time::HiRes::clock_nanosleep()&lt;/code&gt; .</source>
          <target state="translated">。另请参见 &lt;code&gt;Time::HiRes::usleep()&lt;/code&gt; ， &lt;code&gt;Time::HiRes::sleep()&lt;/code&gt; 和 &lt;code&gt;Time::HiRes::clock_nanosleep()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73ed177a1496b0ffabfd429dcad99a1b5e86269c" translate="yes" xml:space="preserve">
          <source>. See man1dir.</source>
          <target state="translated">。参见man1dir。</target>
        </trans-unit>
        <trans-unit id="37f30b22c5af4841496858a795207dcf79c50797" translate="yes" xml:space="preserve">
          <source>. See man3dir.</source>
          <target state="translated">。参见man3dir。</target>
        </trans-unit>
        <trans-unit id="c34835277b46e71de0c02bf6cf0f02eefcb4f7c6" translate="yes" xml:space="preserve">
          <source>. See the &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; operator in Camel chapter 5, &amp;ldquo;Pattern Matching&amp;rdquo;.</source>
          <target state="translated">。请参阅Camel第5章&amp;ldquo;模式匹配&amp;rdquo;中的 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="b98009a504041b2a2e135284e783dfdbc1e8357f" translate="yes" xml:space="preserve">
          <source>. See the &lt;code&gt;tr///&lt;/code&gt; operator in Camel chapter 5, &amp;ldquo;Pattern Matching&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532cefe5f4e0e07491434bf06b22de1364858a22" translate="yes" xml:space="preserve">
          <source>. Sigh!</source>
          <target state="translated">。叹！</target>
        </trans-unit>
        <trans-unit id="15721d069cd060fbc46f89e07bfe13ca468f8232" translate="yes" xml:space="preserve">
          <source>. Similarly, \x</source>
          <target state="translated">。同样，\ x</target>
        </trans-unit>
        <trans-unit id="de4d0dbea4489047ca7b513d634afc159e7969dd" translate="yes" xml:space="preserve">
          <source>. Similarly, don't create patches for files under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395988d77edcf52f02450c8878fe072fd4bc2688" translate="yes" xml:space="preserve">
          <source>. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt;, the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5eed1b7cba0329ac7a82750cca661eb2b07773c" translate="yes" xml:space="preserve">
          <source>. Since the core of Perl has now been tested, &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; can and now should be used. You can also use the full suite of core modules in the tests. (As noted in &lt;a href=&quot;#Patching-a-core-module&quot;&gt;&quot;Patching a core module&quot;&lt;/a&gt; above, changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f91a5e70762d437d2b010c7f3894adf3f22e05" translate="yes" xml:space="preserve">
          <source>. Since we're going to be altering this file, let's copy it to</source>
          <target state="translated">。由于我们将要更改此文件，因此我们将其复制到</target>
        </trans-unit>
        <trans-unit id="453c217251c123d48625d5057df411e46d897211" translate="yes" xml:space="preserve">
          <source>. So as opposite of &lt;code&gt;find_encoding()&lt;/code&gt; canonical names and aliases are not used when searching for object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b19e5f2af8ac1ad558abf4f3e809cbb78dad50" translate="yes" xml:space="preserve">
          <source>. Some non-western languages require more complicated models, so Unicode created the</source>
          <target state="translated">。一些非西方语言需要更复杂的模型，因此Unicode创建了</target>
        </trans-unit>
        <trans-unit id="924583291a21ac53f389c53cb7d36575da128db8" translate="yes" xml:space="preserve">
          <source>. Sometimes confused with &lt;code&gt;PATH&lt;/code&gt; .</source>
          <target state="translated">。有时与 &lt;code&gt;PATH&lt;/code&gt; 混淆。</target>
        </trans-unit>
        <trans-unit id="a3a8e9ed6a6374ab9e74cec517357439a65db7f6" translate="yes" xml:space="preserve">
          <source>. Sometimes confused with &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60154f92db701fa8dfa7c281d9f6dd872168811" translate="yes" xml:space="preserve">
          <source>. Source filters alter the program text of a module before Perl sees it, much as a C preprocessor alters the source text of a C program before the compiler sees it. This article tells you more about what source filters are, how they work, and how to write your own.</source>
          <target state="translated">。源过滤器会在Perl看到它之前更改模块的程序文本，就像C预处理程序在编译器看到它之前更改C程序的源文本一样。本文向您详细介绍什么是源过滤器，它们如何工作以及如何编写自己的源过滤器。</target>
        </trans-unit>
        <trans-unit id="4fb0cc3ffb7c7827094da5af5e02907a64d30d4e" translate="yes" xml:space="preserve">
          <source>. Specifically, it is a listing of functions, macros, flags, and variables that may be used by extension writers. Some specialized items are instead documented in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5324fa1cfeb6989f1cc904db6d96f2b5cf34a5f" translate="yes" xml:space="preserve">
          <source>. Specifically, the function is applied to an &lt;code&gt;entersub&lt;/code&gt; op tree for a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , where the callee can be identified at compile time as</source>
          <target state="translated">。具体来说，该函数将应用于子例程调用的 &lt;code&gt;entersub&lt;/code&gt; op树，该子例程未用 &lt;code&gt;&amp;amp;&lt;/code&gt; 标记，其中可以在编译时将被调用方标识为</target>
        </trans-unit>
        <trans-unit id="719bbeb528773685892fbb466263ed7992f1ef35" translate="yes" xml:space="preserve">
          <source>. Stratus &lt;code&gt;VOS&lt;/code&gt; uses</source>
          <target state="translated">。Stratus &lt;code&gt;VOS&lt;/code&gt; 的用途</target>
        </trans-unit>
        <trans-unit id="74794f3a0f64eaaac38d6eec10e61e0bb7ca4ab9" translate="yes" xml:space="preserve">
          <source>. Subpatterns are numbered based on the left to right order of their opening parenthesis. A backreference matches whatever actually matched the subpattern in the string being examined, not the rules for that subpattern. Therefore, &lt;code&gt;(0|0x)\d*\s\g1\d*&lt;/code&gt; will match &quot;0x1234 0x4321&quot;, but not &quot;0x1234 01234&quot;, because subpattern 1 matched &quot;0x&quot;, even though the rule &lt;code&gt;0|0x&lt;/code&gt; could potentially match the leading 0 in the second number.</source>
          <target state="translated">。子模式根据其左括号的从左到右顺序编号。反向引用与要检查的字符串中的子模式实际匹配的内容，而不是该子模式的规则。因此， &lt;code&gt;(0|0x)\d*\s\g1\d*&lt;/code&gt; 将匹配&amp;ldquo; 0x1234 0x4321&amp;rdquo;，但不匹配&amp;ldquo; 0x1234 01234&amp;rdquo;，因为子模式1匹配了&amp;ldquo; 0x&amp;rdquo;，即使规则 &lt;code&gt;0|0x&lt;/code&gt; 可能与第二个数字前导0。</target>
        </trans-unit>
        <trans-unit id="0bd33c43194e6d65ba167a5061ae6b129a64b1cb" translate="yes" xml:space="preserve">
          <source>. Such discretionary locks are more flexible, but offer fewer guarantees. This means that files locked with flock() may be modified by programs that do not also use flock(). Cars that stop for red lights get on well with each other, but not with cars that don't stop for red lights. See the perlport manpage, your port's specific documentation, or your system-specific local manpages for details. It's best to assume traditional behavior if you're writing portable programs. (If you're not, you should as always feel perfectly free to write for your own system's idiosyncrasies (sometimes called &quot;features&quot;). Slavish adherence to portability concerns shouldn't get in the way of your getting your job done.)</source>
          <target state="translated">。这样的自由锁更加灵活，但是提供的保证却更少。这意味着用flock（）锁定的文件可以被不使用flock（）的程序修改。停红灯的汽车彼此相处得很好，但不停红灯的汽车却无法相处。有关详细信息，请参见perlport联机帮助页，端口的特定文档或系统特定的本地联机帮助页。如果您正在编写可移植程序，则最好采用传统行为。（如果不是，那么您应该一如既往地完全自由地编写自己系统的特性（有时称为&amp;ldquo;功能&amp;rdquo;。）对可移植性问题的过分依赖不会妨碍您完成工作。）</target>
        </trans-unit>
        <trans-unit id="f924273cb0bf29ba0e14969a837f9a2c41715a31" translate="yes" xml:space="preserve">
          <source>. Take &lt;code&gt;OP_ADD&lt;/code&gt;, for example. (&lt;code&gt;OP_ADD&lt;/code&gt; is the token value from the &lt;code&gt;Aop(OP_ADD)&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0219e78f15e9d632ec155375033bbb1f75756ae3" translate="yes" xml:space="preserve">
          <source>. Test::More will output special ok's which Test::Harness interprets as skipped, but passing, tests.</source>
          <target state="translated">。Test :: More将输出特殊的OK，Test :: Harness将其解释为已跳过但通过了测试。</target>
        </trans-unit>
        <trans-unit id="86f914cd47c1c841e763a16c7dd3ea89826fb50f" translate="yes" xml:space="preserve">
          <source>. Tests for &lt;code&gt;Unicode::Collate::Locale&lt;/code&gt; are named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509fc989a8df02d181de3abd4b07ad24cc68349f" translate="yes" xml:space="preserve">
          <source>. Text following</source>
          <target state="translated">。文字跟随</target>
        </trans-unit>
        <trans-unit id="52010a80ed4df47e71982f8570116561787baa7d" translate="yes" xml:space="preserve">
          <source>. That allows them to read/write files/buffers larger than 4Gig.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854b9e1fe58c6212ac93ec8182edd1d8e94236c0" translate="yes" xml:space="preserve">
          <source>. That filehandle provides an internal reference to the specified external file, conveniently stored in a Perl variable, and ready for I/O operations such as reading and writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96afc36fdc9cac6d245d493ea1697bcf23f65cf9" translate="yes" xml:space="preserve">
          <source>. That is, every (possibly wide) character gets replaced with a sequence of one or more characters that represent the individual</source>
          <target state="translated">。也就是说，每个（可能是较宽的）字符都被一个或多个代表单个字符的字符替换</target>
        </trans-unit>
        <trans-unit id="d3ee68fda4cc70d1e9047807e735452ddfef368e" translate="yes" xml:space="preserve">
          <source>. That means that if $fred is a lexical variable created with my() in the above example, the code wouldn't work at all: you'd accidentally access the global and skip right over the private lexical altogether. Global variables are bad because they can easily collide accidentally and in general make for non-scalable and confusing code.</source>
          <target state="translated">。这意味着如果$ fred是在上面的示例中使用my（）创建的词法变量，则该代码将根本无法工作：您不小心访问了全局变量，而完全跳过了私有词法。全局变量之所以不好，是因为它们很容易偶然碰撞，并且通常会导致不可伸缩和令人困惑的代码。</target>
        </trans-unit>
        <trans-unit id="71cc74e6abc0852795fc00a102b3c6afa72a3049" translate="yes" xml:space="preserve">
          <source>. That way, the longer-lived variable will contain the expected reference until it goes out of scope.</source>
          <target state="translated">。这样，寿命更长的变量将包含预期的引用，直到超出范围。</target>
        </trans-unit>
        <trans-unit id="338bcb0d0b4f6443c09736e45408c62579701cfd" translate="yes" xml:space="preserve">
          <source>. The</source>
          <target state="translated">。的</target>
        </trans-unit>
        <trans-unit id="c4b9c60bf381d578490da1380967c8f8ee21e9a9" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma can be used to establish default I/O layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe300fb39c3e404963696de90c5f2b8fb1f4b10d" translate="yes" xml:space="preserve">
          <source>. The &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; pragma can be used to establish default I/O layers. See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">。该 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 编译可用于建立默认的I / O层。见&lt;a href=&quot;open&quot;&gt;打开&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43b7a7d48b732a7b49c73edd40605094cd605257" translate="yes" xml:space="preserve">
          <source>. The &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; operator assumes this so you don't have to spell out &quot;</source>
          <target state="translated">。在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 操作假定这个，所以你不必拼出&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1d02d641b2daae8c8291ce30497232a482994b97" translate="yes" xml:space="preserve">
          <source>. The &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; pragma can be used to establish default I/O layers. See &lt;a href=&quot;../open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">。该 &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 编译可用于建立默认的I / O层。见&lt;a href=&quot;../open&quot;&gt;打开&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fa935f862d5e3a704a56002cb0fb957dc8218ea" translate="yes" xml:space="preserve">
          <source>. The &lt;code&gt;use VMS::Filespec&lt;/code&gt; or &lt;code&gt;require VMS::Filespec; import VMS::Filespec ...&lt;/code&gt; statement can be used to import the function names into the current package, but they're always available if you use the fully qualified name, whether or not you've mentioned the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7333d35d6cbd99cf7eda3fee658e2f85ce05fd6" translate="yes" xml:space="preserve">
          <source>. The &lt;code&gt;use&lt;/code&gt; operator assumes this so you don't have to spell out &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34046a75c4b4b70cb801b77ce3dd9d1f648ec86" translate="yes" xml:space="preserve">
          <source>. The C subroutine it calls defaults to the name of the perl visible subroutine, unless you give the parameter</source>
          <target state="translated">。除非您指定参数，否则它调用的C子例程默认为perl visible子例程的名称。</target>
        </trans-unit>
        <trans-unit id="9397ab7f8e9744e2e3279022e0ab86d9f126e59f" translate="yes" xml:space="preserve">
          <source>. The amount of data in the read cache will not exceed the value you specified for &lt;code&gt;memory&lt;/code&gt; . If &lt;code&gt;Tie::File&lt;/code&gt; wants to cache a new record, but the read cache is full, it will make room by expiring the least-recently visited records from the read cache.</source>
          <target state="translated">。读取缓存中的数据量不会超过您为 &lt;code&gt;memory&lt;/code&gt; 指定的值。如果 &lt;code&gt;Tie::File&lt;/code&gt; 要缓存新记录，但读取缓存已满，它将通过使最近最少访问的记录从读取缓存中过期而腾出空间。</target>
        </trans-unit>
        <trans-unit id="3a27d692b3f924d2952de2843ea0614c4cb0575d" translate="yes" xml:space="preserve">
          <source>. The amount of data in the read cache will not exceed the value you specified for &lt;code&gt;memory&lt;/code&gt;. If &lt;code&gt;Tie::File&lt;/code&gt; wants to cache a new record, but the read cache is full, it will make room by expiring the least-recently visited records from the read cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d43793da5a2959399e8063bdc35f4855ea88c66" translate="yes" xml:space="preserve">
          <source>. The argument is first interpreted as a floating point number, but then any fractional parts are truncated (towards zero), and the value is interpreted as an unsigned integer. The bits of this integer are stored in the unused bits of the NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79601f5e82d6d993fd5c764e5bd99eacf802094f" translate="yes" xml:space="preserve">
          <source>. The arrow operator (&lt;code&gt;-&amp;gt;&lt;/code&gt; ) tells Perl that we are calling a method.</source>
          <target state="translated">。箭头运算符（ &lt;code&gt;-&amp;gt;&lt;/code&gt; ）告诉Perl我们正在调用方法。</target>
        </trans-unit>
        <trans-unit id="a39367a57b80e84f578109fdb0261380b41cb664" translate="yes" xml:space="preserve">
          <source>. The arrow operator (&lt;code&gt;-&amp;gt;&lt;/code&gt;) tells Perl that we are calling a method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce742f8603278d1cc939bb3c2667ef58a5b743a" translate="yes" xml:space="preserve">
          <source>. The base64 encoding is designed to represent arbitrary sequences of octets in a form that need not be humanly readable. A 65-character subset ([A-Za-z0-9+/=]) of US-ASCII is used, enabling 6 bits to be represented per printable character.</source>
          <target state="translated">。base64编码旨在以不需要人类可读的形式表示八位字节的任意序列。使用US-ASCII的65个字符的子集（[A-Za-z0-9 + / =]），每个可打印字符可表示6位。</target>
        </trans-unit>
        <trans-unit id="132df5e01ce9879e06e9a0bb9623693b913390a1" translate="yes" xml:space="preserve">
          <source>. The characters are recoded for the lexer buffer, according to how the buffer is currently being interpreted (&lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt;). If a string to be inserted is available as a Perl scalar, the &lt;a href=&quot;#lex_stuff_sv&quot;&gt;lex_stuff_sv&lt;/a&gt; function is more convenient.</source>
          <target state="translated">。根据当前解释缓冲区的方式（&lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt;），为lexer缓冲区重新编码字符。如果要插入的字符串可用作Perl标量，则&lt;a href=&quot;#lex_stuff_sv&quot;&gt;lex_stuff_sv&lt;/a&gt;函数更加方便。</target>
        </trans-unit>
        <trans-unit id="d893afc509f6379c799028f22bba6115198b3dd0" translate="yes" xml:space="preserve">
          <source>. The characters are recoded for the lexer buffer, according to how the buffer is currently being interpreted (&lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt;). If a string to be inserted is not already a Perl scalar, the &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt; function avoids the need to construct a scalar.</source>
          <target state="translated">。根据当前解释缓冲区的方式（&lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt;），为lexer缓冲区重新编码字符。如果要插入的字符串还不是Perl标量，则&lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt;函数可以避免构造标量。</target>
        </trans-unit>
        <trans-unit id="ee8a3d9771584b9a4ccf95284b3a8174d3f9cca7" translate="yes" xml:space="preserve">
          <source>. The characters are recoded for the lexer buffer, according to how the buffer is currently being interpreted (&lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt;). If it is not convenient to nul-terminate a string to be inserted, the &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt; function is more appropriate.</source>
          <target state="translated">。根据当前解释缓冲区的方式（&lt;a href=&quot;#lex_bufutf8&quot;&gt;lex_bufutf8&lt;/a&gt;），为lexer缓冲区重新编码字符。如果不方便使用nul终止要插入的字符串，则&lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt;函数更合适。</target>
        </trans-unit>
        <trans-unit id="0f56b744f4a2c77713600bfeb619e33a869c1cbc" translate="yes" xml:space="preserve">
          <source>. The commit is then actually performed when you run the next command, which will bring up your editor to describe the commit. Without &lt;code&gt;--no-commit&lt;/code&gt;, the commit would be made with nearly no useful message, which would greatly diminish the value of the merge commit as a placeholder for the work's description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b33e6ed1f1b6445bb5098593388c53d72702a9" translate="yes" xml:space="preserve">
          <source>. The declaration &lt;a href=&quot;strict&quot;&gt;&lt;code&gt;use strict 'refs'&lt;/code&gt;&lt;/a&gt; disables this feature, which can cause all sorts of trouble if you use it by accident.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b2a2d176e198b26fa708993e686fdffc215703" translate="yes" xml:space="preserve">
          <source>. The declaration &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'refs'&lt;/code&gt; disables this feature, which can cause all sorts of trouble if you use it by accident.</source>
          <target state="translated">。声明 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'refs'&lt;/code&gt; 会禁用此功能，如果您不小心使用它，可能会引起各种麻烦。</target>
        </trans-unit>
        <trans-unit id="1f924a7620bcb58b87a1f9d9dd3fdfe4c62ff669" translate="yes" xml:space="preserve">
          <source>. The default is &quot;User Contributed Perl Documentation&quot;, but also see &lt;b&gt;--official&lt;/b&gt; below.</source>
          <target state="translated">。默认值为&amp;ldquo;用户提供的Perl文档&amp;rdquo;，另请参见&lt;b&gt;--official&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="618c078508491fbfb47de5b8a07926b3458d7d8d" translate="yes" xml:space="preserve">
          <source>. The default library locations (e.g. privlib, sitelib) are either</source>
          <target state="translated">。默认库位置（例如privlib，sitelib）为</target>
        </trans-unit>
        <trans-unit id="6f8ebc54d0178bb00994a39db8b9644acf1a8563" translate="yes" xml:space="preserve">
          <source>. The delimiters for it must be ASCII punctuation, but it may NOT be delimited by &lt;code&gt;&quot;{&quot;&lt;/code&gt;, nor &lt;code&gt;&quot;}&quot;&lt;/code&gt; nor contain a literal &lt;code&gt;&quot;}&quot;&lt;/code&gt;, as that delimits the end of the enclosing &lt;code&gt;\p{}&lt;/code&gt;. Like any pattern, certain other delimiters are terminated by their mirror images. These are &lt;code&gt;&quot;(&quot;&lt;/code&gt;, &lt;code&gt;&quot;[&lt;/code&gt;&quot;, and &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;. If the delimiter is any of &lt;code&gt;&quot;-&quot;&lt;/code&gt;, &lt;code&gt;&quot;_&quot;&lt;/code&gt;, &lt;code&gt;&quot;+&quot;&lt;/code&gt;, or &lt;code&gt;&quot;\&quot;&lt;/code&gt;, or is the same delimiter as is used for the enclosing pattern, it must be preceded by a backslash escape, both fore and aft.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef73490f33664f8457822810666a2533a19bed96" translate="yes" xml:space="preserve">
          <source>. The directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632ab13141757f9e687de51db78b780c50b12aa3" translate="yes" xml:space="preserve">
          <source>. The directory tree is left untouched.</source>
          <target state="translated">。目录树保持不变。</target>
        </trans-unit>
        <trans-unit id="a378991e2ff9bbc4e73fa61ee57c00bdd052b15d" translate="yes" xml:space="preserve">
          <source>. The equivalent test can be made in C by using the &lt;code&gt;GIMME_V&lt;/code&gt; macro, which returns &lt;code&gt;G_ARRAY&lt;/code&gt; if you have been called in a list context, &lt;code&gt;G_SCALAR&lt;/code&gt; if in a scalar context, or &lt;code&gt;G_VOID&lt;/code&gt; if in a void context (i.e., the return value will not be used). An older version of this macro is called &lt;code&gt;GIMME&lt;/code&gt; ; in a void context it returns &lt;code&gt;G_SCALAR&lt;/code&gt; instead of &lt;code&gt;G_VOID&lt;/code&gt; . An example of using the &lt;code&gt;GIMME_V&lt;/code&gt; macro is shown in section</source>
          <target state="translated">。等效测试可以在C利用进行 &lt;code&gt;GIMME_V&lt;/code&gt; 宏，它返回 &lt;code&gt;G_ARRAY&lt;/code&gt; 如果你已经在列表环境中被调用， &lt;code&gt;G_SCALAR&lt;/code&gt; 如果在一个标量上下文，或 &lt;code&gt;G_VOID&lt;/code&gt; 如果在无效的情况下（即，返回值将不用过的）。该宏的旧版本称为 &lt;code&gt;GIMME&lt;/code&gt; ；在void上下文中，它返回 &lt;code&gt;G_SCALAR&lt;/code&gt; 而不是 &lt;code&gt;G_VOID&lt;/code&gt; 。本节显示了使用 &lt;code&gt;GIMME_V&lt;/code&gt; 宏的示例。</target>
        </trans-unit>
        <trans-unit id="44dedd4141cadca433f53717b2d9c75ad72d9b95" translate="yes" xml:space="preserve">
          <source>. The equivalent test can be made in C by using the &lt;code&gt;GIMME_V&lt;/code&gt; macro, which returns &lt;code&gt;G_ARRAY&lt;/code&gt; if you have been called in a list context, &lt;code&gt;G_SCALAR&lt;/code&gt; if in a scalar context, or &lt;code&gt;G_VOID&lt;/code&gt; if in a void context (i.e., the return value will not be used). An older version of this macro is called &lt;code&gt;GIMME&lt;/code&gt;; in a void context it returns &lt;code&gt;G_SCALAR&lt;/code&gt; instead of &lt;code&gt;G_VOID&lt;/code&gt;. An example of using the &lt;code&gt;GIMME_V&lt;/code&gt; macro is shown in section &lt;a href=&quot;#Using-GIMME_V&quot;&gt;&quot;Using GIMME_V&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd333b30838b1fdef268a889fd4cb7c1f09da13" translate="yes" xml:space="preserve">
          <source>. The expression \c</source>
          <target state="translated">。表达式\ c</target>
        </trans-unit>
        <trans-unit id="ef482f58ec037bafd28af56e419d7d82b45dc684" translate="yes" xml:space="preserve">
          <source>. The facility must be enabled first by a pragmatic declaration, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; , and it will produce a warning unless the &quot;experimental::signatures&quot; warnings category is disabled.</source>
          <target state="translated">。必须首先通过实用的声明启用此 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ，并&lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;功能'signatures'，除非禁用了&amp;ldquo; experimental :: signatures&amp;rdquo;警告类别，否则它将产生警告。</target>
        </trans-unit>
        <trans-unit id="37793220d42e0a63c90efd075b3729c3e11d12c9" translate="yes" xml:space="preserve">
          <source>. The facility must be enabled first by a pragmatic declaration, &lt;code&gt;use feature 'signatures'&lt;/code&gt;, and it will produce a warning unless the &quot;experimental::signatures&quot; warnings category is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1e47d5d2c200730329f1acb04a80468d3420bc" translate="yes" xml:space="preserve">
          <source>. The failures are caused by bugs in the CRT in VC++ 2013 which are fixed in VC++2015 and later, as explained by Microsoft here: &lt;a href=&quot;https://connect.microsoft.com/VisualStudio/feedback/details/811534/utime-sometimes-fails-to-set-the-correct-file-times-in-visual-c-2013&quot;&gt;https://connect.microsoft.com/VisualStudio/feedback/details/811534/utime-sometimes-fails-to-set-the-correct-file-times-in-visual-c-2013&lt;/a&gt;. In the meantime, if you need fixed &lt;code&gt;stat&lt;/code&gt; and &lt;code&gt;utime&lt;/code&gt; functions then have a look at the CPAN distribution Win32::UTCFileTime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993996ea1755cbddf6e3835d13a493c47b042aa6" translate="yes" xml:space="preserve">
          <source>. The failures are caused by bugs in the CRT in VC++ 2013 which will be fixed in future releases of VC++, as explained by Microsoft here: &lt;a href=&quot;https://connect.microsoft.com/VisualStudio/feedback/details/811534/utime-sometimes-fails-to-set-the-correct-file-times-in-visual-c-2013&quot;&gt;https://connect.microsoft.com/VisualStudio/feedback/details/811534/utime-sometimes-fails-to-set-the-correct-file-times-in-visual-c-2013&lt;/a&gt;. In the meantime, if you need fixed &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; functions then have a look at the CPAN distribution Win32::UTCFileTime.</source>
          <target state="translated">。失败是由VC ++ 2013中的CRT中的错误引起的，此错误将在VC ++的未来版本中修复，如Microsoft在此处解释的那样：&lt;a href=&quot;https://connect.microsoft.com/VisualStudio/feedback/details/811534/utime-sometimes-fails-to-set-the-correct-file-times-in-visual-c-2013&quot;&gt;https&lt;/a&gt; : //connect.microsoft.com/VisualStudio/feedback/details/811534/utime-sometimes-无法在Visual C-2013中设置正确的文件时间。同时，如果您需要固定的 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;&lt;/code&gt; 函数，请查看CPAN分发Win32 :: UTCFileTime。</target>
        </trans-unit>
        <trans-unit id="693dcad2e62533bf6a6c62ea9e5ed47e0a1b569a" translate="yes" xml:space="preserve">
          <source>. The following table shows them, along with their ASCII code points (in decimal and hex), their ASCII name, the control escape on ASCII platforms and a short description. (For EBCDIC platforms, see &lt;a href=&quot;perlebcdic#OPERATOR-DIFFERENCES&quot;&gt;&quot;OPERATOR DIFFERENCES&quot; in perlebcdic&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209db736727fc0813e037a50d64ce2c4cb62c7c1" translate="yes" xml:space="preserve">
          <source>. The following table shows them, along with their ASCII code points (in decimal and hex), their ASCII name, the control escape on ASCII platforms and a short description. (For EBCDIC platforms, see &lt;a href=&quot;perlebcdic#OPERATOR-DIFFERENCES&quot;&gt;OPERATOR DIFFERENCES in perlebcdic&lt;/a&gt;.)</source>
          <target state="translated">。下表显示了它们，以及它们的ASCII代码点（十进制和十六进制），它们的ASCII名称，在ASCII平台上的控件转义符以及简短说明。（对于EBCDIC平台，请参阅&lt;a href=&quot;perlebcdic#OPERATOR-DIFFERENCES&quot;&gt;perlebcdic中的运算符差异&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="eb9b603496778c52c1a2d77f91cb20b3c0e09316" translate="yes" xml:space="preserve">
          <source>. The format of</source>
          <target state="translated">。格式</target>
        </trans-unit>
        <trans-unit id="98bd86fe1138202f1f9439203697d2e6ccc0c1d1" translate="yes" xml:space="preserve">
          <source>. The former is useful if $prefix is a directory dedicated to perl (e.g.</source>
          <target state="translated">。如果$ prefix是perl专用的目录，则前者很有用（例如</target>
        </trans-unit>
        <trans-unit id="52456eda920c313c016ecbba8397c6a142320751" translate="yes" xml:space="preserve">
          <source>. The function is intended to be called in this manner:</source>
          <target state="translated">。该函数旨在通过以下方式调用：</target>
        </trans-unit>
        <trans-unit id="a592425b2e38798803c52cbd4beb0cd4ab9e044b" translate="yes" xml:space="preserve">
          <source>. The function should be defined like this:</source>
          <target state="translated">。该函数应定义如下：</target>
        </trans-unit>
        <trans-unit id="9b277cb2a54f819af8bf29778d7360ede4ccd6c6" translate="yes" xml:space="preserve">
          <source>. The initializer value for a scalar element is just a scalar value. The initializer for an array element is an array reference. The initializer for a hash is a hash reference.</source>
          <target state="translated">。标量元素的初始值只是一个标量值。数组元素的初始化程序是数组引用。哈希的初始化程序是哈希引用。</target>
        </trans-unit>
        <trans-unit id="afbe09239c4b0b80310b301635f392f6bbc5a351" translate="yes" xml:space="preserve">
          <source>. The input is the list of files that match the fileglob.</source>
          <target state="translated">。输入是与fileglob匹配的文件列表。</target>
        </trans-unit>
        <trans-unit id="352aab7b2d0eaa0bc5aa9fc494beb1975384b34a" translate="yes" xml:space="preserve">
          <source>. The key field in the database is the location string and the value field is the time the location was last visited stored as a 4 byte binary value.</source>
          <target state="translated">。数据库中的关键字段是位置字符串，而值字段是上次访问位置的时间，存储为4字节二进制值。</target>
        </trans-unit>
        <trans-unit id="95555a38b0d0fdd7e883cd86b3b46ad68f807768" translate="yes" xml:space="preserve">
          <source>. The latter is most probably already fixed, if you see it and can trace where the latter spurious warning comes from, please inform me.</source>
          <target state="translated">。后者很可能已经修复，如果您看到它并可以追踪到后者的虚假警告来自何处，请通知我。</target>
        </trans-unit>
        <trans-unit id="92fd66a748779ee3429954e90cf1b31a9766b03d" translate="yes" xml:space="preserve">
          <source>. The latter means that if you just installed EMX, and made all the needed changes to</source>
          <target state="translated">。后者意味着，如果您刚刚安装了EMX，并进行了所有必要的更改，</target>
        </trans-unit>
        <trans-unit id="7e4c4954b32c854b5ebec7089c4678970bb9dad2" translate="yes" xml:space="preserve">
          <source>. The logical character sequence itself is unchanged. If</source>
          <target state="translated">。逻辑字符序列本身不变。如果</target>
        </trans-unit>
        <trans-unit id="cd29714c2a33b9f7328510e6da296e4c8f1474ee" translate="yes" xml:space="preserve">
          <source>. The makefile can use this with something like $shrpenv $(&lt;code&gt;CC&lt;/code&gt; ) -o perl</source>
          <target state="translated">。makefile可以将其与$ shrpenv $（ &lt;code&gt;CC&lt;/code&gt; ）-o perl一起使用</target>
        </trans-unit>
        <trans-unit id="b03c44aca2024a062290e65cdad6340296b07dc8" translate="yes" xml:space="preserve">
          <source>. The makefile can use this with something like $shrpenv $(&lt;code&gt;CC&lt;/code&gt;) -o perl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28baca6170ca62229fafab754ab3c6019b0a96c" translate="yes" xml:space="preserve">
          <source>. The mode argument should be a string as would be passed to fopen/PerlIO_open. If it is NULL then - for legacy support - the FILE * is opened in same mode as the PerlIO *.</source>
          <target state="translated">。模式参数应该是将传递给fopen / PerlIO_open的字符串。如果为NULL，则-为实现传统支持-以与PerlIO *相同的模式打开FILE *。</target>
        </trans-unit>
        <trans-unit id="d127834d1054b17ba75249e4716d18cafb707bc6" translate="yes" xml:space="preserve">
          <source>. The name information can be used for POD translators.</source>
          <target state="translated">。名称信息可用于POD转换器。</target>
        </trans-unit>
        <trans-unit id="7e41d71ac7eded037c4670d30d4568b8d18ea55e" translate="yes" xml:space="preserve">
          <source>. The name of a feature bundle is prefixed with a colon, to distinguish it from an actual feature.</source>
          <target state="translated">。要素束的名称以冒号开头，以区别于实际要素。</target>
        </trans-unit>
        <trans-unit id="84b15d4f04c91fed2b935cf88259b619f7e87100" translate="yes" xml:space="preserve">
          <source>. The newly-allocated hash table may now have data stored and retrieved. Efforts to store more than &lt;code&gt;$table_size&lt;/code&gt; elements will result in a fatal error, as will efforts to store a value not exactly &lt;code&gt;$value_len&lt;/code&gt; characters in length, or reference through a key not exactly &lt;code&gt;$key_len&lt;/code&gt; characters in length. While these constraints may seem excessive, the result is a hash table using much less internal memory than an equivalent freely-allocated hash table.</source>
          <target state="translated">。现在，新分配的哈希表可以存储和检索数据。尝试存储多于 &lt;code&gt;$table_size&lt;/code&gt; 元素将导致致命错误，因为存储值长度不完全 &lt;code&gt;$value_len&lt;/code&gt; 字符，或者通过键引用长度不完全 &lt;code&gt;$key_len&lt;/code&gt; 字符也将导致致命错误。尽管这些约束似乎过多，但结果是散列表使用的内存比等效的自由分配的散列表少得多。</target>
        </trans-unit>
        <trans-unit id="b95ab5214831e47ae4521fdbeb4471b9560f0ca4" translate="yes" xml:space="preserve">
          <source>. The object should provide the interface described in &lt;a href=&quot;Encode::Encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. If more than two arguments are provided, additional arguments are considered aliases for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f2a0f7f26f9ff04e556e24ec0e5a3e66bc88a2" translate="yes" xml:space="preserve">
          <source>. The object should provide the interface described in &lt;a href=&quot;encode/encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. If more than two arguments are provided, additional arguments are considered aliases for</source>
          <target state="translated">。该对象应提供&lt;a href=&quot;encode/encoding&quot;&gt;Encode :: Encoding中&lt;/a&gt;描述的接口。如果提供了两个以上的参数，则将其他参数视为别名</target>
        </trans-unit>
        <trans-unit id="96a94934114bd87c528984fa35f3cbd286f4a6de" translate="yes" xml:space="preserve">
          <source>. The old way was to declare it as &quot;int (*signal(...))()&quot;.</source>
          <target state="translated">。旧方法是将其声明为&amp;ldquo; int（* signal（...））（）&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="af4d0c63d60ebd8bd921063f1610ae5b1868cae0" translate="yes" xml:space="preserve">
          <source>. The outlier &lt;code&gt;\c?&lt;/code&gt; on ASCII, which yields a non-C0 control &lt;code&gt;DEL&lt;/code&gt; , yields the outlier control &lt;code&gt;APC&lt;/code&gt; on EBCDIC, the one that isn't in the block of contiguous controls. Note that a subtlety of this is that &lt;code&gt;\c?&lt;/code&gt; on ASCII platforms is an ASCII character, while it isn't equivalent to any ASCII character in EBCDIC platforms.</source>
          <target state="translated">。离群值 &lt;code&gt;\c?&lt;/code&gt; 在ASCII上生成非C0控件 &lt;code&gt;DEL&lt;/code&gt; ，在EBCDIC上生成异常控件 &lt;code&gt;APC&lt;/code&gt; ，该控件不在连续控件的块中。请注意，这是 &lt;code&gt;\c?&lt;/code&gt; 的微妙之处。在ASCII平台上是ASCII字符，而在EBCDIC平台上不等同于任何ASCII字符。</target>
        </trans-unit>
        <trans-unit id="bd3933589237eb991c99b51b88f09d803792f4ad" translate="yes" xml:space="preserve">
          <source>. The outlier &lt;code&gt;\c?&lt;/code&gt; on ASCII, which yields a non-C0 control &lt;code&gt;DEL&lt;/code&gt;, yields the outlier control &lt;code&gt;APC&lt;/code&gt; on EBCDIC, the one that isn't in the block of contiguous controls. Note that a subtlety of this is that &lt;code&gt;\c?&lt;/code&gt; on ASCII platforms is an ASCII character, while it isn't equivalent to any ASCII character in EBCDIC platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd4f959347af60366084a6b999d2b4170409fa5" translate="yes" xml:space="preserve">
          <source>. The output is the list of files that match the fileglob.</source>
          <target state="translated">。输出是与fileglob匹配的文件列表。</target>
        </trans-unit>
        <trans-unit id="3a753f8f2e7a43103d1ff1824cd727b6ecbdb4ec" translate="yes" xml:space="preserve">
          <source>. The pattern code expression is like a regular code expression, except that the result of the code evaluation is treated as a regular expression and matched immediately. A simple example is</source>
          <target state="translated">。模式代码表达式类似于正则表达式，只是代码评估的结果被视为正则表达式并立即匹配。一个简单的例子是</target>
        </trans-unit>
        <trans-unit id="a244cd3187379cc2fe2c070c785808570854282b" translate="yes" xml:space="preserve">
          <source>. The people with little desire to understand Perl can just rename main(), and do necessary modification in a custom main() which calls the renamed function in appropriate time.</source>
          <target state="translated">。不太想了解Perl的人可以重命名main（），并在自定义的main（）中进行必要的修改，该定制在适当的时间调用重命名的函数。</target>
        </trans-unit>
        <trans-unit id="201d8370b36c2e56d7351b01de7f62376c175f87" translate="yes" xml:space="preserve">
          <source>. The perl headers (in particular &quot;perlio.h&quot;) will &lt;code&gt;#define&lt;/code&gt; them to the I/O mechanism selected at Configure time.</source>
          <target state="translated">。perl标头（尤其是&amp;ldquo; perlio.h&amp;rdquo;）将 &lt;code&gt;#define&lt;/code&gt; 为配置时选择的I / O机制。</target>
        </trans-unit>
        <trans-unit id="ac04dd22ec2d3883b78a8c65c848b91a67ea61d0" translate="yes" xml:space="preserve">
          <source>. The quoted-printable encoding is intended to represent data that largely consists of bytes that correspond to printable characters in the ASCII character set. Each non-printable character (as defined by English Americans) is represented by a triplet consisting of the character &quot;=&quot; followed by two hexadecimal digits.</source>
          <target state="translated">。带引号的可打印编码旨在表示主要由字节组成的数据，这些字节与ASCII字符集中的可打印字符相对应。每个不可打印的字符（由英裔美国人定义）由一个三元组表示，该三元组由字符&amp;ldquo; =&amp;rdquo;和两个十六进制数字组成。</target>
        </trans-unit>
        <trans-unit id="500581814351c949b94b39e4cb44f6f66856596f" translate="yes" xml:space="preserve">
          <source>. The remaining content of the buffer will be moved, and all pointers into the buffer updated appropriately.</source>
          <target state="translated">。缓冲区的剩余内容将被移动，并且缓冲区中的所有指针都将适当更新。</target>
        </trans-unit>
        <trans-unit id="22430eb3a8c28a42cd2b9e57521a0c62f976ab90" translate="yes" xml:space="preserve">
          <source>. The repository contains many Perl revisions from Perl 1 onwards and all the revisions from Perforce, the previous version control system.</source>
          <target state="translated">。该存储库包含Perl 1以后的许多Perl修订版以及Perforce（以前的版本控制系统）的所有修订版。</target>
        </trans-unit>
        <trans-unit id="bfb3d7ca2967ce75e740e5fdec318eba71ce3dd4" translate="yes" xml:space="preserve">
          <source>. The rules for this are different for lower-level loops given by the greedy quantifiers &lt;code&gt;*+{}&lt;/code&gt; , and for higher-level ones like the &lt;code&gt;/g&lt;/code&gt; modifier or split() operator.</source>
          <target state="translated">。对于贪婪量词 &lt;code&gt;*+{}&lt;/code&gt; 给出的较低级别循环，以及 &lt;code&gt;/g&lt;/code&gt; 修饰符或split（）运算符等较高级别的循环，此规则有所不同。</target>
        </trans-unit>
        <trans-unit id="1754438a27d471f8ae277b9281477b845d59dd47" translate="yes" xml:space="preserve">
          <source>. The rules for this are different for lower-level loops given by the greedy quantifiers &lt;code&gt;*+{}&lt;/code&gt;, and for higher-level ones like the &lt;code&gt;/g&lt;/code&gt; modifier or &lt;code&gt;split()&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03aa66011823d9de16726ea950dd95ac9e1fd5d9" translate="yes" xml:space="preserve">
          <source>. The simple pipeline command below runs the script without needing to create a temporary file to hold the uncompressed file.</source>
          <target state="translated">。下面的简单管道命令运行脚本，而无需创建临时文件来保存未压缩的文件。</target>
        </trans-unit>
        <trans-unit id="27721e0ebedbef76f0308d9d0eabaae4fcdb33f6" translate="yes" xml:space="preserve">
          <source>. The string pointed to by &lt;code&gt;key&lt;/code&gt; is Safefree()ed. If one has a</source>
          <target state="translated">。 &lt;code&gt;key&lt;/code&gt; 所指向的字符串是Safefree（）ed。如果有一个</target>
        </trans-unit>
        <trans-unit id="9b46cc835e15bbfbdcebf9ceb7880e84ac2dc80a" translate="yes" xml:space="preserve">
          <source>. The term &quot;backtracking&quot; comes from the idea that matching a regexp is like a walk in the woods. Successfully matching a regexp is like arriving at a destination. There are many possible trailheads, one for each string position, and each one is tried in order, left to right. From each trailhead there may be many paths, some of which get you there, and some which are dead ends. When you walk along a trail and hit a dead end, you have to backtrack along the trail to an earlier point to try another trail. If you hit your destination, you stop immediately and forget about trying all the other trails. You are persistent, and only if you have tried all the trails from all the trailheads and not arrived at your destination, do you declare failure. To be concrete, here is a step-by-step analysis of what Perl does when it tries to match the regexp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67287b42e112f78aab0082dd4f95584b4f318556" translate="yes" xml:space="preserve">
          <source>. The term 'backtracking' comes from the idea that matching a regexp is like a walk in the woods. Successfully matching a regexp is like arriving at a destination. There are many possible trailheads, one for each string position, and each one is tried in order, left to right. From each trailhead there may be many paths, some of which get you there, and some which are dead ends. When you walk along a trail and hit a dead end, you have to backtrack along the trail to an earlier point to try another trail. If you hit your destination, you stop immediately and forget about trying all the other trails. You are persistent, and only if you have tried all the trails from all the trailheads and not arrived at your destination, do you declare failure. To be concrete, here is a step-by-step analysis of what Perl does when it tries to match the regexp</source>
          <target state="translated">。术语&amp;ldquo;回溯&amp;rdquo;源自这样一个想法，即匹配正则表达式就像在树林里散步。成功匹配正则表达式就像到达目的地。可能有许多线索，每个字符串位置一个，并且从左到右依次尝试每个。从每个入口开始，可能会有很多路径，有些路径可以带您到达目的地，有些则是死路一条。当您沿着一条小径行走并走到尽头时，您必须沿着小径向后退一点，然后再尝试另一条小径。如果您到达目的地，就会立即停下来，而忘记尝试其他所有路线。您是坚持不懈的人，只有尝试了所有路径头的所有路径并且没有到达目的地时，才声明失败。具体来说，这是Perl在尝试匹配正则表达式时所做的分步分析</target>
        </trans-unit>
        <trans-unit id="271320c65fb03216673c7a60089d1bfc5db3e659" translate="yes" xml:space="preserve">
          <source>. The third, runs all test files within any subdirectory within any other subdirectory located under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1199d660ecd25075f0cdf9eb332edd41306fb5d2" translate="yes" xml:space="preserve">
          <source>. The tiny</source>
          <target state="translated">。小小的</target>
        </trans-unit>
        <trans-unit id="f8bf61a3338726aa2f8f5b4c9d009164e7670ace" translate="yes" xml:space="preserve">
          <source>. The trailing X's are replaced with unique alphanumeric combinations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f827c6257f988b2cfbe83fce3e73ddf1d0943d59" translate="yes" xml:space="preserve">
          <source>. The undef third argument means:</source>
          <target state="translated">。undef第三个参数表示：</target>
        </trans-unit>
        <trans-unit id="ff757407b18554327da61107241354758c27a9bd" translate="yes" xml:space="preserve">
          <source>. The use of &lt;code&gt;autodie&lt;/code&gt; with block eval is considered good practice.</source>
          <target state="translated">。将 &lt;code&gt;autodie&lt;/code&gt; 与block eval一起使用被认为是一种好习惯。</target>
        </trans-unit>
        <trans-unit id="2a2e85546ff1b49b5a3d548ca91cc9bb13a0aea4" translate="yes" xml:space="preserve">
          <source>. The value will be stored with the specified key in the hash.</source>
          <target state="translated">。该值将与指定的键一起存储在哈希中。</target>
        </trans-unit>
        <trans-unit id="cc2849d1607b0f29dbd3fdbc14fdf69cbd91b077" translate="yes" xml:space="preserve">
          <source>. Then you can use the modules from your Perl programs with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; lib &quot;/my/perl_directory/lib/site_perl&quot;;&lt;/code&gt; or sometimes just &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; &quot;/my/perl_directory&quot;;&lt;/code&gt; . If you're on a system that requires superuser/root access to install modules into the directories you see when you type &lt;code&gt;perl -e &quot;print qq(@INC)&quot;&lt;/code&gt; , you'll want to install them into a local directory (such as your home directory) and use this approach.</source>
          <target state="translated">。然后，您可以使用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; lib &quot;/my/perl_directory/lib/site_perl&quot;;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt; Perl程序中的模块；或有时只 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; &quot;/my/perl_directory&quot;;&lt;/code&gt; 。如果您使用的系统需要超级用户/ root用户访问权限，才能将模块安装到您在键入 &lt;code&gt;perl -e &quot;print qq(@INC)&quot;&lt;/code&gt; 时看到的目录中，则需要将它们安装到本地目录中（例如您的主目录）并使用此方法。</target>
        </trans-unit>
        <trans-unit id="1842d5f94a1fdcb49d6f0f77d249f666636122c9" translate="yes" xml:space="preserve">
          <source>. Then you can use the modules from your Perl programs with &lt;code&gt;use lib &quot;/my/perl_directory/lib/site_perl&quot;;&lt;/code&gt; or sometimes just &lt;code&gt;use &quot;/my/perl_directory&quot;;&lt;/code&gt;. If you're on a system that requires superuser/root access to install modules into the directories you see when you type &lt;code&gt;perl -e &quot;print qq(@INC)&quot;&lt;/code&gt;, you'll want to install them into a local directory (such as your home directory) and use this approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e2d95e78f178f418e712b7eaca32286569001d" translate="yes" xml:space="preserve">
          <source>. There are many possibilities among the world's languages. The number of combinations is astronomical, and if there were a character for each combination, it would soon exhaust Unicode's more than a million possible characters. So Unicode took a different approach: there is a character for the base &lt;code&gt;H&lt;/code&gt; , and a character for each of the possible marks, and these can be variously combined to get a final logical character. So a logical character--what appears to be a single character--can be a sequence of more than one individual characters. The Unicode standard calls these &quot;extended grapheme clusters&quot; (which is an improved version of the no-longer much used &quot;grapheme cluster&quot;); Perl furnishes the &lt;code&gt;\X&lt;/code&gt; regular expression construct to match such sequences in their entirety.</source>
          <target state="translated">。世界上的语言有很多可能性。组合的数量是天文数字，如果每个组合都有一个字符，它将很快用完Unicode超过一百万个可能的字符。因此，Unicode采用了另一种方法：基数 &lt;code&gt;H&lt;/code&gt; 有一个字符，每个可能的标记有一个字符，并且可以将它们进行各种组合以获得最终的逻辑字符。因此，逻辑字符-看起来是单个字符-可以是一个以上的单个字符的序列。 Unicode标准将这些称为&amp;ldquo;扩展字素簇&amp;rdquo;（这是不再使用的&amp;ldquo;字素簇&amp;rdquo;的改进版本）。 Perl提供 &lt;code&gt;\X&lt;/code&gt; 正则表达式构造以完全匹配此类序列。</target>
        </trans-unit>
        <trans-unit id="b859bffd6633a2a259d33db2b3573f666da21944" translate="yes" xml:space="preserve">
          <source>. There are many possibilities among the world's languages. The number of combinations is astronomical, and if there were a character for each combination, it would soon exhaust Unicode's more than a million possible characters. So Unicode took a different approach: there is a character for the base &lt;code&gt;H&lt;/code&gt;, and a character for each of the possible marks, and these can be variously combined to get a final logical character. So a logical character--what appears to be a single character--can be a sequence of more than one individual characters. The Unicode standard calls these &quot;extended grapheme clusters&quot; (which is an improved version of the no-longer much used &quot;grapheme cluster&quot;); Perl furnishes the &lt;code&gt;\X&lt;/code&gt; regular expression construct to match such sequences in their entirety.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eadc7716975de872df1e240fa5e27efd9843f58" translate="yes" xml:space="preserve">
          <source>. There are quite a few result types available; choosing which class to use is the responsibility of the</source>
          <target state="translated">。有很多可用的结果类型。选择使用哪个类别是</target>
        </trans-unit>
        <trans-unit id="fc1d774c15da48c7b41ed72cf330c112b7557d27" translate="yes" xml:space="preserve">
          <source>. There is no expectation that a module under</source>
          <target state="translated">。没想到</target>
        </trans-unit>
        <trans-unit id="b15934fcc010d833b1b6611fcee4806aa409aca1" translate="yes" xml:space="preserve">
          <source>. There is no limit to the number of captured substrings that you may use. Groups are numbered with the leftmost open parenthesis being number 1,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07748882481b43ba802e33458c4f0da3c02f2d4" translate="yes" xml:space="preserve">
          <source>. There is no limit to the number of captured substrings that you may use. Groups are numbered with the leftmost open parenthesis being number 1, etc. If a group did not match, the associated backreference won't match either. (This can happen if the group is optional, or in a different branch of an alternation.) You can omit the &lt;code&gt;&quot;g&quot;&lt;/code&gt; , and write &lt;code&gt;&quot;\1&quot;&lt;/code&gt; , etc, but there are some issues with this form, described below.</source>
          <target state="translated">。对您可以使用的捕获子字符串的数量没有限制。对组进行编号，最左的开放括号为1，依此类推。如果组不匹配，则关联的向后引用也将不匹配。（如果组是可选的，或者在替换的另一个分支中，可能会发生这种情况。）您可以省略 &lt;code&gt;&quot;g&quot;&lt;/code&gt; ，而写 &lt;code&gt;&quot;\1&quot;&lt;/code&gt; 等，但是这种形式存在一些问题，如下所述。</target>
        </trans-unit>
        <trans-unit id="eb3ae656b3d4dccde9a6b843783f9804004492bc" translate="yes" xml:space="preserve">
          <source>. There is some naming convention which allows Perl to distinguish correct lines from wrong ones. The above names are almost the only names allowed by this convention which do not contain digits (which have absolutely different semantics).</source>
          <target state="translated">。有一些命名约定，允许Perl区分正确的行和错误的行。以上名称几乎是此约定所允许的唯一唯一不包含数字（语义完全不同）的名称。</target>
        </trans-unit>
        <trans-unit id="70ae579c941e1b2af83331b8b0575b24042dac0b" translate="yes" xml:space="preserve">
          <source>. Therefore data in these fields should NOT be used for dynamic (user-side) configuration.</source>
          <target state="translated">。因此，不应将这些字段中的数据用于动态（用户端）配置。</target>
        </trans-unit>
        <trans-unit id="df7a4d889790cf742e680d4d6efa4fd1ee3dd47f" translate="yes" xml:space="preserve">
          <source>. These are extensions to the traditional regular expression syntax that provide powerful new tools for pattern matching. We have already seen extensions in the form of the minimal matching constructs &lt;code&gt;??&lt;/code&gt; , &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{n,m}?&lt;/code&gt;, and &lt;code&gt;{n,}?&lt;/code&gt;. Most of the extensions below have the form &lt;code&gt;(?char...)&lt;/code&gt;, where the &lt;code&gt;char&lt;/code&gt; is a character that determines the type of extension.</source>
          <target state="translated">。这些是对传统正则表达式语法的扩展，这些语法为模式匹配提供了功能强大的新工具。我们已经看到了最小匹配结构形式的扩展 &lt;code&gt;??&lt;/code&gt; ， &lt;code&gt;*?&lt;/code&gt; ， &lt;code&gt;+?&lt;/code&gt; ， &lt;code&gt;{n,m}?&lt;/code&gt; ，还有 &lt;code&gt;{n,}?&lt;/code&gt; 。下面的大多数扩展名都有 &lt;code&gt;(?char...)&lt;/code&gt; 形式，其中 &lt;code&gt;char&lt;/code&gt; 是确定扩展名类型的字符。</target>
        </trans-unit>
        <trans-unit id="f40a1ee0d51ebf15d390e739c288fb892f4c8938" translate="yes" xml:space="preserve">
          <source>. These are extensions to the traditional regular expression syntax that provide powerful new tools for pattern matching. We have already seen extensions in the form of the minimal matching constructs &lt;code&gt;??&lt;/code&gt;, &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{n,m}?&lt;/code&gt;, and &lt;code&gt;{n,}?&lt;/code&gt;. Most of the extensions below have the form &lt;code&gt;(?char...)&lt;/code&gt;, where the &lt;code&gt;char&lt;/code&gt; is a character that determines the type of extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fe671376fe423873e5083176cea32f8c57ff41" translate="yes" xml:space="preserve">
          <source>. These are old libraries supplied so that old programs that use them still run. The</source>
          <target state="translated">。这些是提供的旧库，因此使用它们的旧程序仍然可以运行。的</target>
        </trans-unit>
        <trans-unit id="454759045b5bf4b0bfdcd22dd8dd6d89d962177f" translate="yes" xml:space="preserve">
          <source>. These are shown for historical context and must not be produced in or consumed from any metadata structure of version 2 or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51f5b82ec726ec3264afac0ee1a71ba67d94d17" translate="yes" xml:space="preserve">
          <source>. These days, your best bet is to look at the &lt;a href=&quot;expect&quot;&gt;Expect&lt;/a&gt; module available from CPAN, which also requires two other modules from CPAN, &lt;a href=&quot;IO::Pty&quot;&gt;IO::Pty&lt;/a&gt; and &lt;a href=&quot;IO::Stty&quot;&gt;IO::Stty&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8364539299fc6e8e877e8a93bec948c2c56a9805" translate="yes" xml:space="preserve">
          <source>. These days, your best bet is to look at the &lt;a href=&quot;http://search.cpan.org/perldoc/Expect&quot;&gt;Expect&lt;/a&gt; module available from CPAN, which also requires two other modules from CPAN, &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Pty&quot;&gt;IO::Pty&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Stty&quot;&gt;IO::Stty&lt;/a&gt;.</source>
          <target state="translated">。这些天，最好的选择是查看CPAN提供的&lt;a href=&quot;http://search.cpan.org/perldoc/Expect&quot;&gt;Expect&lt;/a&gt;模块，该模块还需要CPAN的其他两个模块：&lt;a href=&quot;http://search.cpan.org/perldoc/IO::Pty&quot;&gt;IO :: Pty&lt;/a&gt;和&lt;a href=&quot;http://search.cpan.org/perldoc/IO::Stty&quot;&gt;IO :: Stty&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba6b2c48d03193d3763913a4f9e3d93618b2d213" translate="yes" xml:space="preserve">
          <source>. These octets are interpreted as either UTF-8 or Latin-1, according to whether the &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; flag is set in</source>
          <target state="translated">。根据是否在 &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; 位置设置了LEX_STUFF_UTF8标志，这些八位位组被解释为UTF-8或Latin-1 。</target>
        </trans-unit>
        <trans-unit id="4b3c0c48688a8f7bba27cf24326ee5346b264572" translate="yes" xml:space="preserve">
          <source>. These revisions will never change semantics or add or remove specified behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6319b650504012b1b53a50eecb57429c0a9dcfe4" translate="yes" xml:space="preserve">
          <source>. They are almost like subclasses in that they have the same fields as &lt;code&gt;regnode&lt;/code&gt; , with possibly additional fields following in the structure, and in some cases the specific meaning (and name) of some of base fields are overridden. The following is a more complete description.</source>
          <target state="translated">。它们几乎就像子类一样，因为它们具有与 &lt;code&gt;regnode&lt;/code&gt; 相同的字段，结构中可能包含其他字段，并且在某些情况下，某些基本字段的特定含义（和名称）被覆盖。以下是更完整的描述。</target>
        </trans-unit>
        <trans-unit id="9618e85e95e57cc6614cc9a95470d206c3ad3b7d" translate="yes" xml:space="preserve">
          <source>. They are almost like subclasses in that they have the same fields as &lt;code&gt;regnode&lt;/code&gt;, with possibly additional fields following in the structure, and in some cases the specific meaning (and name) of some of base fields are overridden. The following is a more complete description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd75f69783a2baccf3e6cd502bef7b11d6b9f1dc" translate="yes" xml:space="preserve">
          <source>. They can be used just as ordinary variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57272a6cda3a773fa9ad5fcdc0dbe778246cc48b" translate="yes" xml:space="preserve">
          <source>. They need the braces, so are written as &lt;code&gt;/\p{Ll}/&lt;/code&gt; or &lt;code&gt;/\p{Lowercase_Letter}/&lt;/code&gt; , or &lt;code&gt;/\p{General_Category=Lowercase_Letter}/&lt;/code&gt; (the underscores are optional). &lt;code&gt;/\pLl/&lt;/code&gt; is valid, but means something different. It matches a two character string: a letter (Unicode property &lt;code&gt;\pL&lt;/code&gt; ), followed by a lowercase &lt;code&gt;l&lt;/code&gt; .</source>
          <target state="translated">。他们所需要的支架，所以被写成 &lt;code&gt;/\p{Ll}/&lt;/code&gt; 或 &lt;code&gt;/\p{Lowercase_Letter}/&lt;/code&gt; 或 &lt;code&gt;/\p{General_Category=Lowercase_Letter}/&lt;/code&gt; （下划线是可选的）。 &lt;code&gt;/\pLl/&lt;/code&gt; 是有效的，但含义有所不同。它匹配两个字符串：一个字母（Unicode属性 &lt;code&gt;\pL&lt;/code&gt; ），后跟一个小写的 &lt;code&gt;l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ea6b9b119c9587405e34943c9b5f2d61525197a" translate="yes" xml:space="preserve">
          <source>. They need the braces, so are written as &lt;code&gt;/\p{Ll}/&lt;/code&gt; or &lt;code&gt;/\p{Lowercase_Letter}/&lt;/code&gt;, or &lt;code&gt;/\p{General_Category=Lowercase_Letter}/&lt;/code&gt; (the underscores are optional). &lt;code&gt;/\pLl/&lt;/code&gt; is valid, but means something different. It matches a two character string: a letter (Unicode property &lt;code&gt;\pL&lt;/code&gt;), followed by a lowercase &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18a582b7f92b4f78c23e95b1cf02accd986e21b" translate="yes" xml:space="preserve">
          <source>. This C code is places at the start of a block, so you can declare variables in it.</source>
          <target state="translated">。此C代码位于块的开头，因此您可以在其中声明变量。</target>
        </trans-unit>
        <trans-unit id="80f4d13b8729ed274f6a8a631317728de1b0336d" translate="yes" xml:space="preserve">
          <source>. This advances &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; to match</source>
          <target state="translated">。这将&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt;进行匹配</target>
        </trans-unit>
        <trans-unit id="b35fcf8a74bd022a9580104a744f0bdc08475a29" translate="yes" xml:space="preserve">
          <source>. This affects Perl's &lt;code&gt;\w&lt;/code&gt; regular expression metanotation, which stands for alphanumeric characters--that is, alphabetic, numeric, and the platform's native underscore. (Consult &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; for more information about regular expressions.) Thanks to &lt;code&gt;LC_CTYPE&lt;/code&gt; , depending on your locale setting, characters like &quot;&amp;aelig;&quot;, &quot;&amp;eth;&quot;, &quot;&amp;szlig;&quot;, and &quot;&amp;oslash;&quot; may be understood as &lt;code&gt;\w&lt;/code&gt; characters. It also affects things like &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt; , and the POSIX character classes, like &lt;code&gt;[[:graph:]]&lt;/code&gt; . (See &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; for more information on all these.)</source>
          <target state="translated">。这会影响Perl的 &lt;code&gt;\w&lt;/code&gt; 正则表达式元符号，该符号表示字母数字字符-即字母，数字和平台的本机下划线。 （咨询&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;有关正则表达式的更多信息。）由于 &lt;code&gt;LC_CTYPE&lt;/code&gt; ，根据您所在地区的设置，如&amp;ldquo;AE&amp;rdquo;，&amp;ldquo;d&amp;rdquo;，&amp;ldquo;SS&amp;rdquo;，和&amp;ldquo;O&amp;rdquo;字可以理解为 &lt;code&gt;\w&lt;/code&gt; 字符。它还会影响 &lt;code&gt;\s&lt;/code&gt; ， &lt;code&gt;\D&lt;/code&gt; 和POSIX字符类，例如 &lt;code&gt;[[:graph:]]&lt;/code&gt; 。 （有关所有这些的更多信息，请参见&lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="269e5be095f95d8223d1e5356c614e40592cc651" translate="yes" xml:space="preserve">
          <source>. This affects Perl's &lt;code&gt;\w&lt;/code&gt; regular expression metanotation, which stands for alphanumeric characters--that is, alphabetic, numeric, and the platform's native underscore. (Consult &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; for more information about regular expressions.) Thanks to &lt;code&gt;LC_CTYPE&lt;/code&gt;, depending on your locale setting, characters like &quot;&amp;aelig;&quot;, &quot;&amp;eth;&quot;, &quot;&amp;szlig;&quot;, and &quot;&amp;oslash;&quot; may be understood as &lt;code&gt;\w&lt;/code&gt; characters. It also affects things like &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;, and the POSIX character classes, like &lt;code&gt;[[:graph:]]&lt;/code&gt;. (See &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; for more information on all these.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292fb479a853e46bd4ecf5a0119063b45e1fdfc9" translate="yes" xml:space="preserve">
          <source>. This construct is useful for optimizations of what would otherwise be &quot;eternal&quot; matches, because it will not backtrack (see &lt;a href=&quot;#Backtracking&quot;&gt;&quot;Backtracking&quot;&lt;/a&gt;). It may also be useful in places where the &quot;grab all you can, and do not give anything back&quot; semantic is desirable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50585be931797e352a16a31cff946364d2998523" translate="yes" xml:space="preserve">
          <source>. This construct is useful for optimizations of what would otherwise be &quot;eternal&quot; matches, because it will not backtrack (see &lt;a href=&quot;#Backtracking&quot;&gt;Backtracking&lt;/a&gt;). It may also be useful in places where the &quot;grab all you can, and do not give anything back&quot; semantic is desirable.</source>
          <target state="translated">。此构造对于优化否则将是&amp;ldquo;永恒&amp;rdquo;匹配的内容很有用，因为它不会回溯（请参阅&lt;a href=&quot;#Backtracking&quot;&gt;Backtracking&lt;/a&gt;）。在需要&amp;ldquo;尽你所能，不退还任何东西&amp;rdquo;语义的地方，此方法也很有用。</target>
        </trans-unit>
        <trans-unit id="5dbb5bbf55288455005a9b2624554c934ac032cd" translate="yes" xml:space="preserve">
          <source>. This entered computer lingo via the paper &quot;On Holy Wars and a Plea for Peace&quot; by Danny Cohen, USC/ISI IEN 137, April 1, 1980.</source>
          <target state="translated">。1980年4月1日，USC / ISI IEN 137的Danny Cohen撰写的论文&amp;ldquo;关于神圣的战争和对和平的恳求&amp;rdquo;进入了计算机术语。</target>
        </trans-unit>
        <trans-unit id="3809e0e62de48ea8f912fa229a3b1c19f17c36c5" translate="yes" xml:space="preserve">
          <source>. This file acts as both forward declaration of all package routines, and as timestamp for the last update of the hierarchy.</source>
          <target state="translated">。该文件既充当所有包例程的前向声明，又充当层次结构的最后更新的时间戳。</target>
        </trans-unit>
        <trans-unit id="47f0695b79e4a62f046bf4d6a56dc69b6e31a2b7" translate="yes" xml:space="preserve">
          <source>. This file resides somewhere deep in the location you installed your perl library, find it out by</source>
          <target state="translated">。该文件位于您安装Perl库的位置的深处，通过以下方式查找</target>
        </trans-unit>
        <trans-unit id="ae2be3d4dab06ff8de1c3af65b87672a1f250c96" translate="yes" xml:space="preserve">
          <source>. This gives one an access to EMX's</source>
          <target state="translated">。这使人们可以访问EMX</target>
        </trans-unit>
        <trans-unit id="46aab4ac7dc98f7e211f64d569ae1ce3a7b4af8a" translate="yes" xml:space="preserve">
          <source>. This includes methods inherited or imported by &lt;code&gt;$obj&lt;/code&gt; , &lt;code&gt;CLASS&lt;/code&gt; , or &lt;code&gt;VAL&lt;/code&gt; .</source>
          <target state="translated">。这包括 &lt;code&gt;$obj&lt;/code&gt; ， &lt;code&gt;CLASS&lt;/code&gt; 或 &lt;code&gt;VAL&lt;/code&gt; 继承或导入的方法。</target>
        </trans-unit>
        <trans-unit id="7fe493fe2df58e31314e35f753c63c8bcdf1f60d" translate="yes" xml:space="preserve">
          <source>. This includes methods inherited or imported by &lt;code&gt;$obj&lt;/code&gt;, &lt;code&gt;CLASS&lt;/code&gt;, or &lt;code&gt;VAL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85307dde9a09b32449c60a5313b98a5973ff2c7" translate="yes" xml:space="preserve">
          <source>. This is a private hash where every object is stored. An &quot;object&quot; in this sense is any reference (blessed or unblessed) that has been used as a field hash key.</source>
          <target state="translated">。这是存储每个对象的私有哈希。从这个意义上讲，&amp;ldquo;对象&amp;rdquo;是用作字段哈希键的任何引用（有福或无福）。</target>
        </trans-unit>
        <trans-unit id="a2cdaa392edbf49e429fe1dc9214079db19f181c" translate="yes" xml:space="preserve">
          <source>. This is a special file already opened on the script, so that there can be no race condition for evil scripts to exploit. On these systems, Perl should be compiled with &lt;code&gt;-DSETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt; . The</source>
          <target state="translated">。这是已经在脚本上打开的特殊文件，因此不会存在恶意脚本利用的竞争条件。在这些系统上，应该使用 &lt;code&gt;-DSETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt; 编译Perl 。的</target>
        </trans-unit>
        <trans-unit id="277b7f26027520f2ee1211a1e425554f6a4f4960" translate="yes" xml:space="preserve">
          <source>. This is a special file already opened on the script, so that there can be no race condition for evil scripts to exploit. On these systems, Perl should be compiled with &lt;code&gt;-DSETUID_SCRIPTS_ARE_SECURE_NOW&lt;/code&gt;. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2864f51e0809a4502605d91af0e78f8003a6b91" translate="yes" xml:space="preserve">
          <source>. This is because 66 code points will always be unassigned, and so the &lt;code&gt;Age&lt;/code&gt; for them is the Unicode version in which the decision to make them so was made. For example, &lt;code&gt;U+FDD0&lt;/code&gt; is to be permanently unassigned to a character, and the decision to do that was made in version 3.1, so &lt;code&gt;\p{Age=3.1}&lt;/code&gt; matches this character, as also does &lt;code&gt;\p{Present_In: 3.1}&lt;/code&gt; and up.</source>
          <target state="translated">。这是因为66个代码点将始终未分配，因此它们的 &lt;code&gt;Age&lt;/code&gt; 是Unicode版本，在该版本中做出了这样的决定。例如，将 &lt;code&gt;U+FDD0&lt;/code&gt; 永久取消分配给某个字符，并且决定在3.1版中进行此操作，因此 &lt;code&gt;\p{Age=3.1}&lt;/code&gt; 与此字符匹配， &lt;code&gt;\p{Present_In: 3.1}&lt;/code&gt; 也是如此向上。</target>
        </trans-unit>
        <trans-unit id="bdf07babd3552a309bc961c0381ffe7de7e8f022" translate="yes" xml:space="preserve">
          <source>. This is because the makefile by default sets the drive letter to</source>
          <target state="translated">。这是因为默认情况下，makefile将驱动器号设置为</target>
        </trans-unit>
        <trans-unit id="fc454fe001d6d36df58e092c61a2198720958a66" translate="yes" xml:space="preserve">
          <source>. This is because there is a conflict with a similarly-named file</source>
          <target state="translated">。这是因为与名称相似的文件存在冲突</target>
        </trans-unit>
        <trans-unit id="2a6af843b3f9c3758afa449207e6300ed8332e2a" translate="yes" xml:space="preserve">
          <source>. This is by design. If</source>
          <target state="translated">。这是设计使然。如果</target>
        </trans-unit>
        <trans-unit id="93f5f59e9c411bf2b79d7d72c3b74942de22a532" translate="yes" xml:space="preserve">
          <source>. This is copied under the</source>
          <target state="translated">。这被复制到</target>
        </trans-unit>
        <trans-unit id="4dd3c68fa5c32e16e123eaa693e773f653650f36" translate="yes" xml:space="preserve">
          <source>. This is currently only supported for &lt;code&gt;GNU&lt;/code&gt; ld on &lt;code&gt;ELF&lt;/code&gt; in dynamic loading builds.</source>
          <target state="translated">。当前仅在动态加载版本中的 &lt;code&gt;ELF&lt;/code&gt; 上的 &lt;code&gt;GNU&lt;/code&gt; ld 支持此功能。</target>
        </trans-unit>
        <trans-unit id="e7af8025fe87d5aab31b7a47c749ea1a87fce0d6" translate="yes" xml:space="preserve">
          <source>. This is done at run-time, so is called dynamic scoping. local() always affects global variables, also called package variables or dynamic variables.</source>
          <target state="translated">。这是在运行时完成的，因此称为动态作用域。local（）始终会影响全局变量，也称为包变量或动态变量。</target>
        </trans-unit>
        <trans-unit id="4c25e02bad7d2cac773965d696d2c2a687ad78e4" translate="yes" xml:space="preserve">
          <source>. This is done from</source>
          <target state="translated">。这是从完成</target>
        </trans-unit>
        <trans-unit id="b27ee6639c423265aa7d8874b0268983c66fc9bf" translate="yes" xml:space="preserve">
          <source>. This is installed again by running &lt;code&gt;cpan Bundle::Snapshot_2012_05_21_00&lt;/code&gt; , or installing &lt;code&gt;Bundle::Snapshot_2012_05_21_00&lt;/code&gt; from the CPAN shell.</source>
          <target state="translated">。通过运行 &lt;code&gt;cpan Bundle::Snapshot_2012_05_21_00&lt;/code&gt; 或从CPAN shell 安装 &lt;code&gt;Bundle::Snapshot_2012_05_21_00&lt;/code&gt; 再次安装此文件。</target>
        </trans-unit>
        <trans-unit id="3823ddaf1238d01760d00a61d4a308fff63739d8" translate="yes" xml:space="preserve">
          <source>. This is normal and expected. (There is a conflict with a similarly-named file</source>
          <target state="translated">。这是正常现象，是预期的。（与名称相似的文件存在冲突</target>
        </trans-unit>
        <trans-unit id="58c655d0e38e80b9ecc3fca4e245f5ce10c2d9a2" translate="yes" xml:space="preserve">
          <source>. This is probably OK, as most perl scripts shipped with Solaris use an explicit path. (There are a few exceptions, such as</source>
          <target state="translated">。这可能是可以的，因为Solaris附带的大多数perl脚本都使用显式路径。（有一些例外，例如</target>
        </trans-unit>
        <trans-unit id="0e883175469b1c783e8a78114606c2d561139be6" translate="yes" xml:space="preserve">
          <source>. This is rarely needed, as Perl manages its memory quite well. But the option exists, should a class wish to perform specific actions upon the destruction of an instance.</source>
          <target state="translated">。这很少需要，因为Perl可以很好地管理其内存。但是，如果类希望在实例销毁后执行特定操作，则存在该选项。</target>
        </trans-unit>
        <trans-unit id="333093d5d5321fc34ce46ed78526668442668aef" translate="yes" xml:space="preserve">
          <source>. This is similar to &lt;code&gt;sv_2mortal&lt;/code&gt; in that it is also a mechanism for doing a delayed &lt;code&gt;SvREFCNT_dec&lt;/code&gt; . However, while &lt;code&gt;sv_2mortal&lt;/code&gt; extends the lifetime of &lt;code&gt;sv&lt;/code&gt; until the beginning of the next statement, &lt;code&gt;SAVEFREESV&lt;/code&gt; extends it until the end of the enclosing scope. These lifetimes can be wildly different.</source>
          <target state="translated">。这与 &lt;code&gt;sv_2mortal&lt;/code&gt; 相似，这也是执行延迟 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 的机制。但是，尽管 &lt;code&gt;sv_2mortal&lt;/code&gt; 将 &lt;code&gt;sv&lt;/code&gt; 的生存期延长到下 &lt;code&gt;SAVEFREESV&lt;/code&gt; 语句的开始，而SAVEFREESV 则将其延长到封闭范围的末尾。这些生命周期可能截然不同。</target>
        </trans-unit>
        <trans-unit id="c2f23d830008007d5d457a01dc89576f19b1a675" translate="yes" xml:space="preserve">
          <source>. This is similar to &lt;code&gt;sv_2mortal&lt;/code&gt; in that it is also a mechanism for doing a delayed &lt;code&gt;SvREFCNT_dec&lt;/code&gt;. However, while &lt;code&gt;sv_2mortal&lt;/code&gt; extends the lifetime of &lt;code&gt;sv&lt;/code&gt; until the beginning of the next statement, &lt;code&gt;SAVEFREESV&lt;/code&gt; extends it until the end of the enclosing scope. These lifetimes can be wildly different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6926c3ac4d7edc58bc3ea380b4d2d54d9f28838f" translate="yes" xml:space="preserve">
          <source>. This macro evaluates its arguments more than once. If you are using &lt;code&gt;Perl_custom_op_xop&lt;/code&gt; to retreive a &lt;code&gt;XOP *&lt;/code&gt; from a &lt;code&gt;OP *&lt;/code&gt; , use the more efficient &lt;a href=&quot;#XopENTRYCUSTOM&quot;&gt;XopENTRYCUSTOM&lt;/a&gt; instead.</source>
          <target state="translated">。该宏多次评估其自变量。如果使用 &lt;code&gt;Perl_custom_op_xop&lt;/code&gt; 从 &lt;code&gt;OP *&lt;/code&gt; 检索 &lt;code&gt;XOP *&lt;/code&gt; *，请改用效率更高的&lt;a href=&quot;#XopENTRYCUSTOM&quot;&gt;XopENTRYCUSTOM&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca414c709e1a90a43e4a8b465a788e53c69235fb" translate="yes" xml:space="preserve">
          <source>. This may be useful e.g., if you need to run the installer many times and do not want to make many interactive changes in the GUI.</source>
          <target state="translated">。例如，如果您需要多次运行安装程序并且不想在GUI中进行许多交互式更改，这可能会很有用。</target>
        </trans-unit>
        <trans-unit id="e3776f3fabf7ab606cceb1e6f3f63ecb05da2010" translate="yes" xml:space="preserve">
          <source>. This means that if you have already detected the error by checking &lt;code&gt;$@&lt;/code&gt; and you want the program to continue, you must remember to pop the</source>
          <target state="translated">。这意味着，如果您已经通过检查 &lt;code&gt;$@&lt;/code&gt; 检测到错误，并且希望程序继续运行，则必须记住弹出</target>
        </trans-unit>
        <trans-unit id="b2c905e3737670dc0a16e9b65486ea71a8080a95" translate="yes" xml:space="preserve">
          <source>. This means that in &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $x = 1 + $x&lt;/code&gt; the second $x refers to one declared previously.</source>
          <target state="translated">。这意味着在 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $x = 1 + $x&lt;/code&gt; ，第二个$ x引用先前声明的一个。</target>
        </trans-unit>
        <trans-unit id="616674a02842b0e140325ccd23516cf1139a3c4a" translate="yes" xml:space="preserve">
          <source>. This means that in &lt;code&gt;my $x = 1 + $x&lt;/code&gt; the second $x refers to one declared previously.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
