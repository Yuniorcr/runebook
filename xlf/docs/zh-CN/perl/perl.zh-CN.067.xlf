<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="da5e762f36d24957c21350e93040120e9b2b637e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_DUPLOCALE&lt;/code&gt; symbol, which indicates to the C program that the duplocale() routine is available to duplicate a locale object.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_DUPLOCALE&lt;/code&gt; 符号，该符号向C程序指示duplocale（）例程可用于复制语言环境对象。</target>
        </trans-unit>
        <trans-unit id="feae0a63aaa2182b296fd904e1c563d6c234cfec" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_EACCESS&lt;/code&gt; symbol, which indicates to the C program that the eaccess() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_EACCESS&lt;/code&gt; 符号，该符号向C程序指示eaccess（）例程可用。</target>
        </trans-unit>
        <trans-unit id="fc59246a386f8974acd05f0aa4d2f594daee00df" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDGRENT&lt;/code&gt; symbol, which indicates to the C program that the endgrent() routine is available for sequential access of the group database.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDGRENT&lt;/code&gt; 符号，该符号向C程序表明endgrent（）例程可用于组数据库的顺序访问。</target>
        </trans-unit>
        <trans-unit id="c3521391643a5fa8000971d289ffbc808252e90e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDGRENT_R&lt;/code&gt; symbol, which indicates to the C program that the endgrent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDGRENT_R&lt;/code&gt; 符号，该符号向C程序指示endgrent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="8ceecbf6a76e7908e513f849eb1de5b3d245fac5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDHOSTENT_R&lt;/code&gt; symbol, which indicates to the C program that the endhostent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDHOSTENT_R&lt;/code&gt; 符号，该符号向C程序表明endhostent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="85d098e6acbbd799d64738081bddb484d9041c70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDNETENT_R&lt;/code&gt; symbol, which indicates to the C program that the endnetent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDNETENT_R&lt;/code&gt; 符号，该符号向C程序指示endnetent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="416322d92948c65411d0e4d7da6d1b4fcb72938b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDPROTOENT_R&lt;/code&gt; symbol, which indicates to the C program that the endprotoent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDPROTOENT_R&lt;/code&gt; 符号，该符号向C程序指示endprotoent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="93b579b440342c900503cc17debbb4a84724f3f2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDPWENT&lt;/code&gt; symbol, which indicates to the C program that the endpwent() routine is available for sequential access of the passwd database.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDPWENT&lt;/code&gt; 符号，该符号向C程序指示endpwent（）例程可用于顺序访问passwd数据库。</target>
        </trans-unit>
        <trans-unit id="5fd0311a9220d51e48d013d60dc59e4fb98646e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDPWENT_R&lt;/code&gt; symbol, which indicates to the C program that the endpwent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDPWENT_R&lt;/code&gt; 符号，该符号向C程序指示endpwent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="1975eb77352c3791983498df03109baa693a8003" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ENDSERVENT_R&lt;/code&gt; symbol, which indicates to the C program that the endservent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ENDSERVENT_R&lt;/code&gt; 符号，该符号向C程序指示endersvent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="b18c6ff2e894197a9996c9fa5fb041fb1da60ebb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ERF&lt;/code&gt; symbol, which indicates to the C program that the erf() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ERF&lt;/code&gt; 符号，该符号向C程序指示erf（）例程可用。</target>
        </trans-unit>
        <trans-unit id="11cfc319c8768f753a10806f70be842234f0d8c6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ERFC&lt;/code&gt; symbol, which indicates to the C program that the erfc() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ERFC&lt;/code&gt; 符号，该符号向C程序指示erfc（）例程可用。</target>
        </trans-unit>
        <trans-unit id="607d8c09f8852e64deb233f04ab669fe416307e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FAST_STDIO&lt;/code&gt; symbol, which indicates to the C program that the &quot;fast stdio&quot; is available to manipulate the stdio buffers directly.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FAST_STDIO&lt;/code&gt; 符号，该符号向C程序表明&amp;ldquo;快速stdio&amp;rdquo;可用于直接操作stdio缓冲区。</target>
        </trans-unit>
        <trans-unit id="4ccef8ea96652d985074f68d669458feccd5e889" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHDIR&lt;/code&gt; symbol, which indicates to the C program that the fchdir() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FCHDIR&lt;/code&gt; 符号，该符号向C程序表明fchdir（）例程可用。</target>
        </trans-unit>
        <trans-unit id="2b2fd22f810dafdb7f08dee5c7b2267e8ea89ef0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHMOD&lt;/code&gt; symbol, which indicates to the C program that the fchmod() routine is available to change mode of opened files.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FCHMOD&lt;/code&gt; 符号，该符号向C程序表明fchmod（）例程可用于更改打开的文件的模式。</target>
        </trans-unit>
        <trans-unit id="b106888c38a0833e62ad3d18b096af53fba36f85" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHMODAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; fchmodat() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FCHMODAT&lt;/code&gt; 符号，该符号指示 &lt;code&gt;POSIX&lt;/code&gt; fchmodat（）函数可用。</target>
        </trans-unit>
        <trans-unit id="9c49735af970135b28a3d9f02063c62ac7d11452" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCHOWN&lt;/code&gt; symbol, which indicates to the C program that the fchown() routine is available to change ownership of opened files.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FCHOWN&lt;/code&gt; 符号，该符号向C程序表明fchown（）例程可用于更改打开的文件的所有权。</target>
        </trans-unit>
        <trans-unit id="f77965caac290b89da17681f28495b9f8fdfe67f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FCNTL&lt;/code&gt; symbol, and indicates whether the fcntl() function exists</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FCNTL&lt;/code&gt; 符号，并指示fcntl（）函数是否存在</target>
        </trans-unit>
        <trans-unit id="cee857783e2b5506137b733e1de2e80aa525f2cc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FDCLOSE&lt;/code&gt; symbol, which indicates to the C program that the fdclose() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FDCLOSE&lt;/code&gt; 符号，该符号向C程序表明fdclose（）例程可用。</target>
        </trans-unit>
        <trans-unit id="a2fcb0bfc83505fad937da436d307c0c9ada3232" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FDIM&lt;/code&gt; symbol, which indicates to the C program that the fdim() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FDIM&lt;/code&gt; 符号，该符号向C程序指示fdim（）例程可用。</target>
        </trans-unit>
        <trans-unit id="11e2724a5c3ae4b7f0de83cc60d5928d8a3f4d81" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FINITE&lt;/code&gt; symbol, which indicates to the C program that the finite() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FINITE&lt;/code&gt; 符号，该符号向C程序指示finite（）例程可用。</target>
        </trans-unit>
        <trans-unit id="0caf0447193e8dd99c3be264377abad5f070779b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FINITEL&lt;/code&gt; symbol, which indicates to the C program that the finitel() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FINITEL&lt;/code&gt; 符号，该符号向C程序指示finitel（）例程可用。</target>
        </trans-unit>
        <trans-unit id="ef6f0d37edde2d9b9e3068f863ad72dfd028852d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FLOCK_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the flock() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FLOCK_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为flock（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="b7230abc643d63b3ff949047a34fa476fec01c89" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FMA&lt;/code&gt; symbol, which indicates to the C program that the fma() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FMA&lt;/code&gt; 符号，该符号向C程序表明fma（）例程可用。</target>
        </trans-unit>
        <trans-unit id="fe2ccccffbf8d2f15aa401771663c24fe0ef72b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FMAX&lt;/code&gt; symbol, which indicates to the C program that the fmax() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FMAX&lt;/code&gt; 符号，该符号向C程序指示fmax（）例程可用。</target>
        </trans-unit>
        <trans-unit id="3df9fdbc0ab5f9af76565f047d2b383854350a70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FMIN&lt;/code&gt; symbol, which indicates to the C program that the fmin() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FMIN&lt;/code&gt; 符号，该符号向C程序表明fmin（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4c07c14ce41ab8f9b9c87417a26676cf07833635" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FORK&lt;/code&gt; symbol, which indicates to the C program that the fork() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FORK&lt;/code&gt; 符号，该符号向C程序指示fork（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c926988df26ecaa58ebdfaa007ae97cb94e0a26e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPATHCONF&lt;/code&gt; symbol, which indicates to the C program that the pathconf() routine is available to determine file-system related limits and options associated with a given open file descriptor.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FPATHCONF&lt;/code&gt; 符号，该符号向C程序表明pathconf（）例程可用于确定与给定打开文件描述符关联的文件系统相关限制和选项。</target>
        </trans-unit>
        <trans-unit id="9bbd2019de42dcc3e64e59b2a0a5d922b5b1d74e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPCLASS&lt;/code&gt; symbol, which indicates to the C program that the fpclass() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FPCLASS&lt;/code&gt; 符号，该符号向C程序指示fpclass（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d5fe50cfedd8bbd389632006ec016bddca06ada9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPCLASSIFY&lt;/code&gt; symbol, which indicates to the C program that the fpclassify() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FPCLASSIFY&lt;/code&gt; 符号，该符号向C程序指示fpclassify（）例程可用。</target>
        </trans-unit>
        <trans-unit id="917f1d97f54623a4d5b664a0773e1e59567c63fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FPCLASSL&lt;/code&gt; symbol, which indicates to the C program that the fpclassl() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FPCLASSL&lt;/code&gt; 符号，该符号向C程序指示fpclassl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="7d55b5137fd8aae7bd0294444ae3398b83ef2eb0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FP_CLASS&lt;/code&gt; symbol, which indicates to the C program that the fp_class() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FP_CLASS&lt;/code&gt; 符号，该符号向C程序指示fp_class（）例程可用。</target>
        </trans-unit>
        <trans-unit id="b4998906b4a9ccf7bdee0f004832d674aa7bbd9a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FP_CLASSIFY&lt;/code&gt; symbol, which indicates to the C program that the fp_classify() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FP_CLASSIFY&lt;/code&gt; 符号，该符号向C程序指示fp_classify（）例程可用。</target>
        </trans-unit>
        <trans-unit id="41f0ce9e1b9e64ce9cd583c93400552f4e5a6a52" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FP_CLASSL&lt;/code&gt; symbol, which indicates to the C program that the fp_classl() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FP_CLASSL&lt;/code&gt; 符号，该符号向C程序指示fp_classl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="3413f93599429afe464b8d3f686c3db466d81209" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FREELOCALE&lt;/code&gt; symbol, which indicates to the C program that the freelocale() routine is available to deallocates the resources associated with a locale object.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FREELOCALE&lt;/code&gt; 符号，该符号向C程序指示freelocale（）例程可用于取消分配与语言环境对象关联的资源。</target>
        </trans-unit>
        <trans-unit id="9a718ac3558705993c3b67243a1457d9b8addbd1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FREXPL&lt;/code&gt; symbol, which indicates to the C program that the frexpl() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FREXPL&lt;/code&gt; 符号，该符号向C程序指示frexpl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="80c041b61a3854b0c9acdcab50bfa3457a568fcc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSEEKO&lt;/code&gt; symbol, which indicates to the C program that the fseeko() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FSEEKO&lt;/code&gt; 符号，该符号向C程序表明fseeko（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4051a12dce9cc656f7cd21a6c5cca4ada63aa004" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSTATFS&lt;/code&gt; symbol, which indicates to the C program that the fstatfs() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FSTATFS&lt;/code&gt; 符号，该符号向C程序表明fstatfs（）例程可用。</target>
        </trans-unit>
        <trans-unit id="376e9454716c971bba83efc24ced69d3a6928836" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSTATVFS&lt;/code&gt; symbol, which indicates to the C program that the fstatvfs() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FSTATVFS&lt;/code&gt; 符号，该符号向C程序表明fstatvfs（）例程可用。</target>
        </trans-unit>
        <trans-unit id="435d2dacb00d4fba9f51b8f56fc86f2e5cd1c130" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FSYNC&lt;/code&gt; symbol, which indicates to the C program that the fsync() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FSYNC&lt;/code&gt; 符号，该符号向C程序表明fsync（）例程可用。</target>
        </trans-unit>
        <trans-unit id="3d1a5f264f0ada9a48dfb15cda9ab839d11e60e6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FTELLO&lt;/code&gt; symbol, which indicates to the C program that the ftello() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FTELLO&lt;/code&gt; 符号，该符号向C程序指示ftello（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4064b0e9f22fe23434bd0ec738f58649333e1d6f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FTIME&lt;/code&gt; symbol, which indicates that the ftime() routine exists. The ftime() routine is basically a sub-second accuracy clock.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_FTIME&lt;/code&gt; 符号，该符号指示存在ftime（）例程。ftime（）例程基本上是亚秒级精度时钟。</target>
        </trans-unit>
        <trans-unit id="993d1a28d890386a8f56af4b9e1e99b1a4831c24" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_FUTIMES&lt;/code&gt; symbol, which indicates to the C program that the futimes() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_FUTIMES&lt;/code&gt; 符号，该符号向C程序指示futimes（）例程可用。</target>
        </trans-unit>
        <trans-unit id="430e1b55a3f8e2489975bca6250ad0a05f75ddda" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GAI_STRERROR&lt;/code&gt; symbol if the gai_strerror() routine is available and can be used to translate error codes returned by getaddrinfo() into human readable strings.</source>
          <target state="translated">如果gai_strerror（）例程可用，则此变量有条件地定义 &lt;code&gt;HAS_GAI_STRERROR&lt;/code&gt; 符号，该变量可用于将getaddrinfo（）返回的错误代码转换为人类可读的字符串。</target>
        </trans-unit>
        <trans-unit id="43ac0e0e1a1e5f5c73c1a3d69bc5a74620bbdbac" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETADDRINFO&lt;/code&gt; symbol, which indicates to the C program that the getaddrinfo() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETADDRINFO&lt;/code&gt; 符号，该符号向C程序指示getaddrinfo（）函数可用。</target>
        </trans-unit>
        <trans-unit id="7cc91f8b53047d998123d92a6d27f96f7dfebc76" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETCWD&lt;/code&gt; symbol, which indicates to the C program that the getcwd() routine is available to get the current working directory.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETCWD&lt;/code&gt; 符号，该符号向C程序表明getcwd（）例程可用于获取当前工作目录。</target>
        </trans-unit>
        <trans-unit id="e7004f7e14bed6afec5bd1f4a037a94dbc84c28f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETFSSTAT&lt;/code&gt; symbol, which indicates to the C program that the getfsstat() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETFSSTAT&lt;/code&gt; 符号，该符号向C程序指示getfsstat（）例程可用。</target>
        </trans-unit>
        <trans-unit id="2938f1d0c5a29f26cd258b1d2d58005964b3f928" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRENT&lt;/code&gt; symbol, which indicates to the C program that the getgrent() routine is available for sequential access of the group database.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETGRENT&lt;/code&gt; 符号，该符号向C程序表明getgrent（）例程可用于组数据库的顺序访问。</target>
        </trans-unit>
        <trans-unit id="09573807a7f9ee202cbace6d8d9b71d9e084b114" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRENT_R&lt;/code&gt; symbol, which indicates to the C program that the getgrent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETGRENT_R&lt;/code&gt; 符号，该符号向C程序指示getgrent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="ffdee0c89f8e16f98534bde8ff72861b068f14e2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRGID_R&lt;/code&gt; symbol, which indicates to the C program that the getgrgid_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETGRGID_R&lt;/code&gt; 符号，该符号向C程序指示getgrgid_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="030e0d1f9c9ec5d5113cadafdb1d46cca6636eba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGRNAM_R&lt;/code&gt; symbol, which indicates to the C program that the getgrnam_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETGRNAM_R&lt;/code&gt; 符号，该符号向C程序指示getgrnam_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="5df49eaa2617f7f95ae5a3bfea499bb49b6e147a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETGROUPS&lt;/code&gt; symbol, which indicates to the C program that the getgroups() routine is available to get the list of process groups.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETGROUPS&lt;/code&gt; 符号，该符号向C程序指示getgroups（）例程可用于获取进程组列表。</target>
        </trans-unit>
        <trans-unit id="800265a52655b0eed9fc30b1377171be6fe75acb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYADDR&lt;/code&gt; symbol, which indicates to the C program that the gethostbyaddr() routine is available to look up hosts by their &lt;code&gt;IP&lt;/code&gt; addresses.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETHOSTBYADDR&lt;/code&gt; 符号，该符号向C程序表明gethostbyaddr（）例程可用于按主机的 &lt;code&gt;IP&lt;/code&gt; 地址查找主机。</target>
        </trans-unit>
        <trans-unit id="3ea6fb7457d69ab022ea88e866995c66dd82da32" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYADDR_R&lt;/code&gt; symbol, which indicates to the C program that the gethostbyaddr_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETHOSTBYADDR_R&lt;/code&gt; 符号，该符号向C程序指示gethostbyaddr_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f6e8e21dbcc61a6d007e0d9229782dc31b5d46a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYNAME&lt;/code&gt; symbol, which indicates to the C program that the gethostbyname() routine is available to look up host names in some data base or other.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETHOSTBYNAME&lt;/code&gt; 符号，该符号向C程序表明gethostbyname（）例程可用于在某些数据库或其他数据库中查找主机名。</target>
        </trans-unit>
        <trans-unit id="4bf98ecfa6e8572b6387b8b2c890ea9af37d6e48" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the gethostbyname_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETHOSTBYNAME_R&lt;/code&gt; 符号，该符号向C程序指示gethostbyname_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="8ab2674e64e01f9d704936c384471673343e5f6d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTENT_R&lt;/code&gt; symbol, which indicates to the C program that the gethostent_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETHOSTENT_R&lt;/code&gt; 符号，该符号向C程序指示gethostent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="b5275b5b15c84ca1128b06be5161f949867399a1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOSTNAME&lt;/code&gt; symbol, which indicates to the C program that the gethostname() routine may be used to derive the host name.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETHOSTNAME&lt;/code&gt; 符号，该符号向C程序指示gethostname（）例程可用于派生主机名。</target>
        </trans-unit>
        <trans-unit id="db277869ea8d6e46267e65bb1f91f362288123a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETHOST_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various gethost*() functions. See also</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETHOST_PROTOS&lt;/code&gt; 符号，该符号向C程序表明&amp;lt;netdb.h&amp;gt;为各种gethost *（）函数提供了原型。也可以看看</target>
        </trans-unit>
        <trans-unit id="6911ca40dacf0175aa25657133be0fd097867be4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETITIMER&lt;/code&gt; symbol, which indicates to the C program that the getitimer() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETITIMER&lt;/code&gt; 符号，该符号向C程序指示getitimer（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f04b4d71f3b0d33d951527806b9faa1b90d89c13" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETLOGIN&lt;/code&gt; symbol, which indicates to the C program that the getlogin() routine is available to get the login name.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETLOGIN&lt;/code&gt; 符号，该符号向C程序指示getlogin（）例程可用于获取登录名。</target>
        </trans-unit>
        <trans-unit id="cf1e0fa70097167eda24ba22a85cbfefb047a83b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETLOGIN_R&lt;/code&gt; symbol, which indicates to the C program that the getlogin_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETLOGIN_R&lt;/code&gt; 符号，该符号向C程序指示getlogin_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="3040c09147f006139a9558f8a311da05ada71cc3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETMNT&lt;/code&gt; symbol, which indicates to the C program that the getmnt() routine is available to retrieve one or more mount info blocks by filename.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETMNT&lt;/code&gt; 符号，该符号向C程序指示getmnt（）例程可用于按文件名检索一个或多个安装信息块。</target>
        </trans-unit>
        <trans-unit id="df153c694674c9eb98ea57c25cde4b2529e93311" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETMNTENT&lt;/code&gt; symbol, which indicates to the C program that the getmntent() routine is available to iterate through mounted files to get their mount info.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETMNTENT&lt;/code&gt; 符号，该符号向C程序指示getmntent（）例程可用于遍历已装入的文件以获取其装入信息。</target>
        </trans-unit>
        <trans-unit id="998b35a864ca7293bfdbdc5a68d5a152a1d7c29e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNAMEINFO&lt;/code&gt; symbol, which indicates to the C program that the getnameinfo() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETNAMEINFO&lt;/code&gt; 符号，该符号向C程序指示getnameinfo（）函数可用。</target>
        </trans-unit>
        <trans-unit id="8474869224bdf2ca0fc35d392c15a984241143e3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYADDR&lt;/code&gt; symbol, which indicates to the C program that the getnetbyaddr() routine is available to look up networks by their &lt;code&gt;IP&lt;/code&gt; addresses.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETNETBYADDR&lt;/code&gt; 符号，该符号向C程序表明getnetbyaddr（）例程可用于通过其 &lt;code&gt;IP&lt;/code&gt; 地址查找网络。</target>
        </trans-unit>
        <trans-unit id="f75e54ebc6a22f2ef91ec6d724d333f9d033387c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYADDR_R&lt;/code&gt; symbol, which indicates to the C program that the getnetbyaddr_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETNETBYADDR_R&lt;/code&gt; 符号，该符号向C程序指示getnetbyaddr_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="6b5ef841b8644e4d43f32175f64b87de38e60b50" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYNAME&lt;/code&gt; symbol, which indicates to the C program that the getnetbyname() routine is available to look up networks by their names.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETNETBYNAME&lt;/code&gt; 符号，该符号向C程序表明getnetbyname（）例程可用于按名称查找网络。</target>
        </trans-unit>
        <trans-unit id="721c47b838e08cebc4dfc525ba1a86bef8ed22b8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the getnetbyname_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETNETBYNAME_R&lt;/code&gt; 符号，该符号向C程序表明getnetbyname_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="5e1f8d2dc25f66de5fe6af8a19d35c75f17a5000" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNETENT_R&lt;/code&gt; symbol, which indicates to the C program that the getnetent_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETNETENT_R&lt;/code&gt; 符号，该符号向C程序指示getnetent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="bceed1c7ecb752248dae3627ddd88c982cb3b42e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETNET_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various getnet*() functions. See also</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETNET_PROTOS&lt;/code&gt; 符号，该符号向C程序表明&amp;lt;netdb.h&amp;gt;为各种getnet *（）函数提供了原型。也可以看看</target>
        </trans-unit>
        <trans-unit id="7aa9f35159df360d21bd577eca2bcbf715c7998d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPGID&lt;/code&gt; symbol, which indicates to the C program that the getpgid(pid) function is available to get the process group id.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPGID&lt;/code&gt; 符号，该符号向C程序指示getpgid（pid）函数可用于获取进程组ID。</target>
        </trans-unit>
        <trans-unit id="04f375e83ea7b8de60cfb2691530d1bc9774418d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPPID&lt;/code&gt; symbol, which indicates to the C program that the getppid() routine is available to get the parent process &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPPID&lt;/code&gt; 符号，该符号向C程序表明getppid（）例程可用于获取父进程 &lt;code&gt;ID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd53aba7859e8609cee2c8eef7587e2855275107" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPPID&lt;/code&gt; symbol, which indicates to the C program that the getppid() routine is available to get the parent process &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPPID&lt;/code&gt; 符号，该符号向C程序指示getppid（）例程可用于获取父进程 &lt;code&gt;ID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a78c1d0e9007adf39f8c4627cff4de19b836276" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNAME&lt;/code&gt; symbol, which indicates to the C program that the getprotobyname() routine is available to look up protocols by their name.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPROTOBYNAME&lt;/code&gt; 符号，该符号向C程序表明getprotobyname（）例程可用于按其名称查找协议。</target>
        </trans-unit>
        <trans-unit id="94ee0c74e30f9d4b71ac73fae7e719b93f83ff28" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the getprotobyname_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETPROTOBYNAME_R&lt;/code&gt; 符号，该符号向C程序指示getprotobyname_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="89d5b6b59bfef172f96bfa6cc53c69ec52250783" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNUMBER&lt;/code&gt; symbol, which indicates to the C program that the getprotobynumber() routine is available to look up protocols by their number.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPROTOBYNUMBER&lt;/code&gt; 符号，该符号向C程序表明getprotobynumber（）例程可用于按协议号查找协议。</target>
        </trans-unit>
        <trans-unit id="368c95f7c37edd3f397895e63f2b56a7b2a21f03" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOBYNUMBER_R&lt;/code&gt; symbol, which indicates to the C program that the getprotobynumber_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPROTOBYNUMBER_R&lt;/code&gt; 符号，该符号向C程序指示getprotobynumber_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d05bd546cb9ce10a4ef01cbbaaa2e5620cb6fb98" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTOENT_R&lt;/code&gt; symbol, which indicates to the C program that the getprotoent_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPROTOENT_R&lt;/code&gt; 符号，该符号向C程序指示getprotoent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f547c005ea9729c6769bbf465f8db85dfc630fb1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPROTO_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various getproto*() functions. See also</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPROTO_PROTOS&lt;/code&gt; 符号，该符号向C程序表明&amp;lt;netdb.h&amp;gt;为各种getproto *（）函数提供了原型。也可以看看</target>
        </trans-unit>
        <trans-unit id="eaee5a550cc6a07f34637bc2870d60dbfb57bba0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWENT&lt;/code&gt; symbol, which indicates to the C program that the getpwent() routine is available for sequential access of the passwd database.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETPWENT&lt;/code&gt; 符号，该符号向C程序指示getpwent（）例程可用于顺序访问passwd数据库。</target>
        </trans-unit>
        <trans-unit id="0cfeae59d099abce81836530d715a51913eaf2a9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWENT_R&lt;/code&gt; symbol, which indicates to the C program that the getpwent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETPWENT_R&lt;/code&gt; 符号，该符号向C程序指示getpwent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="9275e131831690787dbdc11f7dfcedfb8c9f2eda" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWNAM_R&lt;/code&gt; symbol, which indicates to the C program that the getpwnam_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETPWNAM_R&lt;/code&gt; 符号，该符号向C程序指示getpwnam_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="8827a97094e26a9a854d28073049c8082dc5d239" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETPWUID_R&lt;/code&gt; symbol, which indicates to the C program that the getpwuid_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETPWUID_R&lt;/code&gt; 符号，该符号向C程序指示getpwuid_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="ddc4a151da38a54d4688d4389e590a62e281759b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYNAME&lt;/code&gt; symbol, which indicates to the C program that the getservbyname() routine is available to look up services by their name.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETSERVBYNAME&lt;/code&gt; 符号，该符号向C程序表明getservbyname（）例程可用于按其名称查找服务。</target>
        </trans-unit>
        <trans-unit id="f63223f218d82f595643d54737913a982ed89b01" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the getservbyname_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETSERVBYNAME_R&lt;/code&gt; 符号，该符号向C程序表明getservbyname_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="2233b0d3a5dbbbc8649c940b930ca9249fb21aa0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYPORT&lt;/code&gt; symbol, which indicates to the C program that the getservbyport() routine is available to look up services by their port.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETSERVBYPORT&lt;/code&gt; 符号，该符号向C程序表明getservbyport（）例程可用于通过其端口查找服务。</target>
        </trans-unit>
        <trans-unit id="e47e4595e0b65cee2c0cb9c76e2aaaffe9e90733" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVBYPORT_R&lt;/code&gt; symbol, which indicates to the C program that the getservbyport_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETSERVBYPORT_R&lt;/code&gt; 符号，该符号向C程序表明getservbyport_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="07df398a34922beccb5e215e721d52f31b38b932" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERVENT_R&lt;/code&gt; symbol, which indicates to the C program that the getservent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETSERVENT_R&lt;/code&gt; 符号，该符号向C程序指示getservent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="08eec3a50cec026084bfb933ad487f92365051f3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSERV_PROTOS&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;netdb.h&amp;gt; supplies prototypes for the various getserv*() functions. See also</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETSERV_PROTOS&lt;/code&gt; 符号，该符号向C程序表明&amp;lt;netdb.h&amp;gt;为各种getserv *（）函数提供了原型。也可以看看</target>
        </trans-unit>
        <trans-unit id="6ee9b27273c95fe6af664a46ca2e4b018eb2a3bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETSPNAM_R&lt;/code&gt; symbol, which indicates to the C program that the getspnam_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_GETSPNAM_R&lt;/code&gt; 符号，该符号向C程序表明getspnam_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="e672430eb4f4b23e7c8ea71a0d9547945979104c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GETTIMEOFDAY&lt;/code&gt; symbol, which indicates that the gettimeofday() system call exists (to obtain a sub-second accuracy clock). You should probably include &amp;lt;sys/resource.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GETTIMEOFDAY&lt;/code&gt; 符号，该符号指示存在gettimeofday（）系统调用（以获取亚秒级精度时钟）。您可能应该包括&amp;lt;sys / resource.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="84fced701ac1d8972ad41c237d19c362f2099ca2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_GMTIME_R&lt;/code&gt; symbol, which indicates to the C program that the gmtime_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_GMTIME_R&lt;/code&gt; 符号，该符号向C程序指示gmtime_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="1fd3c7d3ad1a3dfa9df8edc33011f70a34e07812" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_HASMNTOPT&lt;/code&gt; symbol, which indicates to the C program that the hasmntopt() routine is available to query the mount options of file systems.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_HASMNTOPT&lt;/code&gt; 符号，该符号向C程序表明hasmntopt（）例程可用于查询文件系统的安装选项。</target>
        </trans-unit>
        <trans-unit id="00e5a920dcdf38a72d0e1f65eec67c25b8f6b02e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ILOGB&lt;/code&gt; symbol, which indicates to the C program that the ilogb() routine is available for extracting the exponent of double x as a signed integer.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ILOGB&lt;/code&gt; 符号，该符号向C程序指示ilogb（）例程可用于提取double x的指数作为有符号整数。</target>
        </trans-unit>
        <trans-unit id="08c0b5bc5432877b8453b37bdcbcd6004c0f3533" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ILOGBL&lt;/code&gt; symbol, which indicates to the C program that the ilogbl() routine is available for extracting the exponent of long double x as a signed integer. If scalbnl is also present we can emulate frexpl.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ILOGBL&lt;/code&gt; 符号，该符号向C程序指示ilogbl（）例程可用于提取long double x的指数作为有符号整数。如果还存在scalbnl，我们可以模拟frexpl。</target>
        </trans-unit>
        <trans-unit id="d7a6e67ac883b1040cb0eb3aa3cd89d5352feb93" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_INETNTOP&lt;/code&gt; symbol, which indicates to the C program that the inet_ntop() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_INETNTOP&lt;/code&gt; 符号，该符号向C程序指示inet_ntop（）函数可用。</target>
        </trans-unit>
        <trans-unit id="22502f98a24d835efbc320660dd0c293f19ac278" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_INETPTON&lt;/code&gt; symbol, which indicates to the C program that the inet_pton() function is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_INETPTON&lt;/code&gt; 符号，该符号向C程序指示inet_pton（）函数可用。</target>
        </trans-unit>
        <trans-unit id="ff67d886f79098d9924c2d3ff3d0db78ccef4ffe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_INET_ATON&lt;/code&gt; symbol, which indicates to the C program that the inet_aton() function is available to parse &lt;code&gt;IP&lt;/code&gt; address &lt;code&gt;dotted-quad&lt;/code&gt; strings.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_INET_ATON&lt;/code&gt; 符号，该符号向C程序指示inet_aton（）函数可用于解析 &lt;code&gt;IP&lt;/code&gt; 地址的 &lt;code&gt;dotted-quad&lt;/code&gt; 进制字符串。</target>
        </trans-unit>
        <trans-unit id="ab41c4767757cf5520d581b43402f2b69d925446" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_IP_MREQ&lt;/code&gt; symbol, which indicates the availability of a struct ip_mreq.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_IP_MREQ&lt;/code&gt; 符号，该符号指示结构ip_mreq的可用性。</target>
        </trans-unit>
        <trans-unit id="55f85ff4272b951d973813125721ee335bf64458" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_IP_MREQ_SOURCE&lt;/code&gt; symbol, which indicates the availability of a struct ip_mreq_source.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_IP_MREQ_SOURCE&lt;/code&gt; 符号，该符号指示结构ip_mreq_source的可用性。</target>
        </trans-unit>
        <trans-unit id="72388a4f1ba17b3fd0e62b5152d323f4548da870" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISASCII&lt;/code&gt; constant, which indicates to the C program that isascii() is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ISASCII&lt;/code&gt; 常数，该常数向C程序指示isascii（）可用。</target>
        </trans-unit>
        <trans-unit id="5a5c21b2a9944da065cad96d5e707e6c815182d3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISBLANK&lt;/code&gt; constant, which indicates to the C program that isblank() is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ISBLANK&lt;/code&gt; 常量，该常量向C程序指示isblank（）可用。</target>
        </trans-unit>
        <trans-unit id="fcfef1f9f54abc2b109ba1f21e62b9cb30d767cd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISFINITE&lt;/code&gt; symbol, which indicates to the C program that the isfinite() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ISFINITE&lt;/code&gt; 符号，该符号向C程序指示isfinite（）例程可用。</target>
        </trans-unit>
        <trans-unit id="b52552318ae18b7d8b2396ea779d84538ec17c45" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISFINITEL&lt;/code&gt; symbol, which indicates to the C program that the isfinitel() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ISFINITEL&lt;/code&gt; 符号，该符号向C程序指示isfinitel（）例程可用。</target>
        </trans-unit>
        <trans-unit id="5cd5f09b0af60ecfb75127a22d7e1ee2c772c023" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISINF&lt;/code&gt; symbol, which indicates to the C program that the isinf() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ISINF&lt;/code&gt; 符号，该符号向C程序指示isinf（）例程可用。</target>
        </trans-unit>
        <trans-unit id="a94a2b2142e85325054f5f4823ba6b83d8fa642a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISINFL&lt;/code&gt; symbol, which indicates to the C program that the isinfl() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ISINFL&lt;/code&gt; 符号，该符号向C程序指示isinfl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="e264280a9cf9d3d86b3d9d38e5fb7995161a3146" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISLESS&lt;/code&gt; symbol, which indicates to the C program that the isless() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ISLESS&lt;/code&gt; 符号，该符号向C程序指示isless（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4fd09d1b06bd7c7d728ac0ffd960b30379c4a768" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISNAN&lt;/code&gt; symbol, which indicates to the C program that the isnan() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ISNAN&lt;/code&gt; 符号，该符号向C程序指示isnan（）例程可用。</target>
        </trans-unit>
        <trans-unit id="0ae4b6ae907fe92bcc5cb3aa1a2e0540e4b58a60" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISNANL&lt;/code&gt; symbol, which indicates to the C program that the isnanl() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_ISNANL&lt;/code&gt; 符号，该符号向C程序指示isnanl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="94a6de8a4e8a40a43a72c3936b6277b9b9b82512" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ISNORMAL&lt;/code&gt; symbol, which indicates to the C program that the isnormal() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ISNORMAL&lt;/code&gt; 符号，该符号向C程序指示isnormal（）例程可用。</target>
        </trans-unit>
        <trans-unit id="9461c7ba3e2b8bec7df67bc8c282aae74033fc39" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_KILLPG&lt;/code&gt; symbol, which indicates to the C program that the killpg() routine is available to kill process groups.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_KILLPG&lt;/code&gt; 符号，该符号向C程序指示killpg（）例程可用于终止进程组。</target>
        </trans-unit>
        <trans-unit id="274a3e469317759be16452a214542288c6b937a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LCHOWN&lt;/code&gt; symbol, which indicates to the C program that the lchown() routine is available to operate on a symbolic link (instead of following the link).</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LCHOWN&lt;/code&gt; 符号，该符号向C程序表明lchown（）例程可用于在符号链接上进行操作（而不是跟随该链接）。</target>
        </trans-unit>
        <trans-unit id="0f56859453fc1d27f3f17bb37fc0a2d155502907" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LDEXPL&lt;/code&gt; symbol, which indicates to the C program that the ldexpl() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LDEXPL&lt;/code&gt; 符号，该符号向C程序指示ldexpl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="a37d8cf4a0848f3d9bb4cc5545717c3e60e45b64" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LGAMMA&lt;/code&gt; symbol, which indicates to the C program that the lgamma() routine is available for the log gamma function. See also d_tgamma and d_lgamma_r.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LGAMMA&lt;/code&gt; 符号，该符号向C程序表明lgamma（）例程可用于对数伽马函数。另请参见d_tgamma和d_lgamma_r。</target>
        </trans-unit>
        <trans-unit id="5b284947de52d44afb16de832ba8c676b549a69b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LGAMMA_R&lt;/code&gt; symbol, which indicates to the C program that the lgamma_r() routine is available for the log gamma function, without using the global signgam variable.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LGAMMA_R&lt;/code&gt; 符号，该符号向C程序表明lgamma_r（）例程可用于对数伽马函数，而无需使用全局signgam变量。</target>
        </trans-unit>
        <trans-unit id="30fc562f2935f09f17639cc31ad06d2ee83886f0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LINKAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; linkat() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LINKAT&lt;/code&gt; 符号，该符号指示 &lt;code&gt;POSIX&lt;/code&gt; linkat（）函数可用。</target>
        </trans-unit>
        <trans-unit id="ffb5213a88acb50acec17dbb6c54f9e6a79439a1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLRINT&lt;/code&gt; symbol, which indicates to the C program that the llrint() routine is available to return the long long value closest to (according to the current rounding mode) to x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LLRINT&lt;/code&gt; 符号，该符号向C程序表明llrint（）例程可用于将最接近（根据当前舍入模式）的long long值返回给x。</target>
        </trans-unit>
        <trans-unit id="53ec21693b6f63e0ea3123f4631cbd52c5c5a6bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLRINT&lt;/code&gt; symbol, which indicates to the C program that the llrint() routine is available to return the long long value closest to a double (according to the current rounding mode).</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LLRINT&lt;/code&gt; 符号，该符号向C程序表明llrint（）例程可用于返回最接近double的long long值（根据当前的舍入模式）。</target>
        </trans-unit>
        <trans-unit id="36eb192d0749628551dd02acda589177da2e7d35" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLRINTL&lt;/code&gt; symbol, which indicates to the C program that the llrintl() routine is available to return the long long value closest to (according to the current rounding mode) to long double x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LLRINTL&lt;/code&gt; 符号，该符号向C程序表明llrintl（）例程可用于将最接近（根据当前舍入模式）的long long值返回为double double x。</target>
        </trans-unit>
        <trans-unit id="65fb7029b998573f2a3d09ace0df1b6888a9c42f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLRINTL&lt;/code&gt; symbol, which indicates to the C program that the llrintl() routine is available to return the long long value closest to a long double (according to the current rounding mode).</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LLRINTL&lt;/code&gt; 符号，该符号向C程序表明llrintl（）例程可用于返回最接近long double的long long值（根据当前的舍入模式）。</target>
        </trans-unit>
        <trans-unit id="507a36c2b350b208ae4a46fb5a72082e021ebc45" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLROUND&lt;/code&gt; symbol, which indicates to the C program that the llround() routine is available to return the long long value nearest to x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LLROUND&lt;/code&gt; 符号，该符号向C程序表明llround（）例程可用于返回最接近x的long long值。</target>
        </trans-unit>
        <trans-unit id="376c225543a2aa31e29c03d6e79d5c7959f398b0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLROUNDL&lt;/code&gt; symbol, which indicates to the C program that the llroundl() routine is available to return the long long value nearest to long double x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LLROUNDL&lt;/code&gt; 符号，该符号向C程序表明llroundl（）例程可用于返回最接近long double x的long long值。</target>
        </trans-unit>
        <trans-unit id="dac8ef4eb157cff511036d0fd46ff8067c00bc03" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LLROUNDL&lt;/code&gt; symbol, which indicates to the C program that the llroundl() routine is available to return the long long value nearest to x away from zero.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LLROUNDL&lt;/code&gt; 符号，该符号向C程序指示llroundl（）例程可用于返回最接近x的long long值（远离零）。</target>
        </trans-unit>
        <trans-unit id="21cbbf9d24f39ef66ecbf95b7acfbc0aa768aeff" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LOCALECONV_L&lt;/code&gt; symbol, which indicates to the C program that the localeconv_l() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LOCALECONV_L&lt;/code&gt; 符号，该符号向C程序指示localeconv_l（）例程可用。</target>
        </trans-unit>
        <trans-unit id="26b625166da5e7848c2b479c515fe2ce2068675c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LOCALTIME_R&lt;/code&gt; symbol, which indicates to the C program that the localtime_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LOCALTIME_R&lt;/code&gt; 符号，该符号向C程序指示localtime_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c32fe04a06654e46c76a07b1aa643b0837f3e1c9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LOGB&lt;/code&gt; symbol, which indicates to the C program that the logb() routine is available to extract the exponent of x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LOGB&lt;/code&gt; 符号，该符号向C程序指示logb（）例程可用于提取x的指数。</target>
        </trans-unit>
        <trans-unit id="707826980dd3a292f3abccaa532be36235824b3f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LRINT&lt;/code&gt; symbol, which indicates to the C program that the lrint() routine is available to return the integral value closest to (according to the current rounding mode) to x.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LRINT&lt;/code&gt; 符号，该符号向C程序表明lrint（）例程可用于将最接近（根据当前舍入模式）的整数值返回给x。</target>
        </trans-unit>
        <trans-unit id="cf26065a9424d2299e6682b445f1b50c3d39fb4b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LRINT&lt;/code&gt; symbol, which indicates to the C program that the lrint() routine is available to return the integral value closest to a double (according to the current rounding mode).</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LRINT&lt;/code&gt; 符号，该符号向C程序表明lrint（）例程可用于返回最接近双精度值的整数值（根据当前的舍入模式）。</target>
        </trans-unit>
        <trans-unit id="13c1d76b4549133b6a13e4a1416e75f07fde92c7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LRINTL&lt;/code&gt; symbol, which indicates to the C program that the lrintl() routine is available to return the integral value closest to (according to the current rounding mode) to long double x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LRINTL&lt;/code&gt; 符号，该符号向C程序指示lrintl（）例程可用于将最接近（根据当前舍入模式）的整数值返回为long double x。</target>
        </trans-unit>
        <trans-unit id="9f031206da09991139642d5c6bad3f0e80e05012" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LRINTL&lt;/code&gt; symbol, which indicates to the C program that the lrintl() routine is available to return the integral value closest to a long double (according to the current rounding mode).</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LRINTL&lt;/code&gt; 符号，该符号向C程序表明lrintl（）例程可用于返回最接近长整数的整数值（根据当前的舍入模式）。</target>
        </trans-unit>
        <trans-unit id="68fa84636788a64a519f29a7d95a105e7ea43315" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LROUND&lt;/code&gt; symbol, which indicates to the C program that the lround() routine is available to return the integral value nearest to x.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LROUND&lt;/code&gt; 符号，该符号向C程序指示lround（）例程可用于返回最接近x的整数值。</target>
        </trans-unit>
        <trans-unit id="60a07fa95f769a2e21b68011c39cd97eb961c50e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LROUNDL&lt;/code&gt; symbol, which indicates to the C program that the lroundl() routine is available to return the integral value nearest to x away from zero.</source>
          <target state="translated">该变量有条件地定义了 &lt;code&gt;HAS_LROUNDL&lt;/code&gt; 符号，该符号向C程序表明lroundl（）例程可用于返回最接近x且远离零的整数值。</target>
        </trans-unit>
        <trans-unit id="8a554bc9a850d4c6deffc69109e332c1e8434acb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LROUNDL&lt;/code&gt; symbol, which indicates to the C program that the lroundl() routine is available to return the integral value nearest to x of the long double argument.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_LROUNDL&lt;/code&gt; 符号，该符号向C程序表明lroundl（）例程可用于返回最接近long double参数的x的整数值。</target>
        </trans-unit>
        <trans-unit id="9026f0b5e7d8f8d8ec995eda93ddae70790dcdbd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_LSEEK_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the lseek() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_LSEEK_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为lseek（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="702f47257224cd23f04e020414c05342dff68475" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MBLEN&lt;/code&gt; symbol, which indicates to the C program that the mblen() routine is available to find the number of bytes in a multibye character.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MBLEN&lt;/code&gt; 符号，该符号向C程序表明mblen（）例程可用于查找多字节字符中的字节数。</target>
        </trans-unit>
        <trans-unit id="69f40d46ba76b66b061789e5a48b36e8bc055fa1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MBRLEN&lt;/code&gt; symbol if the mbrlen() routine is available to be used to get the length of multi-byte character strings.</source>
          <target state="translated">如果mbrlen（）例程可用于获取多字节字符串的长度，则此变量有条件地定义 &lt;code&gt;HAS_MBRLEN&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="b29d91dece99ab59d4d55e3aa9f7773aead3c6a7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MBRTOWC&lt;/code&gt; symbol if the mbrtowc() routine is available to be used to convert a multi-byte character into a wide character.</source>
          <target state="translated">如果mbrtowc（）例程可用于将多字节字符转换为宽字符，则此变量有条件地定义 &lt;code&gt;HAS_MBRTOWC&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="68073aab3a42045bf6c2864188f0973dd612c281" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MBSTOWCS&lt;/code&gt; symbol, which indicates to the C program that the mbstowcs() routine is available to convert a multibyte string into a wide character string.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MBSTOWCS&lt;/code&gt; 符号，该符号向C程序表明mbstowcs（）例程可用于将多字节字符串转换为宽字符串。</target>
        </trans-unit>
        <trans-unit id="42b542845477967812c79aae9ed300adea839dd9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MBTOWC&lt;/code&gt; symbol, which indicates to the C program that the mbtowc() routine is available to convert multibyte to a wide character.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MBTOWC&lt;/code&gt; 符号，该符号向C程序表明mbtowc（）例程可用于将多字节转换为宽字符。</target>
        </trans-unit>
        <trans-unit id="102db711f4b0e45e67feb844a2fc8fe9e66537a6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMCHR&lt;/code&gt; symbol, which indicates to the C program that the memchr() routine is available to locate characters within a C string.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MEMCHR&lt;/code&gt; 符号，该符号向C程序表明memchr（）例程可用于在C字符串中定位字符。</target>
        </trans-unit>
        <trans-unit id="7235ca768c8d034cec91ebe2d78865b39fdf2ba7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMCMP&lt;/code&gt; symbol, which indicates to the C program that the memcmp() routine is available to compare blocks of memory.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MEMCMP&lt;/code&gt; 符号，该符号向C程序表明memcmp（）例程可用于比较内存块。</target>
        </trans-unit>
        <trans-unit id="9bebe696de97246540e522bb2e6da8fab93032d1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMCPY&lt;/code&gt; symbol, which indicates to the C program that the memcpy() routine is available to copy blocks of memory.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MEMCPY&lt;/code&gt; 符号，该符号向C程序表明memcpy（）例程可用于复制内存块。</target>
        </trans-unit>
        <trans-unit id="12ace4ce86ff6b7183f1c04982043534ca8332ce" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMMEM&lt;/code&gt; symbol, which indicates to the C program that the memmem() routine is available to return a pointer to the start of the first occurance of a substring in a memory area (or &lt;code&gt;NULL&lt;/code&gt; if not found).</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MEMMEM&lt;/code&gt; 符号，该符号向C程序指示memmem（）例程可用于返回指向存储区域中子字符串首次出现的开始的指针（如果未找到，则为 &lt;code&gt;NULL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="325a4968300d1d00834d074e2dda029f39634d7f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMMOVE&lt;/code&gt; symbol, which indicates to the C program that the memmove() routine is available to copy potentially overlapping blocks of memory.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MEMMOVE&lt;/code&gt; 符号，该符号向C程序表明memmove（）例程可用于复制潜在重叠的内存块。</target>
        </trans-unit>
        <trans-unit id="bbe8139cc162b84430defea45c669ffb38368210" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMRCHR&lt;/code&gt; symbol, which indicates to the C program that the memrchr() routine is available to return a pointer to the last occurrence of a byte in a memory area (or &lt;code&gt;NULL&lt;/code&gt; if not found).</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MEMRCHR&lt;/code&gt; 符号，该符号向C程序表明memrchr（）例程可用于返回指向内存区域中最后出现的字节的指针（如果未找到，则为 &lt;code&gt;NULL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c7d0f000fc251635fd80e34aa635da5773481577" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MEMSET&lt;/code&gt; symbol, which indicates to the C program that the memset() routine is available to set blocks of memory.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MEMSET&lt;/code&gt; 符号，该符号向C程序表明memset（）例程可用于设置内存块。</target>
        </trans-unit>
        <trans-unit id="dc8f79cfbd2b96ee25d6d1ee5c1384a4ad8b5b3b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MKDIR&lt;/code&gt; symbol, which indicates to the C program that the mkdir() routine is available to create</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MKDIR&lt;/code&gt; 符号，该符号向C程序表明mkdir（）例程可用于创建</target>
        </trans-unit>
        <trans-unit id="0dfb53b8b3dee823205d19c28ace4b726497760a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MKDTEMP&lt;/code&gt; symbol, which indicates to the C program that the mkdtemp() routine is available to exclusively create a uniquely named temporary directory.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MKDTEMP&lt;/code&gt; 符号，该符号向C程序表明mkdtemp（）例程可用于专门创建唯一命名的临时目录。</target>
        </trans-unit>
        <trans-unit id="c1f680310dfb70f55e565d1e0109be2e8e4c87f5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MKFIFO&lt;/code&gt; symbol, which indicates to the C program that the mkfifo() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MKFIFO&lt;/code&gt; 符号，该符号向C程序指示mkfifo（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d329c85fbd87b445b67f4dc354564f846b9735aa" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MKSTEMP&lt;/code&gt; symbol, which indicates to the C program that the mkstemp() routine is available to exclusively create and open a uniquely named temporary file.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MKSTEMP&lt;/code&gt; 符号，该符号向C程序表明mkstemp（）例程可用于专门创建和打开唯一命名的临时文件。</target>
        </trans-unit>
        <trans-unit id="8805b03cf4516a990a6b253e051e527792bc4add" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MKSTEMPS&lt;/code&gt; symbol, which indicates to the C program that the mkstemps() routine is available to exclusively create and open a uniquely named (with a suffix) temporary file.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MKSTEMPS&lt;/code&gt; 符号，该符号向C程序表明mkstemps（）例程可用于专门创建和打开唯一命名（带有后缀）的临时文件。</target>
        </trans-unit>
        <trans-unit id="206f66bb208940b6f4dad138b2fc18cc3c165061" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MKTIME&lt;/code&gt; symbol, which indicates to the C program that the mktime() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MKTIME&lt;/code&gt; 符号，该符号向C程序指示mktime（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f8b01b3cc879138798d33d0417c145e742ff8d00" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MODFL&lt;/code&gt; symbol, which indicates to the C program that the modfl() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MODFL&lt;/code&gt; 符号，该符号向C程序指示modfl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="59c032422721290310c184282c0c203c9082b8f1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSG&lt;/code&gt; symbol, which indicates that the entire msg*(2) library is present.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MSG&lt;/code&gt; 符号，该符号指示存在整个msg *（2）库。</target>
        </trans-unit>
        <trans-unit id="fb5e836bd1b6ceda16daf87a813a852108bdbdb9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSGCTL&lt;/code&gt; symbol, which indicates to the C program that the msgctl() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSGCTL&lt;/code&gt; 符号，该符号向C程序指示msgctl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="1ef076a7a468a1472229759a7af88f68403a3519" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSGGET&lt;/code&gt; symbol, which indicates to the C program that the msgget() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSGGET&lt;/code&gt; 符号，该符号向C程序指示msgget（）例程可用。</target>
        </trans-unit>
        <trans-unit id="95826169e9ec6e737b42970b82165e9dd23743e0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSGRCV&lt;/code&gt; symbol, which indicates to the C program that the msgrcv() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSGRCV&lt;/code&gt; 符号，该符号向C程序表明msgrcv（）例程可用。</target>
        </trans-unit>
        <trans-unit id="8325f3391840c0f56f190ee2693366b6e70a6573" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSGSND&lt;/code&gt; symbol, which indicates to the C program that the msgsnd() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSGSND&lt;/code&gt; 符号，该符号向C程序表明msgsnd（）例程可用。</target>
        </trans-unit>
        <trans-unit id="84941c248e23475cd8c896889cac2c4c99454a7c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSG_CTRUNC&lt;/code&gt; symbol, which indicates that the &lt;code&gt;MSG_CTRUNC&lt;/code&gt; is available. #ifdef is not enough because it may be an enum, glibc has been known to do this.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSG_CTRUNC&lt;/code&gt; 符号，该符号指示 &lt;code&gt;MSG_CTRUNC&lt;/code&gt; 可用。#ifdef不够，因为它可能是一个枚举，因此已知glibc可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="950da7c3fd59c0e17f00f095ffc534d207054985" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSG_DONTROUTE&lt;/code&gt; symbol, which indicates that the &lt;code&gt;MSG_DONTROUTE&lt;/code&gt; is available. #ifdef is not enough because it may be an enum, glibc has been known to do this.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSG_DONTROUTE&lt;/code&gt; 符号，该符号指示 &lt;code&gt;MSG_DONTROUTE&lt;/code&gt; 可用。#ifdef不够，因为它可能是一个枚举，因此已知glibc会这样做。</target>
        </trans-unit>
        <trans-unit id="340fb73e5613c1253991bbcd58d22b8f0a4f607a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSG_OOB&lt;/code&gt; symbol, which indicates that the &lt;code&gt;MSG_OOB&lt;/code&gt; is available. #ifdef is not enough because it may be an enum, glibc has been known to do this.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSG_OOB&lt;/code&gt; 符号，该符号指示 &lt;code&gt;MSG_OOB&lt;/code&gt; 可用。#ifdef不够，因为它可能是一个枚举，因此已知glibc会这样做。</target>
        </trans-unit>
        <trans-unit id="1ba5b98861532f57b23f48c18b0143746c802ead" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSG_PEEK&lt;/code&gt; symbol, which indicates that the &lt;code&gt;MSG_PEEK&lt;/code&gt; is available. #ifdef is not enough because it may be an enum, glibc has been known to do this.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_MSG_PEEK&lt;/code&gt; 符号，该符号指示 &lt;code&gt;MSG_PEEK&lt;/code&gt; 可用。#ifdef不够，因为它可能是一个枚举，因此已知glibc会这样做。</target>
        </trans-unit>
        <trans-unit id="21d1bc76282392273685e2fda20d7ff8209a22b5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_MSG_PROXY&lt;/code&gt; symbol, which indicates that the &lt;code&gt;MSG_PROXY&lt;/code&gt; is available. #ifdef is not enough because it may be an enum, glibc has been known to do this.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_MSG_PROXY&lt;/code&gt; 符号，该符号指示 &lt;code&gt;MSG_PROXY&lt;/code&gt; 可用。#ifdef不够，因为它可能是一个枚举，因此已知glibc会这样做。</target>
        </trans-unit>
        <trans-unit id="d1603a6598296b1c4fdf0ef321efb381ba924904" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_NDBM&lt;/code&gt; symbol, which indicates that both the</source>
          <target state="translated">此变量有条件地定义了 &lt;code&gt;HAS_NDBM&lt;/code&gt; 符号，该符号表示</target>
        </trans-unit>
        <trans-unit id="6ac553ec0a46dd113fe8a3355a0c4f04e9382141" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_NEWLOCALE&lt;/code&gt; symbol, which indicates to the C program that the newlocale() routine is available to return a new locale object or modify an existing locale object.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_NEWLOCALE&lt;/code&gt; 符号，该符号向C程序表明newlocale（）例程可用于返回新的语言环境对象或修改现有的语言环境对象。</target>
        </trans-unit>
        <trans-unit id="5277ed40894774a2ba216ada895326e2680c5641" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_NICE&lt;/code&gt; symbol, which indicates to the C program that the nice() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_NICE&lt;/code&gt; 符号，该符号向C程序指示nice（）例程可用。</target>
        </trans-unit>
        <trans-unit id="af0a20e5476f2b86b8442bdada0615dea2fffc05" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_NL_LANGINFO&lt;/code&gt; symbol, which indicates to the C program that the nl_langinfo() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_NL_LANGINFO&lt;/code&gt; 符号，该符号向C程序指示nl_langinfo（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f18bbe6a4a2303917dcb4c4203fd1a76547f2141" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_OPENAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; openat() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_OPENAT&lt;/code&gt; 符号，该符号指示 &lt;code&gt;POSIX&lt;/code&gt; openat（）函数可用。</target>
        </trans-unit>
        <trans-unit id="42ed73584476eb3cff07ec2b3b92d7f11ff4544e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PATHCONF&lt;/code&gt; symbol, which indicates to the C program that the pathconf() routine is available to determine file-system related limits and options associated with a given filename.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_PATHCONF&lt;/code&gt; 符号，该符号向C程序表明pathconf（）例程可用于确定与给定文件名关联的文件系统相关限制和选项。</target>
        </trans-unit>
        <trans-unit id="1e60fd6e1fad01f7c6b060fd6548b4b0c288ca74" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PAUSE&lt;/code&gt; symbol, which indicates to the C program that the pause() routine is available to suspend a process until a signal is received.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_PAUSE&lt;/code&gt; 符号，该符号向C程序指示pause（）例程可用于暂停进程，直到接收到信号为止。</target>
        </trans-unit>
        <trans-unit id="e606684e99cd2526fc33ee67d5160faec8e1b4b1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PHOSTNAME&lt;/code&gt; symbol, which contains the shell command which, when fed to popen(), may be used to derive the host name.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_PHOSTNAME&lt;/code&gt; 符号，其中包含shell命令，当将其输入popen（）时，可用于导出主机名。</target>
        </trans-unit>
        <trans-unit id="f5e9460d4aa49a8f6cda898aea276648d360b0ee" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PIPE&lt;/code&gt; symbol, which indicates to the C program that the pipe() routine is available to create an inter-process channel.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_PIPE&lt;/code&gt; 符号，该符号向C程序表明pipe（）例程可用于创建进程间通道。</target>
        </trans-unit>
        <trans-unit id="bd07b0f89812ec7f4882f2ef903b3b418e2b4eaa" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_POLL&lt;/code&gt; symbol, which indicates to the C program that the poll() routine is available to poll active file descriptors.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_POLL&lt;/code&gt; 符号，该符号向C程序指示poll（）例程可用于轮询活动文件描述符。</target>
        </trans-unit>
        <trans-unit id="d19e5a58a493a3e72e15d799a19003028f51f982" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PRCTL&lt;/code&gt; symbol, which indicates to the C program that the prctl() routine is available. Note that there are at least two prctl variants: Linux and Irix. While they are somewhat similar, they are incompatible.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_PRCTL&lt;/code&gt; 符号，该符号向C程序指示prctl（）例程可用。请注意，至少有两个prctl变体：Linux和Irix。尽管它们有些相似，但不兼容。</target>
        </trans-unit>
        <trans-unit id="5ebf54637f893db261609451b910c27bcc8f091b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PRCTL_SET_NAME&lt;/code&gt; symbol, which indicates to the C program that the prctl() routine supports the &lt;code&gt;PR_SET_NAME&lt;/code&gt; option.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_PRCTL_SET_NAME&lt;/code&gt; 符号，该符号向C程序表明prctl（）例程支持 &lt;code&gt;PR_SET_NAME&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c3ecaf028b373110a8f40a51809f4d579b737a8f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PSEUDOFORK&lt;/code&gt; symbol, which indicates that an emulation of the fork routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_PSEUDOFORK&lt;/code&gt; 符号，该符号指示可以使用fork例程的仿真。</target>
        </trans-unit>
        <trans-unit id="bc4ef7f3655f36a52acb95d81e9a02d6789c39a8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PTHREAD_ATFORK&lt;/code&gt; symbol, which indicates to the C program that the pthread_atfork() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_PTHREAD_ATFORK&lt;/code&gt; 符号，该符号向C程序指示pthread_atfork（）例程可用。</target>
        </trans-unit>
        <trans-unit id="79dc88760f8a76eae528ad5cc3a27f2f6431bb0f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_PTHREAD_YIELD&lt;/code&gt; symbol if the pthread_yield routine is available to yield the execution of the current thread.</source>
          <target state="translated">如果pthread_yield例程可用于产生当前线程的执行，则此变量有条件地定义 &lt;code&gt;HAS_PTHREAD_YIELD&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="cf81f8754d5d00e4d41f1c30c1f9a7c9b8e81bef" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_QGCVT&lt;/code&gt; symbol, which indicates to the C program that the qgcvt() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_QGCVT&lt;/code&gt; 符号，该符号向C程序指示qgcvt（）例程可用。</target>
        </trans-unit>
        <trans-unit id="91d80f986ee89e836c4dba58eb4f72bbbdb575fd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_QUERYLOCALE&lt;/code&gt; symbol, which indicates to the C program that the querylocale() routine is available to return the name of the locale for a category mask.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_QUERYLOCALE&lt;/code&gt; 符号，该符号向C程序表明querylocale（）例程可用于返回类别掩码的语言环境名称。</target>
        </trans-unit>
        <trans-unit id="8e9b2bfb0734331186e86ecf1ccb63af8b3ba30c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RANDOM_R&lt;/code&gt; symbol, which indicates to the C program that the random_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_RANDOM_R&lt;/code&gt; 符号，该符号向C程序指示random_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c65a62001e9e03adb09c0dbd6c2811a7ea2da19a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_READDIR_R&lt;/code&gt; symbol, which indicates to the C program that the readdir_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_READDIR_R&lt;/code&gt; 符号，该符号向C程序表明readdir_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="6fd1e82c6efc0d6f7536439da7a35beb1256cd16" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_READLINK&lt;/code&gt; symbol, which indicates to the C program that the readlink() routine is available to read the value of a symbolic link.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_READLINK&lt;/code&gt; 符号，该符号向C程序表明readlink（）例程可用于读取符号链接的值。</target>
        </trans-unit>
        <trans-unit id="2dc4c2fa5222e60c5f68de8036a6fdeb29fa75d4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_READV&lt;/code&gt; symbol, which indicates to the C program that the readv() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_READV&lt;/code&gt; 符号，该符号向C程序指示readv（）例程可用。</target>
        </trans-unit>
        <trans-unit id="e3f91d013ddfc25cb2fcffc4118bc4400d5ce506" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RECOMP&lt;/code&gt; symbol, which indicates to the C program that the re_comp() routine is available for regular patern matching (usally on &lt;code&gt;BSD&lt;/code&gt; ). If so, it is likely that re_exec() exists.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_RECOMP&lt;/code&gt; 符号，该符号向C程序表明re_comp（）例程可用于常规模式匹配（通常在 &lt;code&gt;BSD&lt;/code&gt; 上）。如果是这样，则很可能re_exec（）存在。</target>
        </trans-unit>
        <trans-unit id="5973dd4b3d7ba0a882f40477dd84015066bf22df" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RECOMP&lt;/code&gt; symbol, which indicates to the C program that the re_comp() routine is available for regular pattern matching (usually on &lt;code&gt;BSD&lt;/code&gt;). If so, it is likely that re_exec() exists.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_RECOMP&lt;/code&gt; 符号，该符号向C程序指示re_comp（）例程可用于常规模式匹配（通常在 &lt;code&gt;BSD&lt;/code&gt; 上）。如果是这样，则很可能re_exec（）存在。</target>
        </trans-unit>
        <trans-unit id="6c3f29bc2154f4c7a6c6f35d44e8edd998c0226b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RECVMSG&lt;/code&gt; symbol, which indicates to the C program that the recvmsg() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_RECVMSG&lt;/code&gt; 符号，该符号向C程序指示recvmsg（）例程可用。</target>
        </trans-unit>
        <trans-unit id="6d67ed8549c55fe5a2605834ce109f95ac461359" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_REGCMP&lt;/code&gt; symbol, which indicates to the C program that the regcmp() routine is available for regular patern matching (usally on System V).</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_REGCMP&lt;/code&gt; 符号，该符号向C程序表明regcmp（）例程可用于常规模式匹配（通常在系统V上）。</target>
        </trans-unit>
        <trans-unit id="fed93dee20113d53be1e3df22f62d882fcde142e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_REGCMP&lt;/code&gt; symbol, which indicates to the C program that the regcmp() routine is available for regular pattern matching (usually on System V).</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_REGCMP&lt;/code&gt; 符号，该符号向C程序表明regcmp（）例程可用于常规模式匹配（通常在系统V上）。</target>
        </trans-unit>
        <trans-unit id="e07c10218f9fabf16f8d5854c92cf2f16b32b7e9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_REGCOMP&lt;/code&gt; symbol, which indicates to the C program that the regcomp() routine is available for regular patern matching (usally on</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_REGCOMP&lt;/code&gt; 符号，该符号向C程序表明regcomp（）例程可用于常规模式匹配（通常在</target>
        </trans-unit>
        <trans-unit id="1fcac11a1ba7ee9ddbc8fdd724a07a5e02278ac9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_REGCOMP&lt;/code&gt; symbol, which indicates to the C program that the regcomp() routine is available for regular pattern matching (usually on</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_REGCOMP&lt;/code&gt; 符号，该符号向C程序表明regcomp（）例程可用于常规模式匹配（通常在</target>
        </trans-unit>
        <trans-unit id="9b05fd196967a1a71516b4a88276313a557aa5bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_REMAINDER&lt;/code&gt; symbol, which indicates to the C program that the remainder() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_REMAINDER&lt;/code&gt; 符号，该符号向C程序指示restder（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4cfe52f27defd1a63d52af40f150c15bfeb71bb7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_REMQUO&lt;/code&gt; symbol, which indicates to the C program that the remquo() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_REMQUO&lt;/code&gt; 符号，该符号向C程序指示remquo（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c169ea47ac3e9cb5232ceda473f58311a9092997" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RENAME&lt;/code&gt; symbol, which indicates to the C program that the rename() routine is available to rename files.</source>
          <target state="translated">该变量有条件地定义了 &lt;code&gt;HAS_RENAME&lt;/code&gt; 符号，该符号向C程序指示named（）例程可用于重命名文件。</target>
        </trans-unit>
        <trans-unit id="199a046da673b5bc028a551de76b7376537a459d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RENAMEAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; renameat() function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_RENAMEAT&lt;/code&gt; 符号，该符号指示 &lt;code&gt;POSIX&lt;/code&gt; 重命名函数可用。</target>
        </trans-unit>
        <trans-unit id="1fc2419ec7384419c653e2e04e22752b3e26782e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_RINT&lt;/code&gt; symbol, which indicates to the C program that the rint() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_RINT&lt;/code&gt; 符号，该符号向C程序指示rint（）例程可用。</target>
        </trans-unit>
        <trans-unit id="252fce7c8fec522876f402bc3771436d7e053a8b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_ROUND&lt;/code&gt; symbol, which indicates to the C program that the round() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_ROUND&lt;/code&gt; 符号，该符号向C程序指示round（）例程可用。</target>
        </trans-unit>
        <trans-unit id="8302be254222641686214eb90d203acf90f889ca" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SAFE_BCOPY&lt;/code&gt; symbol if the bcopy() routine can do overlapping copies. Normally, you should probably use memmove().</source>
          <target state="translated">如果bcopy（）例程可以进行重叠副本，则此变量有条件地定义 &lt;code&gt;HAS_SAFE_BCOPY&lt;/code&gt; 符号。通常，您可能应该使用memmove（）。</target>
        </trans-unit>
        <trans-unit id="9c452c4e512101e3881d48bc3f5b752b0a76ff1b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SAFE_MEMCPY&lt;/code&gt; symbol if the memcpy() routine can do overlapping copies. For overlapping copies, memmove() should be used, if available.</source>
          <target state="translated">如果memcpy（）例程可以进行重叠副本，则此变量有条件地定义 &lt;code&gt;HAS_SAFE_MEMCPY&lt;/code&gt; 符号。对于重叠的副本，应使用memmove（）（如果有）。</target>
        </trans-unit>
        <trans-unit id="69b5df3fae9e380dd31bacf8601a50634d843973" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SANE_MEMCMP&lt;/code&gt; symbol if the memcpy() routine is available and can be used to compare relative magnitudes of chars with their high bits set.</source>
          <target state="translated">如果memcpy（）例程可用，则此变量有条件地定义 &lt;code&gt;HAS_SANE_MEMCMP&lt;/code&gt; 符号，并且可用于比较chars的相对大小及其设置的高位。</target>
        </trans-unit>
        <trans-unit id="70c4e22971a98e05d75f4171ebce0451ae617364" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SBRK_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the sbrk() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SBRK_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为sbrk（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="bf34a9ff9d97d9a47eaff2f964ed4eba8c94a9da" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SCALBN&lt;/code&gt; symbol, which indicates to the C program that the scalbn() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SCALBN&lt;/code&gt; 符号，该符号向C程序指示scalbn（）例程可用。</target>
        </trans-unit>
        <trans-unit id="056df173ab102738b8f1113094f7590b13a7bcb2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SCALBNL&lt;/code&gt; symbol, which indicates to the C program that the scalbnl() routine is available. If ilogbl is also present we can emulate frexpl.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SCALBNL&lt;/code&gt; 符号，该符号向C程序指示scalbnl（）例程可用。如果ilogbl也存在，我们可以模拟frexpl。</target>
        </trans-unit>
        <trans-unit id="404cd178274e29b46392d4b9d1d62d9d89a6a230" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SCHED_YIELD&lt;/code&gt; symbol if the sched_yield routine is available to yield the execution of the current thread.</source>
          <target state="translated">如果sched_yield例程可用于产生当前线程的执行，则此变量有条件地定义 &lt;code&gt;HAS_SCHED_YIELD&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="f85d23daea4fa592971aa421327cc008d01c2ac9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SCM_RIGHTS&lt;/code&gt; symbol, which indicates that the &lt;code&gt;SCM_RIGHTS&lt;/code&gt; is available. #ifdef is not enough because it may be an enum, glibc has been known to do this.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SCM_RIGHTS&lt;/code&gt; 符号，该符号指示 &lt;code&gt;SCM_RIGHTS&lt;/code&gt; 可用。#ifdef不够，因为它可能是一个枚举，因此已知glibc会这样做。</target>
        </trans-unit>
        <trans-unit id="dea922aadae789ea1a95fdab48d62de9553cabac" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SEM&lt;/code&gt; symbol, which indicates that the entire sem*(2) library is present.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SEM&lt;/code&gt; 符号，该符号表示存在整个sem *（2）库。</target>
        </trans-unit>
        <trans-unit id="5b148aa1a9afc4648f0cc63bbf5f952b64040e69" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SEMCTL&lt;/code&gt; symbol, which indicates to the C program that the semctl() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SEMCTL&lt;/code&gt; 符号，该符号向C程序表明semctl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d19f9403ea6df19878d8bd947cbe5d3b17ab117b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SEMGET&lt;/code&gt; symbol, which indicates to the C program that the semget() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SEMGET&lt;/code&gt; 符号，该符号向C程序指示semget（）例程可用。</target>
        </trans-unit>
        <trans-unit id="ed7f4ce9b6451085a36945d888c752e4d7275794" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SEMOP&lt;/code&gt; symbol, which indicates to the C program that the semop() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SEMOP&lt;/code&gt; 符号，该符号向C程序指示semop（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d6ec4029dd5383d19da712a00dd2a6939c7054ee" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SENDMSG&lt;/code&gt; symbol, which indicates to the C program that the sendmsg() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SENDMSG&lt;/code&gt; 符号，该符号向C程序指示sendmsg（）例程可用。</target>
        </trans-unit>
        <trans-unit id="efef1c889515b0f4be93dfb2d0eea78cf9332c98" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETEGID&lt;/code&gt; symbol, which indicates to the C program that the setegid() routine is available to change the effective gid of the current program.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETEGID&lt;/code&gt; 符号，该符号向C程序表明setegid（）例程可用于更改当前程序的有效gid。</target>
        </trans-unit>
        <trans-unit id="1a86b980917ba9c8b6c9bced088f2566cd3d02a9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETEUID&lt;/code&gt; symbol, which indicates to the C program that the seteuid() routine is available to change the effective uid of the current program.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETEUID&lt;/code&gt; 符号，该符号向C程序指示seteuid（）例程可用于更改当前程序的有效uid。</target>
        </trans-unit>
        <trans-unit id="d246b49933e9f21fac1405364ff32e520a309e60" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETGRENT&lt;/code&gt; symbol, which indicates to the C program that the setgrent() routine is available for initializing sequential access to the group database.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETGRENT&lt;/code&gt; 符号，该符号向C程序表明setgrent（）例程可用于初始化对组数据库的顺序访问。</target>
        </trans-unit>
        <trans-unit id="589d24084faf0c2cd477e893215d61c64efdd448" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETGRENT_R&lt;/code&gt; symbol, which indicates to the C program that the setgrent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETGRENT_R&lt;/code&gt; 符号，该符号向C程序指示setgrent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4a933eeb905c95437c3a9047e80a1b6f2c4972a0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETGROUPS&lt;/code&gt; symbol, which indicates to the C program that the setgroups() routine is available to set the list of process groups.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SETGROUPS&lt;/code&gt; 符号，该符号向C程序表明setgroups（）例程可用于设置进程组列表。</target>
        </trans-unit>
        <trans-unit id="a2050d4c05e3a916230e1e01c1b28c300be94833" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETHOSTENT_R&lt;/code&gt; symbol, which indicates to the C program that the sethostent_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SETHOSTENT_R&lt;/code&gt; 符号，该符号向C程序表明sethostent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="a7abd6d4d4f071b55eb7b75153aa363a88ba3dec" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETITIMER&lt;/code&gt; symbol, which indicates to the C program that the setitimer() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETITIMER&lt;/code&gt; 符号，该符号向C程序指示setitimer（）例程可用。</target>
        </trans-unit>
        <trans-unit id="84f918495536e04dc0ccac1eb98aa213def7a2e8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETLINEBUF&lt;/code&gt; symbol, which indicates to the C program that the setlinebuf() routine is available to change stderr or stdout from block-buffered or unbuffered to a line-buffered mode.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETLINEBUF&lt;/code&gt; 符号，该符号向C程序表明setlinebuf（）例程可用于将stderr或stdout从块缓冲或非缓冲更改为行缓冲模式。</target>
        </trans-unit>
        <trans-unit id="2ca4473bd0a8384ccc2d7db9358f39febea76296" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETLOCALE_R&lt;/code&gt; symbol, which indicates to the C program that the setlocale_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SETLOCALE_R&lt;/code&gt; 符号，该符号向C程序表明setlocale_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f455ad33ad16eecbc6ce3963675437e9a5a2ccc5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETNETENT_R&lt;/code&gt; symbol, which indicates to the C program that the setnetent_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SETNETENT_R&lt;/code&gt; 符号，该符号向C程序表明setnetent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="bd7e30481f6fa7e1b3bd623bf0c35f33af1025af" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETPGID&lt;/code&gt; symbol if the setpgid(pid, gpid) function is available to set process group &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">如果setpgid（pid，gpid）函数可用于设置进程组 &lt;code&gt;ID&lt;/code&gt; ，则此变量有条件地定义 &lt;code&gt;HAS_SETPGID&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="cd084a89b7546db55ecbe3405f14a089065b5c02" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETPGID&lt;/code&gt; symbol if the setpgid(pid, gpid) function is available to set process group &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="translated">如果setpgid（pid，gpid）函数可用于设置进程组 &lt;code&gt;ID&lt;/code&gt; ，则此变量有条件地定义 &lt;code&gt;HAS_SETPGID&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="e9edef6ae76c8944446c013725fb197b48fa39fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETPROCTITLE&lt;/code&gt; symbol, which indicates to the C program that the setproctitle() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SETPROCTITLE&lt;/code&gt; 符号，该符号向C程序表明setproctitle（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d3f341f3570968646d3fd38a96ae3afe919b893b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETPROTOENT_R&lt;/code&gt; symbol, which indicates to the C program that the setprotoent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETPROTOENT_R&lt;/code&gt; 符号，该符号向C程序表明setprotoent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="3abc3546df3c0db0a7495a04a08ac7e577028525" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETPWENT&lt;/code&gt; symbol, which indicates to the C program that the setpwent() routine is available for initializing sequential access to the passwd database.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SETPWENT&lt;/code&gt; 符号，该符号向C程序表明setpwent（）例程可用于初始化对passwd数据库的顺序访问。</target>
        </trans-unit>
        <trans-unit id="f815f5d34768ba0d9cd88ead612376bf175844f7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETPWENT_R&lt;/code&gt; symbol, which indicates to the C program that the setpwent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETPWENT_R&lt;/code&gt; 符号，该符号向C程序指示setpwent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="f5d88047ec151db31ca73cd8e6fefe093fe58114" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETRESGID_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the setresgid() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETRESGID_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为setresgid（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="24eb08c656ce761f6087195ce9455c818bd9a13c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETRESUID_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the setresuid() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETRESUID_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为setresuid（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="ff94800da87fb91adb70b42b7c317e55aeb3e007" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETRGID&lt;/code&gt; symbol, which indicates to the C program that the setrgid() routine is available to change the real gid of the current program.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETRGID&lt;/code&gt; 符号，该符号向C程序表明setrgid（）例程可用于更改当前程序的实际值。</target>
        </trans-unit>
        <trans-unit id="dbf52c5b79e2d8522a207448380bd479037d630b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETRUID&lt;/code&gt; symbol, which indicates to the C program that the setruid() routine is available to change the real uid of the current program.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETRUID&lt;/code&gt; 符号，该符号向C程序表明setruid（）例程可用于更改当前程序的实际uid。</target>
        </trans-unit>
        <trans-unit id="d0045505fc1f8f12b866ff980c08b76f8ab8a573" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETSERVENT_R&lt;/code&gt; symbol, which indicates to the C program that the setservent_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETSERVENT_R&lt;/code&gt; 符号，该符号向C程序表明setservent_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="ffe8075645d07e578caf35ed3053e2328c32951f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SETVBUF&lt;/code&gt; symbol, which indicates to the C program that the setvbuf() routine is available to change buffering on an open stdio stream.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SETVBUF&lt;/code&gt; 符号，该符号向C程序表明setvbuf（）例程可用于更改打开的stdio流上的缓冲。</target>
        </trans-unit>
        <trans-unit id="5e9d32e8b4c0970f3e0b14035c50448358b4eb3f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SHM&lt;/code&gt; symbol, which indicates that the entire shm*(2) library is present.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SHM&lt;/code&gt; 符号，该符号指示存在整个shm *（2）库。</target>
        </trans-unit>
        <trans-unit id="e4860192fe34bb82c2b57fbf3ce883a966de008f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SHMAT&lt;/code&gt; symbol, which indicates to the C program that the shmat() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SHMAT&lt;/code&gt; 符号，该符号向C程序指示shmat（）例程可用。</target>
        </trans-unit>
        <trans-unit id="0ddb43c8ba59d4274944632bb31bddf6eb7b2784" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SHMAT_PROTOTYPE&lt;/code&gt; symbol, which indicates that</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SHMAT_PROTOTYPE&lt;/code&gt; 符号，该符号指示</target>
        </trans-unit>
        <trans-unit id="45dc983e9867e71eecb842badfd1c7d2839481d3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SHMCTL&lt;/code&gt; symbol, which indicates to the C program that the shmctl() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SHMCTL&lt;/code&gt; 符号，该符号向C程序指示shmctl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="737f5dddfcf9ec8a844dd7a98ec4b5d487bf14c6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SHMDT&lt;/code&gt; symbol, which indicates to the C program that the shmdt() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SHMDT&lt;/code&gt; 符号，该符号向C程序指示shmdt（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4350b354f9719bb658838cee9a74cd7b9786aebc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SHMGET&lt;/code&gt; symbol, which indicates to the C program that the shmget() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SHMGET&lt;/code&gt; 符号，该符号向C程序指示shmget（）例程可用。</target>
        </trans-unit>
        <trans-unit id="437fd06099c4077763f5958de502ec64283e2c58" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGACTION&lt;/code&gt; symbol, which indicates that the Vr4 sigaction() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGACTION&lt;/code&gt; 符号，该符号指示Vr4 sigaction（）例程可用。</target>
        </trans-unit>
        <trans-unit id="7afebaae2c3de49c8f5cb8435f5dda7c8778c03b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_ADDR&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_addr member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_ADDR&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_addr成员。</target>
        </trans-unit>
        <trans-unit id="fe6b830d424aad8c2b6cb2cb34a59b175ae36723" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_BAND&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_band member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_BAND&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_band成员。</target>
        </trans-unit>
        <trans-unit id="029ab7884f67cb083f7b7529d61cc8f8bd6b8a56" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_ERRNO&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_errno member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_ERRNO&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_errno成员。</target>
        </trans-unit>
        <trans-unit id="15576ef1ad1c235c8758fd28c14492a6c077d5fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_FD&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_fd member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_FD&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_fd成员。</target>
        </trans-unit>
        <trans-unit id="8803445c39c61b54183026ecd07fe0ffd328a0ea" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_PID&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_pid member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_PID&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_pid成员。</target>
        </trans-unit>
        <trans-unit id="25067123712e3f6e5e64c6a7eb6ffac3b3a4a366" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_STATUS&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_status member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_STATUS&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_status成员。</target>
        </trans-unit>
        <trans-unit id="95bb1db8ae3cda846b35b87740032708c05439be" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_UID&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_uid member.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_UID&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_uid成员。</target>
        </trans-unit>
        <trans-unit id="a593e96e14154426cb16bf919df7c886ea3f966c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGINFO_SI_VALUE&lt;/code&gt; symbol, which indicates that the siginfo_t struct has the si_value member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SIGINFO_SI_VALUE&lt;/code&gt; 符号，该符号指示siginfo_t结构具有si_value成员。</target>
        </trans-unit>
        <trans-unit id="123187e08340159be001480b92cae8c3fe8fa881" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGNBIT&lt;/code&gt; symbol, which indicates to the C program that the signbit() routine is available and safe to use with perl's intern &lt;code&gt;NV&lt;/code&gt; type.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SIGNBIT&lt;/code&gt; 符号，该符号向C程序表明signbit（）例程可用，并且可以与perl的intern &lt;code&gt;NV&lt;/code&gt; 类型一起使用。</target>
        </trans-unit>
        <trans-unit id="a55187259595d502ca100cbdce1dc3f6adb532f9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SIGSETJMP&lt;/code&gt; symbol, which indicates that the sigsetjmp() routine is available to call setjmp() and optionally save the process's signal mask.</source>
          <target state="translated">该变量有条件地定义了 &lt;code&gt;HAS_SIGSETJMP&lt;/code&gt; 符号，该符号指示sigsetjmp（）例程可用于调用setjmp（）并有选择地保存进程的信号掩码。</target>
        </trans-unit>
        <trans-unit id="3fbff66da218341954d4dbcb9ab0dd79d621c938" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SNPRINTF&lt;/code&gt; symbol, which indicates to the C program that the snprintf () library function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SNPRINTF&lt;/code&gt; 符号，该符号向C程序指示snprintf（）库函数可用。</target>
        </trans-unit>
        <trans-unit id="5acf55188378c7fbe648dc6edc0668a1ab26c47a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SOCKADDR_SA_LEN&lt;/code&gt; symbol, which indicates that a struct sockaddr structure has the sa_len member.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SOCKADDR_SA_LEN&lt;/code&gt; 符号，该符号指示结构sockaddr结构具有sa_len成员。</target>
        </trans-unit>
        <trans-unit id="d31710ecb085f72c5251cccdbeb14a6e9c225b26" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SOCKATMARK&lt;/code&gt; symbol, which indicates to the C program that the sockatmark() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_SOCKATMARK&lt;/code&gt; 符号，该符号向C程序指示sockatmark（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c36072052afd17b0f381cb1b723e2e98b9d06076" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SOCKATMARK_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the sockatmark() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SOCKATMARK_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为sockatmark（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="1ff90cee299cb6e7c7bb9e2fadaa51ea4770478c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SOCKETPAIR&lt;/code&gt; symbol, which indicates that the &lt;code&gt;BSD&lt;/code&gt; socketpair() is supported.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SOCKETPAIR&lt;/code&gt; 符号，该符号指示支持 &lt;code&gt;BSD&lt;/code&gt; socketpair（）。</target>
        </trans-unit>
        <trans-unit id="55a608976913f11c0bfe48b82c12d6c98fc5be2a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SQRTL&lt;/code&gt; symbol, which indicates to the C program that the sqrtl() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SQRTL&lt;/code&gt; 符号，该符号向C程序指示sqrtl（）例程可用。</target>
        </trans-unit>
        <trans-unit id="ff161d028d12a8f60281ba1557ef4b340f9a866d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SRANDOM_R&lt;/code&gt; symbol, which indicates to the C program that the srandom_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SRANDOM_R&lt;/code&gt; 符号，该符号向C程序指示srandom_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="df31d97adb4ed010363e7ea545be291a3d3df0c5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STATIC_INLINE&lt;/code&gt; symbol, which indicates that the C compiler supports C99-style static inline. That is, the function can't be called from another translation unit.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STATIC_INLINE&lt;/code&gt; 符号，该符号指示C编译器支持C99样式的静态内联。也就是说，不能从另一个翻译单元调用该函数。</target>
        </trans-unit>
        <trans-unit id="d474b5756e047a2e52981c5580659a2956dc6ff0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STATVFS&lt;/code&gt; symbol, which indicates to the C program that the statvfs() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STATVFS&lt;/code&gt; 符号，该符号向C程序指示statvfs（）例程可用。</target>
        </trans-unit>
        <trans-unit id="18c02e8a0e7d03f2a5e32dcbd5d9741b8e51c2e4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRERROR_L&lt;/code&gt; symbol, which indicates to the C program that the strerror_l() routine is available to return the error message for a given errno value in a particular locale (identified by a locale_t object).</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRERROR_L&lt;/code&gt; 符号，该符号向C程序指示strerror_l（）例程可用于在特定语言环境（由locale_t对象标识）中返回给定errno值的错误消息。</target>
        </trans-unit>
        <trans-unit id="b6d10579337800185a9e7132750b60557d76bfa3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRERROR_R&lt;/code&gt; symbol, which indicates to the C program that the strerror_r() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRERROR_R&lt;/code&gt; 符号，该符号向C程序指示strerror_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="20fcca82429da7795e5cc59892dac7593b77e77b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRFTIME&lt;/code&gt; symbol, which indicates to the C program that the strftime() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRFTIME&lt;/code&gt; 符号，该符号向C程序指示strftime（）例程可用。</target>
        </trans-unit>
        <trans-unit id="0199a91972fc0c149d39a201728c3b80c0b01bd2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRLCAT&lt;/code&gt; symbol, which indicates to the C program that the strlcat () routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRLCAT&lt;/code&gt; 符号，该符号向C程序指示strlcat（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d6ee12efe7537e1b19c6229e9c0752448d18d8be" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRLCPY&lt;/code&gt; symbol, which indicates to the C program that the strlcpy () routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRLCPY&lt;/code&gt; 符号，该符号向C程序指示strlcpy（）例程可用。</target>
        </trans-unit>
        <trans-unit id="22da14eeb2611a6ce8c40aef0370999b08cdea70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRNLEN&lt;/code&gt; symbol, which indicates to the C program that the strnlen () routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRNLEN&lt;/code&gt; 符号，该符号向C程序指示strnlen（）例程可用。</target>
        </trans-unit>
        <trans-unit id="3b009264466a67856d0fde2237b24764adf8eec7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOD&lt;/code&gt; symbol, which indicates to the C program that the strtod() routine is available to provide better numeric string conversion than atof().</source>
          <target state="translated">该变量有条件地定义了 &lt;code&gt;HAS_STRTOD&lt;/code&gt; 符号，该符号向C程序表明strtod（）例程可提供比atof（）更好的数字字符串转换。</target>
        </trans-unit>
        <trans-unit id="5c3599b09955531f99d84efa9b359d7958baeaa9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOD_L&lt;/code&gt; symbol, which indicates to the C program that the strtod_l() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRTOD_L&lt;/code&gt; 符号，该符号向C程序指示strtod_l（）例程可用。</target>
        </trans-unit>
        <trans-unit id="7663a9fd5e1349aef4bd66a1526e5e17e25ffc7f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOL&lt;/code&gt; symbol, which indicates to the C program that the strtol() routine is available to provide better numeric string conversion than atoi() and friends.</source>
          <target state="translated">该变量有条件地定义了 &lt;code&gt;HAS_STRTOL&lt;/code&gt; 符号，该符号向C程序表明strtol（）例程可提供比atoi（）和其友人更好的数字字符串转换。</target>
        </trans-unit>
        <trans-unit id="b4ebed292945155ae20aa03c4b963474073bfaad" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOLD&lt;/code&gt; symbol, which indicates to the C program that the strtold() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRTOLD&lt;/code&gt; 符号，该符号向C程序指示strtold（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c0465c241471352a334c58c9ba39ee2899630ff1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOLD_L&lt;/code&gt; symbol, which indicates to the C program that the strtold_l() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRTOLD_L&lt;/code&gt; 符号，该符号向C程序指示strtold_l（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4c8554bba02c19a66efff6c62b106f50dbcdd559" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOLL&lt;/code&gt; symbol, which indicates to the C program that the strtoll() routine is available.</source>
          <target state="translated">此变量有条件地限定 &lt;code&gt;HAS_STRTOLL&lt;/code&gt; 符号，其指示到C程序，所述与strtoll（）例程是可用的。</target>
        </trans-unit>
        <trans-unit id="3c41f45d6566d0379002c0f44a1d0b13c3bd3578" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOQ&lt;/code&gt; symbol, which indicates to the C program that the strtoq() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRTOQ&lt;/code&gt; 符号，该符号向C程序指示strtoq（）例程可用。</target>
        </trans-unit>
        <trans-unit id="15dee005d531cb27f730bcb33fec29967a9b086e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOUL&lt;/code&gt; symbol, which indicates to the C program that the strtoul() routine is available to provide conversion of strings to unsigned long.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRTOUL&lt;/code&gt; 符号，该符号向C程序指示strtoul（）例程可用于将字符串转换为无符号long。</target>
        </trans-unit>
        <trans-unit id="b4c34f50f555ef99da020f2bf42d80275ccad790" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOULL&lt;/code&gt; symbol, which indicates to the C program that the strtoull() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRTOULL&lt;/code&gt; 符号，该符号向C程序指示strtoull（）例程可用。</target>
        </trans-unit>
        <trans-unit id="202f2b2facf6aaca768403cde9f69a78fbed5c70" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRTOUQ&lt;/code&gt; symbol, which indicates to the C program that the strtouq() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRTOUQ&lt;/code&gt; 符号，该符号向C程序指示strtouq（）例程可用。</target>
        </trans-unit>
        <trans-unit id="908f7281b1b2806240e541ecfb60649f6724c78c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRUCT_CMSGHDR&lt;/code&gt; symbol, which indicates that the struct cmsghdr is supported.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRUCT_CMSGHDR&lt;/code&gt; 符号，该符号表示支持结构cmsghdr。</target>
        </trans-unit>
        <trans-unit id="0c2cc131f4bd644627be6586614b95caae06037e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRUCT_FS_DATA&lt;/code&gt; symbol, which indicates that the struct fs_data is supported.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRUCT_FS_DATA&lt;/code&gt; 符号，该符号指示支持结构fs_data。</target>
        </trans-unit>
        <trans-unit id="70b83a4618c8974c01762678297179761ed9cb4b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRUCT_MSGHDR&lt;/code&gt; symbol, which indicates that the struct msghdr is supported.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_STRUCT_MSGHDR&lt;/code&gt; 符号，该符号指示支持结构msghdr。</target>
        </trans-unit>
        <trans-unit id="07c61153b69ba06c16d25e731d8375cc69106eb9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRUCT_STATFS&lt;/code&gt; symbol, which indicates that the struct statfs is supported.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRUCT_STATFS&lt;/code&gt; 符号，该符号指示支持statfs结构。</target>
        </trans-unit>
        <trans-unit id="6952abd4dbae9393322867e0eaeee3370be3451e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_STRUCT_STATFS_F_FLAGS&lt;/code&gt; symbol, which indicates to struct statfs from has f_flags member. This kind of struct statfs is coming from</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_STRUCT_STATFS_F_FLAGS&lt;/code&gt; 符号，该符号指示从具有f_flags成员的结构statfs。这种结构statfs来自</target>
        </trans-unit>
        <trans-unit id="7058bd273716b9561ffb2269bc1ec12c4cfdd2ba" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SYMLINK&lt;/code&gt; symbol, which indicates to the C program that the symlink() routine is available to create symbolic links.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SYMLINK&lt;/code&gt; 符号，该符号向C程序表明symlink（）例程可用于创建符号链接。</target>
        </trans-unit>
        <trans-unit id="a5982888f52282170460652400623692cf5fbd8f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SYSCALL_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the syscall() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SYSCALL_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为syscall（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="88ccca60eed9e4c30c2d48cd303ea8e18766bc9f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_SYSCONF&lt;/code&gt; symbol, which indicates to the C program that the sysconf() routine is available to determine system related limits and options.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_SYSCONF&lt;/code&gt; 符号，该符号向C程序表明sysconf（）例程可用于确定与系统相关的限制和选项。</target>
        </trans-unit>
        <trans-unit id="3a7ca1a6ef66dc4719c180d21b1b7c1fe5dafcaf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TCGETPGRP&lt;/code&gt; symbol, which indicates to the C program that the tcgetpgrp() routine is available. to get foreground process group &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TCGETPGRP&lt;/code&gt; 符号，该符号向C程序指示tcgetpgrp（）例程可用。获取前台进程组 &lt;code&gt;ID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dd4580c136d4de14bd794bf6aa5a7f3a5bc2ae7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TCGETPGRP&lt;/code&gt; symbol, which indicates to the C program that the tcgetpgrp() routine is available. to get foreground process group &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TCGETPGRP&lt;/code&gt; 符号，该符号向C程序指示tcgetpgrp（）例程可用。获取前台进程组 &lt;code&gt;ID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1050e2783e77959b181f6d5b9722430aa60feff4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TCSETPGRP&lt;/code&gt; symbol, which indicates to the C program that the tcsetpgrp() routine is available to set foreground process group &lt;code&gt;ID&lt;/code&gt; .</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_TCSETPGRP&lt;/code&gt; 符号，该符号向C程序指示tcsetpgrp（）例程可用于设置前台进程组 &lt;code&gt;ID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9427957528576074667968283739e8d011cfecad" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TCSETPGRP&lt;/code&gt; symbol, which indicates to the C program that the tcsetpgrp() routine is available to set foreground process group &lt;code&gt;ID&lt;/code&gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_TCSETPGRP&lt;/code&gt; 符号，该符号向C程序表明tcsetpgrp（）例程可用于设置前台进程组 &lt;code&gt;ID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e109b631fbc101f5c36849cbd52d05af1365890" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TELLDIR_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the telldir() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TELLDIR_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为telldir（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="a356aa1bf30cdcca4c04217ed5143321ebf27333" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TGAMMA&lt;/code&gt; symbol, which indicates to the C program that the tgamma() routine is available for the gamma function. See also d_lgamma.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_TGAMMA&lt;/code&gt; 符号，该符号向C程序表明tgamma（）例程可用于gamma函数。另请参见d_lgamma。</target>
        </trans-unit>
        <trans-unit id="e0d3b04e3e15a7fbddd6ff5771df57b8daf49b9a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TIME&lt;/code&gt; symbol, which indicates that the time() routine exists. The time() routine is normally provided on &lt;code&gt;UNIX&lt;/code&gt; systems.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TIME&lt;/code&gt; 符号，该符号指示time（）例程存在。通常在 &lt;code&gt;UNIX&lt;/code&gt; 系统上提供time（）例程。</target>
        </trans-unit>
        <trans-unit id="2e45a747b9e83aef73ebd2b721af8f5b725c2d2b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TIMEGM&lt;/code&gt; symbol, which indicates to the C program that the timegm () routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TIMEGM&lt;/code&gt; 符号，该符号向C程序指示timegm（）例程可用。</target>
        </trans-unit>
        <trans-unit id="aed39f91f6f498dc30b78a6b99daa12a0c8dbe22" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TIMES&lt;/code&gt; symbol, which indicates that the times() routine exists. The times() routine is normally provided on &lt;code&gt;UNIX&lt;/code&gt; systems. You may have to include &amp;lt;sys/times.h&amp;gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TIMES&lt;/code&gt; 符号，该符号指示times（）例程存在。通常在 &lt;code&gt;UNIX&lt;/code&gt; 系统上提供times（）例程。您可能必须包含&amp;lt;sys / times.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="cc99d5487b8407f3d121903a90c54d0962e21c30" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TMPNAM_R&lt;/code&gt; symbol, which indicates to the C program that the tmpnam_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TMPNAM_R&lt;/code&gt; 符号，该符号向C程序指示tmpnam_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="136a0e5d9c2ea94c281a47d7db04221362e7b5e9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TOWLOWER&lt;/code&gt; symbol, which indicates to the C program that the towlower() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TOWLOWER&lt;/code&gt; 符号，该符号向C程序指示towlower（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c6ee2d965856d8935df90b5bd2d80b6f7909a01e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TOWUPPER&lt;/code&gt; symbol, which indicates to the C program that the towupper() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TOWUPPER&lt;/code&gt; 符号，该符号向C程序指示towupper（）例程可用。</target>
        </trans-unit>
        <trans-unit id="9060e5c9a5e11902a46a7c0c6c1231242e9cd84a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TRUNC&lt;/code&gt; symbol, which indicates to the C program that the trunc() routine is available to round doubles towards zero.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TRUNC&lt;/code&gt; 符号，该符号向C程序表明trunc（）例程可用于将双精度舍入为零。</target>
        </trans-unit>
        <trans-unit id="ba90122d3cb0eaaeaced75e42cef2af23baad2e3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TRUNCL&lt;/code&gt; symbol, which indicates to the C program that the truncl() routine is available to round long doubles towards zero. If copysignl is also present, we can emulate modfl.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TRUNCL&lt;/code&gt; 符号，该符号向C程序表明truncl（）例程可用于将双精度双精度整数舍入为零。如果copysignl也存在，我们可以模拟modfl。</target>
        </trans-unit>
        <trans-unit id="b5598b74dd4b4c646e4f128679fa9e98d79530a8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_TTYNAME_R&lt;/code&gt; symbol, which indicates to the C program that the ttyname_r() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_TTYNAME_R&lt;/code&gt; 符号，该符号向C程序指示ttyname_r（）例程可用。</target>
        </trans-unit>
        <trans-unit id="4f46afd77f6d5e168add253df39f6058155babaf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_UALARM&lt;/code&gt; symbol, which indicates to the C program that the ualarm() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_UALARM&lt;/code&gt; 符号，该符号向C程序指示ualarm（）例程可用。</target>
        </trans-unit>
        <trans-unit id="d8665a1dcaac89f591d28c05d0cf1043cba55443" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_UMASK&lt;/code&gt; symbol, which indicates to the C program that the umask() routine is available. to set and get the value of the file creation mask.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_UMASK&lt;/code&gt; 符号，该符号向C程序指示umask（）例程可用。设置并获取文件创建掩码的值。</target>
        </trans-unit>
        <trans-unit id="a77432fbea9492a12b8bf7dfeb3725ff8f4cdabe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_UNAME&lt;/code&gt; symbol, which indicates to the C program that the uname() routine may be used to derive the host name.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_UNAME&lt;/code&gt; 符号，该符号向C程序指示可以使用uname（）例程来导出主机名。</target>
        </trans-unit>
        <trans-unit id="b17cf675bde30bf5333b7c4d33b8987d161c8265" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_UNLINKAT&lt;/code&gt; symbol, which indicates the &lt;code&gt;POSIX&lt;/code&gt; unlinkat() function isavailable.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_UNLINKAT&lt;/code&gt; 符号，该符号指示 &lt;code&gt;POSIX&lt;/code&gt; unlinkat（）函数可用。</target>
        </trans-unit>
        <trans-unit id="deb135c3cd199e3ea7a7396cd244ad4542edcf21" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_UNORDERED&lt;/code&gt; symbol, which indicates to the C program that the unordered() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_UNORDERED&lt;/code&gt; 符号，该符号向C程序指示unordered（）例程可用。</target>
        </trans-unit>
        <trans-unit id="cb97b5f948d41e4ab4bd4c80a95f592c5192864c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_UNSETENV&lt;/code&gt; symbol, which indicates to the C program that the unsetenv () routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_UNSETENV&lt;/code&gt; 符号，该符号向C程序指示unsetenv（）例程可用。</target>
        </trans-unit>
        <trans-unit id="a782aa02338e48caf08034ee1b570b4e0a0fc2fb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_USELOCALE&lt;/code&gt; symbol, which indicates to the C program that the uselocale() routine is available to set the current locale for the calling thread.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_USELOCALE&lt;/code&gt; 符号，该符号向C程序指示uselocale（）例程可用于为调用线程设置当前语言环境。</target>
        </trans-unit>
        <trans-unit id="987e30d987fc704b3bc810fe70e4613f9b4db2ea" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_USLEEP_PROTO&lt;/code&gt; symbol, which indicates to the C program that the system provides a prototype for the usleep() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_USLEEP_PROTO&lt;/code&gt; 符号，该符号向C程序表明系统为usleep（）函数提供了原型。否则，由程序提供一个。</target>
        </trans-unit>
        <trans-unit id="9bc323a120864193ae678dcfc7901dfba9c56f93" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_VFORK&lt;/code&gt; symbol, which indicates the vfork() routine is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_VFORK&lt;/code&gt; 符号，该符号指示vfork（）例程可用。</target>
        </trans-unit>
        <trans-unit id="c572f38c8f8383dc93ca3e52a2e1d968736e2e1a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_VPRINTF&lt;/code&gt; symbol, which indicates to the C program that the vprintf() routine is available to printf with a pointer to an argument list.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_VPRINTF&lt;/code&gt; 符号，该符号向C程序表明vprintf（）例程可用于带指向参数列表的指针的printf。</target>
        </trans-unit>
        <trans-unit id="327856483c81a4ce6287b58d5490e63b7e042d6d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_VSNPRINTF&lt;/code&gt; symbol, which indicates to the C program that the vsnprintf () library function is available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_VSNPRINTF&lt;/code&gt; 符号，该符号向C程序表明vsnprintf（）库函数可用。</target>
        </trans-unit>
        <trans-unit id="b3eaf32082b6322f61da77cb85175181a6175cf0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_WCSCMP&lt;/code&gt; symbol if the wcscmp() routine is available and can be used to compare wide character strings.</source>
          <target state="translated">如果wcscmp（）例程可用，则此变量有条件地定义 &lt;code&gt;HAS_WCSCMP&lt;/code&gt; 符号，并可用于比较宽字符串。</target>
        </trans-unit>
        <trans-unit id="dfd2c81bf0cabf879e52f350bf5cabdae3221fae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_WCSTOMBS&lt;/code&gt; symbol, which indicates to the C program that the wcstombs() routine is available to convert wide character strings to multibyte strings.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_WCSTOMBS&lt;/code&gt; 符号，该符号向C程序表明wcstombs（）例程可用于将宽字符串转换为多字节字符串。</target>
        </trans-unit>
        <trans-unit id="eb15fb80afbef828248291d223546ec89a111743" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_WCSXFRM&lt;/code&gt; symbol if the wcsxfrm() routine is available and can be used to compare wide character strings.</source>
          <target state="translated">如果wcsxfrm（）例程可用并且可以用来比较宽字符串，则此变量有条件地定义 &lt;code&gt;HAS_WCSXFRM&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="adca00def3cf99930881010172d517772ff01cb0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_WCTOMB&lt;/code&gt; symbol, which indicates to the C program that the wctomb() routine is available to convert a wide character to a multibyte.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;HAS_WCTOMB&lt;/code&gt; 符号，该符号向C程序表明wctomb（）例程可用于将宽字符转换为多字节。</target>
        </trans-unit>
        <trans-unit id="a3a65a5b94dfaebe80d8d3e396ae7b2d0b8a024d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;HAS_WRITEV&lt;/code&gt; symbol, which indicates to the C program that the writev() routine is available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;HAS_WRITEV&lt;/code&gt; 符号，该符号向C程序指示writev（）例程可用。</target>
        </trans-unit>
        <trans-unit id="5b37ccd48a866251041f6754fa3144da516a653b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_ARPA_INET&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;arpa/inet.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_ARPA_INET&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;arpa / inet.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="38de0a70ee039486049f502528ebe93b32c48695" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_ASSERT&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;assert.h&amp;gt; exists and could be included.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_ASSERT&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;assert.h&amp;gt;存在并且可以被包含。</target>
        </trans-unit>
        <trans-unit id="e8ceb682bc74a6d5170915453c49e74891fdee08" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_BFD&lt;/code&gt; symbol, and indicates whether a C program can include &amp;lt;bfd.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_BFD&lt;/code&gt; 符号，并指示C程序是否可以包含&amp;lt;bfd.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="618ff64cf78453d8369b09fbbee5c454011af3de" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_CRYPT&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;crypt.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_CRYPT&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;crypt.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="e181a6075b3d31a85ace9e0a8706631c621e8931" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_DB&lt;/code&gt; symbol, and indicates whether a C program may include Berkeley's &lt;code&gt;DB&lt;/code&gt; include file &amp;lt;db.h&amp;gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_DB&lt;/code&gt; 符号，并指示C程序是否可以包含Berkeley的 &lt;code&gt;DB&lt;/code&gt; 包含文件&amp;lt;db.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="9e9f2cf4b3b3a834426c71e6c170553bcc453f35" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_DBM&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;dbm.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_DBM&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;dbm.h&amp;gt;存在并且应包含在其中。</target>
        </trans-unit>
        <trans-unit id="1fda34b3c8854e05caf22abc8bc2ff1272f55d68" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_DLFCN&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;dlfcn.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_DLFCN&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;dlfcn.h&amp;gt;存在并且应包括在其中。</target>
        </trans-unit>
        <trans-unit id="47233cae3f7c26727170122f208c3a632e57278c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_EXECINFO&lt;/code&gt; symbol, and indicates whether a C program may include &amp;lt;execinfo.h&amp;gt;, for backtrace() support.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_EXECINFO&lt;/code&gt; 符号，并指示C语言程序是否可以包含&amp;lt;execinfo.h&amp;gt;，以支持backtrace（）。</target>
        </trans-unit>
        <trans-unit id="9fb583436cd82d895b62e3a6edde63c2f0d4ab92" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_FENV&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;fenv.h&amp;gt; exists and should be included.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_FENV&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;fenv.h&amp;gt;存在并且应包括在内。</target>
        </trans-unit>
        <trans-unit id="6f342c2b480c167c27ed27fcafea94fa631b2106" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_FLOAT&lt;/code&gt; symbol, and indicates whether a C program may include &amp;lt;float.h&amp;gt; to get symbols like &lt;code&gt;DBL_MAX&lt;/code&gt; or &lt;code&gt;DBL_MIN&lt;/code&gt; ,</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_FLOAT&lt;/code&gt; 符号，并指示C程序是否可以包含&amp;lt;float.h&amp;gt;以获得诸如 &lt;code&gt;DBL_MAX&lt;/code&gt; 或 &lt;code&gt;DBL_MIN&lt;/code&gt; 之类的符号，</target>
        </trans-unit>
        <trans-unit id="fa2205a6f0f1c56938c16ff1d94aafbc27568faf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_FP&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;fp.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_FP&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;fp.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="9c2efed86c33937d4e3c39e522c7f9d125f78081" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_FP_CLASS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;fp_class.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_FP_CLASS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;fp_class.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="3fd4f87d1f78f8ea7be044b153e2b9fcab964547" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_GDBM&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;gdbm.h&amp;gt; exists and should be included.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_GDBM&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;gdbm.h&amp;gt;存在并且应包含在其中。</target>
        </trans-unit>
        <trans-unit id="632bb9813acea05557477d7f7308698aaf133394" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_GDBMNDBM&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;gdbm/ndbm.h&amp;gt; exists and should be included. This was the location of the</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_GDBMNDBM&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;gdbm / ndbm.h&amp;gt;存在并且应包含在其中。这是</target>
        </trans-unit>
        <trans-unit id="3f486c464538a4e72286c856211ffe5c7783f79d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_GDBM_NDBM&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;gdbm-</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_GDBM_NDBM&lt;/code&gt; 符号，该符号向C程序表示&amp;lt;gdbm-</target>
        </trans-unit>
        <trans-unit id="9492102cf6dc481064530ae7f5450725bf6d6d51" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_GRP&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;grp.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_GRP&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;grp.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="11d71d9b0b583a497cb38a5712c2aec0b4e4b642" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_IEEEFP&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;ieeefp.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_IEEEFP&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;ieeefp.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="64557796fbb946feae3ed0b391c186b6f4833a1a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_INTTYPES&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;inttypes.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_INTTYPES&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;inttypes.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="97b12d663c1d9030c23feb1c10bb41c5fd90a8f7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_LANGINFO&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;langinfo.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_LANGINFO&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;langinfo.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="9960a7be3c917c0e4158c71dbf678da70bb9cc48" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_LIBUTIL&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;libutil.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_LIBUTIL&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;libutil.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="911609c3cdeee7207528d6979182e0bc6c4fd930" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_LIMITS&lt;/code&gt; symbol, and indicates whether a C program may include &amp;lt;limits.h&amp;gt; to get symbols like &lt;code&gt;WORD_BIT&lt;/code&gt; and friends.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_LIMITS&lt;/code&gt; 符号，并指示C程序是否可以包含&amp;lt;limits.h&amp;gt;以获取诸如 &lt;code&gt;WORD_BIT&lt;/code&gt; 和朋友之类的符号。</target>
        </trans-unit>
        <trans-unit id="4f462ee34f69dff4f8fdc68eb25bc7c27681be3c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_LOCALE&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;locale.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_LOCALE&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;locale.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="58db16277630a4f74dd8d50d88f86b8863d21079" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_MACH_CTHREADS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;mach/cthreads.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_MACH_CTHREADS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;mach / cthreads.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="6aa93fab852b3d83f9af5bf15f48d738e7be3785" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_MALLOC&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;malloc.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_MALLOC&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;malloc.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="50c90e2ec31de5808dcba00494cd651bad89cadd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_MALLOCMALLOC&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;malloc/malloc.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_MALLOCMALLOC&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;malloc / malloc.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="a89667a03401c90a98fd9edd26bef51b9cd968a1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_MATH&lt;/code&gt; symbol, and indicates whether a C program may include &amp;lt;math.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_MATH&lt;/code&gt; 符号，并指示C程序是否可以包含&amp;lt;math.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="c1627af7e21d52c52bc1b3aa39d832dccd3c1aaa" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_MEMORY&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;memory.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_MEMORY&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;memory.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="3a1f03c65a2ef8da8e85b3acb3a3f2e913de02f6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_MNTENT&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;mntent.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_MNTENT&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;mntent.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="8038db7dd0fcd1104d7333a8363c5504bfccb8f7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_NDBM&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;ndbm.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_NDBM&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;ndbm.h&amp;gt;存在并且应包括在内。</target>
        </trans-unit>
        <trans-unit id="0573473833eeafa395e7285ff8b1e78395df0230" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_NETDB&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;netdb.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_NETDB&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;netdb.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="7a61f0751ce344d35be6b0a3887f51333b342e4f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_NETINET_TCP&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;netinet/tcp.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_NETINET_TCP&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;netinet / tcp.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="e1b20b4d01af95d7a379ff8450329b0c8b290d61" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_NET_ERRNO&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;net/errno.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_NET_ERRNO&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;net / errno.h&amp;gt;存在并且应包含在其中。</target>
        </trans-unit>
        <trans-unit id="d1a57640c29d817c955a30902e3dbbfa4895726e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_POLL&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;poll.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_POLL&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;poll.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="8784fa6e98152577e3bed7b4cdb551938c218a97" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_PROT&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;prot.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_PROT&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;prot.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f36fa31bdff87a9f1c895ce3edc562cc991e35d0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_PTHREAD&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;pthread.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_PTHREAD&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;pthread.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="cd22f7bcb9e441cf01c1649489c7a2c75c854e83" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_RPCSVC_DBM&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;rpcsvc/dbm.h&amp;gt; exists and should be included. Some System V systems might need this instead of &amp;lt;dbm.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_RPCSVC_DBM&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;rpcsvc / dbm.h&amp;gt;存在并且应包括在其中。某些System V系统可能需要此文件，而不是&amp;lt;dbm.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="3988d7fe91eec6641b1362fe8b54bb08b4454adb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SGTTY&lt;/code&gt; symbol, which indicates to the C program that it should include &amp;lt;sgtty.h&amp;gt; rather than &amp;lt;termio.h&amp;gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_SGTTY&lt;/code&gt; 符号，该符号向C程序指示它应包括&amp;lt;sgtty.h&amp;gt;而不是&amp;lt;termio.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="bb3b540315aee14d77a2bc3bfffff57a73fdfc15" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SHADOW&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;shadow.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SHADOW&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;shadow.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="75871d5e31c2c963e5ed266fd0ea1b9bd7fb9eae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SOCKS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;socks.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SOCKS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;socks.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="87cbeeee91eeaeebfa0c195273e06cf9134a3716" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_STDARG&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;stdarg.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_STDARG&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;stdarg.h&amp;gt;存在并且应包含在其中。</target>
        </trans-unit>
        <trans-unit id="017e1a6409088fd5ee8041c8cdca5a8f3929edcf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_STDBOOL&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;stdbool.h&amp;gt; exists and should be included.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_STDBOOL&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;stdbool.h&amp;gt;存在并且应包括在其中。</target>
        </trans-unit>
        <trans-unit id="3c481d3044a99f0f56e8efebfb5986a383b80cb7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_STDDEF&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;stddef.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_STDDEF&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;stddef.h&amp;gt;存在并且应包括在内。</target>
        </trans-unit>
        <trans-unit id="f2aa6a5e81005208f5117f617804e065966bc3cb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_STDINT&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;stdint.h&amp;gt; exists and should be included.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_STDINT&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;stdint.h&amp;gt;存在并且应包含在其中。</target>
        </trans-unit>
        <trans-unit id="59db84f58ae7226a26a29746f54c1c07906a47e4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_STDLIB&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;stdlib.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_STDLIB&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;stdlib.h&amp;gt;存在并且应包括在其中。</target>
        </trans-unit>
        <trans-unit id="2a17bf40c115f989fbde46864b0ed9fd0cd731c1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_STRING&lt;/code&gt; symbol, which indicates that &amp;lt;string.h&amp;gt; should be included rather than &amp;lt;strings.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_STRING&lt;/code&gt; 符号，该符号指示应包括&amp;lt;string.h&amp;gt;而不是&amp;lt;strings.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="4e270281a556378928b44e0908a17858d139eff7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SUNMATH&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sunmath.h&amp;gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_SUNMATH&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sunmath.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="84dd7a9f0f875087ae8429f84e48a1dff0c655f8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSLOG&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;syslog.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSLOG&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;syslog.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="6bcb56f11b97d9c8d8c8b9652382170b24f3cb5c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSMODE&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/mode.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSMODE&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / mode.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="167931bb43c027628470c1801ae2590f3697a3d1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSMOUNT&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/mount.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSMOUNT&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / mount.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="1ff9945df7a1a7ed6a359f6328d4e12b2fa3d755" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSSTATFS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/statfs.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSSTATFS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / statfs.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="eebce9643d4dd45d5aa223a288b5127165052bb2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSSTATVFS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/statvfs.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSSTATVFS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / statvfs.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="15989fd014d6ab35f9e8414efcab2d4b2e9b75a2" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSUIO&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/uio.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSUIO&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / uio.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="2aad992f571346b5929b4d5c3b8c71ad92d816e5" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSUTSNAME&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/utsname.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSUTSNAME&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / utsname.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="8b380864f1bbd1d4ad6b624ebdce2806f3237a2a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYSVFS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/vfs.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYSVFS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / vfs.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f8526e65b8d8a1a49b6d2941191524ed4ad627ee" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_ACCESS&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/access.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_ACCESS&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / access.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="0e409c38fb38320b4ea584fe80f27cffa07ba03b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_BSDIOCTL&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;sys/bsdioctl.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_BSDIOCTL&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;sys / bsdioctl.h&amp;gt;存在并且应包括在其中。</target>
        </trans-unit>
        <trans-unit id="5c774583d925acf3051a7cb2c54ca61103511014" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_DIR&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/dir.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_DIR&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / dir.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="efa433e860cce7eb69ccf06be6bc32874836593e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_FILE&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/file.h&amp;gt; to get &lt;code&gt;R_OK&lt;/code&gt; and friends.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_FILE&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / file.h&amp;gt;以获得 &lt;code&gt;R_OK&lt;/code&gt; 和朋友。</target>
        </trans-unit>
        <trans-unit id="a14464a70b9c474007cc4d97fa93cd15f4a4206b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_FILIO&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;sys/filio.h&amp;gt; exists and should be included in preference to &amp;lt;sys/ioctl.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_FILIO&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;sys / filio.h&amp;gt;存在，并且应优先包含在&amp;lt;sys / ioctl.h&amp;gt;中。</target>
        </trans-unit>
        <trans-unit id="06d79bf020e5c0dcae9b847351a497b9917e8473" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_IOCTL&lt;/code&gt; symbol, which indicates to the C program that &amp;lt;sys/ioctl.h&amp;gt; exists and should be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_IOCTL&lt;/code&gt; 符号，该符号向C程序指示&amp;lt;sys / ioctl.h&amp;gt;存在并且应包含在其中。</target>
        </trans-unit>
        <trans-unit id="648c665d707fda6e099228964130dcb5af73f64b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_MMAN&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/mman.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_MMAN&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / mman.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="fcf8fbd7ff6528b55d6280b1c9ede75d46f3598a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_NDIR&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/ndir.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_NDIR&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / ndir.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="14f92a96e40712199af5270b8a4dffbde1d9d2b8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_PARAM&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/param.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_PARAM&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / param.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="5c54f629f282f42517d68cadc3a60c15b76bfc80" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_POLL&lt;/code&gt; symbol, which indicates to the C program that it should include &amp;lt;sys/poll.h&amp;gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_SYS_POLL&lt;/code&gt; 符号，该符号向C程序指示它应包含&amp;lt;sys / poll.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="6a872df56baffb45c7f65f8b33c7e3562c697a54" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_RESOURCE&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/resource.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_RESOURCE&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / resource.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="361f36566ac0806779062d1a65cc8318aef4ef8f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_SECURITY&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/security.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_SECURITY&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / security.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="ee3384bb6b7f55f1a0780f5cceaaaa3758ab0f7b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_STAT&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/stat.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_STAT&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / stat.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="7286623f6d23ad59f781be6430b8b39e4236aa23" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_TIMES&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/times.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_TIMES&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / times.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="2dd9dea323f51df11b9210f8fbc73225522398af" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_SYS_TYPES&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;sys/types.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_SYS_TYPES&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;sys / types.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="04caebcfd496e60bf36be20e313d54241f17c741" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_TERMIO&lt;/code&gt; symbol, which indicates to the C program that it should include &amp;lt;termio.h&amp;gt; rather than &amp;lt;sgtty.h&amp;gt;.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;I_TERMIO&lt;/code&gt; 符号，该符号向C程序指示它应包括&amp;lt;termio.h&amp;gt;而不是&amp;lt;sgtty.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="9b0122844748f475eaaba2b90b4f644b3d857e16" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_TERMIOS&lt;/code&gt; symbol, which indicates to the C program that the &lt;code&gt;POSIX&lt;/code&gt; &amp;lt;termios.h&amp;gt; file is to be included.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_TERMIOS&lt;/code&gt; 符号，该符号向C程序指示要包含 &lt;code&gt;POSIX&lt;/code&gt; &amp;lt;termios.h&amp;gt;文件。</target>
        </trans-unit>
        <trans-unit id="a89ebcc940e74af2ec68fcddb7c5344f66e12653" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_UNISTD&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;unistd.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_UNISTD&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;unistd.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="d2ff605490c13a29a88686ae5b6df2720121f131" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_USTAT&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;ustat.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_USTAT&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;ustat.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="fd3f460e16850c7cdd02bac08ea0c96e1a25b43b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_UTIME&lt;/code&gt; symbol, and indicates whether a C program should include &amp;lt;utime.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_UTIME&lt;/code&gt; 符号，并指示C程序是否应包含&amp;lt;utime.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="f578c6547b8c0e3a116073ddab83e9d67b0c1ea1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_VALUES&lt;/code&gt; symbol, and indicates whether a C program may include &amp;lt;values.h&amp;gt; to get symbols like &lt;code&gt;MAXLONG&lt;/code&gt; and friends.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_VALUES&lt;/code&gt; 符号，并指示C程序是否可以包含&amp;lt;values.h&amp;gt;以获取诸如 &lt;code&gt;MAXLONG&lt;/code&gt; 和朋友之类的符号。</target>
        </trans-unit>
        <trans-unit id="35b172751ebc720027cae8e5434d066f5dbf7644" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_VFORK&lt;/code&gt; symbol, and indicates whether a C program should include</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_VFORK&lt;/code&gt; 符号，并指示C程序是否应包含</target>
        </trans-unit>
        <trans-unit id="d9a9101c652cbcd1578708f8047d7999afa42ba4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_WCHAR&lt;/code&gt; symbol, that indicates whether a C program may include &amp;lt;wchar.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_WCHAR&lt;/code&gt; 符号，该符号指示C程序是否可以包含&amp;lt;wchar.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="15e5da9468c2d8ecc2a991cbbe59be6179ccb851" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;I_WCTYPE&lt;/code&gt; symbol, that indicates whether a C program may include &amp;lt;wctype.h&amp;gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;I_WCTYPE&lt;/code&gt; 符号，该符号指示C程序是否可以包含&amp;lt;wctype.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="62b747c44079799965407b991599f1eba26bad2e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;LIBM_LIB_VERSION&lt;/code&gt; symbol, which indicates to the C program that</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;LIBM_LIB_VERSION&lt;/code&gt; 符号，该符号向C程序指示：</target>
        </trans-unit>
        <trans-unit id="24ffdb24ad26447394edc4490faa5a2814041a65" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;LOCALTIME_R_NEEDS_TZSET&lt;/code&gt; symbol, which makes us call tzset before localtime_r()</source>
          <target state="translated">这个变量有条件地定义了 &lt;code&gt;LOCALTIME_R_NEEDS_TZSET&lt;/code&gt; 符号，这使我们在localtime_r（）之前调用tzset。</target>
        </trans-unit>
        <trans-unit id="325956fac710712b805dd7e43f69d13a9a0d7a64" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;MULTIARCH&lt;/code&gt; symbol which signifies the presence of multiplatform files. This is normally set by hints files.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;MULTIARCH&lt;/code&gt; 符号，该符号表示存在多平台文件。通常由提示文件设置。</target>
        </trans-unit>
        <trans-unit id="8540755d1c3453c30b1a6f9cd5ebe1807ce9e2bb" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;MULTIPLICITY&lt;/code&gt; symbol, and indicates that Perl should be built to use multiplicity.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;MULTIPLICITY&lt;/code&gt; 符号，并指示应构建Perl以使用多重性。</target>
        </trans-unit>
        <trans-unit id="a0cf84fbefe3887a8d09ca446fefa63c396cb409" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;NDBM_H_USES_PROTOTYPES&lt;/code&gt; symbol, which indicates that the</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;NDBM_H_USES_PROTOTYPES&lt;/code&gt; 符号，该符号指示</target>
        </trans-unit>
        <trans-unit id="1acd05495f1fdc9f43244ea5cbd13523560ee957" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;NDBM_H_USES_PROTOTYPES&lt;/code&gt; symbol, which indicates that the gdbm-</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;NDBM_H_USES_PROTOTYPES&lt;/code&gt; 符号，该符号表示gdbm-</target>
        </trans-unit>
        <trans-unit id="c0152e4a0d6c8424c2085184c7ba82705afba20a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;OLDSOCKET&lt;/code&gt; symbol, which indicates that the &lt;code&gt;BSD&lt;/code&gt; socket interface is based on 4.1c and not 4.2.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;OLDSOCKET&lt;/code&gt; 符号，该符号指示 &lt;code&gt;BSD&lt;/code&gt; 套接字接口基于4.1c而不是4.2。</target>
        </trans-unit>
        <trans-unit id="80a51e38d944fcaafb5a6e3916e37e8e76396cdf" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;OLD_PTHREADS_API&lt;/code&gt; symbol, and indicates that Perl should be built to use the old draft &lt;code&gt;POSIX&lt;/code&gt; threads &lt;code&gt;API&lt;/code&gt; . This is only potentially meaningful if usethreads is set.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;OLD_PTHREADS_API&lt;/code&gt; 符号，并指示应该构建Perl以使用旧的 &lt;code&gt;POSIX&lt;/code&gt; 线程草稿 &lt;code&gt;API&lt;/code&gt; 。仅当设置了usethreads时，这才可能有意义。</target>
        </trans-unit>
        <trans-unit id="42ee8c00e470bd04dd6c6a43d079df1c3be5bdb6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;OLD_PTHREADS_API&lt;/code&gt; symbol, and indicates that Perl should be built to use the old draft &lt;code&gt;POSIX&lt;/code&gt; threads &lt;code&gt;API&lt;/code&gt;. This is only potentially meaningful if usethreads is set.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;OLD_PTHREADS_API&lt;/code&gt; 符号，并指示应该构建Perl以使用旧的 &lt;code&gt;POSIX&lt;/code&gt; 线程草稿 &lt;code&gt;API&lt;/code&gt; 。仅当设置了usethreads时，这才可能具有潜在意义。</target>
        </trans-unit>
        <trans-unit id="2437ae4b2a2bbc44030e2a4934ff71ef05a6a7fd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;PORTABLE&lt;/code&gt; symbol, which indicates to the C program that it should not assume that it is running on the machine it was compiled on.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;PORTABLE&lt;/code&gt; 符号，该符号向C程序表明它不应该假定它在编译它的计算机上运行。</target>
        </trans-unit>
        <trans-unit id="1778fa2f3bb108d81e2630764767aed6f5135d24" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_CPLUSPLUS&lt;/code&gt; symbol, which indicates that a C++ compiler was used to compiled Perl and will be used to compile extensions.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_CPLUSPLUS&lt;/code&gt; 符号，该符号指示C ++编译器用于编译Perl，并将用于编译扩展。</target>
        </trans-unit>
        <trans-unit id="1d36e9b75557200af00a5170c3a204fc71e7e973" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_CROSS_COMPILE&lt;/code&gt; symbol, and indicates that Perl has been cross-compiled.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_CROSS_COMPILE&lt;/code&gt; 符号，并指示Perl已被交叉编译。</target>
        </trans-unit>
        <trans-unit id="cb00793033063be42397359833680437d8e18627" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_FAST_STDIO&lt;/code&gt; symbol, and indicates that Perl should be built to use &lt;code&gt;fast stdio&lt;/code&gt; . Defaults to define in Perls 5.8 and earlier, to undef later.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_FAST_STDIO&lt;/code&gt; 符号，并指示应构建Perl以使用 &lt;code&gt;fast stdio&lt;/code&gt; 。默认值在Perls 5.8和更早版本中定义，在以后不定义。</target>
        </trans-unit>
        <trans-unit id="c23596a5ec1827f3f33f271c120073e7295b8931" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_FAST_STDIO&lt;/code&gt; symbol, and indicates that Perl should be built to use &lt;code&gt;fast stdio&lt;/code&gt;. Defaults to define in Perls 5.8 and earlier, to undef later.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_FAST_STDIO&lt;/code&gt; 符号，并指示应构建Perl以使用 &lt;code&gt;fast stdio&lt;/code&gt; 。默认值在Perls 5.8及更早版本中定义，在以后取消定义。</target>
        </trans-unit>
        <trans-unit id="764a259e510b3d9e4c494c9cfda551272fc0d509" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_ITHREADS&lt;/code&gt; symbol, and indicates that Perl should be built to use the interpreter-based threading implementation.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_ITHREADS&lt;/code&gt; 符号，并指示应构建Perl以使用基于解释器的线程实现。</target>
        </trans-unit>
        <trans-unit id="213908d3721e9bfe227a2a413c4feadf4070f8fe" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_LARGE_FILES&lt;/code&gt; symbol, and indicates that large file interfaces should be used when available.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;USE_LARGE_FILES&lt;/code&gt; 符号，并指示应在可用时使用大文件接口。</target>
        </trans-unit>
        <trans-unit id="7f5dc44011a68a389ebcf97bb91748106c228b5c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_LONG_DOUBLE&lt;/code&gt; symbol, and indicates that long doubles should be used when available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_LONG_DOUBLE&lt;/code&gt; 符号，并指示应使用长双精度。</target>
        </trans-unit>
        <trans-unit id="b0f8db3e310399153016ad5960325a7b1884e984" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_MORE_BITS&lt;/code&gt; symbol, and indicates that explicit 64-bit interfaces and long doubles should be used when available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_MORE_BITS&lt;/code&gt; 符号，并指示在可用时应使用显式64位接口和长双精度。</target>
        </trans-unit>
        <trans-unit id="8724e5fac36c0888a500de196c1e3decd0f0fa98" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_PERLIO&lt;/code&gt; symbol, and indicates that the PerlIO abstraction should be used throughout.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_PERLIO&lt;/code&gt; 符号，并指示应始终使用PerlIO抽象。</target>
        </trans-unit>
        <trans-unit id="76c768520b4582f002a8989aec6723f3ce24219e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_QUADMATH&lt;/code&gt; symbol, and indicates that the quadmath library __float128 long doubles should be used when available.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_QUADMATH&lt;/code&gt; 符号，并指示应使用四进制库__float128 long double。</target>
        </trans-unit>
        <trans-unit id="c8b6e613aba1ef809ff391b7a793c1fb394fa250" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_REENTRANT_API&lt;/code&gt; symbol, which indicates that the thread code may try to use the various _r versions of library functions. This is only potentially meaningful if usethreads is set and is very experimental, it is not even prompted for.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_REENTRANT_API&lt;/code&gt; 符号，该符号指示线程代码可能尝试使用库函数的各种_r版本。仅当设置了usethreads并且是非常试验性的，甚至没有提示时，这才可能具有潜在意义。</target>
        </trans-unit>
        <trans-unit id="02025b4c6732782be5bbef95a81c12fb1bf089ae" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_SOCKS&lt;/code&gt; symbol, and indicates that Perl should be built to use &lt;code&gt;SOCKS&lt;/code&gt; .</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_SOCKS&lt;/code&gt; 符号，并指示应构建Perl以使用 &lt;code&gt;SOCKS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae9cf88d075d7617b68889ebee57fa4045fed360" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_SOCKS&lt;/code&gt; symbol, and indicates that Perl should be built to use &lt;code&gt;SOCKS&lt;/code&gt;.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_SOCKS&lt;/code&gt; 符号，并指示应构建Perl以使用 &lt;code&gt;SOCKS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73388951ebd61aba92935296bbd7b560a2e51506" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_STRUCT_COPY&lt;/code&gt; symbol, which indicates to the C program that this C compiler knows how to copy structures.</source>
          <target state="translated">该变量有条件地定义 &lt;code&gt;USE_STRUCT_COPY&lt;/code&gt; 符号，该符号向C程序表明该C编译器知道如何复制结构。</target>
        </trans-unit>
        <trans-unit id="d831c84de3db14a96b45ffd5dc2be779b200bb9f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the &lt;code&gt;USE_THREADS&lt;/code&gt; symbol, and indicates that Perl should be built to use threads.</source>
          <target state="translated">此变量有条件地定义 &lt;code&gt;USE_THREADS&lt;/code&gt; 符号，并指示应构建Perl以使用线程。</target>
        </trans-unit>
        <trans-unit id="bc1caff2288ef91b70b77f204555fc86b0644a87" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_ASCTIME64 symbol, which indicates to the C program that the asctime64 () routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_ASCTIME64符号,它向C程序表明asctime64()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="4f5ee37b27170ed1ad083cd9dddc5c9d963f253a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_C99_VARIADIC_MACROS symbol, which indicates to the C program that C99 variadic macros are available.</source>
          <target state="translated">这个变量有条件地定义了HAS_C99_VARIADIC_MACROS符号,它向C程序表明C99变量宏是可用的。</target>
        </trans-unit>
        <trans-unit id="0b61a5a1fcc8fdbc5f2fb3ea898085886e3acc6e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_CTIME64 symbol, which indicates to the C program that the ctime64 () routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_CTIME64符号,它向C程序表明ctime64()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="7f5fe8e1b41515c0e510e4b20cf900e8c67340fc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_DIFFTIME64 symbol, which indicates to the C program that the difftime64 () routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_DIFFTIME64符号,它向C程序表明difftime64()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="27c03e0bca211d3b818ddcab0e891569652759fa" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_DRAND48_PROTO symbol, which indicates to the C program that the system provides a prototype for the drand48() function. Otherwise, it is up to the program to supply one.</source>
          <target state="translated">这个变量有条件地定义了HAS_DRAND48_PROTO符号,它向C程序表明系统为drand48()函数提供了一个原型。否则,就由程序提供一个原型。</target>
        </trans-unit>
        <trans-unit id="68a1a3c08dc2ffbdae0df9755d296fe6676df11a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_DRAND48_R symbol, which indicates to the C program that the drand48_r() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_DRAND48_R符号,它向C程序表明drand48_r()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="e16e9f9db5cdfbb67ed86204b76ca924c4d0a262" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_EXP2 symbol, which indicates to the C program that the exp2() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_EXP2符号,它向C程序表明exp2()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="c1e92329178544537ab41a6903a6ae57efe38d8a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_EXPM1 symbol, which indicates to the C program that the expm1() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_EXPM1符号,它向C程序表明expm1()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="00264c277ea844160e6a35335c5bf499f44c2918" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_GETPGRP2 symbol, which indicates to the C program that the getpgrp2() (as in</source>
          <target state="translated">这个变量有条件地定义了HAS_GETPGRP2符号,它向C程序表明getpgrp2()(如在</target>
        </trans-unit>
        <trans-unit id="868523e0b8cb466706b0f6ac8e17774e12245806" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_GMTIME64 symbol, which indicates to the C program that the gmtime64 () routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_GMTIME64符号,它向C程序表明gmtime64()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="47b3ac40e791447cf867048b09d1eb678be26309" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_IPV6_MREQ symbol, which indicates the availability of a struct ipv6_mreq.</source>
          <target state="translated">这个变量有条件地定义了HAS_IPV6_MREQ符号,它表示一个ipv6_mreq结构的可用性。</target>
        </trans-unit>
        <trans-unit id="7bc70baabf29063f7a9160eb18be954a8348d6bc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_IPV6_MREQ_SOURCE symbol, which indicates the availability of a struct ipv6_mreq_source.</source>
          <target state="translated">这个变量有条件地定义了HAS_IPV6_MREQ_SOURCE符号,它表示一个ipv6_mreq_source结构的可用性。</target>
        </trans-unit>
        <trans-unit id="4015575c1895989ee5ebc5a4f91d618397b07819" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_J0 symbol, which indicates to the C program that the j0() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_J0符号,它向C程序表明j0()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="2958b939dd297fe8c5f58f3a308a498ee2c0da40" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_J0L symbol, which indicates to the C program that the j0l() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_J0L符号,它向C程序表明j0l()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="4b528a785cad69d0c699d6c89f20c9d67ee7ac13" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_LOCALTIME64 symbol, which indicates to the C program that the localtime64 () routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_LOCALTIME64符号,它向C程序表明localtime64()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="392ec9a233f9ca18e7d68e79e5b3f6c2a051bd91" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_LOG1P symbol, which indicates to the C program that the logp1() routine is available to compute log(1 + x) for values of x close to zero.</source>
          <target state="translated">这个变量有条件地定义了HAS_LOG1P符号,它向C程序表明logp1()例程可用于计算x接近零的值的log(1+x)。</target>
        </trans-unit>
        <trans-unit id="f4f21b1971543b5f17e561aa18c91920af53a368" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_LOG2 symbol, which indicates to the C program that the log2() routine is available to compute log base two.</source>
          <target state="translated">这个变量有条件地定义了HAS_LOG2符号,它向C程序表明log2()例程可以用来计算对数基数二。</target>
        </trans-unit>
        <trans-unit id="b204a4d25594bf54b3f56d7089446b98325ba0f9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_MKTIME64 symbol, which indicates to the C program that the mktime64 () routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_MKTIME64符号,它向C程序表明mktime64()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="50c6e2109621c970846ef07831b272d585f4b720" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_MODFL_POW32_BUG symbol, which indicates that modfl() is broken for long doubles &amp;gt;= pow(2, 32). For example from 4294967303.150000 one would get 4294967302.000000 and 1.150000. The bug has been seen in certain versions of glibc, release 2.2.2 is known to be okay.</source>
          <target state="translated">此变量有条件地定义HAS_MODFL_POW32_BUG符号，该符号指示modfl（）在大于= pow（2，32）的长双精度数时被打破。例如，从4294967303.150000中可以得到4294967302.000000和1.150000。该错误已在某些版本的glibc中看到，已知可以发布2.2.2版。</target>
        </trans-unit>
        <trans-unit id="a49ff24a9a41a7301dc9c301443e6aca1bdb6b91" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_OPEN3 manifest constant, which indicates to the C program that the 3 argument version of the open(2) function is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_OPEN3清单常量,它向C程序表明open(2)函数的3参数版本是可用的。</target>
        </trans-unit>
        <trans-unit id="949f32cb2403bfd26c4afc36148e2cedc18127a6" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_PIPE2 symbol, which indicates to the C program that the pipe2() routine is available to create an inter-process channel.</source>
          <target state="translated">这个变量有条件地定义了HAS_PIPE2符号,它向C程序表明pipe2()例程可以创建一个进程间通道。</target>
        </trans-unit>
        <trans-unit id="8f0e591d149253e6ed3d5123bea29e442784b82a" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_READDIR64_R symbol, which indicates to the C program that the readdir64_r() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_READDIR64_R符号,它向C程序表明readdir64_r()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="7fd43e7b803b9b0ee002f7ca3ea56fe7d2466697" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_SETPGRP2 symbol, which indicates to the C program that the setpgrp2() (as in</source>
          <target state="translated">这个变量有条件地定义了HAS_SETPGRP2符号,它向C程序表明setpgrp2()(如在</target>
        </trans-unit>
        <trans-unit id="66467d3be758a985d871e724f30d72c920345bce" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_SIN6_SCOPE_ID symbol, which indicates that a struct sockaddr_in6 structure has the sin6_scope_id member.</source>
          <target state="translated">这个变量有条件地定义了HAS_SIN6_SCOPE_ID符号,表示一个sockaddr_in6结构有sin6_scope_id成员。</target>
        </trans-unit>
        <trans-unit id="4b85f6aa3b279a58df8dfed5839902e28255690c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_SOCKADDR_IN6 symbol, which indicates the availability of a struct sockaddr_in6.</source>
          <target state="translated">这个变量有条件地定义了HAS_SOCKADDR_IN6符号,它表示sockaddr_in6结构的可用性。</target>
        </trans-unit>
        <trans-unit id="ae3c85ee8535fbb1341bd2e653877e357640c25b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_SOCKS5_INIT symbol, which indicates to the C program that the socks5_init() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_SOCKS5_INIT符号,它向C程序表明socks5_init()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="365879b177d2333b7e5646335c36ab0a8574dc8b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_SRAND48_R symbol, which indicates to the C program that the srand48_r() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_SRAND48_R符号,它向C程序表明srand48_r()例程是可用的。</target>
        </trans-unit>
        <trans-unit id="4cd6a6e5084f3eaadded4412817c845cdfa71dbc" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the HAS_WAIT4 symbol, which indicates the wait4() routine is available.</source>
          <target state="translated">这个变量有条件地定义了HAS_WAIT4符号,表示wait4()例程可用。</target>
        </trans-unit>
        <trans-unit id="2cead5d3e2f81379743712b717355fbba12100c0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIXU64 symbol, which indicates that stdio has a symbol to print 64-bit hExADECimAl numbers. The &lt;code&gt;U&lt;/code&gt; in the name is to separate this from d_PRIx64 so that even case-blind systems can see the difference.</source>
          <target state="translated">该变量有条件地定义了PERL_PRIXU64符号，该符号指示stdio具有可打印64位hExADECimA1数字的符号。名称中的 &lt;code&gt;U&lt;/code&gt; 是将其与d_PRIx64分开，以便即使大小写不均的系统也可以看到差异。</target>
        </trans-unit>
        <trans-unit id="d43ac3bcdec043d50a0095e67884ecec7caaa8b4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRId64 symbol, which indicates that stdio has a symbol to print 64-bit decimal numbers.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRId64符号,表示stdio有一个符号可以打印64位十进制数。</target>
        </trans-unit>
        <trans-unit id="87a235966199082b8608fb9d04be95d5718676a0" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIfldbl symbol, which indicates that stdio has a symbol to print long doubles.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRIfldbl符号,它表示stdio有一个符号可以打印长双数。</target>
        </trans-unit>
        <trans-unit id="623ac1429d0cdcb58b93bdc78689554c377b9547" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIfldbl symbol, which indicates that stdio has a symbol to print long doubles. The &lt;code&gt;U&lt;/code&gt; in the name is to separate this from d_PRIeldbl so that even case-blind systems can see the difference.</source>
          <target state="translated">此变量有条件地定义PERL_PRIfldbl符号，该符号指示stdio具有打印长双打的符号。名称中的 &lt;code&gt;U&lt;/code&gt; 是将其与d_PRIeldbl分开，以使即使大小写不敏感的系统也可以看到差异。</target>
        </trans-unit>
        <trans-unit id="30516a078624e689046c27ee1bc5a4d720eafca8" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIfldbl symbol, which indicates that stdio has a symbol to print long doubles. The &lt;code&gt;U&lt;/code&gt; in the name is to separate this from d_PRIfldbl so that even case-blind systems can see the difference.</source>
          <target state="translated">此变量有条件地定义PERL_PRIfldbl符号，该符号指示stdio具有打印长双打的符号。名称中的 &lt;code&gt;U&lt;/code&gt; 是将其与d_PRIfldbl分开，以使即使大小写不敏感的系统也可以看到差异。</target>
        </trans-unit>
        <trans-unit id="bfe7a3d170626abb9116c4a938a40a5a65febd86" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIfldbl symbol, which indicates that stdio has a symbol to print long doubles. The &lt;code&gt;U&lt;/code&gt; in the name is to separate this from d_PRIgldbl so that even case-blind systems can see the difference.</source>
          <target state="translated">此变量有条件地定义PERL_PRIfldbl符号，该符号指示stdio具有打印长双打的符号。名称中的 &lt;code&gt;U&lt;/code&gt; 是将其与d_PRIgldbl分开，以使即使大小写不敏感的系统也可以看到差异。</target>
        </trans-unit>
        <trans-unit id="f18874353f5e54ed77b39e6c4e48143ccd649481" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIfldbl symbol, which indicates that stdio has a symbol to scan long doubles.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRIfldbl符号,它表示stdio有一个符号来扫描长双数。</target>
        </trans-unit>
        <trans-unit id="82ccb10b56ba3b5a14d3a32f6637790a43ca6c57" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIi64 symbol, which indicates that stdio has a symbol to print 64-bit decimal numbers.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRIi64符号,表示stdio有一个符号可以打印64位十进制数。</target>
        </trans-unit>
        <trans-unit id="488c6d194bed6fea84f7faf1f7d73af7eb20bb2d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIo64 symbol, which indicates that stdio has a symbol to print 64-bit octal numbers.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRIo64符号,它表示stdio有一个符号可以打印64位八进制数。</target>
        </trans-unit>
        <trans-unit id="161615db0dc3dfcce8507f49ba6aedb9f96628e9" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIu64 symbol, which indicates that stdio has a symbol to print 64-bit unsigned decimal numbers.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRIu64符号,表示stdio有一个符号可以打印64位无符号十进制数。</target>
        </trans-unit>
        <trans-unit id="d492a963913ac3bee3082b9efc121915975836be" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the PERL_PRIx64 symbol, which indicates that stdio has a symbol to print 64-bit hexadecimal numbers.</source>
          <target state="translated">这个变量有条件地定义了PERL_PRIx64符号,它表示stdio有一个符号可以打印64位十六进制数。</target>
        </trans-unit>
        <trans-unit id="e77c21dc7ff5153a48f1d50c7831f115466e22a1" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the USE_5005THREADS symbol, and indicates that Perl should be built to use the 5.005-based threading implementation. Only valid up to 5.8.x.</source>
          <target state="translated">这个变量有条件地定义了 USE_5005THREADS 符号,并表示 Perl 应使用基于 5.005 的线程实现。只在 5.8.x 之前有效。</target>
        </trans-unit>
        <trans-unit id="6922cb5181d20063d977ecb7c34dc91623247d99" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the USE_64_BIT_ALL symbol, and indicates that 64-bit integer types should be used when available. The maximal possible 64-bitness is employed: LP64 or ILP64, meaning that you will be able to use more than 2 gigabytes of memory. This mode is even more binary incompatible than USE_64_BIT_INT. You may not be able to run the resulting executable in a 32-bit &lt;code&gt;CPU&lt;/code&gt; at all or you may need at least to reboot your &lt;code&gt;OS&lt;/code&gt; to 64-bit mode.</source>
          <target state="translated">此变量有条件地定义USE_64_BIT_ALL符号，并指示应在可用时使用64位整数类型。使用最大可能的64位：LP64或ILP64，这意味着您将能够使用超过2 GB的内存。与USE_64_BIT_INT相比，此模式与二进制文件的兼容性更高。您可能根本无法在32位 &lt;code&gt;CPU&lt;/code&gt; 中运行生成的可执行文件，或者可能至少需要将 &lt;code&gt;OS&lt;/code&gt; 重新引导至64位模式。</target>
        </trans-unit>
        <trans-unit id="ccafec54f627d828fab5b391bf87532c8831a4dd" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the USE_64_BIT_INT symbol, and indicates that 64-bit integer types should be used when available. The minimal possible 64-bitness is employed, just enough to get 64-bit integers into Perl. This may mean using for example &quot;long longs&quot;, while your memory may still be limited to 2 gigabytes.</source>
          <target state="translated">这个变量有条件地定义了 USE_64_BIT_INT 符号,并表示在可用的情况下应该使用 64 位整数类型。我们采用了最小可能的 64 位,仅仅是为了在 Perl 中使用 64 位整数。这可能意味着使用 &quot;long longs&quot;,而您的内存可能仍然被限制在 2 gigabytes。</target>
        </trans-unit>
        <trans-unit id="5eb58b08d71611a050838836968d1ed70419850b" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOSUID&lt;/code&gt; , which tells the C program that it should insert setuid emulation code on hosts which have setuid #! scripts disabled.</source>
          <target state="translated">该变量有条件地定义符号 &lt;code&gt;DOSUID&lt;/code&gt; ，该符号告诉C程序应在具有setuid＃！的主机上插入setuid仿真代码。脚本已禁用。</target>
        </trans-unit>
        <trans-unit id="b4ceae082da27397ce3a92a7b6729285d3d4fc04" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOSUID&lt;/code&gt;, which tells the C program that it should insert setuid emulation code on hosts which have setuid #! scripts disabled.</source>
          <target state="translated">此变量有条件定义符号 &lt;code&gt;DOSUID&lt;/code&gt; ，该符号告诉C程序应在具有setuid＃！的主机上插入setuid仿真代码。脚本已禁用。</target>
        </trans-unit>
        <trans-unit id="083c86058327ce89af5072662d1ae65abf23b4b4" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_HAS_INF&lt;/code&gt; which indicates that the double type has an infinity.</source>
          <target state="translated">该变量有条件地定义符号 &lt;code&gt;DOUBLE_HAS_INF&lt;/code&gt; ，该符号指示double类型具有无穷大。</target>
        </trans-unit>
        <trans-unit id="585b66d731d801064ed1f5414c19d153d1d9ecc3" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_HAS_NAN&lt;/code&gt; which indicates that the double type has a not-a-number.</source>
          <target state="translated">此变量有条件地定义符号 &lt;code&gt;DOUBLE_HAS_NAN&lt;/code&gt; ，该符号指示double类型具有非数字。</target>
        </trans-unit>
        <trans-unit id="f3059215f8a23fd4f5591db26e5cbf4b253a9c68" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_HAS_NEGATIVE_ZERO&lt;/code&gt; which indicates that the double type has a negative zero.</source>
          <target state="translated">此变量有条件定义符号 &lt;code&gt;DOUBLE_HAS_NEGATIVE_ZERO&lt;/code&gt; ，该符号指示double类型的值为负零。</target>
        </trans-unit>
        <trans-unit id="fef362a7916f551fe7d90d8953972210fd828b0e" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_HAS_SUBNORMALS&lt;/code&gt; which indicates that the double type has subnormals (denormals).</source>
          <target state="translated">此变量有条件地定义符号 &lt;code&gt;DOUBLE_HAS_SUBNORMALS&lt;/code&gt; ，该符号指示double类型具有次正态（非正态）。</target>
        </trans-unit>
        <trans-unit id="5641ad1506efe7cbb8c6437e9544c0116ce3d08f" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_STYLE_CRAY&lt;/code&gt; which indicates that the double is the 64-bit &lt;code&gt;CRAY&lt;/code&gt; mainframe format.</source>
          <target state="translated">此变量有条件地定义符号 &lt;code&gt;DOUBLE_STYLE_CRAY&lt;/code&gt; ，该符号指示double是64位 &lt;code&gt;CRAY&lt;/code&gt; 主机格式。</target>
        </trans-unit>
        <trans-unit id="87f093e1cf637d310ae7d72b0c78ceef5a2ee702" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_STYLE_IBM&lt;/code&gt;, which indicates that the double is the 64-bit &lt;code&gt;IBM&lt;/code&gt; mainframe format.</source>
          <target state="translated">该变量有条件地定义符号 &lt;code&gt;DOUBLE_STYLE_IBM&lt;/code&gt; ，该符号指示double是64位 &lt;code&gt;IBM&lt;/code&gt; 大型机格式。</target>
        </trans-unit>
        <trans-unit id="65419470b9aa547f25bd3b44ea6c44b2a8a801e7" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_STYLE_IEEE&lt;/code&gt;, which indicates that the double is the 64-bit &lt;code&gt;IEEE&lt;/code&gt; 754.</source>
          <target state="translated">此变量有条件地定义符号 &lt;code&gt;DOUBLE_STYLE_IEEE&lt;/code&gt; ，该符号表示double是64位 &lt;code&gt;IEEE&lt;/code&gt; 754。</target>
        </trans-unit>
        <trans-unit id="47fcd2521b2cd4ad1ab7ca3d47825585ac180382" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;DOUBLE_STYLE_VAX&lt;/code&gt;, which indicates that the double is the 64-bit &lt;code&gt;VAX&lt;/code&gt; format D or G.</source>
          <target state="translated">该变量有条件地定义符号 &lt;code&gt;DOUBLE_STYLE_VAX&lt;/code&gt; ，该符号指示双精度数是64位 &lt;code&gt;VAX&lt;/code&gt; 格式D或G。</target>
        </trans-unit>
        <trans-unit id="ffd2d4a964e69ae6561dec6c99512a189ad1356c" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;XENIX&lt;/code&gt; , which alerts the C program that it runs under Xenix.</source>
          <target state="translated">该变量有条件地定义符号 &lt;code&gt;XENIX&lt;/code&gt; ，该符号警告C程序它在Xenix下运行。</target>
        </trans-unit>
        <trans-unit id="13f3e45068d2fc224ec9f75a30dbc31a3a402a69" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbol &lt;code&gt;XENIX&lt;/code&gt;, which alerts the C program that it runs under Xenix.</source>
          <target state="translated">此变量有条件地定义符号 &lt;code&gt;XENIX&lt;/code&gt; ，该符号警告C程序它在Xenix下运行。</target>
        </trans-unit>
        <trans-unit id="3e1de11d99c647c7289474724701eac664c6b90d" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbols &lt;code&gt;EUNICE&lt;/code&gt; and &lt;code&gt;VAX&lt;/code&gt; , which alerts the C program that it must deal with idiosyncrasies of &lt;code&gt;VMS&lt;/code&gt; .</source>
          <target state="translated">这个变量有条件地定义了符号 &lt;code&gt;EUNICE&lt;/code&gt; 和 &lt;code&gt;VAX&lt;/code&gt; ，它们警告C程序必须处理 &lt;code&gt;VMS&lt;/code&gt; 的特质。</target>
        </trans-unit>
        <trans-unit id="732ab106447a6cfd6ed508dfe48dabb3595f5dec" translate="yes" xml:space="preserve">
          <source>This variable conditionally defines the symbols &lt;code&gt;EUNICE&lt;/code&gt; and &lt;code&gt;VAX&lt;/code&gt;, which alerts the C program that it must deal with idiosyncrasies of &lt;code&gt;VMS&lt;/code&gt;.</source>
          <target state="translated">这个变量有条件地定义了符号 &lt;code&gt;EUNICE&lt;/code&gt; 和 &lt;code&gt;VAX&lt;/code&gt; ，它们提醒C程序必须处理 &lt;code&gt;VMS&lt;/code&gt; 的特质。</target>
        </trans-unit>
        <trans-unit id="d1ca2d90eb402e38b96cd60ca8c6170895e15658" translate="yes" xml:space="preserve">
          <source>This variable contains &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending whether the nm extraction is wanted or not.</source>
          <target state="translated">此变量包含 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 取决于是否需要nm提取。</target>
        </trans-unit>
        <trans-unit id="7789add9e4ce8db70151777bf15fb8c9314dedb7" translate="yes" xml:space="preserve">
          <source>This variable contains &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending whether the nm extraction should be performed or not, according to the value of usenm and the flags on the Configure command line.</source>
          <target state="translated">根据usenm的值和Configure命令行上的标志，此变量包含 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 取决于是否应执行nm提取。</target>
        </trans-unit>
        <trans-unit id="9cf7a39f79ae1b1c46d6edd60aef0768b27d46c3" translate="yes" xml:space="preserve">
          <source>This variable contains a colon-separated set of paths for the perl binary to search for additional library files or modules. These directories will be tacked to the end of @&lt;code&gt;INC&lt;/code&gt; . Perl will automatically search below each path for version- and architecture-specific directories. See inc_version_list for more details. A value of  means &lt;code&gt;none&lt;/code&gt; and is used to preserve this value for the next run through Configure.</source>
          <target state="translated">此变量包含用冒号分隔的一组perl二进制文件路径，以搜索其他库文件或模块。这些目录将添加到@ &lt;code&gt;INC&lt;/code&gt; 的末尾。Perl将在每个路径下自动搜索特定于版本和体系结构的目录。有关更多详细信息，请参见inc_version_list。值 &lt;code&gt;none&lt;/code&gt; 表示该值，并保留该值以供下次通过Configure运行。</target>
        </trans-unit>
        <trans-unit id="001eb17e9557eea13a94ed6b34a0211939c6e15b" translate="yes" xml:space="preserve">
          <source>This variable contains a colon-separated set of paths for the perl binary to search for additional library files or modules. These directories will be tacked to the end of @&lt;code&gt;INC&lt;/code&gt;. Perl will automatically search below each path for version- and architecture-specific directories. See inc_version_list for more details. A value of  means &lt;code&gt;none&lt;/code&gt; and is used to preserve this value for the next run through Configure.</source>
          <target state="translated">该变量包含用冒号分隔的一组perl二进制文件路径，以搜索其他库文件或模块。这些目录将添加到@ &lt;code&gt;INC&lt;/code&gt; 的末尾。Perl将在每个路径下自动搜索特定于版本和体系结构的目录。有关更多详细信息，请参见inc_version_list。值 &lt;code&gt;none&lt;/code&gt; 表示该值，并保留该值以用于下次通过Configure运行。</target>
        </trans-unit>
        <trans-unit id="707ea9bc36cd648405d5edb5da9108efe778b83a" translate="yes" xml:space="preserve">
          <source>This variable contains a command that produces the text of the</source>
          <target state="translated">这个变量包含了一个命令,用来生成</target>
        </trans-unit>
        <trans-unit id="8c7123c4cc027b6651559034f6d471c197d1b07e" translate="yes" xml:space="preserve">
          <source>This variable contains a flag that precise difficulties the compiler has casting odd floating values to unsigned long: 0 = ok 1 = couldn't cast &amp;lt; 0 2 = couldn't cast &amp;gt;= 0x80000000 4 = couldn't cast in argument expression list</source>
          <target state="translated">此变量包含一个标志，标志着编译器将奇数个浮点值强制转换为无符号长整数时存在的困难：0 = ok 1 =无法强制转换&amp;lt;0 2 =无法强制转换&amp;gt; = 0x80000000 4 =无法强制转换参数表达式列表</target>
        </trans-unit>
        <trans-unit id="00b11161091cfee0cf25e9f51e8a95a7705212ed" translate="yes" xml:space="preserve">
          <source>This variable contains a list of additional directories to be searched by the compiler. The appropriate &lt;code&gt;-I&lt;/code&gt; directives will be added to ccflags. This is intended to simplify setting local directories from the Configure command line. It's not much, but it parallels the loclibpth stuff in</source>
          <target state="translated">此变量包含编译器要搜索的其他目录的列表。适当的 &lt;code&gt;-I&lt;/code&gt; 指令将添加到ccflag中。这旨在简化从&amp;ldquo;配置&amp;rdquo;命令行设置本地目录的过程。数量不多，但与loclibpth中的内容类似</target>
        </trans-unit>
        <trans-unit id="05511db594a7800a25c5ea5343f234ccd5ad0170" translate="yes" xml:space="preserve">
          <source>This variable contains a path that will be created on the target host using targetmkdir, and then used to copy the cross-compiled executables to. Defaults to</source>
          <target state="translated">这个变量包含了在目标主机上使用 targetmkdir 创建的路径,然后用来复制交叉编译的可执行文件。默认值为</target>
        </trans-unit>
        <trans-unit id="51943cf698ef05d17fe5d82d757a5689e36488dd" translate="yes" xml:space="preserve">
          <source>This variable contains a single string giving the command-line arguments passed to Configure. Spaces within arguments, quotes, and escaped characters are not correctly preserved. To reconstruct the command line, you must assemble the individual command line pieces, given in config_arg[0-9]*.</source>
          <target state="translated">这个变量包含一个单一的字符串,给出了传递给Configure的命令行参数。参数中的空格、引号和转义字符不会被正确保存。要重建命令行,必须将config_arg[0-9]*中给出的各个命令行集合起来。</target>
        </trans-unit>
        <trans-unit id="1870764ed2f16247e997e4fc2ffcccd95f21cdb4" translate="yes" xml:space="preserve">
          <source>This variable contains an identification of the concatenation mechanism used by the C preprocessor.</source>
          <target state="translated">这个变量包含了C预处理器使用的连接机制的标识。</target>
        </trans-unit>
        <trans-unit id="4cc7e831510259e1b95cf27702ac0bf8180ffe21" translate="yes" xml:space="preserve">
          <source>This variable contains any</source>
          <target state="translated">这个变量包含任何</target>
        </trans-unit>
        <trans-unit id="b29e3afba1dd84b209dc7db462e8ad44197fd63a" translate="yes" xml:space="preserve">
          <source>This variable contains any additional C compiler flags desired by the user. It is up to the Makefile to use this.</source>
          <target state="translated">这个变量包含了用户需要的任何额外的C编译器标志。这取决于Makefile是否使用这个变量。</target>
        </trans-unit>
        <trans-unit id="2e14682ed38ba7191551af860aff8caab5bc3848" translate="yes" xml:space="preserve">
          <source>This variable contains any additional C loader flags desired by the user. It is up to the Makefile to use this.</source>
          <target state="translated">这个变量包含了用户需要的任何额外的C加载器标志。这个变量由Makefile来使用。</target>
        </trans-unit>
        <trans-unit id="6ad9e023bf2dd89f5286a41ed686017358d7a26c" translate="yes" xml:space="preserve">
          <source>This variable contains any additional C partial linker flags desired by the user. It is up to the Makefile to use this.</source>
          <target state="translated">这个变量包含了用户需要的任何额外的C部分链接器标志。这取决于Makefile是否使用这个变量。</target>
        </trans-unit>
        <trans-unit id="4d2a2a9ee98225c8879b23a7c406a7850a758c7e" translate="yes" xml:space="preserve">
          <source>This variable contains any additional yacc flags desired by the user. It is up to the Makefile to use this.</source>
          <target state="translated">这个变量包含了用户需要的任何附加的 yacc 标志。这个变量由Makefile决定。</target>
        </trans-unit>
        <trans-unit id="c71cfb21747c7289d8dd43881a4dc9c236332312" translate="yes" xml:space="preserve">
          <source>This variable contains any special flags that might need to be passed to $ld to create a shared library suitable for dynamic loading. It is up to the makefile to use it. For hpux, it should be &lt;code&gt;-b&lt;/code&gt; . For sunos 4.1, it is empty.</source>
          <target state="translated">此变量包含可能需要传递给$ ld的任何特殊标志，以创建适合于动态加载的共享库。使用它取决于makefile。对于hpux，它应该是 &lt;code&gt;-b&lt;/code&gt; 。对于sunos 4.1，它为空。</target>
        </trans-unit>
        <trans-unit id="27553ddaae62d2af534dee106f25099863e50c27" translate="yes" xml:space="preserve">
          <source>This variable contains any special flags that might need to be passed to $ld to create a shared library suitable for dynamic loading. It is up to the makefile to use it. For hpux, it should be &lt;code&gt;-b&lt;/code&gt;. For sunos 4.1, it is empty.</source>
          <target state="translated">此变量包含可能需要传递给$ ld的任何特殊标志，以创建适合于动态加载的共享库。使用makefile取决于makefile。对于hpux，它应该是 &lt;code&gt;-b&lt;/code&gt; 。对于sunos 4.1，它为空。</target>
        </trans-unit>
        <trans-unit id="ef776f318eef91dd59a51bd972ca0cd250435b2b" translate="yes" xml:space="preserve">
          <source>This variable contains any special flags that might need to be passed to cc to link with a shared library for dynamic loading. It is up to the makefile to use it. For sunos 4.1, it should be empty.</source>
          <target state="translated">这个变量包含了任何可能需要传递给cc的特殊标志,以便与动态加载的共享库链接。这取决于 makefile 是否使用它。对于 sunos 4.1,它应该是空的。</target>
        </trans-unit>
        <trans-unit id="c937584a03d3d71ac242d079a3ec6ea28558e74f" translate="yes" xml:space="preserve">
          <source>This variable contains any special flags that might need to be passed with &lt;code&gt;cc -c&lt;/code&gt; to compile modules to be used to create a shared library that will be used for dynamic loading. For hpux, this should be +z. It is up to the makefile to use it.</source>
          <target state="translated">此变量包含可能需要与 &lt;code&gt;cc -c&lt;/code&gt; 一起传递的任何特殊标志，以编译模块以创建用于动态加载的共享库。对于hpux，它应该为+ z。使用它取决于makefile。</target>
        </trans-unit>
        <trans-unit id="757e889cc7bc75cd2cb499b8de05a3c2ef814279" translate="yes" xml:space="preserve">
          <source>This variable contains comma-separated list of hexadecimal bytes for the double precision infinity.</source>
          <target state="translated">这个变量包含以逗号分隔的十六进制字节列表,表示双精度的无穷大。</target>
        </trans-unit>
        <trans-unit id="5b17577a5b85c986b04da30d7d741295f680b448" translate="yes" xml:space="preserve">
          <source>This variable contains comma-separated list of hexadecimal bytes for the double precision not-a-number.</source>
          <target state="translated">这个变量包含以逗号分隔的十六进制字节列表,用于表示双精度not-a-number。</target>
        </trans-unit>
        <trans-unit id="8534b0eab3b3f3b599ec77e54cce3d4af57d61dc" translate="yes" xml:space="preserve">
          <source>This variable contains comma-separated list of hexadecimal bytes for the long double precision infinity.</source>
          <target state="translated">这个变量包含以逗号分隔的十六进制字节列表,用于表示长双精度的无穷大。</target>
        </trans-unit>
        <trans-unit id="9c2afe51815706a16864def5f3cae6d1e367ada2" translate="yes" xml:space="preserve">
          <source>This variable contains comma-separated list of hexadecimal bytes for the long double precision not-a-number.</source>
          <target state="translated">这个变量包含以逗号分隔的十六进制字节列表,用于表示长的双精度not-a-number。</target>
        </trans-unit>
        <trans-unit id="4c28e32568cc2ea73a8b3fd6585b9210a871da1e" translate="yes" xml:space="preserve">
          <source>This variable contains compile-time hints for the Perl interpreter. At the end of compilation of a BLOCK the value of this variable is restored to the value when the interpreter started to compile the BLOCK.</source>
          <target state="translated">这个变量包含了Perl解释器的编译时提示。在BLOCK编译结束后,这个变量的值会恢复到解释器开始编译BLOCK时的值。</target>
        </trans-unit>
        <trans-unit id="1bb304267cd377c3c3a5992e35332c4910b33d6c" translate="yes" xml:space="preserve">
          <source>This variable contains the &lt;code&gt;-n&lt;/code&gt; flag if that is what causes the echo command to suppress newline. Otherwise it is null. Correct usage is $echo $n &quot;prompt for a question: $c&quot;.</source>
          <target state="translated">如果这是导致echo命令禁止换行的原因，则此变量包含 &lt;code&gt;-n&lt;/code&gt; 标志。否则为null。正确的用法是$ echo $ n&amp;ldquo;提示问题：$ c&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8fecd752336e81d7e2ade12636de67dfd91b6ee3" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's &lt;code&gt;IV&lt;/code&gt; .</source>
          <target state="translated">此变量包含用于Perl &lt;code&gt;IV&lt;/code&gt; 的C类型。</target>
        </trans-unit>
        <trans-unit id="b7f400c7efd0ea63c8d587460e87b1b8ea6a075c" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's &lt;code&gt;IV&lt;/code&gt;.</source>
          <target state="translated">此变量包含用于Perl &lt;code&gt;IV&lt;/code&gt; 的C类型。</target>
        </trans-unit>
        <trans-unit id="345b277d5cbf9a500362949b83977d6ed36031ec" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's &lt;code&gt;NV&lt;/code&gt; .</source>
          <target state="translated">此变量包含用于Perl的 &lt;code&gt;NV&lt;/code&gt; 的C类型。</target>
        </trans-unit>
        <trans-unit id="03652ed42cc84c024451ea83c7eb3120223d74b7" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's &lt;code&gt;NV&lt;/code&gt;.</source>
          <target state="translated">此变量包含用于Perl的 &lt;code&gt;NV&lt;/code&gt; 的C类型。</target>
        </trans-unit>
        <trans-unit id="c1b93087a0e96bdaf5ade955c0aba4e163e8ffe4" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's &lt;code&gt;UV&lt;/code&gt; .</source>
          <target state="translated">此变量包含用于Perl &lt;code&gt;UV&lt;/code&gt; 的C类型。</target>
        </trans-unit>
        <trans-unit id="fa2d8fc0159be74a8b7f1542fc9edd18922d28ab" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's &lt;code&gt;UV&lt;/code&gt;.</source>
          <target state="translated">此变量包含用于Perl &lt;code&gt;UV&lt;/code&gt; 的C类型。</target>
        </trans-unit>
        <trans-unit id="44c045826dc48e009792b582a1a15241a4802f80" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's I16.</source>
          <target state="translated">这个变量包含了Perl的I16所用的C类型。</target>
        </trans-unit>
        <trans-unit id="77c6b2c95a4c678ebae1f177568ad739253f7470" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's I32.</source>
          <target state="translated">这个变量包含了用于Perl的I32的C类型。</target>
        </trans-unit>
        <trans-unit id="d2c7ec1b0973092afd2b50f8b1058bea9b89894d" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's I64.</source>
          <target state="translated">这个变量包含了Perl的I64所用的C类型。</target>
        </trans-unit>
        <trans-unit id="7e8c981cfb8e030f8b5f0c15730537642443797f" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's I8.</source>
          <target state="translated">这个变量包含了Perl的I8所用的C类型。</target>
        </trans-unit>
        <trans-unit id="28245845d557a529e4ec28b86a43601fb8bd87bb" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's U16.</source>
          <target state="translated">这个变量包含了用于Perl的U16的C类型。</target>
        </trans-unit>
        <trans-unit id="4ecbb618578306999ef15a8c24654c1e837662e5" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's U32.</source>
          <target state="translated">这个变量包含了用于Perl的U32的C类型。</target>
        </trans-unit>
        <trans-unit id="f4e9d8c5f164aae8dfb8f1ce5f1c7a20d5d800bd" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's U64.</source>
          <target state="translated">这个变量包含了用于Perl的U64的C类型。</target>
        </trans-unit>
        <trans-unit id="ac9af6096c62dbdeff18c33175ad9b73e88a2fbc" translate="yes" xml:space="preserve">
          <source>This variable contains the C type used for Perl's U8.</source>
          <target state="translated">这个变量包含了用于Perl的U8的C类型。</target>
        </trans-unit>
        <trans-unit id="041becfddfe8c13e3949ddfb21dff17c1055b2b4" translate="yes" xml:space="preserve">
          <source>This variable contains the \c string if that is what causes the echo command to suppress newline. Otherwise it is null. Correct usage is $echo $n &quot;prompt for a question: $c&quot;.</source>
          <target state="translated">这个变量包含了\c字符串,如果这就是导致echo命令抑制换行的原因。否则就是空值。正确的用法是$echo $n &quot;提示一个问题:$c&quot;。</target>
        </trans-unit>
        <trans-unit id="00b68536bbb58e1d485d32e8b6dfac5ba3ccbfe6" translate="yes" xml:space="preserve">
          <source>This variable contains the command necessary to spit out a runnable shell on this system. It is either cat or a grep &lt;code&gt;-v&lt;/code&gt; for # comments.</source>
          <target state="translated">此变量包含在该系统上吐出可运行外壳程序所需的命令。它是cat或grep &lt;code&gt;-v&lt;/code&gt; 的＃条注释。</target>
        </trans-unit>
        <trans-unit id="3fa4df2e22fe28eadbf2d1c8e81d9f2fd361bb39" translate="yes" xml:space="preserve">
          <source>This variable contains the command used by Configure to copy and execute a cross-compiled executable in the target host. Useful and available only during Perl build. Empty string '' if not cross-compiling.</source>
          <target state="translated">这个变量包含了Configure用于在目标主机中复制并执行交叉编译的可执行文件的命令。只有在编译Perl时才有用。如果不进行交叉编译,则使用空字符串''。</target>
        </trans-unit>
        <trans-unit id="c688f914beea4c8062df73ea0350090c15f41811" translate="yes" xml:space="preserve">
          <source>This variable contains the command used by Configure to copy files from the target host. Useful and available only during Perl build. The string &lt;code&gt;:&lt;/code&gt; if not cross-compiling.</source>
          <target state="translated">此变量包含&amp;ldquo;配置&amp;rdquo;用来从目标主机复制文件的命令。有用且仅在Perl构建期间可用。字符串 &lt;code&gt;:&lt;/code&gt; 如果不是交叉编译。</target>
        </trans-unit>
        <trans-unit id="5e13a39f33e98c693ecd8d6ff26d17bc90eb69da" translate="yes" xml:space="preserve">
          <source>This variable contains the command used by Configure to copy to from the target host. Useful and available only during Perl build. The string &lt;code&gt;:&lt;/code&gt; if not cross-compiling.</source>
          <target state="translated">此变量包含配置用于从目标主机复制到的命令。有用且仅在Perl构建期间可用。字符串 &lt;code&gt;:&lt;/code&gt; 如果不是交叉编译。</target>
        </trans-unit>
        <trans-unit id="bb94d1eef23d72732f398f9a66136979145fe7b5" translate="yes" xml:space="preserve">
          <source>This variable contains the command used by Configure to create a new directory on the target host.</source>
          <target state="translated">这个变量包含了Configure用于在目标主机上创建新目录的命令。</target>
        </trans-unit>
        <trans-unit id="c78211fb16c1e978653a576621ccd16e492debf5" translate="yes" xml:space="preserve">
          <source>This variable contains the command which can be used to compute the host name. The command is fully qualified by its absolute path, to make it safe when used by a process with super-user privileges.</source>
          <target state="translated">这个变量包含了可以用来计算主机名的命令。该命令由绝对路径完全限定,以保证具有超级用户权限的进程使用时的安全。</target>
        </trans-unit>
        <trans-unit id="d6552f12a6078612b5d72ad16983a9c71ba33d06" translate="yes" xml:space="preserve">
          <source>This variable contains the command which will invoke a C preprocessor on standard input and put the output to stdout. It is guaranteed not to be a wrapper and may be a null string if no preprocessor can be made directly available. This preprocessor might be different from the one used by the C compiler. Don't forget to append cpplast after the preprocessor options.</source>
          <target state="translated">这个变量包含了对标准输入调用C语言预处理程序并将输出放到stdout的命令。它保证不是一个包装器,如果没有预处理器可以直接使用,它可能是一个空字符串。这个预处理器可能与C编译器使用的预处理器不同。不要忘记在预处理器选项后面附加cpplast。</target>
        </trans-unit>
        <trans-unit id="3a73917a29e02031ae0d151482d486274cbe063a" translate="yes" xml:space="preserve">
          <source>This variable contains the command which will invoke the C preprocessor on standard input and put the output to stdout. It is primarily used by other Configure units that ask about preprocessor symbols.</source>
          <target state="translated">这个变量包含了将在标准输入上调用C预处理器并将输出放到stdout的命令。它主要被其他询问预处理器符号的Configure单元使用。</target>
        </trans-unit>
        <trans-unit id="42ea91a7559eaae0c08bb16c2d907dc6ab592732" translate="yes" xml:space="preserve">
          <source>This variable contains the compiler flags needed by large file builds and added to ccflags by hints files.</source>
          <target state="translated">这个变量包含了大文件构建所需的编译器标志,并由提示文件添加到ccflags中。</target>
        </trans-unit>
        <trans-unit id="aa305454e9d017b091405e1d6e58ed0b66d591fd" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;HAS_FDS_BITS&lt;/code&gt; symbol, which indicates if your fd_set typedef contains the fds_bits member. If you have an fd_set typedef, but the dweebs who installed it did a half-fast job and neglected to provide the macros to manipulate an fd_set, &lt;code&gt;HAS_FDS_BITS&lt;/code&gt; will let us know how to fix the gaffe.</source>
          <target state="translated">该变量包含 &lt;code&gt;HAS_FDS_BITS&lt;/code&gt; 符号的最终值，该值指示您的fd_set typedef是否包含fds_bits成员。如果您使用的是fd_set typedef，但是安装它的dweebs做得很慢，并且忽略了提供操作fd_set的宏，则 &lt;code&gt;HAS_FDS_BITS&lt;/code&gt; 将让我们知道如何解决问题。</target>
        </trans-unit>
        <trans-unit id="3f053152d3ad698f63f197f6238e4216a91fe558" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;HAS_FD_MACROS&lt;/code&gt; symbol, which indicates if your C compiler knows about the macros which manipulate an fd_set.</source>
          <target state="translated">该变量包含 &lt;code&gt;HAS_FD_MACROS&lt;/code&gt; 符号的最终值，该值指示您的C编译器是否知道操纵fd_set的宏。</target>
        </trans-unit>
        <trans-unit id="a7c799a91500256076e905c9fd4c5c92e1c18fd3" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;HAS_FD_SET&lt;/code&gt; symbol, which indicates if your C compiler knows about the fd_set typedef.</source>
          <target state="translated">该变量包含 &lt;code&gt;HAS_FD_SET&lt;/code&gt; 符号的最终值，该值指示您的C编译器是否了解fd_set typedef。</target>
        </trans-unit>
        <trans-unit id="22288049d85de7d929c301a62bf2db39963cbf4e" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;HAS_THREAD_SAFE_NL_LANGINFO_L&lt;/code&gt; symbol, which indicates if the nl_langinfo_l() function exists and is thread-safe.</source>
          <target state="translated">该变量包含 &lt;code&gt;HAS_THREAD_SAFE_NL_LANGINFO_L&lt;/code&gt; 符号的最终值，该值指示nl_langinfo_l（）函数是否存在并且是线程安全的。</target>
        </trans-unit>
        <trans-unit id="8c853438251fb9800ca93c85ea5a1ca1d3e32223" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;MYDOMAIN&lt;/code&gt; symbol, which is the domain of the host the program is going to run on. The domain must be appended to myhostname to form a complete host name. The dot comes with mydomain, and need not be supplied by the program.</source>
          <target state="translated">该变量包含 &lt;code&gt;MYDOMAIN&lt;/code&gt; 符号的最终值，该符号是程序将在其上运行的主机的域。该域必须附加到myhostname上以形成完整的主机名。点与mydomain一起提供，程序不需要提供。</target>
        </trans-unit>
        <trans-unit id="72d6cd7d676d8a003864d8c96da4fa2d54d67a60" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;MYHOSTNAME&lt;/code&gt; symbol, which is the name of the host the program is going to run on. The domain is not kept with hostname, but must be gotten from mydomain. The dot comes with mydomain, and need not be supplied by the program.</source>
          <target state="translated">该变量包含 &lt;code&gt;MYHOSTNAME&lt;/code&gt; 符号的最终值，它是程序将在其上运行的主机的名称。该域未保留主机名，但必须从mydomain获取。点与mydomain一起提供，程序不需要提供。</target>
        </trans-unit>
        <trans-unit id="66a56e44c20bd9c15e4c7375f7a0436fcceec916" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;PERLPATH&lt;/code&gt; symbol, which contains the name of the perl interpreter to be used in shell scripts and in the &quot;eval &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;&quot; idiom. This variable is not necessarily the pathname of the file containing the perl interpreter; you must append the executable extension (_exe) if it is not already present. Note that Perl code that runs during the Perl build process cannot reference this variable, as Perl may not have been installed, or even if installed, may be a different version of Perl.</source>
          <target state="translated">该变量包含 &lt;code&gt;PERLPATH&lt;/code&gt; 符号的最终值，该值包含将在Shell脚本和&amp;ldquo; eval &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; &amp;rdquo;惯用语中使用的perl解释器的名称。此变量不一定是包含perl解释器的文件的路径名；您必须附加可执行文件扩展名（_exe）（如果尚不存在）。请注意，在Perl构建过程中运行的Perl代码无法引用此变量，因为可能尚未安装Perl，或者即使安装了Perl，也可能是Perl的不同版本。</target>
        </trans-unit>
        <trans-unit id="a33d605a51617e79042670d4bde3c88646033d73" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;PERLPATH&lt;/code&gt; symbol, which contains the name of the perl interpreter to be used in shell scripts and in the &quot;eval &lt;code&gt;exec&lt;/code&gt;&quot; idiom. This variable is not necessarily the pathname of the file containing the perl interpreter; you must append the executable extension (_exe) if it is not already present. Note that Perl code that runs during the Perl build process cannot reference this variable, as Perl may not have been installed, or even if installed, may be a different version of Perl.</source>
          <target state="translated">此变量包含 &lt;code&gt;PERLPATH&lt;/code&gt; 符号的最终值，该值包含将在Shell脚本和&amp;ldquo; eval &lt;code&gt;exec&lt;/code&gt; &amp;rdquo;惯用语中使用的perl解释器的名称。此变量不一定是包含perl解释器的文件的路径名；您必须附加可执行文件扩展名（_exe）（如果尚不存在）。请注意，在Perl构建过程中运行的Perl代码无法引用此变量，因为可能尚未安装Perl，或者即使安装了Perl，也可能是Perl的不同版本。</target>
        </trans-unit>
        <trans-unit id="9989ec6203a503b3646290c6301ece934c5ddbc2" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;PHOSTNAME&lt;/code&gt; symbol, which is a command that can be fed to popen() to get the host name. The program should probably not presume that the domain is or isn't there already.</source>
          <target state="translated">该变量包含 &lt;code&gt;PHOSTNAME&lt;/code&gt; 符号的最终值，这是一个可以馈送到popen（）以获取主机名的命令。该程序可能不应假定该域已经存在或不存在。</target>
        </trans-unit>
        <trans-unit id="681ef0e06ff2c2aa03837e83e0b26a89f0665ee3" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;PRIVLIB&lt;/code&gt; symbol, which is the name of the private library for this package. It may have a</source>
          <target state="translated">该变量包含 &lt;code&gt;PRIVLIB&lt;/code&gt; 符号的最终值，该符号是此程序包的专用库的名称。它可能有一个</target>
        </trans-unit>
        <trans-unit id="31cac01ab4bc1534aaee7c44b869f93540f7ce61" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;SITEARCH&lt;/code&gt; symbol, which is the name of the private library for this package. It may have a</source>
          <target state="translated">该变量包含 &lt;code&gt;SITEARCH&lt;/code&gt; 符号的最终值，它是此程序包的专用库的名称。它可能有一个</target>
        </trans-unit>
        <trans-unit id="3ae87ee11e0493672ee92db082729fa18598335e" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;SITELIB&lt;/code&gt; symbol, which is the name of the private library for this package. It may have a</source>
          <target state="translated">该变量包含 &lt;code&gt;SITELIB&lt;/code&gt; 符号的最终值，该符号是此程序包的专用库的名称。它可能有一个</target>
        </trans-unit>
        <trans-unit id="d56cfa107b207ecfcf834b0fd84160e5fff95865" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;VENDORBIN&lt;/code&gt; symbol. It may have a</source>
          <target state="translated">该变量包含 &lt;code&gt;VENDORBIN&lt;/code&gt; 符号的最终值。它可能有一个</target>
        </trans-unit>
        <trans-unit id="d675524e802856fc61eb7a77fa2f9bf4194ef473" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;VENDORLIB&lt;/code&gt; symbol, which is the name of the private library for this package. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place their own modules in this directory with MakeMaker</source>
          <target state="translated">该变量包含 &lt;code&gt;VENDORLIB&lt;/code&gt; 符号的最终值，该符号是此软件包的私有库的名称。标准发行版不会在此目录中放置任何内容。分发perl的供应商可能希望使用MakeMaker将自己的模块放置在此目录中</target>
        </trans-unit>
        <trans-unit id="84f0902ec141639e2292b921d397aa58ed24bcc1" translate="yes" xml:space="preserve">
          <source>This variable contains the eventual value of the &lt;code&gt;VENDORSCRIPT&lt;/code&gt; symbol. It may have a</source>
          <target state="translated">该变量包含 &lt;code&gt;VENDORSCRIPT&lt;/code&gt; 符号的最终值。它可能有一个</target>
        </trans-unit>
        <trans-unit id="2b6eeff26a226454b3d2eecac05e8c69edeb89c9" translate="yes" xml:space="preserve">
          <source>This variable contains the extension that is to be used for the dynamically loaded modules that perl generates.</source>
          <target state="translated">这个变量包含了用于perl生成的动态加载模块的扩展。</target>
        </trans-unit>
        <trans-unit id="8bb9527894f8803c37af4d876343817e482eb48a" translate="yes" xml:space="preserve">
          <source>This variable contains the extension that the manual page should have: one of &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , or &lt;code&gt;1&lt;/code&gt; . The Makefile must supply the</source>
          <target state="translated">此变量包含手册页应具有的扩展名： &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;l&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 之一。Makefile必须提供</target>
        </trans-unit>
        <trans-unit id="56be569e75e7f90bf4c40331efd74c6e45583b38" translate="yes" xml:space="preserve">
          <source>This variable contains the extension that the manual page should have: one of &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;l&lt;/code&gt; , or &lt;code&gt;3&lt;/code&gt; . The Makefile must supply the</source>
          <target state="translated">此变量包含手册页应具有的扩展名： &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;l&lt;/code&gt; 或 &lt;code&gt;3&lt;/code&gt; 之一。Makefile必须提供</target>
        </trans-unit>
        <trans-unit id="8dae6e3ada2d6dcff9d2e43faf067e654d9b6378" translate="yes" xml:space="preserve">
          <source>This variable contains the extension that the manual page should have: one of &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;. The Makefile must supply the</source>
          <target state="translated">此变量包含手册页应具有的扩展名： &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;l&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 之一。Makefile必须提供</target>
        </trans-unit>
        <trans-unit id="9fa704ba6eafa80438baf151952d00ab7764e396" translate="yes" xml:space="preserve">
          <source>This variable contains the extension that the manual page should have: one of &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, or &lt;code&gt;3&lt;/code&gt;. The Makefile must supply the</source>
          <target state="translated">此变量包含手册页应具有的扩展名： &lt;code&gt;n&lt;/code&gt; ， &lt;code&gt;l&lt;/code&gt; 或 &lt;code&gt;3&lt;/code&gt; 之一。Makefile必须提供</target>
        </trans-unit>
        <trans-unit id="3bf7d64c8407c2f4b3f97c92afa4b89d3be58a19" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Gid_t.</source>
          <target state="translated">这个变量包含了用于打印Gid_t的格式字符串。</target>
        </trans-unit>
        <trans-unit id="4392b845666e9577f16b65ad169c9cf0067ea608" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;IV&lt;/code&gt; as a signed decimal integer.</source>
          <target state="translated">该变量包含用于打印Perl &lt;code&gt;IV&lt;/code&gt; 的格式字符串，为带符号的十进制整数。</target>
        </trans-unit>
        <trans-unit id="81c050c162c31ff90f6ab45539f58e0c54f0d6f3" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;NV&lt;/code&gt; using %E-ish floating point format.</source>
          <target state="translated">此变量包含用于使用％E-ish浮点格式打印Perl &lt;code&gt;NV&lt;/code&gt; 的格式字符串。</target>
        </trans-unit>
        <trans-unit id="70e4383bbcfeb9283f099cb5c709d82ed17812ed" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;NV&lt;/code&gt; using %F-ish floating point format.</source>
          <target state="translated">此变量包含用于使用％F-ish浮点格式打印Perl &lt;code&gt;NV&lt;/code&gt; 的格式字符串。</target>
        </trans-unit>
        <trans-unit id="5e6b640c8b3aae499b4ae49f6dd7991d1d5f3ab3" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;NV&lt;/code&gt; using %G-ish floating point format.</source>
          <target state="translated">此变量包含用于使用％G-ish浮点格式打印Perl &lt;code&gt;NV&lt;/code&gt; 的格式字符串。</target>
        </trans-unit>
        <trans-unit id="09c558703f3957189e97a2c901f2809a9b8678da" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;NV&lt;/code&gt; using %e-ish floating point format.</source>
          <target state="translated">此变量包含用于使用％e-ish浮点格式打印Perl &lt;code&gt;NV&lt;/code&gt; 的格式字符串。</target>
        </trans-unit>
        <trans-unit id="d686d27acb5a517f06abbf394a85843f55c788e0" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;NV&lt;/code&gt; using %f-ish floating point format.</source>
          <target state="translated">此变量包含用于使用％f-ish浮点格式打印Perl &lt;code&gt;NV&lt;/code&gt; 的格式字符串。</target>
        </trans-unit>
        <trans-unit id="a5928777cb232771a9f0d3707f90840a31922926" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;NV&lt;/code&gt; using %g-ish floating point format.</source>
          <target state="translated">此变量包含用于使用％g-ish浮点格式打印Perl &lt;code&gt;NV&lt;/code&gt; 的格式字符串。</target>
        </trans-unit>
        <trans-unit id="e111caa6ae4d05c237ea64219d8162495f8ddfb8" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;UV&lt;/code&gt; as an unsigned decimal integer.</source>
          <target state="translated">此变量包含用于将Perl &lt;code&gt;UV&lt;/code&gt; 打印为无符号十进制整数的格式字符串。</target>
        </trans-unit>
        <trans-unit id="20ed6436ee30fb3c3ef5843d66ae8e4efca76617" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;UV&lt;/code&gt; as an unsigned hexadecimal integer in lowercase abcdef.</source>
          <target state="translated">此变量包含用于打印Perl &lt;code&gt;UV&lt;/code&gt; 的格式字符串，为小写abcdef中的无符号十六进制整数。</target>
        </trans-unit>
        <trans-unit id="7ec7c123a8e1e9412d82da57f785f0d98f02e6d5" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;UV&lt;/code&gt; as an unsigned hexadecimal integer in uppercase &lt;code&gt;ABCDEF&lt;/code&gt; .</source>
          <target state="translated">该变量包含用于打印Perl &lt;code&gt;UV&lt;/code&gt; 的格式字符串，为大写 &lt;code&gt;ABCDEF&lt;/code&gt; 中的无符号十六进制整数。</target>
        </trans-unit>
        <trans-unit id="5b7b4cb7fbbe8a5afbbdbdef9673133801139036" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;UV&lt;/code&gt; as an unsigned hexadecimal integer in uppercase &lt;code&gt;ABCDEF&lt;/code&gt;.</source>
          <target state="translated">此变量包含用于打印Perl &lt;code&gt;UV&lt;/code&gt; 的格式字符串，为大写 &lt;code&gt;ABCDEF&lt;/code&gt; 中的无符号十六进制整数。</target>
        </trans-unit>
        <trans-unit id="26cf0f51d012ad12cbca2bac7a21c548bcb996a2" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Perl &lt;code&gt;UV&lt;/code&gt; as an unsigned octal integer.</source>
          <target state="translated">此变量包含用于将Perl &lt;code&gt;UV&lt;/code&gt; 打印为无符号八进制整数的格式字符串。</target>
        </trans-unit>
        <trans-unit id="40bef71c1b4167fbc2be9cbda6b84cd7802b0fd8" translate="yes" xml:space="preserve">
          <source>This variable contains the format string used for printing a Uid_t.</source>
          <target state="translated">这个变量包含了用于打印Uid_t的格式字符串。</target>
        </trans-unit>
        <trans-unit id="b8fe88ecf74d2a5960422f3df3e47d323835c786" translate="yes" xml:space="preserve">
          <source>This variable contains the full path (if any) to a previously installed</source>
          <target state="translated">这个变量包含了之前安装的</target>
        </trans-unit>
        <trans-unit id="e653f8b76748020b456bba7f0b78d4106dbd88e3" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname of the shell used on this system to execute Bourne shell scripts. Usually, this will be</source>
          <target state="translated">这个变量包含了这个系统上用来执行伯恩shell脚本的shell的完整路径名。通常情况下,这将是</target>
        </trans-unit>
        <trans-unit id="87df586ce4d6ba89bae38fa2ba87e4feedee0381" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname to &lt;code&gt;ar&lt;/code&gt; , whether or not the user has specified &lt;code&gt;portability&lt;/code&gt; . This is only used in the</source>
          <target state="translated">无论用户是否已指定 &lt;code&gt;portability&lt;/code&gt; ，此变量都包含 &lt;code&gt;ar&lt;/code&gt; 的完整路径名。仅用于</target>
        </trans-unit>
        <trans-unit id="0cac334b63097ef382022f3685f959921cda53ca" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname to &lt;code&gt;ar&lt;/code&gt;, whether or not the user has specified &lt;code&gt;portability&lt;/code&gt;. This is only used in the</source>
          <target state="translated">无论用户是否已指定 &lt;code&gt;portability&lt;/code&gt; ，此变量都包含 &lt;code&gt;ar&lt;/code&gt; 的完整路径名。仅用于</target>
        </trans-unit>
        <trans-unit id="666afd97c41a408c3dace894f00d85b8b0663e5f" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname to &lt;code&gt;csh&lt;/code&gt; , whether or not the user has specified &lt;code&gt;portability&lt;/code&gt; . This is only used in the compiled C program, and we assume that all systems which can share this executable will have the same full pathname to</source>
          <target state="translated">无论用户是否已指定 &lt;code&gt;portability&lt;/code&gt; ，此变量都包含 &lt;code&gt;csh&lt;/code&gt; 的完整路径名。这仅在编译的C程序中使用，并且我们假设所有可以共享此可执行文件的系统都将具有相同的完整路径名</target>
        </trans-unit>
        <trans-unit id="b18869a76a90686337c7083dd2dd431a797177b6" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname to &lt;code&gt;csh&lt;/code&gt;, whether or not the user has specified &lt;code&gt;portability&lt;/code&gt;. This is only used in the compiled C program, and we assume that all systems which can share this executable will have the same full pathname to</source>
          <target state="translated">无论用户是否已指定 &lt;code&gt;portability&lt;/code&gt; ，此变量都包含 &lt;code&gt;csh&lt;/code&gt; 的完整路径名。这仅在编译的C程序中使用，并且我们假定所有可以共享此可执行文件的系统都将具有相同的完整路径名</target>
        </trans-unit>
        <trans-unit id="53d921b5e623ee82e1f71030369d6828667c2182" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname to &lt;code&gt;sed&lt;/code&gt; , whether or not the user has specified &lt;code&gt;portability&lt;/code&gt; . This is only used in the compiled C program, and we assume that all systems which can share this executable will have the same full pathname to</source>
          <target state="translated">无论用户是否已指定 &lt;code&gt;portability&lt;/code&gt; ，此变量都包含 &lt;code&gt;sed&lt;/code&gt; 的完整路径名。这仅在编译的C程序中使用，并且我们假设所有可以共享此可执行文件的系统都将具有相同的完整路径名</target>
        </trans-unit>
        <trans-unit id="ab7c2eb7ac7204085b20feca74e77d4a8a234779" translate="yes" xml:space="preserve">
          <source>This variable contains the full pathname to &lt;code&gt;sed&lt;/code&gt;, whether or not the user has specified &lt;code&gt;portability&lt;/code&gt;. This is only used in the compiled C program, and we assume that all systems which can share this executable will have the same full pathname to</source>
          <target state="translated">无论用户是否已指定 &lt;code&gt;portability&lt;/code&gt; ，此变量都包含 &lt;code&gt;sed&lt;/code&gt; 的完整路径名。这仅在编译的C程序中使用，并且我们假定所有可以共享此可执行文件的系统都将具有相同的完整路径名</target>
        </trans-unit>
        <trans-unit id="49c792bc38405bf518c8c8e5b6d328a1ae48e695" translate="yes" xml:space="preserve">
          <source>This variable contains the kind of ptr returned by malloc and realloc.</source>
          <target state="translated">这个变量包含了malloc和realloc返回的ptr的种类。</target>
        </trans-unit>
        <trans-unit id="eeab1bf0260966958fb0d2e99127c5d9966ca140" translate="yes" xml:space="preserve">
          <source>This variable contains the libraries needed by large file builds and added to ldflags by hints files. It is a space separated list of the library names without the &lt;code&gt;lib&lt;/code&gt; prefix or any suffix, just like</source>
          <target state="translated">此变量包含大型文件构建所需的库，并由提示文件添加到ldflags。这是一个用空格分隔的库名称列表，不带 &lt;code&gt;lib&lt;/code&gt; 前缀或任何后缀，就像</target>
        </trans-unit>
        <trans-unit id="5e5ba6a7659b13aba59fd413ba52f7824409ec3b" translate="yes" xml:space="preserve">
          <source>This variable contains the loader flags needed by large file builds and added to ldflags by hints files.</source>
          <target state="translated">这个变量包含了大文件构建所需的加载器标志,并由提示文件添加到ldflags中。</target>
        </trans-unit>
        <trans-unit id="62334e1e9b49cc54d2249facaa6f5075bbc89332" translate="yes" xml:space="preserve">
          <source>This variable contains the location of the C library.</source>
          <target state="translated">这个变量包含C库的位置。</target>
        </trans-unit>
        <trans-unit id="82c3786bcf212d85922076051dff18755d0a2587" translate="yes" xml:space="preserve">
          <source>This variable contains the major version number of Berkeley &lt;code&gt;DB&lt;/code&gt; found in the &amp;lt;db.h&amp;gt; header file.</source>
          <target state="translated">此变量包含在&amp;lt;db.h&amp;gt;头文件中找到的Berkeley &lt;code&gt;DB&lt;/code&gt; 的主要版本号。</target>
        </trans-unit>
        <trans-unit id="1a3c1e73644df79adc77f1d1bf90e009d42833ac" translate="yes" xml:space="preserve">
          <source>This variable contains the minor version number of Berkeley &lt;code&gt;DB&lt;/code&gt; found in the &amp;lt;db.h&amp;gt; header file. For &lt;code&gt;DB&lt;/code&gt; version 1 this is always 0.</source>
          <target state="translated">此变量包含在&amp;lt;db.h&amp;gt;头文件中找到的Berkeley &lt;code&gt;DB&lt;/code&gt; 的次要版本号。对于 &lt;code&gt;DB&lt;/code&gt; 版本1，该值始终为0。</target>
        </trans-unit>
        <trans-unit id="3b43d343a9ad7cbc86eb48452602b4c59119bd29" translate="yes" xml:space="preserve">
          <source>This variable contains the name of a separate host machine that can be used to run compiled test programs and perl tests on. Set to empty string if not in use.</source>
          <target state="translated">这个变量包含一个单独的主机名称,可以用来运行编译后的测试程序和perl测试。如果不使用,则设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="84ed7d23339b69d574b634cc2b184426122e2ab7" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the</source>
          <target state="translated">这个变量包含了</target>
        </trans-unit>
        <trans-unit id="f77e80aae1dc8785152029295d9b9c195326376c" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory for html library pages. It may have a</source>
          <target state="translated">这个变量包含html库页面的目录名称。它可能有一个</target>
        </trans-unit>
        <trans-unit id="53aae0b1b4a9c485200f31d66256d7973fd08ef8" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory for html pages. It may have a</source>
          <target state="translated">这个变量包含html页面的目录名称。它可能有一个</target>
        </trans-unit>
        <trans-unit id="4f04511d366fd64867ceda4692dd89862650c87d" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory for man1 pages. It may have a</source>
          <target state="translated">这个变量包含man1页面的目录名称。它可以有一个</target>
        </trans-unit>
        <trans-unit id="3028cc7db66d7f7dc5ba76e2500d27d9ae120566" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory for man3 pages. It may have a</source>
          <target state="translated">这个变量包含man3页面的目录名称。它可以有一个</target>
        </trans-unit>
        <trans-unit id="2032a960d64db4a2e61339d4ad831b61b46590d0" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which html source pages are to be put. This directory is for pages that describe libraries or modules. It is intended to correspond roughly to section 3 of the Unix manuals.</source>
          <target state="translated">这个变量包含了放置html源码页面的目录名称。该目录用于描述库或模块的页面。它的目的是大致对应于Unix手册的第3节。</target>
        </trans-unit>
        <trans-unit id="e2db316424aee739997b3d848c4c1c81eb62c6f5" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which html source pages are to be put. This directory is for pages that describe whole programs, not libraries or modules. It is intended to correspond roughly to section 1 of the Unix manuals.</source>
          <target state="translated">这个变量包含了放置html源码页面的目录名称。该目录用于描述整个程序的页面,而不是库或模块。它的目的是大致对应于Unix手册的第1节。</target>
        </trans-unit>
        <trans-unit id="6aad821264e83d93cc14e8be74ff6150e4812277" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which manual source pages are to be put. It is the responsibility of the</source>
          <target state="translated">这个变量包含了放置手册源码页的目录名称。这是由</target>
        </trans-unit>
        <trans-unit id="48e7d075019c68b1fd6867acdf1234dd4a89a96e" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which site-specific html source pages are to be put. It is the responsibility of the</source>
          <target state="translated">这个变量包含了放置特定网站html源码页面的目录名称。这是由</target>
        </trans-unit>
        <trans-unit id="ff86f832c1651cbf8a3bef6c25f66b0ee1dd9fb8" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which site-specific library html source pages are to be put. It is the responsibility of the</source>
          <target state="translated">这个变量包含了放置网站特定库html源码页面的目录名称。这是由</target>
        </trans-unit>
        <trans-unit id="4f047bbc3c219d4ef5dc1d4f5bc050a459762176" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which site-specific library man source pages are to be put. It is the responsibility of the</source>
          <target state="translated">这个变量包含了放置特定站点的库手册源码页的目录名称。这是由</target>
        </trans-unit>
        <trans-unit id="e1261594b14cb3a4bcb48599c79a08d6eb2cc31c" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the directory in which site-specific manual source pages are to be put. It is the responsibility of the</source>
          <target state="translated">这个变量包含了放置特定站点的手册源码页的目录名称。这是由</target>
        </trans-unit>
        <trans-unit id="c97060d593ac9eeb06b027ed12fa4f00f0051665" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the dynamic loading file that will be used with the package.</source>
          <target state="translated">这个变量包含了将与包一起使用的动态加载文件的名称。</target>
        </trans-unit>
        <trans-unit id="262990e4448b8d9e9dd273d5c220f74ecad3a4ec" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the package being constructed, with the first letter uppercased,</source>
          <target state="translated">这个变量包含了正在构建的包的名称,第一个字母是大写的。</target>
        </trans-unit>
        <trans-unit id="90ba722d808f7f7dfd5279b81ed1710320bfc5a9" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the package being constructed. It is primarily intended for the use of later Configure units.</source>
          <target state="translated">这个变量包含正在构建的包的名称。它主要是为了以后的Configure单元使用。</target>
        </trans-unit>
        <trans-unit id="cf439ccfa6fc9a87625717801e1ab1184e34254c" translate="yes" xml:space="preserve">
          <source>This variable contains the name of the preferred pager on the system. Usual values are (the full pathnames of) more, less, pg, or cat.</source>
          <target state="translated">这个变量包含了系统中首选的寻呼机的名称,通常的值是(more,less,pg,或 cat的完整路径名)。通常的值是(more、less、pg或cat的完整路径名)。</target>
        </trans-unit>
        <trans-unit id="b13f78b71d672b962a73afef2f863a69e8a121de" translate="yes" xml:space="preserve">
          <source>This variable contains the number of a network port to be used to connect to the host in targethost, if unset defaults to 22 for ssh.</source>
          <target state="translated">这个变量包含了用于连接 targethost 中主机的网络端口号,如果未设置,ssh 的默认值为 22。</target>
        </trans-unit>
        <trans-unit id="c2db571a0f2c34cfa840ebf958f4ff98e0584e37" translate="yes" xml:space="preserve">
          <source>This variable contains the number of command-line arguments passed to Configure, as reported by the shell in the $# variable. The individual arguments are stored as variables config_arg1, config_arg2, etc.</source>
          <target state="translated">这个变量包含传递给Configure的命令行参数的数量,由shell在$#变量中报告。各个参数以变量config_arg1、config_arg2等形式存储。</target>
        </trans-unit>
        <trans-unit id="b4ce4564a0f99cefb51b9efd2ccc9f729f25a239" translate="yes" xml:space="preserve">
          <source>This variable contains the number of elements of the sig_name and sig_num arrays.</source>
          <target state="translated">这个变量包含sig_name和sig_num数组的元素数。</target>
        </trans-unit>
        <trans-unit id="58b59d2afde508a46585fda8036739926a05c1ca" translate="yes" xml:space="preserve">
          <source>This variable contains the operating system name (e.g. sunos, solaris, hpux, etc.). It can be useful later on for setting defaults. Any spaces are replaced with underscores. It is set to a null string if we can't figure it out.</source>
          <target state="translated">这个变量包含了操作系统的名称(如sunos、solaris、hpux等)。它在以后设置默认值时很有用。任何空格都会被下划线取代。如果我们搞不清楚,就会将其设置为空字符串。</target>
        </trans-unit>
        <trans-unit id="dcfc3bcf0c49ab8c4a6c6e473572b4f66ea1da77" translate="yes" xml:space="preserve">
          <source>This variable contains the operating system version (e.g. 4.1.3, 5.2, etc.). It is primarily used for helping select an appropriate hints file, but might be useful elsewhere for setting defaults. It is set to '' if we can't figure it out. We try to be flexible about how much of the version number to keep, e.g. if 4.1.1, 4.1.2, and 4.1.3 are essentially the same for this package, hints files might just be</source>
          <target state="translated">这个变量包含了操作系统的版本(如4.1.3,5.2等)。它主要用于帮助选择一个合适的提示文件,但在其他地方也可能用于设置默认值。如果我们搞不清楚,它就被设置为''。我们尝试灵活地保留多少版本号,例如,如果4.1.1、4.1.2和4.1.3对这个软件包来说基本上是一样的,那么提示文件就可能是</target>
        </trans-unit>
        <trans-unit id="e6c33aa5736d61dbb768900879f654847d88a5b1" translate="yes" xml:space="preserve">
          <source>This variable contains the original value of &lt;code&gt;$^O&lt;/code&gt; for hostperl when cross-compiling. This is useful to pick the proper tools when running build code in the host. Empty string '' if not cross-compiling.</source>
          <target state="translated">交叉编译时，此变量包含hostperl 的原始值 &lt;code&gt;$^O&lt;/code&gt; 在主机中运行构建代码时，选择合适的工具很有用。如果不交叉编译，则为空字符串&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4f689eca772c52e17d8ba8f33ed5e7e2f3173215" translate="yes" xml:space="preserve">
          <source>This variable contains the patch version number of Berkeley &lt;code&gt;DB&lt;/code&gt; found in the &amp;lt;db.h&amp;gt; header file. For &lt;code&gt;DB&lt;/code&gt; version 1 this is always 0.</source>
          <target state="translated">此变量包含在&amp;lt;db.h&amp;gt;头文件中找到的Berkeley &lt;code&gt;DB&lt;/code&gt; 的修补程序版本号。对于 &lt;code&gt;DB&lt;/code&gt; 版本1，该值始终为0。</target>
        </trans-unit>
        <trans-unit id="af6b8673c54c09e29a14614a73e050a4b6ca1c1d" translate="yes" xml:space="preserve">
          <source>This variable contains the path to a generate_uudmap binary that can be run on the host &lt;code&gt;OS&lt;/code&gt; when cross-compiling. Useful and available only during Perl build. Empty string '' if not cross-compiling.</source>
          <target state="translated">此变量包含可在交叉编译时在主机 &lt;code&gt;OS&lt;/code&gt; 上运行的generate_uudmap二进制文件的路径。有用且仅在Perl构建期间可用。如果不交叉编译，则为空字符串&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="259437970b64c29ae5cd9baddfd9c2ca6e85c172" translate="yes" xml:space="preserve">
          <source>This variable contains the path to a miniperl binary that can be run on the host &lt;code&gt;OS&lt;/code&gt; when cross-compiling. Useful and available only during Perl build. Empty string '' if not cross-compiling.</source>
          <target state="translated">该变量包含一个miniperl二进制文件的路径，该文件可以在交叉编译时在主机 &lt;code&gt;OS&lt;/code&gt; 上运行。有用且仅在Perl构建期间可用。如果不交叉编译，则为空字符串&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="74fb37dccbb5c1946851e771a3c3c66b6848b972" translate="yes" xml:space="preserve">
          <source>This variable contains the return type of free(). It is usually void, but occasionally int.</source>
          <target state="translated">这个变量包含free()的返回类型。它通常是void,但偶尔也是int。</target>
        </trans-unit>
        <trans-unit id="c5afbf9aa8fad73d9c199b2d3112b28c07387f1d" translate="yes" xml:space="preserve">
          <source>This variable contains the second part of the string which will invoke the C preprocessor on the standard input and produce to standard output. This variable will have the value &lt;code&gt;-&lt;/code&gt; if cppstdin needs a minus to specify standard input, otherwise the value is &quot;&quot;.</source>
          <target state="translated">此变量包含字符串的第二部分，它将在标准输入上调用C预处理程序并生成标准输出。该变量将具有值 &lt;code&gt;-&lt;/code&gt; 如果cppstdin需要减号来指定标准输入，否则该值为&amp;ldquo;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="58e55c3028521ff576dd5afe84e41961ae33fdc9" translate="yes" xml:space="preserve">
          <source>This variable contains the signedness of a gidtype. 1 for unsigned, -1 for signed.</source>
          <target state="translated">这个变量包含了一个gidtype的签名性,1代表无符号,-1代表有符号。1代表无符号,-1代表有符号。</target>
        </trans-unit>
        <trans-unit id="dc8d2c8099b49c6b5096fda773c172c57b8b5b16" translate="yes" xml:space="preserve">
          <source>This variable contains the signedness of a uidtype. 1 for unsigned, -1 for signed.</source>
          <target state="translated">这个变量包含了一个uidtype的签名性,1代表无符号,-1代表有符号。1代表无符号,-1代表有符号。</target>
        </trans-unit>
        <trans-unit id="5484e90332e55ff70b74d3d035ad3057f52d3786" translate="yes" xml:space="preserve">
          <source>This variable contains the signedness of struct stat's st_ino. 1 for unsigned, -1 for signed.</source>
          <target state="translated">这个变量包含了struct stat的st_ino的签名性。1代表无符号,-1代表有符号。</target>
        </trans-unit>
        <trans-unit id="77b0505696dfbc7f84fe52dcb5457cf6ae9d5ab1" translate="yes" xml:space="preserve">
          <source>This variable contains the size of a fpostype in bytes.</source>
          <target state="translated">这个变量包含fpostype的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="1f39fc67cd6fb11f9c6b31d5d0a5d8f46a34cae7" translate="yes" xml:space="preserve">
          <source>This variable contains the size of a gidtype in bytes.</source>
          <target state="translated">这个变量包含gidtype的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="4d46623604fef864c2c0f619cd8bf48e9e08262c" translate="yes" xml:space="preserve">
          <source>This variable contains the size of a sizetype in bytes.</source>
          <target state="translated">这个变量包含了以字节为单位的sizetype的大小。</target>
        </trans-unit>
        <trans-unit id="e5309d41bdedc360994290bf527b628094f6d624" translate="yes" xml:space="preserve">
          <source>This variable contains the size of a uidtype in bytes.</source>
          <target state="translated">这个变量包含了uidtype的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="aebe0d63cd08dd0655a9d2d6ffcc33046457a65f" translate="yes" xml:space="preserve">
          <source>This variable contains the size of struct stat's st_ino in bytes.</source>
          <target state="translated">这个变量包含st_ino结构的大小,单位是字节。</target>
        </trans-unit>
        <trans-unit id="3a08d90d6572621c3e20edf61eab9e3e189aafbe" translate="yes" xml:space="preserve">
          <source>This variable contains the string #! if this system supports that construct.</source>
          <target state="translated">如果本系统支持该构造,则该变量包含字符串#!。</target>
        </trans-unit>
        <trans-unit id="c2ab6102c9f5f6be04048d6c313b18f41b75a948" translate="yes" xml:space="preserve">
          <source>This variable contains the string to put on the front of a perl script to make sure (hopefully) that it runs with perl and not some shell. Of course, that leading line must be followed by the classical perl idiom: eval 'exec perl -S $0 ${1+&lt;code&gt;$@&lt;/code&gt; }' if $running_under_some_shell; to guarantee perl startup should the shell execute the script. Note that this magic incantation is not understood by csh.</source>
          <target state="translated">此变量包含放置在perl脚本前面的字符串，以确保（希望）它与perl一起运行，而不是与某些shell一起运行。当然，该领先者必须遵循经典的perl习惯用法：eval'exec perl -S $ 0 $ {1+ &lt;code&gt;$@&lt;/code&gt; }'如果$ running_under_some_shell; 以确保在外壳程序执行脚本时启动perl。请注意，csh无法理解这种魔咒。</target>
        </trans-unit>
        <trans-unit id="213248d26ead71566826244996a0921187a9ff43" translate="yes" xml:space="preserve">
          <source>This variable contains the string to put on the front of a perl script to make sure (hopefully) that it runs with perl and not some shell. Of course, that leading line must be followed by the classical perl idiom: eval 'exec perl -S $0 ${1+&lt;code&gt;$@&lt;/code&gt;}' if $running_under_some_shell; to guarantee perl startup should the shell execute the script. Note that this magic incantation is not understood by csh.</source>
          <target state="translated">该变量包含放置在perl脚本前面的字符串，以确保（希望）它与perl一起运行，而不是与某些shell一起运行。当然，该领先者必须遵循经典的perl惯用法：eval'exec perl -S $ 0 $ {1+ &lt;code&gt;$@&lt;/code&gt; }'如果$ running_under_some_shell; 以确保在外壳程序执行脚本的情况下启动perl。请注意，csh无法理解这种魔咒。</target>
        </trans-unit>
        <trans-unit id="40cb4c7debca58e209e43bee1a3e6ac2254b44bc" translate="yes" xml:space="preserve">
          <source>This variable contains the string to put on the front of a shell script to make sure (hopefully) that it runs with sh and not some other shell.</source>
          <target state="translated">这个变量包含了要放在shell脚本前面的字符串,以确保(希望)它是用sh而不是其他shell运行的。</target>
        </trans-unit>
        <trans-unit id="6fa073316ec1d8ef745fa4daca76d227a91de6d7" translate="yes" xml:space="preserve">
          <source>This variable contains the string used to invoke the Configure command, as reported by the shell in the $0 variable.</source>
          <target state="translated">这个变量包含用于调用配置命令的字符串,由shell在$0变量中报告。</target>
        </trans-unit>
        <trans-unit id="b526d370cfb43492d8517403917abb6d76e8800d" translate="yes" xml:space="preserve">
          <source>This variable contains the type of the hash structure element in the &amp;lt;db.h&amp;gt; header file. In older versions of &lt;code&gt;DB&lt;/code&gt; , it was int, while in newer ones it is u_int32_t.</source>
          <target state="translated">此变量包含&amp;lt;db.h&amp;gt;头文件中的哈希结构元素的类型。在旧版 &lt;code&gt;DB&lt;/code&gt; 中，它是int，而在较新版本中，它是u_int32_t。</target>
        </trans-unit>
        <trans-unit id="8132882a1b3c71fd3b458d340b7c9c1a8c3b0328" translate="yes" xml:space="preserve">
          <source>This variable contains the type of the hash structure element in the &amp;lt;db.h&amp;gt; header file. In older versions of &lt;code&gt;DB&lt;/code&gt;, it was int, while in newer ones it is u_int32_t.</source>
          <target state="translated">此变量包含&amp;lt;db.h&amp;gt;头文件中的哈希结构元素的类型。在旧版 &lt;code&gt;DB&lt;/code&gt; 中，它是int，而在较新版本中，它是u_int32_t。</target>
        </trans-unit>
        <trans-unit id="3e1708b25bad84e4b4ab479d9cc5822c9e2c2f68" translate="yes" xml:space="preserve">
          <source>This variable contains the type of the prefix structure element in the &amp;lt;db.h&amp;gt; header file. In older versions of &lt;code&gt;DB&lt;/code&gt; , it was int, while in newer ones it is size_t.</source>
          <target state="translated">此变量包含&amp;lt;db.h&amp;gt;头文件中的前缀结构元素的类型。在旧版本的 &lt;code&gt;DB&lt;/code&gt; 中，它是int，而在较新的DB中，它是size_t。</target>
        </trans-unit>
        <trans-unit id="bbe1166ac3a279562bae6f5bbf69d913a41c2678" translate="yes" xml:space="preserve">
          <source>This variable contains the type of the prefix structure element in the &amp;lt;db.h&amp;gt; header file. In older versions of &lt;code&gt;DB&lt;/code&gt;, it was int, while in newer ones it is size_t.</source>
          <target state="translated">此变量包含&amp;lt;db.h&amp;gt;头文件中的前缀结构元素的类型。在旧版本的 &lt;code&gt;DB&lt;/code&gt; 中，它是int，而在较新的DB中，它是size_t。</target>
        </trans-unit>
        <trans-unit id="f73d5c2ddda24d749b2c414d6e8bbb8ed5e31094" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;CHARBITS&lt;/code&gt; symbol, which indicates to the C program how many bits there are in a character.</source>
          <target state="translated">该变量包含 &lt;code&gt;CHARBITS&lt;/code&gt; 符号的值，该符号向C程序指示一个字符中有多少位。</target>
        </trans-unit>
        <trans-unit id="209e197394356fcf2c299b86e0f21ff169c4927a" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;CHARSIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in a character.</source>
          <target state="translated">该变量包含 &lt;code&gt;CHARSIZE&lt;/code&gt; 符号的值，它向C程序指示一个字符中有多少字节。</target>
        </trans-unit>
        <trans-unit id="cc286ba6029721ed19ac8dad08800887d476cedb" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;DOUBLESIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in a double.</source>
          <target state="translated">该变量包含 &lt;code&gt;DOUBLESIZE&lt;/code&gt; 符号的值，该符号向C程序指示double中有多少个字节。</target>
        </trans-unit>
        <trans-unit id="4cfdf48ce6d11af6304dee26f16788a53a9bb7f4" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;INTSIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in an int.</source>
          <target state="translated">该变量包含 &lt;code&gt;INTSIZE&lt;/code&gt; 符号的值，该符号向C程序指示int中有多少字节。</target>
        </trans-unit>
        <trans-unit id="f854b6ef78ada4a24f54ef958a082d07595fb3d3" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;LONGLONGSIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in a long long, if this system supports long long.</source>
          <target state="translated">此变量包含 &lt;code&gt;LONGLONGSIZE&lt;/code&gt; 符号的值，如果该系统支持long long，则它向C程序指示long long中有多少个字节。</target>
        </trans-unit>
        <trans-unit id="70e97491a5af598c014eb83782bcb307bee739a6" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;LONGSIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in a long.</source>
          <target state="translated">该变量包含 &lt;code&gt;LONGSIZE&lt;/code&gt; 符号的值，该符号向C程序指示long中有多少个字节。</target>
        </trans-unit>
        <trans-unit id="d7cc214dec53bb89ae3a31c1c1d3d0bacfbab5b1" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;LONG_DOUBLESIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in a long double, if this system supports long doubles. Note that this is sizeof(long double), which may include unused bytes.</source>
          <target state="translated">此变量包含 &lt;code&gt;LONG_DOUBLESIZE&lt;/code&gt; 符号的值，如果该系统支持长双精度，则它向C程序指示长双精度中有多少个字节。请注意，这是sizeof（long double），其中可能包含未使用的字节。</target>
        </trans-unit>
        <trans-unit id="1aec829ead07ded2d249359c3cd2ddd87bd6e01e" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;PERL_VENDORARCH&lt;/code&gt; symbol. It may have a</source>
          <target state="translated">此变量包含 &lt;code&gt;PERL_VENDORARCH&lt;/code&gt; 符号的值。它可能有一个</target>
        </trans-unit>
        <trans-unit id="0dfad5e2212e95ab6605941fa3f8cb002cb9cf07" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;PTRSIZE&lt;/code&gt; symbol, which indicates to the C program how many bytes there are in a pointer.</source>
          <target state="translated">此变量包含 &lt;code&gt;PTRSIZE&lt;/code&gt; 符号的值，该值向C程序指示指针中有多少字节。</target>
        </trans-unit>
        <trans-unit id="d4ab537b053bd3008bd948d42ae7727b9de067d3" translate="yes" xml:space="preserve">
          <source>This variable contains the value of the &lt;code&gt;SHORTSIZE&lt;/code&gt; symbol which indicates to the C program how many bytes there are in a short.</source>
          <target state="translated">此变量包含 &lt;code&gt;SHORTSIZE&lt;/code&gt; 符号的值，该值向C程序指示一个短的字节数。</target>
        </trans-unit>
        <trans-unit id="2b26dafc433ba42b4f41b7596dce470eb0eff69b" translate="yes" xml:space="preserve">
          <source>This variable contains the value to be passed to the tr(1) command to transliterate a newline. Typical values are &lt;code&gt;\012&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; . This is needed for &lt;code&gt;EBCDIC&lt;/code&gt; systems where newline is not necessarily &lt;code&gt;\012&lt;/code&gt; .</source>
          <target state="translated">此变量包含要传递给tr（1）命令以音译换行符的值。典型值为 &lt;code&gt;\012&lt;/code&gt; 和 &lt;code&gt;\n&lt;/code&gt; 。这对于 &lt;code&gt;EBCDIC&lt;/code&gt; 系统来说是必需的，其中换行不一定 &lt;code&gt;\012&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a866fd3fb7f5dc95ad52d84a01679a9cb30c997" translate="yes" xml:space="preserve">
          <source>This variable contains the value to be passed to the tr(1) command to transliterate a newline. Typical values are &lt;code&gt;\012&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt;. This is needed for &lt;code&gt;EBCDIC&lt;/code&gt; systems where newline is not necessarily &lt;code&gt;\012&lt;/code&gt;.</source>
          <target state="translated">此变量包含要传递给tr（1）命令以音译换行符的值。典型值为 &lt;code&gt;\012&lt;/code&gt; 和 &lt;code&gt;\n&lt;/code&gt; 。这对于 &lt;code&gt;EBCDIC&lt;/code&gt; 系统来说是必需的，其中换行不一定 &lt;code&gt;\012&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="650a5aef6d940a90952e3b649b01f712f6f01862" translate="yes" xml:space="preserve">
          <source>This variable contains the version number of the &lt;code&gt;GNU&lt;/code&gt; C library. It is usually something like</source>
          <target state="translated">此变量包含 &lt;code&gt;GNU&lt;/code&gt; C库的版本号。通常是这样的</target>
        </trans-unit>
        <trans-unit id="d12fcc9b6ed9177ed0004a61c1e880e6a313373f" translate="yes" xml:space="preserve">
          <source>This variable contains y if the malloc that comes with this package is desired over the system's version of malloc. People often include special versions of malloc for efficiency, but such versions are often less portable. See also mallocsrc and mallocobj. If this is &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt;, then -lmalloc is removed from $libs.</source>
          <target state="translated">如果与系统版本的malloc相比需要此软件包随附的malloc，则此变量包含y。人们通常会包括特殊版本的malloc以提高效率，但是此类版本通常不那么可移植。另请参见mallocsrc和mallocobj。如果这是 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; ，那么-lmalloc从$ libs中删除。</target>
        </trans-unit>
        <trans-unit id="6a1cfd9b43ce7cdae7737c4ff438b55f9eff157e" translate="yes" xml:space="preserve">
          <source>This variable contains y if the malloc that comes with this package is desired over the system's version of malloc. People often include special versions of malloc for efficiency, but such versions are often less portable. See also mallocsrc and mallocobj. If this is &lt;code&gt;y&lt;/code&gt;, then -lmalloc is removed from $libs.</source>
          <target state="translated">如果与系统版本的malloc相比需要此软件包随附的malloc，则此变量包含y。人们通常包括特殊版本的malloc以提高效率，但是此类版本通常不那么可移植。另请参见mallocsrc和mallocobj。如果这是 &lt;code&gt;y&lt;/code&gt; ，那么-lmalloc从$ libs中删除。</target>
        </trans-unit>
        <trans-unit id="5d3099bfd683f8bb7f73a965931102e4bd71e75f" translate="yes" xml:space="preserve">
          <source>This variable contains y if we are wrapping malloc to prevent integer overflow during size calculations.</source>
          <target state="translated">如果我们对malloc进行了封装,以防止在计算大小的过程中出现整数溢出,则这个变量包含y。</target>
        </trans-unit>
        <trans-unit id="c70c19573821ebe6141202f1eb70b58f097c28fe" translate="yes" xml:space="preserve">
          <source>This variable controls the state of the internal UTF-8 offset caching code. 1 for on (the default), 0 for off, -1 to debug the caching code by checking all its results against linear scans, and panicking on any discrepancy.</source>
          <target state="translated">这个变量控制了内部UTF-8偏移缓存代码的状态,1代表开启(默认),0代表关闭,-1代表通过检查所有线性扫描结果来调试缓存代码。1代表开启(默认),0代表关闭,-1代表通过检查所有线性扫描结果来调试缓存代码,并对任何差异进行恐慌。</target>
        </trans-unit>
        <trans-unit id="ba813b77fb4a52d2ab44f399ca962e4e007a985e" translate="yes" xml:space="preserve">
          <source>This variable controls the value of &lt;code&gt;I_FCNTL&lt;/code&gt; (which tells the C program to include &amp;lt;fcntl.h&amp;gt;).</source>
          <target state="translated">此变量控制 &lt;code&gt;I_FCNTL&lt;/code&gt; 的值（它告诉C程序包括&amp;lt;fcntl.h&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="16648c794aaf375a82806f400964bf1aaaa11260" translate="yes" xml:space="preserve">
          <source>This variable controls whether &lt;code&gt;can_run&lt;/code&gt; will return all instances of the binary it finds in the &lt;code&gt;PATH&lt;/code&gt; when called in a list context.</source>
          <target state="translated">此变量控制 &lt;code&gt;can_run&lt;/code&gt; 是否将返回在列表上下文中调用时在 &lt;code&gt;PATH&lt;/code&gt; 中找到的二进制文件的所有实例。</target>
        </trans-unit>
        <trans-unit id="8f229115b8b6d2974688e6cec6494958f13faf42" translate="yes" xml:space="preserve">
          <source>This variable controls whether &lt;code&gt;run&lt;/code&gt; will remove any empty/null arguments it finds in command arguments.</source>
          <target state="translated">此变量控制 &lt;code&gt;run&lt;/code&gt; 是否删除在命令参数中找到的任何空/空参数。</target>
        </trans-unit>
        <trans-unit id="d0107f61ce6ca90459ae24768ccdd2d947c190a4" translate="yes" xml:space="preserve">
          <source>This variable controls whether IPC::Cmd will try to use &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; when available and suitable. Defaults to true.</source>
          <target state="translated">此变量控制IPC :: Cmd是否在可用且合适的情况下尝试使用&lt;a href=&quot;IPC::Open3&quot;&gt;IPC :: Open3&lt;/a&gt;。默认为true。</target>
        </trans-unit>
        <trans-unit id="c7186253ea9f2a6791a20c80d2265efa327cdffd" translate="yes" xml:space="preserve">
          <source>This variable controls whether IPC::Cmd will try to use &lt;a href=&quot;IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; when available and suitable.</source>
          <target state="translated">此变量控制IPC :: Cmd是否在可用且合适的情况下尝试使用&lt;a href=&quot;IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73dae8e10552a74a934e3edcd6deb9eedabfc9a5" translate="yes" xml:space="preserve">
          <source>This variable controls whether IPC::Cmd will try to use &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; when available and suitable.</source>
          <target state="translated">此变量控制IPC :: Cmd是否在可用且合适时尝试使用&lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15b099300427310ae1fce8f71d090c3e400da728" translate="yes" xml:space="preserve">
          <source>This variable controls whether IPC::Cmd will try to use &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; when available and suitable. Defaults to true.</source>
          <target state="translated">此变量控制IPC :: Cmd是否在可用且合适的情况下尝试使用&lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt;。默认为true。</target>
        </trans-unit>
        <trans-unit id="3bf94506621997659019c91ef2357243eb7dce4b" translate="yes" xml:space="preserve">
          <source>This variable controls whether errors encountered internally by &lt;code&gt;File::Fetch&lt;/code&gt; should be &lt;code&gt;carp&lt;/code&gt; 'd or not.</source>
          <target state="translated">这个变量控制 &lt;code&gt;File::Fetch&lt;/code&gt; 内部遇到的错误是否应该为 &lt;code&gt;carp&lt;/code&gt; 'd。</target>
        </trans-unit>
        <trans-unit id="014760dc0d8244c2787649cfdc37738dc3b79c0c" translate="yes" xml:space="preserve">
          <source>This variable controls whether errors encountered internally by &lt;code&gt;File::Fetch&lt;/code&gt; should be &lt;code&gt;carp&lt;/code&gt;'d or not.</source>
          <target state="translated">这个变量控制 &lt;code&gt;File::Fetch&lt;/code&gt; 内部遇到的错误是否应该为 &lt;code&gt;carp&lt;/code&gt; 'd。</target>
        </trans-unit>
        <trans-unit id="d6454fe809442a8e9b28c9d809c33b66949380ff" translate="yes" xml:space="preserve">
          <source>This variable controls whether run-time warnings should be issued, like the failure to load an &lt;code&gt;IPC::*&lt;/code&gt; module you explicitly requested.</source>
          <target state="translated">此变量控制是否应发出运行时警告，例如无法加载您明确请求的 &lt;code&gt;IPC::*&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="da3307b9dcc6b2a969e12a66c4e064218075e131" translate="yes" xml:space="preserve">
          <source>This variable controls whether the environment variable &lt;code&gt;FTP_PASSIVE&lt;/code&gt; and any passive switches to commandline tools will be set to true.</source>
          <target state="translated">此变量控制是否将环境变量 &lt;code&gt;FTP_PASSIVE&lt;/code&gt; 以及任何到命令行工具的被动开关设置为true。</target>
        </trans-unit>
        <trans-unit id="c73cb87a35ceea52349d01d5f6931e3feaf5c750" translate="yes" xml:space="preserve">
          <source>This variable could be set in the</source>
          <target state="translated">这个变量可以在</target>
        </trans-unit>
        <trans-unit id="52febabe758cb38494b64a9f0c008e4d28b17ca2" translate="yes" xml:space="preserve">
          <source>This variable defines &lt;code&gt;PIDTYPE&lt;/code&gt; to be something like pid_t, int, ushort, or whatever type is used to declare process ids in the kernel.</source>
          <target state="translated">此变量将 &lt;code&gt;PIDTYPE&lt;/code&gt; 定义为pid_t，int，ushort之类的内容，或用于在内核中声明进程ID的任何类型。</target>
        </trans-unit>
        <trans-unit id="63ec3c820b10a99429de580c574585ce1b0da917" translate="yes" xml:space="preserve">
          <source>This variable defines Fpos_t to be something like fpos_t, long, uint, or whatever type is used to declare file positions in libc.</source>
          <target state="translated">这个变量定义了Fpos_t,使其成为类似于fpos_t、long、uint或者libc中用来声明文件位置的任何类型。</target>
        </trans-unit>
        <trans-unit id="b1883c70d873dd99d9839178075eb2cc693f95fc" translate="yes" xml:space="preserve">
          <source>This variable defines Gid_t to be something like gid_t, int, ushort, or whatever type is used to declare the return type of getgid(). Typically, it is the type of group ids in the kernel.</source>
          <target state="translated">这个变量定义了Gid_t是类似于gid_t,int,ushort,或者任何用来声明getgid()的返回类型的类型。通常,它是内核中组id的类型。</target>
        </trans-unit>
        <trans-unit id="2525b2f1f81c42b0058a304dcd2695c0db054f3b" translate="yes" xml:space="preserve">
          <source>This variable defines Groups_t to be something like gid_t, int, ushort, or whatever type is used for the second argument to getgroups() and setgroups(). Usually, this is the same as gidtype (gid_t), but sometimes it isn't.</source>
          <target state="translated">这个变量定义了Groups_t,使其成为类似于gid_t、int、ushort或任何用于getgroups()和setgroups()的第二个参数的类型。通常情况下,这个变量和gidtype (gid_t)是一样的,但有时不是。</target>
        </trans-unit>
        <trans-unit id="f583b94ee2a9381689db4973892883c89c57ad70" translate="yes" xml:space="preserve">
          <source>This variable defines Quad_t to be something like long, int, long long, int64_t, or whatever type is used for 64-bit integers.</source>
          <target state="translated">这个变量定义了Quad_t是类似long、int、long long、int64_t或任何用于64位整数的类型。</target>
        </trans-unit>
        <trans-unit id="508ca97bbdf41f627d10fb00c18f7336c146b204" translate="yes" xml:space="preserve">
          <source>This variable defines Uid_t to be something like uid_t, int, ushort, or whatever type is used to declare user ids in the kernel.</source>
          <target state="translated">这个变量定义的Uid_t是类似uid_t,int,ushort,或者任何在内核中用来声明用户id的类型。</target>
        </trans-unit>
        <trans-unit id="40d1dde1a49ef2cf1656b74529b7ac0c5be46a1a" translate="yes" xml:space="preserve">
          <source>This variable defines Uquad_t to be something like unsigned long, unsigned int, unsigned long long, uint64_t, or whatever type is used for 64-bit integers.</source>
          <target state="translated">这个变量定义了Uquad_t是类似unsigned long,unsigned int,unsigned long long,uint64_t,或者任何用于64位整数的类型。</target>
        </trans-unit>
        <trans-unit id="25c0e71707dca8d5b5d218b9372bd0061c0fcbaf" translate="yes" xml:space="preserve">
          <source>This variable defines any additional objects that must be linked in with the program on this architecture. On unix, it is usually empty. It is typically used to include emulations of unix calls or other facilities. For perl on</source>
          <target state="translated">这个变量定义了任何必须与这个架构上的程序链接的附加对象。在unix上,它通常是空的。它通常用于包含unix调用或其他设施的模拟。对于perl,在</target>
        </trans-unit>
        <trans-unit id="466b0e2c0c9cef84d53b60846c289ca645574bb7" translate="yes" xml:space="preserve">
          <source>This variable defines how, given a &lt;code&gt;FILE&lt;/code&gt; pointer, fp, to access the _base field (or equivalent) of</source>
          <target state="translated">在给定 &lt;code&gt;FILE&lt;/code&gt; 指针fp的情况下，此变量定义如何访问_base字段（或等效项）</target>
        </trans-unit>
        <trans-unit id="a59c1ad52202cc501b802875969a4dbaf153ecca" translate="yes" xml:space="preserve">
          <source>This variable defines how, given a &lt;code&gt;FILE&lt;/code&gt; pointer, fp, to access the _cnt field (or equivalent) of</source>
          <target state="translated">在给定 &lt;code&gt;FILE&lt;/code&gt; 指针fp的情况下，此变量定义了如何访问_cnt字段（或等效项）</target>
        </trans-unit>
        <trans-unit id="6c724a8a49a90e3cbd913b9e7b087f4a6e00a051" translate="yes" xml:space="preserve">
          <source>This variable defines how, given a &lt;code&gt;FILE&lt;/code&gt; pointer, fp, to access the _ptr field (or equivalent) of</source>
          <target state="translated">在给定 &lt;code&gt;FILE&lt;/code&gt; 指针fp的情况下，此变量定义了如何访问_ptr字段（或等效项）</target>
        </trans-unit>
        <trans-unit id="c93debd3e967483ff58eeea9c9d97721d631c8cd" translate="yes" xml:space="preserve">
          <source>This variable defines how, given a &lt;code&gt;FILE&lt;/code&gt; pointer, fp, to determine the number of bytes store in the I/O buffer pointer to by the _base field (or equivalent) of</source>
          <target state="translated">在给定 &lt;code&gt;FILE&lt;/code&gt; 指针fp的情况下，此变量定义如何确定I_O缓冲区的_base字段（或等效项）所指向的I / O缓冲区指针中存储的字节数。</target>
        </trans-unit>
        <trans-unit id="e00a415cd2cf300853e1a23ddccb8780ee11f707" translate="yes" xml:space="preserve">
          <source>This variable defines how, given a &lt;code&gt;FILE&lt;/code&gt; pointer, fp, to tell stdio to refill its internal buffers (?). This will be used to define the macro FILE_filbuf(fp).</source>
          <target state="translated">在给定 &lt;code&gt;FILE&lt;/code&gt; 指针fp的情况下，此变量定义如何告诉stdio重新填充其内部缓冲区（？）。这将用于定义宏FILE_filbuf（fp）。</target>
        </trans-unit>
        <trans-unit id="595afe5bb6e3f768b7da1ed296fa7c1643388437" translate="yes" xml:space="preserve">
          <source>This variable defines lseektype to be something like off_t, long, or whatever type is used to declare lseek offset's type in the kernel (which also appears to be lseek's return type).</source>
          <target state="translated">这个变量定义了lseektype的类型,比如off_t,long,或者任何在内核中用来声明lseek offset的类型的类型(这也是lseek的返回类型)。</target>
        </trans-unit>
        <trans-unit id="d97cebe8fae7c189d13c8f48c5b6ab8c4968f94c" translate="yes" xml:space="preserve">
          <source>This variable defines modetype to be something like mode_t, int, unsigned short, or whatever type is used to declare file modes for system calls.</source>
          <target state="translated">这个变量定义了modetype的类型,比如mode_t,int,unsigned short,或者任何用于声明系统调用的文件模式的类型。</target>
        </trans-unit>
        <trans-unit id="eb71f11d43d33a453603c76902f18199870e472e" translate="yes" xml:space="preserve">
          <source>This variable defines sizetype to be something like size_t, unsigned long, or whatever type is used to declare length parameters for string functions.</source>
          <target state="translated">这个变量定义了sizetype,比如size_t,unsigned long,或者任何用于声明字符串函数长度参数的类型。</target>
        </trans-unit>
        <trans-unit id="101baad5e9aec0534406a23db1b78f5a701bdcb7" translate="yes" xml:space="preserve">
          <source>This variable defines ssizetype to be something like ssize_t, long or int. It is used by functions that return a count of bytes or an error condition. It must be a signed type. We will pick a type such that sizeof(SSize_t) == sizeof(Size_t).</source>
          <target state="translated">这个变量定义了ssizetype,比如ssize_t、long或int。它被用于返回字节数或错误条件的函数。它必须是一个有符号的类型。我们将选择一个类型,使 sizeof(SSize_t)==sizeof(Size_t)。</target>
        </trans-unit>
        <trans-unit id="5ac7bf6f6a5f7759ef7065400de48a35b1e2cda3" translate="yes" xml:space="preserve">
          <source>This variable defines the &lt;code&gt;PERL_STATIC_INLINE&lt;/code&gt; symbol to the best-guess incantation to use for static inline functions. Possibilities include static inline (c99) static __inline__ (gcc -ansi) static __inline (&lt;code&gt;MSVC&lt;/code&gt; ) static _inline (older &lt;code&gt;MSVC&lt;/code&gt; ) static (c89 compilers)</source>
          <target state="translated">此变量将 &lt;code&gt;PERL_STATIC_INLINE&lt;/code&gt; 符号定义为最佳静态方法，以用于静态内联函数。可能包括静态内联（c99）静态__inline__（gcc -ansi）静态__inline（ &lt;code&gt;MSVC&lt;/code&gt; ）静态_inline（旧 &lt;code&gt;MSVC&lt;/code&gt; ）静态（c89编译器）</target>
        </trans-unit>
        <trans-unit id="ba81b57325d11c9177b735aff11d2b7e3c3a8349" translate="yes" xml:space="preserve">
          <source>This variable defines the &lt;code&gt;PERL_STATIC_INLINE&lt;/code&gt; symbol to the best-guess incantation to use for static inline functions. Possibilities include static inline (c99) static __inline__ (gcc -ansi) static __inline (&lt;code&gt;MSVC&lt;/code&gt;) static _inline (older &lt;code&gt;MSVC&lt;/code&gt;) static (c89 compilers)</source>
          <target state="translated">此变量将 &lt;code&gt;PERL_STATIC_INLINE&lt;/code&gt; 符号定义为最佳静态方法，以用于静态内联函数。可能包括静态内联（c99）静态__inline__（gcc -ansi）静态__inline（ &lt;code&gt;MSVC&lt;/code&gt; ）静态_inline（旧 &lt;code&gt;MSVC&lt;/code&gt; ）静态（c89编译器）</target>
        </trans-unit>
        <trans-unit id="46927ca4ff59ab7c0f7008732e11d122f034e081" translate="yes" xml:space="preserve">
          <source>This variable defines the constant to use for creating joinable (aka undetached) pthreads. Unused if</source>
          <target state="translated">这个变量定义了用于创建可连接(也就是未分离)pthreads的常量。如果</target>
        </trans-unit>
        <trans-unit id="b42419fbc9e55f0808270c4c7af104fa3ecce8f8" translate="yes" xml:space="preserve">
          <source>This variable defines the extension used for executable files. &lt;code&gt;DJGPP&lt;/code&gt; , Cygwin and</source>
          <target state="translated">此变量定义用于可执行文件的扩展名。 &lt;code&gt;DJGPP&lt;/code&gt; ，Cygwin和</target>
        </trans-unit>
        <trans-unit id="e8c437db99f9608c574ad857e6e17059ae71ab99" translate="yes" xml:space="preserve">
          <source>This variable defines the extension used for executable files. &lt;code&gt;DJGPP&lt;/code&gt;, Cygwin and</source>
          <target state="translated">此变量定义用于可执行文件的扩展名。 &lt;code&gt;DJGPP&lt;/code&gt; ，Cygwin和</target>
        </trans-unit>
        <trans-unit id="d25c6cbfaff8128f7b7614c26b89ea706c48d482" translate="yes" xml:space="preserve">
          <source>This variable defines the extension used for object files. For unix, it is</source>
          <target state="translated">这个变量定义了对象文件的扩展名。对于unix,它是</target>
        </trans-unit>
        <trans-unit id="1cfcbaaed9abc9ba708cba78b72b275b12b6bb6f" translate="yes" xml:space="preserve">
          <source>This variable defines the extension used for ordinary library files. For unix, it is</source>
          <target state="translated">这个变量定义了普通库文件的扩展名。对于unix,它是</target>
        </trans-unit>
        <trans-unit id="61e4d2e1a5792efdf2347a0450ea4e72d1eaabb6" translate="yes" xml:space="preserve">
          <source>This variable defines the first file searched by make. On unix, it is makefile (then Makefile). On case-insensitive systems, it might be something else. This is only used to deal with convoluted make depend tricks.</source>
          <target state="translated">这个变量定义了make所搜索的第一个文件,在unix上,它是makefile (然后是Makefile)。在 unix 系统中,它是 makefile (然后是 Makefile)。在不区分大小写的系统中,它可能是其他的文件。这个变量只用于处理复杂的 make depend 技巧。</target>
        </trans-unit>
        <trans-unit id="461bd9a24654ff2c3751169e02550316cfa7f16d" translate="yes" xml:space="preserve">
          <source>This variable defines the maximum value of the time_t offset that the system function gmtime () accepts</source>
          <target state="translated">这个变量定义了系统函数gmtime()接受的time_t偏移量的最大值。</target>
        </trans-unit>
        <trans-unit id="118dc8807136308ad6d8c3341362e12544dbaa96" translate="yes" xml:space="preserve">
          <source>This variable defines the maximum value of the time_t offset that the system function localtime () accepts</source>
          <target state="translated">这个变量定义了系统函数localtime()接受的time_t偏移量的最大值。</target>
        </trans-unit>
        <trans-unit id="002244d8170673ab8dec24ecc11076d87eb7c135" translate="yes" xml:space="preserve">
          <source>This variable defines the minimum value of the time_t offset that the system function gmtime () accepts</source>
          <target state="translated">这个变量定义了系统函数gmtime()接受的time_t偏移量的最小值。</target>
        </trans-unit>
        <trans-unit id="b41d7ca0acff026630ae3eb3657b81d0f74cbc00" translate="yes" xml:space="preserve">
          <source>This variable defines the minimum value of the time_t offset that the system function localtime () accepts</source>
          <target state="translated">这个变量定义了系统函数localtime()接受的time_t偏移量的最小值。</target>
        </trans-unit>
        <trans-unit id="f7b9ed49ec2fca27b0c2fe0400522c8358098c4b" translate="yes" xml:space="preserve">
          <source>This variable defines the way to yield the execution of the current thread.</source>
          <target state="translated">这个变量定义了当前线程的产生执行方式。</target>
        </trans-unit>
        <trans-unit id="57f99c42c44eacf0044be559cbd9d8361928ec2b" translate="yes" xml:space="preserve">
          <source>This variable defines whether sprintf returns the length of the string (as per the &lt;code&gt;ANSI&lt;/code&gt; spec). Some C libraries retain compatibility with pre-&lt;code&gt;ANSI&lt;/code&gt; C and return a pointer to the passed in buffer; for these this variable will be undef.</source>
          <target state="translated">此变量定义sprintf是否返回字符串的长度（按照 &lt;code&gt;ANSI&lt;/code&gt; 规范）。一些C库保留了与 &lt;code&gt;ANSI&lt;/code&gt; C 之前的兼容性，并返回指向传入缓冲区的指针。对于这些，此变量将为undef。</target>
        </trans-unit>
        <trans-unit id="5003973b1c55a943c2145dfca9fa05f0f4ce532c" translate="yes" xml:space="preserve">
          <source>This variable describes the &lt;code&gt;style&lt;/code&gt; of the perl installation. This is intended to be useful for tools that need to manipulate entire perl distributions. Perl itself doesn't use this to find its libraries -- the library directories are stored directly in</source>
          <target state="translated">此变量描述perl安装的 &lt;code&gt;style&lt;/code&gt; 。这对于需要操纵整个perl发行版的工具很有用。Perl本身不使用它来查找其库-库目录直接存储在</target>
        </trans-unit>
        <trans-unit id="567d29e4d961e48c885f35dbc475bb29eda4cd6f" translate="yes" xml:space="preserve">
          <source>This variable determines how many additional call frames are to be skipped that would not otherwise be when reporting where an error occurred on a call to one of &lt;code&gt;Carp&lt;/code&gt; 's functions. It is fairly easy to count these call frames on calls that generate a full stack backtrace. However it is much harder to do this accounting for calls that generate a short message. Usually people skip too many call frames. If they are lucky they skip enough that &lt;code&gt;Carp&lt;/code&gt; goes all of the way through the call stack, realizes that something is wrong, and then generates a full stack backtrace. If they are unlucky then the error is reported from somewhere misleading very high in the call stack.</source>
          <target state="translated">此变量确定要跳过多少个其他呼叫帧，而在报告对 &lt;code&gt;Carp&lt;/code&gt; 函数之一的呼叫中发生错误时，这些帧将不会被跳过。在生成完整堆栈回溯的调用上计算这些调用帧非常容易。但是，对于产生短消息的呼叫进行此处理要困难得多。通常人们跳过太多的呼叫帧。如果幸运的话，他们会跳过得足够多，以至于 &lt;code&gt;Carp&lt;/code&gt; 一直遍历整个调用堆栈，意识到有些问题，然后生成了完整的堆栈回溯。如果他们不走运，则从错误堆栈中报告错误，该错误会导致调用堆栈中的错误率很高。</target>
        </trans-unit>
        <trans-unit id="2997fe86eb59bbb73a6c72ba977ef7a86099ad0b" translate="yes" xml:space="preserve">
          <source>This variable determines how many additional call frames are to be skipped that would not otherwise be when reporting where an error occurred on a call to one of &lt;code&gt;Carp&lt;/code&gt;'s functions. It is fairly easy to count these call frames on calls that generate a full stack backtrace. However it is much harder to do this accounting for calls that generate a short message. Usually people skip too many call frames. If they are lucky they skip enough that &lt;code&gt;Carp&lt;/code&gt; goes all of the way through the call stack, realizes that something is wrong, and then generates a full stack backtrace. If they are unlucky then the error is reported from somewhere misleading very high in the call stack.</source>
          <target state="translated">此变量确定要跳过多少个其他呼叫帧，而在报告对 &lt;code&gt;Carp&lt;/code&gt; 函数之一的呼叫中发生错误时，这些帧将不会被跳过。在生成完整堆栈回溯的调用上对这些调用帧进行计数非常容易。但是，对于产生短消息的呼叫进行此处理要困难得多。通常人们跳过太多的呼叫帧。如果幸运的话，他们会跳过得足够多，以至于 &lt;code&gt;Carp&lt;/code&gt; 贯穿了整个调用栈，意识到出了点问题，然后生成了完整的栈回溯。如果他们不走运，那么将从调用堆栈中错误率很高的某个位置报告错误。</target>
        </trans-unit>
        <trans-unit id="13fa16fec6deb2726e7ca53b84ca2b6b1f476300" translate="yes" xml:space="preserve">
          <source>This variable determines how many arguments to each function to show. Use a false value to show all arguments to a function call. To suppress all arguments, use &lt;code&gt;-1&lt;/code&gt; or &lt;code&gt;'0 but true'&lt;/code&gt;.</source>
          <target state="translated">此变量确定每个函数显示多少个参数。使用false值显示函数调用的所有参数。要取消显示所有参数，请使用 &lt;code&gt;-1&lt;/code&gt; 或 &lt;code&gt;'0 but true'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="997faf6374edf42d5e810894f080e0b56690a757" translate="yes" xml:space="preserve">
          <source>This variable determines how many arguments to each function to show. Use a value of &lt;code&gt;0&lt;/code&gt; to show all arguments to a function call.</source>
          <target state="translated">此变量确定每个函数显示多少个参数。使用 &lt;code&gt;0&lt;/code&gt; 值显示函数调用的所有参数。</target>
        </trans-unit>
        <trans-unit id="4ed22a5320f680b267f097f8ff88f0b0c8170860" translate="yes" xml:space="preserve">
          <source>This variable determines how many characters of a string-eval are to be shown in the output. Use a value of &lt;code&gt;0&lt;/code&gt; to show all text.</source>
          <target state="translated">此变量确定在输出中显示多少个字符串等效字符。使用 &lt;code&gt;0&lt;/code&gt; 值显示所有文本。</target>
        </trans-unit>
        <trans-unit id="52d4b8eed6ae9311134a5ba11cf6525085261616" translate="yes" xml:space="preserve">
          <source>This variable determines how many characters of each argument to a function to print. Use a value of &lt;code&gt;0&lt;/code&gt; to show the full length of the argument.</source>
          <target state="translated">此变量确定要打印的每个参数的多少个字符。使用 &lt;code&gt;0&lt;/code&gt; 值来显示参数的完整长度。</target>
        </trans-unit>
        <trans-unit id="77076b88649a056f417b113352e176bb16a344a3" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of asctime_r. It is zero if d_asctime_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码asctime_r的原型。如果d_asctime_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="de787ee4aff8e807719797f703d324a175fd91b3" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of crypt_r. It is zero if d_crypt_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码crypt_r的原型。如果d_crypt_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="0ae14801df7af6e6ac0db7bac4125e988d2b5e57" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of ctermid_r. It is zero if d_ctermid_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码ctermid_r的原型。如果d_ctermid_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="0805fc34063d828b12f62fd3f69ff44ea81048d0" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of ctime_r. It is zero if d_ctime_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码ctime_r的原型。如果d_ctime_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="702d4b4627f77054b8ab5df334f9cb4c5a8583c2" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of drand48_r. It is zero if d_drand48_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码drand48_r的原型。如果d_drand48_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="9cc29a76f000e331b538e9e41caa895d97dd93be" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of endgrent_r. It is zero if d_endgrent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码endgrent_r的原型。如果d_endgrent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="de1d199b08d6056cc88345595fa889018468cd32" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of endhostent_r. It is zero if d_endhostent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码endhostent_r的原型。如果d_endhostent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="ede3a995a2b3214faa1fe1274bba14bfea9d7364" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of endnetent_r. It is zero if d_endnetent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码endnetent_r的原型。如果d_endnetent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="b379a49ea21fce80c07d9827af82947e143a3285" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of endprotoent_r. It is zero if d_endprotoent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码endprotoent_r的原型。如果d_endprotoent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="7e733296d7417ef9b28980006c6890141c2bcc01" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of endpwent_r. It is zero if d_endpwent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码endpwent_r的原型。如果d_endpwent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="cd55bba0e23735327a9ebfafc95b9aaff20c4cb5" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of endservent_r. It is zero if d_endservent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码endersvent_r的原型。如果d_endservent_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="0de43fcc27cebc0d62fa7b534e1b44568f665cf1" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getgrent_r. It is zero if d_getgrent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getgrent_r的原型。如果d_getgrent_r是undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="75862579b5eb6edbd30ae05058f7cced72f32e60" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getgrgid_r. It is zero if d_getgrgid_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getgrgid_r的原型。如果d_getgrgid_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="d3328c284b1850cfc504973317f44e12ef299907" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getgrnam_r. It is zero if d_getgrnam_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getgrnam_r的原型。如果d_getgrnam_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="99b5c4a7729e662ed55030f64938c984d1047567" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of gethostbyaddr_r. It is zero if d_gethostbyaddr_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码gethostbyaddr_r的原型。如果d_gethostbyaddr_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="61a05020b439068ce997a4d6e6507d50660e1527" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of gethostbyname_r. It is zero if d_gethostbyname_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码gethostbyname_r的原型。如果d_gethostbyname_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="5cfad2b24c69d1a2165ac84d5c4c42b582eb4f29" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of gethostent_r. It is zero if d_gethostent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码gethostent_r的原型。如果d_gethostent_r是undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="17e46936472129bbd3e4ad1775d12b7553e0f162" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getlogin_r. It is zero if d_getlogin_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getlogin_r的原型。如果d_getlogin_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="ac36667369ef9364808f90ec1d2987b05ae37198" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getnetbyaddr_r. It is zero if d_getnetbyaddr_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getnetbyaddr_r的原型。如果d_getnetbyaddr_r是undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="bb812b9537bfde1e8fcef630220446a5c3b49a32" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getnetbyname_r. It is zero if d_getnetbyname_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getnetbyname_r的原型。如果d_getnetbyname_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="bc3215cb0ef1e5500893aea4c1dab114f1c1846d" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getnetent_r. It is zero if d_getnetent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getnetent_r的原型。如果d_getnetent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="d220800ac1a2663e875a7dcc5e7dd64ac85ae4e9" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getprotobyname_r. It is zero if d_getprotobyname_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getprotobyname_r的原型。如果d_getprotobyname_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="cec3a44a5250aeda0ba0198647b3e28f5aee002c" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getprotobynumber_r. It is zero if d_getprotobynumber_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getprotobynumber_r的原型。如果d_getprotobynumber_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="fbb38274bc261fdcec5355c97b238c09bfd982ce" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getprotoent_r. It is zero if d_getprotoent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getprotoent_r的原型。如果d_getprotoent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="bb1ce88c17c834c27c1e2d0cb4116a5b720cbc03" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getpwent_r. It is zero if d_getpwent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getpwent_r的原型。如果d_getpwent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="cac9a0afc263ab4adae659a32c58331c9c65ff64" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getpwnam_r. It is zero if d_getpwnam_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getpwnam_r的原型。如果d_getpwnam_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="7fa93e2cb1e68516ffadfdeec198d26d2d7ffa68" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getpwuid_r. It is zero if d_getpwuid_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getpwuid_r的原型。如果d_getpwuid_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="1397056679cf94b1aa8274eed81b107a65915c02" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getservbyname_r. It is zero if d_getservbyname_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getservbyname_r的原型。如果d_getservbyname_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="e90daf53790ef74b86e1f2def419b1f4193d3aa0" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getservbyport_r. It is zero if d_getservbyport_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getservbyport_r的原型。如果d_getservbyport_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="56c3e77b49073a73727b4e6b83e8aadf3e2cee65" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getservent_r. It is zero if d_getservent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getservent_r的原型。如果d_getservent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="fe216b5546f8c82d765de160338a319beb2ced0f" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of getspnam_r. It is zero if d_getspnam_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码getspnam_r的原型。如果d_getspnam_r是undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="75284163ca383200ec5b71f5946854cc96f04875" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of gmtime_r. It is zero if d_gmtime_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码gmtime_r的原型。如果d_gmtime_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="4fc46c6d7a2f4353984026d6f4b4efcea6f57571" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of localtime_r. It is zero if d_localtime_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码localtime_r的原型。如果d_localtime_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="ecf69c1eec26472056e4dd4b880462f0a7febb4d" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of random_r. It is zero if d_random_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码random_r的原型。如果d_random_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="53c2a31de4b469208fdd1bc6957b7349423c1cc9" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of readdir64_r. It is zero if d_readdir64_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码readdir64_r的原型。如果d_readdir64_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="55a22491bdf92d7db2f6bc8ae7f5dd00d7dfa228" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of readdir_r. It is zero if d_readdir_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码readdir_r的原型。如果d_readdir_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="9c27a4dd90ee7695513b1d454b420fb2b813936b" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of setgrent_r. It is zero if d_setgrent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码setgrent_r的原型。如果d_setgrent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="ed4de308a2fc22b806c4279d3f2ee1518c03079b" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of sethostent_r. It is zero if d_sethostent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码sethostent_r的原型。如果d_sethostent_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="55e3159962fbec7696dfbf5921274442d357dc46" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of setlocale_r. It is zero if d_setlocale_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码setlocale_r的原型。如果d_setlocale_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="a237071191ca78ffa0aceca32e9a6a6a9cd732a5" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of setnetent_r. It is zero if d_setnetent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码setnetent_r的原型。如果d_setnetent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="3c102ae2f4bb19143cfc0440ca6633947562fb3a" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of setprotoent_r. It is zero if d_setprotoent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码setprotoent_r的原型。如果d_setprotoent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="3b5a6fbff52ee8a94448fb77aa9a579793aff7d0" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of setpwent_r. It is zero if d_setpwent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码setpwent_r的原型。如果d_setpwent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="66ca6e75602958c11d93157db62827e9aded10f9" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of setservent_r. It is zero if d_setservent_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码setservent_r的原型。如果d_setservent_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="723b3dc7f826374a55564f74aeae7c6269954e3b" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of srand48_r. It is zero if d_srand48_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码srand48_r的原型。如果d_srand48_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="bd7d67d3f9c1284961f6d9d35f6f33d6f58fbfe4" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of srandom_r. It is zero if d_srandom_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码srandom_r的原型。如果d_srandom_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="374862131b4a81d40f6aae4b04b7d2e7909432a3" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of strerror_r. It is zero if d_strerror_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码strerror_r的原型。如果d_strerror_r为undef，则为零；如果是，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="808ce759358ec66389650a0f02059e528dfc9a21" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of tmpnam_r. It is zero if d_tmpnam_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码tmpnam_r的原型。如果d_tmpnam_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="2fbf36e39ded2b8e6c78fbcfa5544ba7ca7b014c" translate="yes" xml:space="preserve">
          <source>This variable encodes the prototype of ttyname_r. It is zero if d_ttyname_r is undef, and one of the &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; macros of</source>
          <target state="translated">此变量编码ttyname_r的原型。如果d_ttyname_r为undef，则为零；如果为，则 &lt;code&gt;REENTRANT_PROTO_T_ABC&lt;/code&gt; 宏之一</target>
        </trans-unit>
        <trans-unit id="74e469970e1ce91386a2146482d3d7a642baa309" translate="yes" xml:space="preserve">
          <source>This variable first appeared in perl v5.6.0; earlier versions of perl will see an undefined value. Before perl v5.10.0 &lt;code&gt;$^V&lt;/code&gt; was represented as a v-string rather than a &lt;a href=&quot;version&quot;&gt;version&lt;/a&gt; object.</source>
          <target state="translated">此变量首先出现在perl v5.6.0中；Perl的早期版本将看到未定义的值。在perl v5.10.0之前， &lt;code&gt;$^V&lt;/code&gt; 表示为v字符串而不是&lt;a href=&quot;version&quot;&gt;版本&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="19584564e558acab878c1e03d9ea77a749d30b2e" translate="yes" xml:space="preserve">
          <source>This variable gives the largest integer value that NVs can hold as a constant floating point expression. If it could not be determined, it holds the value 0.</source>
          <target state="translated">这个变量给出了NV作为一个常量浮点表达式所能容纳的最大整数值。如果不能确定,则取值为0。</target>
        </trans-unit>
        <trans-unit id="aa260934e72ed375b13d409d34b7b8cae7563c50" translate="yes" xml:space="preserve">
          <source>This variable has any cpp &lt;code&gt;-I&lt;/code&gt; flags needed for socket support.</source>
          <target state="translated">此变量具有套接字支持所需的任何cpp &lt;code&gt;-I&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="16b31013a54b92bb850553d166694d8d4b830687" translate="yes" xml:space="preserve">
          <source>This variable has the names of any libraries needed for socket support.</source>
          <target state="translated">这个变量包含了Socket支持所需的任何库的名称。</target>
        </trans-unit>
        <trans-unit id="770c2c93752302b9c1d357199ea8c5d632cd9b17" translate="yes" xml:space="preserve">
          <source>This variable has the same functionality as cppminus, only it applies to cpprun and not cppstdin.</source>
          <target state="translated">这个变量的功能与cppminus相同,只是它适用于cpprun而不是cppstdin。</target>
        </trans-unit>
        <trans-unit id="2d53502c7fa0dc256b2f29066de84e8dade39388" translate="yes" xml:space="preserve">
          <source>This variable holds -lcrypt or the path to a</source>
          <target state="translated">这个变量持有-lcrypt或通往</target>
        </trans-unit>
        <trans-unit id="569a9104a53bc335c6f288cd33ea306d407d25d7" translate="yes" xml:space="preserve">
          <source>This variable holds a boolean indicating if we currently have &lt;code&gt;IO::String&lt;/code&gt; support loaded. This will be enabled for any perl that has a loadable &lt;code&gt;IO::String&lt;/code&gt; module.</source>
          <target state="translated">此变量包含一个布尔值，指示我们当前是否已加载 &lt;code&gt;IO::String&lt;/code&gt; 支持。任何具有可加载 &lt;code&gt;IO::String&lt;/code&gt; 模块的perl都将启用此功能。</target>
        </trans-unit>
        <trans-unit id="c9d62ed61b805febfda03e2e33c314276369d903" translate="yes" xml:space="preserve">
          <source>This variable holds a boolean indicating if we currently have &lt;code&gt;perlio&lt;/code&gt; support loaded. This will be enabled for any perl greater than &lt;code&gt;5.8&lt;/code&gt; compiled with &lt;code&gt;perlio&lt;/code&gt; .</source>
          <target state="translated">此变量包含一个布尔值，指示我们当前是否已加载 &lt;code&gt;perlio&lt;/code&gt; 支持。对于任何使用 &lt;code&gt;perlio&lt;/code&gt; 编译的大于 &lt;code&gt;5.8&lt;/code&gt; 的 perl，将启用此功能。</target>
        </trans-unit>
        <trans-unit id="5a5d36fd65999afababd3c068ef4cb1a16aecc2f" translate="yes" xml:space="preserve">
          <source>This variable holds a boolean indicating if we currently have &lt;code&gt;perlio&lt;/code&gt; support loaded. This will be enabled for any perl greater than &lt;code&gt;5.8&lt;/code&gt; compiled with &lt;code&gt;perlio&lt;/code&gt;.</source>
          <target state="translated">此变量包含一个布尔值，指示我们当前是否已加载 &lt;code&gt;perlio&lt;/code&gt; 支持。对于任何使用 &lt;code&gt;perlio&lt;/code&gt; 编译的大于 &lt;code&gt;5.8&lt;/code&gt; 的perl，将启用此功能。</target>
        </trans-unit>
        <trans-unit id="a16823268f739e59a6193e58e6bea531b1dbabf8" translate="yes" xml:space="preserve">
          <source>This variable holds a boolean indicating if we will create zero padded numbers for &lt;code&gt;size&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;checksum&lt;/code&gt; . The default is &lt;code&gt;0&lt;/code&gt; , indicating that we will create space padded numbers. Added for compatibility with &lt;code&gt;busybox&lt;/code&gt; implementations.</source>
          <target state="translated">此变量包含一个布尔值，指示是否要为 &lt;code&gt;size&lt;/code&gt; ， &lt;code&gt;mtime&lt;/code&gt; 和 &lt;code&gt;checksum&lt;/code&gt; 创建零填充数字。默认值为 &lt;code&gt;0&lt;/code&gt; ，表示我们将创建空格填充数字。添加以与 &lt;code&gt;busybox&lt;/code&gt; 实现兼容。</target>
        </trans-unit>
        <trans-unit id="4a2fef9bf1f352711a592635c300490750ca5491" translate="yes" xml:space="preserve">
          <source>This variable holds a boolean indicating if we will create zero padded numbers for &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;checksum&lt;/code&gt;. The default is &lt;code&gt;0&lt;/code&gt;, indicating that we will create space padded numbers. Added for compatibility with &lt;code&gt;busybox&lt;/code&gt; implementations.</source>
          <target state="translated">该变量包含一个布尔值，指示是否要为 &lt;code&gt;size&lt;/code&gt; ， &lt;code&gt;mtime&lt;/code&gt; 和 &lt;code&gt;checksum&lt;/code&gt; 创建零填充数字。默认值为 &lt;code&gt;0&lt;/code&gt; ，表示我们将创建带空格的数字。添加以与 &lt;code&gt;busybox&lt;/code&gt; 实现兼容。</target>
        </trans-unit>
        <trans-unit id="dcaa3eace57327111f674ce275307423813fd054" translate="yes" xml:space="preserve">
          <source>This variable holds a list of &lt;code&gt;XS&lt;/code&gt; extension files we want to link dynamically into the package. It is used by Makefile.</source>
          <target state="translated">此变量包含我们要动态链接到软件包中的 &lt;code&gt;XS&lt;/code&gt; 扩展文件列表。由Makefile使用。</target>
        </trans-unit>
        <trans-unit id="02c4fc4c9c6ca19a63491a02da2cec84150c6cbe" translate="yes" xml:space="preserve">
          <source>This variable holds a list of &lt;code&gt;XS&lt;/code&gt; extension files we want to link statically into the package. It is used by Makefile.</source>
          <target state="translated">此变量包含我们要静态链接到软件包中的 &lt;code&gt;XS&lt;/code&gt; 扩展文件列表。由Makefile使用。</target>
        </trans-unit>
        <trans-unit id="ae6a8cf68ce9d86bbf3e6bf16d7b19b3a825347a" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all extension files (both &lt;code&gt;XS&lt;/code&gt; and non-xs) installed with the package. It is propagated to</source>
          <target state="translated">此变量保存与软件包一起安装的所有扩展文件（ &lt;code&gt;XS&lt;/code&gt; 和非XS）的列表。它传播到</target>
        </trans-unit>
        <trans-unit id="45f9db0c3707e47edf13f37f57cabf1b6bf90b2f" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all extensions (both &lt;code&gt;XS&lt;/code&gt; and non-xs) included in the package source distribution. This information is only really of use during the Perl build, as the list makes no distinction between extensions which were build and installed, and those which where not. See &lt;code&gt;extensions&lt;/code&gt; for the list of extensions actually built and available.</source>
          <target state="translated">此变量保存包源分发中包含的所有扩展名（ &lt;code&gt;XS&lt;/code&gt; 和非XS）的列表。该信息仅在Perl构建期间真正有用，因为该列表没有区分已构建和已安装的扩展与未扩展的扩展。请参阅 &lt;code&gt;extensions&lt;/code&gt; 以获取实际构建和可用的扩展的列表。</target>
        </trans-unit>
        <trans-unit id="ce91840da35a3602aef016ebb54df014ef7e13f8" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all non-xs extensions built and installed by the package. By default, all non-xs extensions distributed will be built, with the exception of platform-specific extensions (currently only one &lt;code&gt;VMS&lt;/code&gt; specific extension).</source>
          <target state="translated">该变量保存由软件包构建和安装的所有非xs扩展的列表。默认情况下，将构建所有分发的非xs扩展，平台特定的扩展（当前仅一个 &lt;code&gt;VMS&lt;/code&gt; 特定的扩展）除外。</target>
        </trans-unit>
        <trans-unit id="9135bb6bf8982e929b7f9877ccb23fbe0c19466d" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all the libraries we want to search. The order is chosen to pick up the c library ahead of ucb or bsd libraries for SVR4.</source>
          <target state="translated">这个变量包含了我们要搜索的所有库的列表。选择这个顺序是为了在SVR4中先于ucb或bsd库提取c库。</target>
        </trans-unit>
        <trans-unit id="479e1040c3432761a045df4f0da66a00f3f9a656" translate="yes" xml:space="preserve">
          <source>This variable holds a list of extra modules to install.</source>
          <target state="translated">这个变量保存了要安装的额外模块的列表。</target>
        </trans-unit>
        <trans-unit id="2439016b40bec1323d2673316d7a1a02f31fc9bb" translate="yes" xml:space="preserve">
          <source>This variable holds a number larger than the largest valid signal number. This is usually the same as the &lt;code&gt;NSIG&lt;/code&gt; macro.</source>
          <target state="translated">该变量保存的数字大于最大有效信号的数字。这通常与 &lt;code&gt;NSIG&lt;/code&gt; 宏相同。</target>
        </trans-unit>
        <trans-unit id="0803fbf9d844442a0a7500553677d8e37aeb277f" translate="yes" xml:space="preserve">
          <source>This variable holds either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate whether the &lt;code&gt;POSIX&lt;/code&gt; extension should be used. The sole use for this currently is to allow an easy mechanism for hints files to indicate that &lt;code&gt;POSIX&lt;/code&gt; will not compile on a particular system.</source>
          <target state="translated">此变量为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ,以指示是否应使用 &lt;code&gt;POSIX&lt;/code&gt; 扩展名。目前，此方法的唯一用途是为提示文件提供一种简单的机制，以指示 &lt;code&gt;POSIX&lt;/code&gt; 无法在特定系统上进行编译。</target>
        </trans-unit>
        <trans-unit id="3d25addd994ddeee9809bcc183d0813d02da29ea" translate="yes" xml:space="preserve">
          <source>This variable holds either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate whether the I18N::Langinfo extension should be used. The sole use for this currently is to allow an easy mechanism for users to skip this extension from the Configure command line.</source>
          <target state="translated">该变量为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ,以指示是否应使用I18N :: Langinfo扩展名。当前，此功能的唯一用途是为用户提供一种简单的机制，使用户可以从&amp;ldquo;配置&amp;rdquo;命令行跳过此扩展名。</target>
        </trans-unit>
        <trans-unit id="bd430aed4d74207b0887d90b980987612d48607b" translate="yes" xml:space="preserve">
          <source>This variable holds either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate whether the Opcode extension should be used. The sole use for this currently is to allow an easy mechanism for users to skip the Opcode extension from the Configure command line.</source>
          <target state="translated">此变量为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ,以指示是否应使用Opcode扩展名。当前，此操作的唯一用途是为用户提供一种简单的机制，使用户可以从Configure命令行跳过Opcode扩展名。</target>
        </trans-unit>
        <trans-unit id="1891cdf77349fdbe3913ff9b3046168dd9aa991e" translate="yes" xml:space="preserve">
          <source>This variable holds extra path (space-separated) used to find libraries on this platform, for example &lt;code&gt;CPU&lt;/code&gt; -specific libraries (on multi-&lt;code&gt;CPU&lt;/code&gt; platforms) may be listed here.</source>
          <target state="translated">此变量包含用于在此平台上查找库的额外路径（以空格分隔），例如，此处可能列出了特定于 &lt;code&gt;CPU&lt;/code&gt; 的库（在多 &lt;code&gt;CPU&lt;/code&gt; 平台上）。</target>
        </trans-unit>
        <trans-unit id="07c325e0ab61acfa9e3f8550381afb0f188400f7" translate="yes" xml:space="preserve">
          <source>This variable holds extra path (space-separated) used to find libraries on this platform, for example &lt;code&gt;CPU&lt;/code&gt;-specific libraries (on multi-&lt;code&gt;CPU&lt;/code&gt; platforms) may be listed here.</source>
          <target state="translated">该变量包含用于在此平台上查找库的额外路径（以空格分隔），例如，此处可能列出了特定于 &lt;code&gt;CPU&lt;/code&gt; 的库（在多 &lt;code&gt;CPU&lt;/code&gt; 平台上）。</target>
        </trans-unit>
        <trans-unit id="c92b53ab7496a25bcb89e5a3b7c7dca4f88276df" translate="yes" xml:space="preserve">
          <source>This variable holds the (possibly relative) path of the package source. It is up to the Makefile to use this variable and set &lt;code&gt;VPATH&lt;/code&gt; accordingly to find the sources remotely. Use $pkgsrc to have an absolute path.</source>
          <target state="translated">此变量保存包源的（可能是相对的）路径。Makefile可以使用此变量并相应地设置 &lt;code&gt;VPATH&lt;/code&gt; 来远程查找源。使用$ pkgsrc具有绝对路径。</target>
        </trans-unit>
        <trans-unit id="26cd54e1caf2965ac6b4ab80d24f799e08ff4bf0" translate="yes" xml:space="preserve">
          <source>This variable holds the additional libraries we want to use. It is up to the Makefile to deal with it. The list can be empty.</source>
          <target state="translated">这个变量保存了我们想要使用的附加库。它由Makefile来处理。这个列表可以是空的。</target>
        </trans-unit>
        <trans-unit id="d67bea02284d93c795ab19c14386365eeeba5dc1" translate="yes" xml:space="preserve">
          <source>This variable holds the architecture name computed by Configure in a previous run. It is not intended to be perused by any user and should never be set in a hint file.</source>
          <target state="translated">这个变量保存了配置在前一次运行中计算出的架构名称。任何用户都不能使用它,也不应该在提示文件中设置。</target>
        </trans-unit>
        <trans-unit id="f6009107700fe052e70e48ed0acdbb45bec8ad80" translate="yes" xml:space="preserve">
          <source>This variable holds the byte order in a &lt;code&gt;UV&lt;/code&gt; . In the following, larger digits indicate more significance. The variable byteorder is either 4321 on a big-endian machine, or 1234 on a little-endian, or 87654321 on a Cray ... or 3412 with weird order !</source>
          <target state="translated">此变量在 &lt;code&gt;UV&lt;/code&gt; 中保存字节顺序。在下文中，较大的数字表示更多的意义。可变字节序在big-endian机器上为4321，在little-endian机器上为1234，或在Cray ...上为87654321，或者具有奇怪顺序的3412！</target>
        </trans-unit>
        <trans-unit id="4f2552c9f0465e718f3d38c3b8eb7b92236decd0" translate="yes" xml:space="preserve">
          <source>This variable holds the byte order in a &lt;code&gt;UV&lt;/code&gt;. In the following, larger digits indicate more significance. The variable byteorder is either 4321 on a big-endian machine, or 1234 on a little-endian, or 87654321 on a Cray ... or 3412 with weird order !</source>
          <target state="translated">此变量在 &lt;code&gt;UV&lt;/code&gt; 中保存字节顺序。在下文中，较大的数字表示更大的意义。可变字节序在big-endian机器上为4321，在little-endian机器上为1234，或在Cray ...上为87654321，或者具有奇怪顺序的3412！</target>
        </trans-unit>
        <trans-unit id="eb93a71d13ad751a95bfa1f121ddd7ed296dd475" translate="yes" xml:space="preserve">
          <source>This variable holds the command to do a grep with a proper return status. On most sane systems it is simply &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;. On insane systems it is a grep followed by a cat followed by a test. This variable is primarily for the use of other Configure units.</source>
          <target state="translated">此变量保存执行具有正确返回状态的grep的命令。在大多数理智的系统上，它只是 &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 。在疯狂的系统上，它是grep，然后是猫，然后是测试。此变量主要供其他配置单元使用。</target>
        </trans-unit>
        <trans-unit id="9955c0f862cc16035270ea3cfef6fc99e99abe6a" translate="yes" xml:space="preserve">
          <source>This variable holds the command to do a grep with a proper return status. On most sane systems it is simply &lt;code&gt;grep&lt;/code&gt;. On insane systems it is a grep followed by a cat followed by a test. This variable is primarily for the use of other Configure units.</source>
          <target state="translated">此变量保存执行具有正确返回状态的grep的命令。在大多数理智的系统上，它只是 &lt;code&gt;grep&lt;/code&gt; 。在疯狂的系统上，它是grep，然后是猫，然后是测试。此变量主要供其他配置单元使用。</target>
        </trans-unit>
        <trans-unit id="1a1edbf32f1571970fef4bbcc8ef5e7af09dffe9" translate="yes" xml:space="preserve">
          <source>This variable holds the directory names aka dirnames of the libraries we found and accepted, duplicates are removed.</source>
          <target state="translated">这个变量存放的是我们找到并接受的库的目录名也就是dirnames,重复的会被删除。</target>
        </trans-unit>
        <trans-unit id="2fbd69fb325167b36b276f4a0d8cb628f8150687" translate="yes" xml:space="preserve">
          <source>This variable holds the directory names probed for libraries.</source>
          <target state="translated">这个变量保存了探测到的库的目录名。</target>
        </trans-unit>
        <trans-unit id="f9e3cbc6bc40988088c265c36d158522efc1915b" translate="yes" xml:space="preserve">
          <source>This variable holds the environment type for the mips system. Possible values are &quot;BSD 4.3&quot; and &quot;System V&quot;.</source>
          <target state="translated">这个变量保存了mips系统的环境类型,可能的值是 &quot;BSD 4.3 &quot;和 &quot;System V&quot;。可能的值是 &quot;BSD 4.3 &quot;和 &quot;System V&quot;。</target>
        </trans-unit>
        <trans-unit id="966d28971a8bfa0f32560d0dded91f151f931902" translate="yes" xml:space="preserve">
          <source>This variable holds the eventual value of &lt;code&gt;CAN_PROTOTYPE&lt;/code&gt; , which indicates the C compiler can handle function prototypes.</source>
          <target state="translated">该变量保存最终值 &lt;code&gt;CAN_PROTOTYPE&lt;/code&gt; ，该值指示C编译器可以处理函数原型。</target>
        </trans-unit>
        <trans-unit id="79e4aa76daed7f43088806fdf47b70fc2dd3e0a4" translate="yes" xml:space="preserve">
          <source>This variable holds the extension used to identify shared libraries (also known as shared objects) on the system. Usually set to &lt;code&gt;so&lt;/code&gt; .</source>
          <target state="translated">此变量包含用于标识系统上共享库（也称为共享对象）的扩展名。通常设置为 &lt;code&gt;so&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="244c732c8093279fffe4b1430f0ede5c6ed8705e" translate="yes" xml:space="preserve">
          <source>This variable holds the extension used to identify shared libraries (also known as shared objects) on the system. Usually set to &lt;code&gt;so&lt;/code&gt;.</source>
          <target state="translated">此变量包含用于标识系统上共享库（也称为共享对象）的扩展名。通常设置为 &lt;code&gt;so&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58123ba08a4b3d6dbc11172b8356340c0359d485" translate="yes" xml:space="preserve">
          <source>This variable holds the filenames aka basenames of the libraries we found and accepted.</source>
          <target state="translated">这个变量保存了我们找到并接受的库的文件名,也就是基名。</target>
        </trans-unit>
        <trans-unit id="92169ed5116f14968c6cb5953cc6f5a8657835cb" translate="yes" xml:space="preserve">
          <source>This variable holds the flags that will be passed to the C pre- processor. It is up to the Makefile to use it.</source>
          <target state="translated">这个变量保存了将被传递给 C 语言预处理器的标志。由Makefile决定是否使用它。</target>
        </trans-unit>
        <trans-unit id="707ad12994c63b69ae61542833a4ff764f7b872f" translate="yes" xml:space="preserve">
          <source>This variable holds the full absolute path of installprefix with all</source>
          <target state="translated">这个变量持有installprefix的全部绝对路径,其中包括所有的</target>
        </trans-unit>
        <trans-unit id="a37b040263ffe00152d172f7c86428ab6ae7a7d8" translate="yes" xml:space="preserve">
          <source>This variable holds the full absolute path of the directory below which the user will install add-on packages. Derived from siteprefix.</source>
          <target state="translated">这个变量保存用户安装附加组件的目录的完整绝对路径。源自 siteprefix。</target>
        </trans-unit>
        <trans-unit id="0e268743c69d5fc7b412bb8c6e9c822148c6d896" translate="yes" xml:space="preserve">
          <source>This variable holds the full absolute path of the directory below which the user will install add-on packages. See &lt;code&gt;INSTALL&lt;/code&gt; for usage and examples.</source>
          <target state="translated">该变量保存目录的完整绝对路径，用户将在该目录下安装附加软件包。有关用法和示例，请参见 &lt;code&gt;INSTALL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fab6defbb66c0af1cc5db1f7d0cd8b6ff2d55586" translate="yes" xml:space="preserve">
          <source>This variable holds the full absolute path of the directory below which the user will install the package. Derived from prefix.</source>
          <target state="translated">这个变量保存了用户将安装软件包的目录的完整绝对路径。由前缀衍生而来。</target>
        </trans-unit>
        <trans-unit id="a52da8d161feedb6f9a0bd3e4ad9fe4daff334cd" translate="yes" xml:space="preserve">
          <source>This variable holds the full absolute path of the directory below which the vendor will install add-on packages. Derived from vendorprefix.</source>
          <target state="translated">这个变量保存了厂商将安装附加组件的目录的完整绝对路径。源自vendororprefix。</target>
        </trans-unit>
        <trans-unit id="31a14a36047ec40a20f6dc4ef464120eb79ee0b8" translate="yes" xml:space="preserve">
          <source>This variable holds the full absolute path of the directory below which the vendor will install add-on packages. See &lt;code&gt;INSTALL&lt;/code&gt; for usage and examples.</source>
          <target state="translated">此变量保存目录的完整绝对路径，供应商将在该目录的绝对路径下安装附加软件包。有关用法和示例，请参见 &lt;code&gt;INSTALL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a844e2cfcb71feea424cee7b20d6100141a5950f" translate="yes" xml:space="preserve">
          <source>This variable holds the full path of the included time header(s).</source>
          <target state="translated">这个变量包含了时间头的完整路径。</target>
        </trans-unit>
        <trans-unit id="ede7cf70c94577fee8891466bffe6dc75b5e0310" translate="yes" xml:space="preserve">
          <source>This variable holds the full path of the string header that will be used. Typically</source>
          <target state="translated">这个变量保存了将要使用的字符串头的完整路径。通常情况下</target>
        </trans-unit>
        <trans-unit id="46f0b9cbc0d1240ea9ec0f560349fd12732bd780" translate="yes" xml:space="preserve">
          <source>This variable holds the full pathnames of the libraries we found and accepted.</source>
          <target state="translated">这个变量保存了我们找到并接受的库的完整路径名。</target>
        </trans-unit>
        <trans-unit id="c1cbbb2dc59a4faacea882b16563852de611cb85" translate="yes" xml:space="preserve">
          <source>This variable holds the general path (space-separated) used to find libraries. It is intended to be used by other units.</source>
          <target state="translated">这个变量保存了用于查找图书馆的一般路径(以空格分隔)。它是供其他单位使用的。</target>
        </trans-unit>
        <trans-unit id="cbc0c3ebfc700cf900f98e2a667c88e64a8026f5" translate="yes" xml:space="preserve">
          <source>This variable holds the general path (space-separated) used to find libraries. It may contain directories that do not exist on this platform, libpth is the cleaned-up version.</source>
          <target state="translated">这个变量保存了用来查找库的一般路径(以空格隔开),它可能包含本平台上不存在的目录,libpth是清理后的版本。它可能包含在这个平台上不存在的目录,libpth是清理后的版本。</target>
        </trans-unit>
        <trans-unit id="8e62e6eaaa1168c99e42038cf78b8b1380b9cde3" translate="yes" xml:space="preserve">
          <source>This variable holds the location of the dtrace executable.</source>
          <target state="translated">这个变量存放dtrace可执行文件的位置。</target>
        </trans-unit>
        <trans-unit id="76de82227b67efc7bf089d3d69a9968d2d88b26c" translate="yes" xml:space="preserve">
          <source>This variable holds the minimum number of bits operated by select. That is, if you do select(n, ...), how many bits at least will be cleared in the masks if some activity is detected. Usually this is either n or 32*ceil(</source>
          <target state="translated">这个变量保存了select操作的最小位数。也就是说,如果你进行select(n,...),如果检测到一些活动,至少有多少位将在掩码中被清除。通常这个变量是n或32*ceil(</target>
        </trans-unit>
        <trans-unit id="22f1730c886394cffcf4758150622d7e197c9315" translate="yes" xml:space="preserve">
          <source>This variable holds the name of a command to execute a C compiler which can resolve multiple global references that happen to have the same name. Usual values are &lt;code&gt;cc&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt; . Fervent &lt;code&gt;ANSI&lt;/code&gt; compilers may be called &lt;code&gt;c89&lt;/code&gt; . &lt;code&gt;AIX&lt;/code&gt; has xlc.</source>
          <target state="translated">此变量保存执行C编译器的命令的名称，该命令可以解析碰巧具有相同名称的多个全局引用。通常值为 &lt;code&gt;cc&lt;/code&gt; 和 &lt;code&gt;gcc&lt;/code&gt; 。热情的 &lt;code&gt;ANSI&lt;/code&gt; 编译器可以称为 &lt;code&gt;c89&lt;/code&gt; 。 &lt;code&gt;AIX&lt;/code&gt; 有xlc。</target>
        </trans-unit>
        <trans-unit id="39abd3101f86e45dc3c21fb83b90ed7172b66b2c" translate="yes" xml:space="preserve">
          <source>This variable holds the name of a command to execute a C compiler which can resolve multiple global references that happen to have the same name. Usual values are &lt;code&gt;cc&lt;/code&gt; and &lt;code&gt;gcc&lt;/code&gt;. Fervent &lt;code&gt;ANSI&lt;/code&gt; compilers may be called &lt;code&gt;c89&lt;/code&gt;. &lt;code&gt;AIX&lt;/code&gt; has xlc.</source>
          <target state="translated">此变量保存执行C编译器的命令的名称，该命令可以解析碰巧具有相同名称的多个全局引用。通常的值为 &lt;code&gt;cc&lt;/code&gt; 和 &lt;code&gt;gcc&lt;/code&gt; 。热情的 &lt;code&gt;ANSI&lt;/code&gt; 编译器可以称为 &lt;code&gt;c89&lt;/code&gt; 。 &lt;code&gt;AIX&lt;/code&gt; 有xlc。</target>
        </trans-unit>
        <trans-unit id="975ca3f70cd3a560b8d47cb79f7f5ae056d86c86" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the command to make symbolic links (if they are supported). It can be used in the Makefile. It is either &lt;code&gt;ln -s&lt;/code&gt; or &lt;code&gt;ln&lt;/code&gt;</source>
          <target state="translated">此变量保存进行符号链接的命令的名称（如果支持）。可以在Makefile中使用它。它是 &lt;code&gt;ln -s&lt;/code&gt; 或 &lt;code&gt;ln&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4e63c640916e4d45a393aa7ba953903e1015ee0" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the compiler compiler we want to use in the Makefile. It can be yacc, byacc, or bison -y.</source>
          <target state="translated">这个变量保存了我们要在Makefile中使用的编译器的名称。它可以是yacc、byacc或bison -y。</target>
        </trans-unit>
        <trans-unit id="66ff1cc0edf423df08402bc955673a38bb21e390" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory below which &quot;make install&quot; will install the package. For most users, this is the same as prefix. However, it is useful for installing the software into a different (usually temporary) location after which it can be bundled up and moved somehow to the final location specified by prefix.</source>
          <target state="translated">这个变量保存了 &quot;make install &quot;将安装软件包的目录的名称,对于大多数用户来说,这和前缀是一样的。对于大多数用户来说,这和前缀是一样的。然而,它对于将软件安装到不同的位置(通常是临时的)很有用,在这之后,它可以被捆绑起来,并以某种方式移动到由前缀指定的最终位置。</target>
        </trans-unit>
        <trans-unit id="b6b5f492c648b27c0e99f5e141ec5680c17598b0" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory below which the user will install the package. Usually, this is</source>
          <target state="translated">这个变量保存了用户将安装软件包的目录名称。通常情况下,这个变量是</target>
        </trans-unit>
        <trans-unit id="ceeb3908532b2e3b64aa64212b74bbec369421e2" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which the user wants to put add-on publicly executable files for the package in question. It is most often a local directory such as</source>
          <target state="translated">这个变量保存了用户想要放置相关软件包的附加组件公开可执行文件的目录名称。它通常是一个本地目录,例如</target>
        </trans-unit>
        <trans-unit id="d8a1f0d4666d11f921227b07ac31fce5006d5d88" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which the user wants to put architecture-dependent public library files for $package. It is most often a local directory such as</source>
          <target state="translated">这个变量保存了用户想要为$package放置依赖于架构的公共库文件的目录名称。它通常是一个本地目录,比如</target>
        </trans-unit>
        <trans-unit id="8041cb76721adac083fe9d12d751a8f81f64180a" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which the user wants to put publicly executable images for the package in question. It is most often a local directory such as</source>
          <target state="translated">这个变量保存了用户想要放置相关软件包的公开可执行映像的目录名称。它通常是一个本地目录,比如</target>
        </trans-unit>
        <trans-unit id="deb4221d3db7c3e442dee03567b8ff60d06f4f03" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which the user wants to put publicly scripts for the package in question. It is either the same directory as for binaries, or a special one that can be mounted across different architectures, like</source>
          <target state="translated">这个变量保存了用户想要放置相关包的公开脚本的目录名称。它可以是与二进制文件相同的目录,也可以是一个特殊的目录,它可以在不同的架构中挂载,例如</target>
        </trans-unit>
        <trans-unit id="81114c9e1633658a873727462bf8b79d7dabe6ec" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the shared library search path, often &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; . To get an empty string, the hints file must set this to &lt;code&gt;none&lt;/code&gt; .</source>
          <target state="translated">该变量保存共享库搜索路径的名称，通常为 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 。要获取空字符串，提示文件必须将此设置为 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95587d0f76de43906e6b1f4d9b624f716c31eff3" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the shared library search path, often &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;. To get an empty string, the hints file must set this to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">此变量保存共享库搜索路径的名称，通常为 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 。要获取空字符串，提示文件必须将此设置为 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0f939672c88c90f90861168c6f1060d11bd061c" translate="yes" xml:space="preserve">
          <source>This variable holds the number of bytes required to align a double-- or a long double when applicable. Usual values are 2, 4 and 8. The default is eight, for safety.</source>
          <target state="translated">这个变量保存了对齐一个双倍数所需的字节数--或者在适用的情况下对齐一个长双倍数。通常的值是2、4和8。为了安全起见,默认值为8。</target>
        </trans-unit>
        <trans-unit id="7e6ce35a538280fdbe8a4a59b476fc486e5cca71" translate="yes" xml:space="preserve">
          <source>This variable holds the options that may be necessary for nm to work on a shared library but that can not be used on an archive library. Currently, this is only used by Linux, where nm --dynamic is *required* to get symbols from an &lt;code&gt;ELF&lt;/code&gt; library which has been stripped, but nm --dynamic is *fatal* on an archive library. Maybe Linux should just always set usenm=false.</source>
          <target state="translated">此变量包含nm在共享库上工作可能必需的选项，但不能在归档库上使用。当前，这仅在Linux上使用，其中* nm * dynamic *是必需的*，以便从已剥离的 &lt;code&gt;ELF&lt;/code&gt; 库中获取符号，而nm-dynamic是存档库上的*致命*的*。也许Linux应该总是设置usenm = false。</target>
        </trans-unit>
        <trans-unit id="5fb94dfaf3c5cf5b9350b21ad652f5f73ff1b166" translate="yes" xml:space="preserve">
          <source>This variable holds the options that may be necessary for nm.</source>
          <target state="translated">这个变量保存了nm可能需要的选项。</target>
        </trans-unit>
        <trans-unit id="3249abffffbb5aa711d6199a15a75382b81101e2" translate="yes" xml:space="preserve">
          <source>This variable holds the path of the include files, which is usually</source>
          <target state="translated">这个变量保存了include文件的路径,通常为</target>
        </trans-unit>
        <trans-unit id="6f49f8eac2d8870189ce1b166a19b4092ac00fcb" translate="yes" xml:space="preserve">
          <source>This variable holds the paths (space-separated) used to find local libraries. It is prepended to libpth, and is intended to be easily set from the command line.</source>
          <target state="translated">这个变量保存了用于查找本地库的路径(以空格分隔)。它被放在libpth的前面,并且可以通过命令行轻松设置。</target>
        </trans-unit>
        <trans-unit id="6095846195c500c11318c3bb4b690d204039493e" translate="yes" xml:space="preserve">
          <source>This variable holds the place where the manual is located on this system. It is not the place where the user wants to put his manual pages. Rather it is the place where Configure may look to find manual for unix commands (section 1 of the manual usually). See mansrc.</source>
          <target state="translated">这个变量保存了本系统中手册所在的位置。它并不是用户想要放置手册的地方,而是配置可以查找unix命令手册的地方(通常是手册的第1节)。而是Configure查找unix命令手册的地方(通常是手册的第1节)。参见mansrc。</target>
        </trans-unit>
        <trans-unit id="f846938e7f55c147f7df02834d562c782659796c" translate="yes" xml:space="preserve">
          <source>This variable holds the return code from read() when no data is present. It should be -1, but some systems return 0 when &lt;code&gt;O_NDELAY&lt;/code&gt; is used, which is a shame because you cannot make the difference between no data and an</source>
          <target state="translated">当没有数据时，此变量保存read（）的返回代码。它应该为-1，但是某些系统在使用 &lt;code&gt;O_NDELAY&lt;/code&gt; 时返回0 ，这很可惜，因为您无法在无数据和</target>
        </trans-unit>
        <trans-unit id="08528885a64385bf0b06ecc9d26f661f2e16f288" translate="yes" xml:space="preserve">
          <source>This variable holds the same list as inc_version_list, but each item is enclosed in double quotes and separated by commas, suitable for use in the &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; initialization.</source>
          <target state="translated">该变量与inc_version_list拥有相同的列表，但是每个项目都用双引号引起来并用逗号分隔，适合在 &lt;code&gt;PERL_INC_VERSION_LIST&lt;/code&gt; 初始化中使用。</target>
        </trans-unit>
        <trans-unit id="e260a05f295acb14a40f2d355811442a73b0af9b" translate="yes" xml:space="preserve">
          <source>This variable holds the signal names, enclosed in double quotes and separated by commas, suitable for use in the &lt;code&gt;SIG_NAME&lt;/code&gt; definition below. A &lt;code&gt;ZERO&lt;/code&gt; is prepended to the list, and the list is terminated with a plain 0. The leading &lt;code&gt;SIG&lt;/code&gt; in signal names is removed. See sig_num.</source>
          <target state="translated">此变量保存信号名称，用双引号括起来并用逗号分隔，适用于下面的 &lt;code&gt;SIG_NAME&lt;/code&gt; 定义。甲 &lt;code&gt;ZERO&lt;/code&gt; 被预置到该列表，并且该列表被端接一个纯0。领先 &lt;code&gt;SIG&lt;/code&gt; 在信号名称被去除。参见sig_num。</target>
        </trans-unit>
        <trans-unit id="bd870c73c0db86179a8cc1eb403ac85c756fd6d4" translate="yes" xml:space="preserve">
          <source>This variable holds the signal names, space separated. The leading &lt;code&gt;SIG&lt;/code&gt; in signal name is removed. A &lt;code&gt;ZERO&lt;/code&gt; is prepended to the list. This is currently not used, sig_name_init is used instead.</source>
          <target state="translated">该变量保存信号名称，以空格分隔。信号名称中的前导 &lt;code&gt;SIG&lt;/code&gt; 被删除。一个 &lt;code&gt;ZERO&lt;/code&gt; 被前置到列表中。当前不使用它，而是使用sig_name_init。</target>
        </trans-unit>
        <trans-unit id="b97ca55dcd3d8d803aa8719a3b4c9510d4745654" translate="yes" xml:space="preserve">
          <source>This variable holds the signal numbers, enclosed in double quotes and separated by commas, suitable for use in the &lt;code&gt;SIG_NUM&lt;/code&gt; definition below. A &lt;code&gt;ZERO&lt;/code&gt; is prepended to the list, and the list is terminated with a plain 0.</source>
          <target state="translated">此变量保存信号编号，用双引号括起来并用逗号分隔，适用于下面的 &lt;code&gt;SIG_NUM&lt;/code&gt; 定义。甲 &lt;code&gt;ZERO&lt;/code&gt; 被预置到该列表，并且该列表被端接一个普通的0。</target>
        </trans-unit>
        <trans-unit id="2375dff2a285afefde99330b46bfa57ea8534ffd" translate="yes" xml:space="preserve">
          <source>This variable holds the signal numbers, space separated. A &lt;code&gt;ZERO&lt;/code&gt; is prepended to the list (corresponding to the fake &lt;code&gt;SIGZERO&lt;/code&gt; ). Those numbers correspond to the value of the signal listed in the same place within the sig_name list. This is currently not used, sig_num_init is used instead.</source>
          <target state="translated">该变量保存信号号，以空格分隔。一个 &lt;code&gt;ZERO&lt;/code&gt; 被前置到列表（对应于假 &lt;code&gt;SIGZERO&lt;/code&gt; ）。这些数字对应于sig_name列表中同一位置列出的信号值。当前不使用它，而是使用sig_num_init。</target>
        </trans-unit>
        <trans-unit id="e54fc9889b24a47e1c2148e83ab4662ce4b0fc2a" translate="yes" xml:space="preserve">
          <source>This variable holds the signal numbers, space separated. A &lt;code&gt;ZERO&lt;/code&gt; is prepended to the list (corresponding to the fake &lt;code&gt;SIGZERO&lt;/code&gt;). Those numbers correspond to the value of the signal listed in the same place within the sig_name list. This is currently not used, sig_num_init is used instead.</source>
          <target state="translated">该变量保存信号号，以空格分隔。一个 &lt;code&gt;ZERO&lt;/code&gt; 被前置到列表（对应于假 &lt;code&gt;SIGZERO&lt;/code&gt; ）。这些数字与sig_name列表中同一位置列出的信号值相对应。当前不使用它，而是使用sig_num_init。</target>
        </trans-unit>
        <trans-unit id="a254e0c24e9fa59422a416ba718851c0afb2ae7a" translate="yes" xml:space="preserve">
          <source>This variable holds the test command to test for a symbolic link (if they are supported). Typical values include &lt;code&gt;test -h&lt;/code&gt; and &lt;code&gt;test -L&lt;/code&gt; .</source>
          <target state="translated">该变量保存测试命令以测试符号链接（如果支持）。典型值包括 &lt;code&gt;test -h&lt;/code&gt; 和 &lt;code&gt;test -L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb487a4a31035f6abe359c8c2e342919f47e3c86" translate="yes" xml:space="preserve">
          <source>This variable holds the test command to test for a symbolic link (if they are supported). Typical values include &lt;code&gt;test -h&lt;/code&gt; and &lt;code&gt;test -L&lt;/code&gt;.</source>
          <target state="translated">此变量保存测试命令以测试符号链接（如果支持）。典型值包括 &lt;code&gt;test -h&lt;/code&gt; 和 &lt;code&gt;test -L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e2e09da600c3938acbbf56b6465b40820091c78" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the signal handler (void or int).</source>
          <target state="translated">这个变量存放信号处理程序的类型(void或int)。</target>
        </trans-unit>
        <trans-unit id="835e9573e72b439b8d28649076a101b5439bf3dd" translate="yes" xml:space="preserve">
          <source>This variable holds the type returned by time(). It can be long, or time_t on &lt;code&gt;BSD&lt;/code&gt; sites (in which case &amp;lt;sys/types.h&amp;gt; should be included). Anyway, the type Time_t should be used.</source>
          <target state="translated">此变量保存time（）返回的类型。它可以很长，也可以在 &lt;code&gt;BSD&lt;/code&gt; 站点上为time_t （在这种情况下，应包含&amp;lt;sys / types.h&amp;gt;）。无论如何，应该使用类型Time_t。</target>
        </trans-unit>
        <trans-unit id="e2138af6020e97cba54a0b84e76f1bfeb8d4c320" translate="yes" xml:space="preserve">
          <source>This variable holds the type returned by times(). It can be long, or clock_t on &lt;code&gt;BSD&lt;/code&gt; sites (in which case &amp;lt;sys/types.h&amp;gt; should be included).</source>
          <target state="translated">此变量保存times（）返回的类型。它可以很长，也可以在 &lt;code&gt;BSD&lt;/code&gt; 站点上为clock_t （在这种情况下，应包含&amp;lt;sys / types.h&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="9b97141a0ff974e240f17b7201f774cd17b413f3" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the 1st argument to gethostbyaddr(). Usually, this is char * or void *, possibly with or without a const prefix. This is only useful if you have gethostbyaddr(), naturally.</source>
          <target state="translated">这个变量保存了gethostbyaddr()的第1个参数的类型,通常是char *或void *,可能有或没有const前缀。通常,这个变量是char *或void *,可能有或没有const前缀。当然,只有当你有gethostbyaddr()时,这个变量才会有用。</target>
        </trans-unit>
        <trans-unit id="b0b750d1dfbe60a15a4cbc06031ed8175b0067f3" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the 1st argument to getnetbyaddr(). Usually, this is int or long. This is only useful if you have getnetbyaddr(), naturally.</source>
          <target state="translated">这个变量存放getnetbyaddr()的第一个参数的类型。通常情况下,这个变量是int或者long。当然,只有当你有getnetbyaddr()时,这个变量才会有用。</target>
        </trans-unit>
        <trans-unit id="2fe93bf333aa5d2b80ae756d0da019849eca1d39" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the 2nd argument to gethostbyaddr(). Usually, this is int or size_t or unsigned. This is only useful if you have gethostbyaddr(), naturally.</source>
          <target state="translated">这个变量存放gethostbyaddr()的第二个参数的类型。通常,这个变量是 int 或 size_t 或 unsigned。当然,只有当你有gethostbyaddr()的时候,这个变量才会有用。</target>
        </trans-unit>
        <trans-unit id="bdd4821764a5baaa298226e4d505d8a9e05c90e7" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the 2nd, 3rd, and 4th arguments to select. Usually, this is &lt;code&gt;fd_set *&lt;/code&gt; , if &lt;code&gt;HAS_FD_SET&lt;/code&gt; is defined, and &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; *&lt;/code&gt; otherwise. This is only useful if you have select(), naturally.</source>
          <target state="translated">此变量保存用于选择第二，第三和第四参数的类型。通常，如果定义了 &lt;code&gt;HAS_FD_SET&lt;/code&gt; ，则为 &lt;code&gt;fd_set *&lt;/code&gt; ，否则为 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; *&lt;/code&gt; *。自然，这仅在您具有select（）时才有用。</target>
        </trans-unit>
        <trans-unit id="b6c6c9f58160899355e0b01159fd6350d3e5a674" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the 2nd, 3rd, and 4th arguments to select. Usually, this is &lt;code&gt;fd_set *&lt;/code&gt;, if &lt;code&gt;HAS_FD_SET&lt;/code&gt; is defined, and &lt;code&gt;int *&lt;/code&gt; otherwise. This is only useful if you have select(), naturally.</source>
          <target state="translated">该变量保存用于选择第二，第三和第四参数的类型。通常，如果定义了 &lt;code&gt;HAS_FD_SET&lt;/code&gt; ，则为 &lt;code&gt;fd_set *&lt;/code&gt; ，否则为 &lt;code&gt;int *&lt;/code&gt; 。自然，这仅在您具有select（）时才有用。</target>
        </trans-unit>
        <trans-unit id="4bb6f61a9cb2d21622b5b2bdf0037c4090e6a8b6" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the argument to gethostbyname(). Usually, this is char * or const char *. This is only useful if you have gethostbyname(), naturally.</source>
          <target state="translated">这个变量保存了gethostbyname()的参数的类型,通常是char *或const char *。通常情况下,这个变量是char *或者const char *。当然,只有当你有gethostbyname()时,这个变量才有用。</target>
        </trans-unit>
        <trans-unit id="91acaa24e66816e27e0f44e6a4f8a203219e9254" translate="yes" xml:space="preserve">
          <source>This variable holds the type used for the size argument for various socket calls like accept. Usual values include socklen_t, size_t, and int.</source>
          <target state="translated">这个变量保存了各种套接字调用(如accept)中用于大小参数的类型,通常的值包括socklen_t、size_t和int。通常的值包括socklen_t、size_t和int。</target>
        </trans-unit>
        <trans-unit id="a016f4c917bb6fe8e73e1581d6b6a1bc240909ba" translate="yes" xml:space="preserve">
          <source>This variable holds what Gconvert is defined as to convert floating point numbers into strings. By default, Configure sets &lt;code&gt;this&lt;/code&gt; macro to use the first of gconvert, gcvt, or sprintf that pass sprintf-%g-like behavior tests. If perl is using long doubles, the macro uses the first of the following functions that pass Configure's tests: qgcvt, sprintf (if Configure knows how to make sprintf format long doubles--see sPRIgldbl), gconvert, gcvt, and sprintf (casting to double). The gconvert_preference and gconvert_ld_preference variables can be used to alter Configure's preferences, for doubles and long doubles, respectively. If present, they contain a space-separated list of one or more of the above function names in the order they should be tried.</source>
          <target state="translated">此变量保存Gconvert定义的内容，该定义将浮点数转换为字符串。默认情况下，Configure &lt;code&gt;this&lt;/code&gt; 宏设置为使用通过了类似于sprintf-％g的行为测试的gconvert，gcvt或sprintf中的第一个。如果perl使用的是long double，则宏将使用以下通过Configure测试的函数中的第一个：qgcvt，sprintf（如果Configure知道如何使sprintf格式为double的长双倍-请参见sPRIgldbl），gconvert，gcvt和sprintf（向双）。 gconvert_preference和gconvert_ld_preference变量可用于更改Configure的首选项，分别用于双打和长双打。如果存在，则它们应按尝试顺序包含一个或多个以上函数名称的空格列表。</target>
        </trans-unit>
        <trans-unit id="1d1ef6edaf977f495c0f8ceba5e239974bd28f68" translate="yes" xml:space="preserve">
          <source>This variable holds what Strerror is defined as to translate an error code condition into an error message string. It could be &lt;code&gt;strerror&lt;/code&gt; or a more &lt;code&gt;complex&lt;/code&gt; macro emulating strerror with sys_errlist[], or the &lt;code&gt;unknown&lt;/code&gt; string when both strerror and sys_errlist are missing.</source>
          <target state="translated">此变量保存定义为Strerror的内容，以将错误代码条件转换为错误消息字符串。可能是 &lt;code&gt;strerror&lt;/code&gt; 或使用sys_errlist []模拟strerror 的更 &lt;code&gt;complex&lt;/code&gt; 宏，或者是缺少strerror和sys_errlist 的 &lt;code&gt;unknown&lt;/code&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="555c7cb58cfa387e81ec11203f592f8fc30775b3" translate="yes" xml:space="preserve">
          <source>This variable indicates how many of bits type uvtype a variable nvtype can preserve.</source>
          <target state="translated">这个变量表示一个变量nvtype可以保留多少个uvtype类型的位。</target>
        </trans-unit>
        <trans-unit id="37315ab0bbb2f1b790234bf7eff0aa816f70a0cb" translate="yes" xml:space="preserve">
          <source>This variable indicates if the system supports dynamic loading of some sort. See also dlsrc and dlobj.</source>
          <target state="translated">这个变量表示系统是否支持某种形式的动态加载。参见dlsrc和dlobj。</target>
        </trans-unit>
        <trans-unit id="46d5a9bd26c4ac236b1625459381e1e1d32d92da" translate="yes" xml:space="preserve">
          <source>This variable indicates that Perl was configured with development features enabled. This should not be done for production builds.</source>
          <target state="translated">这个变量表示Perl在配置时启用了开发功能。对于生产版本,不应该这样做。</target>
        </trans-unit>
        <trans-unit id="d297b07fdd2b645c4639e3d15bbea8c486b8fb0c" translate="yes" xml:space="preserve">
          <source>This variable indicates the program to be used to link libraries for dynamic loading. On some systems, it is &lt;code&gt;ld&lt;/code&gt; . On &lt;code&gt;ELF&lt;/code&gt; systems, it should be $cc. Mostly, we'll try to respect the hint file setting.</source>
          <target state="translated">此变量指示用于链接库以进行动态加载的程序。在某些系统上，它是 &lt;code&gt;ld&lt;/code&gt; 。在 &lt;code&gt;ELF&lt;/code&gt; 系统上，应为$ cc。通常，我们将尝试遵守提示文件设置。</target>
        </trans-unit>
        <trans-unit id="7ac7052692c26e66990ca0424b376c0188816f6e" translate="yes" xml:space="preserve">
          <source>This variable indicates the program to be used to link libraries for dynamic loading. On some systems, it is &lt;code&gt;ld&lt;/code&gt;. On &lt;code&gt;ELF&lt;/code&gt; systems, it should be $cc. Mostly, we'll try to respect the hint file setting.</source>
          <target state="translated">此变量指示用于链接库以进行动态加载的程序。在某些系统上，它是 &lt;code&gt;ld&lt;/code&gt; 。在 &lt;code&gt;ELF&lt;/code&gt; 系统上，应为$ cc。通常，我们将尝试遵守提示文件设置。</target>
        </trans-unit>
        <trans-unit id="f5818397556c3a8c4145c58d41b9bccac760b1ec" translate="yes" xml:space="preserve">
          <source>This variable indicates whether &lt;code&gt;Archive::Tar&lt;/code&gt; should allow files to be extracted outside their current working directory.</source>
          <target state="translated">此变量指示 &lt;code&gt;Archive::Tar&lt;/code&gt; 是否应允许将文件提取到其当前工作目录之外。</target>
        </trans-unit>
        <trans-unit id="151069eb8d78b9a9342c4d345c48c0a16d7c5f71" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a UTF-8 locale was detected by perl at startup. This information is used by perl when it's in adjust-utf8ness-to-locale mode (as when run with the &lt;code&gt;-CL&lt;/code&gt; command-line switch); see &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more info on this.</source>
          <target state="translated">此变量指示在启动时perl是否检测到UTF-8语言环境。perl在adjust-utf8ness-to-locale模式下时（例如，与 &lt;code&gt;-CL&lt;/code&gt; 命令行开关一起运行时），将使用此信息；有关更多信息，请参见&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35a8caabc1bc1d2cc78df8688106f15c8f5cac24" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a UTF-8 locale was detected by perl at startup. This information is used by perl when it's in adjust-utf8ness-to-locale mode (as when run with the &lt;code&gt;-CL&lt;/code&gt; command-line switch); see &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt; for more info on this.</source>
          <target state="translated">此变量指示在启动时perl是否检测到UTF-8语言环境。perl处于adjust-utf8ness-to-locale模式时（例如，与 &lt;code&gt;-CL&lt;/code&gt; 命令行开关一起运行时），该信息将由perl使用。有关更多信息，请参见&lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0481413057d3fd60ec1f26a9455751a82a664140" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a variable of type nvtype can preserve all the bits a variable of type uvtype.</source>
          <target state="translated">这个变量表示一个nvtype类型的变量是否可以保留一个uvtype类型变量的所有位。</target>
        </trans-unit>
        <trans-unit id="1c5b4da0cfe1527f7d6965711fbd7ec27de16fce" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a variable of type nvtype stores 0.0 in memory as all bits zero.</source>
          <target state="translated">这个变量表示一个nvtype类型的变量在内存中是否将0.0存储为所有的零位。</target>
        </trans-unit>
        <trans-unit id="f702bf0d72fdaae7c4d169eaa6c6d6d3dad3f312" translate="yes" xml:space="preserve">
          <source>This variable indicates whether to include the $api_versionstring as a component of the $archname.</source>
          <target state="translated">这个变量表示是否将$api_versionstring作为$archname的一个组成部分。</target>
        </trans-unit>
        <trans-unit id="d1830e35d3e22d472801f88e943e3491e50c0c52" translate="yes" xml:space="preserve">
          <source>This variable indicates whether we are compiling with backtrace support.</source>
          <target state="translated">这个变量表示我们是否支持反向跟踪编译。</target>
        </trans-unit>
        <trans-unit id="fa8f3b3aa143cf4250bcebb2be4443524871f355" translate="yes" xml:space="preserve">
          <source>This variable indicates whether we are compiling with dtrace support. See also dtrace.</source>
          <target state="translated">这个变量表示我们是否支持dtrace编译。参见dtrace。</target>
        </trans-unit>
        <trans-unit id="0f575d208b36b67de55efd9845cf5c38b416dbf6" translate="yes" xml:space="preserve">
          <source>This variable is $sitelibexp with any trailing version-specific component removed. The elements in inc_version_list (</source>
          <target state="translated">这个变量是$sitelibexp,并去掉了后面的特定版本组件。在 inc_version_list (</target>
        </trans-unit>
        <trans-unit id="b5c08538519dfb05911d74ae1341e3f7b0d84f4c" translate="yes" xml:space="preserve">
          <source>This variable is $vendorlibexp with any trailing version-specific component removed. The elements in inc_version_list (</source>
          <target state="translated">这个变量是$vendorlibexp,并去掉了后面任何特定版本的组件。在 inc_version_list (</target>
        </trans-unit>
        <trans-unit id="bc073cc81fa954a4b369ce8d24558858dc65f377" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;true&lt;/code&gt; if the components of libraries must be ordered (with `lorder $* | tsort`) before placing them in an archive. Set to &lt;code&gt;false&lt;/code&gt; if ranlib or ar can generate random libraries.</source>
          <target state="translated">如果必须在将库的组件放入归档文件之前对其进行排序（使用`lorder $ * | tsort`），则此变量为 &lt;code&gt;true&lt;/code&gt; 。如果ranlib或ar可以生成随机库，则设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71a55e8db2e943cb225dd0d36724e0df3080af17" translate="yes" xml:space="preserve">
          <source>This variable is a short name to characterize the current architecture. It is used mainly to construct the default archlib.</source>
          <target state="translated">这个变量是一个简短的名称,用来描述当前的架构。它主要用于构造默认的archlib。</target>
        </trans-unit>
        <trans-unit id="df7e46c7aff5a3664a9ce3ca0f389e4ee9b4ee1c" translate="yes" xml:space="preserve">
          <source>This variable is by default set to</source>
          <target state="translated">此变量默认设置为</target>
        </trans-unit>
        <trans-unit id="563043fdcd8a3cf878649849ec4ad986138fbba3" translate="yes" xml:space="preserve">
          <source>This variable is defined but not used by Configure. The value is the empty string and is not useful.</source>
          <target state="translated">此变量已定义,但未被Configure使用。值是空字符串,没有用处。</target>
        </trans-unit>
        <trans-unit id="d7354fd489f73abc189fcb21ccf9445303cedb8f" translate="yes" xml:space="preserve">
          <source>This variable is defined if the target system insists on unique basenames for shared library files. This is currently true on Android, false everywhere else we know of. Defaults to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果目标系统坚持共享库文件的唯一基本名称，则定义此变量。目前在Android上为true，在我们所知的其他地方均为false。默认为 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d05cf8a5c3238974d2f2fd04b16afdd8b24c4a1a" translate="yes" xml:space="preserve">
          <source>This variable is defined if the target system insists on unique basenames for shared library files. This is currently true on Android, false everywhere else we know of. Defaults to &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">如果目标系统坚持共享库文件的唯一基本名称，则定义此变量。目前在Android上为true，在我们所知的其他地方均为false。默认为 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="438a2f52b84d08ef97749ca01be6af2cf059879d" translate="yes" xml:space="preserve">
          <source>This variable is empty unless supplied by the Configure user. It can contain a path to an alternative root directory, under which headers and libraries for the compilation target can be found. This is generally used when cross-compiling using a gcc-like compiler.</source>
          <target state="translated">除非由配置用户提供,否则这个变量是空的。它可以包含一个通往另一个根目录的路径,在这个目录下可以找到编译目标的头文件和库。这通常在使用类似gcc的编译器进行交叉编译时使用。</target>
        </trans-unit>
        <trans-unit id="ee35efa2fd2f999546ff379524f68281b087c4cf" translate="yes" xml:space="preserve">
          <source>This variable is no longer supported.</source>
          <target state="translated">此变量已不再支持。</target>
        </trans-unit>
        <trans-unit id="b994172e2c74255d8ab90abbbfe0d21ed67674e5" translate="yes" xml:space="preserve">
          <source>This variable is read-only and dynamically-scoped.</source>
          <target state="translated">这个变量是只读和动态范围的。</target>
        </trans-unit>
        <trans-unit id="1fa2151871e1b4975e68cb75f48313e72ac189c6" translate="yes" xml:space="preserve">
          <source>This variable is read-only.</source>
          <target state="translated">这个变量是只读的。</target>
        </trans-unit>
        <trans-unit id="9ed35678467f3acdb08d6502a28a6136cae960c5" translate="yes" xml:space="preserve">
          <source>This variable is really the same as archlibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与archlibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="c7b97761b16dc9f5f9ecba184c43dad35e848444" translate="yes" xml:space="preserve">
          <source>This variable is really the same as archlibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与archlibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="5e74bc7790705750de113e67001e1a300fd53d91" translate="yes" xml:space="preserve">
          <source>This variable is really the same as html1direxp, unless you are using a different installprefix. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">这个变量实际上和 html1direxp 是一样的,除非您使用不同的 installprefix。为了增加可移植性,您应该只在您的 makefile 中使用这个变量。</target>
        </trans-unit>
        <trans-unit id="d55c6831b8205aa811ac71d6d8d26cce0d1a855c" translate="yes" xml:space="preserve">
          <source>This variable is really the same as html3direxp, unless you are using a different installprefix. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">这个变量实际上和 html3direxp 是一样的,除非您使用不同的 installprefix。为了增加可移植性,您应该只在您的 makefile 中使用这个变量。</target>
        </trans-unit>
        <trans-unit id="50a7bfba00b530fee70e29ec25feaed211fa1d6a" translate="yes" xml:space="preserve">
          <source>This variable is really the same as man1direxp, unless you are using &lt;code&gt;AFS&lt;/code&gt; in which case it points to the read/write location whereas man1direxp only points to the read-only access location. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">该变量实际上与man1direxp相同，除非您使用的是 &lt;code&gt;AFS&lt;/code&gt; ,在这种情况下，它指向读/写位置，而man1direxp仅指向只读访问位置。为了获得额外的可移植性，您应该仅在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="999d681ac0ec5579727ba4615a2201604d7d6527" translate="yes" xml:space="preserve">
          <source>This variable is really the same as man3direxp, unless you are using &lt;code&gt;AFS&lt;/code&gt; in which case it points to the read/write location whereas man3direxp only points to the read-only access location. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">该变量实际上与man3direxp相同，除非您使用的是 &lt;code&gt;AFS&lt;/code&gt; ,在这种情况下，它指向读/写位置，而man3direxp仅指向只读访问位置。为了获得额外的可移植性，您应该仅在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="50afdd151ec44994a25d8b6533a689c8db499272" translate="yes" xml:space="preserve">
          <source>This variable is really the same as privlibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与privlibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="d0288a5f3ecc2bee3276641f65d0c26d26c7484e" translate="yes" xml:space="preserve">
          <source>This variable is really the same as privlibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与privlibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="34018f4da475a27d958fa480840777564a3a60a0" translate="yes" xml:space="preserve">
          <source>This variable is really the same as sitearchexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与sitearchexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="52468eafc21c7e5981867b0f8256c1a1a7794957" translate="yes" xml:space="preserve">
          <source>This variable is really the same as sitearchexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与sitearchexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="bea943fbbd3dd2d693fd02d1e8105424cad7a803" translate="yes" xml:space="preserve">
          <source>This variable is really the same as sitehtml1direxp, unless you are using &lt;code&gt;AFS&lt;/code&gt; in which case it points to the read/write location whereas html1direxp only points to the read-only access location. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">该变量实际上与sitehtml1direxp相同，除非您使用的是 &lt;code&gt;AFS&lt;/code&gt; ,在这种情况下，它指向读/写位置，而html1direxp仅指向只读访问位置。为了获得额外的可移植性，您应该仅在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="45d79d3eb206ef4c15f60dedd6aea3e6410af2c3" translate="yes" xml:space="preserve">
          <source>This variable is really the same as sitehtml3direxp, unless you are using &lt;code&gt;AFS&lt;/code&gt; in which case it points to the read/write location whereas html3direxp only points to the read-only access location. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">除非您使用的是 &lt;code&gt;AFS&lt;/code&gt; ，否则此变量实际上与sitehtml3direxp相同，在这种情况下，它指向读/写位置，而html3direxp仅指向只读访问位置。为了获得额外的可移植性，您应该仅在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="7957319e58af526cf1b091d0ef7e541ca87afab9" translate="yes" xml:space="preserve">
          <source>This variable is really the same as sitelibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与sitelibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="2df24f43a61a1fa03f9a808d630efd7800f378c1" translate="yes" xml:space="preserve">
          <source>This variable is really the same as sitelibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与sitelibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="70355eafb6a69bb2fb90974b9c7427568cf25e7c" translate="yes" xml:space="preserve">
          <source>This variable is really the same as siteman1direxp, unless you are using &lt;code&gt;AFS&lt;/code&gt; in which case it points to the read/write location whereas man1direxp only points to the read-only access location. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">该变量实际上与siteman1direxp相同，除非您使用的是 &lt;code&gt;AFS&lt;/code&gt; ,在这种情况下，它指向读/写位置，而man1direxp仅指向只读访问位置。为了获得额外的可移植性，您应该仅在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="01ab2ec5205fd8a6ae9e2c46b8f01e25f6f082c0" translate="yes" xml:space="preserve">
          <source>This variable is really the same as siteman3direxp, unless you are using &lt;code&gt;AFS&lt;/code&gt; in which case it points to the read/write location whereas man3direxp only points to the read-only access location. For extra portability, you should only use this variable within your makefiles.</source>
          <target state="translated">该变量实际上与siteman3direxp相同，除非您使用的是 &lt;code&gt;AFS&lt;/code&gt; ,在这种情况下，它指向读/写位置，而man3direxp仅指向只读访问位置。为了获得额外的可移植性，您应该仅在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="b623ff8c0c787fbe302ea47c2d37c73c90761cea" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorarchexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorarchexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="388de97bfc55f93d9aa8a610e6654b0be490a3ef" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorarchexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorarchexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="419c7fab5c49b8960bb4adc3967427dec7408564" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorbinexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量确实与vendorbinexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="725ed33b6cdfb8dfb0275db3c216c6c6539f8de4" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorbinexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorbinexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="3dde84202d73dd762519711107d71200f961e048" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorhtml1direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorhtml1direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="f458e5c09a310a571cd770a22004c872687bf4d5" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorhtml1direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorhtml1direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="b179dc37f4ad39ba568301ac153d5a72f010eaa0" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorhtml3direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">此变量实际上与vendorhtml3direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="9aaaab97337b322e15c18bb6d323eb92aa7d4fc1" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorhtml3direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorhtml3direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="9750eb69d2d34215cb53f734f3e642aa5a73ed65" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorlibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorlibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="825fe3bc507b8b6c58dc4d556d5e8c6b7dd97b22" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorlibexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorlibexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="21b154ff80aa7714d3e43e4f3b8ca378cb141c61" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorman1direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorman1direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="6181ee94ebdeed0047d5a6e1dd9f1edb76f00ddf" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorman1direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorman1direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="dd8b4508a198efebd31cea43e79a82c47aafa7d9" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorman3direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">此变量实际上与vendorman3direxp相同，但在使用 &lt;code&gt;AFS&lt;/code&gt; 的系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="4eb4f3e11eaaa11c8123bf9ba8e7b356a1197642" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorman3direxp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">此变量实际上与vendorman3direxp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="58c74522c48ef7271151c76300c619a62c9d0241" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorscriptexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt; . For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">此变量实际上与vendorscriptexp相同，但在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了提高可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="97b179805e5a542db57b94935fa2fb69569de585" translate="yes" xml:space="preserve">
          <source>This variable is really the same as vendorscriptexp but may differ on those systems using &lt;code&gt;AFS&lt;/code&gt;. For extra portability, only this variable should be used in makefiles.</source>
          <target state="translated">该变量实际上与vendorscriptexp相同，但是在使用 &lt;code&gt;AFS&lt;/code&gt; 的那些系统上可能有所不同。为了获得更高的可移植性，makefile中仅应使用此变量。</target>
        </trans-unit>
        <trans-unit id="810fd248fc75863b9e5a25a636083775a330d4a1" translate="yes" xml:space="preserve">
          <source>This variable is set during Perl startup and is thereafter read-only.</source>
          <target state="translated">这个变量在Perl启动时设置,之后是只读的。</target>
        </trans-unit>
        <trans-unit id="6899a5826d3dd415cbabf0ad51f385d86e6f15c8" translate="yes" xml:space="preserve">
          <source>This variable is set if the user needs to run ansi2knr. Currently, this is not supported, so we just abort.</source>
          <target state="translated">如果用户需要运行ansi2knr,则设置这个变量,目前不支持,所以我们只需中止。</target>
        </trans-unit>
        <trans-unit id="6e16668d152fc94801a0f911730fa94354a063cc" translate="yes" xml:space="preserve">
          <source>This variable is set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AFS&lt;/code&gt; (Andrew File System) is used on the system, &lt;code&gt;false&lt;/code&gt; otherwise. It is possible to override this with a hint value or command line option, but you'd better know what you are doing.</source>
          <target state="translated">如果在系统上使用 &lt;code&gt;AFS&lt;/code&gt; （Andrew文件系统），则此变量设置为 &lt;code&gt;true&lt;/code&gt; ,否则设置为 &lt;code&gt;false&lt;/code&gt; 。可以使用提示值或命令行选项来覆盖它，但是您最好知道自己在做什么。</target>
        </trans-unit>
        <trans-unit id="17b9f4d814d6b072856824ec57ca5295208fac52" translate="yes" xml:space="preserve">
          <source>This variable is set to &lt;code&gt;true&lt;/code&gt; if the user wishes to build a shared libperl, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果用户希望构建共享的libperl，则此变量设置为 &lt;code&gt;true&lt;/code&gt; ,否则设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="007e4ab83b15b57fff0020159c2c5c1f519f20fb" translate="yes" xml:space="preserve">
          <source>This variable is set to either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether the compilation system supports the</source>
          <target state="translated">根据编译系统是否支持该变量，将此变量设置为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13f5a8ad06f8210a3d258db2e56f63f1a0bb3741" translate="yes" xml:space="preserve">
          <source>This variable is set to the pathname of the ranlib program, if it is needed to generate random libraries. Set to &lt;code&gt;:&lt;/code&gt; if ar can generate random libraries or if random libraries are not supported</source>
          <target state="translated">如果需要生成随机库，则将该变量设置为ranlib程序的路径名。设置为 &lt;code&gt;:&lt;/code&gt; 如果ar可以生成随机库，或者不支持随机库</target>
        </trans-unit>
        <trans-unit id="e326c71eb086e3d88af32485f7ded61e3c037c60" translate="yes" xml:space="preserve">
          <source>This variable is set to true to indicate that perl should relocate @&lt;code&gt;INC&lt;/code&gt; entries at runtime based on the path to the perl binary. Any @&lt;code&gt;INC&lt;/code&gt; paths starting</source>
          <target state="translated">此变量设置为true，以指示perl应在运行时根据perl二进制文件的路径重新定位@ &lt;code&gt;INC&lt;/code&gt; 条目。任何@ &lt;code&gt;INC&lt;/code&gt; 路径开始</target>
        </trans-unit>
        <trans-unit id="e96912472278f99e1406c9b20c15ac7755aeeae3" translate="yes" xml:space="preserve">
          <source>This variable is set to true when the user accepts to use vfork. It is set to false when no vfork is available or when the user explicitly requests not to use vfork.</source>
          <target state="translated">当用户接受使用vfork时,这个变量被设置为true,当没有vfork或用户明确要求不使用vfork时,它被设置为false。当没有vfork可用或用户明确要求不使用vfork时,该变量被设置为false。</target>
        </trans-unit>
        <trans-unit id="78a76ad3dff1cd7280ddc55d4c477a35972ada82" translate="yes" xml:space="preserve">
          <source>This variable is set to true when the user requires a mechanism that allows the sysadmin to add entries to @&lt;code&gt;INC&lt;/code&gt; at runtime. This variable being set, makes perl run</source>
          <target state="translated">当用户需要一种允许sysadmin 在运行时将条目添加到@ &lt;code&gt;INC&lt;/code&gt; 的机制时，将此变量设置为true 。设置此变量，使perl运行</target>
        </trans-unit>
        <trans-unit id="a862a983beaa291a37770e6a6356b9960f9204e4" translate="yes" xml:space="preserve">
          <source>This variable is the</source>
          <target state="translated">这个变量是</target>
        </trans-unit>
        <trans-unit id="f7e5e5e3de9c01fc6b721beb3ed50f8f0758ebbf" translate="yes" xml:space="preserve">
          <source>This variable is the same as binexp unless &lt;code&gt;AFS&lt;/code&gt; is running in which case the user is explicitly prompted for it. This variable should always be used in your makefiles for maximum portability.</source>
          <target state="translated">除非正在运行 &lt;code&gt;AFS&lt;/code&gt; ，否则此变量与binexp相同，在这种情况下会明确提示用户输入该变量。为了最大的可移植性，应始终在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="8c3919634a5ad3e8ed0f82c0eda3efc42d6b3640" translate="yes" xml:space="preserve">
          <source>This variable is the same as scriptdir, but is filename expanded at configuration time, for programs not wanting to bother with it.</source>
          <target state="translated">这个变量和scriptdir一样,但在配置时扩展了文件名,以便于程序不想为它费心。</target>
        </trans-unit>
        <trans-unit id="2123b620e822bcdfe3648baf5e383aa0450097bc" translate="yes" xml:space="preserve">
          <source>This variable is the same as the archlib variable, but is filename expanded at configuration time, for convenient use.</source>
          <target state="translated">这个变量与archlib变量相同,但在配置时扩展了文件名,方便使用。</target>
        </trans-unit>
        <trans-unit id="6c0ee0ff94fdfd65be0eadf5caeb8d85f2795739" translate="yes" xml:space="preserve">
          <source>This variable is the same as the html1dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 html1dir 变量相同,但在配置时扩展了文件名,方便在 makefile 中使用。</target>
        </trans-unit>
        <trans-unit id="1d6f2c324ea1c7f18f4e354fe859b70d0620f36a" translate="yes" xml:space="preserve">
          <source>This variable is the same as the html3dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 html3dir 变量相同,但在配置时扩展了文件名,方便在 makefile 中使用。</target>
        </trans-unit>
        <trans-unit id="e1de0cbcfe39efe0be07beb03f93ddf9334e35e7" translate="yes" xml:space="preserve">
          <source>This variable is the same as the man1dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与man1dir变量相同,但在配置时扩展了文件名,方便在makefiles中使用。</target>
        </trans-unit>
        <trans-unit id="dd8b85550c57901175ee874061659585fed98949" translate="yes" xml:space="preserve">
          <source>This variable is the same as the man3dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 man3dir 变量相同,但在配置时扩展了文件名,方便在 makefile 中使用。</target>
        </trans-unit>
        <trans-unit id="c4f283164bb5d1bde4a431c6e8f65dd5a43e683c" translate="yes" xml:space="preserve">
          <source>This variable is the same as the sitehtml1dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 sitehtml1dir 变量相同,但在配置时扩展了文件名,方便在 makefiles 中使用。</target>
        </trans-unit>
        <trans-unit id="0add776a8d076c56a099328a200dcb183e4e8de8" translate="yes" xml:space="preserve">
          <source>This variable is the same as the sitehtml3dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 sitehtml3dir 变量相同,但在配置时扩展了文件名,方便在 makefiles 中使用。</target>
        </trans-unit>
        <trans-unit id="97b9449b8fb9d7b64c271a02aa81ce89a29b3659" translate="yes" xml:space="preserve">
          <source>This variable is the same as the siteman1dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 siteman1dir 变量相同,但在配置时扩展了文件名,方便在 makefiles 中使用。</target>
        </trans-unit>
        <trans-unit id="83527f5b42856a247b794e5d16c6d400e55378eb" translate="yes" xml:space="preserve">
          <source>This variable is the same as the siteman3dir variable, but is filename expanded at configuration time, for convenient use in makefiles.</source>
          <target state="translated">这个变量与 siteman3dir 变量相同,但在配置时扩展了文件名,方便在 makefile 中使用。</target>
        </trans-unit>
        <trans-unit id="26f87cee2d0b058ef6b1b7b2ab4579bade1d8312" translate="yes" xml:space="preserve">
          <source>This variable is the size of a &lt;code&gt;UV&lt;/code&gt; in bytes.</source>
          <target state="translated">此变量是 &lt;code&gt;UV&lt;/code&gt; 的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="3a64db50ff71e0a329ed77aa96ddc41780e6c96c" translate="yes" xml:space="preserve">
          <source>This variable is the size of a Perl &lt;code&gt;NV&lt;/code&gt; in bytes. Note that some floating point formats have unused bytes.</source>
          <target state="translated">此变量是Perl &lt;code&gt;NV&lt;/code&gt; 的大小（以字节为单位）。请注意，某些浮点格式具有未使用的字节。</target>
        </trans-unit>
        <trans-unit id="3fcddfc8480fab2e6837b2a2309ba373a3ad0329" translate="yes" xml:space="preserve">
          <source>This variable is the size of an &lt;code&gt;IV&lt;/code&gt; in bytes.</source>
          <target state="translated">此变量是 &lt;code&gt;IV&lt;/code&gt; 的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="509f77ea9800cc190d87729ac5229648994695e7" translate="yes" xml:space="preserve">
          <source>This variable is the size of an I16 in bytes.</source>
          <target state="translated">这个变量是I16的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="7573d3aaa98e16789e91568e5e20f9dd62c7781a" translate="yes" xml:space="preserve">
          <source>This variable is the size of an I32 in bytes.</source>
          <target state="translated">这个变量是I32的大小,单位是字节。</target>
        </trans-unit>
        <trans-unit id="0d4173d02d00bf42b0446cd88a98af8fdad85400" translate="yes" xml:space="preserve">
          <source>This variable is the size of an I64 in bytes.</source>
          <target state="translated">这个变量是I64的大小,单位是字节。</target>
        </trans-unit>
        <trans-unit id="4cf88f21c1117b8dcf54efd63224b9e20a3b07a1" translate="yes" xml:space="preserve">
          <source>This variable is the size of an I8 in bytes.</source>
          <target state="translated">这个变量是I8的大小,单位是字节。</target>
        </trans-unit>
        <trans-unit id="8fd347f6d28de13c64330af7f091b23a39b60b02" translate="yes" xml:space="preserve">
          <source>This variable is the size of an U16 in bytes.</source>
          <target state="translated">这个变量是U16的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="c6e9458dee656c7b37b07377ec6d8b3505d200fa" translate="yes" xml:space="preserve">
          <source>This variable is the size of an U32 in bytes.</source>
          <target state="translated">这个变量是U32的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="bee40658c5a4aeb1200cbc282feb3185d248d855" translate="yes" xml:space="preserve">
          <source>This variable is the size of an U64 in bytes.</source>
          <target state="translated">这个变量是U64的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="9342a54a087f15eac23a2878ba998e4936f3aded" translate="yes" xml:space="preserve">
          <source>This variable is the size of an U8 in bytes.</source>
          <target state="translated">这个变量是U8的大小,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="018225ba228dc3f483ce8d8f19998d8fd590abeb" translate="yes" xml:space="preserve">
          <source>This variable is used for the 64-bitness part of $archname.</source>
          <target state="translated">这个变量用于表示$archname的64-bitness部分。</target>
        </trans-unit>
        <trans-unit id="cafa7fdb1ab1cb50623ad179359f0208ff71ea47" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the ar program. After Configure runs, the value is reset to a plain &lt;code&gt;ar&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定ar程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;ar&lt;/code&gt; ,并且无用。</target>
        </trans-unit>
        <trans-unit id="4a43ffc4e7759d305bc8fcad420c3ecf5147ba0e" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the awk program. After Configure runs, the value is reset to a plain &lt;code&gt;awk&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定awk程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;awk&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="95cf374646ddb3e9aa4901f073dd57999e9facea" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the bison program. After Configure runs, the value is reset to a plain &lt;code&gt;bison&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定野牛程序的完整路径名（如果有）。配置运行后，该值将重置为普通 &lt;code&gt;bison&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="99af84b2af938a941cf679c645674054506a6e73" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the byacc program. After Configure runs, the value is reset to a plain &lt;code&gt;byacc&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定byacc程序的完整路径名（如果有）。运行Configure之后，该值将重置为纯 &lt;code&gt;byacc&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="8860a58fab40bbd4b287351313d685ad7736cc01" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the cat program. After Configure runs, the value is reset to a plain &lt;code&gt;cat&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定cat程序的完整路径名（如果有）。运行Configure后，该值将重置为普通 &lt;code&gt;cat&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="3135d55aeb898a8a92ab427f140ec217dc594895" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the chmod program. After Configure runs, the value is reset to a plain &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定chmod程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="2deb047eb80721c3be954961416cedbda46ac55f" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the chmod program. After Configure runs, the value is reset to a plain &lt;code&gt;chmod&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定chmod程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;chmod&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="b6a7312b6e4f0f9c2b689bf9e247a8f1ded24f90" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the comm program. After Configure runs, the value is reset to a plain &lt;code&gt;comm&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定comm程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;comm&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="9bd5e095ac9bd8ac6418b107fda9174db13910fa" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the cp program. After Configure runs, the value is reset to a plain &lt;code&gt;cp&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定cp程序的完整路径名（如果有）。运行Configure之后，该值将重置为纯 &lt;code&gt;cp&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="8bb18f0bb346bc78558664c287abeffbf55c011f" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the cpp program. After Configure runs, the value is reset to a plain &lt;code&gt;cpp&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定cpp程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;cpp&lt;/code&gt; ,并且无用。</target>
        </trans-unit>
        <trans-unit id="c1c84e1955563d74e3ad50d1d7515422e80d2350" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the csh program. After Configure runs, the value is reset to a plain &lt;code&gt;csh&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定csh程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;csh&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="bdd8e5c138ebe8284eadf99c58ad6cd781806fb3" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the date program. After Configure runs, the value is reset to a plain &lt;code&gt;date&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定日期程序的完整路径名（如果有）。配置运行后，该值将重置为原始 &lt;code&gt;date&lt;/code&gt; 并且无用。</target>
        </trans-unit>
        <trans-unit id="a6ac81210b0bc2a8ad1694015f35ce937a81b0fb" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the echo program. After Configure runs, the value is reset to a plain &lt;code&gt;echo&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定回显程序的完整路径名（如果有）。配置运行后，该值将重置为普通 &lt;code&gt;echo&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="2b6e334c267834e99a027d238d14bba5601ac9b6" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the egrep program. After Configure runs, the value is reset to a plain &lt;code&gt;egrep&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定egrep程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;egrep&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="009c3270bd9f47fb99eefebac6f86488db643c7d" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the expr program. After Configure runs, the value is reset to a plain &lt;code&gt;expr&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定expr程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;expr&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="7c613e1382a31501efc804fc4d8acaa28f1dfcf7" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the gmake program. After Configure runs, the value is reset to a plain &lt;code&gt;gmake&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定gmake程序的完整路径名（如果有）。运行Configure后，该值将重置为普通的 &lt;code&gt;gmake&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="6b40acfb3ed646d47a439f54bcee3b29ef3afcdc" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the grep program. After Configure runs, the value is reset to a plain &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure内部使用此变量来确定grep程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; ,并且无用。</target>
        </trans-unit>
        <trans-unit id="08783fc5da0c350ac4819cf46fde7114cb84d96c" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the grep program. After Configure runs, the value is reset to a plain &lt;code&gt;grep&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定grep程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;grep&lt;/code&gt; ,并且无用。</target>
        </trans-unit>
        <trans-unit id="9b36018f3c73be8f055672b9bf7a587b92e52bb0" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the gzip program. After Configure runs, the value is reset to a plain &lt;code&gt;gzip&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定gzip程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;gzip&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="77d721e2749f2412f21272e73849986d4a142e72" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the less program. After Configure runs, the value is reset to a plain &lt;code&gt;less&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure内部使用此变量来确定less程序的完整路径名（如果有）。运行Configure后，该值将重置为一个 &lt;code&gt;less&lt;/code&gt; 的值，并且没有用。</target>
        </trans-unit>
        <trans-unit id="fa1424961bee5eee2bf1426420dae32ea3094721" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the ln program. After Configure runs, the value is reset to a plain &lt;code&gt;ln&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定ln程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;ln&lt;/code&gt; ,并且无用。</target>
        </trans-unit>
        <trans-unit id="65f251104aa914960f09050e80f65d4c433487aa" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the ls program. After Configure runs, the value is reset to a plain &lt;code&gt;ls&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure在内部使用，以确定ls程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;ls&lt;/code&gt; 且无用。</target>
        </trans-unit>
        <trans-unit id="1b5ee5bc0e134b5f95d85702e6e2d398289142fc" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the make program. After Configure runs, the value is reset to a plain &lt;code&gt;make&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定make程序的完整路径名（如果有）。配置运行后，该值将重置为普通 &lt;code&gt;make&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="744ad0880cace18fa215312fdf99a49919ec701f" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the mkdir program. After Configure runs, the value is reset to a plain &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定mkdir程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; 且无用。</target>
        </trans-unit>
        <trans-unit id="2083afbb6ffdff21b2f6a8bc408352ac05b200cc" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the mkdir program. After Configure runs, the value is reset to a plain &lt;code&gt;mkdir&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定mkdir程序的完整路径名（如果有）。运行Configure之后，该值将重置为纯 &lt;code&gt;mkdir&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="7e4fd88b59349429f1ba846d193845169632f0ae" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the more program. After Configure runs, the value is reset to a plain &lt;code&gt;more&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure内部使用此变量来确定more程序的完整路径名（如果有）。配置运行后，值被复位为一个普通的 &lt;code&gt;more&lt;/code&gt; 并且是没有用的。</target>
        </trans-unit>
        <trans-unit id="7a82b160af8bcd4e76718aed64697ee09d69e794" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the nm program. After Configure runs, the value is reset to a plain &lt;code&gt;nm&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定nm程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;nm&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="4d5aaade193ddd818ef2032ec15984484a7dde1c" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the nroff program. After Configure runs, the value is reset to a plain &lt;code&gt;nroff&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定nroff程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;nroff&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="2f0926218d0bb1f93722013193d4320b8bb5ba4f" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the perl program. After Configure runs, the value is reset to a plain &lt;code&gt;perl&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定perl程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;perl&lt;/code&gt; 并且无用。</target>
        </trans-unit>
        <trans-unit id="aa7fe1387877c317234ea7e4c47059e69955a1ac" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the pg program. After Configure runs, the value is reset to a plain &lt;code&gt;pg&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定pg程序的完整路径名（如果有）。配置运行后，该值将重置为纯 &lt;code&gt;pg&lt;/code&gt; ，无用。</target>
        </trans-unit>
        <trans-unit id="98b71e9251a2652da024c60ecebea65afc6661b9" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the rm program. After Configure runs, the value is reset to a plain &lt;code&gt;rm&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定rm程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;rm&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="38755f22f1cc16f6da8a7c53276b2d7dfe2983be" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the sed program. After Configure runs, the value is reset to a plain &lt;code&gt;sed&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定sed程序的完整路径名（如果有）。配置运行后，值被复位为一个普通 &lt;code&gt;sed&lt;/code&gt; 并且不是有用的。</target>
        </trans-unit>
        <trans-unit id="7b7165488c50ef7a6c02f7ed5de71b2345e8f9b6" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the sort program. After Configure runs, the value is reset to a plain &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定排序程序的完整路径名（如果有）。配置运行后，该值将重置为普通 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="55fa8bc8ee47a36a2df2ec890786fc568105f894" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the sort program. After Configure runs, the value is reset to a plain &lt;code&gt;sort&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定排序程序的完整路径名（如果有）。运行Configure后，该值将重置为普通 &lt;code&gt;sort&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="53aff58e0d1462752cc4e7d201d457805a2f1086" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the test program. After Configure runs, the value is reset to a plain &lt;code&gt;test&lt;/code&gt; and is not useful.</source>
          <target state="translated">该变量由Configure内部使用，以确定测试程序的完整路径名（如果有）。配置运行后，该值将重置为普通 &lt;code&gt;test&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="cb486fbb72146b39bd866df9d65908c560cacd8d" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the touch program. After Configure runs, the value is reset to a plain &lt;code&gt;touch&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定触摸程序的完整路径名（如果有）。运行&amp;ldquo;配置&amp;rdquo;后，该值将重置为纯 &lt;code&gt;touch&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="27dfd9853f59e3abc8b26fedaaf1d68c1bb2ebbb" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the tr program. After Configure runs, the value is reset to a plain &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; and is not useful.</source>
          <target state="translated">Configure在内部使用此变量来确定tr程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="fec52914f0285d5a1fbb83beeb60e2a1e68b39a8" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the tr program. After Configure runs, the value is reset to a plain &lt;code&gt;tr&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定tr程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;tr&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="72c85eba28014b20220c69c6783d2f9366450300" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the uname program. After Configure runs, the value is reset to a plain &lt;code&gt;uname&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure内部使用，以确定uname程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;uname&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="3f9914faa62081d6431f26e1217ca40b4ce3a973" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the uniq program. After Configure runs, the value is reset to a plain &lt;code&gt;uniq&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定uniq程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;uniq&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="45d7e075b81b0f7f804813b898bc650e9d75f256" translate="yes" xml:space="preserve">
          <source>This variable is used internally by Configure to determine the full pathname (if any) of the zip program. After Configure runs, the value is reset to a plain &lt;code&gt;zip&lt;/code&gt; and is not useful.</source>
          <target state="translated">此变量由Configure在内部使用，以确定zip程序的完整路径名（如果有）。运行Configure后，该值将重置为纯 &lt;code&gt;zip&lt;/code&gt; ，并且没有用。</target>
        </trans-unit>
        <trans-unit id="571e3cc68685a935369dc84741a86b8a5366fb42" translate="yes" xml:space="preserve">
          <source>This variable is usually the same as scriptdirexp, unless you are on a system running &lt;code&gt;AFS&lt;/code&gt; , in which case they may differ slightly. You should always use this variable within your makefiles for portability.</source>
          <target state="translated">除非您在运行 &lt;code&gt;AFS&lt;/code&gt; 的系统上，否则此变量通常与scriptdirexp相同，在这种情况下，它们可能会略有不同。为了可移植性，您应该始终在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="91145c7f9478a68b6bb3f11c00b1820bcbb60064" translate="yes" xml:space="preserve">
          <source>This variable is usually the same as scriptdirexp, unless you are on a system running &lt;code&gt;AFS&lt;/code&gt;, in which case they may differ slightly. You should always use this variable within your makefiles for portability.</source>
          <target state="translated">除非您在运行 &lt;code&gt;AFS&lt;/code&gt; 的系统上，否则此变量通常与scriptdirexp相同，在这种情况下，它们可能会略有不同。您应该始终在makefile中使用此变量以实现可移植性。</target>
        </trans-unit>
        <trans-unit id="b3aa39786b9d4d7129f7471ce2e3b36215c549da" translate="yes" xml:space="preserve">
          <source>This variable is usually the same as sitebinexp, unless you are on a system running &lt;code&gt;AFS&lt;/code&gt; , in which case they may differ slightly. You should always use this variable within your makefiles for portability.</source>
          <target state="translated">除非您在运行 &lt;code&gt;AFS&lt;/code&gt; 的系统上，否则此变量通常与sitebinexp相同，在这种情况下，它们可能会略有不同。为了可移植性，您应该始终在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="f97ded6c1b8b44487f59ceb2cbba88dc380e1c24" translate="yes" xml:space="preserve">
          <source>This variable is usually the same as sitebinexp, unless you are on a system running &lt;code&gt;AFS&lt;/code&gt;, in which case they may differ slightly. You should always use this variable within your makefiles for portability.</source>
          <target state="translated">除非您在运行 &lt;code&gt;AFS&lt;/code&gt; 的系统上，否则此变量通常与sitebinexp相同，在这种情况下，它们可能会略有不同。您应该始终在makefile中使用此变量以实现可移植性。</target>
        </trans-unit>
        <trans-unit id="45b52c0cb08be0e04216436b97b6099f82b1dd20" translate="yes" xml:space="preserve">
          <source>This variable is usually the same as sitescriptexp, unless you are on a system running &lt;code&gt;AFS&lt;/code&gt; , in which case they may differ slightly. You should always use this variable within your makefiles for portability.</source>
          <target state="translated">除非您在运行 &lt;code&gt;AFS&lt;/code&gt; 的系统上，否则此变量通常与sitescriptexp相同，在这种情况下，它们可能会略有不同。为了可移植性，您应该始终在makefile中使用此变量。</target>
        </trans-unit>
        <trans-unit id="074aa0706e0c0729f388d508be8808e0751b20f3" translate="yes" xml:space="preserve">
          <source>This variable is usually the same as sitescriptexp, unless you are on a system running &lt;code&gt;AFS&lt;/code&gt;, in which case they may differ slightly. You should always use this variable within your makefiles for portability.</source>
          <target state="translated">除非您在运行 &lt;code&gt;AFS&lt;/code&gt; 的系统上，否则此变量通常与sitescriptexp相同，在这种情况下，它们可能会略有不同。您应该始终在makefile中使用此变量以实现可移植性。</target>
        </trans-unit>
        <trans-unit id="0e0d79399e6ff81639ca7d69ba6ebfee357f7c2a" translate="yes" xml:space="preserve">
          <source>This variable makes &lt;code&gt;carp()&lt;/code&gt; and &lt;code&gt;croak()&lt;/code&gt; generate stack backtraces just like &lt;code&gt;cluck()&lt;/code&gt; and &lt;code&gt;confess()&lt;/code&gt; . This is how &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Carp 'verbose'&lt;/code&gt; is implemented internally.</source>
          <target state="translated">该变量使 &lt;code&gt;carp()&lt;/code&gt; 和 &lt;code&gt;croak()&lt;/code&gt; 生成堆栈回溯，就像 &lt;code&gt;cluck()&lt;/code&gt; 和 &lt;code&gt;confess()&lt;/code&gt; 一样。这就是内部 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Carp 'verbose'&lt;/code&gt; 方式。</target>
        </trans-unit>
        <trans-unit id="d00c0c3f763948a924f86ac5fd4782d1dc6e60c9" translate="yes" xml:space="preserve">
          <source>This variable makes &lt;code&gt;carp()&lt;/code&gt; and &lt;code&gt;croak()&lt;/code&gt; generate stack backtraces just like &lt;code&gt;cluck()&lt;/code&gt; and &lt;code&gt;confess()&lt;/code&gt;. This is how &lt;code&gt;use Carp 'verbose'&lt;/code&gt; is implemented internally.</source>
          <target state="translated">此变量使 &lt;code&gt;carp()&lt;/code&gt; 和 &lt;code&gt;croak()&lt;/code&gt; 像 &lt;code&gt;cluck()&lt;/code&gt; 和 &lt;code&gt;confess()&lt;/code&gt; 一样生成堆栈回溯。这就是内部 &lt;code&gt;use Carp 'verbose'&lt;/code&gt; 方式。</target>
        </trans-unit>
        <trans-unit id="1c9399d4b0d54d58afe31981aca3b57c88106d7e" translate="yes" xml:space="preserve">
          <source>This variable must precede the normal include path to get the right one, as in</source>
          <target state="translated">这个变量必须在正常的include路径之前,才能得到正确的路径,比如在</target>
        </trans-unit>
        <trans-unit id="47d3e94fd5e31189a0f4a13c643cffba5bdfecb4" translate="yes" xml:space="preserve">
          <source>This variable provides direct access to VMS status values in vaxc$errno, which are often more specific than the generic Unix-style error messages in &lt;code&gt;$!&lt;/code&gt; . Its numeric value is the value of vaxc$errno, and its string value is the corresponding VMS message string, as retrieved by sys$getmsg(). Setting &lt;code&gt;$^E&lt;/code&gt; sets vaxc$errno to the value specified.</source>
          <target state="translated">此变量提供对vaxc $ errno中的VMS状态值的直接访问，该值通常比 &lt;code&gt;$!&lt;/code&gt; 中的通用Unix样式错误消息更具体。。它的数值是vaxc $ errno的值，其字符串值是相应的VMS消息字符串，由sys $ getmsg（）检索。设置 &lt;code&gt;$^E&lt;/code&gt; 会将vaxc $ errno设置为指定的值。</target>
        </trans-unit>
        <trans-unit id="d32617362a476ede2339b85ae3466dade2edcdbc" translate="yes" xml:space="preserve">
          <source>This variable provides direct access to VMS status values in vaxc$errno, which are often more specific than the generic Unix-style error messages in &lt;code&gt;$!&lt;/code&gt;. Its numeric value is the value of vaxc$errno, and its string value is the corresponding VMS message string, as retrieved by sys$getmsg(). Setting &lt;code&gt;$^E&lt;/code&gt; sets vaxc$errno to the value specified.</source>
          <target state="translated">此变量提供对vaxc $ errno中的VMS状态值的直接访问，该值通常比 &lt;code&gt;$!&lt;/code&gt; 中的通用Unix样式的错误消息更具体。。它的数值是vaxc $ errno的值，其字符串值是相应的VMS消息字符串，由sys $ getmsg（）检索。设置 &lt;code&gt;$^E&lt;/code&gt; 会将vaxc $ errno设置为指定的值。</target>
        </trans-unit>
        <trans-unit id="c65e2bf13c9e205e35cd67ed1f92c6d441a3ed5c" translate="yes" xml:space="preserve">
          <source>This variable saves the result from configure if generated binaries are in &lt;code&gt;ELF&lt;/code&gt; format. Only set to defined when the test has actually been performed, and the result was positive.</source>
          <target state="translated">如果生成的二进制文件为 &lt;code&gt;ELF&lt;/code&gt; 格式，则此变量将保存来自configure的结果。仅在实际执行测试且结果为肯定时才设置为defined。</target>
        </trans-unit>
        <trans-unit id="9b39166bbb9c952b273549b70649d44448918c67" translate="yes" xml:space="preserve">
          <source>This variable sets a general argument formatter to display references. Plain scalars and objects that implement &lt;code&gt;CARP_TRACE&lt;/code&gt; will not go through this formatter. Calling &lt;code&gt;Carp&lt;/code&gt; from within this function is not supported.</source>
          <target state="translated">此变量设置常规参数格式化程序以显示引用。实现 &lt;code&gt;CARP_TRACE&lt;/code&gt; 的普通标量和对象将不通过此格式化程序。不支持从此功能内调用 &lt;code&gt;Carp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="311cafbd7b64d08d13202dff34007567f089a3c9" translate="yes" xml:space="preserve">
          <source>This variable should be non-empty if non-versioned shared libraries (</source>
          <target state="translated">如果是非版本化的共享库,这个变量应该是非空的(</target>
        </trans-unit>
        <trans-unit id="b8f7f59f92a41a309f2960753f9fe56dca1e1ebd" translate="yes" xml:space="preserve">
          <source>This variable shows if the loader accepts scripts in the form of -Wl,--version-script=</source>
          <target state="translated">这个变量显示加载器是否接受-Wl,--version-script=这种形式的脚本。</target>
        </trans-unit>
        <trans-unit id="d16ff2badb89345a88dec337cf8812f1b2ae4d77" translate="yes" xml:space="preserve">
          <source>This variable specifies the list of subdirectories in over which</source>
          <target state="translated">这个变量指定了子目录的列表,其中的</target>
        </trans-unit>
        <trans-unit id="dd28be9b0220074830139f9210189ef37322c879" translate="yes" xml:space="preserve">
          <source>This variable stores the index of the first element in an array, and of the first character in a substring. The default is 0, but you could theoretically set it to 1 to make Perl behave more like &lt;b&gt;awk&lt;/b&gt; (or Fortran) when subscripting and when evaluating the index() and substr() functions.</source>
          <target state="translated">此变量将第一个元素的索引存储在数组中，将第一个字符的索引存储在子字符串中。默认值为0，但是理论上可以将其设置为1，以使Perl在下标以及评估index（）和substr（）函数时的行为更像&lt;b&gt;awk&lt;/b&gt;（或Fortran）。</target>
        </trans-unit>
        <trans-unit id="00bf900bc17346d76f185309081cf1ecab7829b9" translate="yes" xml:space="preserve">
          <source>This variable tells further Configure units whether your sh can handle # comments.</source>
          <target state="translated">这个变量进一步告诉配置单位你的sh是否可以处理#注释。</target>
        </trans-unit>
        <trans-unit id="87a80329c7a7a8a353fe35ffe6733f3aa1460fc4" translate="yes" xml:space="preserve">
          <source>This variable tells how many bits the mantissa of a Perl &lt;code&gt;NV&lt;/code&gt; has, not including the possible implicit bit.</source>
          <target state="translated">该变量表明Perl &lt;code&gt;NV&lt;/code&gt; 的尾数有多少位，不包括可能的隐式位。</target>
        </trans-unit>
        <trans-unit id="907ba32114e33d7fdd5ef788a526df450d19f047" translate="yes" xml:space="preserve">
          <source>This variable tells the name of the array holding the stdio streams. Usual values include _iob, __iob, and __sF.</source>
          <target state="translated">这个变量告诉持有stdio流的数组名称。通常的值包括 _iob,__iob,和 __sF.</target>
        </trans-unit>
        <trans-unit id="494f95065eda468dab54f63ca3320964e75f3c2c" translate="yes" xml:space="preserve">
          <source>This variable tells whether Perl should be installed also as</source>
          <target state="translated">这个变量告诉我们是否应该将Perl也安装为</target>
        </trans-unit>
        <trans-unit id="a037df9326698e2d5f1829d2c9bf56c0ce29dce7" translate="yes" xml:space="preserve">
          <source>This variable tells whether the vendorprefix and consequently other vendor* paths are in use.</source>
          <target state="translated">这个变量告诉我们是否使用了vendorprefix以及由此产生的其他vendor*路径。</target>
        </trans-unit>
        <trans-unit id="43b0644e7ef62be40223c2fd3c8ff3478bee6235" translate="yes" xml:space="preserve">
          <source>This variable tells whether there is an array holding the stdio streams.</source>
          <target state="translated">这个变量告诉我们是否有一个数组存放stdio流。</target>
        </trans-unit>
        <trans-unit id="c3a3ba987aaf3c91c970660de1c1716dc849dee5" translate="yes" xml:space="preserve">
          <source>This variable tells whether you must access character data through U32-aligned pointers.</source>
          <target state="translated">这个变量告诉你是否必须通过U32对齐的指针访问字符数据。</target>
        </trans-unit>
        <trans-unit id="04f1d478019a236eac59bdea6132aa61fea5df52" translate="yes" xml:space="preserve">
          <source>This variable unconditionally defines &lt;code&gt;I_TIME&lt;/code&gt;, which indicates to the C program that it should include &amp;lt;time.h&amp;gt;.</source>
          <target state="translated">此变量无条件定义 &lt;code&gt;I_TIME&lt;/code&gt; ，它向C程序指示它应包含&amp;lt;time.h&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="43ba6d18588bec9f33d9d32b5e508f1122cc315f" translate="yes" xml:space="preserve">
          <source>This variable unconditionally defines the &lt;code&gt;I_STDLIB&lt;/code&gt; symbol.</source>
          <target state="translated">此变量无条件定义 &lt;code&gt;I_STDLIB&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="07e6ee1d0b469c2a316d51271c2e2061c91523d2" translate="yes" xml:space="preserve">
          <source>This variable used to have a special meaning -- it could be used to control how numbers were formatted when printed. This seldom used functionality was removed in Perl 5.10. In order to free up the variable for a future special meaning, its use will be a fatal error in Perl 5.30.</source>
          <target state="translated">这个变量曾经有一个特殊的意义--它可以用来控制数字在打印时的格式。这个很少使用的功能在 Perl 5.10 中被删除了。为了给这个变量腾出空间,以便将来有特殊的意义,在Perl 5.30中,使用这个变量将是一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="b841e0784cac14c877cb5316ef01fba810c1946b" translate="yes" xml:space="preserve">
          <source>This variable was added in 5.25.7</source>
          <target state="translated">这个变量是在5.25.7中添加的。</target>
        </trans-unit>
        <trans-unit id="e0df6b39148d59f299e4cde68d7e93d1379e4cd9" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl 5.003.</source>
          <target state="translated">这个变量是在Perl 5.003中加入的。</target>
        </trans-unit>
        <trans-unit id="2dd0be83736a8bae79e56b1656c3b08d37e549b1" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl 5.004.</source>
          <target state="translated">这个变量是在Perl 5.004中加入的。</target>
        </trans-unit>
        <trans-unit id="311fc40d984f46456ec94abb16d77586cc2d734e" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl 5.005.</source>
          <target state="translated">这个变量是在Perl 5.005中加入的。</target>
        </trans-unit>
        <trans-unit id="247153dff2b48a81ffd2df708abe3a8417462536" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl 5.14.0.</source>
          <target state="translated">这个变量是在Perl 5.14.0中加入的。</target>
        </trans-unit>
        <trans-unit id="688acb43f14880f3366d77e2fee63a8702202f71" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl 5.8.2 and removed in 5.26.0. Setting it to anything other than &lt;code&gt;undef&lt;/code&gt; was made fatal in Perl 5.28.0.</source>
          <target state="translated">在Perl 5.8.2中添加了此变量，在5.26.0中删除了此变量。在Perl 5.28.0中，将其设置为 &lt;code&gt;undef&lt;/code&gt; 以外的任何其他设置都具有致命性。</target>
        </trans-unit>
        <trans-unit id="081a7d1c509461c2c73842efcf1f979d8d59e806" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl 5.8.2.</source>
          <target state="translated">这个变量是在Perl 5.8.2中加入的。</target>
        </trans-unit>
        <trans-unit id="2ab68154504ebd4131559dd9fab0a84f44da18fe" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.10.0.</source>
          <target state="translated">这个变量是在Perl v5.10.0中添加的。</target>
        </trans-unit>
        <trans-unit id="8a1a655fe2dd796d116b10702a01e1df2cba9650" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.10.0. The &lt;code&gt;%{^CAPTURE_ALL}&lt;/code&gt; alias was added in 5.25.7.</source>
          <target state="translated">该变量是在Perl v5.10.0中添加的。的 &lt;code&gt;%{^CAPTURE_ALL}&lt;/code&gt; 在5.25.7中加入别名。</target>
        </trans-unit>
        <trans-unit id="74a3d7ae690292259cd47d6b353adf6598aab549" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.10.0. The &lt;code&gt;%{^CAPTURE}&lt;/code&gt; alias was added in 5.25.7.</source>
          <target state="translated">该变量是在Perl v5.10.0中添加的。的 &lt;code&gt;%{^CAPTURE}&lt;/code&gt; 在5.25.7中加入别名。</target>
        </trans-unit>
        <trans-unit id="529ae72a49a47a40fc24b807262667413ffe7c41" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.18.0.</source>
          <target state="translated">这个变量是在Perl v5.18.0中添加的。</target>
        </trans-unit>
        <trans-unit id="8c5e6b439e9df10ffadcf60311634ec121d9032c" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.28.0.</source>
          <target state="translated">这个变量是在 Perl v5.28.0 中添加的。</target>
        </trans-unit>
        <trans-unit id="91d852586983a9d97ea2d55e1ebe38044ae36e9e" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.30.0.</source>
          <target state="translated">这个变量是在 Perl v5.30.0 中加入的。</target>
        </trans-unit>
        <trans-unit id="4737556119a019968cc8f1307ac337ee3bdb60e8" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.6.0.</source>
          <target state="translated">这个变量是在Perl v5.6.0中加入的。</target>
        </trans-unit>
        <trans-unit id="2f3edc2fce9c9a390050064f26e73b3803343968" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.8.0.</source>
          <target state="translated">这个变量是在 Perl v5.8.0 中添加的。</target>
        </trans-unit>
        <trans-unit id="3ca2db4875ccc44a7fc8462985ed1e8567dd734b" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.8.2.</source>
          <target state="translated">这个变量是在 Perl v5.8.2 中添加的。</target>
        </trans-unit>
        <trans-unit id="6bf43c1820932f7ae57b0f3470f15e621c27c904" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.8.8.</source>
          <target state="translated">这个变量是在 Perl v5.8.8 中添加的。</target>
        </trans-unit>
        <trans-unit id="8b26834cf767edc73ca24b342d850bf2cb435db7" translate="yes" xml:space="preserve">
          <source>This variable was added in Perl v5.8.9. It is subject to change or removal without notice, but is currently used to avoid recalculating the boundaries of multi-byte UTF-8-encoded characters.</source>
          <target state="translated">这个变量是在Perl v5.8.9中添加的。它可以在不通知的情况下更改或删除,但目前用于避免重新计算多字节UTF-8编码字符的边界。</target>
        </trans-unit>
        <trans-unit id="5043598cad5663df819749d9e02cff0d9f0ce8c1" translate="yes" xml:space="preserve">
          <source>This variable,</source>
          <target state="translated">这个变量。</target>
        </trans-unit>
        <trans-unit id="1e7208c83b365a198f309e4e5126878f19c7e8ae" translate="yes" xml:space="preserve">
          <source>This variable, if defined, contains the string used by stdio to format 64-bit decimal numbers (format &lt;code&gt;d&lt;/code&gt; ) for output.</source>
          <target state="translated">如果定义了此变量，则包含stdio用于格式化输出的64位十进制数字（格式 &lt;code&gt;d&lt;/code&gt; ）的字符串。</target>
        </trans-unit>
        <trans-unit id="a58deb42726c826ecbe1520ab12e280e89a51a7c" translate="yes" xml:space="preserve">
          <source>This variable, if defined, contains the string used by stdio to format 64-bit decimal numbers (format &lt;code&gt;d&lt;/code&gt;) for output.</source>
          <target state="translated">如果定义了此变量，则包含stdio用于格式化输出的64位十进制数字（格式 &lt;code&gt;d&lt;/code&gt; ）的字符串。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
