<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="4759d0bf1837078279cedaffe79b3b9844ef0d71" translate="yes" xml:space="preserve">
          <source>Most often, the real question is how you can delete the last N lines without making more than one pass over the file, or how to do it without a lot of copying. The easy concept is the hard reality when you might have millions of lines in your file.</source>
          <target state="translated">大多数情况下,真正的问题是,如何在不对文件进行多次传递的情况下删除最后的N行,或者如何在不进行大量复制的情况下进行删除。当你的文件中可能有几百万行时,这个简单的概念就是艰难的现实。</target>
        </trans-unit>
        <trans-unit id="c39bff964e11a5bf3472bbb0b25d07ba29893372" translate="yes" xml:space="preserve">
          <source>Most paragraphs in your documentation will be ordinary blocks of text, like this one. You can simply type in your text without any markup whatsoever, and with just a blank line before and after. When it gets formatted, it will undergo minimal formatting, like being rewrapped, probably put into a proportionally spaced font, and maybe even justified.</source>
          <target state="translated">在你的文档中,大多数段落都是普通的文本块,比如这个。你可以简单地键入你的文本,不需要任何标记,只在前后空一行。当它被格式化的时候,它会经过最小的格式化,比如被重新包装,可能会被放到一个有比例间距的字体中,甚至可能会被调整。</target>
        </trans-unit>
        <trans-unit id="758d5aaffea254b4a108f5a7e332dc97c651824c" translate="yes" xml:space="preserve">
          <source>Most people mean that greedy regexes match as much as they can. Technically speaking, it's actually the quantifiers (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;{}&lt;/code&gt; ) that are greedy rather than the whole pattern; Perl prefers local greed and immediate gratification to overall greed. To get non-greedy versions of the same quantifiers, use (&lt;code&gt;??&lt;/code&gt; , &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{}?&lt;/code&gt;).</source>
          <target state="translated">大多数人表示，贪婪的正则表达式尽可能地匹配。从技术上讲，实际上是贪婪的量词（ &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;{}&lt;/code&gt; ）而不是整个模式。 Perl偏爱本地贪婪和即时满足感，而不是整体贪婪。要获得相同的量词，使用非贪婪版本（ &lt;code&gt;??&lt;/code&gt; ， &lt;code&gt;*?&lt;/code&gt; ， &lt;code&gt;+?&lt;/code&gt; ， &lt;code&gt;{}?&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="61da54e1705a16eee7e2b6ceef3fefda6354d4c3" translate="yes" xml:space="preserve">
          <source>Most people mean that greedy regexes match as much as they can. Technically speaking, it's actually the quantifiers (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;) that are greedy rather than the whole pattern; Perl prefers local greed and immediate gratification to overall greed. To get non-greedy versions of the same quantifiers, use (&lt;code&gt;??&lt;/code&gt;, &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, &lt;code&gt;{}?&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d247005e28d9890e433308bb61b16e11eb364199" translate="yes" xml:space="preserve">
          <source>Most people try to use the time rather than the calendar to figure out dates, but that assumes that days are twenty-four hours each. For most people, there are two days a year when they aren't: the switch to and from summer time throws this off. For example, the rest of the suggestions will be wrong sometimes:</source>
          <target state="translated">大多数人试图用时间而不是日历来计算日期,但那是假设每天都是二十四小时。对于大多数人来说,一年中有两天不是这样的:夏季时间的转换和从夏季时间的转换会使这一点发生偏差。例如,其余的建议有时会出错。</target>
        </trans-unit>
        <trans-unit id="07b59a28d545dc68a00653586a9af9908a625c7c" translate="yes" xml:space="preserve">
          <source>Most platforms these days structure files in a hierarchical fashion. So, it is reasonably safe to assume that all platforms support the notion of a &quot;path&quot; to uniquely identify a file on the system. How that path is really written, though, differs considerably.</source>
          <target state="translated">现在的大多数平台都是以分层的方式来构建文件的。因此,可以合理地认为,所有平台都支持 &quot;路径 &quot;的概念,以唯一地识别系统中的文件。不过,这个路径到底是怎么写的,差别很大。</target>
        </trans-unit>
        <trans-unit id="f5162bd3aaf5f209ead52eacd74062b771e3c04c" translate="yes" xml:space="preserve">
          <source>Most probably the most convenient form. Under OS/2 view it as</source>
          <target state="translated">最可能是最方便的形式。在OS/2下,将其视为</target>
        </trans-unit>
        <trans-unit id="b3219374aa50766aeb504023a6090322d39aaeb1" translate="yes" xml:space="preserve">
          <source>Most problems with &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; arise because the programmer thinks they have a number but really it's a string or vice versa. To avoid this, stringify the arguments explicitly (using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq()&lt;/a&gt;&lt;/code&gt;) or convert them to numbers explicitly (using &lt;code&gt;0+$arg&lt;/code&gt; ). The rest arise because the programmer says:</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 和 &lt;code&gt;|&lt;/code&gt; 的大多数问题 出现的原因是程序员认为他们有一个数字，但实际上是一个字符串，反之亦然。为避免这种情况，请显式地对参数进行字符串化（使用 &lt;code&gt;&quot;&quot;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq()&lt;/a&gt;&lt;/code&gt; ），或将其显式地转换为数字（使用 &lt;code&gt;0+$arg&lt;/code&gt; ）。剩下的是因为程序员说：</target>
        </trans-unit>
        <trans-unit id="2718676853f0e2fd758f4f8f6b37c17469ccfcd0" translate="yes" xml:space="preserve">
          <source>Most problems with &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; arise because the programmer thinks they have a number but really it's a string or vice versa. To avoid this, stringify the arguments explicitly (using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;qq()&lt;/code&gt;) or convert them to numbers explicitly (using &lt;code&gt;0+$arg&lt;/code&gt;). The rest arise because the programmer says:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97498d9b162518efa835ea3e4a21ab0beffd2067" translate="yes" xml:space="preserve">
          <source>Most programming languages don't shelter the memory where variables are stored. In C, for instance, you can take the address of some variable, and the &lt;code&gt;sizeof&lt;/code&gt; operator tells you how many bytes are allocated to the variable. Using the address and the size, you may access the storage to your heart's content.</source>
          <target state="translated">大多数编程语言都不提供存储变量的内存。例如，在C语言中，您可以获取某个变量的地址， &lt;code&gt;sizeof&lt;/code&gt; 运算符告诉您分配给该变量的字节数。使用地址和大小，您可以访问存储内容。</target>
        </trans-unit>
        <trans-unit id="098186d7a29b8f65f8c838a2e5b2830d1de6af62" translate="yes" xml:space="preserve">
          <source>Most properties match the same code points regardless of whether &lt;code&gt;&quot;/i&quot;&lt;/code&gt; case-insensitive matching is specified or not. But a few properties are affected. These are shown with the notation &lt;code&gt;(/i= &lt;i&gt;other_property&lt;/i&gt;)&lt;/code&gt; in the second column. Under case-insensitive matching they match the same code pode points as the property</source>
          <target state="translated">不管是否指定 &lt;code&gt;&quot;/i&quot;&lt;/code&gt; 不区分大小写的匹配，大多数属性都匹配相同的代码点。但是一些属性会受到影响。这些在第二列中以符号 &lt;code&gt;(/i= &lt;i&gt;other_property&lt;/i&gt;)&lt;/code&gt; 。在不区分大小写的匹配下，它们与属性匹配相同的代码容器点</target>
        </trans-unit>
        <trans-unit id="93f39d1fecbeea5d31df34771fb4dfaa8600c5c6" translate="yes" xml:space="preserve">
          <source>Most ranges are unportable between character sets, but certain ones signal Perl to do special handling to make them portable. There are two classes of portable ranges. The first are any subsets of the ranges &lt;code&gt;A-Z&lt;/code&gt;, &lt;code&gt;a-z&lt;/code&gt;, and &lt;code&gt;0-9&lt;/code&gt;, when expressed as literal characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea7b30461e5f88919bb6524b261e1fbc23c8866" translate="yes" xml:space="preserve">
          <source>Most scripts should print some type of usage message to &lt;code&gt;STDERR&lt;/code&gt; when a command line syntax error is detected. They should also provide an option (usually &lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;-help&lt;/code&gt; ) to print a (possibly more verbose) usage message to &lt;code&gt;STDOUT&lt;/code&gt; . Some scripts may even wish to go so far as to provide a means of printing their complete documentation to &lt;code&gt;STDOUT&lt;/code&gt; (perhaps by allowing a &lt;code&gt;-man&lt;/code&gt; option). The following complete example uses &lt;b&gt;Pod::Usage&lt;/b&gt; in combination with &lt;b&gt;Getopt::Long&lt;/b&gt; to do all of these things:</source>
          <target state="translated">当检测到命令行语法错误时，大多数脚本应将某种类型的用法消息打印到 &lt;code&gt;STDERR&lt;/code&gt; 。他们还应该提供一个选项（通常是 &lt;code&gt;-H&lt;/code&gt; 或 &lt;code&gt;-help&lt;/code&gt; ）来将（可能更详细的）用法消息打印到 &lt;code&gt;STDOUT&lt;/code&gt; 。某些脚本甚至可能希望提供一种将完整的文档打印到 &lt;code&gt;STDOUT&lt;/code&gt; 的方法（也许通过允许 &lt;code&gt;-man&lt;/code&gt; 选项）。以下完整示例将&lt;b&gt;Pod :: Usage&lt;/b&gt;与&lt;b&gt;Getopt :: Long&lt;/b&gt;结合使用来完成所有这些操作：</target>
        </trans-unit>
        <trans-unit id="65b0d0948142b7ec60acd9bde4f4e302c30d9528" translate="yes" xml:space="preserve">
          <source>Most scripts should print some type of usage message to &lt;code&gt;STDERR&lt;/code&gt; when a command line syntax error is detected. They should also provide an option (usually &lt;code&gt;-H&lt;/code&gt; or &lt;code&gt;-help&lt;/code&gt;) to print a (possibly more verbose) usage message to &lt;code&gt;STDOUT&lt;/code&gt;. Some scripts may even wish to go so far as to provide a means of printing their complete documentation to &lt;code&gt;STDOUT&lt;/code&gt; (perhaps by allowing a &lt;code&gt;-man&lt;/code&gt; option). The following complete example uses &lt;b&gt;Pod::Usage&lt;/b&gt; in combination with &lt;b&gt;Getopt::Long&lt;/b&gt; to do all of these things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2986b3da9e25c6ac2c76862bdb207bac32623aca" translate="yes" xml:space="preserve">
          <source>Most sequences are described in detail in different documents; the primary purpose of this document is to have a quick reference guide describing all backslash and escape sequences.</source>
          <target state="translated">大多数序列在不同的文档中都有详细的描述;本文档的主要目的是提供一个描述所有反斜杠和转义序列的快速参考指南。</target>
        </trans-unit>
        <trans-unit id="6cf7387c1ea7a96beacd0b59cccd9572dbbcde67" translate="yes" xml:space="preserve">
          <source>Most sites usually disable this feature in their SMTP service configuration. Use &quot;Debug =&amp;gt; 1&quot; option under new() to see if disabled.</source>
          <target state="translated">大多数站点通常在其SMTP服务配置中禁用此功能。使用new（）下的&amp;ldquo; Debug =&amp;gt; 1&amp;rdquo;选项查看是否已禁用。</target>
        </trans-unit>
        <trans-unit id="805a1b088f4235fc8495203b21cfd64c3f92735f" translate="yes" xml:space="preserve">
          <source>Most socket programming assumes ASCII character encodings in network byte order. Exceptions can include CGI script writing under a host web server where the server may take care of translation for you. Most host web servers convert EBCDIC data to ISO-8859-1 or Unicode on output.</source>
          <target state="translated">大多数套接字编程都假设是按照网络字节顺序进行ASCII字符编码。例外情况包括在主机网络服务器下编写CGI脚本,服务器可能会帮你翻译。大多数主机网络服务器在输出时将EBCDIC数据转换为ISO-8859-1或Unicode。</target>
        </trans-unit>
        <trans-unit id="29ff99325371b7f580464c1d1eca725c963c97f2" translate="yes" xml:space="preserve">
          <source>Most software projects begin each file with a literal description of each file's purpose. Perl instead begins each with a literary allusion to that file's purpose.</source>
          <target state="translated">大多数软件项目在每个文件的开头都会对每个文件的目的进行字面描述。而Perl则是在每个文件的开头用文字暗示该文件的目的。</target>
        </trans-unit>
        <trans-unit id="db6c865df11697d9eda20f45a2680b42a8a01010" translate="yes" xml:space="preserve">
          <source>Most source code ceases to be grammatically correct when it is broken up into the pieces between string literals and regexes. So the &lt;code&gt;'code'&lt;/code&gt; and &lt;code&gt;'code_no_comments'&lt;/code&gt; component filter behave slightly differently from the other partial filters described in the previous section.</source>
          <target state="translated">当大多数源代码分解为字符串文字和正则表达式之间的部分时，其语法就不再正确。因此， &lt;code&gt;'code'&lt;/code&gt; 和 &lt;code&gt;'code_no_comments'&lt;/code&gt; 组件过滤器的行为与上一节中所述的其他部分过滤器略有不同。</target>
        </trans-unit>
        <trans-unit id="335be1d7a3acfa7558b1ff815c489a483910fb62" translate="yes" xml:space="preserve">
          <source>Most subroutines documented in this module have equivalent versions that operate on references to hashes instead of native hashes. The following is a list of these subs. They are identical except in name and in that instead of taking a %hash they take a $hashref, and additionally are not prototyped.</source>
          <target state="translated">本模块中记录的大多数子程序都有等价的版本,这些子程序对哈希的引用进行操作,而不是本地哈希。下面是这些子程序的列表.除了名字和取值%hash和取值$hashref之外,它们都是相同的,而且没有原型.</target>
        </trans-unit>
        <trans-unit id="673b355050421a0f250c2913c779df1badafbdd4" translate="yes" xml:space="preserve">
          <source>Most systems do not bother to return anything useful in $timeleft, so calling select() in scalar context just returns $nfound.</source>
          <target state="translated">大多数系统不屑于在$timeleft中返回任何有用的东西,所以在标量上下文中调用select()只是返回$nfound。</target>
        </trans-unit>
        <trans-unit id="aa8cbac972b9177f5aed2cfd37309a35a3aa9a5f" translate="yes" xml:space="preserve">
          <source>Most systems do not bother to return anything useful in &lt;code&gt;$timeleft&lt;/code&gt;, so calling &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; in scalar context just returns &lt;code&gt;$nfound&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be0e0cacadb003a014aeecaa66260a81fb37a7" translate="yes" xml:space="preserve">
          <source>Most tasks only require a small subset of the Perl language. One of the guiding mottos for Perl development is &quot;there's more than one way to do it&quot; (TMTOWTDI, sometimes pronounced &quot;tim toady&quot;). Perl's learning curve is therefore shallow (easy to learn) and long (there's a whole lot you can do if you really want).</source>
          <target state="translated">大多数任务只需要Perl语言的一个小子集。Perl开发的指导口号之一是 &quot;有不止一种方法可以做&quot;(TMTOWTDI,有时读作 &quot;tim toady&quot;)。因此,Perl的学习曲线既浅(易学)又长(如果你真的想学,你可以做很多事情)。</target>
        </trans-unit>
        <trans-unit id="c9cf8e4a405ae90922b90be3b50350defeef4763" translate="yes" xml:space="preserve">
          <source>Most times, the pattern is evaluated in double-quotish context, but it is possible to choose delimiters to force single-quotish, like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6ff5de9e8fc03a10f36de6d162848c70fb3768" translate="yes" xml:space="preserve">
          <source>Most useful when you can't depend on the test output order, such as when threads or forking is involved.</source>
          <target state="translated">当你不能依赖测试输出顺序时,比如涉及到线程或分叉时,最有用。</target>
        </trans-unit>
        <trans-unit id="d352875a4c7ac21070cf3a1cd4743c30a9c2d0b1" translate="yes" xml:space="preserve">
          <source>Mount a different file system structure without changing login or accounting information.</source>
          <target state="translated">挂载不同的文件系统结构,而不改变登录或会计信息。</target>
        </trans-unit>
        <trans-unit id="573dd2c2ed953b97e3c31f3090925fe92109b779" translate="yes" xml:space="preserve">
          <source>Mouse</source>
          <target state="translated">Mouse</target>
        </trans-unit>
        <trans-unit id="76cdb950721642b6b8596d36d5a39f7705028b99" translate="yes" xml:space="preserve">
          <source>Move</source>
          <target state="translated">Move</target>
        </trans-unit>
        <trans-unit id="b9c654f6de08d2f23a43dc1905efaf207281f877" translate="yes" xml:space="preserve">
          <source>Move on to the second group and pick the first alternative 'df'.</source>
          <target state="translated">进入第二组,选择第一个备选 &quot;df&quot;。</target>
        </trans-unit>
        <trans-unit id="656251711514e69bd101328e64271cab684cd5f2" translate="yes" xml:space="preserve">
          <source>Move on to the third element '.*'. Since we are at the end of the string and '.*' can match 0 times, assign it the empty string.</source>
          <target state="translated">转到第三个元素'.*'。由于我们处于字符串的末端,而'.*'可以匹配0次,所以将其赋值为空字符串。</target>
        </trans-unit>
        <trans-unit id="a05a5599f4ff1f6f057b4c325aeb15095e59f574" translate="yes" xml:space="preserve">
          <source>Move the file's read/write position. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">移动文件的读/写位置。它使用文件描述符，例如通过调用 &lt;code&gt;POSIX::open&lt;/code&gt; 获得的文件描述符。</target>
        </trans-unit>
        <trans-unit id="5fc1e9ef37151e0b1e126ddb3041bc5885f75355" translate="yes" xml:space="preserve">
          <source>Move the file's read/write position. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222e9fd8bd8c25e24b2a3f8a53104c5ee2a7923b" translate="yes" xml:space="preserve">
          <source>MoveD</source>
          <target state="translated">MoveD</target>
        </trans-unit>
        <trans-unit id="80fa2eaea134b0cd5569d0e8ca67b027b0a7ab32" translate="yes" xml:space="preserve">
          <source>MoveFile</source>
          <target state="translated">MoveFile</target>
        </trans-unit>
        <trans-unit id="ff3e3393da77e789dbcbb3a42c7951722bbe29e4" translate="yes" xml:space="preserve">
          <source>MoveFileEx</source>
          <target state="translated">MoveFileEx</target>
        </trans-unit>
        <trans-unit id="92862065f1668adaa1d1045b66d5bf772503cc43" translate="yes" xml:space="preserve">
          <source>MoveFileExW</source>
          <target state="translated">MoveFileExW</target>
        </trans-unit>
        <trans-unit id="f8eb80496378f80b4e51f94af632152cabf7dadd" translate="yes" xml:space="preserve">
          <source>MoveFileW</source>
          <target state="translated">MoveFileW</target>
        </trans-unit>
        <trans-unit id="5c049050655e528eff7cc66a0c1978dd42e900ba" translate="yes" xml:space="preserve">
          <source>Moved from &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2278daf64913fd58204056d82689681803a8cd5" translate="yes" xml:space="preserve">
          <source>Moved from Perl 5.10.1 to CPAN</source>
          <target state="translated">从Perl 5.10.1移至CPAN。</target>
        </trans-unit>
        <trans-unit id="99a21ee175eac25359a901bcbda82fe551ce8663" translate="yes" xml:space="preserve">
          <source>Moved from Perl 5.9.0 to CPAN</source>
          <target state="translated">从Perl 5.9.0移到CPAN。</target>
        </trans-unit>
        <trans-unit id="5de42d916e82311c864672d75f077c9b2068801a" translate="yes" xml:space="preserve">
          <source>Moved out of &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; &amp;amp; converted to a factory class to support extensible TAP source detective work by Steve Purkis.</source>
          <target state="translated">移出&lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt;并转换为工厂类，以支持Steve Purkis进行的可扩展TAP源侦探工作。</target>
        </trans-unit>
        <trans-unit id="ea7e6117e52e814be500d918ab6f4d7fa770c757" translate="yes" xml:space="preserve">
          <source>Moved out of &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; &amp;amp; converted to a factory class to support extensible TAP source detective work by Steve Purkis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06473ac4424aa3537730dc5fa59fd056a6719bfb" translate="yes" xml:space="preserve">
          <source>Moved to Changes file.</source>
          <target state="translated">已移至变更文件。</target>
        </trans-unit>
        <trans-unit id="a36390af19221c7ada243c00a81cdf9c9fd9cb46" translate="yes" xml:space="preserve">
          <source>Moved to the Changes file.</source>
          <target state="translated">已移至变更文件中。</target>
        </trans-unit>
        <trans-unit id="04735508f82cd9b0551e1cf6d2f2c73c1c36e575" translate="yes" xml:space="preserve">
          <source>Moves source to destination. Multiple sources are allowed if destination is an existing directory.</source>
          <target state="translated">将源移动到目的地。如果目的地是现有的目录,则允许多个源。</target>
        </trans-unit>
        <trans-unit id="65cd4dd8114610f7bacc1f81bb9dd01a137f162f" translate="yes" xml:space="preserve">
          <source>Moving</source>
          <target state="translated">Moving</target>
        </trans-unit>
        <trans-unit id="5dc46ce92133770b3cb0566e53187390443c015a" translate="yes" xml:space="preserve">
          <source>Moving to perl5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43ac9463df3e2d50948534cdbda94703301864a" translate="yes" xml:space="preserve">
          <source>Much better!</source>
          <target state="translated">好多了!</target>
        </trans-unit>
        <trans-unit id="baae2905164a527d46c5511d6f6cde4ac79fa8cd" translate="yes" xml:space="preserve">
          <source>Multi-argument form of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; allows an additional numeric argument. The meaning of this argument is described in &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::Process&quot;&gt;OS2::Process&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 的多参数形式允许附加的数字参数。该参数的含义在&lt;a href=&quot;http://search.cpan.org/perldoc/OS2::Process&quot;&gt;OS2 :: Process中&lt;/a&gt;描述。</target>
        </trans-unit>
        <trans-unit id="85c2b4322d0dcbe5e345ade2ce04fea2a4d2add9" translate="yes" xml:space="preserve">
          <source>Multi-argument form of &lt;code&gt;system()&lt;/code&gt; allows an additional numeric argument. The meaning of this argument is described in &lt;a href=&quot;OS2::Process&quot;&gt;OS2::Process&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9857028e641dc5456ee948176f4473c16db09596" translate="yes" xml:space="preserve">
          <source>Multi-dimensional array emulation</source>
          <target state="translated">多维数组仿真</target>
        </trans-unit>
        <trans-unit id="953b15a9991dd3cf45d05422ed2057e683840ca2" translate="yes" xml:space="preserve">
          <source>Multi-threaded</source>
          <target state="translated">Multi-threaded</target>
        </trans-unit>
        <trans-unit id="c69c3d945e47dae4c99c3ab199d1b9d455504d13" translate="yes" xml:space="preserve">
          <source>Multi-threaded operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57aac3c240d3e0ac36b471e64758ed7bdabec310" translate="yes" xml:space="preserve">
          <source>MultiEdit</source>
          <target state="translated">MultiEdit</target>
        </trans-unit>
        <trans-unit id="450c5aa974c7a5f408f5a12f136ca88727d8798b" translate="yes" xml:space="preserve">
          <source>MultiHomed</source>
          <target state="translated">MultiHomed</target>
        </trans-unit>
        <trans-unit id="4844caf78b10cf385ed68d57ca4c64d998065cbb" translate="yes" xml:space="preserve">
          <source>Multiblock count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f531e0d77ec76c8767bb9e4fb3934a040894292" translate="yes" xml:space="preserve">
          <source>Multicall Functions</source>
          <target state="translated">多呼功能</target>
        </trans-unit>
        <trans-unit id="498682cb179ef81881fc0701c5fef4200dc2318b" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays may be emulated by subscripting a hash with a list. The elements of the list are joined with the subscript separator (see &lt;a href=&quot;perlvar#%24%3B&quot;&gt;&quot;$;&quot; in perlvar&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f46258b912e10d35fd5082f358a2c20442fe00" translate="yes" xml:space="preserve">
          <source>Multidimensional arrays may be emulated by subscripting a hash with a list. The elements of the list are joined with the subscript separator (see &lt;a href=&quot;perlvar#%24%3b&quot;&gt;$; in perlvar&lt;/a&gt;).</source>
          <target state="translated">多维数组可以通过用列表下标散列来模拟。列表中的元素与下标分隔符结合在一起（请参阅&lt;a href=&quot;perlvar#%24%3b&quot;&gt;$;在perlvar中&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8f938af18a3f6f3ad92f399fa7884135f73cf19e" translate="yes" xml:space="preserve">
          <source>Multidimensional syntax %s not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4270bb13db0a8c118eef1b6d5f8e97e9e384c0" translate="yes" xml:space="preserve">
          <source>Multiline commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88dfb27b6e58426cb7118d4abc1cd99a64af78a3" translate="yes" xml:space="preserve">
          <source>Multiple &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declarations with the same name in the same lexical scope are allowed if they are in different packages. If they happen to be in the same package, Perl will emit warnings if you have asked for them, just like multiple &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt; declarations. Unlike a second &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt; declaration, which will bind the name to a fresh variable, a second &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration in the same package, in the same scope, is merely redundant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b29c6623047ed312fa13a7468cb3a2585d42cc" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;-M&lt;/code&gt; options are processed from left to right. So this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f96f856d2f7161b69ace4cbe667d2f05f5d119" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declarations with the same name in the same lexical scope are allowed if they are in different packages. If they happen to be in the same package, Perl will emit warnings if you have asked for them, just like multiple &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declarations. Unlike a second &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declaration, which will bind the name to a fresh variable, a second &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration in the same package, in the same scope, is merely redundant.</source>
          <target state="translated">多 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; ，如果他们是在不同的包在同一个词法范围相同的名称声明是允许的。如果它们恰好在同一个包中，则Perl会在您要求时发出警告，就像 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 多个声明一样。不同于第二 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 声明，该声明将名称的第二个绑定到一个新的变量， &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 声明在同一个包，在同一范围内，仅仅是多余的。</target>
        </trans-unit>
        <trans-unit id="9985bd0ec5a4c016728a57fca407ec3ba9776cda" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declarations with the same name in the same lexical scope are allowed if they are in different packages. If they happen to be in the same package, Perl will emit warnings if you have asked for them, just like multiple &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declarations. Unlike a second &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; declaration, which will bind the name to a fresh variable, a second &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration in the same package, in the same scope, is merely redundant.</source>
          <target state="translated">多 &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; ，如果他们是在不同的包在同一个词法范围相同的名称声明是允许的。如果它们恰好在同一个包中，则Perl会在您要求时发出警告，就像 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 多个声明一样。不同于第二 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 声明，该声明将名称的第二个绑定到一个新的变量， &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 声明在同一个包，在同一范围内，仅仅是多余的。</target>
        </trans-unit>
        <trans-unit id="48353bd1f51bb6eec720b26a40670dcc8efa9d3b" translate="yes" xml:space="preserve">
          <source>Multiple Inheritance</source>
          <target state="translated">多重继承</target>
        </trans-unit>
        <trans-unit id="cbb8ace32d78b2ae6f01fe57c603e73837a4bd68" translate="yes" xml:space="preserve">
          <source>Multiple alternate names are possible.</source>
          <target state="translated">可有多个备选名称。</target>
        </trans-unit>
        <trans-unit id="3b26a054b05093a88178030f5a8b1997575b74ff" translate="yes" xml:space="preserve">
          <source>Multiple constant declarations at once added by Casey West, &amp;lt;</source>
          <target state="translated">Casey West立即添加多个常量声明，&amp;lt;</target>
        </trans-unit>
        <trans-unit id="285ddce39862d8fe5e23d4388af8d0a347056a9c" translate="yes" xml:space="preserve">
          <source>Multiple inheritance often indicates a design problem, but Perl always gives you enough rope to hang yourself with if you ask for it.</source>
          <target state="translated">多重继承往往表明设计有问题,但Perl总是给你足够的绳子,如果你要求的话,你可以用它来吊死自己。</target>
        </trans-unit>
        <trans-unit id="0d9f2a08980cf6a269a8484f3b1b84e9a908ab93" translate="yes" xml:space="preserve">
          <source>Multiple options may be separated by colons:</source>
          <target state="translated">多个选项可以用冒号分隔。</target>
        </trans-unit>
        <trans-unit id="711c51a111027364db7380ccd9acdaec1492d123" translate="yes" xml:space="preserve">
          <source>Multiple packages</source>
          <target state="translated">多套方案</target>
        </trans-unit>
        <trans-unit id="e5cb4101d607c5394d01741bac5f7456e4908d11" translate="yes" xml:space="preserve">
          <source>Multiple packages and fully qualified subroutine names</source>
          <target state="translated">多个程序包和完全限定的子程序名</target>
        </trans-unit>
        <trans-unit id="24101d9d31bf0129420330c39c5cf010537d4874" translate="yes" xml:space="preserve">
          <source>Multiple slurpy parameters not allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436ca522c08df8bc62c5560d209e972cbfc6c8f8" translate="yes" xml:space="preserve">
          <source>Multiple tar archive filenames can be specified - they will each be processed in turn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6459b694c217e7d6e4f4403e095b344a4a592d8" translate="yes" xml:space="preserve">
          <source>Multiplex multiple TAP::Parsers</source>
          <target state="translated">复用多个TAP::解析器。</target>
        </trans-unit>
        <trans-unit id="150be49d038f614e193602a7005597f5ff875ec0" translate="yes" xml:space="preserve">
          <source>Multiplicative Operators</source>
          <target state="translated">乘法运算符</target>
        </trans-unit>
        <trans-unit id="f231b68e224950ab7816fb6e20b4d2a930d3893b" translate="yes" xml:space="preserve">
          <source>Multiplicity is required when embedding Perl in a C program and using more than one interpreter instance. This is only required when you build a not-threaded perl with &lt;code&gt;-Uuseithreads&lt;/code&gt; .</source>
          <target state="translated">将Perl嵌入C程序中并使用多个解释器实例时，需要多重性。仅当使用 &lt;code&gt;-Uuseithreads&lt;/code&gt; 构建非线程的perl时才需要这样做。</target>
        </trans-unit>
        <trans-unit id="6c8c6ecf04843cba53a3a0dc6d02df3607984c15" translate="yes" xml:space="preserve">
          <source>Multiplicity is required when embedding Perl in a C program and using more than one interpreter instance. This is only required when you build a not-threaded perl with &lt;code&gt;-Uuseithreads&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a823acc8d727a505e347a4373b2b4a2fd658bbbd" translate="yes" xml:space="preserve">
          <source>Multiplies $y to $x and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c164249090c5dcf176539a56868115da2c726290" translate="yes" xml:space="preserve">
          <source>Multiply $x by $y, and then add $z to the result,</source>
          <target state="translated">将$x乘以$y,然后将$z加到结果上。</target>
        </trans-unit>
        <trans-unit id="ccb1f5d6ba5d2943ea716c8d09ca6acbfac04509" translate="yes" xml:space="preserve">
          <source>Multiply $x by $y, and then add $z to the result.</source>
          <target state="translated">将$x乘以$y,然后将$z加到结果上。</target>
        </trans-unit>
        <trans-unit id="ee25591d06b217f4358e8b341dce8e1906aeef44" translate="yes" xml:space="preserve">
          <source>Multiprocessor kernel threads are the final step in thread support. With multiprocessor kernel threads on a machine with multiple CPUs, the OS may schedule two or more threads to run simultaneously on different CPUs.</source>
          <target state="translated">多处理器内核线程是线程支持的最后一步。在具有多个CPU的机器上使用多处理器内核线程,操作系统可以安排两个或多个线程同时在不同的CPU上运行。</target>
        </trans-unit>
        <trans-unit id="a82309bfc506cd2ed77334625f12e0460757a107" translate="yes" xml:space="preserve">
          <source>Must be one of the following licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafd5d404242155cb8650eca5e234b7aeedd750b" translate="yes" xml:space="preserve">
          <source>Must be passed an array reference.</source>
          <target state="translated">必须传递一个数组引用。</target>
        </trans-unit>
        <trans-unit id="d8387835af5df8bfeb3d9299ef8165454a3d981d" translate="yes" xml:space="preserve">
          <source>Mustn't forget to change the number of tests which appears at the top, or else the automated tester will get confused. This will either look like this:</source>
          <target state="translated">不要忘了更改顶部显示的测试数量,否则自动测试器会感到困惑。这或者会像这样。</target>
        </trans-unit>
        <trans-unit id="fb98af5989ebce8fc6cd27827500b2f2656fae01" translate="yes" xml:space="preserve">
          <source>My ftp proxy firewall does not listen on port 21</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdcdee602cc75b045989a2d406d8d4ffd6c037c" translate="yes" xml:space="preserve">
          <source>My personal recommendation, out of respect for Larry, Perl, and the Perl community at large is to state something simply like:</source>
          <target state="translated">出于对Larry、Perl以及整个Perl社区的尊重,我个人的建议是,简单地说明一下。</target>
        </trans-unit>
        <trans-unit id="be4eba3c145424407628857ba57fbd52704452d3" translate="yes" xml:space="preserve">
          <source>My subclasses: &lt;a href=&quot;Pod::Simple::PullParserStartToken&quot;&gt;Pod::Simple::PullParserStartToken&lt;/a&gt;, &lt;a href=&quot;Pod::Simple::PullParserTextToken&quot;&gt;Pod::Simple::PullParserTextToken&lt;/a&gt;, and &lt;a href=&quot;Pod::Simple::PullParserEndToken&quot;&gt;Pod::Simple::PullParserEndToken&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748a895bf6724a550c8c67860c94e7094d972f64" translate="yes" xml:space="preserve">
          <source>My subclasses: &lt;a href=&quot;pullparserstarttoken&quot;&gt;Pod::Simple::PullParserStartToken&lt;/a&gt;, &lt;a href=&quot;pullparsertexttoken&quot;&gt;Pod::Simple::PullParserTextToken&lt;/a&gt;, and &lt;a href=&quot;pullparserendtoken&quot;&gt;Pod::Simple::PullParserEndToken&lt;/a&gt;.</source>
          <target state="translated">我的子类：&lt;a href=&quot;pullparserstarttoken&quot;&gt;Pod :: Simple :: PullParserStartToken&lt;/a&gt;，&lt;a href=&quot;pullparsertexttoken&quot;&gt;Pod :: Simple :: PullParserTextToken&lt;/a&gt;和&lt;a href=&quot;pullparserendtoken&quot;&gt;Pod :: Simple :: PullParserEndToken&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2dc204f1e0858a7337033f5946b1dc262a92ffcd" translate="yes" xml:space="preserve">
          <source>MyModule</source>
          <target state="translated">MyModule</target>
        </trans-unit>
        <trans-unit id="97ad397eea0be3e1f89ac813a16d43595116bd1c" translate="yes" xml:space="preserve">
          <source>Myclass::Subclass</source>
          <target state="translated">Myclass::Subclass</target>
        </trans-unit>
        <trans-unit id="c6940a4c07e595b424fa7842373c9f33f87cd575" translate="yes" xml:space="preserve">
          <source>Myinit.U</source>
          <target state="translated">Myinit.U</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="9a47348ab82eb6d6bab23d474edae2c5c05217c3" translate="yes" xml:space="preserve">
          <source>N scalars leaked</source>
          <target state="translated">泄露了N个标量</target>
        </trans-unit>
        <trans-unit id="5a5f7af20c8e39658565746ad27f9a6866756694" translate="yes" xml:space="preserve">
          <source>N. B.</source>
          <target state="translated">N.B.</target>
        </trans-unit>
        <trans-unit id="a1288af793f71d98bd1d7968a0996780aa30d8e3" translate="yes" xml:space="preserve">
          <source>N.B. Setting &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; implicitly enables &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; .</source>
          <target state="translated">注意：设置 &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; 隐式启用 &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82840d382ba6e35da8eff2b3c88e5874455dbfcd" translate="yes" xml:space="preserve">
          <source>N.B. Setting &lt;code&gt;DECC$FILENAME_UNIX_REPORT&lt;/code&gt; implicitly enables &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="4c53abfad1785f59a4ee14505ad91b4508658ce7" translate="yes" xml:space="preserve">
          <source>NAME is the top-level namespace of your module. VERSION_FROM is the file which contains the $VERSION variable for the entire distribution. Typically this is the same as your top-level module.</source>
          <target state="translated">NAME 是您的模块的顶层命名空间。VERSION_FROM 是包含整个发行版的$VERSION变量的文件。通常这和您的顶层模块是一样的。</target>
        </trans-unit>
        <trans-unit id="d81d8c4e29195f73ad2566e9351c6a67f3f09071" translate="yes" xml:space="preserve">
          <source>NAME needn't be the name of a subroutine; it can be a scalar variable containing a code reference or a block that evaluates to a code reference.</source>
          <target state="translated">NAME不需要是子程序的名称,它可以是一个包含代码引用的标量变量,也可以是一个评估为代码引用的块。</target>
        </trans-unit>
        <trans-unit id="d1261b44b9791565719eece908fc8aabec59c02c" translate="yes" xml:space="preserve">
          <source>NAMELEN</source>
          <target state="translated">NAMELEN</target>
        </trans-unit>
        <trans-unit id="5e3909d12f66ddb276f16c1c76bcb4924e613445" translate="yes" xml:space="preserve">
          <source>NAMES</source>
          <target state="translated">NAMES</target>
        </trans-unit>
        <trans-unit id="941d6029f49e5d7a70ad52579f12da850d9d8bc5" translate="yes" xml:space="preserve">
          <source>NAMESPACE LAYOUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832ae6b6120b927078a7d3ce9fe270032ed0f14a" translate="yes" xml:space="preserve">
          <source>NAME_HEK</source>
          <target state="translated">NAME_HEK</target>
        </trans-unit>
        <trans-unit id="9c01dbcc56faa849a3e733fd9d72b3167f597af7" translate="yes" xml:space="preserve">
          <source>NATIVE_TO_LATIN1</source>
          <target state="translated">NATIVE_TO_LATIN1</target>
        </trans-unit>
        <trans-unit id="8f24a21d73be24d957aec6eb17d5b59ef96e9f9c" translate="yes" xml:space="preserve">
          <source>NATIVE_TO_NEED</source>
          <target state="translated">NATIVE_TO_NEED</target>
        </trans-unit>
        <trans-unit id="39d2e9c7a844a802cee07179a83665ab497e1d24" translate="yes" xml:space="preserve">
          <source>NATIVE_TO_UNI</source>
          <target state="translated">NATIVE_TO_UNI</target>
        </trans-unit>
        <trans-unit id="1cb5d20286de76cb8688a83e567257746c132849" translate="yes" xml:space="preserve">
          <source>NB. (more info on these and others would be appreciated).</source>
          <target state="translated">注:(请提供更多关于这些和其他方面的信息)。</target>
        </trans-unit>
        <trans-unit id="5f010024527e42fccba4ce2404e18f5c69eb9822" translate="yes" xml:space="preserve">
          <source>NB: Extensions that have nothing but *.pm files had to say</source>
          <target state="translated">注:除了*.pm文件外,其他什么都没有的扩展名不得不说。</target>
        </trans-unit>
        <trans-unit id="1f7de72c9876d092d89ca69c43c95f07a23bc665" translate="yes" xml:space="preserve">
          <source>NB: This variable must be in the package's symbol table, thus:</source>
          <target state="translated">NB:这个变量必须在软件包的符号表中,因此。</target>
        </trans-unit>
        <trans-unit id="7297e43fd27e251c1624e34ebd5bf6e99f4c09b7" translate="yes" xml:space="preserve">
          <source>NBSP</source>
          <target state="translated">NBSP</target>
        </trans-unit>
        <trans-unit id="12f6598371d9f16419b7754d6868d5184ea681b6" translate="yes" xml:space="preserve">
          <source>NDBM_File</source>
          <target state="translated">NDBM_File</target>
        </trans-unit>
        <trans-unit id="d90fc6a608918a70294d6b999fb9f1f64ecfd606" translate="yes" xml:space="preserve">
          <source>NDBM_File - Tied access to ndbm files</source>
          <target state="translated">NDBM_File-绑定访问ndbm文件。</target>
        </trans-unit>
        <trans-unit id="5aae06f9c3e77d522c379b6951fa1408e2490531" translate="yes" xml:space="preserve">
          <source>NDBM_File and ODBM_File do not work on FAT filesystems</source>
          <target state="translated">NDBM_File和ODBM_File不能在FAT文件系统上工作。</target>
        </trans-unit>
        <trans-unit id="a798c3d94cb982cba534a63f36ccc06041d89ff0" translate="yes" xml:space="preserve">
          <source>NDBM_File, DB_File, GDBM_File, SDBM_File, ODBM_File - various DBM implementations</source>
          <target state="translated">NDBM_File,DB_File,GDBM_File,SDBM_File,ODBM_File-各种DBM实现</target>
        </trans-unit>
        <trans-unit id="8ada427b353c510d65dd5713797216d9c991cb85" translate="yes" xml:space="preserve">
          <source>NEED TO UPGRADE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d5383e4d48ed9cc34a642b91253d4ab7ea693b" translate="yes" xml:space="preserve">
          <source>NEEDS_LINKING</source>
          <target state="translated">NEEDS_LINKING</target>
        </trans-unit>
        <trans-unit id="20e4cb428c1111a7f321068ef6494db03de900ba" translate="yes" xml:space="preserve">
          <source>NEW API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac95b5a9cf67180becca6d7616cbe8c2dbd055da" translate="yes" xml:space="preserve">
          <source>NEW to 3.18</source>
          <target state="translated">新到3.18</target>
        </trans-unit>
        <trans-unit id="6d7b1945b703be410af2f234b62894cdfab399db" translate="yes" xml:space="preserve">
          <source>NEW to 3.22</source>
          <target state="translated">新到3.22</target>
        </trans-unit>
        <trans-unit id="1bd0055e213031c1eb32db565ffd38acb782ca87" translate="yes" xml:space="preserve">
          <source>NEWNAME</source>
          <target state="translated">NEWNAME</target>
        </trans-unit>
        <trans-unit id="1992d5e8d57e780981c364d844480c004ead1bc2" translate="yes" xml:space="preserve">
          <source>NEXT</source>
          <target state="translated">NEXT</target>
        </trans-unit>
        <trans-unit id="b671ceb8e301ee8b8afde8681000cc597a749b5b" translate="yes" xml:space="preserve">
          <source>NEXT - Provide a pseudo-class NEXT (et al) that allows method redispatch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b264d41dd1016991ce0cb432539e94a460600e52" translate="yes" xml:space="preserve">
          <source>NEXT LINE and NO-BREAK SPACE may or may not match &lt;code&gt;\s&lt;/code&gt; depending on the rules in effect. See &lt;a href=&quot;#Whitespace&quot;&gt;the beginning of this section&lt;/a&gt;.</source>
          <target state="translated">NEXT LINE和NO-BREAK SPACE可能与 &lt;code&gt;\s&lt;/code&gt; 不匹配，具体取决于现行规则。请参阅&lt;a href=&quot;#Whitespace&quot;&gt;本节的开头&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="113018ee92aaf6966a4feae636745a050ed016d4" translate="yes" xml:space="preserve">
          <source>NEXT.pm - Provide a pseudo-class NEXT (et al) that allows method redispatch</source>
          <target state="translated">NEXT.pm-提供一个允许方法重新分配的伪类NEXT(等)。</target>
        </trans-unit>
        <trans-unit id="2f9fcb4031e8bf2abe384c4ced588f3eb413318c" translate="yes" xml:space="preserve">
          <source>NEXT.pm adds a pseudoclass named &lt;code&gt;NEXT&lt;/code&gt; to any program that uses it. If a method &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; , the call to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; is redispatched as if the calling method had not originally been found.</source>
          <target state="translated">NEXT.pm 向使用它的任何程序中添加一个名为 &lt;code&gt;NEXT&lt;/code&gt; 的伪类。如果方法 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;$self-&amp;gt;NEXT::m()&lt;/code&gt; ，则重新分派对 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 的调用，就像最初未找到调用方法一样。</target>
        </trans-unit>
        <trans-unit id="fabb600989a7bba10f84538b2741dea0ab962144" translate="yes" xml:space="preserve">
          <source>NEXTKEY is always called in scalar context and it should just return the next key. values(), and each() in list context, will call FETCH for the returned keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c24556247a8b24895bea71905672183f614ef3" translate="yes" xml:space="preserve">
          <source>NEXTKEY this, lastkey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1218651fb5d285bf3469a4750e2db41f4b8b5f" translate="yes" xml:space="preserve">
          <source>NFS</source>
          <target state="translated">NFS</target>
        </trans-unit>
        <trans-unit id="608f5850e4d46263293fc905b013705ee17bff47" translate="yes" xml:space="preserve">
          <source>NFS Mount Points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f3c73aafb4df691799fd406377dadc9780d033" translate="yes" xml:space="preserve">
          <source>NFS filesystems and utime(2) on HP-UX</source>
          <target state="translated">HP-UX上的NFS文件系统和utime(2)</target>
        </trans-unit>
        <trans-unit id="33955091f178d2e0b6833a44b9c41c2530abaaef" translate="yes" xml:space="preserve">
          <source>NIST STATEMENT ON SHA-1</source>
          <target state="translated">NIST关于SHA-1的声明</target>
        </trans-unit>
        <trans-unit id="8a32963006e5a121b9fe9a8458d70540a03114d8" translate="yes" xml:space="preserve">
          <source>NIST acknowledges that the work of Prof. Xiaoyun Wang constitutes a practical collision attack on SHA-1. Therefore, NIST encourages the rapid adoption of the SHA-2 hash functions (e.g. SHA-256) for applications requiring strong collision resistance, such as digital signatures.</source>
          <target state="translated">NIST承认,王晓云教授的工作构成了对SHA-1的实际碰撞攻击。因此,NIST鼓励在数字签名等需要强大抗碰撞能力的应用中,迅速采用SHA-2哈希函数(如SHA-256)。</target>
        </trans-unit>
        <trans-unit id="3ed352aa54aa2907bf2965b3e66dc4da9f6230d6" translate="yes" xml:space="preserve">
          <source>NI_DGRAM</source>
          <target state="translated">NI_DGRAM</target>
        </trans-unit>
        <trans-unit id="40e6efbcba9fea1565ffb548c0ce6055f9f0abcd" translate="yes" xml:space="preserve">
          <source>NI_NAMEREQD</source>
          <target state="translated">NI_NAMEREQD</target>
        </trans-unit>
        <trans-unit id="c34d054e005e6ec8eab7acfe44ac788972e4e691" translate="yes" xml:space="preserve">
          <source>NI_NUMERICHOST</source>
          <target state="translated">NI_NUMERICHOST</target>
        </trans-unit>
        <trans-unit id="6afe1c04c2484c532e8d9fe653a24b3b764e7c90" translate="yes" xml:space="preserve">
          <source>NI_NUMERICSERV</source>
          <target state="translated">NI_NUMERICSERV</target>
        </trans-unit>
        <trans-unit id="b465e7557bda36b84a37e52f7c4e7301aae96613" translate="yes" xml:space="preserve">
          <source>NIx_NOHOST</source>
          <target state="translated">NIx_NOHOST</target>
        </trans-unit>
        <trans-unit id="a9b2d0ec65146c4b3c86a214eedc9bb8ca3669cd" translate="yes" xml:space="preserve">
          <source>NIx_NOSERV</source>
          <target state="translated">NIx_NOSERV</target>
        </trans-unit>
        <trans-unit id="aa7b193ecb5f5e8127c45d86d672c669b4ad311a" translate="yes" xml:space="preserve">
          <source>NNN</source>
          <target state="translated">NNN</target>
        </trans-unit>
        <trans-unit id="259e7beda3cad46f62a7095d7eeef91dfa1452ff" translate="yes" xml:space="preserve">
          <source>NNTP Client class</source>
          <target state="translated">NNTP客户端类</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="08ede25c29d0b14def59102b820c983fef641f93" translate="yes" xml:space="preserve">
          <source>NO READER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b84bee02bd83b950a021e94155970ceaec318" translate="yes" xml:space="preserve">
          <source>NO SETTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09540dd5a1bab1aead125e4e2e0e2b654166fb0" translate="yes" xml:space="preserve">
          <source>NOECHO</source>
          <target state="translated">NOECHO</target>
        </trans-unit>
        <trans-unit id="4217d58bbccddebf68dfe2d9142182d33dd44068" translate="yes" xml:space="preserve">
          <source>NON-BLOCKING</source>
          <target state="translated">NON-BLOCKING</target>
        </trans-unit>
        <trans-unit id="fccfdb937713b1cc25887e8572de25d1e7746077" translate="yes" xml:space="preserve">
          <source>NONINTERACTIVE_TESTING</source>
          <target state="translated">NONINTERACTIVE_TESTING</target>
        </trans-unit>
        <trans-unit id="0e091603e3f994d50c190a2d5fd3e5c41973500d" translate="yes" xml:space="preserve">
          <source>NONPERLIO FUNCTIONALITY</source>
          <target state="translated">非过氧化物功能化</target>
        </trans-unit>
        <trans-unit id="76ad789b38e8dbe21ca0bc2010e7bf69341912fe" translate="yes" xml:space="preserve">
          <source>NORECURS</source>
          <target state="translated">NORECURS</target>
        </trans-unit>
        <trans-unit id="839079acafd0ee6f848c67721260af9d37e0e0a1" translate="yes" xml:space="preserve">
          <source>NORMAL TESTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89019f3be9c018c42adb350f614090da4dc3c7c" translate="yes" xml:space="preserve">
          <source>NORMALIZER</source>
          <target state="translated">NORMALIZER</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="c4670e378e0ef3deb0f4049eccb697b77c441ecf" translate="yes" xml:space="preserve">
          <source>NOT Algonquin!</source>
          <target state="translated">不是阿尔冈昆!</target>
        </trans-unit>
        <trans-unit id="f8e9babf78c2e719cd84e72dad7681487647bef9" translate="yes" xml:space="preserve">
          <source>NOT Amharic! NOT Samaritan Aramaic!</source>
          <target state="translated">不是阿姆哈拉语!不是撒玛利亚亚拉姆语!</target>
        </trans-unit>
        <trans-unit id="753ae89bc9aefd4bc4c59d18e8756509c836fa15" translate="yes" xml:space="preserve">
          <source>NOT Aramaic!</source>
          <target state="translated">不是阿拉姆语!</target>
        </trans-unit>
        <trans-unit id="133f3813e3d37b50fe3b4bc3090b8a682ecfc808" translate="yes" xml:space="preserve">
          <source>NOT Cree!</source>
          <target state="translated">不是克里人!</target>
        </trans-unit>
        <trans-unit id="4ae987be84fecb4729307de204915c9a99c39e5b" translate="yes" xml:space="preserve">
          <source>NOT Creek! (Formerly &quot;cre&quot;.)</source>
          <target state="translated">不是克里克!(原名 &quot;cre&quot;)</target>
        </trans-unit>
        <trans-unit id="9aa8553630af3827a1d2df27f4500615b8d003a9" translate="yes" xml:space="preserve">
          <source>NOT Dogri!</source>
          <target state="translated">不是Dogri!</target>
        </trans-unit>
        <trans-unit id="1a5a67d55f9ca3936956ef4502ba89ff2b34b328" translate="yes" xml:space="preserve">
          <source>NOT Dogrib!</source>
          <target state="translated">不是Dogrib!</target>
        </trans-unit>
        <trans-unit id="68c49025492a4631abe9ece2f0cd79b5a465f4d6" translate="yes" xml:space="preserve">
          <source>NOT Lahnda!</source>
          <target state="translated">不是拉恩达!</target>
        </trans-unit>
        <trans-unit id="3e4ff7d40fd5253a99d44731fd85dd7a075a8d8c" translate="yes" xml:space="preserve">
          <source>NOT Lamba!</source>
          <target state="translated">不是兰巴!</target>
        </trans-unit>
        <trans-unit id="bbf0ff26137d6eeee6a5487552177165fd9cd76f" translate="yes" xml:space="preserve">
          <source>NOT Malay!</source>
          <target state="translated">不是马来人!</target>
        </trans-unit>
        <trans-unit id="ba94ae989804baff400b9b606493ab5274d7a721" translate="yes" xml:space="preserve">
          <source>NOT Malayalam!</source>
          <target state="translated">不是马拉雅拉姆语!</target>
        </trans-unit>
        <trans-unit id="84b3ff998bfbcb82e2509048721a02e46fb1bbb0" translate="yes" xml:space="preserve">
          <source>NOT Mandarin!</source>
          <target state="translated">不是普通话!</target>
        </trans-unit>
        <trans-unit id="1befb6835c1562cd0baa23c9fea5413fe9068e2e" translate="yes" xml:space="preserve">
          <source>NOT Maori!</source>
          <target state="translated">不是毛利人!</target>
        </trans-unit>
        <trans-unit id="3996b78a86c029adf66ba0fba4afc3b0b738285a" translate="yes" xml:space="preserve">
          <source>NOT Mari!</source>
          <target state="translated">不是玛丽!</target>
        </trans-unit>
        <trans-unit id="fd25af715e82d2a1e52a76f6042a96a0b97ee0df" translate="yes" xml:space="preserve">
          <source>NOT Pompeiian!</source>
          <target state="translated">不是庞贝人!</target>
        </trans-unit>
        <trans-unit id="401d021df78de2f61ec2f834d14cc4a3deb3d7f8" translate="yes" xml:space="preserve">
          <source>NOT Romanian! NOT Romany! NOT Romansh!</source>
          <target state="translated">不是罗马尼亚人!不是罗马尼亚语! 不是罗马尼亚语!</target>
        </trans-unit>
        <trans-unit id="e7bebe37efc0e0896e678888788c0119a46ec810" translate="yes" xml:space="preserve">
          <source>NOT Scots Gaelic!</source>
          <target state="translated">不是苏格兰盖尔语!</target>
        </trans-unit>
        <trans-unit id="5cb51efbf1da343aa35bb0cd1503a285538b7130" translate="yes" xml:space="preserve">
          <source>NOT Scots!</source>
          <target state="translated">不是苏格兰人!</target>
        </trans-unit>
        <trans-unit id="406bca1dda1a92a194b3f06540dac98edfe02f9c" translate="yes" xml:space="preserve">
          <source>NOT Tai!</source>
          <target state="translated">不是泰哥!</target>
        </trans-unit>
        <trans-unit id="f4263bbd2a696d31694b9b4dfaddde3fd2e9242a" translate="yes" xml:space="preserve">
          <source>NOT Thai!</source>
          <target state="translated">不是泰国人!</target>
        </trans-unit>
        <trans-unit id="381ade097816523a950f9c68fe73f8bdd2483e08" translate="yes" xml:space="preserve">
          <source>NOT Tonga!</source>
          <target state="translated">不是汤加!</target>
        </trans-unit>
        <trans-unit id="43e2eb938fbfde6d76b6fc73f130bf7c34e96d8a" translate="yes" xml:space="preserve">
          <source>NOT Tsonga!</source>
          <target state="translated">不是Tsonga!</target>
        </trans-unit>
        <trans-unit id="7bb4f6673a55f3ef4e9a72ddaea2a35397daeb1b" translate="yes" xml:space="preserve">
          <source>NOT Ugric!</source>
          <target state="translated">不是乌戈尔!</target>
        </trans-unit>
        <trans-unit id="ac75bf1bb4152325d5d23d198732d52ff6533a71" translate="yes" xml:space="preserve">
          <source>NOT Wendish! NOT Wend! NOT Avestan! (Formerly &quot;ven&quot;.)</source>
          <target state="translated">不是Wendish!不是Wend! 不是阿维斯坦!(以前是 &quot;ven&quot;)</target>
        </trans-unit>
        <trans-unit id="8ccbd83d9bd35a8139be881200b96ebe4bf4f8ba" translate="yes" xml:space="preserve">
          <source>NOT White Russian! NOT Rusyn!</source>
          <target state="translated">不是白俄!不是俄罗斯人!</target>
        </trans-unit>
        <trans-unit id="9a3ad696e905452a166a11feac1b5ce24fc7f64e" translate="yes" xml:space="preserve">
          <source>NOT YET</source>
          <target state="translated">还没有</target>
        </trans-unit>
        <trans-unit id="c775454cbbf850c1e44e01c2124ec3b439b5a154" translate="yes" xml:space="preserve">
          <source>NOT Zend.</source>
          <target state="translated">不是Zend。</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="2e08c41aed7a4c92f4cb54085b5d4c152d02dd41" translate="yes" xml:space="preserve">
          <source>NOTE ON CYCLES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6abbe86b9a3dd54d847c73d2fcb02c7646f939" translate="yes" xml:space="preserve">
          <source>NOTE:</source>
          <target state="translated">NOTE:</target>
        </trans-unit>
        <trans-unit id="17e95c44cb46af490bb8e16ee27a4a479ea2e057" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; should be removed from the inheritance hiearchy and simply be called as functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618dd0810d8f0328d5c844bf5776ec75fdee5055" translate="yes" xml:space="preserve">
          <source>NOTE: As of version 3.27, the FIPS code set is no longer supported. See the Locale::Codes::Changes document for details.</source>
          <target state="translated">注意:从3.27版本开始,不再支持FIPS代码集。请参阅 Locale::Codes::Changes 文档以了解详情。</target>
        </trans-unit>
        <trans-unit id="f153ba173fef9b5aa6938b0a0ee92d9e101e6d02" translate="yes" xml:space="preserve">
          <source>NOTE: Before version 5.004_65, &lt;code&gt;hv_iterinit&lt;/code&gt; used to return the number of hash buckets that happen to be in use. If you still need that esoteric value, you can get it through the macro &lt;code&gt;HvFILL(hv)&lt;/code&gt; .</source>
          <target state="translated">注意：在版本5.004_65之前， &lt;code&gt;hv_iterinit&lt;/code&gt; 用于返回碰巧正在使用的哈希存储桶的数量。如果仍然需要该深奥的值，则可以通过宏 &lt;code&gt;HvFILL(hv)&lt;/code&gt; 获得它。</target>
        </trans-unit>
        <trans-unit id="cb6856d39d8b489cad3f52ad021a622af14f9bc7" translate="yes" xml:space="preserve">
          <source>NOTE: Before version 5.004_65, &lt;code&gt;hv_iterinit&lt;/code&gt; used to return the number of hash buckets that happen to be in use. If you still need that esoteric value, you can get it through the macro &lt;code&gt;HvFILL(hv)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649360d37b390feb3a2b0b394e1546f8221a9d4a" translate="yes" xml:space="preserve">
          <source>NOTE: Due to the nature of make, it is important that you put the trailing slash on your DESTDIR.</source>
          <target state="translated">注意:由于make的性质,在DESTDIR上加上尾部的斜线很重要。</target>
        </trans-unit>
        <trans-unit id="3f7ead4aaae021a928fa1ee51af8a79894a0f263" translate="yes" xml:space="preserve">
          <source>NOTE: Each direct &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;MM_Unix&lt;/a&gt; subclass is also an &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;MM_Any&lt;/a&gt; subclass. This is a temporary hack because MM_Unix overrides some MM_Any methods with Unix specific code. It allows the non-Unix modules to see the original MM_Any implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067432480fa685a3f96480be8331efe9c45e8058" translate="yes" xml:space="preserve">
          <source>NOTE: ExtUtils::MM_{Current OS} represents one of the ExtUtils::MM_* modules except &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;ExtUtils::MM_Any&lt;/a&gt; chosen based on your operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be33fdad677decf9bf49440b259d731f4baa5cc9" translate="yes" xml:space="preserve">
          <source>NOTE: For use with variables in the current package for a single scope, the functionality provided by this pragma has been superseded by &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declarations, available in Perl v5.6.0 or later, and use of this pragma is discouraged. See &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;.</source>
          <target state="translated">注意：要在单个范围内与当前程序包中的变量一起使用，此编译指示提供的功能已被 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 声明所取代，我们的声明在Perl v5.6.0或更高版本中可用，并且不建议使用此编译指示。看到&lt;a href=&quot;functions/our&quot;&gt;我们的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2444687bc2e7aa6f630fc198feec77962205c8c7" translate="yes" xml:space="preserve">
          <source>NOTE: For use with variables in the current package for a single scope, the functionality provided by this pragma has been superseded by &lt;code&gt;our&lt;/code&gt; declarations, available in Perl v5.6.0 or later, and use of this pragma is discouraged. See &lt;a href=&quot;perlfunc#our&quot;&gt;&quot;our&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b263360f03c5b7669d257ce01c55faecf28c63" translate="yes" xml:space="preserve">
          <source>NOTE: If &lt;code&gt;STDERR&lt;/code&gt; is redirected &lt;code&gt;make install&lt;/code&gt; will &lt;b&gt;not&lt;/b&gt; prompt you to install</source>
          <target state="translated">注意：如果 &lt;code&gt;STDERR&lt;/code&gt; 被重定向 &lt;code&gt;make install&lt;/code&gt; 的将&lt;b&gt;不&lt;/b&gt;提示您安装</target>
        </trans-unit>
        <trans-unit id="6a15713e4ca482b00669bde833a2ad067bed418a" translate="yes" xml:space="preserve">
          <source>NOTE: If the</source>
          <target state="translated">注:如果</target>
        </trans-unit>
        <trans-unit id="3fbf142c302988d361f32c92573c404f0d821571" translate="yes" xml:space="preserve">
          <source>NOTE: If you're using a 32-bit compiler to build perl on a 64-bit Windows operating system, then you should set the WIN64 environment variable to &quot;undef&quot;. Also, the trimmed down compiler only passes tests when USE_ITHREADS *= define (as opposed to undef) and when the CFG *= Debug line is commented out.</source>
          <target state="translated">注意:如果您使用 32 位编译器在 64 位 Windows 操作系统上编译 perl,则应将 WIN64 环境变量设置为 &quot;undef&quot;。另外,只有当 USE_ITHREADS *=define (而不是 undef)和 CFG *=Debug 行被注释掉的时候,精简后的编译器才会通过测试。</target>
        </trans-unit>
        <trans-unit id="3627e1c3e922f58002616f63fa3f427fea434731" translate="yes" xml:space="preserve">
          <source>NOTE: In perl 5.25 the behavior of scalar %hash on an untied hash changed to return the count of keys. Prior to this it returned a string containing information about the bucket setup of the hash. See &lt;a href=&quot;Hash::Util#bucket_ratio&quot;&gt;&quot;bucket_ratio&quot; in Hash::Util&lt;/a&gt; for a backwards compatibility path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f20f131ce04b8a1fb6640adea5e575bdb22bbd" translate="yes" xml:space="preserve">
          <source>NOTE: In the example above, the thread returns a list, thus necessitating that the thread creation call be made in list context (i.e., &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; ($thr)&lt;/code&gt; ). See &lt;a href=&quot;threads#%24thr-%3ejoin()&quot;&gt;$thr-&amp;gt;join() in threads&lt;/a&gt; and &lt;a href=&quot;threads#THREAD-CONTEXT&quot;&gt;THREAD CONTEXT in threads&lt;/a&gt; for more details on thread context and return values.</source>
          <target state="translated">注意：在上面的示例中，线程返回一个列表，因此必须在列表上下文中进行线程创建调用（即， &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; ($thr)&lt;/code&gt; ）。见&lt;a href=&quot;threads#%24thr-%3ejoin()&quot;&gt;$ thr-&amp;gt; join（）方法的线程&lt;/a&gt;和&lt;a href=&quot;threads#THREAD-CONTEXT&quot;&gt;线程中的线程上下文&lt;/a&gt;对线程上下文和返回值的更多细节。</target>
        </trans-unit>
        <trans-unit id="53ecad029faffe4377d8471df7c402459fee1a5f" translate="yes" xml:space="preserve">
          <source>NOTE: In the example above, the thread returns a list, thus necessitating that the thread creation call be made in list context (i.e., &lt;code&gt;my ($thr)&lt;/code&gt;). See &lt;a href=&quot;threads#%24thr-%3Ejoin%28%29&quot;&gt;&quot;$thr-&amp;gt;join()&quot; in threads&lt;/a&gt; and &lt;a href=&quot;threads#THREAD-CONTEXT&quot;&gt;&quot;THREAD CONTEXT&quot; in threads&lt;/a&gt; for more details on thread context and return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eded8f1ec362061e175e773a0320700ccc8a74a7" translate="yes" xml:space="preserve">
          <source>NOTE: Modules like &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt; and &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; have been omitted for clarity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4b96a646789fe22b9736fd0f77217c9c6f301c" translate="yes" xml:space="preserve">
          <source>NOTE: Strictly speaking Perl's UTF-8 should not be called UTF-8 since UTF-8 is an encoding of Unicode, and Unicode's upper limit, 0x10FFFF, can be expressed with 4 bytes. However, Perl thinks of UTF-8 as a way to encode non-negative integers in a binary format, even those above Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd640e426e455b329ccdbe19f860f26de435861" translate="yes" xml:space="preserve">
          <source>NOTE: The BerkeleyDB library only completely works on NTFS partitions.</source>
          <target state="translated">注意:BerkeleyDB库只在NTFS分区上完全工作。</target>
        </trans-unit>
        <trans-unit id="a883d5970a29c1610a3c0fa8d3c7281403c56317" translate="yes" xml:space="preserve">
          <source>NOTE: The GDBM library only works on NTFS partitions.</source>
          <target state="translated">注意:GDBM库只适用于NTFS分区。</target>
        </trans-unit>
        <trans-unit id="9b01e20bea3deec5ba5197be5f2861b1f24a1902" translate="yes" xml:space="preserve">
          <source>NOTE: The USE_64_BIT_INT build option is not supported with the 32-bit Visual C++ 6.0 compiler.</source>
          <target state="translated">注意:32 位 Visual C++6.0 编译器不支持 USE_64_BIT_INT 联编选项。</target>
        </trans-unit>
        <trans-unit id="92679b71ee8b46e8b7e0ced5d18384810d027930" translate="yes" xml:space="preserve">
          <source>NOTE: The current implementation keeps the declared fields in the %FIELDS hash of the calling package, but this may change in future versions. Do &lt;b&gt;not&lt;/b&gt; update the %FIELDS hash directly, because it must be created at compile-time for it to be fully useful, as is done by this pragma.</source>
          <target state="translated">注意：当前实现将声明的字段保留在调用程序包的％FIELDS哈希中，但是在以后的版本中可能会更改。千万&lt;b&gt;不能&lt;/b&gt;直接更新％FIELDS哈希值，因为它必须在编译时被创建为它是完全有益的，因为由这个编译完成。</target>
        </trans-unit>
        <trans-unit id="bffb349a25186b416bb90a95e353abe4799c593a" translate="yes" xml:space="preserve">
          <source>NOTE: The main Perl thread (thread 0) is in a</source>
          <target state="translated">注意:主Perl线程(线程0)是在一个</target>
        </trans-unit>
        <trans-unit id="57e161872abdc951ab6418dd3709a011bb12d2ef" translate="yes" xml:space="preserve">
          <source>NOTE: The main object used by MakeMaker is a PACK### object, *not* &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;. It is, effectively, a subclass of &lt;a href=&quot;ExtUtils::MY&quot;&gt;MY&lt;/a&gt;, &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;, &lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; and ExtUtils::MM_{Current OS}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd01972804c083061ace7521dcf3ba26f354b9f" translate="yes" xml:space="preserve">
          <source>NOTE: The methods in &lt;a href=&quot;ExtUtils::MY&quot;&gt;MY&lt;/a&gt; are simply copied into PACK### rather than MY being a superclass of PACK###. I don't remember the rationale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2d780df8a865a0c1e4241c863cc63ef39b82f8" translate="yes" xml:space="preserve">
          <source>NOTE: This class is now a front-end to the IO::* classes.</source>
          <target state="translated">注意:这个类现在是IO::*类的前端。</target>
        </trans-unit>
        <trans-unit id="3c0adaeecd5969cd29892262a1fafa36ba011ebd" translate="yes" xml:space="preserve">
          <source>NOTE: This has &lt;b&gt;not&lt;/b&gt; been extensively tested. In particular, &lt;code&gt;d_semctl_semun&lt;/code&gt; is undefined because it fails a Configure test and on Win9x the</source>
          <target state="translated">注意：这&lt;b&gt;尚未&lt;/b&gt;经过广泛测试。特别是 &lt;code&gt;d_semctl_semun&lt;/code&gt; 是未定义的，因为它未通过Configure测试，并且在Win9x上</target>
        </trans-unit>
        <trans-unit id="2235e00b8313ce99cbd9b52cd441ef5625f482e5" translate="yes" xml:space="preserve">
          <source>NOTE: This is the canonical version of the method. The version in &lt;a href=&quot;File::Spec::VMS&quot;&gt;File::Spec::VMS&lt;/a&gt; is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93561b423a89d40f27ddedd870c2c3c213cd0ca9" translate="yes" xml:space="preserve">
          <source>NOTE: This is the canonical version of the method. The version in File::Spec::VMS is deprecated.</source>
          <target state="translated">注意:这是该方法的规范版本。File::Spec::VMS 中的版本已经过时。</target>
        </trans-unit>
        <trans-unit id="f653cc8c3999a85d9ddcfbc0bf440c5b24acc130" translate="yes" xml:space="preserve">
          <source>NOTE: This section presents an abstract approximation of regular expression behavior. For a more rigorous (and complicated) view of the rules involved in selecting a match among possible alternatives, see &lt;a href=&quot;#Combining-RE-Pieces&quot;&gt;&quot;Combining RE Pieces&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfe8cfad2c7f08a016e53df968cd93d3ee1a3d3" translate="yes" xml:space="preserve">
          <source>NOTE: This section presents an abstract approximation of regular expression behavior. For a more rigorous (and complicated) view of the rules involved in selecting a match among possible alternatives, see &lt;a href=&quot;#Combining-RE-Pieces&quot;&gt;Combining RE Pieces&lt;/a&gt;.</source>
          <target state="translated">注意：本节介绍了正则表达式行为的抽象近似。有关在可能的替代方案中选择匹配项的规则的更严格（更复杂）的视图，请参阅《&lt;a href=&quot;#Combining-RE-Pieces&quot;&gt;组合RE件》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f97ff6e3100b23f28f9a60da39c11eb47af9c9a6" translate="yes" xml:space="preserve">
          <source>NOTE: This warning detects package symbols that have been used only once. This means lexical variables will never trigger this warning. It also means that all of the package variables $c, @c, %c, as well as *c, &amp;amp;c, sub c{}, c(), and c (the filehandle or format) are considered the same; if a program uses $c only once but also uses any of the others it will not trigger this warning. Symbols beginning with an underscore and symbols using special identifiers (q.v. &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;) are exempt from this warning.</source>
          <target state="translated">注意：此警告检测仅使用过一次的包装符号。这意味着词汇变量将永远不会触发此警告。这也意味着所有包变量$ c，@ c，％c以及* c，＆c，sub c {}，c（）和c（文件句柄或格式）都被视为相同；如果程序仅使用$ c一次，但也使用其他任何一个程序，则不会触发此警告。以下划线开头的符号和使用特殊标识符（qv &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;）的符号均不受此警告的限制。</target>
        </trans-unit>
        <trans-unit id="5871f00a4b47482fbc58aebc0cc4ba62002b52da" translate="yes" xml:space="preserve">
          <source>NOTE: This was fixed in perl 5.20. Mentioning these three variables no longer makes a speed difference. This section still applies if your code is to run on perl 5.18 or earlier.</source>
          <target state="translated">注意:这个问题在perl 5.20中得到了修正。提到这三个变量不再会造成速度上的差异。如果你的代码要在perl 5.18或更早的版本上运行,本节仍然适用。</target>
        </trans-unit>
        <trans-unit id="6324a263e1895ae371269bca4d897ca5cff9e0a3" translate="yes" xml:space="preserve">
          <source>NOTE: When &lt;a href=&quot;ExtUtils::MM&quot;&gt;ExtUtils::MM&lt;/a&gt; is loaded it chooses a superclass for MM from amongst the ExtUtils::MM_* modules based on the current operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e360e636f982b17adc20c8e88ac33bf0ddfb0d5f" translate="yes" xml:space="preserve">
          <source>NOTE: When using this option to alter the extension of a module's loadable object, it is also necessary that the module's pm file specifies the same change:</source>
          <target state="translated">注意:当使用这个选项来改变模块的可加载对象的扩展名时,也需要模块的pm文件指定相同的改变。</target>
        </trans-unit>
        <trans-unit id="bdfc117a261c4487af6b7a42f6e1291c57974793" translate="yes" xml:space="preserve">
          <source>NOTE: Yes, this is a mess. See &lt;a href=&quot;http://archive.develooper.com/makemaker@perl.org/msg00134.html&quot;&gt;http://archive.develooper.com/makemaker@perl.org/msg00134.html&lt;/a&gt; for some history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376fb7bcf600539ba82d51a66a1efcb849c8327e" translate="yes" xml:space="preserve">
          <source>NOTE: during a build there could be created a number (or one) of</source>
          <target state="translated">注意:在构建过程中,可能会创建一些(或一个)的</target>
        </trans-unit>
        <trans-unit id="ea17cbc15e73a4439305d4a5eaa00618c0f4354b" translate="yes" xml:space="preserve">
          <source>NOTE: the NaN payload APIs are based on the latest (as of June 2015) proposed ISO C interfaces, but they are not yet a standard. Things may change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb89f1a65c1db4fe7065e44b17a7dc45e0c343" translate="yes" xml:space="preserve">
          <source>NOTE: the perl_ form of this function is deprecated.</source>
          <target state="translated">注意:这个函数的perl_形式已经过时。</target>
        </trans-unit>
        <trans-unit id="259672a245b4c95b8c72c4ad7549e5e6b6f26678" translate="yes" xml:space="preserve">
          <source>NOTE: this function is experimental and may change or be removed without notice.</source>
          <target state="translated">注意:此功能是试验性的,可能会在不通知的情况下更改或删除。</target>
        </trans-unit>
        <trans-unit id="a33eb4db5f4c5d89147eba4406fbdfdfe557672e" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_av_create_and_push with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e2262bd5b95a859bc1a2c93f9d408eb99eab78" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_av_create_and_unshift_one with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3d58bf1438c4c6241c66bb37ecbdb244a70618" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_blockhook_register with an aTHX_ parameter.</source>
          <target state="translated">注意:这个函数必须以 Perl_blockhook_register 的形式明确调用,并使用 aTHX_参数。</target>
        </trans-unit>
        <trans-unit id="d7b1f0204d1784d6985d1beacf1a3919bed1aa91" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_custom_op_register with an aTHX_ parameter.</source>
          <target state="translated">注意:这个函数必须以 Perl_custom_op_register 的形式明确调用,并使用 aTHX_参数。</target>
        </trans-unit>
        <trans-unit id="6babb9cf8fb6ef67053f45016008ddba04aec872" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_custom_op_xop with an aTHX_ parameter.</source>
          <target state="translated">注意:这个函数必须以 Perl_custom_op_xop 的形式明确调用,并使用 aTHX_参数。</target>
        </trans-unit>
        <trans-unit id="b159c116788bb9d42ea050ce36c9737031992cdb" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_hv_assert with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c08dd051851cab61787d1e02454177c1d426b4f" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_hv_fill with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c35c13dd37990737f29f6eaec9450f57ed8d98" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_magic_methcall with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3dc30cd58d0d45defc4c1bd85171b5851ea611" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_mro_register with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623bce064ae2394282ca4352cc0845eed93e9159" translate="yes" xml:space="preserve">
          <source>NOTE: this function must be explicitly called as Perl_start_glob with an aTHX_ parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb98ccf0885ad4b3b865d59fcf8b08abb3ba7533" translate="yes" xml:space="preserve">
          <source>NOTE: unless your Perl has been compiled with debug info (often &lt;b&gt;-g&lt;/b&gt;), the stack trace is likely to be somewhat hard to use because it will most probably contain only the function names and not their arguments. If possible, recompile your Perl with debug info and reproduce the crash and the stack trace.</source>
          <target state="translated">注意：除非您的Perl已使用调试信息（通常为&lt;b&gt;-g&lt;/b&gt;）编译，否则堆栈跟踪可能会很难使用，因为它很可能仅包含函数名称而不包含其参数。如果可能，请使用调试信息重新编译Perl，并重现崩溃和堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="d1560e71dccb0898373285ee4f50b724b2b71c7d" translate="yes" xml:space="preserve">
          <source>NOTE: you can pass either the object directly or the SV contained within the RV.</source>
          <target state="translated">注意:你可以直接传递对象,也可以传递RV中包含的SV。</target>
        </trans-unit>
        <trans-unit id="e69fc18a69727f31dc484cc6cc5d98f4552fffd6" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES</target>
        </trans-unit>
        <trans-unit id="ca9bb80b927e1f747948f6be662bf44318c1f39e" translate="yes" xml:space="preserve">
          <source>NOTES &amp;amp;&amp;amp; CAVEATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f05e227bc69b9c43de84ec895a9faed1f7b4aa" translate="yes" xml:space="preserve">
          <source>NOTES FOR IMPLEMENTORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc8974be5d154b1084db932a691a405a4c97b92" translate="yes" xml:space="preserve">
          <source>NOTES ON CUSTOMIZATION</source>
          <target state="translated">关于定制化的说明</target>
        </trans-unit>
        <trans-unit id="fe71871083ca490e6bc0da33fb48ce231f820a94" translate="yes" xml:space="preserve">
          <source>NOTICE</source>
          <target state="translated">NOTICE</target>
        </trans-unit>
        <trans-unit id="9d379c9bca90d391f4c7c80b6ee18ca954e9daee" translate="yes" xml:space="preserve">
          <source>NO_COLOR</source>
          <target state="translated">NO_COLOR</target>
        </trans-unit>
        <trans-unit id="bb12929c24b3715cb12e906f7859970b509fae40" translate="yes" xml:space="preserve">
          <source>NO_META</source>
          <target state="translated">NO_META</target>
        </trans-unit>
        <trans-unit id="559eb72468b854747e75621aff713b8e7e7d9391" translate="yes" xml:space="preserve">
          <source>NO_MYMETA</source>
          <target state="translated">NO_MYMETA</target>
        </trans-unit>
        <trans-unit id="cb279b60b97f699d3e518821acdba981cd19ddff" translate="yes" xml:space="preserve">
          <source>NO_PACKLIST</source>
          <target state="translated">NO_PACKLIST</target>
        </trans-unit>
        <trans-unit id="6df50ca6f085eef53a1d294af151847fd55dc1fd" translate="yes" xml:space="preserve">
          <source>NO_PERLLOCAL</source>
          <target state="translated">NO_PERLLOCAL</target>
        </trans-unit>
        <trans-unit id="106cd42701eab33079b05c517f262d495992d284" translate="yes" xml:space="preserve">
          <source>NO_VC</source>
          <target state="translated">NO_VC</target>
        </trans-unit>
        <trans-unit id="20fba7fb07c15dd5e4b286e814069b42b6d4cf66" translate="yes" xml:space="preserve">
          <source>NUL</source>
          <target state="translated">NUL</target>
        </trans-unit>
        <trans-unit id="0caa59b644c0cefac70de91f3a56d8b895dc8638" translate="yes" xml:space="preserve">
          <source>NUL terminated string, length will be determined with &lt;code&gt;strlen&lt;/code&gt;</source>
          <target state="translated">NUL终止的字符串，长度将由 &lt;code&gt;strlen&lt;/code&gt; 确定</target>
        </trans-unit>
        <trans-unit id="9618acc0df0394ab4c059fe5284c47cb34741100" translate="yes" xml:space="preserve">
          <source>NULL OP IN RUN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47772c7a46c443ef637a948d4d60da7733075770" translate="yes" xml:space="preserve">
          <source>NULL regexp argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67527a1d9b957d6ff496b6a019534a5af79d800" translate="yes" xml:space="preserve">
          <source>NULL regexp parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2fb40b4decc623e7e7104506804374fa2e9c3b" translate="yes" xml:space="preserve">
          <source>NULL will be returned if a REGEXP* is not found.</source>
          <target state="translated">如果没有找到REGEXP*,将返回NULL。</target>
        </trans-unit>
        <trans-unit id="6c2496a022b02739f43ed430676315b0c3b34a08" translate="yes" xml:space="preserve">
          <source>NUMBER</source>
          <target state="translated">NUMBER</target>
        </trans-unit>
        <trans-unit id="9a969c7ad3b1a0b9595b8188b657f82438b62232" translate="yes" xml:space="preserve">
          <source>NV</source>
          <target state="translated">NV</target>
        </trans-unit>
        <trans-unit id="de8dc4fa7c538b042ca7c0d8c2872f7018b2f2d9" translate="yes" xml:space="preserve">
          <source>NVX</source>
          <target state="translated">NVX</target>
        </trans-unit>
        <trans-unit id="def32bbdca04fbf76d7fa0113c3d0fd8eea98a15" translate="yes" xml:space="preserve">
          <source>NYI</source>
          <target state="translated">NYI</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="784fe306d7073aacaa442494af76294e3c4c800c" translate="yes" xml:space="preserve">
          <source>NaN()</source>
          <target state="translated">NaN()</target>
        </trans-unit>
        <trans-unit id="8ea6de70f2564dc30edd68bddca7689ae4a18ad9" translate="yes" xml:space="preserve">
          <source>NaN, as opposed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdd06e23eea433753b56651dbbec75237cf1329" translate="yes" xml:space="preserve">
          <source>NaN.</source>
          <target state="translated">NaN.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="bd023d4abed699d0493893db0b8a9b139b7421f3" translate="yes" xml:space="preserve">
          <source>Name &quot;%s&quot; used only once: possible typo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03976a62cd47751685b4ca15bb96f0bcaf7e4a01" translate="yes" xml:space="preserve">
          <source>Name &quot;%s::%s&quot; used only once: possible typo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5a7c30af283c6875cea008a552e7d7c9264007" translate="yes" xml:space="preserve">
          <source>Name of current executing subroutine.</source>
          <target state="translated">当前正在执行的子程序的名称。</target>
        </trans-unit>
        <trans-unit id="5d6475ea1ed77582899f2ede3c078b5d7ca7f2d5" translate="yes" xml:space="preserve">
          <source>Name of the MRO, either in ISO-8859-1 or UTF-8.</source>
          <target state="translated">MRO的名称,可以是ISO-8859-1或UTF-8。</target>
        </trans-unit>
        <trans-unit id="f311c3300c6ca77afd17b4650f40819e62321f9f" translate="yes" xml:space="preserve">
          <source>Name of the executable used to run &lt;code&gt;PPM_INSTALL_SCRIPT&lt;/code&gt; below. (e.g. perl)</source>
          <target state="translated">下面用于运行 &lt;code&gt;PPM_INSTALL_SCRIPT&lt;/code&gt; 的可执行文件的名称。（例如perl）</target>
        </trans-unit>
        <trans-unit id="e843afb94a5b81c10884290c28f3a8b15754d088" translate="yes" xml:space="preserve">
          <source>Name of the executable used to run &lt;code&gt;PPM_UNINSTALL_SCRIPT&lt;/code&gt; below. (e.g. perl)</source>
          <target state="translated">下面用于运行 &lt;code&gt;PPM_UNINSTALL_SCRIPT&lt;/code&gt; 的可执行文件的名称。（例如perl）</target>
        </trans-unit>
        <trans-unit id="8624fc8eceebc0b51b2143689f1f48b7ecc08665" translate="yes" xml:space="preserve">
          <source>Name of the file that contains the package description. MakeMaker looks for a line in the POD matching /^($package\s-\s)(.*)/. This is typically the first line in the &quot;=head1 NAME&quot; section. $2 becomes the abstract.</source>
          <target state="translated">包含包描述的文件名。MakeMaker在POD中寻找与/^($package\s-\s)(.*)/匹配的一行。这通常是&quot;=head1 NAME &quot;部分的第一行。2元成为摘要。</target>
        </trans-unit>
        <trans-unit id="8c3cf8734b2c68bc08b2cd79d4d6ccc0136f6aa2" translate="yes" xml:space="preserve">
          <source>Name of the module. This must be specified</source>
          <target state="translated">模块的名称。必须指定</target>
        </trans-unit>
        <trans-unit id="7868a8b47d3d92cc64ccf808862aaae2ad267aa5" translate="yes" xml:space="preserve">
          <source>Name of the script that gets executed by the Perl Package Manager after the installation of a package.</source>
          <target state="translated">安装软件包后,Perl 包管理器执行的脚本名称。</target>
        </trans-unit>
        <trans-unit id="c0c5023ea38126581b7ad8749f0a6eeac640c079" translate="yes" xml:space="preserve">
          <source>Name of the script that gets executed by the Perl Package Manager before the removal of a package.</source>
          <target state="translated">移除软件包前,Perl 包管理器执行的脚本名称。</target>
        </trans-unit>
        <trans-unit id="2eb9b9a155f6c64706ab31edb5653aa07c449701" translate="yes" xml:space="preserve">
          <source>Name of the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d34802dcd2d7fcce651f51b7ec73165b93670d1" translate="yes" xml:space="preserve">
          <source>Name_Alias</source>
          <target state="translated">Name_Alias</target>
        </trans-unit>
        <trans-unit id="68785b7e9b3c03448ca8a837701cc8c707a8e260" translate="yes" xml:space="preserve">
          <source>Named Pipes</source>
          <target state="translated">命名管</target>
        </trans-unit>
        <trans-unit id="38f9681437d9ef50ce0be66a608e2a42a4859202" translate="yes" xml:space="preserve">
          <source>Named Unary Operators</source>
          <target state="translated">已命名的单利运算符</target>
        </trans-unit>
        <trans-unit id="363027e7f4ba04f6c37400d54c44141712c1efe2" translate="yes" xml:space="preserve">
          <source>Named Unicode properties, scripts, and block ranges may be used (like bracketed character classes) by using the &lt;code&gt;\p{}&lt;/code&gt; &quot;matches property&quot; construct and the &lt;code&gt;\P{}&lt;/code&gt; negation, &quot;doesn't match property&quot;.</source>
          <target state="translated">通过使用 &lt;code&gt;\p{}&lt;/code&gt; &amp;ldquo; matches属性&amp;rdquo;构造和 &lt;code&gt;\P{}&lt;/code&gt; 否定&amp;ldquo;不匹配属性&amp;rdquo;，可以使用命名的Unicode属性，脚本和块范围（如括号字符类）。</target>
        </trans-unit>
        <trans-unit id="f7f3bf2783d20b66cecd2489a0534cdb07661abf" translate="yes" xml:space="preserve">
          <source>Named backreference. Similar to numeric backreferences, except that the group is designated by name and not number. If multiple groups have the same name then it refers to the leftmost defined group in the current match.</source>
          <target state="translated">命名后引用。类似于数字反引用,只不过组是用名称而不是数字指定的。如果多个组有相同的名称,那么它指的是当前匹配中最左边定义的组。</target>
        </trans-unit>
        <trans-unit id="8dc1cc0c73966f67aab3d39f6cd441d18321c8ff" translate="yes" xml:space="preserve">
          <source>Named backreferences</source>
          <target state="translated">命名后引用</target>
        </trans-unit>
        <trans-unit id="16f988a61667e6887152ee06c28af4c95a899d43" translate="yes" xml:space="preserve">
          <source>Named capture callbacks</source>
          <target state="translated">已命名的捕获回调</target>
        </trans-unit>
        <trans-unit id="a3c4ad7c429d9290102e7a6d5ae4db5c22f03f6f" translate="yes" xml:space="preserve">
          <source>Named or numbered characters and character sequences</source>
          <target state="translated">命名或编号的字符和字符序列。</target>
        </trans-unit>
        <trans-unit id="65c4b696d78a27092b9642bc7761e57eb905bc44" translate="yes" xml:space="preserve">
          <source>Named parameters control how the processing is done. The following parameters are accepted:</source>
          <target state="translated">已命名的参数控制如何进行处理。可接受以下参数:</target>
        </trans-unit>
        <trans-unit id="8f1d236b5d1295b7af7be948d212edc9fb3b966e" translate="yes" xml:space="preserve">
          <source>Named referencing</source>
          <target state="translated">命名引用</target>
        </trans-unit>
        <trans-unit id="50a6776c3f86da85ce1ec46afa315f3a40ef3305" translate="yes" xml:space="preserve">
          <source>Named regexp capture buffers</source>
          <target state="translated">已命名的regexp捕获缓冲区</target>
        </trans-unit>
        <trans-unit id="5bc55622970622d1a946affa392f121998a96cf2" translate="yes" xml:space="preserve">
          <source>Named sequences proposed for inclusion in a later version of the Unicode Standard; if you need them now, you can append this file to</source>
          <target state="translated">建议在以后的Unicode标准版本中加入命名序列;如果你现在需要它们,你可以将这个文件附加到</target>
        </trans-unit>
        <trans-unit id="5c3780cc2079e280219cd2c73d0c31b04ec16680" translate="yes" xml:space="preserve">
          <source>NamedSequences.txt</source>
          <target state="translated">NamedSequences.txt</target>
        </trans-unit>
        <trans-unit id="e037613d4443785152fa3d95c2810f8c3354dd9d" translate="yes" xml:space="preserve">
          <source>NamedSqProv.txt</source>
          <target state="translated">NamedSqProv.txt</target>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="baefd92d48050a7240199d96c1a36a56b359c89c" translate="yes" xml:space="preserve">
          <source>Names can be specified in a variety of platform independent forms. Any names in the form &lt;b&gt;-lname&lt;/b&gt; are converted into</source>
          <target state="translated">可以以多种平台无关的形式指定名称。&lt;b&gt;-lname&lt;/b&gt;格式的任何名称都将转换为</target>
        </trans-unit>
        <trans-unit id="6b7a2802d0082d79ff8976f3240ee6e3da8a9ceb" translate="yes" xml:space="preserve">
          <source>Names can include package names, which are relative to the specified PACKAGE. So these two calls have the same effect:</source>
          <target state="translated">名字可以包括包名,包名是相对于指定的PACKAGE而言的。所以这两个调用的效果是一样的。</target>
        </trans-unit>
        <trans-unit id="821821513dd7967a6e00087d901b1371b2e3ad09" translate="yes" xml:space="preserve">
          <source>Names in EXPORT_TAGS must also appear in @EXPORT or @EXPORT_OK.</source>
          <target state="translated">EXPORT_TAGS中的名字也必须出现在@EXPORT或@EXPORT_OK中。</target>
        </trans-unit>
        <trans-unit id="c41eeb7fb1662a7738050a541890eb91cb128a6c" translate="yes" xml:space="preserve">
          <source>Names that start with a digit may contain only more digits. Names that do not start with a letter, underscore, digit or a caret (i.e. a control character) are limited to one character, e.g., &lt;code&gt;$%&lt;/code&gt; or &lt;code&gt;$$&lt;/code&gt; . (Most of these one character names have a predefined significance to Perl. For instance, &lt;code&gt;$$&lt;/code&gt; is the current process id.)</source>
          <target state="translated">以数字开头的名称只能包含更多数字。不以字母，下划线，数字或插入符号（即控制字符）开头的名称仅限于一个字符，例如 &lt;code&gt;$%&lt;/code&gt; 或 &lt;code&gt;$$&lt;/code&gt; 。（这些字符中的大多数字符名称对Perl都有预定义的意义。例如， &lt;code&gt;$$&lt;/code&gt; 是当前进程ID。）</target>
        </trans-unit>
        <trans-unit id="d6e3c92c2253dbdd3c4ece3e19dfc6a918646d7c" translate="yes" xml:space="preserve">
          <source>Names that start with a digit may contain only more digits. Names that do not start with a letter, underscore, digit or a caret are limited to one character, e.g., &lt;code&gt;$%&lt;/code&gt; or &lt;code&gt;$$&lt;/code&gt;. (Most of these one character names have a predefined significance to Perl. For instance, &lt;code&gt;$$&lt;/code&gt; is the current process id. And all such names are reserved for Perl's possible use.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61c957a0ea0313872e704f1b4fb7ca6add44160" translate="yes" xml:space="preserve">
          <source>Names which are unknown are output as &lt;code&gt;name='UNKNOWN';&lt;/code&gt; . See also &lt;code&gt;-V:name&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;.</source>
          <target state="translated">未知 &lt;code&gt;name='UNKNOWN';&lt;/code&gt; 输出为name ='UNKNOWN'; 。另请参见&lt;a href=&quot;perlrun#Command-Switches&quot;&gt;perlrun&lt;/a&gt;中的命令开关中的 &lt;code&gt;-V:name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5410d6566e489278d83cf4a60c9e048f5044cfdb" translate="yes" xml:space="preserve">
          <source>Names which are unknown are output as &lt;code&gt;name='UNKNOWN';&lt;/code&gt;. See also &lt;code&gt;-V:name&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;&quot;Command Switches&quot; in perlrun&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acbec48b382ee1ec2cbdc1893b6da5a5a130d2d" translate="yes" xml:space="preserve">
          <source>NamesList.html</source>
          <target state="translated">NamesList.html</target>
        </trans-unit>
        <trans-unit id="98ccbf4f5c0c9d25ab257fc9d0e7b0d41bb961f3" translate="yes" xml:space="preserve">
          <source>NamesList.txt</source>
          <target state="translated">NamesList.txt</target>
        </trans-unit>
        <trans-unit id="286ecdc947944985bf973a72fa95a40f4b1c4f17" translate="yes" xml:space="preserve">
          <source>Namespace for Perl's core routines</source>
          <target state="translated">Perl核心例程的命名空间</target>
        </trans-unit>
        <trans-unit id="da7731dc19a7c651d54b18d692eb80fc4c7ecba5" translate="yes" xml:space="preserve">
          <source>Namespace for formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34803b64f16548b242233b7132d75f6e5f8fe8e6" translate="yes" xml:space="preserve">
          <source>Naming conventions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3056e2bd0eee723080eaab7641ee4953af255c2b" translate="yes" xml:space="preserve">
          <source>Nathan Torkington &amp;lt;gnat@frii.com&amp;gt; - for some input on the documentation.</source>
          <target state="translated">Nathan Torkington &amp;lt;gnat@frii.com&amp;gt;-有关文档的一些输入。</target>
        </trans-unit>
        <trans-unit id="4fc6e7f740abb8af896ebedebf941a3f8d7076b5" translate="yes" xml:space="preserve">
          <source>Native</source>
          <target state="translated">Native</target>
        </trans-unit>
        <trans-unit id="425a4714dabb702a64966a65e07281505da878fd" translate="yes" xml:space="preserve">
          <source>Native Builds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab012d77f1bfa1be662b51a80ae510c6cc5e59a" translate="yes" xml:space="preserve">
          <source>Native filenames are of the form</source>
          <target state="translated">本地文件名的形式是</target>
        </trans-unit>
        <trans-unit id="f32184e7a20d2a9f1d6a13ce8f1e8d87d0cb4d78" translate="yes" xml:space="preserve">
          <source>Natively compiling perl 5.30 or later should be as straightforward as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9026c8c56fc624332cd74cb5876316288c820bc7" translate="yes" xml:space="preserve">
          <source>Naturally, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; will do the reverse: it turns a character into a code point.</source>
          <target state="translated">自然， &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; 会做相反的事情：它将字符转换为代码点。</target>
        </trans-unit>
        <trans-unit id="7462c5dafb369c2da402d8819a84ebcb4f3bc37d" translate="yes" xml:space="preserve">
          <source>Naturally, &lt;code&gt;ord()&lt;/code&gt; will do the reverse: it turns a character into a code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e294c54a3821c9309d267be94bb7315c4078d9b4" translate="yes" xml:space="preserve">
          <source>Nearly all of Perl already</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a140f3939f57780fd27a1d0165e3f2dc71e5686" translate="yes" xml:space="preserve">
          <source>Nearly all regops that involve looking at the input string have two cases, one for UTF-8, and one not. In fact, it's often more complex than that, as the pattern may be UTF-8 as well.</source>
          <target state="translated">几乎所有涉及到看输入字符串的regops都有两种情况,一种是UTF-8,一种不是。事实上,它往往比这更复杂,因为模式可能也是UTF-8。</target>
        </trans-unit>
        <trans-unit id="1fd3d62f70c4406780dc474d5a41b0bf90bd7065" translate="yes" xml:space="preserve">
          <source>Need exactly 3 octal digits in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3f8a85f04426583b54b3312fffad6ba80924a3" translate="yes" xml:space="preserve">
          <source>Needed source files can be downloaded at &lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt;</source>
          <target state="translated">所需的源文件可以从&lt;a href=&quot;http://perlce.sourceforge.net&quot;&gt;http://perlce.sourceforge.net&lt;/a&gt;下载。</target>
        </trans-unit>
        <trans-unit id="b4c6bdc96d2ca3d241efb74d4a188d630f77bcd7" translate="yes" xml:space="preserve">
          <source>Negate the number, e.g. change the sign between '+' and '-', or between '+inf' and '-inf', respectively. Does nothing for NaN or zero.</source>
          <target state="translated">负数,例如在'+'和'-'之间改变符号,或在'+inf'和'-inf'之间分别改变符号。对NaN或零没有任何作用。</target>
        </trans-unit>
        <trans-unit id="6d32e5cf3d83bdea0163589b14f9ddb6e83801ec" translate="yes" xml:space="preserve">
          <source>Negates previous setting of &lt;code&gt;ctx=noctx&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24048c04eba343a323fecac37d642445c66f6c28" translate="yes" xml:space="preserve">
          <source>Negation</source>
          <target state="translated">Negation</target>
        </trans-unit>
        <trans-unit id="7eeb67f2368c6c772835291295311889c092fbbd" translate="yes" xml:space="preserve">
          <source>Negation of POSIX character classes</source>
          <target state="translated">POSIX字符类的否定</target>
        </trans-unit>
        <trans-unit id="0bbb46ed18fc239283ab5d6721b9f20daf485efe" translate="yes" xml:space="preserve">
          <source>Negative '/' count in unpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838604a201964cc68e7ef736a20025e0b5fec649" translate="yes" xml:space="preserve">
          <source>Negative Epoch Values</source>
          <target state="translated">负时代值</target>
        </trans-unit>
        <trans-unit id="19f49d5d6ade2549965db79a7030897c2f5f4f62" translate="yes" xml:space="preserve">
          <source>Negative index positions are supported. Specifying a negative index position greater than the number of items in the queue may return items from the head of the queue (similar to &lt;code&gt;dequeue_nb&lt;/code&gt; ) if the count overlaps the head of the queue from the specified position (i.e. if queue size + index + count is greater than zero):</source>
          <target state="translated">支持负索引位置。如果指定的负索引位置大于队列中的项目数，则如果计数与指定位置的队列开头重叠（即，如果队列大小+索引+计数），则可能从队列的开头返回项目（类似于 &lt;code&gt;dequeue_nb&lt;/code&gt; ）。大于零）：</target>
        </trans-unit>
        <trans-unit id="77f35a19afaa31759454e6029201200e580e338f" translate="yes" xml:space="preserve">
          <source>Negative index positions are supported. Specifying a negative index position greater than the number of items in the queue may return items from the head of the queue (similar to &lt;code&gt;dequeue_nb&lt;/code&gt;) if the count overlaps the head of the queue from the specified position (i.e. if queue size + index + count is greater than zero):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a43ac9c627d0de9e56d6cc12c6dfda0e520af0" translate="yes" xml:space="preserve">
          <source>Negative index positions are supported:</source>
          <target state="translated">支持负指数位置。</target>
        </trans-unit>
        <trans-unit id="ea5e4636dc65fd0c83bdadbdf91aa1d35d1fb840" translate="yes" xml:space="preserve">
          <source>Negative indexes are treated the same as with FETCH.</source>
          <target state="translated">负指数的处理与FETCH相同。</target>
        </trans-unit>
        <trans-unit id="fe95900811e52afa9dd58cd10e425f82213ff9ca" translate="yes" xml:space="preserve">
          <source>Negative length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e608ed3d872d4ab6a4bbdcfb93eb90da28b4eec1" translate="yes" xml:space="preserve">
          <source>Negative offset to vec in lvalue context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed04f2afce275a8c0ec8d20c42d1e68c8ed46a8b" translate="yes" xml:space="preserve">
          <source>Negative repeat count does nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ec1ebfabb890ebda597976839aada64bc04b63" translate="yes" xml:space="preserve">
          <source>Negative values give the Unicode replacement character (chr(0xfffd)), except under the &lt;a href=&quot;../bytes&quot;&gt;bytes&lt;/a&gt; pragma, where the low eight bits of the value (truncated to an integer) are used.</source>
          <target state="translated">负值给出了Unicode替换字符（chr（0xfffd）），但在&lt;a href=&quot;../bytes&quot;&gt;字节&lt;/a&gt;杂注下除外，在该字节处使用了值的低八位（被截断为整数）。</target>
        </trans-unit>
        <trans-unit id="1c329b07c62265cbfacaf020c4fd1ffae1eec60d" translate="yes" xml:space="preserve">
          <source>Negative values give the Unicode replacement character (chr(0xfffd)), except under the &lt;a href=&quot;bytes&quot;&gt;bytes&lt;/a&gt; pragma, where the low eight bits of the value (truncated to an integer) are used.</source>
          <target state="translated">负值给出了Unicode替换字符（chr（0xfffd）），但在&lt;a href=&quot;bytes&quot;&gt;字节&lt;/a&gt;杂注下除外，在该字节处使用了值的低八位（被截断为整数）。</target>
        </trans-unit>
        <trans-unit id="1f8e2d0b246c79d6b8bec7311afcd29fb2d3ca36" translate="yes" xml:space="preserve">
          <source>Neil Bowers &amp;lt;neil@bowers.com&amp;gt;</source>
          <target state="translated">尼尔&amp;middot;鲍尔斯&amp;lt;neil@bowers.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6d2dec944babf88ec6f3aa5e208e251180845055" translate="yes" xml:space="preserve">
          <source>Neither IPC::Run nor IPC::Open3 can interleave STDOUT and STDERR. For short bursts of output from a program, e.g. this sample,</source>
          <target state="translated">IPC::Run 和 IPC::Open3 都不能交错使用 STDOUT 和 STDERR。对于程序的短时输出,例如这个样本。</target>
        </trans-unit>
        <trans-unit id="347950b60212511ddff56b7de9a7367e8d020bbb" translate="yes" xml:space="preserve">
          <source>Neither of these forms will autovivify any stashes at compile time and only have run time effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55223738b7234df257020b80e5bb6455348daec" translate="yes" xml:space="preserve">
          <source>Neither of these last two commands will update your working directory, however both will update the remote-tracking branches in your repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfe7ff09d4107e0ffd3c63c3f6ea8716597ff26" translate="yes" xml:space="preserve">
          <source>Neither the name of the University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ec836d28f250f8bd76b8042a3917b08e1cacac" translate="yes" xml:space="preserve">
          <source>Neither using offsets nor adding &lt;code&gt;x&lt;/code&gt; 's to bridge the gaps is satisfactory. (Just imagine what happens if the structure changes.) What we really need is a way of saying &quot;skip as many bytes as required to the next multiple of N&quot;. In fluent Templatese, you say this with &lt;code&gt;x!N&lt;/code&gt; where N is replaced by the appropriate value. Here's the next version of our struct packaging:</source>
          <target state="translated">既不使用偏移量也不添加 &lt;code&gt;x&lt;/code&gt; 来弥合间隙是令人满意的。（想象一下如果结构发生变化会发生什么。）我们真正需要的是一种&amp;ldquo;将所需的字节跳至N的下一个倍数&amp;rdquo;的方式。在流利的Templatese中，您用 &lt;code&gt;x!N&lt;/code&gt; 表示，其中N被适当的值替换。这是结构包装的下一个版本：</target>
        </trans-unit>
        <trans-unit id="60a99bcf07880ccd5a328d1c33878c630eeaa795" translate="yes" xml:space="preserve">
          <source>Neither using offsets nor adding &lt;code&gt;x&lt;/code&gt;'s to bridge the gaps is satisfactory. (Just imagine what happens if the structure changes.) What we really need is a way of saying &quot;skip as many bytes as required to the next multiple of N&quot;. In fluent Templatese, you say this with &lt;code&gt;x!N&lt;/code&gt; where N is replaced by the appropriate value. Here's the next version of our struct packaging:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07a42044209eb0a8555ca6ade59268b7094a144" translate="yes" xml:space="preserve">
          <source>Nelson, Greg (editor). Systems Programming with Modula-3. Prentice Hall, 1991, ISBN 0-13-590464-1.</source>
          <target state="translated">Nelson,Greg(编辑)。系统编程与Modula-3。Prentice Hall,1991,ISBN 0-13-590464-1。</target>
        </trans-unit>
        <trans-unit id="f70ac392d4ed3bbaf151d74c3300a0bf8e1f667a" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; constructs are not no-ops, even if at first glance they might seem to be. This is because the nested &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; can restrict internal backtracking that otherwise might occur. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c5029fd7192d4f3ec3c0c9acc5e8ee66ed64a0" translate="yes" xml:space="preserve">
          <source>Nested quantifiers in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76def473f02aedcda635cf9dd95594a147e23e1" translate="yes" xml:space="preserve">
          <source>Nesting level is defined by number of hash- or arrayrefs that the encoder needs to traverse to reach a given point or the number of &lt;code&gt;{&lt;/code&gt; or &lt;code&gt;[&lt;/code&gt; characters without their matching closing parenthesis crossed to reach a given character in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efebdaa6b0f715d9d72c6ff062fcce8380a1d17" translate="yes" xml:space="preserve">
          <source>Net::BitTorrent</source>
          <target state="translated">Net::BitTorrent</target>
        </trans-unit>
        <trans-unit id="4eb9236f898d35e46f6533b663fb0cc39ac3281b" translate="yes" xml:space="preserve">
          <source>Net::Cmd</source>
          <target state="translated">Net::Cmd</target>
        </trans-unit>
        <trans-unit id="9b649db7310bc211d9f1ac99e1a4786a84597204" translate="yes" xml:space="preserve">
          <source>Net::Cmd - Network Command class (as used by FTP, SMTP etc)</source>
          <target state="translated">Net::Cmd-网络命令类(如FTP、SMTP等)。</target>
        </trans-unit>
        <trans-unit id="1294c92fcf04499d6b81523ccdaa5539dece0dcd" translate="yes" xml:space="preserve">
          <source>Net::Config</source>
          <target state="translated">Net::Config</target>
        </trans-unit>
        <trans-unit id="90625b9f0d5c16a32efbdc040ebbf3d89a17fb98" translate="yes" xml:space="preserve">
          <source>Net::Config - Local configuration data for libnet</source>
          <target state="translated">Net::Config-libnet的本地配置数据。</target>
        </trans-unit>
        <trans-unit id="d2609cd7d34a9ef70d66b656d20f6d7141373166" translate="yes" xml:space="preserve">
          <source>Net::Domain</source>
          <target state="translated">Net::Domain</target>
        </trans-unit>
        <trans-unit id="79d06eb32b3346cf8bd3d603f70534bd0b81c26c" translate="yes" xml:space="preserve">
          <source>Net::Domain - Attempt to evaluate the current host's internet name and domain</source>
          <target state="translated">Net::Domain-尝试评估当前主机的互联网名称和域名。</target>
        </trans-unit>
        <trans-unit id="e600d59f8d5cea62e2e7232d04583ce46bcf0e54" translate="yes" xml:space="preserve">
          <source>Net::FTP</source>
          <target state="translated">Net::FTP</target>
        </trans-unit>
        <trans-unit id="760713d42087f7dca8f19249d8ef722a9fcee544" translate="yes" xml:space="preserve">
          <source>Net::FTP - FTP Client class</source>
          <target state="translated">Net::FTP-FTP客户端类</target>
        </trans-unit>
        <trans-unit id="92a35c424cd4eca45aaf00b8629e639085d233d4" translate="yes" xml:space="preserve">
          <source>Net::FTP implements the most popular ftp proxy firewall approach. The scheme implemented is that where you log in to the firewall with &lt;code&gt;user@hostname&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fe29b949236419be339c0b7efff07aa8604a33" translate="yes" xml:space="preserve">
          <source>Net::FTP uses IO::Socket to open the connection and IO::Socket allows the port number to be specified as part of the hostname. So this problem can be resolved by either passing a Firewall option like &lt;code&gt;&quot;hostname:1234&quot;&lt;/code&gt; or by setting the &lt;code&gt;ftp_firewall&lt;/code&gt; option in Net::Config to be a string in the same form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c4644c97591ee47a8aae6116ac76edd4f5d83b" translate="yes" xml:space="preserve">
          <source>Net::FTP, like several other packages in libnet, inherits from Net::Cmd, so all the methods described in Net::Cmd are also available on Net::FTP objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59946fef31b50a99653b28a153ac63abae9315d1" translate="yes" xml:space="preserve">
          <source>Net::FTP::dataconn</source>
          <target state="translated">Net::FTP::dataconn</target>
        </trans-unit>
        <trans-unit id="68e99886fb9e7eeead8137e48281b0ac46381c53" translate="yes" xml:space="preserve">
          <source>Net::FTP::dataconn - FTP Client data connection class</source>
          <target state="translated">Net::FTP::dataconn-FTP客户端数据连接类</target>
        </trans-unit>
        <trans-unit id="2ba79303d7df37b27bccb82e4aaeb8383769338b" translate="yes" xml:space="preserve">
          <source>Net::NNTP</source>
          <target state="translated">Net::NNTP</target>
        </trans-unit>
        <trans-unit id="1f88f3dc9b54f8f1f3117b189d2bcc352702751e" translate="yes" xml:space="preserve">
          <source>Net::NNTP - NNTP Client class</source>
          <target state="translated">Net::NNTP-NNTP客户端类</target>
        </trans-unit>
        <trans-unit id="634fa163a1bb55220f43fe3d8f658acf7bf2e805" translate="yes" xml:space="preserve">
          <source>Net::Netrc</source>
          <target state="translated">Net::Netrc</target>
        </trans-unit>
        <trans-unit id="e565165304b4cd87ebc082d3d778254a21d1e828" translate="yes" xml:space="preserve">
          <source>Net::Netrc - OO interface to users netrc file</source>
          <target state="translated">Net::Netrc-用户netrc文件的OO接口。</target>
        </trans-unit>
        <trans-unit id="07d7d837c6ee6980c7dd03a4fc9e0f56e0b48e2f" translate="yes" xml:space="preserve">
          <source>Net::POP3</source>
          <target state="translated">Net::POP3</target>
        </trans-unit>
        <trans-unit id="c035763415c5e31a5fb091c5e1210e8a45507f17" translate="yes" xml:space="preserve">
          <source>Net::POP3 - Post Office Protocol 3 Client class (RFC1939)</source>
          <target state="translated">Net::POP3-Post Office Protocol 3 Client class (RFC1939)</target>
        </trans-unit>
        <trans-unit id="aa89e2215ec797bac7f32905762d8dcb7883a796" translate="yes" xml:space="preserve">
          <source>Net::Ping</source>
          <target state="translated">Net::Ping</target>
        </trans-unit>
        <trans-unit id="797696af258d1ca33ead432810454bbe7f86b9d9" translate="yes" xml:space="preserve">
          <source>Net::Ping - check a remote host for reachability</source>
          <target state="translated">Net::Ping-检查远程主机的可到达性。</target>
        </trans-unit>
        <trans-unit id="7523e64a2a317d77f41e0ee4bcc5eaf0e15b59ef" translate="yes" xml:space="preserve">
          <source>Net::Ping-&amp;gt;new([proto, timeout, bytes, device, tos, ttl, family, host, port, bind, gateway, retrans, pingstring, source_verify econnrefused dontfrag IPV6_USE_MIN_MTU IPV6_RECVPATHMTU])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7892c063104435dff8c4fb6f81f8e0633b34593b" translate="yes" xml:space="preserve">
          <source>Net::SMTP</source>
          <target state="translated">Net::SMTP</target>
        </trans-unit>
        <trans-unit id="3f4b2bd689e539d2c249ffa70c859d6d28efdef2" translate="yes" xml:space="preserve">
          <source>Net::SMTP - Simple Mail Transfer Protocol Client</source>
          <target state="translated">Net::SMTP-简单邮件传输协议客户端</target>
        </trans-unit>
        <trans-unit id="06e6ad3b368406a8be028b87e347415ebb4b0cdf" translate="yes" xml:space="preserve">
          <source>Net::SMTP attempts to DWIM with addresses that are passed. For example an application might extract The From: line from an email and pass that to mail(). While this may work, it is not recommended. The application should really use a module like &lt;a href=&quot;Mail::Address&quot;&gt;Mail::Address&lt;/a&gt; to extract the mail address and pass that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dd7ce8a5f6c30dbe592557d703bdc3c58ebeb5" translate="yes" xml:space="preserve">
          <source>Net::SMTP attempts to DWIM with addresses that are passed. For example an application might extract The From: line from an email and pass that to mail(). While this may work, it is not recommended. The application should really use a module like &lt;a href=&quot;http://search.cpan.org/perldoc/Mail::Address&quot;&gt;Mail::Address&lt;/a&gt; to extract the mail address and pass that.</source>
          <target state="translated">Net :: SMTP尝试使用传递的地址进行DWIM。例如，一个应用程序可能从电子邮件中提取&amp;ldquo;发件人：&amp;rdquo;行，并将其传递给mail（）。尽管这可能有效，但不建议这样做。该应用程序实际上应该使用&lt;a href=&quot;http://search.cpan.org/perldoc/Mail::Address&quot;&gt;Mail :: Address之&lt;/a&gt;类的模块来提取邮件地址并将其传递。</target>
        </trans-unit>
        <trans-unit id="8daf5a6d470279d0dfd4ec9a06cb691d5194e8eb" translate="yes" xml:space="preserve">
          <source>Net::SMTP implements the SMTP protocol. The DNS MX lookup is not part of this protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64018d825c9dce97cd967ab565ae5bde0e71a33f" translate="yes" xml:space="preserve">
          <source>Net::SSLeay on Solaris</source>
          <target state="translated">.Net::SSLeay在Solaris上的应用</target>
        </trans-unit>
        <trans-unit id="8e0508a806d7681b9f57b4f0dafc12dd8ed03cac" translate="yes" xml:space="preserve">
          <source>Net::SSLeay requires a /dev/urandom to be present. This device is available from Solaris 9 onwards. For earlier Solaris versions you can either get the package SUNWski (packaged with several Sun software products, for example the Sun WebServer, which is part of the Solaris Server Intranet Extension, or the Sun Directory Services, part of Solaris for ISPs) or download the ANDIrand package from &lt;a href=&quot;http://www.cosy.sbg.ac.at/~andi/&quot;&gt;http://www.cosy.sbg.ac.at/~andi/&lt;/a&gt;. If you use SUNWski, make a symbolic link /dev/urandom pointing to /dev/random. For more details, see Document ID27606 entitled &quot;Differing /dev/random support requirements within Solaris[TM] Operating Environments&quot;, available at &lt;a href=&quot;http://sunsolve.sun.com&quot;&gt;http://sunsolve.sun.com&lt;/a&gt; .</source>
          <target state="translated">Net :: SSLeay要求存在/ dev / urandom。从Solaris 9开始可以使用此设备。对于早期的Solaris版本，您可以获取软件包SUNWski（与若干Sun软件产品打包在一起，例如，作为Solaris Server Intranet Extension的一部分的Sun WebServer，或作为ISP的Solaris的一部分的Sun Directory Services）或下载该软件包。来自&lt;a href=&quot;http://www.cosy.sbg.ac.at/~andi/&quot;&gt;http://www.cosy.sbg.ac.at/~andi/的&lt;/a&gt; ANDIrand软件包。如果使用SUNWski，请创建一个指向/ dev / random的符号链接/ dev / urandom。有关更多细节，参见题为文献ID27606&amp;ldquo;不同的/ dev /随机支持要求的Solaris [TM]操作环境范围内&amp;rdquo;，可在&lt;a href=&quot;http://sunsolve.sun.com&quot;&gt;http://sunsolve.sun.com&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="102b884f179ead18ed0a96b3577140ffb3aa57c6" translate="yes" xml:space="preserve">
          <source>Net::Time</source>
          <target state="translated">Net::Time</target>
        </trans-unit>
        <trans-unit id="d4f2b1be39e8c9f5b26b24988447cbc89c5fc6f8" translate="yes" xml:space="preserve">
          <source>Net::Time - time and daytime network client interface</source>
          <target state="translated">Net::Time-时间和白天的网络客户端接口。</target>
        </trans-unit>
        <trans-unit id="a529af9268e6c0617479c607894ba89216a5cc4f" translate="yes" xml:space="preserve">
          <source>Net::hostent</source>
          <target state="translated">Net::hostent</target>
        </trans-unit>
        <trans-unit id="98b632aa79485958bf201436fd61cedb7d0ac34a" translate="yes" xml:space="preserve">
          <source>Net::hostent - by-name interface to Perl's built-in gethost*() functions</source>
          <target state="translated">Net::hostent-Perl内置的gethost*()函数的名称接口</target>
        </trans-unit>
        <trans-unit id="bc76b178ba622c9caf521e77cbcbe2855aa1bc5e" translate="yes" xml:space="preserve">
          <source>Net::libnetFAQ</source>
          <target state="translated">Net::libnetFAQ</target>
        </trans-unit>
        <trans-unit id="04ad5a37dedb3b744b15bac4ca7302257a051aef" translate="yes" xml:space="preserve">
          <source>Net::netent</source>
          <target state="translated">Net::netent</target>
        </trans-unit>
        <trans-unit id="1fbeb7dc05a497d734af7f7775d02430de2ab805" translate="yes" xml:space="preserve">
          <source>Net::netent - by-name interface to Perl's built-in getnet*() functions</source>
          <target state="translated">Net::netent-Perl内置的getnet*()函数的按名接口。</target>
        </trans-unit>
        <trans-unit id="7f1cdba311d5959633cf045aa60bf446ccf54af8" translate="yes" xml:space="preserve">
          <source>Net::protoent</source>
          <target state="translated">Net::protoent</target>
        </trans-unit>
        <trans-unit id="078ad82faa206681ea192cb93b449ee403fbdf7a" translate="yes" xml:space="preserve">
          <source>Net::protoent - by-name interface to Perl's built-in getproto*() functions</source>
          <target state="translated">.Net::protoent-Perl内置的getproto*()函数的名称接口。</target>
        </trans-unit>
        <trans-unit id="c5f4c3e0d467febed569e1767ca88a110ec104d8" translate="yes" xml:space="preserve">
          <source>Net::servent</source>
          <target state="translated">Net::servent</target>
        </trans-unit>
        <trans-unit id="7e6a54f9191b9c026dff4416eca28d52185f8a20" translate="yes" xml:space="preserve">
          <source>Net::servent - by-name interface to Perl's built-in getserv*() functions</source>
          <target state="translated">.Net::servent-Perl内置的geterv*()函数的名称接口。</target>
        </trans-unit>
        <trans-unit id="3e9e1f6f189ff8e4d505c81b54a796d5e66a2542" translate="yes" xml:space="preserve">
          <source>NetBSD</source>
          <target state="translated">NetBSD</target>
        </trans-unit>
        <trans-unit id="c5264f1d295bd0d284bab240b5d586bcd3e69efe" translate="yes" xml:space="preserve">
          <source>NetConfig VALUES</source>
          <target state="translated">NetConfig VALUES</target>
        </trans-unit>
        <trans-unit id="fb61c8a8eba24117016597fc7618f38821b16e8f" translate="yes" xml:space="preserve">
          <source>Netherlands</source>
          <target state="translated">Netherlands</target>
        </trans-unit>
        <trans-unit id="e17b1a34870d3dc76ed5ed6dddba8f1f23174d27" translate="yes" xml:space="preserve">
          <source>Network Command class (as used by FTP, SMTP etc)</source>
          <target state="translated">网络命令类(如FTP、SMTP等)</target>
        </trans-unit>
        <trans-unit id="c1cb4106aaf9e962404483234251f265e659ef77" translate="yes" xml:space="preserve">
          <source>Network File System, which allows you to mount a remote filesystem as if it were local.</source>
          <target state="translated">网络文件系统,它允许你像挂载本地文件系统一样挂载远程文件系统。</target>
        </trans-unit>
        <trans-unit id="1e91748557010f07119a40ac844fcae91cc2e7a3" translate="yes" xml:space="preserve">
          <source>Networking</source>
          <target state="translated">Networking</target>
        </trans-unit>
        <trans-unit id="1732a8d9a671f491b3444f4dd135a29f1c8db726" translate="yes" xml:space="preserve">
          <source>Networking constants and support functions</source>
          <target state="translated">网络常数和支持功能</target>
        </trans-unit>
        <trans-unit id="3efe51707d515bbc55ed5e7a197cc135de39695b" translate="yes" xml:space="preserve">
          <source>Networking, Device Control (modems) and InterProcess Communication</source>
          <target state="translated">网络、设备控制(调制解调器)和进程间通信。</target>
        </trans-unit>
        <trans-unit id="f7865ee5f52b156bb53526c08f3154f5493c0e67" translate="yes" xml:space="preserve">
          <source>Neutralizes an op when it is no longer needed, but is still linked to from other ops.</source>
          <target state="translated">中和一个不再需要的操作,但仍与其他操作相关联。</target>
        </trans-unit>
        <trans-unit id="2d9cdfd72ef200657927c8b92328d8203f7e523d" translate="yes" xml:space="preserve">
          <source>Never add a comma after &lt;code&gt;pTHX&lt;/code&gt; yourself--always use the form of the macro with the underscore for functions that take explicit arguments, or the form without the argument for functions with no explicit arguments.</source>
          <target state="translated">切勿在 &lt;code&gt;pTHX&lt;/code&gt; 之后添加逗号-对于带有显式参数的函数，始终使用带下划线的宏形式，对于不带显式参数的函数，请始终使用不带参数的形式。</target>
        </trans-unit>
        <trans-unit id="5435ce11aa44af4272570c0064637abeeb8634e2" translate="yes" xml:space="preserve">
          <source>Never forget that the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag is separate from the PV value; you need to be sure you don't accidentally knock it off while you're manipulating SVs. More specifically, you cannot expect to do this:</source>
          <target state="translated">永远不要忘记 &lt;code&gt;SVf_UTF8&lt;/code&gt; 标志与PV值是分开的。您需要确保在操作SV时不会意外将其关闭。更具体地说，您不能期望这样做：</target>
        </trans-unit>
        <trans-unit id="8b5cf307b4ec3e0ecc76a7852a46b24101becfd1" translate="yes" xml:space="preserve">
          <source>Never release anything (even a one-word documentation patch) without incrementing the number. Even a one-word documentation patch should result in a change in version at the sub-minor level.</source>
          <target state="translated">永远不要在不增号的情况下发布任何东西(即使是一个字的文档补丁)。即使是一个单字的文档补丁,也应该导致次小级别的版本变化。</target>
        </trans-unit>
        <trans-unit id="b9967e88983d851428fa745aa72bb8b4e0bec2da" translate="yes" xml:space="preserve">
          <source>New Caledonia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e15dbc72156ffc0843ba2348b704e297c877b65" translate="yes" xml:space="preserve">
          <source>New Default Hash Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faca668b323e8715f2386a28f65791202098c13" translate="yes" xml:space="preserve">
          <source>New Hampshire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b173294f2264191e273c10c1191a9e69ee069cb" translate="yes" xml:space="preserve">
          <source>New Jersey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df5b2ef307f6a160a509c29570eb50079d5b0f1" translate="yes" xml:space="preserve">
          <source>New Things in this Example</source>
          <target state="translated">本例中的新事物</target>
        </trans-unit>
        <trans-unit id="3dddf7feb16bf399efe204acf0fee9106ad446eb" translate="yes" xml:space="preserve">
          <source>New York</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2238e91907fa2436a6a50e0fd8cf97ab60ec508" translate="yes" xml:space="preserve">
          <source>New Zealand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2584dea92b21670e4258fc9ba91d4693d707e48d" translate="yes" xml:space="preserve">
          <source>New code should favor the three-argument form of &lt;code&gt;open&lt;/code&gt; over this older form. Declaring the mode and the filename as two distinct arguments avoids any confusion between the two.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f51bfcb9560ecde82ad892ebcafb708e6079f56" translate="yes" xml:space="preserve">
          <source>New digest implementations should consider subclassing from &lt;a href=&quot;Digest::base&quot;&gt;Digest::base&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dbbca1c816cd191c8bd8984ca3248c86453e2c" translate="yes" xml:space="preserve">
          <source>New digest implementations should consider subclassing from &lt;a href=&quot;digest/base&quot;&gt;Digest::base&lt;/a&gt;.</source>
          <target state="translated">新的摘要实现应考虑从&lt;a href=&quot;digest/base&quot;&gt;Digest :: base继承&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="8b1da49e0f3f02f18a191c8fcb01275608dfe945" translate="yes" xml:space="preserve">
          <source>New features and extensions to the language can be contentious. There is no specific set of criteria which determine what features get added, but here are some questions to consider when developing a patch:</source>
          <target state="translated">语言的新功能和扩展可能会引起争议。没有一套特定的标准来决定哪些功能可以被添加,但这里有一些问题是开发补丁时需要考虑的。</target>
        </trans-unit>
        <trans-unit id="9da95c014dd8883747091781d4d6ca60e675421a" translate="yes" xml:space="preserve">
          <source>New form, no specials, outside O framework:</source>
          <target state="translated">新形式,无特殊,O框架外。</target>
        </trans-unit>
        <trans-unit id="5e8cec07473bfe4fcd70c1e35f5f7241e6718c1b" translate="yes" xml:space="preserve">
          <source>New in v5.22, &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt; applies stricter rules than otherwise when compiling regular expression patterns. It can find things that, while legal, may not be what you intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71b0b9cb949acf4db96e41224f4fef5adee91f" translate="yes" xml:space="preserve">
          <source>New in v5.22, &lt;a href=&quot;re#'strict'-mode&quot;&gt;use re 'strict' &lt;/a&gt; applies stricter rules than otherwise when compiling regular expression patterns. It can find things that, while legal, may not be what you intended.</source>
          <target state="translated">v5.22中的新增功能，在编译正则表达式模式时，&lt;a href=&quot;re#'strict'-mode&quot;&gt;use&lt;/a&gt; re'strict '会应用比其他规则更严格的规则。它可以找到合法的东西，但可能不是您想要的。</target>
        </trans-unit>
        <trans-unit id="395e14e59421d33f95e93938d8513a500819f2e7" translate="yes" xml:space="preserve">
          <source>New in v5.22, this applies stricter rules than otherwise when compiling regular expression patterns. It can find things that, while legal, may not be what you intended.</source>
          <target state="translated">在 v5.22 中新增的,在编译正则表达式模式时,它应用了比其他方式更严格的规则。它可以找到一些虽然合法,但可能不是你想要的东西。</target>
        </trans-unit>
        <trans-unit id="c6ba249fed1974d4b07df4d7258092eb5b6e28d9" translate="yes" xml:space="preserve">
          <source>New releases of maintenance branches should only contain changes that fall into one of the &quot;acceptable&quot; categories set out below, but must not contain any changes that fall into one of the &quot;unacceptable&quot; categories. (For example, a fix for a crashing bug must not be included if it breaks binary compatibility.)</source>
          <target state="translated">新发布的维护分支应该只包含属于以下 &quot;可接受的 &quot;类别之一的修改,而不能包含属于 &quot;不可接受的 &quot;类别之一的修改。(例如,如果一个崩溃的错误的修复,如果它破坏了二进制的兼容性,就不能包含在内。)</target>
        </trans-unit>
        <trans-unit id="795ece357da263bd94bd3808d4fa48fca182a70d" translate="yes" xml:space="preserve">
          <source>New syntax and semantics which don't break existing language constructs and syntax have a much lower bar. They merely need to prove themselves to be useful, elegant, well designed, and well tested. In most cases, these additions will be marked as</source>
          <target state="translated">不破坏现有语言结构和语法的新语法和语义的门槛要低得多。它们只需要证明自己是有用的、优雅的、精心设计的和经过测试的。在大多数情况下,这些新增内容会被标记为</target>
        </trans-unit>
        <trans-unit id="4fb820941ba4424da4c1818abae06d75b8cd8521" translate="yes" xml:space="preserve">
          <source>New versions of dual-life modules should NOT be imported into maint. Those belong in the next stable series.</source>
          <target state="translated">新版本的双寿命模块不应该被导入到maint中。这些模块属于下一个稳定系列。</target>
        </trans-unit>
        <trans-unit id="231604734d2d979c77600cba2319f1623c551b25" translate="yes" xml:space="preserve">
          <source>New() and Copy() are unfortunately used by both Symbian and Perl code so you'll have to play cpp games if you need them. PerlBase.h undefines the Perl definitions and redefines them as PerlNew() and PerlCopy().</source>
          <target state="translated">不幸的是,New()和Copy()同时被Symbian和Perl代码所使用,所以如果你需要它们,你将不得不玩cpp游戏。PerlBase.h取消了Perl的定义,并将它们重新定义为PerlNew()和PerlCopy()。</target>
        </trans-unit>
        <trans-unit id="81e452125a72a6fe6ff7abcdeebcf00242e0de29" translate="yes" xml:space="preserve">
          <source>New, in 1.96, a hash that clusters known perl releases by their major versions.</source>
          <target state="translated">在1.96版本中,新增加了一个哈希值,它可以根据主要版本对已知的perl版本进行聚类。</target>
        </trans-unit>
        <trans-unit id="972a5d24a8408b783c69c2ea8d49e34b9b7c8c94" translate="yes" xml:space="preserve">
          <source>New-style form:</source>
          <target state="translated">新式表格。</target>
        </trans-unit>
        <trans-unit id="66543c20a971108cd6769d66337b781595c7b81c" translate="yes" xml:space="preserve">
          <source>Newer releases of VOS (OpenVOS Release 17.0 or later) support a feature known as extended names. On these releases, file names can contain up to 255 characters, are prohibited from starting with a &lt;code&gt;-&lt;/code&gt; character, and the set of prohibited characters is reduced to &lt;code&gt;#%*&amp;lt;&amp;gt;?&lt;/code&gt;. There are restrictions involving spaces and apostrophes: these characters must not begin or end a name, nor can they immediately precede or follow a period. Additionally, a space must not immediately precede another space or hyphen. Specifically, the following character combinations are prohibited: space-space, space-hyphen, period-space, space-period, period-apostrophe, apostrophe-period, leading or trailing space, and leading or trailing apostrophe. Although an extended file name is limited to 255 characters, a path name is still limited to 256 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc90c268bb4cb375e6b7a75ff03116a6ae0e5fb9" translate="yes" xml:space="preserve">
          <source>Newer releases of VOS (OpenVOS Release 17.0 or later) support a feature known as extended names. On these releases, file names can contain up to 255 characters, are prohibited from starting with a &lt;code&gt;-&lt;/code&gt; character, and the set of prohibited characters is reduced to any character matching &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/#%*&amp;lt;&amp;gt;?//&lt;/a&gt;&lt;/code&gt;. There are restrictions involving spaces and apostrophes: these characters must not begin or end a name, nor can they immediately precede or follow a period. Additionally, a space must not immediately precede another space or hyphen. Specifically, the following character combinations are prohibited: space-space, space-hyphen, period-space, space-period, period-apostrophe, apostrophe-period, leading or trailing space, and leading or trailing apostrophe. Although an extended file name is limited to 255 characters, a path name is still limited to 256 characters.</source>
          <target state="translated">较新的VOS版本（OpenVOS版本17.0或更高版本）支持称为扩展名的功能。在这些发行版中，文件名最多可以包含255个字符，禁止以 &lt;code&gt;-&lt;/code&gt; 字符开头，并且禁止字符集减少为与 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr/#%*&amp;lt;&amp;gt;?//&lt;/a&gt;&lt;/code&gt; 相匹配的任何字符。。存在涉及空格和撇号的限制：这些字符不能以名称开头或结尾，也不能在句号之前或之后。此外，一个空格不能紧接另一个空格或连字符之前。具体来说，禁止以下字符组合：空格，空格，连字符，句号，空格，句号，撇号，撇号，开头或结尾的空格以及开头或结尾的撇号。尽管扩展文件名限制为255个字符，但路径名仍然限制为256个字符。</target>
        </trans-unit>
        <trans-unit id="048adf5652fc133a2fe5a581a0402744d96b2a3a" translate="yes" xml:space="preserve">
          <source>Newline (&lt;code&gt;\n&lt;/code&gt; ) is translated as &lt;code&gt;\015\012&lt;/code&gt; by STDIO when reading from and writing to files (see &lt;a href=&quot;#Newlines&quot;&gt;Newlines&lt;/a&gt;). &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; will keep &lt;code&gt;\n&lt;/code&gt; translated as &lt;code&gt;\012&lt;/code&gt; for that filehandle. Since it is a no-op on other systems, &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; should be used for cross-platform code that deals with binary data. That's assuming you realize in advance that your data is in binary. General-purpose programs should often assume nothing about their data.</source>
          <target state="translated">在读取和写入文件时，STDIO 将换行符（ &lt;code&gt;\n&lt;/code&gt; ）转换为 &lt;code&gt;\015\012&lt;/code&gt; （请参阅&lt;a href=&quot;#Newlines&quot;&gt;换行符&lt;/a&gt;）。 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; 会将该文件句柄的 &lt;code&gt;\n&lt;/code&gt; 转换为 &lt;code&gt;\012&lt;/code&gt; 。由于在其他系统上是禁止操作的，因此 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; 应该用于处理二进制数据的跨平台代码。假设您事先意识到数据是二进制的。通用程序通常应该不假设其数据。</target>
        </trans-unit>
        <trans-unit id="66fb8bba4fb56fb1ef583894abf671d1f75766b7" translate="yes" xml:space="preserve">
          <source>Newline (&lt;code&gt;\n&lt;/code&gt;) is translated as &lt;code&gt;\015\012&lt;/code&gt; by the I/O system when reading from and writing to files (see &lt;a href=&quot;#Newlines&quot;&gt;&quot;Newlines&quot;&lt;/a&gt;). &lt;code&gt;binmode($filehandle)&lt;/code&gt; will keep &lt;code&gt;\n&lt;/code&gt; translated as &lt;code&gt;\012&lt;/code&gt; for that filehandle. &lt;a href=&quot;perlfunc#binmode-FILEHANDLE&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt; should always be used for code that deals with binary data. That's assuming you realize in advance that your data is in binary. General-purpose programs should often assume nothing about their data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7903c1910fd26e6355fca4a3a2873689173f8fa4" translate="yes" xml:space="preserve">
          <source>Newlines</source>
          <target state="translated">Newlines</target>
        </trans-unit>
        <trans-unit id="627f688311b36f3c91aca584369635de1f066e06" translate="yes" xml:space="preserve">
          <source>News sites</source>
          <target state="translated">新闻网站</target>
        </trans-unit>
        <trans-unit id="8647adb6fe19cc8d435873e6cfe947de3bf110fe" translate="yes" xml:space="preserve">
          <source>Newx</source>
          <target state="translated">Newx</target>
        </trans-unit>
        <trans-unit id="74cbf0dac5707f013f7b0492127e291cbd8676be" translate="yes" xml:space="preserve">
          <source>Newxc</source>
          <target state="translated">Newxc</target>
        </trans-unit>
        <trans-unit id="edf4fdc9f4f2d963ec2b67061be527eaa57619fb" translate="yes" xml:space="preserve">
          <source>Newxz</source>
          <target state="translated">Newxz</target>
        </trans-unit>
        <trans-unit id="3ad9cf64efb1ec1fd62f31a781211fbbae056b26" translate="yes" xml:space="preserve">
          <source>Next the fileglob &lt;code&gt;*.tar.gz&lt;/code&gt; is transformed behind the scenes into a full Perl regular expression, with the additional step of wrapping each transformed wildcard metacharacter sequence in parenthesis.</source>
          <target state="translated">接下来，将fileglob &lt;code&gt;*.tar.gz&lt;/code&gt; 在幕后转换为完整的Perl正则表达式，并附加了将每个转换的通配符元字符序列包装在括号中的附加步骤。</target>
        </trans-unit>
        <trans-unit id="70f4446a1caaaf275974baec33a0412159413e91" translate="yes" xml:space="preserve">
          <source>Next time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91094329b9da103c7bf80abf3b096f03628711d7" translate="yes" xml:space="preserve">
          <source>Next to a lexicon full of shorthand code, that sort of sticks out like a sore thumb -- but this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd107a1441fbf81bd2a151e1d1ce3a7c6dd7ff9" translate="yes" xml:space="preserve">
          <source>Next we tell Perl to update the global stack pointer from our internal variable: &lt;code&gt;dSP&lt;/code&gt; only gave us a local copy, not a reference to the global.</source>
          <target state="translated">接下来，我们告诉Perl从内部变量更新全局堆栈指针： &lt;code&gt;dSP&lt;/code&gt; 仅给了我们本地副本，而不是对全局的引用。</target>
        </trans-unit>
        <trans-unit id="e906a80d642a9982295c053351051e5071216f8d" translate="yes" xml:space="preserve">
          <source>Next, &lt;code&gt;cx_popblock&lt;/code&gt; restores all the various interpreter vars to their previous values or previous high water marks; it expands to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783f6fb233a2d3b4a2bd0d885d732e1060c3e708" translate="yes" xml:space="preserve">
          <source>Next, both &lt;code&gt;filter_read&lt;/code&gt; and &lt;code&gt;filter_read_exact&lt;/code&gt; will append any source data that is read to the end of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">接下来， &lt;code&gt;filter_read&lt;/code&gt; 和 &lt;code&gt;filter_read_exact&lt;/code&gt; 都将把读取的所有源数据附加到 &lt;code&gt;$_&lt;/code&gt; 的末尾。</target>
        </trans-unit>
        <trans-unit id="a0d5b889e71fbe2c1477c43e20c912e00d4c8342" translate="yes" xml:space="preserve">
          <source>Next, both &lt;code&gt;filter_read&lt;/code&gt; and &lt;code&gt;filter_read_exact&lt;/code&gt; will append any source data that is read to the end of &lt;code&gt;$_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398d2fa0903d1a4262e38cb8eb6340d631516bf9" translate="yes" xml:space="preserve">
          <source>Next, having examined the program for</source>
          <target state="translated">接下来,在检查了程序后,对</target>
        </trans-unit>
        <trans-unit id="552813864fdd734e7d3907009afd77e400d86761" translate="yes" xml:space="preserve">
          <source>Next, in line 7, we construct the interpreter using perl_construct, also in</source>
          <target state="translated">接下来,在第7行,我们使用perl_construct构造解释器,也是在</target>
        </trans-unit>
        <trans-unit id="f0e17f120e69b5b4b71c231b6f1b48ac0f7c5f87" translate="yes" xml:space="preserve">
          <source>Next, is an optional description of what the value means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b383b7fb30a64fd95b0ad32a79caca9dc933b0b1" translate="yes" xml:space="preserve">
          <source>Next, we come to EXTEND and PUSHs. This is where the parameters actually get pushed onto the stack. In this case we are pushing a string and an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8efbc1a7cdd184e2054cd4a6e7618c9a7c54c2" translate="yes" xml:space="preserve">
          <source>Next, we come to XPUSHs. This is where the parameters actually get pushed onto the stack. In this case we are pushing a string and an integer.</source>
          <target state="translated">接下来,我们来到XPUSHs。这是参数真正被推送到堆栈的地方。在本例中,我们推送的是一个字符串和一个整数。</target>
        </trans-unit>
        <trans-unit id="3a3933ffb575f6d148ec34824fe349c3e318f912" translate="yes" xml:space="preserve">
          <source>Next, we create the filter object and associate it with the source stream by defining the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; function. If you know Perl well enough, you know that &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; is called automatically every time a module is included with a use statement. This makes &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; the ideal place to both create and install a filter object.</source>
          <target state="translated">接下来，我们创建过滤器对象，并通过定义 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 功能将其与源流关联。如果您对Perl足够了解，则知道每次在use语句中包含模块时，都会自动调用 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 。这使 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 成为创建和安装过滤器对象的理想场所。</target>
        </trans-unit>
        <trans-unit id="36703328150265b0a107cb522700c61245fb4fc9" translate="yes" xml:space="preserve">
          <source>Next, we create the filter object and associate it with the source stream by defining the &lt;code&gt;import&lt;/code&gt; function. If you know Perl well enough, you know that &lt;code&gt;import&lt;/code&gt; is called automatically every time a module is included with a use statement. This makes &lt;code&gt;import&lt;/code&gt; the ideal place to both create and install a filter object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79dac3470efd6c09749fb5bc8d5df733f8598af" translate="yes" xml:space="preserve">
          <source>Next. Executes over subroutine calls, until the beginning of the next statement. If an expression is supplied that includes function calls, those functions will be executed with stops before each statement.</source>
          <target state="translated">下一条。在子程序调用之上执行,直到下一条语句的开始。如果提供的表达式包含函数调用,则这些函数将在每条语句前停止执行。</target>
        </trans-unit>
        <trans-unit id="0f90871213344aaacc3e3fb157cf776edfa434b0" translate="yes" xml:space="preserve">
          <source>Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt;</source>
          <target state="translated">尼古拉斯&amp;middot;克拉克&amp;lt;nick@ccl4.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3593afcaf4055fb7e2ec7f9aa19266c706c63d66" translate="yes" xml:space="preserve">
          <source>Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt; based on the code in &lt;code&gt;h2xs&lt;/code&gt; by Larry Wall and others</source>
          <target state="translated">Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt;基于Larry Wall等人在 &lt;code&gt;h2xs&lt;/code&gt; 中的代码</target>
        </trans-unit>
        <trans-unit id="a9782aaa85e48d0ee97008381a9233aaf9ea098e" translate="yes" xml:space="preserve">
          <source>Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt;, collating wisdom supplied by Slaven Rezic and Tim Bunce.</source>
          <target state="translated">Nicholas Clark &amp;lt;nick@ccl4.org&amp;gt;，整理了Slaven Rezic和Tim Bunce提供的智慧。</target>
        </trans-unit>
        <trans-unit id="cb93bd4a857943c414e6a9f67769487dd9d1e793" translate="yes" xml:space="preserve">
          <source>Nichols, Bradford, Dick Buttlar, and Jacqueline Proulx Farrell. Pthreads Programming. O'Reilly &amp;amp; Associates, 1996, ISBN 156592-115-1 (covers POSIX threads).</source>
          <target state="translated">Nichols，Bradford，Dick Buttlar和Jacqueline Proulx Farrell。Pthreads编程。O'Reilly＆Associates，1996年，ISBN 156592-115-1（包含POSIX线程）。</target>
        </trans-unit>
        <trans-unit id="dc9a977deb5f6413937851a1c224335497c37077" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons &amp;lt;nick@ing-simmons.net&amp;gt;</source>
          <target state="translated">尼克&amp;middot;英格&amp;middot;西蒙斯（Nick Ing-Simmons）&amp;lt;nick@ing-simmons.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="67fa933da77de5810dcb7a6bcbb7b43316cb56e6" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons &amp;lt;nik@tiuk.ti.com&amp;gt;</source>
          <target state="translated">尼克&amp;middot;西蒙斯（Nick Ing-Simmons）&amp;lt;nik@tiuk.ti.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="eec2116258d414025ff37d21592a6d975d4f492d" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons &lt;code&gt;ni-s@cpan.org&lt;/code&gt;</source>
          <target state="translated">尼克&amp;middot;西蒙（Nick Ing-Simmons） &lt;code&gt;ni-s@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f536379f776769e044b6352a1f333a7395148608" translate="yes" xml:space="preserve">
          <source>Nick Ing-Simmons nik@tiuk.ti.com</source>
          <target state="translated">Nick Ing-Simmons nik@tiuk.ti.com</target>
        </trans-unit>
        <trans-unit id="709b6991a1fe1d878c07948361b2e8f12dee5b31" translate="yes" xml:space="preserve">
          <source>Nick.Williams (at) morganstanley.com</source>
          <target state="translated">Nick.Williams (at)morganstanley.com</target>
        </trans-unit>
        <trans-unit id="c68fbab1fadb081f9a95a30a672a1a93a454b4ea" translate="yes" xml:space="preserve">
          <source>Nicolas Rochelemagne &amp;lt;rochelemagne@cpanel.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99442825b1535fca48dbbe1edab7783b86c33c79" translate="yes" xml:space="preserve">
          <source>Nifty, eh?</source>
          <target state="translated">Nifty,eh?</target>
        </trans-unit>
        <trans-unit id="c659a5acee6e44f93f94ad48f57acb3d1dc6ea05" translate="yes" xml:space="preserve">
          <source>Nigel Horne &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9508051ab4a47301185b3c92aa1d0eff8cd51fe8" translate="yes" xml:space="preserve">
          <source>Niko Tyni &amp;lt;ntyni@debian.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f28e5786c054d1cc29342757d2fd0556c7c2dc7" translate="yes" xml:space="preserve">
          <source>No &quot;=over&quot; ... &quot;=back&quot; region can contain headings. Processors may treat such a heading as an error.</source>
          <target state="translated">没有&quot;=上&quot;...&quot;=back &quot;区域可以包含标题。处理机可能会将这种标题视为错误。</target>
        </trans-unit>
        <trans-unit id="257bfa82d8cf42d7832f32c10a9c968cb66e0342" translate="yes" xml:space="preserve">
          <source>No %s allowed while running setuid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773b9688face4b5d00611d86533f2b8de906c9b4" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;syslog&lt;/code&gt; before &lt;code&gt;openlog&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;openlog&lt;/code&gt; 之前没有 &lt;code&gt;syslog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20e0c334622edbcaf17b23f27e4a533188f282bc" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;syslog&lt;/code&gt; before &lt;code&gt;openlog&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c40a7affe9719b4eddb6cf9132e5c95c3be4c0e" translate="yes" xml:space="preserve">
          <source>No C++ style (//) comments</source>
          <target state="translated">没有C++风格的(//)注释</target>
        </trans-unit>
        <trans-unit id="0c1f7459efad1e56358a8f99cd0450bb9959dbf6" translate="yes" xml:space="preserve">
          <source>No DB::DB routine defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6deb18052c4d43f8553cddaf3139898fd40cc7a9" translate="yes" xml:space="preserve">
          <source>No DB::sub routine defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fcbc48a21b7232a53284d0488360e346f1c2a5" translate="yes" xml:space="preserve">
          <source>No Parameters, Nothing Returned</source>
          <target state="translated">无参数,无返回</target>
        </trans-unit>
        <trans-unit id="77806734f269492cff2094d83b8fd4035093622c" translate="yes" xml:space="preserve">
          <source>No Perl script found in input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6465b961ebcc64954b26f6b4f08d2a66881aca" translate="yes" xml:space="preserve">
          <source>No Unicode property value wildcard matches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaba0fb2bb1fc76d3a62f4fc39307ed0a310b2d" translate="yes" xml:space="preserve">
          <source>No adjustments are needed to entries that are references to arrays; each such entry will have exactly one element in its range, so the offset is always 0.</source>
          <target state="translated">对数组引用的条目不需要调整;每个这样的条目在其范围内正好有一个元素,所以偏移量总是0。</target>
        </trans-unit>
        <trans-unit id="87c881d12dc16380a72b9169dc66bd4762923e70" translate="yes" xml:space="preserve">
          <source>No arbitrary limits (platforms, data sizes, cultures).</source>
          <target state="translated">没有任意的限制(平台、数据大小、文化)。</target>
        </trans-unit>
        <trans-unit id="2ef060e66ed128ce859a264cbcabcc9e8b4d72cd" translate="yes" xml:space="preserve">
          <source>No attempt is made to resolve formatting codes. This must be done after calling parselink() (since E&amp;lt;&amp;gt; formatting codes can be used to escape characters that would otherwise be significant to the parser and resolving them before parsing would result in an incorrect parse of a formatting code like:</source>
          <target state="translated">没有尝试解析格式代码。这必须在调用parselink（）之后完成（因为E &amp;lt;&amp;gt;格式代码可用于转义否则对解析器很重要的字符，并在解析之前解析它们会导致格式代码的错误解析，例如：</target>
        </trans-unit>
        <trans-unit id="d91a990deb28c435bf7686103fcfb9b19073f56f" translate="yes" xml:space="preserve">
          <source>No attempt to call methods on a child after &lt;code&gt;finalize&lt;/code&gt; is called is guaranteed to succeed.</source>
          <target state="translated">在 &lt;code&gt;finalize&lt;/code&gt; 被调用之后，没有任何尝试在子代上调用方法的尝试可以保证成功。</target>
        </trans-unit>
        <trans-unit id="25bf937dadf1f1511dd27eb2964f699a6c2252b1" translate="yes" xml:space="preserve">
          <source>No checks against the filesystem are made, so the result may not be correct if &lt;code&gt;$base&lt;/code&gt; contains symbolic links. (Apply &lt;a href=&quot;../../cwd#abs_path&quot;&gt;Cwd::abs_path()&lt;/a&gt; beforehand if that is a concern.) On VMS, there is interaction with the working environment, as logicals and macros are expanded.</source>
          <target state="translated">没有对文件系统进行检查，因此如果 &lt;code&gt;$base&lt;/code&gt; 包含符号链接，则结果可能不正确。（如果担心，请事先应用&lt;a href=&quot;../../cwd#abs_path&quot;&gt;Cwd :: abs_path（）&lt;/a&gt;。）在VMS上，随着逻辑和宏的扩展，与工作环境存在交互。</target>
        </trans-unit>
        <trans-unit id="924a5f2c43a3c20b93a69cf9c70b83b8e4efcd36" translate="yes" xml:space="preserve">
          <source>No checks against the filesystem are made, so the result may not be correct if &lt;code&gt;$base&lt;/code&gt; contains symbolic links. (Apply &lt;a href=&quot;cwd#abs_path&quot;&gt;Cwd::abs_path()&lt;/a&gt; beforehand if that is a concern.) On VMS, there is interaction with the working environment, as logicals and macros are expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4449b82a66db373f8a7a36f371aa0993e46c55c" translate="yes" xml:space="preserve">
          <source>No checks against the filesystem are made. On VMS, there is interaction with the working environment, as logicals and macros are expanded.</source>
          <target state="translated">不对文件系统进行检查。在VMS上,随着逻辑和宏的扩展,与工作环境有互动。</target>
        </trans-unit>
        <trans-unit id="8e162ffb3e51b730037429889b3555f0e4824d87" translate="yes" xml:space="preserve">
          <source>No code point in the sequence has the &lt;code&gt;Script_Extension&lt;/code&gt; property of &lt;code&gt;Unknown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda4eef0bcf2e071e18d2c28df5df747da976497" translate="yes" xml:space="preserve">
          <source>No code specified for -%c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5daa6be83067035e57bf5c2fd3c41a90c6754e" translate="yes" xml:space="preserve">
          <source>No comma allowed after %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33577302f316f3e6136a0a32a2d27da82e7aa28" translate="yes" xml:space="preserve">
          <source>No comma allowed after filehandle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8ae1e010afaaa612013df1fc3d51681796c4d1" translate="yes" xml:space="preserve">
          <source>No command into which to pipe on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd6e1a656baa449584f887ae6f967424aeab84f" translate="yes" xml:space="preserve">
          <source>No compression at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaac15a67a04661b57950ea3d1e562feb72ebfaf" translate="yes" xml:space="preserve">
          <source>No dbm on this machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c47c4f4513295ff856929f10f81971d5188422" translate="yes" xml:space="preserve">
          <source>No digits found for %s literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f1be4cbae2242886aa2e79dff8536922352e79" translate="yes" xml:space="preserve">
          <source>No directory specified for -I</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784c301abbb8b0d6d45cf7e9b60c5e854fd2a0b2" translate="yes" xml:space="preserve">
          <source>No distinction is made between prefix and postfix forms of the increment and decrement operators: these differ only in the point at which Perl calls the associated subroutine when evaluating an expression.</source>
          <target state="translated">增量运算符和减量运算符的前缀和后缀形式没有区别:它们的区别只在于Perl在评估一个表达式时调用相关子程序的点。</target>
        </trans-unit>
        <trans-unit id="fe03072df15677b80e2b39e339befe55f08f3cc8" translate="yes" xml:space="preserve">
          <source>No documentation on this IOCTL is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0ccdbe7b9dcd4482123d0dad177e0f6173c899" translate="yes" xml:space="preserve">
          <source>No documentation on this IOCTL operation was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6edce8008bb98711417eae932baa49a0c5e02c" translate="yes" xml:space="preserve">
          <source>No environment variables are used.</source>
          <target state="translated">没有使用环境变量。</target>
        </trans-unit>
        <trans-unit id="424de2cbb2d7cb32de24408734d57590a414971a" translate="yes" xml:space="preserve">
          <source>No error file after 2&amp;gt; or 2&amp;gt;&amp;gt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f86db3043e1779cce556c8cbf2a9d92caf05f24" translate="yes" xml:space="preserve">
          <source>No error is given if the unlink fails.</source>
          <target state="translated">如果解链失败,则不会给出错误信息。</target>
        </trans-unit>
        <trans-unit id="3f69a0eca515ffc8689bce47b2e5c1980b8dcb25" translate="yes" xml:space="preserve">
          <source>No exception will be thrown if the load fails.</source>
          <target state="translated">如果加载失败,将不会抛出异常。</target>
        </trans-unit>
        <trans-unit id="ec5c0c5034b1d315d5f20a472cd293a01e6c64e1" translate="yes" xml:space="preserve">
          <source>No filename, no open.</source>
          <target state="translated">没有文件名,没有打开。</target>
        </trans-unit>
        <trans-unit id="516bbd1a4dbc145932d17998cd4fb493e8a92e9f" translate="yes" xml:space="preserve">
          <source>No flags are currently defined for this method.</source>
          <target state="translated">目前没有为该方法定义任何标志。</target>
        </trans-unit>
        <trans-unit id="7bcf29927f72d2beb73b0553554252e7ba739e8a" translate="yes" xml:space="preserve">
          <source>No fork(), pipe(), popen() etc.</source>
          <target state="translated">没有fork()、管道()、popen()等。</target>
        </trans-unit>
        <trans-unit id="eb3952fa65dd262eb5d0a75ebf9c58a5c763ba6c" translate="yes" xml:space="preserve">
          <source>No functions are exported by default. The export tag &quot;:all&quot; will export all functions listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542ccfca3b47fd89c0284e2ac4365b2fc6d2c787" translate="yes" xml:space="preserve">
          <source>No group ending character '%c' found in template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb023c0b15d320b359bb7fbf2e9461b84b577b5f" translate="yes" xml:space="preserve">
          <source>No input file after &amp;lt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2202e903484320e4049cc95c7fbf8fcc519882bb" translate="yes" xml:space="preserve">
          <source>No interpolation is performed at this stage. Any backslashed sequences including &lt;code&gt;\\&lt;/code&gt; are treated at the stage to &lt;a href=&quot;#parsing-regular-expressions&quot;&gt;&quot;parsing regular expressions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54075ccfb2214779b34385a718da12658fca1c0e" translate="yes" xml:space="preserve">
          <source>No interpolation is performed at this stage. Any backslashed sequences including &lt;code&gt;\\&lt;/code&gt; are treated at the stage to &lt;a href=&quot;#parsing-regular-expressions&quot;&gt;parsing regular expressions&lt;/a&gt;.</source>
          <target state="translated">在此阶段不执行插值。在&lt;a href=&quot;#parsing-regular-expressions&quot;&gt;解析正则表达式&lt;/a&gt;的阶段，将处理所有包含 &lt;code&gt;\\&lt;/code&gt; 的反斜杠序列。</target>
        </trans-unit>
        <trans-unit id="cbb5249e03fe539ae8e45d7b163fcee5fc3ee51d" translate="yes" xml:space="preserve">
          <source>No interpolation is performed. Note that the combination &lt;code&gt;\\&lt;/code&gt; is left intact, since escaped delimiters are not available for here-docs.</source>
          <target state="translated">不执行插值。请注意，组合 &lt;code&gt;\\&lt;/code&gt; 保持不变，因为转义定界符不适用于here-docs。</target>
        </trans-unit>
        <trans-unit id="1c98ecfcdfe42d74e5f6e59d6542fc5e55fe1a89" translate="yes" xml:space="preserve">
          <source>No known problems yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4729e4c84e612c4062db3d2ec599e7d12e2ffa" translate="yes" xml:space="preserve">
          <source>No longer used. &lt;b&gt;pod2man&lt;/b&gt; used to check its input for validity as a manual page, but this should now be done by</source>
          <target state="translated">不再使用。&lt;b&gt;pod2man&lt;/b&gt;曾经作为手册页来检查其输入的有效性，但是现在应该由</target>
        </trans-unit>
        <trans-unit id="900007b766747b3fcc23577a66bc51c090e9d1ff" translate="yes" xml:space="preserve">
          <source>No longer used. &lt;b&gt;pod2man&lt;/b&gt; used to check its input for validity as a manual page, but this should now be done by &lt;a href=&quot;http://man.he.net/man1/podchecker&quot;&gt;podchecker(1)&lt;/a&gt; instead. Accepted for backward compatibility; this option no longer does anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0629e5133982636c8b13ba7650a2f7adde66d5d2" translate="yes" xml:space="preserve">
          <source>No matter how many @methods you check, a single &lt;code&gt;can_ok()&lt;/code&gt; call counts as one test. If you desire otherwise, use:</source>
          <target state="translated">无论您检查多少@method，一个 &lt;code&gt;can_ok()&lt;/code&gt; 调用都被视为一项测试。如果您另有要求，请使用：</target>
        </trans-unit>
        <trans-unit id="bfe1ac6dceccca23c12f88b98cb2baa17573ef5f" translate="yes" xml:space="preserve">
          <source>No matter how you look at it, Unicode support is going to be a pain in a regex engine. Tricks that might be fine when you have 256 possible characters often won't scale to handle the size of the UTF-8 character set. Things you can take for granted with ASCII may not be true with Unicode. For instance, in ASCII, it is safe to assume that &lt;code&gt;sizeof(char1) == sizeof(char2)&lt;/code&gt; , but in UTF-8 it isn't. Unicode case folding is vastly more complex than the simple rules of ASCII, and even when not using Unicode but only localised single byte encodings, things can get tricky (for example, &lt;b&gt;LATIN SMALL LETTER SHARP S&lt;/b&gt; (U+00DF, &amp;szlig;) should match 'SS' in localised case-insensitive matching).</source>
          <target state="translated">无论您如何看待，对regex引擎的支持都会使Unicode痛苦。当您有256个可能的字符时，技巧可能会很好，但通常无法缩放以处理UTF-8字符集的大小。对于ASCII而言，您可以理所当然的事情可能对Unicode而言并非正确。例如，在ASCII中，可以安全地假设 &lt;code&gt;sizeof(char1) == sizeof(char2)&lt;/code&gt; ，但在UTF-8中则不是。 Unicode大小写折叠比ASCII的简单规则复杂得多，即使不使用Unicode，而仅使用本地化的单字节编码，事情也会变得棘手（例如，拉丁文小写字母&lt;b&gt;SHARP S&lt;/b&gt;（U + 00DF，&amp;szlig;）应该匹配'局部大小写不匹配的SS&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="50eb93d4cd16792026ffb4dcb8756c8d0fe4e9fc" translate="yes" xml:space="preserve">
          <source>No matter how you look at it, Unicode support is going to be a pain in a regex engine. Tricks that might be fine when you have 256 possible characters often won't scale to handle the size of the UTF-8 character set. Things you can take for granted with ASCII may not be true with Unicode. For instance, in ASCII, it is safe to assume that &lt;code&gt;sizeof(char1) == sizeof(char2)&lt;/code&gt;, but in UTF-8 it isn't. Unicode case folding is vastly more complex than the simple rules of ASCII, and even when not using Unicode but only localised single byte encodings, things can get tricky (for example, &lt;b&gt;LATIN SMALL LETTER SHARP S&lt;/b&gt; (U+00DF, &amp;szlig;) should match 'SS' in localised case-insensitive matching).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3134867d7de86de77f76195077742723406df400" translate="yes" xml:space="preserve">
          <source>No matter which locale you are in, the alphabetic characters are the characters in \w without the digits and the underscore. As a regex, that looks like &lt;code&gt;/[^\W\d_]/&lt;/code&gt; . Its complement, the non-alphabetics, is then everything in \W along with the digits and the underscore, or &lt;code&gt;/[\W\d_]/&lt;/code&gt; .</source>
          <target state="translated">无论您使用哪种语言环境，字母字符都是\ w中的字符，没有数字和下划线。作为正则表达式，它看起来像 &lt;code&gt;/[^\W\d_]/&lt;/code&gt; 。这样，其补码（非字母）即\ W中的所有内容以及数字和下划线或 &lt;code&gt;/[\W\d_]/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a25ec0405e5b5d24e77d78a07b478e9acd7704a" translate="yes" xml:space="preserve">
          <source>No matter which locale you are in, the alphabetic characters are the characters in \w without the digits and the underscore. As a regex, that looks like &lt;code&gt;/[^\W\d_]/&lt;/code&gt;. Its complement, the non-alphabetics, is then everything in \W along with the digits and the underscore, or &lt;code&gt;/[\W\d_]/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae36c800cf26b17c9be8f946b97ab972ec2e9993" translate="yes" xml:space="preserve">
          <source>No message is printed if there is a &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler installed. It is the handler's responsibility to deal with the message as it sees fit (like, for instance, converting it into a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;). Most handlers must therefore arrange to actually display the warnings that they are not prepared to deal with, by calling &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; again in the handler. Note that this is quite safe and will not produce an endless loop, since &lt;code&gt;__WARN__&lt;/code&gt; hooks are not called from inside one.</source>
          <target state="translated">如果安装了 &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; 处理程序，则不会打印任何消息。处理者有责任按其认为适当的方式处理消息（例如，将其转换为 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ）。因此，大多数处理程序必须通过在处理程序中再次调用 &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; 来安排实际显示不准备处理的警告。注意，这是很安全的，不会产生无限循环，因为 &lt;code&gt;__WARN__&lt;/code&gt; 钩子不是从内部调用的。</target>
        </trans-unit>
        <trans-unit id="9b68ebf47dc665b9110abca7286c7dd8e3c6d25d" translate="yes" xml:space="preserve">
          <source>No message is printed if there is a &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; handler installed. It is the handler's responsibility to deal with the message as it sees fit (like, for instance, converting it into a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;). Most handlers must therefore arrange to actually display the warnings that they are not prepared to deal with, by calling &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; again in the handler. Note that this is quite safe and will not produce an endless loop, since &lt;code&gt;__WARN__&lt;/code&gt; hooks are not called from inside one.</source>
          <target state="translated">如果安装了 &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; 处理程序，则不会打印任何消息。处理者有责任按其认为适当的方式处理消息（例如，将其转换为 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ）。因此，大多数处理程序必须通过在处理程序中再次调用 &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; 来安排实际显示不准备处理的警告。注意，这是很安全的，不会产生无限循环，因为 &lt;code&gt;__WARN__&lt;/code&gt; 钩子不是从内部调用的。</target>
        </trans-unit>
        <trans-unit id="e88b0403f1df2a8394109aa2ba7bcbd6c0d574ec" translate="yes" xml:space="preserve">
          <source>No method will be exported.</source>
          <target state="translated">没有方法会被导出。</target>
        </trans-unit>
        <trans-unit id="d078ad69ad4e54066f3d8eeb48aedf41afe43993" translate="yes" xml:space="preserve">
          <source>No modifiers may follow the final delimiter. Instead, use &lt;a href=&quot;perlre#%28%3Fadlupimnsx-imnsx%29&quot;&gt;&quot;(?adlupimnsx-imnsx)&quot; in perlre&lt;/a&gt; and/or &lt;a href=&quot;perlre#%28%3Fadluimnsx-imnsx%3Apattern%29&quot;&gt;&quot;(?adluimnsx-imnsx:pattern)&quot; in perlre&lt;/a&gt; to specify modifiers. However, certain modifiers are illegal in your wildcard subpattern. The only character set modifier specifiable is &lt;code&gt;/aa&lt;/code&gt;; any other character set, and &lt;code&gt;-m&lt;/code&gt;, and &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;s&lt;/code&gt; are all illegal. Specifying modifiers like &lt;code&gt;qr/.../gc&lt;/code&gt; that aren't legal in the &lt;code&gt;(?...)&lt;/code&gt; notation normally raise a warning, but with wildcard subpatterns, their use is an error. The &lt;code&gt;m&lt;/code&gt; modifier is ineffective; everything that matches will be a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d694e82f8f5a6aee789fdf7e0d9a4abdbee8361" translate="yes" xml:space="preserve">
          <source>No name for escape sequence %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8a43bbd5b6a7c0fc112cc5db753e74a2da2bd1" translate="yes" xml:space="preserve">
          <source>No need to upgrade, old versions work fine. Only new versions will install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3f29207dc255b3e7e3b93af35cd32bc4da582b" translate="yes" xml:space="preserve">
          <source>No nested {}</source>
          <target state="translated">没有嵌套的{}。</target>
        </trans-unit>
        <trans-unit id="ff909a31829cee8eec6e3320155b1a9c5999f78e" translate="yes" xml:space="preserve">
          <source>No next::method '%s' found for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57520a87f790317d2f0f376605bf7645f164bef4" translate="yes" xml:space="preserve">
          <source>No non-core modules are required for normal use, except on os390, which requires Convert::EBCDIC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108ebc6ec894325dc5e51ade6db8ba3a4fcfc3e6" translate="yes" xml:space="preserve">
          <source>No one is actively supporting Perl 4. Ten years ago it was a dead camel carcass (according to this document). Now it's barely a skeleton as its whitewashed bones have fractured or eroded.</source>
          <target state="translated">没有人积极支持Perl 4。十年前,它还是一具死骆驼的尸体(根据这份文件)。现在,它勉强成为一具骨架,因为它那白白的骨头已经断裂或被侵蚀。</target>
        </trans-unit>
        <trans-unit id="5a0177133aa06d0ec25b9195df7c3b7470ebfb3e" translate="yes" xml:space="preserve">
          <source>No output file after &amp;gt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa07cf51ee6af06ec7bc8d2a28b3053649cf1e2" translate="yes" xml:space="preserve">
          <source>No output file after &amp;gt; or &amp;gt;&amp;gt; on command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aaf049c05b18617887d9ad1515bb3e2acc8422" translate="yes" xml:space="preserve">
          <source>No package name allowed for subroutine %s in &quot;our&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9c00e16e167b3d5795fd4551618c4957016cd5" translate="yes" xml:space="preserve">
          <source>No package name allowed for variable %s in &quot;our&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c3fd86cbf458846a9ad5dbc11cfba132cabd89" translate="yes" xml:space="preserve">
          <source>No parentheses are permitted. This feature is particularly useful for arrays-of-arrays, or arrays-of-hashes:</source>
          <target state="translated">不允许使用括号。这个特性对于数组的数组或哈希数组特别有用。</target>
        </trans-unit>
        <trans-unit id="469f8dede736caee70cee54e55a8464dbb9835e1" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path.</source>
          <target state="translated">不对文件系统进行物理检查,而是对路径进行逻辑清理。</target>
        </trans-unit>
        <trans-unit id="3f4690d39fc8f180a0deea49e5cf7ef07d678475" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path. On UNIX eliminated successive slashes and successive &quot;/.&quot;.</source>
          <target state="translated">没有对文件系统进行物理检查,而是对路径进行逻辑清理。在UNIX上消除了连续的斜线和连续的&quot;/.&quot;。</target>
        </trans-unit>
        <trans-unit id="3f5d3240e92f64678ad0b020e9e7b82b4f021ec1" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path. On UNIX eliminated successive slashes and successive &quot;/.&quot;. On Win32 makes</source>
          <target state="translated">没有对文件系统进行物理检查,而是对路径进行逻辑清理。在UNIX上消除了连续的斜线和连续的&quot;/.&quot;。在Win32上使</target>
        </trans-unit>
        <trans-unit id="3ec2594a24cace2c7fc57252c4edc36c0995f1d6" translate="yes" xml:space="preserve">
          <source>No physical check on the filesystem, but a logical cleanup of a path. On UNIX eliminates successive slashes and successive &quot;/.&quot;.</source>
          <target state="translated">不对文件系统进行物理检查,而是对路径进行逻辑清理。在UNIX上,消除了连续的斜线和连续的&quot;/.&quot;。</target>
        </trans-unit>
        <trans-unit id="e71f35adbc662150aba2fe0b4ae6aabc10f19d44" translate="yes" xml:space="preserve">
          <source>No plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccab456a43b7cc16ce0b5bc93c2d11acc7820455" translate="yes" xml:space="preserve">
          <source>No root path(s) specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e49343d906c08823451bc90b39a76fd921c7fa" translate="yes" xml:space="preserve">
          <source>No separator between a directory path and a filename on VMS.</source>
          <target state="translated">VMS上目录路径和文件名之间没有分隔符。</target>
        </trans-unit>
        <trans-unit id="deb641c36c1d1b360c1445dd38da07338eff42a1" translate="yes" xml:space="preserve">
          <source>No setregid available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc74076701edde5eed33dc7a331eae09584ec9c" translate="yes" xml:space="preserve">
          <source>No setreuid available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ae710f92402615f714f07f2df83c92aef3774" translate="yes" xml:space="preserve">
          <source>No space before the semicolon.</source>
          <target state="translated">分号前没有空格。</target>
        </trans-unit>
        <trans-unit id="a57f317b57b3c0adf52cf25451dee19e20c69fd1" translate="yes" xml:space="preserve">
          <source>No space between function name and its opening parenthesis.</source>
          <target state="translated">在函数名和其开头的括号之间没有空格。</target>
        </trans-unit>
        <trans-unit id="1a6856f52acb86fb9730291ce342f9738b29e5d3" translate="yes" xml:space="preserve">
          <source>No such build tool exists. Even make itself has wildly different dialects. So we have to build our own.</source>
          <target state="translated">没有这样的构建工具存在。甚至连make本身都有迥异的方言。所以我们必须建立自己的。</target>
        </trans-unit>
        <trans-unit id="15e013d77e0bfdb442901fc1a5e5329c3aeff0d9" translate="yes" xml:space="preserve">
          <source>No such class %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c7790634300e5054808e3daf7120756002229" translate="yes" xml:space="preserve">
          <source>No such class field &quot;%s&quot; in variable %s of type %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8031546db88dae684facba1f1a76046472a3d87" translate="yes" xml:space="preserve">
          <source>No such hook: %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b84f48942a0b7077d6c110e9d17f34aef30607" translate="yes" xml:space="preserve">
          <source>No such pipe open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350468219a6c2e14abe311fceae1778a933613c6" translate="yes" xml:space="preserve">
          <source>No such signal: SIG%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983c1355341f06fa836a2941ebb4e0c8331361de" translate="yes" xml:space="preserve">
          <source>No such thing. Just use a &lt;b&gt;lexical variable&lt;/b&gt; in a scope larger than your &lt;b&gt;subroutine&lt;/b&gt;, or declare it with &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; instead of with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">没有这样的事。只需在比您的&lt;b&gt;子例程&lt;/b&gt;更大的范围内使用&lt;b&gt;词法变量&lt;/b&gt;，或者使用 &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 声明它。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6cb7128b800911ffad487de8e45d9be529b8a81e" translate="yes" xml:space="preserve">
          <source>No such thing. Just use a &lt;b&gt;lexical variable&lt;/b&gt; in a scope larger than your &lt;b&gt;subroutine&lt;/b&gt;, or declare it with &lt;code&gt;state&lt;/code&gt; instead of with &lt;code&gt;my&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfee1d82923df34ecbc3757eed0d1a71f22fdeb9" translate="yes" xml:space="preserve">
          <source>No such thing. See &lt;b&gt;class method&lt;/b&gt;.</source>
          <target state="translated">没有这样的事。请参阅&lt;b&gt;类方法&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="24ad36b7a10baca2137d3e182796c8fa973e83aa" translate="yes" xml:space="preserve">
          <source>No such thing. See &lt;b&gt;lexical scoping&lt;/b&gt;.</source>
          <target state="translated">没有这样的事。请参阅&lt;b&gt;词汇作用域&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="3f5436248a66b44ec28a7a07c44cb765383f5e61" translate="yes" xml:space="preserve">
          <source>No suspects left</source>
          <target state="translated">没有留下嫌疑人</target>
        </trans-unit>
        <trans-unit id="0b0e3c47f8113fc69c5db2a844ca423a0b0e626d" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Compress::Bzip2 at present.</source>
          <target state="translated">目前这个IO::Compress::Bzip2不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="295b36facbdc6f1e39ae12ab91f921909acbf35a" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::AnyInflate at present.</source>
          <target state="translated">目前这个IO::Uncompress::AnyInflate不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="6ee09f98ed165e0824d6ef187752ca356d22dda0" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::AnyUncompress at present.</source>
          <target state="translated">目前这个IO::Uncompress::AnyUncompress不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="df24583254943b025a824682df0b1dfe399beb9d" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Bunzip2 at present.</source>
          <target state="translated">目前这个IO::Uncompress::Bunzip2不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="a69b3bd42bb22135230da30e5fa338a580834d5c" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Gunzip at present.</source>
          <target state="translated">目前这个IO::Uncompress::Gunzip不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="035acb0d322011913fd5d41a102d38ed488eeb8f" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Inflate at present.</source>
          <target state="translated">目前这个IO::Uncompress::Inflate不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="b9be5deb4e19e7df3ae4108a6bf22723539a2cce" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::RawInflate at present.</source>
          <target state="translated">目前这个IO::Uncompress::RawInflate不需要任何符号常量。</target>
        </trans-unit>
        <trans-unit id="3c18d218923a1c749b134fb8b13b00be7f7f924f" translate="yes" xml:space="preserve">
          <source>No symbolic constants are required by this IO::Uncompress::Unzip at present.</source>
          <target state="translated">目前这个IO::Uncompress::Unzip不需要符号常量。</target>
        </trans-unit>
        <trans-unit id="fcc2fb4bb27ec2672711d61bc08c85f54dc43272" translate="yes" xml:space="preserve">
          <source>No user hints defined for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bdd65afd19146fdce8e8b2d5e32c005beea617" translate="yes" xml:space="preserve">
          <source>No user-serviceable parts inside.</source>
          <target state="translated">内部没有用户可维修的部件。</target>
        </trans-unit>
        <trans-unit id="67d5beb85edfab150b561584afd043236d2bdfa9" translate="yes" xml:space="preserve">
          <source>No variable interpolation occurs. String modifying combinations for case and quoting such as &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , and &lt;code&gt;\E&lt;/code&gt; are not recognized. The other escape sequences such as &lt;code&gt;\200&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; and backslashed characters such as &lt;code&gt;\\&lt;/code&gt; and &lt;code&gt;\-&lt;/code&gt; are converted to appropriate literals. The character &lt;code&gt;&quot;-&quot;&lt;/code&gt; is treated specially and therefore &lt;code&gt;\-&lt;/code&gt; is treated as a literal &lt;code&gt;&quot;-&quot;&lt;/code&gt; .</source>
          <target state="translated">没有变量插值发生。无法识别大小写和引号的字符串修改组合，例如 &lt;code&gt;\Q&lt;/code&gt; ， &lt;code&gt;\U&lt;/code&gt; 和 &lt;code&gt;\E&lt;/code&gt; 其他转义序列（例如 &lt;code&gt;\200&lt;/code&gt; 和 &lt;code&gt;\t&lt;/code&gt; 和反斜杠字符（例如 &lt;code&gt;\\&lt;/code&gt; 和 &lt;code&gt;\-&lt;/code&gt; )将转换为适当的文字。字符 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 经过特殊处理，因此 &lt;code&gt;\-&lt;/code&gt; 被视为文字 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79cca34834e9a9e4df88122379363c6b6f1e012f" translate="yes" xml:space="preserve">
          <source>No variable interpolation occurs. String modifying combinations for case and quoting such as &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, and &lt;code&gt;\E&lt;/code&gt; are not recognized. The other escape sequences such as &lt;code&gt;\200&lt;/code&gt; and &lt;code&gt;\t&lt;/code&gt; and backslashed characters such as &lt;code&gt;\\&lt;/code&gt; and &lt;code&gt;\-&lt;/code&gt; are converted to appropriate literals. The character &lt;code&gt;&quot;-&quot;&lt;/code&gt; is treated specially and therefore &lt;code&gt;\-&lt;/code&gt; is treated as a literal &lt;code&gt;&quot;-&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344119823e9aa0a1230bde24e92b97b7e8c49b30" translate="yes" xml:space="preserve">
          <source>No, Data::Dumper's Unicode abilities are as they should be. There have been some complaints that it should restore the UTF8 flag when the data is read again with &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. However, you should really not look at the flag, and nothing indicates that Data::Dumper should break this rule.</source>
          <target state="translated">不，Data :: Dumper的Unicode功能与应有的一样。有人抱怨说，当用 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 再次读取数据时，它应该恢复UTF8标志。但是，您实际上不应该查看该标志，并且没有任何迹象表明Data :: Dumper应该违反此规则。</target>
        </trans-unit>
        <trans-unit id="802da19c5fa327b3ebbca0edd91baa43bc779ec6" translate="yes" xml:space="preserve">
          <source>No, Data::Dumper's Unicode abilities are as they should be. There have been some complaints that it should restore the UTF8 flag when the data is read again with &lt;code&gt;eval&lt;/code&gt;. However, you should really not look at the flag, and nothing indicates that Data::Dumper should break this rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa78bf2c5971126192cb16bb6c588fba93270da" translate="yes" xml:space="preserve">
          <source>No, Perl is easy to start &lt;a href=&quot;http://learn.perl.org/&quot;&gt;learning&lt;/a&gt; --and easy to keep learning. It looks like most programming languages you're likely to have experience with, so if you've ever written a C program, an awk script, a shell script, or even a BASIC program, you're already partway there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a38c27dd7fd1fed994a63f940f365b3621c19f1" translate="yes" xml:space="preserve">
          <source>No, Perl is easy to start &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2flearn.perl.org%2f&quot;&gt;learning&lt;/a&gt; --and easy to keep learning. It looks like most programming languages you're likely to have experience with, so if you've ever written a C program, an awk script, a shell script, or even a BASIC program, you're already partway there.</source>
          <target state="translated">不，Perl易于&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2flearn.perl.org%2f&quot;&gt;学习，&lt;/a&gt;并且易于学习。看起来您可能已经熟悉了大多数编程语言，因此，如果您曾经编写过C程序，awk脚本，shell脚本或什至是BASIC程序，那么您已经参与其中了。</target>
        </trans-unit>
        <trans-unit id="88ee7d9b8720b881699420ad9ccfc4e5c84c1947" translate="yes" xml:space="preserve">
          <source>No, and this isn't really a Unicode FAQ.</source>
          <target state="translated">不,这不是一个真正的Unicode FAQ。</target>
        </trans-unit>
        <trans-unit id="5d6f02eea0d900b7bfb2780fc2df229ad5239d91" translate="yes" xml:space="preserve">
          <source>No-op, provided for OO compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15815b309727bddc8a8cd4e554a2b5a8e3e42f09" translate="yes" xml:space="preserve">
          <source>No-ops</source>
          <target state="translated">No-ops</target>
        </trans-unit>
        <trans-unit id="e12405068610495a8442e94ec628add88b178c22" translate="yes" xml:space="preserve">
          <source>Nobody else on the planet is going to talk your local data format, so we can ignore that. But what about the thing in the middle? Building tree structures from Perl variables and then traversing them is a nice, general problem, and if nobody's already written a module that does that, you might want to modularise that code too.</source>
          <target state="translated">这个世界上没有人会去说你的本地数据格式,所以我们可以忽略这个问题。但是中间的东西呢?从Perl变量中构建树状结构,然后遍历它们是一个很好的、通用的问题,如果没有人已经写了一个模块来做这个事情,你可能也想把这个代码模块化。</target>
        </trans-unit>
        <trans-unit id="7a1a9fd7bbb71ea26aa1056d5954e10f58509d69" translate="yes" xml:space="preserve">
          <source>Nokia is a registered trademark of Nokia Corporation. Nokia's product names are trademarks or registered trademarks of Nokia. Other product and company names mentioned herein may be trademarks or trade names of their respective owners.</source>
          <target state="translated">诺基亚是诺基亚公司的注册商标。诺基亚的产品名称是诺基亚的商标或注册商标。本文提及的其他产品和公司名称可能是其各自所有者的商标或商号。</target>
        </trans-unit>
        <trans-unit id="ce6966adb468edf0cb8841781f043cf41939dccf" translate="yes" xml:space="preserve">
          <source>Non-Existent Local Times (DST)</source>
          <target state="translated">不存在的当地时间(DST)</target>
        </trans-unit>
        <trans-unit id="c8c499b19de2058088ccd7be966c0ac655b7adf3" translate="yes" xml:space="preserve">
          <source>Non-Hash Objects</source>
          <target state="translated">非哈希对象</target>
        </trans-unit>
        <trans-unit id="dbe9b5da0fbf8db965c6a52c0c98ed30d89ee662" translate="yes" xml:space="preserve">
          <source>Non-Perl Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84799ce73e00b044c0d551ac1642ef91417672" translate="yes" xml:space="preserve">
          <source>Non-Perl libraries, such as &lt;code&gt;gtk&lt;/code&gt;, that call the system &lt;code&gt;setlocale&lt;/code&gt; can continue to work if this function is called before transferring control to the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a4443d65a9907e689a96dad2b964b32204f4cf" translate="yes" xml:space="preserve">
          <source>Non-Unix users should check their &lt;code&gt;&lt;i&gt;Your_OS&lt;/i&gt;::Process&lt;/code&gt; module for other possible solutions.</source>
          <target state="translated">非Unix用户应检查自己的 &lt;code&gt;&lt;i&gt;Your_OS&lt;/i&gt;::Process&lt;/code&gt; 模块以获取其他可能的解决方案。</target>
        </trans-unit>
        <trans-unit id="8955048c10f602a8fbda2fd5207694abb568decd" translate="yes" xml:space="preserve">
          <source>Non-bracketing delimiters use the same character fore and aft, but the four sorts of ASCII brackets (round, angle, square, curly) all nest, which means that</source>
          <target state="translated">非括号定界符使用相同的字符前后,但四种ASCII括号(圆括号、角括号、方括号、卷括号)都是嵌套的,这意味着</target>
        </trans-unit>
        <trans-unit id="d5ef8c3ef4f33bed9ce030f3cbfb6a9e3e9cf03b" translate="yes" xml:space="preserve">
          <source>Non-capturing groupings</source>
          <target state="translated">非捕获组</target>
        </trans-unit>
        <trans-unit id="0b0affcbcf3b94afc7fed13853a23ba9ca1bafd7" translate="yes" xml:space="preserve">
          <source>Non-capturing groupings are also useful for removing nuisance elements gathered from a split operation where parentheses are required for some reason:</source>
          <target state="translated">非捕获分组也很有用,可用于删除因某些原因需要用括号的拆分操作中收集的妨害性元素。</target>
        </trans-unit>
        <trans-unit id="250bef419b1cfb6fc542fb72d52ad8cf2ddb7b3e" translate="yes" xml:space="preserve">
          <source>Non-finite repeat count does nothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e8c733eeb11ebeb19aea8f0c24bafd0dcd3b78" translate="yes" xml:space="preserve">
          <source>Non-function Keywords by Cross-reference</source>
          <target state="translated">非功能关键词的交叉引用</target>
        </trans-unit>
        <trans-unit id="bac16ae68c3fce95782862eda51b6e1ede9d4aa1" translate="yes" xml:space="preserve">
          <source>Non-function keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cf0c88b13d5175fbcbe31d22f2ddf98ce0cabe" translate="yes" xml:space="preserve">
          <source>Non-hex character '%c' terminates \x early. Resolved as &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7211affd3147ea133275fa861a1710f2e9d110" translate="yes" xml:space="preserve">
          <source>Non-hex character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81f5fe242ea0b94d3fcd14bf1f47ecae7e89c34" translate="yes" xml:space="preserve">
          <source>Non-interpretive attribute handlers</source>
          <target state="translated">非解释性属性处理程序</target>
        </trans-unit>
        <trans-unit id="e94d3362f237ca4afac6040875234c6b9fba0037" translate="yes" xml:space="preserve">
          <source>Non-lexical variables are quite difficult to track through a program. Sometimes the type of a non-lexical variable's use is impossible to determine. Introductions of non-lexical non-scalars don't seem to be reported properly.</source>
          <target state="translated">在程序中跟踪非灵活性变量是相当困难的。有时,一个非线性变量的使用类型是无法确定的。引入的非灵活性非标量似乎不能正确报告。</target>
        </trans-unit>
        <trans-unit id="26df9e297a4b74c0b4469dd88197da6ad0ee1647" translate="yes" xml:space="preserve">
          <source>Non-locale-aware XS code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143be0c9dacdb4569154158e9bf1f623b64c631f" translate="yes" xml:space="preserve">
          <source>Non-mutators with a mutator variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9b68521b56058539894259cdc010e5c4cac590" translate="yes" xml:space="preserve">
          <source>Non-octal character '%c' terminates \o early. Resolved as &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea4a82548edbcd0b7bf7b3e51fdce2be0f6eed2" translate="yes" xml:space="preserve">
          <source>Non-octal character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f78bf86e7669259f75fa7cb97ef1591cd4d731" translate="yes" xml:space="preserve">
          <source>Non-printable ASCII characters are represented by &lt;b&gt;escape sequences&lt;/b&gt;. Common examples are &lt;code&gt;\t&lt;/code&gt; for a tab, &lt;code&gt;\n&lt;/code&gt; for a newline, and &lt;code&gt;\r&lt;/code&gt; for a carriage return. Arbitrary bytes are represented by octal escape sequences, e.g., &lt;code&gt;\033&lt;/code&gt; , or hexadecimal escape sequences, e.g., &lt;code&gt;\x1B&lt;/code&gt; :</source>
          <target state="translated">不可打印的ASCII字符由&lt;b&gt;转义序列&lt;/b&gt;表示。常见的示例是 &lt;code&gt;\t&lt;/code&gt; 用于制表符）， &lt;code&gt;\n&lt;/code&gt; 用于换行）和 &lt;code&gt;\r&lt;/code&gt; 用于回车）。任意字节由八进制转义序列（例如 &lt;code&gt;\033&lt;/code&gt; ）或十六进制转义序列（例如 &lt;code&gt;\x1B&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e7aa2075dd471079df2c9c642ea33c0317f23a7c" translate="yes" xml:space="preserve">
          <source>Non-printable ASCII characters are represented by &lt;b&gt;escape sequences&lt;/b&gt;. Common examples are &lt;code&gt;\t&lt;/code&gt; for a tab, &lt;code&gt;\n&lt;/code&gt; for a newline, and &lt;code&gt;\r&lt;/code&gt; for a carriage return. Arbitrary bytes are represented by octal escape sequences, e.g., &lt;code&gt;\033&lt;/code&gt;, or hexadecimal escape sequences, e.g., &lt;code&gt;\x1B&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b4a2658c61f47bf2140155001f1ef6dc9d6757" translate="yes" xml:space="preserve">
          <source>Non-string passed as bitmask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b7c71547427b5d091f6bdffa36d87329e206a0" translate="yes" xml:space="preserve">
          <source>Noncharacter code points</source>
          <target state="translated">非字符代码点</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="d6c380a4b3a4edf398e410e1086f1f7a11f8a811" translate="yes" xml:space="preserve">
          <source>None by default.</source>
          <target state="translated">默认为无。</target>
        </trans-unit>
        <trans-unit id="6aa4e4ea6e7911634748f65dccefc73c860296f0" translate="yes" xml:space="preserve">
          <source>None by default. &lt;code&gt;process_file()&lt;/code&gt; and/or &lt;code&gt;report_error_count()&lt;/code&gt; may be exported upon request. Using the functional interface is discouraged.</source>
          <target state="translated">默认情况下没有。 &lt;code&gt;process_file()&lt;/code&gt; 和/或 &lt;code&gt;report_error_count()&lt;/code&gt; 可以应要求导出。不建议使用功能接口。</target>
        </trans-unit>
        <trans-unit id="453747b325cac90861900bdf70984ba34f620d00" translate="yes" xml:space="preserve">
          <source>None by default. The only method is &lt;code&gt;import&lt;/code&gt;, called by &lt;code&gt;use deprecate;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5cef6753554f631841c949a6101aca86cbd5e5" translate="yes" xml:space="preserve">
          <source>None known (guess what must have been used to report them?)</source>
          <target state="translated">无人知晓(猜测一定是用什么来报告他们?</target>
        </trans-unit>
        <trans-unit id="e6ac3d9a04f7cfc73ad80a24e739c468d87c50d1" translate="yes" xml:space="preserve">
          <source>None known at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d9ea3fd95989745b48b0ee2bb0fc38ac4cacda" translate="yes" xml:space="preserve">
          <source>None of the Encode team knows Hebrew enough (ISO-8859-8, cp1255 and MacHebrew are supported because and just because there were mappings available at &lt;a href=&quot;http://www.unicode.org/&quot;&gt;http://www.unicode.org/&lt;/a&gt;). Contributions welcome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceb44e5b6031a9fa60a1bf1ee64b77cc82126f1" translate="yes" xml:space="preserve">
          <source>None of the below. Often a special device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0fc5245472be853cebf2ae9c2cf90be56b5342" translate="yes" xml:space="preserve">
          <source>None of the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d59b0c28271db96f51f420982722cd9cd2649b" translate="yes" xml:space="preserve">
          <source>None of the make types being checked for is viable on VMS, plus our $self-&amp;gt;{MAKE} is an unexpanded (and unexpandable) macro whose value is known only to the make utility itself.</source>
          <target state="translated">在VMS上，所有要检查的make类型都不可行，加上我们的$ self-&amp;gt; {MAKE}是一个未扩展（和不可扩展）的宏，其值仅是make实用程序本身已知的。</target>
        </trans-unit>
        <trans-unit id="1e04720e675e287c291e140902461ae4e502fb52" translate="yes" xml:space="preserve">
          <source>None of these bugs exist when using block eval</source>
          <target state="translated">当使用块评价时,这些错误都不存在。</target>
        </trans-unit>
        <trans-unit id="033d96f0084981901aa9644004656c9d55ed0182" translate="yes" xml:space="preserve">
          <source>None of these methods modify the invocand object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479325aa8b63106a6d86ab16c8ede5f5349e0981" translate="yes" xml:space="preserve">
          <source>None of these methods modify the invocand object. Note that a &lt;code&gt;NaN&lt;/code&gt; is neither less than, greater than, or equal to anything else, even a &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="a1e84bde07301b296b051f051ed1c0db0b32e4b4" translate="yes" xml:space="preserve">
          <source>None. Remember: this is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a6496ffa4e9b51040364dbe3fe4269ea990e40" translate="yes" xml:space="preserve">
          <source>Nonetheless, Storable deserializing documents from untrusted sources is expected to have other, yet undiscovered, security concerns such as allowing an attacker to cause the deserializer to crash hard.</source>
          <target state="translated">尽管如此,Storable对来自不受信任来源的文档进行反序列化,预计会有其他尚未发现的安全问题,比如允许攻击者导致反序列化器严重崩溃。</target>
        </trans-unit>
        <trans-unit id="175ce5f240a3e9cb0cbb1e3f58683b52d7a97a1d" translate="yes" xml:space="preserve">
          <source>Nor is the &lt;code&gt;@&lt;i&gt;unicode_property&lt;/i&gt;@&lt;/code&gt; form implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839bc88d91700ba09e378d5076a26e3c444a4e70" translate="yes" xml:space="preserve">
          <source>Norbert Pueschel, pueschel@imsdd.meb.uni-bonn.de Jan-Erik Karlsson, trg@privat.utfors.se</source>
          <target state="translated">Norbert Pueschel,pueschel@imsdd.meb.uni-bonn.de Jan-Erik Karlsson,trg@privat.utfors.se。</target>
        </trans-unit>
        <trans-unit id="752b74baffa89f2087b420babd0da41de66e9651" translate="yes" xml:space="preserve">
          <source>NormTest.txt</source>
          <target state="translated">NormTest.txt</target>
        </trans-unit>
        <trans-unit id="bef55c09b30ad44df2dca64de025b08519e931e8" translate="yes" xml:space="preserve">
          <source>Normal Form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398931fe08778e56fac4c793097af9f4ad258767" translate="yes" xml:space="preserve">
          <source>Normal errors are reported by having store() or retrieve() return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Such errors are usually I/O errors (or truncated stream errors at retrieval).</source>
          <target state="translated">通过使store（）或retrieve（）返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 来报告正常错误。此类错误通常是I / O错误（或检索时截断的流错误）。</target>
        </trans-unit>
        <trans-unit id="19b9796cc876c957170d078d2d8dfae36e72dc58" translate="yes" xml:space="preserve">
          <source>Normal errors are reported by having store() or retrieve() return &lt;code&gt;undef&lt;/code&gt;. Such errors are usually I/O errors (or truncated stream errors at retrieval).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe142dfc22c18bbee0c7f0e054d1e4fe9b2118c" translate="yes" xml:space="preserve">
          <source>Normal object destructor method.</source>
          <target state="translated">正常的对象分解器方法。</target>
        </trans-unit>
        <trans-unit id="857c285210fd011f006ff55811d0ad93b45d7b73" translate="yes" xml:space="preserve">
          <source>Normal users of Perl should never care how Perl encodes any particular Unicode string (because the normal ways to get at the contents of a string with Unicode--via input and output--should always be via explicitly-defined I/O layers). But if you must, there are two ways of looking behind the scenes.</source>
          <target state="translated">Perl 的普通用户不应该关心 Perl 是如何对某个特定的 Unicode 字符串进行编码的 (因为获取 Unicode 字符串内容的正常方法--通过输入和输出--应该总是通过明确定义的 I/O 层)。但如果你一定要这样做,有两种方法可以观察到幕后的情况。</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="7f5151d9a184cfb6f6a7bdc53123078ee18e8e1e" translate="yes" xml:space="preserve">
          <source>Normalization Corrections</source>
          <target state="translated">归一化校正</target>
        </trans-unit>
        <trans-unit id="3fc17160b371a2dd2ce5f321ad17046bc51f04ec" translate="yes" xml:space="preserve">
          <source>Normalization Form Composed</source>
          <target state="translated">归一化形式组成</target>
        </trans-unit>
        <trans-unit id="8b530c9dcdf01b0cc0b4fd91277cae625646ab23" translate="yes" xml:space="preserve">
          <source>Normalization Form Decomposed</source>
          <target state="translated">归一化形式分解</target>
        </trans-unit>
        <trans-unit id="d6a84c0a7366c74d8b600470740fa32f23cb1e8c" translate="yes" xml:space="preserve">
          <source>Normalization Forms</source>
          <target state="translated">归一化形式</target>
        </trans-unit>
        <trans-unit id="857696fa6055a6a9182e520ffef5e8982e055460" translate="yes" xml:space="preserve">
          <source>NormalizationCorrections.txt</source>
          <target state="translated">NormalizationCorrections.txt</target>
        </trans-unit>
        <trans-unit id="25d1f6918ee145ecbeeb0b9fc5d04c8edf9a3980" translate="yes" xml:space="preserve">
          <source>Normalize all arguments for consistency of comparison.</source>
          <target state="translated">为了比较的一致性,将所有的参数标准化。</target>
        </trans-unit>
        <trans-unit id="92f0c15067179151994e0422d3b7e1bea19d957f" translate="yes" xml:space="preserve">
          <source>Normalize the number. This is a no-op and is provided only for backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b201ba0d30952b489241e1c219c0da1ea9609ad3" translate="yes" xml:space="preserve">
          <source>Normally 'Test2::Formatter::' is prefixed to the value in the environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf527795f304857fa2e9475a64463f107fbdc96" translate="yes" xml:space="preserve">
          <source>Normally (by default) &lt;b&gt;Pod::Parser&lt;/b&gt; handles the &lt;code&gt;=cut&lt;/code&gt; POD directive by itself and does not pass it on to the caller for processing. Setting this option to a non-empty, non-zero value will cause &lt;b&gt;Pod::Parser&lt;/b&gt; to pass the &lt;code&gt;=cut&lt;/code&gt; directive to the caller just like any other POD command (and hence it may be processed by the &lt;b&gt;command()&lt;/b&gt; method).</source>
          <target state="translated">通常（默认情况下），&lt;b&gt;Pod :: Parser自己会&lt;/b&gt;处理 &lt;code&gt;=cut&lt;/code&gt; POD指令，并且不会将其传递给调用方进行处理。将此选项设置为非空，非零值将导致&lt;b&gt;Pod :: Parser&lt;/b&gt;像其他POD命令一样将 &lt;code&gt;=cut&lt;/code&gt; 指令传递给调用方（因此可以由&lt;b&gt;command（）&lt;/b&gt;方法处理）。</target>
        </trans-unit>
        <trans-unit id="e5bacef8258b5f77e0e8d77b6f8e1d3a5079db51" translate="yes" xml:space="preserve">
          <source>Normally (by default) &lt;b&gt;Pod::Parser&lt;/b&gt; recognizes a bare minimum of pod syntax errors and warnings and issues diagnostic messages for errors, but not for warnings. (Use &lt;b&gt;Pod::Checker&lt;/b&gt; to do more thorough checking of POD syntax.) Setting this option to a non-empty, non-zero value will cause &lt;b&gt;Pod::Parser&lt;/b&gt; to issue diagnostics for the few warnings it recognizes as well as the errors.</source>
          <target state="translated">正常情况下（默认情况下），&lt;b&gt;Pod :: Parser仅&lt;/b&gt;识别极少量的Pod语法错误和警告，并针对错误而不是警告发出诊断消息。 （使用&lt;b&gt;Pod :: Checker&lt;/b&gt;可以更彻底地检查POD语法。）将此选项设置为非空，非零值将导致&lt;b&gt;Pod :: Parser&lt;/b&gt;对它识别出的一些警告和错误发出诊断信息。</target>
        </trans-unit>
        <trans-unit id="f96de2f4de546b0b105bd31abd1df6be57d08d9b" translate="yes" xml:space="preserve">
          <source>Normally (by default) &lt;b&gt;Pod::Parser&lt;/b&gt; will only provide access to the POD sections of the input. Input paragraphs that are not part of the POD-format documentation are not made available to the caller (not even using &lt;b&gt;preprocess_paragraph()&lt;/b&gt;). Setting this option to a non-empty, non-zero value will allow &lt;b&gt;preprocess_paragraph()&lt;/b&gt; to see non-POD sections of the input as well as POD sections. The &lt;b&gt;cutting()&lt;/b&gt; method can be used to determine if the corresponding paragraph is a POD paragraph, or some other input paragraph.</source>
          <target state="translated">通常（默认情况下），&lt;b&gt;Pod :: Parser&lt;/b&gt;将仅提供对输入的POD部分的访问。不属于POD格式文档的输入段落对调用者不可用&lt;b&gt;（&lt;/b&gt;甚至不使用&lt;b&gt;preprocess_paragraph（）&lt;/b&gt;）。将此选项设置为非空，非零值将允许&lt;b&gt;preprocess_paragraph（）&lt;/b&gt;查看输入的非P​​OD部分以及POD部分。的&lt;b&gt;切削（）&lt;/b&gt;方法可用于确定是否对应的段是一个POD段落，或一些其它输入段。</target>
        </trans-unit>
        <trans-unit id="8aa7d9bed6b6de90e46aa497f1bf0c42b0003cae" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;context()&lt;/code&gt; looks at the global hub stack. If you are maintaining your own &lt;a href=&quot;Test2::API::Stack&quot;&gt;Test2::API::Stack&lt;/a&gt; instance you may pass it in to be used instead of the global one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37837c6debd1017a96cd617b60da42b547584ec0" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;cx_pushblock&lt;/code&gt; should be immediately followed by the appropriate &lt;code&gt;cx_pushfoo&lt;/code&gt;, with nothing between them; this is because if code in-between could die (e.g. a warning upgraded to fatal), then the context stack unwinding code in &lt;code&gt;dounwind&lt;/code&gt; would see (in the example above) a &lt;code&gt;CXt_SUB&lt;/code&gt; context frame, but without all the subroutine-specific fields set, and crashes would soon ensue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c59a8b8d40b03f188d8c8dc54d2e1ea05d392c2" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;intercept { ... }&lt;/code&gt; only intercepts events sent to the main hub (as added by intercept itself). Nested hubs, such as those created by subtests, will not be intercepted. This is normally what you will still see the nested events by inspecting the subtest event. However there are times where you want to verify each event as it is sent, in that case use &lt;code&gt;intercept_deep { ... }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6752118c5629900bd2493b9fc622cf5fe1da59a3" translate="yes" xml:space="preserve">
          <source>Normally =head1 will become &amp;lt;h1&amp;gt;, =head2 will become &amp;lt;h2&amp;gt; etc. Using the html_h_level method will change these levels setting the h level of =head1 tags:</source>
          <target state="translated">通常，= head1将变为&amp;lt;h1&amp;gt;，= head2将变为&amp;lt;h2&amp;gt;，以此类推。使用html_h_level方法将更改这些级别，并设置= head1标签的h级别：</target>
        </trans-unit>
        <trans-unit id="eb704595ff03db8550411015b5fd6f6b6a0da573" translate="yes" xml:space="preserve">
          <source>Normally CPAN.pm keeps config variables in memory and changes need to be saved in a separate 'o conf commit' command to make them permanent between sessions. If you set the 'auto_commit' option to true, changes to a config variable are always automatically committed to disk.</source>
          <target state="translated">通常CPAN.pm会将配置变量保存在内存中,并且需要在单独的'o conf commit'命令中保存更改,以使它们在不同的会话中永久化。如果你把'auto_commit'选项设置为true,那么对配置变量的修改就会自动提交到磁盘。</target>
        </trans-unit>
        <trans-unit id="ffed2ba849f40bdabd5438b067027bdbe4e7e420" translate="yes" xml:space="preserve">
          <source>Normally File::Basename will assume a file path type native to your current operating system (ie. /foo/bar style on Unix, \foo\bar on Windows, etc...). With this function you can override that assumption.</source>
          <target state="translated">通常 File::Basename 会假定你当前操作系统的文件路径类型 (即 Unix 上的 /foo/bar style,Windows 上的\foo/bar,等等...)。通过这个函数,你可以覆盖这个假设。</target>
        </trans-unit>
        <trans-unit id="b7e8c2709805a9ae37b1070139ac3e090e7ff1f7" translate="yes" xml:space="preserve">
          <source>Normally SPACE and TAB characters have no special meaning inside a bracketed character class; they are just added to the list of characters matched by the class. But if the &lt;a href=&quot;perlre#%2Fx-and-%2Fxx&quot;&gt;&lt;code&gt;/xx&lt;/code&gt;&lt;/a&gt; pattern modifier is in effect, they are generally ignored and can be added to improve readability. They can't be added in the middle of a single construct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc57384763197fbed7cd5d27f4bd79109621c483" translate="yes" xml:space="preserve">
          <source>Normally a skip-all plan event will cause a subtest to stop executing. This is accomplished via &lt;code&gt;last LABEL&lt;/code&gt; to a label inside the subtest code. Most of the time this is perfectly fine. There are times however where this flow control causes bad things to happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c08039a5c74ee4bad6cfd5f4c148fa8b9bc350" translate="yes" xml:space="preserve">
          <source>Normally all events inside and outside a subtest are sent to the formatter immediately by the hub. Sometimes it is desirable to hold off sending events within a subtest until the subtest is complete. This usually depends on the formatter being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6487841dbf7b431d256b64c2c684343b1b3e420" translate="yes" xml:space="preserve">
          <source>Normally equivalent to inet_aton('0.0.0.0'), inet_aton('255.255.255.255'), inet_aton('localhost') and inet_aton('255.255.255.255') respectively.</source>
          <target state="translated">通常分别相当于inet_aton('0.0.0.0')、inet_aton('255.255.255.255')、inet_aton('localhost')和inet_aton('255.255.255.255')。</target>
        </trans-unit>
        <trans-unit id="655db30b7d1bcb685e05fd4286f5335ffc8fceaf" translate="yes" xml:space="preserve">
          <source>Normally equivalent to inet_pton(AF_INET6, &quot;::&quot;) and inet_pton(AF_INET6, &quot;::1&quot;) respectively.</source>
          <target state="translated">通常分别相当于inet_pton(AF_INET6,&quot;::&quot;)和inet_pton(AF_INET6,&quot;::1&quot;)。</target>
        </trans-unit>
        <trans-unit id="d7299c892c667dfb149d16517a44252ec066ea3a" translate="yes" xml:space="preserve">
          <source>Normally it is an error to attempt to run the same test twice. Aliases allow you to overcome this limitation by giving each run of the test a unique name.</source>
          <target state="translated">通常情况下,试图运行两次相同的测试是一个错误。别名可以让您克服这个限制,给每次测试运行一个独特的名称。</target>
        </trans-unit>
        <trans-unit id="84c2859baa8c819a82e3a926f82e2ef06ec17886" translate="yes" xml:space="preserve">
          <source>Normally it is not necessarily to do this directly, because it suffices to use the implicit discarding behaviour of &lt;a href=&quot;#lex_next_chunk&quot;&gt;&quot;lex_next_chunk&quot;&lt;/a&gt; and things based on it. However, if a token stretches across multiple lines, and the lexing code has kept multiple lines of text in the buffer for that purpose, then after completion of the token it would be wise to explicitly discard the now-unneeded earlier lines, to avoid future multi-line tokens growing the buffer without bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b5278ad328e1d6dfb18e8dbc85851ab51d1e67" translate="yes" xml:space="preserve">
          <source>Normally it is not necessarily to do this directly, because it suffices to use the implicit discarding behaviour of &lt;a href=&quot;#lex_next_chunk&quot;&gt;lex_next_chunk&lt;/a&gt; and things based on it. However, if a token stretches across multiple lines, and the lexing code has kept multiple lines of text in the buffer for that purpose, then after completion of the token it would be wise to explicitly discard the now-unneeded earlier lines, to avoid future multi-line tokens growing the buffer without bound.</source>
          <target state="translated">通常，不必直接执行此操作，因为使用&lt;a href=&quot;#lex_next_chunk&quot;&gt;lex_next_chunk&lt;/a&gt;和基于它的事物的隐式丢弃行为就足够了。但是，如果令牌跨越多行，并且为此目的，词典代码将多行文本保留在缓冲区中，那么在令牌完成后，明智的做法是明确丢弃现在不需要的较早的行，以避免将来发生多行令牌无限制地增加缓冲区。</target>
        </trans-unit>
        <trans-unit id="dff81aba4927ad5db88d6aff8ddca6455f943273" translate="yes" xml:space="preserve">
          <source>Normally just returns an empty string.</source>
          <target state="translated">通常只是返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="ee18c26e2f372d4c2e20c5f444a8a1eaa88e5a18" translate="yes" xml:space="preserve">
          <source>Normally listeners are not inherited by child hubs such as subtests. You can add the &lt;code&gt;inherit =&amp;gt; 1&lt;/code&gt; parameter to allow a listener to be inherited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7f43d14a04bad12a69a842e7552ac7eca4d422" translate="yes" xml:space="preserve">
          <source>Normally on unthreaded builds, the traditional &lt;code&gt;setlocale()&lt;/code&gt; is used and not the thread-safe locale functions. You can force the use of these on systems that have them by adding the &lt;code&gt;-Accflags='-DUSE_THREAD_SAFE_LOCALE'&lt;/code&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e69d6153e5ec624b88e17bbddf91a6ba5ccd198" translate="yes" xml:space="preserve">
          <source>Normally one can install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb00d3e7f7eb8b5f62db8fa28fecb9cae0387cd9" translate="yes" xml:space="preserve">
          <source>Normally the SV will be cleared before the escaped string is prepared, but when &lt;code&gt;PERL_PV_ESCAPE_NOCLEAR&lt;/code&gt; is set this will not occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bb2716ea7192ed8237324e0bfeb22c949fe5dd" translate="yes" xml:space="preserve">
          <source>Normally the SV will be cleared before the escaped string is prepared, but when PERL_PV_ESCAPE_NOCLEAR is set this will not occur.</source>
          <target state="translated">通常SV会在转义字符串准备好之前被清除,但是当PERL_PV_ESCAPE_NOCLEAR被设置时,这种情况不会发生。</target>
        </trans-unit>
        <trans-unit id="2167ce6cabaacc20aab8af72ad8f0a559278228a" translate="yes" xml:space="preserve">
          <source>Normally the subtest hub is pushed and the sub is allowed to generate its own root context for the hub. When this setting is turned on a root context will be created for the hub that shares the same trace as the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e27e79537ab43ff1cac36249dfeaf81b443e2f" translate="yes" xml:space="preserve">
          <source>Normally the values returned by &lt;code&gt;message()&lt;/code&gt; and &lt;code&gt;code()&lt;/code&gt; are obtained from the remote server, but in a few circumstances, as detailed below, &lt;code&gt;Net::Cmd&lt;/code&gt; will return values that it sets. You can alter this behavior by overriding DEF_REPLY_CODE() to specify a different default reply code, or overriding one of the specific error handling methods below.</source>
          <target state="translated">通常，由 &lt;code&gt;message()&lt;/code&gt; 和 &lt;code&gt;code()&lt;/code&gt; 返回的值是从远程服务器获取的，但是在某些情况下，如下面所述， &lt;code&gt;Net::Cmd&lt;/code&gt; 将返回它设置的值。您可以通过覆盖DEF_REPLY_CODE（）来指定其他默认回复代码，或覆盖以下特定的错误处理方法之一，来更改此行为。</target>
        </trans-unit>
        <trans-unit id="e5c29faef0eb7b590f52263e442441419daf42a3" translate="yes" xml:space="preserve">
          <source>Normally when a Perl program is run in taint mode the contents of the &lt;code&gt;PERL5LIB&lt;/code&gt; environment variable do not appear in &lt;code&gt;@INC&lt;/code&gt; .</source>
          <target state="translated">通常，当以污点模式运行Perl程序时， &lt;code&gt;PERL5LIB&lt;/code&gt; 环境变量的内容不会出现在 &lt;code&gt;@INC&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="506d1f5f54dfc2b579811707472650864a3a3064" translate="yes" xml:space="preserve">
          <source>Normally when a Perl program is run in taint mode the contents of the &lt;code&gt;PERL5LIB&lt;/code&gt; environment variable do not appear in &lt;code&gt;@INC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a7a995939729b0dabf635451424cb7aa8edddc" translate="yes" xml:space="preserve">
          <source>Normally when a quantified subpattern does not allow the rest of the overall pattern to match, Perl will backtrack. However, this behaviour is sometimes undesirable. Thus Perl provides the &quot;possessive&quot; quantifier form as well.</source>
          <target state="translated">一般情况下,当一个量化的子模式不允许整体模式的其他部分匹配时,Perl会回溯。然而,这种行为有时是不可取的。因此,Perl也提供了 &quot;占有式 &quot;量化符形式。</target>
        </trans-unit>
        <trans-unit id="c8104915beebb2ef8d901739c62a7755b75d714f" translate="yes" xml:space="preserve">
          <source>Normally you can just pass a list of Perl tests and the harness will know how to execute them. However, if your tests are not written in Perl or if you want all tests invoked exactly the same way, use the &lt;code&gt;-e&lt;/code&gt; , or &lt;code&gt;--&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; switch:</source>
          <target state="translated">通常，您只需传递Perl测试列表，安全带就会知道如何执行它们。但是，如果你的测试没有用Perl编写的，或者如果你想所有的测试调用完全相同的方式，使用 &lt;code&gt;-e&lt;/code&gt; 或 &lt;code&gt;--&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 开关：</target>
        </trans-unit>
        <trans-unit id="37c9dbf2473eab18c207bdcb93ed8d71c95d2719" translate="yes" xml:space="preserve">
          <source>Normally you can just pass a list of Perl tests and the harness will know how to execute them. However, if your tests are not written in Perl or if you want all tests invoked exactly the same way, use the &lt;code&gt;-e&lt;/code&gt;, or &lt;code&gt;--exec&lt;/code&gt; switch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e0d0fdb3d7e700b9e570e982fb103b1928fe84" translate="yes" xml:space="preserve">
          <source>Normally you don't need to know about the &lt;code&gt;dir_prefix&lt;/code&gt; option, but I include it in case it might prove useful for someone somewhere.</source>
          <target state="translated">通常，您不需要了解 &lt;code&gt;dir_prefix&lt;/code&gt; 选项，但是我将其包括在内，以防它可能对某人有用。</target>
        </trans-unit>
        <trans-unit id="3126672cdab51b1480bf681d3edd48007efd3666" translate="yes" xml:space="preserve">
          <source>Normally you don't need to know about the &lt;code&gt;progress&lt;/code&gt; option, but I include it in case it might prove useful for someone somewhere.</source>
          <target state="translated">通常，您不需要了解 &lt;code&gt;progress&lt;/code&gt; 选项，但是我将其包括在内，以防它可能对某人有用。</target>
        </trans-unit>
        <trans-unit id="1572aaee7e8d3c88cefd57a173a8439b4c3cbe72" translate="yes" xml:space="preserve">
          <source>Normally you only need to edit</source>
          <target state="translated">通常您只需要编辑</target>
        </trans-unit>
        <trans-unit id="c187e13441ab45730dcb9496c0aa29fc4a5d1bb8" translate="yes" xml:space="preserve">
          <source>Normally you would use a sequence of fields in a vertical stack associated with the same scalar variable to print out a block of text. You might wish to end the final field with the text &quot;...&quot;, which will appear in the output if the text was too long to appear in its entirety.</source>
          <target state="translated">通常情况下,您会使用与同一个标量变量相关联的垂直堆栈中的字段序列来打印文本块。您可能希望在最后一个字段的结尾处加上&quot;...&quot;,如果文本太长,无法完整地出现在输出中,则会出现这个字段。</target>
        </trans-unit>
        <trans-unit id="5b98aa4ab9dd3cba97d78a9f5f31385d116bda6f" translate="yes" xml:space="preserve">
          <source>Normally, &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;sprintf&lt;/code&gt;&lt;/a&gt; takes the next unused argument as the value to format for each format specification. If the format specification uses &lt;code&gt;*&lt;/code&gt; to require additional arguments, these are consumed from the argument list in the order they appear in the format specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7e48b2a8e18321d834351ce5ec861595531f41" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;Memoize&lt;/code&gt; caches your function's return values into an ordinary Perl hash variable. However, you might like to have the values cached on the disk, so that they persist from one run of your program to the next, or you might like to associate some other interesting semantics with the cached values.</source>
          <target state="translated">通常， &lt;code&gt;Memoize&lt;/code&gt; 将函数的返回值缓存到一个普通的Perl哈希变量中。但是，您可能希望将值缓存在磁盘上，以使它们从程序的一次运行一直保留到下一次运行，或者您可能希望将其他一些有趣的语义与缓存的值相关联。</target>
        </trans-unit>
        <trans-unit id="156e8ed9e5335713b0637af915d308c508bc5496" translate="yes" xml:space="preserve">
          <source>Normally, B::Deparse deparses the main code of a program, and all the subs defined in the same file. To include subs defined in other files, pass the &lt;b&gt;-f&lt;/b&gt; option with the filename. You can pass the &lt;b&gt;-f&lt;/b&gt; option several times, to include more than one secondary file. (Most of the time you don't want to use it at all.) You can also use this option to include subs which are defined in the scope of a &lt;b&gt;#line&lt;/b&gt; directive with two parameters.</source>
          <target state="translated">通常，B :: Deparse会解析程序的主代码以及在同一文件中定义的所有子代码。要包括其他文件中定义的子程序，请在文件名中传递&lt;b&gt;-f&lt;/b&gt;选项。您可以多次传递&lt;b&gt;-f&lt;/b&gt;选项，以包含多个辅助文件。（大多数情况下，您根本不想使用它。）您还可以使用此选项来包含在&lt;b&gt;#line&lt;/b&gt;指令范围内定义的带有两个参数的子项。</target>
        </trans-unit>
        <trans-unit id="d23245f6b2deb15ea54d8fbc52298acca654091b" translate="yes" xml:space="preserve">
          <source>Normally, CPAN.pm continues processing the full list of targets and dependencies, even if one of them fails. However, you can specify that CPAN should halt after the first failure. (Note that optional recommended or suggested modules that fail will not cause a halt.)</source>
          <target state="translated">通常情况下,CPAN.pm会继续处理完整的目标和依赖列表,即使其中一个失败了。然而,您可以指定CPAN在第一次失败后停止。(请注意,可选的推荐或建议的模块如果失败了,将不会导致停止。)</target>
        </trans-unit>
        <trans-unit id="3d5ac60a26c28e14f1c99420243a6e5d21eaa6ab" translate="yes" xml:space="preserve">
          <source>Normally, L&amp;lt;&amp;gt; formatting codes with a URL but anchor text are formatted to show both the anchor text and the URL. In other words:</source>
          <target state="translated">通常，带有URL但锚文本的L &amp;lt;&amp;gt;格式代码被格式化为既显示锚文本又显示URL。换一种说法：</target>
        </trans-unit>
        <trans-unit id="28696b8342bf721c125649c0d32db8869e990e70" translate="yes" xml:space="preserve">
          <source>Normally, Storable stores elements of hashes in the order they are stored internally by Perl, i.e. pseudo-randomly. If you set &lt;code&gt;$Storable::canonical&lt;/code&gt; to some &lt;code&gt;TRUE&lt;/code&gt; value, Storable will store hashes with the elements sorted by their key. This allows you to compare data structures by comparing their frozen representations (or even the compressed frozen representations), which can be useful for creating lookup tables for complicated queries.</source>
          <target state="translated">通常，Storable以Perl在内部存储的顺序（即伪随机）存储哈希元素。如果将 &lt;code&gt;$Storable::canonical&lt;/code&gt; 设置为某个 &lt;code&gt;TRUE&lt;/code&gt; 值，则Storable将存储带有按其键排序的元素的哈希。这使您可以通过比较数据结构的冻结表示（甚至是压缩的冻结表示）来比较数据结构，这对于为复杂查询创建查找表很有用。</target>
        </trans-unit>
        <trans-unit id="fcf4331af4df94d60c4a0096eabf2c84288a8ec7" translate="yes" xml:space="preserve">
          <source>Normally, Test::Builder does some extra diagnostics when the test ends. It also changes the exit code as described below.</source>
          <target state="translated">通常,Test::Builder 会在测试结束时做一些额外的诊断。它也会改变退出代码,如下所述。</target>
        </trans-unit>
        <trans-unit id="ce50c77261a5de00b7baaa95374b0bdfea3eac1d" translate="yes" xml:space="preserve">
          <source>Normally, a bareword doesn't need to be quoted, but in most cases probably should be (and must be under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; ). But a hash key consisting of a simple word and the left-hand operand to the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator both count as though they were quoted:</source>
          <target state="translated">通常，不需要用引号引起来，但是在大多数情况下，应该使用引号（必须 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; ）。但是由一个简单的单词和 &lt;code&gt;=&amp;gt;&lt;/code&gt; 运算符的左侧操作数组成的哈希键都算作引号：</target>
        </trans-unit>
        <trans-unit id="ea17e68a421c03c4aafdafcd58cccf49cfa05f01" translate="yes" xml:space="preserve">
          <source>Normally, a bareword doesn't need to be quoted, but in most cases probably should be (and must be under &lt;code&gt;use strict&lt;/code&gt;). But a hash key consisting of a simple word and the left-hand operand to the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator both count as though they were quoted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5564f90094b9860ce4353ac60db255b073b15ab0" translate="yes" xml:space="preserve">
          <source>Normally, a lone dash &lt;code&gt;-&lt;/code&gt; on the command line will not be considered an option. Option processing will terminate (unless &quot;permute&quot; is configured) and the dash will be left in &lt;code&gt;@ARGV&lt;/code&gt; .</source>
          <target state="translated">通常，在命令行上仅使用破折号 &lt;code&gt;-&lt;/code&gt; 将不会被视为选项。选项处理将终止（除非配置了&amp;ldquo; permute&amp;rdquo;），并且破折号将保留在 &lt;code&gt;@ARGV&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b48224b69ad031af88a5007831895e71150e793d" translate="yes" xml:space="preserve">
          <source>Normally, a lone dash &lt;code&gt;-&lt;/code&gt; on the command line will not be considered an option. Option processing will terminate (unless &quot;permute&quot; is configured) and the dash will be left in &lt;code&gt;@ARGV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad334551e4ade1c324bd799dc0f65766153d86ca" translate="yes" xml:space="preserve">
          <source>Normally, a test module (let's call it Test:MyStyle) calls Test::Builder-&amp;gt;new to get the Test::Builder object. Test::MyStyle calls methods on this object to record information about test results. When Test::Tester is loaded, it replaces Test::Builder's new() method with one which returns a Test::Tester::Delegate object. Most of the time this object behaves as the real Test::Builder object. Any methods that are called are delegated to the real Test::Builder object so everything works perfectly. However once we go into test mode, the method calls are no longer passed to the real Test::Builder object, instead they go to the Test::Tester::Capture object. This object seems exactly like the real Test::Builder object, except, instead of outputting test results and diagnostics, it just records all the information for later analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654422bdd7e927225f8155b32c99633ae1593b5f" translate="yes" xml:space="preserve">
          <source>Normally, accessing a hash key's value for a nonexistent key will</source>
          <target state="translated">通常情况下,访问一个不存在的键的哈希键的值将会</target>
        </trans-unit>
        <trans-unit id="8652ae91a77d4cb6b6ff7525f46e31e0b15fc723" translate="yes" xml:space="preserve">
          <source>Normally, array elements have the record separator removed, so that if the file contains the text</source>
          <target state="translated">通常情况下,数组元素都会去掉记录分隔符,因此,如果文件中包含文本</target>
        </trans-unit>
        <trans-unit id="534654aa79245de47a873277e56a6292c36afdc7" translate="yes" xml:space="preserve">
          <source>Normally, colored() just puts attribute codes at the beginning and end of the string, but if you set $Term::ANSIColor::EACHLINE to some string, that string will be considered the line delimiter and the attribute will be set at the beginning of each line of the passed string and reset at the end of each line. This is often desirable if the output contains newlines and you're using background colors, since a background color that persists across a newline is often interpreted by the terminal as providing the default background color for the next line. Programs like pagers can also be confused by attributes that span lines. Normally you'll want to set $Term::ANSIColor::EACHLINE to &lt;code&gt;&quot;\n&quot;&lt;/code&gt; to use this feature.</source>
          <target state="translated">通常，colored（）只会将属性代码放在字符串的开头和结尾，但是如果您将$ Term :: ANSIColor :: EACHLINE设置为某个字符串，则该字符串将被视为行定界符，并且属性将在传递的字符串的每一行的开头，并在每一行的末尾重置。如果输出包含换行符并且您使用的是背景色，通常这是理想的选择，因为在换行符上持续存在的背景色通常会被终端解释为为下一行提供默认的背景色。诸如寻呼机之类的程序也可能会被跨行的属性所混淆。通常，您需要将$ Term :: ANSIColor :: EACHLINE设置为 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 才能使用此功能。</target>
        </trans-unit>
        <trans-unit id="47497939420b5b367cb1b2b4d46709150e929869" translate="yes" xml:space="preserve">
          <source>Normally, it uses the &lt;code&gt;failure_output()&lt;/code&gt; handle, but if this is for a TODO test, the &lt;code&gt;todo_output()&lt;/code&gt; handle is used.</source>
          <target state="translated">通常，它使用 &lt;code&gt;failure_output()&lt;/code&gt; 句柄，但是如果这是用于TODO测试，则使用 &lt;code&gt;todo_output()&lt;/code&gt; 句柄。</target>
        </trans-unit>
        <trans-unit id="843f99e9f61b3167a92df62277ad684239edbee8" translate="yes" xml:space="preserve">
          <source>Normally, modifying a &lt;code&gt;Tie::File&lt;/code&gt; array writes to the underlying file immediately. Every assignment like &lt;code&gt;$a[3] = ...&lt;/code&gt; rewrites as much of the file as is necessary; typically, everything from line 3 through the end will need to be rewritten. This is the simplest and most transparent behavior. Performance even for large files is reasonably good.</source>
          <target state="translated">通常，修改 &lt;code&gt;Tie::File&lt;/code&gt; 数组会立即写入基础文件。 &lt;code&gt;$a[3] = ...&lt;/code&gt; 这样的每个赋值都会根据需要重写尽可能多的文件；通常，从第3行到最后的所有内容都需要重写。这是最简单，最透明的行为。即使大文件的性能也相当不错。</target>
        </trans-unit>
        <trans-unit id="2e86bc5c5468300153e887bb030f8c8fafa55a91" translate="yes" xml:space="preserve">
          <source>Normally, parsing an S&amp;lt;...&amp;gt; sequence produces this event structure, just as if it were a B/C/F/I code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd66bc88fd481df4ac201aa91bfec31499d4ed47" translate="yes" xml:space="preserve">
          <source>Normally, parsing an X&amp;lt;...&amp;gt; sequence produces this event structure, just as if it were a B/C/F/I code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf97b0167156ea895f7910e3f3f52f1229f7b5f7" translate="yes" xml:space="preserve">
          <source>Normally, regexps are a part of Perl expressions.</source>
          <target state="translated">通常,regexps是Perl表达式的一部分。</target>
        </trans-unit>
        <trans-unit id="808fe9fa0be0d04a656a7ac7cd5c2d9d3734bad0" translate="yes" xml:space="preserve">
          <source>Normally, sprintf() takes the next unused argument as the value to format for each format specification. If the format specification uses &lt;code&gt;*&lt;/code&gt; to require additional arguments, these are consumed from the argument list in the order they appear in the format specification</source>
          <target state="translated">通常，sprintf（）将下一个未使用的参数作为要格式化的值，以用于每个格式规范。如果格式规范使用 &lt;code&gt;*&lt;/code&gt; 来要求其他参数，则将从参数列表中按它们在格式规范中出现的顺序使用这些参数</target>
        </trans-unit>
        <trans-unit id="2826cc3c3bfda4c3b98bd6c44f0b50d829979efc" translate="yes" xml:space="preserve">
          <source>Normally, the following code will result in two calls to &lt;code&gt;complicated&lt;/code&gt; , even if &lt;code&gt;complicated&lt;/code&gt; is memoized:</source>
          <target state="translated">通常情况下，下面的代码将导致两次调用 &lt;code&gt;complicated&lt;/code&gt; ，即使 &lt;code&gt;complicated&lt;/code&gt; 的memoized：</target>
        </trans-unit>
        <trans-unit id="9a867eaf437cac7adb8353be42bd91789230ad0d" translate="yes" xml:space="preserve">
          <source>Normally, the following code will result in two calls to &lt;code&gt;complicated&lt;/code&gt;, even if &lt;code&gt;complicated&lt;/code&gt; is memoized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283cc850a65d4273ec3f9787a8b552a33654732" translate="yes" xml:space="preserve">
          <source>Normally, the parse-tree returned by &lt;b&gt;parse_text()&lt;/b&gt; will contain a text-string for each contiguous sequence of characters outside of an interior-sequence. Specifying &lt;b&gt;-expand_text&lt;/b&gt; tells &lt;b&gt;parse_text()&lt;/b&gt; to &quot;preprocess&quot; every such text-string it sees by invoking the referenced function (or named method of the parser object) and using the return value as the preprocessed (or &quot;expanded&quot;) result. [Note that if the result is an interior-sequence, then it will</source>
          <target state="translated">通常，由&lt;b&gt;parse_text（）&lt;/b&gt;返回的分析树将为内部序列之外的每个连续字符序列包含一个文本字符串。指定&lt;b&gt;-expand_text&lt;/b&gt;可以通过调用引用的函数（或解析器对象的命名方法）并将返回值用作预处理（或&amp;ldquo;扩展&amp;rdquo;）结果来告诉&lt;b&gt;parse_text（）&lt;/b&gt; &amp;ldquo;预处理&amp;rdquo;它看到的每个此类文本字符串。 [请注意，如果结果是内部序列，则它将</target>
        </trans-unit>
        <trans-unit id="4c74045d12862bbf5896977df13a2e8f10f61ef7" translate="yes" xml:space="preserve">
          <source>Normally, the parse-tree returned by &lt;b&gt;parse_text()&lt;/b&gt; will contain an unexpanded &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object for each interior-sequence encountered. Specifying &lt;b&gt;-expand_seq&lt;/b&gt; tells &lt;b&gt;parse_text()&lt;/b&gt; to &quot;expand&quot; every interior-sequence it sees by invoking the referenced function (or named method of the parser object) and using the return value as the expanded result.</source>
          <target state="translated">通常，对于遇到的每个内部序列，由&lt;b&gt;parse_text（）&lt;/b&gt;返回的分析树将包含一个未扩展的 &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; 对象。指定&lt;b&gt;-expand_seq可以&lt;/b&gt;告诉&lt;b&gt;parse_text（）&lt;/b&gt;通过调用引用的函数（或解析器对象的命名方法）并将返回值用作扩展结果来&amp;ldquo;扩展&amp;rdquo;它看到的每个内部序列。</target>
        </trans-unit>
        <trans-unit id="16267da81502b322cffa728aa842c57f0b24ab0c" translate="yes" xml:space="preserve">
          <source>Normally, the resulting message is returned in a new mortal SV. During global destruction a single SV may be shared between uses of this function.</source>
          <target state="translated">通常情况下,生成的信息会以新的凡人SV的形式返回。在全局销毁期间,本函数的使用可以共享一个SV。</target>
        </trans-unit>
        <trans-unit id="50ae485979ade17656e2e8127cce3420dca94e97" translate="yes" xml:space="preserve">
          <source>Normally, the resulting message is returned in a new mortal SV. During global destruction a single SV may be shared between uses of this function. If &lt;code&gt;consume&lt;/code&gt; is true, then the function is permitted (but not required) to modify and return &lt;code&gt;basemsg&lt;/code&gt; instead of allocating a new SV.</source>
          <target state="translated">通常，结果消息将以新的凡人SV返回。在全局销毁期间，可以在使用此功能之间共享单个SV。如果 &lt;code&gt;consume&lt;/code&gt; 是真实的，那么该功能允许（但不要求）修改并返回 &lt;code&gt;basemsg&lt;/code&gt; 分配一个新的SV代替。</target>
        </trans-unit>
        <trans-unit id="3699203fc3e3f9cdc9d573bca3286eccade605ca" translate="yes" xml:space="preserve">
          <source>Normally, the specified file will be opened for read and write access, and will be created if it does not exist. (That is, the flags &lt;code&gt;O_RDWR | O_CREAT&lt;/code&gt; are supplied in the &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; call.) If you want to change this, you may supply alternative flags in the &lt;code&gt;mode&lt;/code&gt; option. See &lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt; for a listing of available flags. For example:</source>
          <target state="translated">通常，将打开指定文件进行读写访问，如果不存在，则会创建该文件。（即， &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 调用中提供了标志 &lt;code&gt;O_RDWR | O_CREAT&lt;/code&gt; 。）如果要更改此设置，可以在 &lt;code&gt;mode&lt;/code&gt; 选项中提供替代标志。有关可用标志的列表，请参见&lt;a href=&quot;../fcntl&quot;&gt;Fcntl&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="5dfc63d426417838163eb863c3ff6f7e477ca3ff" translate="yes" xml:space="preserve">
          <source>Normally, the specified file will be opened for read and write access, and will be created if it does not exist. (That is, the flags &lt;code&gt;O_RDWR | O_CREAT&lt;/code&gt; are supplied in the &lt;code&gt;open&lt;/code&gt; call.) If you want to change this, you may supply alternative flags in the &lt;code&gt;mode&lt;/code&gt; option. See &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; for a listing of available flags. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f12084738c458e8b7000b7b9525558b4cfff47" translate="yes" xml:space="preserve">
          <source>Normally, writing out Unicode data</source>
          <target state="translated">通常情况下,写出Unicode数据</target>
        </trans-unit>
        <trans-unit id="247ce5d5d9158a1021672cfbc50ce69d843f7d14" translate="yes" xml:space="preserve">
          <source>North America</source>
          <target state="translated">北美洲</target>
        </trans-unit>
        <trans-unit id="8ddbb9fd49d254aced9f96e6d5b82c3634fdf5d4" translate="yes" xml:space="preserve">
          <source>North Carolina</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f11696f957b30cc16d9d6d3c2b53faa2bfa905a" translate="yes" xml:space="preserve">
          <source>Norton AntiVirus interferes with the build process, particularly if set to &quot;AutoProtect, All Files, when Opened&quot;. Unlike large applications the perl build process opens and modifies a lot of files. Having the AntiVirus scan each and every one slows build the process significantly. Worse, with PERLIO=stdio the build process fails with peculiar messages as the virus checker interacts badly with miniperl.exe writing configure files (it seems to either catch file part written and treat it as suspicious, or virus checker may have it &quot;locked&quot; in a way which inhibits miniperl updating it). The build does complete with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9226334f9ce44ad0f10ee80520f849c5fe4619" translate="yes" xml:space="preserve">
          <source>Norton AntiVirus interferes with the build process, particularly if set to &quot;AutoProtect, All Files, when Opened&quot;. Unlike large applications the perl build process opens and modifies a lot of files. Having the the AntiVirus scan each and every one slows build the process significantly. Worse, with PERLIO=stdio the build process fails with peculiar messages as the virus checker interacts badly with miniperl.exe writing configure files (it seems to either catch file part written and treat it as suspicious, or virus checker may have it &quot;locked&quot; in a way which inhibits miniperl updating it). The build does complete with</source>
          <target state="translated">诺顿反病毒会干扰构建过程,特别是当设置为 &quot;自动保护,所有文件,打开时 &quot;时。与大型应用程序不同的是,perl构建过程会打开和修改大量的文件。让AntiVirus扫描每一个文件,会大大减慢构建过程。更糟糕的是,在使用PERLIO=stdio时,由于病毒检查程序与miniperl.exe写入配置文件时的交互性很差,构建过程会以奇特的信息失败(它似乎要么捕捉到写入的文件部分并将其视为可疑文件,要么病毒检查程序可能以某种方式将其 &quot;锁定&quot;,从而抑制miniperl更新它)。构建过程中确实完成了</target>
        </trans-unit>
        <trans-unit id="a416dbee324bb6347c195257a3461c9b547b428f" translate="yes" xml:space="preserve">
          <source>Norton T. Allen (allen@huarp.harvard.edu)</source>
          <target state="translated">Norton T.Allen (allen@huarp.harvard.edu)</target>
        </trans-unit>
        <trans-unit id="988455e67df7cd81d090ea4bacdc05f39fb7caa5" translate="yes" xml:space="preserve">
          <source>Norway</source>
          <target state="translated">Norway</target>
        </trans-unit>
        <trans-unit id="370767717b5bd720890c41261b1cdb6e02957025" translate="yes" xml:space="preserve">
          <source>Not Using AutoLoader</source>
          <target state="translated">未使用自动加载器</target>
        </trans-unit>
        <trans-unit id="d37413af1038bf58c07742880e5a67dc70caa079" translate="yes" xml:space="preserve">
          <source>Not a CODE reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c01cc85dad0515e1920b0555382cfcb4e45014" translate="yes" xml:space="preserve">
          <source>Not a GLOB reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f3e6278403bcdf59b8152fac69e48864a5ba52" translate="yes" xml:space="preserve">
          <source>Not a HASH reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd98b3c6e90fca04f1dbcfd4de1cbca0a44a1f2" translate="yes" xml:space="preserve">
          <source>Not a SCALAR reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7c30886465e53cc15fb2f369c9a20de63a93cc" translate="yes" xml:space="preserve">
          <source>Not a number. The value Perl uses for certain invalid or inexpressible floating-point operations.</source>
          <target state="translated">不是一个数字。Perl在某些无效或不可表达的浮点运算中使用的值。</target>
        </trans-unit>
        <trans-unit id="9ce5f175f6ed52d752c1dc214624e2c550cee7d4" translate="yes" xml:space="preserve">
          <source>Not a stellar system with three stars, but an &lt;b&gt;operator&lt;/b&gt; taking three &lt;b&gt;operands&lt;/b&gt;. Sometimes pronounced &lt;b&gt;ternary&lt;/b&gt;.</source>
          <target state="translated">不是一个具有三颗星的恒星系统，而是一个具有三个&lt;b&gt;操作数&lt;/b&gt;的&lt;b&gt;算子&lt;/b&gt;。有时发音为&lt;b&gt;三元&lt;/b&gt;。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c1b90e8290c5116a077f903a7e7316582eca91d7" translate="yes" xml:space="preserve">
          <source>Not a subroutine reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e81509b0f5a61c879c22f1e777758722a08a1c" translate="yes" xml:space="preserve">
          <source>Not a subroutine reference in overload table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34a61da084e0aa67824715ad65e41d6be635c1c" translate="yes" xml:space="preserve">
          <source>Not a tag for normal use.</source>
          <target state="translated">不是正常使用的标签。</target>
        </trans-unit>
        <trans-unit id="6628bb792927eb17f7227a3d024523ff7f4ef26a" translate="yes" xml:space="preserve">
          <source>Not all &lt;code&gt;(key,value)&lt;/code&gt; s are allowed to be changed. See also &lt;code&gt;@Unicode::Collate::ChangeOK&lt;/code&gt; and &lt;code&gt;@Unicode::Collate::ChangeNG&lt;/code&gt; .</source>
          <target state="translated">并非所有 &lt;code&gt;(key,value)&lt;/code&gt; 都可以更改。另请参见 &lt;code&gt;@Unicode::Collate::ChangeOK&lt;/code&gt; 和 &lt;code&gt;@Unicode::Collate::ChangeNG&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3ee77316d6142101f56620aa64696168bd3ffab" translate="yes" xml:space="preserve">
          <source>Not all &lt;code&gt;(key,value)&lt;/code&gt;s are allowed to be changed. See also &lt;code&gt;@Unicode::Collate::ChangeOK&lt;/code&gt; and &lt;code&gt;@Unicode::Collate::ChangeNG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ec939fa988aaea06d8cccbd3dfe26e8b7deec4" translate="yes" xml:space="preserve">
          <source>Not all Perl data types can be cloned (e.g., globs, code refs). By default, &lt;code&gt;shared_clone&lt;/code&gt; will &lt;a href=&quot;../carp&quot;&gt;croak&lt;/a&gt; if it encounters such items. To change this behaviour to a warning, then set the following:</source>
          <target state="translated">并非所有Perl数据类型都可以克隆（例如，glob，代码引用）。默认情况下，如果 &lt;code&gt;shared_clone&lt;/code&gt; 遇到此类项目，它将&lt;a href=&quot;../carp&quot;&gt;发出&lt;/a&gt;嘶哑的声音。将此行为更改为警告，然后设置以下内容：</target>
        </trans-unit>
        <trans-unit id="8dd49b520d2e25593cfad44814bb285779b091f5" translate="yes" xml:space="preserve">
          <source>Not all Perl data types can be cloned (e.g., globs, code refs). By default, &lt;code&gt;shared_clone&lt;/code&gt; will &lt;a href=&quot;carp&quot;&gt;croak&lt;/a&gt; if it encounters such items. To change this behaviour to a warning, then set the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f9f350740611366ed4fac1a55e30540aa5d5ab" translate="yes" xml:space="preserve">
          <source>Not all Perl programs have to be portable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea270638e7bd76128d29c8152d0f28cca0f0cb30" translate="yes" xml:space="preserve">
          <source>Not all architectures (PA = PA-RISC, IPF = Itanium Processor Family) support all versions of HP-UX, here is a short list</source>
          <target state="translated">并非所有的架构(PA=PA-RISC,IPF=Itanium处理器系列)都支持所有版本的HP-UX,下面是一个简短的列表。</target>
        </trans-unit>
        <trans-unit id="55e93ff6af987fcc062dba40c7d5f407a9f168d2" translate="yes" xml:space="preserve">
          <source>Not all characters can be used 'as is' in a match. Some characters, called &lt;b&gt;metacharacters&lt;/b&gt;, are considered special, and reserved for use in regex notation. The metacharacters are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c8890c57c81094971e9efbe9c79a62c905fdfd" translate="yes" xml:space="preserve">
          <source>Not all characters can be used 'as is' in a match. Some characters, called &lt;b&gt;metacharacters&lt;/b&gt;, are reserved for use in regex notation. The metacharacters are</source>
          <target state="translated">并非所有字符都可以在比赛中按原样使用。有些字符（称为&lt;b&gt;元字符&lt;/b&gt;）保留用于正则表达式。元字符是</target>
        </trans-unit>
        <trans-unit id="3f2603de72efe0894bd7355a4fd5c7ad61e082bc" translate="yes" xml:space="preserve">
          <source>Not all errors are considered fatal, there is a &lt;code&gt;fail&lt;/code&gt; field that must be set for an error to cause the test to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2e7f1c3353c4588a12420d8ec357f219ec897c" translate="yes" xml:space="preserve">
          <source>Not all errors are fatal, some are displayed having already been handled. Set this to true if you want the error to cause the test to fail. Without this the error is simply a diagnostics message that has no effect on the overall pass/fail result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462cf763472459d9998ce2bfa0748c85a78850d0" translate="yes" xml:space="preserve">
          <source>Not all extensions available from CPAN may build or work properly in the Windows environment. See &lt;a href=&quot;#Building-Extensions&quot;&gt;&quot;Building Extensions&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c499fcc39ea462750d346f8328fb611fa8eafb9" translate="yes" xml:space="preserve">
          <source>Not all extensions available from CPAN may build or work properly in the Windows environment. See &lt;a href=&quot;#Building-Extensions&quot;&gt;Building Extensions&lt;/a&gt;.</source>
          <target state="translated">并非CPAN可用的所有扩展都可能在Windows环境中构建或正常工作。请参阅&lt;a href=&quot;#Building-Extensions&quot;&gt;建筑物扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e06068c24945da55baa1c3c0c5d1c56745baf201" translate="yes" xml:space="preserve">
          <source>Not all fields are supported on all filesystem types. Here are the meanings of the fields:</source>
          <target state="translated">并非所有的文件系统类型都支持所有的字段。以下是这些字段的含义。</target>
        </trans-unit>
        <trans-unit id="3d09a604d6ae3b0ff8d7d0a63321f6b716b05129" translate="yes" xml:space="preserve">
          <source>Not all methods indicated above need be implemented. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;../tie/hash&quot;&gt;Tie::Hash&lt;/a&gt;, &lt;a href=&quot;../tie/array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;../tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, and &lt;a href=&quot;../tie/handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="translated">并非所有上述方法都需要实施。参见&lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;，&lt;a href=&quot;../tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt;，&lt;a href=&quot;../tie/array&quot;&gt;Tie :: Array&lt;/a&gt;，&lt;a href=&quot;../tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt;和&lt;a href=&quot;../tie/handle&quot;&gt;Tie :: Handle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2fda0df4f36f3d624368039c7b50bfa7d47ccc5" translate="yes" xml:space="preserve">
          <source>Not all methods indicated above need be implemented. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;Tie::Hash&quot;&gt;Tie::Hash&lt;/a&gt;, &lt;a href=&quot;Tie::Array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;Tie::Scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, and &lt;a href=&quot;Tie::Handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f9e8c5a0eef6b261c9851c73bf90d947557e17" translate="yes" xml:space="preserve">
          <source>Not all methods indicated above need be implemented. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;, &lt;a href=&quot;tie/hash&quot;&gt;Tie::Hash&lt;/a&gt;, &lt;a href=&quot;tie/array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, and &lt;a href=&quot;tie/handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="translated">并非所有上述方法都需要实施。参见&lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;，&lt;a href=&quot;tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt;，&lt;a href=&quot;tie/array&quot;&gt;Tie :: Array&lt;/a&gt;，&lt;a href=&quot;tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt;和&lt;a href=&quot;tie/handle&quot;&gt;Tie :: Handle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2a6c0e385364fab2b337951897446173ad031c2" translate="yes" xml:space="preserve">
          <source>Not all modules that you might use are thread-safe, and you should always assume a module is unsafe unless the documentation says otherwise. This includes modules that are distributed as part of the core. Threads are a relatively new feature, and even some of the standard modules aren't thread-safe.</source>
          <target state="translated">并非所有你可能使用的模块都是线程安全的,你应该总是假设一个模块是不安全的,除非文档中另有说明。这包括作为核心的一部分分发的模块。线程是一个相对较新的功能,甚至一些标准模块也不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="dc116f0ff5686f14831a54addc98cc9a05b72b09" translate="yes" xml:space="preserve">
          <source>Not all of the methods below are overridable in a Makefile.PL. Overridable methods are marked as (o). All methods are overridable by a platform specific MM_*.pm file.</source>
          <target state="translated">在Makefile.PL中,并不是所有的方法都可以被覆盖。可覆盖的方法被标记为(o)。所有的方法都可以通过一个特定平台的MM_*.pm文件来覆盖。</target>
        </trans-unit>
        <trans-unit id="54d9265d57d6ec36dc8e3a9bed39f04863ac691e" translate="yes" xml:space="preserve">
          <source>Not all of the options currently have any useful effect. See &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf47163ed1a6a398998e1921423263683e08485" translate="yes" xml:space="preserve">
          <source>Not all of the options currently have any useful effect. See &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; for more details.</source>
          <target state="translated">当前，并非所有选项都具有任何有用的作用。见&lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;了解更多详情。</target>
        </trans-unit>
        <trans-unit id="b1a2bb2e7a36d3508362112d31fd091b4c7b1d74" translate="yes" xml:space="preserve">
          <source>Not all platforms provide a command line. These are usually platforms that rely primarily on a Graphical User Interface (GUI) for user interaction. A program requiring a command line interface might not work everywhere. This is probably for the user of the program to deal with, so don't stay up late worrying about it.</source>
          <target state="translated">并非所有平台都提供命令行。这些平台通常主要依靠图形用户界面(GUI)进行用户交互。一个需要命令行界面的程序可能并不是在所有地方都能使用。这可能是程序的用户要处理的问题,所以不要熬夜担心这个问题。</target>
        </trans-unit>
        <trans-unit id="0377a3bed66f53a36c6cc0f471dce14458aee134" translate="yes" xml:space="preserve">
          <source>Not all platforms support passing va_list to further varargs (stdarg) functions. The right thing to do is to copy the va_list using the Perl_va_copy() if the NEED_VA_COPY is defined.</source>
          <target state="translated">并非所有的平台都支持将va_list传递给进一步的varargs(stdarg)函数。正确的做法是,如果定义了NEED_VA,则使用Perl_va_copy()复制va_list。</target>
        </trans-unit>
        <trans-unit id="d7d5819e6b8154b84cfd521568df2f44e1277562" translate="yes" xml:space="preserve">
          <source>Not all scalar types are printable. Simple values certainly are: one of IV, UV, NV, or PV. Also, if the SV is a reference to some value, either it will be dereferenced and the value printed, or information about the type of that value and its address are displayed. The results of printing any other type of SV are undefined and likely to lead to an interpreter crash. NVs are printed using a &lt;code&gt;%g&lt;/code&gt;-ish format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3114af1185f39ddb11892070ce221fe5a6a78ef2" translate="yes" xml:space="preserve">
          <source>Not all shells will allow multiple &lt;code&gt;-e&lt;/code&gt; string arguments to perl to be concatenated together properly as recipes in this document 0, 2, 4, 5, and 6 might seem to imply.</source>
          <target state="translated">并非所有的shell都允许将 &lt;code&gt;-e&lt;/code&gt; 字符串参数与perl正确连接在一起，因为本文档中的配方似乎暗示着0、2、4、5和6。</target>
        </trans-unit>
        <trans-unit id="4304b60dda11c4080ba0d7af04669e7d3681ebb5" translate="yes" xml:space="preserve">
          <source>Not all these variables are necessarily considered &quot;public&quot; wrt. use in typemaps, so beware. Variables set up from the ExtUtils::ParseXS object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390f0fc324c35c457b6797e31cfc3992a7cb393c" translate="yes" xml:space="preserve">
          <source>Not an ARRAY reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2037b538368e39fec0d7f178aa255c4c901e6b71" translate="yes" xml:space="preserve">
          <source>Not being able to say &quot;no diagnostics&quot; is annoying, but may not be insurmountable.</source>
          <target state="translated">不能说 &quot;没有诊断 &quot;是很烦人的,但未必不能克服。</target>
        </trans-unit>
        <trans-unit id="0995003c36ab734a65b058b853402db6930f592e" translate="yes" xml:space="preserve">
          <source>Not compiling with -DDEBUGGING</source>
          <target state="translated">不使用-DDEBUGGING编译。</target>
        </trans-unit>
        <trans-unit id="ca400cb81537a6d172c2a30c8bb57fcb36d92286" translate="yes" xml:space="preserve">
          <source>Not compiling with threading</source>
          <target state="translated">不能用线程编译</target>
        </trans-unit>
        <trans-unit id="350370904b27cc0af7789a292a507adc1a7bdacd" translate="yes" xml:space="preserve">
          <source>Not doing so may lead to surprises:</source>
          <target state="translated">不这样做可能会导致意外。</target>
        </trans-unit>
        <trans-unit id="e70f97f83bebe0f2e20286e534122be1e62b93c9" translate="yes" xml:space="preserve">
          <source>Not end-of-file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f205c9fa4291a1adffc39f09e800a7bf1400fb" translate="yes" xml:space="preserve">
          <source>Not enough arguments for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4960796cc14c02f19a88f95a3afd62e329c17f" translate="yes" xml:space="preserve">
          <source>Not enough format arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba394cd9d79ffbbc16d2bd64cd6fb94c4285df0" translate="yes" xml:space="preserve">
          <source>Not every event or Perl Mongers group is on that calendar, so don't lose heart if you don't see yours posted. To have your event or group listed, contact brian d foy (brian@theperlreview.com).</source>
          <target state="translated">并不是每个活动或 Perl Mongers 小组都在日历上,所以如果你没有看到你的活动或小组,也不要灰心。要想把你的活动或小组列在日历上,请联系 brian d foy (brian@theperlreview.com)。</target>
        </trans-unit>
        <trans-unit id="0a7f13c13fb3f26bce123ed94d7ecfbbffb8eb0c" translate="yes" xml:space="preserve">
          <source>Not every language tag really refers to a single language. Some language tags refer to conditions: i-default (system-message text in English plus maybe other languages), und (undetermined language). Others (notably lots of the three-letter codes) are bibliographic tags that classify whole groups of languages, as with cus &quot;Cushitic (Other)&quot; (i.e., a language that has been classed as Cushtic, but which has no more specific code) or the even less linguistically coherent sai for &quot;South American Indian (Other)&quot;. Though useful in bibliography, &lt;b&gt;SUCH TAGS ARE NOT FOR GENERAL USE&lt;/b&gt;. For further guidance, email me.</source>
          <target state="translated">并非每个语言标签都真正指一种语言。一些语言标签涉及条件：i-default（英语的系统消息文本，也许还有其他语言），und（不确定的语言）。其他（尤其是三个字母的代码中的很多）是书目标签，用于对整个语言组进行分类，例如&amp;ldquo; Cushitic（Other）&amp;rdquo;（即已被分类为Cushtic，但没有更多具体代码的语言）或者说&amp;ldquo;南美印第安人（其他）&amp;rdquo;在语言上连贯的说法。尽管这些&lt;b&gt;标签&lt;/b&gt;在参考书目中很有用，但&lt;b&gt;并非用于一般用途&lt;/b&gt;。有关更多指导，请给我发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="3ea748e41042fae4b5e481a0f49f8953b1ba289f" translate="yes" xml:space="preserve">
          <source>Not every program has to go through each of the possible phases, but transition from one phase to another can only happen in the order described in the above list.</source>
          <target state="translated">并非每个程序都要经历每一个可能的阶段,但从一个阶段过渡到另一个阶段只能按照上述列表中描述的顺序进行。</target>
        </trans-unit>
        <trans-unit id="5c816e7c42988c3d11d87bf96a910ccb79c57f32" translate="yes" xml:space="preserve">
          <source>Not everything is a simple eq check or regex. There are times you need to see if two data structures are equivalent. For these instances Test::More provides a handful of useful functions.</source>
          <target state="translated">并非所有的事情都是简单的eq检查或regex。有些时候你需要查看两个数据结构是否等价。对于这些情况,Test::More 提供了一些有用的函数。</target>
        </trans-unit>
        <trans-unit id="b40e711f20f038555af473ee4ac108274fa7f9c8" translate="yes" xml:space="preserve">
          <source>Not everything is documented yet.</source>
          <target state="translated">还不是所有的东西都有记录。</target>
        </trans-unit>
        <trans-unit id="09e28ddb404a0041a3b2d909163038f64bb4a64a" translate="yes" xml:space="preserve">
          <source>Not exported by default.</source>
          <target state="translated">默认情况下不导出。</target>
        </trans-unit>
        <trans-unit id="3d70d5556752165324a9545f2bca3001c5928ecb" translate="yes" xml:space="preserve">
          <source>Not exporting your new function</source>
          <target state="translated">没有导出您的新功能</target>
        </trans-unit>
        <trans-unit id="3de6216a588bc2f1646686041b64658486a740c8" translate="yes" xml:space="preserve">
          <source>Not for normal use.</source>
          <target state="translated">不能正常使用。</target>
        </trans-unit>
        <trans-unit id="8cb64bcbbd5a35d8290b9d42e26918a747698537" translate="yes" xml:space="preserve">
          <source>Not implemented (VMS, RISC OS, VOS).</source>
          <target state="translated">未执行(VMS、RISC OS、VOS)。</target>
        </trans-unit>
        <trans-unit id="0d0f974626edbcbc3442249b1c5bedf691856c93" translate="yes" xml:space="preserve">
          <source>Not implemented yet, will fix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3254417362748be2bc014d24fafb5e5786cfb8" translate="yes" xml:space="preserve">
          <source>Not implemented, hence not useful for taint checking. (RISC OS)</source>
          <target state="translated">没有实现,因此对污点检查没有用。(RISC OS)</target>
        </trans-unit>
        <trans-unit id="3f95882d534087a6046525a2df4e776680013e1a" translate="yes" xml:space="preserve">
          <source>Not implemented. (AmigaOS, RISC OS, VMS)</source>
          <target state="translated">未实施。(AmigaOS、RISC OS、VMS)</target>
        </trans-unit>
        <trans-unit id="9be2651d8f1db0033658f4a09b41f2967b03b1a2" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android)</source>
          <target state="translated">未实施。(Android)</target>
        </trans-unit>
        <trans-unit id="8764e205d719987502ecc5a1d14954350c06e36a" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, RISC OS, VMS, Win32)</source>
          <target state="translated">未实施。(Android、RISC OS、VMS、Win32)</target>
        </trans-unit>
        <trans-unit id="9b09c5fded531e5c65a40df94ba58b539af31cb9" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, VMS, Win32, RISC OS)</source>
          <target state="translated">未实施。(Android、VMS、Win32、RISC OS)</target>
        </trans-unit>
        <trans-unit id="db2cbf01d3edd364260719b49f0552da06074b32" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32)</source>
          <target state="translated">未实施。(Android,Win32)</target>
        </trans-unit>
        <trans-unit id="cfd9c1a9a91b792892f2a5fea52723a1f2e69940" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, Plan 9)</source>
          <target state="translated">未实施。(Android、Win32、计划9)</target>
        </trans-unit>
        <trans-unit id="b43f99dedb804d88539fc88ab6db0d0787e31419" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, Plan 9, RISC OS)</source>
          <target state="translated">未实施。(Android、Win32、Plan 9、RISC OS)</target>
        </trans-unit>
        <trans-unit id="0be4e159794a607b410794f39b0e3b8aaf22c83b" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, RISC OS)</source>
          <target state="translated">未实施。(Android、Win32、RISC OS)</target>
        </trans-unit>
        <trans-unit id="0d98f25d5507c35e363bc1c7b15a438bc954c58f" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, VMS)</source>
          <target state="translated">未实施。(Android、Win32、VMS)</target>
        </trans-unit>
        <trans-unit id="7bc41074b764485b1508c998d3f3f1b06873a949" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, VMS, Plan 9, RISC OS, VOS)</source>
          <target state="translated">未实施。(Android、Win32、VMS、Plan 9、RISC OS、VOS)</target>
        </trans-unit>
        <trans-unit id="dd10c5ee6bfcd93657131a710727b05972d81d34" translate="yes" xml:space="preserve">
          <source>Not implemented. (Android, Win32, VMS, RISC OS)</source>
          <target state="translated">未实施。(Android、Win32、VMS、RISC OS)</target>
        </trans-unit>
        <trans-unit id="27455a44f0877f0471812763650eca083a756dc3" translate="yes" xml:space="preserve">
          <source>Not implemented. (For computing dividends of long integers.) &lt;code&gt;ldiv()&lt;/code&gt; is C-specific, use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">未实现。（用于计算长整数的除数。） &lt;code&gt;ldiv()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;/&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32a90981ba3510445dbe102e793b68e3aa230e62" translate="yes" xml:space="preserve">
          <source>Not implemented. (For computing dividends of long integers.) &lt;code&gt;ldiv()&lt;/code&gt; is C-specific, use &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;int()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35c350e45ece5778366ababe31d410a0f9c7643" translate="yes" xml:space="preserve">
          <source>Not implemented. (For returning absolute values of long integers.) &lt;code&gt;labs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt; instead.</source>
          <target state="translated">未实现。（有关返回长整数的绝对值的信息。） &lt;code&gt;labs()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/abs&quot;&gt;Abs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e37bef308ba3bb37063dbfda0ed4d42102958b1" translate="yes" xml:space="preserve">
          <source>Not implemented. (For returning absolute values of long integers.) &lt;code&gt;labs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#abs&quot;&gt;&quot;abs&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0defed26024da4d1fed917bb2bf5601feb0b111c" translate="yes" xml:space="preserve">
          <source>Not implemented. (Older versions of VMS)</source>
          <target state="translated">未执行。(较旧版本的VMS)</target>
        </trans-unit>
        <trans-unit id="44ca2b069b718c2e4157a5f59d1c825f895901fe" translate="yes" xml:space="preserve">
          <source>Not implemented. (Plan 9)</source>
          <target state="translated">未执行。(计划9)</target>
        </trans-unit>
        <trans-unit id="1687754bd82bb4141221093b9e0016e67a352bef" translate="yes" xml:space="preserve">
          <source>Not implemented. (Plan 9, Win32)</source>
          <target state="translated">未执行。(计划9,Win32)</target>
        </trans-unit>
        <trans-unit id="a0c06eb1c0ea0d5c9ba352666d371d2a0ee60d0c" translate="yes" xml:space="preserve">
          <source>Not implemented. (Plan 9, Win32, RISC OS)</source>
          <target state="translated">未执行。(计划9,Win32,RISC操作系统)</target>
        </trans-unit>
        <trans-unit id="ccbe418811577573c94ecd1f3f6fa886c5efa0c1" translate="yes" xml:space="preserve">
          <source>Not implemented. (RISC OS)</source>
          <target state="translated">未执行。(RISC OS)</target>
        </trans-unit>
        <trans-unit id="913cb5f5472a95b0b4bb5b0094468f9bd4a064d5" translate="yes" xml:space="preserve">
          <source>Not implemented. (RISC OS, VOS)</source>
          <target state="translated">未执行。(RISC操作系统、VOS)</target>
        </trans-unit>
        <trans-unit id="c7eb7af11eb0f7e9fd28bfd3a491ea52eea2602b" translate="yes" xml:space="preserve">
          <source>Not implemented. (VMS)</source>
          <target state="translated">未执行。(VMS)</target>
        </trans-unit>
        <trans-unit id="8b09ce4b149875b133df47459bb650cb679175f6" translate="yes" xml:space="preserve">
          <source>Not implemented. (VMS, Plan 9, VOS)</source>
          <target state="translated">未执行。(监查处、计划9、监督处)</target>
        </trans-unit>
        <trans-unit id="0e4b18141256d3047c7405c5aca0f45f42b63f27" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32)</source>
          <target state="translated">未执行。(Win32)</target>
        </trans-unit>
        <trans-unit id="1e142d21e64d53e23fa456f8c1dabbf0855e18ca" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, Plan 9)</source>
          <target state="translated">未执行。(Win32,计划9)</target>
        </trans-unit>
        <trans-unit id="4df1791d2450fc70228c9ee024b8242b13ea6b2f" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, Plan 9, RISC OS)</source>
          <target state="translated">未执行。(Win32,Plan 9,RISC OS)</target>
        </trans-unit>
        <trans-unit id="5e4a1a38936d3686e162500ce6f897394cef05d7" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, RISC OS)</source>
          <target state="translated">未执行。(Win32、RISC操作系统)</target>
        </trans-unit>
        <trans-unit id="3be05ea3d75bc165c7f982935b70e66d5a771e41" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, VMS, Plan 9, RISC OS, VOS)</source>
          <target state="translated">未执行。(Win32、VMS、Plan 9、RISC OS、VOS)</target>
        </trans-unit>
        <trans-unit id="a54f984df38f433357bf0966c3cbdd1b95a80f1c" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, VMS, RISC OS)</source>
          <target state="translated">未执行。(Win32、VMS、RISC OS)</target>
        </trans-unit>
        <trans-unit id="22e05018b6fdced9bdff0b7d0cfb5c24bf0dbae4" translate="yes" xml:space="preserve">
          <source>Not implemented. (Win32, VMS, RISC OS, VOS)</source>
          <target state="translated">未执行。(Win32、VMS、RISC OS、VOS)</target>
        </trans-unit>
        <trans-unit id="df3ebac574a0d503f84cea64df9995482f545b78" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; is non-portable, see &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; 是不可移植的，请参阅&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d13a3e012a93a772c4609ee06162adf5d3f5482" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atexit()&lt;/code&gt; is C-specific: use &lt;code&gt;END {}&lt;/code&gt; instead, see &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;atexit()&lt;/code&gt; 是C特定的：改为使用 &lt;code&gt;END {}&lt;/code&gt; ，请参阅&lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09f4af676353b27d015a55030f640e13fe428c8a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atof()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it.</source>
          <target state="translated">未实现。 &lt;code&gt;atof()&lt;/code&gt; 是C特定的。Perl透明地将字符串转换为数字。如果需要将标量强制为数字，请在其上添加零。</target>
        </trans-unit>
        <trans-unit id="78bd80efc5684aaa0a6d2c976cfd9415957a93a7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atoi()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;atoi()&lt;/code&gt; 是C特定的。Perl透明地将字符串转换为数字。如果需要将标量强制为数字，请在其上添加零。如果只需要整数部分，请参见&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f00dfe9cb689976b534854484eee8f7dbf6f4bf" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atoi()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c185269174fefc8864fa2f033cc63f05493972d" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atol()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;atol()&lt;/code&gt; 是C特定的。Perl透明地将字符串转换为数字。如果需要将标量强制为数字，请在其上添加零。如果只需要整数部分，请参见&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31277df803c7213e94495dddc89b89837974e70b" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;atol()&lt;/code&gt; is C-specific. Perl converts strings to numbers transparently. If you need to force a scalar to a number, add a zero to it. If you need to have just the integer part, see &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f186e9062bbcbeafdbb5188df478220b8fd34d" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;calloc()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">未实现。 &lt;code&gt;calloc()&lt;/code&gt; 是C特定的。Perl透明地进行内存管理。</target>
        </trans-unit>
        <trans-unit id="ff7eec59e29a378eef5b91c7e47dc4704c6ae3ed" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;div()&lt;/code&gt; is C-specific, use &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; on the usual &lt;code&gt;/&lt;/code&gt; division and the modulus &lt;code&gt;%&lt;/code&gt; .</source>
          <target state="translated">未实现。 &lt;code&gt;div()&lt;/code&gt; 是C-特异性的，使用&lt;a href=&quot;functions/int&quot;&gt;INT&lt;/a&gt;上的通常 &lt;code&gt;/&lt;/code&gt; 除法和模量 &lt;code&gt;%&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9668934ab7ee888fcba5d1018df608d998bdfde" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;div()&lt;/code&gt; is C-specific, use &lt;a href=&quot;perlfunc#int&quot;&gt;&quot;int&quot; in perlfunc&lt;/a&gt; on the usual &lt;code&gt;/&lt;/code&gt; division and the modulus &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1feba813e22b3e1ba2371da2a841ea2764df6b0c" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execl()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;execl()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8cdcc2bc95ce16a401976480e4c0dd5d26d1551" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execl()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff7e7175b118c1234a7bdfd30d4510edaf63eb8" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execle()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;execle()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4e612f96906af3d61e47a98a3b96ec9267a8ba5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execle()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55ec83b5578209872a8b8cd8fcb058c67f6c46a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execlp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;execlp()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="714c6cc385b3d787feb8a075a8914079e9a683f0" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execlp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28abb99b1ca88a6e43303b5eacb4722165a49a2" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execv()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;execv()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b67d5ef7bbf6b11e4c8131d65fd0b0d50cea3fa4" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execv()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5186c9f0054529cba073f427607f1822da899bdc" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execve()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;execve()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06bfc60d8dbd39342a046bab49edf5ee16062e08" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execve()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a36265f790509d75a62c2c319a843a4a40d7fd1" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execvp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;execvp()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c41eeeac0050cd6ab2ec752535867c4b331c9b3" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;execvp()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d29c901ed53c6f9353f56b5387ce804863d40b2" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;fprintf()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02d74c5e78190921a07cba3e67691de9327d44e6" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#printf&quot;&gt;&quot;printf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050fa3a8f5bd9b39de78e5fc9715f0e8bc48d1f5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;fputc()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27f3f1356e0f2d2e897cadf71cc702ec5cf6b651" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6604c90e368654e682d80594f438dfbd8e6b3c87" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;fputs()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b942ddfbeebd05264b5a1304515e8d5b6c258fd" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fputs()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe419a5536eab5825dd89321d048538aa71f3581" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fread()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;fread()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb80e5d4e9f3e34554f9ec2247d5f30b5e39ecb0" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fread()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#read&quot;&gt;&quot;read&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc646b919b78b9528c2ca2fc3f6d528b7f17e528" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;free()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">未实现。 &lt;code&gt;free()&lt;/code&gt; 是C特定的。Perl透明地进行内存管理。</target>
        </trans-unit>
        <trans-unit id="f31c768b4ce793b6920a2fbc67aa875a3bad3ce7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;freopen()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;freopen()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ff06451b9d8800308bf4d85c0d2cb81711b1af7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;freopen()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6dd63a418b84ae3412075ba1a715748c59e650" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fscanf()&lt;/code&gt; is C-specific, use &amp;lt;&amp;gt; and regular expressions instead.</source>
          <target state="translated">未实现。 &lt;code&gt;fscanf()&lt;/code&gt; 是C特定的，请使用&amp;lt;&amp;gt;和正则表达式。</target>
        </trans-unit>
        <trans-unit id="803e59e7256268e04789245ab7cdd5f3b1b8ccea" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fwrite()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;fwrite()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2eb7a59ef7308efd57baee975752c73e9e09e718" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;fwrite()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009be5a018756df717aa5d027ee88dc34faf4f1e" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;longjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;longjmp()&lt;/code&gt; 是C特定的：请改为使用&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20a0777e409be90d3636e1854e98df3c8eb744c9" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;longjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;perlfunc#die&quot;&gt;&quot;die&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef9c813c13bfbed594dcbc5cb78558fb58b324e" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;malloc()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">未实现。 &lt;code&gt;malloc()&lt;/code&gt; 是C特定的。Perl透明地进行内存管理。</target>
        </trans-unit>
        <trans-unit id="05a9fcc8dff8c195fa86d7e73fdbb1a70a26f9f6" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;memchr()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8b03690afc4782abe2d4eb7aa9e8fb3d6ca560f" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#index&quot;&gt;&quot;index&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77441742665123afa83b78530ce3a0ab326aeb65" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memcmp()&lt;/code&gt; is C-specific, use &lt;code&gt;eq&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;memcmp()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;eq&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef2d9a9129c1e4edee370c88c30737709c4b4ca5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memcpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; , see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;memcpy()&lt;/code&gt; 是C特定的，请使用 &lt;code&gt;=&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;或请参见&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b28c8c3a19a27c6c25a1bd369ca8b66138675bd" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memcpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt;, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df825da230687d219686874fba9a3cde9128b6b2" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memmove()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; , see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;memmove()&lt;/code&gt; 是C特定的，请使用 &lt;code&gt;=&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;或请参见&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a1b0d19a886f2b51bef3354c44ddb3c2fdfc4ac" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memmove()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt;, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, or see &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f209e2a77b56cbe0e8dab09f4f69003460ef5165" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;memset()&lt;/code&gt; is C-specific, use &lt;code&gt;x&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;memset()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;x&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb4ed6eef37f29c3a5ed63baa8372d65c75a7bd4" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;offsetof()&lt;/code&gt; is C-specific, you probably want to see &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;offsetof()&lt;/code&gt; 是C特定的，您可能想查看&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2678c36a3e7afb74108d32fad6b536b2c312fb34" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;offsetof()&lt;/code&gt; is C-specific, you probably want to see &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a56537761ef29ac46b64e624815032acfe09d5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;putc()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a837aa4d6a9085f7e08d3d9d5bed920b5d904982" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putc()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f78712fd0d6ef941365735d2d77cc01cb91842" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putchar()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;putchar()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a462bc7da9d7de2e2210ee6d9180556440425552" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;putchar()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4f9ab6e5a505c059b02d4f1e39653281c84079" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;puts()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;puts()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="486a94a26ebd7d06cab9d63aafb041166ffd8558" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;puts()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#print&quot;&gt;&quot;print&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f67ad74b3ec17c9d41e3b1afab51f5f541355a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;qsort()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;qsort()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58970081657eba957570efcb0024c21310623ca4" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;qsort()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#sort&quot;&gt;&quot;sort&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5737e86392842d14972e36d022289166fd1215" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;rand()&lt;/code&gt; is non-portable, see &lt;a href=&quot;perlfunc#rand&quot;&gt;&quot;rand&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80417a7f52d6bce06bdc09d12e04679309282530" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;realloc()&lt;/code&gt; is C-specific. Perl does memory management transparently.</source>
          <target state="translated">未实现。 &lt;code&gt;realloc()&lt;/code&gt; 是C特定的。Perl透明地进行内存管理。</target>
        </trans-unit>
        <trans-unit id="b854623b0099f120c1f261738fcfb3b0e3dc6c43" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;scanf()&lt;/code&gt; is C-specific, use &amp;lt;&amp;gt; and regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;scanf()&lt;/code&gt; 是C特定的，请改用&amp;lt;&amp;gt;和正则表达式，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86b82e3463dd9eb13ab0f20876acdf2afce2a004" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;setjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; instead, see &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;setjmp()&lt;/code&gt; 是C特定的：改为使用 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ，请参阅&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50f8aef85879178dec102b3280e027faa31a0fbc" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;setjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;eval {}&lt;/code&gt; instead, see &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa206dd3a3d7cd667dd32f0c3afaf7a818af84a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;siglongjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;siglongjmp()&lt;/code&gt; 是C特定的：使用&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="e5ed221632f47a2af0000aec5b773670dcdd589c" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;siglongjmp()&lt;/code&gt; is C-specific: use &lt;a href=&quot;perlfunc#die&quot;&gt;&quot;die&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdcc330b8531baca8e2545556f293d068fb1ea6" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;sigsetjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; instead, see &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;sigsetjmp()&lt;/code&gt; 是C特定的：改为使用 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; ，请参阅&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37fd5b8db291420c97561c7d4f53a7442c39460a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;sigsetjmp()&lt;/code&gt; is C-specific: use &lt;code&gt;eval {}&lt;/code&gt; instead, see &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c268319591fc9206f5120b56c9b7a829b89f16" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;sscanf()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;sscanf()&lt;/code&gt; 是C特定的，请改用正则表达式，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15a4e6249a6616df5c7fdb6def3ca7df12c8a726" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcat()&lt;/code&gt; is C-specific, use &lt;code&gt;.=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strcat()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;.=&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4812ccf99744fab9351e2abe32d45f098e817477" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;strchr()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2377c1e46d6925e7717ebcfb500224bd7e8fa3a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#index&quot;&gt;&quot;index&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97d0b60e52aa06d90e7b2e823428ad7860f8e8a" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcmp()&lt;/code&gt; is C-specific, use &lt;code&gt;eq&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strcmp()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;eq&lt;/code&gt; 或 &lt;code&gt;cmp&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e88b009350740b83bff03725c96d491249d6cc12" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strcpy()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;=&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a946232e34c698b1c18404aaa65fdcbbc90586e" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strcspn()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strcspn()&lt;/code&gt; 是C特定的，请改用正则表达式，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac1ea236189e44b7d18fc790ee5b8256e3811b01" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strlen()&lt;/code&gt; is C-specific, use &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; instead, see &lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strlen()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; ，请参见&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7243ed7908af6a010c57b54ba9ffdf8010dfa6eb" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strlen()&lt;/code&gt; is C-specific, use &lt;code&gt;length()&lt;/code&gt; instead, see &lt;a href=&quot;perlfunc#length&quot;&gt;&quot;length&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec098c49b2779aed7a7218ddc97a53cf81b8121" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strncat()&lt;/code&gt; is C-specific, use &lt;code&gt;.=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strncat()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;.=&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4679b5013101131fbb1f77170dbb3261921e3ac9" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strncmp()&lt;/code&gt; is C-specific, use &lt;code&gt;eq&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strncmp()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;eq&lt;/code&gt; ，请参见&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68b43540c2aaa3f23562e63d21cbb3d1f37d032d" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strncpy()&lt;/code&gt; is C-specific, use &lt;code&gt;=&lt;/code&gt; instead, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strncpy()&lt;/code&gt; 是C特定的，请改用 &lt;code&gt;=&lt;/code&gt; ，请参阅&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e613eff42bbb352539ebe134a02f9df651ee1788" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strpbrk()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strpbrk()&lt;/code&gt; 是C特定的，请改用正则表达式，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ec8b4e827e4723ad758e333ead45fa4a152ab56" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strrchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;strrchr()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/rindex&quot;&gt;rindex&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d989a1989e58e594834a2c2dc1076104bdb3de8" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strrchr()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#rindex&quot;&gt;&quot;rindex&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc182b6d01cd132d49498bf46d317d05a13d5d37" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strspn()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strspn()&lt;/code&gt; 是C特定的，请改用正则表达式，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5614594f22eb6178c164a089713817c648981e5" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strtok()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, or &lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;.</source>
          <target state="translated">未实现。 &lt;code&gt;strtok()&lt;/code&gt; 是C特定的，请改用正则表达式，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;或&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3b97f646be52a7c0b85640187f4568a1fa8af6c" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;strtok()&lt;/code&gt; is C-specific, use regular expressions instead, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, or &lt;a href=&quot;perlfunc#split&quot;&gt;&quot;split&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fdcacb3f3247028947287ced6c21eda7e4321b" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vfprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;vfprintf()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9215122814b90ecb3e477d3c15f5429bcad42bd7" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vfprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#printf&quot;&gt;&quot;printf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90b40527e74f3653d4dd6b14250c134ce59f330" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;vprintf()&lt;/code&gt; 是C特定的，请参阅&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5bd973fd3341a07f7cd818193d4686826a45e553" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#printf&quot;&gt;&quot;printf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08604cd1d6dad28e54ed2c86d8e61348b23d108b" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vsprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt; instead.</source>
          <target state="translated">未实现。 &lt;code&gt;vsprintf()&lt;/code&gt; 是C特定的，请参见&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc3d56b756e7df13ee494ac890642837179ebc81" translate="yes" xml:space="preserve">
          <source>Not implemented. &lt;code&gt;vsprintf()&lt;/code&gt; is C-specific, see &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d102bc3eb40c72725daf568afa3e2114850dcc" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::new_tmpfile()&lt;/code&gt; instead, or see &lt;a href=&quot;File::Temp&quot;&gt;File::Temp&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c9bc78a8aeb50498c091744a0a072e8663077c" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::new_tmpfile()&lt;/code&gt; instead, or see &lt;a href=&quot;file/temp&quot;&gt;File::Temp&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::File::new_tmpfile()&lt;/code&gt; ，或参阅&lt;a href=&quot;file/temp&quot;&gt;File :: Temp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb9ea04652178e89f71d95b0e26c4da58a6e3d57" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::open()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::File::open()&lt;/code&gt; ，或查看&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f6a6e959d35888331459ed390bce3c8516ae526" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::File::open()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133851d7093855036c645528e4109a7be1a3e820" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::close()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Handle::close()&lt;/code&gt; ，或查看&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6c5b2cfc5eec40176e9a2daefbd3f1ebc5a9775" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::close()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#close&quot;&gt;&quot;close&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ba46f1c447a0143660b5cddf9fb1d25553fffb" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::eof()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Handle::eof()&lt;/code&gt; ，或参阅&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b85b74139f7dd0ea579a4dad9aa4bdb958e7b2b" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::eof()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#eof&quot;&gt;&quot;eof&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8adccccd63977fb3c0fcacade58414e48926172" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::error()&lt;/code&gt; instead.</source>
          <target state="translated">未实现。请使用方法 &lt;code&gt;IO::Handle::error()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1cf1a56225275921aede7048ae283bdae3ce190" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::fileno()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Handle::fileno()&lt;/code&gt; ，或参阅&lt;a href=&quot;functions/fileno&quot;&gt;fileno&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9696f13283acc9bdbd2e83addb3b28782209df38" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::fileno()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#fileno&quot;&gt;&quot;fileno&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaf3e3bac060d4e96a401f2f0634ced943fa15f" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::flush()&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;perlvar#%24OUTPUT_AUTOFLUSH&quot;&gt;&quot;$OUTPUT_AUTOFLUSH&quot; in perlvar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea09c7543753e43f0874eca405e18dbb7c8fbe5" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::flush()&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;perlvar#%24OUTPUT_AUTOFLUSH&quot;&gt;$OUTPUT_AUTOFLUSH in perlvar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">未实现。使用方法 &lt;code&gt;IO::Handle::flush()&lt;/code&gt; 。另请参见 &lt;code&gt;&lt;a href=&quot;perlvar#%24OUTPUT_AUTOFLUSH&quot;&gt;$OUTPUT_AUTOFLUSH in perlvar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b6a85a170f35c7a103834e7c9ab729375c61940" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::getc()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Handle::getc()&lt;/code&gt; ，或参阅&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42ababc5d5162f6a63c30bd536ed8086eafd3641" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::getc()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#read&quot;&gt;&quot;read&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58770e0b79629739d1eacc20133618f4648e46ac" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::gets()&lt;/code&gt; instead. Similar to &amp;lt;&amp;gt;, also known as &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;.</source>
          <target state="translated">未实现。使用方法 &lt;code&gt;IO::Handle::gets()&lt;/code&gt; 代替。类似于&amp;lt;&amp;gt;，也称为&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08418b376d6e2a51350cafa8345cc73ed8d4f24e" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::gets()&lt;/code&gt; instead. Similar to &amp;lt;&amp;gt;, also known as &lt;a href=&quot;perlfunc#readline&quot;&gt;&quot;readline&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3907a6c5c4412de4df54dbbf1b97cc9ee0b41c" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::new_from_fd()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用方法 &lt;code&gt;IO::Handle::new_from_fd()&lt;/code&gt; ，或查看&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdda9a6ff09725998f29342f77d923d05475255b" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::new_from_fd()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34ae8702317852fa502a0298b0533b2d7a4471a" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::sync()&lt;/code&gt; instead.</source>
          <target state="translated">未实现。使用方法 &lt;code&gt;IO::Handle::sync()&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="f9baea21503c08e99440dc4cb43bcdef6e777150" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Handle::ungetc()&lt;/code&gt; instead.</source>
          <target state="translated">未实现。使用方法 &lt;code&gt;IO::Handle::ungetc()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="211713d31d2112ee0f26a6608edadadbf58f4c80" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::getpos()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Seekable::getpos()&lt;/code&gt; ，或参阅&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7a6c87195880febc276d87a3f6ab896650a4f21" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::getpos()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#seek&quot;&gt;&quot;seek&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49c926515a4700f695726ea107a0a6611a896eb" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::seek()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Seekable::seek()&lt;/code&gt; ，或参阅&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e22c70c9516f2dd39dfe39fe30636124f60a3b4" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::seek()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#seek&quot;&gt;&quot;seek&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e6ae0bbba38efd7d70699a4892e9d6f993a6ca" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::setpos()&lt;/code&gt; instead, or seek &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Seekable::setpos()&lt;/code&gt; ，或使用&lt;a href=&quot;functions/seek&quot;&gt;seek方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d70e95cf413ff9992f93ac25f58aae24206141ae" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::setpos()&lt;/code&gt; instead, or seek &lt;a href=&quot;perlfunc#seek&quot;&gt;&quot;seek&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3d78054e07679018c7eb8a6898e917690c20bb" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::tell()&lt;/code&gt; instead, or see &lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;.</source>
          <target state="translated">未实现。请改用 &lt;code&gt;IO::Seekable::tell()&lt;/code&gt; ，或参阅&lt;a href=&quot;functions/tell&quot;&gt;tell&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d008ff929665022b03b82862bb6c2f5c4eb1995f" translate="yes" xml:space="preserve">
          <source>Not implemented. Use method &lt;code&gt;IO::Seekable::tell()&lt;/code&gt; instead, or see &lt;a href=&quot;perlfunc#tell&quot;&gt;&quot;tell&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137c25f432a636a5b4fbe697952402c8c467df96" translate="yes" xml:space="preserve">
          <source>Not implemented. Use the method &lt;code&gt;IO::Handle::clearerr()&lt;/code&gt; instead, to reset the error state (if any) and EOF state (if any) of the given stream.</source>
          <target state="translated">未实现。使用方法 &lt;code&gt;IO::Handle::clearerr()&lt;/code&gt; 来重置给定流的错误状态（如果有）和EOF状态（如果有）。</target>
        </trans-unit>
        <trans-unit id="58f06a0bbcce20a76f9bb983793e3d731cc5b4e7" translate="yes" xml:space="preserve">
          <source>Not import any functions (&lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt; are not imported).</source>
          <target state="translated">不导入任何功能（不导入 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;autoload&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="96a4269aa601e675ab09221ec97b05a936fa8983" translate="yes" xml:space="preserve">
          <source>Not keen on YAML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48d80935038d565f7b6bee1373f0f551a681530" translate="yes" xml:space="preserve">
          <source>Not meaning the same thing everywhere. A global variable in Perl can be localized inside a &lt;b&gt;dynamic scope&lt;/b&gt; via the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">到处都不是同一件事。可以通过 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 操作符在&lt;b&gt;动态范围内&lt;/b&gt;本地化Perl中的全局变量。</target>
        </trans-unit>
        <trans-unit id="5a2dde05372413be6966263a334909914770e1ec" translate="yes" xml:space="preserve">
          <source>Not meaning the same thing everywhere. A global variable in Perl can be localized inside a &lt;b&gt;dynamic scope&lt;/b&gt; via the &lt;code&gt;local&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b939fb6a3591b14266d8d57a8e48e4faf1d2cee" translate="yes" xml:space="preserve">
          <source>Not much in there, lets have a look at our hash:</source>
          <target state="translated">里面的东西不多,我们来看看我们的哈希。</target>
        </trans-unit>
        <trans-unit id="111014156b398a7e453286db5ba72b54a2a724dd" translate="yes" xml:space="preserve">
          <source>Not only does the &lt;code&gt;&amp;amp;&lt;/code&gt; form make the argument list optional, it also disables any prototype checking on arguments you do provide. This is partly for historical reasons, and partly for having a convenient way to cheat if you know what you're doing. See &lt;a href=&quot;#Prototypes&quot;&gt;&quot;Prototypes&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9a725cbef013a6dd198484972ad2c467befeee" translate="yes" xml:space="preserve">
          <source>Not only does the &lt;code&gt;&amp;amp;&lt;/code&gt; form make the argument list optional, it also disables any prototype checking on arguments you do provide. This is partly for historical reasons, and partly for having a convenient way to cheat if you know what you're doing. See &lt;a href=&quot;#Prototypes&quot;&gt;Prototypes&lt;/a&gt; below.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 表单不仅使参数列表成为可选参数，而且还禁用了对您提供的参数的任何原型检查。这部分是由于历史原因，部分是因为如果您知道自己在做什么，则可以使用一种方便的方法来作弊。请参阅下面的&lt;a href=&quot;#Prototypes&quot;&gt;原型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a811cf50f735b2384cdcc3d6c15773eea2339670" translate="yes" xml:space="preserve">
          <source>Not really a function. Returns the value of the last command in the sequence of commands indicated by BLOCK. When modified by the &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;until&lt;/code&gt; loop modifier, executes the BLOCK once before testing the loop condition. (On other statements the loop modifiers test the conditional first.)</source>
          <target state="translated">并不是真正的功能。返回由BLOCK指示的命令序列中最后一个命令的值。由 &lt;code&gt;while&lt;/code&gt; 或 &lt;code&gt;until&lt;/code&gt; 循环修饰符修改后，在测试循环条件之前执行一次BLOCK。（在其他语句上，循环修饰符首先测试条件。）</target>
        </trans-unit>
        <trans-unit id="7730f6df594c6de3b4d8613cf47cdce98b6f0a22" translate="yes" xml:space="preserve">
          <source>Not really needed since Perl can do this transparently, see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">由于Perl可以透明地执行此操作，因此并不需要，请参见&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9d7a49b40d40ab0a0f9c9a3b98021fa838b1713" translate="yes" xml:space="preserve">
          <source>Not really. Just remember these things:</source>
          <target state="translated">并非如此。只要记住这些东西。</target>
        </trans-unit>
        <trans-unit id="564d2f25f68052a8b0d8264d398e1a270012d6dd" translate="yes" xml:space="preserve">
          <source>Not supported. (Cygwin, Win32)</source>
          <target state="translated">不支持。(Cygwin,Win32)</target>
        </trans-unit>
        <trans-unit id="44f0aabb090ea7bda69b4ec7e7feada441e65ecd" translate="yes" xml:space="preserve">
          <source>Not supported. (Symbian OS)</source>
          <target state="translated">不支持。(Symbian OS)</target>
        </trans-unit>
        <trans-unit id="09d97c142afe584c0633a63005929ca08c9b4ee3" translate="yes" xml:space="preserve">
          <source>Not surprisingly &lt;code&gt;POPi&lt;/code&gt; is used twice this time because we were retrieving 2 values from the stack. The important thing to note is that when using the &lt;code&gt;POP*&lt;/code&gt; macros they come off the stack in</source>
          <target state="translated">&lt;code&gt;POPi&lt;/code&gt; 使用两次POPi并不奇怪，因为我们从堆栈中检索了2个值。需要注意的重要一点是，当使用 &lt;code&gt;POP*&lt;/code&gt; 宏时，它们会脱离堆栈</target>
        </trans-unit>
        <trans-unit id="b02a8b9c9c34f815393af037fc94b1f6cd6d0270" translate="yes" xml:space="preserve">
          <source>Not to be confused with the older &lt;code&gt;sv_isa&lt;/code&gt; function, which does not use an overloaded &lt;code&gt;isa()&lt;/code&gt; method, nor will check subclassing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390165cd3f335a354cf23fafc424a48aba836996" translate="yes" xml:space="preserve">
          <source>Not useful. (RISC OS)</source>
          <target state="translated">没有用。(RISC OS)</target>
        </trans-unit>
        <trans-unit id="a2b7936ab62eebf457dc2154c2400025b89c2f6e" translate="yes" xml:space="preserve">
          <source>Not very consistent! We'll set a breakpoint in the code manually and run it under the debugger to see what's going on. A breakpoint is a flag, to which the debugger will run without interruption, when it reaches the breakpoint, it will stop execution and offer a prompt for further interaction. In normal use, these debugger commands are completely ignored, and they are safe - if a little messy, to leave in production code.</source>
          <target state="translated">不是很一致! 我们在代码中手动设置一个断点,然后在调试器下运行,看看是怎么回事。断点是一个标志,调试器会不间断地运行到这个标志,当到达断点时,会停止执行,并提供进一步交互的提示。在正常使用中,这些调试器命令是完全被忽略的,它们是安全的--即使有点乱,也可以留在生产代码中。</target>
        </trans-unit>
        <trans-unit id="eab16f7244993d7b0b2df071763a4f5fb807aa02" translate="yes" xml:space="preserve">
          <source>Not very popular yet. Needs Unicode Database or equivalent to implement encode() (because it includes JIS X 0208/0212, KSC5601, and GB2312 simultaneously, whose code points in Unicode overlap. So you need to lookup the database to determine to what character set a given Unicode character should belong).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bb046c0c657ec319718519db98f1b45069923b" translate="yes" xml:space="preserve">
          <source>Not very popular. Needs CNS 11643-1 and -2 which are not available in this module. CNS 11643 is supported (via euc-tw) in Encode::HanExtra. Audrey Tang may add support for this encoding in her module in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9789ac6a8ac0f9e48e0dab47af13503fe088d2fd" translate="yes" xml:space="preserve">
          <source>Not yet implemented things (but with correct description) are marked with '!', things that need to be answered are marked with '?'.</source>
          <target state="translated">尚未实施的事情(但有正确的描述)用'!'标记,需要回答的事情用'?'标记。</target>
        </trans-unit>
        <trans-unit id="b412fb5dbbfd0d61738d57648437ed916775cf7f" translate="yes" xml:space="preserve">
          <source>Not yet implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a291a507a7fbe91670ac808a7268af277204d4" translate="yes" xml:space="preserve">
          <source>Not-so-symbolic references</source>
          <target state="translated">并非象征性的提法</target>
        </trans-unit>
        <trans-unit id="8c5f0dacad99093710a8cf34c11579156a106382" translate="yes" xml:space="preserve">
          <source>Notable forms: {az-Arab} Azerbaijani in Arabic script; {az-Cyrl} Azerbaijani in Cyrillic script; {az-Latn} Azerbaijani in Latin script.</source>
          <target state="translated">显著形式:{az-Arab}阿塞拜疆语为阿拉伯文;{az-Cyrl}阿塞拜疆语为西里尔文;{az-Latn}。阿塞拜疆语为拉丁字母。</target>
        </trans-unit>
        <trans-unit id="a21e204d71bcc963ab9acff0b78bac05301d8085" translate="yes" xml:space="preserve">
          <source>Notable forms: {cel-gaulish} Gaulish (Historical)</source>
          <target state="translated">值得注意的形式:{cel-gaulish}。{cel-gaulish}高卢</target>
        </trans-unit>
        <trans-unit id="81bb796e9401d7e29001c83b4296a2b3487ce033" translate="yes" xml:space="preserve">
          <source>Notable forms: {de-at} Austrian German; {de-be} Belgian German; {de-ch} Swiss German; {de-de} Germany German; {de-li} Liechtenstein German; {de-lu} Luxembourg German.</source>
          <target state="translated">值得注意的形式:{de-at}奥地利德语;{de-be}比利时德语;{de-ch}瑞士德语;{de-de}德国 德语;{de-li}列支敦士登德语;{de-lu}卢森堡德语。</target>
        </trans-unit>
        <trans-unit id="e6b6ae9f7027c22a91fb186261e25769dc159ea0" translate="yes" xml:space="preserve">
          <source>Notable forms: {en-au} Australian English; {en-bz} Belize English; {en-ca} Canadian English; {en-gb} UK English; {en-ie} Irish English; {en-jm} Jamaican English; {en-nz} New Zealand English; {en-ph} Philippine English; {en-tt} Trinidad English; {en-us} US English; {en-za} South African English; {en-zw} Zimbabwe English.</source>
          <target state="translated">值得注意的形式:{en-au}澳大利亚英语;{en-bz}{en-au}澳大利亚英语;{en-bz}。伯利兹英语;{en-ca}加拿大英语;{en-gb}英国英语;{en-ie}爱尔兰英语;{en-jm}牙买加英语;{en-nz}新西兰英语;{en-ph}菲律宾英语;{en-tt}特立尼达英语;{en-us}美式英语;{en-za}南非英语;{en-zw}津巴布韦英语。</target>
        </trans-unit>
        <trans-unit id="2fdbbad9de5ba367ca84465b4854964747407c75" translate="yes" xml:space="preserve">
          <source>Notable forms: {es-ar} Argentine Spanish; {es-bo} Bolivian Spanish; {es-cl} Chilean Spanish; {es-co} Colombian Spanish; {es-do} Dominican Spanish; {es-ec} Ecuadorian Spanish; {es-es} Spain Spanish; {es-gt} Guatemalan Spanish; {es-hn} Honduran Spanish; {es-mx} Mexican Spanish; {es-pa} Panamanian Spanish; {es-pe} Peruvian Spanish; {es-pr} Puerto Rican Spanish; {es-py} Paraguay Spanish; {es-sv} Salvadoran Spanish; {es-us} US Spanish; {es-uy} Uruguayan Spanish; {es-ve} Venezuelan Spanish.</source>
          <target state="translated">值得注意的形式:{es-ar}{es-ar}阿根廷西班牙语;{es-bo}玻利维亚西班牙语;{es-cl}智利西班牙语;{es-co}哥伦比亚西班牙语;{es-do}多米尼加西班牙语;{es-ec}厄瓜多尔西班牙语;{es-es}。西班牙 西班牙文;{es-gt}危地马拉西班牙语;{es-hn}洪都拉斯西班牙语;{es-mx}墨西哥西班牙语;{es-pa}巴拿马西班牙语;{es-pe}。秘鲁西班牙语;{es-pr}波多黎各西班牙语;{es-py}巴拉圭西班牙语;{西班牙-SV}萨尔瓦多西班牙语;{西班牙-美国}。美国西班牙语;{es-uy}乌拉圭西班牙语;{es-ve}委内瑞拉西班牙语。</target>
        </trans-unit>
        <trans-unit id="4e12474051e941f83342ef3b43136d735d5afa0d" translate="yes" xml:space="preserve">
          <source>Notable forms: {fr-fr} France French; {fr-be} Belgian French; {fr-ca} Canadian French; {fr-ch} Swiss French; {fr-lu} Luxembourg French; {fr-mc} Monaco French.</source>
          <target state="translated">值得注意的形式:{fr-fr}{fr-fr}法国 法语;{fr-be}比利时法语;{fr-ca}加拿大法语;{fr-ch}瑞士法语;{fr-lu}卢森堡法语;{fr-mc}摩纳哥法语。</target>
        </trans-unit>
        <trans-unit id="1e7e0fa3b703bb74658f81aeaba2a665c1f48d5b" translate="yes" xml:space="preserve">
          <source>Notable forms: {it-it} Italy Italian; {it-ch} Swiss Italian.</source>
          <target state="translated">值得注意的形式:{it-it}。{it-it}意大利 意大利语;{it-ch}瑞士的意大利人。</target>
        </trans-unit>
        <trans-unit id="1c5cef64e650e567672b7408d2454fe4584f664d" translate="yes" xml:space="preserve">
          <source>Notable forms: {sr-Cyrl} : Serbian in Cyrillic script; {sr-Latn} : Serbian in Latin script.</source>
          <target state="translated">值得注意的形式:{sr-Cyrl}:西里尔字母的塞尔维亚语;{sr-Latn}:拉丁字母的塞尔维亚语。{sr-Cyrl}:西里尔字母的塞尔维亚语;{sr-Latn}:拉丁字母的塞尔维亚语。</target>
        </trans-unit>
        <trans-unit id="b08476354345271b609310a79c55d75e3d5fa7ed" translate="yes" xml:space="preserve">
          <source>Notable forms: {sv-se} Sweden Swedish; {sv-fi} Finland Swedish.</source>
          <target state="translated">值得注意的形式:{sv-se}瑞典 瑞典语;{sv-fi}芬兰 瑞典语:</target>
        </trans-unit>
        <trans-unit id="e612fd18c10ae296220917b18468a0bab3558ba5" translate="yes" xml:space="preserve">
          <source>Notable forms: {uz-Cyrl} Uzbek in Cyrillic script; {uz-Latn} Uzbek in Latin script.</source>
          <target state="translated">显著形式:{uz-Cyrl}西里尔字母的乌兹别克语;{uz-Latn}乌兹别克语的西里尔字母;{uz-Latn}乌兹别克语的西里尔字母。{uz-Cyrl}西里尔字母的乌兹别克语;{uz-Latn}。乌兹别克语为拉丁字母。</target>
        </trans-unit>
        <trans-unit id="ccdcbff00a8c92eb11dc1da19032f524f994ea4d" translate="yes" xml:space="preserve">
          <source>Notable forms: {yi-latn} Yiddish in Latin script</source>
          <target state="translated">值得注意的形式:{yi-latn}{yi-latn}意第绪语</target>
        </trans-unit>
        <trans-unit id="ce063fbcb3861605804d4088b9e6f420c033d1af" translate="yes" xml:space="preserve">
          <source>Notably, when I say &quot;the parser should do Y&quot;, the parser may fail to do Y, if the calling application explicitly requests that the parser</source>
          <target state="translated">值得注意的是,当我说 &quot;解析器应该做Y &quot;时,如果调用应用程序明确要求解析器</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="dc28f0d8c7871400478b567d7beb2004cf42a815" translate="yes" xml:space="preserve">
          <source>Note - The UID &amp;amp; GID are stored as 16-bit integers in the &quot;Ux&quot; field. Use &lt;code&gt;exUnixN&lt;/code&gt; if your UID or GID are 32-bit.</source>
          <target state="translated">注-UID和GID以16位整数形式存储在&amp;ldquo; Ux&amp;rdquo;字段中。如果您的UID或GID为32位，请使用 &lt;code&gt;exUnixN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aacd35ea4ac0d783d64f4c4f2704a7fd93edbfd6" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;xs&lt;/code&gt; is the file-extension. More possibilities may arise in the future. Note that object names are specified without their XS extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f25c29f636a35a4c90bd02e8d836521729b1940" translate="yes" xml:space="preserve">
          <source>Note For File::Spec::Win32 Maintainers</source>
          <target state="translated">File::Spec::Win32维护者注意事项</target>
        </trans-unit>
        <trans-unit id="d61819593fe5205b29d4ef1cfda4d5a9bf3fa4b5" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; will refuse to overwrite part of a substitution that has already been replaced; so for example this will stop after the first iteration, rather than iterating its way backwards through the string:</source>
          <target state="translated">还要注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 将拒绝覆盖已经被替换的替换的一部分；因此，例如，它将在第一次迭代后停止，而不是在字符串中向后迭代：</target>
        </trans-unit>
        <trans-unit id="d431b689d39a84be2048506411832e8ae02c23d4" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;s///&lt;/code&gt; will refuse to overwrite part of a substitution that has already been replaced; so for example this will stop after the first iteration, rather than iterating its way backwards through the string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e8c76e1346833c7579d9c295e9f07ddedb8870" translate="yes" xml:space="preserve">
          <source>Note also that a UTF-8 &quot;invariant&quot; character (i.e. ASCII on non-EBCDIC machines) is a valid UTF-8 character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51303d3d7fafd34353273486b77b3443cc1441d4" translate="yes" xml:space="preserve">
          <source>Note also that executable files on OS/2 can have an arbitrary extension, but</source>
          <target state="translated">还需要注意的是,OS/2上的可执行文件可以有任意的扩展名,但是</target>
        </trans-unit>
        <trans-unit id="86274076d108976d6c7a6912c21fbe38fd3afb11" translate="yes" xml:space="preserve">
          <source>Note also that multiple IEEE &lt;code&gt;NaN&lt;/code&gt; values are treated as duplicates of each other, regardless of any differences in their payloads, and despite the fact that &lt;code&gt;0+'NaN' == 0+'NaN'&lt;/code&gt; yields false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c1277f883a5fd92bb92e168ada01f4ed8abbf3" translate="yes" xml:space="preserve">
          <source>Note also that representing piped-command arguments in list form like this doesn't work on every platform. It will work on any Unix-based OS that provides a real &lt;code&gt;fork&lt;/code&gt; function (e.g. macOS or Linux), as well as on Windows when running Perl 5.22 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef8e44dd4ec6271a5e9810987c5e736596eec8b" translate="yes" xml:space="preserve">
          <source>Note also that some interactions with the platform's operating system never use Unicode rules.</source>
          <target state="translated">还需要注意的是,与平台操作系统的一些交互从不使用Unicode规则。</target>
        </trans-unit>
        <trans-unit id="df6453c563c1a21c7c65cf6fa2f8db2ed6c94f59" translate="yes" xml:space="preserve">
          <source>Note also that some versions of &lt;a href=&quot;#flock-FILEHANDLE%2COPERATION&quot;&gt;&lt;code&gt;flock&lt;/code&gt;&lt;/a&gt; cannot lock things over the network; you would need to use the more system-specific &lt;a href=&quot;#fcntl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt; for that. If you like you can force Perl to ignore your system's &lt;a href=&quot;http://man.he.net/man2/flock&quot;&gt;flock(2)&lt;/a&gt; function, and so provide its own &lt;a href=&quot;http://man.he.net/man2/fcntl&quot;&gt;fcntl(2)&lt;/a&gt;-based emulation, by passing the switch &lt;code&gt;-Ud_flock&lt;/code&gt; to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4edd6fd44da89a951836e2357c62c606b0748a9" translate="yes" xml:space="preserve">
          <source>Note also that some versions of &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; cannot lock things over the network; you would need to use the more system-specific &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; for that. If you like you can force Perl to ignore your system's flock(2) function, and so provide its own fcntl(2)-based emulation, by passing the switch &lt;code&gt;-Ud_flock&lt;/code&gt; to the</source>
          <target state="translated">另请注意，某些版本的 &lt;code&gt;&lt;a href=&quot;flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; 无法通过网络锁定内容；您将需要使用更多系统特定的 &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; 。如果愿意，可以通过将 &lt;code&gt;-Ud_flock&lt;/code&gt; 开关传递给Perl来强制Perl忽略系统的flock（2）函数，从而提供其自己的基于fcntl（2）的仿真。</target>
        </trans-unit>
        <trans-unit id="9506516245f2a27d70f794e303e94668077d4724" translate="yes" xml:space="preserve">
          <source>Note also that some versions of &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; cannot lock things over the network; you would need to use the more system-specific &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; for that. If you like you can force Perl to ignore your system's flock(2) function, and so provide its own fcntl(2)-based emulation, by passing the switch &lt;code&gt;-Ud_flock&lt;/code&gt; to the</source>
          <target state="translated">另请注意，某些版本的 &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; 无法通过网络锁定内容；您将需要使用更多系统特定的 &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; 。如果愿意，可以通过将 &lt;code&gt;-Ud_flock&lt;/code&gt; 开关传递给Perl来强制Perl忽略系统的flock（2）函数，从而提供其自己的基于fcntl（2）的仿真。</target>
        </trans-unit>
        <trans-unit id="31429c82fc67ac62603cde51ce1f5c6cd992a1a1" translate="yes" xml:space="preserve">
          <source>Note also that the</source>
          <target state="translated">还请注意</target>
        </trans-unit>
        <trans-unit id="243c26e6057ac6e495579d70e250c605534bf93f" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;code&gt;&quot;p&quot;&lt;/code&gt; modifier is special in that its presence anywhere in a pattern has a global effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c84d355b563eeba64d66feb2a9301f9ac3044ba" translate="yes" xml:space="preserve">
          <source>Note also that the &lt;code&gt;p&lt;/code&gt; modifier is special in that its presence anywhere in a pattern has a global effect.</source>
          <target state="translated">还要注意， &lt;code&gt;p&lt;/code&gt; 修饰符的特殊之处在于它在模式中的任何位置均具有全局效果。</target>
        </trans-unit>
        <trans-unit id="ee56fcf5b207af918e626e9bd28811c451155208" translate="yes" xml:space="preserve">
          <source>Note also that the C++ mode build currently fails with MinGW 3.4.5 and 4.7.2 or later, and with MinGW64 64-bit 6.3.0 or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f63e7551b1c1b479c5f1d972a1f2245b31f7f2" translate="yes" xml:space="preserve">
          <source>Note also that the command &lt;code&gt;perldoc perllocal&lt;/code&gt; gives you a (possibly incomplete) list of the modules that have been further installed on your system. (The perllocal.pod file is updated by the standard MakeMaker install process.)</source>
          <target state="translated">还要注意，命令 &lt;code&gt;perldoc perllocal&lt;/code&gt; 为您提供了（可能是不完整的）系统上已进一步安装的模块的列表。（perllocal.pod文件由标准的MakeMaker安装过程更新。）</target>
        </trans-unit>
        <trans-unit id="974ae7d8c658ab7fcbda1dde2814ab3d89d6f088" translate="yes" xml:space="preserve">
          <source>Note also that the copy constructor (key &lt;code&gt;'='&lt;/code&gt; ) may be autogenerated, but only for objects based on scalars. See &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;.</source>
          <target state="translated">还要注意，复制构造函数（键 &lt;code&gt;'='&lt;/code&gt; ）可以自动生成，但仅适用于基于标量的对象。请参见&lt;a href=&quot;#Copy-Constructor&quot;&gt;复制构造函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92361dff5e2f10f8592eb14b0f1c0a57e0423073" translate="yes" xml:space="preserve">
          <source>Note also that the copy constructor (key &lt;code&gt;'='&lt;/code&gt;) may be autogenerated, but only for objects based on scalars. See &lt;a href=&quot;#Copy-Constructor&quot;&gt;&quot;Copy Constructor&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d1b08cb96b172739c41421853e346d699284ca" translate="yes" xml:space="preserve">
          <source>Note also that the differences between PM and VIO executables are only in the</source>
          <target state="translated">还要注意的是,PM和VIO可执行文件的不同之处只在于</target>
        </trans-unit>
        <trans-unit id="8a0b196123450466a3bd0e991b94e36c4a2d4091" translate="yes" xml:space="preserve">
          <source>Note also that the interpolation code needs to make a decision on where the interpolated scalar ends. For instance, whether &lt;code&gt;&quot;a $x -&amp;gt; {c}&quot;&lt;/code&gt; really means:</source>
          <target state="translated">还要注意，内插代码需要确定内插标量在哪里结束。例如， &lt;code&gt;&quot;a $x -&amp;gt; {c}&quot;&lt;/code&gt; 真的意味着：</target>
        </trans-unit>
        <trans-unit id="461724a83047bdefd7b18b66a849277d50c6ddf4" translate="yes" xml:space="preserve">
          <source>Note also that the perl command-line utilities (e.g. perldoc) and any that are added by modules that you install will be under /usr/perl5/bin, so that directory should be added to your PATH.</source>
          <target state="translated">还需要注意的是,perl 命令行工具 (例如 perldoc)和任何由你安装的模块添加的工具都会在 /usr/perl5/bin 下,所以这个目录应该被添加到你的 PATH 中。</target>
        </trans-unit>
        <trans-unit id="b1c8981415e4845f7fa3c8120b6871be02377a53" translate="yes" xml:space="preserve">
          <source>Note also that the variable is not visible until the following</source>
          <target state="translated">还要注意的是,这个变量要到下面的时候才会出现</target>
        </trans-unit>
        <trans-unit id="da9eb4f7f742f4aab3f9b8b74e916fc9f5d30c44" translate="yes" xml:space="preserve">
          <source>Note also that the whole range idea is rather unportable between character sets, except for four situations that Perl handles specially. Any subset of the ranges &lt;code&gt;[A-Z]&lt;/code&gt; , &lt;code&gt;[a-z]&lt;/code&gt; , and &lt;code&gt;[0-9]&lt;/code&gt; are guaranteed to match the expected subset of ASCII characters, no matter what character set the platform is running. The fourth portable way to specify ranges is to use the &lt;code&gt;\N{...}&lt;/code&gt; syntax to specify either end point of the range. For example, &lt;code&gt;[\N{U+04}-\N{U+07}]&lt;/code&gt; means to match the Unicode code points &lt;code&gt;\N{U+04}&lt;/code&gt; , &lt;code&gt;\N{U+05}&lt;/code&gt; , &lt;code&gt;\N{U+06}&lt;/code&gt; , and &lt;code&gt;\N{U+07}&lt;/code&gt; , whatever their native values may be on the platform. Under &lt;a href=&quot;re#'strict'-mode&quot;&gt;use re 'strict'&lt;/a&gt; or within a &lt;a href=&quot;#(%3f%5b-%5d)&quot;&gt;(?[ ])&lt;/a&gt;, a warning is raised, if enabled, and the other end point of a range which has a &lt;code&gt;\N{...}&lt;/code&gt; endpoint is not portably specified. For example,</source>
          <target state="translated">还请注意，除了Perl专门处理的四种情况外，整个范围的想法在字符集之间非常不可移植。无论平台运行何种字符集，都保证范围 &lt;code&gt;[A-Z]&lt;/code&gt; ， &lt;code&gt;[a-z]&lt;/code&gt; 和 &lt;code&gt;[0-9]&lt;/code&gt; 的任何子集都与预期的ASCII字符子集匹配。指定范围的第四种可移植方式是使用 &lt;code&gt;\N{...}&lt;/code&gt; 语法来指定范围的任一端点。例如， &lt;code&gt;[\N{U+04}-\N{U+07}]&lt;/code&gt; 表示要匹配Unicode代码点 &lt;code&gt;\N{U+04}&lt;/code&gt; ， &lt;code&gt;\N{U+05}&lt;/code&gt; ， &lt;code&gt;\N{U+06}&lt;/code&gt; 以及 &lt;code&gt;\N{U+07}&lt;/code&gt; ，无论平台上的本机值是什么。下&lt;a href=&quot;re#'strict'-mode&quot;&gt;如果使用re'strict'&lt;/a&gt;或在&lt;a href=&quot;#(%3f%5b-%5d)&quot;&gt;（？[]）内&lt;/a&gt;，则会发出警告（如果启用），并且不会便携地指定具有 &lt;code&gt;\N{...}&lt;/code&gt; 端点的范围的另一个端点。例如，</target>
        </trans-unit>
        <trans-unit id="b3c1ad83c7446d82ad768f4c14cbc6cf2bb28a0e" translate="yes" xml:space="preserve">
          <source>Note also that the whole range idea is rather unportable between character sets--and even within character sets they may cause results you probably didn't expect. A sound principle is to use only ranges that begin from and end at either alphabets of equal case (a-e, A-E), or digits (0-4). Anything else is unsafe. If in doubt, spell out the character sets in full.</source>
          <target state="translated">还要注意的是,整个范围的概念在字符集之间是相当不可靠的--甚至在字符集内也可能会造成你可能没有想到的结果。一个合理的原则是只使用从字母开始和结束的范围,这些范围要么是大小写相同的字母(a-e,A-E),要么是数字(0-4)。其他的都是不安全的。如果有疑问,请完整地拼出字符集。</target>
        </trans-unit>
        <trans-unit id="e91fc700eef8c024136a19a3d1a25e4a4aec8312" translate="yes" xml:space="preserve">
          <source>Note also that there are some basic rules to using &quot;=over&quot; ... &quot;=back&quot; regions:</source>
          <target state="translated">还要注意的是,使用&quot;=over &quot;有一些基本规则......。&quot;=回 &quot;区域。</target>
        </trans-unit>
        <trans-unit id="f240a6fbb992211509f6bddbfc9324c218ab462f" translate="yes" xml:space="preserve">
          <source>Note also that this is a minimum setup; you might want to add other packages of &lt;b&gt;ADE&lt;/b&gt; (the</source>
          <target state="translated">另请注意，这是最低设置。您可能要添加其他&lt;b&gt;ADE&lt;/b&gt;软件包（</target>
        </trans-unit>
        <trans-unit id="8f0a8f1a21849e70b5e894c297b75fbda2be2da8" translate="yes" xml:space="preserve">
          <source>Note also that you &lt;b&gt;must&lt;/b&gt; consider the encoded value as atomic; i.e., you should not consider it as anything but an opaque, unanalysable string value. (The internals of the encoding method may change in future versions, as the language tagging standard changes over time.)</source>
          <target state="translated">还要注意，您&lt;b&gt;必须&lt;/b&gt;将编码值视为原子值。也就是说，除了不透明，无法分析的字符串值之外，您不应将其视为任何其他内容。（随着语言标记标准随时间变化，编码方法的内部结构可能会在将来的版本中更改。）</target>
        </trans-unit>
        <trans-unit id="5bce497daf670728bb21a4272ea4f02098c78b3e" translate="yes" xml:space="preserve">
          <source>Note also the existence of &lt;code&gt;sv_catpvf&lt;/code&gt; and &lt;code&gt;sv_vcatpvfn&lt;/code&gt; , combining concatenation with formatting.</source>
          <target state="translated">还要注意 &lt;code&gt;sv_catpvf&lt;/code&gt; 和 &lt;code&gt;sv_vcatpvfn&lt;/code&gt; 的存在，将串联与格式化结合在一起。</target>
        </trans-unit>
        <trans-unit id="224cbc8c1a831f9514ed249fa0fe0c7401070694" translate="yes" xml:space="preserve">
          <source>Note also the existence of &lt;code&gt;sv_catpvf&lt;/code&gt; and &lt;code&gt;sv_vcatpvfn&lt;/code&gt;, combining concatenation with formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c03a1bb63438d075c735c239a360c45cd5c5f8e" translate="yes" xml:space="preserve">
          <source>Note especially that &lt;code&gt;$cref-&amp;gt;&amp;amp;*&lt;/code&gt; is</source>
          <target state="translated">请特别注意， &lt;code&gt;$cref-&amp;gt;&amp;amp;*&lt;/code&gt; 为</target>
        </trans-unit>
        <trans-unit id="5984ffc263d935d0debbee07663c497020c0e0f9" translate="yes" xml:space="preserve">
          <source>Note event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329f3fa12538d44b63cb4bc769615094799f44fc" translate="yes" xml:space="preserve">
          <source>Note for BSD users: setting &lt;code&gt;$0&lt;/code&gt; does not completely remove &quot;perl&quot; from the ps(1) output. For example, setting &lt;code&gt;$0&lt;/code&gt; to &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; may result in &lt;code&gt;&quot;perl: foobar (perl)&quot;&lt;/code&gt; (whether both the &lt;code&gt;&quot;perl: &quot;&lt;/code&gt; prefix and the &quot; (perl)&quot; suffix are shown depends on your exact BSD variant and version). This is an operating system feature, Perl cannot help it.</source>
          <target state="translated">BSD用户注意：设置 &lt;code&gt;$0&lt;/code&gt; 不会完全从ps（1）输出中删除&amp;ldquo; perl&amp;rdquo;。例如，设置 &lt;code&gt;$0&lt;/code&gt; 至 &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; 可能导致 &lt;code&gt;&quot;perl: foobar (perl)&quot;&lt;/code&gt; （无论这两个 &lt;code&gt;&quot;perl: &quot;&lt;/code&gt; 前缀和&amp;ldquo;（perl的）&amp;rdquo;后缀表示要看您的具体BSD变种和版本）。这是一个操作系统功能，Perl无法帮助它。</target>
        </trans-unit>
        <trans-unit id="7293fa6262cc45f7e2dbf5481215c1d362820f1d" translate="yes" xml:space="preserve">
          <source>Note for Linux and Debian GNU/kFreeBSD users: Before Perl v5.16.0 perl would emulate POSIX semantics on Linux systems using LinuxThreads, a partial implementation of POSIX Threads that has since been superseded by the Native POSIX Thread Library (NPTL).</source>
          <target state="translated">Linux和Debian GNU/kFreeBSD用户须知。在Perl v5.16.0之前,perl会在Linux系统上使用LinuxThreads来模拟POSIX语义,LinuxThreads是POSIX线程的部分实现,后来被NPTL所取代。</target>
        </trans-unit>
        <trans-unit id="7aea9b8c7cfe32358e543467b0f84f66f59444bc" translate="yes" xml:space="preserve">
          <source>Note for Linux users: Between v5.8.1 and v5.16.0 Perl would work around non-POSIX thread semantics the minority of Linux systems (and Debian GNU/kFreeBSD systems) that used LinuxThreads, this emulation has since been removed. See the documentation for &lt;a href=&quot;../perlvar#%24%24&quot;&gt;$$&lt;/a&gt; for details.</source>
          <target state="translated">Linux用户注意事项：在v5.8.1和v5.16.0之间，Perl可以在使用LinuxThreads的少数Linux系统（和Debian GNU / kFreeBSD系统）使用非POSIX线程语义的情况下工作，此仿真已被删除。有关详细信息，请参见文档以获取&lt;a href=&quot;../perlvar#%24%24&quot;&gt;$$&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbdce38416b294a5283ce0536b64d8889c65db49" translate="yes" xml:space="preserve">
          <source>Note for Linux users: Between v5.8.1 and v5.16.0 Perl would work around non-POSIX thread semantics the minority of Linux systems (and Debian GNU/kFreeBSD systems) that used LinuxThreads, this emulation has since been removed. See the documentation for &lt;a href=&quot;perlvar#%24%24&quot;&gt;$$&lt;/a&gt; for details.</source>
          <target state="translated">Linux用户注意事项：在v5.8.1和v5.16.0之间，Perl可以在使用LinuxThreads的少数Linux系统（和Debian GNU / kFreeBSD系统）使用非POSIX线程语义的情况下工作，此仿真已被删除。有关详细信息，请参见文档以获取&lt;a href=&quot;perlvar#%24%24&quot;&gt;$$&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb69bfe72361defc6ffb1f69be5dc9409ce2ae2e" translate="yes" xml:space="preserve">
          <source>Note how the first and last entries are protected by quotes in order to protect the spaces.</source>
          <target state="translated">请注意,为了保护空格,第一条和最后一条是如何用引号保护的。</target>
        </trans-unit>
        <trans-unit id="b9400fb5715aebae33791834189bda7b7f0594aa" translate="yes" xml:space="preserve">
          <source>Note how the last three examples in the table above are treated specially by the parser. &lt;code&gt;mygrep()&lt;/code&gt; is parsed as a true list operator, &lt;code&gt;myrand()&lt;/code&gt; is parsed as a true unary operator with unary precedence the same as &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;mytime()&lt;/code&gt; is truly without arguments, just like &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt;. That is, if you say</source>
          <target state="translated">请注意解析器如何特别处理上表中的最后三个示例。 &lt;code&gt;mygrep()&lt;/code&gt; 被解析为真列表运算符， &lt;code&gt;myrand()&lt;/code&gt; 被解析为与 &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; 相同的一元优先级的真正一元运算符，而 &lt;code&gt;mytime()&lt;/code&gt; 确实没有参数，就像 &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; 一样。也就是说，如果你说</target>
        </trans-unit>
        <trans-unit id="cdc635a59a5a874516823dc99b8a94c5e05a2fb1" translate="yes" xml:space="preserve">
          <source>Note how the last three examples in the table above are treated specially by the parser. &lt;code&gt;mygrep()&lt;/code&gt; is parsed as a true list operator, &lt;code&gt;myrand()&lt;/code&gt; is parsed as a true unary operator with unary precedence the same as &lt;code&gt;rand()&lt;/code&gt;, and &lt;code&gt;mytime()&lt;/code&gt; is truly without arguments, just like &lt;code&gt;time()&lt;/code&gt;. That is, if you say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d61faf03809511f3cea1cbe82aa61f0b9ca92a" translate="yes" xml:space="preserve">
          <source>Note how we load the user pragma &lt;code&gt;myint&lt;/code&gt; with an empty list &lt;code&gt;()&lt;/code&gt; to prevent its &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; being called.</source>
          <target state="translated">请注意，我们如何使用空列表 &lt;code&gt;()&lt;/code&gt; 加载用户pragma &lt;code&gt;myint&lt;/code&gt; 以防止其 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="ee3224d5b447023fa11e54a3bfa8eb9adee42e7a" translate="yes" xml:space="preserve">
          <source>Note how we load the user pragma &lt;code&gt;myint&lt;/code&gt; with an empty list &lt;code&gt;()&lt;/code&gt; to prevent its &lt;code&gt;import&lt;/code&gt; being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c06a27ee940fb1ce392065b6dccdd03fd73088" translate="yes" xml:space="preserve">
          <source>Note however that some built-ins can't have their syntax expressed by a prototype (such as &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt;). If you override them you won't be able to fully mimic their original syntax.</source>
          <target state="translated">但是请注意，某些内置程序无法通过原型来表达其语法（例如 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;&lt;/code&gt; ）。如果您覆盖它们，则将无法完全模仿其原始语法。</target>
        </trans-unit>
        <trans-unit id="b7efc6d20035a67bd96018a6137a333a9fd4a32a" translate="yes" xml:space="preserve">
          <source>Note however that some built-ins can't have their syntax expressed by a prototype (such as &lt;code&gt;system&lt;/code&gt; or &lt;code&gt;chomp&lt;/code&gt;). If you override them you won't be able to fully mimic their original syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4aeaafb27edb37453c0434b81658b1a8e907549" translate="yes" xml:space="preserve">
          <source>Note however that these versions will not behave as nicely in scalar context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7440d14152f809ce4da1ad00d96fe84e5f29c7fb" translate="yes" xml:space="preserve">
          <source>Note however that to use some of these operators you need to have a sh-syntax shell installed (see &lt;a href=&quot;#Pdksh&quot;&gt;&quot;Pdksh&quot;&lt;/a&gt;, &lt;a href=&quot;#Frequently-asked-questions&quot;&gt;&quot;Frequently asked questions&quot;&lt;/a&gt;), and perl should be able to find it (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&quot;&lt;code&gt;PERL_SH_DIR&lt;/code&gt;&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210da70db6283ccd39e5584b10f4c87c0f89d9d6" translate="yes" xml:space="preserve">
          <source>Note however that to use some of these operators you need to have a sh-syntax shell installed (see &lt;a href=&quot;#Pdksh&quot;&gt;Pdksh&lt;/a&gt;, &lt;a href=&quot;#Frequently-asked-questions&quot;&gt;Frequently asked questions&lt;/a&gt;), and perl should be able to find it (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;).</source>
          <target state="translated">但是请注意，要使用其中一些运算符，您需要安装sh语法shell（请参阅&lt;a href=&quot;#Pdksh&quot;&gt;Pdksh&lt;/a&gt;，&lt;a href=&quot;#Frequently-asked-questions&quot;&gt;常见问题&lt;/a&gt;），并且perl应该能够找到它（请参阅&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6cd6d4fe1827d7816f9b8f3e1b0034bce7c56311" translate="yes" xml:space="preserve">
          <source>Note however, that this function does an exact match using &lt;code&gt;eq&lt;/code&gt; on the full path. So it cannot compensate for case-insensitive file- systems or compare 2 paths to see if they would point to the same underlying file.</source>
          <target state="translated">但是请注意，此函数在完整路径上使用 &lt;code&gt;eq&lt;/code&gt; 进行完全匹配。因此，它无法补偿不区分大小写的文件系统，也无法比较2条路径以查看它们是否指向同一基础文件。</target>
        </trans-unit>
        <trans-unit id="e19273a97b7ee5052886f577d9a46a4421684819" translate="yes" xml:space="preserve">
          <source>Note however, that you need to have</source>
          <target state="translated">但请注意,您需要有</target>
        </trans-unit>
        <trans-unit id="507e6816311ba5923485459a746f4c205372d3f9" translate="yes" xml:space="preserve">
          <source>Note if you specify &lt;code&gt;-&lt;/code&gt; as the command, in an analogous fashion to &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;(FOO, &quot;-|&quot;)&lt;/code&gt; the child process will just be the forked Perl process rather than an external command. This feature isn't yet supported on Win32 platforms.</source>
          <target state="translated">请注意，如果您指定 &lt;code&gt;-&lt;/code&gt; 作为命令，以类似的方式 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;(FOO, &quot;-|&quot;)&lt;/code&gt; 则子进程将只是派生的Perl进程，而不是外部命令。Win32平台尚不支持此功能。</target>
        </trans-unit>
        <trans-unit id="26e2cd3813c47d5570ed4f20adb47fcd58c86c5c" translate="yes" xml:space="preserve">
          <source>Note if you specify &lt;code&gt;-&lt;/code&gt; as the command, in an analogous fashion to &lt;code&gt;open(my $fh, &quot;-|&quot;)&lt;/code&gt; the child process will just be the forked Perl process rather than an external command. This feature isn't yet supported on Win32 platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9342b413d4bbcd1dc6fe59e3ee28645b823224" translate="yes" xml:space="preserve">
          <source>Note in the last example, the end of the string is considered a word boundary.</source>
          <target state="translated">请注意,在最后一个例子中,字符串的结尾被认为是一个字的边界。</target>
        </trans-unit>
        <trans-unit id="07e19a6ca0b876d2709ab0ec0dfc79383c491dc1" translate="yes" xml:space="preserve">
          <source>Note on ISO-2022-JP(-1)?</source>
          <target state="translated">关于ISO-2022-JP(-1)的说明?</target>
        </trans-unit>
        <trans-unit id="4950ea862c3beae92921259b5ea2a7679f983598" translate="yes" xml:space="preserve">
          <source>Note on Step 7: some operators have a different semantic depending on the type of their operands. As there is no way to instruct Perl to treat the operands as, e.g., numbers instead of strings, the result here may not be what you expect. See &lt;a href=&quot;#BUGS-AND-PITFALLS&quot;&gt;&quot;BUGS AND PITFALLS&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88ed054c638a5f7768e2dd282a5e1b35bab783a" translate="yes" xml:space="preserve">
          <source>Note on Step 7: some operators have a different semantic depending on the type of their operands. As there is no way to instruct Perl to treat the operands as, e.g., numbers instead of strings, the result here may not be what you expect. See &lt;a href=&quot;#BUGS-AND-PITFALLS&quot;&gt;BUGS AND PITFALLS&lt;/a&gt;.</source>
          <target state="translated">关于步骤7的注意事项：某些运算符的语义取决于操作数的类型。由于无法指示Perl将操作数视为例如数字而不是字符串，因此这里的结果可能不是您期望的。请参阅&amp;ldquo;错误&lt;a href=&quot;#BUGS-AND-PITFALLS&quot;&gt;和失败&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15bc1023efea2381a2db802c419cf3e98569e03f" translate="yes" xml:space="preserve">
          <source>Note on the format of the urllist parameter</source>
          <target state="translated">关于urllist参数格式的说明。</target>
        </trans-unit>
        <trans-unit id="cc738b8cb2fe5493887c63f096423e4e822a4785" translate="yes" xml:space="preserve">
          <source>Note particularly that $x continues to refer to the value passed into newprint()</source>
          <target state="translated">请特别注意,$x仍然是指传入newprint()的值。</target>
        </trans-unit>
        <trans-unit id="977ff75717e2ad5549c27c1fec3fb1a8727cd2e9" translate="yes" xml:space="preserve">
          <source>Note several important features of this example. First of all, the</source>
          <target state="translated">请注意这个例子的几个重要特点。首先,</target>
        </trans-unit>
        <trans-unit id="8d22a2ef918195af9fe48ae6fe3621002cfec585" translate="yes" xml:space="preserve">
          <source>Note specifically in the case that the list is already empty, &lt;code&gt;mark&lt;/code&gt; will equal &lt;code&gt;PL_stack_sp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e563f06c888e88271ecc5783df82aad24c908977" translate="yes" xml:space="preserve">
          <source>Note specifically that SV pointers on the value stack do not contribute to the overall reference count of the xVs being referred to. If newly-created xVs are being pushed to the stack you must arrange for them to be destroyed at a suitable time; usually by using one of the &lt;code&gt;mPUSH*&lt;/code&gt; macros or &lt;code&gt;sv_2mortal()&lt;/code&gt; to mortalise the xV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e506d24bb1d2d8c0953ced78837622f6175e3d" translate="yes" xml:space="preserve">
          <source>Note that &quot;&amp;lt;&amp;amp;STDIN&quot; makes a copy, but &quot;&amp;lt;&amp;amp;=STDIN&quot; makes an alias. That means if you close an aliased handle, all aliases become inaccessible. This is not true with a copied one.</source>
          <target state="translated">请注意，&amp;ldquo; &amp;lt;＆STDIN&amp;rdquo;进行复制，而&amp;ldquo; &amp;lt;＆= STDIN&amp;rdquo;进行别名。这意味着，如果关闭别名句柄，则所有别名都将无法访问。复制的副本不是这样。</target>
        </trans-unit>
        <trans-unit id="8b99f4b81966ee04ac35bb63df371e65272f50e3" translate="yes" xml:space="preserve">
          <source>Note that &quot;alpha&quot; version objects (where the version string contains a trailing underscore segment) compare as less than the equivalent version without an underscore:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760e35c71509b97a49875e6fc164a9d4be791312" translate="yes" xml:space="preserve">
          <source>Note that $x is still printed as having its true non-integer value of 5.8 since it wasn't operated on. And note too the wrap-around from the largest positive integer to the largest negative one. Also, arguments passed to functions and the values returned by them are &lt;b&gt;not&lt;/b&gt; affected by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; . E.g.,</source>
          <target state="translated">请注意，由于未操作$ x，因此其真实非整数值5.8仍被打印。还要注意从最大的正整数到最大的负整数的环绕。此外，参数传递给函数和由它们返回的值都&lt;b&gt;不会&lt;/b&gt;影响 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="d8269433400ad0b6edc5ad3382abffca519f241b" translate="yes" xml:space="preserve">
          <source>Note that $x is still printed as having its true non-integer value of 5.8 since it wasn't operated on. And note too the wrap-around from the largest positive integer to the largest negative one. Also, arguments passed to functions and the values returned by them are &lt;b&gt;not&lt;/b&gt; affected by &lt;code&gt;use integer;&lt;/code&gt;. E.g.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e599f385e86c967c815cb5ac633fbf5c8b743e32" translate="yes" xml:space="preserve">
          <source>Note that &amp;lt;FILE&amp;gt; is</source>
          <target state="translated">请注意，&amp;lt;FILE&amp;gt;是</target>
        </trans-unit>
        <trans-unit id="ae365970981ca6f4f0ae8ce0570b2cbd5480afa9" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#chop-VARIABLE&quot;&gt;&lt;code&gt;chop&lt;/code&gt;&lt;/a&gt; returns the last character. To return all but the last character, use &lt;code&gt;substr($string, 0, -1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4044113059cc30bd1d9822bf229d1fd6518f819" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; will not call your &lt;code&gt;END&lt;/code&gt; blocks, nor will it invoke &lt;code&gt;DESTROY&lt;/code&gt; methods on your objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9dcf768d88acd6e9245dc33c6d534334d98435" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#fcntl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt; raises an exception if used on a machine that doesn't implement &lt;a href=&quot;http://man.he.net/man2/fcntl&quot;&gt;fcntl(2)&lt;/a&gt;. See the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module or your &lt;a href=&quot;http://man.he.net/man2/fcntl&quot;&gt;fcntl(2)&lt;/a&gt; manpage to learn what functions are available on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac11071b2447bfeff67f1ad413aafb72592d54ad" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#glob-EXPR&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; splits its arguments on whitespace and treats each segment as separate pattern. As such, &lt;code&gt;glob(&quot;*.c *.h&quot;)&lt;/code&gt; matches all files with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2247c7b4f4b47f7aa53f8ef346d558c46baa5e4f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#make_iterator&quot;&gt;&quot;make_iterator&quot;&lt;/a&gt; has been</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28b0b3d67592306ce241a091fd7fa4b9b9390b5" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#make_iterator&quot;&gt;make_iterator&lt;/a&gt; has been</source>
          <target state="translated">请注意，&lt;a href=&quot;#make_iterator&quot;&gt;make_iterator&lt;/a&gt;已被</target>
        </trans-unit>
        <trans-unit id="d5449cbba5d5e7a82db88f55e4440d98e4342ea0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../dynaloader&quot;&gt;DynaLoader&lt;/a&gt; is a special case where it must call &lt;code&gt;boot_DynaLoader&lt;/code&gt; directly.</source>
          <target state="translated">请注意，&lt;a href=&quot;../dynaloader&quot;&gt;DynaLoader&lt;/a&gt;是一种特殊情况，它必须直接调用 &lt;code&gt;boot_DynaLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b80b3ef08be16efffcb210c1f8271336ce263029" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;dynaloader&quot;&gt;DynaLoader&lt;/a&gt; is a special case where it must call &lt;code&gt;boot_DynaLoader&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0526d5d85fc0534ff6f7d2f9105c957dadfacb23" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; is an alias to the list value, so it can be used to modify the elements of the LIST. While this is useful and supported, it can cause bizarre results if the elements of LIST are not variables. Similarly, grep returns aliases into the original list, much as a for loop's index variable aliases the list elements. That is, modifying an element of a list returned by grep (for example, in a &lt;code&gt;foreach&lt;/code&gt;, &lt;a href=&quot;#map-BLOCK-LIST&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; or another &lt;a href=&quot;#grep-BLOCK-LIST&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt;) actually modifies the element in the original list. This is usually something to be avoided when writing clear code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d74fe4c4d980bb13b58d3feb16b0acc19c76fd" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; is an alias to the list value, so it can be used to modify the elements of the LIST. While this is useful and supported, it can cause bizarre results if the elements of LIST are not variables. Using a regular &lt;code&gt;foreach&lt;/code&gt; loop for this purpose would be clearer in most cases. See also &lt;a href=&quot;#grep-BLOCK-LIST&quot;&gt;&lt;code&gt;grep&lt;/code&gt;&lt;/a&gt; for a list composed of those items of the original list for which the BLOCK or EXPR evaluates to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b414b3045e4a13e62684509b81beee13f1a03b" translate="yes" xml:space="preserve">
          <source>Note that &lt;b&gt;-S&lt;/b&gt; switch supports scripts with additional extensions</source>
          <target state="translated">请注意，&lt;b&gt;-S&lt;/b&gt;开关支持带有其他扩展名的脚本</target>
        </trans-unit>
        <trans-unit id="df5cabe56a3fab1a8dfd7142a90c482f8fae0efd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; has lower priority than relational operators, so for example the parentheses are essential in a test like</source>
          <target state="translated">请注意， &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; 优先级低于关系运算符，因此，例如在诸如</target>
        </trans-unit>
        <trans-unit id="6fb0ba015a70a1ecbbac6efb61ce95fa86c8c327" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&quot;ADFS::HardDisk.$.File&quot; ne 'ADFS::HardDisk.$.File'&lt;/code&gt; and that the second stage of &lt;code&gt;$&lt;/code&gt; interpolation in regular expressions will fall foul of the &lt;a href=&quot;perlvar#%24.&quot;&gt;&lt;code&gt;$.&lt;/code&gt;&lt;/a&gt; variable if scripts are not careful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522782427bfce1d8f14995dfc30aaa97199ffa5d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&quot;ADFS::HardDisk.$.File&quot; ne 'ADFS::HardDisk.$.File'&lt;/code&gt; and that the second stage of &lt;code&gt;$&lt;/code&gt; interpolation in regular expressions will fall foul of the &lt;code&gt;$.&lt;/code&gt; if scripts are not careful.</source>
          <target state="translated">注意 &lt;code&gt;&quot;ADFS::HardDisk.$.File&quot; ne 'ADFS::HardDisk.$.File'&lt;/code&gt; 并且正则表达式中 &lt;code&gt;$&lt;/code&gt; 插值的第二阶段将与$产生冲突 &lt;code&gt;$.&lt;/code&gt; 如果脚本不小心。</target>
        </trans-unit>
        <trans-unit id="12ecea42a6af74c63b7121532319090437ea634b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&quot;|&quot;&lt;/code&gt; and &lt;code&gt;&quot;^&quot;&lt;/code&gt; have lower priority than relational operators, so for example the parentheses are essential in a test like</source>
          <target state="translated">请注意， &lt;code&gt;&quot;|&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;^&quot;&lt;/code&gt; 优先级低于关系运算符，因此例如在测试中括号是必不可少的</target>
        </trans-unit>
        <trans-unit id="79eafdbed824b09455353e30518fbddb877197c5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$_&lt;/code&gt; is an alias to the list value, so it can be used to modify the elements of the LIST. While this is useful and supported, it can cause bizarre results if the elements of LIST are not variables. Similarly, grep returns aliases into the original list, much as a for loop's index variable aliases the list elements. That is, modifying an element of a list returned by grep (for example, in a &lt;code&gt;foreach&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; or another &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;) actually modifies the element in the original list. This is usually something to be avoided when writing clear code.</source>
          <target state="translated">请注意， &lt;code&gt;$_&lt;/code&gt; 是列表值的别名，因此可以用来修改LIST的元素。尽管这是有用且受支持的，但如果LIST的元素不是变量，则可能导致奇怪的结果。同样，grep将别名返回到原始列表中，就像for循环的索引变量为列表元素别名一样。也就是说，修改grep返回的列表的元素（例如，在 &lt;code&gt;foreach&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; 或另一个 &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 中）实际上会修改原始列表中的元素。在编写清晰的代码时通常应避免这种情况。</target>
        </trans-unit>
        <trans-unit id="922c04cd95d993e5139c2b97058698400e67f636" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$_&lt;/code&gt; is an alias to the list value, so it can be used to modify the elements of the LIST. While this is useful and supported, it can cause bizarre results if the elements of LIST are not variables. Similarly, grep returns aliases into the original list, much as a for loop's index variable aliases the list elements. That is, modifying an element of a list returned by grep (for example, in a &lt;code&gt;foreach&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; or another &lt;code&gt;&lt;a href=&quot;grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;) actually modifies the element in the original list. This is usually something to be avoided when writing clear code.</source>
          <target state="translated">请注意， &lt;code&gt;$_&lt;/code&gt; 是列表值的别名，因此可以用来修改LIST的元素。尽管这是有用且受支持的，但如果LIST的元素不是变量，则可能导致奇怪的结果。同样，grep将别名返回到原始列表中，就像for循环的索引变量为列表元素别名一样。也就是说，修改grep返回的列表的元素（例如，在 &lt;code&gt;foreach&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; 或另一个 &lt;code&gt;&lt;a href=&quot;grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 中）实际上会修改原始列表中的元素。在编写清晰的代码时通常应避免这种情况。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
