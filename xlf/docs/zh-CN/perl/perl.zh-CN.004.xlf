<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="6a4b270026fc2a66bf1429d325a9c5f91b820999" translate="yes" xml:space="preserve">
          <source>(W closed) The filehandle you're reading from got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W已关闭）您正在读取的文件句柄在某个时候之前已自身关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="9024fe0f51607b2265a19aadf35a4c761bd88088" translate="yes" xml:space="preserve">
          <source>(W closed) The filehandle you're writing to got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W已关闭）您正在编写的文件句柄在现在之前的某个时间已关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="cc80a0a86bde9f9811deb2b4047a08d7c517bb7e" translate="yes" xml:space="preserve">
          <source>(W closed) The socket you're sending to got itself closed sometime before now. Check your control flow.</source>
          <target state="translated">（W已关闭）您要发送的套接字在现在之前的某个时间已关闭。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="7aec4135b79438ad14c3a964c4630183be1a1b09" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a bind on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行绑定。您是否忘记检查socket（）调用的返回值？参见&lt;a href=&quot;functions/bind&quot;&gt;bind&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c182385a4029ec290eb443378ddba969658ef79" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a bind on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#bind&quot;&gt;&quot;bind&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行绑定。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;perlfunc#bind&quot;&gt;perlfunc中的&amp;ldquo; bind&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a483bc728ce89a356e49e93e25f177a39d0d0bd2" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a connect on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/connect&quot;&gt;connect&lt;/a&gt;.</source>
          <target state="translated">（W闭合）您试图在闭合的插座上进行连接。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;functions/connect&quot;&gt;连接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7fa342e3f8cf4aa7adcf62c9fcf1016406da423a" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a connect on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#connect&quot;&gt;&quot;connect&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W闭合）您试图在闭合的插座上进行连接。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;perlfunc#connect&quot;&gt;perlfunc中的&amp;ldquo;连接&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34608223004dc77e87fe9381938e96c7cf955ac4" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a listen on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/listen&quot;&gt;listen&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行监听。您是否忘记检查socket（）调用的返回值？看&lt;a href=&quot;functions/listen&quot;&gt;听&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e489b6a7aed7ecf31e032302a6848fcf950dd67" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a listen on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#listen&quot;&gt;&quot;listen&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在关闭的套接字上进行监听。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;perlfunc#listen&quot;&gt;perlfunc中的&amp;ldquo;听&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71ee5dae4e8472748b97847b021b00dd16e56c28" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do a shutdown on a closed socket. Seems a bit superfluous.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上执行关闭操作。似乎有点多余。</target>
        </trans-unit>
        <trans-unit id="b0a054724012ff7380cc3bd3fbabe4c0f3adab15" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do an accept on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/accept&quot;&gt;accept&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行接受。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;functions/accept&quot;&gt;接受&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7d75a460503da3530360bdc2a54ca0cd52c286a" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to do an accept on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#accept&quot;&gt;&quot;accept&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W封闭）您试图在封闭的套接字上进行接受。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;perlfunc#accept&quot;&gt;perlfunc中的&amp;ldquo; accept&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="686780402dcd5189e3de84bbbe7e8c3675a26cd5" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上获取套接字选项。您是否忘记检查socket（）调用的返回值？参见&lt;a href=&quot;functions/getsockopt&quot;&gt;getsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0767f5feb60728afb7dcc0b938d1d2420bdc90ee" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#getsockopt&quot;&gt;&quot;getsockopt&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上获取套接字选项。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;perlfunc#getsockopt&quot;&gt;perlfunc中的&amp;ldquo; getsockopt&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5f3fe4ba1c0a3fcc1fd82dbadf8c0a68a06899b" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to get a socket or peer socket name on a closed socket. Did you forget to check the return value of your socket() call?</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上获取套接字或对等套接字的名称。您是否忘记检查socket（）调用的返回值？</target>
        </trans-unit>
        <trans-unit id="9dd893f13813e0686f88d28dcaa995ea58eff6c6" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to read from a closed filehandle.</source>
          <target state="translated">（W已关闭）您尝试从关闭的文件句柄读取。</target>
        </trans-unit>
        <trans-unit id="b1bc9bc2878143204e9bd4f8c5b8ef8fc1a1d196" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to set a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上设置套接字选项。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;functions/setsockopt&quot;&gt;setsockopt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35e436938fc74d3430c8346b0f1154a9170d5347" translate="yes" xml:space="preserve">
          <source>(W closed) You tried to set a socket option on a closed socket. Did you forget to check the return value of your socket() call? See &lt;a href=&quot;perlfunc#setsockopt&quot;&gt;&quot;setsockopt&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W已关闭）您试图在已关闭的套接字上设置套接字选项。您是否忘记检查socket（）调用的返回值？请参阅&lt;a href=&quot;perlfunc#setsockopt&quot;&gt;perlfunc中的&amp;ldquo; setsockopt&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6691ea148e323c92640a7e1d8e12d6db9b140e15" translate="yes" xml:space="preserve">
          <source>(W closure) An inner (nested)</source>
          <target state="translated">（W闭合）内部（嵌套）</target>
        </trans-unit>
        <trans-unit id="ac28de0cbad4c4dfc31aa274d0d0826540c4608a" translate="yes" xml:space="preserve">
          <source>(W closure) During compilation, an inner named subroutine or eval is attempting to capture an outer lexical subroutine that is not currently available. This can happen for one of two reasons. First, the lexical subroutine may be declared in an outer anonymous subroutine that has not yet been created. (Remember that named subs are created at compile time, while anonymous subs are created at run-time.) For example,</source>
          <target state="translated">（W闭合）在编译期间，内部命名子例程或eval试图捕获当前不可用的外部词汇子例程。发生这种情况有两个原因之一。首先，可以在尚未创建的外部匿名子例程中声明词汇子例程。（请记住，命名子是在编译时创建的，而匿名子是在运行时创建的。）例如，</target>
        </trans-unit>
        <trans-unit id="65c019298a1444d38d91fcf17700dfd268f80742" translate="yes" xml:space="preserve">
          <source>(W closure) During compilation, an inner named subroutine or eval is attempting to capture an outer lexical that is not currently available. This can happen for one of two reasons. First, the outer lexical may be declared in an outer anonymous subroutine that has not yet been created. (Remember that named subs are created at compile time, while anonymous subs are created at run-time.) For example,</source>
          <target state="translated">（W闭合）在编译期间，内部命名子例程或eval试图捕获当前不可用的外部词汇。发生这种情况有两个原因之一。首先，可以在尚未创建的外部匿名子例程中声明外部词汇。（请记住，命名子是在编译时创建的，而匿名子是在运行时创建的。）例如，</target>
        </trans-unit>
        <trans-unit id="9b99fd281d6e3b0ca6d9cc6f78bf1f1eebea0030" translate="yes" xml:space="preserve">
          <source>(W digit) Here &lt;code&gt;%s&lt;/code&gt; is one of &quot;binary&quot;, &quot;octal&quot;, or &quot;hex&quot;. You may have tried to use a digit other than one that is legal for the given type, such as only 0 and 1 for binary. For octals, this is raised only if the illegal character is an '8' or '9'. For hex, 'A' - 'F' and 'a' - 'f' are legal. Interpretation of the number stopped just before the offending digit or character.</source>
          <target state="translated">（W位）此处 &lt;code&gt;%s&lt;/code&gt; 是&amp;ldquo;二进制&amp;rdquo;，&amp;ldquo;八进制&amp;rdquo;或&amp;ldquo;十六进制&amp;rdquo;之一。您可能已尝试使用对于给定类型合法的数字以外的其他数字，例如对于二进制仅使用0和1。对于八进制，仅当非法字符为'8'或'9'时才会引发此操作。对于十六进制，'A'-'F'和'a'-'f'是合法的。该数字的解释就在有问题的数字或字符之前停止了。</target>
        </trans-unit>
        <trans-unit id="aeb7a7a3fdadc4b5bcf1a03e2ede998a58cf8cca" translate="yes" xml:space="preserve">
          <source>(W digit) In parsing a hexadecimal numeric constant, a character was unexpectedly encountered that isn't hexadecimal. The resulting value is as indicated.</source>
          <target state="translated">（W位）在解析十六进制数字常量时，意外遇到了非十六进制字符。结果值如所示。</target>
        </trans-unit>
        <trans-unit id="f49f3db25d97d6915960909beefeac21238b6f2d" translate="yes" xml:space="preserve">
          <source>(W digit) In parsing an octal numeric constant, a character was unexpectedly encountered that isn't octal. The resulting value is as indicated.</source>
          <target state="translated">（W位）在解析八进制数字常量时，意外遇到了非八进制字符。结果值如所示。</target>
        </trans-unit>
        <trans-unit id="5e57358e7c1ec969e817e54f1e65d4d60ed6b951" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use a character other than 0 - 9 or A - F, a - f in a hexadecimal number. Interpretation of the hexadecimal number stopped before the illegal character.</source>
          <target state="translated">（W位）您可能尝试使用十六进制数字中的0-9或A-F，a-f以外的字符。十六进制数字的解释在非法字符之前停止。</target>
        </trans-unit>
        <trans-unit id="00a4e0b3bbab633922e651c73c2306c40de05654" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use a digit other than 0 or 1 in a binary number. Interpretation of the binary number stopped before the offending digit.</source>
          <target state="translated">（W位）您可能试图在二进制数字中使用0或1以外的数字。在有问题的数字之前停止解释二进制数字。</target>
        </trans-unit>
        <trans-unit id="84e6efe8b571226f1c56d898f3595c47df2fa3d9" translate="yes" xml:space="preserve">
          <source>(W digit) You may have tried to use an 8 or 9 in an octal number. Interpretation of the octal number stopped before the 8 or 9.</source>
          <target state="translated">（W位）您可能试图在八进制数字中使用8或9。八进制数字的解释在8或9之前停止。</target>
        </trans-unit>
        <trans-unit id="9fb9a032a154ac7b59a268710cf1949bc22fb256" translate="yes" xml:space="preserve">
          <source>(W exec) A system(), exec(), or piped open call could not execute the named program for the indicated reason. Typical reasons include: the permissions were wrong on the file, the file wasn't found in &lt;code&gt;$ENV{PATH}&lt;/code&gt; , the executable in question was compiled for another architecture, or the #! line in a script points to an interpreter that can't be run for similar reasons. (Or maybe your system doesn't support #! at all.)</source>
          <target state="translated">（W exec）由于指示的原因，system（），exec（）或管道打开调用无法执行指定的程序。典型的原因包括：文件权限错误，在 &lt;code&gt;$ENV{PATH}&lt;/code&gt; 找不到文件，有问题的可执行文件是为另一种体系结构编译的，或者是＃！脚本中的一行指向由于类似原因而无法运行的解释器。（或者您的系统根本不支持＃!。）</target>
        </trans-unit>
        <trans-unit id="3b86ef50e35cd205cf0587cbb4b8c068a6ecca60" translate="yes" xml:space="preserve">
          <source>(W exec) A system(), exec(), or piped open call could not execute the named program for the indicated reason. Typical reasons include: the permissions were wrong on the file, the file wasn't found in &lt;code&gt;$ENV{PATH}&lt;/code&gt;, the executable in question was compiled for another architecture, or the #! line in a script points to an interpreter that can't be run for similar reasons. (Or maybe your system doesn't support #! at all.)</source>
          <target state="translated">（W exec）由于指示的原因，system（），exec（）或管道打开调用无法执行指定的程序。典型的原因包括：文件权限错误，在 &lt;code&gt;$ENV{PATH}&lt;/code&gt; 找不到文件，有问题的可执行文件是为另一种体系结构编译的，或者是＃！脚本中的一行指向由于类似原因而无法运行的解释器。（或者您的系统根本不支持＃!。）</target>
        </trans-unit>
        <trans-unit id="40cf81f6b21e33cf0de9e73eab5064b147112369" translate="yes" xml:space="preserve">
          <source>(W exec) A warning peculiar to VMS. Waitpid() was asked to wait for a process which isn't a subprocess of the current process. While this is fine from VMS' perspective, it's probably not what you intended.</source>
          <target state="translated">（W执行）VMS特有的警告。Waitpid（）被要求等待一个不是当前进程的子进程的进程。从VMS的角度来看这很好，但这可能不是您想要的。</target>
        </trans-unit>
        <trans-unit id="0ee5ddf7eeab37551318e6033433b97f7d5d48d1" translate="yes" xml:space="preserve">
          <source>(W exec) You did an exec() with some statement after it other than a die(). This is almost always an error, because exec() never returns unless there was a failure. You probably wanted to use system() instead, which does return. To suppress this warning, put the exec() in a block by itself.</source>
          <target state="translated">（W exec）您执行了exec（），但之后执行了一条非die（）语句。这几乎总是一个错误，因为exec（）除非失败，否则从不返回。您可能想使用system（）代替，它会返回。为了消除此警告，请将exec（）单独放在一个块中。</target>
        </trans-unit>
        <trans-unit id="278e1a884eb3739698a7e8956cfbb36c8f5f87f4" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a format by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（正在退出）正在通过非常规方式（例如goto或循环控制语句）退出格式。</target>
        </trans-unit>
        <trans-unit id="67609a2a97401f2b99b78611043cd7f013a46fee" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a rather special block construct (like a sort block or subroutine) by unconventional means, such as a goto, or a loop control statement. See &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出一个相当特殊的块构造（如sort块或子例程）。参见&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b40b6b378e94e3e4cadc41efdaa751acbe0637e" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a rather special block construct (like a sort block or subroutine) by unconventional means, such as a goto, or a loop control statement. See &lt;a href=&quot;perlfunc#sort&quot;&gt;&quot;sort&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出一个相当特殊的块构造（如sort块或子例程）。请参阅&lt;a href=&quot;perlfunc#sort&quot;&gt;perlfunc中的&amp;ldquo; sort&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="423b0191e4cbf769af53341d336458806707caeb" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a subroutine by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出子例程。</target>
        </trans-unit>
        <trans-unit id="577ddf9c905e4347f8a9edb4c94bb3d05b393883" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting a substitution by unconventional means, such as a return, a goto, or a loop control statement.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如return，goto或循环控制语句）退出替换。</target>
        </trans-unit>
        <trans-unit id="635b5ef261a420bb3046d7f8e4b7a552abb9ebd2" translate="yes" xml:space="preserve">
          <source>(W exiting) You are exiting an eval by unconventional means, such as a goto, or a loop control statement.</source>
          <target state="translated">（W退出）您正在通过非常规方式（例如goto或循环控制语句）退出评估。</target>
        </trans-unit>
        <trans-unit id="61f27ff7875edb61784c966ef6d387cd6a2988db" translate="yes" xml:space="preserve">
          <source>(W illegalproto) A character follows % or @ in a prototype. This is useless, since % and @ gobble the rest of the subroutine arguments.</source>
          <target state="translated">（W invalidproto）原型中的字符后跟％或@。这是没有用的，因为％和@吞噬了其余子例程参数。</target>
        </trans-unit>
        <trans-unit id="c9ffd9aa561f3b86a313e40b450bfafd500921a5" translate="yes" xml:space="preserve">
          <source>(W illegalproto) A grouping was started with &lt;code&gt;[&lt;/code&gt; but never closed with &lt;code&gt;]&lt;/code&gt;.</source>
          <target state="translated">（W invalidproto）分组从 &lt;code&gt;[&lt;/code&gt; 开始，但从未以 &lt;code&gt;]&lt;/code&gt; 结尾。</target>
        </trans-unit>
        <trans-unit id="6112a30e9d70cd7305832f9bcd92076f9f034086" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. Legal characters in prototypes are $, @, %, *, ;, [, ], &amp;amp;, \, and +. Perhaps you were trying to write a subroutine signature but didn't enable that feature first (&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ), so your signature was instead interpreted as a bad prototype.</source>
          <target state="translated">（W invalidproto）在原型声明中发现一个非法字符。原型中的合法字符为$，@，％，*，;，[，]，＆，\和+。也许您试图编写子例程签名，但没有先启用该功能（ &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'signatures'&lt;/code&gt; ），所以您的签名被解释为错误的原型。</target>
        </trans-unit>
        <trans-unit id="e52bf0978448af6b58e107bc72b92c785c760bdf" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. Legal characters in prototypes are $, @, %, *, ;, [, ], &amp;amp;, \, and +. Perhaps you were trying to write a subroutine signature but didn't enable that feature first (&lt;code&gt;use feature 'signatures'&lt;/code&gt;), so your signature was instead interpreted as a bad prototype.</source>
          <target state="translated">（W invalidproto）在原型声明中发现一个非法字符。原型中的合法字符为$，@，％，*，;，[，]，＆，\和+。也许您试图编写一个子例程签名，但没有首先启用该功能（ &lt;code&gt;use feature 'signatures'&lt;/code&gt; ），所以您的签名被解释为错误的原型。</target>
        </trans-unit>
        <trans-unit id="1db9799c8c1e3509096b870feae3fbef0c02c544" translate="yes" xml:space="preserve">
          <source>(W illegalproto) An illegal character was found in a prototype declaration. The '_' in a prototype must be followed by a ';', indicating the rest of the parameters are optional, or one of '@' or '%', since those two will accept 0 or more final parameters.</source>
          <target state="translated">（W invalidproto）在原型声明中发现一个非法字符。原型中的&amp;ldquo; _&amp;rdquo;后必须跟一个&amp;ldquo;;&amp;rdquo;，表示其余参数是可选的，或者是&amp;ldquo; @&amp;rdquo;或&amp;ldquo;％&amp;rdquo;之一，因为这两个参数将接受0个或多个最终参数。</target>
        </trans-unit>
        <trans-unit id="0a696416880193fa00f2a4266f8a348d0d4dde88" translate="yes" xml:space="preserve">
          <source>(W imprecision) The value you attempted to increment or decrement by one is too large for the underlying floating point representation to store accurately, hence the target of &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; is unchanged. Perl issues this warning because it has already switched from integers to floating point when values are too large for integers, and now even floating point is insufficient. You may wish to switch to using &lt;a href=&quot;Math::BigInt&quot;&gt;Math::BigInt&lt;/a&gt; explicitly.</source>
          <target state="translated">（W不精确度）您尝试递增或递减1的值太大，以至于基础浮点表示形式无法准确存储，因此 &lt;code&gt;++&lt;/code&gt; 或 &lt;code&gt;--&lt;/code&gt; 的目标不变。Perl发出此警告的原因是，当值对于整数而言太大时，它已经从整数切换为浮点，现在甚至浮点数都不足够。您可能希望明确地使用&lt;a href=&quot;Math::BigInt&quot;&gt;Math :: BigInt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7fd43abca207918c5fc4cdbdfec0cb27e79feb6" translate="yes" xml:space="preserve">
          <source>(W imprecision) The value you attempted to increment or decrement by one is too large for the underlying floating point representation to store accurately, hence the target of &lt;code&gt;++&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt; is unchanged. Perl issues this warning because it has already switched from integers to floating point when values are too large for integers, and now even floating point is insufficient. You may wish to switch to using &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; explicitly.</source>
          <target state="translated">（W不精确度）您尝试递增或递减1的值太大，无法准确存储基础浮点表示形式，因此 &lt;code&gt;++&lt;/code&gt; 或 &lt;code&gt;--&lt;/code&gt; 的目标不变。Perl发出此警告的原因是，当值对于整数而言太大时，它已经从整数切换为浮点，并且现在甚至浮点都不足够。您可能希望明确地使用&lt;a href=&quot;math/bigint&quot;&gt;Math :: BigInt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0380d4e9c21d75260f15f61e0e8d75fffecf52b7" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. Perl tried to read a logical name or CLI symbol definition when preparing to iterate over %ENV, and didn't see the expected delimiter between key and value, so the line was ignored.</source>
          <target state="translated">（内部W）VMS特有的警告。当准备在％ENV上进行迭代时，Perl尝试读取逻辑名或CLI符号定义，并且没有看到键和值之间的预期分隔符，因此该行被忽略。</target>
        </trans-unit>
        <trans-unit id="e0b79079d3e5d0700f6c79112c4f181694c27e32" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. Perl tried to read the CRTL's internal environ array, and encountered an element without the &lt;code&gt;=&lt;/code&gt; delimiter used to separate keys from values. The element is ignored.</source>
          <target state="translated">（内部W）VMS特有的警告。Perl尝试读取CRTL的内部环境数组，并遇到一个没有 &lt;code&gt;=&lt;/code&gt; 分隔符的元素，该分隔符用于将键与值分开。元素被忽略。</target>
        </trans-unit>
        <trans-unit id="587287ad8ceaf64ab8230f7bcf5670e31503bcc1" translate="yes" xml:space="preserve">
          <source>(W internal) A warning peculiar to VMS. While Perl was preparing to iterate over %ENV, it encountered a logical name or symbol definition which was too long, so it was truncated to the string shown.</source>
          <target state="translated">（内部W）VMS特有的警告。当Perl准备迭代％ENV时，它遇到了一个逻辑名称或符号定义，该定义太长，因此将其截断为所示的字符串。</target>
        </trans-unit>
        <trans-unit id="36ebe0800de98cf6f1b5bf24a60713b3518a1d0b" translate="yes" xml:space="preserve">
          <source>(W internal) Warnings peculiar to VMS. You tried to change or delete an element of the CRTL's internal environ array, but your copy of Perl wasn't built with a CRTL that contained the setenv() function. You'll need to rebuild Perl with a CRTL that does, or redefine</source>
          <target state="translated">（内部W）VMS特有的警告。您试图更改或删除CRTL内部环境数组的元素，但是Perl副本不是使用包含setenv（）函数的CRTL构建的。您需要使用具有此功能的CRTL重建Perl或重新定义它</target>
        </trans-unit>
        <trans-unit id="ef225bf78a4ffd17a5bb6a41738bbeb914a98db0" translate="yes" xml:space="preserve">
          <source>(W io) A filehandle represents an opened file, and when you opened the file it already went past any symlink you are presumably trying to look for. The operation returned &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Use a filename instead.</source>
          <target state="translated">（W io）一个文件句柄代表一个打开的文件，当您打开该文件时，它已经超过了任何符号链接，可能是您要查找的符号链接。该操作返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。请改用文件名。</target>
        </trans-unit>
        <trans-unit id="d2da3ad1830577c29fb44eb869b1ca9384bf55d4" translate="yes" xml:space="preserve">
          <source>(W io) A filehandle represents an opened file, and when you opened the file it already went past any symlink you are presumably trying to look for. The operation returned &lt;code&gt;undef&lt;/code&gt;. Use a filename instead.</source>
          <target state="translated">（W io）一个文件句柄代表一个打开的文件，当您打开该文件时，它已经超出了任何符号链接的位置，可能是您要查找的符号链接。该操作返回 &lt;code&gt;undef&lt;/code&gt; 。请改用文件名。</target>
        </trans-unit>
        <trans-unit id="ee0ffa3b5e5e88aa061e31df24e098e285623887" translate="yes" xml:space="preserve">
          <source>(W io) A single call to write() produced more lines than can fit on a page. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（W io）一次调用write（）产生的行数超出了页面的容量。参见&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fae264d9cc122df4656cd9db14f53c587dced8a" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you are doing a seekdir() on is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您正在进行seekdir（）的操纵柄已关闭或不是真正的操纵柄。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="4e5653964bb3ce999ffdd1f023f2acfeb0cb1b2b" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to close is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您尝试关闭的把手是关闭的，或者不是真正的把手。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="127a04276c120f78beaffbfc2313d45b73d1b33b" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to do a rewinddir() on is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您尝试在其上执行rewinddir（）的方向盘已关闭或不是真正的方向盘。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="1d737035b8d4f24c62b1ff52cc5128d37b308243" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you tried to telldir() is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您尝试告诉telldir（）的dirhandle已关闭或不是真正的dirhandle。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="b257e2f649cabca0abfa99bff0088affded75975" translate="yes" xml:space="preserve">
          <source>(W io) The dirhandle you're reading from is either closed or not really a dirhandle. Check your control flow.</source>
          <target state="translated">（W io）您正在从中读取的操纵柄已关闭或不是真正的操纵柄。检查您的控制流程。</target>
        </trans-unit>
        <trans-unit id="cc52e3a1ee5048b6a45ffd6085a3f6b30e6d1327" translate="yes" xml:space="preserve">
          <source>(W io) You opened for reading a filehandle that got the same filehandle id as STDOUT or STDERR. This occurred because you closed STDOUT or STDERR previously.</source>
          <target state="translated">（打开）打开以读取与STDOUT或STDERR具有相同文件句柄ID的文件句柄。发生这种情况是因为您之前关闭了STDOUT或STDERR。</target>
        </trans-unit>
        <trans-unit id="16c9c24089f7631f92df6e520f74b47f2a676640" translate="yes" xml:space="preserve">
          <source>(W io) You opened for writing a filehandle that got the same filehandle id as STDIN. This occurred because you closed STDIN previously.</source>
          <target state="translated">（W io）您打开了一个文件句柄，该文件句柄具有与STDIN相同的文件句柄ID。这是因为您之前关闭了STDIN。</target>
        </trans-unit>
        <trans-unit id="48e33ef7ad3bda2c544d27c4a2b881dd4cce8a01" translate="yes" xml:space="preserve">
          <source>(W io) You tried to do an lstat on a filehandle. What did you mean by that? lstat() makes sense only on filenames. (Perl did a fstat() instead on the filehandle.)</source>
          <target state="translated">（W io）您试图在文件句柄上执行lstat。那是什么意思 lstat（）仅对文件名有意义。（Perl在文件句柄上执行了fstat（）。）</target>
        </trans-unit>
        <trans-unit id="324bb1ba42f01059dfedd40debd4b1a4374a4560" translate="yes" xml:space="preserve">
          <source>(W io) You tried to open a scalar reference for reading or writing, using the 3-arg open() syntax:</source>
          <target state="translated">（W io）您尝试使用3-arg open（）语法打开标量引用进行读取或写入：</target>
        </trans-unit>
        <trans-unit id="cd0af26043dd5c8a624dc3d3fd913fb0da71fce7" translate="yes" xml:space="preserve">
          <source>(W io) You tried to read from a filehandle opened only for writing, If you intended it to be a read/write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;gt;&quot;. If you intended only to read from the file, use &quot;&amp;lt;&quot;. See &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;. Another possibility is that you attempted to open filedescriptor 0 (also known as STDIN) for output (maybe you closed STDIN earlier?).</source>
          <target state="translated">（W io）您尝试从仅为写入而打开的文件句柄中进行读取，如果您希望将其作为读/写文件句柄，则需要使用&amp;ldquo; + &amp;lt;&amp;rdquo;或&amp;ldquo; +&amp;gt;&amp;rdquo;或&amp;ldquo; + &amp;gt;&amp;gt;&amp;rdquo;来打开它带有&amp;ldquo;&amp;gt;&amp;rdquo;。如果仅打算从文件中读取，请使用&amp;ldquo; &amp;lt;&amp;rdquo;。见&lt;a href=&quot;functions/open&quot;&gt;打开&lt;/a&gt;。另一种可能性是您试图打开文件描述符0（也称为STDIN）进行输出（也许您早些时候关闭了STDIN？）。</target>
        </trans-unit>
        <trans-unit id="26a86df58693ec2956cf4b78b4f1b98ee6ebb681" translate="yes" xml:space="preserve">
          <source>(W io) You tried to read from a filehandle opened only for writing, If you intended it to be a read/write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;gt;&quot;. If you intended only to read from the file, use &quot;&amp;lt;&quot;. See &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;. Another possibility is that you attempted to open filedescriptor 0 (also known as STDIN) for output (maybe you closed STDIN earlier?).</source>
          <target state="translated">（W io）您尝试从仅为写入而打开的文件句柄中进行读取，如果您希望将其作为读/写文件句柄，则需要使用&amp;ldquo; + &amp;lt;&amp;rdquo;或&amp;ldquo; +&amp;gt;&amp;rdquo;或&amp;ldquo; + &amp;gt;&amp;gt;&amp;rdquo;来打开它带有&amp;ldquo;&amp;gt;&amp;rdquo;。如果您仅打算从文件中读取，请使用&amp;ldquo; &amp;lt;&amp;rdquo;。请参阅&lt;a href=&quot;perlfunc#open&quot;&gt;perlfunc中的&amp;ldquo;打开&amp;rdquo;&lt;/a&gt;。另一种可能性是您试图打开文件描述符0（也称为STDIN）进行输出（也许您早些时候关闭了STDIN？）。</target>
        </trans-unit>
        <trans-unit id="8be59eeb719b1de30aae260c360f6b5c60cae180" translate="yes" xml:space="preserve">
          <source>(W io) You tried to write on a read-only filehandle. If you intended it to be a read-write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;lt;&quot; or nothing. If you intended only to write the file, use &quot;&amp;gt;&quot; or &quot;&amp;gt;&amp;gt;&quot;. See &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;.</source>
          <target state="translated">（W io）您试图在只读文件句柄上进行写操作。如果您打算将其用作读写文件句柄，则需要使用&amp;ldquo; + &amp;lt;&amp;rdquo;或&amp;ldquo; +&amp;gt;&amp;rdquo;或&amp;ldquo; + &amp;gt;&amp;gt;&amp;rdquo;而不是&amp;ldquo; &amp;lt;&amp;rdquo;或什么都不要打开它。如果仅打算写入文件，请使用&amp;ldquo;&amp;gt;&amp;rdquo;或&amp;ldquo; &amp;gt;&amp;gt;&amp;rdquo;。见&lt;a href=&quot;functions/open&quot;&gt;打开&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0ae7a7db65e1788bd003926fece059a687b8735" translate="yes" xml:space="preserve">
          <source>(W io) You tried to write on a read-only filehandle. If you intended it to be a read-write filehandle, you needed to open it with &quot;+&amp;lt;&quot; or &quot;+&amp;gt;&quot; or &quot;+&amp;gt;&amp;gt;&quot; instead of with &quot;&amp;lt;&quot; or nothing. If you intended only to write the file, use &quot;&amp;gt;&quot; or &quot;&amp;gt;&amp;gt;&quot;. See &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W io）您试图在只读文件句柄上进行写操作。如果您打算将其用作读写文件句柄，则需要使用&amp;ldquo; + &amp;lt;&amp;rdquo;或&amp;ldquo; +&amp;gt;&amp;rdquo;或&amp;ldquo; + &amp;gt;&amp;gt;&amp;rdquo;将其打开，而不要使用&amp;ldquo; &amp;lt;&amp;rdquo;或什么都不要打开。如果仅打算写入文件，请使用&amp;ldquo;&amp;gt;&amp;rdquo;或&amp;ldquo; &amp;gt;&amp;gt;&amp;rdquo;。请参阅&lt;a href=&quot;perlfunc#open&quot;&gt;perlfunc中的&amp;ldquo;打开&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="968ea45fb72fa2c7bd5bcdf03ea7400fdcd81829" translate="yes" xml:space="preserve">
          <source>(W layer) An attempt was made to push an unknown layer onto the Perl I/O system. (Layers take care of transforming data between external and internal representations.) Note that some layers, such as &lt;code&gt;mmap&lt;/code&gt; , are not supported in all environments. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（W层）尝试将未知层推入Perl I / O系统。（各层负责在外部表示和内部表示之间转换数据。）请注意，并非在所有环境中都支持某些层，例如 &lt;code&gt;mmap&lt;/code&gt; 。如果您的程序未明确请求失败的操作，则可能是环境变量PERLIO的值导致的。</target>
        </trans-unit>
        <trans-unit id="54d67ddc1b4d29d590c9b5ebbb632ab7cf7be879" translate="yes" xml:space="preserve">
          <source>(W layer) An attempt was made to push an unknown layer onto the Perl I/O system. (Layers take care of transforming data between external and internal representations.) Note that some layers, such as &lt;code&gt;mmap&lt;/code&gt;, are not supported in all environments. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（W层）尝试将未知层推入Perl I / O系统。（各层负责在外部表示和内部表示之间转换数据。）请注意，并非在所有环境中都支持某些层，例如 &lt;code&gt;mmap&lt;/code&gt; 。如果您的程序未明确请求失败的操作，则可能是环境变量PERLIO的值导致的。</target>
        </trans-unit>
        <trans-unit id="3c622eaff4edeef916a3a7c575dcd4f69353b85c" translate="yes" xml:space="preserve">
          <source>(W layer) When pushing a layer with arguments onto the Perl I/O system you forgot the ) that closes the argument list. (Layers take care of transforming data between external and internal representations.) Perl stopped parsing the layer list at this point and did not attempt to push this layer. If your program didn't explicitly request the failing operation, it may be the result of the value of the environment variable PERLIO.</source>
          <target state="translated">（W层）将带有参数的层推入Perl I / O系统时，您忘记了关闭参数列表的）。（各层负责在外部表示和内部表示之间转换数据。）Perl在这一点上停止了对层列表的解析，并且没有尝试推送该层。如果您的程序未明确请求失败的操作，则可能是环境变量PERLIO的值导致的。</target>
        </trans-unit>
        <trans-unit id="ecde0fdfd45c81bcf2a4145082dc4dd084cab4f1" translate="yes" xml:space="preserve">
          <source>(W layer) When pushing layers onto the Perl I/O system, something other than a colon or whitespace was seen between the elements of a layer list. If the previous attribute had a parenthesised parameter list, perhaps that list was terminated too soon.</source>
          <target state="translated">（W层）将层推入Perl I / O系统时，在层列表的元素之间看不到冒号或空格。如果先前的属性具有带括号的参数列表，则该列表可能终止得太早了。</target>
        </trans-unit>
        <trans-unit id="b99a80d131d19e28dda9041e25eeb2f1f73775f2" translate="yes" xml:space="preserve">
          <source>(W locale) While in a single-byte locale (</source>
          <target state="translated">（W语言环境）在单字节语言环境中（</target>
        </trans-unit>
        <trans-unit id="0d7aae5004e480ec270f51ea7824d1434b43e076" translate="yes" xml:space="preserve">
          <source>(W locale) You are 1) running under &quot;&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &quot;; 2) the current locale is not a UTF-8 one; 3) you tried to do the designated case-change operation on the specified Unicode character; and 4) the result of this operation would mix Unicode and locale rules, which likely conflict. Mixing of different rule types is forbidden, so the operation was not done; instead the result is the indicated value, which is the best available that uses entirely Unicode rules. That turns out to almost always be the original character, unchanged.</source>
          <target state="translated">（W语言环境）您是1）在&amp;ldquo; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &amp;rdquo; 下运行； 2）当前语言环境不是UTF-8。 3）您尝试对指定的Unicode字符执行指定的大小写更改操作；和4）此操作的结果将混合Unicode和区域设置规则，这可能会发生冲突。禁止混合使用不同的规则类型，因此操作未完成；相反，结果是指示值，这是完全使用Unicode规则的最佳值。原来几乎总是原始字符，没有变化。</target>
        </trans-unit>
        <trans-unit id="be916193296ba6f1abfb9d4a799698762333f1fa" translate="yes" xml:space="preserve">
          <source>(W locale) You are 1) running under &quot;&lt;code&gt;use locale&lt;/code&gt;&quot;; 2) the current locale is not a UTF-8 one; 3) you tried to do the designated case-change operation on the specified Unicode character; and 4) the result of this operation would mix Unicode and locale rules, which likely conflict. Mixing of different rule types is forbidden, so the operation was not done; instead the result is the indicated value, which is the best available that uses entirely Unicode rules. That turns out to almost always be the original character, unchanged.</source>
          <target state="translated">（W语言环境）您是1）在&amp;ldquo; &lt;code&gt;use locale&lt;/code&gt; &amp;rdquo;下运行； 2）当前的语言环境不是UTF-8。 3）您尝试对指定的Unicode字符执行指定的大小写更改操作；和4）此操作的结果将混合Unicode和区域设置规则，这可能会发生冲突。禁止混合使用不同的规则类型，因此未完成该操作；取而代之的是结果是指示值，这是完全使用Unicode规则的最佳值。事实证明，这几乎总是原始字符，没有变化。</target>
        </trans-unit>
        <trans-unit id="9445c5833b7363d2fe4ae697fde2f870ddf47e7a" translate="yes" xml:space="preserve">
          <source>(W locale) You are matching a regular expression using locale rules, and a Unicode boundary is being matched, but the locale is not a Unicode one. This doesn't make sense. Perl will continue, assuming a Unicode (UTF-8) locale, but the results could well be wrong except if the locale happens to be ISO-8859-1 (Latin1) where this message is spurious and can be ignored.</source>
          <target state="translated">（W语言环境）您正在使用语言环境规则匹配正则表达式，并且正在匹配Unicode边界，但是语言环境不是Unicode语言环境。这没有道理。Perl会继续使用Unicode（UTF-8）语言环境，但是结果可能会出错，除非该语言环境是ISO-8859-1（Latin1）（该消息是虚假的并且可以忽略）。</target>
        </trans-unit>
        <trans-unit id="1d45f88f1111394c6cdc41698876e92fbac17d26" translate="yes" xml:space="preserve">
          <source>(W locale) You are matching a regular expression using locale rules, and the specified construct was encountered. This construct is only valid for UTF-8 locales, which the current locale isn't. This doesn't make sense. Perl will continue, assuming a Unicode (UTF-8) locale, but the results are likely to be wrong.</source>
          <target state="translated">（W语言环境）您正在使用语言环境规则匹配正则表达式，并且遇到了指定的构造。此构造仅对UTF-8语言环境有效，而当前语言环境则无效。这没有道理。假设使用Unicode（UTF-8）语言环境，Perl将继续，但是结果可能是错误的。</target>
        </trans-unit>
        <trans-unit id="cdc76003f2a88a493fa96a9a2786d3a712bf03ee" translate="yes" xml:space="preserve">
          <source>(W locale) You are using the named UTF-8 locale. UTF-8 locales are expected to have very particular behavior, which most do. This message arises when perl found some departures from the expectations, and is notifying you that the expected behavior overrides these differences. In some cases the differences are caused by the locale definition being defective, but the most common causes of this warning are when there are ambiguities and conflicts in following the Standard, and the locale has chosen an approach that differs from Perl's.</source>
          <target state="translated">（W语言环境）您正在使用命名的UTF-8语言环境。 UTF-8语言环境应具有非常特殊的行为，大多数情况下都会如此。当perl发现期望值有所偏离时，会出现此消息，并通知您期望的行为会覆盖这些差异。在某些情况下，差异是由语言环境定义不正确引起的，但是，出现此警告的最常见原因是在遵循标准时存在歧义和冲突，并且语言环境选择了与Perl不同的方法。</target>
        </trans-unit>
        <trans-unit id="02905fbf32b02f6a8ace973ce43a92893403bf4f" translate="yes" xml:space="preserve">
          <source>(W locale) You are using the named locale, which is a non-UTF-8 one, and which perl has determined is not fully compatible with what it can handle. The second &lt;code&gt;%s&lt;/code&gt; gives a reason.</source>
          <target state="translated">（W语言环境）您使用的是命名语言环境，它是非UTF-8语言，并且perl确定与该语言不能完全兼容。第二个 &lt;code&gt;%s&lt;/code&gt; 给出了一个原因。</target>
        </trans-unit>
        <trans-unit id="30b58e17c41b99f616cb1685d4bbaf844b02ef96" translate="yes" xml:space="preserve">
          <source>(W locale) You used a locale category that perl doesn't recognize, so it cannot carry out your request. Check that you are using a valid category. If so, see &lt;a href=&quot;perllocale#Multi-threaded&quot;&gt;&quot;Multi-threaded&quot; in perllocale&lt;/a&gt; for advice on reporting this as a bug, and for modifying perl locally to accommodate your needs.</source>
          <target state="translated">（W语言环境）您使用了perl无法识别的语言环境类别，因此它无法执行您的请求。检查您使用的是有效类别。如果是这样，请参阅&lt;a href=&quot;perllocale#Multi-threaded&quot;&gt;perllocale中的&amp;ldquo;多线程&amp;rdquo;以获取&lt;/a&gt;有关将其报告为错误的建议，以及在本地修改perl以适应您的需求的建议。</target>
        </trans-unit>
        <trans-unit id="03a33e2bd2daeb7394c123da8d1823f81a6f6a4f" translate="yes" xml:space="preserve">
          <source>(W misc) A &quot;my&quot; or &quot;state&quot; subroutine has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier subroutine will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W misc）在当前作用域或语句中已重新声明了&amp;ldquo; my&amp;rdquo;或&amp;ldquo; state&amp;rdquo;子例程，从而有效地消除了对先前实例的所有访问。这几乎总是印刷错误。请注意，较早的子例程将一直存在，直到范围的结尾或对它的所有闭包引用都被销毁为止。</target>
        </trans-unit>
        <trans-unit id="bbd888a8b12a9c45d7e56a1c333e4c20223eff1c" translate="yes" xml:space="preserve">
          <source>(W misc) A &quot;my&quot;, &quot;our&quot; or &quot;state&quot; variable has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier variable will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W misc）在当前作用域或语句中已重新声明了&amp;ldquo;我的&amp;rdquo;，&amp;ldquo;我们的&amp;rdquo;或&amp;ldquo;状态&amp;rdquo;变量，有效地消除了对先前实例的所有访问。这几乎总是印刷错误。请注意，较早的变量将一直存在，直到范围的结尾或对它的所有闭包引用都被销毁为止。</target>
        </trans-unit>
        <trans-unit id="0a437454e4e59c0c63ef790ff1715aba9f133c24" translate="yes" xml:space="preserve">
          <source>(W misc) A number has been passed as a bitmask argument to select(). Use the vec() function to construct the file descriptor bitmasks for select. See &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;.</source>
          <target state="translated">（W misc）已将一个数字作为位掩码参数传递给select（）。使用vec（）函数构造用于选择的文件描述符位掩码。请参阅&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e58920f3c5056b2595ba9d4876478185d68fb2a7" translate="yes" xml:space="preserve">
          <source>(W misc) A number has been passed as a bitmask argument to select(). Use the vec() function to construct the file descriptor bitmasks for select. See &lt;a href=&quot;perlfunc#select&quot;&gt;&quot;select&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W misc）已将一个数字作为位掩码参数传递给select（）。使用vec（）函数构造用于选择的文件描述符位掩码。请参阅&lt;a href=&quot;perlfunc#select&quot;&gt;perlfunc中的&amp;ldquo;选择&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c94ce8244014ff24661c0ca75a55652169dcad2" translate="yes" xml:space="preserve">
          <source>(W misc) A sub was declared as sub foo : prototype(A) : prototype(B) {}, for example. Since each sub can only have one prototype, the earlier declaration(s) are discarded while the last one is applied.</source>
          <target state="translated">（W misc）例如，将一个sub声明为sub foo：prototype（A）：prototype（B）{}。由于每个子项只能有一个原型，因此，在应用最后一个声明时，将放弃较早的声明。</target>
        </trans-unit>
        <trans-unit id="217c15d1789f3525b24856092f3f9184fdbf896a" translate="yes" xml:space="preserve">
          <source>(W misc) A warning peculiar to VMS. Perl tried to read the value of an %ENV element from a CLI symbol table, and found a resultant string longer than 1024 characters. The return value has been truncated to 1024 characters.</source>
          <target state="translated">（错误）VMS特有的警告。Perl尝试从CLI符号表中读取％ENV元素的值，并发现结果字符串长于1024个字符。返回值已被截断为1024个字符。</target>
        </trans-unit>
        <trans-unit id="dd11fcb880f23ae872f44fc2e5336ede26ae40f1" translate="yes" xml:space="preserve">
          <source>(W misc) Although &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt; allows this, turning the lvalue attribute on or off on a Perl subroutine that is already defined does not always work properly. It may or may not do what you want, depending on what code is inside the subroutine, with exact details subject to change between Perl versions. Only do this if you really know what you are doing.</source>
          <target state="translated">（W misc）尽管&lt;a href=&quot;attributes&quot;&gt;attribute.pm&lt;/a&gt;允许这样做，但是在已定义的Perl子例程上打开或关闭lvalue属性并不总是可以正常工作。它可能会或可能不会执行您想要的操作，具体取决于子例程内的代码，具体细节可能会在Perl版本之间进行更改。仅当您真正知道自己在做什么时才这样做。</target>
        </trans-unit>
        <trans-unit id="0776898ec0630aa335d5aaa8eb564217544bbcdc" translate="yes" xml:space="preserve">
          <source>(W misc) An undefined value was assigned to a typeglob, a la &lt;code&gt;*foo = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . This does nothing. It's possible that you really mean &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; *foo&lt;/code&gt; .</source>
          <target state="translated">（W misc）未定义的值已分配给typeglob，即la &lt;code&gt;*foo = &lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。这什么也没做。您可能真的是说 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; *foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c865e69bc7cd2b4f8456acb18190cdbe8327bc8f" translate="yes" xml:space="preserve">
          <source>(W misc) An undefined value was assigned to a typeglob, a la &lt;code&gt;*foo = undef&lt;/code&gt;. This does nothing. It's possible that you really mean &lt;code&gt;undef *foo&lt;/code&gt;.</source>
          <target state="translated">（W misc）未定义的值已分配给typeglob，即la &lt;code&gt;*foo = undef&lt;/code&gt; 。这什么也没做。您可能真的是说 &lt;code&gt;undef *foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12437cd31e238da3b2ced4a2306fbe6e5acf5a48" translate="yes" xml:space="preserve">
          <source>(W misc) In a conditional expression, you used &amp;lt;HANDLE&amp;gt;, &amp;lt;*&amp;gt; (glob), &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; as a boolean value. Each of these constructs can return a value of &quot;0&quot;; that would make the conditional expression false, which is probably not what you intended. When using these constructs in conditional expressions, test their values with the &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">（W MISC）在条件表达式中，使用&amp;lt;HANDLE&amp;gt;，&amp;lt;*&amp;gt;（水珠）， &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; ，或 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; 为一个布尔值。这些构造中的每一个都可以返回值&amp;ldquo; 0&amp;rdquo;。这会使条件表达式为假，这可能不是您想要的。在条件表达式中使用这些构造时，请使用 &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; 运算符测试它们的值。</target>
        </trans-unit>
        <trans-unit id="501afb12981044c06cd7ef7909c762ec288cea69" translate="yes" xml:space="preserve">
          <source>(W misc) In a conditional expression, you used &amp;lt;HANDLE&amp;gt;, &amp;lt;*&amp;gt; (glob), &lt;code&gt;each()&lt;/code&gt;, or &lt;code&gt;readdir()&lt;/code&gt; as a boolean value. Each of these constructs can return a value of &quot;0&quot;; that would make the conditional expression false, which is probably not what you intended. When using these constructs in conditional expressions, test their values with the &lt;code&gt;defined&lt;/code&gt; operator.</source>
          <target state="translated">（W MISC）在条件表达式中，使用&amp;lt;HANDLE&amp;gt;，&amp;lt;*&amp;gt;（水珠）， &lt;code&gt;each()&lt;/code&gt; ，或 &lt;code&gt;readdir()&lt;/code&gt; 为一个布尔值。这些构造中的每一个都可以返回值&amp;ldquo; 0&amp;rdquo;。这会使条件表达式为假，这可能不是您想要的。在条件表达式中使用这些构造时，请使用 &lt;code&gt;defined&lt;/code&gt; 运算符测试它们的值。</target>
        </trans-unit>
        <trans-unit id="20059d974af22a8333d150a247e06378d470385d" translate="yes" xml:space="preserve">
          <source>(W misc) Remember that &quot;our&quot; does not localize the declared global variable. You have declared it again in the same lexical scope, which seems superfluous.</source>
          <target state="translated">（W misc）请记住，&amp;ldquo;我们的&amp;rdquo;不会本地化声明的全局变量。您已经在相同的词汇范围内再次声明了它，这似乎是多余的。</target>
        </trans-unit>
        <trans-unit id="5844b97950c2a1072e2ddb5f148dc77415c11973" translate="yes" xml:space="preserve">
          <source>(W misc) The &quot;const&quot; attribute has no effect except on anonymous closure prototypes. You applied it to a subroutine via &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;. This is only useful inside an attribute handler for an anonymous subroutine.</source>
          <target state="translated">（W misc）&amp;ldquo; const&amp;rdquo;属性仅对匿名闭包原型无效。您通过&lt;a href=&quot;attributes&quot;&gt;attribute.pm&lt;/a&gt;将其应用于子例程。这仅在匿名子例程的属性处理程序内部有用。</target>
        </trans-unit>
        <trans-unit id="e5321cecc859e99ecb159dbfe2a76823e102eaf8" translate="yes" xml:space="preserve">
          <source>(W misc) The &lt;code&gt;const&lt;/code&gt; attribute has no effect except on anonymous closure prototypes. You applied it to a subroutine via &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;. This is only useful inside an attribute handler for an anonymous subroutine.</source>
          <target state="translated">（W misc） &lt;code&gt;const&lt;/code&gt; 属性仅对匿名闭包原型无效。您通过&lt;a href=&quot;attributes&quot;&gt;attribute.pm&lt;/a&gt;将其应用于子例程。这仅在匿名子例程的属性处理程序内部有用。</target>
        </trans-unit>
        <trans-unit id="83ab71cdca9ba1d83ceb17577950410c9f6f3fff" translate="yes" xml:space="preserve">
          <source>(W misc) The pattern match (&lt;code&gt;//&lt;/code&gt; ), substitution (&lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;), and transliteration (&lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;) operators work on scalar values. If you apply one of them to an array or a hash, it will convert the array or hash to a scalar value (the length of an array, or the population info of a hash) and then work on that scalar value. This is probably not what you meant to do. See &lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt; and &lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt; for alternatives.</source>
          <target state="translated">（W misc）模式匹配（ &lt;code&gt;//&lt;/code&gt; ），替换（ &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ）和音译（ &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; ）运算符可处理标量值。如果将它们之一应用于数组或哈希，它将把数组或哈希转换为标量值（数组的长度或哈希的填充信息），然后对该标量值进行处理。这可能不是您的本意。请参阅&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;和&lt;a href=&quot;functions/map&quot;&gt;map&lt;/a&gt;以了解替代方法。</target>
        </trans-unit>
        <trans-unit id="ea8277f6fd9deda90e934a7b57d44f7e17900b36" translate="yes" xml:space="preserve">
          <source>(W misc) The pattern match (&lt;code&gt;//&lt;/code&gt;), substitution (&lt;code&gt;s///&lt;/code&gt;), and transliteration (&lt;code&gt;tr///&lt;/code&gt;) operators work on scalar values. If you apply one of them to an array or a hash, it will convert the array or hash to a scalar value (the length of an array, or the population info of a hash) and then work on that scalar value. This is probably not what you meant to do. See &lt;a href=&quot;perlfunc#grep&quot;&gt;&quot;grep&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#map&quot;&gt;&quot;map&quot; in perlfunc&lt;/a&gt; for alternatives.</source>
          <target state="translated">（W misc）模式匹配（ &lt;code&gt;//&lt;/code&gt; ），替换（ &lt;code&gt;s///&lt;/code&gt; ）和音译（ &lt;code&gt;tr///&lt;/code&gt; ）运算符可处理标量值。如果将其中之一应用于数组或哈希，它将把数组或哈希转换为标量值（数组的长度或哈希的填充信息），然后对该标量值进行处理。这可能不是您的本意。见&lt;a href=&quot;perlfunc#grep&quot;&gt;在perlfunc的&amp;ldquo;grep&amp;rdquo;&lt;/a&gt;，并&lt;a href=&quot;perlfunc#map&quot;&gt;在perlfunc&amp;ldquo;地图&amp;rdquo;&lt;/a&gt;的替代品。</target>
        </trans-unit>
        <trans-unit id="a6cb938b0a50f702bbe4e1a83af4f783e4f29b59" translate="yes" xml:space="preserve">
          <source>(W misc) The version string contains invalid characters at the end, which are being ignored.</source>
          <target state="translated">（W misc）版本字符串的末尾包含无效字符，这些字符将被忽略。</target>
        </trans-unit>
        <trans-unit id="1ac1e31d222cc4c0e5cec20c46a1416397109637" translate="yes" xml:space="preserve">
          <source>(W misc) This prefix usually indicates that a DESTROY() method raised the indicated exception. Since destructors are usually called by the system at arbitrary points during execution, and often a vast number of times, the warning is issued only once for any number of failures that would otherwise result in the same message being repeated.</source>
          <target state="translated">（W misc）此前缀通常指示DESTROY（）方法引发了所指示的异常。由于析构函数通常在执行过程中由系统在任意点调用，并且通常调用次数很多，因此，警告对于任何数量的失败仅发出一次，否则将导致重复同一条消息。</target>
        </trans-unit>
        <trans-unit id="5c525d33b2f6cbb2cbaccf27a61558723ac97f2a" translate="yes" xml:space="preserve">
          <source>(W misc) Using the &lt;code&gt;:lvalue&lt;/code&gt; declarative syntax to make a Perl subroutine an lvalue subroutine after it has been defined is not permitted. To make the subroutine an lvalue subroutine, add the lvalue attribute to the definition, or put the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;
foo :lvalue;&lt;/code&gt; declaration before the definition.</source>
          <target state="translated">（错误）不允许使用 &lt;code&gt;:lvalue&lt;/code&gt; 声明性语法将Perl子例程定义为lvalue子例程。要使子例程成为左值子例程，可将左值属性添加到定义中，或将 &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt; foo :lvalue;&lt;/code&gt; 添加到子例程中。在定义之前声明。</target>
        </trans-unit>
        <trans-unit id="978dd57f7188385e009beba975ac2a15bd2cdb90" translate="yes" xml:space="preserve">
          <source>(W misc) Using the &lt;code&gt;:lvalue&lt;/code&gt; declarative syntax to make a Perl subroutine an lvalue subroutine after it has been defined is not permitted. To make the subroutine an lvalue subroutine, add the lvalue attribute to the definition, or put the &lt;code&gt;sub foo :lvalue;&lt;/code&gt; declaration before the definition.</source>
          <target state="translated">（W misc）不允许使用 &lt;code&gt;:lvalue&lt;/code&gt; 声明性语法将Perl子例程定义为lvalue子例程。要使子例程成为左值子例程，可将左值属性添加到定义中，或将 &lt;code&gt;sub foo :lvalue;&lt;/code&gt; 添加到子例程foo中。在定义之前声明。</target>
        </trans-unit>
        <trans-unit id="d7bb17126e54088f85c3c0ce7c1c0e874c4e1d14" translate="yes" xml:space="preserve">
          <source>(W misc) You are blessing a reference to a zero length string. This has the effect of blessing the reference into the package main. This is usually not what you want. Consider providing a default target package, e.g. bless($ref, $p || 'MyPackage');</source>
          <target state="translated">（W杂项）您正在祝福对零长度字符串的引用。这具有将引用保佑到包主体中的作用。这通常不是您想要的。考虑提供默认的目标程序包，例如bless（$ ref，$ p ||'MyPackage'）;</target>
        </trans-unit>
        <trans-unit id="ed823eb758d423a401df73e799d2788b33feee1c" translate="yes" xml:space="preserve">
          <source>(W misc) You assigned to an lvalue subroutine, but what the subroutine returned was a temporary scalar about to be discarded, so the assignment had no effect.</source>
          <target state="translated">（W misc）您已分配了一个左值子例程，但是该子例程返回的是即将被丢弃的临时标量，因此该分配无效。</target>
        </trans-unit>
        <trans-unit id="9b9202be79ef7c790da62232dde7b953dc21d5a6" translate="yes" xml:space="preserve">
          <source>(W misc) You attempted to specify an offset that was past the end of the array passed to splice(). Splicing will instead commence at the end of the array, rather than past it. If this isn't what you want, try explicitly pre-extending the array by assigning $#array = $offset. See &lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;.</source>
          <target state="translated">（W misc）您试图指定一个偏移量，该偏移量超出了传递给splice（）的数组的末尾。拼接将改为在数组的末尾开始，而不是过去。如果这不是您想要的，请尝试通过分配$＃array = $ offset显式地预先扩展数组。参见&lt;a href=&quot;functions/splice&quot;&gt;拼接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6761f66b94b97d5a3830b77a974fe74b5a626781" translate="yes" xml:space="preserve">
          <source>(W misc) You attempted to specify an offset that was past the end of the array passed to splice(). Splicing will instead commence at the end of the array, rather than past it. If this isn't what you want, try explicitly pre-extending the array by assigning $#array = $offset. See &lt;a href=&quot;perlfunc#splice&quot;&gt;&quot;splice&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W misc）您试图指定一个偏移量，该偏移量超出了传递给splice（）的数组的末尾。拼接将改为从数组的末尾开始，而不是从数组末尾开始。如果这不是您想要的，请尝试通过分配$＃array = $ offset显式地预先扩展数组。请参阅&lt;a href=&quot;perlfunc#splice&quot;&gt;perlfunc中的&amp;ldquo;拼接&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e97344ac072c36fa30be5354dedbaf9a30a0a229" translate="yes" xml:space="preserve">
          <source>(W misc) You gave a single reference where Perl was expecting a list with an even number of elements (for assignment to a hash). This usually means that you used the anon hash constructor when you meant to use parens. In any case, a hash requires key/value &lt;b&gt;pairs&lt;/b&gt;.</source>
          <target state="translated">（W misc）您提供了一个参考，其中Perl期望一个具有偶数个元素的列表（用于分配给哈希）。这通常意味着您打算使用parens时使用了anon哈希构造函数。无论如何，散列都需要键/值&lt;b&gt;对&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="15abd042a39d9926d65656cbbe08be25424747c8" translate="yes" xml:space="preserve">
          <source>(W misc) You have a \E in a double-quotish string without a &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\Q&lt;/code&gt; preceding it.</source>
          <target state="translated">（W MISC）你有一个。\ E在双quotish字符串不包含 &lt;code&gt;\U&lt;/code&gt; ， &lt;code&gt;\L&lt;/code&gt; 或 &lt;code&gt;\Q&lt;/code&gt; 它前面。</target>
        </trans-unit>
        <trans-unit id="f5379ec83465aa4ba2da68c968c659bdcd28d6bb" translate="yes" xml:space="preserve">
          <source>(W misc) You have a \E in a double-quotish string without a &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt; or &lt;code&gt;\Q&lt;/code&gt; preceding it.</source>
          <target state="translated">（W MISC）你有一个。\ E在双quotish字符串不包含 &lt;code&gt;\U&lt;/code&gt; ， &lt;code&gt;\L&lt;/code&gt; 或 &lt;code&gt;\Q&lt;/code&gt; 它前面。</target>
        </trans-unit>
        <trans-unit id="a467f8075d38661a8a595bf55aef2227df75349f" translate="yes" xml:space="preserve">
          <source>(W misc) You have attempted to unweaken a reference that is not weak. Doing so has no effect.</source>
          <target state="translated">（W杂项）您试图取消不弱的引用。这样做没有效果。</target>
        </trans-unit>
        <trans-unit id="1c0eea9ec7a19fa6b579515762f1950808cc9b1d" translate="yes" xml:space="preserve">
          <source>(W misc) You have attempted to weaken a reference that is already weak. Doing so has no effect.</source>
          <target state="translated">（W misc）您试图削弱已经很弱的参照。这样做没有效果。</target>
        </trans-unit>
        <trans-unit id="f563a1cd3b0e654993413a90e34bfc8ab4511a9c" translate="yes" xml:space="preserve">
          <source>(W misc) You have used a replacement list that is longer than the search list. So the additional elements in the replacement list are meaningless.</source>
          <target state="translated">（其他）您使用的替换列表比搜索列表长。因此，替换列表中的其他元素毫无意义。</target>
        </trans-unit>
        <trans-unit id="055eeb5e67fd76f17bce2fa389beccc4d1c206eb" translate="yes" xml:space="preserve">
          <source>(W misc) You have used the /d modifier where the searchlist has the same length as the replacelist. See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more information about the /d modifier.</source>
          <target state="translated">（错误）您使用了/ d修饰符，其中搜索列表的长度与替换列表的长度相同。有关/ d修饰符的更多信息，请参见&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c43982d36144a2ffd4995fa369c53951ebca965" translate="yes" xml:space="preserve">
          <source>(W misc) You probably referred to an imported subroutine &amp;amp;FOO as $FOO or some such.</source>
          <target state="translated">（W misc）您可能将导入的子例程＆FOO称为$ FOO或诸如此类。</target>
        </trans-unit>
        <trans-unit id="f28afcc36fb6d498d08aa34ce83936dd22526785" translate="yes" xml:space="preserve">
          <source>(W misc) You seem to have already declared the same global once before in the current lexical scope.</source>
          <target state="translated">（W misc）您似乎已经在当前词法范围内声明了相同的全局变量。</target>
        </trans-unit>
        <trans-unit id="5868eba0d9d25b18fa7c2e6fe83826d858642827" translate="yes" xml:space="preserve">
          <source>(W misc) You specified an odd number of elements to initialize a hash, which is odd, because hashes come in key/value pairs.</source>
          <target state="translated">（W misc）您指定了奇数个元素来初始化哈希，这是奇数，因为哈希以键/值对的形式出现。</target>
        </trans-unit>
        <trans-unit id="324ba9d70516662c8b6bfbd8be1d30db767f254c" translate="yes" xml:space="preserve">
          <source>(W misc) You tried to set the length of an array which has been freed. You can do this by storing a reference to the scalar representing the last index of an array and later assigning through that reference. For example</source>
          <target state="translated">（W misc）您试图设置已释放的数组的长度。您可以通过存储对标量的引用来表示此操作，该引用代表数组的最后一个索引，然后通过该引用进行赋值。例如</target>
        </trans-unit>
        <trans-unit id="10e6703969c96e985c2f8be5cfdd7a5050eb6807" translate="yes" xml:space="preserve">
          <source>(W misc) You tried to use a reference as an array index; this probably isn't what you mean, because references in numerical context tend to be huge numbers, and so usually indicates programmer error.</source>
          <target state="translated">（W misc）您试图将引用用作数组索引；这可能不是您的意思，因为数字上下文中的引用往往是巨大的数字，因此通常表示程序员错误。</target>
        </trans-unit>
        <trans-unit id="f739dd0df71ad92bcb1d57bfeb314866eb972173" translate="yes" xml:space="preserve">
          <source>(W misc) You undefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;&quot;Constant Functions&quot; in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W misc）您未定义以前可以进行内联的子例程。有关注释和解决方法，请参见&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的&amp;ldquo;常量函数&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="961c127b9cc0ad4bd43847fe65d18cac036115ef" translate="yes" xml:space="preserve">
          <source>(W misc) You undefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W misc）您未定义以前可以进行内联的子例程。请参阅&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的常量函数以&lt;/a&gt;获取注释和解决方法。</target>
        </trans-unit>
        <trans-unit id="dfe717cbd021e5996741b199692d40604f2ddd47" translate="yes" xml:space="preserve">
          <source>(W misc) You used a backslash-character combination which is not recognized by Perl. The character was understood literally, but this may change in a future version of Perl.</source>
          <target state="translated">（W misc）您使用了Perl无法识别的反斜杠字符组合。从字面上理解了该字符，但是在Perl的将来版本中可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="2e717da40f4bea7168a3f5280e24fbfb5da1b933" translate="yes" xml:space="preserve">
          <source>(W misc) You used the obsolescent &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump()&lt;/a&gt;&lt;/code&gt; built-in function, without fully qualifying it as &lt;code&gt;CORE::dump()&lt;/code&gt; . Maybe it's a typo. See &lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;.</source>
          <target state="translated">（W misc）您使用了过时的 &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump()&lt;/a&gt;&lt;/code&gt; 内置函数，而没有完全将其限定为 &lt;code&gt;CORE::dump()&lt;/code&gt; 。也许是错字。参见&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0cd06fc5e07405e0a5250c8e4b98b249ba297bf" translate="yes" xml:space="preserve">
          <source>(W misc, regexp) You wrote something like &lt;code&gt;\08&lt;/code&gt; , or &lt;code&gt;\179&lt;/code&gt; in a double-quotish string. All but the last digit is treated as a single character, specified in octal. The last digit is the next character in the string. To tell Perl that this is indeed what you want, you can use the &lt;code&gt;\o{ }&lt;/code&gt; syntax, or use exactly three digits to specify the octal for the character.</source>
          <target state="translated">（W misc，regexp）您在双引号字符串中编写了 &lt;code&gt;\08&lt;/code&gt; 或 &lt;code&gt;\179&lt;/code&gt; 类的内容。除最后一位数字外，所有其他数字均视为一个字符，以八进制指定。最后一位数字是字符串中的下一个字符。要告诉Perl这确实是您想要的，可以使用 &lt;code&gt;\o{ }&lt;/code&gt; 语法，或者使用恰好三位数字来指定字符的八进制。</target>
        </trans-unit>
        <trans-unit id="d87808370647207cb23c26a494895bd593e19c4c" translate="yes" xml:space="preserve">
          <source>(W missing) You called a function with fewer arguments than other arguments you supplied indicated would be needed.</source>
          <target state="translated">（缺少W）您调用的函数所用参数要少于您提供的指示的其他参数。</target>
        </trans-unit>
        <trans-unit id="6e8560a7cea10e56b2966a8252b5c47858339b3b" translate="yes" xml:space="preserve">
          <source>(W newline) A file operation was attempted on a filename, and that operation failed, PROBABLY because the filename contained a newline, PROBABLY because you forgot to chomp() it off. See &lt;a href=&quot;functions/chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">（换行符W）尝试对文件名执行文件操作，但该操作失败，可能是因为文件名包含换行符，可能是PROBABLY，因为您忘记了将其砍掉。见&lt;a href=&quot;functions/chomp&quot;&gt;排骨&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e6f89715e8d89529ba2c8290b7087cd495b476d" translate="yes" xml:space="preserve">
          <source>(W newline) A file operation was attempted on a filename, and that operation failed, PROBABLY because the filename contained a newline, PROBABLY because you forgot to chomp() it off. See &lt;a href=&quot;perlfunc#chomp&quot;&gt;&quot;chomp&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W newline）尝试对文件名进行文件操作，但该操作失败，可能是因为文件名包含换行，可能是因为您忘记将chomp（）关闭了。请参阅&lt;a href=&quot;perlfunc#chomp&quot;&gt;perlfunc中的&amp;ldquo; chomp&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a309644b8190402a53564c85b006750e39463cd7" translate="yes" xml:space="preserve">
          <source>(W numeric) An alpha version can not be numified without losing information.</source>
          <target state="translated">（W数值）不丢失信息就无法对Alpha版本进行编号。</target>
        </trans-unit>
        <trans-unit id="ecad68c5be5ba7eb54444965792ee7f2c653a4e2" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to an operator that expected a numeric value instead. If you're fortunate the message will identify which operator was so unfortunate.</source>
          <target state="translated">（W数字）将指示的字符串作为参数提供给需要数字值的运算符。如果您很幸运，该消息将指出哪个操作员很不幸。</target>
        </trans-unit>
        <trans-unit id="ffa9508e53b0c92e963d1b02acbefd8a4acfe9fd" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to the &lt;code&gt;++&lt;/code&gt; operator which expects either a number or a string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; . See &lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;Auto-increment and Auto-decrement in perlop&lt;/a&gt; for details.</source>
          <target state="translated">（W数字）指示的字符串作为参数传递给 &lt;code&gt;++&lt;/code&gt; 运算符，该运算符期望数字或匹配 &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; 的字符串。有关详细信息，请参见&lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;perlop中的自动递增和自动递减&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="586f7b4b33f7a7eb73f47c3aa95d9b299b4dc778" translate="yes" xml:space="preserve">
          <source>(W numeric) The indicated string was fed as an argument to the &lt;code&gt;++&lt;/code&gt; operator which expects either a number or a string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt;. See &lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;&quot;Auto-increment and Auto-decrement&quot; in perlop&lt;/a&gt; for details.</source>
          <target state="translated">（W数字）指示的字符串作为参数传递给 &lt;code&gt;++&lt;/code&gt; 运算符，该运算符期望数字或匹配 &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; 的字符串。有关详细信息，请参见&lt;a href=&quot;perlop#Auto-increment-and-Auto-decrement&quot;&gt;perlop中的&amp;ldquo;自动递增和自动递减&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c37f9be9cf8f0cf03e306716c8c88d4b4aa40c39" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; repetition operator &lt;code&gt;Inf&lt;/code&gt; (or &lt;code&gt;-Inf&lt;/code&gt;) or &lt;code&gt;NaN&lt;/code&gt; times, which doesn't make sense.</source>
          <target state="translated">（W数字）您试图执行&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt;重复运算符 &lt;code&gt;Inf&lt;/code&gt; （或 &lt;code&gt;-Inf&lt;/code&gt; ）或 &lt;code&gt;NaN&lt;/code&gt; 次，这没有意义。</target>
        </trans-unit>
        <trans-unit id="1e307f1452017df6d8d52d1e75849cb6202b8562" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;&lt;code&gt;x&lt;/code&gt;&lt;/a&gt; repetition operator fewer than 0 times, which doesn't make sense.</source>
          <target state="translated">（W数字）您试图执行&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt; &lt;code&gt;x&lt;/code&gt; &lt;/a&gt;重复运算符少于0次，这没有意义。</target>
        </trans-unit>
        <trans-unit id="e747973f9086868d39efd9610fcbe587d13511fb" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x &lt;/a&gt; repetition operator &lt;code&gt;Inf&lt;/code&gt; (or &lt;code&gt;-Inf&lt;/code&gt; ) or &lt;code&gt;NaN&lt;/code&gt; times, which doesn't make sense.</source>
          <target state="translated">（W数字）您试图执行&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x&lt;/a&gt;重复运算符 &lt;code&gt;Inf&lt;/code&gt; （或 &lt;code&gt;-Inf&lt;/code&gt; ）或 &lt;code&gt;NaN&lt;/code&gt; 次，但这没有任何意义。</target>
        </trans-unit>
        <trans-unit id="df9ed2c03344d23e71c3f63e7cd7233301c17e01" translate="yes" xml:space="preserve">
          <source>(W numeric) You tried to execute the &lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x &lt;/a&gt; repetition operator fewer than 0 times, which doesn't make sense.</source>
          <target state="translated">（W数字）您试图执行&lt;a href=&quot;perlop#Multiplicative-Operators&quot;&gt;x&lt;/a&gt;重复运算符少于0次，这没有意义。</target>
        </trans-unit>
        <trans-unit id="979df2325920e52daaa8be14ea206eccde22447a" translate="yes" xml:space="preserve">
          <source>(W once) Typographical errors often show up as unique variable names. If you had a good reason for having a unique name, then just mention it again somehow to suppress the message. The &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration is also provided for this purpose.</source>
          <target state="translated">（一次W）印刷错误通常显示为唯一的变量名称。如果您有充分的理由拥有一个唯一的名称，则只需以某种方式再次提及它即可隐藏该消息。在 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 还提供用于此目的的声明。</target>
        </trans-unit>
        <trans-unit id="bb3ee992bffd8d0683e29ae27825063b750b7263" translate="yes" xml:space="preserve">
          <source>(W once) Typographical errors often show up as unique variable names. If you had a good reason for having a unique name, then just mention it again somehow to suppress the message. The &lt;code&gt;our&lt;/code&gt; declaration is also provided for this purpose.</source>
          <target state="translated">（一次W）印刷错误通常显示为唯一的变量名。如果您有充分的理由拥有一个唯一的名称，则只需以某种方式再次提及该名称即可隐藏该消息。在 &lt;code&gt;our&lt;/code&gt; 还提供用于此目的的声明。</target>
        </trans-unit>
        <trans-unit id="293cfd81dde512b2040983819ce42833b00e006e" translate="yes" xml:space="preserve">
          <source>(W overflow) Some portion of a version initialization is too large for the size of integers for your architecture. This is not a warning because there is no rational reason for a version to try and use an element larger than typically 2**32. This is usually caused by trying to use some odd mathematical operation as a version, like 100/9.</source>
          <target state="translated">（W溢出）对于您的体系结构，版本初始化的某些部分对于整数大小而言太大。这不是警告，因为没有合理的理由要求版本尝试使用大于2 ** 32的元素。这通常是由于尝试使用一些奇怪的数学运算作为版本（例如100/9）引起的。</target>
        </trans-unit>
        <trans-unit id="aa916c900301e3826afbb5c02eaae17fff9b2c9d" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point had internally more digits than could be output. This can be caused by unsupported long double formats, or by 64-bit integers not being available (needed to retrieve the digits under some configurations).</source>
          <target state="translated">（W溢出）十六进制浮点在内部具有比可以输出的位数更多的位数。这可能是由于不支持的长双精度格式或64位整数不可用（在某些配置下需要检索数字）引起的。</target>
        </trans-unit>
        <trans-unit id="138762264bdf623369c76bc48da2075b0cc318e5" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a larger exponent than the floating point supports.</source>
          <target state="translated">（W溢出）十六进制浮点的指数大于浮点支持的指数。</target>
        </trans-unit>
        <trans-unit id="7814ff9e669078b81e726ef3a3f6f5a884ba7aa0" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a smaller exponent than the floating point supports.</source>
          <target state="translated">（W溢出）十六进制浮点的指数小于浮点支持的指数。</target>
        </trans-unit>
        <trans-unit id="4f49472f844faea1f47f1bc6b1c6edd0b363a63b" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point has a smaller exponent than the floating point supports. With the IEEE 754 floating point, this may also mean that the subnormals (formerly known as denormals) are being used, which may or may not be an error.</source>
          <target state="translated">（W溢出）十六进制浮点的指数小于浮点支持的指数。对于IEEE 754浮点数，这也可能意味着正在使用次正态（以前称为非正态），这可能是错误，也可能不是错误。</target>
        </trans-unit>
        <trans-unit id="ffaf16a18b1f69a006ca7d0cf534ff6517d8ea76" translate="yes" xml:space="preserve">
          <source>(W overflow) The hexadecimal floating point literal had more bits in the mantissa (the part between the 0x and the exponent, also known as the fraction or the significand) than the floating point supports.</source>
          <target state="translated">（W溢出）十六进制浮点文字的尾数（0x和指数之间的部分，也称为分数或有效位数）比浮点支持的位数更多。</target>
        </trans-unit>
        <trans-unit id="afbfa3b5e713c7cfd0fd6a0d70917f864ae78219" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（W溢出）您用无法处理的数字调用 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; ：太大，太小或NaN。返回值是 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d036704b2cebe975d7e914b35acf789231af606" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（W溢出）您用一个大于它可以可靠处理的数字的值调用了 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; ，并且 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。NaN（特殊的非数字值）也会触发此警告。</target>
        </trans-unit>
        <trans-unit id="0a311f99c2c8b02930306682b9959eb1c20599da" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（W溢出）您用一个小于可以可靠处理的数字调用 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。</target>
        </trans-unit>
        <trans-unit id="36f5779623dfa6f6e7074bdae41e1e41b89f241a" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（W溢出）您用无法处理的数字呼叫了 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; ：太大，太小或NaN。返回值是 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59105a430199971f3675bfeb1fffaf7e49ff1f30" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（W溢出）您给 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 打电话的号码大于它可以可靠处理的数字， &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。NaN（特殊的非数字值）也会触发此警告。</target>
        </trans-unit>
        <trans-unit id="a93e07bf0c0bd6b674d691a637cbeb2110ed1a3d" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（W溢出）您以小于可以可靠处理的数字呼叫 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 可能返回了错误的日期。</target>
        </trans-unit>
        <trans-unit id="5aa4610ff7a25c878af96eaca3bd3d08a52b4d72" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; probably slept for less time than requested.</source>
          <target state="translated">（W溢出）您用一个大于其可以可靠处理的数字的值来调用 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; ，并且 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 时间可能比请求的时间少。</target>
        </trans-unit>
        <trans-unit id="2b7ab1891088a8322093f03fdbf6e0c72b772149" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;gmtime&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">（W溢出）您用无法处理的数字调用 &lt;code&gt;gmtime&lt;/code&gt; ：太大，太小或NaN。返回值是 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a4120ee25ae2afbb469b3700d99e2585fd342c4" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;gmtime&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;gmtime&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（W溢出）您用一个大于它可以可靠处理的数字的值调用了 &lt;code&gt;gmtime&lt;/code&gt; ，并且 &lt;code&gt;gmtime&lt;/code&gt; 可能返回了错误的日期。NaN（特殊的非数字值）也会触发此警告。</target>
        </trans-unit>
        <trans-unit id="a9c61e684dd33adf39b1df1c97260428987b3290" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;gmtime&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;gmtime&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（W溢出）您用小于它可以可靠处理的数字的值调用了 &lt;code&gt;gmtime&lt;/code&gt; ，并且 &lt;code&gt;gmtime&lt;/code&gt; 可能返回了错误的日期。</target>
        </trans-unit>
        <trans-unit id="34ae715467aecc0bd7496ea4ae92702c0c0d4eb3" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;localtime&lt;/code&gt; with a number that it could not handle: too large, too small, or NaN. The returned value is &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">（W溢出）您用无法处理的数字呼叫了 &lt;code&gt;localtime&lt;/code&gt; ：太大，太小或NaN。返回值是 &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b04a9b14d2a3ce481d67aebafaf3e179c55f5f24" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;localtime&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;localtime&lt;/code&gt; probably returned the wrong date. This warning is also triggered with NaN (the special not-a-number value).</source>
          <target state="translated">（W溢出）您给 &lt;code&gt;localtime&lt;/code&gt; 打电话的号码大于它可以可靠处理的数字， &lt;code&gt;localtime&lt;/code&gt; 可能返回了错误的日期。NaN（特殊的非数字值）也会触发此警告。</target>
        </trans-unit>
        <trans-unit id="5341b9595deb413aa636e268b7188996a07a564e" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;localtime&lt;/code&gt; with a number that was smaller than it can reliably handle and &lt;code&gt;localtime&lt;/code&gt; probably returned the wrong date.</source>
          <target state="translated">（W溢出）您以小于可以可靠处理的数字呼叫 &lt;code&gt;localtime&lt;/code&gt; ， &lt;code&gt;localtime&lt;/code&gt; 可能返回了错误的日期。</target>
        </trans-unit>
        <trans-unit id="4832e59a807f8103488238c9024a468acfff2a96" translate="yes" xml:space="preserve">
          <source>(W overflow) You called &lt;code&gt;sleep&lt;/code&gt; with a number that was larger than it can reliably handle and &lt;code&gt;sleep&lt;/code&gt; probably slept for less time than requested.</source>
          <target state="translated">（W溢出）您用大于其可以可靠处理的数字的值来调用 &lt;code&gt;sleep&lt;/code&gt; ，并且 &lt;code&gt;sleep&lt;/code&gt; 时间可能少于请求的时间。</target>
        </trans-unit>
        <trans-unit id="d9fd3dde1b871c801c860d8a346caace3870778c" translate="yes" xml:space="preserve">
          <source>(W overload) The &lt;a href=&quot;overload&quot;&gt;overload&lt;/a&gt; pragma was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W重载）&lt;a href=&quot;overload&quot;&gt;重载&lt;/a&gt;编译指示传递了一个它无法识别的参数。您是否输错了运算符？</target>
        </trans-unit>
        <trans-unit id="e826b5fc0dae7ccc313c75bbbc79a59aff89f566" translate="yes" xml:space="preserve">
          <source>(W overload) The call to overload::constant contained an odd number of arguments. The arguments should come in pairs.</source>
          <target state="translated">（W重载）对重载::常量的调用包含奇数个参数。参数应成对出现。</target>
        </trans-unit>
        <trans-unit id="be93031fb1c1fd2693de7b970bf1f347826973be" translate="yes" xml:space="preserve">
          <source>(W overload) The second (fourth, sixth, ...) argument of overload::constant needs to be a code reference. Either an anonymous subroutine, or a reference to a subroutine.</source>
          <target state="translated">（W重载）重载::: constant的第二（第四，第六，...）参数需要作为代码引用。匿名子例程或对子例程的引用。</target>
        </trans-unit>
        <trans-unit id="bb652dad5fd63516cc2d111645fd00a245f45570" translate="yes" xml:space="preserve">
          <source>(W overload) You tried to overload a constant type the overload package is unaware of.</source>
          <target state="translated">（W重载）您试图重载过载包未意识到的常量类型。</target>
        </trans-unit>
        <trans-unit id="cdc892f77860c2fc237ce50d76efd0c8dceb00a4" translate="yes" xml:space="preserve">
          <source>(W pack) Each line in an uuencoded string starts with a length indicator which can't encode values above 63. So there is no point in asking for a line length bigger than that. Perl will behave as if you specified &lt;code&gt;u63&lt;/code&gt; as the format.</source>
          <target state="translated">（W pack）uuencoded字符串中的每一行都以一个长度指示符开头，该长度指示符不能对63以上的值进行编码。因此，要求行长度大于该长度是没有意义的。Perl的行为就像您将 &lt;code&gt;u63&lt;/code&gt; 指定为格式一样。</target>
        </trans-unit>
        <trans-unit id="eb6f8e362bfe003b879f383a4c911b9a8c85c57c" translate="yes" xml:space="preserve">
          <source>(W pack) You said</source>
          <target state="translated">（W pack）你说</target>
        </trans-unit>
        <trans-unit id="6a2168c56cd322bfb883a2fd9dbaf886812e847c" translate="yes" xml:space="preserve">
          <source>(W pack) You tried something like</source>
          <target state="translated">（W pack）您尝试过类似</target>
        </trans-unit>
        <trans-unit id="331cf753fae1a080c528f36a302470f474fb3136" translate="yes" xml:space="preserve">
          <source>(W pack) You tried to pass a temporary value (like the result of a function, or a computed expression) to the &quot;p&quot; pack() template. This means the result contains a pointer to a location that could become invalid anytime, even before the end of the current statement. Use literals or global values as arguments to the &quot;p&quot; pack() template to avoid this warning.</source>
          <target state="translated">（W pack）您试图将临时值（例如函数的结果或计算表达式）传递给&amp;ldquo; p&amp;rdquo; pack（）模板。这意味着结果包含一个指向可能随时变为无效的位置的指针，甚至在当前语句结束之前也是如此。使用文字或全局值作为&amp;ldquo; p&amp;rdquo; pack（）模板的参数，以避免出现此警告。</target>
        </trans-unit>
        <trans-unit id="512f02482767bcddc779471eaf5fc084e966f52c" translate="yes" xml:space="preserve">
          <source>(W parenthesis) You said something like</source>
          <target state="translated">（W括号）您说过类似</target>
        </trans-unit>
        <trans-unit id="ede1f656195c84e1f48728c83c4610d04755c430" translate="yes" xml:space="preserve">
          <source>(W pipe) A fork in a piped open failed with EAGAIN and will be retried after five seconds.</source>
          <target state="translated">（W管道）叉状开口叉因EAGAIN失败，将在五秒钟后重试。</target>
        </trans-unit>
        <trans-unit id="b5a7c11775d339fb6b5d17e9b9676b5723086198" translate="yes" xml:space="preserve">
          <source>(W pipe) You tried to say &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(CMD, &quot;|cmd|&quot;)&lt;/code&gt; , which is not supported. You can try any of several modules in the Perl library to do this, such as IPC::Open2. Alternately, direct the pipe's output to a file using &quot;&amp;gt;&quot;, and then read it in under a different file handle.</source>
          <target state="translated">（W管道）您试图说不支持 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(CMD, &quot;|cmd|&quot;)&lt;/code&gt; 。您可以尝试Perl库中的几个模块中的任何一个来执行此操作，例如IPC :: Open2。或者，使用&amp;ldquo;&amp;gt;&amp;rdquo;将管道的输出定向到文件，然后在其他文件句柄下读取它。</target>
        </trans-unit>
        <trans-unit id="19c768ef2795c654e49f763fa1951faf32c04ff6" translate="yes" xml:space="preserve">
          <source>(W pipe) You tried to say &lt;code&gt;open(CMD, &quot;|cmd|&quot;)&lt;/code&gt;, which is not supported. You can try any of several modules in the Perl library to do this, such as IPC::Open2. Alternately, direct the pipe's output to a file using &quot;&amp;gt;&quot;, and then read it in under a different file handle.</source>
          <target state="translated">（W管道）您尝试说不支持 &lt;code&gt;open(CMD, &quot;|cmd|&quot;)&lt;/code&gt; 。您可以尝试Perl库中的几个模块中的任何一个来执行此操作，例如IPC :: Open2。或者，使用&amp;ldquo;&amp;gt;&amp;rdquo;将管道的输出定向到文件，然后在其他文件句柄下读取它。</target>
        </trans-unit>
        <trans-unit id="b9cd44d6f9338e432eca0100ebb8cf99a11652fc" translate="yes" xml:space="preserve">
          <source>(W pipe) You used the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;| command&quot;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;command |&quot;)&lt;/code&gt; construction, but the command was missing or blank.</source>
          <target state="translated">（W管道）您使用了 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;| command&quot;)&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(FH, &quot;command |&quot;)&lt;/code&gt; 构造，但是该命令丢失或为空。</target>
        </trans-unit>
        <trans-unit id="687344f3aa731bf1d9d404caec4abbd832cb105d" translate="yes" xml:space="preserve">
          <source>(W pipe) You used the &lt;code&gt;open(FH, &quot;| command&quot;)&lt;/code&gt; or &lt;code&gt;open(FH, &quot;command |&quot;)&lt;/code&gt; construction, but the command was missing or blank.</source>
          <target state="translated">（W管道）您使用了 &lt;code&gt;open(FH, &quot;| command&quot;)&lt;/code&gt; 或 &lt;code&gt;open(FH, &quot;command |&quot;)&lt;/code&gt; 构造，但是该命令丢失或为空。</target>
        </trans-unit>
        <trans-unit id="33a8500596670f4af1c72a4fafc0180e0691f8b6" translate="yes" xml:space="preserve">
          <source>(W portable) The binary number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（W便携式）您指定的二进制数大于2 ** 32-1（4294967295），因此在系统之间不可移植。有关&lt;a href=&quot;perlport&quot;&gt;可移植性&lt;/a&gt;的更多信息，请参见perlport。</target>
        </trans-unit>
        <trans-unit id="09d1165dcd6590ca88ce45235db739b3730780ae" translate="yes" xml:space="preserve">
          <source>(W portable) The hexadecimal number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（W便携式）您指定的十六进制数大于2 ** 32-1（4294967295），因此在系统之间不可移植。有关&lt;a href=&quot;perlport&quot;&gt;可移植性&lt;/a&gt;的更多信息，请参见perlport。</target>
        </trans-unit>
        <trans-unit id="fc835297f2faad908ec35d66fe96ac88817ca399" translate="yes" xml:space="preserve">
          <source>(W portable) The octal number you specified is larger than 2**32-1 (4294967295) and therefore non-portable between systems. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; for more on portability concerns.</source>
          <target state="translated">（W便携式）您指定的八进制数字大于2 ** 32-1（4294967295），因此在系统之间不可移植。有关&lt;a href=&quot;perlport&quot;&gt;可移植性&lt;/a&gt;的更多信息，请参见perlport。</target>
        </trans-unit>
        <trans-unit id="64214d18f45799923abe2fb1d80cfb4e5a157cf3" translate="yes" xml:space="preserve">
          <source>(W portable) Using bit vector sizes larger than 32 is non-portable.</source>
          <target state="translated">（W便携式）使用大于32的位向量大小是不可移植的。</target>
        </trans-unit>
        <trans-unit id="d926270be302be5e7e03299af7637591efa9d859" translate="yes" xml:space="preserve">
          <source>(W precedence) Your program uses a bitwise logical operator in conjunction with a numeric comparison operator, like this :</source>
          <target state="translated">（W优先级）您的程序将按位逻辑运算符与数字比较运算符结合使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="792bff25d5afceb382dc5952aa4d3237868dca22" translate="yes" xml:space="preserve">
          <source>(W printf) Perl does not understand the given format conversion. See &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">（W printf）Perl不了解给定的格式转换。参见&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6d81bdc34e54445c201e18a346e2f9e257b60b8" translate="yes" xml:space="preserve">
          <source>(W printf) Perl does not understand the given format conversion. See &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W printf）Perl不了解给定的格式转换。请参阅&lt;a href=&quot;perlfunc#sprintf&quot;&gt;perlfunc中的&amp;ldquo; sprintf&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c27ac7b8639b06bd0fbaa78cd260cb1fd460614" translate="yes" xml:space="preserve">
          <source>(W prototype) A prototype was declared in both the parentheses after the sub name and via the prototype attribute. The prototype in parentheses is useless, since it will be replaced by the prototype from the attribute before it's ever used.</source>
          <target state="translated">（W原型）在子名称后的括号中以及通过prototype属性声明了一个原型。括号中的原型是无用的，因为它将在使用之前被属性中的原型替换。</target>
        </trans-unit>
        <trans-unit id="33b95571f8339a2cc0606dafed862a4db48c3be9" translate="yes" xml:space="preserve">
          <source>(W prototype) You've called a function that has a prototype before the parser saw a definition or declaration for it, and Perl could not check that the call conforms to the prototype. You need to either add an early prototype declaration for the subroutine in question, or move the subroutine definition ahead of the call to get proper prototype checking. Alternatively, if you are certain that you're calling the function correctly, you may put an ampersand before the name to avoid the warning. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">（W原型）您已经在解析器看到其定义或声明之前调用了具有原型的函数，并且Perl无法检查该调用是否符合该原型。您需要为有问题的子例程添加早期原型声明，或者将子例程定义移至调用之前以进行正确的原型检查。另外，如果确定正确调用了该函数，则可以在名称前加上一个＆符号，以避免出现警告。参见&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edd018a5f62f70fa66e12afd9da66c3f02d8c926" translate="yes" xml:space="preserve">
          <source>(W qw) qw() lists contain items separated by whitespace; as with literal strings, comment characters are not ignored, but are instead treated as literal data. (You may have used different delimiters than the parentheses shown here; braces are also frequently used.)</source>
          <target state="translated">（W qw）qw（）列表包含用空格分隔的项目；与文字字符串一样，不会忽略注释字符，而是将其视为文字数据。（您可能使用了与此处显示的括号不同的定界符；也经常使用大括号。）</target>
        </trans-unit>
        <trans-unit id="578fcce7799c47789b0adac33008237c84ca3a49" translate="yes" xml:space="preserve">
          <source>(W qw) qw() lists contain items separated by whitespace; therefore commas aren't needed to separate the items. (You may have used different delimiters than the parentheses shown here; braces are also frequently used.)</source>
          <target state="translated">（W qw）qw（）列表包含用空格分隔的项目；因此，不需要用逗号分隔项目。（您可能使用了与此处显示的括号不同的定界符；也经常使用大括号。）</target>
        </trans-unit>
        <trans-unit id="f98cb1c68560387dbc563580499439d4e545c148" translate="yes" xml:space="preserve">
          <source>(W recursion) This subroutine has called itself (directly or indirectly) 100 times more than it has returned. This probably indicates an infinite recursion, unless you're writing strange benchmark programs, in which case it indicates something else.</source>
          <target state="translated">（W递归）此子例程自身（直接或间接）的调用次数比返回的次数多100倍。除非您正在编写奇怪的基准程序，否则这可能表示无限递归，在这种情况下，它表示其他内容。</target>
        </trans-unit>
        <trans-unit id="47929167f9b9dbf125f892daabe93ee9bacbdfe6" translate="yes" xml:space="preserve">
          <source>(W redefine) You redefined a format. To suppress this warning, say</source>
          <target state="translated">（重新定义W）您重新定义了格式。要禁止显示此警告，请说</target>
        </trans-unit>
        <trans-unit id="7ea1097acd4664a0298a650f6b5ed50b0394a5e8" translate="yes" xml:space="preserve">
          <source>(W redefine) You redefined a subroutine. To suppress this warning, say</source>
          <target state="translated">（重新定义）重新定义了子例程。要禁止显示此警告，请说</target>
        </trans-unit>
        <trans-unit id="e221b86b64886bbbd0c221b56cfa1a70910e05ae" translate="yes" xml:space="preserve">
          <source>(W redefine)(S) You redefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;&quot;Constant Functions&quot; in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W重新定义）（S）您重新定义了一个以前可以进行内联的子例程。有关注释和解决方法，请参见&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的&amp;ldquo;常量函数&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="689f4b16660fc106afaec6518b73b97410cae44a" translate="yes" xml:space="preserve">
          <source>(W redefine)(S) You redefined a subroutine which had previously been eligible for inlining. See &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt; for commentary and workarounds.</source>
          <target state="translated">（W重新定义）（S）您重新定义了以前有资格进行内联的子例程。请参阅&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub中的常量函数以&lt;/a&gt;获取注释和解决方法。</target>
        </trans-unit>
        <trans-unit id="3855dda462903bfd0f1cb6416b2c27b1d50dfe13" translate="yes" xml:space="preserve">
          <source>(W redundant) You called a function with more arguments than other arguments you supplied indicated would be needed. Currently only emitted when a printf-type format required fewer arguments than were supplied, but might be used in the future for e.g. &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（W冗余）您调用的函数所需要的参数要比提供的其他参数多。当前仅在printf-type格式需要的参数少于提供的参数时才发出，但将来可能会用于例如&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c730546b76271c57854b04aae7a64e30a0a44dc" translate="yes" xml:space="preserve">
          <source>(W redundant) You called a function with more arguments than other arguments you supplied indicated would be needed. Currently only emitted when a printf-type format required fewer arguments than were supplied, but might be used in the future for e.g. &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W冗余）您调用的函数所需要的参数要比您提供的指示的其他参数更多。当前仅在printf-type格式需要的参数少于提供的参数时才发出，但将来可能会用于&lt;a href=&quot;perlfunc#pack&quot;&gt;perlfunc中的&amp;ldquo; pack&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1214eb3b51b8ff26fb1eb34d1309ab5f40c42cad" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; or within &lt;code&gt;(?[...])&lt;/code&gt; )</source>
          <target state="translated">（W regexp）（仅在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; 或 &lt;code&gt;(?[...])&lt;/code&gt; 以内）</target>
        </trans-unit>
        <trans-unit id="1418503f1e9d8eefed52fae9d7f65663df0cadff" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;use re 'strict'&lt;/code&gt; or within &lt;code&gt;(?[...])&lt;/code&gt;)</source>
          <target state="translated">（W regexp）（仅在 &lt;code&gt;use re 'strict'&lt;/code&gt; 或 &lt;code&gt;(?[...])&lt;/code&gt; 以内）</target>
        </trans-unit>
        <trans-unit id="a1df92aaccc50fc27a2b7491f0201ce1e77d6b7c" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;use re 'strict'&lt;/code&gt;)</source>
          <target state="translated">（W regexp）（仅在 &lt;code&gt;use re 'strict'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="96608d49c322029f8dcdf9e023697145af03af25" translate="yes" xml:space="preserve">
          <source>(W regexp) (only under &lt;code&gt;use re 'strict'&lt;/code&gt;) &lt;code&gt;(?)&lt;/code&gt; does nothing, so perhaps this is a typo.</source>
          <target state="translated">（W regexp）（仅在 &lt;code&gt;use re 'strict'&lt;/code&gt; ） &lt;code&gt;(?)&lt;/code&gt; 无效，因此这可能是一个错字。</target>
        </trans-unit>
        <trans-unit id="79d7f41c99f2c5e7af10bfeef990dcdf86b08c28" translate="yes" xml:space="preserve">
          <source>(W regexp) Extended character classes currently cannot handle operands that evaluate to more than one character. These are removed from the results of the expansion of the &lt;code&gt;\p{}&lt;/code&gt;.</source>
          <target state="translated">（W regexp）扩展字符类当前无法处理评估为多个字符的操作数。这些将从 &lt;code&gt;\p{}&lt;/code&gt; 扩展的结果中删除。</target>
        </trans-unit>
        <trans-unit id="afe1f8b1a4d34adb7a2f8d5f9d1021945e4cb7e2" translate="yes" xml:space="preserve">
          <source>(W regexp) Minima should be less than or equal to maxima. If you really want your regexp to match something 0 times, just put {0}.</source>
          <target state="translated">（W regexp）最小值应小于或等于最大值。如果您确实希望您的正则表达式匹配0次，则只需输入{0}。</target>
        </trans-unit>
        <trans-unit id="310e10e88bd557a50ffed62c0a92ae3cc181eb6a" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes (&lt;code&gt;\N{...}&lt;/code&gt; ) may return a zero-length sequence. When such an escape is used in a character class its behavior is not well defined. Check that the correct escape has been used, and the correct charname handler is in scope.</source>
          <target state="translated">（W regexp）命名的Unicode字符转义（ &lt;code&gt;\N{...}&lt;/code&gt; ）可能返回零长度的序列。在字符类中使用这种转义符时，其行为没有得到很好的定义。检查是否使用了正确的转义符，并且作用域中包含正确的字符名处理程序。</target>
        </trans-unit>
        <trans-unit id="60783e0f5062372ff8d45c06c31ac1f9f998a5fa" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes (&lt;code&gt;\N{...}&lt;/code&gt;) may return a zero-length sequence. When such an escape is used in a character class its behavior is not well defined. Check that the correct escape has been used, and the correct charname handler is in scope.</source>
          <target state="translated">（W regexp）命名的Unicode字符转义（ &lt;code&gt;\N{...}&lt;/code&gt; ）可能返回零长度的序列。在字符类中使用这种转义符时，其行为没有得到很好的定义。检查是否使用了正确的转义符，并且作用域中包含正确的字符名处理程序。</target>
        </trans-unit>
        <trans-unit id="cac34d442feedb85a4f7352a0dc2a4c7f282aa35" translate="yes" xml:space="preserve">
          <source>(W regexp) Named Unicode character escapes &lt;code&gt;(\N{...})&lt;/code&gt; may return a multi-character sequence. Even though a character class is supposed to match just one character of input, perl will match the whole thing correctly, except when the class is inverted (&lt;code&gt;[^...]&lt;/code&gt;), or the escape is the beginning or final end point of a range. For these, what should happen isn't clear at all. In these circumstances, Perl discards all but the first character of the returned sequence, which is not likely what you want.</source>
          <target state="translated">（W regexp）命名的Unicode字符转义符 &lt;code&gt;(\N{...})&lt;/code&gt; 可能返回多字符序列。即使一个字符类应该只匹配输入的一个字符，但perl会正确地匹配整个内容，除非该类被倒置（ &lt;code&gt;[^...]&lt;/code&gt; ）或转义是a的开始或结束点范围。对于这些，到底发生了什么尚不清楚。在这种情况下，Perl会丢弃除返回序列的第一个字符以外的所有字符，这不太可能是您想要的。</target>
        </trans-unit>
        <trans-unit id="87050e38d01b07bff1acd9b58f28df12b4d2afa8" translate="yes" xml:space="preserve">
          <source>(W regexp) Perl thinks that you intended to write a POSIX character class, but didn't use enough brackets. These POSIX class constructs [: :], [= =], and [. .] go</source>
          <target state="translated">（W regexp）Perl认为您打算编写POSIX字符类，但没有使用足够的括号。这些POSIX类构造了[：：]，[= =]和[。。] 去</target>
        </trans-unit>
        <trans-unit id="979a02ee883c9ec2b29353dd7dff24d69eb2d3ce" translate="yes" xml:space="preserve">
          <source>(W regexp) The &lt;code&gt;p&lt;/code&gt; modifier cannot be turned off once set. Trying to do so is futile.</source>
          <target state="translated">（W regexp）一旦设置 &lt;code&gt;p&lt;/code&gt; 修饰符就无法关闭。尝试这样做是徒劳的。</target>
        </trans-unit>
        <trans-unit id="8836615448ed9381b2dd52c5b2fbe6a905d13b4d" translate="yes" xml:space="preserve">
          <source>(W regexp) The character class constructs [: :], [= =], and [. .] go</source>
          <target state="translated">（W regexp）字符类构造[：：]，[= =]和[。。] 走</target>
        </trans-unit>
        <trans-unit id="9c9b13dc35d66abc0e2ef6aa56dcc54220fb0f95" translate="yes" xml:space="preserve">
          <source>(W regexp) The pattern you've specified would be an infinite loop if the regular expression engine didn't specifically check for that. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（W regexp）如果正则表达式引擎没有专门检查该模式，则您指定的模式将是一个无限循环。&amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34e218ab696b9069c9cee1fbdc8441bff0b2fd36" translate="yes" xml:space="preserve">
          <source>(W regexp) The regular expression engine uses recursion in complex situations where back-tracking is required. Recursion depth is limited to 32766, or perhaps less in architectures where the stack cannot grow arbitrarily. (&quot;Simple&quot; and &quot;medium&quot; situations are handled without recursion and are not subject to a limit.) Try shortening the string under examination; looping in Perl code (e.g. with &lt;code&gt;while&lt;/code&gt; ) rather than in the regular expression engine; or rewriting the regular expression so that it is simpler or backtracks less. (See &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for information on</source>
          <target state="translated">（W regexp）正则表达式引擎在需要回溯的复杂情况下使用递归。递归深度限制为32766，或者在堆栈无法任意增长的体系结构中可能更少。 （&amp;ldquo;简单&amp;rdquo;和&amp;ldquo;中等&amp;rdquo;情况无需递归处理，不受限制。）尝试缩短正在检查的字符串；在Perl代码中循环（例如with &lt;code&gt;while&lt;/code&gt; ），而不是在正则表达式引擎中循环；或重写正则表达式，使其更简单或减少回溯。 （有关以下信息，请参见&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd6fc64cafd8819f8996fa316c8f285fd7746b68" translate="yes" xml:space="preserve">
          <source>(W regexp) The regular expression engine uses recursion in complex situations where back-tracking is required. Recursion depth is limited to 32766, or perhaps less in architectures where the stack cannot grow arbitrarily. (&quot;Simple&quot; and &quot;medium&quot; situations are handled without recursion and are not subject to a limit.) Try shortening the string under examination; looping in Perl code (e.g. with &lt;code&gt;while&lt;/code&gt;) rather than in the regular expression engine; or rewriting the regular expression so that it is simpler or backtracks less. (See &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; for information on</source>
          <target state="translated">（W regexp）在需要回溯的复杂情况下，正则表达式引擎使用递归。递归深度被限制为32766，或者在堆栈不能任意增长的体系结构中可能更低。 （&amp;ldquo;简单&amp;rdquo;和&amp;ldquo;中等&amp;rdquo;情况无需递归处理，也不受限制。）尝试缩短正在检查的字符串；在Perl代码中循环（例如，使用 &lt;code&gt;while&lt;/code&gt; ），而不是在正则表达式引擎中循环；或重写正则表达式，使其更简单或减少回溯。 （有关以下信息，请参见&lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcd893d4152d26d0c7cd216e85b74fd84798d49e" translate="yes" xml:space="preserve">
          <source>(W regexp) The simple rule to remember, if you want to match a literal &lt;code&gt;&quot;{&quot;&lt;/code&gt; character (U+007B &lt;code&gt;LEFT CURLY BRACKET&lt;/code&gt;) in a regular expression pattern, is to escape each literal instance of it in some way. Generally easiest is to precede it with a backslash, like &lt;code&gt;&quot;\{&quot;&lt;/code&gt; or enclose it in square brackets (&lt;code&gt;&quot;[{]&quot;&lt;/code&gt;). If the pattern delimiters are also braces, any matching right brace (&lt;code&gt;&quot;}&quot;&lt;/code&gt;) should also be escaped to avoid confusing the parser, for example,</source>
          <target state="translated">（W regexp）如果要以正则表达式模式匹配文字 &lt;code&gt;&quot;{&quot;&lt;/code&gt; 字符（U + 007B &lt;code&gt;LEFT CURLY BRACKET&lt;/code&gt; ），要记住的简单规则是，以某种方式转义它的每个文字实例。通常最简单的方法是在其前面加上反斜杠，例如 &lt;code&gt;&quot;\{&quot;&lt;/code&gt; 或将其括在方括号（ &lt;code&gt;&quot;[{]&quot;&lt;/code&gt; ）中。如果模式定界符也是大括号，则也应转义任何匹配的右大括号（ &lt;code&gt;&quot;}&quot;&lt;/code&gt; ），以避免混淆解析器，例如，</target>
        </trans-unit>
        <trans-unit id="e80a3d940f8d1e707b0bc892519eccf16aea2d95" translate="yes" xml:space="preserve">
          <source>(W regexp) You applied a regular expression quantifier in a place where it makes no sense, such as on a zero-width assertion. Try putting the quantifier inside the assertion instead. For example, the way to match &quot;abc&quot; provided that it is followed by three repetitions of &quot;xyz&quot; is &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; , not &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; .</source>
          <target state="translated">（W regexp）您将正则表达式量词应用在没有意义的地方，例如零宽度断言。尝试将量词放在断言中。例如，匹配&amp;ldquo; abc&amp;rdquo;的方式是在后面加上三个重复的&amp;ldquo; xyz&amp;rdquo;的是 &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; ，而不是 &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b116c34912c573289d414f1c5ba731419acfc1d" translate="yes" xml:space="preserve">
          <source>(W regexp) You applied a regular expression quantifier in a place where it makes no sense, such as on a zero-width assertion. Try putting the quantifier inside the assertion instead. For example, the way to match &quot;abc&quot; provided that it is followed by three repetitions of &quot;xyz&quot; is &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt;, not &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt;.</source>
          <target state="translated">（W regexp）您将正则表达式量词应用在没有意义的地方，例如零宽度断言。尝试将量词放在断言中。例如，匹配&amp;ldquo; abc&amp;rdquo;的方式是在后面加上三个重复的&amp;ldquo; xyz&amp;rdquo;的是 &lt;code&gt;/abc(?=(?:xyz){3})/&lt;/code&gt; ，而不是 &lt;code&gt;/abc(?=xyz){3}/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f9d6046f4892a59f0789eb9e0cd6b5353468138" translate="yes" xml:space="preserve">
          <source>(W regexp) You had something like these:</source>
          <target state="translated">（正则表达式W）您有以下类似内容：</target>
        </trans-unit>
        <trans-unit id="136a9995a2e015be707b998b2100f17123be4162" translate="yes" xml:space="preserve">
          <source>(W regexp) You have used an internal modifier such as (?-o) that has no meaning unless removed from the entire regexp:</source>
          <target state="translated">（W regexp）您使用了一个内部修饰符，例如（？-o），除非从整个regexp中删除，否则它没有任何意义：</target>
        </trans-unit>
        <trans-unit id="55d68e94b03df6dbd58f4c0d015f0fad8b599b8d" translate="yes" xml:space="preserve">
          <source>(W regexp) You have used an internal modifier such as (?o) that has no meaning unless applied to the entire regexp:</source>
          <target state="translated">（W regexp）您使用了没有意义的内部修饰符，例如（？o），除非应用于整个regexp：</target>
        </trans-unit>
        <trans-unit id="b43adfc5e63fb549f624f667292c77a5d4453619" translate="yes" xml:space="preserve">
          <source>(W regexp) You specified a wildcard for a Unicode property value, but there is no property value in the current Unicode release that matches it. Check your spelling.</source>
          <target state="translated">（W regexp）您为Unicode属性值指定了通配符，但是在当前Unicode版本中没有与之匹配的属性值。检查您的拼写。</target>
        </trans-unit>
        <trans-unit id="4dff6ec1a19e7de52b41046a33967e1771a1d39a" translate="yes" xml:space="preserve">
          <source>(W regexp) You specified something like these:</source>
          <target state="translated">（W regexp）您指定了以下内容：</target>
        </trans-unit>
        <trans-unit id="a554f4535489ad2df9ed3cca605416c0a1c6af75" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a Unicode boundary (&lt;code&gt;\b{...}&lt;/code&gt; or &lt;code&gt;\B{...}&lt;/code&gt; ) in a portion of a regular expression where the character set modifiers &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt; are in effect. These two modifiers indicate an ASCII interpretation, and this doesn't make sense for a Unicode defintion. The generated regular expression will compile so that the boundary uses all of Unicode. No other portion of the regular expression is affected.</source>
          <target state="translated">（W regexp）您在正则表达式的一部分中使用了Unicode边界（ &lt;code&gt;\b{...}&lt;/code&gt; 或 &lt;code&gt;\B{...}&lt;/code&gt; ），其中字符集修饰符 &lt;code&gt;/a&lt;/code&gt; 或 &lt;code&gt;/aa&lt;/code&gt; 生效。这两个修饰符表示ASCII解释，这对于Unicode定义没有意义。生成的正则表达式将进行编译，以便边界使用所有Unicode。正则表达式的其他部分均不受影响。</target>
        </trans-unit>
        <trans-unit id="cd51f2ada30069ed0e5474392eee3320b75dfab6" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a Unicode boundary (&lt;code&gt;\b{...}&lt;/code&gt; or &lt;code&gt;\B{...}&lt;/code&gt;) in a portion of a regular expression where the character set modifiers &lt;code&gt;/a&lt;/code&gt; or &lt;code&gt;/aa&lt;/code&gt; are in effect. These two modifiers indicate an ASCII interpretation, and this doesn't make sense for a Unicode definition. The generated regular expression will compile so that the boundary uses all of Unicode. No other portion of the regular expression is affected.</source>
          <target state="translated">（W regexp）您在正则表达式的一部分中使用了Unicode边界（ &lt;code&gt;\b{...}&lt;/code&gt; 或 &lt;code&gt;\B{...}&lt;/code&gt; ），其中字符集修饰符 &lt;code&gt;/a&lt;/code&gt; 或 &lt;code&gt;/aa&lt;/code&gt; 生效。这两个修饰符表示ASCII解释，这对于Unicode定义没有意义。生成的正则表达式将进行编译，以便边界使用所有Unicode。正则表达式的其他部分均不受影响。</target>
        </trans-unit>
        <trans-unit id="c858a1bb6c94f36a1ad78cfa5e12eef38835bc65" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a backslash-character combination which is not recognized by Perl inside character classes. The character was understood literally, but this may change in a future version of Perl. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）您使用了反斜杠-字符组合，Perl在字符类中无法识别该组合。从字面上理解了该字符，但是在Perl的将来版本中可能会发生变化。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="f4b5c5f036648db103b8f6b0d672a6297b55d830" translate="yes" xml:space="preserve">
          <source>(W regexp) You used a backslash-character combination which is not recognized by Perl. The character(s) were understood literally, but this may change in a future version of Perl. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）您使用了Perl无法识别的反斜杠字符组合。从字面上理解了这些字符，但是在Perl的将来版本中可能会发生变化。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="726bc29b79e757efbbf6291f3feab7738f4156dd" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /c modifier in a substitution. The /c modifier is not presently meaningful in substitutions.</source>
          <target state="translated">（W regexp）您在替换中使用了/ c修饰符。/ c修饰符目前在替换中没有意义。</target>
        </trans-unit>
        <trans-unit id="f9138d3ceb624a8a5b53b139e9b01cf402ccd97d" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /c modifier with a regex operand, but didn't use the /g modifier. Currently, /c is meaningful only when /g is used. (This may change in the future.)</source>
          <target state="translated">（W regexp）您将/ c修饰符与正则表达式操作数一起使用，但未使用/ g修饰符。当前，仅当使用/ g时，/ c才有意义。（将来可能会改变。）</target>
        </trans-unit>
        <trans-unit id="05230a0b7de0944fc11913778fd1b00ae30b0de3" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /g modifier on the pattern for a &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; operator. Since &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; always tries to match the pattern repeatedly, the &lt;code&gt;/g&lt;/code&gt; has no effect.</source>
          <target state="translated">（W regexp）您在模式上使用了/ g修饰符作为 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 运算符。由于 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 总是尝试重复匹配模式，因此 &lt;code&gt;/g&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="fa05f976ea4a21f23deaf9fc8dc841cd7c0db3ed" translate="yes" xml:space="preserve">
          <source>(W regexp) You used the /g modifier on the pattern for a &lt;code&gt;split&lt;/code&gt; operator. Since &lt;code&gt;split&lt;/code&gt; always tries to match the pattern repeatedly, the &lt;code&gt;/g&lt;/code&gt; has no effect.</source>
          <target state="translated">（W regexp）您在模式上使用了/ g修饰符作为 &lt;code&gt;split&lt;/code&gt; 运算符。由于 &lt;code&gt;split&lt;/code&gt; 总是尝试重复匹配模式，因此 &lt;code&gt;/g&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="fce92f52ceba5999bee49caf7c2b501e30f4a70d" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) A character class range must start and end at a literal character, not another character class like &lt;code&gt;\d&lt;/code&gt; or &lt;code&gt;[:alpha:]&lt;/code&gt;. The &quot;-&quot; in your false range is interpreted as a literal &quot;-&quot;. In a &lt;code&gt;(?[...])&lt;/code&gt; construct, this is an error, rather than a warning. Consider quoting the &quot;-&quot;, &quot;\-&quot;. The &amp;lt;-- HERE shows whereabouts in the regular expression the problem was discovered. See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">（W regexp）（F）字符类范围必须以文字字符开始和结束，而不是像 &lt;code&gt;\d&lt;/code&gt; 或 &lt;code&gt;[:alpha:]&lt;/code&gt; 这样的其他字符类。错误范围中的&amp;ldquo;-&amp;rdquo;被解释为文字&amp;ldquo;-&amp;rdquo;。在 &lt;code&gt;(?[...])&lt;/code&gt; 构造中，这是一个错误，而不是警告。考虑引用&amp;ldquo;-&amp;rdquo;，&amp;ldquo; \-&amp;rdquo;。 &amp;lt;-HERE在正则表达式中显示发现问题的行踪。参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8e9fa34a2adca3b8cdfab34d848f2df35e1e065" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) The numeric escape (for example &lt;code&gt;\xHH&lt;/code&gt; ) of value &amp;lt; 256 didn't correspond to a single character through the conversion from the encoding specified by the encoding pragma. The escape was replaced with REPLACEMENT CHARACTER (U+FFFD) instead, except within &lt;code&gt;(?[   ])&lt;/code&gt; , where it is a fatal error. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）（F）值&amp;lt;256 的数字转义 &lt;code&gt;\xHH&lt;/code&gt; （例如\ xHH）与通过编码用法指定的编码转换而来的单个字符不对应。转义用替换字符（U + FFFD）代替，除了 &lt;code&gt;(?[ ])&lt;/code&gt; ，这是一个致命错误。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="a257315534d5cc6e84833f33abd1dd3381a6b41c" translate="yes" xml:space="preserve">
          <source>(W regexp)(F) The numeric escape (for example &lt;code&gt;\xHH&lt;/code&gt;) of value &amp;lt; 256 didn't correspond to a single character through the conversion from the encoding specified by the encoding pragma. The escape was replaced with REPLACEMENT CHARACTER (U+FFFD) instead, except within &lt;code&gt;(?[ ])&lt;/code&gt;, where it is a fatal error. The &amp;lt;-- HERE shows whereabouts in the regular expression the escape was discovered.</source>
          <target state="translated">（W regexp）（F）值&amp;lt;256的数字转义 &lt;code&gt;\xHH&lt;/code&gt; （例如\ xHH）与从编码用法指定的编码转换而来的单个字符不对应。转义由替换字符（U + FFFD）代替，但在 &lt;code&gt;(?[ ])&lt;/code&gt; 除外，这是一个致命错误。&amp;lt;-HERE在正则表达式中显示发现逃生的行踪。</target>
        </trans-unit>
        <trans-unit id="ab5d2805454216bda7ba450af2c1070e6d07a77b" translate="yes" xml:space="preserve">
          <source>(W reserved) A lowercase attribute name was used that had a package-specific handler. That name might have a meaning to Perl itself some day, even though it doesn't yet. Perhaps you should use a mixed-case attribute name, instead. See &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;.</source>
          <target state="translated">（保留W）使用小写的属性名称，该名称具有特定于包的处理程序。该名称可能有一天对Perl本身具有含义，即使现在还没有。也许您应该使用大小写混合的名称。查看&lt;a href=&quot;attributes&quot;&gt;属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28a74896a26f8e20c063399ec49864ab28f3d526" translate="yes" xml:space="preserve">
          <source>(W reserved) You used a bareword that might someday be claimed as a reserved word. It's best to put such a word in quotes, or capitalize it somehow, or insert an underbar into it. You might also declare it as a subroutine.</source>
          <target state="translated">（W保留）您使用了可能有一天被称为保留字的空词。最好在引号中加上这样的词，或以某种方式将其大写，或在其中插入下划线。您也可以将其声明为子例程。</target>
        </trans-unit>
        <trans-unit id="b7f56b2509559b232b5aa9bdc88fbfd521c4a370" translate="yes" xml:space="preserve">
          <source>(W semicolon) A nearby syntax error was probably caused by a missing semicolon, or possibly some other missing operator, such as a comma.</source>
          <target state="translated">（W分号）附近的语法错误可能是由于缺少分号或其他缺少的运算符（例如逗号）引起的。</target>
        </trans-unit>
        <trans-unit id="75808a105415bb63e05cf6d998b7aba9b280a40b" translate="yes" xml:space="preserve">
          <source>(W shadow) A &quot;my&quot; or &quot;state&quot; subroutine has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier subroutine will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W阴影）已在当前作用域或语句中重新声明了&amp;ldquo; my&amp;rdquo;或&amp;ldquo; state&amp;rdquo;子例程，从而有效地消除了对先前实例的所有访问。这几乎总是印刷错误。请注意，较早的子例程将一直存在，直到范围的结尾或对它的所有闭包引用都被销毁为止。</target>
        </trans-unit>
        <trans-unit id="72e5c1f7f8c71e274cd33bf02f816a55e48749b0" translate="yes" xml:space="preserve">
          <source>(W shadow) A &quot;my&quot;, &quot;our&quot; or &quot;state&quot; variable has been redeclared in the current scope or statement, effectively eliminating all access to the previous instance. This is almost always a typographical error. Note that the earlier variable will still exist until the end of the scope or until all closure references to it are destroyed.</source>
          <target state="translated">（W阴影）已在当前作用域或语句中重新声明了&amp;ldquo;我的&amp;rdquo;，&amp;ldquo;我们的&amp;rdquo;或&amp;ldquo;状态&amp;rdquo;变量，有效地消除了对先前实例的所有访问。这几乎总是印刷错误。请注意，较早的变量将一直存在，直到范围的结尾或对它的所有闭包引用都被销毁为止。</target>
        </trans-unit>
        <trans-unit id="cb918e1b6994e324b9f74515b4c8e906a5d67301" translate="yes" xml:space="preserve">
          <source>(W shadow) Remember that &quot;our&quot; does not localize the declared global variable. You have declared it again in the same lexical scope, which seems superfluous.</source>
          <target state="translated">（W阴影）请记住，&amp;ldquo;我们的&amp;rdquo;不会本地化声明的全局变量。您已经在相同的词汇范围内再次声明了它，这似乎是多余的。</target>
        </trans-unit>
        <trans-unit id="fb4c8592e41268e19a98f9c44343d5bbbe048bd6" translate="yes" xml:space="preserve">
          <source>(W shadow) You seem to have already declared the same global once before in the current lexical scope.</source>
          <target state="translated">（W阴影）您似乎已经在当前词法范围内声明了相同的全局变量。</target>
        </trans-unit>
        <trans-unit id="c490a0614ad09a273c847f914c444441bd43e759" translate="yes" xml:space="preserve">
          <source>(W signal) Perl has detected that it is being run with the SIGCHLD signal (sometimes known as SIGCLD) disabled. Since disabling this signal will interfere with proper determination of exit status of child processes, Perl has reset the signal to its default value. This situation typically indicates that the parent program under which Perl may be running (e.g. cron) is being very careless.</source>
          <target state="translated">（W信号）Perl已检测到正在禁用SIGCHLD信号（有时称为SIGCLD）的情况下运行它。由于禁用此信号将干扰子进程退出状态的正确确定，因此Perl已将信号重置为其默认值。这种情况通常表明Perl可能在其下运行的父程序（例如cron）非常粗心。</target>
        </trans-unit>
        <trans-unit id="d36a3561d6f20cf601cc8fdcd8a0b693b632d4af" translate="yes" xml:space="preserve">
          <source>(W signal) The signal handler named in %SIG doesn't, in fact, exist. Perhaps you put it into the wrong package?</source>
          <target state="translated">（W信号）实际上不存在％SIG中命名的信号处理程序。也许您把它放错了包装？</target>
        </trans-unit>
        <trans-unit id="ebc35d5a02e4c063b197676d1cbd12f47c19df5b" translate="yes" xml:space="preserve">
          <source>(W signal) You specified a signal name as a subscript to %SIG that was not recognized. Say &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; in your shell to see the valid signal names on your system.</source>
          <target state="translated">（W信号）您将信号名称指定为无法识别的％SIG的下标。在shell中说 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; 可以查看系统上的有效信号名称。</target>
        </trans-unit>
        <trans-unit id="29464a8694afd3b6f7fa2dedad18f5d42ea27aab" translate="yes" xml:space="preserve">
          <source>(W signal) You specified a signal name as a subscript to %SIG that was not recognized. Say &lt;code&gt;kill -l&lt;/code&gt; in your shell to see the valid signal names on your system.</source>
          <target state="translated">（W信号）您将信号名称指定为无法识别的％SIG的下标。在外壳程序中说 &lt;code&gt;kill -l&lt;/code&gt; 以查看系统上的有效信号名称。</target>
        </trans-unit>
        <trans-unit id="95ce3889bdccfd28d07038434edbc2f2493245c4" translate="yes" xml:space="preserve">
          <source>(W substr) You supplied a reference as the first argument to substr() used as an lvalue, which is pretty strange. Perhaps you forgot to dereference it first. See &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;.</source>
          <target state="translated">（W substr）您提供了一个引用作为substr（）的第一个参数用作左值，这很奇怪。也许您忘了先取消引用它。参见&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3c16ce2faeb9fe19c37eae4699c0794a6365401" translate="yes" xml:space="preserve">
          <source>(W substr) You supplied a reference as the first argument to substr() used as an lvalue, which is pretty strange. Perhaps you forgot to dereference it first. See &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（W substr）您提供了一个引用作为substr（）的第一个参数（用作左值），这很奇怪。也许您忘了先取消引用它。请参阅&lt;a href=&quot;perlfunc#substr&quot;&gt;perlfunc中的&amp;ldquo; substr&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45bd593b8e5b2713b2a66073ce71b9f0acf28d3e" translate="yes" xml:space="preserve">
          <source>(W substr)(F) You tried to reference a substr() that pointed outside of a string. That is, the absolute value of the offset was larger than the length of the string. See &lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;. This warning is fatal if substr is used in an lvalue context (as the left hand side of an assignment or as a subroutine argument for example).</source>
          <target state="translated">（W substr）（F）您试图引用指向字符串外部的substr（）。即，偏移量的绝对值大于字符串的长度。参见&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;。如果在左值上下文中使用substr（例如，作为赋值的左侧或作为子例程参数），则此警告是致命的。</target>
        </trans-unit>
        <trans-unit id="fa3bd79208f2807a2e68a929f599e40382a62ba4" translate="yes" xml:space="preserve">
          <source>(W substr)(F) You tried to reference a substr() that pointed outside of a string. That is, the absolute value of the offset was larger than the length of the string. See &lt;a href=&quot;perlfunc#substr&quot;&gt;&quot;substr&quot; in perlfunc&lt;/a&gt;. This warning is fatal if substr is used in an lvalue context (as the left hand side of an assignment or as a subroutine argument for example).</source>
          <target state="translated">（W substr）（F）您试图引用指向字符串外部的substr（）。即，偏移量的绝对值大于字符串的长度。请参阅&lt;a href=&quot;perlfunc#substr&quot;&gt;perlfunc中的&amp;ldquo; substr&amp;rdquo;&lt;/a&gt;。如果在左值上下文中使用substr（例如，作为赋值的左侧或作为子例程参数），则此警告是致命的。</target>
        </trans-unit>
        <trans-unit id="3d3783a27c8ae64e0627e00b19a488f16e27fa85" translate="yes" xml:space="preserve">
          <source>(W syntax) A format specified more picture fields than the next line supplied. See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;.</source>
          <target state="translated">（W语法）一种格式指定的图片字段多于所提供的下一行。参见&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5675d244b6de72370cd69ca41f42a80de4dd6d27" translate="yes" xml:space="preserve">
          <source>(W syntax) An underscore (underbar) in a numeric constant did not separate two digits.</source>
          <target state="translated">（W语法）数字常量中的下划线（下划线）未分隔两位。</target>
        </trans-unit>
        <trans-unit id="1928c9501e662b0f8de723a59ea0b97a4ece6c53" translate="yes" xml:space="preserve">
          <source>(W syntax) In an ordinary expression, backslash is a unary operator that creates a reference to its argument. The use of backslash to indicate a backreference to a matched substring is valid only as part of a regular expression pattern. Trying to do this in ordinary Perl code produces a value that prints out looking like SCALAR(0xdecaf). Use the $1 form instead.</source>
          <target state="translated">（W语法）在普通表达式中，反斜杠是一元运算符，可创建对其参数的引用。使用反斜杠表示对匹配子字符串的反向引用仅在正则表达式模式中有效。尝试在普通的Perl代码中执行此操作，将产生一个看起来像SCALAR（0xdecaf）的值。请改用$ 1表格。</target>
        </trans-unit>
        <trans-unit id="8f8213e084e20348a91dcc660ab8e17dcde1e497" translate="yes" xml:space="preserve">
          <source>(W syntax) In scalar context, you've used a hash key/value slice (indicated by %) to select a single element of a hash. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; always behaves like a scalar, both in the value it returns and when evaluating its argument, while &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; and provides a list context to its subscript, which can do weird things if you're expecting only one subscript. When called in list context, it also returns the key in addition to the value.</source>
          <target state="translated">（W语法）在标量上下文中，您已使用哈希键/值切片（以％表示）来选择哈希的单个元素。通常，最好索取标量值（用$表示）。区别在于 &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; 在返回值和评估其参数时总是表现得像标量，而 &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; 并为其下标提供列表上下文，如果您这样做，它可能会产生奇怪的结果只期望一个下标。在列表上下文中调用时，除值外，它还返回键。</target>
        </trans-unit>
        <trans-unit id="139c16302575faefa44e53211603b79b770480b6" translate="yes" xml:space="preserve">
          <source>(W syntax) In scalar context, you've used an array index/value slice (indicated by %) to select a single element of an array. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; always behaves like a scalar, both in the value it returns and when evaluating its argument, while &lt;code&gt;%foo[&amp;amp;bar]&lt;/code&gt; provides a list context to its subscript, which can do weird things if you're expecting only one subscript. When called in list context, it also returns the index (what &lt;code&gt;&amp;amp;bar&lt;/code&gt; returns) in addition to the value.</source>
          <target state="translated">（W语法）在标量上下文中，已使用数组索引/值切片（以％表示）选择数组的单个元素。通常，最好索取标量值（用$表示）。不同之处在于 &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; 在返回值和评估其参数时总是表现得像标量，而 &lt;code&gt;%foo[&amp;amp;bar]&lt;/code&gt; 为它的下标提供列表上下文，如果您要只期望一个下标。在列表上下文中调用时，除值外，它还返回索引（ &lt;code&gt;&amp;amp;bar&lt;/code&gt; 返回的内容）。</target>
        </trans-unit>
        <trans-unit id="aaec30e2b82d4c39ee887958d74052bd7fee0a74" translate="yes" xml:space="preserve">
          <source>(W syntax) It is possible that the &lt;code&gt;@ISA&lt;/code&gt; contains a misspelled or never loaded package name, which can result in perl choosing an unexpected parent class's method to resolve the method call. If this is deliberate you can do something like</source>
          <target state="translated">（W语法） &lt;code&gt;@ISA&lt;/code&gt; 可能包含拼写错误或从未加载的程序包名称，这可能导致perl选择意外的父类的方法来解决方法调用。如果这是故意的，您可以执行类似的操作</target>
        </trans-unit>
        <trans-unit id="d8bea33901ad329853cff0f65df1ca724eb5c0d4" translate="yes" xml:space="preserve">
          <source>(W syntax) Multidimensional arrays aren't written like &lt;code&gt;$foo[1,2,3]&lt;/code&gt; . They're written like &lt;code&gt;$foo[1][2][3]&lt;/code&gt; , as in C.</source>
          <target state="translated">（W语法）多维数组的写法不像 &lt;code&gt;$foo[1,2,3]&lt;/code&gt; 。它们像 &lt;code&gt;$foo[1][2][3]&lt;/code&gt; 一样被编写，就像在C中一样。</target>
        </trans-unit>
        <trans-unit id="80669e00996092e3d1a0e78e0b65c2cb0112cd12" translate="yes" xml:space="preserve">
          <source>(W syntax) Multidimensional arrays aren't written like &lt;code&gt;$foo[1,2,3]&lt;/code&gt;. They're written like &lt;code&gt;$foo[1][2][3]&lt;/code&gt;, as in C.</source>
          <target state="translated">（W语法）多维数组的写法不像 &lt;code&gt;$foo[1,2,3]&lt;/code&gt; 。它们的写法像 &lt;code&gt;$foo[1][2][3]&lt;/code&gt; 一样，在C语言中。</target>
        </trans-unit>
        <trans-unit id="04868e0f94e46c3fd4ce21403945fec70d551ecb" translate="yes" xml:space="preserve">
          <source>(W syntax) Outside of patterns, backreferences live on as variables. The use of backslashes is grandfathered on the right-hand side of a substitution, but stylistically it's better to use the variable form because other Perl programmers will expect it, and it works better if there are more than 9 backreferences.</source>
          <target state="translated">（W语法）在模式之外，后向引用作为变量存在。反斜杠的使用位于替换的右侧，但从风格上讲，最好使用变量形式，因为其他Perl程序员会期望使用这种形式，并且如果有9个以上的反向引用，它会更好。</target>
        </trans-unit>
        <trans-unit id="86e02829ec2db0aad141e5ff8b7b48fa26969bba" translate="yes" xml:space="preserve">
          <source>(W syntax) The &lt;code&gt;\c&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; construct is intended to be a way to specify non-printable characters. You used it for a printable one, which is better written as simply itself, perhaps preceded by a backslash for non-word characters. Doing it the way you did is not portable between ASCII and EBCDIC platforms.</source>
          <target state="translated">（W语法） &lt;code&gt;\c&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; 构造旨在作为一种指定不可打印字符的方法。您将其用于可打印的文本，最好将其写成简单的自身，或者在非单词字符前加反斜杠。以这种方式进行操作不能在ASCII和EBCDIC平台之间移植。</target>
        </trans-unit>
        <trans-unit id="1e1aacc7413fa4819361698891a0668505640b7d" translate="yes" xml:space="preserve">
          <source>(W syntax) The @ISA array contained the name of another package that doesn't seem to exist.</source>
          <target state="translated">（W语法）@ISA数组包含另一个似乎不存在的程序包的名称。</target>
        </trans-unit>
        <trans-unit id="f851398285267cd295332fc573c6ef5e8844f07f" translate="yes" xml:space="preserve">
          <source>(W syntax) The localization of lvalues such as &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x=10)&lt;/a&gt;&lt;/code&gt; is legal, but in fact the local() currently has no effect. This may change at some point in the future, but in the meantime such code is discouraged.</source>
          <target state="translated">（W语法）诸如 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local($x=10)&lt;/a&gt;&lt;/code&gt; 这样的左值的本地化是合法的，但实际上local（）当前无效。将来可能会有所改变，但与此同时不鼓励使用此类代码。</target>
        </trans-unit>
        <trans-unit id="7bd569ce6df70faf3a3011c533249f92b01128d2" translate="yes" xml:space="preserve">
          <source>(W syntax) The localization of lvalues such as &lt;code&gt;local($x=10)&lt;/code&gt; is legal, but in fact the local() currently has no effect. This may change at some point in the future, but in the meantime such code is discouraged.</source>
          <target state="translated">（W语法）诸如 &lt;code&gt;local($x=10)&lt;/code&gt; 之类的左值的本地化是合法的，但实际上local（）当前无效。将来可能会有所改变，但与此同时不鼓励使用此类代码。</target>
        </trans-unit>
        <trans-unit id="868eed42e719045825fe91387bc9673310dc7aec" translate="yes" xml:space="preserve">
          <source>(W syntax) The non-matching operator is !~, not !=~. !=~ will be interpreted as the != (numeric not equal) and ~ (1's complement) operators: probably not what you intended.</source>
          <target state="translated">（W语法）不匹配的运算符是！〜，而不是！=〜。！=〜将被解释为！=（数字不等于）和〜（1的补码）：可能不是您想要的。</target>
        </trans-unit>
        <trans-unit id="aabd129f499f5ee7efbffa7af96de54720d08c45" translate="yes" xml:space="preserve">
          <source>(W syntax) The package variables $a and $b are used for sort comparisons. You used $a or $b in as an operand to the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; operator inside a sort comparison block, and the variable had earlier been declared as a lexical variable. Either qualify the sort variable with the package name, or rename the lexical variable.</source>
          <target state="translated">（W语法）包变量$ a和$ b用于排序比较。您在排序比较块内将$ a或$ b用作 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 或 &lt;code&gt;cmp&lt;/code&gt; 运算符的操作数，并且该变量先前已声明为词法变量。用包名称限定sort变量，或重命名词汇变量。</target>
        </trans-unit>
        <trans-unit id="dc7dad0ebf00491f7af4d2d3eac617947a87a3f9" translate="yes" xml:space="preserve">
          <source>(W syntax) There is a possible problem with the mixing of a control flow operator (e.g. &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;) and a low-precedence operator like &lt;code&gt;or&lt;/code&gt; . Consider:</source>
          <target state="translated">（W语法）有一个带控制流程操作者的混合（例如，可能出现的问题 &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; ）和低优先级操作等 &lt;code&gt;or&lt;/code&gt; 。考虑：</target>
        </trans-unit>
        <trans-unit id="7396f53553a9ba0906dcb36747c212abf2b3b9cf" translate="yes" xml:space="preserve">
          <source>(W syntax) There is a possible problem with the mixing of a control flow operator (e.g. &lt;code&gt;return&lt;/code&gt;) and a low-precedence operator like &lt;code&gt;or&lt;/code&gt;. Consider:</source>
          <target state="translated">（W语法）有一个带控制流程操作者的混合（例如，可能出现的问题 &lt;code&gt;return&lt;/code&gt; ）和低优先级操作等 &lt;code&gt;or&lt;/code&gt; 。考虑：</target>
        </trans-unit>
        <trans-unit id="3163cc17558e27986562b985237677c957ba5433" translate="yes" xml:space="preserve">
          <source>(W syntax) You assigned a bareword as a signal handler name. Unfortunately, you already have a subroutine of that name declared, which means that Perl 5 will try to call the subroutine when the assignment is executed, which is probably not what you want. (If it IS what you want, put an &amp;amp; in front.)</source>
          <target state="translated">（W语法）您分配了一个裸词作为信号处理程序名称。不幸的是，您已经声明了该名称的子例程，这意味着Perl 5将在执行分配时尝试调用该子例程，这可能不是您想要的。（如果这是您想要的，请在前面加上＆。）</target>
        </trans-unit>
        <trans-unit id="454abddd8e9efc0d1f94b63b62c5983024ef3e6a" translate="yes" xml:space="preserve">
          <source>(W syntax) You called stat() on an array, but the array will be coerced to a scalar - the number of elements in the array.</source>
          <target state="translated">（W语法）您在数组上调用了stat（），但是该数组将被强制转换为标量-数组中元素的数量。</target>
        </trans-unit>
        <trans-unit id="3f6363d73db132f7df27b47f3074c7aeebcfa96a" translate="yes" xml:space="preserve">
          <source>(W syntax) You have used a pattern where Perl expected to find a string, as in the first argument to &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;. Perl will treat the true or false result of matching the pattern against $_ as the string, which is probably not what you had in mind.</source>
          <target state="translated">（W语法）您使用了一种模式，其中Perl希望找到一个字符串，如 &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; 的第一个参数一样。Perl会将与$ _匹配模式的正确或错误结果视为字符串，这可能与您的想法不符。</target>
        </trans-unit>
        <trans-unit id="9cdfb0330dca0a5928adfee6584985a16f53364e" translate="yes" xml:space="preserve">
          <source>(W syntax) You have used a pattern where Perl expected to find a string, as in the first argument to &lt;code&gt;join&lt;/code&gt;. Perl will treat the true or false result of matching the pattern against $_ as the string, which is probably not what you had in mind.</source>
          <target state="translated">（W语法）您已经使用了一种模式，其中Perl希望找到一个字符串，如 &lt;code&gt;join&lt;/code&gt; 的第一个参数一样。Perl将把与$ _匹配的模式的正确或错误结果视为字符串，这可能与您的想法不符。</target>
        </trans-unit>
        <trans-unit id="9cd4a5c747e6ea0c6874c1cfe913ee77b669c12b" translate="yes" xml:space="preserve">
          <source>(W syntax) You said</source>
          <target state="translated">（W语法）您说</target>
        </trans-unit>
        <trans-unit id="4d42f0406bbe7b69e8abda38fcb04298e09064a5" translate="yes" xml:space="preserve">
          <source>(W syntax) You used &lt;code&gt;$[&lt;/code&gt; in a comparison, such as:</source>
          <target state="translated">（W语法）您在比较中使用了 &lt;code&gt;$[&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="33175e7b41467f7650bcaf1be588d001196cdd86" translate="yes" xml:space="preserve">
          <source>(W syntax) You used length() on either an array or a hash when you probably wanted a count of the items.</source>
          <target state="translated">（W语法）当您可能希望对项目进行计数时，可以在数组或哈希上使用length（）。</target>
        </trans-unit>
        <trans-unit id="72ebcd152cb072c4a9ccbb021c00555dbd6dc1ac" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the old package separator, &quot;'&quot;, in a variable named inside a double-quoted string; e.g., &lt;code&gt;&quot;In $name's house&quot;&lt;/code&gt;. This is equivalent to &lt;code&gt;&quot;In $name::s house&quot;&lt;/code&gt;. If you meant the former, put a backslash before the apostrophe (&lt;code&gt;&quot;In $name\'s house&quot;&lt;/code&gt;).</source>
          <target state="translated">（W语法）您在双引号字符串内的变量中使用了旧的包分隔符&amp;ldquo;'&amp;rdquo;；例如， &lt;code&gt;&quot;In $name's house&quot;&lt;/code&gt; 。这等效于 &lt;code&gt;&quot;In $name::s house&quot;&lt;/code&gt; 。如果您是指前者，请在撇号前加一个反斜杠（ &lt;code&gt;&quot;In $name\'s house&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5612f1be811be95b9ea2e71d0bc87cb76a68fc16" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the push() or unshift() function with no arguments apart from the array, like &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@x)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift(@foo)&lt;/a&gt;&lt;/code&gt;. That won't usually have any effect on the array, so is completely useless. It's possible in principle that push(@tied_array) could have some effect if the array is tied to a class which implements a PUSH method. If so, you can write it as &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@tied_array,())&lt;/a&gt;&lt;/code&gt; to avoid this warning.</source>
          <target state="translated">（W语法）您使用push（）或unshift（）函数时，除了数组之外没有任何参数，例如 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@x)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift(@foo)&lt;/a&gt;&lt;/code&gt; 或unshift（@foo）。这通常不会对数组产生任何影响，因此完全没有用。从原理上讲，如果将数组绑定到实现PUSH方法的类，则push（@tied_array）可能会起作用。如果是这样，可以将其写为 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push(@tied_array,())&lt;/a&gt;&lt;/code&gt; 以避免出现此警告。</target>
        </trans-unit>
        <trans-unit id="51fcff0092b8ab3062fd4590001862a71c12702d" translate="yes" xml:space="preserve">
          <source>(W syntax) You used the push() or unshift() function with no arguments apart from the array, like &lt;code&gt;push(@x)&lt;/code&gt; or &lt;code&gt;unshift(@foo)&lt;/code&gt;. That won't usually have any effect on the array, so is completely useless. It's possible in principle that push(@tied_array) could have some effect if the array is tied to a class which implements a PUSH method. If so, you can write it as &lt;code&gt;push(@tied_array,())&lt;/code&gt; to avoid this warning.</source>
          <target state="translated">（W语法）您使用push（）或unshift（）函数时，除了数组之外没有任何参数，例如 &lt;code&gt;push(@x)&lt;/code&gt; &lt;code&gt;unshift(@foo)&lt;/code&gt; 或unshift（@foo）。这通常不会对数组产生任何影响，因此完全没有用。原则上，如果将数组绑定到实现PUSH方法的类，则push（@tied_array）可能会起作用。如果是这样，可以将其写为 &lt;code&gt;push(@tied_array,())&lt;/code&gt; 以避免出现此警告。</target>
        </trans-unit>
        <trans-unit id="9d9cf6e3535b5c2226e9e739821bfc01062bb73b" translate="yes" xml:space="preserve">
          <source>(W syntax) You wrote your assignment operator backwards. The = must always come last, to avoid ambiguity with subsequent unary operators.</source>
          <target state="translated">（W语法）您向后编写了赋值运算符。=必须始终排在最后，以避免与后续的一元运算符产生歧义。</target>
        </trans-unit>
        <trans-unit id="a8c628713322c0801c78ea0810ebb090ca0b28df" translate="yes" xml:space="preserve">
          <source>(W syntax) You've run afoul of the rule that says that any list operator followed by parentheses turns into a function, with all the list operators arguments found inside the parentheses. See &lt;a href=&quot;perlop#Terms-and-List-Operators-%28Leftward%29&quot;&gt;&quot;Terms and List Operators (Leftward)&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">（W语法）您违反了该规则，该规则说任何带括号的列表运算符都会变成一个函数，所有列表运算符的参数都放在括号内。请参阅&lt;a href=&quot;perlop#Terms-and-List-Operators-%28Leftward%29&quot;&gt;perlop中的&amp;ldquo;术语和列表运算符（向左）&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0988dc3825f261bfe7e6ca09e93a7ef79f9698f8" translate="yes" xml:space="preserve">
          <source>(W syntax) You've run afoul of the rule that says that any list operator followed by parentheses turns into a function, with all the list operators arguments found inside the parentheses. See &lt;a href=&quot;perlop#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward) in perlop&lt;/a&gt;.</source>
          <target state="translated">（W语法）您违反了该规则，该规则说任何列表运算符后跟括号都会变成一个函数，所有列表运算符参数都放在括号内。请参阅&lt;a href=&quot;perlop#Terms-and-List-Operators-(Leftward)&quot;&gt;perlop中的术语和列表运算符（向左）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e677e4399169ad9de0bcb39499a466a52862aad" translate="yes" xml:space="preserve">
          <source>(W syntax) You've used a hash slice (indicated by @) to select a single element of a hash. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; always behaves like a scalar, both when assigning to it and when evaluating its argument, while &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; behaves like a list when you assign to it, and provides a list context to its subscript, which can do weird things if you're expecting only one subscript.</source>
          <target state="translated">（W语法）您已使用哈希切片（由@表示）选择哈希的单个元素。通常，最好索取标量值（用$表示）。不同之处在于 &lt;code&gt;$foo{&amp;amp;bar}&lt;/code&gt; 在分配给它和评估其参数时总是表现得像一个标量，而 &lt;code&gt;@foo{&amp;amp;bar}&lt;/code&gt; 分配给它时的表现就像一个列表，并为其下标提供列表上下文，如果您只期望一个下标，这可能会做奇怪的事情。</target>
        </trans-unit>
        <trans-unit id="95b0a75562e174b2496250be14ddc21db7f4d104" translate="yes" xml:space="preserve">
          <source>(W syntax) You've used an array slice (indicated by @) to select a single element of an array. Generally it's better to ask for a scalar value (indicated by $). The difference is that &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; always behaves like a scalar, both when assigning to it and when evaluating its argument, while &lt;code&gt;@foo[&amp;amp;bar]&lt;/code&gt; behaves like a list when you assign to it, and provides a list context to its subscript, which can do weird things if you're expecting only one subscript.</source>
          <target state="translated">（W语法）您已使用数组切片（由@表示）选择数组的单个元素。通常，最好索取标量值（用$表示）。区别在于 &lt;code&gt;$foo[&amp;amp;bar]&lt;/code&gt; 在分配给它和评估其参数时总是表现得像一个标量，而 &lt;code&gt;@foo[&amp;amp;bar]&lt;/code&gt; 分配给它时的表现就像一个列表，并为其下标提供列表上下文，如果您只期望一个下标，这可能会做奇怪的事情。</target>
        </trans-unit>
        <trans-unit id="641f51994699613e1549f7ef209d11a26e2b585e" translate="yes" xml:space="preserve">
          <source>(W syscalls) Embedded \0 characters in pathnames or other system call arguments produce a warning as of 5.20. The parts after the \0 were formerly ignored by system calls.</source>
          <target state="translated">（W系统调用）路径名或其他系统调用参数中的嵌入式\ 0字符从5.20开始产生警告。\ 0之后的部分以前被系统调用忽略。</target>
        </trans-unit>
        <trans-unit id="eea1d51b89def0acf7f618b47547913acc879ac7" translate="yes" xml:space="preserve">
          <source>(W taint, deprecated) You have supplied &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; with multiple arguments and at least one of them is tainted. This used to be allowed but will become a fatal error in a future version of perl. Untaint your arguments. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（已弃用W taint）您已为 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; 提供了多个参数，并且至少其中一个被污染。以前允许这样做，但在perl的未来版本中将成为致命错误。取消您的论点。参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="191ddfc76359c017ecd49d936cabb2aba72906d2" translate="yes" xml:space="preserve">
          <source>(W taint, deprecated) You have supplied &lt;code&gt;system()&lt;/code&gt; or &lt;code&gt;exec()&lt;/code&gt; with multiple arguments and at least one of them is tainted. This used to be allowed but will become a fatal error in a future version of perl. Untaint your arguments. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">（已弃用W taint）您已为 &lt;code&gt;system()&lt;/code&gt; 或 &lt;code&gt;exec()&lt;/code&gt; 提供了多个参数，并且其中至少一个是被污染的。以前允许这样做，但在perl的未来版本中将成为致命错误。取消您的论点。参见&lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87212ba40dbca26f039d3c5f4668d06844b8cebb" translate="yes" xml:space="preserve">
          <source>(W uninitialized) An undefined value was used as if it were already defined. It was interpreted as a &quot;&quot; or a 0, but maybe it was a mistake. To suppress this warning assign a defined value to your variables.</source>
          <target state="translated">（W未初始化）使用未定义的值，就好像它已经被定义一样。它被解释为&amp;ldquo;&amp;rdquo;或0，但可能是一个错误。要消除此警告，请为变量分配一个已定义的值。</target>
        </trans-unit>
        <trans-unit id="c21109fd4c9277652f34f7607902e64df01bc950" translate="yes" xml:space="preserve">
          <source>(W unopened) An I/O operation was attempted on a filehandle that was never initialized. You need to do an open(), a sysopen(), or a socket() call, or call a constructor from the FileHandle package.</source>
          <target state="translated">（未打开W）对从未初始化的文件句柄尝试了I / O操作。您需要执行open（），sysopen（）或socket（）调用，或者从FileHandle包中调用构造函数。</target>
        </trans-unit>
        <trans-unit id="9d13ce165320d52b11e43e90a5f319b3dff07700" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried binmode() on a filehandle that was never opened. Check your control flow and number of arguments.</source>
          <target state="translated">（未打开W）您在从未打开过的文件句柄上尝试过binmode（）。检查您的控制流和参数数量。</target>
        </trans-unit>
        <trans-unit id="823eb5a294fbebdb362bfa7f1c4f046786f00b26" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried chdir() on a filehandle that was never opened.</source>
          <target state="translated">（未打开W）您在从未打开过的文件句柄上尝试了chdir（）。</target>
        </trans-unit>
        <trans-unit id="33254325809ca0f089876420266f8d46dd3cd36e" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried ioctl() on a filehandle that was never opened. Check your control flow and number of arguments.</source>
          <target state="translated">（W未打开）您在从未打开过的文件句柄上尝试过ioctl（）。检查您的控制流和参数数量。</target>
        </trans-unit>
        <trans-unit id="aecaf35d1f0c4447f15709cfdd62df13ce2bfd7b" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to close a filehandle that was never opened.</source>
          <target state="translated">（未打开W）您试图关闭一个从未打开过的文件句柄。</target>
        </trans-unit>
        <trans-unit id="dc1d8c0f0b969290f1a5f95acb33bce413ff9ddb" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to invoke a file test operator on a filehandle that isn't open. Check your control flow. See also &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;.</source>
          <target state="translated">（未打开W）您试图在未打开的文件句柄上调用文件测试操作符。检查您的控制流程。另请参见&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba22d8d96230581f685bde90e640c5f1bd374866" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to invoke a file test operator on a filehandle that isn't open. Check your control flow. See also &lt;a href=&quot;perlfunc#-X&quot;&gt;&quot;-X&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（未打开W）您试图在未打开的文件句柄上调用文件测试操作符。检查您的控制流程。另请参见&lt;a href=&quot;perlfunc#-X&quot;&gt;perlfunc中的&amp;ldquo; -X&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ba59f97dfd212a4396e40fc430b085c942e206e" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to read from a filehandle that was never opened.</source>
          <target state="translated">（未打开W）您尝试从一个从未打开过的文件句柄读取。</target>
        </trans-unit>
        <trans-unit id="7ca18c8e0d35c1b1ba436b62ea346403c379a134" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the seek() or sysseek() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（未打开W）您试图在从未打开过或自从关闭过的文件句柄上使用seek（）或sysseek（）函数。</target>
        </trans-unit>
        <trans-unit id="a687149754f7310ab9223be0e7d36b0c518b5d3d" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the stat() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（未打开W）您试图在从未打开过或自从关闭过的文件句柄上使用stat（）函数。</target>
        </trans-unit>
        <trans-unit id="7d9b36aee9bb72aee190203d53735cc95832569f" translate="yes" xml:space="preserve">
          <source>(W unopened) You tried to use the tell() function on a filehandle that was either never opened or has since been closed.</source>
          <target state="translated">（未打开W）您试图在从未打开过或自从关闭过的文件句柄上使用tell（）函数。</target>
        </trans-unit>
        <trans-unit id="b0b2a4cea9ad3f14457445c6831b6e0a484b46c2" translate="yes" xml:space="preserve">
          <source>(W unpack) You have applied the same modifier more than once after a type in a pack template. See &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;.</source>
          <target state="translated">（解压缩）在打包模板中键入文字后，您多次应用了相同的修饰符。参见&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="941681eda2db699a18f120a6b448df46afbef468" translate="yes" xml:space="preserve">
          <source>(W unpack) You have applied the same modifier more than once after a type in a pack template. See &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">（解压缩）在打包模板中键入文字后，您多次应用了相同的修饰符。请参阅&lt;a href=&quot;perlfunc#pack&quot;&gt;perlfunc中的&amp;ldquo; pack&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c76fe56910f2e01af3e35d2cf6edcb6541e9310e" translate="yes" xml:space="preserve">
          <source>(W unpack) You tried something like</source>
          <target state="translated">（解压）您尝试过类似</target>
        </trans-unit>
        <trans-unit id="f8d42c367e5bdfdeea5af0d3e04a3e7a34f2c9f5" translate="yes" xml:space="preserve">
          <source>(W untie) A copy of the object returned from &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt;) was still valid when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; was called.</source>
          <target state="translated">（取消 &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; ）从调用 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; （或tie）返回的对象的副本在调用 &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 时仍然有效。</target>
        </trans-unit>
        <trans-unit id="cabf61570265befbb21d34e71c8aab20c5e1624b" translate="yes" xml:space="preserve">
          <source>(W untie) A copy of the object returned from &lt;code&gt;tie&lt;/code&gt; (or &lt;code&gt;tied&lt;/code&gt;) was still valid when &lt;code&gt;untie&lt;/code&gt; was called.</source>
          <target state="translated">（W解开）一种从返回的对象的副本 &lt;code&gt;tie&lt;/code&gt; （或 &lt;code&gt;tied&lt;/code&gt; ）仍然有效时 &lt;code&gt;untie&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="46f9020a7dcd787c1bf1b13be87c622895afbd82" translate="yes" xml:space="preserve">
          <source>(W utf8) You passed a negative number to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;. Negative numbers are not valid character numbers, so it returns the Unicode replacement character (U+FFFD).</source>
          <target state="translated">（Wutf8）您向 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; 传递了一个负数。负数不是有效的字符数，因此它返回Unicode替换字符（U + FFFD）。</target>
        </trans-unit>
        <trans-unit id="b58756471d926c76c1ab002a4d662fb9886153dd" translate="yes" xml:space="preserve">
          <source>(W utf8) You passed a negative number to &lt;code&gt;chr&lt;/code&gt;. Negative numbers are not valid character numbers, so it returns the Unicode replacement character (U+FFFD).</source>
          <target state="translated">（Wutf8）您向 &lt;code&gt;chr&lt;/code&gt; 传递了一个负数。负数不是有效的字符数，因此它返回Unicode替换字符（U + FFFD）。</target>
        </trans-unit>
        <trans-unit id="66ebf288df73553c4980b27e84deb25ec3183f3c" translate="yes" xml:space="preserve">
          <source>(W utf8) You tried to open a reference to a scalar for read or append where the scalar contained code points over 0xFF. In-memory files model on-disk files and can only contain bytes.</source>
          <target state="translated">（W utf8）您试图打开对标量的引用以进行读取或追加，其中标量包含的代码点超过0xFF。内存文件模拟磁盘文件，并且只能包含字节。</target>
        </trans-unit>
        <trans-unit id="8848dabe5fdd98b21a0c9d16e12de50ff0059dae" translate="yes" xml:space="preserve">
          <source>(W void) A CHECK or INIT block is being defined during run time proper, when the opportunity to run them has already passed. Perhaps you are loading a file with &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; when you should be using &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; instead. Or perhaps you should put the &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; inside a BEGIN block.</source>
          <target state="translated">（无效）已在适当的运行时间定义了CHECK或INIT块，前提是已经超过了运行它们的机会。也许您在使用 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; 加载文件时应该使用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 代替。或者，您应该将 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; 放入BEGIN块中。</target>
        </trans-unit>
        <trans-unit id="e7e6a78d91d6843e00f27a1dd8c24417212661c7" translate="yes" xml:space="preserve">
          <source>(W void) A CHECK or INIT block is being defined during run time proper, when the opportunity to run them has already passed. Perhaps you are loading a file with &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt; when you should be using &lt;code&gt;use&lt;/code&gt; instead. Or perhaps you should put the &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt; inside a BEGIN block.</source>
          <target state="translated">（无效）已在适当的运行时间定义了CHECK或INIT块，前提是已经有运行它们的机会。也许您在使用 &lt;code&gt;require&lt;/code&gt; 或 &lt;code&gt;do&lt;/code&gt; 加载文件时应该使用 &lt;code&gt;use&lt;/code&gt; 代替。或者，您应该将 &lt;code&gt;require&lt;/code&gt; 或 &lt;code&gt;do&lt;/code&gt; 放入BEGIN块中。</target>
        </trans-unit>
        <trans-unit id="90db3f1351f4d1a7f3df67accb71dce113e606f5" translate="yes" xml:space="preserve">
          <source>(W void) You did something without a side effect in a context that does nothing with the return value, such as a statement that doesn't return a value from a block, or the left side of a scalar comma operator. Very often this points not to stupidity on your part, but a failure of Perl to parse your program the way you thought it would. For example, you'd get this if you mixed up your C precedence with Python precedence and said</source>
          <target state="translated">（无效）在上下文中对返回值不执行任何操作，而没有副作用，例如，不从块返回值或标量逗号运算符左侧的语句。很多时候，这并不意味着您的愚蠢，而是Perl无法按照您认为的方式解析程序。例如，如果将C优先级与Python优先级混合并说</target>
        </trans-unit>
        <trans-unit id="8c28b024772920f2fbe93cb3859bc1a02354768f" translate="yes" xml:space="preserve">
          <source>(W void) You used sort in scalar context, as in :</source>
          <target state="translated">（无效）您在标量上下文中使用了sort，例如：</target>
        </trans-unit>
        <trans-unit id="d2694030ac2d81eb103264e70e38e170506566bf" translate="yes" xml:space="preserve">
          <source>(W) &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W） &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; overload&lt;/code&gt; 传递了它无法识别的参数。您是否输错了运算符？</target>
        </trans-unit>
        <trans-unit id="e3ba7d4dfa17e099cdb8c2d3fac3b7c6f3304239" translate="yes" xml:space="preserve">
          <source>(W) &lt;code&gt;use overload&lt;/code&gt; was passed an argument it did not recognize. Did you mistype an operator?</source>
          <target state="translated">（W） &lt;code&gt;use overload&lt;/code&gt; 传递了它无法识别的参数。您是否输错了运算符？</target>
        </trans-unit>
        <trans-unit id="21016a542724c1bfad5e9b7a16b1394b21adc2e5" translate="yes" xml:space="preserve">
          <source>(W) Pod::PlainText encountered a &lt;code&gt;=back&lt;/code&gt; command that didn't correspond to an &lt;code&gt;=over&lt;/code&gt; command.</source>
          <target state="translated">（W）Pod :: PlainText遇到了 &lt;code&gt;=back&lt;/code&gt; 命令，该命令与 &lt;code&gt;=over&lt;/code&gt; 命令不对应。</target>
        </trans-unit>
        <trans-unit id="26bfb80fa009b521734a344e5a06b87f176f5beb" translate="yes" xml:space="preserve">
          <source>(W) Something has gone wrong in internal &lt;code&gt;=item&lt;/code&gt; processing. These messages indicate a bug in Pod::Text; you should never see them.</source>
          <target state="translated">（W）内部 &lt;code&gt;=item&lt;/code&gt; 处理中出了点问题。这些消息表明Pod :: Text中存在错误；你永远都不会看到他们。</target>
        </trans-unit>
        <trans-unit id="501975fffba0edbf57d1160976c85133c54a7baf" translate="yes" xml:space="preserve">
          <source>(W) Something has gone wrong in internal &lt;code&gt;=item&lt;/code&gt; processing. This message indicates a bug in Pod::PlainText; you should never see it.</source>
          <target state="translated">（W）内部 &lt;code&gt;=item&lt;/code&gt; 处理中出了点问题。此消息表明Pod :: PlainText中存在错误；你永远都不会看到它。</target>
        </trans-unit>
        <trans-unit id="c30dd949e9f2b3a1878daa9c110c45e03e38a3c9" translate="yes" xml:space="preserve">
          <source>(W) The POD source contained a non-standard internal sequence (something of the form &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; ) that Pod::PlainText didn't know about.</source>
          <target state="translated">（W）POD源包含Pod :: PlainText不知道的非标准内部序列（格式为 &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ea328e676adcf58b0759f1c04dd7eec880ac50e0" translate="yes" xml:space="preserve">
          <source>(W) The POD source contained an &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; escape that Pod::PlainText didn't know about.</source>
          <target state="translated">（W）POD源包含Pod :: PlainText不知道的 &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; 转义。</target>
        </trans-unit>
        <trans-unit id="0a887755cdd505b29af6782ffbf2c58e91dc679f" translate="yes" xml:space="preserve">
          <source>(W) The call to overload::constant contained an odd number of arguments. The arguments should come in pairs.</source>
          <target state="translated">（W）对重载::常量的调用包含奇数个参数。参数应成对出现。</target>
        </trans-unit>
        <trans-unit id="70cde34602e73ad7fd4f730db8c2bcf41f111987" translate="yes" xml:space="preserve">
          <source>(W) The given character is not a valid pack or unpack type but used to be silently ignored.</source>
          <target state="translated">（W）给定的字符不是有效的压缩或解压缩类型，但过去通常被忽略。</target>
        </trans-unit>
        <trans-unit id="e14f1e6bfcb9badd4f5af39b1f5de336049edc31" translate="yes" xml:space="preserve">
          <source>(W) The same, but in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）相同，但是在ANSI_COLORS_ALIASES中。颜色映射被忽略。</target>
        </trans-unit>
        <trans-unit id="d96a0ecd53e817b1ae2d676c0119d14bcfa595eb" translate="yes" xml:space="preserve">
          <source>(W) The second (fourth, sixth, ...) argument of overload::constant needs to be a code reference. Either an anonymous subroutine, or a reference to a subroutine.</source>
          <target state="translated">（W）重载:::常数的第二（第四，第六，...）参数需要作为代码引用。匿名子例程或对子例程的引用。</target>
        </trans-unit>
        <trans-unit id="5eb1c96d7547fa58d3105399dbdfb8e95f920587" translate="yes" xml:space="preserve">
          <source>(W) The specified color mapping from ANSI_COLORS_ALIASES is not valid and could not be parsed. It was ignored.</source>
          <target state="translated">（W）从ANSI_COLORS_ALIASES指定的颜色映射无效，无法解析。它被忽略了。</target>
        </trans-unit>
        <trans-unit id="67419e06ec8f127222c04b5682b2736a4e491752" translate="yes" xml:space="preserve">
          <source>(W) This is a standard message issued by OS/2 applications, while *nix applications die in silence. It is considered a feature of the OS/2 port. One can easily disable this by appropriate sighandlers, see &lt;a href=&quot;perlipc#Signals&quot;&gt;&quot;Signals&quot; in perlipc&lt;/a&gt;. See also &quot;Process terminated by SIGTERM/SIGINT&quot; in &lt;a href=&quot;perlos2&quot;&gt;perlos2&lt;/a&gt;.</source>
          <target state="translated">（W）这是OS / 2应用程序发出的标准消息，而* nix应用程序则以静默方式死掉。它被认为是OS / 2端口的功能。可以通过适当的&lt;a href=&quot;perlipc#Signals&quot;&gt;信号处理&lt;/a&gt;程序轻松禁用此功能，请参阅perlipc中的&amp;ldquo;信号&amp;rdquo;。另请参见&lt;a href=&quot;perlos2&quot;&gt;perlos2中的&lt;/a&gt;&amp;ldquo;进程被SIGTERM / SIGINT终止&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="8acaee73233dd30d36c968a81b33d5c8ccba7c36" translate="yes" xml:space="preserve">
          <source>(W) This is a standard message issued by OS/2 applications, while *nix applications die in silence. It is considered a feature of the OS/2 port. One can easily disable this by appropriate sighandlers, see &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt;. See also &quot;Process terminated by SIGTERM/SIGINT&quot; in &lt;a href=&quot;perlos2&quot;&gt;perlos2&lt;/a&gt;.</source>
          <target state="translated">（W）这是OS / 2应用程序发出的标准消息，而* nix应用程序则在无声的情况下死亡。它被认为是OS / 2端口的功能。可以通过适当的&lt;a href=&quot;perlipc#Signals&quot;&gt;信号处理&lt;/a&gt;程序轻松禁用此功能，请参阅perlipc中的Signals。另请参见&lt;a href=&quot;perlos2&quot;&gt;perlos2中的&lt;/a&gt; &amp;ldquo;进程被SIGTERM / SIGINT终止&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="1c10232da8d5a7a1db96c9e95d4de6579ffb3dcc" translate="yes" xml:space="preserve">
          <source>(W) This warning may be due to running a perl5 script through a perl4 interpreter, especially if the word that is being warned about is &quot;use&quot; or &quot;my&quot;.</source>
          <target state="translated">（W）此警告可能是由于通过perl4解释器运行perl5脚本引起的，尤其是当警告的单词是&amp;ldquo; use&amp;rdquo;或&amp;ldquo; my&amp;rdquo;时。</target>
        </trans-unit>
        <trans-unit id="1212f80ef134690b670704c90585c6d0920a4a27" translate="yes" xml:space="preserve">
          <source>(W) You did &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re;&lt;/code&gt; without any arguments. That isn't very useful.</source>
          <target state="translated">（W）您确实 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re;&lt;/code&gt; 没有任何争论。那不是很有用。</target>
        </trans-unit>
        <trans-unit id="bab248385c5c2b1c84a111f5b896dc72b0354a3f" translate="yes" xml:space="preserve">
          <source>(W) You did &lt;code&gt;use re;&lt;/code&gt; without any arguments. That isn't very useful.</source>
          <target state="translated">（W）您确实 &lt;code&gt;use re;&lt;/code&gt; 没有任何争论。那不是很有用。</target>
        </trans-unit>
        <trans-unit id="e38b2fa8496c1774dd31b2c5fdb79143f6d43dd2" translate="yes" xml:space="preserve">
          <source>(W) You passed warn() an empty string (the equivalent of &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; &quot;&quot;&lt;/code&gt; ) or you called it with no args and &lt;code&gt;$@&lt;/code&gt; was empty.</source>
          <target state="translated">（W）您传递了warn（）一个空字符串（等效于 &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; &quot;&quot;&lt;/code&gt; ），或者您不带参数而调用了它，并且 &lt;code&gt;$@&lt;/code&gt; 为空。</target>
        </trans-unit>
        <trans-unit id="6cf26d05866ab1c95908d2f20ddf8e96062948be" translate="yes" xml:space="preserve">
          <source>(W) You passed warn() an empty string (the equivalent of &lt;code&gt;warn &quot;&quot;&lt;/code&gt;) or you called it with no args and &lt;code&gt;$@&lt;/code&gt; was empty.</source>
          <target state="translated">（W）您传递了warn（）一个空字符串（等效于 &lt;code&gt;warn &quot;&quot;&lt;/code&gt; ），或者您不带参数地调用了它，并且 &lt;code&gt;$@&lt;/code&gt; 为空。</target>
        </trans-unit>
        <trans-unit id="fc9c0aa78325e04e4fc87ad0e353fe824600632f" translate="yes" xml:space="preserve">
          <source>(W) You probably mistyped a constant color name such as:</source>
          <target state="translated">（W）您可能输错了恒定的颜色名称，例如：</target>
        </trans-unit>
        <trans-unit id="0ad31e97078c78dbc2769be19839fd69cffdfd38" translate="yes" xml:space="preserve">
          <source>(W) You probably said %hash{$key} when you meant $hash{$key} or @hash{@keys}. On the other hand, maybe you just meant %hash and got carried away.</source>
          <target state="translated">（W）您可能是说$ hash {$ key}或@hash {@keys}时说％hash {$ key}。另一方面，也许您只是说％hash而被迷住了。</target>
        </trans-unit>
        <trans-unit id="3978bcd1515ac8ee88075eadc0c3770c9967d932" translate="yes" xml:space="preserve">
          <source>(W) You specified an invalid alias name on the left hand of the equal sign in a color mapping in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）您在ANSI_COLORS_ALIASES中的颜色映射中的等号的左侧指定了无效的别名。颜色映射被忽略。</target>
        </trans-unit>
        <trans-unit id="1568d1a0f3b426e26a4ff1c09af9fd2ef4f0d8e9" translate="yes" xml:space="preserve">
          <source>(W) You specified an invalid attribute name on the right hand of the equal sign in a color mapping in ANSI_COLORS_ALIASES. The color mapping was ignored.</source>
          <target state="translated">（W）您在ANSI_COLORS_ALIASES中的颜色映射中的等号右侧指定了无效的属性名称。颜色映射被忽略。</target>
        </trans-unit>
        <trans-unit id="66c0aa947d58238ebc42c6ae5df6940103cf64ea" translate="yes" xml:space="preserve">
          <source>(W) You tried to overload a constant type the overload package is unaware of.</source>
          <target state="translated">（W）您试图重载一个常量类型，而该重载程序包并未意识到。</target>
        </trans-unit>
        <trans-unit id="e6c02830c69ec718530355cc9c731ec126bc1ac4" translate="yes" xml:space="preserve">
          <source>(W) You tried to use an unknown subpragma of the &quot;re&quot; pragma.</source>
          <target state="translated">（W）您尝试使用&amp;ldquo; re&amp;rdquo;杂项的未知子杂项。</target>
        </trans-unit>
        <trans-unit id="237221ab401f92d00b4b13fe24041204327569ad" translate="yes" xml:space="preserve">
          <source>(We use $^X in these examples because it's tainted by default.)</source>
          <target state="translated">（我们在这些示例中使用$ ^ X，因为默认情况下它是被污染的。）</target>
        </trans-unit>
        <trans-unit id="ff0ae87e96bc4227f275a775529e881f38d9f545" translate="yes" xml:space="preserve">
          <source>(We used our knowledge that input conversion for &lt;code&gt;char *&lt;/code&gt; is a &quot;simple&quot; one, thus &lt;code&gt;host&lt;/code&gt; is initialized on the declaration line, and our assignment &lt;code&gt;h = host&lt;/code&gt; is not performed too early. Otherwise one would need to have the assignment &lt;code&gt;h = host&lt;/code&gt; in a CODE: or INIT: section.)</source>
          <target state="translated">（我们使用的知识是， &lt;code&gt;char *&lt;/code&gt; 的输入转换是一种&amp;ldquo;简单&amp;rdquo;的输入，因此 &lt;code&gt;host&lt;/code&gt; 在声明行上进行了初始化，因此分配 &lt;code&gt;h = host&lt;/code&gt; 时间不要太早。否则，需要分配 &lt;code&gt;h = host&lt;/code&gt; 在CODE：或INIT：部分中。）</target>
        </trans-unit>
        <trans-unit id="cfc6665de88f1833c4368f0118d03017f3a21353" translate="yes" xml:space="preserve">
          <source>(When dealing with floating-point comparisons, it is best to not check for equality, but rather that the difference between the expected and actual result is below a certain amount (called epsilon) which is 0.01 in this case)</source>
          <target state="translated">（在处理浮点比较时，最好不要检查是否相等，而是要使预期结果与实际结果之间的差异小于某个数量（在这种情况下为0.01）（称为epsilon））</target>
        </trans-unit>
        <trans-unit id="ccac8451a2611ae759c9faf841bb5018f12b19d2" translate="yes" xml:space="preserve">
          <source>(Where BASEEXT is the last component of NAME, and OBJ_EXT is $Config{obj_ext}.)</source>
          <target state="translated">（其中BASEEXT是NAME的最后一个组件，而OBJ_EXT是$ Config {obj_ext}。）</target>
        </trans-unit>
        <trans-unit id="e02fb51bf8e3169540ecbf91f4d22e75cb7830a9" translate="yes" xml:space="preserve">
          <source>(Where BASEEXT is the last component of NAME.)</source>
          <target state="translated">（其中BASEEXT是NAME的最后一个组成部分。）</target>
        </trans-unit>
        <trans-unit id="d0de3cd68244c0838e032c884108802a5c0e7328" translate="yes" xml:space="preserve">
          <source>(Why do we have separate numeric and string comparisons? Because we don't have special variable types, and Perl needs to know whether to sort numerically (where 99 is less than 100) or alphabetically (where 100 comes before 99).</source>
          <target state="translated">（为什么我们要分别进行数字和字符串比较？因为我们没有特殊的变量类型，所以Perl需要知道是按数字排序（其中99小于100）还是按字母排序（其中100在99之前）。</target>
        </trans-unit>
        <trans-unit id="3a6da2b40f741b24ff596bed490732d33b00b6c1" translate="yes" xml:space="preserve">
          <source>(Win32) &quot;Cumulative&quot; times will be bogus. On anything other than Windows NT or Windows 2000, &quot;system&quot; time will be bogus, and &quot;user&quot; time is actually the time returned by the &lt;a href=&quot;http://man.he.net/man3/clock&quot;&gt;&lt;code&gt;clock()&lt;/code&gt;&lt;/a&gt; function in the C runtime library.</source>
          <target state="translated">（Win32）&amp;ldquo;累积&amp;rdquo;时间将是虚假的。在Windows NT或Windows 2000以外的任何其他设备上，&amp;ldquo;系统&amp;rdquo;时间将是虚假的，而&amp;ldquo;用户&amp;rdquo;时间实际上是C运行时库中&lt;a href=&quot;http://man.he.net/man3/clock&quot;&gt; &lt;code&gt;clock()&lt;/code&gt; &lt;/a&gt;函数返回的时间。</target>
        </trans-unit>
        <trans-unit id="097ad5cbfe30f98022f46bfa2c48151ad2231444" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;-w&lt;/code&gt; only inspects the read-only file attribute (FILE_ATTRIBUTE_READONLY), which determines whether the directory can be deleted, not whether it can be written to. Directories always have read and write access unless denied by discretionary access control lists (DACLs).</source>
          <target state="translated">（Win32） &lt;code&gt;-w&lt;/code&gt; 仅检查只读文件属性（FILE_ATTRIBUTE_READONLY），该属性确定是否可以删除目录，而不是是否可以写入目录。目录始终具有读取和写入访问权限，除非被任意访问控制列表（DACL）拒绝。</target>
        </trans-unit>
        <trans-unit id="38cfa236d5999b07d8ee8339e8e2095171f45420" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;-x&lt;/code&gt; (or &lt;code&gt;-X&lt;/code&gt;) determine if a file ends in one of the executable suffixes. &lt;code&gt;-S&lt;/code&gt; is meaningless.</source>
          <target state="translated">（Win32） &lt;code&gt;-x&lt;/code&gt; （或 &lt;code&gt;-X&lt;/code&gt; ）确定文件是否以可执行文件后缀之一结尾。 &lt;code&gt;-S&lt;/code&gt; 是没有意义的。</target>
        </trans-unit>
        <trans-unit id="771d0069e508ec0eab7ae06b50a9126c57ebe81c" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;ctime&lt;/code&gt; is creation time instead of inode change time.</source>
          <target state="translated">（Win32） &lt;code&gt;ctime&lt;/code&gt; 是创建时间，而不是inode更改时间。</target>
        </trans-unit>
        <trans-unit id="b759a9e27db37889e0259223e9b60d084acd51ec" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;ino&lt;/code&gt; are not meaningful.</source>
          <target state="translated">（Win32） &lt;code&gt;dev&lt;/code&gt; 和 &lt;code&gt;ino&lt;/code&gt; 没有意义。</target>
        </trans-unit>
        <trans-unit id="2a41b264a8847cf148e7f8f4528305955ad6d9f6" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;exec LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;exec PROGRAM LIST&lt;/code&gt;) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails.</source>
          <target state="translated">如果第一个 &lt;code&gt;spawn()&lt;/code&gt; 失败，则不使用间接对象语法（ &lt;code&gt;exec PROGRAM LIST&lt;/code&gt; 32 PROGRAM LIST）的（Win32） &lt;code&gt;exec LIST&lt;/code&gt; 可能会转而尝试使用Shell 。</target>
        </trans-unit>
        <trans-unit id="74bfa92e6c9b18362250b8ea3c63446b17f3e77c" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;kill(-9, $pid)&lt;/code&gt; will terminate the process specified by &lt;code&gt;$pid&lt;/code&gt; and recursively all child processes owned by it. This is different from the Unix semantics, where the signal will be delivered to all processes in the same process group as the process specified by &lt;code&gt;$pid&lt;/code&gt;.</source>
          <target state="translated">（Win32） &lt;code&gt;kill(-9, $pid)&lt;/code&gt; 将终止 &lt;code&gt;$pid&lt;/code&gt; 指定的进程，并递归其拥有的所有子进程。这与Unix语义不同，在Unix语义中，信号将传递到与 &lt;code&gt;$pid&lt;/code&gt; 指定的进程相同的进程组中的所有进程。</target>
        </trans-unit>
        <trans-unit id="3d9d02cc3296d6faebca2f9cb1b054bfc96b88c1" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;kill&lt;/code&gt; doesn't send a signal to the identified process like it does on Unix platforms. Instead &lt;code&gt;kill($sig, $pid)&lt;/code&gt; terminates the process identified by &lt;code&gt;$pid&lt;/code&gt;, and makes it exit immediately with exit status &lt;code&gt;$sig&lt;/code&gt;. As in Unix, if &lt;code&gt;$sig&lt;/code&gt; is 0 and the specified process exists, it returns true without actually terminating it.</source>
          <target state="translated">（Win32） &lt;code&gt;kill&lt;/code&gt; 不会像在Unix平台上那样向已识别的进程发送信号。相反， &lt;code&gt;kill($sig, $pid)&lt;/code&gt; 终止由 &lt;code&gt;$pid&lt;/code&gt; 标识的进程，并使其以退出状态 &lt;code&gt;$sig&lt;/code&gt; 立即退出。与Unix中一样，如果 &lt;code&gt;$sig&lt;/code&gt; 为0并且指定的进程存在，则它返回true而不实际终止它。</target>
        </trans-unit>
        <trans-unit id="76ba6e77c5869f927a0b71b2084ab1e64131af44" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;stat&lt;/code&gt; needs to open the file to determine the link count and update attributes that may have been changed through hard links. Setting &lt;a href=&quot;perlvar#%24%7B%5EWIN32_SLOPPY_STAT%7D&quot;&gt;&lt;code&gt;${^WIN32_SLOPPY_STAT}&lt;/code&gt;&lt;/a&gt; to a true value speeds up &lt;code&gt;stat&lt;/code&gt; by not performing this operation.</source>
          <target state="translated">（Win32） &lt;code&gt;stat&lt;/code&gt; 需要打开文件来确定链接数并更新可能已通过硬链接更改的属性。将&lt;a href=&quot;perlvar#%24%7B%5EWIN32_SLOPPY_STAT%7D&quot;&gt; &lt;code&gt;${^WIN32_SLOPPY_STAT}&lt;/code&gt; &lt;/a&gt;设置为真实值可通过不执行此操作来加快 &lt;code&gt;stat&lt;/code&gt; 的速度。</target>
        </trans-unit>
        <trans-unit id="f9c2f95171f0df8ebdc995f9b736f8dcecb859ca" translate="yes" xml:space="preserve">
          <source>(Win32) &lt;code&gt;system LIST&lt;/code&gt; without the use of indirect object syntax (&lt;code&gt;system PROGRAM LIST&lt;/code&gt;) may fall back to trying the shell if the first &lt;code&gt;spawn()&lt;/code&gt; fails.</source>
          <target state="translated">如果第一个 &lt;code&gt;spawn()&lt;/code&gt; 失败，则不使用间接对象语法（ &lt;code&gt;system PROGRAM LIST&lt;/code&gt; ）的（Win32） &lt;code&gt;system LIST&lt;/code&gt; 可能会转而尝试使用Shell 。</target>
        </trans-unit>
        <trans-unit id="46d657187b6095caf9acb668a4893912e19e2208" translate="yes" xml:space="preserve">
          <source>(Win32) As an optimization, may not call the command shell specified in &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt;. &lt;code&gt;system(1, @args)&lt;/code&gt; spawns an external process and immediately returns its process designator, without waiting for it to terminate. Return value may be used subsequently in &lt;a href=&quot;perlfunc#wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#waitpid-PID%2CFLAGS&quot;&gt;&lt;code&gt;waitpid&lt;/code&gt;&lt;/a&gt;. Failure to &lt;code&gt;spawn()&lt;/code&gt; a subprocess is indicated by setting &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;255 &amp;lt;&amp;lt; 8&lt;/code&gt;. &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; is set in a way compatible with Unix (i.e. the exit status of the subprocess is obtained by &lt;code&gt;$? &amp;gt;&amp;gt; 8&lt;/code&gt;, as described in the documentation).</source>
          <target state="translated">（Win32）作为一种优化，不得调用 &lt;code&gt;$ENV{PERL5SHELL}&lt;/code&gt; 指定的命令外壳程序。 &lt;code&gt;system(1, @args)&lt;/code&gt; 产生一个外部进程，并立即返回其进程指示符，而无需等待其终止。随后可以在&lt;a href=&quot;perlfunc#wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;perlfunc#waitpid-PID%2CFLAGS&quot;&gt; &lt;code&gt;waitpid&lt;/code&gt; 中&lt;/a&gt;使用返回值。未能通过设置&lt;a href=&quot;perlvar#%24%3F&quot;&gt; &lt;code&gt;$?&lt;/code&gt; &lt;/a&gt; &lt;code&gt;spawn()&lt;/code&gt; 子进程。到 &lt;code&gt;255 &amp;lt;&amp;lt; 8&lt;/code&gt; 。&lt;a href=&quot;perlvar#%24%3F&quot;&gt; &lt;code&gt;$?&lt;/code&gt; &lt;/a&gt;设置与Unix兼容的方式（即，子进程的退出状态通过 &lt;code&gt;$? &amp;gt;&amp;gt; 8&lt;/code&gt; ，如文档中所述）。</target>
        </trans-unit>
        <trans-unit id="2d623d1233c724bd1bf2d63c98124d2d35b94baa" translate="yes" xml:space="preserve">
          <source>(Win32) Available only for socket handles, and it does what the &lt;code&gt;ioctlsocket()&lt;/code&gt; call in the Winsock API does.</source>
          <target state="translated">（Win32）仅适用于套接字句柄，它的作用与Winsock API中的 &lt;code&gt;ioctlsocket()&lt;/code&gt; 调用相同。</target>
        </trans-unit>
        <trans-unit id="bcff95b0b7ef4ddb8bf2e1aa93b589744a1f75e8" translate="yes" xml:space="preserve">
          <source>(Win32) Both of modes &lt;code&gt;|-&lt;/code&gt; and &lt;code&gt;-|&lt;/code&gt; are supported, but the list form is emulated since the Win32 API CreateProcess() accepts a simple string rather than an array of arguments. This may have security implications for your code.</source>
          <target state="translated">（Win32）两种模式 &lt;code&gt;|-&lt;/code&gt; 和 &lt;code&gt;-|&lt;/code&gt; 支持，但由于Win32 API CreateProcess（）接受一个简单的字符串而不是一个参数数组，因此模拟了列表形式。这可能会对您的代码产生安全影响。</target>
        </trans-unit>
        <trans-unit id="9127ce15715004e5a5ed49a359264e052b40471a" translate="yes" xml:space="preserve">
          <source>(Win32) Can only be applied to process handles returned for processes spawned using &lt;code&gt;system(1, ...)&lt;/code&gt; or pseudo processes created with &lt;a href=&quot;perlfunc#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">（Win32）仅适用于使用 &lt;code&gt;system(1, ...)&lt;/code&gt; 生成的进程或使用&lt;a href=&quot;perlfunc#fork&quot;&gt; &lt;code&gt;fork&lt;/code&gt; &lt;/a&gt;创建的伪进程返回的进程句柄。</target>
        </trans-unit>
        <trans-unit id="c8c7df891da3c5c606570ac870f377b32bccbb11" translate="yes" xml:space="preserve">
          <source>(Win32) Can't move directories between directories on different logical volumes.</source>
          <target state="translated">（Win32）无法在不同逻辑卷上的目录之间移动目录。</target>
        </trans-unit>
        <trans-unit id="3f68950a944d856111c53bd76569330f59fdf556" translate="yes" xml:space="preserve">
          <source>(Win32) Does nothing, but won't fail.</source>
          <target state="translated">（Win32）不执行任何操作，但不会失败。</target>
        </trans-unit>
        <trans-unit id="7d52852a018af43b37937d531a878cd72956bc98" translate="yes" xml:space="preserve">
          <source>(Win32) Emulated using multiple interpreters. See &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;.</source>
          <target state="translated">（Win32）使用多个解释器进行仿真。参见&lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78115fe4dbca01a2cabfa77657b3596f65944163" translate="yes" xml:space="preserve">
          <source>(Win32) Emulated using synchronization functions such that it can be interrupted by &lt;a href=&quot;perlfunc#alarm-SECONDS&quot;&gt;&lt;code&gt;alarm&lt;/code&gt;&lt;/a&gt;, and limited to a maximum of 4294967 seconds, approximately 49 days.</source>
          <target state="translated">（Win32）使用同步功能进行仿真，以使其可以被&lt;a href=&quot;perlfunc#alarm-SECONDS&quot;&gt; &lt;code&gt;alarm&lt;/code&gt; &lt;/a&gt;中断，并且最长限制为4294967秒，大约49天。</target>
        </trans-unit>
        <trans-unit id="6a5de5b856bdbc9d8a7a764aa2b3d89407731dce" translate="yes" xml:space="preserve">
          <source>(Win32) Emulated using timers that must be explicitly polled whenever Perl wants to dispatch &quot;safe signals&quot; and therefore cannot interrupt blocking system calls.</source>
          <target state="translated">（Win32）使用计时器进行仿真，每当Perl要调度&amp;ldquo;安全信号&amp;rdquo;时，计时器都必须对其进行显式轮询，因此不能中断阻止系统调用。</target>
        </trans-unit>
        <trans-unit id="cd80c6a536ded8bc2bf634f559b6bb1e2d3cec7c" translate="yes" xml:space="preserve">
          <source>(Win32) Hard links are implemented on Win32 under NTFS only. They are natively supported on Windows 2000 and later. On Windows NT they are implemented using the Windows POSIX subsystem support and the Perl process will need Administrator or Backup Operator privileges to create hard links.</source>
          <target state="translated">（Win32）硬链接仅在Win32上的NTFS下实现。Windows 2000和更高版本本身支持它们。在Windows NT上，它们是使用Windows POSIX子系统支持实现的，并且Perl进程将需要管理员或备份操作员特权才能创建硬链接。</target>
        </trans-unit>
        <trans-unit id="3f1536b4c91f9320914f7df021f72a5346121abb" translate="yes" xml:space="preserve">
          <source>(Win32) If a FILEHANDLE is supplied, it must be writable and opened in append mode (i.e., use &lt;code&gt;open(my $fh, '&amp;gt;&amp;gt;', 'filename')&lt;/code&gt; or &lt;code&gt;sysopen(my $fh, ..., O_APPEND|O_RDWR)&lt;/code&gt;. If a filename is supplied, it should not be held open elsewhere.</source>
          <target state="translated">（Win32）如果提供了FILEHANDLE，则它必须是可写的，并且必须以追加模式 &lt;code&gt;open(my $fh, '&amp;gt;&amp;gt;', 'filename')&lt;/code&gt; （即，使用open（my $ fh，'&amp;gt;&amp;gt;'，'filename'）或 &lt;code&gt;sysopen(my $fh, ..., O_APPEND|O_RDWR)&lt;/code&gt; 。如果提供了文件名，则不应在其他位置将其保持打开状态。</target>
        </trans-unit>
        <trans-unit id="39ac5f2850e738f851fce5c98cbf343f48b27b1c" translate="yes" xml:space="preserve">
          <source>(Win32) May not be available if library or source was not provided when building perl.</source>
          <target state="translated">（Win32）如果在构建perl时未提供库或源，则可能不可用。</target>
        </trans-unit>
        <trans-unit id="2e4ce071f37a1af0083caf8a1a4fc21f92cdd025" translate="yes" xml:space="preserve">
          <source>(Win32) May not behave as expected. Behavior depends on the C runtime library's implementation of &lt;a href=&quot;http://man.he.net/man2/utime&quot;&gt;&lt;code&gt;utime()&lt;/code&gt;&lt;/a&gt;, and the filesystem being used. The FAT filesystem typically does not support an &quot;access time&quot; field, and it may limit timestamps to a granularity of two seconds.</source>
          <target state="translated">（Win32）可能无法按预期方式运行。行为取决于C运行时库对&lt;a href=&quot;http://man.he.net/man2/utime&quot;&gt; &lt;code&gt;utime()&lt;/code&gt; &lt;/a&gt;的实现以及所使用的文件系统。FAT文件系统通常不支持&amp;ldquo;访问时间&amp;rdquo;字段，并且可能会将时间戳限制为两秒。</target>
        </trans-unit>
        <trans-unit id="02b290a3466c2e14903396fe950e3c324ee0f9a2" translate="yes" xml:space="preserve">
          <source>(Win32) Not implemented.</source>
          <target state="translated">（Win32）未实现。</target>
        </trans-unit>
        <trans-unit id="15f1a44d6820ce91c7ed96f321a002a5e99a43bd" translate="yes" xml:space="preserve">
          <source>(Win32) Only good for changing &quot;owner&quot; read-write access; &quot;group&quot; and &quot;other&quot; bits are meaningless.</source>
          <target state="translated">（Win32）仅适用于更改&amp;ldquo;所有者&amp;rdquo;读写访问权限；&amp;ldquo;组&amp;rdquo;和&amp;ldquo;其他&amp;rdquo;位无意义。</target>
        </trans-unit>
        <trans-unit id="29bf0832c122b51a368d18dbf4e03bb118291cc9" translate="yes" xml:space="preserve">
          <source>(Win32) Return values (especially for device and inode) may be bogus.</source>
          <target state="translated">（Win32）返回值（尤其是对于设备和inode）可能是虚假的。</target>
        </trans-unit>
        <trans-unit id="6c918676cbe34b19ea0d3f7ba488c5cad5cac2ec" translate="yes" xml:space="preserve">
          <source>(Win32) The value returned by &lt;a href=&quot;perlfunc#tell-FILEHANDLE&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt; may be affected after the call, and the filehandle may be flushed.</source>
          <target state="translated">（Win32）在调用之后，&lt;a href=&quot;perlfunc#tell-FILEHANDLE&quot;&gt; &lt;code&gt;tell&lt;/code&gt; 所&lt;/a&gt;返回的值可能会受到影响，并且文件句柄可能会被刷新。</target>
        </trans-unit>
        <trans-unit id="c16d57cfd8eeb546a9229ff270928505b42e20e5" translate="yes" xml:space="preserve">
          <source>(Win32) Will not cause &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt; to re-read the directory stream. The entries already read before the &lt;code&gt;rewinddir&lt;/code&gt; call will just be returned again from a cache buffer.</source>
          <target state="translated">（Win32）不会导致&lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt; &lt;code&gt;readdir&lt;/code&gt; &lt;/a&gt;重新读取目录流。在 &lt;code&gt;rewinddir&lt;/code&gt; 调用之前已读取的条目将仅从缓存缓冲区中再次返回。</target>
        </trans-unit>
        <trans-unit id="10bb22106c47904ba4de23ad61460103a68c77d9" translate="yes" xml:space="preserve">
          <source>(Win32, Plan 9) Not implemented.</source>
          <target state="translated">（Win32，计划9）未实现。</target>
        </trans-unit>
        <trans-unit id="7b3828212b5e1fac44f5e28173a528aabda2b566" translate="yes" xml:space="preserve">
          <source>(Win32, Plan 9, RISC OS) Not implemented.</source>
          <target state="translated">（Win32，Plan 9，RISC OS）未实现。</target>
        </trans-unit>
        <trans-unit id="40542d6ea9af81db545576518b945b986145aa7d" translate="yes" xml:space="preserve">
          <source>(Win32, RISC OS) Not implemented.</source>
          <target state="translated">（Win32，RISC OS）未实现。</target>
        </trans-unit>
        <trans-unit id="d26225477d3018755220f731bf9a8ab3068b4777" translate="yes" xml:space="preserve">
          <source>(Win32, VMS) Only implemented on sockets.</source>
          <target state="translated">（Win32，VMS）仅在套接字上实现。</target>
        </trans-unit>
        <trans-unit id="5d6aa1625db6b86980d3dbaf700750f0d7c7c64e" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, Plan 9, RISC OS, VOS) Not implemented.</source>
          <target state="translated">（Win32，VMS，Plan 9，RISC OS，VOS）未实现。</target>
        </trans-unit>
        <trans-unit id="3ad1926ff99fe753293050c329e9209673eea0dd" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS) &lt;code&gt;-R&lt;/code&gt;, &lt;code&gt;-W&lt;/code&gt;, &lt;code&gt;-X&lt;/code&gt;, &lt;code&gt;-O&lt;/code&gt; are indistinguishable from &lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;-x&lt;/code&gt;, &lt;code&gt;-o&lt;/code&gt;.</source>
          <target state="translated">（Win32，VMS，RISC OS） &lt;code&gt;-R&lt;/code&gt; ， &lt;code&gt;-W&lt;/code&gt; ， &lt;code&gt;-X&lt;/code&gt; ， &lt;code&gt;-O&lt;/code&gt; 与 &lt;code&gt;-r&lt;/code&gt; ， &lt;code&gt;-w&lt;/code&gt; ， &lt;code&gt;-x&lt;/code&gt; ， &lt;code&gt;-o&lt;/code&gt; 不可区分。</target>
        </trans-unit>
        <trans-unit id="bf0e811dfd518ffe8ef2d881c87867a771eaf7b9" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS) &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-k&lt;/code&gt;, &lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;-u&lt;/code&gt;, &lt;code&gt;-A&lt;/code&gt; are not particularly meaningful.</source>
          <target state="translated">（Win32，VMS，RISC OS） &lt;code&gt;-g&lt;/code&gt; ， &lt;code&gt;-k&lt;/code&gt; ， &lt;code&gt;-l&lt;/code&gt; ， &lt;code&gt;-u&lt;/code&gt; ， &lt;code&gt;-A&lt;/code&gt; 并不是特别有意义。</target>
        </trans-unit>
        <trans-unit id="97e20ab673e91dfb74bf2c5e00e544b51f6a4b2f" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS) Not implemented.</source>
          <target state="translated">（Win32，VMS，RISC OS）未实现。</target>
        </trans-unit>
        <trans-unit id="62553efbe7c6123000971fd2d6d5ef25fc0044a8" translate="yes" xml:space="preserve">
          <source>(Win32, VMS, RISC OS, VOS) Not implemented.</source>
          <target state="translated">（Win32，VMS，RISC OS，VOS）未实现。</target>
        </trans-unit>
        <trans-unit id="8f1de96f55f7b2b16d13a5f2bab6a184220368b1" translate="yes" xml:space="preserve">
          <source>(Windows only.)</source>
          <target state="translated">（仅限Windows。）</target>
        </trans-unit>
        <trans-unit id="c3a762aeddeefdae150565438093ccaddaaf9aad" translate="yes" xml:space="preserve">
          <source>(X) A general assertion failed. The file in question must be examined.</source>
          <target state="translated">（X）一般断言失败。有问题的文件必须检查。</target>
        </trans-unit>
        <trans-unit id="d6a423c5d83c10add2738bacaabc87962a7da812" translate="yes" xml:space="preserve">
          <source>(X) An attempt was made to extend an array, a list, or a string beyond the largest possible memory allocation.</source>
          <target state="translated">（X）试图将数组，列表或字符串扩展到最大可能的内存分配之外。</target>
        </trans-unit>
        <trans-unit id="46db9c98808efa8657802d89fa63e7cd01916c84" translate="yes" xml:space="preserve">
          <source>(X) See &lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;&quot;PERL_SIGNALS&quot; in perlrun&lt;/a&gt; for legal values.</source>
          <target state="translated">（X）有关合法值，请参见&lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;perlrun中的&amp;ldquo; PERL_SIGNALS&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28dc575d7faf81030a7009c3890586ad0bfb13c7" translate="yes" xml:space="preserve">
          <source>(X) See &lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;PERL_SIGNALS in perlrun&lt;/a&gt; for legal values.</source>
          <target state="translated">（X）有关合法值，请参见&lt;a href=&quot;perlrun#PERL_SIGNALS&quot;&gt;perlrun中的PERL_SIGNALS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25eb4cc27ccccf735eed888542e4498eb2a2aa6d" translate="yes" xml:space="preserve">
          <source>(X) The #! line (or local equivalent) in a Perl script contains the &lt;b&gt;-M&lt;/b&gt;, &lt;b&gt;-m&lt;/b&gt; or &lt;b&gt;-C&lt;/b&gt; option.</source>
          <target state="translated">（X）＃！Perl脚本中的行（或等效的本地行）包含&lt;b&gt;-M&lt;/b&gt;，&lt;b&gt;-m&lt;/b&gt;或&lt;b&gt;-C&lt;/b&gt;选项。</target>
        </trans-unit>
        <trans-unit id="04d47aff5005157bb16498793c9ad8c2d7a871aa" translate="yes" xml:space="preserve">
          <source>(X) The #! line (or local equivalent) in a Perl script contains the &lt;b&gt;-T&lt;/b&gt; option (or the &lt;b&gt;-t&lt;/b&gt; option), but Perl was not invoked with &lt;b&gt;-T&lt;/b&gt; in its command line. This is an error because, by the time Perl discovers a &lt;b&gt;-T&lt;/b&gt; in a script, it's too late to properly taint everything from the environment. So Perl gives up.</source>
          <target state="translated">（X）＃！Perl脚本中的命令行（或本地等效项）包含&lt;b&gt;-T&lt;/b&gt;选项（或&lt;b&gt;-t&lt;/b&gt;选项），但Perl并未在其命令行中用&lt;b&gt;-T&lt;/b&gt;调用。这是一个错误，因为在Perl 在脚本中发现&lt;b&gt;-T&lt;/b&gt;时，要适当地从环境中污染所有内容已经为时已晚。于是Perl放弃了。</target>
        </trans-unit>
        <trans-unit id="7d13ded5daf490cc1bc8bb6b0cd74a13b6c46c88" translate="yes" xml:space="preserve">
          <source>(X) The PERL5OPT environment variable may only be used to set the following switches: &lt;b&gt;-[CDIMUdmtw]&lt;/b&gt;.</source>
          <target state="translated">（X）PERL5OPT环境变量只能用于设置以下开关：&lt;b&gt;-[CDIMUdmtw]&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8e8047249d025e2fe0c43d96f901bbedf4764fe8" translate="yes" xml:space="preserve">
          <source>(X) The malloc package that comes with Perl had an internal failure.</source>
          <target state="translated">（X）Perl随附的malloc程序包发生内部故障。</target>
        </trans-unit>
        <trans-unit id="65871f11cf57af573de156d366a86250bc7c9d6a" translate="yes" xml:space="preserve">
          <source>(X) The malloc() function returned 0, indicating there was insufficient remaining memory (or virtual memory) to satisfy the request. Perl has no option but to exit immediately.</source>
          <target state="translated">（X）malloc（）函数返回0，表示没有足够的剩余内存（或虚拟内存）来满足请求。Perl别无选择，只能立即退出。</target>
        </trans-unit>
        <trans-unit id="74578166360f01e0bd318023e9280f6c6b8eeab2" translate="yes" xml:space="preserve">
          <source>(X) You can't allocate more than 64K on an MS-DOS machine.</source>
          <target state="translated">（X）您不能在MS-DOS计算机上分配超过64K的内存。</target>
        </trans-unit>
        <trans-unit id="d5e67ac60b668e8e894b678df3573f0eedbd9863" translate="yes" xml:space="preserve">
          <source>(X)(F) The malloc() function returned 0, indicating there was insufficient remaining memory (or virtual memory) to satisfy the request.</source>
          <target state="translated">（X）（F）malloc（）函数返回0，表示剩余内存（或虚拟内存）不足，无法满足请求。</target>
        </trans-unit>
        <trans-unit id="759c6fc4e8e069300c157debbe2514f2f0f2ba35" translate="yes" xml:space="preserve">
          <source>(XO_NFC)</source>
          <target state="translated">(XO_NFC)</target>
        </trans-unit>
        <trans-unit id="5eb03003bf58c317f5fcc12bb40f816384b7f89f" translate="yes" xml:space="preserve">
          <source>(XO_NFD)</source>
          <target state="translated">(XO_NFD)</target>
        </trans-unit>
        <trans-unit id="5ad3fc425ec3db40873d63b37909a2aa76c30974" translate="yes" xml:space="preserve">
          <source>(XO_NFKC)</source>
          <target state="translated">(XO_NFKC)</target>
        </trans-unit>
        <trans-unit id="012a737aa9d39f445b43cf9eee5b96a526347398" translate="yes" xml:space="preserve">
          <source>(XO_NFKD)</source>
          <target state="translated">(XO_NFKD)</target>
        </trans-unit>
        <trans-unit id="0aa007c669bc8d719d70515c0e663390b1a05031" translate="yes" xml:space="preserve">
          <source>(Yes, I know this function is named a bit oddly. Call it historic reasons.)</source>
          <target state="translated">（是的，我知道此函数的名称有点奇怪。称之为历史原因。）</target>
        </trans-unit>
        <trans-unit id="8eb8ab7981d2a7c45a30aad058d8576bb511d1b4" translate="yes" xml:space="preserve">
          <source>(Yes, we know that some of these OSes may fall under the Unix category, but we are not a standards body.)</source>
          <target state="translated">（是的，我们知道其中一些操作系统可能属于Unix类别，但我们不是标准机构。）</target>
        </trans-unit>
        <trans-unit id="b27bf5c66dc26e2275621e2196f427590315339a" translate="yes" xml:space="preserve">
          <source>(You can force portability by specifying a Unicode range, which means that the endpoints are specified by &lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;&lt;code&gt;\N{...}&lt;/code&gt;&lt;/a&gt;, but the meaning may still not be obvious.) The stricter rules require that ranges that start or stop with an ASCII character that is not a control have all their endpoints be the literal character, and not some escape sequence (like &lt;code&gt;&quot;\x41&quot;&lt;/code&gt;), and the ranges must be all digits, or all uppercase letters, or all lowercase letters.</source>
          <target state="translated">（您可以通过指定Unicode范围来强制可移植性，这意味着端点由&lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt; &lt;code&gt;\N{...}&lt;/code&gt; &lt;/a&gt;指定，但是含义可能仍然不明显。）更严格的规则要求以ASCII开头或结尾的范围不是控件的字符，其所有端点都是文字字符，而不是某些转义序列（例如 &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ），并且范围必须是全数字，全部大写字母或全部小写字母。</target>
        </trans-unit>
        <trans-unit id="a64a87faab12fe29e48406c908901fff7a63848d" translate="yes" xml:space="preserve">
          <source>(You can force portability by specifying a Unicode range, which means that the endpoints are specified by &lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;\N{...} &lt;/a&gt;, but the meaning may still not be obvious.) The stricter rules require that ranges that start or stop with an ASCII character that is not a control have all their endpoints be the literal character, and not some escape sequence (like &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ), and the ranges must be all digits, or all uppercase letters, or all lowercase letters.</source>
          <target state="translated">（您可以通过指定Unicode范围来强制可移植性，这意味着端点由&lt;a href=&quot;perlrecharclass#Character-Ranges&quot;&gt;\ N {...}&lt;/a&gt;指定，但含义可能仍然不明显。）更严格的规则要求以ASCII开头或结尾的范围不是控件的字符，其所有端点都是文字字符，而不是某些转义序列（例如 &lt;code&gt;&quot;\x41&quot;&lt;/code&gt; ），并且范围必须是所有数字，全部大写字母或全部小写字母。</target>
        </trans-unit>
        <trans-unit id="40103a04e475e9541eab1f3aaae6dd08be353894" translate="yes" xml:space="preserve">
          <source>(You can't just say &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; , since the Perl optimizer is smart enough to elide the expression.)</source>
          <target state="translated">（您不能只说 &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; ，因为Perl优化器足够聪明，可以忽略表达式。）</target>
        </trans-unit>
        <trans-unit id="1171aa55fd6fe0863b56f6025193055e4cae7805" translate="yes" xml:space="preserve">
          <source>(You can't just say &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt;, since the Perl optimizer is smart enough to elide the expression.)</source>
          <target state="translated">（您不能只说 &lt;code&gt;$ENV{$key} = $ENV{$key}&lt;/code&gt; ，因为Perl优化器足够聪明，可以忽略表达式。）</target>
        </trans-unit>
        <trans-unit id="102826bc7aefa33ccb389fa417f4b040a4a419e3" translate="yes" xml:space="preserve">
          <source>(You can, of course, specify single characters by using, &lt;code&gt;\x{...}&lt;/code&gt; , &lt;code&gt;\N{...}&lt;/code&gt; , etc.)</source>
          <target state="translated">（您当然可以使用 &lt;code&gt;\x{...}&lt;/code&gt; ， &lt;code&gt;\N{...}&lt;/code&gt; 等来指定单个字符）</target>
        </trans-unit>
        <trans-unit id="d359a2b41fdaad014858cbb77463584c32391c60" translate="yes" xml:space="preserve">
          <source>(You can, of course, specify single characters by using, &lt;code&gt;\x{...}&lt;/code&gt;, &lt;code&gt;\N{...}&lt;/code&gt;, etc.)</source>
          <target state="translated">（当然，您可以使用 &lt;code&gt;\x{...}&lt;/code&gt; ， &lt;code&gt;\N{...}&lt;/code&gt; 等来指定单个字符。）</target>
        </trans-unit>
        <trans-unit id="e54f3a24beb63ca6443b7641e7e1af7bcf5e3c2b" translate="yes" xml:space="preserve">
          <source>(You may, in fact, want to start with localizing to</source>
          <target state="translated">（实际上，您可能想从本地化为</target>
        </trans-unit>
        <trans-unit id="4bb2b230b54ad6957c49b6580f615df0eff17f93" translate="yes" xml:space="preserve">
          <source>(added in &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.21). HP-UX is a system which uses such a named pipe.</source>
          <target state="translated">（在 &lt;code&gt;Sys::Syslog&lt;/code&gt; 0.21中添加）。HP-UX是使用这种命名管道的系统。</target>
        </trans-unit>
        <trans-unit id="409526f33747b3d99190c22c4395e3c38ccf1ed4" translate="yes" xml:space="preserve">
          <source>(also known as 90 degrees).</source>
          <target state="translated">（也称为90度）。</target>
        </trans-unit>
        <trans-unit id="7e5760178c4e5a5b7213e471eeab450909811a59" translate="yes" xml:space="preserve">
          <source>(also see &lt;a href=&quot;#gen_delimited_pat&quot;&gt;&quot;gen_delimited_pat&quot;&lt;/a&gt; below).</source>
          <target state="translated">（另请参见下面的&lt;a href=&quot;#gen_delimited_pat&quot;&gt;&amp;ldquo; gen_delimited_pa​​t&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0975309405add43e0212a50c2f0bc405f3954769" translate="yes" xml:space="preserve">
          <source>(also see &lt;a href=&quot;#gen_delimited_pat&quot;&gt;gen_delimited_pat&lt;/a&gt; below).</source>
          <target state="translated">（另请参见下面的&lt;a href=&quot;#gen_delimited_pat&quot;&gt;gen_delimited_pa​​t&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1cdc6cf7e203685897747bffc2262178c7977e11" translate="yes" xml:space="preserve">
          <source>(although &lt;code&gt;extract_tagged&lt;/code&gt; is not currently implemented that way, in order to preserve pre-5.005 compatibility).</source>
          <target state="translated">（尽管目前未以这种方式实现 &lt;code&gt;extract_tagged&lt;/code&gt; ，以保持5.005之前的兼容性）。</target>
        </trans-unit>
        <trans-unit id="f2cfa0da4ed10df5c469d6ab0c502d0727365ce2" translate="yes" xml:space="preserve">
          <source>(although in production code the substitutions might be done in the EBCDIC branch with the function call and separately in the ASCII branch without the expense of the identity map; in Perl v5.22, the identity map is optimized out so there is no expense, but the alternative above is simpler and is also available in v5.22).</source>
          <target state="translated">（尽管在生产代码中，可以使用功能调用在EBCDIC分支中进行替换，而在ASCII分支中进行替换，而无需花费标识映射；在Perl v5.22中，优化了标识映射，因此无需花费任何费用，但上述替代方法更简单，并且在v5.22中也可用）。</target>
        </trans-unit>
        <trans-unit id="d32ccfc33694fd3b9b08e15cd17089eb0baac7ce" translate="yes" xml:space="preserve">
          <source>(and</source>
          <target state="translated">(and</target>
        </trans-unit>
        <trans-unit id="4f9622103ba7043a2f17e986f7fa6b31d025760e" translate="yes" xml:space="preserve">
          <source>(and problematic) UTF-8 behaviour of Perl 5.8.0. (See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl581delta.html#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;UTF-8 no longer default under UTF-8 locales in perl581delta&lt;/a&gt;.)</source>
          <target state="translated">（和有问题的）Perl 5.8.0的UTF-8行为。（请参阅&lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl581delta.html#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;perl581delta中的UTF-8语言环境下的UTF-8不再是默认值&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="c511b51313a0786c3fbbfa64fa588b599c3cae21" translate="yes" xml:space="preserve">
          <source>(and problematic) UTF-8 behaviour of Perl 5.8.0. (See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perl581delta#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;&quot;UTF-8 no longer default under UTF-8 locales&quot; in perl581delta&lt;/a&gt;.)</source>
          <target state="translated">（和有问题的）Perl 5.8.0的UTF-8行为。（请参阅&lt;a href=&quot;https://perldoc.perl.org/5.32.0/perl581delta#UTF-8-no-longer-default-under-UTF-8-locales&quot;&gt;perl581delta中的&amp;ldquo;在UTF-8语言环境下，UTF-8不再是默认值&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="692b42cc2b3e37f46870d9371dc5e76fada22536" translate="yes" xml:space="preserve">
          <source>(and you have to say &lt;code&gt;not_&lt;/code&gt; ; you can't use the bang &lt;code&gt;!&lt;/code&gt; form). This pseudo category is a shorthand for specifying both &lt;code&gt;:collate&lt;/code&gt; and &lt;code&gt;:ctype&lt;/code&gt; . Hence, in the negated form, it is nearly the same thing as saying</source>
          <target state="translated">（您必须说 &lt;code&gt;not_&lt;/code&gt; ；您不能使用bang &lt;code&gt;!&lt;/code&gt; 表单）。伪类别是同时指定 &lt;code&gt;:collate&lt;/code&gt; 和 &lt;code&gt;:ctype&lt;/code&gt; 的简写。因此，在否定形式中，这几乎与说</target>
        </trans-unit>
        <trans-unit id="138c271ae8fbee88ee204a6c36a59c9dff93f77a" translate="yes" xml:space="preserve">
          <source>(and you have to say &lt;code&gt;not_&lt;/code&gt;; you can't use the bang &lt;code&gt;!&lt;/code&gt; form). This pseudo category is a shorthand for specifying both &lt;code&gt;:collate&lt;/code&gt; and &lt;code&gt;:ctype&lt;/code&gt;. Hence, in the negated form, it is nearly the same thing as saying</source>
          <target state="translated">（您必须说 &lt;code&gt;not_&lt;/code&gt; ；您不能使用bang &lt;code&gt;!&lt;/code&gt; 表单）。伪类别是同时指定 &lt;code&gt;:collate&lt;/code&gt; 和 &lt;code&gt;:ctype&lt;/code&gt; 的简写。因此，在否定形式中，这几乎与说</target>
        </trans-unit>
        <trans-unit id="6aeff3579e72696260e1169c528784c27ec7b978" translate="yes" xml:space="preserve">
          <source>(answer contributed by brian d foy)</source>
          <target state="translated">（答案由brian d foy提供）</target>
        </trans-unit>
        <trans-unit id="e5076fd75f69e901d6b296f3219688b4e49af9fb" translate="yes" xml:space="preserve">
          <source>(as is one for 5.005_53), and the new version is 5.6.1. Create a file</source>
          <target state="translated">（与5.005_53相同），新版本为5.6.1。建立档案</target>
        </trans-unit>
        <trans-unit id="bd07f3e89f025430991fd3ab747b695ca2119809" translate="yes" xml:space="preserve">
          <source>(as modified under &lt;code&gt;/c&lt;/code&gt;), and these potentially modified lists are used as the basis for what follows. Any character in the target string that isn't in</source>
          <target state="translated">（在 &lt;code&gt;/c&lt;/code&gt; 下进行了修改），并且这些可能经过修改的列表用作后续操作的基础。目标字符串中不存在的任何字符</target>
        </trans-unit>
        <trans-unit id="2a87525a6c2a886c0eaf943b38e0ee76d77adf64" translate="yes" xml:space="preserve">
          <source>(as the filename of DUCET) is used. If you will prepare your own table file, any name other than</source>
          <target state="translated">（作为DUCET的文件名）。如果您准备自己的表文件，则使用除</target>
        </trans-unit>
        <trans-unit id="786ef72f31164be533ff5c7e4a7e63ae5230f32a" translate="yes" xml:space="preserve">
          <source>(assuming the default installation location was chosen).</source>
          <target state="translated">（假设选择了默认安装位置）。</target>
        </trans-unit>
        <trans-unit id="63c4a5f42cbbe3a05030f3bc9132df45a99212cd" translate="yes" xml:space="preserve">
          <source>(at least) the following lines</source>
          <target state="translated">（至少）以下几行</target>
        </trans-unit>
        <trans-unit id="b948cb7a3253ff3b0a5238bd22a6d610864b716f" translate="yes" xml:space="preserve">
          <source>(at the very end for binary compatibility).</source>
          <target state="translated">（最后是二进制兼容性）。</target>
        </trans-unit>
        <trans-unit id="48792f7a9033374771dbfb100ac3abb29a32dab5" translate="yes" xml:space="preserve">
          <source>(because either it starts with a &quot;_&quot;, or because none of its lexicons have &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; ), then we have failed to find a normal way to maketext</source>
          <target state="translated">（因为它以&amp;ldquo; _&amp;rdquo;开头，或者因为它的所有词典都没有 &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; ），所以我们无法找到正常的maketext方法</target>
        </trans-unit>
        <trans-unit id="89da1dcaa9a2597711f521770fdd8b5c61c39c1a" translate="yes" xml:space="preserve">
          <source>(because either it starts with a &quot;_&quot;, or because none of its lexicons have &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt;), then we have failed to find a normal way to maketext</source>
          <target state="translated">（因为它以&amp;ldquo; _&amp;rdquo;开头，或者因为它的所有词典都没有 &lt;code&gt;_AUTO =&amp;gt; 1,&lt;/code&gt; ），所以我们无法找到正常的maketext方法</target>
        </trans-unit>
        <trans-unit id="f6d16baf27904d45d89ec1d9d7ed8281fa17d9fe" translate="yes" xml:space="preserve">
          <source>(because in particular, simply assigning a weak reference back to itself does not work to unweaken it; &lt;code&gt;$REF = $REF&lt;/code&gt; does not work).</source>
          <target state="translated">（特别是因为简单地给它分配一个弱引用并不能使其弱化； &lt;code&gt;$REF = $REF&lt;/code&gt; 不起作用）。</target>
        </trans-unit>
        <trans-unit id="4b16cab82b532af855df5c5a4ca92e48f90985fe" translate="yes" xml:space="preserve">
          <source>(but slightly more complicated). This tree reflects the way Perl parsed your code, but has nothing to do with the execution order. There is an additional &quot;thread&quot; going through the nodes of the tree which shows the order of execution of the nodes. In our simplified example above it looks like:</source>
          <target state="translated">（但稍微复杂一些）。该树反映了Perl解析代码的方式，但与执行顺序无关。在树的各个节点之间还有一个附加的&amp;ldquo;线程&amp;rdquo;，它显示了节点的执行顺序。在上面的简化示例中，它看起来像：</target>
        </trans-unit>
        <trans-unit id="4693cf64bd9a521498526ddc1119c6dfd5c3b552" translate="yes" xml:space="preserve">
          <source>(c) Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2003, 2004 - based on BigInt code by Tels from 2001-2003.</source>
          <target state="translated">（c）Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 2003，2004-基于Tels在2001-2003年间的BigInt代码。</target>
        </trans-unit>
        <trans-unit id="f6623ddfaf5c5328a69ecd651966b3d508f1ba1d" translate="yes" xml:space="preserve">
          <source>(change &quot;unrestricted&quot; to &quot;redistributable&quot;?)</source>
          <target state="translated">（将&amp;ldquo;不受限制&amp;rdquo;更改为&amp;ldquo;可再分发&amp;rdquo;？）</target>
        </trans-unit>
        <trans-unit id="f179f6995bed99ae8a0cfb9caaec4219d44a9f23" translate="yes" xml:space="preserve">
          <source>(configure, build, test, runtime, etc.) and</source>
          <target state="translated">（配置，构建，测试，运行时等）和</target>
        </trans-unit>
        <trans-unit id="f705994b685d7ab39803fc55afe57bb501708c2b" translate="yes" xml:space="preserve">
          <source>(const) data, and the &lt;code&gt;U&lt;/code&gt; is &amp;lt;undefined&amp;gt;, external symbols referred to.</source>
          <target state="translated">（const）数据，而 &lt;code&gt;U&lt;/code&gt; 是&amp;lt;undefined&amp;gt;，是指外部符号。</target>
        </trans-unit>
        <trans-unit id="f2d8cd4b2f49ebe16d34218b69e616c4bfb7685e" translate="yes" xml:space="preserve">
          <source>(contributed by Alex Beamish)</source>
          <target state="translated">（由Alex Beamish提供）</target>
        </trans-unit>
        <trans-unit id="8a01f14aa6ea03ae12033993b8340bb14bc9dc2b" translate="yes" xml:space="preserve">
          <source>(contributed by Anno Siegel)</source>
          <target state="translated">（由Anno Siegel贡献）</target>
        </trans-unit>
        <trans-unit id="fac38ab03b508c364ce52ea99dd09ac56e9be13a" translate="yes" xml:space="preserve">
          <source>(contributed by Ben Morrow)</source>
          <target state="translated">（由Ben Morrow提供）</target>
        </trans-unit>
        <trans-unit id="cab93540468b3299e5e7ff453d2c13989f42fd8e" translate="yes" xml:space="preserve">
          <source>(contributed by Brian McCauley)</source>
          <target state="translated">（由Brian McCauley提供）</target>
        </trans-unit>
        <trans-unit id="5866c9a649588b2bcaf84ab58628c670110cf84d" translate="yes" xml:space="preserve">
          <source>(contributed by Michael Carman)</source>
          <target state="translated">（由Michael Carman提供）</target>
        </trans-unit>
        <trans-unit id="11aa83d938cb90075d1401151f2508d1510688fe" translate="yes" xml:space="preserve">
          <source>(contributed by Peter J. Holzer, hjp-usenet2@hjp.at)</source>
          <target state="translated">（由Peter J. Holzer提供，hjp-usenet2 @ hjp.at）</target>
        </trans-unit>
        <trans-unit id="5dee00bc78a497a9d448541fd31f216ca89ba87a" translate="yes" xml:space="preserve">
          <source>(contributed by Shlomi Fish)</source>
          <target state="translated">（由Shlomi Fish提供）</target>
        </trans-unit>
        <trans-unit id="1e46d3c5ed3722672a09f39374a1a7ffdac24e1c" translate="yes" xml:space="preserve">
          <source>(contributed by Xho)</source>
          <target state="translated">（由Xho提供）</target>
        </trans-unit>
        <trans-unit id="b1ad773d61a232c565a534ba9591dd6ec671fc74" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Ben Morrow)</source>
          <target state="translated">（由brian d Foy和Ben Morrow贡献）</target>
        </trans-unit>
        <trans-unit id="da6037d0c8a0901dbdb8efa83408cf6cf316ca26" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Benjamin Goldberg)</source>
          <target state="translated">（由brian d Foy和Benjamin Goldberg贡献）</target>
        </trans-unit>
        <trans-unit id="b450df445d93e3c6b0f335b0c69c72d7b68c7ec1" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy and Dave Cross)</source>
          <target state="translated">（由brian d foy和Dave Cross贡献）</target>
        </trans-unit>
        <trans-unit id="31cee2f6fca37b4a710b6741f1b97ea6878162ca" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy with updates from others)</source>
          <target state="translated">（由brian d foy提供，其他人提供了更新）</target>
        </trans-unit>
        <trans-unit id="5ecf6719df9ae48ff24c5100a5d4b1ef446cd95f" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy)</source>
          <target state="translated">（由brian d foy贡献）</target>
        </trans-unit>
        <trans-unit id="2c422c445de0783d3809d65cd3e3acd9a5e0e370" translate="yes" xml:space="preserve">
          <source>(contributed by brian d foy, updated Fri Jul 25 12:22:26 PDT 2008)</source>
          <target state="translated">（由brian d foy提供，PDT 2008年7月25日星期五12:22:26更新）</target>
        </trans-unit>
        <trans-unit id="9c413c8db2fc0e0a195f2df6b3cb2359816721c7" translate="yes" xml:space="preserve">
          <source>(copyright 2004, Published by O'Reilly Media, Inc.), Damian Conway provides a list of criteria to use when deciding if OO is the right fit for your problem:</source>
          <target state="translated">（版权归2004，由O'Reilly Media，Inc.发行），Damian Conway提供了确定OO是否适合您的问题时要使用的标准列表：</target>
        </trans-unit>
        <trans-unit id="181e536cf1422cc7201f63d065eb7aa9c1490f16" translate="yes" xml:space="preserve">
          <source>(currently the last two may hit a wrong location, but this may improve soon). Under Win* see &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt;.</source>
          <target state="translated">（当前的后两个位置可能不正确，但这很快就会有所改善）。在Win *下，请参见&lt;a href=&quot;#SYNOPSIS&quot;&gt;&amp;ldquo;摘要&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea2654366590f288ae6ebd7fdc54bceaf9e6545c" translate="yes" xml:space="preserve">
          <source>(currently the last two may hit a wrong location, but this may improve soon). Under Win* see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;.</source>
          <target state="translated">（当前的后两个位置可能不正确，但这很快就会改善）。在Win *下，请参阅&lt;a href=&quot;#SYNOPSIS&quot;&gt;提要&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41e74bf7b4c32eb2f41eaf25ee2c6c323ec8d504" translate="yes" xml:space="preserve">
          <source>(cuttable). An atomic operation is an action that can&amp;rsquo;t be interrupted, not one forbidden in a nuclear-free zone.</source>
          <target state="translated">（可切割）。原子操作是不可中断的动作，不是无核区中禁止的动作。</target>
        </trans-unit>
        <trans-unit id="b3a9a8199852eb2a04185407b3827576c8e6172d" translate="yes" xml:space="preserve">
          <source>(defaults to the environment variable</source>
          <target state="translated">（默认为环境变量</target>
        </trans-unit>
        <trans-unit id="c979523d1a9c1a0d77ab7e430a7c98147073391d" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(AV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（不建议使用-使用 &lt;code&gt;(AV *)NULL&lt;/code&gt; 代替）</target>
        </trans-unit>
        <trans-unit id="887821ca73f1fcf6de46ded6b730b60d3beffd8e" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(CV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（不建议使用-使用 &lt;code&gt;(CV *)NULL&lt;/code&gt; 代替）</target>
        </trans-unit>
        <trans-unit id="b53d21700af9fd28a7f43adfe7247f1c0f49ab4c" translate="yes" xml:space="preserve">
          <source>(deprecated - use &lt;code&gt;(HV *)NULL&lt;/code&gt; instead)</source>
          <target state="translated">（不建议使用-使用 &lt;code&gt;(HV *)NULL&lt;/code&gt; 代替）</target>
        </trans-unit>
        <trans-unit id="4957206df9fb7ffd7b399b79b2a6449d69017a22" translate="yes" xml:space="preserve">
          <source>(do not forget to run &lt;code&gt;make regen_headers&lt;/code&gt; if you modify this file).</source>
          <target state="translated">（如果您修改此文件，请不要忘记运行 &lt;code&gt;make regen_headers&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47d764752c9dc13917cf2e5897bbaac62c58fbf5" translate="yes" xml:space="preserve">
          <source>(e.g., the application may hang, or generate an error) due to mutexes that are needed to control functionality within the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; module.</source>
          <target state="translated">（例如，应用程序可能会挂起或生成错误），这是由于控制&lt;a href=&quot;threads&quot;&gt;线程&lt;/a&gt;模块内功能所需的互斥锁所致。</target>
        </trans-unit>
        <trans-unit id="ae81a9ce14e07a570fbb453b8b2d8a4343210087" translate="yes" xml:space="preserve">
          <source>(engineers use</source>
          <target state="translated">（工程师使用</target>
        </trans-unit>
        <trans-unit id="a0b2466bb6153f054793526252c555c73aaf459d" translate="yes" xml:space="preserve">
          <source>(equal) if the operands are char-for-char identical. If you really want to know whether two strings--which &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;cmp&lt;/code&gt; may consider different--are equal as far as collation in the locale is concerned, see the discussion in &lt;a href=&quot;#Category-LC_COLLATE%3A-Collation&quot;&gt;&quot;Category &lt;code&gt;LC_COLLATE&lt;/code&gt;: Collation&quot;&lt;/a&gt;.</source>
          <target state="translated">（相等）如果操作数是逐字符相同的。如果您真的想知道就区域设置中的&lt;a href=&quot;#Category-LC_COLLATE%3A-Collation&quot;&gt;排序规则&lt;/a&gt;而言，两个字符串（ &lt;code&gt;eq&lt;/code&gt; 和 &lt;code&gt;cmp&lt;/code&gt; 可能认为不同）是否相等，请参见&amp;ldquo;类别 &lt;code&gt;LC_COLLATE&lt;/code&gt; ：排序规则&amp;rdquo;中的讨论。</target>
        </trans-unit>
        <trans-unit id="4a54a48aa166f000450ddb5bbfffb162a4703f6a" translate="yes" xml:space="preserve">
          <source>(equal) if the operands are char-for-char identical. If you really want to know whether two strings--which &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;cmp&lt;/code&gt; may consider different--are equal as far as collation in the locale is concerned, see the discussion in &lt;a href=&quot;#Category-LC_COLLATE-%3a-Collation&quot;&gt;Category LC_COLLATE : Collation&lt;/a&gt;.</source>
          <target state="translated">（相等）如果操作数是逐字符相同的。如果您真的想知道就区域设置中的&lt;a href=&quot;#Category-LC_COLLATE-%3a-Collation&quot;&gt;排序规则&lt;/a&gt;而言，两个字符串（ &lt;code&gt;eq&lt;/code&gt; 和 &lt;code&gt;cmp&lt;/code&gt; 可能认为不同）是否相等，请参阅类别LC_COLLATE：排序规则中的讨论。</target>
        </trans-unit>
        <trans-unit id="7d245ed086c5e828978b1419867a15ebe5c96265" translate="yes" xml:space="preserve">
          <source>(explained in the next paragraph), separated by spaces. (Other than as used to separate elements, spaces are to be ignored.) Case distinctions in the condition list are not significant. Conditions preceded by &quot;NON_&quot; represent the negation of the condition.</source>
          <target state="translated">（在下一段中说明），以空格分隔。（除了用来分隔元素的空格外，将忽略空格。）条件列表中的大小写区别不大。以&amp;ldquo; NON_&amp;rdquo;开头的条件表示条件的否定。</target>
        </trans-unit>
        <trans-unit id="b7612ed7f2ab039566cbb6a180523b77c6c55c37" translate="yes" xml:space="preserve">
          <source>(for Win32 Perl)</source>
          <target state="translated">（对于Win32 Perl）</target>
        </trans-unit>
        <trans-unit id="52773988fa05986370e14e73b80f0d9b5d869e6f" translate="yes" xml:space="preserve">
          <source>(for pthreads platforms)</source>
          <target state="translated">（对于pthreads平台）</target>
        </trans-unit>
        <trans-unit id="f2baa49355f382d8855fa13bc94ef1ce38af8547" translate="yes" xml:space="preserve">
          <source>(have the directories with &lt;code&gt;*.exe&lt;/code&gt; on PATH, and &lt;code&gt;*.dll&lt;/code&gt; on LIBPATH);</source>
          <target state="translated">（在PATH上带有 &lt;code&gt;*.exe&lt;/code&gt; ，在LIBPATH 上带有 &lt;code&gt;*.dll&lt;/code&gt; 的目录）；</target>
        </trans-unit>
        <trans-unit id="8b307b3649a26281003eca21c9415192d0da1a2f" translate="yes" xml:space="preserve">
          <source>(have the directory on PATH);</source>
          <target state="translated">（在PATH上有该目录）；</target>
        </trans-unit>
        <trans-unit id="e78594face702b66af1259171d24ead963a0670c" translate="yes" xml:space="preserve">
          <source>(here the optional &lt;code&gt;IN&lt;/code&gt; keyword is omitted).</source>
          <target state="translated">（此处省略了可选的 &lt;code&gt;IN&lt;/code&gt; 关键字）。</target>
        </trans-unit>
        <trans-unit id="0ca1edf548683a8b18ee06ce8f4d27a28c75a756" translate="yes" xml:space="preserve">
          <source>(i.e. &lt;code&gt;A::foo&lt;/code&gt; is called twice).</source>
          <target state="translated">（即 &lt;code&gt;A::foo&lt;/code&gt; 被调用了两次）。</target>
        </trans-unit>
        <trans-unit id="8f8464e8307b268923dc0c2b5876277d2c0fd5db" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ), raises an exception. If umask(2) is not implemented and you are not trying to restrict access for yourself, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（即 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ））引发异常。如果未实现umask（2），并且您不想自己限制访问，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f5d49562cd8c87da892149a0b2d4a8af46e9d52" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ), raises an exception. If umask(2) is not implemented and you are not trying to restrict access for yourself, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（即 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ））引发异常。如果未实现umask（2），并且您不想自己限制访问，则返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6522627c132299a9219dc1d891e679179a79502" translate="yes" xml:space="preserve">
          <source>(i.e., &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt;), raises an exception. If &lt;a href=&quot;http://man.he.net/man2/umask&quot;&gt;umask(2)&lt;/a&gt; is not implemented and you are not trying to restrict access for yourself, returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">（即 &lt;code&gt;(EXPR &amp;amp; 0700) &amp;gt; 0&lt;/code&gt; ））引发异常。如果未实现&lt;a href=&quot;http://man.he.net/man2/umask&quot;&gt;umask（2），&lt;/a&gt;并且您不想自己限制访问，则返回&lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55c213fac91606d567b36164fd0c347d752bb458" translate="yes" xml:space="preserve">
          <source>(i.e., Unix) you can configure perl with &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; and it will turn buffer violations into crashes. You will find it to be marvellously slow, so you may want to skip perl's own tests.</source>
          <target state="translated">（即Unix），可以使用 &lt;code&gt;-Accflags=-DPERL_DEBUG_READONLY_COW&lt;/code&gt; 配置perl，它将把违反缓冲区的行为变成崩溃。您会发现它运行起来非常慢，因此您可能要跳过perl自己的测试。</target>
        </trans-unit>
        <trans-unit id="ce300057bb6cbcc44d6adf16788915bba76efc18" translate="yes" xml:space="preserve">
          <source>(if &lt;a href=&quot;../cpan/meta&quot;&gt;CPAN::Meta&lt;/a&gt; is installed). Clients like &lt;a href=&quot;../cpan&quot;&gt;CPAN&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/CPANPLUS&quot;&gt;CPANPLUS&lt;/a&gt; will read this files to see what prerequisites must be fulfilled before building or testing the distribution. If you with to shut this feature off, set the &lt;code&gt;NO_MYMETA&lt;/code&gt;&lt;code&gt;WriteMakeFile()&lt;/code&gt; flag to true.</source>
          <target state="translated">（如果已安装&lt;a href=&quot;../cpan/meta&quot;&gt;CPAN :: Meta&lt;/a&gt;）。诸如&lt;a href=&quot;../cpan&quot;&gt;CPAN&lt;/a&gt;或&lt;a href=&quot;http://search.cpan.org/perldoc/CPANPLUS&quot;&gt;CPANPLUS之&lt;/a&gt;类的客户端将阅读此文件，以了解在构建或测试发行版之前必须满足哪些先决条件。如果要关闭此功能，请将 &lt;code&gt;NO_MYMETA&lt;/code&gt; &lt;code&gt;WriteMakeFile()&lt;/code&gt; 标志设置为true。</target>
        </trans-unit>
        <trans-unit id="1bb2e3e9c70daf92dbbbe2b3d1b529a91355eda5" translate="yes" xml:space="preserve">
          <source>(if &lt;a href=&quot;CPAN::Meta&quot;&gt;CPAN::Meta&lt;/a&gt; is installed). Clients like &lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt; or &lt;a href=&quot;cpanplus&quot;&gt;CPANPLUS&lt;/a&gt; will read these files to see what prerequisites must be fulfilled before building or testing the distribution. If you wish to shut this feature off, set the &lt;code&gt;NO_MYMETA&lt;/code&gt;&lt;code&gt;WriteMakeFile()&lt;/code&gt; flag to true.</source>
          <target state="translated">（如果已安装&lt;a href=&quot;CPAN::Meta&quot;&gt;CPAN :: Meta&lt;/a&gt;）。诸如&lt;a href=&quot;cpan&quot;&gt;CPAN&lt;/a&gt;或&lt;a href=&quot;cpanplus&quot;&gt;CPANPLUS之&lt;/a&gt;类的客户将阅读这些文件，以了解在构建或测试发行版之前必须满足哪些先决条件。如果要关闭此功能，请将 &lt;code&gt;NO_MYMETA&lt;/code&gt; &lt;code&gt;WriteMakeFile()&lt;/code&gt; 标志设置为true。</target>
        </trans-unit>
        <trans-unit id="74e7cc4a040d094131ce7adf1ccff6a9eb9bc3ff" translate="yes" xml:space="preserve">
          <source>(if it exists) are ignored.</source>
          <target state="translated">（如果存在）被忽略。</target>
        </trans-unit>
        <trans-unit id="8bd7b4287b1a4320a59f0e97575d78114f1f439c" translate="yes" xml:space="preserve">
          <source>(ignore multiple &lt;code&gt;warning L4085&lt;/code&gt; ).</source>
          <target state="translated">（忽略多个 &lt;code&gt;warning L4085&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="22e1932e601e46590f4cd1081a5ac59daa128d38" translate="yes" xml:space="preserve">
          <source>(ignore multiple &lt;code&gt;warning L4085&lt;/code&gt;).</source>
          <target state="translated">（忽略多个 &lt;code&gt;warning L4085&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="51361c690dc77f93fb8886da6627b841196647e3" translate="yes" xml:space="preserve">
          <source>(in a new</source>
          <target state="translated">（在新</target>
        </trans-unit>
        <trans-unit id="d346483f692f461af7f2b89212d442e1ef9e6fb1" translate="yes" xml:space="preserve">
          <source>(in cleanup) %s</source>
          <target state="translated">（清理中）％s</target>
        </trans-unit>
        <trans-unit id="92af5b7be830c62c74b2cbee2ea3528c112d9b33" translate="yes" xml:space="preserve">
          <source>(in the CPAN distribution of this module) for how to create a class that supports object sharing.</source>
          <target state="translated">（在此模块的CPAN分发中）以了解如何创建支持对象共享的类。</target>
        </trans-unit>
        <trans-unit id="facc7193d5281131d9b0521947b073e2e6c2eb5b" translate="yes" xml:space="preserve">
          <source>(installed as</source>
          <target state="translated">（安装为</target>
        </trans-unit>
        <trans-unit id="70b861787e317f2c2b8cac2c8a1c5c4c08c57918" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlamiga&quot;&gt;perlamiga&lt;/a&gt;).</source>
          <target state="translated">（安装为&lt;a href=&quot;perlamiga&quot;&gt;perlamiga&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4a2fc6f0afe5ebafb971a5f6f6450a8a8966ee80" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;), &lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http://www.cygwin.com/&lt;/a&gt;</source>
          <target state="translated">（安装为&lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;），&lt;a href=&quot;http://www.cygwin.com/&quot;&gt;http&lt;/a&gt;：//www.cygwin.com/</target>
        </trans-unit>
        <trans-unit id="30794954cc28f569f6a6161a7038ad0f0357c23b" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;), &lt;a href=&quot;https://www.cygwin.com/&quot;&gt;https://www.cygwin.com/&lt;/a&gt;</source>
          <target state="translated">（安装为&lt;a href=&quot;perlcygwin&quot;&gt;perlcygwin&lt;/a&gt;），&lt;a href=&quot;https://www.cygwin.com/&quot;&gt;https&lt;/a&gt;：//www.cygwin.com/</target>
        </trans-unit>
        <trans-unit id="d21126d258fc7e5193f50e33b705649c9f31bd37" translate="yes" xml:space="preserve">
          <source>(installed as &lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;)</source>
          <target state="translated">（作为&lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;安装）</target>
        </trans-unit>
        <trans-unit id="69a2857991e5de08a1db31d1251389885ffd8caa" translate="yes" xml:space="preserve">
          <source>(internal use only)</source>
          <target state="translated">（仅供内部使用）</target>
        </trans-unit>
        <trans-unit id="3745d664a5cb578c0bc49111f2af5da3e3f2d003" translate="yes" xml:space="preserve">
          <source>(just by the name of the IO function, like &quot;Read&quot;) with the</source>
          <target state="translated">（仅按IO功能的名称，例如&amp;ldquo;读取&amp;rdquo;），</target>
        </trans-unit>
        <trans-unit id="cd5c26a005439b782269db0e964b40fc7eca11de" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; ). This sequence of base character and modifiers is called a</source>
          <target state="translated">（如 &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; ）。这个基本字符和修饰符的序列称为</target>
        </trans-unit>
        <trans-unit id="e4fb3e36ee76f262b7a838b518d4426d4da329c7" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt;). This sequence of base character and modifiers is called a</source>
          <target state="translated">（如 &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; ）。这个基本字符和修饰符的序列称为</target>
        </trans-unit>
        <trans-unit id="8620bf49ecd95e38b6d7494e30b7d9014d4bad52" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ) followed by one or more</source>
          <target state="translated">（例如&amp;ldquo; &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ），然后是一个或多个</target>
        </trans-unit>
        <trans-unit id="684b38fe36448fe950b0ca06019115edb178737c" translate="yes" xml:space="preserve">
          <source>(like &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt;) followed by one or more</source>
          <target state="translated">（例如&amp;ldquo; &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; ），然后是一个或多个</target>
        </trans-unit>
        <trans-unit id="898558423b918aeed50b4db293c37dc4600aa4d3" translate="yes" xml:space="preserve">
          <source>(may be system dependent). If you want to force the creation of a new perl, it is recommended that you delete this</source>
          <target state="translated">（可能取决于系统）。如果要强制创建新的Perl，建议您删除此</target>
        </trans-unit>
        <trans-unit id="b135c873a61fbd2b70216d59897dae798e688cac" translate="yes" xml:space="preserve">
          <source>(minimum) width</source>
          <target state="translated">（最小）宽度</target>
        </trans-unit>
        <trans-unit id="fb68136270e91ed8ffdbfd39c681ea2d1e249f38" translate="yes" xml:space="preserve">
          <source>(nearly all modules) this has three side effects:</source>
          <target state="translated">（几乎所有模块）这具有三个副作用：</target>
        </trans-unit>
        <trans-unit id="394df79e888bb4bc8d5dd0e24df5f278d4cdc8b9" translate="yes" xml:space="preserve">
          <source>(no extension) give an argument &lt;code&gt;n:/bin/blah.&lt;/code&gt; (dot appended) to system().</source>
          <target state="translated">（无扩展名）提供参数 &lt;code&gt;n:/bin/blah.&lt;/code&gt; （附加点）到system（）。</target>
        </trans-unit>
        <trans-unit id="e0f8b79485e24e1aa85b5719818060e99b9fac5a" translate="yes" xml:space="preserve">
          <source>(non-super) languages that are probably acceptable to the user, to be used</source>
          <target state="translated">用户可能会接受的（非超级）语言</target>
        </trans-unit>
        <trans-unit id="df56c4328df4065d33cb67c45603001892660f7c" translate="yes" xml:space="preserve">
          <source>(not locales). See the GNU &lt;code&gt;gettext&lt;/code&gt; library documentation for more information.</source>
          <target state="translated">（不是语言环境）。有关更多信息，请参见GNU &lt;code&gt;gettext&lt;/code&gt; 库文档。</target>
        </trans-unit>
        <trans-unit id="ca133eb8cde4644a55bd2dd3514979460453ef7d" translate="yes" xml:space="preserve">
          <source>(not simply older ones) set the &lt;code&gt;UNINST&lt;/code&gt; variable.</source>
          <target state="translated">（不只是较旧的变量）设置 &lt;code&gt;UNINST&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="87ba0557f46520422b4ad12ed987b7a873c1f334" translate="yes" xml:space="preserve">
          <source>(not) +</source>
          <target state="translated">（不是）+</target>
        </trans-unit>
        <trans-unit id="516dc39365f26048e9a017e4305c1cd5470e6958" translate="yes" xml:space="preserve">
          <source>(note that the argument &lt;code&gt;-my_opts&lt;/code&gt; is taken care of by the &lt;code&gt;extproc&lt;/code&gt; line in your script, see &lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;&quot;&lt;code&gt;extproc&lt;/code&gt; on the first line&quot;&lt;/a&gt;).</source>
          <target state="translated">（请注意， &lt;code&gt;-my_opts&lt;/code&gt; 参数由脚本中的 &lt;code&gt;extproc&lt;/code&gt; 行处理，请参见&lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;&amp;ldquo;第一行的 &lt;code&gt;extproc&lt;/code&gt; &amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a87bac478adeaad45a131a7a1ff824736853050d" translate="yes" xml:space="preserve">
          <source>(note that the argument &lt;code&gt;-my_opts&lt;/code&gt; is taken care of by the &lt;code&gt;extproc&lt;/code&gt; line in your script, see &lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;extproc on the first line&lt;/a&gt;).</source>
          <target state="translated">（请注意， &lt;code&gt;-my_opts&lt;/code&gt; 参数由脚本中的 &lt;code&gt;extproc&lt;/code&gt; 行处理，请参见&lt;a href=&quot;#extproc-on-the-first-line&quot;&gt;第一行上的extproc&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2252501faf83dd862f721d37d7fabacb6191045c" translate="yes" xml:space="preserve">
          <source>(note the capital 'O')?</source>
          <target state="translated">（注意大写的&amp;ldquo; O&amp;rdquo;）？</target>
        </trans-unit>
        <trans-unit id="2f31cea769a0a416e9dd648f32e14fc8c6b80912" translate="yes" xml:space="preserve">
          <source>(obsolete) supply object methods for directory handles</source>
          <target state="translated">（过时的）目录句柄的供应对象方法</target>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(or</target>
        </trans-unit>
        <trans-unit id="943a0a81a1832953a2e589fda6975dd0742c8224" translate="yes" xml:space="preserve">
          <source>(or a later version). Note that all these utilities are known to be available from LEO:</source>
          <target state="translated">（或更高版本）。请注意，所有这些实用程序都可以从LEO获得：</target>
        </trans-unit>
        <trans-unit id="0be01a7b142b9329408575280612f9a80ba4041b" translate="yes" xml:space="preserve">
          <source>(or atomic subexpressions) are regular expressions, in the context of a larger regular expression, that function independently of the larger regular expression. That is, they consume as much or as little of the string as they wish without regard for the ability of the larger regexp to match. Independent subexpressions are represented by &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; or (starting in 5.32, experimentally in 5.28) &lt;code&gt;(*atomic:regexp)&lt;/code&gt;. We can illustrate their behavior by first considering an ordinary regexp:</source>
          <target state="translated">（或原子子表达式）是在较大正则表达式的上下文中独立于较大正则表达式起作用的正则表达式。也就是说，它们消耗了所希望的字符串的数量或少或少，而没有考虑较大的正则表达式进行匹配的能力。独立的子表达式由 &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; 或（从5.32开始，实验性地在5.28中） &lt;code&gt;(*atomic:regexp)&lt;/code&gt; 表示。我们可以通过首先考虑一个普通的正则表达式来说明它们的行为：</target>
        </trans-unit>
        <trans-unit id="c1d876dbf1a11aabf97fb7b5ced558dd7fc14007" translate="yes" xml:space="preserve">
          <source>(or current directory) and working back up to five levels of '..'.</source>
          <target state="translated">（或当前目录），并最多备份五个级别的&amp;ldquo; ..&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5d789ea9ecbca64db40cc5cf855ac5aab3b99f9f" translate="yes" xml:space="preserve">
          <source>(or equivalent) to check for executable image, and</source>
          <target state="translated">（或同等功能）以检查可执行映像，以及</target>
        </trans-unit>
        <trans-unit id="8fad3115516a964cc9ebf7c5c7a5c31c4b8ee04f" translate="yes" xml:space="preserve">
          <source>(or filename) is stored the zip archive.</source>
          <target state="translated">（或文件名）存储在zip存档中。</target>
        </trans-unit>
        <trans-unit id="f682b3c18a9391cb4e366a7aa9b5a7cb465c2e8c" translate="yes" xml:space="preserve">
          <source>(or formerly</source>
          <target state="translated">（或以前</target>
        </trans-unit>
        <trans-unit id="10b8de91c04f0b369cf7eb571a6ee9c70e6c71ba" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed to determine prerequisites.</source>
          <target state="translated">（或类似）必须执行以确定先决条件。</target>
        </trans-unit>
        <trans-unit id="c13eec8ddce00beba6d30648385e210d2e5dbcd6" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed when building this distribution, or whether it can be built, tested and installed solely from consulting its metadata file. The main reason to set this to a true value if that your module performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its build/install process.</source>
          <target state="translated">（或类似）在构建此发行版时必须执行，或者是否可以仅通过查询其元数据文件来进行构建，测试和安装。如果您的模块在其构建/安装过程中执行了一些动态配置（询问问题，感知环境等），则将其设置为true的主要原因。</target>
        </trans-unit>
        <trans-unit id="d5020017a9c342ddf1d165a2f255f48cb8ec7e31" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed when building this distribution, or whether it can be built, tested and installed solely from consulting its metadata file. The main reason to set this to a true value is that your module performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its build/install process.</source>
          <target state="translated">（或类似）在构建此发行版时必须执行，或者是否可以仅通过查询其元数据文件来进行构建，测试和安装。将其设置为真值的主要原因是，在其构建/安装过程中，模块会执行一些动态配置（询问问题，感知环境等）。</target>
        </trans-unit>
        <trans-unit id="5391579085669783c7f6909d1b2de35a976a946e" translate="yes" xml:space="preserve">
          <source>(or similar) must be executed, or whether this module can be built, tested and installed solely from consulting its metadata file. The main reason to set this to a true value if that your module performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its build/install process.</source>
          <target state="translated">（或类似）必须执行，或者是否可以仅通过查询其元数据文件来构建，测试和安装此模块。如果您的模块在其构建/安装过程中执行了一些动态配置（询问问题，感知环境等），则将其设置为true的主要原因。</target>
        </trans-unit>
        <trans-unit id="d403fe550f70047da65adfbaaaa9a12d0ea25d65" translate="yes" xml:space="preserve">
          <source>(or something like that).</source>
          <target state="translated">（或类似的东西）。</target>
        </trans-unit>
        <trans-unit id="b78679543a880190c17b815dfea3958a0c6bb773" translate="yes" xml:space="preserve">
          <source>(or the second if the first character is a caret) character of a bracketed character class, it does not denote the end of the class (as you cannot have an empty class) and is considered part of the set of characters that can be matched without escaping.</source>
          <target state="translated">（或第二个字符，如果第一个字符是插入符号）放在方括号字符类中，则它不表示该类的末尾（因为您不能有空类），并且被认为是可以匹配的字符集的一部分没有逃脱。</target>
        </trans-unit>
        <trans-unit id="d8c8bb7d961236b850f553d2b4e51bb846fabeed" translate="yes" xml:space="preserve">
          <source>(or the value is discarded if</source>
          <target state="translated">（或者，如果</target>
        </trans-unit>
        <trans-unit id="a47590de5dce94882f3eb07aab9c1f1f12b27039" translate="yes" xml:space="preserve">
          <source>(or you could just use &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; , if you've installed the VMS::Stdio extension distributed with Perl). If &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; has to change the file protection to delete the file, and you interrupt it in midstream, the file may be left intact, but with a changed ACL allowing you delete access.</source>
          <target state="translated">（或者，如果您已经安装了与Perl一起分发的VMS :: Stdio扩展，则可以只使用 &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; ）。如果 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; 必须更改文件保护以删除文件，并且您在中途中断了文件，则该文件可能会保留完整，但使用更改后的ACL可以删除访问权限。</target>
        </trans-unit>
        <trans-unit id="f28d131552eca4b6c0fe1f0e1d6122eb3b460e17" translate="yes" xml:space="preserve">
          <source>(or you could just use &lt;code&gt;VMS::Stdio::remove&lt;/code&gt;, if you've installed the VMS::Stdio extension distributed with Perl). If &lt;code&gt;unlink&lt;/code&gt; has to change the file protection to delete the file, and you interrupt it in midstream, the file may be left intact, but with a changed ACL allowing you delete access.</source>
          <target state="translated">（或者，如果您已经安装了与Perl一起分发的VMS :: Stdio扩展，则可以只使用 &lt;code&gt;VMS::Stdio::remove&lt;/code&gt; ）。如果 &lt;code&gt;unlink&lt;/code&gt; 必须更改文件保护以删除文件，并且您在中途中断了该文件，则该文件可能会保留完整，但使用更改后的ACL可以删除访问权限。</target>
        </trans-unit>
        <trans-unit id="5cc4703905ea087120e18389a3b56b4989f1d0ce" translate="yes" xml:space="preserve">
          <source>(or your operating system's equivalent) could not be opened.</source>
          <target state="translated">（或您的操作系统的等效版本）无法打开。</target>
        </trans-unit>
        <trans-unit id="d217df85ffcaff01b34839a3630a0f8777e5129a" translate="yes" xml:space="preserve">
          <source>(or your platform's equivalent procedure) to verify that &lt;b&gt;perl&lt;/b&gt; and its libraries have been installed correctly. A correct installation is verified by output that looks like:</source>
          <target state="translated">（或您平台的等效过程）来验证&lt;b&gt;perl&lt;/b&gt;及其库是否已正确安装。如下所示的输出将验证正确的安装：</target>
        </trans-unit>
        <trans-unit id="17fc4954c0e2adfe4c1931803c04d50628b02fa1" translate="yes" xml:space="preserve">
          <source>(or, you don't have to do this yourself because this example is predefined)</source>
          <target state="translated">（或者，您不必自己执行此操作，因为此示例是预定义的）</target>
        </trans-unit>
        <trans-unit id="0f663554f9cc36dcf3f1877c497fb678b76cc2ed" translate="yes" xml:space="preserve">
          <source>(override) Because of the difficulty concatenating VMS filepaths we must pre-expand the DEST* variables.</source>
          <target state="translated">（重写）由于连接VMS文件路径很困难，因此我们必须预展开DEST *变量。</target>
        </trans-unit>
        <trans-unit id="3e64e5c52f4cbf325d544d16b24131a72496547d" translate="yes" xml:space="preserve">
          <source>(part of the standard perl distribution), which never really got finished. If you find it somewhere,</source>
          <target state="translated">（标准perl发行版的一部分），但从未真正完成。如果在某处找到</target>
        </trans-unit>
        <trans-unit id="922530c6dd5e24c25c5c1c085800263ea1126411" translate="yes" xml:space="preserve">
          <source>(partly contributed by Aaron Sherman)</source>
          <target state="translated">（由Aaron Sherman部分贡献）</target>
        </trans-unit>
        <trans-unit id="cd3adb25404edd24eec9d649c8bcb704ae0342ed" translate="yes" xml:space="preserve">
          <source>(portions of this answer contributed by Anno Siegel and brian d foy)</source>
          <target state="translated">（部分答案由Anno Siegel和brian d foy提供）</target>
        </trans-unit>
        <trans-unit id="3b2cc61f70b62caaa55962a8021228deb590a600" translate="yes" xml:space="preserve">
          <source>(rather than filename) based input and output. These are safe on the assumption that only pre-existing filehandles are available for use. Usually, to create new filehandles other ops such as open would need to be enabled, if you don't take into account the magical open of ARGV.</source>
          <target state="translated">（而不是文件名）基于输入和输出。假设只有预先存在的文件句柄可供使用，它们是安全的。通常，如果您不考虑ARGV的神奇打开功能，则需要创建其他文件操作（例如open）来创建新的文件句柄。</target>
        </trans-unit>
        <trans-unit id="c4d5187232fa1c2393eaa02e491a4d557a5f182e" translate="yes" xml:space="preserve">
          <source>(requires, recommends, suggests, conflicts)</source>
          <target state="translated">（需要，推荐，建议，冲突）</target>
        </trans-unit>
        <trans-unit id="2848ad6e5d5a5174fbf33c0f002b92ca3e779b91" translate="yes" xml:space="preserve">
          <source>(rho, theta, pi)</source>
          <target state="translated">（rho，theta，pi）</target>
        </trans-unit>
        <trans-unit id="301eec20fcb8d08c4b477b134f84eea526c7c5a2" translate="yes" xml:space="preserve">
          <source>(rho, theta, z)</source>
          <target state="translated">（rho，theta，z）</target>
        </trans-unit>
        <trans-unit id="9feb62aa545ce8b013f06110c13fc0f3f902cb3f" translate="yes" xml:space="preserve">
          <source>(sc=Hrkt)</source>
          <target state="translated">(sc=Hrkt)</target>
        </trans-unit>
        <trans-unit id="f13ab2d0c2655750c1afca21b1b6d480ed898d5c" translate="yes" xml:space="preserve">
          <source>(scx=Hrkt)</source>
          <target state="translated">(scx=Hrkt)</target>
        </trans-unit>
        <trans-unit id="af691ce86674610a40b84683145b5d169360d61f" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl_.exe&quot;&gt;&quot;&lt;i&gt;perl_.exe&lt;/i&gt;&quot;&lt;/a&gt;) by</source>
          <target state="translated">（请参见&lt;a href=&quot;#perl_.exe&quot;&gt;&amp;ldquo; &lt;i&gt;perl_.exe&lt;/i&gt; &amp;rdquo;&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6f1730b3336db772520f06bb063d6d6eb975d7d1" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;) by</source>
          <target state="translated">（请参阅&lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c48f533c48ae737a843e0dd6b406a45fbb539ccb" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl__.exe&quot;&gt;&quot;perl__.exe&quot;&lt;/a&gt;) if you want to use PM code in your application (as Perl/Tk or OpenGL Perl modules do) without having a text-mode window present.</source>
          <target state="translated">（请参阅&lt;a href=&quot;#perl__.exe&quot;&gt;&amp;ldquo; perl __。exe&amp;rdquo;&lt;/a&gt;），如果您想在应用程序中使用PM代码（如Perl / Tk或OpenGL Perl模块那样）而没有文本模式窗口。</target>
        </trans-unit>
        <trans-unit id="57d66dd0e5298b5e96ec3ad469013acc44ce6276" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;#perl__.exe&quot;&gt;perl__.exe&lt;/a&gt;) if you want to use PM code in your application (as Perl/Tk or OpenGL Perl modules do) without having a text-mode window present.</source>
          <target state="translated">（请参阅&lt;a href=&quot;#perl__.exe&quot;&gt;perl __。exe&lt;/a&gt;），如果您想在应用程序中使用PM代码（如Perl / Tk或OpenGL Perl模块那样）而没有文本模式窗口。</target>
        </trans-unit>
        <trans-unit id="13897f93e1b34b9d187d47d10d0d7a7feddc3e26" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;) are for. (Avoid exec() (see &lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;) unless you know what you do).</source>
          <target state="translated">（请参阅&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;）用于。（除非您知道自己要做什么，否则请避免使用exec（）（请参阅&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c6e5e1fe0ec06a97edec0d1b49eba2177a034033" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;) are for. (Avoid exec() (see &lt;a href=&quot;perlfunc#exec&quot;&gt;&quot;exec&quot; in perlfunc&lt;/a&gt;) unless you know what you do).</source>
          <target state="translated">（请参阅&lt;a href=&quot;perlfunc#open&quot;&gt;perlfunc中的&amp;ldquo;打开&amp;rdquo;&lt;/a&gt;）。（除非您知道自己要做什么，否则请避免使用exec（）（请参阅&lt;a href=&quot;perlfunc#exec&quot;&gt;perlfunc中的&amp;ldquo; exec&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="166724a371ebce21c3789346fabcb64d75a9043d" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;) so that environ is not searched.</source>
          <target state="translated">（请参阅&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;），以便不搜索环境。</target>
        </trans-unit>
        <trans-unit id="54b36cc8bf5ee45ddbf22c302f0ff8899587445f" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;) so that the environ array isn't the target of the change to %ENV which produced the warning.</source>
          <target state="translated">（请参阅&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;），以便环境数组不是产生警告的％ENV更改的目标。</target>
        </trans-unit>
        <trans-unit id="fdb75cfc3f651d35ec9dce7ef8ff84370b4689f6" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;). In this mode of operation, Perl will raise the warning for all matches against a non-Unicode code point (not just the arguable ones), and it skips the optimizations that might cause the warning to not be output. (It currently still won't warn if the match isn't even attempted, like in the &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; example above.)</source>
          <target state="translated">（请参阅&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;）。在这种操作模式下，Perl将针对非Unicode代码点（不仅是可争论的代码点）的所有匹配项发出警告，并且跳过可能导致警告不输出的优化。（例如，即使上面的 &lt;code&gt;&quot;foobar&quot;&lt;/code&gt; 示例中没有尝试匹配，它仍然不会发出警告。）</target>
        </trans-unit>
        <trans-unit id="ae2592aa43fa906f33435791e9b2cf177d7b8878" translate="yes" xml:space="preserve">
          <source>(see Annex 8, UAX #15; and</source>
          <target state="translated">（请参阅UAX＃15附件8；以及</target>
        </trans-unit>
        <trans-unit id="bfe137530e41031a5af4ace868c82fe0baa9a25b" translate="yes" xml:space="preserve">
          <source>(see below) and/or</source>
          <target state="translated">（请参见下文）和/或</target>
        </trans-unit>
        <trans-unit id="2d2a37102316b6b5d1b884637aaaac148e2b754c" translate="yes" xml:space="preserve">
          <source>(see, it's even smart enough to fix my obvious date bug)</source>
          <target state="translated">（看，它甚至足够聪明，可以修复我明显的日期错误）</target>
        </trans-unit>
        <trans-unit id="219b75b05739b79a0aeb3aa178076f50dcc11a3c" translate="yes" xml:space="preserve">
          <source>(short for Posix Space) Starting in 5.18, this is identical in all its forms to the corresponding &lt;code&gt;isSPACE()&lt;/code&gt; macros. The locale forms of this macro are identical to their corresponding &lt;code&gt;isSPACE()&lt;/code&gt; forms in all Perl releases. In releases prior to 5.18, the non-locale forms differ from their &lt;code&gt;isSPACE()&lt;/code&gt; forms only in that the &lt;code&gt;isSPACE()&lt;/code&gt; forms don't match a Vertical Tab, and the &lt;code&gt;isPSXSPC()&lt;/code&gt; forms do. Otherwise they are identical. Thus this macro is analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; matches in a regular expression. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPSXSPC_A&lt;/code&gt; , &lt;code&gt;isPSXSPC_L1&lt;/code&gt; , &lt;code&gt;isPSXSPC_uni&lt;/code&gt; , &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; , &lt;code&gt;isPSXSPC_LC&lt;/code&gt; , &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">（Posix Space的缩写）从5.18开始，其所有形式都与相应的 &lt;code&gt;isSPACE()&lt;/code&gt; 宏相同。在所有Perl版本中，此宏的语言环境形式与其对应的 &lt;code&gt;isSPACE()&lt;/code&gt; 形式相同。在5.18之前的版本中，非语言环境形式与它们的 &lt;code&gt;isSPACE()&lt;/code&gt; 形式的不同之处仅在于， &lt;code&gt;isSPACE()&lt;/code&gt; 形式与Vertical Tab不匹配，而 &lt;code&gt;isPSXSPC()&lt;/code&gt; 形式与。否则它们是相同的。因此，该宏类似于正则表达式中 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; 匹配的宏。请参阅&lt;a href=&quot;#Character-classification&quot;&gt;本节的顶部&lt;/a&gt;为变种的解释 &lt;code&gt;isPSXSPC_A&lt;/code&gt; ， &lt;code&gt;isPSXSPC_L1&lt;/code&gt; ， &lt;code&gt;isPSXSPC_uni&lt;/code&gt; ， &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; 和 &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="960c415aa0b49a8eabe255141a5ba8c101a20ea4" translate="yes" xml:space="preserve">
          <source>(short for Posix Space) Starting in 5.18, this is identical in all its forms to the corresponding &lt;code&gt;isSPACE()&lt;/code&gt; macros. The locale forms of this macro are identical to their corresponding &lt;code&gt;isSPACE()&lt;/code&gt; forms in all Perl releases. In releases prior to 5.18, the non-locale forms differ from their &lt;code&gt;isSPACE()&lt;/code&gt; forms only in that the &lt;code&gt;isSPACE()&lt;/code&gt; forms don't match a Vertical Tab, and the &lt;code&gt;isPSXSPC()&lt;/code&gt; forms do. Otherwise they are identical. Thus this macro is analogous to what &lt;code&gt;m/[[:space:]]/&lt;/code&gt; matches in a regular expression. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPSXSPC_A&lt;/code&gt;, &lt;code&gt;isPSXSPC_L1&lt;/code&gt;, &lt;code&gt;isPSXSPC_uvchr&lt;/code&gt;, &lt;code&gt;isPSXSPC_utf8&lt;/code&gt;, &lt;code&gt;isPSXSPC_utf8_safe&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt;, &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt;, and &lt;code&gt;isPSXSPC_LC_utf8_safe&lt;/code&gt;.</source>
          <target state="translated">（Posix Space的缩写）从5.18开始，其所有形式都与相应的 &lt;code&gt;isSPACE()&lt;/code&gt; 宏相同。在所有Perl版本中，此宏的语言环境形式与其对应的 &lt;code&gt;isSPACE()&lt;/code&gt; 形式相同。在5.18之前的版本中，非语言环境形式与它们的 &lt;code&gt;isSPACE()&lt;/code&gt; 形式的不同之处仅在于， &lt;code&gt;isSPACE()&lt;/code&gt; 形式与Vertical Tab不匹配，而 &lt;code&gt;isPSXSPC()&lt;/code&gt; 形式却与之匹配。否则它们是相同的。因此，该宏类似于正则表达式中 &lt;code&gt;m/[[:space:]]/&lt;/code&gt; 匹配的宏。请参阅&lt;a href=&quot;#Character-classification&quot;&gt;本节的顶部&lt;/a&gt;为变种的解释 &lt;code&gt;isPSXSPC_A&lt;/code&gt; ， &lt;code&gt;isPSXSPC_L1&lt;/code&gt; ， &lt;code&gt;isPSXSPC_uvchr&lt;/code&gt; ， &lt;code&gt;isPSXSPC_utf8&lt;/code&gt; ， &lt;code&gt;isPSXSPC_utf8_safe&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC_uvchr&lt;/code&gt; ， &lt;code&gt;isPSXSPC_LC_utf8&lt;/code&gt; 和 &lt;code&gt;isPSXSPC_LC_utf8_safe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bd5a16e31ac15e68b14071791ee2945208fa3f4" translate="yes" xml:space="preserve">
          <source>(so &lt;code&gt;!foo&lt;/code&gt; would match anything</source>
          <target state="translated">（所以 &lt;code&gt;!foo&lt;/code&gt; 可以匹配任何东西</target>
        </trans-unit>
        <trans-unit id="cdb3187d740c81b42e6c70423b76a9971d547af9" translate="yes" xml:space="preserve">
          <source>(solidus; &lt;code&gt;U+002F&lt;/code&gt;) characters to reduce the risk of XSS (cross site scripting) that may be caused by &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; in a JSON text, with the cost of bloating the size of JSON texts.</source>
          <target state="translated">（solidus; &lt;code&gt;U+002F&lt;/code&gt; ）字符，以减少JSON文本中 &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 可能引起的XSS（跨站点脚本）风险，并且会增加JSON文本的大小。</target>
        </trans-unit>
        <trans-unit id="4c78e0c73b6b30ea430253f9fd658c00503bafdb" translate="yes" xml:space="preserve">
          <source>(that basically means POSIX fopen() style mode strings plus an optional number to indicate the compression level).</source>
          <target state="translated">（这基本上意味着POSIX fopen（）样式模式字符串加上一个可选数字以指示压缩级别）。</target>
        </trans-unit>
        <trans-unit id="4b9770fcc7679e51bf57c83553ccf77d479a096c" translate="yes" xml:space="preserve">
          <source>(that is, the loop is broken) when Perl detects that a repeated expression matched a zero-length substring. Thus</source>
          <target state="translated">当Perl检测到重复的表达式与零长度的子字符串匹配时（循环中断）。从而</target>
        </trans-unit>
        <trans-unit id="2c2b3767cd67fda7e4ff13d64bc55c53b4c03d5d" translate="yes" xml:space="preserve">
          <source>(that's not a misspelling!) has some good tips on optimization, too. Advice on benchmarking boils down to: benchmark and profile to make sure you're optimizing the right part, look for better algorithms instead of microtuning your code, and when all else fails consider just buying faster hardware. You will probably want to read the answer to the earlier question &quot;How do I profile my Perl programs?&quot; if you haven't done so already.</source>
          <target state="translated">（这不是拼写错误！）也有一些关于优化的好技巧。关于基准测试的建议可以归结为：基准测试和配置文件，以确保您在优化正确的部分，寻找更好的算法而不是微调代码，而当所有其他方法均失败时，请考虑购买更快的硬件。您可能希望阅读前面的问题&amp;ldquo;如何配置我的Perl程序？&amp;rdquo;的答案。如果您还没有这样做的话。</target>
        </trans-unit>
        <trans-unit id="afd3f53e28b683fb99368ef0532ecf0f00244306" translate="yes" xml:space="preserve">
          <source>(the Camel, 3rd edition) or elsewhere, &lt;code&gt;:raw&lt;/code&gt; is</source>
          <target state="translated">（骆驼，第三版）或其他地方， &lt;code&gt;:raw&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="c0571c4fd0703d94ff1bd6301e1d544df5402954" translate="yes" xml:space="preserve">
          <source>(the bug, fixed in Perl 5.14, is described in &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;). One can use this new interface as</source>
          <target state="translated">（该错误已在Perl 5.14中修复，在&amp;ldquo;错误&lt;a href=&quot;#BUGS&quot;&gt;&amp;rdquo;中进行了&lt;/a&gt;描述）。可以将这个新界面用作</target>
        </trans-unit>
        <trans-unit id="47fb842f1ec30dc0c1028b06b28202730238d4d6" translate="yes" xml:space="preserve">
          <source>(the bug, fixed in Perl 5.14, is described in &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;). One can use this new interface as</source>
          <target state="translated">（该错误在Perl 5.14中修复，在&lt;a href=&quot;#BUGS&quot;&gt;BUGS中进行了&lt;/a&gt;描述）。可以将这个新界面用作</target>
        </trans-unit>
        <trans-unit id="d1c731c58fb8625c1995a9c0d6a37456f30eb3dd" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（自然对数底）到EXPR的幂。如果省略EXPR，则给出 &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ca0b781f69e1f8267342418d798ec9abc7f7b5c" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">（自然对数底）到EXPR的幂。如果省略EXPR，则给出 &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp($_)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a454988522cc6a4767026309bb67dafb4d33a38" translate="yes" xml:space="preserve">
          <source>(the natural logarithm base) to the power of EXPR. If EXPR is omitted, gives &lt;code&gt;exp($_)&lt;/code&gt;.</source>
          <target state="translated">（自然对数底）到EXPR的幂。如果省略EXPR，则给出 &lt;code&gt;exp($_)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e56b737030fe6f76e87a3edfc44265d91450bf34" translate="yes" xml:space="preserve">
          <source>(this may not work on some bizarre filesystems). One should conscientiously choose between the</source>
          <target state="translated">（这可能不适用于某些奇怪的文件系统）。一个人应该认真选择</target>
        </trans-unit>
        <trans-unit id="db0f2bd8ef346de7a033eeae78d90dc10831fa46" translate="yes" xml:space="preserve">
          <source>(to build miniperlmain.c). So under normal circumstances you won't have to deal with this module directly.</source>
          <target state="translated">（以生成miniperlmain.c）。因此，在正常情况下，您不必直接处理此模块。</target>
        </trans-unit>
        <trans-unit id="97ab80c9e1fe35bb7e8323fbb0d7feb27b6cbb77" translate="yes" xml:space="preserve">
          <source>(treat these hex digits as line noise). After this is fixed the build should finish without a lot of fuss.</source>
          <target state="translated">（将这些十六进制数字作为线路噪声处理）。修复此问题后，构建应该完成，而不必大惊小怪。</target>
        </trans-unit>
        <trans-unit id="5bbd0e9e8bb3970326f0ae59b614ac2f1aebcbf6" translate="yes" xml:space="preserve">
          <source>(true when evaluated inside of recursion or eval). Additionally the &lt;code&gt;&quot;R&quot;&lt;/code&gt; may be followed by a number, (which will be true when evaluated when recursing inside of the appropriate group), or by &lt;code&gt;&amp;amp;&lt;i&gt;NAME&lt;/i&gt;&lt;/code&gt;, in which case it will be true only when evaluated during recursion in the named group.</source>
          <target state="translated">（在递归或eval内部求值时为true）。此外， &lt;code&gt;&quot;R&quot;&lt;/code&gt; 可以跟数字（在递归到适当组中时进行评估时为true）或 &lt;code&gt;&amp;amp;&lt;i&gt;NAME&lt;/i&gt;&lt;/code&gt; （在这种情况下，仅当在命名组中进行递归时进行评估时为true）。</target>
        </trans-unit>
        <trans-unit id="1d7a9fe8570b8bcea8b9fe9361ea9bf6600d2508" translate="yes" xml:space="preserve">
          <source>(unless a</source>
          <target state="translated">（除非一个</target>
        </trans-unit>
        <trans-unit id="4ec7a0d80a1ccd184b27056d454ee1153e6b5715" translate="yes" xml:space="preserve">
          <source>(used only by</source>
          <target state="translated">（仅由</target>
        </trans-unit>
        <trans-unit id="ac5be747962c1aeaac7e7c81736092a7bc08bb8b" translate="yes" xml:space="preserve">
          <source>(user + system time) spent by the process since the first call to clock() (the definition is &lt;b&gt;not&lt;/b&gt; &quot;since the start of the process&quot;, though if you are lucky these times may be quite close to each other, depending on the system). What this means is that you probably need to store the result of your first call to clock(), and subtract that value from the following results of clock().</source>
          <target state="translated">自第一次调用clock（）以来，进程所花费的（用户+系统时间）（定义&lt;b&gt;不是&lt;/b&gt; &amp;ldquo;自进程开始以来&amp;rdquo;，尽管如果幸运的话，这些时间可能彼此接近，具体取决于系统）。这意味着您可能需要存储第一次调用clock（）的结果，并从以下clock（）结果中减去该值。</target>
        </trans-unit>
        <trans-unit id="88e896a405e3f46934bf9370e95fa7933a886563" translate="yes" xml:space="preserve">
          <source>(using &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ).</source>
          <target state="translated">（使用 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a7541cab2a60860593c1a8ff9554f037ebc3c6c3" translate="yes" xml:space="preserve">
          <source>(using &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;).</source>
          <target state="translated">（使用 &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02603cd1eae933c0c785a3f79537a20ecf4da31e" translate="yes" xml:space="preserve">
          <source>(where</source>
          <target state="translated">(where</target>
        </trans-unit>
        <trans-unit id="eb610507830351fb8e108f368c849e043989f99c" translate="yes" xml:space="preserve">
          <source>(whether an htmlname, or a number in any base) must consist only of alphanumeric characters -- that is,</source>
          <target state="translated">（无论是htmlname还是任何基数的数字）都只能由字母数字字符组成，也就是说，</target>
        </trans-unit>
        <trans-unit id="f4cc7c250419a5d866584f91196b41206d58a2e6" translate="yes" xml:space="preserve">
          <source>(which depend on the process)</source>
          <target state="translated">（取决于过程）</target>
        </trans-unit>
        <trans-unit id="a565a6a28b6032770c35f345aa4e5afd3ef5d6b8" translate="yes" xml:space="preserve">
          <source>(which do nothing, and return zero and -1, respectively) or for certain methods you may assume a default behaviour by using a NULL method. The Open method looks for help in the 'parent' layer. The following table summarizes the behaviour:</source>
          <target state="translated">（不执行任何操作，并分别返回零和-1），或者对于某些方法，您可以使用NULL方法来采取默认行为。Open方法在&amp;ldquo;父&amp;rdquo;层中寻求帮助。下表总结了行为：</target>
        </trans-unit>
        <trans-unit id="d1bfbda3f08bba5e0a64d2c55993b9b59a747e61" translate="yes" xml:space="preserve">
          <source>(which finds the range of code points in the block using &lt;code&gt;prop_invlist&lt;/code&gt; , gets the lower end of the range (0th element) and then looks up the old name for its block using &lt;code&gt;charblock&lt;/code&gt; ).</source>
          <target state="translated">（它使用 &lt;code&gt;prop_invlist&lt;/code&gt; 查找块中代码点的范围，获取范围的下限（第0个元素），然后使用 &lt;code&gt;charblock&lt;/code&gt; 查找其块的旧名称）。</target>
        </trans-unit>
        <trans-unit id="8f6568a2b111b0c018d50940c31a36bda310d719" translate="yes" xml:space="preserve">
          <source>(which finds the range of code points in the block using &lt;code&gt;prop_invlist&lt;/code&gt;, gets the lower end of the range (0th element) and then looks up the old name for its block using &lt;code&gt;charblock&lt;/code&gt;).</source>
          <target state="translated">（它使用 &lt;code&gt;prop_invlist&lt;/code&gt; 在块中找到代码点的范围，获取范围的下限（第0个元素），然后使用 &lt;code&gt;charblock&lt;/code&gt; 查找其块的旧名称）。</target>
        </trans-unit>
        <trans-unit id="ae14177069c91a23afccf755b4c6a1a6ba5baf27" translate="yes" xml:space="preserve">
          <source>(which is likely to produce a warning like this, which can be ignored:</source>
          <target state="translated">（这可能会产生这样的警告，可以将其忽略：</target>
        </trans-unit>
        <trans-unit id="2bd9e615b04879bf500ca0444285c7b5f58ebaef" translate="yes" xml:space="preserve">
          <source>(which is part of the</source>
          <target state="translated">（这是</target>
        </trans-unit>
        <trans-unit id="11e91a933773803dea4f7027fc85914141f0b47a" translate="yes" xml:space="preserve">
          <source>(which is used instead)</source>
          <target state="translated">（改为使用）</target>
        </trans-unit>
        <trans-unit id="ae660a79b86b74eda7c896ee0e2ecc6cf658a4be" translate="yes" xml:space="preserve">
          <source>(which is valid if a group with the given name matched);</source>
          <target state="translated">（如果给定名称的组匹配，则有效）；</target>
        </trans-unit>
        <trans-unit id="35afe972b2f8e533542c4fa6b31748bddbb4b04b" translate="yes" xml:space="preserve">
          <source>(which is valid if the corresponding pair of parentheses matched);</source>
          <target state="translated">（如果对应的一对括号匹配，则有效）；</target>
        </trans-unit>
        <trans-unit id="a6b9b21d617162cc10b61d0e599ca09bfc3a8860" translate="yes" xml:space="preserve">
          <source>(with a handful of exceptions). This is an unfortunate backwards compatibility feature and its use is &lt;b&gt;strongly &lt;a href=&quot;perlpolicy#discouraged&quot;&gt;discouraged&lt;/a&gt;&lt;/b&gt;. You should either prevent the exporting (by saying &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX ();&lt;/code&gt; , as usual) and then use fully qualified names (e.g. &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ), or give an explicit import list. If you do neither and opt for the default (as in &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX;&lt;/code&gt; ), you will import</source>
          <target state="translated">（有少数例外）。这是一个不幸的向后兼容功能，&lt;b&gt;强烈&lt;a href=&quot;perlpolicy#discouraged&quot;&gt;建议不要&lt;/a&gt;&lt;/b&gt;使用它。您应该阻止导出（通常说 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX ();&lt;/code&gt; ），然后使用完全限定的名称（例如 &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ），或者给出明确的导入列表。如果您既不选择也不选择默认值（如 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX;&lt;/code&gt; ），则将导入</target>
        </trans-unit>
        <trans-unit id="8e7dcc56ce0aa1317963b58fc17a4b509ad5c335" translate="yes" xml:space="preserve">
          <source>(with a handful of exceptions). This is an unfortunate backwards compatibility feature and its use is &lt;b&gt;strongly &lt;a href=&quot;perlpolicy#discouraged&quot;&gt;discouraged&lt;/a&gt;&lt;/b&gt;. You should either prevent the exporting (by saying &lt;code&gt;use POSIX ();&lt;/code&gt;, as usual) and then use fully qualified names (e.g. &lt;code&gt;POSIX::SEEK_END&lt;/code&gt;), or give an explicit import list. If you do neither and opt for the default (as in &lt;code&gt;use POSIX;&lt;/code&gt;), you will import</source>
          <target state="translated">（有少数例外）。这是一个不幸的向后兼容功能，&lt;b&gt;强烈&lt;a href=&quot;perlpolicy#discouraged&quot;&gt;建议不要&lt;/a&gt;&lt;/b&gt;使用它。您应该阻止导出（通常说 &lt;code&gt;use POSIX ();&lt;/code&gt; ），然后使用完全限定的名称（例如 &lt;code&gt;POSIX::SEEK_END&lt;/code&gt; ），或者给出明确的导入列表。如果您既不选择也不选择默认值（如 &lt;code&gt;use POSIX;&lt;/code&gt; ），则将导入</target>
        </trans-unit>
        <trans-unit id="590241bfe1d1ab805f123f3dfeca95cb5df33342" translate="yes" xml:space="preserve">
          <source>(with the exception of &lt;code&gt;allow_nonref&lt;/code&gt;, which defaults to</source>
          <target state="translated">（但 &lt;code&gt;allow_nonref&lt;/code&gt; 除外，默认为</target>
        </trans-unit>
        <trans-unit id="306686237693efc97adb9873c6f395a689b08700" translate="yes" xml:space="preserve">
          <source>(without curly braces and</source>
          <target state="translated">（没有大括号和</target>
        </trans-unit>
        <trans-unit id="0e1ed24ac3f83e4bb613f4329aa059c4bf5a4c9c" translate="yes" xml:space="preserve">
          <source>(x, y, z)</source>
          <target state="translated">（x，y，z）</target>
        </trans-unit>
        <trans-unit id="b6f844fee20c55f354c3646d70d08bb8aafbffec" translate="yes" xml:space="preserve">
          <source>(you may need to manually add &lt;code&gt;PERLTYPE=-DPERL_CORE&lt;/code&gt; to this commandline on some versions of Perl; the symptom is that the command-line globbing does not work from OS/2 shells with the newly-compiled executable; check with</source>
          <target state="translated">（您可能需要在某些版本的Perl上手动将 &lt;code&gt;PERLTYPE=-DPERL_CORE&lt;/code&gt; 添加到此命令行；症状是使用新编译的可执行文件在OS / 2 shell中无法进行命令行glob；</target>
        </trans-unit>
        <trans-unit id="a4ad693788c41eaba8ea97f5859834b29c279024" translate="yes" xml:space="preserve">
          <source>(you probably need to add &lt;code&gt;-shared&lt;/code&gt; to the &amp;lt;-Alddlflags&amp;gt; line until RT #118199 is resolved)</source>
          <target state="translated">（你可能需要添加 &lt;code&gt;-shared&lt;/code&gt; 到&amp;lt;-Alddlflags&amp;gt;行直到RT＃118199解析）</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="eb95089a2aff367522b36d81eeb4af3aa05259c5" translate="yes" xml:space="preserve">
          <source>) Nested backslashed delimiters, embedded balanced bracket delimiters (for the quotelike operators), and trailing modifiers are all caught. For example, in:</source>
          <target state="translated">）嵌套的反斜杠定界符，嵌入式平衡括号定界符（用于quotelike运算符）和尾随修饰符都被捕获。例如，在：</target>
        </trans-unit>
        <trans-unit id="93d1e11773c70e0093dfdf1605f54536a30c04cb" translate="yes" xml:space="preserve">
          <source>) add together two &lt;code&gt;gvsv&lt;/code&gt; s.</source>
          <target state="translated">）将两个 &lt;code&gt;gvsv&lt;/code&gt; 相加。</target>
        </trans-unit>
        <trans-unit id="dfc5bb482b8cb8cbf302fc5f2490c2508552541d" translate="yes" xml:space="preserve">
          <source>) add together two &lt;code&gt;gvsv&lt;/code&gt;s.</source>
          <target state="translated">）将两个 &lt;code&gt;gvsv&lt;/code&gt; 相加。</target>
        </trans-unit>
        <trans-unit id="487acab4d37dcb1f88d4268398b649368558f781" translate="yes" xml:space="preserve">
          <source>) and XS code (defined in</source>
          <target state="translated">）和XS代码（在</target>
        </trans-unit>
        <trans-unit id="2af0dc8b4d4fee8ec4a7da24968fc60d5db6f74b" translate="yes" xml:space="preserve">
          <source>) and for which I'll ignore the return value (that's the</source>
          <target state="translated">），而我将忽略其返回值（即</target>
        </trans-unit>
        <trans-unit id="95fe6fc6d1e10ab1a18355df450387c52489f3c6" translate="yes" xml:space="preserve">
          <source>) and then delete your local branch:</source>
          <target state="translated">），然后删除您的本地分支：</target>
        </trans-unit>
        <trans-unit id="5165405c0c57dc222008e31631e6e1160f7f0b2c" translate="yes" xml:space="preserve">
          <source>) and those are hidden inside</source>
          <target state="translated">），并且隐藏在里面</target>
        </trans-unit>
        <trans-unit id="1e5051ed7ca1b9ef31e15eb004126ec2dc0cfec0" translate="yes" xml:space="preserve">
          <source>) and widths (32-bit and 64-bit being the most common today). This affects your programs when they attempt to transfer numbers in binary format from one CPU architecture to another, usually either &quot;live&quot; via network connection, or by storing the numbers to secondary storage such as a disk file or tape.</source>
          <target state="translated">）和宽度（当今最常见的是32位和64位）。当程序尝试将二进制格式的数字从一种CPU架构转移到另一种CPU架构时，这通常会影响它们，通常是通过网络连接&amp;ldquo;实时&amp;rdquo;传输，或者将数字存储到诸如磁盘文件或磁带的辅助存储中。</target>
        </trans-unit>
        <trans-unit id="8a4f890fd31d5a7f8d389f42416df72924335dc7" translate="yes" xml:space="preserve">
          <source>) and you will see what is happening</source>
          <target state="translated">），您将看到发生了什么</target>
        </trans-unit>
        <trans-unit id="78d8c7b5bfb4d1d699ad80186c17bd61d5ef6810" translate="yes" xml:space="preserve">
          <source>) are accessed in the function and &lt;code&gt;dTHX&lt;/code&gt; is not used (the &lt;code&gt;dTHX&lt;/code&gt; includes the &lt;code&gt;dVAR&lt;/code&gt; if necessary). One notices the need for &lt;code&gt;dVAR&lt;/code&gt; only with the said compile-time define, because otherwise the Perl global variables are visible as-is.</source>
          <target state="translated">）在函数访问和 &lt;code&gt;dTHX&lt;/code&gt; 不使用（在 &lt;code&gt;dTHX&lt;/code&gt; 包括 &lt;code&gt;dVAR&lt;/code&gt; 如有必要）。有人注意到仅在具有所述编译时定义的 &lt;code&gt;dVAR&lt;/code&gt; 才需要dVAR，因为否则，Perl全局变量按原样可见。</target>
        </trans-unit>
        <trans-unit id="f0af76cebde929dc98391babdd9523facf0df1cb" translate="yes" xml:space="preserve">
          <source>) are also supported Since cygwin-1.7 non-POSIX pathnames are discouraged. Names may contain all printable characters.</source>
          <target state="translated">也支持），因为不建议使用cygwin-1.7非POSIX路径名。名称可能包含所有可打印字符。</target>
        </trans-unit>
        <trans-unit id="4d63c0b1ccaa850ba2ad69dd4a8ae1f8f0b54402" translate="yes" xml:space="preserve">
          <source>) are now created with the names which contain a checksum, thus allowing workaround for OS/2 scheme of caching DLLs.</source>
          <target state="translated">）现在使用包含校验和的名称创建，从而允许OS / 2缓存DLL方案变通。</target>
        </trans-unit>
        <trans-unit id="b9bcffac0b0e948cf7f6c750635e76e9488261a5" translate="yes" xml:space="preserve">
          <source>) are the same in both EBCDIC and UTF-EBCDIC. Often, documentation will use the term &quot;UTF-8&quot; to mean UTF-EBCDIC as well. This is the case in this document.</source>
          <target state="translated">）在EBCDIC和UTF-EBCDIC中都相同。通常，文档也会使用术语&amp;ldquo; UTF-8&amp;rdquo;来表示UTF-EBCDIC。在本文档中就是这种情况。</target>
        </trans-unit>
        <trans-unit id="b688477e2141565165881be5ad0bc5987114795f" translate="yes" xml:space="preserve">
          <source>) are the same in both EBCDIC and UTF-EBCDIC.)</source>
          <target state="translated">）在EBCDIC和UTF-EBCDIC中都相同。）</target>
        </trans-unit>
        <trans-unit id="b4703b8b08940fcfc8d37175488b06d9c5c2113f" translate="yes" xml:space="preserve">
          <source>) are to be ignored (because they cannot be linked against).</source>
          <target state="translated">）将被忽略（因为它们无法链接）。</target>
        </trans-unit>
        <trans-unit id="228c4d656c7c5862fd93efef71f5a4b7ea37cfce" translate="yes" xml:space="preserve">
          <source>) as a hashref containing match criteria that determine if the current distribution matches the YAML document or not.</source>
          <target state="translated">）作为包含匹配条件的hashref，该条件确定当前发行版是否与YAML文档匹配。</target>
        </trans-unit>
        <trans-unit id="0094c9f9603398d1e8131509fbaec9e6e56aa8b2" translate="yes" xml:space="preserve">
          <source>) associated with the module. If so, these will be entirely transparent to the user of the module. It is the responsibility of the</source>
          <target state="translated">）与模块相关联。如果是这样，这些对模块用户将完全透明。这是</target>
        </trans-unit>
        <trans-unit id="8680fc3067e5b942a71155614ce3702a9457283f" translate="yes" xml:space="preserve">
          <source>) but simply depends on the choice of tmpdir() returned by L&amp;lt;:spec&amp;gt;. On some implementations this location can be set using the C</source>
          <target state="translated">），但仅取决于L &amp;lt;：spec&amp;gt;返回的tmpdir（）的选择。在某些实现中，可以使用C设置此位置</target>
        </trans-unit>
        <trans-unit id="c5659f7b4fec9440dfdc3905af70739f39cad629" translate="yes" xml:space="preserve">
          <source>) can be computed by the great_circle_direction() function:</source>
          <target state="translated">）可以由great_circle_direction（）函数计算：</target>
        </trans-unit>
        <trans-unit id="5fe6bd925320e38dae70ff8e3655937d2767bfc3" translate="yes" xml:space="preserve">
          <source>) can be tacked onto this variable to generate a list of directories to search.</source>
          <target state="translated">）可以附加到此变量上，以生成要搜索的目录列表。</target>
        </trans-unit>
        <trans-unit id="a71d8063cc2fcb4f0ab849a5cf4c8ea8ac77b0fa" translate="yes" xml:space="preserve">
          <source>) contains references to many socket functions which need to be resolved when it's loaded. Most platforms will automatically know where to find the 'dependent' library (e.g.,</source>
          <target state="translated">）包含对许多套接字函数的引用，这些函数在加载时需要解决。大多数平台都会自动知道在哪里可以找到&amp;ldquo;依赖&amp;rdquo;库（例如，</target>
        </trans-unit>
        <trans-unit id="5968b6b1837aae02e6a353cd4039edfa15befc28" translate="yes" xml:space="preserve">
          <source>) file.</source>
          <target state="translated">） 文件。</target>
        </trans-unit>
        <trans-unit id="fdb6308c871f74792c598b6316c52ceb7fdc771e" translate="yes" xml:space="preserve">
          <source>) files should be UTF-8 encoded. Users are responsible for proper encoding and decoding. In particular, the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; methods do &lt;b&gt;not&lt;/b&gt; support UTF-8 and should not be used.</source>
          <target state="translated">）文件应采用UTF-8编码。用户负责正确的编码和解码。特别是， &lt;code&gt;read&lt;/code&gt; 与 &lt;code&gt;write&lt;/code&gt; 方法并&lt;b&gt;不能&lt;/b&gt;支持UTF-8，不应该被使用。</target>
        </trans-unit>
        <trans-unit id="0f4288bf07ec0228a3183e18634d69547b9f0364" translate="yes" xml:space="preserve">
          <source>) for a module, Test::Harness is usually used to run the tests (not all modules use Test::Harness but the majority do).</source>
          <target state="translated">）对于模块，通常使用Test :: Harness来运行测试（并非所有模块都使用Test :: Harness，但大多数模块都使用）。</target>
        </trans-unit>
        <trans-unit id="6380e7df837c25d9969247c6e203303247a8eb62" translate="yes" xml:space="preserve">
          <source>) for a thorough grounding and reference on the topic.</source>
          <target state="translated">），以获取有关该主题的全面基础和参考。</target>
        </trans-unit>
        <trans-unit id="1ef4dbc4e616fa1d18518cdf57dc3f1eed3a7798" translate="yes" xml:space="preserve">
          <source>) for the default perl executable, but for a more ambitious host (like the one that would do fork() emulation) all the extra work needed to pretend that different interpreters are actually different &quot;processes&quot;, would be done here.</source>
          <target state="translated">），以使用默认的perl可执行文件，但对于雄心勃勃的主机（例如将进行fork（）仿真的主机），所有需要假装不同的解释器实际上是不同的&amp;ldquo;进程&amp;rdquo;的额外工作将在此处完成。</target>
        </trans-unit>
        <trans-unit id="b34bf46ab4b61641e16b10e09bd70715019def08" translate="yes" xml:space="preserve">
          <source>) for your machine. If your compiler complains that certain functions are undefined, or that it can't locate</source>
          <target state="translated">）。如果您的编译器抱怨某些函数未定义，或者找不到</target>
        </trans-unit>
        <trans-unit id="0c582b687e9340adf76bd136bafc7a4e60851dd4" translate="yes" xml:space="preserve">
          <source>) from the database.</source>
          <target state="translated">）。</target>
        </trans-unit>
        <trans-unit id="116f8f88f4b3848fbd987990694e39bf840bb1eb" translate="yes" xml:space="preserve">
          <source>) guaranteed to be large enough to represent the size of any string that perl can handle.</source>
          <target state="translated">）保证足够大，以表示perl可以处理的任何字符串的大小。</target>
        </trans-unit>
        <trans-unit id="337e0c227846bd92d32db8132d6dfda91291a31c" translate="yes" xml:space="preserve">
          <source>) happens to do both these things.</source>
          <target state="translated">）碰巧同时做这两个事情。</target>
        </trans-unit>
        <trans-unit id="8ddfd9e5fba9d0bfae55c0a9cf8e0e887dd2de61" translate="yes" xml:space="preserve">
          <source>) if set, overrides the path to the perl executable that should be used to run the tests (the default being</source>
          <target state="translated">）（如果已设置），则会覆盖用于运行测试的perl可执行文件的路径（默认为</target>
        </trans-unit>
        <trans-unit id="ddd938892f2a1218d436a7ea869a8e613d6a7846" translate="yes" xml:space="preserve">
          <source>) if the constructor was called with UNLINK set to 1 (the default state if UNLINK is not specified).</source>
          <target state="translated">），如果在将UNLINK设置为1的情况下调用了构造函数（如果未指定UNLINK，则为默认状态）。</target>
        </trans-unit>
        <trans-unit id="475773772c97e29ee6060b95810ad4e1376538fc" translate="yes" xml:space="preserve">
          <source>) illustrating the creation, use and monitoring of a pool of</source>
          <target state="translated">）说明池的创建，使用和监控</target>
        </trans-unit>
        <trans-unit id="e7e44a7e4150f8fa3f3b373c79a37f8b07bb4a24" translate="yes" xml:space="preserve">
          <source>) into an SV whose reference is rv. SV is blessed if &lt;code&gt;classname&lt;/code&gt; is non-null.</source>
          <target state="translated">）转换为参考为rv的SV。如果 &lt;code&gt;classname&lt;/code&gt; 不为null，则SV被祝福。</target>
        </trans-unit>
        <trans-unit id="9dac485013a652075c8f1c4b7fb1d43f1f85a1a3" translate="yes" xml:space="preserve">
          <source>) into an executable:</source>
          <target state="translated">）成可执行文件：</target>
        </trans-unit>
        <trans-unit id="81b4f6fe6b33e8129f5b68846e0235e4b8d609db" translate="yes" xml:space="preserve">
          <source>) is a somewhat special case inasmuch as the concatenation of &lt;code&gt;$File::Find::dir&lt;/code&gt; , &lt;code&gt;'/'&lt;/code&gt; and &lt;code&gt;$_&lt;/code&gt; is not literally equal to &lt;code&gt;$File::Find::name&lt;/code&gt; . The table below summarizes all variants:</source>
          <target state="translated">）有点特殊，因为 &lt;code&gt;$File::Find::dir&lt;/code&gt; ， &lt;code&gt;'/'&lt;/code&gt; 和 &lt;code&gt;$_&lt;/code&gt; 的串联在字面上不等于 &lt;code&gt;$File::Find::name&lt;/code&gt; 。下表总结了所有变体：</target>
        </trans-unit>
        <trans-unit id="90c96507ab61376ee997f23c6d427ce68d7c9b72" translate="yes" xml:space="preserve">
          <source>) is a somewhat special case inasmuch as the concatenation of &lt;code&gt;$File::Find::dir&lt;/code&gt;, &lt;code&gt;'/'&lt;/code&gt; and &lt;code&gt;$_&lt;/code&gt; is not literally equal to &lt;code&gt;$File::Find::name&lt;/code&gt;. The table below summarizes all variants:</source>
          <target state="translated">）有点特殊，因为 &lt;code&gt;$File::Find::dir&lt;/code&gt; ， &lt;code&gt;'/'&lt;/code&gt; 和 &lt;code&gt;$_&lt;/code&gt; 的串联在字面上不等于 &lt;code&gt;$File::Find::name&lt;/code&gt; 。下表总结了所有变体：</target>
        </trans-unit>
        <trans-unit id="cf9470af5d5cf93f057397bef4222a4e4cd5a518" translate="yes" xml:space="preserve">
          <source>) is called instead, otherwise falling back to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; (</source>
          <target state="translated">）调用，否则返回 &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="6c8188ede998e6e037975c6c363a167896d77867" translate="yes" xml:space="preserve">
          <source>) is called instead, otherwise falling back to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt;(</source>
          <target state="translated">）被调用，否则返回 &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="23696ac6362c5f53fb63901a51bae770c8ae962d" translate="yes" xml:space="preserve">
          <source>) is either a text-string or a reference to a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; object. The nodes appear in the parse-tree in the order in which they were parsed from left-to-right.</source>
          <target state="translated">）是文本字符串或对&lt;b&gt;Pod :: InteriorSequence&lt;/b&gt;对象的引用。节点以从左到右的解析顺序出现在解析树中。</target>
        </trans-unit>
        <trans-unit id="5767c1b2b6c18556726990ab8b5bc59c494545e8" translate="yes" xml:space="preserve">
          <source>) is in that special format.</source>
          <target state="translated">）采用该特殊格式。</target>
        </trans-unit>
        <trans-unit id="32f86aa54464138379726463882cdceaf0bcc1f8" translate="yes" xml:space="preserve">
          <source>) is made instead, with &lt;code&gt;$DB::sub&lt;/code&gt; holding the name of the called subroutine. (This doesn't happen if the subroutine was compiled in the &lt;code&gt;DB&lt;/code&gt; package.)</source>
          <target state="translated">而是用 &lt;code&gt;$DB::sub&lt;/code&gt; 保存被调用子程序的名称。（如果子例程是在 &lt;code&gt;DB&lt;/code&gt; 包中编译的，则不会发生这种情况。）</target>
        </trans-unit>
        <trans-unit id="6f72da199407d17f3eb070ab79da4f95bcf5d247" translate="yes" xml:space="preserve">
          <source>) is made instead, with &lt;code&gt;$DB::sub&lt;/code&gt; set to identify the called subroutine. (This doesn't happen if the calling subroutine was compiled in the &lt;code&gt;DB&lt;/code&gt; package.) &lt;code&gt;$DB::sub&lt;/code&gt; normally holds the name of the called subroutine, if it has a name by which it can be looked up. Failing that, &lt;code&gt;$DB::sub&lt;/code&gt; will hold a reference to the called subroutine. Either way, the &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; subroutine can use &lt;code&gt;$DB::sub&lt;/code&gt; as a reference by which to call the called subroutine, which it will normally want to do.</source>
          <target state="translated">而是使用 &lt;code&gt;$DB::sub&lt;/code&gt; 设置的，以标识被调用的子例程。 （如果调用子例程是在 &lt;code&gt;DB&lt;/code&gt; 程序包中编译的，则不会发生这种情况。） &lt;code&gt;$DB::sub&lt;/code&gt; 通常包含被调用子例程的名称，如果它具有可用来查找的名称。失败的是， &lt;code&gt;$DB::sub&lt;/code&gt; 将保存对所调用子例程的引用。无论哪种方式， &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; 例程都可以使用 &lt;code&gt;$DB::sub&lt;/code&gt; 作为引用来调用被调用的子例程，通常它会希望这样做。</target>
        </trans-unit>
        <trans-unit id="09c02d83fc25240c47808099a2e4f821d696cb01" translate="yes" xml:space="preserve">
          <source>) is used as a package separator for documentation for packages, and as usual, sometimes you need to give the section - &lt;code&gt;3&lt;/code&gt; above - to avoid shadowing by the</source>
          <target state="translated">）用作软件包文档的软件包分隔符，并且通常，有时您需要提供上面的 &lt;code&gt;3&lt;/code&gt; 部分，以免出现阴影。</target>
        </trans-unit>
        <trans-unit id="5971125402714a98c492903d9612cbceea13e6b3" translate="yes" xml:space="preserve">
          <source>) model. However, some previous functionality is not available. Further, the data sharing models between the two thread models are completely different, and anything to do with data sharing has to be thought differently. With</source>
          <target state="translated">）模型。但是，某些先前的功能不可用。此外，两个线程模型之间的数据共享模型完全不同，与数据共享有关的任何事物都必须以不同的方式考虑。用</target>
        </trans-unit>
        <trans-unit id="c8900d677b2a01f7480862af7c53a8c9206bc052" translate="yes" xml:space="preserve">
          <source>) of EXPR. If EXPR is omitted, returns the log of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;. To get the log of another base, use basic algebra: The base-N log of a number is equal to the natural log of that number divided by the natural log of N. For example:</source>
          <target state="translated">）的EXPR。如果省略EXPR，则返回&lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt;的日志。要获取另一个底数的对数，请使用基本代数：一个数字的N底对数等于该数字的自然对数除以N的自然对数。例如：</target>
        </trans-unit>
        <trans-unit id="50d605006e5819d9ee72b0368f957bba921207fa" translate="yes" xml:space="preserve">
          <source>) of EXPR. If EXPR is omitted, returns the log of &lt;code&gt;$_&lt;/code&gt; . To get the log of another base, use basic algebra: The base-N log of a number is equal to the natural log of that number divided by the natural log of N. For example:</source>
          <target state="translated">）的EXPR。如果省略EXPR，则返回 &lt;code&gt;$_&lt;/code&gt; 的日志。要获取另一个底数的对数，请使用基本代数：一个数字的N底对数等于该数字的自然对数除以N的自然对数。例如：</target>
        </trans-unit>
        <trans-unit id="73013703f8359c6292272932a5d96f3a21e4da8b" translate="yes" xml:space="preserve">
          <source>) of link target</source>
          <target state="translated">链接目标</target>
        </trans-unit>
        <trans-unit id="1c4fc186c95906992ee9e790368dc6d7e6bb249e" translate="yes" xml:space="preserve">
          <source>) or $token-&amp;gt;is_tagname(</source>
          <target state="translated">）或$ token-&amp;gt; is_tagname（</target>
        </trans-unit>
        <trans-unit id="34c99e6b33b978b2a76257b1ec099dd28fe4c5af" translate="yes" xml:space="preserve">
          <source>) or autoloaded subroutine definitions (often ending in</source>
          <target state="translated">）或自动加载的子例程定义（通常以</target>
        </trans-unit>
        <trans-unit id="8be067842fd8dd4a9dda8652f213b0bfca2534f2" translate="yes" xml:space="preserve">
          <source>) or from</source>
          <target state="translated">）或从</target>
        </trans-unit>
        <trans-unit id="6268b6d7aba0dddbda46ab70ff997d6de27b91a4" translate="yes" xml:space="preserve">
          <source>) or small pieces of modules to be autoloaded (ending in</source>
          <target state="translated">）或要自动加载的小模块（结尾为</target>
        </trans-unit>
        <trans-unit id="e0b4a008b1b72c63ec0fe1bf922f01ecd1e7dcea" translate="yes" xml:space="preserve">
          <source>) regarding the license:</source>
          <target state="translated">）关于许可：</target>
        </trans-unit>
        <trans-unit id="a45f9f3bff2ba18d925d19d588022f6b22bbbb23" translate="yes" xml:space="preserve">
          <source>) result in single code points and are locale independent and unconditional, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned (which means that the case mappings, if any, for the code point are those returned by &lt;a href=&quot;#charinfo()&quot;&gt;charinfo()&lt;/a&gt;).</source>
          <target state="translated">）会产生单个代码点，并且与语言环境无关且是无条件的，将返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; （这意味着代码点的大小写映射（如果有&lt;a href=&quot;#charinfo()&quot;&gt;）&lt;/a&gt;是charinfo（）返回的映射）。</target>
        </trans-unit>
        <trans-unit id="391e0275a9d94cc4fb72b3fa708d0c427551dc20" translate="yes" xml:space="preserve">
          <source>) result in single code points and are locale independent and unconditional, &lt;code&gt;undef&lt;/code&gt; is returned (which means that the case mappings, if any, for the code point are those returned by &lt;a href=&quot;#charinfo%28%29&quot;&gt;&quot;charinfo()&quot;&lt;/a&gt;).</source>
          <target state="translated">）会产生单个代码点，并且与语言环境无关且是无条件的，将返回 &lt;code&gt;undef&lt;/code&gt; （这意味着代码点的大小写映射（如果有的话）是由&lt;a href=&quot;#charinfo%28%29&quot;&gt;&amp;ldquo; charinfo（）&amp;rdquo;&lt;/a&gt;返回的映射）。</target>
        </trans-unit>
        <trans-unit id="a7093a28b00cb3f7379bae3a74ed546d6d759f1c" translate="yes" xml:space="preserve">
          <source>) returned 22</source>
          <target state="translated">）返回22</target>
        </trans-unit>
        <trans-unit id="290a554d5dd4f4fd53f4f0c3f26a8b92afe46af9" translate="yes" xml:space="preserve">
          <source>) routine is available to get the current process group.</source>
          <target state="translated">）例程可用于获取当前进程组。</target>
        </trans-unit>
        <trans-unit id="fbfc535d542b663f5fc6309d86a766d1da4fdbb5" translate="yes" xml:space="preserve">
          <source>) routine is available to set the current process group.</source>
          <target state="translated">）例程可用于设置当前过程组。</target>
        </trans-unit>
        <trans-unit id="26e28f24fd9b1f154c2e8f05eec3ce59bdb7d39d" translate="yes" xml:space="preserve">
          <source>) see whether a scalar contains a string, an integer, or a floating-point number. But you can still peek and poke these if you will. See the next section.</source>
          <target state="translated">）查看标量是否包含字符串，整数或浮点数。但是如果您愿意的话，您仍然可以偷看和戳这些。请参阅下一节。</target>
        </trans-unit>
        <trans-unit id="edd28277fd127085fceb90541640e76ea071b695" translate="yes" xml:space="preserve">
          <source>) slashes, Universal Naming Codes (</source>
          <target state="translated">）斜杠，通用命名代码（</target>
        </trans-unit>
        <trans-unit id="6fe21bfd6516c2f8c1ce99da2c5ba6214935b065" translate="yes" xml:space="preserve">
          <source>) that hide the details of the interpreter's context. THX stands for &quot;thread&quot;, &quot;this&quot;, or &quot;thingy&quot;, as the case may be. (And no, George Lucas is not involved. :-) The first character could be 'p' for a &lt;b&gt;p&lt;/b&gt;rototype, 'a' for &lt;b&gt;a&lt;/b&gt;rgument, or 'd' for &lt;b&gt;d&lt;/b&gt;eclaration, so we have &lt;code&gt;pTHX&lt;/code&gt; , &lt;code&gt;aTHX&lt;/code&gt; and &lt;code&gt;dTHX&lt;/code&gt; , and their variants.</source>
          <target state="translated">），以隐藏解释器上下文的详细信息。THX代表&amp;ldquo;线程&amp;rdquo;，&amp;ldquo; this&amp;rdquo;或&amp;ldquo; thingy&amp;rdquo;（视情况而定）。（不，乔治&amp;middot;卢卡斯是不参与。:-)第一个字符可能是'P'为&lt;b&gt;p&lt;/b&gt; rototype， 'A'的&lt;b&gt;一个&lt;/b&gt; rgument，或'd'为&lt;b&gt;d&lt;/b&gt; eclaration，所以我们必须 &lt;code&gt;pTHX&lt;/code&gt; ， &lt;code&gt;aTHX&lt;/code&gt; 和 &lt;code&gt;dTHX&lt;/code&gt; ，及其变体。</target>
        </trans-unit>
        <trans-unit id="bebca5effcde7de71cb36899c8b7b5dd6966704c" translate="yes" xml:space="preserve">
          <source>) that hide the details of the interpreter's context. THX stands for &quot;thread&quot;, &quot;this&quot;, or &quot;thingy&quot;, as the case may be. (And no, George Lucas is not involved. :-) The first character could be 'p' for a &lt;b&gt;p&lt;/b&gt;rototype, 'a' for &lt;b&gt;a&lt;/b&gt;rgument, or 'd' for &lt;b&gt;d&lt;/b&gt;eclaration, so we have &lt;code&gt;pTHX&lt;/code&gt;, &lt;code&gt;aTHX&lt;/code&gt; and &lt;code&gt;dTHX&lt;/code&gt;, and their variants.</source>
          <target state="translated">），以隐藏解释程序上下文的详细信息。THX代表&amp;ldquo;线程&amp;rdquo;，&amp;ldquo; this&amp;rdquo;或&amp;ldquo; thingy&amp;rdquo;（视情况而定）。（不，乔治&amp;middot;卢卡斯是不参与。:-)第一个字符可能是'P'为&lt;b&gt;p&lt;/b&gt; rototype， 'A'的&lt;b&gt;一个&lt;/b&gt;rgument，或'd'为&lt;b&gt;d&lt;/b&gt; eclaration，所以我们必须 &lt;code&gt;pTHX&lt;/code&gt; ， &lt;code&gt;aTHX&lt;/code&gt; 和 &lt;code&gt;dTHX&lt;/code&gt; ，及其变体。</target>
        </trans-unit>
        <trans-unit id="e97548e96f2ddff38307a0e5c64c9b937c5a39a0" translate="yes" xml:space="preserve">
          <source>) this is:</source>
          <target state="translated">） 这是：</target>
        </trans-unit>
        <trans-unit id="58d0b83faa9818666bc1ae3462657cd7ca7c19ae" translate="yes" xml:space="preserve">
          <source>) to &lt;code&gt;PATH&lt;/code&gt; ; copy &lt;code&gt;perl_.exe&lt;/code&gt; to &lt;code&gt;PATH&lt;/code&gt; as &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; . Think whether you need backward-compatibility DLLs. In most cases you do not need to install them yet; but sometime this may simplify the following steps.</source>
          <target state="translated">）到 &lt;code&gt;PATH&lt;/code&gt; ; 将 &lt;code&gt;perl_.exe&lt;/code&gt; 作为 &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; 复制到 &lt;code&gt;PATH&lt;/code&gt; 。考虑是否需要向后兼容的DLL。在大多数情况下，您无需安装它们。但是有时这可以简化以下步骤。</target>
        </trans-unit>
        <trans-unit id="402bef1c99bbd938c61c5a9988380b210c5ec786" translate="yes" xml:space="preserve">
          <source>) to &lt;code&gt;PATH&lt;/code&gt;; copy &lt;code&gt;perl_.exe&lt;/code&gt; to &lt;code&gt;PATH&lt;/code&gt; as &lt;code&gt;perl_5.8.2.exe&lt;/code&gt;. Think whether you need backward-compatibility DLLs. In most cases you do not need to install them yet; but sometime this may simplify the following steps.</source>
          <target state="translated">）到 &lt;code&gt;PATH&lt;/code&gt; ; 将 &lt;code&gt;perl_.exe&lt;/code&gt; 作为 &lt;code&gt;perl_5.8.2.exe&lt;/code&gt; 复制到 &lt;code&gt;PATH&lt;/code&gt; 。考虑是否需要向后兼容的DLL。在大多数情况下，您不需要安装它们。但这有时可能会简化以下步骤。</target>
        </trans-unit>
        <trans-unit id="2bfb1d2c84b8f96364a15ab20bbedeb8fdc478cf" translate="yes" xml:space="preserve">
          <source>) unless the first thing after the =over is an =item</source>
          <target state="translated">），除非= over之后的第一件事是= item</target>
        </trans-unit>
        <trans-unit id="ee8d0d482ba732e339db373655156b50d4f689fa" translate="yes" xml:space="preserve">
          <source>) variable.</source>
          <target state="translated">）变量。</target>
        </trans-unit>
        <trans-unit id="8d6ab57f146723c24d110d324d107fe798a11b43" translate="yes" xml:space="preserve">
          <source>) where there are no parameters (except $_[0], the language handle).</source>
          <target state="translated">），没有参数（语言句柄$ _ [0]除外）。</target>
        </trans-unit>
        <trans-unit id="20739558e894101738b809f5961ce2ec15d5ef69" translate="yes" xml:space="preserve">
          <source>) which itself uses a C or C++ library, this probably happened:</source>
          <target state="translated">）本身使用C或C ++库，则可能发生了：</target>
        </trans-unit>
        <trans-unit id="9bb3b0590ce91e56d975340e4f059419f1cd3a34" translate="yes" xml:space="preserve">
          <source>) will return true but not actually set the bit.</source>
          <target state="translated">）将返回true，但实际上未设置该位。</target>
        </trans-unit>
        <trans-unit id="555eb93c31c2ff33a5f28e75533e9b13d5846308" translate="yes" xml:space="preserve">
          <source>) will return true but not actually set the bit. (Android)</source>
          <target state="translated">）将返回true，但实际上未设置该位。（Android）</target>
        </trans-unit>
        <trans-unit id="76964257ee68bb8fca6aa80c00dd5fc9f2ec1a64" translate="yes" xml:space="preserve">
          <source>) with a character class, and no string shorter than 7 characters can possibly match.</source>
          <target state="translated">）和一个字符类，并且不能匹配少于7个字符的字符串。</target>
        </trans-unit>
        <trans-unit id="7b62adc5f8c3abd2eb86b6b1533af991c7edca58" translate="yes" xml:space="preserve">
          <source>) would otherwise terminate the loop. Again, &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned only once. So if you're expecting a single value from a glob, it is much better to say</source>
          <target state="translated">）会终止循环。同样， &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 仅返回一次。因此，如果您希望从一个整体中获得一个单一的值，那么最好说</target>
        </trans-unit>
        <trans-unit id="c972a2d6506c7e630a1bc588ff59aaaa9c6a81f4" translate="yes" xml:space="preserve">
          <source>) would otherwise terminate the loop. Again, &lt;code&gt;undef&lt;/code&gt; is returned only once. So if you're expecting a single value from a glob, it is much better to say</source>
          <target state="translated">）会终止循环。同样， &lt;code&gt;undef&lt;/code&gt; 仅返回一次。因此，如果您期望从一个整体中获得一个单一的值，那么最好说</target>
        </trans-unit>
        <trans-unit id="4810b75ef754b672275a3af2b5a078e21220cbc9" translate="yes" xml:space="preserve">
          <source>) you must still call the &lt;code&gt;PUSHMARK&lt;/code&gt; macro before you can call any of the</source>
          <target state="translated">），您仍然必须先调用 &lt;code&gt;PUSHMARK&lt;/code&gt; 宏，然后才能调用任何</target>
        </trans-unit>
        <trans-unit id="dd68868e123f57ff7ef38ff164a231d0c0a76fe0" translate="yes" xml:space="preserve">
          <source>) you want to rebuild.</source>
          <target state="translated">）您要重建。</target>
        </trans-unit>
        <trans-unit id="02a91090e67572144de2f031f1bbc5cd3c4a2837" translate="yes" xml:space="preserve">
          <source>)&quot;). They may derive from the project class. They may derive from some other class altogether. Or via multiple inheritance, it may derive from any mixture of these.</source>
          <target state="translated">）&amp;ldquo;）。它们可能来自项目类。它们可能完全来自其他某个类。或者通过多重继承，它可能来自这些类的任何混合。</target>
        </trans-unit>
        <trans-unit id="e6747b651e587fe4f0093d11936c478b09099030" translate="yes" xml:space="preserve">
          <source>), &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;</source>
          <target state="translated">），&lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba220f5b6e6ddf875b36f2ab6036ca1e73f1dfa8" translate="yes" xml:space="preserve">
          <source>), a binary distribution, or a non-core module (such as Tk, DBI, etc), then please see the documentation that came with that distribution to determine the correct place to report bugs.</source>
          <target state="translated">），二进制发行版或非核心模块（例如Tk，DBI等），然后请参阅该发行版随附的文档，以确定报告错误的正确位置。</target>
        </trans-unit>
        <trans-unit id="37d7a98fcb3161e7f59b469e14532a94d36f9b12" translate="yes" xml:space="preserve">
          <source>), along with some helpful methods for interrogating that data.</source>
          <target state="translated">），以及一些用于查询该数据的有用方法。</target>
        </trans-unit>
        <trans-unit id="7bbfc61f89bcf69b7d112e66034a33a974882ccb" translate="yes" xml:space="preserve">
          <source>), and into the Perl interpreter itself. Older versions of Perl contain bugs that may manifest themselves despite using the latest version of &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; from CPAN. There is no workaround for this other than upgrading to the latest version of Perl.</source>
          <target state="translated">），以及进入Perl解释器本身。旧版本的Perl包含一些错误，即使使用了CPAN 的最新版本的&lt;a href=&quot;threads&quot;&gt;线程&lt;/a&gt;，这些错误也可能会显现出来。除了升级到最新版本的Perl之外，没有其他解决方法。</target>
        </trans-unit>
        <trans-unit id="a812a48223447ff4a00c61dec758c7f63fc7d624" translate="yes" xml:space="preserve">
          <source>), and the Korn shell (</source>
          <target state="translated">）和Korn外壳（</target>
        </trans-unit>
        <trans-unit id="4dc3d4ea606f39cb0d51862e90b09132948ca8d9" translate="yes" xml:space="preserve">
          <source>), but never achieved universal adoption. The &lt;a href=&quot;Object::InsideOut&quot;&gt;Object::InsideOut&lt;/a&gt; module on CPAN provides a comprehensive implementation of this technique, and you may see it or other inside-out modules in the wild.</source>
          <target state="translated">），但从未获得普遍采用。CPAN上的&lt;a href=&quot;Object::InsideOut&quot;&gt;Object :: InsideOut&lt;/a&gt;模块提供了该技术的全面实现，您可能会在野外看到它或其他由内而外的模块。</target>
        </trans-unit>
        <trans-unit id="5582722a931d80faec2c2604d236f55218c4801c" translate="yes" xml:space="preserve">
          <source>), but never achieved universal adoption. The &lt;a href=&quot;http://search.cpan.org/perldoc/Object::InsideOut&quot;&gt;Object::InsideOut&lt;/a&gt; module on CPAN provides a comprehensive implementation of this technique, and you may see it or other inside-out modules in the wild.</source>
          <target state="translated">），但从未获得普遍采用。CPAN上的&lt;a href=&quot;http://search.cpan.org/perldoc/Object::InsideOut&quot;&gt;Object :: InsideOut&lt;/a&gt;模块提供了该技术的全面实现，您可能会在野外看到它或其他由内而外的模块。</target>
        </trans-unit>
        <trans-unit id="be22299e2551650ec9efe8f43bc6cd3596bc5a87" translate="yes" xml:space="preserve">
          <source>), but the literal data is in the specified encoding.</source>
          <target state="translated">），但文字数据采用指定的编码。</target>
        </trans-unit>
        <trans-unit id="a13d6f5c889dfb868a65c83873de9aa4af2cc116" translate="yes" xml:space="preserve">
          <source>), especially many little-endians do the latter. This is only useful if you have select(), naturally.</source>
          <target state="translated">），尤其是许多小端人士都采用后者。自然，这仅在您具有select（）时才有用。</target>
        </trans-unit>
        <trans-unit id="a90a49817763911f4c5d2c811bd0265de9cdae6a" translate="yes" xml:space="preserve">
          <source>), even for negative shiftees. In arithmetic right shift the sign bit is replicated on the left, in logical shift zero bits come in from the left.</source>
          <target state="translated">），即使是负面的受雇者。在算术右移中，符号位复制在左侧，在逻辑移位中，零位从左侧进入。</target>
        </trans-unit>
        <trans-unit id="1bdc1dfaa0689b15c5f1f5abeefc7919ff43e83f" translate="yes" xml:space="preserve">
          <source>), like</source>
          <target state="translated">）， 喜欢</target>
        </trans-unit>
        <trans-unit id="8e07233c7cb7d125bda9afb2d089c66b7362165d" translate="yes" xml:space="preserve">
          <source>), or &lt;code&gt;`glob a*b`&lt;/code&gt; (internal for ksh)? You need to specify your shell explicitly, like &lt;code&gt;`cmd /c copy a b`&lt;/code&gt; , since Perl cannot deduce which commands are internal to your shell.</source>
          <target state="translated">）或 &lt;code&gt;`glob a*b`&lt;/code&gt; （ksh内部）？您需要显式指定外壳程序，例如 &lt;code&gt;`cmd /c copy a b`&lt;/code&gt; ，因为Perl无法推断出外壳程序内部的命令。</target>
        </trans-unit>
        <trans-unit id="778cde10ba3ce670335c0977b855f84fe72d11ca" translate="yes" xml:space="preserve">
          <source>), or &lt;code&gt;`glob a*b`&lt;/code&gt; (internal for ksh)? You need to specify your shell explicitly, like &lt;code&gt;`cmd /c copy a b`&lt;/code&gt;, since Perl cannot deduce which commands are internal to your shell.</source>
          <target state="translated">）或 &lt;code&gt;`glob a*b`&lt;/code&gt; （ksh内部）？您需要显式指定外壳程序，例如 &lt;code&gt;`cmd /c copy a b`&lt;/code&gt; ，因为Perl无法推断出外壳程序内部的命令。</target>
        </trans-unit>
        <trans-unit id="5b4d9823b2af8d74d8d5e0c1ea2ff248c80ea3d4" translate="yes" xml:space="preserve">
          <source>), or in configurable location (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&quot;&lt;code&gt;PERL_SH_DIR&lt;/code&gt;&quot;&lt;/a&gt;).</source>
          <target state="translated">）或可配置的位置（请参见&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;&amp;ldquo; &lt;code&gt;PERL_SH_DIR&lt;/code&gt; &amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0628cf3503bf4bbbc2ce5d535a543d4ded04903a" translate="yes" xml:space="preserve">
          <source>), or in configurable location (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;).</source>
          <target state="translated">），或在可配置的位置（请参见&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2491f48be12de5636116c5c0fd0e291876db397a" translate="yes" xml:space="preserve">
          <source>), or libdlcompat to</source>
          <target state="translated">）或libdlcompat到</target>
        </trans-unit>
        <trans-unit id="e29686a525e32c01eab0fa60c7ad6d86eada0dd5" translate="yes" xml:space="preserve">
          <source>), otherwise unsigned C integers are used (</source>
          <target state="translated">），否则将使用无符号C整数（</target>
        </trans-unit>
        <trans-unit id="b76430f0a63614c0383c191e6bda6c8b60a93154" translate="yes" xml:space="preserve">
          <source>), resulting in garbled output from the unrecognized attribute. Even if there were a way around that problem, the format doesn't know that the non-printing escape sequence is zero-length and would incorrectly format the output. For formatted output using color or other attributes, either use sprintf() instead or use formline() and then add the color or other attributes after formatting and before output.</source>
          <target state="translated">），导致无法识别的属性输出乱码。即使有解决此问题的方法，该格式也不知道非打印转义序列的长度为零，并且会错误地格式化输出。对于使用颜色或其他属性进行格式化的输出，请改用sprintf（）或使用formline（），然后在格式化之后和输出之前添加颜色或其他属性。</target>
        </trans-unit>
        <trans-unit id="27d4e0b75aa9979af9c60f48e50541e1084c0f21" translate="yes" xml:space="preserve">
          <source>), the C shell (</source>
          <target state="translated">），C外壳程序（</target>
        </trans-unit>
        <trans-unit id="36f69b726a9c53c3663307c2a768d21ad7c2d633" translate="yes" xml:space="preserve">
          <source>), the Unicode version of normalization implemented by this module depends on what has been compiled into your perl. The following table lists the default Unicode version that comes with various perl versions. (It is possible to change the Unicode version in any perl version to be any earlier Unicode version, so one could cause Unicode 3.2 to be used in any perl version starting with 5.8.0. Read</source>
          <target state="translated">），此模块实现的Unicode版本的规范化取决于您的perl中已编译的内容。下表列出了各种Perl版本随附的默认Unicode版本。（可以将任何perl版本中的Unicode版本更改为任何较早的Unicode版本，因此可能会导致从5.8.0开始的任何perl版本中都使用Unicode 3.2。请阅读。</target>
        </trans-unit>
        <trans-unit id="8921d13cc2e9b0e14e6863e00a16b9ef9534ecde" translate="yes" xml:space="preserve">
          <source>), the Unicode version of normalization implemented by this module depends on your perl's version.</source>
          <target state="translated">），此模块实现的Unicode规范化版本取决于您的perl版本。</target>
        </trans-unit>
        <trans-unit id="7847189040b71cd51c130c2436b0e22235a3d864" translate="yes" xml:space="preserve">
          <source>), the remainder of the text, and the skipped prefix (if any). If a suitable delimited substring is not found, the first element of the array is the empty string, the second is the complete original text, and the prefix returned in the third element is an empty string.</source>
          <target state="translated">），文本的其余部分以及跳过的前缀（如果有）。如果找不到合适的带分隔符的子字符串，则数组的第一个元素为空字符串，第二个为完整的原始文本，第三个元素中返回的前缀为空字符串。</target>
        </trans-unit>
        <trans-unit id="f615146b0c5326d45eb59116d40a716c8d44a5d9" translate="yes" xml:space="preserve">
          <source>), while the latter is useful if $prefix is shared by many packages, e.g. if $prefix=</source>
          <target state="translated">），而如果$ prefix由许多软件包共享（例如，如果$ prefix =</target>
        </trans-unit>
        <trans-unit id="2ddb6d2a78b2c77758ab5631f959dfe309c8ee8b" translate="yes" xml:space="preserve">
          <source>). A few platforms need to be told the location of the dependent library explicitly. Use @dl_resolve_using for this.</source>
          <target state="translated">）。需要明确告知一些平台依赖库的位置。为此使用@dl_resolve_using。</target>
        </trans-unit>
        <trans-unit id="6e0d8f2fab340ca3e828a3d60cdc124f6a7963fd" translate="yes" xml:space="preserve">
          <source>). Almost all internally-used routines in</source>
          <target state="translated">）。几乎所有内部​​使用的例程</target>
        </trans-unit>
        <trans-unit id="2e3178a172620d14bf2d6fd49572a7f8b300111a" translate="yes" xml:space="preserve">
          <source>). And it is &lt;code&gt;F&lt;/code&gt; if there is only a</source>
          <target state="translated">）。如果只有一个，则为 &lt;code&gt;F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="191441749ef940028953be8e584c0530088683d7" translate="yes" xml:space="preserve">
          <source>). Anyhow, this module will neither refer to</source>
          <target state="translated">）。无论如何，该模块都不会引用</target>
        </trans-unit>
        <trans-unit id="740873c13ba23b24200aa2080c4fd9faa64f0e57" translate="yes" xml:space="preserve">
          <source>). If necessary, run just the failing scripts again sequentially and see if the failures go away.</source>
          <target state="translated">）。如有必要，请仅顺序运行失败的脚本，然后查看失败是否消失。</target>
        </trans-unit>
        <trans-unit id="f4fa6174028d9716fdac2ed031a49f5b83d140fe" translate="yes" xml:space="preserve">
          <source>). If this Perl code makes calls into this XS code, and/or this XS code makes calls to the Perl code, one should be careful with the order of initialization.</source>
          <target state="translated">）。如果此Perl代码调用此XS代码和/或此XS代码调用Perl代码，则应注意初始化的顺序。</target>
        </trans-unit>
        <trans-unit id="d00d1fa6ee0d8fc40d4a6589099f366d00ea1908" translate="yes" xml:space="preserve">
          <source>). In this model, each thread runs in its own Perl interpreter, and any data sharing between threads must be explicit. The user-level interface for</source>
          <target state="translated">）。在此模型中，每个线程都在其自己的Perl解释器中运行，并且线程之间的任何数据共享都必须是明确的。用户级别的界面</target>
        </trans-unit>
        <trans-unit id="7d5472f1ffe12c98e459541b4ae02160b6a93b4f" translate="yes" xml:space="preserve">
          <source>). It is &lt;code&gt;S&lt;/code&gt; if there are distinct folds,</source>
          <target state="translated">）。如果有明显的褶皱，则为 &lt;code&gt;S&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="05a6e878bb179497ab31f32f00f95fb3899c774b" translate="yes" xml:space="preserve">
          <source>). Perl is not strictly a shell because it&amp;rsquo;s not interactive (although Perl programs can be interactive).</source>
          <target state="translated">）。Perl严格来说不是shell，因为它不是交互式的（尽管Perl程序可以是交互式的）。</target>
        </trans-unit>
        <trans-unit id="042b1859470effcbb8073926a97e8482ad8c8566" translate="yes" xml:space="preserve">
          <source>). President, ZeeGee Software Inc (</source>
          <target state="translated">）。ZeeGee软件公司总裁（</target>
        </trans-unit>
        <trans-unit id="f78cffbbf89f8002aea6399c7a9ddf0dfac97229" translate="yes" xml:space="preserve">
          <source>). So long as</source>
          <target state="translated">）。只要</target>
        </trans-unit>
        <trans-unit id="ea5a3d55458bd648431ff33d784b7d2a42d0fac1" translate="yes" xml:space="preserve">
          <source>). The following example computes the SHA-224 digest of the 7-bit message</source>
          <target state="translated">）。下面的示例计算7位消息的SHA-224摘要</target>
        </trans-unit>
        <trans-unit id="2153ee3bfe39da6fb29d4990a55e42d582ee704f" translate="yes" xml:space="preserve">
          <source>). The subroutine should return either nothing or else a list of up to four values in the following order:</source>
          <target state="translated">）。子例程应该不返回任何内容，或者按以下顺序返回最多四个值的列表：</target>
        </trans-unit>
        <trans-unit id="f2791a078af14b6f53c92cc496607d9ac596dc19" translate="yes" xml:space="preserve">
          <source>). These are &lt;b&gt;not&lt;/b&gt; yet available with newlib, the Cygwin libc.</source>
          <target state="translated">）。这些是&lt;b&gt;不是&lt;/b&gt;还可以与newlib，在Cygwin的libc。</target>
        </trans-unit>
        <trans-unit id="560023602febe7a40239bc4208c087508750d63d" translate="yes" xml:space="preserve">
          <source>). These ordinals can be accessed via the APIs:</source>
          <target state="translated">）。可以通过以下API访问这些常规：</target>
        </trans-unit>
        <trans-unit id="b347823ca9f713e85046a6075137cf021c306fdd" translate="yes" xml:space="preserve">
          <source>). This is best demonstrated with this code:</source>
          <target state="translated">）。最好用以下代码演示：</target>
        </trans-unit>
        <trans-unit id="a1d6564a7c3672bec1a1bc0e927d67a7df20f8a1" translate="yes" xml:space="preserve">
          <source>). This is done, as in the examples above, by having the two components separated by an equal sign (or interchangeably, a colon), like &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt; .</source>
          <target state="translated">）。如上面的示例中所示，这是通过使两个分量用等号（或可替换地为冒号）分开的，例如 &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d464c209f218a9aa2625304a1b1d634c64210d1e" translate="yes" xml:space="preserve">
          <source>). This is done, as in the examples above, by having the two components separated by an equal sign (or interchangeably, a colon), like &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt;.</source>
          <target state="translated">）。如上面的示例中所示，这是通过使两个分量用等号（或可替换地为冒号） &lt;code&gt;\p{Bidi_Class: Left}&lt;/code&gt; ，例如\ p {Bidi_Class：Left}来完成的。</target>
        </trans-unit>
        <trans-unit id="705bf65f5f48be0531b7a87c6aca35d55ff144f4" translate="yes" xml:space="preserve">
          <source>). This means that even if you do not</source>
          <target state="translated">）。这意味着即使您不</target>
        </trans-unit>
        <trans-unit id="d67ecb26991744a9d2868c66788af481b16bc33d" translate="yes" xml:space="preserve">
          <source>). Those flags, and others, are discussed in &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">）。这些标志和其他标志在&lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;中讨论。</target>
        </trans-unit>
        <trans-unit id="6aa020a5258af192f5be7bb87b11f10731cd4d0d" translate="yes" xml:space="preserve">
          <source>). You need the latest version of</source>
          <target state="translated">）。您需要最新版本的</target>
        </trans-unit>
        <trans-unit id="53971837c357909ccaf3a6ac8079d2f764d799a4" translate="yes" xml:space="preserve">
          <source>). cereg.exe (which must be executed on a desktop pc with ActiveSync) is reported not to work on some devices. You have to create the registry entries by hand using a registry editor.</source>
          <target state="translated">）。 cereg.exe（必须在具有ActiveSync的台式机上执行）据报在某些设备上不起作用。您必须使用注册表编辑器手动创建注册表项。</target>
        </trans-unit>
        <trans-unit id="fb8631ca8bfdb01c1b65f1b35f5d1a40518d434a" translate="yes" xml:space="preserve">
          <source>);</source>
          <target state="translated">);</target>
        </trans-unit>
        <trans-unit id="1d59027579448d8af6f36a6dc3d4a00baffe8901" translate="yes" xml:space="preserve">
          <source>); or by name via the &lt;code&gt;%+&lt;/code&gt; hash, using &lt;code&gt;&quot;$+{&lt;i&gt;name&lt;/i&gt;}&quot;&lt;/code&gt;.</source>
          <target state="translated">）; 或通过 &lt;code&gt;%+&lt;/code&gt; 散列使​​用 &lt;code&gt;&quot;$+{&lt;i&gt;name&lt;/i&gt;}&quot;&lt;/code&gt; ，使用&amp;ldquo; $ + { &lt;i&gt;name&lt;/i&gt; }&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3e0ee17e99cbf2528fa040abfe91674006a4598e" translate="yes" xml:space="preserve">
          <source>); these were automatically generated by the installation process. You may also discover files in the library directory that end in either</source>
          <target state="translated">）; 这些是由安装过程自动生成的。您也可能会在库目录中发现以以下任一结尾的文件</target>
        </trans-unit>
        <trans-unit id="f0f1ab06aabff0dd04ec2e7fdd0330f3f72717ad" translate="yes" xml:space="preserve">
          <source>* $status = $i-&amp;gt;inflate($input, $output [,$eof]) *</source>
          <target state="translated">* $ status = $ i-&amp;gt; inflate（$ input，$ output [，$ eof]）*</target>
        </trans-unit>
        <trans-unit id="711683a62464c1b947fc95a05857522c610a2052" translate="yes" xml:space="preserve">
          <source>* ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] ) *</source>
          <target state="translated">*（$ i，$ status）=新的Compress :: Raw :: Zlib :: Inflate（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="4dca2a4ec9738b1daccbda871474b00c0a111b97" translate="yes" xml:space="preserve">
          <source>* &lt;a href=&quot;I18N::LangTags::List&quot;&gt;I18N::LangTags::List&lt;/a&gt;</source>
          <target state="translated">* &lt;a href=&quot;I18N::LangTags::List&quot;&gt;I18N::LangTags::List&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="662154abd6b12506d6af987521bf74a19afd4fd0" translate="yes" xml:space="preserve">
          <source>* &lt;a href=&quot;langtags/list&quot;&gt;I18N::LangTags::List&lt;/a&gt;</source>
          <target state="translated">* &lt;a href=&quot;langtags/list&quot;&gt;I18N :: LangTags :: List&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f4fa87402fc5d37e84c5d48b561733bfecfda12" translate="yes" xml:space="preserve">
          <source>* Calls to &lt;code&gt;maketext&lt;/code&gt; (as Maketext's main function is called) happen thru a &quot;language session handle&quot;, notionally very much like an IO handle, in that you open one at the start of the session, and use it for &quot;sending signals&quot; to an object in order to have it return the text you want.</source>
          <target state="translated">*对 &lt;code&gt;maketext&lt;/code&gt; 的调用（称为Maketext的主要功能）是通过&amp;ldquo;语言会话句柄&amp;rdquo;发生的，从概念上讲，它非常类似于IO句柄，因为您可以在会话开始时打开一个，并将其用于&amp;ldquo;发送信号&amp;rdquo;，以便一个对象，以使其返回您想要的文本。</target>
        </trans-unit>
        <trans-unit id="53698d1b06e8dd4ae73bc9c6c3f72d465836ed18" translate="yes" xml:space="preserve">
          <source>* Characters regarded as CJK unified ideographs (cf. &lt;code&gt;overrideCJK&lt;/code&gt; ) depend on &lt;code&gt;UCA_Version&lt;/code&gt; .</source>
          <target state="translated">*视为CJK统一表意文字的字符（请参见 &lt;code&gt;overrideCJK&lt;/code&gt; ）取决于 &lt;code&gt;UCA_Version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9f1a19955063b508d912267a743c01876e01d19" translate="yes" xml:space="preserve">
          <source>* Characters regarded as CJK unified ideographs (cf. &lt;code&gt;overrideCJK&lt;/code&gt;) depend on &lt;code&gt;UCA_Version&lt;/code&gt;.</source>
          <target state="translated">*视为CJK统一表意文字的字符（请参见 &lt;code&gt;overrideCJK&lt;/code&gt; ）取决于 &lt;code&gt;UCA_Version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7091209d72896e2c39bfe2b79d29762aee8efbde" translate="yes" xml:space="preserve">
          <source>* Check then exit</source>
          <target state="translated">*检查然后退出</target>
        </trans-unit>
        <trans-unit id="ff54b7fd765cf7407f178535811ac43fe11764ba" translate="yes" xml:space="preserve">
          <source>* Fully ignorable characters were ignored, and would not interrupt contractions with &lt;code&gt;UCA_Version&lt;/code&gt; 9 and 11.</source>
          <target state="translated">*完全可忽略的字符将被忽略，并且不会中断 &lt;code&gt;UCA_Version&lt;/code&gt; 9和11的收缩。</target>
        </trans-unit>
        <trans-unit id="c482699ba0d9eda15c09384bf56262c0a8ead969" translate="yes" xml:space="preserve">
          <source>* ISO 639-2, &quot;Codes for the representation of names of languages&quot;, including two-letter and three-letter codes, &lt;code&gt;&lt;a href=&quot;http://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;http://www.loc.gov/standards/iso639-2/php/code_list.php&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* ISO 639-2，&amp;ldquo;用于表示语言名称的代码&amp;rdquo;，包括两个字母和三个字母的代码， &lt;code&gt;&lt;a href=&quot;http://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;http://www.loc.gov/standards/iso639-2/php/code_list.php&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8da4ce51288b3c7661423886a55f8012178474ba" translate="yes" xml:space="preserve">
          <source>* ISO 639-2, &quot;Codes for the representation of names of languages&quot;, including two-letter and three-letter codes, &lt;code&gt;&lt;a href=&quot;https://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;http://www.loc.gov/standards/iso639-2/php/code_list.php&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* ISO 639-2，&amp;ldquo;用于表示语言名称的代码&amp;rdquo;，包括两个字母和三个字母的代码， &lt;code&gt;&lt;a href=&quot;https://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;http://www.loc.gov/standards/iso639-2/php/code_list.php&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c970a3c0abb4e4f41ee7e5d7374c3df2f2d33f28" translate="yes" xml:space="preserve">
          <source>* Locale::Codes, in &lt;code&gt;&lt;a href=&quot;http://www.perl.com/CPAN/modules/by-module/Locale/&quot;&gt;http://www.perl.com/CPAN/modules/by-module/Locale/&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">*语言环境：：代码，位于 &lt;code&gt;&lt;a href=&quot;http://www.perl.com/CPAN/modules/by-module/Locale/&quot;&gt;http://www.perl.com/CPAN/modules/by-module/Locale/&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a89954fdb3af5eae5e55d02be3ce39795c43b97" translate="yes" xml:space="preserve">
          <source>* Many hangul jamo are assigned at &lt;code&gt;UCA_Version&lt;/code&gt; 20, that will affect &lt;code&gt;hangul_terminator&lt;/code&gt; .</source>
          <target state="translated">*在 &lt;code&gt;UCA_Version&lt;/code&gt; 20 中分配了许多hangul jamo ，这会影响 &lt;code&gt;hangul_terminator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ccb2395cd0f2fb802c29014d60803ad3c29470b" translate="yes" xml:space="preserve">
          <source>* Many hangul jamo are assigned at &lt;code&gt;UCA_Version&lt;/code&gt; 20, that will affect &lt;code&gt;hangul_terminator&lt;/code&gt;.</source>
          <target state="translated">*在 &lt;code&gt;UCA_Version&lt;/code&gt; 20中分配了许多hangul jamo ，这会影响 &lt;code&gt;hangul_terminator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e7cdc6678b63f68f1f731cd796dc594743e79af" translate="yes" xml:space="preserve">
          <source>* Noncharacters (e.g. U+FFFF) are not ignored, and can be overridden since &lt;code&gt;UCA_Version&lt;/code&gt; 22.</source>
          <target state="translated">*非字符（例如U + FFFF）不会被忽略，并且自 &lt;code&gt;UCA_Version&lt;/code&gt; 22 起可以被覆盖。</target>
        </trans-unit>
        <trans-unit id="b1c01b3ace60123b87b3f718dd69b661047bea89" translate="yes" xml:space="preserve">
          <source>* Out-of-range codepoints (greater than U+10FFFF) are not ignored, and can be overridden since &lt;code&gt;UCA_Version&lt;/code&gt; 22.</source>
          <target state="translated">*超出范围的代码点（大于U + 10FFFF）不会被忽略，并且自 &lt;code&gt;UCA_Version&lt;/code&gt; 22 起可以被覆盖。</target>
        </trans-unit>
        <trans-unit id="3acf57a3122fd8676139be1b54b77e7a6c0f4419" translate="yes" xml:space="preserve">
          <source>* RFC 2231, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2231.txt&quot;&gt;http://www.ietf.org/rfc/rfc2231.txt&lt;/a&gt;&lt;/code&gt;, &quot;MIME Parameter Value and Encoded Word Extensions: Character Sets, Languages, and Continuations&quot;.</source>
          <target state="translated">* RFC 2231， &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2231.txt&quot;&gt;http://www.ietf.org/rfc/rfc2231.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc2231.txt，&amp;ldquo; MIME参数值和编码的词扩展名：字符集，语言和延续&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0eb37025c45e5d53c91fcd8dbafe7bb5620fc536" translate="yes" xml:space="preserve">
          <source>* RFC 2231, &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2231.txt&quot;&gt;http://www.ietf.org/rfc/rfc2231.txt&lt;/a&gt;&lt;/code&gt;, &quot;MIME Parameter Value and Encoded Word Extensions: Character Sets, Languages, and Continuations&quot;.</source>
          <target state="translated">* RFC 2231， &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2231.txt&quot;&gt;http://www.ietf.org/rfc/rfc2231.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc2231.txt，&amp;ldquo; MIME参数值和编码的词扩展名：字符集，语言和延续&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7a7d7dbfc55209a71c5f7e824d67a357a6a16bbc" translate="yes" xml:space="preserve">
          <source>* RFC 2277, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2277.txt&quot;&gt;http://www.ietf.org/rfc/rfc2277.txt&lt;/a&gt;&lt;/code&gt;, &quot;IETF Policy on Character Sets and Languages&quot;.</source>
          <target state="translated">* RFC 2277， &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2277.txt&quot;&gt;http://www.ietf.org/rfc/rfc2277.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc2277.txt，&amp;ldquo; IETF字符集和语言策略&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d69a3d36a66d31afa4b00df42d21137923ff493a" translate="yes" xml:space="preserve">
          <source>* RFC 2277, &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2277.txt&quot;&gt;http://www.ietf.org/rfc/rfc2277.txt&lt;/a&gt;&lt;/code&gt;, &quot;IETF Policy on Character Sets and Languages&quot;.</source>
          <target state="translated">* RFC 2277， &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2277.txt&quot;&gt;http://www.ietf.org/rfc/rfc2277.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc2277.txt，&amp;ldquo;字符集和语言的IETF政策&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9e8c6c9d9a4f36c517c3f295833e4f6eab416286" translate="yes" xml:space="preserve">
          <source>* RFC 2482, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2482.txt&quot;&gt;http://www.ietf.org/rfc/rfc2482.txt&lt;/a&gt;&lt;/code&gt;, &quot;Language Tagging in Unicode Plain Text&quot;.</source>
          <target state="translated">* RFC 2482， &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2482.txt&quot;&gt;http://www.ietf.org/rfc/rfc2482.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc2482.txt，&amp;ldquo; Unicode纯文本中的语言标记&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d727110d6b7bf387e0d6b2b080f16509f87b8e47" translate="yes" xml:space="preserve">
          <source>* RFC 2482, &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2482.txt&quot;&gt;http://www.ietf.org/rfc/rfc2482.txt&lt;/a&gt;&lt;/code&gt;, &quot;Language Tagging in Unicode Plain Text&quot;.</source>
          <target state="translated">* RFC 2482， &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2482.txt&quot;&gt;http://www.ietf.org/rfc/rfc2482.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc2482.txt，&amp;ldquo; Unicode纯文本中的语言标记&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a0423bc09cf4060b0b568dded73ce94844a1cdfb" translate="yes" xml:space="preserve">
          <source>* RFC 3066, &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3066.txt&quot;&gt;http://www.ietf.org/rfc/rfc3066.txt&lt;/a&gt;&lt;/code&gt;, &quot;Tags for the Identification of Languages&quot;. (Obsoletes RFC 1766)</source>
          <target state="translated">* RFC 3066， &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3066.txt&quot;&gt;http://www.ietf.org/rfc/rfc3066.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc3066.txt，&amp;ldquo;用于语言识别的标签&amp;rdquo;。（已废止RFC 1766）</target>
        </trans-unit>
        <trans-unit id="a818ab76998afdd6a691be0da92b7c5946a9d9a4" translate="yes" xml:space="preserve">
          <source>* RFC 3066, &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3066.txt&quot;&gt;http://www.ietf.org/rfc/rfc3066.txt&lt;/a&gt;&lt;/code&gt;, &quot;Tags for the Identification of Languages&quot;. (Obsoletes RFC 1766)</source>
          <target state="translated">* RFC 3066， &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3066.txt&quot;&gt;http://www.ietf.org/rfc/rfc3066.txt&lt;/a&gt;&lt;/code&gt; //www.ietf.org/rfc/rfc3066.txt，&amp;ldquo;用于语言识别的标签&amp;rdquo;。（已废止RFC 1766）</target>
        </trans-unit>
        <trans-unit id="0d995187844c913f0fc72fa490ae73510b255678" translate="yes" xml:space="preserve">
          <source>* See below &lt;code&gt;long_contraction&lt;/code&gt; with &lt;code&gt;UCA_Version&lt;/code&gt; 22 and 24.</source>
          <target state="translated">*请参阅下面 &lt;code&gt;long_contraction&lt;/code&gt; 与 &lt;code&gt;UCA_Version&lt;/code&gt; 22和24。</target>
        </trans-unit>
        <trans-unit id="623012ecef5bb9b062336a9ae7c0b0f3fc03627e" translate="yes" xml:space="preserve">
          <source>* See below for &lt;code&gt;long_contraction&lt;/code&gt; with &lt;code&gt;UCA_Version&lt;/code&gt; 22 and 24.</source>
          <target state="translated">*有关 &lt;code&gt;UCA_Version&lt;/code&gt; 22和24的 &lt;code&gt;long_contraction&lt;/code&gt; ，请参见下文。</target>
        </trans-unit>
        <trans-unit id="9659d778014dc9fe8cc992c94d2c75debd111108" translate="yes" xml:space="preserve">
          <source>* The IANA list of registered languages (hopefully up-to-date), &lt;code&gt;&lt;a href=&quot;http://www.iana.org/assignments/language-tags&quot;&gt;http://www.iana.org/assignments/language-tags&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* IANA注册语言列表（希望是最新的）， &lt;code&gt;&lt;a href=&quot;http://www.iana.org/assignments/language-tags&quot;&gt;http://www.iana.org/assignments/language-tags&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f5483d5144230e2ac3213a98a28139fa69a25e4" translate="yes" xml:space="preserve">
          <source>* The IANA list of registered languages (hopefully up-to-date), &lt;code&gt;&lt;a href=&quot;https://www.iana.org/assignments/language-tags&quot;&gt;http://www.iana.org/assignments/language-tags&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* IANA注册语言列表（希望是最新的）， &lt;code&gt;&lt;a href=&quot;https://www.iana.org/assignments/language-tags&quot;&gt;http://www.iana.org/assignments/language-tags&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74b13d7787d563c4cc93632fd811f53e2f851184" translate="yes" xml:space="preserve">
          <source>* The shorthand uses code in brackets to indicate method calls that should be performed. A full explanation is not in order here, but a few examples will suffice:</source>
          <target state="translated">*速记使用方括号中的代码表示应执行的方法调用。这里没有完整的解释，但是一些示例就足够了：</target>
        </trans-unit>
        <trans-unit id="fc59265402b2bcf12a045f141f3c84d1ac00a64c" translate="yes" xml:space="preserve">
          <source>* There are two exceptions to a bracketed character class matching a single character only. Each requires special handling by Perl to make things work:</source>
          <target state="translated">*方括号类仅匹配单个字符有两个例外。每个组件都需要Perl进行特殊处理才能使其正常工作：</target>
        </trans-unit>
        <trans-unit id="4586f310185f58f7f53d9296e7502d34140c05ef" translate="yes" xml:space="preserve">
          <source>* There is initial support for Log4perl if it is available, but I haven't gone through everything to make the NullLogger work out correctly if Log4perl is not installed.</source>
          <target state="translated">*如果可以使用Log4perl，则可以使用它的初始支持，但是如果未安装Log4perl，我将不做所有事情来使NullLogger正常工作。</target>
        </trans-unit>
        <trans-unit id="897931bec8a15698dae5c444e1fbf89e322d1e04" translate="yes" xml:space="preserve">
          <source>* Treatment of ignorables after variables and some behaviors were changed at &lt;code&gt;UCA_Version&lt;/code&gt; 9.</source>
          <target state="translated">*在 &lt;code&gt;UCA_Version&lt;/code&gt; 9 中更改了变量和某些行为后对可燃物的处理。</target>
        </trans-unit>
        <trans-unit id="4ab6776ec3ae41680389bbd7fdeaf492e64beaea" translate="yes" xml:space="preserve">
          <source>* Warnings switch</source>
          <target state="translated">*警告开关</target>
        </trans-unit>
        <trans-unit id="d39076f93b425658bb7a0773e365b9aebbb6b2dd" translate="yes" xml:space="preserve">
          <source>* When I capture CPAN.pm output, I need to check for errors and report them to the user.</source>
          <target state="translated">*当捕获CPAN.pm输出时，我需要检查错误并将其报告给用户。</target>
        </trans-unit>
        <trans-unit id="bf1ce5c5a5f16390fceec5d1cfef5859ae6cb024" translate="yes" xml:space="preserve">
          <source>* Where a value in a %Lexicon hash is a contentful string instead of an anonymous sub (or, conceivably, a coderef), it would be interpreted as a sort of shorthand expression of what the sub does. When accessed for the first time in a session, it is parsed, turned into Perl code, and then eval'd into an anonymous sub; then that sub replaces the original string in that lexicon. (That way, the work of parsing and evaling the shorthand form for a given phrase is done no more than once per session.)</source>
          <target state="translated">*如果％Lexicon哈希中的值是有内容的字符串而不是匿名子项（或可以想到的是coderef），则它将被解释为子项功能的一种简写形式。在会话中首次访问时，将对其进行解析，将其转换为Perl代码，然后将其评估为匿名子对象；然后该sub替换该词典中的原始字符串。（这样，每个会话最多完成一次解析和规避给定短语的速记形式的工作。）</target>
        </trans-unit>
        <trans-unit id="eb19d00dbb35076b2cfb43afaaa8a44bc7567ca5" translate="yes" xml:space="preserve">
          <source>* an encoding of a formally valid language tag always is a string value that is defined, has length, and is true if considered as a boolean.</source>
          <target state="translated">*形式上有效的语言标签的编码始终是已定义，具有长度的字符串值，如果将其视为布尔值则为true。</target>
        </trans-unit>
        <trans-unit id="d7b33d4317a74846c304b7cc9d62f9ea8e7ce5e2" translate="yes" xml:space="preserve">
          <source>* none noted</source>
          <target state="translated">*未注明</target>
        </trans-unit>
        <trans-unit id="2557ef10c9aae34d34a75b9568a7e1eeddc1c5f2" translate="yes" xml:space="preserve">
          <source>* one shot configuration values from the command line</source>
          <target state="translated">*命令行中的一发配置值</target>
        </trans-unit>
        <trans-unit id="cb89de7628537cdbcdcd2d5c31607dcd65d29209" translate="yes" xml:space="preserve">
          <source>* tags representing different languages never get the same encoding.</source>
          <target state="translated">*代表不同语言的标签永远不会获得相同的编码。</target>
        </trans-unit>
        <trans-unit id="cfc914db0008bc5c5328a3a2456a7e925514bb85" translate="yes" xml:space="preserve">
          <source>* tags representing the same language always get the same encoding.</source>
          <target state="translated">*表示相同语言的标签始终获得相同的编码。</target>
        </trans-unit>
        <trans-unit id="f632df7964dda121448ae6e5ca4eb877ed15fde2" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;adler32()*</source>
          <target state="translated">*$d-&amp;gt;adler32()*</target>
        </trans-unit>
        <trans-unit id="c35eaa4aaa4b0b36d04700f984d9950b54e08112" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;crc32()*</source>
          <target state="translated">*$d-&amp;gt;crc32()*</target>
        </trans-unit>
        <trans-unit id="0c971c521366bf298521a0d1cb12de8653928b4d" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;dict_adler()*</source>
          <target state="translated">*$d-&amp;gt;dict_adler()*</target>
        </trans-unit>
        <trans-unit id="64629fc19b2eab3d05adbf52fc5e32abcf625962" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;get_BufSize()*</source>
          <target state="translated">*$d-&amp;gt;get_BufSize()*</target>
        </trans-unit>
        <trans-unit id="56aed9950c73a350f4bbada6fc3d5abe3158462a" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;get_Level()*</source>
          <target state="translated">*$d-&amp;gt;get_Level()*</target>
        </trans-unit>
        <trans-unit id="3bf087cdc68f5ef42e9bbc91a4a61bc60dd22717" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;get_Strategy()*</source>
          <target state="translated">*$d-&amp;gt;get_Strategy()*</target>
        </trans-unit>
        <trans-unit id="6a81c6c52f16a8d6923233b258116bbaae34938f" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;msg()*</source>
          <target state="translated">*$d-&amp;gt;msg()*</target>
        </trans-unit>
        <trans-unit id="b63a3f7f425b1954a977386ef5d279e257384ce4" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;total_in()*</source>
          <target state="translated">*$d-&amp;gt;total_in()*</target>
        </trans-unit>
        <trans-unit id="7be11abe1a981cdfe5c58e90cbe56c74620650fb" translate="yes" xml:space="preserve">
          <source>*$d-&amp;gt;total_out()*</source>
          <target state="translated">*$d-&amp;gt;total_out()*</target>
        </trans-unit>
        <trans-unit id="d80a4fc42d0165881aa2fa21601335f6a5b174f7" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;adler32()*</source>
          <target state="translated">*$i-&amp;gt;adler32()*</target>
        </trans-unit>
        <trans-unit id="68674a7b4388b0adebddc415278aa8a461b56203" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;crc32()*</source>
          <target state="translated">*$i-&amp;gt;crc32()*</target>
        </trans-unit>
        <trans-unit id="1660d213fb0cf4bed038244acbc0c77e58a9ffde" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;dict_adler()*</source>
          <target state="translated">*$i-&amp;gt;dict_adler()*</target>
        </trans-unit>
        <trans-unit id="ed00afb6796ebd2d75d5fb6836b1271979dc5acd" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;msg()*</source>
          <target state="translated">*$i-&amp;gt;msg()*</target>
        </trans-unit>
        <trans-unit id="2b2b2852d7c10fd41b04fd33545a78d54c94f1e6" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;total_in()*</source>
          <target state="translated">*$i-&amp;gt;total_in()*</target>
        </trans-unit>
        <trans-unit id="a00928e02457981385f8e4dd086f63b3c7d4708f" translate="yes" xml:space="preserve">
          <source>*$i-&amp;gt;total_out()*</source>
          <target state="translated">*$i-&amp;gt;total_out()*</target>
        </trans-unit>
        <trans-unit id="04bb5391ea5a418de25822f423a009711407d686" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflate($input, $output)*</source>
          <target state="translated">* $ status = $ d-&amp;gt; deflate（$ input，$ output）*</target>
        </trans-unit>
        <trans-unit id="c0ba780f9e7693de09966236201daf25c2601f99" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflateParams([OPT])*</source>
          <target state="translated">* $ status = $ d-&amp;gt; deflateParams（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="254a6aafb8b04918fd23639de431468d8ff29ccd" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflateReset() *</source>
          <target state="translated">* $状态= $ d-&amp;gt; deflateReset（）*</target>
        </trans-unit>
        <trans-unit id="d497a45f9cb78ca6b50b3a7e156fd6b9c7fb384d" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;deflateTune($good_length, $max_lazy, $nice_length, $max_chain)*</source>
          <target state="translated">* $状态= $ d-&amp;gt; deflateTune（$ good_length，$ max_lazy，$ nice_length，$ max_chain）*</target>
        </trans-unit>
        <trans-unit id="141b772af4aeeaea008ed027db1ed7bde5ce5676" translate="yes" xml:space="preserve">
          <source>*$status = $d-&amp;gt;flush($output [, $flush_type]) *</source>
          <target state="translated">* $ status = $ d-&amp;gt; flush（$ output [，$ flush_type]）*</target>
        </trans-unit>
        <trans-unit id="74f8a4eb98878730ef2f86aea42e666e1ee160bc" translate="yes" xml:space="preserve">
          <source>*$status = $i-&amp;gt;inflateReset() *</source>
          <target state="translated">* $状态= $ i-&amp;gt; inflateReset（）*</target>
        </trans-unit>
        <trans-unit id="9db33bbf75bca37e8376afc3d73136b2ed6357e1" translate="yes" xml:space="preserve">
          <source>*$status = $i-&amp;gt;inflateSync($buffer)*</source>
          <target state="translated">* $状态= $ i-&amp;gt; inflateSync（$缓冲）*</target>
        </trans-unit>
        <trans-unit id="112c6b855140730d98a28cbfad625ebe4443a357" translate="yes" xml:space="preserve">
          <source>*$status = $i-&amp;gt;inflateSync($input)*</source>
          <target state="translated">* $状态= $ i-&amp;gt; inflateSync（$输入）*</target>
        </trans-unit>
        <trans-unit id="ac1cc2e7b1d14736f7f3c26c35c1e7b862a74263" translate="yes" xml:space="preserve">
          <source>*($d, $status) = deflateInit( [OPT] )*</source>
          <target state="translated">*（$ d，$ status）= deflateInit（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="a1e0d6d4dfa07bb414b033b626ca0cac87b1dd85" translate="yes" xml:space="preserve">
          <source>*($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] ) *</source>
          <target state="translated">*（$ d，$ status）=新的Compress :: Raw :: Zlib :: Deflate（[OPT]）*</target>
        </trans-unit>
        <trans-unit id="3374bc8edae5ea56b3cf3599aae276d721728d25" translate="yes" xml:space="preserve">
          <source>*($i, $status) = inflateInit()*</source>
          <target state="translated">*（$ i，$ status）= inflateInit（）*</target>
        </trans-unit>
        <trans-unit id="10ad095b48dbd0069e2864202f1242314d07a5ef" translate="yes" xml:space="preserve">
          <source>*($out, $status) = $d-&amp;gt;deflate($buffer)*</source>
          <target state="translated">*（$ out，$ status）= $ d-&amp;gt;放气（$ buffer）*</target>
        </trans-unit>
        <trans-unit id="abc6e06c1d13c4e3bda0992462832a237f5a44c8" translate="yes" xml:space="preserve">
          <source>*($out, $status) = $d-&amp;gt;flush()* =head2 *($out, $status) = $d-&amp;gt;flush($flush_type)*</source>
          <target state="translated">*（$ out，$ status）= $ d-&amp;gt; flush（）* = head2 *（$ out，$ status）= $ d-&amp;gt; flush（$ flush_type）*</target>
        </trans-unit>
        <trans-unit id="3c4770a854a915518ba1ea48502e3961a3be7950" translate="yes" xml:space="preserve">
          <source>*($out, $status) = $i-&amp;gt;inflate($buffer)*</source>
          <target state="translated">*（$ out，$ status）= $ i-&amp;gt;膨胀（$ buffer）*</target>
        </trans-unit>
        <trans-unit id="40f47eef273f34142764782337cff559ed807120" translate="yes" xml:space="preserve">
          <source>** If you are unfamiliar with testing &lt;b&gt;read &lt;a href=&quot;Test::Tutorial&quot;&gt;Test::Tutorial&lt;/a&gt; first!&lt;/b&gt; **</source>
          <target state="translated">**如果您不熟悉测试，&lt;b&gt;请先阅读&lt;a href=&quot;Test::Tutorial&quot;&gt;Test :: Tutorial&lt;/a&gt;！&lt;/b&gt;**</target>
        </trans-unit>
        <trans-unit id="0d672a53a05ad4df9358326135542cc74a9d72d5" translate="yes" xml:space="preserve">
          <source>** If you are unfamiliar with testing &lt;b&gt;read &lt;a href=&quot;tutorial&quot;&gt;Test::Tutorial&lt;/a&gt; first!&lt;/b&gt; **</source>
          <target state="translated">**如果您不熟悉测试，&lt;b&gt;请先阅读&lt;a href=&quot;tutorial&quot;&gt;Test :: Tutorial&lt;/a&gt;！&lt;/b&gt;**</target>
        </trans-unit>
        <trans-unit id="6fb8eb5f7fd0333449dafeec8a54ea4e28516ebb" translate="yes" xml:space="preserve">
          <source>***INTERNALS NOTE***</source>
          <target state="translated">***内部注释***</target>
        </trans-unit>
        <trans-unit id="8b29010790c714176ac46c130dfb61773e0c13e0" translate="yes" xml:space="preserve">
          <source>*.PL</source>
          <target state="translated">*.PL</target>
        </trans-unit>
        <trans-unit id="5c455cfeca9fc61305db058d5b67796ca3d8f994" translate="yes" xml:space="preserve">
          <source>*.t</source>
          <target state="translated">*.t</target>
        </trans-unit>
        <trans-unit id="e06fa715f3e3bd676f73309b058b71ea1c00418c" translate="yes" xml:space="preserve">
          <source>*/man/</source>
          <target state="translated">*/man/</target>
        </trans-unit>
        <trans-unit id="030b7462745046bec4a3476bbbd9b7c622cb263d" translate="yes" xml:space="preserve">
          <source>*AutoLoader* vs. *SelfLoader*</source>
          <target state="translated">* AutoLoader *与* SelfLoader *</target>
        </trans-unit>
        <trans-unit id="b6da558cc8e40a9588c5a25bffee14e91b6e21e0" translate="yes" xml:space="preserve">
          <source>*Blocks versus Scripts*</source>
          <target state="translated">*块与脚本*</target>
        </trans-unit>
        <trans-unit id="6a49ec15388c609953d1dfeb20a9de1712f85c3d" translate="yes" xml:space="preserve">
          <source>*Matching Scripts and Blocks*</source>
          <target state="translated">*匹配脚本和块*</target>
        </trans-unit>
        <trans-unit id="cb8fc69d4856a82c9d0d539da68de93134a668e2" translate="yes" xml:space="preserve">
          <source>*NOTE* You are strongly discouraged from using this function in non-test code and especially discouraged from using the set form of this function. The results of doing so may result in segmentation faults or other undefined behavior.</source>
          <target state="translated">*注意*强烈建议您不要在非测试代码中使用此功能，尤其不要使用此功能的设置形式。这样做的结果可能会导致分段错误或其他未定义的行为。</target>
        </trans-unit>
        <trans-unit id="4dbc7db62720fd7c360f08690c42352d5d4fde10" translate="yes" xml:space="preserve">
          <source>*Pod::InteriorSequence*</source>
          <target state="translated">*Pod::InteriorSequence*</target>
        </trans-unit>
        <trans-unit id="bd484e6a3fa2a69cf1b2fa912e8c64e369203cf3" translate="yes" xml:space="preserve">
          <source>*Pod::Paragraph*</source>
          <target state="translated">*Pod::Paragraph*</target>
        </trans-unit>
        <trans-unit id="f6118e75f44bd9c2e2e7a4dbaf8b93141735b0c7" translate="yes" xml:space="preserve">
          <source>*Pod::ParseTree*</source>
          <target state="translated">*Pod::ParseTree*</target>
        </trans-unit>
        <trans-unit id="a839f625dd453146a9ced9341bbff5ba4836fc73" translate="yes" xml:space="preserve">
          <source>*Warning*</source>
          <target state="translated">*Warning*</target>
        </trans-unit>
        <trans-unit id="39c05f977c871385cfb2ac67c7071d2d0749325c" translate="yes" xml:space="preserve">
          <source>*add_selection()*</source>
          <target state="translated">*add_selection()*</target>
        </trans-unit>
        <trans-unit id="22677ec6b58cd6de560696c1281301c8215b2261" translate="yes" xml:space="preserve">
          <source>*all_casefolds()*</source>
          <target state="translated">*all_casefolds()*</target>
        </trans-unit>
        <trans-unit id="495bb86a56fbdcbecef4efb0a07e0fb5a52d90bb" translate="yes" xml:space="preserve">
          <source>*begin_input()*</source>
          <target state="translated">*begin_input()*</target>
        </trans-unit>
        <trans-unit id="21491eaf691d94ff4dc5e18150f5741423ca33f3" translate="yes" xml:space="preserve">
          <source>*begin_pod()*</source>
          <target state="translated">*begin_pod()*</target>
        </trans-unit>
        <trans-unit id="e63f038d7ccfb8b7ed87a3e9a94136cc3acbaa84" translate="yes" xml:space="preserve">
          <source>*bidi_types()*</source>
          <target state="translated">*bidi_types()*</target>
        </trans-unit>
        <trans-unit id="3323378f9f296b7e09bbde8389f91b3f2e90a612" translate="yes" xml:space="preserve">
          <source>*casefold()*</source>
          <target state="translated">*casefold()*</target>
        </trans-unit>
        <trans-unit id="a382525e3184f3292d70ce3e64c30b550c9d60ca" translate="yes" xml:space="preserve">
          <source>*casespec()*</source>
          <target state="translated">*casespec()*</target>
        </trans-unit>
        <trans-unit id="2acb520d2f999e48e1e23f31071debab4019805a" translate="yes" xml:space="preserve">
          <source>*charblock()*</source>
          <target state="translated">*charblock()*</target>
        </trans-unit>
        <trans-unit id="5a1a95773194bbecc12f391b4130725b29ef1d4a" translate="yes" xml:space="preserve">
          <source>*charblocks()*</source>
          <target state="translated">*charblocks()*</target>
        </trans-unit>
        <trans-unit id="892910658fd4f7c8f9957928bae7464e9f794524" translate="yes" xml:space="preserve">
          <source>*charinfo()*</source>
          <target state="translated">*charinfo()*</target>
        </trans-unit>
        <trans-unit id="298c43cb9d5cbe40f064250a448e61dd4cb8783e" translate="yes" xml:space="preserve">
          <source>*charinrange()*</source>
          <target state="translated">*charinrange()*</target>
        </trans-unit>
        <trans-unit id="98a743c2f5c3d0d1a69423f01cff293fd38d8edb" translate="yes" xml:space="preserve">
          <source>*charprop()*</source>
          <target state="translated">*charprop()*</target>
        </trans-unit>
        <trans-unit id="aff3e7777f49ee087b89c8a05dbee3af17a26546" translate="yes" xml:space="preserve">
          <source>*charprops_all()*</source>
          <target state="translated">*charprops_all()*</target>
        </trans-unit>
        <trans-unit id="2096c542c885e6ff5b205d9c49075754580714c3" translate="yes" xml:space="preserve">
          <source>*charscript()*</source>
          <target state="translated">*charscript()*</target>
        </trans-unit>
        <trans-unit id="95242ddcdfaf5eacd2a726f8aaa11d7bc03daf57" translate="yes" xml:space="preserve">
          <source>*charscripts()*</source>
          <target state="translated">*charscripts()*</target>
        </trans-unit>
        <trans-unit id="e4821a2674ad1d26afcb87813851f804da9f5ead" translate="yes" xml:space="preserve">
          <source>*ckfun_p</source>
          <target state="translated">*ckfun_p</target>
        </trans-unit>
        <trans-unit id="0b5ab6a4a90ff2c6437322fa15586407ef2b4d11" translate="yes" xml:space="preserve">
          <source>*ckobj_p</source>
          <target state="translated">*ckobj_p</target>
        </trans-unit>
        <trans-unit id="5f7f65bb7d96d645f65805f5d460c10a6f06b354" translate="yes" xml:space="preserve">
          <source>*clear_selections()*</source>
          <target state="translated">*clear_selections()*</target>
        </trans-unit>
        <trans-unit id="5d9dc7c769c9e8f4cbeee5398ed00b6384904253" translate="yes" xml:space="preserve">
          <source>*command()*</source>
          <target state="translated">*command()*</target>
        </trans-unit>
        <trans-unit id="a139e96d8189b5a55d4a4e8e2d33902d4d0c5b9d" translate="yes" xml:space="preserve">
          <source>*compexcl()*</source>
          <target state="translated">*compexcl()*</target>
        </trans-unit>
        <trans-unit id="1b540946e2151155f214582cd243507ba7640019" translate="yes" xml:space="preserve">
          <source>*curr_headings()*</source>
          <target state="translated">*curr_headings()*</target>
        </trans-unit>
        <trans-unit id="b44c1e16cdabb8e05ed00563725662b1898a3124" translate="yes" xml:space="preserve">
          <source>*cutting()*</source>
          <target state="translated">*cutting()*</target>
        </trans-unit>
        <trans-unit id="1ddba136bdb0a3b6dbf3f58b0168d4a9181d08fc" translate="yes" xml:space="preserve">
          <source>*end_input()*</source>
          <target state="translated">*end_input()*</target>
        </trans-unit>
        <trans-unit id="a5f7375fd2de061c65ad2bf50ef73effa4294574" translate="yes" xml:space="preserve">
          <source>*end_pod()*</source>
          <target state="translated">*end_pod()*</target>
        </trans-unit>
        <trans-unit id="1d38830083f7ab5197ea4473920fe3ec232e92e5" translate="yes" xml:space="preserve">
          <source>*errorsub()*</source>
          <target state="translated">*errorsub()*</target>
        </trans-unit>
        <trans-unit id="83ae438f6c5d4adfa7da1a2ac708671df372b4bb" translate="yes" xml:space="preserve">
          <source>*filter() and anonymous sub*</source>
          <target state="translated">*过滤器（）和匿名子*</target>
        </trans-unit>
        <trans-unit id="c5d36b4a9ac4410d0011698855500ff129fe6378" translate="yes" xml:space="preserve">
          <source>*filter_add()*</source>
          <target state="translated">*filter_add()*</target>
        </trans-unit>
        <trans-unit id="c590fd9b9ee4cb77f8c87dcc99cff21706f50d16" translate="yes" xml:space="preserve">
          <source>*flags</source>
          <target state="translated">*flags</target>
        </trans-unit>
        <trans-unit id="87bf87677970cfb50487269d83b12971442cad62" translate="yes" xml:space="preserve">
          <source>*general_categories()*</source>
          <target state="translated">*general_categories()*</target>
        </trans-unit>
        <trans-unit id="c8093d60d704e74fc21bb32d9a8ddd7a40063485" translate="yes" xml:space="preserve">
          <source>*import()*</source>
          <target state="translated">*import()*</target>
        </trans-unit>
        <trans-unit id="4af0e2a6bb704b69c7748e25de2a62d813d13313" translate="yes" xml:space="preserve">
          <source>*initialize()*</source>
          <target state="translated">*initialize()*</target>
        </trans-unit>
        <trans-unit id="a26c0f1de05a3c3080ce231702af1d37d1ffdcef" translate="yes" xml:space="preserve">
          <source>*input_file()*</source>
          <target state="translated">*input_file()*</target>
        </trans-unit>
        <trans-unit id="7b32820eda1a4cbba59b3c51ef02fe178f80b148" translate="yes" xml:space="preserve">
          <source>*input_handle()*</source>
          <target state="translated">*input_handle()*</target>
        </trans-unit>
        <trans-unit id="37cf554dca7439d60a53244dbe9a6f6f66666dbc" translate="yes" xml:space="preserve">
          <source>*interior_sequence()*</source>
          <target state="translated">*interior_sequence()*</target>
        </trans-unit>
        <trans-unit id="c16b57ca8bb2b15c81ee7888fb0cc3c088fd5605" translate="yes" xml:space="preserve">
          <source>*interpolate()*</source>
          <target state="translated">*interpolate()*</target>
        </trans-unit>
        <trans-unit id="1c763b56009fbad09ca114bbc6ad819659ad6849" translate="yes" xml:space="preserve">
          <source>*is_selected()*</source>
          <target state="translated">*is_selected()*</target>
        </trans-unit>
        <trans-unit id="950f1ac016fdc438a26ebe09acd34140f5d0a0b3" translate="yes" xml:space="preserve">
          <source>*len</source>
          <target state="translated">*len</target>
        </trans-unit>
        <trans-unit id="beaf32cf7b2e540d90a96b6fc45fac3a314cd55f" translate="yes" xml:space="preserve">
          <source>*len_p</source>
          <target state="translated">*len_p</target>
        </trans-unit>
        <trans-unit id="d670fa291475b584f9b4236a8ddfefd0211dcd71" translate="yes" xml:space="preserve">
          <source>*match_section()*</source>
          <target state="translated">*match_section()*</target>
        </trans-unit>
        <trans-unit id="159da2978736cbc50e92916d4ff2e95e3a6a3290" translate="yes" xml:space="preserve">
          <source>*namedseq()*</source>
          <target state="translated">*namedseq()*</target>
        </trans-unit>
        <trans-unit id="6523eee7c8959f955cebf19b0aaf21b556b5b09d" translate="yes" xml:space="preserve">
          <source>*new()*</source>
          <target state="translated">*new()*</target>
        </trans-unit>
        <trans-unit id="999e9b24506786f32dd08362c3037e9728f69c8e" translate="yes" xml:space="preserve">
          <source>*num()*</source>
          <target state="translated">*num()*</target>
        </trans-unit>
        <trans-unit id="7834a1138a40b68be0feedf680b5fc18cc6f66fd" translate="yes" xml:space="preserve">
          <source>*old_checker_p</source>
          <target state="translated">*old_checker_p</target>
        </trans-unit>
        <trans-unit id="3f69d68aed17e619c04ffa05320c5c7f0a776f85" translate="yes" xml:space="preserve">
          <source>*output_file()*</source>
          <target state="translated">*output_file()*</target>
        </trans-unit>
        <trans-unit id="068f4b4b0837c6d09f198f53062edaca42ca04da" translate="yes" xml:space="preserve">
          <source>*output_handle()*</source>
          <target state="translated">*output_handle()*</target>
        </trans-unit>
        <trans-unit id="e31580f4b34415c38c50584a8776797a08860c70" translate="yes" xml:space="preserve">
          <source>*parse_from_file()*</source>
          <target state="translated">*parse_from_file()*</target>
        </trans-unit>
        <trans-unit id="0e4cafcb90bfc690fd27784f3955de4a3db5693b" translate="yes" xml:space="preserve">
          <source>*parse_from_filehandle()*</source>
          <target state="translated">*parse_from_filehandle()*</target>
        </trans-unit>
        <trans-unit id="d75b3a0e94d1dfb9614e94eb5cd073abcca5f774" translate="yes" xml:space="preserve">
          <source>*parse_text()*</source>
          <target state="translated">*parse_text()*</target>
        </trans-unit>
        <trans-unit id="7e9078f3ae0ce35ce16daab81c0d4418d0c4ed4f" translate="yes" xml:space="preserve">
          <source>*parseopts()*</source>
          <target state="translated">*parseopts()*</target>
        </trans-unit>
        <trans-unit id="3da2f47adeba78e93b545821850c23066406dbeb" translate="yes" xml:space="preserve">
          <source>*podselect()*</source>
          <target state="translated">*podselect()*</target>
        </trans-unit>
        <trans-unit id="78275badea2a77aee3c8465d83cc3c29a208ed8e" translate="yes" xml:space="preserve">
          <source>*preprocess_line()*</source>
          <target state="translated">*preprocess_line()*</target>
        </trans-unit>
        <trans-unit id="e7392b32b770b3c307b1ac3aae8f31c9a2750031" translate="yes" xml:space="preserve">
          <source>*preprocess_paragraph()*</source>
          <target state="translated">*preprocess_paragraph()*</target>
        </trans-unit>
        <trans-unit id="1e0522e99f043488d01967be6bf4f6d936d08801" translate="yes" xml:space="preserve">
          <source>*prop_aliases()*</source>
          <target state="translated">*prop_aliases()*</target>
        </trans-unit>
        <trans-unit id="d5d69a3ec3326224cb4550ade7aa539c5fb45f01" translate="yes" xml:space="preserve">
          <source>*prop_invlist()*</source>
          <target state="translated">*prop_invlist()*</target>
        </trans-unit>
        <trans-unit id="234f2ef007831363f45ef51c92f38d945d0737d9" translate="yes" xml:space="preserve">
          <source>*prop_invmap()*</source>
          <target state="translated">*prop_invmap()*</target>
        </trans-unit>
        <trans-unit id="df3580135f73b64d1d0f62af129b6dd0b45e63bb" translate="yes" xml:space="preserve">
          <source>*prop_value_aliases()*</source>
          <target state="translated">*prop_value_aliases()*</target>
        </trans-unit>
        <trans-unit id="c188181d7f65501ad8b99f693c9e5ec20c1820a3" translate="yes" xml:space="preserve">
          <source>*prop_values()*</source>
          <target state="translated">*prop_values()*</target>
        </trans-unit>
        <trans-unit id="3f4b3903dff14b7e8a38a7f6ff8d3b0fa7159477" translate="yes" xml:space="preserve">
          <source>*result</source>
          <target state="translated">*result</target>
        </trans-unit>
        <trans-unit id="e290a8472581248e50ff3784a40db196f11140bd" translate="yes" xml:space="preserve">
          <source>*roff</source>
          <target state="translated">*roff</target>
        </trans-unit>
        <trans-unit id="ac8814bb7facb31b6ba9ea89e4e2f1de11aa27af" translate="yes" xml:space="preserve">
          <source>*search_invlist()*</source>
          <target state="translated">*search_invlist()*</target>
        </trans-unit>
        <trans-unit id="f3dfb0ed0691863c50f58061da07cc12a0958750" translate="yes" xml:space="preserve">
          <source>*select()*</source>
          <target state="translated">*select()*</target>
        </trans-unit>
        <trans-unit id="adf407e8d4bdf881ccd7881148dfd072c3a368aa" translate="yes" xml:space="preserve">
          <source>*sob*</source>
          <target state="translated">*sob*</target>
        </trans-unit>
        <trans-unit id="ae2a6aae4f89e2c4aba8b451b3f1c9a851c4e28e" translate="yes" xml:space="preserve">
          <source>*textblock()*</source>
          <target state="translated">*textblock()*</target>
        </trans-unit>
        <trans-unit id="35292c70accf6e1bc4a136d07d88e046e56f7fe0" translate="yes" xml:space="preserve">
          <source>*use Filter::Util::Call*</source>
          <target state="translated">*使用Filter :: Util :: Call *</target>
        </trans-unit>
        <trans-unit id="90337027d7a839db57d3cb410b0b9d7721ba0b7c" translate="yes" xml:space="preserve">
          <source>*verbatim()*</source>
          <target state="translated">*verbatim()*</target>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="b84da6d40abc1f06bf25fb9e2240531ded3dac3a" translate="yes" xml:space="preserve">
          <source>++</source>
          <target state="translated">++</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="36bf9f1f4a651e20a84db17e6e502dde5df6f77d" translate="yes" xml:space="preserve">
          <source>, &quot;&lt;code&gt;ls *.txt&lt;/code&gt;&quot; or &quot;&lt;code&gt;dir *.*&lt;/code&gt;&quot;. In Perl, the patterns described by regular expressions are used not only to search strings, but to also extract desired parts of strings, and to do search and replace operations.</source>
          <target state="translated">，&amp;ldquo; &lt;code&gt;ls *.txt&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;dir *.*&lt;/code&gt; &amp;rdquo;。在Perl中，用正则表达式描述的模式不仅用于搜索字符串，而且还用于提取字符串的所需部分，以及进行搜索和替换操作。</target>
        </trans-unit>
        <trans-unit id="e6e0221340c67da9c25f33128b5db67e3221f333" translate="yes" xml:space="preserve">
          <source>, &quot;A + COMBINING RING&quot; is a grapheme cluster with base character &quot;A&quot; and combining character &quot;COMBINING RING, which translates in Danish to &quot;A&quot; with the circle atop it, as in the word &amp;Aring;ngstrom.</source>
          <target state="translated">，&amp;ldquo; A + COMBINING RING&amp;rdquo;是一个字素簇，具有基本字符&amp;ldquo; A&amp;rdquo;和组合字符&amp;ldquo; COMBINING RING&amp;rdquo;，该词素丹麦文翻译成&amp;ldquo; A&amp;rdquo;，并带有一个圆圈，如单词&amp;Aring;ngstrom。</target>
        </trans-unit>
        <trans-unit id="9834fcb181aba28c7b6e23e1a30b0012fd3c7711" translate="yes" xml:space="preserve">
          <source>, &quot;Creating a Perl Debugger&quot;, &lt;a href=&quot;http://www.ddj.com/184404522&quot;&gt;http://www.ddj.com/184404522&lt;/a&gt; , and &quot;Profiling in Perl&quot; &lt;a href=&quot;http://www.ddj.com/184404580&quot;&gt;http://www.ddj.com/184404580&lt;/a&gt; .</source>
          <target state="translated">，&amp;ldquo;创建Perl调试器&amp;rdquo;，&lt;a href=&quot;http://www.ddj.com/184404522&quot;&gt;http:&lt;/a&gt; //www.ddj.com/184404522和&amp;ldquo;在Perl中进行配置&amp;rdquo; &lt;a href=&quot;http://www.ddj.com/184404580&quot;&gt;http://www.ddj.com/184404580&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b632e1d6f728f496e56a5503ca92f66ab5bef88" translate="yes" xml:space="preserve">
          <source>, &quot;the &lt;code&gt;/x&lt;/code&gt; modifier&quot;, even though the delimiter in question might not really be a slash. The modifiers &lt;code&gt;/imnsxadlup&lt;/code&gt; may also be embedded within the regular expression itself using the &lt;code&gt;(?...)&lt;/code&gt; construct, see &lt;a href=&quot;#Extended-Patterns&quot;&gt;&quot;Extended Patterns&quot;&lt;/a&gt; below.</source>
          <target state="translated">，&amp;ldquo; &lt;code&gt;/x&lt;/code&gt; 修饰符&amp;rdquo;，即使所讨论的分隔符可能不是真正的斜杠。修饰符 &lt;code&gt;/imnsxadlup&lt;/code&gt; 也可以使用 &lt;code&gt;(?...)&lt;/code&gt; 构造嵌入在正则表达式本身中，请参见下面的&lt;a href=&quot;#Extended-Patterns&quot;&gt;&amp;ldquo;扩展模式&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ee9b85d69a1a45808d43e30360a8f9162ce4c12" translate="yes" xml:space="preserve">
          <source>, (abbreviated NFC), and the sequence &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; followed by &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; represents the same character in</source>
          <target state="translated">，（缩写为NFC）和序列 &lt;code&gt;LATIN CAPITAL LETTER A&lt;/code&gt; 后跟 &lt;code&gt;COMBINING ACUTE ACCENT&lt;/code&gt; 表示中的相同字符</target>
        </trans-unit>
        <trans-unit id="730ddc40c82a93777903d7aac75c47f7ae79794b" translate="yes" xml:space="preserve">
          <source>, (places where the code seems to run slowly), change the code with the intention of making it run faster. Using version control software, like &lt;code&gt;subversion&lt;/code&gt; , will ensure no changes are irreversible. It's too easy to fiddle here and fiddle there - don't change too much at any one time or you might not discover which piece of code &lt;b&gt;really&lt;/b&gt; was the slow bit.</source>
          <target state="translated">，（代码运行缓慢的地方），请更改代码以使其运行更快。使用版本控制软件（例如 &lt;code&gt;subversion&lt;/code&gt; ）将确保所有更改都是不可逆的。在这里随意摆弄太容易了-一次不要更改太多，否则您可能不会发现哪一段代码&lt;b&gt;确实&lt;/b&gt;是最慢的。</target>
        </trans-unit>
        <trans-unit id="ee955b751cf3f782cae6274befc7336608afaaf6" translate="yes" xml:space="preserve">
          <source>, (places where the code seems to run slowly), change the code with the intention of making it run faster. Using version control software, like &lt;code&gt;subversion&lt;/code&gt;, will ensure no changes are irreversible. It's too easy to fiddle here and fiddle there - don't change too much at any one time or you might not discover which piece of code &lt;b&gt;really&lt;/b&gt; was the slow bit.</source>
          <target state="translated">，（代码运行缓慢的地方），请更改代码以使其运行得更快。使用版本控制软件（例如 &lt;code&gt;subversion&lt;/code&gt; ）将确保所有更改都是不可逆的。在这里随意摆弄太容易了-一次不要更改太多，否则您可能不会发现哪一段代码&lt;b&gt;确实&lt;/b&gt;是最慢的。</target>
        </trans-unit>
        <trans-unit id="256dae5fe812dd0a653073c3c142a5d806f220a4" translate="yes" xml:space="preserve">
          <source>, ...</source>
          <target state="translated">, ...</target>
        </trans-unit>
        <trans-unit id="b189223f9e086284fb9e5a2d4ce238755de8f49e" translate="yes" xml:space="preserve">
          <source>, ...parameters...) and there's no</source>
          <target state="translated">，...参数...），没有</target>
        </trans-unit>
        <trans-unit id="7d9c9fe99988b3556a05480d92acc265eff93ca8" translate="yes" xml:space="preserve">
          <source>, ...parameters...), and there's no entry</source>
          <target state="translated">，...参数...），并且没有条目</target>
        </trans-unit>
        <trans-unit id="91498e567e65fc55ee351426beca20dc70eece67" translate="yes" xml:space="preserve">
          <source>, ...parameters...), which should return a string that is generally meant for be used for &quot;output&quot; to the user -- regardless of whether this actually means printing to STDOUT, writing to a file, or putting into a GUI widget.</source>
          <target state="translated">，... parameters ...），该参数应返回通常用于&amp;ldquo;输出&amp;rdquo;给用户的字符串-不管这实际上是打印到STDOUT，写入文件还是放入GUI小部件。</target>
        </trans-unit>
        <trans-unit id="68cb9c38401d32e374d45576d1fe16f98edccd5c" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;handle&quot;&gt;IO::Handle&lt;/a&gt;, &lt;a href=&quot;select&quot;&gt;IO::Select&lt;/a&gt;</source>
          <target state="translated">，&lt;a href=&quot;handle&quot;&gt;IO :: Handle&lt;/a&gt;，&lt;a href=&quot;select&quot;&gt;IO :: Select&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f38c4631f06af453e92ba616992751a1a1e31124" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://lexington.pm.org/meetings/022001.html&quot;&gt;http://lexington.pm.org/meetings/022001.html&lt;/a&gt;</source>
          <target state="translated">，&lt;a href=&quot;http://lexington.pm.org/meetings/022001.html&quot;&gt;http：//lexington.pm.org/meetings/022001.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="007315ce711051c2a3299693a5a40842913289dd" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3164.html&quot;&gt;http://www.faqs.org/rfcs/rfc3164.html&lt;/a&gt; -- Please note that this is an informational RFC, and therefore does not specify a standard of any kind.</source>
          <target state="translated">，&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3164.html&quot;&gt;http://www.faqs.org/rfcs/rfc3164.html&lt;/a&gt;－请注意，这是参考RFC，因此未指定任何标准。</target>
        </trans-unit>
        <trans-unit id="d3b3dad532b1f051eeb3fba0becc6bea982f5b86" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3195.html&quot;&gt;http://www.faqs.org/rfcs/rfc3195.html&lt;/a&gt;</source>
          <target state="translated">，&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3195.html&quot;&gt;http：//www.faqs.org/rfcs/rfc3195.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35d9e0f29d4fed3c7ae0a33dd19ec98ac2183348" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&quot;&gt;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&lt;/a&gt; .</source>
          <target state="translated">，&lt;a href=&quot;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&quot;&gt;http://www.stonehenge.com/merlyn/LinuxMag/col75.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b47d0918c2a38bd4e2af6702ab10cf50ebd2add8" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;http://www.stonehenge.com/merlyn/UnixReview/col49.html&quot;&gt;http://www.stonehenge.com/merlyn/UnixReview/col49.html&lt;/a&gt; , and &quot;Profiling in Template Toolkit via Overriding&quot; for</source>
          <target state="translated">，&lt;a href=&quot;http://www.stonehenge.com/merlyn/UnixReview/col49.html&quot;&gt;http://www.stonehenge.com/merlyn/UnixReview/col49.html&lt;/a&gt;和&amp;ldquo;通过覆盖在模板工具包中进行分析&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="77f493fddd2000dd703272507a4b40faa84d4ba6" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt;, &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;, &lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt;, &lt;a href=&quot;perlfilter&quot;&gt;perlfilter&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">，&lt;a href=&quot;perlapio&quot;&gt;perlapio&lt;/a&gt;，&lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;，&lt;a href=&quot;perlclib&quot;&gt;perlclib&lt;/a&gt;，&lt;a href=&quot;perlfilter&quot;&gt;perlfilter&lt;/a&gt;，&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;，&lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt;，&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;，&lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;和&lt;a href=&quot;warnings&quot;&gt;警告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c492919f48867530188fb7d22191a67fbb7c3fa3" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;</source>
          <target state="translated">，&lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e96b82193d3adc8ae90d1b6a1d39c967eceb5aec" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;spec&quot;&gt;File::Spec&lt;/a&gt;</source>
          <target state="translated">，&lt;a href=&quot;spec&quot;&gt;文件：：规范&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1514b4aa12fe2361a1f8dc9777ce0c9c88e9219d" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--center&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--center&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="ec1ec166008e24f1d9c39660e2cb5af534fac4f6" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--date&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--date&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="42f4918fdf47fcb3bf2298cfaf6726020d123a5d" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--indent=&lt;/b&gt;</source>
          <target state="translated">, &lt;b&gt;--indent=&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8e69206560eda4dc9b771e2f2fc6b847f1de44ef" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--left-margin&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--left-margin&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="963a6f7e81b0e00944fb6512ad5545c5fc95976c" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--margin&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--margin&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="3c4d80bbad022d613c85d46b46034b627c202d72" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--name&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--name&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="6a39ce425c6265d1b63b042cb43c0fc901696044" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--quotes&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="8ad6a104b7bbcf1d20b0bdb3099f6378eac172ee" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--release&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--release&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="7a8e17440a6fd521fa5803c11d3f91fcf6d5947c" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">, &lt;b&gt;--section&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="871bde3f172b60a4dd3ded3ea41d670678f0dc12" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;-&lt;/b&gt;</source>
          <target state="translated">, &lt;b&gt;-&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="48c993c3ad6fdcd73107b423983292a0b10d7d43" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;AutoLoader&lt;/b&gt; will look for perl subroutines &lt;b&gt;POSIX&lt;/b&gt; in</source>
          <target state="translated">，&lt;b&gt;AutoLoader&lt;/b&gt;会在中查找perl子例程&lt;b&gt;POSIX&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="38f2da13d7f63c25ad1931eef771da2bdb146cd3" translate="yes" xml:space="preserve">
          <source>, &lt;b&gt;Tgetent&lt;/b&gt; searches the files</source>
          <target state="translated">，&lt;b&gt;Tgetent&lt;/b&gt;搜索文件</target>
        </trans-unit>
        <trans-unit id="899fa84c73aa4f702ca9b0a2dfa0626dc2a663bf" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&quot;/foo\/bar/&quot;&lt;/code&gt;) serves this purpose.</source>
          <target state="translated">， &lt;code&gt;&quot;/foo\/bar/&quot;&lt;/code&gt; ）就是为了这个目的。</target>
        </trans-unit>
        <trans-unit id="1e03ac4e29872e2c267670242061f02f12f57063" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;$self&lt;/code&gt; , is the same reference that was passed to &lt;code&gt;filter_add&lt;/code&gt; blessed into the filter's package. See the example filters later on for details of using &lt;code&gt;$self&lt;/code&gt; .</source>
          <target state="translated">， &lt;code&gt;$self&lt;/code&gt; 是与传递给有过滤器包装的 &lt;code&gt;filter_add&lt;/code&gt; 相同的引用。有关使用 &lt;code&gt;$self&lt;/code&gt; 详细信息，请参见后面的示例过滤器。</target>
        </trans-unit>
        <trans-unit id="0e40de7f354d2d3eddebe80404f446deabf02880" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;$self&lt;/code&gt;, is the same reference that was passed to &lt;code&gt;filter_add&lt;/code&gt; blessed into the filter's package. See the example filters later on for details of using &lt;code&gt;$self&lt;/code&gt;.</source>
          <target state="translated">， &lt;code&gt;$self&lt;/code&gt; 是与传递给有过滤器包装的 &lt;code&gt;filter_add&lt;/code&gt; 相同的引用。有关使用 &lt;code&gt;$self&lt;/code&gt; 详细信息，请参见后面的示例过滤器。</target>
        </trans-unit>
        <trans-unit id="8427e1854cb8f41a7151bfe175750f66c54d8bea" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;%ENV&lt;/code&gt;, &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;tie&lt;/code&gt;) gets copied, value magic doesn't (</source>
          <target state="translated">， &lt;code&gt;%ENV&lt;/code&gt; ， &lt;code&gt;$1&lt;/code&gt; ， &lt;code&gt;tie&lt;/code&gt; ）被复制，值魔术不会（</target>
        </trans-unit>
        <trans-unit id="ae56078784168c372862d15f35078dd7477dd624" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt; ) into one switch (</source>
          <target state="translated">， &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt; ）切换为一个开关（</target>
        </trans-unit>
        <trans-unit id="6b9c9a7b2e7232a0d7ec8201b3b9a47fc17217c2" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt;) into one switch (</source>
          <target state="translated">， &lt;code&gt;&amp;ndash;a &amp;ndash;b &amp;ndash;c&lt;/code&gt; ）切换为一个开关（</target>
        </trans-unit>
        <trans-unit id="2809b44d364e51b37846cda09da4d124638daab2" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;abc&lt;/code&gt; ). Any switch with an additional &lt;b&gt;argument&lt;/b&gt; must be the last switch in a cluster.</source>
          <target state="translated">， &lt;code&gt;&amp;ndash;abc&lt;/code&gt; ）。任何带有附加&lt;b&gt;参数&lt;/b&gt;的开关都必须是集群中的最后一个开关。</target>
        </trans-unit>
        <trans-unit id="55a2da4f7e069e28b422044a34a1371b0b31a095" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;&amp;ndash;abc&lt;/code&gt;). Any switch with an additional &lt;b&gt;argument&lt;/b&gt; must be the last switch in a cluster.</source>
          <target state="translated">， &lt;code&gt;&amp;ndash;abc&lt;/code&gt; ）。任何带有附加&lt;b&gt;参数&lt;/b&gt;的开关都必须是集群中的最后一个开关。</target>
        </trans-unit>
        <trans-unit id="6c7155a3acee3001fa967b3890eeeda3999c4b72" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;(?-i)&lt;/code&gt;. Modifiers can also be combined into a single expression,</source>
          <target state="translated">， &lt;code&gt;(?-i)&lt;/code&gt; 。修饰符也可以组合成单个表达式，</target>
        </trans-unit>
        <trans-unit id="ca162894968f42d426c9ba604ea288c5c07916e2" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;(?s-i)&lt;/code&gt; turns on single line mode and turns off case insensitivity.</source>
          <target state="translated">， &lt;code&gt;(?s-i)&lt;/code&gt; 打开单行模式，并关闭不区分大小写的模式。</target>
        </trans-unit>
        <trans-unit id="0ad542fba4a49b259c0748e429b369dce74c977b" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;Encode::FB_DEFAULT&lt;/code&gt; (== 0) is assumed.</source>
          <target state="translated">，假设为 &lt;code&gt;Encode::FB_DEFAULT&lt;/code&gt; （== 0）。</target>
        </trans-unit>
        <trans-unit id="462879d51e479543994a8d4e84eeab49f5f2f27d" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;PLUS(7)&lt;/code&gt;. The middle lines describe some heuristics and optimizations performed before a match:</source>
          <target state="translated">， &lt;code&gt;PLUS(7)&lt;/code&gt; 。中线描述了比赛前进行的一些试探和优化：</target>
        </trans-unit>
        <trans-unit id="16d7d30fa0d27a63585cee71ee6b5e5bab0abd13" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;[:^digit:]&lt;/code&gt; corresponds to &lt;code&gt;\D&lt;/code&gt; and, under Unicode, &lt;code&gt;\P{IsDigit}&lt;/code&gt;. The Unicode and POSIX character classes can be used just like &lt;code&gt;\d&lt;/code&gt;, with the exception that POSIX character classes can only be used inside of a character class:</source>
          <target state="translated">， &lt;code&gt;[:^digit:]&lt;/code&gt; 对应 &lt;code&gt;\D&lt;/code&gt; ，在Unicode下对应 &lt;code&gt;\P{IsDigit}&lt;/code&gt; 。Unicode和POSIX字符类可以像 &lt;code&gt;\d&lt;/code&gt; 一样使用，但POSIX字符类只能在字符类内部使用：</target>
        </trans-unit>
        <trans-unit id="88dea9f45a2209f980bb3d2c13235b80b772b94e" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;\033&lt;/code&gt;, or hexadecimal escape sequence,</source>
          <target state="translated">， &lt;code&gt;\033&lt;/code&gt; 或十六进制转义序列，</target>
        </trans-unit>
        <trans-unit id="6c837892673073287d136dd02c954759c5482035" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;\x1B&lt;/code&gt; may be a more natural representation for your bytes. Here are some examples of escapes:</source>
          <target state="translated">， &lt;code&gt;\x1B&lt;/code&gt; 可能更自然地表示您的字节。以下是转义符的一些示例：</target>
        </trans-unit>
        <trans-unit id="fe3dc5c2f0d585ebe9c77a5ef081a129a7712e00" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;binmode STDOUT, ':utf8'&lt;/code&gt;. Another way to turn off the warning is to add &lt;code&gt;no warnings 'utf8';&lt;/code&gt; but that is often closer to cheating. In general, you are supposed to explicitly mark the filehandle with an encoding, see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;perlfunc#binmode&quot;&gt;&quot;binmode&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">， &lt;code&gt;binmode STDOUT, ':utf8'&lt;/code&gt; 。关闭警告的另一种方法是不添加 &lt;code&gt;no warnings 'utf8';&lt;/code&gt; 但这通常更接近作弊。通常，应该使用编码明确标记文件句柄，请参阅&lt;a href=&quot;perlfunc#binmode&quot;&gt;perlfunc中的&lt;/a&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;和&amp;ldquo; binmode&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d4b64e63a3c0223fd25236e90f27d457472226a1" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;code-style&lt;/code&gt; , &lt;a href=&quot;perlfaq&quot;&gt;hyperlinks&lt;/a&gt;, and more. Such codes are explained in the &quot;&lt;a href=&quot;#Formatting-Codes&quot;&gt;Formatting Codes&lt;/a&gt;&quot; section, below.</source>
          <target state="translated">， &lt;code&gt;code-style&lt;/code&gt; ，&lt;a href=&quot;perlfaq&quot;&gt;超链接&lt;/a&gt;等。此类代码在下面的&amp;ldquo; &lt;a href=&quot;#Formatting-Codes&quot;&gt;格式代码&lt;/a&gt; &amp;rdquo;部分中进行了说明。</target>
        </trans-unit>
        <trans-unit id="70c100bab44e4cf6cc68ee3c0cb6aa17d6a2a7ac" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;code-style&lt;/code&gt;, &lt;a href=&quot;perlfaq&quot;&gt;hyperlinks&lt;/a&gt;, and more. Such codes are explained in the &quot;&lt;a href=&quot;#Formatting-Codes&quot;&gt;Formatting Codes&lt;/a&gt;&quot; section, below.</source>
          <target state="translated">， &lt;code&gt;code-style&lt;/code&gt; ，&lt;a href=&quot;perlfaq&quot;&gt;超链接&lt;/a&gt;等。此类代码在下面的&amp;ldquo;&lt;a href=&quot;#Formatting-Codes&quot;&gt;格式代码&lt;/a&gt;&amp;rdquo;部分中进行了说明。</target>
        </trans-unit>
        <trans-unit id="70a0b45cf40ff1d2cfe85795b7abbde7954fbe91" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;qr!!&lt;/code&gt;, &lt;code&gt;qr{}&lt;/code&gt; or &lt;code&gt;qr~~&lt;/code&gt;. Apostrophes as delimiters (&lt;code&gt;qr''&lt;/code&gt;) inhibit any interpolation.</source>
          <target state="translated">， &lt;code&gt;qr!!&lt;/code&gt; ， &lt;code&gt;qr{}&lt;/code&gt; 或 &lt;code&gt;qr~~&lt;/code&gt; 。撇号作为定界符（ &lt;code&gt;qr''&lt;/code&gt; ）禁止任何插值。</target>
        </trans-unit>
        <trans-unit id="b697447009b34f13911a7d0d08c9daa31a861e17" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;taint&lt;/code&gt;, &lt;code&gt;pos&lt;/code&gt;).</source>
          <target state="translated">, &lt;code&gt;taint&lt;/code&gt;, &lt;code&gt;pos&lt;/code&gt;).</target>
        </trans-unit>
        <trans-unit id="2357bd7f4335eff8d8daf0fa1da32b05aadee0e0" translate="yes" xml:space="preserve">
          <source>, C</source>
          <target state="translated">， C</target>
        </trans-unit>
        <trans-unit id="4a3b6b54a01d06829186977454076430f1593339" translate="yes" xml:space="preserve">
          <source>, Copyright &amp;copy; 2012 Tom Christiansen &amp;lt;et al.&amp;gt;, 2012-02-13 by O&amp;rsquo;Reilly Media. The code itself is freely redistributable, and you are encouraged to transplant, fold, spindle, and mutilate any of the examples in this manpage however you please for inclusion into your own programs without any encumbrance whatsoever. Acknowledgement via code comment is polite but not required.</source>
          <target state="translated">，版权&amp;copy;2012 Tom Christiansen &amp;lt;et al。&amp;gt;，2012-02-13，作者为O'Reilly Media。该代码本身是可自由重新分发的，并且鼓励您移植，折叠，纺锤和切割本联机帮助页中的任何示例，但是请您将其包含在自己的程序中，而不会产生任何负担。通过代码注释进行的确认是礼貌的，但不是必需的。</target>
        </trans-unit>
        <trans-unit id="283d166baa4da2433ea6b8c5023e0c5383a472d9" translate="yes" xml:space="preserve">
          <source>, Fourth Edition, by Tom Christiansen, brian d foy, Larry Wall, &amp;amp; Jon Orwant. Copyright (c) 2000, 1996, 1991, 2012 O'Reilly Media, Inc. This document may be distributed under the same terms as Perl itself.</source>
          <target state="translated">，第四版，汤姆&amp;middot;克里斯蒂安森（Tom Christiansen），布莱恩&amp;middot;杜伊（Brian d Foy），拉里&amp;middot;沃尔（Larry Wall）和乔恩&amp;middot;奥万特（Jon Orwant）。O'Reilly Media，Inc.版权所有（c）2000、1996、1991、2012。本文档可能以与Perl本身相同的术语分发。</target>
        </trans-unit>
        <trans-unit id="a4710510ddd5139b0d57b1444caca5a0e1dbc934" translate="yes" xml:space="preserve">
          <source>, Fourth Edition. Words or phrases in bold are defined elsewhere in this glossary.</source>
          <target state="translated">，第四版。粗体词或短语在本词汇表的其他地方定义。</target>
        </trans-unit>
        <trans-unit id="eb3f1d4a19fa8c41000422fe5f0f14f333cda54d" translate="yes" xml:space="preserve">
          <source>, I hesitate to make 10 ways to do something&quot;. This is a tricky heuristic to navigate, though--one man's essential addition is another man's pointless cruft.</source>
          <target state="translated">，我会毫不犹豫地提出10种方法来做某事。&amp;rdquo;尽管这是一种棘手的探索，但一个人的基本要求就是另一个人毫无意义的努力。</target>
        </trans-unit>
        <trans-unit id="ad45c1c8eec7555ccd92edae836e62ba22314f7b" translate="yes" xml:space="preserve">
          <source>, I used something like this:</source>
          <target state="translated">，我使用了这样的内容：</target>
        </trans-unit>
        <trans-unit id="c65991634f6aa7daad894716fa3515f707c0dcd9" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt; ) is given in years since 1900,</source>
          <target state="translated">，一月是0，而不是1；星期日是0，而不是1；1月1日为0，而不是1。年份（ &lt;code&gt;year&lt;/code&gt; ）以1900年以来的年份为单位，</target>
        </trans-unit>
        <trans-unit id="278251f0cd32cd452e601bfc7f4ba837feb500cf" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt; ) is given in years since 1900;</source>
          <target state="translated">，一月是0，而不是1；星期日是0，而不是1；1月1日为0，而不是1。年份（ &lt;code&gt;year&lt;/code&gt; ）以1900年以来的年份为单位；</target>
        </trans-unit>
        <trans-unit id="afb22a315d26614c38a5484f1c55cdc3c2b33492" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt;) is given in years since 1900,</source>
          <target state="translated">，一月是0，而不是1；星期日是0，而不是1；1月1日为0，而不是1。年份（ &lt;code&gt;year&lt;/code&gt; ）以1900年以来的年份为单位，</target>
        </trans-unit>
        <trans-unit id="6d424da4b1335ce7612f2b3dc77b65ea06020e9c" translate="yes" xml:space="preserve">
          <source>, January is 0, not 1; Sunday is 0, not 1; January 1st is 0, not 1. The year (&lt;code&gt;year&lt;/code&gt;) is given in years since 1900;</source>
          <target state="translated">，一月是0，而不是1；星期日是0，而不是1；1月1日为0，而不是1。年份（ &lt;code&gt;year&lt;/code&gt; ）以1900年以来的年份为单位；</target>
        </trans-unit>
        <trans-unit id="dd182ebc9d81517e21729c826fb7210f389d7052" translate="yes" xml:space="preserve">
          <source>, L</source>
          <target state="translated">，L</target>
        </trans-unit>
        <trans-unit id="7fbf5c6d0f24b18219afd1efb585538657616790" translate="yes" xml:space="preserve">
          <source>, L&amp;lt;:spec&amp;gt;, L&amp;lt;:path&amp;gt;</source>
          <target state="translated">，L &amp;lt;：spec&amp;gt;，L &amp;lt;：path&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cff6989687fa00c2222ce15a90a800a548dbd994" translate="yes" xml:space="preserve">
          <source>, Perl uses the same algorithm as</source>
          <target state="translated">，Perl使用与以下相同的算法</target>
        </trans-unit>
        <trans-unit id="df8f77da47481a5590b158d0835c14c3d411493e" translate="yes" xml:space="preserve">
          <source>, Recipe 13.12).</source>
          <target state="translated">，配方13.12）。</target>
        </trans-unit>
        <trans-unit id="6a45be8c0a733008fda1873b6942b65ae06a110b" translate="yes" xml:space="preserve">
          <source>, Tim Kientzle (tkientzle@ddj.com), Dr. Dobb's Journal, Issue 295, January 1999, pp 34-41</source>
          <target state="translated">，Tim Kientzle（tkientzle@ddj.com），《多布博士杂志》，第295期，1999年1月，第34-41页</target>
        </trans-unit>
        <trans-unit id="2a5671053104bfa65fdb1b845e8f918f200dbaad" translate="yes" xml:space="preserve">
          <source>, Volume 2, Section 3.4.2, by Donald E. Knuth.</source>
          <target state="translated">，第2卷，第3.4.2节，作者：Donald E. Knuth。</target>
        </trans-unit>
        <trans-unit id="633875e12973ea9004215c69c80143c016eb22c8" translate="yes" xml:space="preserve">
          <source>, a German magazine dedicated to Perl, at ( &lt;a href=&quot;http://www.foo-magazin.de&quot;&gt;http://www.foo-magazin.de&lt;/a&gt; ). The</source>
          <target state="translated">，专门针对Perl的德国杂志，&lt;a href=&quot;http://www.foo-magazin.de&quot;&gt;网址&lt;/a&gt;为（http://www.foo-magazin.de）。的</target>
        </trans-unit>
        <trans-unit id="14297948b11112ed3c840f341ffecd330757f94c" translate="yes" xml:space="preserve">
          <source>, a Perl script which uses the &lt;code&gt;MakeMaker&lt;/code&gt; library modules supplied with Perl to generate a</source>
          <target state="translated">，一个Perl脚本，它使用Perl随附的 &lt;code&gt;MakeMaker&lt;/code&gt; 库模块来生成一个</target>
        </trans-unit>
        <trans-unit id="855e80b07db61e1b1fac17edd36f618a095e2b73" translate="yes" xml:space="preserve">
          <source>, a collator via &lt;code&gt;Unicode::Collate-&amp;gt;new( )&lt;/code&gt; should be used; for</source>
          <target state="translated">，应使用通过 &lt;code&gt;Unicode::Collate-&amp;gt;new( )&lt;/code&gt; 进行的整理；对于</target>
        </trans-unit>
        <trans-unit id="337354a63807d72c18305c9618bef7795ca2d6b6" translate="yes" xml:space="preserve">
          <source>, a collator via &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt; .</source>
          <target state="translated">，是通过 &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt; 进行的整理。</target>
        </trans-unit>
        <trans-unit id="7a2bbbfba58b32349454cb8b6cc55924756c4724" translate="yes" xml:space="preserve">
          <source>, a collator via &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt;.</source>
          <target state="translated">，是通过 &lt;code&gt;Unicode::Collate-&amp;gt;new(variable =&amp;gt; &quot;non-ignorable&quot;, level =&amp;gt; 3)&lt;/code&gt; 进行的整理。</target>
        </trans-unit>
        <trans-unit id="181354d61db1393a6d43dac9c961eb59f80b38ac" translate="yes" xml:space="preserve">
          <source>, a crude but sufficient utility to check the integrity of a UCM file. Check under the Encode/bin directory for this.</source>
          <target state="translated">，这是一种粗略但实用的工具，可以用来检查UCM文件的完整性。检查在Encode / bin目录下。</target>
        </trans-unit>
        <trans-unit id="bb64aa0b1dd472e37df99d4df5d224c083cbbbef" translate="yes" xml:space="preserve">
          <source>, a debug aid which allowed callers to identify themselves. This aid has been superseded by a new build option, &lt;code&gt;PERL_MEM_LOG&lt;/code&gt; (see &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;&quot;PERL_MEM_LOG&quot; in perlhacktips&lt;/a&gt;). The older API is still there for use in XS modules supporting older perls.</source>
          <target state="translated">，这是一种调试辅助工具，可让调用者识别自己的身份。此帮助已被新的构建选项 &lt;code&gt;PERL_MEM_LOG&lt;/code&gt; 取代（请参阅&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktips中的&amp;ldquo; PERL_MEM_LOG&amp;rdquo;&lt;/a&gt;）。较旧的API仍然可以在支持较旧的perl的XS模块中使用。</target>
        </trans-unit>
        <trans-unit id="cc2464c5d3dd253a99582f8c86235ec797d15976" translate="yes" xml:space="preserve">
          <source>, a debug aid which allowed callers to identify themselves. This aid has been superseded by a new build option, PERL_MEM_LOG (see &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;&quot;PERL_MEM_LOG&quot; in perlhacktips&lt;/a&gt;). The older API is still there for use in XS modules supporting older perls.</source>
          <target state="translated">，这是一种调试辅助工具，可让调用者识别自己的身份。此帮助已被新的构建选项PERL_MEM_LOG取代（请参阅&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktips中的&amp;ldquo; PERL_MEM_LOG&amp;rdquo;&lt;/a&gt;）。较旧的API仍然可以在支持较旧的perl的XS模块中使用。</target>
        </trans-unit>
        <trans-unit id="ee470b6f82053958faf72f7660a0d296d09184d4" translate="yes" xml:space="preserve">
          <source>, a debug aid which allowed callers to identify themselves. This aid has been superseded by a new build option, PERL_MEM_LOG (see &lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;PERL_MEM_LOG in perlhacktips&lt;/a&gt;). The older API is still there for use in XS modules supporting older perls.</source>
          <target state="translated">，这是一种调试辅助工具，可让调用者识别自己的身份。此帮助已被新的构建选项PERL_MEM_LOG取代（请参阅&lt;a href=&quot;perlhacktips#PERL_MEM_LOG&quot;&gt;perlhacktips中的PERL_MEM_LOG&lt;/a&gt;）。较旧的API仍然可以在支持较旧的perl的XS模块中使用。</target>
        </trans-unit>
        <trans-unit id="1c0ccb86f1f831d7dbb113204354539bcbbbe342" translate="yes" xml:space="preserve">
          <source>, a file in the YAML Tiny format (for which, see &lt;a href=&quot;YAML::Tiny&quot;&gt;YAML::Tiny&lt;/a&gt;). Tools that consume distribution metadata from disk should be capable of loading</source>
          <target state="translated">，是YAML Tiny格式的文件（有关此文件，请参见&lt;a href=&quot;YAML::Tiny&quot;&gt;YAML :: Tiny&lt;/a&gt;）。使用磁盘中的分发元数据的工具应该能够加载</target>
        </trans-unit>
        <trans-unit id="6eab92f00d041b0bb78d6d32d7c43effb305a18c" translate="yes" xml:space="preserve">
          <source>, a fixed number of characters long. Thus &lt;code&gt;(?&amp;lt;=(ab|bc))&lt;/code&gt; is fine, but &lt;code&gt;(?&amp;lt;=(ab)*)&lt;/code&gt; prior to 5.30 is not.</source>
          <target state="translated">，固定长度的字符。因此 &lt;code&gt;(?&amp;lt;=(ab|bc))&lt;/code&gt; 很好，但5.30之前的 &lt;code&gt;(?&amp;lt;=(ab)*)&lt;/code&gt; 则不行。</target>
        </trans-unit>
        <trans-unit id="be95971fca9604306918e6af9caf54dadcd9baea" translate="yes" xml:space="preserve">
          <source>, a non-UTF-8 one), a multi-byte character was encountered. Perl considers this character to be the specified Unicode code point. Combining non-UTF-8 locales and Unicode is dangerous. Almost certainly some characters will have two different representations. For example, in the ISO 8859-7 (Greek) locale, the code point 0xC3 represents a Capital Gamma. But so also does 0x393. This will make string comparisons unreliable.</source>
          <target state="translated">，非UTF-8字符），遇到了多字节字符。Perl将此字符视为指定的Unicode代码点。将非UTF-8语言环境和Unicode结合使用是危险的。几乎可以肯定，某些​​字符将具有两种不同的表示形式。例如，在ISO 8859-7（希腊语）语言环境中，代码点0xC3表示大写Gamma。但是0x393也是如此。这将使字符串比较不可靠。</target>
        </trans-unit>
        <trans-unit id="4a8a9cd0090598c42711026e8b2bedbe13afa859" translate="yes" xml:space="preserve">
          <source>, a scalar variable containing a filehandle. You can use it the same way you would a normal filehandle. For example, you can read one line from it this way:</source>
          <target state="translated">，一个包含文件句柄的标量变量。您可以像使用普通文件句柄一样使用它。例如，您可以通过这种方式从其中读取一行：</target>
        </trans-unit>
        <trans-unit id="87346f4ea924d98273903e7b08eb5bb50fb07524" translate="yes" xml:space="preserve">
          <source>, a standard for representing the alphabets from virtually all of the world's written languages, and a host of symbols. Perl's text strings are Unicode strings, so they can contain characters with a value (codepoint or character number) higher than 255.</source>
          <target state="translated">，一种用于代表几乎世界上所有书面语言中的字母的标准，以及许多符号。Perl的文本字符串是Unicode字符串，因此它们可以包含值（代码点或字符号）大于255的字符。</target>
        </trans-unit>
        <trans-unit id="a9ff749a1a77a1bd6de5d5980b0e406d37de2a87" translate="yes" xml:space="preserve">
          <source>, a utility to extract named sections from documents written in POD. For instance, while utilities have &quot;USAGE&quot; sections, Perl modules usually have &quot;SYNOPSIS&quot; sections: &lt;code&gt;podselect -s &quot;SYNOPSIS&quot; ...&lt;/code&gt; will extract this section for a given file.</source>
          <target state="translated">，从POD编写的文档中提取命名节的实用程序。例如，虽然实用程序具有&amp;ldquo; USAGE&amp;rdquo;部分，但Perl模块通常具有&amp;ldquo; SYNOPSIS&amp;rdquo;部分： &lt;code&gt;podselect -s &quot;SYNOPSIS&quot; ...&lt;/code&gt; 将为给定文件提取此部分。</target>
        </trans-unit>
        <trans-unit id="db014a48cc1ae20706ba0b5682336d456105e57c" translate="yes" xml:space="preserve">
          <source>, above, below, to one side or the other,</source>
          <target state="translated">，上方，下方，一侧或另一侧，</target>
        </trans-unit>
        <trans-unit id="5bf0fa78a7fe771f1c10ae24e95162b1b6bb2a45" translate="yes" xml:space="preserve">
          <source>, albeit fairly useless ones. All they does is filter the source stream without modifying it at all.</source>
          <target state="translated">，虽然相当没用。他们所做的只是过滤源流而根本不修改它。</target>
        </trans-unit>
        <trans-unit id="5362fe8d34331626858b75f7fc5b14ff4d9fc4ab" translate="yes" xml:space="preserve">
          <source>, all IN UPPER CASE. Some control-type code points do not have names. This field will be empty for &lt;code&gt;Surrogate&lt;/code&gt; and &lt;code&gt;Private Use&lt;/code&gt; code points, and for the others without a name, it will contain a description enclosed in angle brackets, like &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">，全部大写。某些控件类型的代码点没有名称。对于&amp;ldquo; &lt;code&gt;Surrogate&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Private Use&lt;/code&gt; 代码点，此字段为空；对于其他没有名称的字段，该字段将包含在尖括号中的说明，例如 &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8465d055b30b74c6e7423bbd7027a3bffaac3034" translate="yes" xml:space="preserve">
          <source>, all IN UPPER CASE. Some control-type code points do not have names. This field will be empty for &lt;code&gt;Surrogate&lt;/code&gt; and &lt;code&gt;Private Use&lt;/code&gt; code points, and for the others without a name, it will contain a description enclosed in angle brackets, like &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">，全部大写。某些控件类型的代码点没有名称。对于&amp;ldquo; &lt;code&gt;Surrogate&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Private Use&lt;/code&gt; 代码点，此字段将为空；对于其他没有名称的字段，此字段将包含在尖括号中的说明，例如 &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f664646812299a02b0171f588d3e3b25b20c386d" translate="yes" xml:space="preserve">
          <source>, all but the first posthumously assembled by CJRT. But</source>
          <target state="translated">，除了由CJRT追捕的第一批人之外。但</target>
        </trans-unit>
        <trans-unit id="bc5ed6d6260771787075622eea22b930d5fe4a65" translate="yes" xml:space="preserve">
          <source>, along with the header files</source>
          <target state="translated">，以及头文件</target>
        </trans-unit>
        <trans-unit id="1c56ef602b07cce67c23c54f38c6850a343a4ce2" translate="yes" xml:space="preserve">
          <source>, although you're better off reading the original YACC input in</source>
          <target state="translated">，尽管最好阅读以下内容的原始YACC输入：</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">和</target>
        </trans-unit>
        <trans-unit id="2d4ff8a41a5140058b5f07d5a7ff6c62d7dc6779" translate="yes" xml:space="preserve">
          <source>, and &lt;b&gt;pod2usage()&lt;/b&gt; adheres to this philosophy. If you are interested in seeing a number of different ways to invoke &lt;b&gt;pod2usage&lt;/b&gt; (although by no means exhaustive), please refer to &lt;a href=&quot;#EXAMPLES&quot;&gt;&quot;EXAMPLES&quot;&lt;/a&gt;.</source>
          <target state="translated">，并且&lt;b&gt;pod2usage（）&lt;/b&gt;遵循这一理念。如果您希望看到多种不同的调用&lt;b&gt;pod2usage的方法&lt;/b&gt;（尽管绝不是穷举），请参阅&lt;a href=&quot;#EXAMPLES&quot;&gt;&amp;ldquo; EXAMPLES&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0010f4c714dfcbbc2cef143cc9657ab05ffac473" translate="yes" xml:space="preserve">
          <source>, and &lt;b&gt;pod2usage()&lt;/b&gt; adheres to this philosophy. If you are interested in seeing a number of different ways to invoke &lt;b&gt;pod2usage&lt;/b&gt; (although by no means exhaustive), please refer to &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt;.</source>
          <target state="translated">，并且&lt;b&gt;pod2usage（）&lt;/b&gt;遵循这一理念。如果您有兴趣看到多种不同的调用&lt;b&gt;pod2usage的方式&lt;/b&gt;（尽管绝不是穷举），请参阅&lt;a href=&quot;#EXAMPLES&quot;&gt;示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dd9e2024ba8a9984c63410d51fe1a587ce82acdf" translate="yes" xml:space="preserve">
          <source>, and &lt;code&gt;S_mro_get_linear_isa_dfs()&lt;/code&gt; in</source>
          <target state="translated">和 &lt;code&gt;S_mro_get_linear_isa_dfs()&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="7965adffe1bd5d2a5ae6fef9ed74cb1e415855b5" translate="yes" xml:space="preserve">
          <source>, and Perl will then dispatch the program to the correct interpreter for them.</source>
          <target state="translated">，然后Perl会将程序分派给正确的解释器。</target>
        </trans-unit>
        <trans-unit id="d17b3bf1e5023500587f0bcfd04e502c3bc08dca" translate="yes" xml:space="preserve">
          <source>, and a type of</source>
          <target state="translated">，以及</target>
        </trans-unit>
        <trans-unit id="11eff2ad6b0924ed9a9167101ce0e3ec0461d9bb" translate="yes" xml:space="preserve">
          <source>, and all standard-fearing programs ought to follow this convention. (This is, of course, a stern backing for one of the Lilliputian parties and may well influence the political development there.) So, if the protocol expects you to send a message by sending the length first, followed by just so many bytes, you could write:</source>
          <target state="translated">，所有敬畏标准的程序都应遵守此约定。（当然，这是对小人国政党之一的严厉支持，很可能会影响那里的政治发展。）因此，如果该协议希望您先发送长度，然后发送那么多字节，则发送消息。你可以这样写：</target>
        </trans-unit>
        <trans-unit id="09f5aea40a8a98f4ed0812b20a5158126d6be5b5" translate="yes" xml:space="preserve">
          <source>, and an SV argument for it is returned in</source>
          <target state="translated">，并在其中返回SV参数</target>
        </trans-unit>
        <trans-unit id="907df61a5a10c19d07f5b25bb871f858cdf3aedb" translate="yes" xml:space="preserve">
          <source>, and an SV argument for it is supplied in</source>
          <target state="translated">，并在其中提供SV参数</target>
        </trans-unit>
        <trans-unit id="07578e4d2c674557fed4e3b460e007cddc507081" translate="yes" xml:space="preserve">
          <source>, and appends that data to the current state. The return value is the updated object itself.</source>
          <target state="translated">，并将该数据附加到当前状态。返回值是更新的对象本身。</target>
        </trans-unit>
        <trans-unit id="47d93ebc28ad85bac43459b74d7c9dbb3a691abc" translate="yes" xml:space="preserve">
          <source>, and arrange for some changes to be automatically undone at the end of it, either explicit, or via a non-local exit (via die()). A</source>
          <target state="translated">，并安排一些更改在结束时自动撤消，无论是显式的还是通过非本地出口（通过die（））。一个</target>
        </trans-unit>
        <trans-unit id="9662074e67662b5481a257ab591d1bcd6cd373a7" translate="yes" xml:space="preserve">
          <source>, and choose &lt;code&gt;Link
object modules&lt;/code&gt; in</source>
          <target state="translated">，并选择 &lt;code&gt;Link object modules&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="110d41533f5d3ce6a781ca76529c953253c32c91" translate="yes" xml:space="preserve">
          <source>, and do not want to hand-edit thousands of your scripts, the long-term solution proposed on p5-p is to have a directive</source>
          <target state="translated">，并且不想手动编辑成千上万个脚本，因此在p5-p上建议的长期解决方案是有一个指令</target>
        </trans-unit>
        <trans-unit id="cc9709da02255267935725dadd4e4f1b5070af04" translate="yes" xml:space="preserve">
          <source>, and even a blessed hash reference uses &quot;HASH&quot; as its</source>
          <target state="translated">，甚至是受祝福的哈希引用也将&amp;ldquo; HASH&amp;rdquo;用作其</target>
        </trans-unit>
        <trans-unit id="5ef9d3e35d5e919080f798270609eb087c92e72c" translate="yes" xml:space="preserve">
          <source>, and executables go in</source>
          <target state="translated">，可执行文件进入</target>
        </trans-unit>
        <trans-unit id="6d9c13d9981e85ee193ee4cdff8cf22c12e96f94" translate="yes" xml:space="preserve">
          <source>, and for a detailed look at the semantics of regular expressions. In particular, all modifiers except the largely obsolete &lt;code&gt;/o&lt;/code&gt; are further explained in &lt;a href=&quot;perlre#Modifiers&quot;&gt;&quot;Modifiers&quot; in perlre&lt;/a&gt;. &lt;code&gt;/o&lt;/code&gt; is described in the next section.</source>
          <target state="translated">，并详细查看正则表达式的语义。特别是，&lt;a href=&quot;perlre#Modifiers&quot;&gt;在perlre的&amp;ldquo;修饰符&amp;rdquo;中&lt;/a&gt;进一步解释了除大部分过时的 &lt;code&gt;/o&lt;/code&gt; 以外的所有修饰符。 &lt;code&gt;/o&lt;/code&gt; 在下一节中描述。</target>
        </trans-unit>
        <trans-unit id="e99a7bbd8a62347c5bce742eeae839d4eb74e152" translate="yes" xml:space="preserve">
          <source>, and for a detailed look at the semantics of regular expressions. In particular, all modifiers except the largely obsolete &lt;code&gt;/o&lt;/code&gt; are further explained in &lt;a href=&quot;perlre#Modifiers&quot;&gt;Modifiers in perlre&lt;/a&gt;. &lt;code&gt;/o&lt;/code&gt; is described in the next section.</source>
          <target state="translated">，并详细查看正则表达式的语义。特别是，除过时的 &lt;code&gt;/o&lt;/code&gt; 外的所有修饰符都将&lt;a href=&quot;perlre#Modifiers&quot;&gt;在perlre的修饰符中&lt;/a&gt;进一步说明。 &lt;code&gt;/o&lt;/code&gt; 在下一节中描述。</target>
        </trans-unit>
        <trans-unit id="fea8f1839cc7e75e58025f40c960d342144ecc35" translate="yes" xml:space="preserve">
          <source>, and have Perl create &lt;code&gt;#define&lt;/code&gt; 's for you, based on the current platform.</source>
          <target state="translated">，并让Perl 根据当前平台为您创建 &lt;code&gt;#define&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f813ba9205cc9645f513c4750afaaff03e0fb7d6" translate="yes" xml:space="preserve">
          <source>, and have Perl create &lt;code&gt;#define&lt;/code&gt;'s for you, based on the current platform.</source>
          <target state="translated">，并让Perl根据当前平台为您创建 &lt;code&gt;#define&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="296963cd9bc200f3f9713e504f93b8fd98a91950" translate="yes" xml:space="preserve">
          <source>, and have a &lt;code&gt;Perl_ck_&lt;/code&gt; prefix. You can find out which check function is used for a particular op type by looking in</source>
          <target state="translated">，并带有 &lt;code&gt;Perl_ck_&lt;/code&gt; 前缀。您可以通过以下方式找出特定操作类型使用的检查功能</target>
        </trans-unit>
        <trans-unit id="13ff4447ae7e1c8dc95b022d007823261ea731b0" translate="yes" xml:space="preserve">
          <source>, and how many gettext items that'd take, but he keeps going... But where $directory_count % 10 is 2, 3, or 4 (except where $directory_count % 100 is 12, 13, or 14), the word for &quot;directories&quot; is forced to be genitive singular -- which means another ending... The room begins to spin around you, slowly at first... But with</source>
          <target state="translated">，以及要使用多少个gettext项，但他继续前进...但是，在$ directory_count％10为2、3或4的情况下（除非$ directory_count％100为12、13或14的情况） &amp;ldquo;目录&amp;rdquo;被强制为格异的单数-这意味着另一个结局...房间开始围绕您旋转，开始时慢慢地...但是</target>
        </trans-unit>
        <trans-unit id="900068e92f1192efacbc29ee3e1d53428f88cdd9" translate="yes" xml:space="preserve">
          <source>, and is initialized whenever Perl is invoked. In the &lt;b&gt;dynamic&lt;/b&gt; configuration, the extension's machine code is placed into a separate shareable image, which is mapped by Perl's DynaLoader when the extension is &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;d or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;d in your script. This allows you to maintain the extension as a separate entity, at the cost of keeping track of the additional shareable image. Most extensions can be set up as either static or dynamic.</source>
          <target state="translated">，并在调用Perl时进行初始化。在&lt;b&gt;动态&lt;/b&gt;配置中，扩展程序的机器代码放置在单独的可共享映像中，当扩展程序在脚本中 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; d或 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; d 时，该映像由Perl的DynaLoader映射。这使您可以将扩展名保持为单独的实体，但要以跟踪其他可共享映像为代价。大多数扩展可以设置为静态或动态。</target>
        </trans-unit>
        <trans-unit id="6a765a8ec93ccf021b9f7d34d5f9b4da144bc9fb" translate="yes" xml:space="preserve">
          <source>, and is initialized whenever Perl is invoked. In the &lt;b&gt;dynamic&lt;/b&gt; configuration, the extension's machine code is placed into a separate shareable image, which is mapped by Perl's DynaLoader when the extension is &lt;code&gt;use&lt;/code&gt;d or &lt;code&gt;require&lt;/code&gt;d in your script. This allows you to maintain the extension as a separate entity, at the cost of keeping track of the additional shareable image. Most extensions can be set up as either static or dynamic.</source>
          <target state="translated">，并在调用Perl时进行初始化。在&lt;b&gt;动态&lt;/b&gt;配置中，扩展程序的机器代码放置在单独的可共享映像中，当扩展程序在脚本中 &lt;code&gt;use&lt;/code&gt; d或 &lt;code&gt;require&lt;/code&gt; d时，该映像由Perl的DynaLoader映射。这使您可以将扩展名作为一个单独的实体进行维护，但要以跟踪其他可共享映像为代价。大多数扩展可以设置为静态或动态。</target>
        </trans-unit>
        <trans-unit id="b914301e3b694e04eb4c8f6d66927ba02c63ec35" translate="yes" xml:space="preserve">
          <source>, and is mainly used if</source>
          <target state="translated">，主要用于</target>
        </trans-unit>
        <trans-unit id="5131123bb887b411a05999cb591c474e9daf98b5" translate="yes" xml:space="preserve">
          <source>, and is noted with a horizontal bar above the number, or &lt;code&gt;~z&lt;/code&gt; here.</source>
          <target state="translated">，并且注意到以上的数量的水平杆，或 &lt;code&gt;~z&lt;/code&gt; 这里。</target>
        </trans-unit>
        <trans-unit id="f3befe3ecdb52c3422eb6f93dd78d5aaedf3fabd" translate="yes" xml:space="preserve">
          <source>, and loaded by SWASHNEW, using</source>
          <target state="translated">，并由SWASHNEW使用</target>
        </trans-unit>
        <trans-unit id="1787c9612788394f8950dccec477064ff47cc618" translate="yes" xml:space="preserve">
          <source>, and located either in the wired-in-during-compile locations (usually</source>
          <target state="translated">，并且位于&amp;ldquo;在编译中连线&amp;rdquo;位置（通常</target>
        </trans-unit>
        <trans-unit id="7f31e573a88ff53c20f2ccc0bbc44090c52c6791" translate="yes" xml:space="preserve">
          <source>, and looking at the file</source>
          <target state="translated">，然后查看文件</target>
        </trans-unit>
        <trans-unit id="3f5db2f6d9247a04a8fdbc30fe1efcc305bcdcc0" translate="yes" xml:space="preserve">
          <source>, and many ops have their own optimizing functions.</source>
          <target state="translated">，许多操作都有自己的优化功能。</target>
        </trans-unit>
        <trans-unit id="5edcae719ec7875f046ff91c0210af5ff89c2790" translate="yes" xml:space="preserve">
          <source>, and on Windows it would result in</source>
          <target state="translated">，并且在Windows上会导致</target>
        </trans-unit>
        <trans-unit id="744cb0990a11cbc554e464fe23863d4a00b4136e" translate="yes" xml:space="preserve">
          <source>, and returns one reference to the new &lt;code&gt;refcounted_he&lt;/code&gt; .</source>
          <target state="translated">，并返回对新 &lt;code&gt;refcounted_he&lt;/code&gt; 的引用。</target>
        </trans-unit>
        <trans-unit id="0f2f2fac6d25d7ba621ec4876ee490192080dccc" translate="yes" xml:space="preserve">
          <source>, and returns the modified hash. The returned hash pointer is in general not the same as the hash pointer that was passed in. The input hash is consumed by the function, and the pointer to it must not be subsequently used. Use &lt;a href=&quot;#cophh_copy&quot;&gt;cophh_copy&lt;/a&gt; if you need both hashes.</source>
          <target state="translated">，并返回修改后的哈希。通常，返回的哈希指针与传入的哈希指针不同。输入哈希由函数使用，并且随后不得使用指向它的指针。如果您需要两个哈希，请使用&lt;a href=&quot;#cophh_copy&quot;&gt;cophh_copy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="def96a3fb64ab61d8b47c5c7c69ce7251de754fe" translate="yes" xml:space="preserve">
          <source>, and run</source>
          <target state="translated">，然后运行</target>
        </trans-unit>
        <trans-unit id="910d0b04d2f7ed13b6c81acf52dcf3b2185353b5" translate="yes" xml:space="preserve">
          <source>, and so we make a copy of</source>
          <target state="translated">，因此我们复制了</target>
        </trans-unit>
        <trans-unit id="52cab3ae12ab735a21d73b832e20e1fc668ffa87" translate="yes" xml:space="preserve">
          <source>, and splits it up into chunks separated by lines of equal signs, which are placed in &lt;code&gt;@Fields&lt;/code&gt; .</source>
          <target state="translated">，并将其拆分成由等号行分隔的块，这些块放在 &lt;code&gt;@Fields&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d24caa5ab98ab63cc81699c1451d226660e09521" translate="yes" xml:space="preserve">
          <source>, and splits it up into chunks separated by lines of equal signs, which are placed in &lt;code&gt;@Fields&lt;/code&gt;.</source>
          <target state="translated">，并将其拆分成由等号行分隔的块，这些块放在 &lt;code&gt;@Fields&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="34ecfa8acd326d9d67e3ffa2f086f02a68db8dfb" translate="yes" xml:space="preserve">
          <source>, and start it by typing</source>
          <target state="translated">，然后输入</target>
        </trans-unit>
        <trans-unit id="affc1115f6c03c2dc749890055b60424d0b55360" translate="yes" xml:space="preserve">
          <source>, and that &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlfunc#glob-EXPR&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; cannot and do not attempt to emulate the reverse mapping. Other &lt;code&gt;.&lt;/code&gt;'s in filenames are translated to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">，并且该&lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt; &lt;code&gt;readdir&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;perlfunc#glob-EXPR&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;不能也不会尝试模拟反向映射。其他 &lt;code&gt;.&lt;/code&gt; 文件名中的转换为 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2df22aba65ded74733f8217023fc9a2c713a5813" translate="yes" xml:space="preserve">
          <source>, and that &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; cannot and do not attempt to emulate the reverse mapping. Other &lt;code&gt;.&lt;/code&gt;'s in filenames are translated to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">，并且该 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; 不能也不会尝试模拟反向映射。其他 &lt;code&gt;.&lt;/code&gt; 文件名中的转换为 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3d815d4e6d0e0bf7a5070acb067a435d89afd9c" translate="yes" xml:space="preserve">
          <source>, and the</source>
          <target state="translated">和</target>
        </trans-unit>
        <trans-unit id="c629432bfcaf1e18a5d7be324021795ca597926d" translate="yes" xml:space="preserve">
          <source>, and the &lt;code&gt;&quot;=~&quot;&lt;/code&gt; operator along with the &lt;code&gt;m//&lt;/code&gt; tell Perl to try to match the pattern against the string. Note that the pattern is also a string, but a very special kind of one, as we will see. Patterns are in common use these days; examples are the patterns typed into a search engine to find web pages and the patterns used to list files in a directory,</source>
          <target state="translated">，然后将 &lt;code&gt;&quot;=~&quot;&lt;/code&gt; 运算符与 &lt;code&gt;m//&lt;/code&gt; 告诉Perl尝试将模式与字符串进行匹配。请注意，模式也是字符串，但正如我们将看到的那样，是一种非常特殊的模式。这些天来，模式已经很普遍了。示例包括在搜索引擎中键入的用于查找网页的模式以及用于列出目录中文件的模式，</target>
        </trans-unit>
        <trans-unit id="b3a5f939ce328cd3a253a4971e69a804f33e67d5" translate="yes" xml:space="preserve">
          <source>, and the Gulf of Guinea (think of the missing big chunk of Africa)</source>
          <target state="translated">以及几内亚湾（考虑到非洲缺失的大部分）</target>
        </trans-unit>
        <trans-unit id="49678bf28719f40cbc47bf372671fcd223bd7354" translate="yes" xml:space="preserve">
          <source>, and the error message will include the line and file where the failed request happened.</source>
          <target state="translated">，并且错误消息将包含失败请求发生的行和文件。</target>
        </trans-unit>
        <trans-unit id="c64023a04906dd729256ff3e0c07dcfe556d4b78" translate="yes" xml:space="preserve">
          <source>, and the rest of the things in the lexicon class as things that we know how to</source>
          <target state="translated">，以及词典类中的其他内容，如我们所知道的</target>
        </trans-unit>
        <trans-unit id="6c2c13f1fd18de7a45c45c3b6d611d0fa6d993db" translate="yes" xml:space="preserve">
          <source>, and the second being the</source>
          <target state="translated">，第二个是</target>
        </trans-unit>
        <trans-unit id="10948b5578036f5ad32a0ed831bfc6d104fae454" translate="yes" xml:space="preserve">
          <source>, and the semaphore's count remains unchanged. Otherwise, the semaphore's count is decremented and this method returns</source>
          <target state="translated">，并且信号量的计数保持不变。否则，信号量的计数将减少，此方法将返回</target>
        </trans-unit>
        <trans-unit id="73b36d5071f4b2d6973b107a88cccdf62d2e436d" translate="yes" xml:space="preserve">
          <source>, and the true value in the fourth argument means</source>
          <target state="translated">，第四个参数中的真值表示</target>
        </trans-unit>
        <trans-unit id="759ee7d0b93dff6747c3fbd234956c01b3c8260a" translate="yes" xml:space="preserve">
          <source>, and then the CRTL &lt;code&gt;environ&lt;/code&gt; array. This default order is reversed when the logical name</source>
          <target state="translated">，然后是CRTL &lt;code&gt;environ&lt;/code&gt; 数组。逻辑名称颠倒时，此默认顺序被颠倒</target>
        </trans-unit>
        <trans-unit id="4c771b3606fdd622281d6b0976acb1e8b29c8ab9" translate="yes" xml:space="preserve">
          <source>, and they will therefore all hold whatever was last in @array! It's similar to the problem demonstrated in the following C program:</source>
          <target state="translated">，因此它们将全部保存@array中的最后一个！它类似于以下C程序中演示的问题：</target>
        </trans-unit>
        <trans-unit id="35fc6eddaca9b3360e3738457e9a8b19ab25f937" translate="yes" xml:space="preserve">
          <source>, and using references is the key to managing complicated, structured data in Perl. Unfortunately, there's a lot of funny syntax to learn, and the main manual page can be hard to follow. The manual is quite complete, and sometimes people find that a problem, because it can be hard to tell what is important and what isn't.</source>
          <target state="translated">，并且使用引用是在Perl中管理复杂的结构化数据的关键。不幸的是，有很多有趣的语法要学习，而且手册的主要页面可能很难理解。该手册非常完整，有时人们会发现问题，因为很难分辨出什么是重要的，什么不是重要的。</target>
        </trans-unit>
        <trans-unit id="ea985a0949a3673c272b8e0d49f54e041583c6c4" translate="yes" xml:space="preserve">
          <source>, and will be examined later.</source>
          <target state="translated">，稍后将进行检查。</target>
        </trans-unit>
        <trans-unit id="c060f0c42881559e0dd3ac792535e84bb4d41c37" translate="yes" xml:space="preserve">
          <source>, and will free it.</source>
          <target state="translated">，并将其释放。</target>
        </trans-unit>
        <trans-unit id="88f40c683f759884090876f282199945cd762ea4" translate="yes" xml:space="preserve">
          <source>, and with dynamic CRT DLL. This executable is a VIO application.</source>
          <target state="translated">，并带有动态CRT DLL。该可执行文件是VIO应用程序。</target>
        </trans-unit>
        <trans-unit id="f5ffc67dd22fb19007fd6dce315aac48234ca530" translate="yes" xml:space="preserve">
          <source>, and writes change the value. In both cases the position in</source>
          <target state="translated">，并写入更改值。在两种情况下，</target>
        </trans-unit>
        <trans-unit id="4aa138eb7154eb226a5d7af0b04c19ffd9e3302e" translate="yes" xml:space="preserve">
          <source>, and you want the perl module be named as &lt;code&gt;Ext::Ension&lt;/code&gt; . If you need some preprocessor directives and/or linking with external libraries, see the flags &lt;code&gt;-F&lt;/code&gt; , &lt;code&gt;-L&lt;/code&gt; and &lt;code&gt;-l&lt;/code&gt; in &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;.</source>
          <target state="translated">，并且您希望将perl模块命名为 &lt;code&gt;Ext::Ension&lt;/code&gt; 。如果你需要一些预处理指令和/或外部库进行链接，请参阅标志 &lt;code&gt;-F&lt;/code&gt; ， &lt;code&gt;-L&lt;/code&gt; 和 &lt;code&gt;-l&lt;/code&gt; 的&lt;a href=&quot;#OPTIONS&quot;&gt;选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46f3dd98c315e3415f179fb63083dca1dd67234a" translate="yes" xml:space="preserve">
          <source>, and you want the perl module be named as &lt;code&gt;Ext::Ension&lt;/code&gt;. If you need some preprocessor directives and/or linking with external libraries, see the flags &lt;code&gt;-F&lt;/code&gt;, &lt;code&gt;-L&lt;/code&gt; and &lt;code&gt;-l&lt;/code&gt; in &lt;a href=&quot;#OPTIONS&quot;&gt;&quot;OPTIONS&quot;&lt;/a&gt;.</source>
          <target state="translated">，并且您希望将perl模块命名为 &lt;code&gt;Ext::Ension&lt;/code&gt; 。如果你需要一些预处理指令和/或外部库进行链接，请参阅标志 &lt;code&gt;-F&lt;/code&gt; ， &lt;code&gt;-L&lt;/code&gt; 和 &lt;code&gt;-l&lt;/code&gt; 在&lt;a href=&quot;#OPTIONS&quot;&gt;&amp;ldquo;选项&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3432a5b49b7c2d6b8db782af36b21ccbf7c42da" translate="yes" xml:space="preserve">
          <source>, and you want to install the library in</source>
          <target state="translated">，并且您要在其中安装该库</target>
        </trans-unit>
        <trans-unit id="bfd8b43815ed413fbc5e63c75755527d7e1515b9" translate="yes" xml:space="preserve">
          <source>, any number of times</source>
          <target state="translated">，可以任意次数</target>
        </trans-unit>
        <trans-unit id="b51541dfdf2e1d289578b51a3a7d8f2c29834d37" translate="yes" xml:space="preserve">
          <source>, any number of times, but as few times as possible</source>
          <target state="translated">，可以多次，但次数尽可能少</target>
        </trans-unit>
        <trans-unit id="548642e975a7aad08e0815d9a988055ad22fd668" translate="yes" xml:space="preserve">
          <source>, api_revision is the &lt;code&gt;5&lt;/code&gt; . Prior to 5.5.640, the format was a floating point number, like 5.00563.</source>
          <target state="translated">，api_revision是 &lt;code&gt;5&lt;/code&gt; 。在5.5.640之前，格式为浮点数，例如5.00563。</target>
        </trans-unit>
        <trans-unit id="b591aff32ebed20b5f6017f4c43a986e5c9b6d83" translate="yes" xml:space="preserve">
          <source>, api_revision is the &lt;code&gt;5&lt;/code&gt;. Prior to 5.5.640, the format was a floating point number, like 5.00563.</source>
          <target state="translated">，api_revision是 &lt;code&gt;5&lt;/code&gt; 。在5.5.640之前，格式为浮点数，例如5.00563。</target>
        </trans-unit>
        <trans-unit id="188a87e7240228ac91dcd0c1a6be3953445dc39d" translate="yes" xml:space="preserve">
          <source>, api_subversion is the &lt;code&gt;1&lt;/code&gt; . See api_revision for full details.</source>
          <target state="translated">，api_subversion是 &lt;code&gt;1&lt;/code&gt; 。有关完整详细信息，请参见api_revision。</target>
        </trans-unit>
        <trans-unit id="476bb8ee4de99c6e30b031f6ec683d564a9accd6" translate="yes" xml:space="preserve">
          <source>, api_subversion is the &lt;code&gt;1&lt;/code&gt;. See api_revision for full details.</source>
          <target state="translated">，api_subversion是 &lt;code&gt;1&lt;/code&gt; 。有关完整详细信息，请参见api_revision。</target>
        </trans-unit>
        <trans-unit id="a73dc0145a278edd9b0c16fb3b9861e0ad5e4534" translate="yes" xml:space="preserve">
          <source>, api_version is the &lt;code&gt;6&lt;/code&gt; . See api_revision for full details. As a special case, 5.5.0 is rendered in the old-style as 5.005. (In the 5.005_0x maintenance series, this was the only versioned directory in $sitelib.)</source>
          <target state="translated">，api_version是 &lt;code&gt;6&lt;/code&gt; 。有关完整详细信息，请参见api_revision。作为一种特殊情况，5.5.0以旧样式呈现为5.005。（在5.005_0x维护系列中，这是$ sitelib中唯一的版本目录。）</target>
        </trans-unit>
        <trans-unit id="cc17c10a5bc0146ee1fed71d1a8e153c465a9594" translate="yes" xml:space="preserve">
          <source>, api_version is the &lt;code&gt;6&lt;/code&gt;. See api_revision for full details. As a special case, 5.5.0 is rendered in the old-style as 5.005. (In the 5.005_0x maintenance series, this was the only versioned directory in $sitelib.)</source>
          <target state="translated">，api_version是 &lt;code&gt;6&lt;/code&gt; 。有关完整详细信息，请参见api_revision。作为一种特殊情况，5.5.0以旧样式呈现为5.005。（在5.005_0x维护系列中，这是$ sitelib中唯一的版本目录。）</target>
        </trans-unit>
        <trans-unit id="2889576d565f5867fe9cc4e57258064d9a7e464a" translate="yes" xml:space="preserve">
          <source>, are generally reserved for use in regexp notation. The metacharacters are</source>
          <target state="translated">，通常保留用于正则表达式。元字符是</target>
        </trans-unit>
        <trans-unit id="7a97d37b678b945a449c7d36a99037c11f17aab4" translate="yes" xml:space="preserve">
          <source>, are generated when</source>
          <target state="translated">，是在</target>
        </trans-unit>
        <trans-unit id="1677c7c3fc729a817e4acfa05dba2ce6dccfb2e7" translate="yes" xml:space="preserve">
          <source>, are reserved for use in regexp notation. The metacharacters are</source>
          <target state="translated">保留用于正则表达式。元字符是</target>
        </trans-unit>
        <trans-unit id="5cb6624450c0504e407388bb9dd4d65ed8a21177" translate="yes" xml:space="preserve">
          <source>, are three-dimensional coordinates which define a point in three-dimensional space. They are based on a cylinder surface. The radius of the cylinder is &lt;b&gt;rho&lt;/b&gt;, also known as the</source>
          <target state="translated">，是在三维空间中定义点的三维坐标。它们基于圆柱面。圆柱体的半径是&lt;b&gt;rho&lt;/b&gt;，也称为</target>
        </trans-unit>
        <trans-unit id="08ae511c03da62c55bc28f08c497a5cd99f011a3" translate="yes" xml:space="preserve">
          <source>, are three-dimensional coordinates which define a point in three-dimensional space. They are based on a sphere surface. The radius of the sphere is &lt;b&gt;rho&lt;/b&gt;, also known as the</source>
          <target state="translated">，是在三维空间中定义点的三维坐标。它们基于球面。球体的半径是&lt;b&gt;rho&lt;/b&gt;，也称为</target>
        </trans-unit>
        <trans-unit id="f21c678c3b392bc1e40f88b091f81477c570711c" translate="yes" xml:space="preserve">
          <source>, as at &lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc3066.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc3066.html&lt;/a&gt;</source>
          <target state="translated">，如&lt;a href=&quot;http://sunsite.dk/RFC/rfc/rfc3066.html&quot;&gt;http://sunsite.dk/RFC/rfc/rfc3066.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66ae827ead4750ffe3370a29e9f62b3a997007cd" translate="yes" xml:space="preserve">
          <source>, as described in the next paragraph. Or, if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; is used with script name arguments, then for &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; the name</source>
          <target state="translated">，如下一段所述。或者，如果将 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; 与脚本名称参数一起使用，则对于 &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; ，名称</target>
        </trans-unit>
        <trans-unit id="95e45217604baf8e939999d06ec7d1d5389a8867" translate="yes" xml:space="preserve">
          <source>, as described in the next paragraph. Or, if &lt;code&gt;use charnames&lt;/code&gt; is used with script name arguments, then for &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; the name</source>
          <target state="translated">，如下一段所述。或者，如果将 &lt;code&gt;use charnames&lt;/code&gt; 与脚本名称参数一起使用，则对于 &lt;code&gt;\N{&lt;i&gt;CHARNAME&lt;/i&gt;}&lt;/code&gt; ，名称</target>
        </trans-unit>
        <trans-unit id="8a69d8284e4806cb3167c85fd84978d404a739e1" translate="yes" xml:space="preserve">
          <source>, as if the chain of unbroken output somehow ensures the survival of the program. If speed is in any way an issue, this approach is wrong.</source>
          <target state="translated">，好像连续输出的链以某种方式确保了程序的生存。如果速度是一个问题，那么这种方法是错误的。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
