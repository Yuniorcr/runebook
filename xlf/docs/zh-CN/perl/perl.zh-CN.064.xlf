<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="f98e934e3e323aad56091ee9d3930f3ae8c104b6" translate="yes" xml:space="preserve">
          <source>This facet is used when an event needs to convey errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4863e39f3d637a78fc09d7f47d55d55f765845fe" translate="yes" xml:space="preserve">
          <source>This facet is used when the event needs to give instructions to the Test2 internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdf2c23c1dbe14f4057ac7c561201a88d7beb7e" translate="yes" xml:space="preserve">
          <source>This facet represents messages intended for humans that will help them either understand a result, or diagnose a failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b436b8e968978315244cf53329a37437a8e57692" translate="yes" xml:space="preserve">
          <source>This facet tells the system that a plan has been set. The &lt;code&gt;details&lt;/code&gt; field of this is usually left empty, but when present explains why the plan is what it is, this is most useful if the plan is to skip-all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31882b218e30926e9578b39c27a5a21498d0f3ba" translate="yes" xml:space="preserve">
          <source>This fails because the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; makes STDERR go to where STDOUT was going at the time of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;. The backticks then make STDOUT go to a string, but don't change STDERR (which still goes to the old STDOUT).</source>
          <target state="translated">失败的原因是 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; 让STDERR转至STDOUT原本打算在家的时间 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; 。然后，反引号使STDOUT转到字符串，但不要更改STDERR（仍将其转到旧的STDOUT）。</target>
        </trans-unit>
        <trans-unit id="a78c35501bcdeef5fb990dd2af9d2dc008f91164" translate="yes" xml:space="preserve">
          <source>This fails because the &lt;code&gt;open()&lt;/code&gt; makes STDERR go to where STDOUT was going at the time of the &lt;code&gt;open()&lt;/code&gt;. The backticks then make STDOUT go to a string, but don't change STDERR (which still goes to the old STDOUT).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d57b0a4260007b8d7df0d0cf0818de49b401fd" translate="yes" xml:space="preserve">
          <source>This failure does not seem to cause any problems. With older gcc versions, &quot;parse error&quot; is reported instead of &quot;missing binary operator&quot;.</source>
          <target state="translated">这个故障似乎没有引起任何问题。在旧版本的gcc中,报告的是 &quot;parse error &quot;而不是 &quot;missing binary operator&quot;。</target>
        </trans-unit>
        <trans-unit id="10989604ee7346d15c921f024379a02bc163f4ba" translate="yes" xml:space="preserve">
          <source>This feature (introduced in Perl 5.10) significantly extends the power of Perl's pattern matching. By referring to some other capture group anywhere in the pattern with the construct &lt;code&gt;(?&lt;i&gt;group-ref&lt;/i&gt;)&lt;/code&gt;, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e96692d6e8677f9247e8d718c35a2f5314dd78a" translate="yes" xml:space="preserve">
          <source>This feature (introduced in Perl 5.10) significantly extends the power of Perl's pattern matching. By referring to some other capture group anywhere in the pattern with the construct &lt;code&gt;(?group-ref)&lt;/code&gt;, the</source>
          <target state="translated">此功能（在Perl 5.10中引入）大大扩展了Perl模式匹配的功能。通过使用构造 &lt;code&gt;(?group-ref)&lt;/code&gt; 在模式中的任何地方引用其他捕获组，</target>
        </trans-unit>
        <trans-unit id="39313d94f9ceb03c0da32836d49794a646f76b32" translate="yes" xml:space="preserve">
          <source>This feature allows code like this to work :</source>
          <target state="translated">这个功能可以让这样的代码工作。</target>
        </trans-unit>
        <trans-unit id="3ea6b65f631960dbd85e9aa9e98d367d0a330dd1" translate="yes" xml:space="preserve">
          <source>This feature allows the use of &lt;a href=&quot;perlobj#Indirect-Object-Syntax&quot;&gt;indirect object syntax&lt;/a&gt; for method calls, e.g. &lt;code&gt;new Foo 1, 2;&lt;/code&gt;. It is enabled by default, but can be turned off to disallow indirect object syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d279f2466dab661314717405c1c291df785e033f" translate="yes" xml:space="preserve">
          <source>This feature hasn't been tested with multiple threads, but it will only show the backtrace of the thread doing the backtracing.</source>
          <target state="translated">这个功能还没有经过多线程的测试,但它只会显示做回溯的线程的回溯。</target>
        </trans-unit>
        <trans-unit id="3f31330eeb1eb16a4131ea44941bd450e02ba159" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.16 onwards.</source>
          <target state="translated">这个功能从Perl 5.16开始就有了。</target>
        </trans-unit>
        <trans-unit id="a0eb6c955c276bb211d5f6e97040a35b64f681c9" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.18 onwards.</source>
          <target state="translated">这个功能从Perl 5.18开始就有了。</target>
        </trans-unit>
        <trans-unit id="dc734671a99ea7c893dbf1eee20f1120694c5664" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.18 onwards. From Perl 5.18 to 5.24, it was classed as experimental, and Perl emitted a warning for its usage, except when explicitly disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5350c7db9e5ccded478eeb543bf7a26b7856c3e9" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.20 onwards.</source>
          <target state="translated">这个功能从Perl 5.20开始就有了。</target>
        </trans-unit>
        <trans-unit id="912ee35f2cf624d52ab346e73c3923159bdb7d37" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.20 onwards. In Perl 5.20 and 5.22, it was classed as experimental, and Perl emitted a warning for its usage, except when explicitly disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d594f14a3251cf1780c8a95d14833fb1764cbcb5" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.22 onwards.</source>
          <target state="translated">这个功能从Perl 5.22开始就有了。</target>
        </trans-unit>
        <trans-unit id="812da9afcec2dd5dbb225d365cc307499de91303" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.22 onwards. Starting in Perl 5.28, &lt;code&gt;use v5.28&lt;/code&gt; will enable the feature. Before 5.28, it was still experimental and would emit a warning in the &quot;experimental::bitwise&quot; category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f5953cd1a4e50648fa5b5a07b6072cdf30f093" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.26 onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c28ac324833990916ac9b2e82a500932e6c840" translate="yes" xml:space="preserve">
          <source>This feature is available from Perl 5.32 onwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd060361bef60c9e8d128e54b15bdf49a0df3f0" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.10.</source>
          <target state="translated">这个功能从Perl 5.10开始提供。</target>
        </trans-unit>
        <trans-unit id="f16229bb3e38370fa369bac03ef842b45e6ac174" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.12; was almost fully implemented in Perl 5.14; and extended in Perl 5.16 to cover &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从Perl 5.12开始可以使用此功能。在Perl 5.14中几乎完全实现；在Perl 5.16中进行了扩展，以涵盖 &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5524e6a39157c705251929d1a0f3ddb30671307" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.12; was almost fully implemented in Perl 5.14; and extended in Perl 5.16 to cover &lt;code&gt;quotemeta&lt;/code&gt;; was extended further in Perl 5.26 to cover &lt;a href=&quot;perlop#Range-Operators&quot;&gt;the range operator&lt;/a&gt;; and was extended again in Perl 5.28 to cover &lt;a href=&quot;perlfunc#split&quot;&gt;special-cased whitespace splitting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fa1f4ec8b7292a36ec1d671af80c0ba1c4dbf6" translate="yes" xml:space="preserve">
          <source>This feature is available starting with Perl 5.16.</source>
          <target state="translated">这个功能从Perl 5.16开始提供。</target>
        </trans-unit>
        <trans-unit id="0c0f06ce5a1bc9813d47f25141700a05f2802346" translate="yes" xml:space="preserve">
          <source>This feature is available under this name from Perl 5.32 onwards. In previous versions, it was simply on all the time. To disallow (or warn on) indirect object syntax on older Perls, see the &lt;a href=&quot;indirect&quot;&gt;indirect&lt;/a&gt; CPAN module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf7997500a8320557eaa4d36e75775cc5a5b761" translate="yes" xml:space="preserve">
          <source>This feature is available under this name starting with Perl 5.16. In previous versions, it was simply on all the time, and this pragma knew nothing about it.</source>
          <target state="translated">从Perl 5.16开始,这个功能就以这个名字出现了。在以前的版本中,它只是一直处于开启状态,而这个pragma对它一无所知。</target>
        </trans-unit>
        <trans-unit id="b957d6504ae997d3a3efef291b5e1aad2b736b3a" translate="yes" xml:space="preserve">
          <source>This feature is enabled by 'importing' the non-existent symbol 'verbose'. You would typically enable it by saying</source>
          <target state="translated">这个功能是通过 &quot;导入 &quot;不存在的符号 &quot;verbose &quot;来启用的。通常您可以通过以下方式启用它</target>
        </trans-unit>
        <trans-unit id="02d76db5faed0f26a8be3e80c39fd86b2f9e9ac8" translate="yes" xml:space="preserve">
          <source>This feature is implemented as a new op type, &lt;code&gt;OP_CUSTOM&lt;/code&gt; . The Perl core does not &quot;know&quot; anything special about this op type, and so it will not be involved in any optimizations. This also means that you can define your custom ops to be any op structure -- unary, binary, list and so on -- you like.</source>
          <target state="translated">此功能实现为新的op类型 &lt;code&gt;OP_CUSTOM&lt;/code&gt; 。Perl内核不&amp;ldquo;知道&amp;rdquo;关于此op类型的任何特殊信息，因此它不会参与任何优化。这也意味着您可以将自定义操作定义为您喜欢的任何操作结构-一元，二进制，列表等。</target>
        </trans-unit>
        <trans-unit id="aa7a3b666f950bccfb4edd15bc8cc86185353e0d" translate="yes" xml:space="preserve">
          <source>This feature is implemented as a new op type, &lt;code&gt;OP_CUSTOM&lt;/code&gt;. The Perl core does not &quot;know&quot; anything special about this op type, and so it will not be involved in any optimizations. This also means that you can define your custom ops to be any op structure -- unary, binary, list and so on -- you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a96f74e82c64c1fcb6aeb933d3cba439c5534f0" translate="yes" xml:space="preserve">
          <source>This feature is not available when the left-hand side is prefixed by &lt;code&gt;Is_&lt;/code&gt;, nor for any form that is marked as &quot;Discouraged&quot; in &lt;a href=&quot;perluniprops#Discouraged&quot;&gt;&quot;Discouraged&quot; in perluniprops&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d9a13d27e32567256bd5ed07966300b2843571" translate="yes" xml:space="preserve">
          <source>This feature is useful when processing a file format that encapsulates a compressed data stream (e.g. gzip, zip) and there is useful data immediately after the deflation stream.</source>
          <target state="translated">当处理封装压缩数据流(如gzip、zip)的文件格式时,这个功能很有用,而且在放气流之后立即有有用的数据。</target>
        </trans-unit>
        <trans-unit id="70ff4f5cd1e98da8a085f691d09087dfafce10bc" translate="yes" xml:space="preserve">
          <source>This feature is useful when processing a file format that encapsulates a compressed data stream (e.g. gzip, zip).</source>
          <target state="translated">该功能在处理封装压缩数据流的文件格式(如gzip、zip)时非常有用。</target>
        </trans-unit>
        <trans-unit id="def031dfec2b62faefb35716ef0923bb4937a5cd" translate="yes" xml:space="preserve">
          <source>This feature makes these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1209b27a133e6af72a5c8528b176699143400cab" translate="yes" xml:space="preserve">
          <source>This feature requires configuration option &lt;b&gt;permute&lt;/b&gt;, see section &lt;a href=&quot;#Configuring-Getopt%3A%3ALong&quot;&gt;&quot;Configuring Getopt::Long&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4da939b7443e26e164efdaa4d6f81b9bc175434" translate="yes" xml:space="preserve">
          <source>This feature requires configuration option &lt;b&gt;permute&lt;/b&gt;, see section &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt;.</source>
          <target state="translated">此功能需要配置选项&lt;b&gt;permute&lt;/b&gt;，请参阅&amp;ldquo; &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;配置Getopt :: Long&amp;rdquo;部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17e7c4a42ab4fd0bc0d9658f7d9d343681a4a3e3" translate="yes" xml:space="preserve">
          <source>This feature supported the legacy &lt;code&gt;$[&lt;/code&gt; variable. See &lt;a href=&quot;perlvar#%24%5B&quot;&gt;&quot;$[&quot; in perlvar&lt;/a&gt;. It was on by default but disabled under &lt;code&gt;use v5.16&lt;/code&gt; (see &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;&quot;IMPLICIT LOADING&quot;&lt;/a&gt;, below) and unavailable since perl 5.30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84829a17ad80817afc9eefb1b49f97bfdfe8fac" translate="yes" xml:space="preserve">
          <source>This feature supports the legacy &lt;code&gt;$[&lt;/code&gt; variable. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;. It is on by default but disabled under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (see &lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;IMPLICIT LOADING&lt;/a&gt;, below).</source>
          <target state="translated">此功能支持旧版 &lt;code&gt;$[&lt;/code&gt; 变量。请参阅&lt;a href=&quot;perlvar#%24%5b&quot;&gt;$ [在perlvar&lt;/a&gt;和&lt;a href=&quot;arybase&quot;&gt;arybase中&lt;/a&gt;。它默认情况下处于启用状态，但在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; 禁用（请参见下面的&amp;ldquo; 隐式&lt;a href=&quot;#IMPLICIT-LOADING&quot;&gt;加载&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="00aefaa433583952978113c93d5aa269ecab2168" translate="yes" xml:space="preserve">
          <source>This feature was inspired by, and small portions of code copied from, &lt;a href=&quot;ExtUtils::MakeMaker::BigHelper&quot;&gt;ExtUtils::MakeMaker::BigHelper&lt;/a&gt;. Hopefully this feature will render that module mainly obsolete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaa07991a8c1bc153311bc6ab0dcadf92aec838" translate="yes" xml:space="preserve">
          <source>This feature, available starting in v5.12, matches any character that is &lt;b&gt;not&lt;/b&gt; a newline. It is a short-hand for writing &lt;code&gt;[^\n]&lt;/code&gt;, and is identical to the &lt;code&gt;.&lt;/code&gt; metasymbol, except under the &lt;code&gt;/s&lt;/code&gt; flag, which changes the meaning of &lt;code&gt;.&lt;/code&gt;, but not &lt;code&gt;\N&lt;/code&gt; .</source>
          <target state="translated">此功能从v5.12开始可用，它匹配&lt;b&gt;不是&lt;/b&gt;换行符的任何字符。它是写 &lt;code&gt;[^\n]&lt;/code&gt; 的简写，与相同 &lt;code&gt;.&lt;/code&gt; 元符号，但 &lt;code&gt;/s&lt;/code&gt; 标志下的符号会更改的含义 &lt;code&gt;.&lt;/code&gt; ，但不是 &lt;code&gt;\N&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e4badd2bd0b3314de1d21b3c6a19a2f1bd377e8" translate="yes" xml:space="preserve">
          <source>This feature, available starting in v5.12, matches any character that is &lt;b&gt;not&lt;/b&gt; a newline. It is a short-hand for writing &lt;code&gt;[^\n]&lt;/code&gt;, and is identical to the &lt;code&gt;.&lt;/code&gt; metasymbol, except under the &lt;code&gt;/s&lt;/code&gt; flag, which changes the meaning of &lt;code&gt;.&lt;/code&gt;, but not &lt;code&gt;\N&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86eab6101dbb39be1f4756f21ad94b3dc3f5b53a" translate="yes" xml:space="preserve">
          <source>This field defaults to the time the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object was created if this option is not specified.</source>
          <target state="translated">如果未指定此选项，则此字段默认为创建 &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; 对象的时间。</target>
        </trans-unit>
        <trans-unit id="0ae6e594e4f58006926409640dc519990e005708" translate="yes" xml:space="preserve">
          <source>This field defaults to the time the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object was created if this option is not specified and the &lt;code&gt;$input&lt;/code&gt; parameter is not a filename.</source>
          <target state="translated">如果未指定此选项并且 &lt;code&gt;$input&lt;/code&gt; 参数不是文件名，则该字段默认为创建 &lt;code&gt;IO::Compress::Zip&lt;/code&gt; 对象的时间。</target>
        </trans-unit>
        <trans-unit id="29150647b17fb2eaf032ae7f9cf1edf0d8a40273" translate="yes" xml:space="preserve">
          <source>This field describes resources related to this distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faabe301b626421e79d9a93a3746c1a4c23e996c" translate="yes" xml:space="preserve">
          <source>This field explicitly &lt;b&gt;does not&lt;/b&gt; indicate whether installation may be safely performed without using a Makefile or Build file, as there may be special files to install or custom installation targets (e.g. for dual-life modules that exist on CPAN as well as in the Perl core). This field only defines whether or not prerequisites are exactly as given in the metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b737c95cac471ad0db737bd55f2afa0ecc00e9d6" translate="yes" xml:space="preserve">
          <source>This field gives the version of the distribution to which the metadata structure refers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ed5ad05bf9538c83d6f4c31b8d8168c6ea1afe" translate="yes" xml:space="preserve">
          <source>This field has been renamed to &lt;a href=&quot;#no_index&quot;&gt;&quot;no_index&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d61de930b74d19121949eaba54d44d9e597bc04" translate="yes" xml:space="preserve">
          <source>This field indicated 'module' or 'script' but was considered meaningless, since many distributions are hybrids of several kinds of things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a131922fb04db9781571b4e2c9fc5802f7ed1d" translate="yes" xml:space="preserve">
          <source>This field indicates the tool that was used to create this metadata. There are no defined semantics for this field, but it is traditional to use a string in the form &quot;Generating::Package version 1.23&quot; or the author's name, if the file was generated by hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dca640acbfe709e984ed290704a109d285fb13" translate="yes" xml:space="preserve">
          <source>This field indicates the version of the CPAN Meta Spec that should be used to interpret the metadata. Consumers must check this key as soon as possible and abort further metadata processing if the meta-spec version is not supported by the consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b23162f25251f9c8794e4f7fc74132947318185" translate="yes" xml:space="preserve">
          <source>This field is basically meaningless, and tools (like Module::Build or MakeMaker) will likely stop generating it in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1537025bf1561c07253d5a4a656431e7bfecfa5" translate="yes" xml:space="preserve">
          <source>This field is required. It must contain a Unix-style relative file path from the root of the distribution directory to a file that contains or generates the package. It may be given as &lt;code&gt;META.yml&lt;/code&gt; or &lt;code&gt;META.json&lt;/code&gt; to claim a package for indexing without needing a &lt;code&gt;*.pm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47519bc5424cf5de4e08e39bba85f5f5e7d4927" translate="yes" xml:space="preserve">
          <source>This field is the name of the distribution. This is often created by taking the &quot;main package&quot; in the distribution and changing &lt;code&gt;::&lt;/code&gt; to &lt;code&gt;-&lt;/code&gt;, but the name may be completely unrelated to the packages within the distribution. For example, &lt;a href=&quot;LWP::UserAgent&quot;&gt;LWP::UserAgent&lt;/a&gt; is distributed as part of the distribution name &quot;libwww-perl&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1736869f31835444fcd2554056bb1bdc04ff6bd" translate="yes" xml:space="preserve">
          <source>This field points at a &lt;code&gt;reg_data&lt;/code&gt; structure, which is defined as follows</source>
          <target state="translated">该字段指向 &lt;code&gt;reg_data&lt;/code&gt; 结构，其定义如下</target>
        </trans-unit>
        <trans-unit id="990821d4ec37cddf0c064311fa9c677b83df34b2" translate="yes" xml:space="preserve">
          <source>This field points at a &lt;code&gt;regexp_engine&lt;/code&gt; structure which contains pointers to the subroutines that are to be used for performing a match. It is the compiling routine's responsibility to populate this field before returning the regexp object.</source>
          <target state="translated">该字段指向 &lt;code&gt;regexp_engine&lt;/code&gt; 结构，该结构包含用于执行匹配的子例程的指针。在返回regexp对象之前，填充此字段是编译例程的职责。</target>
        </trans-unit>
        <trans-unit id="d3115586186f239f2cdb97a74488a09390946c64" translate="yes" xml:space="preserve">
          <source>This field provides a general contact list independent of other structured fields provided within the &lt;a href=&quot;#resources&quot;&gt;&quot;resources&quot;&lt;/a&gt; field, such as &lt;code&gt;bugtracker&lt;/code&gt;. The addressee(s) can be contacted for any purpose including but not limited to (security) problems with the distribution, questions about the distribution or bugs in the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29c3b5fab49e3420f92d746ba1cbdbe08c72d5d" translate="yes" xml:space="preserve">
          <source>This field provides the release status of this distribution. If the &lt;code&gt;version&lt;/code&gt; field contains an underscore character, then &lt;code&gt;release_status&lt;/code&gt;&lt;b&gt;must not&lt;/b&gt; be &quot;stable.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5405199dbad0bce0901c037dfa0366548623a8d9" translate="yes" xml:space="preserve">
          <source>This field should be set to a true value if the distribution performs some dynamic configuration (asking questions, sensing the environment, etc.) as part of its configuration. This field should be set to a false value to indicate that prerequisites included in metadata may be considered final and valid for static analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da956943782a68bad0050c69ab023b35da3d16ff" translate="yes" xml:space="preserve">
          <source>This file adds no new information not already present in other files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee1cf43e9a6c3ca6d1e4006823b69dbad7f2bcb" translate="yes" xml:space="preserve">
          <source>This file came from the &quot;IO-stringy&quot; Perl5 toolkit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423f1e020ff559262836a01099aa9f00246b3cb0" translate="yes" xml:space="preserve">
          <source>This file contains instructions how to build Perl for Haiku and lists known problems.</source>
          <target state="translated">这个文件包含了如何构建Perl for Haiku的说明,并列出了已知的问题。</target>
        </trans-unit>
        <trans-unit id="3f97544476d7e0ff75b590bf2fb66c36a8e55e0a" translate="yes" xml:space="preserve">
          <source>This file contains most of the documentation of the perl public API, as generated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddfb6f3949b158a34147e69be5f3f78a6a15fb6" translate="yes" xml:space="preserve">
          <source>This file contains notes for building perl on the Stratus OpenVOS operating system. Perl is a scripting or macro language that is popular on many systems. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlbook&quot;&gt;perlbook&lt;/a&gt; for a number of good books on Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e77d17e03a82d35fe5f118c6d17cc03a2f5d43" translate="yes" xml:space="preserve">
          <source>This file contains notes for building perl on the Stratus OpenVOS operating system. Perl is a scripting or macro language that is popular on many systems. See &lt;a href=&quot;perlbook&quot;&gt;perlbook&lt;/a&gt; for a number of good books on Perl.</source>
          <target state="translated">该文件包含在Stratus OpenVOS操作系统上构建perl的说明。Perl是一种脚本或宏语言，在许多系统上都很流行。有关&lt;a href=&quot;perlbook&quot;&gt;Perl&lt;/a&gt;的许多优秀书籍，请参见perlbook。</target>
        </trans-unit>
        <trans-unit id="1b8ecba533b9b274e408d86f1a2361d08ce45153" translate="yes" xml:space="preserve">
          <source>This file contains the documentation of the perl public API generated by</source>
          <target state="translated">这个文件包含了由下列文件生成的perl公共API的文档。</target>
        </trans-unit>
        <trans-unit id="772ef66d2f091024ffe5331d4173bb5adc436597" translate="yes" xml:space="preserve">
          <source>This file gives instructions for building Perl 5.7 and above, and also Perl modules for NetWare. Before you start, you may want to read the README file found in the top level directory into which the Perl source code distribution was extracted. Make sure you read and understand the terms under which the software is being distributed.</source>
          <target state="translated">这个文件给出了构建Perl 5.7及以上版本的说明,以及NetWare的Perl模块。在您开始之前,您可能需要阅读在解压 Perl 源代码发行版的顶层目录中找到的 README 文件。确保你阅读并理解软件发布的条款。</target>
        </trans-unit>
        <trans-unit id="6ec203908c78957c98ea92f12965f186f5810be8" translate="yes" xml:space="preserve">
          <source>This file gives the instructions for building Perl5.8 and above for WinCE. Please read and understand the terms under which this software is distributed.</source>
          <target state="translated">本文件给出了为WinCE构建Perl5.8及以上版本的说明。请阅读并理解本软件的发布条款。</target>
        </trans-unit>
        <trans-unit id="cf6acf338e7fac3c001977fe9f2038807c39d850" translate="yes" xml:space="preserve">
          <source>This file is the autogenerated documentation of functions in the Perl interpreter that are documented using Perl's internal documentation format but are not marked as part of the Perl API. In other words, &lt;b&gt;they are not for use in extensions&lt;/b&gt;!</source>
          <target state="translated">该文件是Perl解释器中功能的自动生成的文档，这些文档是使用Perl的内部文档格式记录的，但未标记为Perl API的一部分。换句话说，&lt;b&gt;它们不用于扩展&lt;/b&gt;！</target>
        </trans-unit>
        <trans-unit id="37bc1fa4735275726caf451da3d6c18e093591a1" translate="yes" xml:space="preserve">
          <source>This file lists everyone who's contributed to Perl. If you submit a patch, you should add your name to this file as part of the patch.</source>
          <target state="translated">这个文件列出了所有对 Perl 有贡献的人。如果你提交了一个补丁,你应该把你的名字作为补丁的一部分加入到这个文件中。</target>
        </trans-unit>
        <trans-unit id="bfb66abe74ae898df9c2dbe0e11c53cf1576bcaf" translate="yes" xml:space="preserve">
          <source>This file resides somewhere deep in the location you installed your perl library, find it out by</source>
          <target state="translated">这个文件位于你安装perl库的某个深处,通过以下方法找到它</target>
        </trans-unit>
        <trans-unit id="6cb5bba8cb2fb8c111c0a512a6843cebdb2655ae" translate="yes" xml:space="preserve">
          <source>This file will get parsed, and produce a maybe empty &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; array for the current architecture. That will be extended by $BSLOADLIBS, which was computed by ExtUtils::Liblist::ext(). If this array still is empty, we do nothing, else we write a .bs file with an &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; array.</source>
          <target state="translated">该文件将被解析，并为当前体系结构生成一个可能为空的 &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; 数组。这将由$ BSLOADLIBS扩展，该扩展由ExtUtils :: Liblist :: ext（）计算。如果该数组仍然为空，则不执行任何操作，否则我们将使用 &lt;code&gt;@DynaLoader::dl_resolve_using&lt;/code&gt; 数组编写一个.bs文件。</target>
        </trans-unit>
        <trans-unit id="77507ae6fec16ecb1a49a0d13053514b63919993" translate="yes" xml:space="preserve">
          <source>This filter ensures that all data written to the DBM file is null terminated. This is useful when you have a perl script that needs to interoperate with a DBM file that a C program also uses. A fairly common issue is for the C application to include the terminating null in a string when it writes to the DBM file. This filter will ensure that all data written to the DBM file can be read by the C application.</source>
          <target state="translated">这个过滤器确保所有写入DBM文件的数据都是空结束的。当你有一个perl脚本需要与一个C程序也使用的DBM文件进行交互时,这个过滤器就很有用。一个相当常见的问题是,当C程序向DBM文件写入数据时,会在一个字符串中包含终止的null。这个过滤器将确保所有写入DBM文件的数据可以被C程序读取。</target>
        </trans-unit>
        <trans-unit id="1a16c760c71ffbcc7dbae1135b5e99738b98c9c4" translate="yes" xml:space="preserve">
          <source>This filter will compress all data before it is written to the database and uncompressed it on reading.</source>
          <target state="translated">这个过滤器会在数据写入数据库之前压缩所有数据,并在读取时解压。</target>
        </trans-unit>
        <trans-unit id="915eb343b20bf6c5f1c528d637992be8d7bcc44e" translate="yes" xml:space="preserve">
          <source>This final example contains both ordinary and pattern code expressions. It detects whether a binary string &lt;code&gt;1101010010001...&lt;/code&gt; has a Fibonacci spacing 0,1,1,2,3,5,... of the &lt;code&gt;'1'&lt;/code&gt;'s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff45bc95d2be91a9f62c2d432c6510d29da26205" translate="yes" xml:space="preserve">
          <source>This final example contains both ordinary and pattern code expressions. It detects whether a binary string &lt;code&gt;1101010010001...&lt;/code&gt; has a Fibonacci spacing 0,1,1,2,3,5,... of the &lt;code&gt;1&lt;/code&gt; 's:</source>
          <target state="translated">最后一个示例包含普通代码和模式代码表达式。它检测二进制字符串 &lt;code&gt;1101010010001...&lt;/code&gt; 的斐波那契间距是否为 &lt;code&gt;1&lt;/code&gt; 的0,1,1,2,3,5，... ：</target>
        </trans-unit>
        <trans-unit id="4dfd467bd9194695ec17711b8f65393c531e176b" translate="yes" xml:space="preserve">
          <source>This finishes implementation of a primitive symbolic calculator in 50 lines of Perl code. Since the numeric values of subexpressions are not cached, the calculator is very slow.</source>
          <target state="translated">这就用50行Perl代码完成了一个原始符号计算器的实现。由于子表达式的数值没有被缓存,所以计算器的速度非常慢。</target>
        </trans-unit>
        <trans-unit id="432b2214978806677872de825506327a25e6c8da" translate="yes" xml:space="preserve">
          <source>This first trivial example will call a Perl subroutine,</source>
          <target state="translated">这第一个琐碎的例子将调用一个Perl子程序。</target>
        </trans-unit>
        <trans-unit id="7a73aefe087a5a3cae31e7663f998536b4f2db63" translate="yes" xml:space="preserve">
          <source>This flag has 2 effects:</source>
          <target state="translated">这个旗子有2个效果。</target>
        </trans-unit>
        <trans-unit id="caa34b07e62e9949dde06d4f7ad8cedfd3b7de3f" translate="yes" xml:space="preserve">
          <source>This flag has an important effect on Perl's treatment of the string: if UTF-8 data is not properly distinguished, regular expressions, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; and other string handling operations will have undesirable (wrong) results.</source>
          <target state="translated">此标志对Perl的字符串处理有重要影响：如果未正确区分UTF-8数据，则正则表达式， &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; 和其他字符串处理操作将产生不良（错误）结果。</target>
        </trans-unit>
        <trans-unit id="c9629c786021db29caecd61cf856ee5127e01fba" translate="yes" xml:space="preserve">
          <source>This flag has an important effect on Perl's treatment of the string: if UTF-8 data is not properly distinguished, regular expressions, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;substr&lt;/code&gt; and other string handling operations will have undesirable (wrong) results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a176da4e70ce1acc6541f9df33982a6b757fc468" translate="yes" xml:space="preserve">
          <source>This flag is set to true if the API is tracing through subroutine calls.</source>
          <target state="translated">如果API通过子程序调用进行跟踪,则该标志被设置为true。</target>
        </trans-unit>
        <trans-unit id="201e9afdfb172b15efef161ffd6b8fd219c793ac" translate="yes" xml:space="preserve">
          <source>This flag is supported in Sun WorkShop Compilers 5.0 and onwards (now marketed under the name Forte) when used on Solaris 7 or later on UltraSparc systems.</source>
          <target state="translated">当在Solaris 7或更高版本的UltraSparc系统上使用时,Sun WorkShop Compilers 5.0及以后的版本(现在以Forte的名称销售)支持该标志。</target>
        </trans-unit>
        <trans-unit id="b160cdb384c536dc3f048d4a9c7c790cc3b24bae" translate="yes" xml:space="preserve">
          <source>This flag tells Perl to interpret the supplied string as a vector of integers, one for each character in the string. Perl applies the format to each integer in turn, then joins the resulting strings with a separator (a dot &lt;code&gt;.&lt;/code&gt; by default). This can be useful for displaying ordinal values of characters in arbitrary strings:</source>
          <target state="translated">此标志告诉Perl将提供的字符串解释为整数向量，该整数表示字符串中的每个字符。Perl依次将格式应用于每个整数，然后使用分隔符（默认为点 &lt;code&gt;.&lt;/code&gt; ）连接结果字符串。这对于显示任意字符串中字符的有序值很有用：</target>
        </trans-unit>
        <trans-unit id="f881a1e5bd78a37c63f807e7bc9fe5e3e92898af" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; ' '&lt;/code&gt; is now special-cased solely in the parser. RXf_SPLIT is still #defined, so you can test for it. This is how it used to work:</source>
          <target state="translated">此标志已在perl 5.18.0中删除。现在，仅在解析器中对 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt; ' '&lt;/code&gt; 进行了特殊区分。RXf_SPLIT仍然是#defined，因此您可以对其进行测试。这是它过去的工作方式：</target>
        </trans-unit>
        <trans-unit id="149e3a434b8c79c17c15e7dd1bfeeec79cac366d" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. &lt;code&gt;split ' '&lt;/code&gt; is now special-cased solely in the parser. RXf_SPLIT is still #defined, so you can test for it. This is how it used to work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d833b586ef20499906978002bb10914b6b58edd4" translate="yes" xml:space="preserve">
          <source>This flag was removed in perl 5.18.0. It is still #defined, so you can set it, but doing so will have no effect. This is how it used to work:</source>
          <target state="translated">这个标志在perl 5.18.0中被移除。它仍然是#defined的,所以你可以设置它,但这样做不会有任何效果。这就是以前的工作方式。</target>
        </trans-unit>
        <trans-unit id="dc95d1efdd1713c3cca7c0b3c4bdefdda1fde08a" translate="yes" xml:space="preserve">
          <source>This flag, if given, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt; . This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="translated">如果提供此标志，则在提供锚文本时将禁止显示URL，因此此示例的格式将仅为 &lt;code&gt;foo&lt;/code&gt; 。在URL不是特别重要的情况下，这可以减少混乱的输出。</target>
        </trans-unit>
        <trans-unit id="2c97210a38063d077fd5dfe5b874dc5c9ec99795" translate="yes" xml:space="preserve">
          <source>This flag, if given, suppresses the URL when anchor text is given, so this example would be formatted as just &lt;code&gt;foo&lt;/code&gt;. This can produce less cluttered output in cases where the URLs are not particularly important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dbb07c9842c891feb553c44a3898bc7209b8ed" translate="yes" xml:space="preserve">
          <source>This flag, used in the length slot of hash entries and magic structures, specifies the structure contains an &lt;code&gt;SV*&lt;/code&gt; pointer where a &lt;code&gt;char*&lt;/code&gt; pointer is to be expected. (For information only--not to be used).</source>
          <target state="translated">该标志用在哈希条目和魔术结构的长度槽中，用于指定包含 &lt;code&gt;SV*&lt;/code&gt; 指针的结构，在该指针中应有 &lt;code&gt;char*&lt;/code&gt; 指针。（仅供参考，请勿使用）。</target>
        </trans-unit>
        <trans-unit id="6617f4f7a980e05c925f274014a2ec6bb8531a4e" translate="yes" xml:space="preserve">
          <source>This fools Perl into not matching the ligatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbab49144d33f97cf4910c662167d2afe655dc3e" translate="yes" xml:space="preserve">
          <source>This forces the &lt;code&gt;AUTOLOAD&lt;/code&gt; for &lt;code&gt;SO_LINGER&lt;/code&gt; to take place before SO_LINGER is encountered later in &lt;code&gt;My&lt;/code&gt; package.</source>
          <target state="translated">这迫使 &lt;code&gt;AUTOLOAD&lt;/code&gt; 为 &lt;code&gt;SO_LINGER&lt;/code&gt; SO_LINGER在以后遇到之前进行 &lt;code&gt;My&lt;/code&gt; 包。</target>
        </trans-unit>
        <trans-unit id="b15b4ab4a7170566f869487aafa326bf0ce9445d" translate="yes" xml:space="preserve">
          <source>This forces the short and the long members to be little-endian, and is just fine if you don't have too many struct members. But we could also use the byte-order modifier on a group and write the following:</source>
          <target state="translated">这样就强制短成员和长成员都是小字节的,如果你的结构成员不多的话,就可以了。但我们也可以在一个组上使用字节序修饰符,并写出以下内容。</target>
        </trans-unit>
        <trans-unit id="de46dfb71b9966e3e11ff89ec998704c30ddf969" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvIV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319008616c679e138429b5bd14ecb2239c8ff654" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvNV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748f2a390c701e3448b1a19dc8793fdea5346721" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvTRUE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad206f71367b2c3bbee0a58f60190a76076a07f1" translate="yes" xml:space="preserve">
          <source>This form guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvUV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4f84b6cad0b1ebbd95d56cd730e6ae5313c6f1" translate="yes" xml:space="preserve">
          <source>This form of the pragma allows essentially seamless handling of locales with Unicode. The collation order will be by Unicode code point order. &lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to get Unicode rules collation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f05df3e2fa93dbc3244d6e8aa705438a4243e3" translate="yes" xml:space="preserve">
          <source>This form of the pragma allows essentially seamless handling of locales with Unicode. The collation order will be by Unicode code point order. It is strongly recommended that when you need to order and sort strings that you use the standard module &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; which gives much better results in many instances than you can get with the old-style locale handling.</source>
          <target state="translated">这种编译指示形式允许使用Unicode无缝地处理语言环境。整理顺序将按Unicode代码点顺序进行。强烈建议您在需要对字符串进行排序和排序时，使用标准模块&lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collat​​e&lt;/a&gt;，它在许多实例中提供的效果比旧式语言环境处理要好得多。</target>
        </trans-unit>
        <trans-unit id="cdc9f2e82b133c2773ec210a8571ca6b553d5115" translate="yes" xml:space="preserve">
          <source>This formality is needed when properties are not binary; that is, if they can take on more values than just &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; . For example, the &lt;code&gt;Bidi_Class&lt;/code&gt; property (see &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;Bidirectional Character Types&lt;/a&gt; below), can take on several different values, such as &lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; , &lt;code&gt;Whitespace&lt;/code&gt; , and others. To match these, one needs to specify both the property name (&lt;code&gt;Bidi_Class&lt;/code&gt; ), AND the value being matched against (&lt;code&gt;Left&lt;/code&gt; , &lt;code&gt;Right&lt;/code&gt; ,</source>
          <target state="translated">如果属性不是二进制的，则需要这种形式。也就是说，如果它们可以接受的值不仅仅是 &lt;code&gt;True&lt;/code&gt; 和 &lt;code&gt;False&lt;/code&gt; 。例如， &lt;code&gt;Bidi_Class&lt;/code&gt; 属性（请参见下面的&lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;双向字符类型&lt;/a&gt;）可以采用几个不同的值，例如 &lt;code&gt;Left&lt;/code&gt; ， &lt;code&gt;Right&lt;/code&gt; ， &lt;code&gt;Whitespace&lt;/code&gt; 和其他。要匹配这些属性，需要同时指定属性名称（ &lt;code&gt;Bidi_Class&lt;/code&gt; ）和要与之匹配的值（ &lt;code&gt;Left&lt;/code&gt; ， &lt;code&gt;Right&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="6c29258146f5f20ab2294915f5c82cbdb06ae407" translate="yes" xml:space="preserve">
          <source>This formality is needed when properties are not binary; that is, if they can take on more values than just &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt;. For example, the &lt;code&gt;Bidi_Class&lt;/code&gt; property (see &lt;a href=&quot;#Bidirectional-Character-Types&quot;&gt;&quot;Bidirectional Character Types&quot;&lt;/a&gt; below), can take on several different values, such as &lt;code&gt;Left&lt;/code&gt;, &lt;code&gt;Right&lt;/code&gt;, &lt;code&gt;Whitespace&lt;/code&gt;, and others. To match these, one needs to specify both the property name (&lt;code&gt;Bidi_Class&lt;/code&gt;), AND the value being matched against (&lt;code&gt;Left&lt;/code&gt;, &lt;code&gt;Right&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b05c6c31caa81ea454aca24f6c1d1188903888" translate="yes" xml:space="preserve">
          <source>This formatting code is syntactically simple, but semantically complex. What it means is that each space in the printable content of this code signifies a non-breaking space.</source>
          <target state="translated">这个格式代码在语法上很简单,但在语义上很复杂。它的意思是,在该代码的可打印内容中,每一个空格都表示一个非断开的空格。</target>
        </trans-unit>
        <trans-unit id="d77c232922b63b050101d5932a616e0ed5728461" translate="yes" xml:space="preserve">
          <source>This free toolkit contains the same compiler and linker that ship with Visual C++ .NET 2003 Professional, but doesn't contain everything necessary to build Perl.</source>
          <target state="translated">这个免费的工具包包含了和Visual C++.NET 2003 Professional一样的编译器和链接器,但并不包含构建Perl所需的一切。</target>
        </trans-unit>
        <trans-unit id="5c5a6423b0a65bc38b33d48cf33a85a24bf291a8" translate="yes" xml:space="preserve">
          <source>This free version of Visual C++ 2005 Professional contains the same compiler and linker that ship with the full version, but doesn't contain everything necessary to build Perl.</source>
          <target state="translated">这个免费版的Visual C++2005 Professional包含与完整版相同的编译器和链接器,但并不包含构建Perl所需的一切。</target>
        </trans-unit>
        <trans-unit id="eb31e64d6cc8d22ff5f69477b5a67be71c8242ad" translate="yes" xml:space="preserve">
          <source>This function (not exported) lets you reset the sequence numbers (note that they're numbered arbitrarily, their goal being to be human readable). Its purpose is mostly to support testing, i.e. to compare the concise output from two identical anonymous subroutines (but different instances). Without the reset, B::Concise, seeing that they're separate optrees, generates different sequence numbers in the output.</source>
          <target state="translated">这个函数(没有导出)可以让你重置序列号(注意,它们的编号是任意的,其目的是为了让人可以读懂)。它的目的主要是为了支持测试,即比较两个相同的匿名子程序(但实例不同)的简洁输出。如果没有复位,B::Concise看到它们是独立的optrees,就会在输出中产生不同的序列号。</target>
        </trans-unit>
        <trans-unit id="1f57c1588a54710c722f648f2f8000721f89bfc3" translate="yes" xml:space="preserve">
          <source>This function accepts any UV as input. To forbid or warn on non-Unicode code points, or those that may be problematic, see &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;.</source>
          <target state="translated">此功能接受任何紫外线作为输入。要禁止或警告非Unicode代码点或可能存在问题的代码点，请参见&lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f691de76bb17beb8b2cbb40c7e4e7d2820166ad" translate="yes" xml:space="preserve">
          <source>This function accepts any code point from 0..&lt;code&gt;IV_MAX&lt;/code&gt; as input. &lt;code&gt;IV_MAX&lt;/code&gt; is typically 0x7FFF_FFFF in a 32-bit word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc1cbc95f41c6ca77822a286a66032b96a97b23" translate="yes" xml:space="preserve">
          <source>This function accepts two arguments, adds them, and prints their sum. Its return value is the numuber of characters it printed, but you probably didn't care about that. But &lt;code&gt;Memoize&lt;/code&gt; doesn't understand that. If you memoize this function, you will get the result you expect the first time you ask it to print the sum of 2 and 3, but subsequent calls will return 1 (the return value of &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;) without actually printing anything.</source>
          <target state="translated">此函数接受两个参数，将它们相加并打印它们的总和。它的返回值是它打印的字符数，但您可能并不在意。但是 &lt;code&gt;Memoize&lt;/code&gt; 对此并不了解。如果记住该功能，则在第一次要求它打印2和3的总和时会得到期望的结果，但是随后的调用将返回1（ &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 的返回值），而实际上不打印任何内容。</target>
        </trans-unit>
        <trans-unit id="d8b9fe9891651290ed3a76f635027aadcf27a76a" translate="yes" xml:space="preserve">
          <source>This function accepts two arguments, adds them, and prints their sum. Its return value is the numuber of characters it printed, but you probably didn't care about that. But &lt;code&gt;Memoize&lt;/code&gt; doesn't understand that. If you memoize this function, you will get the result you expect the first time you ask it to print the sum of 2 and 3, but subsequent calls will return 1 (the return value of &lt;code&gt;print&lt;/code&gt;) without actually printing anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8ff2980a7098008fca7a80ae815b328b64b56a" translate="yes" xml:space="preserve">
          <source>This function adheres to the POSIX syntax for command line options, with GNU extensions. In general, this means that options have long names instead of single letters, and are introduced with a double dash &quot;--&quot;. Support for bundling of command line options, as was the case with the more traditional single-letter approach, is provided but not enabled by default.</source>
          <target state="translated">这个函数遵循POSIX命令行选项的语法,并有GNU的扩展。一般来说,这意味着选项的名称是长的,而不是单字母,并且用双破折号&quot;--&quot;引入。提供了对命令行选项捆绑的支持,就像传统的单字母方法一样,但默认情况下没有启用。</target>
        </trans-unit>
        <trans-unit id="ecc6287822eead2b98d6d43c71be2ea5a869ec7f" translate="yes" xml:space="preserve">
          <source>This function allows one to violate the abstraction of variables and get or set the refcount of a variable, and in generally is really only useful in code that is testing refcount behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55f008cc8679ba993acc354409c0dcb4424edfc" translate="yes" xml:space="preserve">
          <source>This function applies some optimisations to the optree in top-down order. It is called before the peephole optimizer, which processes ops in execution order. Note that finalize_optree() also does a top-down scan, but is called *after* the peephole optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0b646247c6327383124f41d35ef99ac00aaf8b" translate="yes" xml:space="preserve">
          <source>This function assigns the prototype of the named core function to &lt;code&gt;sv&lt;/code&gt; , or to a new mortal SV if &lt;code&gt;sv&lt;/code&gt; is NULL. It returns the modified &lt;code&gt;sv&lt;/code&gt; , or NULL if the core function has no prototype. &lt;code&gt;code&lt;/code&gt; is a code as returned by &lt;code&gt;keyword()&lt;/code&gt; . It must not be equal to 0.</source>
          <target state="translated">该函数将命名核心函数的原型分配给 &lt;code&gt;sv&lt;/code&gt; ，如果 &lt;code&gt;sv&lt;/code&gt; 为NULL 则分配给新的凡人SV 。它返回修改后的 &lt;code&gt;sv&lt;/code&gt; ，如果核心函数没有原型，则返回NULL。 &lt;code&gt;code&lt;/code&gt; 是由 &lt;code&gt;keyword()&lt;/code&gt; 返回的代码。它不能等于0。</target>
        </trans-unit>
        <trans-unit id="d51d61d384048f31db1722374f5b372c545260fb" translate="yes" xml:space="preserve">
          <source>This function assigns the prototype of the named core function to &lt;code&gt;sv&lt;/code&gt;, or to a new mortal SV if &lt;code&gt;sv&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;. It returns the modified &lt;code&gt;sv&lt;/code&gt;, or &lt;code&gt;NULL&lt;/code&gt; if the core function has no prototype. &lt;code&gt;code&lt;/code&gt; is a code as returned by &lt;code&gt;keyword()&lt;/code&gt;. It must not be equal to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2917be492c6121d8b92df9a8721147dc2a9433ef" translate="yes" xml:space="preserve">
          <source>This function bears the same relationship to the CORE function &lt;code&gt;sysopen&lt;/code&gt; as &lt;code&gt;vmsopen&lt;/code&gt; does to &lt;code&gt;open&lt;/code&gt;. Its first three arguments are the name, access flags, and permissions for the file. Like &lt;code&gt;vmsopen&lt;/code&gt;, it takes up to 8 additional string arguments which specify file characteristics. Its return value is identical to that of &lt;code&gt;vmsopen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df224a5aaa78b74e3701bf43347f5a463966d33" translate="yes" xml:space="preserve">
          <source>This function behaves the same way that scalar(%hash) behaved prior to Perl 5.25. Specifically if the hash is tied, then it calls the SCALAR tied hash method, if untied then if the hash is empty it return 0, otherwise it returns a string containing the number of used buckets in the hash, followed by a slash, followed by the total number of buckets in the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c8f38efd4e3476b651d12afb352ad397950bd5" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as in a locale, as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">此功能在各种编译指示下（例如在语言环境中）的行为与&lt;a href=&quot;#lc&quot;&gt;lc相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8378e0b6c78c094cc27c1f818ab7aa1e8291a68d" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as in a locale, as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">此功能在各种编译指示下（例如在语言环境中）的行为与&lt;a href=&quot;lc&quot;&gt;lc相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdf27edd1f3ed7033638bb2d9262acb5626e2202" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as within &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does, with the single exception of &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; of LATIN CAPITAL LETTER SHARP S (U+1E9E) within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . The foldcase of this character would normally be &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , but as explained in the &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; section, case changes that cross the 255/256 boundary are problematic under locales, and are hence prohibited. Therefore, this function under locale returns instead the string &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , which is the LATIN SMALL LETTER LONG S. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt; , the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="translated">此函数的行为下的各种编译指示，诸如内以相同的方式 &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; ，如&lt;a href=&quot;#lc&quot;&gt;LC&lt;/a&gt;确实，与唯一例外 &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; LATIN CAPITAL LETTER SHARP S（U + 1E9E）的范围内 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 。该字符的折号通常为 &lt;code&gt;&quot;ss&quot;&lt;/code&gt; ，但是如&lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt;部分所述，跨越255/256边界的大小写更改在区域设置中是有问题的，因此被禁止。因此，该语言环境下的函数将返回字符串 &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; ，这是拉丁文的小写字母LONGS。由于该字符本身会折叠为 &lt;code&gt;&quot;s&quot;&lt;/code&gt; ，将它们中的两个一起折叠时的字符串应等效于单个U + 1E9E。</target>
        </trans-unit>
        <trans-unit id="ceceba872ecbef53671fa2bb946f4d1ad71c1d4b" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragma, such as within &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; , as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does, with the single exception of &lt;code&gt;&lt;a href=&quot;fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; of LATIN CAPITAL LETTER SHARP S (U+1E9E) within the scope of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; . The foldcase of this character would normally be &lt;code&gt;&quot;ss&quot;&lt;/code&gt; , but as explained in the &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; section, case changes that cross the 255/256 boundary are problematic under locales, and are hence prohibited. Therefore, this function under locale returns instead the string &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; , which is the LATIN SMALL LETTER LONG S. Since that character itself folds to &lt;code&gt;&quot;s&quot;&lt;/code&gt; , the string of two of them together should be equivalent to a single U+1E9E when foldcased.</source>
          <target state="translated">此函数的行为下的各种编译指示，诸如内以相同的方式 &lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt; ，如&lt;a href=&quot;lc&quot;&gt;LC&lt;/a&gt;确实，与唯一例外 &lt;code&gt;&lt;a href=&quot;fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; LATIN CAPITAL LETTER SHARP S（U + 1E9E）的范围内 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 。该字符的折号通常为 &lt;code&gt;&quot;ss&quot;&lt;/code&gt; ，但是如&lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt;部分所述，跨越255/256边界的大小写更改在区域设置中是有问题的，因此被禁止。因此，该语言环境下的函数将返回字符串 &lt;code&gt;&quot;\x{17F}\x{17F}&quot;&lt;/code&gt; ，这是拉丁文的小写字母LONGS。由于该字符本身会折叠为 &lt;code&gt;&quot;s&quot;&lt;/code&gt; ，将它们中的两个一起折叠时的字符串应等效于单个U + 1E9E。</target>
        </trans-unit>
        <trans-unit id="3cd562e4f2bd434b520cfc039a6795314edcac57" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmas, such as in a locale, as &lt;a href=&quot;#lc-EXPR&quot;&gt;&lt;code&gt;lc&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0500dee2324da9704afaaade800515e656abcf2" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmas, such as within &lt;a href=&quot;feature#The-%27unicode_strings%27-feature&quot;&gt;&lt;code&gt;&quot;use feature 'unicode_strings&quot;&lt;/code&gt;&lt;/a&gt;, as &lt;a href=&quot;#lc-EXPR&quot;&gt;&lt;code&gt;lc&lt;/code&gt;&lt;/a&gt; does, with the single exception of &lt;a href=&quot;#fc-EXPR&quot;&gt;&lt;code&gt;fc&lt;/code&gt;&lt;/a&gt; of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e622f55ce5e0f86a0059d75a25d61e3419fef9f" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmata, such as in a locale, as &lt;a href=&quot;#lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">该功能在各种语用下（例如在语言环境中）的行为与&lt;a href=&quot;#lc&quot;&gt;lc相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a06484c004f74f9c8853b354936ff3f59e84875a" translate="yes" xml:space="preserve">
          <source>This function behaves the same way under various pragmata, such as in a locale, as &lt;a href=&quot;lc&quot;&gt;lc&lt;/a&gt; does.</source>
          <target state="translated">该功能在各种语用下（例如在语言环境中）的行为与&lt;a href=&quot;lc&quot;&gt;lc相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d07fce4b805ea45a197ef238496fb301033d2545" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , or &lt;code&gt;TIEHASH&lt;/code&gt; ). Typically these are arguments such as might be passed to the &lt;code&gt;dbm_open()&lt;/code&gt; function of C. The object returned by the constructor is also returned by the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="translated">此函数将变量绑定到包类，该包类将提供该变量的实现。 VARIABLE是要附魔的变量的名称。 CLASSNAME是实现正确类型的对象的类的名称。任何其他参数都将传递给该类的相应构造函数方法（意味着 &lt;code&gt;TIESCALAR&lt;/code&gt; ， &lt;code&gt;TIEHANDLE&lt;/code&gt; ， &lt;code&gt;TIEARRAY&lt;/code&gt; 或 &lt;code&gt;TIEHASH&lt;/code&gt; ）。通常，这些参数是诸如可能传递给C的 &lt;code&gt;dbm_open()&lt;/code&gt; 函数的参数。构造函数返回的对象也由 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 函数返回，如果要访问CLASSNAME中的其他方法，这将很有用。</target>
        </trans-unit>
        <trans-unit id="c3bc0e801ef7f17e4d79ee445885b2be27f25c2b" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;TIEARRAY&lt;/code&gt; , or &lt;code&gt;TIEHASH&lt;/code&gt; ). Typically these are arguments such as might be passed to the &lt;code&gt;dbm_open()&lt;/code&gt; function of C. The object returned by the constructor is also returned by the &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="translated">此函数将变量绑定到包类，该包类将提供该变量的实现。 VARIABLE是要附魔的变量的名称。 CLASSNAME是实现正确类型的对象的类的名称。任何其他参数都将传递给该类的相应构造函数方法（意味着 &lt;code&gt;TIESCALAR&lt;/code&gt; ， &lt;code&gt;TIEHANDLE&lt;/code&gt; ， &lt;code&gt;TIEARRAY&lt;/code&gt; 或 &lt;code&gt;TIEHASH&lt;/code&gt; ）。通常，这些参数是诸如可能传递给C的 &lt;code&gt;dbm_open()&lt;/code&gt; 函数的参数。构造函数返回的对象也由 &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 函数返回，如果要访问CLASSNAME中的其他方法，这将很有用。</target>
        </trans-unit>
        <trans-unit id="6ec28b6239b28c7a96697e70b1eb97107ed2b3c3" translate="yes" xml:space="preserve">
          <source>This function binds a variable to a package class that will provide the implementation for the variable. VARIABLE is the name of the variable to be enchanted. CLASSNAME is the name of a class implementing objects of correct type. Any additional arguments are passed to the appropriate constructor method of the class (meaning &lt;code&gt;TIESCALAR&lt;/code&gt;, &lt;code&gt;TIEHANDLE&lt;/code&gt;, &lt;code&gt;TIEARRAY&lt;/code&gt;, or &lt;code&gt;TIEHASH&lt;/code&gt;). Typically these are arguments such as might be passed to the &lt;a href=&quot;http://man.he.net/man3/dbm_open&quot;&gt;dbm_open(3)&lt;/a&gt; function of C. The object returned by the constructor is also returned by the &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; function, which would be useful if you want to access other methods in CLASSNAME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174d0316fff2fa450076f65b703c67678039564b" translate="yes" xml:space="preserve">
          <source>This function call is functionally identical to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37cdb55fc25f73489ad091a40f3985d29053240" translate="yes" xml:space="preserve">
          <source>This function can cause reliability issues if you are likely to pass in empty strings that are not null terminated, because it will run strlen on the string and potentially run past valid memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5132f8607896a5505c904bfd8891d2794b3208e8" translate="yes" xml:space="preserve">
          <source>This function can take a hash of options:</source>
          <target state="translated">这个函数可以接受一个选项的哈希值。</target>
        </trans-unit>
        <trans-unit id="f0cccb23235ebb22439bd8ff2e5a998bf5aa962e" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;
%hash&lt;/code&gt; , respectively.</source>
          <target state="translated">不能在整个数组或哈希上使用此函数来找出这些元素有多少个元素。为此，分别使用 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %hash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ba6657c5fa298f8f6fa2444117335de3f819a9a" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;
%hash&lt;/code&gt; , respectively.</source>
          <target state="translated">不能在整个数组或哈希上使用此函数来找出这些元素有多少个元素。为此，分别使用 &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; @array&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;scalar&quot;&gt;scalar&lt;/a&gt; &lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt; %hash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d80cd513c1eb2f06188d940dc75b413064ad04e" translate="yes" xml:space="preserve">
          <source>This function cannot be used on an entire array or hash to find out how many elements these have. For that, use &lt;code&gt;scalar @array&lt;/code&gt; and &lt;code&gt;scalar keys %hash&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46229c4291d3a22177a19f68cea8c921f320b75" translate="yes" xml:space="preserve">
          <source>This function causes Perl to wait for the completion of an I/O operation on the file handle specified as its argument. It is used with handles opened for asynchronous I/O, and performs its task by calling the CRTL routine fwait().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118dd1a89ee26e341a24a616a4886c6624f3f97c" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (with all the restrictions that &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</source>
          <target state="translated">此功能导致立即发生核心转储。另请参见&lt;a href=&quot;../perlrun&quot;&gt;perlrun中&lt;/a&gt;的&lt;b&gt;-u&lt;/b&gt;命令行开关，其功能相同。首先，这样做是为了使您可以在程序开始处初始化所有变量之后，使用&lt;b&gt;undump&lt;/b&gt;程序（未提供）将核心转储转换为可执行二进制文件。当执行新的二进制文件，将通过执行开始 &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; LABEL（与所有限制条件 &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; 遭受）。可以将其视为具有中间转储和转世的goto。如果省略了 &lt;code&gt;LABEL&lt;/code&gt; ，则从顶部重新启动程序。该 &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; EXPR&lt;b&gt;&lt;/b&gt;从Perl 5.18.0开始可用的表单允许在运行时计算名称，否则与 &lt;code&gt;&lt;a href=&quot;dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="2644b0d090106df2bac79cc1278fe935e270aa17" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; (with all the restrictions that &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; .</source>
          <target state="translated">此功能导致立即发生核心转储。另请参见&lt;a href=&quot;perlrun&quot;&gt;perlrun中&lt;/a&gt;的&lt;b&gt;-u&lt;/b&gt;命令行开关，其功能相同。首先，这样做是为了使您可以在程序开始处初始化所有变量之后，使用&lt;b&gt;undump&lt;/b&gt;程序（未提供）将核心转储转换为可执行二进制文件。当执行新的二进制文件，将通过执行开始 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; LABEL（与所有限制条件 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; 遭受）。可以将其视为具有中间转储和转世的goto。如果省略了 &lt;code&gt;LABEL&lt;/code&gt; ，则从顶部重新启动程序。该 &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; EXPR&lt;/code&gt; EXPR&lt;b&gt;&lt;/b&gt;从Perl 5.18.0开始可用的表单允许在运行时计算名称，否则与 &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt; LABEL&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="26c8dfb8fe670903069c0f17a57b74ae3b1595ea" translate="yes" xml:space="preserve">
          <source>This function causes an immediate core dump. See also the &lt;b&gt;-u&lt;/b&gt; command-line switch in &lt;a href=&quot;perlrun#-u&quot;&gt;perlrun&lt;/a&gt;, which does the same thing. Primarily this is so that you can use the &lt;b&gt;undump&lt;/b&gt; program (not supplied) to turn your core dump into an executable binary after having initialized all your variables at the beginning of the program. When the new binary is executed it will begin by executing a &lt;code&gt;goto LABEL&lt;/code&gt; (with all the restrictions that &lt;a href=&quot;#goto-LABEL&quot;&gt;&lt;code&gt;goto&lt;/code&gt;&lt;/a&gt; suffers). Think of it as a goto with an intervening core dump and reincarnation. If &lt;code&gt;LABEL&lt;/code&gt; is omitted, restarts the program from the top. The &lt;code&gt;dump EXPR&lt;/code&gt; form, available starting in Perl 5.18.0, allows a name to be computed at run time, being otherwise identical to &lt;code&gt;dump LABEL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc06b6c797a2d8e55ea244af674579a07a667a16" translate="yes" xml:space="preserve">
          <source>This function causes the contents of stdio buffers for the specified file handle to be flushed. If &lt;code&gt;undef&lt;/code&gt; is used as the argument to &lt;code&gt;flush&lt;/code&gt;, all currently open file handles are flushed. Like the CRTL fflush() routine, it does not flush any underlying RMS buffers for the file, so the data may not be flushed all the way to the disk. &lt;code&gt;flush&lt;/code&gt; returns a true value if successful, and &lt;code&gt;undef&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8630b301b33e076db45af073be1b800df9e17ac" translate="yes" xml:space="preserve">
          <source>This function causes the file handle to be reopened with the CRTL's carriage control processing disabled; its effect is the same as that of the &lt;code&gt;b&lt;/code&gt; access mode in &lt;code&gt;vmsopen&lt;/code&gt;. After the file is reopened, the file pointer is positioned as close to its position before the call as possible (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8952b46dfeb17de53351ddf4d21ae7d55c07b2d8" translate="yes" xml:space="preserve">
          <source>This function combines &lt;code&gt;perl_inc()&lt;/code&gt; , &lt;code&gt;ccflags()&lt;/code&gt; and &lt;code&gt;ccdlflags()&lt;/code&gt; into one.</source>
          <target state="translated">此函数将 &lt;code&gt;perl_inc()&lt;/code&gt; ， &lt;code&gt;ccflags()&lt;/code&gt; 和 &lt;code&gt;ccdlflags()&lt;/code&gt; 合并为一个。</target>
        </trans-unit>
        <trans-unit id="fdb27a1411185bddb95e30d045e37f8e2d566456" translate="yes" xml:space="preserve">
          <source>This function combines &lt;code&gt;perl_inc()&lt;/code&gt;, &lt;code&gt;ccflags()&lt;/code&gt; and &lt;code&gt;ccdlflags()&lt;/code&gt; into one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86046dee569875e1ad9a6f7dd87a2c295e238ac4" translate="yes" xml:space="preserve">
          <source>This function considers Perl's extended UTF-8 to be valid. That means that code points above Unicode, surrogates, and non-character code points are considered valid by this function. Use &lt;code&gt;&lt;a href=&quot;#is_strict_utf8_string&quot;&gt;&quot;is_strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#is_c9strict_utf8_string&quot;&gt;&quot;is_c9strict_utf8_string&quot;&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; to restrict what code points are considered valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5339a84b7a169eedebef1ec60274699210a516" translate="yes" xml:space="preserve">
          <source>This function deletes the file named in its argument, returning a true value if successful and &lt;code&gt;undef&lt;/code&gt; if not. It differs from the CORE Perl function &lt;code&gt;unlink&lt;/code&gt; in that it does not try to reset file protection if the original protection does not give you delete access to the file (cf. &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;). In other words, &lt;code&gt;remove&lt;/code&gt; is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3221a438c3aad48b5c48a805755ad197928b0f99" translate="yes" xml:space="preserve">
          <source>This function detects things that can't be modified, such as &lt;code&gt;$x+1&lt;/code&gt; , and generates errors for them. For example, &lt;code&gt;$x+1 = 2&lt;/code&gt; would cause it to be called with an op of type OP_ADD and a &lt;code&gt;type&lt;/code&gt; argument of OP_SASSIGN.</source>
          <target state="translated">此函数检测无法修改的内容，例如 &lt;code&gt;$x+1&lt;/code&gt; ，并为其生成错误。例如， &lt;code&gt;$x+1 = 2&lt;/code&gt; 会导致它与类型OP_ADD的运算和一个被称为 &lt;code&gt;type&lt;/code&gt; OP_SASSIGN的论点。</target>
        </trans-unit>
        <trans-unit id="439b917328feb1c4b646d8fdc7cd70b863c018c7" translate="yes" xml:space="preserve">
          <source>This function detects things that can't be modified, such as &lt;code&gt;$x+1&lt;/code&gt;, and generates errors for them. For example, &lt;code&gt;$x+1 = 2&lt;/code&gt; would cause it to be called with an op of type &lt;code&gt;OP_ADD&lt;/code&gt; and a &lt;code&gt;type&lt;/code&gt; argument of &lt;code&gt;OP_SASSIGN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ac83507e6cd72323712112c6adca5c1d64b54a" translate="yes" xml:space="preserve">
          <source>This function differs from &lt;code&gt;&lt;a href=&quot;#is_utf8_string_flags&quot;&gt;&quot;is_utf8_string_flags&quot;&lt;/a&gt;&lt;/code&gt; only in that the latter returns FALSE if the final few bytes of the string don't form a complete code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50025265ce70752e52bdd20aeddabe5be1d58395" translate="yes" xml:space="preserve">
          <source>This function does not use a typemap. Instead, we declare it as accepting one SV* (scalar) parameter, and returning an SV* value, and we take care of populating these scalars within the code. Because we are only returning one value, we don't need a &lt;code&gt;PPCODE:&lt;/code&gt; directive - instead, we use &lt;code&gt;CODE:&lt;/code&gt; and &lt;code&gt;OUTPUT:&lt;/code&gt; directives.</source>
          <target state="translated">此函数不使用类型映射。相反，我们将其声明为接受一个SV *（标量）参数，并返回一个SV *值，并负责在代码中填充这些标量。因为只返回一个值，所以不需要 &lt;code&gt;PPCODE:&lt;/code&gt; 指令-相反，我们使用 &lt;code&gt;CODE:&lt;/code&gt; 和 &lt;code&gt;OUTPUT:&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="6180191f0bc721d501520e66b164a9ef20a22d11" translate="yes" xml:space="preserve">
          <source>This function enables/disables error popups associated with hardware errors (Disk not ready etc.) and software exceptions.</source>
          <target state="translated">此功能可启用/禁用与硬件错误(磁盘未准备好等)和软件异常相关的错误弹出窗口。</target>
        </trans-unit>
        <trans-unit id="41bdfd24b44f813aba413307b45bfa39cd26febb" translate="yes" xml:space="preserve">
          <source>This function executes code in &lt;code&gt;INIT&lt;/code&gt; blocks, and then executes the main program. The code to be executed is that established by the prior call to &lt;a href=&quot;#perl_parse&quot;&gt;&quot;perl_parse&quot;&lt;/a&gt;. If the interpreter's &lt;code&gt;PL_exit_flags&lt;/code&gt; word does not have the &lt;code&gt;PERL_EXIT_DESTRUCT_END&lt;/code&gt; flag set, then this function will also execute code in &lt;code&gt;END&lt;/code&gt; blocks. If it is desired to make any further use of the interpreter after calling this function, then &lt;code&gt;END&lt;/code&gt; blocks should be postponed to &lt;a href=&quot;#perl_destruct&quot;&gt;&quot;perl_destruct&quot;&lt;/a&gt; time by setting that flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4b4452d2c9e5e96e8d371d230a62875ce95c48" translate="yes" xml:space="preserve">
          <source>This function finalizes the optree. Should be called directly after the complete optree is built. It does some additional checking which can't be done in the normal &lt;code&gt;ck_&lt;/code&gt;xxx functions and makes the tree thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467712b5ef786ba52bfac5af598e2fd6afe41fb8" translate="yes" xml:space="preserve">
          <source>This function finalizes the optree. Should be called directly after the complete optree is built. It does some additional checking which can't be done in the normal ck_xxx functions and makes the tree thread-safe.</source>
          <target state="translated">这个函数可以最终完成optree的构建。应该在建立完整的 optree 后直接调用。它做了一些普通ck_xxx函数无法完成的额外检查,并使树的线程安全。</target>
        </trans-unit>
        <trans-unit id="7cd5d3b31c2df3a00c1280faae47ff4437247a8e" translate="yes" xml:space="preserve">
          <source>This function flushes buffered data for the specified file handle from stdio and RMS buffers all the way to disk. If successful, it returns a true value; otherwise, it returns &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529aa240cc0116c0500e7c8811796b1b622bb45e" translate="yes" xml:space="preserve">
          <source>This function has a &lt;code&gt;Perl_&lt;/code&gt; prefix; i.e. it is defined as &lt;code&gt;Perl_av_fetch&lt;/code&gt; .</source>
          <target state="translated">这个函数有一个 &lt;code&gt;Perl_&lt;/code&gt; 前缀。即定义为 &lt;code&gt;Perl_av_fetch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4c8d849318248096464684b55db85c231aca3e7" translate="yes" xml:space="preserve">
          <source>This function has been removed as of Perl 5.28; instead convert to call the appropriate one of: &lt;a href=&quot;perlapi#toFOLD_utf8_safe&quot;&gt;&lt;code&gt;toFOLD_utf8_safe&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;perlapi#toLOWER_utf8_safe&quot;&gt;&lt;code&gt;toLOWER_utf8_safe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlapi#toTITLE_utf8_safe&quot;&gt;&lt;code&gt;toTITLE_utf8_safe&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;perlapi#toUPPER_utf8_safe&quot;&gt;&lt;code&gt;toUPPER_utf8_safe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85078501581a34823dfc08b6eb6329a48edc2495" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2628b175c2d24277a0337127204502b1f61bdf17" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c51dcb297acb53b80b70f8503b77e24545682a3" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3e1ad9d7e5fb833c930cfb00998df7f1bf55df" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b2efde841e51b0d07c870aace74a6c62be34c7" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f87547ea1196015dca7f56e89130f54f22cb1b" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240378f462e5da48f4331015b535ca56fa0b083e" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412915ed27530298d8a82ed72e52493d1ab3961d" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e068961c23381692cac045933729a7a9c74746fc" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4c7171fd4bdb2f80bf1e964ba7860700e8f9a2" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9dbf17740431b5f7d9b88f2d682c1cef413410" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.24. It was very similar to matching against &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt;, which you should convert to use instead. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;&quot;POSIX Character Classes&quot; in perlrecharclass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75d86010bc99e5342b8fc4788506149d555a48d" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.26. This is identical to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;lc()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#lc&quot;&gt;&quot;lc&quot; in perlfunc&lt;/a&gt;, see &lt;a href=&quot;perlfunc#lc&quot;&gt;&quot;lc&quot; in perlfunc&lt;/a&gt;, or the equivalent &lt;code&gt;\L&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9587cdcdc501560277392db1334d4cacc9432bf" translate="yes" xml:space="preserve">
          <source>This function has been removed as of v5.26. This is similar to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;uc()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#uc&quot;&gt;&quot;uc&quot; in perlfunc&lt;/a&gt;, or the equivalent &lt;code&gt;\U&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de86eb1f3f7a618ab133b8ece7ae081d7566d329" translate="yes" xml:space="preserve">
          <source>This function has documentation using the &lt;code&gt;apidoc&lt;/code&gt; feature which we'll look at in a second. Some functions have 'd' but not 'A'; docs are good.</source>
          <target state="translated">此函数具有使用 &lt;code&gt;apidoc&lt;/code&gt; 功能的文档，我们将在稍后介绍。有些功能带有&amp;ldquo; d&amp;rdquo;但没有&amp;ldquo; A&amp;rdquo;；文档是好的。</target>
        </trans-unit>
        <trans-unit id="e5896913a59161466d623bf299d08ae7f2567fac" translate="yes" xml:space="preserve">
          <source>This function has no direct relation to the usage of &lt;a href=&quot;#sysread-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;sysread&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#syswrite-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;syswrite&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;sysseek&lt;/code&gt;&lt;/a&gt;. A handle opened with this function can be used with buffered IO just as one opened with &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; can be used with unbuffered IO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757b97be8a26d052ae34b876bf766ef81984a348" translate="yes" xml:space="preserve">
          <source>This function initialises the interpreter, and parses and compiles the script specified by the command-line arguments. This includes executing code in &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;UNITCHECK&lt;/code&gt;, and &lt;code&gt;CHECK&lt;/code&gt; blocks. It does not execute &lt;code&gt;INIT&lt;/code&gt; blocks or the main program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ade2373bef2bb276b87f95d3a360655ec661c9a" translate="yes" xml:space="preserve">
          <source>This function invalidates isa caches on the old stash, on all subpackages nested inside it, and on the subclasses of all those, including non-existent packages that have corresponding entries in &lt;code&gt;stash&lt;/code&gt; .</source>
          <target state="translated">此功能会使旧存储库，嵌套在其中的所有子包以及所有这些存储库的子类上的isa缓存失效，包括那些在 &lt;code&gt;stash&lt;/code&gt; 中具有相应条目的不存在的程序包。</target>
        </trans-unit>
        <trans-unit id="163806a2e1a58620114c112d76abd153644c2699" translate="yes" xml:space="preserve">
          <source>This function invalidates isa caches on the old stash, on all subpackages nested inside it, and on the subclasses of all those, including non-existent packages that have corresponding entries in &lt;code&gt;stash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcc501ee8274fe4e362635b1b12b9fad07e4cc1" translate="yes" xml:space="preserve">
          <source>This function is a deprecated synonym for &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;&quot;uvoffuni_to_utf8_flags&quot;&lt;/a&gt;, which itself, while not deprecated, should be used only in isolated circumstances. These functions were useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21846dd58e70501c7ae85693ffbb155deb7ba64" translate="yes" xml:space="preserve">
          <source>This function is a deprecated synonym for &lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;uvoffuni_to_utf8_flags&lt;/a&gt;, which itself, while not deprecated, should be used only in isolated circumstances. These functions were useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want.</source>
          <target state="translated">该函数是&lt;a href=&quot;#uvoffuni_to_utf8_flags&quot;&gt;uvoffuni_to_utf8_flags&lt;/a&gt;的不推荐使用的同义词，该功能本身（虽然不推荐使用）仅应在单独的情况下使用。这些功能对于希望同时处理具有Unicode属性的EBCDIC和ASCII平台的代码很有用，但是从Perl v5.20开始，大多数代码几乎看不到平台之间的区别，因此该功能不太可能是你要。</target>
        </trans-unit>
        <trans-unit id="2913484e77586e8d68e21770c7b4063c930b583c" translate="yes" xml:space="preserve">
          <source>This function is a good candidate for memoization. If you memoize the `fib' function above, it will compute fib(14) exactly once, the first time it needs to, and then save the result in a table. Then if you ask for fib(14) again, it gives you the result out of the table. While computing fib(14), instead of computing fib(12) twice, it does it once; the second time it needs the value it gets it from the table. It doesn't compute fib(11) four times; it computes it once, getting it from the table the next three times. Instead of making 1,200 recursive calls to `fib', it makes 15. This makes the function about 150 times faster.</source>
          <target state="translated">这个函数是一个很好的记忆化的候选函数。如果你把上面的`fib'函数备忘录化,它将在第一次需要计算fib(14)的时候准确地计算一次,然后把结果保存在一个表中。然后,如果你再问fib(14),它就会把结果从表中给你。在计算fib(14)时,它不是计算两次fib(12),而是计算一次;第二次需要值时,它从表中获取。它不计算 fib(11)四次,而是计算一次,接下来三次从表中获取。它不需要对`fib'进行 1200 次递归调用,而是进行 15 次。这使得函数的速度快了150倍。</target>
        </trans-unit>
        <trans-unit id="8abb1909fce4e7f9c7aa7be2b9644d4d00810b89" translate="yes" xml:space="preserve">
          <source>This function is a part of the public API. All such functions should also have 'd', very few do not.</source>
          <target state="translated">这个函数是公共API的一部分。所有这样的函数也应该有'd',很少有不这样做的。</target>
        </trans-unit>
        <trans-unit id="752724e6180b12da8e6cd0e0935f30eed783f92d" translate="yes" xml:space="preserve">
          <source>This function is a stand-in replacement for &lt;a href=&quot;../../scalar/util#%24addr-%3d-refaddr(-%24ref-)&quot;&gt;Scalar::Util::refaddr&lt;/a&gt;, that is, it returns the reference address of its argument as a numeric value. The only difference is that &lt;code&gt;refaddr()&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when given a non-reference while &lt;code&gt;id()&lt;/code&gt; returns its argument unchanged.</source>
          <target state="translated">此函数是&lt;a href=&quot;../../scalar/util#%24addr-%3d-refaddr(-%24ref-)&quot;&gt;Scalar :: Util :: refaddr的&lt;/a&gt;替代品，即，它以数字值形式返回其参数的引用地址。唯一的区别是，当给定非引用时， &lt;code&gt;refaddr()&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，而 &lt;code&gt;id()&lt;/code&gt; 返回其参数不变。</target>
        </trans-unit>
        <trans-unit id="6c49d7b5a023a1bdb0c62afc7b7daf87c9518dbf" translate="yes" xml:space="preserve">
          <source>This function is a stand-in replacement for &lt;a href=&quot;Scalar::Util#refaddr&quot;&gt;Scalar::Util::refaddr&lt;/a&gt;, that is, it returns the reference address of its argument as a numeric value. The only difference is that &lt;code&gt;refaddr()&lt;/code&gt; returns &lt;code&gt;undef&lt;/code&gt; when given a non-reference while &lt;code&gt;id()&lt;/code&gt; returns its argument unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e7b319f75480a4bb2f70f5a0776fcd6fd1010a" translate="yes" xml:space="preserve">
          <source>This function is affected by the &lt;code&gt;$RAND&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32d82df863c1cbf51247765161ee50be4e23d2c" translate="yes" xml:space="preserve">
          <source>This function is deprecated due to the possibility that malformed input could cause reading beyond the end of the input buffer. Use &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;&quot;isUTF8_CHAR&quot;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0d9ec972199a89df14d600a89c7347e29e2743" translate="yes" xml:space="preserve">
          <source>This function is deprecated due to the possibility that malformed input could cause reading beyond the end of the input buffer. Use &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt; instead.</source>
          <target state="translated">由于错误的输入可能导致读取超出输入缓冲区末尾的可能性，因此不建议使用此功能。请改用&lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28ce789b612136fafacb486bd5bb357e8d0e4268" translate="yes" xml:space="preserve">
          <source>This function is disabled if the global variable $KEEP_ALL is true and an unlink on open file is supported. If the unlink is to be deferred to the END block, the file is still registered for removal.</source>
          <target state="translated">如果全局变量$KEEP_ALL为真,并且支持在打开文件时取消链接,则禁用此功能。如果取消链接的时间被推迟到END块,那么文件仍然会被删除。</target>
        </trans-unit>
        <trans-unit id="8ff75df81e21a36cc9176732a80e9ccf2b68ffdf" translate="yes" xml:space="preserve">
          <source>This function is disabled if the global variable $KEEP_ALL is true.</source>
          <target state="translated">如果全局变量$KEEP_ALL为true,则该函数被禁用。</target>
        </trans-unit>
        <trans-unit id="37256aba6c6729bd5a917fd025e81cedb9d0b6bb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the libc strtod() function, and is available even on platforms that lack plain strtod(). Its return value is the best available precision depending on platform capabilities and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ac1505f98d117f842948a2e4dbeafd3ff53890" translate="yes" xml:space="preserve">
          <source>This function is expected to be called in a Perl compilation context, and some aspects of the subroutine are taken from global variables associated with compilation. In particular, &lt;code&gt;PL_compcv&lt;/code&gt; represents the subroutine that is currently being compiled. It must be non-null when this function is called, and some aspects of the subroutine being constructed are taken from it. The constructed subroutine may actually be a reuse of the &lt;code&gt;PL_compcv&lt;/code&gt; object, but will not necessarily be so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3c45f3e25d0a4f2eec52ed9b0f4d623aa7d540" translate="yes" xml:space="preserve">
          <source>This function is expected to be used to signal to perl that this SV is about to be written to, and any extra book-keeping needs to be taken care of. Hence, it croaks on read-only values.</source>
          <target state="translated">这个函数被认为是用来向perl发出信号,表示这个SV即将被写入,并且需要处理任何额外的记账。因此,它在只读值上会发出呱呱声。</target>
        </trans-unit>
        <trans-unit id="046e9e5d6bd1398867e1dee81f27fefb4c212d31" translate="yes" xml:space="preserve">
          <source>This function is expensive in time and memory.</source>
          <target state="translated">这个功能在时间和内存上都很昂贵。</target>
        </trans-unit>
        <trans-unit id="45313cfa765e7987f87b6f11b5766c14f7fa9aff" translate="yes" xml:space="preserve">
          <source>This function is expensive, it must scan all of the buckets to determine which are used, and the count is NOT cached. In a large hash this could be a lot of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e275fe5def47eb8b770fec4e729d202771a5b5a" translate="yes" xml:space="preserve">
          <source>This function is explicitly exported.</source>
          <target state="translated">这个功能是明确输出的。</target>
        </trans-unit>
        <trans-unit id="1653892f2f39d308f9b0a291eb56cee425def2a1" translate="yes" xml:space="preserve">
          <source>This function is for code that needs to know what the precise malformation(s) are when an error is found, and wants the corresponding warning and/or error messages to be returned to the caller rather than be displayed. All messages that would have been displayed if all lexcial warnings are enabled will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4cfc2833ee86dd51e2c0f635f6cf283876c7c4" translate="yes" xml:space="preserve">
          <source>This function is for code that needs to know what the precise malformation(s) are when an error is found. If you also need to know the generated warning messages, use &lt;a href=&quot;#utf8n_to_uvchr_msgs&quot;&gt;&quot;utf8n_to_uvchr_msgs&quot;&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32340b4b7db192c6b9924268289f95c5bca2f985" translate="yes" xml:space="preserve">
          <source>This function is for code that wants any warning and/or error messages to be returned to the caller rather than be displayed. All messages that would have been displayed if all lexical warnings are enabled will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c07c7fe871db128f73a62dda492de37210f641" translate="yes" xml:space="preserve">
          <source>This function is internal to Perl because khw thinks that any XS code that would want this is probably operating too close to the internals. Presenting a valid use case could change that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baae2ca89cb1960ad8e6c66b2b2c6b874d4b3266" translate="yes" xml:space="preserve">
          <source>This function is like &lt;a href=&quot;#eval&quot;&gt;eval&lt;/a&gt; with a string argument, except it always parses its argument, or &lt;code&gt;$_&lt;/code&gt; if EXPR is omitted, as a string of bytes. A string containing characters whose ordinal value exceeds 255 results in an error. Source filters activated within the evaluated code apply to the code itself.</source>
          <target state="translated">此函数类似于带有字符串参数的&lt;a href=&quot;#eval&quot;&gt;eval&lt;/a&gt;，不同之处在于它始终将其参数解析为 &lt;code&gt;$_&lt;/code&gt; 如果省略EXPR则解析为$ _）作为字节字符串。包含序数值超过255的字符的字符串将导致错误。在评估代码中激活的源过滤器将应用于代码本身。</target>
        </trans-unit>
        <trans-unit id="4699e383ec11b8d15b996f85aefd9a02e9b5bdaf" translate="yes" xml:space="preserve">
          <source>This function is like &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; with a string argument, except it always parses its argument, or &lt;code&gt;$_&lt;/code&gt; if EXPR is omitted, as a string of bytes. A string containing characters whose ordinal value exceeds 255 results in an error. Source filters activated within the evaluated code apply to the code itself.</source>
          <target state="translated">此函数类似于带有字符串参数的&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;，不同之处在于它始终将其参数解析为 &lt;code&gt;$_&lt;/code&gt; 如果省略EXPR则解析为$ _）作为字节字符串。包含序数值超过255的字符的字符串将导致错误。在评估代码中激活的源过滤器将应用于代码本身。</target>
        </trans-unit>
        <trans-unit id="caeb1cd5a4880a4de69d7c039879029a5a9067db" translate="yes" xml:space="preserve">
          <source>This function is like them, but the input is a strict Unicode (as opposed to native) code point. Only in very rare circumstances should code not be using the native code point.</source>
          <target state="translated">这个函数和它们一样,但输入的是一个严格的Unicode(相对于本地)码点。只有在极少数情况下,代码不应该使用本地码点。</target>
        </trans-unit>
        <trans-unit id="3a6987023b3feeacf2b107686c8afb184bf9785b" translate="yes" xml:space="preserve">
          <source>This function is most useful in the idiom</source>
          <target state="translated">这个功能在以下成语中最有用</target>
        </trans-unit>
        <trans-unit id="6e46549cf4ac0adc9c0ac53e027f514166435b55" translate="yes" xml:space="preserve">
          <source>This function is no longer recommended for use, but is maintained for compatibility with existing code. If you do not want to have it exported to your namespace, use this form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba0cefbbfd398911c6a8851cb85930170c481ec" translate="yes" xml:space="preserve">
          <source>This function is not exported by default, so you'll have to ask for it via:</source>
          <target state="translated">这个函数默认不导出,所以你必须通过。</target>
        </trans-unit>
        <trans-unit id="1fe47a845128e2d640eed3a78c38850805c099b0" translate="yes" xml:space="preserve">
          <source>This function is now largely obsolete, mostly because it's very hard to convert a core file into an executable. As of Perl 5.30, it must be invoked as &lt;code&gt;CORE::dump()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a1a85d5fc88c0e9364254a35bb1ced4455307" translate="yes" xml:space="preserve">
          <source>This function is now largely obsolete, mostly because it's very hard to convert a core file into an executable. That's why you should now invoke it as &lt;code&gt;CORE::dump()&lt;/code&gt; , if you don't want to be warned against a possible typo.</source>
          <target state="translated">现在该功能已过时，主要是因为很难将核心文件转换为可执行文件。因此，如果您不想被警告可能出现错字，现在应该以 &lt;code&gt;CORE::dump()&lt;/code&gt; 调用它。</target>
        </trans-unit>
        <trans-unit id="5839521ffabe37be44c9b142d6f0e122410904e4" translate="yes" xml:space="preserve">
          <source>This function is only available under the &lt;code&gt;&lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; feature, a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration, or with a &lt;code&gt;CORE::&lt;/code&gt; prefix. See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information.</source>
          <target state="translated">此功能仅在 &lt;code&gt;&lt;a href=&quot;evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; 功能， &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; （或更高版本）声明或带有 &lt;code&gt;CORE::&lt;/code&gt; 前缀的情况下可用。请参阅&lt;a href=&quot;../feature&quot;&gt;功能&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="2ce5a3cfad478a3c3fe7a7e04e3ec1df865cc5b4" translate="yes" xml:space="preserve">
          <source>This function is only available under the &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; feature, a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; (or higher) declaration, or with a &lt;code&gt;CORE::&lt;/code&gt; prefix. See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information.</source>
          <target state="translated">此功能仅在 &lt;code&gt;&lt;a href=&quot;functions/evalbytes&quot;&gt;evalbytes&lt;/a&gt;&lt;/code&gt; 功能， &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; （或更高版本）声明或带有 &lt;code&gt;CORE::&lt;/code&gt; 前缀的情况下可用。请参阅&lt;a href=&quot;feature&quot;&gt;功能&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="20d8dc8fedc07f301a7cc15f9e5b8989eceaa3db" translate="yes" xml:space="preserve">
          <source>This function is only used by &lt;code&gt;sv_true()&lt;/code&gt; and friends, and only if the latter's argument is neither &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; nor &lt;code&gt;SvNOK&lt;/code&gt;. If the flags contain &lt;code&gt;SV_GMAGIC&lt;/code&gt;, then it does an &lt;code&gt;mg_get()&lt;/code&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43d0a24f1f599b09639816ea4bcc88309ead9ce" translate="yes" xml:space="preserve">
          <source>This function is only used by sv_true() and friends, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. If the flags contain SV_GMAGIC, then it does an mg_get() first.</source>
          <target state="translated">这个函数只有sv_true()和friends使用,而且只有当后者的参数既不是SvPOK、SvIOK也不是SvNOK时才使用。如果标志中包含SV_GMAGIC,那么它先做一个mg_get()。</target>
        </trans-unit>
        <trans-unit id="0b5776fa05d807fc6265ae0f0ad2309322f8e80a" translate="yes" xml:space="preserve">
          <source>This function is part of the experimental development API, and may change or disappear without notice.</source>
          <target state="translated">这个功能是实验性开发API的一部分,可能会在没有通知的情况下改变或消失。</target>
        </trans-unit>
        <trans-unit id="df4b28e7c0c75c36faca5ca1d70518986b2de4c0" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;basename(1)&lt;/code&gt; . It does &lt;b&gt;NOT&lt;/b&gt; always return the file name portion of a path as you might expect. To be safe, if you want the file name portion of a path use &lt;code&gt;fileparse()&lt;/code&gt; .</source>
          <target state="translated">提供此功能是为了与Unix shell命令 &lt;code&gt;basename(1)&lt;/code&gt; 兼容。它&lt;b&gt;不&lt;/b&gt;总是返回路径的文件名部分，你可能期望。为了安全起见，如果您想要路径的文件名部分，请使用 &lt;code&gt;fileparse()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="652405f4a5d205fef6e05d3e71213e7a84c66d2a" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;basename(1)&lt;/code&gt;. It does &lt;b&gt;NOT&lt;/b&gt; always return the file name portion of a path as you might expect. To be safe, if you want the file name portion of a path use &lt;code&gt;fileparse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb4ec1fbe8c66b8f2020144f5701828bedcfe14" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;dirname(1)&lt;/code&gt; and has inherited some of its quirks. In spite of its name it does &lt;b&gt;NOT&lt;/b&gt; always return the directory name as you might expect. To be safe, if you want the directory name of a path use &lt;code&gt;fileparse()&lt;/code&gt; .</source>
          <target state="translated">提供此函数是为了与Unix shell命令 &lt;code&gt;dirname(1)&lt;/code&gt; 兼容，并且继承了它的一些怪癖。尽管它的名字它&lt;b&gt;不&lt;/b&gt;总是返回正如你所预料的目录名。为了安全起见，如果您想要路径的目录名称，请使用 &lt;code&gt;fileparse()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e38b64af2f6199864b86fbb0e715f9bad1e1c8ab" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility with the Unix shell command &lt;code&gt;dirname(1)&lt;/code&gt; and has inherited some of its quirks. In spite of its name it does &lt;b&gt;NOT&lt;/b&gt; always return the directory name as you might expect. To be safe, if you want the directory name of a path use &lt;code&gt;fileparse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43d447b561f6a59c989012be7a2b442524af3a6" translate="yes" xml:space="preserve">
          <source>This function is rarely used since you will usually get the value of a constant by having that constant imported into your package by listing the constant name in the &lt;code&gt;use Win32API::File&lt;/code&gt; statement and then simply using the constant name in your code [perhaps followed by &lt;code&gt;()&lt;/code&gt;]. This function is useful for verifying constant names not in Perl code, for example, after prompting a user to type in a constant name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2335958f876fe8dc65dba75c5931c4ccbae47d62" translate="yes" xml:space="preserve">
          <source>This function is similar to a &lt;a href=&quot;#eval-EXPR&quot;&gt;string eval&lt;/a&gt;, except it always parses its argument (or &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if EXPR is omitted) as a string of independent bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02937778415d96c12ca24363d4faada4d7809ec7" translate="yes" xml:space="preserve">
          <source>This function is slightly neater and more convenient than the otherwise-equivalent code</source>
          <target state="translated">这个函数比其他等价的代码略微整洁和方便一些</target>
        </trans-unit>
        <trans-unit id="824fffad4b877549e966fe37c98ad5fa083fe68c" translate="yes" xml:space="preserve">
          <source>This function is the implementation of the &lt;a href=&quot;#LINKLIST&quot;&gt;&quot;LINKLIST&quot;&lt;/a&gt; macro. It should not be called directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253b045013c433366a31c2cad960bf3283fd7d39" translate="yes" xml:space="preserve">
          <source>This function is the implementation of the &lt;a href=&quot;#LINKLIST&quot;&gt;LINKLIST&lt;/a&gt; macro. It should not be called directly.</source>
          <target state="translated">此功能是&lt;a href=&quot;#LINKLIST&quot;&gt;LINKLIST&lt;/a&gt;宏的实现。不应直接调用它。</target>
        </trans-unit>
        <trans-unit id="2a063dac587bf0c596a82a9c061b8f58b0075f3f" translate="yes" xml:space="preserve">
          <source>This function is the reason for &lt;code&gt;Test&lt;/code&gt; 's existence. It's the basic function that handles printing &quot;&lt;code&gt;ok&lt;/code&gt; &quot; or &quot;&lt;code&gt;not ok&lt;/code&gt; &quot;, along with the current test number. (That's what &lt;code&gt;Test::Harness&lt;/code&gt; wants to see.)</source>
          <target state="translated">此功能是 &lt;code&gt;Test&lt;/code&gt; 存在的原因。这是处理打印&amp;ldquo; &lt;code&gt;ok&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;not ok&lt;/code&gt; &amp;rdquo;以及当前测试编号的基本功能。（这就是 &lt;code&gt;Test::Harness&lt;/code&gt; 想要看到的。）</target>
        </trans-unit>
        <trans-unit id="6652ee7354b55bf19e0dd58db709c8e76f2ecef3" translate="yes" xml:space="preserve">
          <source>This function is the reason for &lt;code&gt;Test&lt;/code&gt;'s existence. It's the basic function that handles printing &quot;&lt;code&gt;ok&lt;/code&gt;&quot; or &quot;&lt;code&gt;not ok&lt;/code&gt;&quot;, along with the current test number. (That's what &lt;code&gt;Test::Harness&lt;/code&gt; wants to see.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077b1426e82943be7223b00766173ba5b1d4acf4" translate="yes" xml:space="preserve">
          <source>This function is used to create an in-memory gzip file with the minimum possible gzip header (exactly 10 bytes).</source>
          <target state="translated">这个函数用于创建一个内存中的gzip文件,其gzip头最小(正好是10字节)。</target>
        </trans-unit>
        <trans-unit id="4e0a2ccd31b9bdd8066d5b9d22011351f1760ec7" translate="yes" xml:space="preserve">
          <source>This function is used to uncompress an in-memory gzip file.</source>
          <target state="translated">该函数用于解压内存中的gzip文件。</target>
        </trans-unit>
        <trans-unit id="a3560ca8857460f655d69dd6b49d96a0f7f4a536" translate="yes" xml:space="preserve">
          <source>This function is useful for producing a directory tree identical to the intended distribution tree.</source>
          <target state="translated">这个函数对于生成一个与目标分布树相同的目录树非常有用。</target>
        </trans-unit>
        <trans-unit id="1163bbaebdc07bcad37b6297e8e95d441a65c0d1" translate="yes" xml:space="preserve">
          <source>This function is useful in two cases: a) finding the trailing text after a JSON object or b) parsing multiple JSON objects separated by non-JSON text (such as commas).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f19b2798743cc5e3f86e0124b7ddc89a4b3ff92" translate="yes" xml:space="preserve">
          <source>This function is very slow. Why? To compute fib(14), it first wants to compute fib(13) and fib(12), and add the results. But to compute fib(13), it first has to compute fib(12) and fib(11), and then it comes back and computes fib(12) all over again even though the answer is the same. And both of the times that it wants to compute fib(12), it has to compute fib(11) from scratch, and then it has to do it again each time it wants to compute fib(13). This function does so much recomputing of old results that it takes a really long time to run---fib(14) makes 1,200 extra recursive calls to itself, to compute and recompute things that it already computed.</source>
          <target state="translated">这个功能非常慢。为什么呢?它要计算fib(14),首先要计算fib(13)和fib(12),然后把结果相加。但是要计算fib(13),它先要计算fib(12)和fib(11),然后再回来重新计算fib(12),尽管答案是一样的。而且两次要计算fib(12)的时候,都要从头开始计算fib(11),然后每次要计算fib(13)的时候又要重新计算。这个函数对旧的结果做了太多的重新计算,以至于它需要很长的时间来运行------fib(14)对自己做了1200次额外的递归调用,来计算和重新计算它已经计算过的东西。</target>
        </trans-unit>
        <trans-unit id="658ccab5957d9fcb5acf02b75800173326f8ac18" translate="yes" xml:space="preserve">
          <source>This function is visible to extensions included in the Perl core.</source>
          <target state="translated">这个函数对Perl核心中的扩展是可见的。</target>
        </trans-unit>
        <trans-unit id="8ab6ba31d01a4a2d9764121a075a301c39db9fb7" translate="yes" xml:space="preserve">
          <source>This function is wrapped by the macro &lt;code&gt;HvFILL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bced169d4ae2df2074f45ec48dfe76cbdcf9e8fb" translate="yes" xml:space="preserve">
          <source>This function isn't exported out of the Perl core.</source>
          <target state="translated">这个函数并没有从Perl核心中导出。</target>
        </trans-unit>
        <trans-unit id="c4db11cb4bc493fbed9591c0f0b07c2a5d596564" translate="yes" xml:space="preserve">
          <source>This function looks at the sequence of bytes between &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt;, which are assumed to be encoded in ASCII/Latin1, and returns how many of them would change should the string be translated into UTF-8. Due to the nature of UTF-8, each of these would occupy two bytes instead of the single one in the input string. Thus, this function returns the precise number of bytes the string would expand by when translated to UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b0e9309a1e4a7388d6c16c7d9a1708e320c5c8" translate="yes" xml:space="preserve">
          <source>This function makes use of the fact that the presence of tainted data anywhere within an expression renders the entire expression tainted. It would be inefficient for every operator to test every argument for taintedness. Instead, the slightly more efficient and conservative approach is used that if any tainted value has been accessed within the same expression, the whole expression is considered tainted.</source>
          <target state="translated">这个函数利用了这样一个事实,即在一个表达式中的任何地方出现污点数据都会使整个表达式受到污染。如果每个操作者都要测试每个参数的污染性,效率会很低。相反,我们采用了稍微高效和保守的方法,即如果在同一个表达式中访问了任何污点值,则整个表达式被认为是污点。</target>
        </trans-unit>
        <trans-unit id="2fa84a514560c863f7089eb7ca24d6683d764569" translate="yes" xml:space="preserve">
          <source>This function may redirect error popups associated with hardware errors (Disk not ready etc.) and software exceptions to the file POPUPLOG.OS2 at the root directory of the specified drive. Overrides OS2::Error() specified by individual programs. Given argument undef will disable redirection.</source>
          <target state="translated">这个函数可以将与硬件错误(Disk not ready等)和软件异常相关的错误弹出窗口重定向到指定驱动器根目录下的文件POPUPLOG.OS2。覆盖OS2::Error(),由个别程序指定。给定参数 undef 将禁用重定向。</target>
        </trans-unit>
        <trans-unit id="359169950ca6c9680b4088bbfb715818c6d49e24" translate="yes" xml:space="preserve">
          <source>This function may return the pathname in Unicode if it cannot be represented in the system codepage. Use Win32::GetANSIPathName() before passing the path to a system call or another program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1496d823153f206625abfb243ff632e61577c117" translate="yes" xml:space="preserve">
          <source>This function modifies and queries the program's underlying locale. Users of this function should read &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;, whch provides a comprehensive discussion of Perl locale handling, knowledge of which is necessary to properly use this function. It contains &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;a section devoted to this function&lt;/a&gt;. The discussion here is merely a summary reference for &lt;code&gt;setlocale()&lt;/code&gt;. Note that Perl itself is almost entirely unaffected by the locale except within the scope of &lt;code&gt;&quot;use locale&quot;&lt;/code&gt;. (Exceptions are listed in &lt;a href=&quot;perllocale#Not-within-the-scope-of-%22use-locale%22&quot;&gt;&quot;Not within the scope of &quot;use locale&quot;&quot; in perllocale&lt;/a&gt;, and locale-dependent functions within the POSIX module ARE always affected by the current locale.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a86c3308b6ed4c9bad7b6ede75664c2fe49a26e" translate="yes" xml:space="preserve">
          <source>This function must only be called during parsing of a subroutine; after &lt;a href=&quot;#start_subparse&quot;&gt;&quot;start_subparse&quot;&lt;/a&gt; has been called. It might allocate lexical variables on the pad for the current subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c43d91069a9273330810504102211439262d63" translate="yes" xml:space="preserve">
          <source>This function never returns; &lt;code&gt;croak&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; and friends.</source>
          <target state="translated">该函数永不返回； &lt;code&gt;croak&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 和朋友。</target>
        </trans-unit>
        <trans-unit id="50a0a533f960128e3a086dc96db9b1aafa52d5a7" translate="yes" xml:space="preserve">
          <source>This function normally returns a list. Suppose you memoize it and merge the caches:</source>
          <target state="translated">这个函数通常返回一个列表。假设你将其记忆并合并缓存。</target>
        </trans-unit>
        <trans-unit id="3b85997713311e08de3e59dac5499d89e1dccd03" translate="yes" xml:space="preserve">
          <source>This function only exists if Perl has been compiled to use ithreads.</source>
          <target state="translated">只有当Perl被编译成使用ithreads时,这个函数才会存在。</target>
        </trans-unit>
        <trans-unit id="61fee0518a7d8b237d34517bc719658c6b719ec4" translate="yes" xml:space="preserve">
          <source>This function only operates on officially approved (not provisional) named sequences.</source>
          <target state="translated">该功能仅在正式批准的(非临时)命名序列上运行。</target>
        </trans-unit>
        <trans-unit id="e59aa3c08f27111519b6ecd9388b33347100905a" translate="yes" xml:space="preserve">
          <source>This function only works on &lt;code&gt;new()&lt;/code&gt; and it assumes &lt;code&gt;new()&lt;/code&gt; will return just a single object which isa &lt;code&gt;$class&lt;/code&gt; .</source>
          <target state="translated">该函数仅在 &lt;code&gt;new()&lt;/code&gt; 上起作用，并且假定 &lt;code&gt;new()&lt;/code&gt; 将仅返回单个对象isa &lt;code&gt;$class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="984502da18bc523751c7d6b5905d4dbe46c6f445" translate="yes" xml:space="preserve">
          <source>This function only works on &lt;code&gt;new()&lt;/code&gt; and it assumes &lt;code&gt;new()&lt;/code&gt; will return just a single object which isa &lt;code&gt;$class&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb7d023997a73d6817733ba90181d612a2b1cdc" translate="yes" xml:space="preserve">
          <source>This function opens either the</source>
          <target state="translated">该功能可以打开</target>
        </trans-unit>
        <trans-unit id="441aca7229169cbbddd3f285c046a735dc532182" translate="yes" xml:space="preserve">
          <source>This function performs syntax checking on a prototype, &lt;code&gt;proto&lt;/code&gt; . If &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; is true, any illegal characters or mismatched brackets will trigger illegalproto warnings, declaring that they were detected in the prototype for &lt;code&gt;name&lt;/code&gt; .</source>
          <target state="translated">此函数对原型 &lt;code&gt;proto&lt;/code&gt; 执行语法检查。如果 &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; 为true，则任何非法字符或不匹配的括号将触发非法原型警告，声明已在原型中检测到 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdadd704268c26b65382b6957bee64f00d111837" translate="yes" xml:space="preserve">
          <source>This function performs syntax checking on a prototype, &lt;code&gt;proto&lt;/code&gt;. If &lt;code&gt;warn&lt;/code&gt; is true, any illegal characters or mismatched brackets will trigger illegalproto warnings, declaring that they were detected in the prototype for &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91930e6b34fa8d1a9857a2f7de94cb11275f2880" translate="yes" xml:space="preserve">
          <source>This function performs the work of the legacy functions gethostbyname(), getservbyname(), inet_aton() and pack_sockaddr_in().</source>
          <target state="translated">这个函数执行传统函数gethostbyname()、getervbyname()、inet_aton()和pack_sockaddr_in()的工作。</target>
        </trans-unit>
        <trans-unit id="b69a639ae94b0e84e8a91026a470893dc8e2e4fa" translate="yes" xml:space="preserve">
          <source>This function performs the work of the legacy functions unpack_sockaddr_in(), inet_ntoa(), gethostbyaddr() and getservbyport().</source>
          <target state="translated">这个函数执行传统函数unpack_sockaddr_in()、inet_ntoa()、gethostbyaddr()和getervbyport()的工作。</target>
        </trans-unit>
        <trans-unit id="3d1364c8524baa88f5749c97cf4b3c3b92b20d7d" translate="yes" xml:space="preserve">
          <source>This function places an advisory lock on a shared variable or referenced object contained in</source>
          <target state="translated">这个函数将咨询锁放置在一个共享变量或引用对象上,该对象包含在这个函数中。</target>
        </trans-unit>
        <trans-unit id="0a506b1319a241ed6545a1f6f58a9a222f9ce6e0" translate="yes" xml:space="preserve">
          <source>This function process get magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16532d91a655b7f55374b1ff4cdf45a2891edbdc" translate="yes" xml:space="preserve">
          <source>This function reads the environment and generates an appropriate argument hash from it. If given any arguments in &lt;code&gt;%extra_args&lt;/code&gt;, these will override the environmental defaults. In accepts &lt;code&gt;harness_class&lt;/code&gt; (which defaults to &lt;code&gt;TAP::Harness&lt;/code&gt;), and any argument the harness class accepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f7d1c76b617d33ccfffcd0313dd243dca9de11" translate="yes" xml:space="preserve">
          <source>This function returns FALSE for strings containing any code points above the Unicode max of 0x10FFFF or surrogate code points, but accepts non-character code points per &lt;a href=&quot;http://www.unicode.org/versions/corrigendum9.html&quot;&gt;Corrigendum #9&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d7a81a9a245d7438fa448545d3c2bf90157fa3" translate="yes" xml:space="preserve">
          <source>This function returns FALSE for strings containing any code points above the Unicode max of 0x10FFFF, surrogate code points, or non-character code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aa5d944aea63735721eab1c7c43ad176915f14" translate="yes" xml:space="preserve">
          <source>This function returns a string of &lt;code&gt;boot_$ModuleName&lt;/code&gt; prototypes for each @modules.</source>
          <target state="translated">该函数为每个@modules 返回一个 &lt;code&gt;boot_$ModuleName&lt;/code&gt; 原型字符串。</target>
        </trans-unit>
        <trans-unit id="4f9139a43ab3e4540adae4f5d5020617b2e643b8" translate="yes" xml:space="preserve">
          <source>This function returns a string of calls to &lt;code&gt;newXS()&lt;/code&gt; that glue the module</source>
          <target state="translated">此函数返回对 &lt;code&gt;newXS()&lt;/code&gt; 的调用字符串，以将模块粘在一起</target>
        </trans-unit>
        <trans-unit id="621ba7bc642c79bf406939acb2b7c2b8df3903c7" translate="yes" xml:space="preserve">
          <source>This function returns an encoded version of the string ($str) given as argument.</source>
          <target state="translated">此函数返回作为参数的字符串($str)的编码版本。</target>
        </trans-unit>
        <trans-unit id="44086926e42f35072b303b091e9d9e0a7ca33b91" translate="yes" xml:space="preserve">
          <source>This function returns empty-list if given anything other than a formally valid language tag.</source>
          <target state="translated">如果给定的不是正式有效的语言标签,该函数返回空列表。</target>
        </trans-unit>
        <trans-unit id="df38023076a41559f21264db80802e81879d618e" translate="yes" xml:space="preserve">
          <source>This function returns the count of used buckets in the hash. It is expensive to calculate and the value is NOT cached, so avoid use of this function in production code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865f16a5f2b57a820e8bf84b966f732abf36eb70" translate="yes" xml:space="preserve">
          <source>This function returns the plain text version of the string given as argument. The lines of the result are &quot;\n&quot; terminated, even if the $str argument contains &quot;\r\n&quot; terminated lines.</source>
          <target state="translated">这个函数返回作为参数的字符串的纯文本版本。即使$str参数包含&quot;\r\n &quot;终止的行,结果中的行也是&quot;\n &quot;终止的。</target>
        </trans-unit>
        <trans-unit id="a5ab5fe7ba11e207b5f81eca8f934ec6da3fef9c" translate="yes" xml:space="preserve">
          <source>This function returns the string that results from decoding the scalar value</source>
          <target state="translated">该函数返回标量值解码后的字符串。</target>
        </trans-unit>
        <trans-unit id="3d6da7152ac538ef94012168e86ee3522aaad549" translate="yes" xml:space="preserve">
          <source>This function returns the string with the first character modified if it is a control character. It converts it to ^X format first, so that &quot;\cG&quot; becomes &quot;^G&quot;. This is used internally by &lt;a href=&quot;#SAFENAME&quot;&gt;B::GV::SAFENAME&lt;/a&gt;, but you can call it directly.</source>
          <target state="translated">如果它是控制字符，则此函数返回修改后的第一个字符的字符串。它将首先将其转换为^ X格式，以便&amp;ldquo; \ cG&amp;rdquo;变为&amp;ldquo; ^ G&amp;rdquo;。由&lt;a href=&quot;#SAFENAME&quot;&gt;B :: GV :: SAFENAME&lt;/a&gt;内部使用，但是您可以直接调用它。</target>
        </trans-unit>
        <trans-unit id="58003204cd5bf3cc0d766f8388948446f273cd60" translate="yes" xml:space="preserve">
          <source>This function returns the total number of buckets the hash holds, or would hold if the array were created. (When a hash is freshly created the array may not be allocated even though this value will be non-zero.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4a068b79e8f40c3a9e262ab52eb09f9c93a717" translate="yes" xml:space="preserve">
          <source>This function sets the default device and directory for the process. It is identical to the built-in chdir() operator, except that the change persists after Perl exits. It returns a true value on success, and &lt;code&gt;undef&lt;/code&gt; if it encounters an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3960f619466a09edf20242d0c7f969690cbc6219" translate="yes" xml:space="preserve">
          <source>This function should be as efficient as possible to keep your programs running as fast as possible.</source>
          <target state="translated">这个功能应该尽可能地提高工作效率,以保证你的程序尽可能快地运行。</target>
        </trans-unit>
        <trans-unit id="3a1ef4b3781258f0fdbabb5991f2b0a7c13aaadc" translate="yes" xml:space="preserve">
          <source>This function should have been named wantlist() instead.</source>
          <target state="translated">这个函数应该被命名为wantlist()。</target>
        </trans-unit>
        <trans-unit id="0b507d2e008bacdbb9e54edf21d0bbb50fdaab83" translate="yes" xml:space="preserve">
          <source>This function should not be called if you are using the object oriented interface since the it will interfere with the object destructor deleting the file.</source>
          <target state="translated">如果你使用的是面向对象的接口,这个函数就不应该被调用,因为它将会干扰对象析构器删除文件。</target>
        </trans-unit>
        <trans-unit id="c82575cb1cd9500578e180e36936964e6acbcd65" translate="yes" xml:space="preserve">
          <source>This function should not have a compatibility macro to define, say, &lt;code&gt;Perl_parse&lt;/code&gt; to &lt;code&gt;parse&lt;/code&gt; . It must be called as &lt;code&gt;Perl_parse&lt;/code&gt; .</source>
          <target state="translated">该函数不应具有用于定义要 &lt;code&gt;parse&lt;/code&gt; &lt;code&gt;Perl_parse&lt;/code&gt; 的兼容性宏。它必须称为 &lt;code&gt;Perl_parse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63eb3b3ba108688ddd872a95b52c197f8b6499d3" translate="yes" xml:space="preserve">
          <source>This function should only be used to display the actual OS name to the user; it should not be used to determine the class of operating systems this system belongs to. The Win32::GetOSName(), Win32::GetOSVersion, Win32::GetProductInfo() and Win32::GetSystemMetrics() functions provide the base information to check for certain capabilities, or for families of OS releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd99feaf61a2bec56d635937abeb8d24fef9d878" translate="yes" xml:space="preserve">
          <source>This function simply calls the Microsoft C library _getdcwd() function.</source>
          <target state="translated">这个函数只是简单地调用微软C库的_getdcwd()函数。</target>
        </trans-unit>
        <trans-unit id="7c73c162d2f4a3c57002d94f30e626af9a64555c" translate="yes" xml:space="preserve">
          <source>This function simply returns a string defining the same &lt;code&gt;EXTERN_C&lt;/code&gt; macro as</source>
          <target state="translated">该函数仅返回定义与 &lt;code&gt;EXTERN_C&lt;/code&gt; 宏相同的字符串。</target>
        </trans-unit>
        <trans-unit id="9ab2ac7d8042c579036bf811ff64ad55b40d9830" translate="yes" xml:space="preserve">
          <source>This function skips over the automatic calls to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; made on the behalf of the debugger. If the stack frame requested was a sub called by &lt;code&gt;DB::sub&lt;/code&gt; , the return value will be the frame for the call to &lt;code&gt;DB::sub&lt;/code&gt; , since that has the correct line number/etc. for the call site. If</source>
          <target state="translated">此函数跳过代表调试器对 &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; 的自动调用。如果请求的堆栈帧是由 &lt;code&gt;DB::sub&lt;/code&gt; sub调用的子帧，则返回值将是调用 &lt;code&gt;DB::sub&lt;/code&gt; 的帧，因为它具有正确的行号/等。用于呼叫站点。如果</target>
        </trans-unit>
        <trans-unit id="f1861ae5b3c09bcddcc47e8c0460228b36a9717f" translate="yes" xml:space="preserve">
          <source>This function skips over the automatic calls to &lt;code&gt;&amp;amp;DB::sub&lt;/code&gt; made on the behalf of the debugger. If the stack frame requested was a sub called by &lt;code&gt;DB::sub&lt;/code&gt;, the return value will be the frame for the call to &lt;code&gt;DB::sub&lt;/code&gt;, since that has the correct line number/etc. for the call site. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110e361d90fd374a271ccdacfa1a475088fcdc8e" translate="yes" xml:space="preserve">
          <source>This function takes a codeblock as its only argument, and it has a prototype. It will execute the codeblock, intercepting any generated events in the process. It will return an array reference with all the generated event objects. All events should be subclasses of &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1ed900c36dd5852fb31f0242bde189d87ee34e" translate="yes" xml:space="preserve">
          <source>This function takes a list of 0 or more language tags that constitute a given user's Accept-Language list, and returns a list of tags for</source>
          <target state="translated">这个函数接收构成用户接受语言列表的0个或更多语言标签的列表,并返回一个标签列表,供用户使用。</target>
        </trans-unit>
        <trans-unit id="bddbbd4becb2f5cc5272150e5ca82b4b58f7fa5f" translate="yes" xml:space="preserve">
          <source>This function takes a scalar argument and returns a boolean value indicating whether the argument meets the &quot;lax&quot; rules for a version number. Leading and trailing spaces are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c08de34d39f2e0da8affe01dbc6fa96a8b507f" translate="yes" xml:space="preserve">
          <source>This function takes a scalar argument and returns a boolean value indicating whether the argument meets the &quot;strict&quot; rules for a version number. Leading and trailing spaces are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e20c9e90738e4e12b4b244ae6847d7d7fb0c7dd" translate="yes" xml:space="preserve">
          <source>This function takes a variable number of arguments, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; style. The argument list should end with &lt;code&gt;...&lt;/code&gt; , like this:</source>
          <target state="translated">此函数采用可变数量的参数，即 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 样式。参数列表应以 &lt;code&gt;...&lt;/code&gt; 结尾，如下所示：</target>
        </trans-unit>
        <trans-unit id="cf2eecbd5d099ce08ffbe9b809327bd3414ba65b" translate="yes" xml:space="preserve">
          <source>This function takes no arguments, and as far as &lt;code&gt;Memoize&lt;/code&gt; is concerned, it always returns the same result. &lt;code&gt;Memoize&lt;/code&gt; is wrong, of course, and the memoized version of this function will call &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; once to get the current time, and it will return that same time every time you call it after that.</source>
          <target state="translated">此函数不带任何参数，就 &lt;code&gt;Memoize&lt;/code&gt; 而言，它始终返回相同的结果。当然， &lt;code&gt;Memoize&lt;/code&gt; 是错误的，此函数的已记忆版本将调用 &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; 一次以获取当前时间，并且此后每次调用它都会返回相同的时间。</target>
        </trans-unit>
        <trans-unit id="559b31c7b52a11340d8d10694e3f1b4f8fecacfa" translate="yes" xml:space="preserve">
          <source>This function takes no arguments, and as far as &lt;code&gt;Memoize&lt;/code&gt; is concerned, it always returns the same result. &lt;code&gt;Memoize&lt;/code&gt; is wrong, of course, and the memoized version of this function will call &lt;code&gt;time&lt;/code&gt; once to get the current time, and it will return that same time every time you call it after that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a28d0d2b0d75e1d681cb10ebfe192aa26bfeab" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is an empty string, it is interpreted as referring to the &lt;code&gt;main&lt;/code&gt; package. If CLASSNAME is omitted, the current package is used. Because a &lt;a href=&quot;#bless-REF%2CCLASSNAME&quot;&gt;&lt;code&gt;bless&lt;/code&gt;&lt;/a&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the method doing the blessing. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edb4f65abb2fc47967dac5333a9e803321aac25" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is omitted, the current package is used. Because a &lt;code&gt;&lt;a href=&quot;bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the function doing the blessing. See &lt;a href=&quot;../perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="translated">此函数告诉REF所引用的对象它现在是CLASSNAME包中的一个对象。如果省略CLASSNAME，则使用当前包。由于 &lt;code&gt;&lt;a href=&quot;bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; 通常是构造函数中的最后一件事，因此为了方便起见，它返回引用。如果派生类可能继承祝福功能，则始终使用两个参数的版本。有关&lt;a href=&quot;../perlobj&quot;&gt;对象&lt;/a&gt;的祝福（和祝福），请参阅perlobj。</target>
        </trans-unit>
        <trans-unit id="264717bee5831f635e17b82abeba8fa8b801090b" translate="yes" xml:space="preserve">
          <source>This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package. If CLASSNAME is omitted, the current package is used. Because a &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; is often the last thing in a constructor, it returns the reference for convenience. Always use the two-argument version if a derived class might inherit the function doing the blessing. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about the blessing (and blessings) of objects.</source>
          <target state="translated">此函数告诉REF所引用的对象它现在是CLASSNAME包中的一个对象。如果省略CLASSNAME，则使用当前包。由于 &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; 通常是构造函数中的最后一件事，因此为了方便起见，它返回引用。如果派生类可能继承祝福功能，则始终使用两个参数的版本。有关&lt;a href=&quot;perlobj&quot;&gt;对象&lt;/a&gt;的祝福（和祝福），请参阅perlobj。</target>
        </trans-unit>
        <trans-unit id="5d01eea1f06346371db6a328408650ca1c6b5ca7" translate="yes" xml:space="preserve">
          <source>This function uses the &lt;code&gt;load&lt;/code&gt; function or the &lt;code&gt;autoload_remote&lt;/code&gt; function from Module::Load under the hood.</source>
          <target state="translated">此函数使用引擎盖下Module :: Load 的 &lt;code&gt;load&lt;/code&gt; 函数或 &lt;code&gt;autoload_remote&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="f87dbe6925db468abc769225ebccdc2e0259cd96" translate="yes" xml:space="preserve">
          <source>This function was copied from &lt;code&gt;Sub::Name::subname&lt;/code&gt; and renamed to the naming convention of this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511fcaf3db3ec5f256e19c49e3e9d50ebc6f2024" translate="yes" xml:space="preserve">
          <source>This function was inspired by &lt;code&gt;sub_fullname&lt;/code&gt; from &lt;a href=&quot;Sub::Identify&quot;&gt;Sub::Identify&lt;/a&gt;. The remaining functions that &lt;code&gt;Sub::Identify&lt;/code&gt; implements can easily be emulated using regexp operations, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde06d7625f57e7da1a76d11827641ea58931d51" translate="yes" xml:space="preserve">
          <source>This function was useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want. If you do need this precise functionality, use instead &lt;code&gt;&lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">此功能对于希望同时处理具有Unicode属性的EBCDIC和ASCII平台的代码很有用，但是从Perl v5.20开始，大多数代码几乎看不到平台之间的区别，因此该功能不太可能是你要。如果确实需要此精确功能，请改用 &lt;code&gt;&lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72cf5666687c9403c19f9817bf07791c2373d1e9" translate="yes" xml:space="preserve">
          <source>This function was useful for code that wanted to handle both EBCDIC and ASCII platforms with Unicode properties, but starting in Perl v5.20, the distinctions between the platforms have mostly been made invisible to most code, so this function is quite unlikely to be what you want. If you do need this precise functionality, use instead &lt;code&gt;&lt;a href=&quot;perlapi#utf8_to_uvchr_buf&quot;&gt;NATIVE_TO_UNI(utf8_to_uvchr_buf(...))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;perlapi#utf8n_to_uvchr&quot;&gt;NATIVE_TO_UNI(utf8n_to_uvchr(...))&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e428d7e7165fe610c2ec2aae0a7a0abdc81b5d5a" translate="yes" xml:space="preserve">
          <source>This function will calculate and return the binary digest of the bytes of the given file. The function will croak if it fails to open or read the file.</source>
          <target state="translated">该函数将计算并返回给定文件的字节数的二进制摘要。如果无法打开或读取文件,该函数将崩溃。</target>
        </trans-unit>
        <trans-unit id="fd596d51482a44fe07dfcd21f50a65f8052fad22" translate="yes" xml:space="preserve">
          <source>This function will collect the data described in &lt;a href=&quot;#The-hash-structure&quot;&gt;&quot;The hash structure&quot;&lt;/a&gt; below, and return that as a hash reference. It optionally accepts an option to include more entries from %ENV. See &lt;a href=&quot;#environment&quot;&gt;&quot;environment&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e710ca7b4ebf9ab0536802088bacbcbd1c5ec7fb" translate="yes" xml:space="preserve">
          <source>This function will concatenate all arguments, calculate the MD5 digest of this &quot;message&quot;, and return it in binary form. The returned string will be 16 bytes long.</source>
          <target state="translated">这个函数将连接所有参数,计算这个 &quot;消息 &quot;的MD5摘要,并以二进制形式返回。返回的字符串将是16个字节长。</target>
        </trans-unit>
        <trans-unit id="c489f76d5438c6d22b3cb418ff3f520db9ae337f" translate="yes" xml:space="preserve">
          <source>This function will convert to UTF-8 (and not warn) even code points that aren't legal Unicode or are problematic, unless &lt;code&gt;flags&lt;/code&gt; contains one or more of the following flags:</source>
          <target state="translated">除非 &lt;code&gt;flags&lt;/code&gt; 包含以下一个或多个标志，否则该功能将转换为UTF-8（并且不会发出警告），甚至是非合法Unicode或有问题的代码点。</target>
        </trans-unit>
        <trans-unit id="bfa2e2cbe1081798fb5dd07961b2589448f68e0d" translate="yes" xml:space="preserve">
          <source>This function will croak if it can't connect to the syslog daemon.</source>
          <target state="translated">如果不能连接到syslog守护进程,这个功能就会崩溃。</target>
        </trans-unit>
        <trans-unit id="387cb216c9e75c1a719a69623bb869c50aab490e" translate="yes" xml:space="preserve">
          <source>This function will croak if the determined encoding isn't recognized by the Encode module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fb41e9972ce033692cb3bc009110bcfa6b3909" translate="yes" xml:space="preserve">
          <source>This function will not be confused by overloading or blessing. In internals terms, this extracts the regexp pointer out of the PERL_MAGIC_qr structure so it cannot be fooled.</source>
          <target state="translated">这个函数不会被重载或祝福所混淆。用内部术语来说,这个函数从PERL_MAGIC_qr结构中提取regexp指针,所以不会被骗。</target>
        </trans-unit>
        <trans-unit id="e051c29d133cbded6b7972c7afb22f014eeabf3e" translate="yes" xml:space="preserve">
          <source>This function will return an ANSI folder path if the long name cannot be represented in the system codepage. Use Win32::GetLongPathName() on the result of Win32::GetFolderPath() if you want the Unicode version of the folder name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf7565f2d5b49ccdcf0417e04e7ffb7876b15d0" translate="yes" xml:space="preserve">
          <source>This function will split up your program into files that the AutoLoader module can handle. It is used by both the standard perl libraries and by the MakeMaker utility, to automatically configure libraries for autoloading.</source>
          <target state="translated">这个功能将把你的程序分割成AutoLoader模块可以处理的文件。它被标准的perl库和MakeMaker实用程序使用,以自动配置自动加载的库。</target>
        </trans-unit>
        <trans-unit id="7095163faacd01b9504e393cc3471c37894d46cb" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;a href=&quot;#chroot-FILENAME&quot;&gt;&lt;code&gt;chroot&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5d34127b41d73e4ad33707ae6e0f3468fa3088" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;code&gt;&lt;a href=&quot;chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">此函数的工作方式类似于具有相同名称的系统调用：它使命名目录成为您的进程及其所有子级以 &lt;code&gt;/&lt;/code&gt; 开头的所有其他路径名的新根目录。 （它不会更改您当前的工作目录，该目录不会受到影响。）出于安全原因，此调用仅限于超级用户。如果省略FILENAME，则对 &lt;code&gt;$_&lt;/code&gt; 执行 &lt;code&gt;&lt;a href=&quot;chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4f0880e6d532a1f27ed2ddbef9335a9b1af6165" translate="yes" xml:space="preserve">
          <source>This function works like the system call by the same name: it makes the named directory the new root directory for all further pathnames that begin with a &lt;code&gt;/&lt;/code&gt; by your process and all its children. (It doesn't change your current working directory, which is unaffected.) For security reasons, this call is restricted to the superuser. If FILENAME is omitted, does a &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">此函数的工作方式类似于具有相同名称的系统调用：它使命名目录成为您的进程及其所有子级以 &lt;code&gt;/&lt;/code&gt; 开头的所有其他路径名的新根目录。 （它不会更改您当前的工作目录，该目录不会受到影响。）出于安全原因，此调用仅限于超级用户。如果省略FILENAME，则对 &lt;code&gt;$_&lt;/code&gt; 执行 &lt;code&gt;&lt;a href=&quot;functions/chroot&quot;&gt;chroot&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b573658383b8e6308fcb8df540075814ffcb1eb9" translate="yes" xml:space="preserve">
          <source>This function writes an EOF to a file handle, if the device driver supports this operation. Its primary use is to send an EOF to a subprocess through a pipe opened for writing without closing the pipe. It returns a true value if successful, and &lt;code&gt;undef&lt;/code&gt; if it encounters an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6e36bc13a174b6b1778b35a2d60399ce6095bb" translate="yes" xml:space="preserve">
          <source>This function, if given a language tag, returns all language tags that are alternate forms of this language tag. (I.e., tags which refer to the same language.) This is meant to handle legacy tags caused by the minor changes in language tag standards over the years; and the x-/i- alternation is also dealt with.</source>
          <target state="translated">如果给定一个语言标签,这个函数将返回这个语言标签的所有替代形式的语言标签。(即指同一种语言的标签。)这是为了处理多年来语言标签标准的细微变化所导致的遗留标签;x-/i-交替也被处理。</target>
        </trans-unit>
        <trans-unit id="b8a93fcdf2125a7d09fd995b425967c3b4164e45" translate="yes" xml:space="preserve">
          <source>This function, if given a language tag, returns an encoding of it such that:</source>
          <target state="translated">如果给定一个语言标签,这个函数将返回它的编码,这样:</target>
        </trans-unit>
        <trans-unit id="ab422ba4ddb7cdb9c2c2585a4c8bf7188aa9975a" translate="yes" xml:space="preserve">
          <source>This function, which is included in the two export tags listed above, takes one or two arguments. The first is the glob pattern. The second is a set of flags ORed together. The available flags are listed below under &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS&lt;/a&gt;. If the second argument is omitted, &lt;code&gt;GLOB_CSH&lt;/code&gt; (or &lt;code&gt;GLOB_CSH|GLOB_NOCASE&lt;/code&gt; on VMS and DOSish systems) is used by default.</source>
          <target state="translated">上面列出的两个导出标记中包含的此函数采用一个或两个参数。首先是水珠图案。第二个是一组标志进行&amp;ldquo;或&amp;rdquo;运算。可用的标志在&lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS下列出&lt;/a&gt;。如果省略第二个参数，则默认使用 &lt;code&gt;GLOB_CSH&lt;/code&gt; （或在VMS和DOSish系统上为 &lt;code&gt;GLOB_CSH|GLOB_NOCASE&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="270550ffed57f85638e08b5ab27b3fa6e1378d46" translate="yes" xml:space="preserve">
          <source>This function, which is included in the two export tags listed above, takes one or two arguments. The first is the glob pattern. The second, if given, is a set of flags ORed together. The available flags and the default set of flags are listed below under &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;&quot;POSIX FLAGS&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7607d86adf25319082630a8f720c18a028dc2b55" translate="yes" xml:space="preserve">
          <source>This functionality is disabled for setuid scripts and for scripts run with &lt;b&gt;-T&lt;/b&gt;.</source>
          <target state="translated">对于setuid脚本和&lt;b&gt;-T&lt;/b&gt;运行的脚本，此功能被禁用。</target>
        </trans-unit>
        <trans-unit id="f8830a83703c17da0879b0b7888f8216be9d6342" translate="yes" xml:space="preserve">
          <source>This functionality is disabled for setuid scripts, for scripts run with &lt;a href=&quot;#-T&quot;&gt;&quot;-T&quot;&lt;/a&gt;, and for scripts run on a Perl built without &lt;code&gt;-DDEBUGGING&lt;/code&gt; support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7553b3094129fa58516257b0cce463898fb85b" translate="yes" xml:space="preserve">
          <source>This generates a compile-time error if you access a variable that was neither explicitly declared (using any of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
vars&lt;/code&gt; ) nor fully qualified. (Because this is to avoid variable suicide problems and subtle dynamic scoping issues, a merely &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; variable isn't good enough.) See &lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;, &lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;, &lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;, &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;, and &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt;.</source>
          <target state="translated">如果您访问既未明确声明（使用 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vars&lt;/code&gt; ）也未完全限定的变量，则会生成编译时错误。（因为这是为了避免变量自杀问题和细微的动态作用域问题，所以仅 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 变量是不够的。）请参阅&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;，&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;，&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;，&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;和&lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04dcf622c7ae471e31f3e87386651dc0f523184a" translate="yes" xml:space="preserve">
          <source>This generates a compile-time error if you access a variable that was neither explicitly declared (using any of &lt;code&gt;my&lt;/code&gt;, &lt;code&gt;our&lt;/code&gt;, &lt;code&gt;state&lt;/code&gt;, or &lt;code&gt;use vars&lt;/code&gt;) nor fully qualified. (Because this is to avoid variable suicide problems and subtle dynamic scoping issues, a merely &lt;code&gt;local&lt;/code&gt; variable isn't good enough.) See &lt;a href=&quot;perlfunc#my&quot;&gt;&quot;my&quot; in perlfunc&lt;/a&gt;, &lt;a href=&quot;perlfunc#our&quot;&gt;&quot;our&quot; in perlfunc&lt;/a&gt;, &lt;a href=&quot;perlfunc#state&quot;&gt;&quot;state&quot; in perlfunc&lt;/a&gt;, &lt;a href=&quot;perlfunc#local&quot;&gt;&quot;local&quot; in perlfunc&lt;/a&gt;, and &lt;a href=&quot;vars&quot;&gt;vars&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74c9a11ba157a546c0c89330b1cb3bdd1614525" translate="yes" xml:space="preserve">
          <source>This generates a runtime error if you use symbolic references (see &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;).</source>
          <target state="translated">如果使用符号引用，则会生成运行时错误（请参阅&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3b0f601577dbb5896904df9ff737e1fa0298974a" translate="yes" xml:space="preserve">
          <source>This gets interpreted as:</source>
          <target state="translated">这被解释为:</target>
        </trans-unit>
        <trans-unit id="70bf742be7e750bec7fa9fb8e4b6fe30ec9b5f65" translate="yes" xml:space="preserve">
          <source>This gives nasty overhead when you are trying to dynamically require modules at runtime, since you will need to change the module notation (&lt;code&gt;Acme::Comment&lt;/code&gt; ) to a file notation fitting the particular platform you are on.</source>
          <target state="translated">当您尝试在运行时动态要求模块时，这会带来讨厌的开销，因为您需要将模块符号（ &lt;code&gt;Acme::Comment&lt;/code&gt; ）更改为适合您所使用的特定平台的文件符号。</target>
        </trans-unit>
        <trans-unit id="216bc650b215bdce0b527db5f48a8452f5403d9b" translate="yes" xml:space="preserve">
          <source>This gives nasty overhead when you are trying to dynamically require modules at runtime, since you will need to change the module notation (&lt;code&gt;Acme::Comment&lt;/code&gt;) to a file notation fitting the particular platform you are on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c019885847002a06e56f60b480505499d5d7585" translate="yes" xml:space="preserve">
          <source>This gives the name of the extension (</source>
          <target state="translated">这给出了扩展名的名称(</target>
        </trans-unit>
        <trans-unit id="6663727bf6f9219b6a90ea1ea6946a59c195f810" translate="yes" xml:space="preserve">
          <source>This gives the short display label for each define, as used by &lt;code&gt;B::Concise&lt;/code&gt; and &lt;code&gt;perl -Dx&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342a7def02667aaf341bdacadaf48888e393c3fe" translate="yes" xml:space="preserve">
          <source>This gives the value of every &lt;code&gt;OPp&lt;/code&gt; define, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccb3b61d1478918319c14eea9dc5937ac460bf4" translate="yes" xml:space="preserve">
          <source>This gives you the chance to set some default values to your fields. The only argument is &lt;code&gt;$self&lt;/code&gt; with its indexes already set from the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b221eef709fb6d96fbb9db3f118edc097a1ba2d" translate="yes" xml:space="preserve">
          <source>This global modifies the argument given to &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; by &lt;code&gt;Params::Check::check()&lt;/code&gt; and is useful if you have a custom wrapper function around &lt;code&gt;Params::Check::check()&lt;/code&gt; . The value must be an integer, indicating the number of wrapper functions inserted between the real function call and &lt;code&gt;Params::Check::check()&lt;/code&gt; .</source>
          <target state="translated">该全局变量修改了 &lt;code&gt;Params::Check::check()&lt;/code&gt; 给 &lt;code&gt;&lt;a href=&quot;../functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; 的参数，如果您在 &lt;code&gt;Params::Check::check()&lt;/code&gt; 周围有一个自定义包装函数，则此方法很有用。该值必须是整数，表示在实函数调用和 &lt;code&gt;Params::Check::check()&lt;/code&gt; 之间插入的包装器函数的数量。</target>
        </trans-unit>
        <trans-unit id="e2793ac5b9f6e0e35f292e46fa45362370f25c5a" translate="yes" xml:space="preserve">
          <source>This global modifies the argument given to &lt;code&gt;caller()&lt;/code&gt; by &lt;code&gt;Params::Check::check()&lt;/code&gt; and is useful if you have a custom wrapper function around &lt;code&gt;Params::Check::check()&lt;/code&gt;. The value must be an integer, indicating the number of wrapper functions inserted between the real function call and &lt;code&gt;Params::Check::check()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8923baf9a118df6243078227c2bc3261ab6c170" translate="yes" xml:space="preserve">
          <source>This globally overrides the default behavior of calling &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; inside a thread, and effectively causes such calls to behave the same as &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; . In other words, with this setting, calling &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; causes only the thread to terminate.</source>
          <target state="translated">这将全局覆盖在线程内调用 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 的默认行为，并有效地导致此类调用的行为与 &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; 。换句话说，使用此设置，调用 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 只会导致线程终止。</target>
        </trans-unit>
        <trans-unit id="60974177d65f638974a74bbf69a2aed83266d31c" translate="yes" xml:space="preserve">
          <source>This globally overrides the default behavior of calling &lt;code&gt;exit()&lt;/code&gt; inside a thread, and effectively causes such calls to behave the same as &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt;. In other words, with this setting, calling &lt;code&gt;exit()&lt;/code&gt; causes only the thread to terminate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1a7a9bddd9acdc92fdc5c3e015da338283422a" translate="yes" xml:space="preserve">
          <source>This guarantees that STDOUT (where the test results appear) and STDERR (where the diagnostics appear) will stay in sync. The harness will display any diagnostics your tests emit on STDERR.</source>
          <target state="translated">这保证了STDOUT(显示测试结果的地方)和STDERR(显示诊断程序的地方)将保持同步。线束将在STDERR上显示您的测试发出的任何诊断程序。</target>
        </trans-unit>
        <trans-unit id="e0e3e5ed908d1238444298278d7f13a68bf8c54c" translate="yes" xml:space="preserve">
          <source>This guide assumes you have obtained a prebuilt archive from os4depot.net.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a4c1ea9375fac79bda6e86d1c0d58e79a8f06c" translate="yes" xml:space="preserve">
          <source>This had Test::Builder2 conditionals. This was fixed by removing the conditionals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06edcd446459b13f358d5f7a1e7f44f85855880a" translate="yes" xml:space="preserve">
          <source>This happened because the presence of overloading was checked too early, before any tie()d access was attempted. If the class of the value FETCH()ed from the tied variable does not change, a simple workaround for code that is to run on older Perl versions is to access the value (via &lt;code&gt;() = $foo&lt;/code&gt; or some such) immediately after tie()ing, so that after this call the</source>
          <target state="translated">发生这种情况的原因是，在尝试进行任何tie（）d访问之前，都太早检查了过载的存在。如果从绑定变量获取的值FETCH（）的类未更改，则在较早的Perl版本上运行的代码的一种简单解决方法是：在绑定后立即访问值（通过 &lt;code&gt;() = $foo&lt;/code&gt; 或诸如此类） （）ing，以便在此调用之后</target>
        </trans-unit>
        <trans-unit id="4f907111d1d29806bed6e772fe053aff55cf72f3" translate="yes" xml:space="preserve">
          <source>This happens because Berkeley DB uses dynamic memory to allocate buffers which will subsequently be written to the database file. Being dynamic, the memory could have been used for anything before DB malloced it. As Berkeley DB doesn't clear the memory once it has been allocated, the unused portions will contain random junk. In the case where a Perl script gets written to the database, the random junk will correspond to an area of dynamic memory that happened to be used during the compilation of the script.</source>
          <target state="translated">之所以会发生这种情况,是因为Berkeley DB使用动态内存来分配缓冲区,缓冲区随后将被写入数据库文件。由于是动态的,在DB malloced之前,内存可能已经被用于任何事情。由于Berkeley DB一旦分配了内存,就不会清除内存,因此未使用的部分将包含随机的垃圾。在Perl脚本被写入数据库的情况下,随机垃圾将对应于脚本编译过程中碰巧被使用的动态内存区域。</target>
        </trans-unit>
        <trans-unit id="a1a0c21f8deaf9e9c72ad918fbfe929256d08e89" translate="yes" xml:space="preserve">
          <source>This happens because is_deeply will unoverload all arguments unconditionally. It is probably best not to use is_deeply with overloading. For legacy reasons this is not likely to ever be fixed. If you would like a much better tool for this you should see &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt; Specifically &lt;a href=&quot;Test2::Tools::Compare&quot;&gt;Test2::Tools::Compare&lt;/a&gt; has an &lt;code&gt;is()&lt;/code&gt; function that works like &lt;code&gt;is_deeply&lt;/code&gt; with many improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2287d497a37220b85075e14fb44f3c5f11c4109c" translate="yes" xml:space="preserve">
          <source>This happens because you can't really share arbitrary data structures with foreign processes.</source>
          <target state="translated">发生这种情况是因为你不能真正与外来进程共享任意的数据结构。</target>
        </trans-unit>
        <trans-unit id="3663fa9d53c5bc8b1c430a10078b98451ddfbf78" translate="yes" xml:space="preserve">
          <source>This happens only if your perl is compiled to use stdio instead of perlio, which is the default. Some (maybe all?) stdios set error and eof flags that you may need to clear. The &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module defines &lt;code&gt;clearerr()&lt;/code&gt; that you can use. That is the technically correct way to do it. Here are some less reliable workarounds:</source>
          <target state="translated">仅当您的perl编译为使用stdio而不是perlio（这是默认设置）时，才会发生这种情况。一些（也许是全部？）stdio设置了错误和eof标志，您可能需要清除它们。该&lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt;模块定义 &lt;code&gt;clearerr()&lt;/code&gt; ，您可以使用。从技术上讲，这是正确的方法。以下是一些不太可靠的解决方法：</target>
        </trans-unit>
        <trans-unit id="40e2474ab2464f5a6d8b366f637789f861001327" translate="yes" xml:space="preserve">
          <source>This happens to avoid shell interpolation problems when whitespace is present in directory names.</source>
          <target state="translated">发生这种情况是为了避免目录名中出现空白时的shell插值问题。</target>
        </trans-unit>
        <trans-unit id="76f62e127c6c53c05eb19f5eae3fcd84ce29184a" translate="yes" xml:space="preserve">
          <source>This has a significant advantage in space over reading the whole file in. You can find a proof of this method in</source>
          <target state="translated">这比把整个文件读进去在空间上有很大的优势。你可以在下面找到这个方法的证明</target>
        </trans-unit>
        <trans-unit id="a19e57e2a77c7fc3b4122f04d13e6469dce9f91c" translate="yes" xml:space="preserve">
          <source>This has been recorded in &lt;a href=&quot;http://search.cpan.org/perldoc/rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; as bug #37532: Unable to interleave STDOUT and STDERR.</source>
          <target state="translated">这已在&lt;a href=&quot;http://search.cpan.org/perldoc/rt.cpan.org&quot;&gt;rt.cpan.org中&lt;/a&gt;记录为错误＃37532：无法交错STDOUT和STDERR。</target>
        </trans-unit>
        <trans-unit id="cbcdc01d42c333e20ff9808a5f68276ca909022c" translate="yes" xml:space="preserve">
          <source>This has been recorded in &lt;a href=&quot;rt.cpan.org&quot;&gt;rt.cpan.org&lt;/a&gt; as bug #37532: Unable to interleave STDOUT and STDERR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f70dda08cfaadcd6df63c157b5e4187c1620e22" translate="yes" xml:space="preserve">
          <source>This has been retracted by Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52d89b3c166d4a363c55e83875dec4c4067987e" translate="yes" xml:space="preserve">
          <source>This has several advantages. Accessors make it easier to change the implementation of an object later while still preserving the original API.</source>
          <target state="translated">这有几个优点。接入器使得以后更容易改变一个对象的实现,同时仍然保留原来的API。</target>
        </trans-unit>
        <trans-unit id="7b634ed56e8ae46f559d18b25ae1aeeee821eed7" translate="yes" xml:space="preserve">
          <source>This has the advantage of being backward compatible with older versions of Perl that did not use PerlIO or where &lt;code&gt;:raw&lt;/code&gt; was buggy (as it was before Perl 5.14).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b1eddfb5655aec91f3e8e1f2978f9657ae01a0" translate="yes" xml:space="preserve">
          <source>This has the effect of storing the cache in a &lt;code&gt;DB_File&lt;/code&gt; database whose name is in &lt;code&gt;$filename&lt;/code&gt; . The cache will persist after the program has exited. Next time the program runs, it will find the cache already populated from the previous run of the program. Or you can forcibly populate the cache by constructing a batch program that runs in the background and populates the cache file. Then when you come to run your real program the memoized function will be fast because all its results have been precomputed.</source>
          <target state="translated">这具有将缓存存储在名称为 &lt;code&gt;$filename&lt;/code&gt; 的 &lt;code&gt;DB_File&lt;/code&gt; 数据库中的效果。程序退出后，缓存将继续存在。下次该程序运行时，它将找到该程序的上一次运行已填充的缓存。或者，您可以通过构造一个在后台运行并填充缓存文件的批处理程序来强制填充缓存。然后，当您开始运行真实程序时，由于所有功能的结果均已预先计算，因此记忆功能将很快。</target>
        </trans-unit>
        <trans-unit id="04a5233be538e5070a6cd575007f00f78a717378" translate="yes" xml:space="preserve">
          <source>This has the effect of storing the cache in a &lt;code&gt;DB_File&lt;/code&gt; database whose name is in &lt;code&gt;$filename&lt;/code&gt;. The cache will persist after the program has exited. Next time the program runs, it will find the cache already populated from the previous run of the program. Or you can forcibly populate the cache by constructing a batch program that runs in the background and populates the cache file. Then when you come to run your real program the memoized function will be fast because all its results have been precomputed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f55042605688b1e566dc7078adcb80b2ae71090" translate="yes" xml:space="preserve">
          <source>This has the interesting effect of creating a function local to another function, something not normally supported in Perl.</source>
          <target state="translated">这有一个有趣的效果,就是在另一个函数的局部创建一个函数,这在Perl中通常是不支持的。</target>
        </trans-unit>
        <trans-unit id="04baccbdc9b9fcde7962a296b34a3f02d1708cbd" translate="yes" xml:space="preserve">
          <source>This hash is filled with the variables that &lt;code&gt;perl -V&lt;/code&gt; fills its report with, and it has the same variables that &lt;code&gt;Config::myconfig&lt;/code&gt; returns from &lt;code&gt;%Config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1797c70a1d197e558ba86167569174dbeb96a8a" translate="yes" xml:space="preserve">
          <source>This hash should map POD files (or scripts containing POD) to the man file names under the &lt;code&gt;blib/man1/&lt;/code&gt; directory, as in the following example:</source>
          <target state="translated">此哈希应将POD文件（或包含POD的脚本）映射到 &lt;code&gt;blib/man1/&lt;/code&gt; 目录下的man文件名，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="e9df8c379bbf80ee5fdd7c982a32f28e6ec7e7ad" translate="yes" xml:space="preserve">
          <source>This holds a hash-of-lists. Each list contains the functions in the category the key denotes.</source>
          <target state="translated">这里面有一个列表的哈希。每个列表都包含键所代表的类别中的函数。</target>
        </trans-unit>
        <trans-unit id="80d4d81772f7d6d67760a370f3b5798c816acf17" translate="yes" xml:space="preserve">
          <source>This holds a string of the last error that happened during a call to &lt;code&gt;can_load&lt;/code&gt; . It is useful to inspect this when &lt;code&gt;can_load&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">它保存了在调用 &lt;code&gt;can_load&lt;/code&gt; 期间发生的最后一个错误的字符串。当 &lt;code&gt;can_load&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 时检查此值很有用。</target>
        </trans-unit>
        <trans-unit id="c00c9aa453b6f56e16b0531efee3c7be9faa87b6" translate="yes" xml:space="preserve">
          <source>This holds a string of the last error that happened during a call to &lt;code&gt;can_load&lt;/code&gt;. It is useful to inspect this when &lt;code&gt;can_load&lt;/code&gt; returns &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807ff9f1a614524ec64299d0ff11753e548d2db4" translate="yes" xml:space="preserve">
          <source>This holds the cache of the &lt;code&gt;can_load&lt;/code&gt; function. If you explicitly want to remove the current cache, you can set this variable to &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">这保存了 &lt;code&gt;can_load&lt;/code&gt; 函数的缓存。如果您明确希望删除当前缓存，则可以将此变量设置为 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e89b434a4ec5c18b43a734833827829de3493ad4" translate="yes" xml:space="preserve">
          <source>This holds the cache of the &lt;code&gt;can_load&lt;/code&gt; function. If you explicitly want to remove the current cache, you can set this variable to &lt;code&gt;undef&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f00ade254acd4a91c287efc124310fc7902663e" translate="yes" xml:space="preserve">
          <source>This idea is from &lt;a href=&quot;JSON::XS::Boolean&quot;&gt;JSON::XS::Boolean&lt;/a&gt; written by Marc Lehmann &amp;lt;schmorp[at]schmorp.de&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab611b7e6d978fe2070f07754881b8d06390403" translate="yes" xml:space="preserve">
          <source>This identical to the numerical values of the &lt;code&gt;$!&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">这等于 &lt;code&gt;$!&lt;/code&gt; 的数值！，请参阅&lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;perlvar中的$ ERRNO&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34f444d7282d48c73e6ca1798c5dd4a12fb69b6c" translate="yes" xml:space="preserve">
          <source>This identical to the numerical values of the &lt;code&gt;$!&lt;/code&gt;, see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;&quot;$ERRNO&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cd5f270d1b0fd37802c6a7f69eb1401eb75d55" translate="yes" xml:space="preserve">
          <source>This implementation has been moved into the core executable, but you can still load this module for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebbc38db38088437ee3de434676f2c9849a55f6" translate="yes" xml:space="preserve">
          <source>This implementation never has to fetch the context using a function call, since it is always passed as an extra argument. Depending on your needs for simplicity or efficiency, you may mix the previous two approaches freely.</source>
          <target state="translated">这种实现永远不需要使用函数调用来获取上下文,因为它总是作为一个额外的参数传递。根据你对简单或效率的需求,你可以自由混合前面两种方法。</target>
        </trans-unit>
        <trans-unit id="7b6dd1dd5bc3b526c6e18c4c4cf7662fc526f6c1" translate="yes" xml:space="preserve">
          <source>This implements the C library function of the same name, which on most systems returns the current login from</source>
          <target state="translated">这实现了同名的C库函数,在大多数系统中,该函数从</target>
        </trans-unit>
        <trans-unit id="9b00dbaf392453f8a0c495715d87f8a967ac3280" translate="yes" xml:space="preserve">
          <source>This implicit use of &lt;code&gt;$_&lt;/code&gt; greatly simplifies the filter.</source>
          <target state="translated">&lt;code&gt;$_&lt;/code&gt; 这种隐式使用大大简化了过滤器。</target>
        </trans-unit>
        <trans-unit id="5b50085de4def35b6bdec8ddfe646e562a42bf85" translate="yes" xml:space="preserve">
          <source>This implicitly turns on &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; .</source>
          <target state="translated">这将隐式启用 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b69024702c53c81b289a2bb57c31bbc3bad62a98" translate="yes" xml:space="preserve">
          <source>This implicitly turns on &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1913f881cf8f6c8733392373df598260e9eff553" translate="yes" xml:space="preserve">
          <source>This implies, among other things, that any magic eventually carried by those variables is locally lost. In other words, saying &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; */&lt;/code&gt; will not have any effect on the internal value of the input record separator.</source>
          <target state="translated">这意味着，除其他因素外，这些变量最终携带的所有魔力都会局部丢失。换句话说，说 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; */&lt;/code&gt; 不会对输入记录分隔符的内部值产生任何影响。</target>
        </trans-unit>
        <trans-unit id="42b1909506cafaa0cc94a703a39c522d8ca507d2" translate="yes" xml:space="preserve">
          <source>This implies, among other things, that any magic eventually carried by those variables is locally lost. In other words, saying &lt;code&gt;local */&lt;/code&gt; will not have any effect on the internal value of the input record separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853b46dcbc0a00c897209b2e5eda11d1bef5190a" translate="yes" xml:space="preserve">
          <source>This imports all the symbols from YourModule's &lt;code&gt;@EXPORT&lt;/code&gt; into the namespace of the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">这会将所有符号从YourModule的 &lt;code&gt;@EXPORT&lt;/code&gt; 导入到 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 语句的名称空间中。</target>
        </trans-unit>
        <trans-unit id="a144efc90828bfe698b691d8656be8a5e2096e11" translate="yes" xml:space="preserve">
          <source>This imports all the symbols from YourModule's &lt;code&gt;@EXPORT&lt;/code&gt; into the namespace of the &lt;code&gt;use&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc30f208dc0886e9e09f0ad72a7741fdb1114419" translate="yes" xml:space="preserve">
          <source>This imports only the symbols listed by the caller into their namespace. All listed symbols must be in your &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; , else an error occurs. The advanced export features of Exporter are accessed like this, but with list entries that are syntactically distinct from symbol names.</source>
          <target state="translated">这仅将调用者列出的符号导入其名称空间。所有列出的符号必须在您的 &lt;code&gt;@EXPORT&lt;/code&gt; 或 &lt;code&gt;@EXPORT_OK&lt;/code&gt; 中，否则会发生错误。可以通过这种方式访问​​Exporter的高级导出功能，但是使用与符号名称在语法上不同的列表条目。</target>
        </trans-unit>
        <trans-unit id="afea1b722b6f3bdd005efaf9802f6bb5f9cce5e7" translate="yes" xml:space="preserve">
          <source>This imports only the symbols listed by the caller into their namespace. All listed symbols must be in your &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt;, else an error occurs. The advanced export features of Exporter are accessed like this, but with list entries that are syntactically distinct from symbol names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54334948064b9890996f54ddad24e2c8dcfde1a" translate="yes" xml:space="preserve">
          <source>This incantation is a bit much to remember, but Perl will display it for you if you say &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt; .</source>
          <target state="translated">这个咒语要记住很多，但是如果您说 &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt; ，Perl会为您显示。</target>
        </trans-unit>
        <trans-unit id="1f6ca02a3e63f679a0818fa93fda109eb7890118" translate="yes" xml:space="preserve">
          <source>This incantation is a bit much to remember, but Perl will display it for you if you say &lt;code&gt;perl &quot;-V:startperl&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5270d55bdd99c39c88df6b66aa86ef8a427ec941" translate="yes" xml:space="preserve">
          <source>This includes everything before the &amp;lt;title&amp;gt; opening tag including the Document type and including the opening &amp;lt;title&amp;gt; tag. The following call will set it to be a simple HTML file:</source>
          <target state="translated">这包括&amp;lt;title&amp;gt;开头标记之前的所有内容，包括Document类型和开头的&amp;lt;title&amp;gt;标记。以下调用将其设置为简单的HTML文件：</target>
        </trans-unit>
        <trans-unit id="343b5c0e7585a333dd6568f5785911c3539473ec" translate="yes" xml:space="preserve">
          <source>This indicates a &quot;beta&quot; release that is substantially complete, but has an elevated risk of bugs and requires additional testing. The distribution should not be installed over a stable release without an explicit request or other confirmation from a user. This release status may also be used for &quot;release candidate&quot; versions of a distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c991cc788c5d46f7b04a0e2e0cd76cdc76b3e4de" translate="yes" xml:space="preserve">
          <source>This indicates an &quot;alpha&quot; release that is under active development, but has been released for early feedback or testing and may be missing features or may have serious bugs. The distribution should not be installed over a stable release without an explicit request or other confirmation from a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648180ea592e3e8122f6f7de36a2066e615d2ead" translate="yes" xml:space="preserve">
          <source>This indicates an ordinary, &quot;final&quot; release that should be indexed by PAUSE or other indexers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4643de8eedeed9698ffe2974d9db63ab9e6ea1" translate="yes" xml:space="preserve">
          <source>This indicates how numbers should be formatted for human readability, for example the character used as the decimal point.</source>
          <target state="translated">这表明数字应该如何格式化以利于人类阅读,例如用作小数点的字符。</target>
        </trans-unit>
        <trans-unit id="6005230475219b0a5021d5218cbbce15d92f7c81" translate="yes" xml:space="preserve">
          <source>This indicates that Configure is being run with a broken Korn shell (even though you think you are using a Bourne shell by using &quot;sh Configure&quot; or &quot;./Configure&quot;). The Korn shell bug has been reported to Compaq as of February 1999 but in the meanwhile, the reason ksh is being used is that you have the environment variable BIN_SH set to 'xpg4'. This causes /bin/sh to delegate its duties to /bin/posix/sh (a ksh). Unset the environment variable and rerun Configure.</source>
          <target state="translated">这表明配置是用一个损坏的Korn shell运行的(即使你认为你使用 &quot;sh Configure &quot;或&quot;./Configure &quot;使用的是Bourne shell)。从1999年2月起,Korn shell的错误已经被报告给康柏公司,但与此同时,使用ksh的原因是你将环境变量BIN_SH设置为 &quot;xpg4&quot;。这将导致/bin/sh将其职责委托给/bin/posix/sh(一个ksh)。取消设置环境变量,重新运行配置。</target>
        </trans-unit>
        <trans-unit id="062f44d9692db42f54456303d55718a170b1e245" translate="yes" xml:space="preserve">
          <source>This indicates the ordering of letters for comparison and sorting. In Latin alphabets, for example, &quot;b&quot;, generally follows &quot;a&quot;.</source>
          <target state="translated">这表示字母的排序,以便比较和排序。例如,在拉丁字母中,&quot;b &quot;一般排在 &quot;a &quot;之后。</target>
        </trans-unit>
        <trans-unit id="e6751de1d4a71c579b34f21fa42d3fbd6eb68764" translate="yes" xml:space="preserve">
          <source>This indicates, for example if a character is an uppercase letter.</source>
          <target state="translated">例如,这表示一个字符是否是大写字母。</target>
        </trans-unit>
        <trans-unit id="101fd7bbc198ec8e6a1a44073eec5c4b13e975cb" translate="yes" xml:space="preserve">
          <source>This information is extracted from the second block that is emitted by &lt;code&gt;perl -V&lt;/code&gt;, and usually looks something like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3774451696e560d0b4cade6d2971bc678079e1" translate="yes" xml:space="preserve">
          <source>This information is not available anywhere else, including &lt;code&gt;%Config&lt;/code&gt;, but it is the information that is only known to the perl binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823a07d7a67d58cd28a477488a1be20465227d53" translate="yes" xml:space="preserve">
          <source>This information is offered in good faith and in the hope that it may be of use, but is not guaranteed to be correct, up to date, or suitable for any particular purpose whatsoever. The authors accept no liability in respect of this information or its use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ba19f7444dcdb1f5fd5e30a3ff4c300dd9b51b" translate="yes" xml:space="preserve">
          <source>This information should not be considered complete; it includes possibly transient information about idiosyncrasies of some of the ports, almost all of which are in a state of constant evolution. Thus, this material should be considered a perpetual work in progress (&lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt; ).</source>
          <target state="translated">此信息不应被认为是完整的；它可能包含有关某些端口特质的瞬态信息，几乎所有端口都处于不断发展的状态。因此，该材料应被视为永久性的 &lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt; （&amp;lt;IMG SRC =&amp;ldquo; yellow_sign.gif&amp;rdquo; ALT =&amp;ldquo;在建中&amp;rdquo;&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="38a169aa69428d16b9cbc521c5975e7287809e94" translate="yes" xml:space="preserve">
          <source>This information should not be considered complete; it includes possibly transient information about idiosyncrasies of some of the ports, almost all of which are in a state of constant evolution. Thus, this material should be considered a perpetual work in progress (&lt;code&gt;&amp;lt;IMG SRC=&quot;yellow_sign.gif&quot; ALT=&quot;Under Construction&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f308a14f85f6b55bddba54f6f0dccb1fe994f0d" translate="yes" xml:space="preserve">
          <source>This inserts the contents of the default MANIFEST.SKIP file</source>
          <target state="translated">这将插入默认的MANIFEST.SKIP文件的内容。</target>
        </trans-unit>
        <trans-unit id="a183a2a7c1e850deb76aa146e5c8c7d75a1d8b67" translate="yes" xml:space="preserve">
          <source>This inserts the contents of the specified external file</source>
          <target state="translated">这将插入指定外部文件的内容。</target>
        </trans-unit>
        <trans-unit id="710127152df45ef23f215433723e52cbd88020a4" translate="yes" xml:space="preserve">
          <source>This install method only has the power to install the distribution if there are no dependencies in the way. To install an object along with all its dependencies, use CPAN::Shell-&amp;gt;install.</source>
          <target state="translated">如果安装方式没有依赖性，则此安装方法只能安装发行版。要安装对象及其所有依赖项，请使用CPAN :: Shell-&amp;gt; install。</target>
        </trans-unit>
        <trans-unit id="081204399b94282349e76c93ee84e633b6e3ee15" translate="yes" xml:space="preserve">
          <source>This instance of this layer supports the &quot;fast &lt;code&gt;gets&lt;/code&gt; &quot; interface. Normally set based on &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; for the class and by the existence of the function(s) in the table. However a class that normally provides that interface may need to avoid it on a particular instance. The &quot;pending&quot; layer needs to do this when it is pushed above a layer which does not support the interface. (Perl's &lt;code&gt;sv_gets()&lt;/code&gt; does not expect the streams fast &lt;code&gt;gets&lt;/code&gt; behaviour to change during one &quot;get&quot;.)</source>
          <target state="translated">该层的实例支持&amp;ldquo;快速 &lt;code&gt;gets&lt;/code&gt; &amp;rdquo;接口。通常根据类的 &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; 以及表中函数的存在来进行设置。但是，通常提供该接口的类可能需要在特定实例上避免使用该接口。当&amp;ldquo;待定&amp;rdquo;层被推到不支持该接口的层上方时，需要执行此操作。（Perl的 &lt;code&gt;sv_gets()&lt;/code&gt; 并不希望流快速 &lt;code&gt;gets&lt;/code&gt; 行为在一个&amp;ldquo;获取&amp;rdquo;期间发生变化。）</target>
        </trans-unit>
        <trans-unit id="2d3ee171a0ea9e5033b09ded45e89dff7d3a16e0" translate="yes" xml:space="preserve">
          <source>This instance of this layer supports the &quot;fast &lt;code&gt;gets&lt;/code&gt;&quot; interface. Normally set based on &lt;code&gt;PERLIO_K_FASTGETS&lt;/code&gt; for the class and by the existence of the function(s) in the table. However a class that normally provides that interface may need to avoid it on a particular instance. The &quot;pending&quot; layer needs to do this when it is pushed above a layer which does not support the interface. (Perl's &lt;code&gt;sv_gets()&lt;/code&gt; does not expect the streams fast &lt;code&gt;gets&lt;/code&gt; behaviour to change during one &quot;get&quot;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3d641c3fb98c37692677f17bfddfa4c0c2f88d" translate="yes" xml:space="preserve">
          <source>This integer normally starts off at a value of &lt;code&gt;1&lt;/code&gt; when a package stash is instantiated. Calling it on packages whose stashes do not exist at all will return &lt;code&gt;0&lt;/code&gt; . If a package stash is completely deleted (not a normal occurrence, but it can happen if someone does something like &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %PkgName::&lt;/code&gt; ), the number will be reset to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; , depending on how completely the package was wiped out.</source>
          <target state="translated">实例化包存储时，此整数通常以 &lt;code&gt;1&lt;/code&gt; 开头。在根本没有任何隐藏的包上调用它会返回 &lt;code&gt;0&lt;/code&gt; 。如果一个软件包的存储被完全删除（这不是正常现象，但是如果有人执行 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %PkgName::&lt;/code&gt; 这类操作则可能发生），则该数字将重置为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; ，具体取决于软件包被清除的方式。</target>
        </trans-unit>
        <trans-unit id="26a092c71773214e0148af04c00b7d1197971d15" translate="yes" xml:space="preserve">
          <source>This integer normally starts off at a value of &lt;code&gt;1&lt;/code&gt; when a package stash is instantiated. Calling it on packages whose stashes do not exist at all will return &lt;code&gt;0&lt;/code&gt;. If a package stash is completely deleted (not a normal occurrence, but it can happen if someone does something like &lt;code&gt;undef %PkgName::&lt;/code&gt;), the number will be reset to either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;, depending on how completely the package was wiped out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc3d65756a4115c5abb43c54741c957341c1c84" translate="yes" xml:space="preserve">
          <source>This interface allows sequential retrieval from the database. See &lt;a href=&quot;dbopen&quot;&gt;dbopen&lt;/a&gt; for full details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737a7a5efcfd42959d110feeee676008fd682bf1" translate="yes" xml:space="preserve">
          <source>This interface allows sequential retrieval from the database. See &lt;a href=&quot;http://search.cpan.org/perldoc/dbopen&quot;&gt;dbopen&lt;/a&gt; for full details.</source>
          <target state="translated">该接口允许从数据库中顺序检索。有关完整的详细信息，请参见&lt;a href=&quot;http://search.cpan.org/perldoc/dbopen&quot;&gt;dbopen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd749bb331e8a5d590f7e5603f780fdc41010317" translate="yes" xml:space="preserve">
          <source>This interface is based on the work and comments of (in no particular order): Larry Wall, Robert Sanders, Dean Roehrich, Jeff Okamoto, Anno Siegel, Thomas Neumann, Paul Marquess, Charles Bailey, myself and others.</source>
          <target state="translated">这个界面是基于以下人员的工作和评论(排名不分先后):Larry Wall、Robert Sanders、Dean Roehrich、Jeff Okamoto、Anno Siegel、Thomas Neumann、Paul Marquess、Charles Bailey、我和其他人。Larry Wall、Robert Sanders、Dean Roehrich、Jeff Okamoto、Anno Siegel、Thomas Neumann、Paul Marquess、Charles Bailey、我本人和其他人。</target>
        </trans-unit>
        <trans-unit id="491fa4fd719b046d8f39f03410b7b5fb6254dca4" translate="yes" xml:space="preserve">
          <source>This interface is handled slightly differently in &lt;b&gt;DB_File&lt;/b&gt;. Here is an equivalent call using &lt;b&gt;DB_File&lt;/b&gt;:</source>
          <target state="translated">该接口在&lt;b&gt;DB_File中的&lt;/b&gt;处理略有不同。这是使用&lt;b&gt;DB_File&lt;/b&gt;的等效调用：</target>
        </trans-unit>
        <trans-unit id="2be334b179b8dd94d5ef9fce8dd2b0dd67fa87fa" translate="yes" xml:space="preserve">
          <source>This interface lets you treat the DCL symbol table as a Perl associative array, in which the key of each element is the symbol name, and the value of the element is that symbol's value. Case is not significant in the key string, as DCL converts symbol names to uppercase, but it is significant in the value string. All of the usual operations on associative arrays are supported. Reading an element retrieves the current value of the symbol, assigning to it defines a new symbol (or overwrites the old value of an existing symbol), and deleting an element deletes the corresponding symbol. Setting an element to &lt;code&gt;undef&lt;/code&gt;, or &lt;code&gt;undef&lt;/code&gt;ing it directly, sets the corresponding symbol to the null string. You may also read the special keys ':GLOBAL' and ':LOCAL' to find out whether a default symbol table has been specified for this hash (see the next paragraph), or set either or these keys to specify a default symbol table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d69eea5115951977bf6e8780a64dd29c4226c4" translate="yes" xml:space="preserve">
          <source>This interpolation combines with the facts that the opening and closing parentheses are optional (except when necessary for precedence) and lists may end with an optional comma to mean that multiple commas within lists are legal syntax. The list &lt;code&gt;1,,3&lt;/code&gt; is a concatenation of two lists, &lt;code&gt;1,&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt; , the first of which ends with that optional comma. &lt;code&gt;1,,3&lt;/code&gt; is &lt;code&gt;(1,),(3)&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; (And similarly for &lt;code&gt;1,,,3&lt;/code&gt; is &lt;code&gt;(1,),(,),3&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; and so on.) Not that we'd advise you to use this obfuscation.</source>
          <target state="translated">此插值法与以下事实结合在一起：左括号和右括号是可选的（优先级除外），列表可能以可选的逗号结尾，表示列表中的多个逗号是合法语法。列表 &lt;code&gt;1,,3&lt;/code&gt; 是两个列表 &lt;code&gt;1,&lt;/code&gt; 和 &lt;code&gt;3&lt;/code&gt; 的串联，其中第一个以该可选的逗号结尾。 &lt;code&gt;1,,3&lt;/code&gt; 是 &lt;code&gt;(1,),(3)&lt;/code&gt; 是 &lt;code&gt;1,3&lt;/code&gt; （类似地，对于 &lt;code&gt;1,,,3&lt;/code&gt; 是 &lt;code&gt;(1,),(,),3&lt;/code&gt; 是 &lt;code&gt;1,3&lt;/code&gt; ，依此类推。）不是我们d建议您使用这种混淆处理。</target>
        </trans-unit>
        <trans-unit id="30e99ba80e0a8b5fc3da6de61b068c8145e301f2" translate="yes" xml:space="preserve">
          <source>This interpolation combines with the facts that the opening and closing parentheses are optional (except when necessary for precedence) and lists may end with an optional comma to mean that multiple commas within lists are legal syntax. The list &lt;code&gt;1,,3&lt;/code&gt; is a concatenation of two lists, &lt;code&gt;1,&lt;/code&gt; and &lt;code&gt;3&lt;/code&gt;, the first of which ends with that optional comma. &lt;code&gt;1,,3&lt;/code&gt; is &lt;code&gt;(1,),(3)&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; (And similarly for &lt;code&gt;1,,,3&lt;/code&gt; is &lt;code&gt;(1,),(,),3&lt;/code&gt; is &lt;code&gt;1,3&lt;/code&gt; and so on.) Not that we'd advise you to use this obfuscation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7fca560bcccd2ead2613d40d2441ab2644441f" translate="yes" xml:space="preserve">
          <source>This introduces another problem: what if you just know that your data is UTF-16, but you don't know which endianness? Byte Order Marks, or &lt;code&gt;BOM&lt;/code&gt; 's, are a solution to this. A special character has been reserved in Unicode to function as a byte order marker: the character with the code point &lt;code&gt;U+FEFF&lt;/code&gt; is the &lt;code&gt;BOM&lt;/code&gt; .</source>
          <target state="translated">这带来了另一个问题：如果仅知道您的数据是UTF-16，但不知道哪个字节顺序怎么办？字节顺序标记或 &lt;code&gt;BOM&lt;/code&gt; 是解决此问题的方法。 Unicode中已保留一个特殊字符以用作字节顺序标记：代码点为 &lt;code&gt;U+FEFF&lt;/code&gt; 的字符是 &lt;code&gt;BOM&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e0886084063bb71aaf0bbd76b1515a17e11d962" translate="yes" xml:space="preserve">
          <source>This introduces another problem: what if you just know that your data is UTF-16, but you don't know which endianness? Byte Order Marks, or &lt;code&gt;BOM&lt;/code&gt;'s, are a solution to this. A special character has been reserved in Unicode to function as a byte order marker: the character with the code point &lt;code&gt;U+FEFF&lt;/code&gt; is the &lt;code&gt;BOM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d98b577e394b09ee4f02d9918217111200cab8f" translate="yes" xml:space="preserve">
          <source>This introductory document does not aim to be complete. It does not even aim to be entirely accurate. In some cases perfection has been sacrificed in the goal of getting the general idea across. You are</source>
          <target state="translated">本介绍性文件并不力求完整。它甚至不打算做到完全准确。在某些情况下,为了表达大意,我们牺牲了完美。您是</target>
        </trans-unit>
        <trans-unit id="2b646e06b5c6dfedf386d47b899ec3f8734e765d" translate="yes" xml:space="preserve">
          <source>This is &lt;b&gt;not&lt;/b&gt; the reverse of PerlIO_exportFILE().</source>
          <target state="translated">这与PerlIO_exportFILE（）&lt;b&gt;并非&lt;/b&gt;相反。</target>
        </trans-unit>
        <trans-unit id="a5d69879cdfbe586062188f3d7ff676e78424d35" translate="yes" xml:space="preserve">
          <source>This is &lt;b&gt;very&lt;/b&gt; similar to previous, only the first two ops differ. This subroutine rendering is more representative, insofar as a single main program will have many subs.</source>
          <target state="translated">这与以前&lt;b&gt;非常&lt;/b&gt;相似，只是前两个操作有所不同。就单个主程序将具有多个子程序而言，此子例程呈现更具代表性。</target>
        </trans-unit>
        <trans-unit id="13a9fc12865137f8c322a100d88693c3b3008c0d" translate="yes" xml:space="preserve">
          <source>This is Perl, so it does the exact right thing. It sees that you want to push &lt;code&gt;Athens&lt;/code&gt; onto an array that doesn't exist, so it helpfully makes a new, empty, anonymous array for you, installs it into &lt;code&gt;%table&lt;/code&gt; , and then pushes &lt;code&gt;Athens&lt;/code&gt; onto it. This is called 'autovivification'--bringing things to life automatically. Perl saw that the key wasn't in the hash, so it created a new hash entry automatically. Perl saw that you wanted to use the hash value as an array, so it created a new empty array and installed a reference to it in the hash automatically. And as usual, Perl made the array one element longer to hold the new city name.</source>
          <target state="translated">这是Perl，所以它做的很正确。它看到您想将 &lt;code&gt;Athens&lt;/code&gt; 推送到一个不存在的数组上，因此它会为您创建一个新的空的匿名数组，将其安装到 &lt;code&gt;%table&lt;/code&gt; 中，然后将 &lt;code&gt;Athens&lt;/code&gt; 推送到该数组上。这就是所谓的&amp;ldquo;自我生存&amp;rdquo;，即自动将事物带入生活。Perl看到密钥不在哈希中，因此它自动创建了一个新的哈希条目。Perl看到您想将哈希值用作数组，因此它创建了一个新的空数组，并在哈希中自动安装了对它的引用。和往常一样，Perl将数组的元素长度增加了一个，以容纳新的城市名称。</target>
        </trans-unit>
        <trans-unit id="6952ffbc36ae125eed2db7e1e92d83483c6c0a22" translate="yes" xml:space="preserve">
          <source>This is Perl, so it does the exact right thing. It sees that you want to push &lt;code&gt;Athens&lt;/code&gt; onto an array that doesn't exist, so it helpfully makes a new, empty, anonymous array for you, installs it into &lt;code&gt;%table&lt;/code&gt;, and then pushes &lt;code&gt;Athens&lt;/code&gt; onto it. This is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d199012301aebd153320803c30f339cb29b9c3f4" translate="yes" xml:space="preserve">
          <source>This is TRUE if the image store data in network order. This means that it was created with nstore() or similar.</source>
          <target state="translated">如果图像按网络顺序存储数据,则该值为TRUE。这意味着它是用nstore()或类似的方法创建的。</target>
        </trans-unit>
        <trans-unit id="e89180d701e5f3ba4c51e57a43f46491189b4827" translate="yes" xml:space="preserve">
          <source>This is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701541b651d14d9ce17a8309970ae17dc9d55c05" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to display Pod source as itself! Pretty Zen, huh?</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,它可以让Perldoc以自己的身份显示Pod源。很有禅意,是吧?</target>
        </trans-unit>
        <trans-unit id="a75770ef9b0c598ca7fde366202ade0c04715297" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Man and &lt;code&gt;groff&lt;/code&gt; for reading Pod pages.</source>
          <target state="translated">这是一个&amp;ldquo;插件&amp;rdquo;类，允许Perldoc使用Pod :: Man和 &lt;code&gt;groff&lt;/code&gt; 来读取Pod页面。</target>
        </trans-unit>
        <trans-unit id="81393ce7a71c653a02bafc9503ad7f009bece819" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Man as a formatter class.</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,允许Perldoc使用Pod::Man作为formatter类。</target>
        </trans-unit>
        <trans-unit id="62907aa2e6a91bf9a0b7a6c6e963db493d7938e3" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::Checker as a &quot;formatter&quot; class (or if that is not available, then Pod::Checker), to check for errors in a given Pod file.</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,它允许Perldoc使用Pod::Simple::Checker作为一个 &quot;formatter &quot;类(如果没有,则使用Pod::Checker),来检查给定Pod文件中的错误。</target>
        </trans-unit>
        <trans-unit id="55e3a501ab6032afe89831dc532a3a24c547307d" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::RTF as a formatter class.</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,它允许Perldoc使用Pod::Simple::RTF作为格式化类。</target>
        </trans-unit>
        <trans-unit id="68678eb1c55adc089ba0d404634d06ee4b438a50" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Simple::XMLOutStream as a formatter class.</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,它允许Perldoc使用Pod::Simple::XMLOutStream作为formatter类。</target>
        </trans-unit>
        <trans-unit id="e1aa800043dc8a94d0d283dacfd5ba2b12a78539" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Pod::Text as a formatter class.</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,允许Perldoc使用Pod::Text作为格式化类。</target>
        </trans-unit>
        <trans-unit id="dddce66063ab47a1230107d6a866110ade33c3fe" translate="yes" xml:space="preserve">
          <source>This is a &quot;plug-in&quot; class that allows Perldoc to use Tk::Pod as a formatter class.</source>
          <target state="translated">这是一个 &quot;插件 &quot;类,允许Perldoc使用Tk::Pod作为formatter类。</target>
        </trans-unit>
        <trans-unit id="4275fe3ef141a55b62b40502070bf737ec2ea8ca" translate="yes" xml:space="preserve">
          <source>This is a &quot;postponed&quot; regular subexpression. It behaves in</source>
          <target state="translated">这是一个 &quot;推迟的 &quot;常规子表达式。它的行为方式是</target>
        </trans-unit>
        <trans-unit id="a9ec1e3198488308c3643ad69f8d075d9b8f92de" translate="yes" xml:space="preserve">
          <source>This is a 'catch-all' method which returns true if any tests have currently failed, any TODO tests unexpectedly succeeded, or any parse errors occurred.</source>
          <target state="translated">这是一个 &quot;包罗万象 &quot;的方法,如果当前有任何测试失败,有任何TODO测试意外成功,或者有任何解析错误发生,则返回true。</target>
        </trans-unit>
        <trans-unit id="73b5aab0cb506ed2e80764625faba5043cd5b8ed" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;autodie::exception&quot;&gt;autodie::exception&lt;/a&gt; class for failures from the &lt;code&gt;system&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b6bdcb215a6cedd90d3fc776185364f2309aa9" translate="yes" xml:space="preserve">
          <source>This is a CPAN module that has better error handling and more facilities than Open3.</source>
          <target state="translated">这是一个CPAN模块,比Open3有更好的错误处理和更多的设施。</target>
        </trans-unit>
        <trans-unit id="5fa45cb9d444efdc2948972c4c5c733896db4c76" translate="yes" xml:space="preserve">
          <source>This is a Map that describes all the prerequisites of the distribution. The keys are phases of activity, such as &lt;code&gt;configure&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; or &lt;code&gt;runtime&lt;/code&gt;. Values are Maps in which the keys name the type of prerequisite relationship such as &lt;code&gt;requires&lt;/code&gt;, &lt;code&gt;recommends&lt;/code&gt;, or &lt;code&gt;suggests&lt;/code&gt; and the value provides a set of prerequisite relations. The set of relations &lt;b&gt;must&lt;/b&gt; be specified as a Map of package names to version ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d2a521ae98c293152277e05794dfa3dbb364fa" translate="yes" xml:space="preserve">
          <source>This is a Perl binding for the cross-platform wxWidgets toolkit ( &lt;a href=&quot;http://www.wxwidgets.org&quot;&gt;http://www.wxwidgets.org&lt;/a&gt; ). It works under Unix, Win32 and Mac OS X, using native widgets (Gtk under Unix). The interface follows the C++ interface closely, but the documentation is a little sparse for someone who doesn't know the library, mostly just referring you to the C++ documentation.</source>
          <target state="translated">这是跨平台wxWidgets工具包（&lt;a href=&quot;http://www.wxwidgets.org&quot;&gt;http://www.wxwidgets.org&lt;/a&gt;）的Perl绑定。它使用本机小部件（在Unix下为Gtk）在Unix，Win32和Mac OS X下工作。该接口紧随C ++接口，但是对于不了解该库的人来说，该文档很少，主要是向您介绍C ++文档。</target>
        </trans-unit>
        <trans-unit id="6e701c73247f5ad9d23c7f590ac02f35efc27631" translate="yes" xml:space="preserve">
          <source>This is a Perl-friendly wrapper around &lt;code&gt;CreateFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbed9dcb1af92fb7554f193074365e1398ba923" translate="yes" xml:space="preserve">
          <source>This is a Perl-friendly wrapper for the &lt;code&gt;GetFileSize&lt;/code&gt; (below) API call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ff8d67a4c545a99f2af8806bef343c9f8c2fa8" translate="yes" xml:space="preserve">
          <source>This is a String describing the feature. Every optional feature should provide a description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64369b0966513691c61b8897fc5c7b37a7f32789" translate="yes" xml:space="preserve">
          <source>This is a big step forward, and can give a threaded program quite a performance boost over non-threaded programs. Threads that block performing I/O, for example, won't block threads that are doing other things. Each process still has only one thread running at once, though, regardless of how many CPUs a system might have.</source>
          <target state="translated">这是一个很大的进步,可以让线程程序的性能比非线程程序提升不少。例如,阻塞执行I/O的线程,不会阻塞正在做其他事情的线程。不过无论系统有多少个CPU,每个进程仍然只有一个线程同时运行。</target>
        </trans-unit>
        <trans-unit id="e1c71251d2a2ccec8dd46781a0eb70dbaafe4b05" translate="yes" xml:space="preserve">
          <source>This is a bit tricky. You can't simply write the command like this:</source>
          <target state="translated">这是一个有点棘手的问题。你不能简单地写这样的命令。</target>
        </trans-unit>
        <trans-unit id="9988691445fe26ab65af265f99fd095c701fd79e" translate="yes" xml:space="preserve">
          <source>This is a bundled copy of &lt;a href=&quot;Object::HashBase&quot;&gt;Object::HashBase&lt;/a&gt;. This file was generated using the &lt;code&gt;/home/exodist/perl5/perlbrew/perls/main/bin/hashbase_inc.pl&lt;/code&gt; script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5816967d821cb6be38c83ea72dd77eb458d174" translate="yes" xml:space="preserve">
          <source>This is a case of convergent evolution with Joshua Pritikin's &lt;a href=&quot;../test&quot;&gt;Test&lt;/a&gt; module. I was largely unaware of its existence when I'd first written my own &lt;code&gt;ok()&lt;/code&gt; routines. This module exists because I can't figure out how to easily wedge test names into Test's interface (along with a few other problems).</source>
          <target state="translated">这是Joshua Pritikin的&amp;ldquo; &lt;a href=&quot;../test&quot;&gt;测试&amp;rdquo;&lt;/a&gt;模块收敛融合的一个案例。当我第一次编写自己的 &lt;code&gt;ok()&lt;/code&gt; 例程时，我基本上不知道它的存在。该模块的存在是因为我无法弄清楚如何轻松地将测试名称插入Test的界面（以及其他一些问题）。</target>
        </trans-unit>
        <trans-unit id="54c770ad3f7a82f2269261b07541b2b2f66f381b" translate="yes" xml:space="preserve">
          <source>This is a case of convergent evolution with Joshua Pritikin's &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; module. I was largely unaware of its existence when I'd first written my own &lt;code&gt;ok()&lt;/code&gt; routines. This module exists because I can't figure out how to easily wedge test names into Test's interface (along with a few other problems).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fc5a87a825ec27b25306a412b0a1048b673845" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object and returns a reference to the new interior sequence object. It should be given two keyword arguments. The &lt;code&gt;-ldelim&lt;/code&gt; keyword indicates the corresponding left-delimiter of the interior sequence (e.g. '&amp;lt;'). The &lt;code&gt;-name&lt;/code&gt; keyword indicates the name of the corresponding interior sequence command, such as &lt;code&gt;I&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt; . The &lt;code&gt;-file&lt;/code&gt; and &lt;code&gt;-line&lt;/code&gt; keywords indicate the filename and line number corresponding to the beginning of the interior sequence. If the &lt;code&gt;$ptree&lt;/code&gt; argument is given, it must be the last argument, and it must be either string, or else an array-ref suitable for passing to &lt;b&gt;Pod::ParseTree::new&lt;/b&gt; (or it may be a reference to a Pod::ParseTree object).</source>
          <target state="translated">这是一个构造 &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; 对象并返回对新内部序列对象的引用的类方法。应该给它两个关键字参数。所述 &lt;code&gt;-ldelim&lt;/code&gt; 关键字指示内部序列的对应的左分隔符（例如&amp;ldquo;&amp;lt;&amp;rdquo;）。所述 &lt;code&gt;-name&lt;/code&gt; 关键字指示相应的内部序列命令，如名称 &lt;code&gt;I&lt;/code&gt; 或 &lt;code&gt;B&lt;/code&gt; 或 &lt;code&gt;C&lt;/code&gt; 。该 &lt;code&gt;-file&lt;/code&gt; 和 &lt;code&gt;-line&lt;/code&gt; 关键字指示对应于内部序列开始的文件名和行号。如果 &lt;code&gt;$ptree&lt;/code&gt; 给定参数，它必须是最后一个参数，并且必须是字符串，或者是适合传递给&lt;b&gt;Pod :: ParseTree :: new&lt;/b&gt;的array-ref （或者可以是对Pod :: ParseTree对象的引用） 。</target>
        </trans-unit>
        <trans-unit id="29f55cb5b171aa91fa3174d7342b227ed1f417e9" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object and returns a reference to the new paragraph object. It may be given one or two keyword arguments. The &lt;code&gt;-text&lt;/code&gt; keyword indicates the corresponding text of the POD paragraph. The &lt;code&gt;-name&lt;/code&gt; keyword indicates the name of the corresponding POD command, such as &lt;code&gt;head1&lt;/code&gt; or &lt;code&gt;item&lt;/code&gt; (it should</source>
          <target state="translated">这是一个构造 &lt;code&gt;Pod::Paragraph&lt;/code&gt; 对象并返回对新段落对象的引用的类方法。可以给它一个或两个关键字参数。该 &lt;code&gt;-text&lt;/code&gt; 关键字表示POD款的相应文字。所述 &lt;code&gt;-name&lt;/code&gt; 关键字指示相应的POD命令的名称，诸如 &lt;code&gt;head1&lt;/code&gt; 或 &lt;code&gt;item&lt;/code&gt; （它应该</target>
        </trans-unit>
        <trans-unit id="331988b0033be159e38f1f3db9e7086fd5ac78d2" translate="yes" xml:space="preserve">
          <source>This is a class method that constructs a &lt;code&gt;Pod::Parse_tree&lt;/code&gt; object and returns a reference to the new parse-tree. If a single-argument is given, it must be a reference to an array, and is used to initialize the root (top) of the parse tree.</source>
          <target state="translated">这是一个构造 &lt;code&gt;Pod::Parse_tree&lt;/code&gt; 对象并返回对新分析树的引用的类方法。如果给出单参数，则它必须是对数组的引用，并用于初始化解析树的根（顶部）。</target>
        </trans-unit>
        <trans-unit id="135e61a3e6ed1b5dcdd255926dda22779c807d83" translate="yes" xml:space="preserve">
          <source>This is a classic race condition: you take two steps to do something which must be done in one. That's why computer hardware provides an atomic test-and-set instruction. In theory, this &quot;ought&quot; to work:</source>
          <target state="translated">这是一个典型的竞赛条件:你用两步来做必须一步完成的事情。这就是为什么计算机硬件提供了一个原子测试和设置指令。理论上,这 &quot;应该 &quot;是可行的。</target>
        </trans-unit>
        <trans-unit id="06ed0aa0bcc2d08b1ae41c2e1fbf2ac9199a80b7" translate="yes" xml:space="preserve">
          <source>This is a cleanup variable for try test programs. Internal Configure use only.</source>
          <target state="translated">这是尝试测试程序的清理变量。仅供内部配置使用。</target>
        </trans-unit>
        <trans-unit id="15d31d32837b2199fecd9abd8b0259d5c2027995" translate="yes" xml:space="preserve">
          <source>This is a collection of words of wisdom for a Perl porter; some of it is only useful to the pumpkin holder, but most of it applies to anyone wanting to go about Perl development.</source>
          <target state="translated">这是一个Perl搬运工的智慧之言的集合;其中有些只对南瓜持有者有用,但大部分适用于任何想要进行Perl开发的人。</target>
        </trans-unit>
        <trans-unit id="50e9aa2a5393c1306b4554160b04a4a7e4b9e963" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;fail()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;. This can be used to write clearer and shorter code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4ec84482d25e756661a254bc11b6d3a2c40470" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;pass()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;. You can use this if you do not plan to do anything with the context after sending the event. This helps write more clear and compact code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778151eacaa3efa499054aa859852387460cc393" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;send_ev2()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70a20942ca880b385d3fc824ba90f3bd360b8ca" translate="yes" xml:space="preserve">
          <source>This is a combination of &lt;code&gt;send_event()&lt;/code&gt; and &lt;code&gt;release()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12519510bc7bbd2ae4104e8caa159039e5db37c2" translate="yes" xml:space="preserve">
          <source>This is a combination of the previous two forms. It is valid only when not under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; (normal identifier rules apply when under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt;). The form is a sigil, followed by text in braces, where the first character is any one of the characters in the range &lt;code&gt;[\x80-\xFF]&lt;/code&gt; followed by ASCII word characters up to the trailing brace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a03e08bc2123708a34ec2db4804cf0d2100751" translate="yes" xml:space="preserve">
          <source>This is a common error when trying to build perl on Solaris 2.6 with a gcc installation from Solaris 2.5 or 2.5.1. The Solaris header files changed, so you need to update your gcc installation. You can either rerun the fixincludes script from gcc or take the opportunity to update your gcc installation.</source>
          <target state="translated">这是一个常见的错误,当你试图在Solaris 2.6上使用Solaris 2.5或2.5.1的gcc安装来构建perl时。Solaris的头文件发生了变化,所以你需要更新你的gcc安装。你可以重新运行gcc中的fixincludes脚本,或者借此机会更新你的gcc安装。</target>
        </trans-unit>
        <trans-unit id="d6d389ed280acec1d0e8a48d7b965ec940a7e391" translate="yes" xml:space="preserve">
          <source>This is a convenience wrapper around &lt;code&gt;package_versions_from_directory&lt;/code&gt; to generate a CPAN META &lt;code&gt;provides&lt;/code&gt; data structure. It takes key/value pairs. Valid option keys include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e4e2616b1e858820e63e7f00c945ce3c9f307d" translate="yes" xml:space="preserve">
          <source>This is a copy of &lt;a href=&quot;IO::Scalar&quot;&gt;IO::Scalar&lt;/a&gt; which ships with &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; to support scalar references as filehandles on Perl 5.6. Newer versions of Perl simply use &lt;code&gt;open()&lt;/code&gt;'s built in support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff129a99820711b57abb25f1b58ba7136b7e8cde" translate="yes" xml:space="preserve">
          <source>This is a difficult question to answer, and the best answer is only a guess.</source>
          <target state="translated">这个问题很难回答,最好的答案也只是猜测。</target>
        </trans-unit>
        <trans-unit id="b8d839dd828060570d067675a559441bcbad521a" translate="yes" xml:space="preserve">
          <source>This is a drop in replacement for Test::Simple which you can switch to once you get the hang of basic testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01f884a06c4ddeafbc3fcceec68d66b7b226e93" translate="yes" xml:space="preserve">
          <source>This is a factory class that takes a &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; and runs it through all the registered &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s to see which one should handle the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999f0dc4cf91e26f969aecc31f8b8b85ae8a6af3" translate="yes" xml:space="preserve">
          <source>This is a factory class that takes a &lt;a href=&quot;source&quot;&gt;TAP::Parser::Source&lt;/a&gt; and runs it through all the registered &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s to see which one should handle the source.</source>
          <target state="translated">这是一个工厂类，它使用&lt;a href=&quot;source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt;并通过所有已注册的&lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler对其&lt;/a&gt;运行，以查看哪个应处理源。</target>
        </trans-unit>
        <trans-unit id="c43e76a8b7a7a6439251d5db4f28f61ba4f7ca79" translate="yes" xml:space="preserve">
          <source>This is a fancy bracketed character class that can be used for more readable and less error-prone classes, and to perform set operations, such as intersection. An example is</source>
          <target state="translated">这是一个花哨的括号字符类,可以用于可读性更强、更不容易出错的类,也可以用于执行集合操作,比如交集。一个例子是</target>
        </trans-unit>
        <trans-unit id="bd5b0b089eff91377cede66c47419fc9845c1784" translate="yes" xml:space="preserve">
          <source>This is a fixed variant of T_HVREF that decrements the refcount appropriately when returning an HV*. Introduced in perl 5.15.4.</source>
          <target state="translated">这是 T_HVREF 的一个固定变体,当返回 HV*时,它会适当地减少 refcount。在 perl 5.15.4 中引入。</target>
        </trans-unit>
        <trans-unit id="2afb142501471156b20b535936f7b6ddbbaafcb0" translate="yes" xml:space="preserve">
          <source>This is a fully ported Perl for OS/390 Version 2 Release 3, 5, 6, 7, 8, and 9. It may work on other versions or releases, but those are the ones we have tested it on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926e4c62112da36d18d2c1c89330bc60c9162eb2" translate="yes" xml:space="preserve">
          <source>This is a fully ported Perl for OS/390 Version 2 Release 3, 5, 6, 7, 8, and 9. It may work on other versions or releases, but those are the ones we've tested it on.</source>
          <target state="translated">这是一个完全移植的Perl,适用于OS/390第2版第3、5、6、7、8和9版。它可能会在其他版本或版本上工作,但这些都是我们测试过的版本。</target>
        </trans-unit>
        <trans-unit id="372ffff7fde6d07d99e54e14755b9d58626070f2" translate="yes" xml:space="preserve">
          <source>This is a function which adds a string, &lt;code&gt;ptr&lt;/code&gt; , of length &lt;code&gt;len&lt;/code&gt; onto the end of the PV stored in &lt;code&gt;sv&lt;/code&gt; . The first thing we do in line 6 is make sure that the SV &lt;b&gt;has&lt;/b&gt; a valid PV, by calling the &lt;code&gt;SvPV_force&lt;/code&gt; macro to force a PV. As a side effect, &lt;code&gt;tlen&lt;/code&gt; gets set to the current value of the PV, and the PV itself is returned to &lt;code&gt;junk&lt;/code&gt; .</source>
          <target state="translated">此函数将长度为 &lt;code&gt;len&lt;/code&gt; 的字符串 &lt;code&gt;ptr&lt;/code&gt; 添加到 &lt;code&gt;sv&lt;/code&gt; 中存储的PV的末尾。在第6行中，我们要做的第一件事是通过调用 &lt;code&gt;SvPV_force&lt;/code&gt; 宏强制PV来确保SV &lt;b&gt;具有&lt;/b&gt;有效的PV。副作用是，将 &lt;code&gt;tlen&lt;/code&gt; 设置为PV的当前值，并且PV本身返回给 &lt;code&gt;junk&lt;/code&gt; 。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="708079f015a020d71bf13eeb81d726c588386d85" translate="yes" xml:space="preserve">
          <source>This is a function which adds a string, &lt;code&gt;ptr&lt;/code&gt;, of length &lt;code&gt;len&lt;/code&gt; onto the end of the PV stored in &lt;code&gt;sv&lt;/code&gt;. The first thing we do in line 6 is make sure that the SV &lt;b&gt;has&lt;/b&gt; a valid PV, by calling the &lt;code&gt;SvPV_force&lt;/code&gt; macro to force a PV. As a side effect, &lt;code&gt;tlen&lt;/code&gt; gets set to the current value of the PV, and the PV itself is returned to &lt;code&gt;junk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2774055b00e3419620eb5d95ca0978a88958d21c" translate="yes" xml:space="preserve">
          <source>This is a fundamental limitation of the way hashes are constructed in Perl. The error messages produced when this happens will often be quite cryptic -- in the worst case there may be none at all, and you'll only later find that something is broken.</source>
          <target state="translated">这是Perl中构造哈希的方式的一个基本限制。当这种情况发生时,产生的错误信息通常是相当神秘的 --在最坏的情况下,可能根本没有任何错误信息,你只会在后来发现有些东西被破坏了。</target>
        </trans-unit>
        <trans-unit id="2c83f909cdae2425d7ef8f9b618e80ba6342629e" translate="yes" xml:space="preserve">
          <source>This is a generic event that lets you customize all fields in the event API. This is useful if you have need for a custom event that does not make sense as a published reusable event subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5634f9ec91b3e104474c739e05fd80458193ebf9" translate="yes" xml:space="preserve">
          <source>This is a get-or-set method for the compartment's operator mask.</source>
          <target state="translated">这是隔间的操作面具的获取或设置方法。</target>
        </trans-unit>
        <trans-unit id="e894d85c5e9df5228e61b20283457ef4058bfbeb" translate="yes" xml:space="preserve">
          <source>This is a good introduction and will direct you towards other man pages that may interest you.</source>
          <target state="translated">这是个很好的介绍,会引导你去看其他你可能感兴趣的男人网页。</target>
        </trans-unit>
        <trans-unit id="8c7d928409a2a83d36eb046953e31000e8fced30" translate="yes" xml:space="preserve">
          <source>This is a hash reference which contains a template as explained in the &lt;code&gt;SYNOPSIS&lt;/code&gt; and &lt;code&gt;Template&lt;/code&gt; section.</source>
          <target state="translated">这是一个哈希参考，其中包含一个模板，如&amp;ldquo; &lt;code&gt;SYNOPSIS&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Template&lt;/code&gt; 部分所述。</target>
        </trans-unit>
        <trans-unit id="abdb64e67c36b80a4a66af77ecfc2b1aa4e68e20" translate="yes" xml:space="preserve">
          <source>This is a hash used internally to track named capture groups and their offsets. The keys are the names of the buffers the values are dualvars, with the IV slot holding the number of buffers with the given name and the pv being an embedded array of I32. The values may also be contained independently in the data array in cases where named backreferences are used.</source>
          <target state="translated">这是一个内部使用的哈希值,用于跟踪命名的捕获组和它们的偏移量。键是缓冲区的名称,值是双变量,IV槽是给定名称的缓冲区数量,pv是I32的嵌入式数组。在使用命名后引用的情况下,这些值也可以独立包含在数据数组中。</target>
        </trans-unit>
        <trans-unit id="b6914fc9df9304338ddc0f7d1b0a521a431d05b1" translate="yes" xml:space="preserve">
          <source>This is a hash with all the known defines as keys. The value is either 0, which means unknown or unset, or 1, which means defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee128cd6218c9f00f0c878c04ed7c1d2ba1c0dcc" translate="yes" xml:space="preserve">
          <source>This is a hashref of module/version pairs. The version indicates the minimum version to load. If no version is provided, any version is assumed to be good enough.</source>
          <target state="translated">这是一个模块/版本对的哈希夫。版本表示要加载的最小版本。如果没有提供版本,则认为任何版本都足够好。</target>
        </trans-unit>
        <trans-unit id="ea245b58697360367e48479db117e287399d341e" translate="yes" xml:space="preserve">
          <source>This is a hashref registering what modules/utilities were known to fail for fetching files (mostly because they weren't installed).</source>
          <target state="translated">这是个哈希夫,记录了哪些模块/实用程序在获取文件时失败(主要是因为它们没有安装)。</target>
        </trans-unit>
        <trans-unit id="13f36e17edc5b55eec70028ba183b328e8dbca62" translate="yes" xml:space="preserve">
          <source>This is a helper macro to avoid preprocessor issues, replaced by nothing unless under DEBUGGING, where it expands to an assert of its argument, followed by a comma (hence the comma operator). If we just used a straight assert(), we would get a comma with nothing before it when not DEBUGGING.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db9d2be56e4bd29861b900e47f6610d6d79219d" translate="yes" xml:space="preserve">
          <source>This is a helper module for &lt;a href=&quot;ExtUtils::Typemaps&quot;&gt;ExtUtils::Typemaps&lt;/a&gt; for quick one-liners, specifically for inclusion of shared typemaps that live on CPAN into an XS file (see SYNOPSIS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b603fea48d1504287b31a7673d8ab99f976baa7" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.0 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7928f53e6ee2a874629878e189efee32c672b7" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.1 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9efdce05ccbe2b0c93e1405a345d20446d5db1" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.2 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f6f354bd0c338955bb1fb9445b4d1cdbc435b5" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.3 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578907e068f231060c64ecb50b7600e276be1ad5" translate="yes" xml:space="preserve">
          <source>This is a historical copy of the version 1.4 specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1fab382e0a7925a5c811854a65acd65148efbd" translate="yes" xml:space="preserve">
          <source>This is a hook called by &lt;code&gt;Test2::IPC::Driver-&amp;gt;abort()&lt;/code&gt;. This is your chance to cleanup when an abort happens. You cannot prevent the abort, but you can gracefully except it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06620991ffe068dc2736a15c53466ae907b72fa9" translate="yes" xml:space="preserve">
          <source>This is a list of cpan modules that have been known to have been broken by the upgrade at one point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a5d6041426b672058c7972e6b8efdd8d6854bf" translate="yes" xml:space="preserve">
          <source>This is a list of optionally locally applied patches. Default is an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7a0a93db9a83c1c6303ceaf2e042280cc43c1" translate="yes" xml:space="preserve">
          <source>This is a list of questions and answers about Unicode in Perl, intended to be read after &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;.</source>
          <target state="translated">这是Perl中有关Unicode的问答列表，打算在&lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;之后阅读。</target>
        </trans-unit>
        <trans-unit id="36d9a4f8cf6a08db2c492aa7d56c16aa12a7c5d3" translate="yes" xml:space="preserve">
          <source>This is a little bit more complex in the case of UTF-8, see what &lt;code&gt;Perl_reg_numbered_buff_length&lt;/code&gt; does with &lt;a href=&quot;perlapi#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;.</source>
          <target state="translated">对于UTF-8，这有点复杂，请参阅 &lt;code&gt;Perl_reg_numbered_buff_length&lt;/code&gt; 对&lt;a href=&quot;perlapi#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen的作用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4901f78af354a736c130e92964e260be63c159d4" translate="yes" xml:space="preserve">
          <source>This is a macro that evaluates to a string constant of the UTF-8 bytes that define the Unicode BYTE ORDER MARK (U+FEFF) for the platform that perl is compiled on. This allows code to use a mnemonic for this character that works on both ASCII and EBCDIC platforms. &lt;code&gt;sizeof(BOM_UTF8) - 1&lt;/code&gt; can be used to get its length in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bb2f1fa60e6e4aabfb57df2cd30391606718c5" translate="yes" xml:space="preserve">
          <source>This is a macro that evaluates to a string constant of the UTF-8 bytes that define the Unicode REPLACEMENT CHARACTER (U+FFFD) for the platform that perl is compiled on. This allows code to use a mnemonic for this character that works on both ASCII and EBCDIC platforms. &lt;code&gt;sizeof(REPLACEMENT_CHARACTER_UTF8) - 1&lt;/code&gt; can be used to get its length in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ee3c54bcb807a66fe7b80e3caf8861bbb44a5c" translate="yes" xml:space="preserve">
          <source>This is a message from your shell telling you that the command 'ar' was not found. You need to check your PATH environment variable to make sure that it includes the directory with the 'ar' command. This is a common problem on Solaris, where 'ar' is in the /usr/ccs/bin/ directory.</source>
          <target state="translated">这是你的shell发出的信息,告诉你没有找到'ar'命令。你需要检查你的PATH环境变量,以确保它包括'ar'命令的目录。这是Solaris上常见的问题,因为'ar'在/usr/ccs/bin/目录下。</target>
        </trans-unit>
        <trans-unit id="7be9582165bd5c245d33269d0775adef5b86c2d1" translate="yes" xml:space="preserve">
          <source>This is a misleadingly-named synonym for &lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt;. On ASCII-ish platforms, the name isn't misleading: the ASCII-range characters are exactly the UTF-8 invariants. But EBCDIC machines have more invariants than just the ASCII characters, so &lt;code&gt;is_invariant_string&lt;/code&gt; is preferred.</source>
          <target state="translated">这是&lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string的&lt;/a&gt;具有误导性的同义词。在ASCII平台上，该名称不会引起误解：ASCII范围字符恰好是UTF-8不变式。但是EBCDIC机器不仅仅具有ASCII字符而具有更多的不变量，因此 &lt;code&gt;is_invariant_string&lt;/code&gt; 是首选。</target>
        </trans-unit>
        <trans-unit id="c69da4ed0205aa990de29ccffe5609edc6392c10" translate="yes" xml:space="preserve">
          <source>This is a misleadingly-named synonym for &lt;a href=&quot;#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot;&lt;/a&gt;. On ASCII-ish platforms, the name isn't misleading: the ASCII-range characters are exactly the UTF-8 invariants. But EBCDIC machines have more invariants than just the ASCII characters, so &lt;code&gt;is_utf8_invariant_string&lt;/code&gt; is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de824f4204bca39b6173554bd682eeaf59e1fe59" translate="yes" xml:space="preserve">
          <source>This is a no-op on Win32.</source>
          <target state="translated">这在Win32上是不可能的。</target>
        </trans-unit>
        <trans-unit id="7c97b390951ae9bd8a25bf05c714cdf4d686ebf3" translate="yes" xml:space="preserve">
          <source>This is a noop provided for completeness.</source>
          <target state="translated">这是为完整而提供的noop。</target>
        </trans-unit>
        <trans-unit id="cad6dd9d37300229c43fc4982c7046b422a38ba9" translate="yes" xml:space="preserve">
          <source>This is a perl-friendly wrapper for the SetFilePointer API (below). &lt;code&gt;$ivOffset&lt;/code&gt; can be a 64 bit integer or &lt;code&gt;Math::BigInt&lt;/code&gt; object if your Perl doesn't have 64 bit integers. The return value is the new offset and will likewise be a 64 bit integer or a &lt;code&gt;Math::BigInt&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b98a2fdc86ae4c3444a314c0304e18f2968e2d" translate="yes" xml:space="preserve">
          <source>This is a placeholder option.</source>
          <target state="translated">这是一个占位选项。</target>
        </trans-unit>
        <trans-unit id="7c861f566285d766324a3adafaf95c9b329a80f7" translate="yes" xml:space="preserve">
          <source>This is a port of Perl 5.22.1, it is a fresh port and not in any way compatible with my previous ports of Perl 5.8 and 5.16.3. This means you will need to reinstall / rebuild any third party modules you have installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309f4be6a68d1ca1ce9f563923f5229fee286990" translate="yes" xml:space="preserve">
          <source>This is a ported perl for the POSIX subsystem in BS2000 VERSION OSD V3.1A or later. It may work on other versions, but we started porting and testing it with 3.1A and are currently using Version V4.0A.</source>
          <target state="translated">这是为BS2000 VERSION OSD V3.1A或更高版本的POSIX子系统移植的perl。它可能会在其他版本上工作,但我们从3.1A开始移植和测试它,目前使用的是V4.0A版本。</target>
        </trans-unit>
        <trans-unit id="639c8df7e83fc87480520c466044037ac91d5b6f" translate="yes" xml:space="preserve">
          <source>This is a protocol used by some firewall ftp proxies. It is used to authorise the user to send data out. If both arguments are not specified then &lt;code&gt;authorize&lt;/code&gt; uses &lt;code&gt;Net::Netrc&lt;/code&gt; to do a lookup.</source>
          <target state="translated">这是某些防火墙ftp代理使用的协议。它用于授权用户发送数据。如果两个参数都未指定，则 &lt;code&gt;authorize&lt;/code&gt; 使用 &lt;code&gt;Net::Netrc&lt;/code&gt; 进行查找。</target>
        </trans-unit>
        <trans-unit id="82750308b15340e2bc5e38d801e8c14df884ca99" translate="yes" xml:space="preserve">
          <source>This is a quick reference to Perl's regular expressions. For full information see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, as well as the &lt;a href=&quot;#SEE-ALSO&quot;&gt;&quot;SEE ALSO&quot;&lt;/a&gt; section in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b9db060b8091b2af5afc80f2eb9e19755899c4" translate="yes" xml:space="preserve">
          <source>This is a quick reference to Perl's regular expressions. For full information see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; and &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;, as well as the &lt;a href=&quot;#SEE-ALSO&quot;&gt;SEE ALSO&lt;/a&gt; section in this document.</source>
          <target state="translated">这是对Perl正则表达式的快速参考。有关完整信息，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;和&lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;，以及本文档中的&amp;ldquo; 另请&lt;a href=&quot;#SEE-ALSO&quot;&gt;参阅&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="d47823b6d4d1bf90c0ec374b8fb409bfdb682e4b" translate="yes" xml:space="preserve">
          <source>This is a re-implementation of stdio-like buffering written as a PerlIO layer. As such it will call whatever layer is below it for its operations, typically &lt;code&gt;:unix&lt;/code&gt; .</source>
          <target state="translated">这是写为PerlIO层的类stdio缓冲的重新实现。这样，它将调用其下面的任何层进行操作，通常是 &lt;code&gt;:unix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c07aa2f3524b873fd324bdd6f2f6fa2ff3e120b7" translate="yes" xml:space="preserve">
          <source>This is a re-implementation of stdio-like buffering written as a PerlIO layer. As such it will call whatever layer is below it for its operations, typically &lt;code&gt;:unix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e930eeb8d1107d985a15ebeb47b4f046e00dd2" translate="yes" xml:space="preserve">
          <source>This is a real error, and the partial sequence is all we're going to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72833b07fdaaa27353877ad8c40f0425a069181" translate="yes" xml:space="preserve">
          <source>This is a reference card for people who are familiar with the C library and who want to do things the Perl way; to tell them which functions they ought to use instead of the more normal C functions.</source>
          <target state="translated">这是为那些熟悉C库,但又想用Perl方式做事的人准备的参考卡片;告诉他们应该使用哪些函数,而不是更普通的C函数。</target>
        </trans-unit>
        <trans-unit id="c471b4ac155563a00fba4ae9a0887cfc3abb5085" translate="yes" xml:space="preserve">
          <source>This is a reference to a hash of named arguments which need checking.</source>
          <target state="translated">这是对需要检查的命名参数的哈希的引用。</target>
        </trans-unit>
        <trans-unit id="3afd1b8fae5b72ccc5141dfe79c691921d5825d2" translate="yes" xml:space="preserve">
          <source>This is a replacement for an earlier Pod::Text module written by Tom Christiansen. It has a revamped interface, since it now uses Pod::Parser, but an interface roughly compatible with the old Pod::Text::pod2text() function is still available. Please change to the new calling convention, though.</source>
          <target state="translated">这是Tom Christiansen编写的早期Pod::Text模块的替代品。它有一个全新的界面,因为它现在使用了Pod::Parser,但是一个与旧的Pod::Text::pod2text()函数大致兼容的界面仍然可用。不过请改成新的调用约定。</target>
        </trans-unit>
        <trans-unit id="c47cbb12fb76c06a9104b6dcce71cb1371c44a36" translate="yes" xml:space="preserve">
          <source>This is a replacement for an earlier Pod::Text module written by Tom Christiansen. It has a revamped interface, since it now uses Pod::Simple, but an interface roughly compatible with the old Pod::Text::pod2text() function is still available. Please change to the new calling convention, though.</source>
          <target state="translated">这是Tom Christiansen编写的早期Pod::Text模块的替代品。它有一个全新的界面,因为它现在使用了Pod::Simple,但是一个与旧的Pod::Text::pod2text()函数大致兼容的界面仍然可用。不过请改成新的调用约定。</target>
        </trans-unit>
        <trans-unit id="3b47b707c5aa2685e694887a6a732f13742fa45a" translate="yes" xml:space="preserve">
          <source>This is a runtime equivalent to &lt;code&gt;\N{...}&lt;/code&gt; .</source>
          <target state="translated">这是等效于 &lt;code&gt;\N{...}&lt;/code&gt; 的运行时。</target>
        </trans-unit>
        <trans-unit id="7df2ed11242941585186bf8621f08062eb4ee123" translate="yes" xml:space="preserve">
          <source>This is a runtime equivalent to &lt;code&gt;\N{...}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9da988cd5eab1bf4131dbddff40049241ae791" translate="yes" xml:space="preserve">
          <source>This is a safer version of &lt;a href=&quot;#UTF8SKIP&quot;&gt;&quot;&lt;code&gt;UTF8SKIP&lt;/code&gt;&quot;&lt;/a&gt;, but still not as safe as &lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;&quot;&lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt;&quot;&lt;/a&gt;. This version doesn't blindly assume that the input string pointed to by &lt;code&gt;s&lt;/code&gt; is well-formed, but verifies that there isn't a NUL terminating character before the expected end of the next character in &lt;code&gt;s&lt;/code&gt;. The length &lt;code&gt;UTF8_CHK_SKIP&lt;/code&gt; returns stops just before any such NUL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a879136a0009e169d98349a2353c9b002b70d9" translate="yes" xml:space="preserve">
          <source>This is a set of four-letter (capitalized) codes from ISO 15924 such as 'Phnx' for Phoenician. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">这是一套来自ISO 15924的四字母(大写)代码,如腓尼基语的 &quot;Phnx&quot;。它还包括列入IANA语言登记册的这套代码的补充内容。</target>
        </trans-unit>
        <trans-unit id="6ef813cd850a9f27ba1c4663d4e71f25b5053fb3" translate="yes" xml:space="preserve">
          <source>This is a set of three-digit numeric codes from ISO 15924 such as 115 for Phoenician.</source>
          <target state="translated">这是一组来自ISO 15924的三位数数字代码,如115代表腓尼基人。</target>
        </trans-unit>
        <trans-unit id="349f283b1feb640d3ec35d62b03e25d6ddada207" translate="yes" xml:space="preserve">
          <source>This is a set of three-letter (uppercase) codes from ISO 4217 such as EUR for Euro.</source>
          <target state="translated">这是一组来自ISO 4217的三个字母(大写)代码,如EUR代表欧元。</target>
        </trans-unit>
        <trans-unit id="17d4b87831fc36eb513ece10122e95f8dc8ba998" translate="yes" xml:space="preserve">
          <source>This is a short description of the purpose of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6241a7679be2105aef445a1326e4d5af9e0ed08e" translate="yes" xml:space="preserve">
          <source>This is a short tutorial on writing a simple module with MakeMaker. It's really not that hard.</source>
          <target state="translated">这是一个关于用MakeMaker编写一个简单模块的简短教程。其实并不难。</target>
        </trans-unit>
        <trans-unit id="53100bf0748f5ba489bc4dc460d2dfa8f3afc641" translate="yes" xml:space="preserve">
          <source>This is a short way of setting &lt;code&gt;gnu_compat&lt;/code&gt;&lt;code&gt;bundling&lt;/code&gt;&lt;code&gt;permute&lt;/code&gt;&lt;code&gt;no_getopt_compat&lt;/code&gt; . With &lt;code&gt;gnu_getopt&lt;/code&gt; , command line handling should be fully compatible with GNU getopt_long().</source>
          <target state="translated">这是设置的一小段路 &lt;code&gt;gnu_compat&lt;/code&gt; &lt;code&gt;bundling&lt;/code&gt; &lt;code&gt;permute&lt;/code&gt; &lt;code&gt;no_getopt_compat&lt;/code&gt; 。使用 &lt;code&gt;gnu_getopt&lt;/code&gt; ，命令行处理应该与GNU getopt_long（）完全兼容。</target>
        </trans-unit>
        <trans-unit id="c6c30e1d8e68a2b36cd4e4515119a97629e3b7f3" translate="yes" xml:space="preserve">
          <source>This is a short way of setting &lt;code&gt;gnu_compat&lt;/code&gt;&lt;code&gt;bundling&lt;/code&gt;&lt;code&gt;permute&lt;/code&gt;&lt;code&gt;no_getopt_compat&lt;/code&gt;. With &lt;code&gt;gnu_getopt&lt;/code&gt;, command line handling should be reasonably compatible with GNU getopt_long().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af9997becadfe87d824ab8762ffccd7719bb2b4" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;end&quot;&lt;/code&gt;</source>
          <target state="translated">这是 &lt;code&gt;$token-&amp;gt;type() eq &quot;end&quot;&lt;/code&gt; 的快捷方式</target>
        </trans-unit>
        <trans-unit id="588934f1b5f409b7ed4ee0102675e3e7a80e417d" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;start&quot;&lt;/code&gt;</source>
          <target state="translated">这是 &lt;code&gt;$token-&amp;gt;type() eq &quot;start&quot;&lt;/code&gt; 的快捷方式</target>
        </trans-unit>
        <trans-unit id="cf3172ad5af1d75bb916c8179d00c2eb32b1726b" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;$token-&amp;gt;type() eq &quot;text&quot;&lt;/code&gt;</source>
          <target state="translated">这是 &lt;code&gt;$token-&amp;gt;type() eq &quot;text&quot;&lt;/code&gt; 的快捷方式</target>
        </trans-unit>
        <trans-unit id="14414929d404b298096e05330ae3a552582cc596" translate="yes" xml:space="preserve">
          <source>This is a shortcut method for creating a new parser object, setting the output handle to STDOUT, and then processing the specified file (or filehandle, or in-memory document). This is handy for one-liners like this:</source>
          <target state="translated">这是一个快捷方法,用于创建一个新的解析器对象,将输出句柄设置为STDOUT,然后处理指定的文件(或filehandle,或内存中的文档)。这对于像这样的单行本很方便。</target>
        </trans-unit>
        <trans-unit id="dcc6d2562c6f7206f328c3550bdc5e8e52460de3" translate="yes" xml:space="preserve">
          <source>This is a side-effect of &lt;code&gt;$^W&lt;/code&gt; being dynamically scoped.</source>
          <target state="translated">这是 &lt;code&gt;$^W&lt;/code&gt; 动态作用域的副作用。</target>
        </trans-unit>
        <trans-unit id="8fa6df25c130c949bab77362ff50f938867d104d" translate="yes" xml:space="preserve">
          <source>This is a simple base class used by &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; to store objects that represent the current bit of test output data from TAP (usually a single line). Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">这是&lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt;使用的简单基类，用于存储表示TAP的测试输出数据的当前位的对象（通常为一行）。除非您要进行子类化，否则可能不需要直接使用此模块。</target>
        </trans-unit>
        <trans-unit id="70e0073b6d6a8609dc729e6d6d928dac9be45307" translate="yes" xml:space="preserve">
          <source>This is a simple base class used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt; to store objects that represent the current bit of test output data from TAP (usually a single line). Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7185e61c4885f8a233ed21b8b5981172205d46a1" translate="yes" xml:space="preserve">
          <source>This is a simple factory class which returns a &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass representing the current bit of test data from TAP (usually a single line). It is used primarily by &lt;a href=&quot;TAP::Parser::Grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;. Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6a517a000eee7c9d8650e790b06bace86ece1d" translate="yes" xml:space="preserve">
          <source>This is a simple factory class which returns a &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; subclass representing the current bit of test data from TAP (usually a single line). It is used primarily by &lt;a href=&quot;grammar&quot;&gt;TAP::Parser::Grammar&lt;/a&gt;. Unless you're subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">这是一个简单的工厂类，它返回一个&lt;a href=&quot;result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;子类，该子类表示TAP中测试数据的当前位（通常为一行）。它主要由&lt;a href=&quot;grammar&quot;&gt;TAP :: Parser :: Grammar使用&lt;/a&gt;。除非您要进行子类化，否则可能不需要直接使用此模块。</target>
        </trans-unit>
        <trans-unit id="ae7e075e46130a389abcce2b8eca77b2b0799334" translate="yes" xml:space="preserve">
          <source>This is a simple iterator base class that defines &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt;'s iterator API. Iterators are typically created from &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s.</source>
          <target state="translated">这是一个简单的迭代器基类，它定义了&lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt;的迭代器API。迭代器通常是从&lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt;创建的。</target>
        </trans-unit>
        <trans-unit id="4069d913ee16241ecc681da22f86977bd49afb8f" translate="yes" xml:space="preserve">
          <source>This is a simple iterator base class that defines &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;'s iterator API. Iterators are typically created from &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef2b28fd5eff705f1f406ac6e66e9bba64a8d81" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for arrays of scalar content, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">这是&lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt;使用的简单的标量内容数组的迭代器包装器。除非您正在编写插件或子类，否则可能不需要直接使用此模块。</target>
        </trans-unit>
        <trans-unit id="b6d417eccb38d31c23ab96e3cf68e4a816b76541" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for arrays of scalar content, used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6211175f40b02f3bcb25615dc63d424f5b04b85e" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for executing external processes, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">这是一个简单的迭代器包装器，用于执行&lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser&lt;/a&gt;使用的外部进程。除非您正在编写插件或子类，否则可能不需要直接使用此模块。</target>
        </trans-unit>
        <trans-unit id="6c2b745b6dbe4af61d1702703c27d1890df50b85" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for executing external processes, used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f74f820359ec13407ecd95ebc00861df2faa4a" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for reading from filehandles, used by &lt;a href=&quot;../../parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="translated">这是一个简单的迭代器包装器，用于读取文件句柄，由&lt;a href=&quot;../../parser&quot;&gt;TAP :: Parser使用&lt;/a&gt;。除非您正在编写插件或子类，否则可能不需要直接使用此模块。</target>
        </trans-unit>
        <trans-unit id="50c897102f8db883c5b03ed2150ab040040eb6e3" translate="yes" xml:space="preserve">
          <source>This is a simple iterator wrapper for reading from filehandles, used by &lt;a href=&quot;TAP::Parser&quot;&gt;TAP::Parser&lt;/a&gt;. Unless you're writing a plugin or subclassing, you probably won't need to use this module directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6d528be7b9b50f443385c12d7c3581d3c5b271" translate="yes" xml:space="preserve">
          <source>This is a simple test harness which allows tests to be run and results automatically aggregated and output to STDOUT.</source>
          <target state="translated">这是一个简单的测试线束,它允许测试运行,结果自动汇总并输出到STDOUT。</target>
        </trans-unit>
        <trans-unit id="94c2e1c3d42721757938806d86cea256f2130297" translate="yes" xml:space="preserve">
          <source>This is a small simple module which simplifies the manipulation of @INC at compile time.</source>
          <target state="translated">这是一个简单的小模块,它简化了编译时对@INC的操作。</target>
        </trans-unit>
        <trans-unit id="9fc66897af3216d370b7d29148cefcd6ce1895da" translate="yes" xml:space="preserve">
          <source>This is a somewhat misleadingly-named synonym for &lt;a href=&quot;#is_utf8_invariant_string&quot;&gt;&quot;is_utf8_invariant_string&quot;&lt;/a&gt;. &lt;code&gt;is_utf8_invariant_string&lt;/code&gt; is preferred, as it indicates under what conditions the string is invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed45414649005cf46b9b142e78787c7d0efdd654" translate="yes" xml:space="preserve">
          <source>This is a standard message issued by OS/2 applications. *nix applications die in silence. It is considered to be a feature. One can easily disable this by appropriate sighandlers.</source>
          <target state="translated">这是OS/2应用程序发出的标准信息。*nix应用程序在沉默中死亡。这被认为是一个特性。人们可以通过适当的sighandlers轻松地禁用它。</target>
        </trans-unit>
        <trans-unit id="ae30c10c2c1eb9a5c4373e69ebda02e4f56fd6ac" translate="yes" xml:space="preserve">
          <source>This is a static function and is defined as &lt;code&gt;STATIC S_whatever&lt;/code&gt; , and usually called within the sources as &lt;code&gt;whatever(...)&lt;/code&gt; .</source>
          <target state="translated">这是一个静态函数，定义为 &lt;code&gt;STATIC S_whatever&lt;/code&gt; ，通常在源代码中称为what &lt;code&gt;whatever(...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93db2ec99a46178540e6d933d3db3e813cba4109" translate="yes" xml:space="preserve">
          <source>This is a statically linked &lt;code&gt;a.out&lt;/code&gt; -style executable. It cannot load dynamic Perl extensions. The executable supplied in binary distributions has a lot of extensions prebuilt, thus the above restriction is important only if you use custom-built extensions. This executable is a VIO application.</source>
          <target state="translated">这是一个静态链接的 &lt;code&gt;a.out&lt;/code&gt; 样式的可执行文件。它无法加载动态Perl扩展。二进制发行版中提供的可执行文件具有许多预先构建的扩展，因此仅当您使用定制构建的扩展时，上述限制才重要。该可执行文件是VIO应用程序。</target>
        </trans-unit>
        <trans-unit id="6050386124f32e151c85ac19e4bf7f179cc7ee17" translate="yes" xml:space="preserve">
          <source>This is a statically linked &lt;code&gt;a.out&lt;/code&gt;-style executable. It cannot load dynamic Perl extensions. The executable supplied in binary distributions has a lot of extensions prebuilt, thus the above restriction is important only if you use custom-built extensions. This executable is a VIO application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc094e72af8b9d6622201511120df9125d5e32ff" translate="yes" xml:space="preserve">
          <source>This is a string combining version, subversion and perl_patchlevel (if perl_patchlevel is non-zero). It is typically something like 'version 7 subversion 1' or 'version 7 subversion 1 patchlevel 11224' It is computed here to avoid duplication of code in</source>
          <target state="translated">这是一个结合了版本、subversion 和 perl_patchlevel 的字符串 (如果 perl_patchlevel 为非零)。它通常是类似于 'version 7 subversion 1' 或 'version 7 subversion 1 patchlevel 11224' 这样的字符串。</target>
        </trans-unit>
        <trans-unit id="344924719b1bae83eead5b685f2904260f7cb31e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a YAML block is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到YAML块，则将返回此类的令牌。</target>
        </trans-unit>
        <trans-unit id="cf06d3cd2a668f16a1a9ea1434ebed8459984ced" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a bail out line is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到紧急援助线，将返回此类的令牌。</target>
        </trans-unit>
        <trans-unit id="1c79fb77a91aa29bad4fe0d58e746157c12b1af2" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a comment line is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到注释行，将返回此类的标记。</target>
        </trans-unit>
        <trans-unit id="f5e73059f9980ac5f029fc80717ab9da6cff6341" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a plan line is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到计划行，将返回此类的标记。</target>
        </trans-unit>
        <trans-unit id="dc05d4de16b8c5b025bf96846c216318ce2e7788" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a pragma is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到编译指示，则将返回此类的标记。</target>
        </trans-unit>
        <trans-unit id="173909c91c915dbe5ae4e1761f6ce3015f27ac8e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a test line is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到测试行，将返回此类的标记。</target>
        </trans-unit>
        <trans-unit id="d99a6f5c44525e8196b8a9f8f432a4c8297fe174" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a version line is encountered.</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果遇到版本行，则将返回此类的标记。</target>
        </trans-unit>
        <trans-unit id="f9dc0dfab2b15f7dcded6106f389d289ed7b45a8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if the parser does not recognize the token line. For example:</source>
          <target state="translated">这是&lt;a href=&quot;../result&quot;&gt;TAP :: Parser :: Result&lt;/a&gt;的子类。如果解析器无法识别标记行，则将返回此类的标记。例如：</target>
        </trans-unit>
        <trans-unit id="ed4cd1012a41fb5a1a7060605167f8be93252008" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;../simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.</source>
          <target state="translated">这是&lt;a href=&quot;../simple&quot;&gt;Pod :: Simple&lt;/a&gt;的子类，并继承其所有方法。</target>
        </trans-unit>
        <trans-unit id="01955ea22dd8df7278eac44c179e1001f2515492" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for AIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1e32adacf76af516c3dc09a8537a0753efa981" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for DOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b129a643b34901e62e29707350a374de0680ca" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for QNX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6e1e6b486dea407e580c0e2cc2d98b00f22af0" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for VOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799835149ca383aa8b305d5ede1d01edcaa0b5f8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; which contains functionality for the AT&amp;amp;T U/WIN UNIX on Windows environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340bbc2ea6963bffbbe6941993555f290666f4a1" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;ExtUtils::MM_Win32&quot;&gt;ExtUtils::MM_Win32&lt;/a&gt; containing changes necessary to get MakeMaker playing nice with command.com and other Win9Xisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53215134f5cbc383cac750029f65d6450131026" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple&quot;&gt;Pod::Simple&lt;/a&gt; and inherits all its methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfa4855e0a827a4f18e0ec314a0ed35780940c3" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::Methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. And since, that in turn is a subclass of &lt;a href=&quot;Pod::Simple&quot;&gt;Pod::Simple&lt;/a&gt;, you can use any of its methods. This means you can output to a string instead of a file, or you can parse from an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b62d9459ef18f1f9c6c03ce30dfa6880d75c6b4" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::Methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. The implementation is entirely different than &lt;a href=&quot;Pod::Simple::HTML&quot;&gt;Pod::Simple::HTML&lt;/a&gt;, but it largely preserves the same interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70cd484c0a00bbdef362df23c2f73605109ad33" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::PullParser&quot;&gt;Pod::Simple::PullParser&lt;/a&gt; and inherits all its methods (and options).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5da5a6e2b57264768645b40fe22cfe9caefff93" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;Pod::Simple::PullParserToken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt; and inherits all its methods, and adds these methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107e81f4b7474c7feada5a435bb6963d4db8b587" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a YAML block is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc8b3158257a5918480b25430da2f5fef788dee" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a bail out line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2ba624d979718ad574a041ef9fc50c38c57f03" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a comment line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a263d9e5f13e496a231697a80b724925ad6b4f7" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a plan line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453ae9574c31155ff549670fec7286c3d2e506ee" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a pragma is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b32ff46cc448ac4738c305e0535bec308e1368" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a test line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853461077f357c4d07d54dbd6052fe8b4b619b06" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if a version line is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f89869b3ae635a087404851a64447d99201105d" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt;. A token of this class will be returned if the parser does not recognize the token line. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81afca9fe5e8caf5fd548b6ee9f92134f9dc21dc" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;methody&quot;&gt;Pod::Simple::Methody&lt;/a&gt; and inherits all its methods. The implementation is entirely different than &lt;a href=&quot;html&quot;&gt;Pod::Simple::HTML&lt;/a&gt;, but it largely preserves the same interface.</source>
          <target state="translated">这是&lt;a href=&quot;methody&quot;&gt;Pod :: Simple :: Methody&lt;/a&gt;的子类，并继承其所有方法。该实现与&lt;a href=&quot;html&quot;&gt;Pod :: Simple :: HTML&lt;/a&gt;完全不同，但是在很大程度上保留了相同的接口。</target>
        </trans-unit>
        <trans-unit id="5a42087b4a78a20207066122ca4141600c24be72" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;pullparser&quot;&gt;Pod::Simple::PullParser&lt;/a&gt; and inherits all its methods (and options).</source>
          <target state="translated">这是&lt;a href=&quot;pullparser&quot;&gt;Pod :: Simple :: PullParser&lt;/a&gt;的子类，并继承其所有方法（和选项）。</target>
        </trans-unit>
        <trans-unit id="ea32c34eae791ae221ac4a3cce2869532666d30e" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;pullparsertoken&quot;&gt;Pod::Simple::PullParserToken&lt;/a&gt; and inherits all its methods, and adds these methods:</source>
          <target state="translated">这是&lt;a href=&quot;pullparsertoken&quot;&gt;Pod :: Simple :: PullParserToken&lt;/a&gt;的子类，并继承其所有方法，并添加以下方法：</target>
        </trans-unit>
        <trans-unit id="aa9cce04d90d56b725964eab73e0fca5ac743d29" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for AIX.</source>
          <target state="translated">这是ExtUtils::MM_Unix的一个子类,它包含了AIX的功能。</target>
        </trans-unit>
        <trans-unit id="0d4a1a4cfdafa1cb09a4fb89fe42af2c7616286a" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for DOS.</source>
          <target state="translated">这是ExtUtils::MM_Unix的一个子类,它包含了DOS的功能。</target>
        </trans-unit>
        <trans-unit id="1586bedfb51abdc0ca225f9c3db5c388bf3fe7c7" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for QNX.</source>
          <target state="translated">这是 ExtUtils::MM_Unix 的一个子类,它包含 QNX 的功能。</target>
        </trans-unit>
        <trans-unit id="c6edbaa56530abda8144785f91c81fc02ebf9b90" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for VOS.</source>
          <target state="translated">这是ExtUtils::MM_Unix的一个子类,它包含了VOS的功能。</target>
        </trans-unit>
        <trans-unit id="2e5c7251645932dc8d1dc7c962cbf2e45c3f4094" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Unix which contains functionality for the AT&amp;amp;T U/WIN UNIX on Windows environment.</source>
          <target state="translated">这是ExtUtils :: MM_Unix的子类，它包含Windows环境下AT＆T U / WIN UNIX的功能。</target>
        </trans-unit>
        <trans-unit id="93a42e55d1097c11d0072e86d7f542b3230e6bcf" translate="yes" xml:space="preserve">
          <source>This is a subclass of ExtUtils::MM_Win32 containing changes necessary to get MakeMaker playing nice with command.com and other Win9Xisms.</source>
          <target state="translated">这是ExtUtils::MM_Win32的一个子类,它包含了让MakeMaker与command.com和其他Win9Xisms良好配合的必要改变。</target>
        </trans-unit>
        <trans-unit id="e0b4c6da331b58235bc356124916aaee144c5df3" translate="yes" xml:space="preserve">
          <source>This is a subclass of Test::Builder that overrides many of the methods so that they don't output anything. It also keeps track of its own set of test results so that you can use Test::Builder based modules to perform tests on other Test::Builder based modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8a82ae7e4bcc23be8b85858941e5009748ca04" translate="yes" xml:space="preserve">
          <source>This is a suggestion to the OS to let this thread yield CPU time to other threads. What actually happens is highly dependent upon the underlying thread implementation.</source>
          <target state="translated">这是对操作系统的建议,让这个线程把CPU时间让给其他线程。实际发生的情况很大程度上取决于底层线程的实现。</target>
        </trans-unit>
        <trans-unit id="a6edb8217d2751ef4a763256a458a4449c4b36b5" translate="yes" xml:space="preserve">
          <source>This is a superclass for &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;-based modules. It provides a handful of common functionality and a method of getting at the underlying &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object.</source>
          <target state="translated">这是基于&lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt;的模块的超类。它提供了一些常用功能以及一种获取底层&lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt;对象的方法。</target>
        </trans-unit>
        <trans-unit id="86dcc93cd0bd00d838160a4be7abd927dfe38deb" translate="yes" xml:space="preserve">
          <source>This is a superclass for &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt;-based modules. It provides a handful of common functionality and a method of getting at the underlying &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55903e986f0ab6ec743472dc06cf20bffa759a05" translate="yes" xml:space="preserve">
          <source>This is a synonym for (! foldEQ())</source>
          <target state="translated">这是(!foldEQ())的同义词。</target>
        </trans-unit>
        <trans-unit id="53444e6b25598bcd7a21f4559d1c88a0a3357fc9" translate="yes" xml:space="preserve">
          <source>This is a synonym for (! foldEQ_locale())</source>
          <target state="translated">这是(! foldEQ_locale())的同义词。</target>
        </trans-unit>
        <trans-unit id="fcc6c9fb8ee9fa78c05691f7ab1cdadcae007699" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;a href=&quot;#UTF8SKIP&quot;&gt;&quot;&lt;code&gt;UTF8SKIP&lt;/code&gt;&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e385b7e36cb7a0ced0df625995ab1044114a0c" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;a href=&quot;#my_strtod&quot;&gt;&quot;my_strtod&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a79d3b8039acc12b5d9216412b8358571878c3" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;(! foldEQ())&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d7c8aad7ed8e1a708d44906c3480702f1f0148" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;(! foldEQ_locale())&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc9211f34524643d77b88ccf3fbe69c0926ca68" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;\p{Present_In=*}&lt;/code&gt;</source>
          <target state="translated">这是 &lt;code&gt;\p{Present_In=*}&lt;/code&gt; 的同义词</target>
        </trans-unit>
        <trans-unit id="ef2cd0a3571852b5da355e5994ba81184e031c06" translate="yes" xml:space="preserve">
          <source>This is a template for a function suitable for the &lt;code&gt;uf_val&lt;/code&gt; field in a &lt;code&gt;ufuncs&lt;/code&gt; structure for this call. The &lt;code&gt;uf_set&lt;/code&gt; and &lt;code&gt;uf_index&lt;/code&gt; fields are irrelevant.</source>
          <target state="translated">这是适用于此调用的 &lt;code&gt;ufuncs&lt;/code&gt; 结构中 &lt;code&gt;uf_val&lt;/code&gt; 字段的函数的模板。该 &lt;code&gt;uf_set&lt;/code&gt; 和 &lt;code&gt;uf_index&lt;/code&gt; 字段是无关的。</target>
        </trans-unit>
        <trans-unit id="9a3d72bf731a4c00183b3bacd2aaed590afe1490" translate="yes" xml:space="preserve">
          <source>This is a term used for characters occupying more than one byte.</source>
          <target state="translated">这是一个用于占用一个以上字节的字符的术语。</target>
        </trans-unit>
        <trans-unit id="da67b166e535d5aab2dfd4a4bef7fa2c7dc18440" translate="yes" xml:space="preserve">
          <source>This is a useful alternative to the &lt;code&gt;verbose&lt;/code&gt; key.</source>
          <target state="translated">这是 &lt;code&gt;verbose&lt;/code&gt; 键的有用替代方法。</target>
        </trans-unit>
        <trans-unit id="618f9f0ef250e390bb1ce0844593906ed698aa6a" translate="yes" xml:space="preserve">
          <source>This is a user-pragma. If you're very lucky some code you're using will know that you asked for less CPU usage or ram or fat or... we just can't know. Consult your documentation on everything you're currently using.</source>
          <target state="translated">这是一个用户原则。如果你很幸运的话,一些你正在使用的代码会知道你要求减少CPU的使用量或内存或脂肪或......我们只是不知道。请查阅你目前使用的一切文档。</target>
        </trans-unit>
        <trans-unit id="549c7013b9e1e79516da2acbe0f4cbcc8a435b4f" translate="yes" xml:space="preserve">
          <source>This is a very low-level subtest tool. This is useful for writing tools which produce subtests. This is not intended for people simply writing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9072caacce10e18c36561023f1a3fb675f058f90" translate="yes" xml:space="preserve">
          <source>This is a very scary API function. Please do not use this unless you need to. This is here for &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; and backwards compatibility. This has you directly manipulate the hash instead of returning a new one for performance reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd131d8c6fe42fe0bb5d3832bf575939c9777d0" translate="yes" xml:space="preserve">
          <source>This is a very simple HTTP/1.1 client, designed for doing simple requests without the overhead of a large framework like &lt;a href=&quot;LWP::UserAgent&quot;&gt;LWP::UserAgent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e767810034132a2b4c4370f6987205b3130d0d" translate="yes" xml:space="preserve">
          <source>This is a work in progress. Not much progress by now :-)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65d4664502f4836edff6c3f42d466dce62c114e" translate="yes" xml:space="preserve">
          <source>This is achieved by creating separate watchdog process which spawns the specified program in a separate process session and supervises it: optionally feeds it with input, stores its exit code, stdout and stderr, terminates it in case it runs longer than specified.</source>
          <target state="translated">这是通过创建单独的看门狗进程来实现的,看门狗进程在一个单独的进程会话中生成指定的程序,并监督它:有选择地给它提供输入,存储它的退出代码、stdout和stderr,在它运行的时间超过指定时间时终止它。</target>
        </trans-unit>
        <trans-unit id="bb7efcdf0700fbaadbdc0f648a8badbdf9664612" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::Checker (or Pod::Checker) subclass, and inherits all its options.</source>
          <target state="translated">这实际上是一个Pod::Simple::Checker(或Pod:::Checker)子类,并继承了它的所有选项。</target>
        </trans-unit>
        <trans-unit id="e4a943560ee56b7076fa64d64bd3da44e85a30ca" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::RTF subclass, and inherits all its options.</source>
          <target state="translated">这实际上是一个Pod::Simple::RTF子类,并继承了它的所有选项。</target>
        </trans-unit>
        <trans-unit id="92b8d72a94a8da6c54d9f33ab092eb620ca878de" translate="yes" xml:space="preserve">
          <source>This is actually a Pod::Simple::XMLOutStream subclass, and inherits all its options.</source>
          <target state="translated">这实际上是一个Pod::Simple::XMLOutStream子类,并继承了它的所有选项。</target>
        </trans-unit>
        <trans-unit id="8eda3362231deb25dfd89db58202611c06a3d40c" translate="yes" xml:space="preserve">
          <source>This is all very powerful, of course, and should be used only in moderation to make the world a better place.</source>
          <target state="translated">当然,这都是非常强大的,只应适度使用,让世界变得更美好。</target>
        </trans-unit>
        <trans-unit id="a0a76465b05604833b1a2e0c25409dcb3ddad85c" translate="yes" xml:space="preserve">
          <source>This is also a no-op on Win32.</source>
          <target state="translated">这在Win32上也是没有办法的事情。</target>
        </trans-unit>
        <trans-unit id="a906c4fc08f6c0cd00609aae3ea9167c7850d130" translate="yes" xml:space="preserve">
          <source>This is also helpful for the case where a package lives within a differently named file:</source>
          <target state="translated">这对于一个包住在不同名称的文件中的情况也很有帮助。</target>
        </trans-unit>
        <trans-unit id="783e4cc092057905b6553d7a8d798ecf7ac0db31" translate="yes" xml:space="preserve">
          <source>This is also invalid:</source>
          <target state="translated">这也是无效的。</target>
        </trans-unit>
        <trans-unit id="c1d7e1e2839d2377297de367eca0902f0ba00891" translate="yes" xml:space="preserve">
          <source>This is also the logical inverse of Perl_isfinite().</source>
          <target state="translated">这也是Perl_isfinite()的逻辑反演。</target>
        </trans-unit>
        <trans-unit id="b3fd8f0524f7cd7ff14e2f99856ad3f41ff313f3" translate="yes" xml:space="preserve">
          <source>This is also used to store the name of an autoloaded subroutine in an XS AUTOLOAD routine. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;&quot;Autoloading with XSUBs&quot; in perlguts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c778320b203a5e38261d5a20fb7ed1b70340a749" translate="yes" xml:space="preserve">
          <source>This is also used to store the name of an autoloaded subroutine in an XS AUTOLOAD routine. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Autoloading with XSUBs in perlguts&lt;/a&gt;.</source>
          <target state="translated">这也用于在XS AUTOLOAD例程中存储自动加载的子例程的名称。请参见&lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;在perlguts中使用XSUB自动加载&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6dda58eafcf63f43293998602056ada9565deb26" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt; . Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy seek() to reset things. The &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; doesn't change the position, but it</source>
          <target state="translated">这对于模拟 &lt;code&gt;tail -f&lt;/code&gt; 的应用程序也很有用。一旦您在阅读中击中EOF并睡了一会儿，您（可能）就必须坚持使用虚拟的seek（）来重置事物。在 &lt;code&gt;&lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 不改变立场，但它</target>
        </trans-unit>
        <trans-unit id="545e9279207dbe359d514df130705d9c342445f3" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt; . Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy seek() to reset things. The &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; doesn't change the position, but it</source>
          <target state="translated">这对于模拟 &lt;code&gt;tail -f&lt;/code&gt; 的应用程序也很有用。一旦您在阅读中击中EOF并睡了一会儿，您（可能）就必须坚持使用虚拟的seek（）来重置事物。在 &lt;code&gt;&lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 不改变立场，但它</target>
        </trans-unit>
        <trans-unit id="a52e0f7ca96a5fbe75f9443a3f0c72752cfbabc6" translate="yes" xml:space="preserve">
          <source>This is also useful for applications emulating &lt;code&gt;tail -f&lt;/code&gt;. Once you hit EOF on your read and then sleep for a while, you (probably) have to stick in a dummy &lt;a href=&quot;#seek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;seek&lt;/code&gt;&lt;/a&gt; to reset things. The &lt;a href=&quot;#seek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;seek&lt;/code&gt;&lt;/a&gt; doesn't change the position, but it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e213b7894a106692ed41475e921810e2f2ef96" translate="yes" xml:space="preserve">
          <source>This is an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c90f14631981742f71c6736d15ae2f064f77f93" translate="yes" xml:space="preserve">
          <source>This is an (almost) drop-in replacement for the system &lt;a href=&quot;setlocale(3)&quot;&gt;&lt;code&gt;setlocale(3)&lt;/code&gt;&lt;/a&gt;, taking the same parameters, and returning the same information, except that it returns the correct underlying &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale. Regular &lt;code&gt;setlocale&lt;/code&gt; will instead return &lt;code&gt;C&lt;/code&gt; if the underlying locale has a non-dot decimal point character, or a non-empty thousands separator for displaying floating point numbers. This is because perl keeps that locale category such that it has a dot and empty separator, changing the locale briefly during the operations where the underlying one is required. &lt;code&gt;Perl_setlocale&lt;/code&gt; knows about this, and compensates; regular &lt;code&gt;setlocale&lt;/code&gt; doesn't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd976a317a3ec6f0b4a27e94361a936461d6f366" translate="yes" xml:space="preserve">
          <source>This is an (almost) drop-in replacement for the system &lt;code&gt;&lt;a href=&quot;http://man.he.net/man3/nl_langinfo&quot;&gt;nl_langinfo(3)&lt;/a&gt;&lt;/code&gt;, taking the same &lt;code&gt;item&lt;/code&gt; parameter values, and returning the same information. But it is more thread-safe than regular &lt;code&gt;nl_langinfo()&lt;/code&gt;, and hides the quirks of Perl's locale handling from your code, and can be used on systems that lack a native &lt;code&gt;nl_langinfo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6f47fb722d0ea7678e717327e932adc89f5068" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;omf&lt;/code&gt; -style executable which is dynamically linked to</source>
          <target state="translated">这是 &lt;code&gt;omf&lt;/code&gt; 样式的可执行文件，它动态链接到</target>
        </trans-unit>
        <trans-unit id="dabefce59e417333ca600bd4dd8db5a16251cbf7" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;omf&lt;/code&gt;-style executable which is dynamically linked to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d756c24376672373a010de25a2097378db4129a" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">这是Perl的 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 函数的XS接口。</target>
        </trans-unit>
        <trans-unit id="af496b01592b41744cf75154ff216cf0d89995f5" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">这是Perl &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; 功能的XS接口。</target>
        </trans-unit>
        <trans-unit id="0f224ebf8b5ff108eba2dd2634ead001d06cfcd1" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;die&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4572b24f1be3de6a2a765b1a1cc604739ba54f5" translate="yes" xml:space="preserve">
          <source>This is an XS interface to Perl's &lt;code&gt;warn&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444ad3c538b41852126460958182410c9e29526a" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for &lt;a href=&quot;TAP::Parser::Source&quot;&gt;TAP::Parser::Source&lt;/a&gt; handlers / handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6cd5c9b47acd371c49a0cb03b008b70d97eb82" translate="yes" xml:space="preserve">
          <source>This is an advisory and may not be called in the case where tests are being supplied to Test::Harness by an iterator.</source>
          <target state="translated">这是一个警告,在测试由迭代器提供给Test::Harness的情况下,可能不会被调用。</target>
        </trans-unit>
        <trans-unit id="d19e78208159ce9aa0dcbe21965a831175a968be" translate="yes" xml:space="preserve">
          <source>This is an alias to &lt;code&gt;_to_bytes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a8c80d2e7e01dabcc4dbb94c6ee5f84830f182" translate="yes" xml:space="preserve">
          <source>This is an alternate constructor for a CPAN::Meta::Requirements object. It takes a hash of module names and version requirement strings and returns a new CPAN::Meta::Requirements object. As with add_string_requirement, a version can be a Perl &quot;v-string&quot;. Optionally, you can supply a hash-reference of options, exactly as with the &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e308dd432d69b5157566a6a8a06cea4450cd898c" translate="yes" xml:space="preserve">
          <source>This is an architecture-independent macro to copy one structure to another.</source>
          <target state="translated">这是一个独立于架构的宏,用于将一个结构复制到另一个结构。</target>
        </trans-unit>
        <trans-unit id="142891d3e046c25d09b04f0976a954076a30931f" translate="yes" xml:space="preserve">
          <source>This is an array ref holding blacklisted modules/utilities for fetching files with.</source>
          <target state="translated">这是一个数组 ref,其中包含了用于获取文件的黑名单模块/实用程序。</target>
        </trans-unit>
        <trans-unit id="491c41877d76840e5259e347f3a17d7e2c10b8de" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output sent to STDOUT the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;&quot;full_buffer&quot;&lt;/a&gt; apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df12371f4d4ec63415fcab8f4e275a767f08fe3d" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output sent to STDOUT the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; apply.</source>
          <target state="translated">这是一个数组引用，其中包含所有发送到STDOUT的命令生成的输出。&lt;a href=&quot;#full_buffer&quot;&gt;full_buffer中&lt;/a&gt;的注释适用。</target>
        </trans-unit>
        <trans-unit id="65d3c0310d92313bd54c100e1d80d7755b1697de" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output the command generated. Note that buffers are only available if you have &lt;a href=&quot;IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; installed, or if your system is able to work with &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; -- see below). Otherwise, this element will be &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8a9ac748db8e604ab1a3be03c2cd4ff11d70fa" translate="yes" xml:space="preserve">
          <source>This is an array reference containing all the output the command generated. Note that buffers are only available if you have &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; installed, or if your system is able to work with &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; -- see below). Otherwise, this element will be &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">这是一个数组引用，其中包含命令生成的所有输出。请注意，只有在安装了&lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt;或系统能够使用&lt;a href=&quot;open3&quot;&gt;IPC :: Open3时，缓冲区才可用&lt;/a&gt; -参见下文）。否则，此元素将为 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e51b6f86f1f86cad28f13e9b83a9b2933429150" translate="yes" xml:space="preserve">
          <source>This is an arrayreference containing all the output sent to STDERR the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;&quot;full_buffer&quot;&lt;/a&gt; apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18758c49f12c582c5080bf3c3ccaff6f97f99da" translate="yes" xml:space="preserve">
          <source>This is an arrayreference containing all the output sent to STDERR the command generated. The notes from &lt;a href=&quot;#full_buffer&quot;&gt;full_buffer&lt;/a&gt; apply.</source>
          <target state="translated">这是一个数组引用，其中包含将生成的命令发送到STDERR的所有输出。&lt;a href=&quot;#full_buffer&quot;&gt;full_buffer中&lt;/a&gt;的注释适用。</target>
        </trans-unit>
        <trans-unit id="35261ed11f8f6da05d71e00af479e064b704d1d3" translate="yes" xml:space="preserve">
          <source>This is an error because the region is opened by &quot;thing&quot;, and the &quot;=end&quot; tries to close &quot;hting&quot; [sic].</source>
          <target state="translated">这是一个错误,因为该区域是由 &quot;thing &quot;打开的,而&quot;=end &quot;试图关闭 &quot;hting&quot;[原文如此]。</target>
        </trans-unit>
        <trans-unit id="8d3257f4ef00c0a5618b58e5b8a2d35eebd0a3ad" translate="yes" xml:space="preserve">
          <source>This is an experimental feature and is available from Perl 5.31.6 when enabled by &lt;code&gt;use feature 'isa'&lt;/code&gt;. It emits a warning in the &lt;code&gt;experimental::isa&lt;/code&gt; category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79a05e5e946ef4d9b0147040712489ddfe70bec" translate="yes" xml:space="preserve">
          <source>This is an experimental feature and the interface may change.</source>
          <target state="translated">这是一个实验性的功能,界面可能会改变。</target>
        </trans-unit>
        <trans-unit id="038057198b05cf435f922989a902c34a0ad8bec5" translate="yes" xml:space="preserve">
          <source>This is an experimental feature available starting in 5.18, and is subject to change as we gain field experience with it. Any attempt to use it will raise a warning, unless disabled via</source>
          <target state="translated">这是一个从5.18开始的实验性功能,随着我们获得的实际经验,可能会有所改变。任何试图使用它的行为都会引起警告,除非通过以下方式禁用</target>
        </trans-unit>
        <trans-unit id="52d334621bd62974acc022322ae25fb3c75cd6d1" translate="yes" xml:space="preserve">
          <source>This is an extremely simple, extremely basic module for writing tests suitable for CPAN modules and other pursuits. If you wish to do more complicated testing, use the Test::More module (a drop-in replacement for this one).</source>
          <target state="translated">这是一个极其简单、极其基础的模块,用于编写适合CPAN模块和其他追求的测试。如果你想做更复杂的测试,请使用Test::More模块(这个模块的一个替换)。</target>
        </trans-unit>
        <trans-unit id="3bd2379bc5006f607adb4e525b61ae72a1758dea" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;a href=&quot;#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;). Eventually, when a &lt;a href=&quot;#write-FILEHANDLE&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; is done, the contents of &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; are written to some filehandle. You could also read &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; and then set &lt;a href=&quot;perlvar#%24%5EA&quot;&gt;&lt;code&gt;$^A&lt;/code&gt;&lt;/a&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Note that a format typically does one &lt;a href=&quot;#formline-PICTURE%2CLIST&quot;&gt;&lt;code&gt;formline&lt;/code&gt;&lt;/a&gt; per line of form, but the &lt;a href=&quot;#formline-PICTURE%2CLIST&quot;&gt;&lt;code&gt;formline&lt;/code&gt;&lt;/a&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;a href=&quot;#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc193a250bf3f7bae0644ab68952c14087e27f56" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;code&gt;$^A&lt;/code&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in English). Eventually, when a &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is done, the contents of &lt;code&gt;$^A&lt;/code&gt; are written to some filehandle. You could also read &lt;code&gt;$^A&lt;/code&gt; and then set &lt;code&gt;$^A&lt;/code&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt; . Note that a format typically does one &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; per line of form, but the &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; compiler.</source>
          <target state="translated">这是 &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; s 使用的内部函数，尽管您也可以调用它。它根据PICTURE的内容对值列表进行格式化（请参阅&lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt;），然后将输出放入格式输出累加器 &lt;code&gt;$^A&lt;/code&gt; （或 &lt;code&gt;$ACCUMULATOR&lt;/code&gt; 英文）中。最终，完成 &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 操作后， &lt;code&gt;$^A&lt;/code&gt; 的内容将被写到某个文件句柄中。您还可以阅读 &lt;code&gt;$^A&lt;/code&gt; ，然后将 &lt;code&gt;$^A&lt;/code&gt; 设置回 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。需要注意的是格式通常做一个 &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; 每个表格的行，但 &lt;code&gt;&lt;a href=&quot;formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; 函数本身并不关心在PICTURE中嵌入了多少换行符。这意味着 &lt;code&gt;~&lt;/code&gt; 和 &lt;code&gt;~~&lt;/code&gt; 标记将整个PICTURE视为一行。因此，您可能需要使用多个格式行来实现单个记录格式，就像 &lt;code&gt;&lt;a href=&quot;format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; 编译器一样。</target>
        </trans-unit>
        <trans-unit id="cd310f7276a510d01ce03cf67c2975df5756cafc" translate="yes" xml:space="preserve">
          <source>This is an internal function used by &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt;s, though you may call it, too. It formats (see &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;) a list of values according to the contents of PICTURE, placing the output into the format output accumulator, &lt;code&gt;$^A&lt;/code&gt; (or &lt;code&gt;$ACCUMULATOR&lt;/code&gt; in English). Eventually, when a &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; is done, the contents of &lt;code&gt;$^A&lt;/code&gt; are written to some filehandle. You could also read &lt;code&gt;$^A&lt;/code&gt; and then set &lt;code&gt;$^A&lt;/code&gt; back to &lt;code&gt;&quot;&quot;&lt;/code&gt; . Note that a format typically does one &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; per line of form, but the &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; function itself doesn't care how many newlines are embedded in the PICTURE. This means that the &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~~&lt;/code&gt; tokens treat the entire PICTURE as a single line. You may therefore need to use multiple formlines to implement a single record format, just like the &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; compiler.</source>
          <target state="translated">这是 &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; s 使用的内部函数，尽管您也可以调用它。它根据PICTURE的内容对值列表进行格式化（请参阅&lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt;），然后将输出放入格式输出累加器 &lt;code&gt;$^A&lt;/code&gt; （或 &lt;code&gt;$ACCUMULATOR&lt;/code&gt; 英文）中。最终，完成 &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 操作后， &lt;code&gt;$^A&lt;/code&gt; 的内容将被写到某个文件句柄中。您还可以阅读 &lt;code&gt;$^A&lt;/code&gt; ，然后将 &lt;code&gt;$^A&lt;/code&gt; 设置回 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。需要注意的是格式通常做一个 &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; 每个表格的行，但 &lt;code&gt;&lt;a href=&quot;functions/formline&quot;&gt;formline&lt;/a&gt;&lt;/code&gt; 函数本身并不关心在PICTURE中嵌入了多少换行符。这意味着 &lt;code&gt;~&lt;/code&gt; 和 &lt;code&gt;~~&lt;/code&gt; 标记将整个PICTURE视为一行。因此，您可能需要使用多个格式行来实现单个记录格式，就像 &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; 编译器一样。</target>
        </trans-unit>
        <trans-unit id="10fae8cad46b6999dd334a3e0cee274316414176" translate="yes" xml:space="preserve">
          <source>This is an internal module for controlling the debug level (a.k.a. trace level) of Pod::Simple. This is of interest only to Pod::Simple developers.</source>
          <target state="translated">这是一个内部模块,用于控制Pod::Simple的调试级别(也就是跟踪级别)。这只有Pod::Simple开发者才会感兴趣。</target>
        </trans-unit>
        <trans-unit id="91ad54ddf5b339889a4d7e36baa90c6c5e3e7226" translate="yes" xml:space="preserve">
          <source>This is an internal routine that turns scalars into objects.</source>
          <target state="translated">这是一个内部例程,可以将标量变成对象。</target>
        </trans-unit>
        <trans-unit id="8cdba91d1ae6fc951cd637b385ae75d511979603" translate="yes" xml:space="preserve">
          <source>This is an introduction to the use of performance and optimization techniques which can be used with particular reference to perl programs. While many perl developers have come from other languages, and can use their prior knowledge where appropriate, there are many other people who might benefit from a few perl specific pointers. If you want the condensed version, perhaps the best advice comes from the renowned Japanese Samurai, Miyamoto Musashi, who said:</source>
          <target state="translated">这是一个关于性能和优化技术使用的介绍,可以特别参考perl程序。虽然许多perl开发人员来自其他语言,可以在适当的地方使用他们之前的知识,但也有许多其他人可能会从一些perl特定的指针中受益。如果你想要精简版,也许最好的建议来自日本著名的武士宫本武藏,他说。</target>
        </trans-unit>
        <trans-unit id="ebf9799eb4583d152aed8c96794440fad527a142" translate="yes" xml:space="preserve">
          <source>This is an obscure but effective optimization that used to live in &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; directly. Not implementing it should never result in incorrect use of typemaps, just less efficient code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1366a76cfef4230c6beae74ce2285fa6d6be94b2" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _a.</source>
          <target state="translated">这是一个古老的同义词_a。</target>
        </trans-unit>
        <trans-unit id="18fb271daf0d1e76d3278d9f0bd4670eecfaa747" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _exe.</source>
          <target state="translated">这是一个古老的同义词_exe。</target>
        </trans-unit>
        <trans-unit id="e951b381a4c4d96fa5592d033afe7d8fa718b152" translate="yes" xml:space="preserve">
          <source>This is an old synonym for _o.</source>
          <target state="translated">这是一个古老的同义词_o。</target>
        </trans-unit>
        <trans-unit id="cb104080e92edd7dc3925f96e9fda2c7d309ad5a" translate="yes" xml:space="preserve">
          <source>This is an old synonym for p_ in</source>
          <target state="translated">这是p_的旧同义词。</target>
        </trans-unit>
        <trans-unit id="b5fc26e5565eebc6d4044fbce473b9eb67351b9f" translate="yes" xml:space="preserve">
          <source>This is an optimal representation of a failed assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4cfcf0ffea37b688372b80ff163b43d18f9321" translate="yes" xml:space="preserve">
          <source>This is an optimal representation of a passing assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff524bb64d56edc3bbefa9dc9ce6f39390a4745" translate="yes" xml:space="preserve">
          <source>This is an unnecessary synonym for &lt;a href=&quot;#SvUVX&quot;&gt;&quot;SvUVX&quot;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d749cd3a1da6fa9f5e91de2edcf596acd57750" translate="yes" xml:space="preserve">
          <source>This is an upper limit on the amount of memory that &lt;code&gt;Tie::File&lt;/code&gt; will consume at any time while managing the file. This is used for two things: managing the</source>
          <target state="translated">这是管理 &lt;code&gt;Tie::File&lt;/code&gt; 随时使用的内存量的上限。这用于两件事：</target>
        </trans-unit>
        <trans-unit id="50601fd9eec31dfdb13471caa9bb11bc5c6a291d" translate="yes" xml:space="preserve">
          <source>This is another step where the presence of the &lt;code&gt;/x&lt;/code&gt; modifier is relevant. The RE engine scans the string from left to right and converts it into a finite automaton.</source>
          <target state="translated">这是存在 &lt;code&gt;/x&lt;/code&gt; 修饰符的另一个步骤。RE引擎从左到右扫描字符串，并将其转换为有限的自动机。</target>
        </trans-unit>
        <trans-unit id="6bc6e3e8d1b2d61b10ef0d4362b29339c92de71f" translate="yes" xml:space="preserve">
          <source>This is bad because splice is already O(N), and since you do it N times, you just invented a quadratic algorithm; that is, O(N**2). This does not scale, although Perl is so efficient that you probably won't notice this until you have rather largish arrays.</source>
          <target state="translated">这很糟糕,因为拼接已经是O(N)了,而且由于你做了N次,你只是发明了一个二次元算法;也就是说,O(N**2)。这并不具有扩展性,尽管Perl的效率很高,你可能不会注意到这一点,直到你有了相当大的数组。</target>
        </trans-unit>
        <trans-unit id="3c8339d12c8a36725299f222df00f24cfd8f69bf" translate="yes" xml:space="preserve">
          <source>This is basically shorthand for saying:</source>
          <target state="translated">这基本上是速记的说法。</target>
        </trans-unit>
        <trans-unit id="df105f720cfd558cf78bf5414610fa1937dfed89" translate="yes" xml:space="preserve">
          <source>This is because math with overloaded operators follows the first (dominating) operand, and the operation of that is called and returns thus the result. So, Math::BigInt::bdiv() will always return a Math::BigInt, regardless whether the result should be a Math::BigFloat or the second operant is one.</source>
          <target state="translated">这是因为具有重载操作符的数学遵循第一个(支配性)操作符,并调用该操作符的操作,从而返回结果。所以,Math::BigInt::bdiv()总是会返回一个Math::BigInt,不管结果应该是一个Math::BigFloat还是第二个操作数是一个。</target>
        </trans-unit>
        <trans-unit id="9d0c7a7cdf189de0cf4679b172df320157dc1c04" translate="yes" xml:space="preserve">
          <source>This is because named subroutines are created at compile time so their lexical variables get assigned to the parent lexicals from the first execution of the parent block. If a parent scope is entered a second time, its lexicals are created again, while the nested subs still reference the old ones.</source>
          <target state="translated">这是因为命名的子程序是在编译时创建的,所以它们的词法变量会在第一次执行父块时被分配给父词法。如果第二次输入父作用域,它的词法会被再次创建,而嵌套的子程序仍然引用旧的子程序。</target>
        </trans-unit>
        <trans-unit id="c5db892d6d5c6549aeb31514ada7ecd4f892effe" translate="yes" xml:space="preserve">
          <source>This is best demonstrated by example. Normally copy-on-write will prevent the substitution from operator from using this hack, but if you can craft a string for which copy-on-write is not possible, you can see it in play. In the current implementation, the final byte of a string buffer is used as a copy-on-write reference count. If the buffer is not big enough, then copy-on-write is skipped. First have a look at an empty string:</source>
          <target state="translated">这是最好的例子。一般来说,copy-on-write会阻止操作者使用这个黑客进行替换,但是如果你可以制作一个不可能copy-on-write的字符串,你可以看到它的作用。在当前的实现中,字符串缓冲区的最后一个字节被用作写后复制的引用计数。如果缓冲区不够大,那么就会跳过copy-on-write。首先来看一个空字符串。</target>
        </trans-unit>
        <trans-unit id="110ec42eab0899b77be520515c85d69e76f3210b" translate="yes" xml:space="preserve">
          <source>This is best explained using the following example:</source>
          <target state="translated">这一点最好用下面的例子来解释。</target>
        </trans-unit>
        <trans-unit id="f18232fd55c0dd0336666ad63ee77513a795d985" translate="yes" xml:space="preserve">
          <source>This is called &lt;b&gt;AFTER&lt;/b&gt; your event has been passed to the formatter. This should normally return undef, only change this if your event should cause the test to exit immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d13eb30802d08c5a4630281699a434fbfa155eb" translate="yes" xml:space="preserve">
          <source>This is called &lt;b&gt;BEFORE&lt;/b&gt; your event is passed to the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d099fbd21a2722c14b492d9b8d41121c1c7ad0" translate="yes" xml:space="preserve">
          <source>This is called after the event has been sent to the formatter in order to ensure the event is seen and understood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccb22d8b75566be2249f3211df19f165abb3a07" translate="yes" xml:space="preserve">
          <source>This is called an &quot;array slice&quot;.</source>
          <target state="translated">这就是所谓的 &quot;数组分片&quot;。</target>
        </trans-unit>
        <trans-unit id="891aecbf1a8602556b6b3c6e2627cb164d6eebbc" translate="yes" xml:space="preserve">
          <source>This is called at the end of a lexical scope, just after unwinding the stack.</source>
          <target state="translated">这是在一个词法作用域结束时调用的,就在释放堆栈之后。</target>
        </trans-unit>
        <trans-unit id="7256e74371eb8bec49de48cf27c3c7d965b76d10" translate="yes" xml:space="preserve">
          <source>This is called at the end of a lexical scope, just before unwinding the stack.</source>
          <target state="translated">这是在一个词法作用域结束时调用的,就在释放堆栈之前。</target>
        </trans-unit>
        <trans-unit id="39c51821499fb79c1bf1a7b16255cbfad901f488" translate="yes" xml:space="preserve">
          <source>This is called by -&amp;gt;new to initialize newly-constructed language handles. If you define an init method in your class, remember that it's usually considered a good idea to call $lh-&amp;gt;SUPER::init in it (presumably at the beginning), so that all classes get a chance to initialize a new object however they see fit.</source>
          <target state="translated">这由-&amp;gt; new调用，以初始化新构造的语言句柄。如果您在类中定义了一个init方法，请记住通常在其中调用$ lh-&amp;gt; SUPER :: init是一个好主意（大概是在开始时），以便所有类都有机会初始化一个新对象。他们认为合适。</target>
        </trans-unit>
        <trans-unit id="e4805289702db36154b2249d52aefe1a17a7d5f2" translate="yes" xml:space="preserve">
          <source>This is called by send after it does any IPC handling. You can use this to bypass the IPC process, but in general you should avoid using this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b963d05b2faeedd3e7684268626d977cadc59512" translate="yes" xml:space="preserve">
          <source>This is called in the parent process when it is complete and waiting for all child processes and threads to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9664c006f22f51b95f420aa8dd1316340a796c" translate="yes" xml:space="preserve">
          <source>This is called just after starting a new lexical scope. Note that Perl code like</source>
          <target state="translated">在启动一个新的词法作用域之后,就会调用这个函数。请注意,像这样的 Perl 代码</target>
        </trans-unit>
        <trans-unit id="1b4b72a19d24ff4c03ca59dfaf92e37705fe82d9" translate="yes" xml:space="preserve">
          <source>This is called just before starting to compile an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;
FILE&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, after the eval has been set up.</source>
          <target state="translated">在建立 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; ，就在开始编译eval STRING， &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 之前调用此方法。</target>
        </trans-unit>
        <trans-unit id="e905c8b1f7afa99e8dea0f4bbd692d727b21d405" translate="yes" xml:space="preserve">
          <source>This is called just before starting to compile an &lt;code&gt;eval STRING&lt;/code&gt;, &lt;code&gt;do FILE&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt;, after the eval has been set up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bc4c621adbf8f868c20e693d52ccd14e7f8bee" translate="yes" xml:space="preserve">
          <source>This is called just like any other method, with the object as the first argument. It does not receive any additional arguments. However, the &lt;code&gt;$_[0]&lt;/code&gt; variable will be read-only in the destructor, so you cannot assign a value to it.</source>
          <target state="translated">就像任何其他方法一样，以对象作为第一个参数来调用它。它不接收任何其他参数。但是， &lt;code&gt;$_[0]&lt;/code&gt; 变量在析构函数中将是只读的，因此您不能为其分配值。</target>
        </trans-unit>
        <trans-unit id="a2a0ca9ad6271402577255f9f1a63a32921a68ca" translate="yes" xml:space="preserve">
          <source>This is called when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; occurs. See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below.</source>
          <target state="translated">发生 &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 时称为此事件。请参阅&lt;a href=&quot;#The-untie-Gotcha&quot;&gt;下面的解开陷阱&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e84adc942d2fd7506d95b14fe0cd63bb7b960df2" translate="yes" xml:space="preserve">
          <source>This is called when &lt;code&gt;untie&lt;/code&gt; occurs. See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85277e9fbb24fb6a920480ff94a71d2b7d6a947a" translate="yes" xml:space="preserve">
          <source>This is called when a stash is assigned to a new location in the symbol table.</source>
          <target state="translated">当一个储藏室被分配到符号表的一个新位置时,就会调用这个功能。</target>
        </trans-unit>
        <trans-unit id="89a93e1f017cbb5b7b2446a6eb7bdd8163601a7e" translate="yes" xml:space="preserve">
          <source>This is called when a stash is deleted from the symbol table.</source>
          <target state="translated">当从符号表中删除一个存储时,就会调用这个函数。</target>
        </trans-unit>
        <trans-unit id="b2997f38c0b7e9990683c7e251969c88bfd04c59" translate="yes" xml:space="preserve">
          <source>This is called when the hash is evaluated in scalar context, and in 5.28 onwards, by &lt;code&gt;keys&lt;/code&gt; in boolean context. In order to mimic the behaviour of untied hashes, this method must return a value which when used as boolean, indicates whether the tied hash is considered empty. If this method does not exist, perl will make some educated guesses and return true when the hash is inside an iteration. If this isn't the case, FIRSTKEY is called, and the result will be a false value if FIRSTKEY returns the empty list, true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92909fe70994d8eb483f136285b4a0530d9ad33d" translate="yes" xml:space="preserve">
          <source>This is called when the hash is evaluated in scalar context. In order to mimic the behaviour of untied hashes, this method should return a false value when the tied hash is considered empty. If this method does not exist, perl will make some educated guesses and return true when the hash is inside an iteration. If this isn't the case, FIRSTKEY is called, and the result will be a false value if FIRSTKEY returns the empty list, true otherwise.</source>
          <target state="translated">当哈希在标量上下文中被评估时,会调用这个方法。为了模仿未绑定哈希的行为,当绑定哈希被认为是空的时候,这个方法应该返回一个false值。如果这个方法不存在,perl会做一些有根据的猜测,当哈希在迭代内部时返回true。如果不是这种情况,则调用FIRSTKEY,如果FIRSTKEY返回空列表,结果将是一个false值,否则为true。</target>
        </trans-unit>
        <trans-unit id="75a78a913b495a7f524d17a56a48057715c5e55f" translate="yes" xml:space="preserve">
          <source>This is caused by the fact that a block by itself acts as a loop that executes once, see &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;&quot;Basic BLOCKs&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b19ffb80b780fe42418c60b4b551943190ef11" translate="yes" xml:space="preserve">
          <source>This is caused by the fact that a block by itself acts as a loop that executes once, see &lt;a href=&quot;#Basic-BLOCKs&quot;&gt;Basic BLOCKs&lt;/a&gt;.</source>
          <target state="translated">这是由于以下事实造成的：一个块本身就充当一次执行一次的循环，请参见&lt;a href=&quot;#Basic-BLOCKs&quot;&gt;Basic BLOCKs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52af186e7022d7cef4d799cfdb6b5d984aef07fe" translate="yes" xml:space="preserve">
          <source>This is commonly used to suppress the creation of man pages. MAN3PODS takes a hash ref not a string, but the above worked by accident in old versions of MakeMaker.</source>
          <target state="translated">这通常用于抑制man页的创建。MAN3PODS取的是哈希ref而不是字符串,但在旧版本的MakeMaker中,上面的工作是意外的。</target>
        </trans-unit>
        <trans-unit id="e5f528c0702057989be1850bcd519b0dfbd35566" translate="yes" xml:space="preserve">
          <source>This is complete documentation about all aspects of references. For a shorter, tutorial introduction to just the essential features, see &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;.</source>
          <target state="translated">这是有关参考所有方面的完整文档。有关基本功能的简短教程介绍，请参见&lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49ca539e3859d247b8a2739f333e60f8db59abef" translate="yes" xml:space="preserve">
          <source>This is completely general, but the most computationally expensive strategy. Choose one or the other character set and transform to that for every sort comparision. Here's a complete example that transforms to ASCII sort order:</source>
          <target state="translated">这是完全通用的,但计算成本最高的策略。选择一个或另一个字符集,并在每次排序比较中转换为该字符集。这里有一个完整的例子,可以转换为ASCII排序顺序。</target>
        </trans-unit>
        <trans-unit id="53bdad63238a05204a8a287f80428f65796d2cf9" translate="yes" xml:space="preserve">
          <source>This is completely general, but the most computationally expensive strategy. Choose one or the other character set and transform to that for every sort comparison. Here's a complete example that transforms to ASCII sort order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94195eae88e55c65702824bf560045165c39578d" translate="yes" xml:space="preserve">
          <source>This is converted to a tree similar to this one:</source>
          <target state="translated">这样转换为类似于这棵树。</target>
        </trans-unit>
        <trans-unit id="6748d7a69c27bb3281328ef679799289a62c1105" translate="yes" xml:space="preserve">
          <source>This is currently supported by pod2text (Pod::Text), pod2man (Pod::Man), and any other pod2xxx or Pod::Xxxx translators that use Pod::Parser 1.093 or later, or Pod::Tree 1.02 or later.</source>
          <target state="translated">目前,pod2text(Pod::Text)、pod2man(Pod::Man)以及任何其他使用Pod::Parser 1.093或更高版本的pod2xxx或Pod::Xxxx翻译器,或Pod::Tree 1.02或更高版本的翻译器都支持这个功能。</target>
        </trans-unit>
        <trans-unit id="34e3a39567aab8112767c4a4aa9742d8df037b43" translate="yes" xml:space="preserve">
          <source>This is different from finding out the package an object is blessed into, which might not be the current package. For that, use &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt;, part of the Standard Library since Perl 5.8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593812f69db240f293446ffb5751455ff8815826" translate="yes" xml:space="preserve">
          <source>This is different from finding out the package an object is blessed into, which might not be the current package. For that, use &lt;code&gt;blessed&lt;/code&gt; from &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;, part of the Standard Library since Perl 5.8:</source>
          <target state="translated">这与找出对象被祝福的包不同，后者可能不是当前的包。为此，请使用&lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util的&lt;/a&gt; &lt;code&gt;blessed&lt;/code&gt; (从Perl 5.8开始成为标准库的一部分）：</target>
        </trans-unit>
        <trans-unit id="fb97ecda4c6d5be858b3ffd4a4b01f62707feb1c" translate="yes" xml:space="preserve">
          <source>This is different than printing the array without the interpolation:</source>
          <target state="translated">这与打印没有插值的数组不同。</target>
        </trans-unit>
        <trans-unit id="2e89efe08d07d2fc445ecb0a49388c2db1540bc9" translate="yes" xml:space="preserve">
          <source>This is disabled by default.</source>
          <target state="translated">默认情况下是禁用的。</target>
        </trans-unit>
        <trans-unit id="a9b83c7f438982c73dfeaa8ce24f6687d2ff66f7" translate="yes" xml:space="preserve">
          <source>This is discussed in more detail in &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;; see the entry on</source>
          <target state="translated">在&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;中将对此进行更详细的讨论；请参阅以下条目</target>
        </trans-unit>
        <trans-unit id="d40247f5c8bc9b3099a9637c357fd1f201252c74" translate="yes" xml:space="preserve">
          <source>This is documented because it is used by &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt;, but it's not intended for general consumption. May be removed at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fae6a858b50aa10f361d29a97f6c807c02664b" translate="yes" xml:space="preserve">
          <source>This is documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;, and although it's not the easiest thing to read, it does work. In each of these examples, we call the function inside the braces used to dereference a reference. If we have more than one return value, we can construct and dereference an anonymous array. In this case, we call the function in list context.</source>
          <target state="translated">这是在&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;中记录的，尽管它不是最容易阅读的东西，但它确实可以工作。在这些示例中的每个示例中，我们在括号内调用用于取消引用引用的函数。如果我们有多个返回值，则可以构造和取消引用一个匿名数组。在这种情况下，我们在列表上下文中调用该函数。</target>
        </trans-unit>
        <trans-unit id="cc9f74e233591efd345d524b870503e793053031" translate="yes" xml:space="preserve">
          <source>This is done by using hostname lookup and the &lt;code&gt;local_netmask&lt;/code&gt; entry in the configuration data.</source>
          <target state="translated">这是通过使用主机名查找和配置数据中的 &lt;code&gt;local_netmask&lt;/code&gt; 条目来完成的。</target>
        </trans-unit>
        <trans-unit id="454855df818209bc8493bdfbab3f2ca7ae6dfdc7" translate="yes" xml:space="preserve">
          <source>This is done for a breakpoint in the current file.</source>
          <target state="translated">这是对当前文件中的断点进行的。</target>
        </trans-unit>
        <trans-unit id="c9cb4520228cecded3e0a1cfc382595df81ccf66" translate="yes" xml:space="preserve">
          <source>This is done primarily to avoid the problems Test::Builder had by exposing its singleton. We do not want anyone to replace this singleton, rebless it, or directly muck with its internals. If you need to do something and cannot because of the restrictions placed here, then please report it as an issue. If possible, we will create a way for you to implement your functionality without exposing things that should not be exposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a47be7db788c450b66cdea2d395c9b71203ef53" translate="yes" xml:space="preserve">
          <source>This is due to a bug in the C library's printf routine. printf(&quot;'%e'&quot;, 0. ) produces '0.000000e+0', but ANSI requires '0.000000e+00'. QNX has acknowledged the bug.</source>
          <target state="translated">这是由于 C 库的 printf 例程出现了一个错误。printf(&quot;'%e'&quot;,0.)会生成 &quot;0.000000e+0&quot;,但 ANSI 要求是 &quot;0.000000e+00&quot;。QNX 已承认这一错误。</target>
        </trans-unit>
        <trans-unit id="71e4fa6fb5f00ffdde6cecd71fb22bb161db5777" translate="yes" xml:space="preserve">
          <source>This is due to the performance optimisation of using &lt;code&gt;MULTICALL&lt;/code&gt; for the code block, which means that fresh SVs do not get allocated for each call to the block. Instead, the same SV is re-assigned for each iteration, and all the closures will share the value seen on the final iteration.</source>
          <target state="translated">这是由于对代码块使用 &lt;code&gt;MULTICALL&lt;/code&gt; 进行了性能优化，这意味着不会为每次调用该块分配新的SV。取而代之的是，为每个迭代重新分配相同的SV，并且所有闭包将共享在最终迭代中看到的值。</target>
        </trans-unit>
        <trans-unit id="50a12de62b1d872f1cb83dc14807dc4865d7fade" translate="yes" xml:space="preserve">
          <source>This is easier that you might expect if you realise that all the &lt;code&gt;IO::Compress::*&lt;/code&gt; objects are derived from &lt;code&gt;IO::File&lt;/code&gt; and that all the &lt;code&gt;IO::Uncompress::*&lt;/code&gt; modules can read from an &lt;code&gt;IO::File&lt;/code&gt; filehandle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447f198b012c8346529f18f6ac62c32d7efbbdb9" translate="yes" xml:space="preserve">
          <source>This is elaborately and painstakingly described in the</source>
          <target state="translated">中对此进行了详尽而细致的描述。</target>
        </trans-unit>
        <trans-unit id="821291d0776e9b5b0d39c1a20f26c0a1d006ccf3" translate="yes" xml:space="preserve">
          <source>This is enabled by default.</source>
          <target state="translated">默认情况下是启用的。</target>
        </trans-unit>
        <trans-unit id="05dc6a6637a3cd1c406048840a442a226332304e" translate="yes" xml:space="preserve">
          <source>This is equivalent to putting &lt;code&gt;?:&lt;/code&gt; at the beginning of every capturing group:</source>
          <target state="translated">这等效于将 &lt;code&gt;?:&lt;/code&gt; 放在每个捕获组的开头：</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">这相当于下面的代码。</target>
        </trans-unit>
        <trans-unit id="db66d69de876b62af8e4e583ee35fa7336ce738e" translate="yes" xml:space="preserve">
          <source>This is especially handy for the handles that Perl has already opened for you.</source>
          <target state="translated">这对于Perl已经为你打开的句柄尤其方便。</target>
        </trans-unit>
        <trans-unit id="f8d05739ccb676f898da1bfecdf838eee060521a" translate="yes" xml:space="preserve">
          <source>This is especially noticeable in scripts like Makefiles and test suites, which often assume &lt;code&gt;/&lt;/code&gt; as a path separator for subdirectories.</source>
          <target state="translated">这在Makefile和测试套件之类的脚本中尤其明显，这些脚本通常将 &lt;code&gt;/&lt;/code&gt; 用作子目录的路径分隔符。</target>
        </trans-unit>
        <trans-unit id="55e960bba2c8937bb3441980100a3402c2c9ceb2" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; again, which has the effect of changing their error messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f527eac137b06210e13666ef8269894d061c4071" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again, which has the effect of changing their error messages:</source>
          <target state="translated">鉴于 &lt;code&gt;__DIE__&lt;/code&gt; 挂钩可以再次调用 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ，这具有更改其错误消息的作用，因此这尤其重要。</target>
        </trans-unit>
        <trans-unit id="e72ff779e72b05ba7f524c22b987a33b6ce734c7" translate="yes" xml:space="preserve">
          <source>This is especially significant, given that &lt;code&gt;__DIE__&lt;/code&gt; hooks can call &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again, which has the effect of changing their error messages:</source>
          <target state="translated">鉴于 &lt;code&gt;__DIE__&lt;/code&gt; 挂钩可以再次调用 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; ，这具有更改其错误消息的作用，因此这尤其重要。</target>
        </trans-unit>
        <trans-unit id="881721fff940bf0d898fd3674c7f0d11e0a2ff4e" translate="yes" xml:space="preserve">
          <source>This is especially true if trying to catch &lt;code&gt;SIGALRM&lt;/code&gt; in a thread. To handle alarms in threads, set up a signal handler in the main thread, and then use &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;&quot;THREAD SIGNALLING&quot;&lt;/a&gt; to relay the signal to the thread:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818858cb9601e6ed62390539756668bab6bf2c4d" translate="yes" xml:space="preserve">
          <source>This is especially true if trying to catch &lt;code&gt;SIGALRM&lt;/code&gt; in a thread. To handle alarms in threads, set up a signal handler in the main thread, and then use &lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING&lt;/a&gt; to relay the signal to the thread:</source>
          <target state="translated">如果尝试在线程中捕获 &lt;code&gt;SIGALRM&lt;/code&gt; ，则尤其如此。要处理线程中的警报，请在主线程中设置信号处理程序，然后使用&lt;a href=&quot;#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALING&lt;/a&gt;将信号中继到线程：</target>
        </trans-unit>
        <trans-unit id="3baa440856e5960eab1aef2ecf34be88a790df5d" translate="yes" xml:space="preserve">
          <source>This is essentially a helper to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6dde33455dcaab484709ef3e2e047ba6858d2a" translate="yes" xml:space="preserve">
          <source>This is essentially a linear encoding of a nondeterministic finite-state machine (aka syntax charts or &quot;railroad normal form&quot; in parsing technology).</source>
          <target state="translated">这本质上是一种非确定性有限状态机的线性编码(也就是解析技术中的语法图或 &quot;铁路正常形式&quot;)。</target>
        </trans-unit>
        <trans-unit id="c2c33667b47416ed635e9db2747270d43c9fb79e" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to</source>
          <target state="translated">这完全等同于</target>
        </trans-unit>
        <trans-unit id="2888d5ca02740e184f93a1ad103d7f0d59cf4bf3" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to writing &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt; . You may see this idiom in the wild combined with a call to &lt;code&gt;can&lt;/code&gt; :</source>
          <target state="translated">这完全等同于编写 &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt; 。您可能会在野外看到这个成语以及对 &lt;code&gt;can&lt;/code&gt; 的调用：</target>
        </trans-unit>
        <trans-unit id="0addd03d3f0285338de29174c6b972eb46d8e3c5" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to writing &lt;code&gt;$sub-&amp;gt;($file)&lt;/code&gt;. You may see this idiom in the wild combined with a call to &lt;code&gt;can&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0020f4d9923684685bbbcf57921ec11fb0aac1" translate="yes" xml:space="preserve">
          <source>This is exactly the problem the</source>
          <target state="translated">这正是问题所在。</target>
        </trans-unit>
        <trans-unit id="1323ae3621b03444ef40592d920a99e3788e04fe" translate="yes" xml:space="preserve">
          <source>This is exactly the same as:</source>
          <target state="translated">这与。</target>
        </trans-unit>
        <trans-unit id="5350516b52a22254c5df97eb2c2d9b4520e43a69" translate="yes" xml:space="preserve">
          <source>This is fairly secure because &lt;code&gt;/\w+/&lt;/code&gt; doesn't normally match shell metacharacters, nor are dot, dash, or at going to mean something special to the shell. Use of &lt;code&gt;/.+/&lt;/code&gt; would have been insecure in theory because it lets everything through, but Perl doesn't check for that. The lesson is that when untainting, you must be exceedingly careful with your patterns. Laundering data using regular expression is the</source>
          <target state="translated">这是相当安全的，因为 &lt;code&gt;/\w+/&lt;/code&gt; 通常不匹配shell元字符，也不是点，破折号或对shell来说有些特殊的含义。 &lt;code&gt;/.+/&lt;/code&gt; 的使用在理论上是不安全的，因为它可以使所有内容通过，但是Perl不会对此进行检查。教训是，在取消污染时，必须格外小心。使用正则表达式清洗数据是</target>
        </trans-unit>
        <trans-unit id="4d2e8c2e8c603b9443a2fa3515b87175734dfedd" translate="yes" xml:space="preserve">
          <source>This is faster than using the &lt;b&gt;-exec&lt;/b&gt; switch of</source>
          <target state="translated">这比使用更快的&lt;b&gt;-exec&lt;/b&gt;开关</target>
        </trans-unit>
        <trans-unit id="9163849a1830b363f8878e26cd69e4bcbea10076" translate="yes" xml:space="preserve">
          <source>This is fine for systems programming when sendmail is known to be available. But it is not fine for many non-Unix systems, and even some Unix systems that may not have sendmail installed. If a portable solution is needed, see the various distributions on CPAN that deal with it. &lt;a href=&quot;Mail::Mailer&quot;&gt;&lt;code&gt;Mail::Mailer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;Mail::Send&quot;&gt;&lt;code&gt;Mail::Send&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;MailTools&lt;/code&gt; distribution are commonly used, and provide several mailing methods, including &lt;code&gt;mail&lt;/code&gt;, &lt;code&gt;sendmail&lt;/code&gt;, and direct SMTP (via &lt;a href=&quot;Net::SMTP&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt;) if a mail transfer agent is not available. &lt;a href=&quot;Mail::Sendmail&quot;&gt;&lt;code&gt;Mail::Sendmail&lt;/code&gt;&lt;/a&gt; is a standalone module that provides simple, platform-independent mailing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa28f8ff665fed944de016ad1db63136902800f" translate="yes" xml:space="preserve">
          <source>This is fine for systems programming when sendmail is known to be available. But it is not fine for many non-Unix systems, and even some Unix systems that may not have sendmail installed. If a portable solution is needed, see the various distributions on CPAN that deal with it. &lt;code&gt;Mail::Mailer&lt;/code&gt; and &lt;code&gt;Mail::Send&lt;/code&gt; in the &lt;code&gt;MailTools&lt;/code&gt; distribution are commonly used, and provide several mailing methods, including &lt;code&gt;mail&lt;/code&gt; , &lt;code&gt;sendmail&lt;/code&gt; , and direct SMTP (via &lt;code&gt;Net::SMTP&lt;/code&gt; ) if a mail transfer agent is not available. &lt;code&gt;Mail::Sendmail&lt;/code&gt; is a standalone module that provides simple, platform-independent mailing.</source>
          <target state="translated">当已知sendmail可用时，这对于系统编程是很好的。但是对于许多非Unix系统，甚至某些可能未安装sendmail的Unix系统，它也不是很好。如果需要便携式解决方案，请参阅处理该解决方案的CPAN上的各种发行版。 &lt;code&gt;Mail::Mailer&lt;/code&gt; 和 &lt;code&gt;Mail::Send&lt;/code&gt; 在 &lt;code&gt;MailTools&lt;/code&gt; 分布常用，并且提供多种通讯方式，包括 &lt;code&gt;mail&lt;/code&gt; ， &lt;code&gt;sendmail&lt;/code&gt; 的，和直接SMTP（通过 &lt;code&gt;Net::SMTP&lt;/code&gt; ）如果一个邮件传输代理不可用。 &lt;code&gt;Mail::Sendmail&lt;/code&gt; 是一个独立的模块，提供简单的，与平台无关的邮件。</target>
        </trans-unit>
        <trans-unit id="3aabced6833bcc3911383da0e252138fb5ec6985" translate="yes" xml:space="preserve">
          <source>This is fine if you are just looking for a single character. However, if you are trying to count multiple character substrings within a larger string, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; won't work. What you can do is wrap a while() loop around a global pattern match. For example, let's count negative integers:</source>
          <target state="translated">如果您只寻找一个字符，这很好。但是，如果您要计算较大字符串中的多个字符子字符串， &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; 将不起作用。您可以做的是将while（）循环包装在全局模式匹配周围。例如，让我们计算负整数：</target>
        </trans-unit>
        <trans-unit id="03d778e077bb45a64c448d2b3e047900fa7a45f9" translate="yes" xml:space="preserve">
          <source>This is fine if you are just looking for a single character. However, if you are trying to count multiple character substrings within a larger string, &lt;code&gt;tr///&lt;/code&gt; won't work. What you can do is wrap a while() loop around a global pattern match. For example, let's count negative integers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe90dbc3c5695d7e2fdf0f285c383fc23541d231" translate="yes" xml:space="preserve">
          <source>This is for Test2 API and related packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfd669832389228af06dec1239a8521733d9cc4" translate="yes" xml:space="preserve">
          <source>This is for backwards compatibility, and may be deprecated in the future.</source>
          <target state="translated">这是为了向后兼容,将来可能会被废弃。</target>
        </trans-unit>
        <trans-unit id="0e1feb67b0818a9b1deb572f5e23a9f9edab3c53" translate="yes" xml:space="preserve">
          <source>This is for clustering, not capturing; it groups subexpressions like &quot;()&quot;, but doesn't make backreferences as &quot;()&quot; does. So</source>
          <target state="translated">这是为了聚类,而不是捕获;它将子表达式分组,比如&quot;()&quot;,但不像&quot;()&quot;那样做反向引用。所以</target>
        </trans-unit>
        <trans-unit id="04947ad410e88320dbe79a5cb81a4af421f2255b" translate="yes" xml:space="preserve">
          <source>This is for clustering, not capturing; it groups subexpressions like &lt;code&gt;&quot;()&quot;&lt;/code&gt;, but doesn't make backreferences as &lt;code&gt;&quot;()&quot;&lt;/code&gt; does. So</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0c739b12ea8f303fae64c2fc3f585b7a17c56e" translate="yes" xml:space="preserve">
          <source>This is for heuristics which attempt to create directory structures that mirror those of the installed perl.</source>
          <target state="translated">这是针对那些试图创建镜像安装的perl的目录结构的启发式方法。</target>
        </trans-unit>
        <trans-unit id="f8b7de1b28f0c9aa17d5f75d5f2141f8c81f40ef" translate="yes" xml:space="preserve">
          <source>This is for unsigned integers. It is equivalent to using T_UV but explicitly casts the variable to type &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; . The default type for &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; is T_UV.</source>
          <target state="translated">这用于无符号整数。这等效于使用T_UV，但显式将变量强制类型转换为 &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;unsigned &lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; 的默认类型为T_UV。</target>
        </trans-unit>
        <trans-unit id="5749c6a5070ee50c1f99db6f471f9cdfac379662" translate="yes" xml:space="preserve">
          <source>This is for unsigned integers. It is equivalent to using T_UV but explicitly casts the variable to type &lt;code&gt;unsigned int&lt;/code&gt;. The default type for &lt;code&gt;unsigned int&lt;/code&gt; is T_UV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f20cedd41a4e00c24f8fc66e090f062e1c8652" translate="yes" xml:space="preserve">
          <source>This is free software. You may modify and/or redistribute this code under the same terms as Perl 5.10 itself, or, at your option, any later version of Perl 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223ca8fc8e06498b8700fcaf3a5b924a9287e801" translate="yes" xml:space="preserve">
          <source>This is free software; you can redistribute it and/or modify it under the same terms as the Perl 5 programming language system itself.</source>
          <target state="translated">这是一个自由软件;您可以在与Perl 5编程语言系统本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="b876192e43b0c3f007bf98e622b2f335f00b0f03" translate="yes" xml:space="preserve">
          <source>This is functionally identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; function for suspending the execution of the current for process for certain number of seconds, see &lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;. There is one significant difference, however: &lt;code&gt;POSIX::sleep()&lt;/code&gt; returns the number of &lt;b&gt;unslept&lt;/b&gt; seconds, while the &lt;code&gt;CORE::sleep()&lt;/code&gt; returns the number of slept seconds.</source>
          <target state="translated">这在功能上与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数将进程的当前执行暂停一定的秒数，请参见&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;。有一个显著的差异，但是： &lt;code&gt;POSIX::sleep()&lt;/code&gt; 返回的数量&lt;b&gt;unslept&lt;/b&gt;秒，而 &lt;code&gt;CORE::sleep()&lt;/code&gt; 返回睡觉的秒数。</target>
        </trans-unit>
        <trans-unit id="bbf2660e26252d7fe7043cdc5fb90594bfb18a79" translate="yes" xml:space="preserve">
          <source>This is functionally identical to Perl's builtin &lt;code&gt;sleep()&lt;/code&gt; function for suspending the execution of the current for process for certain number of seconds, see &lt;a href=&quot;perlfunc#sleep&quot;&gt;&quot;sleep&quot; in perlfunc&lt;/a&gt;. There is one significant difference, however: &lt;code&gt;POSIX::sleep()&lt;/code&gt; returns the number of &lt;b&gt;unslept&lt;/b&gt; seconds, while the &lt;code&gt;CORE::sleep()&lt;/code&gt; returns the number of slept seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb4b681258fa0233585a271cede9e357d7bbce9" translate="yes" xml:space="preserve">
          <source>This is generally meant to be called from inside Bracket Notation (which is discussed later), as in</source>
          <target state="translated">这一般是指从括号内调用(后面会讨论),如在</target>
        </trans-unit>
        <trans-unit id="487a457dae8e51eb07ff40b59ced8f82c47ea01f" translate="yes" xml:space="preserve">
          <source>This is generally not recommended, but large testing systems often have weird internal needs.</source>
          <target state="translated">一般不建议这样做,但大型测试系统往往有奇怪的内部需求。</target>
        </trans-unit>
        <trans-unit id="abeb233860c7acca6119cb787cba71a4bde24872" translate="yes" xml:space="preserve">
          <source>This is grandfathered (for \1 to \9) for the RHS of a substitute to avoid shocking the &lt;b&gt;sed&lt;/b&gt; addicts, but it's a dirty habit to get into. That's because in PerlThink, the righthand side of an &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; is a double-quoted string. &lt;code&gt;\1&lt;/code&gt; in the usual double-quoted string means a control-A. The customary Unix meaning of &lt;code&gt;\1&lt;/code&gt; is kludged in for &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;. However, if you get into the habit of doing that, you get yourself into trouble if you then add an &lt;code&gt;/e&lt;/code&gt; modifier.</source>
          <target state="translated">这是祖父级（用于\ 1 \ 9）的替代品的RHS避免震撼&lt;b&gt;sed的&lt;/b&gt;吸毒者，但它是一个肮脏的习惯进入。这是因为在PerlThink中， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 的右侧是双引号字符串。通常的双引号字符串中的 &lt;code&gt;\1&lt;/code&gt; 表示控件A。 &lt;code&gt;\1&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 的惯用Unix含义为s ///。但是，如果您习惯这样做，那么在添加 &lt;code&gt;/e&lt;/code&gt; 修饰符时就会遇到麻烦。</target>
        </trans-unit>
        <trans-unit id="f03f0363c9fb43987481968ea231e7a1a5d22aaa" translate="yes" xml:space="preserve">
          <source>This is grandfathered (for \1 to \9) for the RHS of a substitute to avoid shocking the &lt;b&gt;sed&lt;/b&gt; addicts, but it's a dirty habit to get into. That's because in PerlThink, the righthand side of an &lt;code&gt;s///&lt;/code&gt; is a double-quoted string. &lt;code&gt;\1&lt;/code&gt; in the usual double-quoted string means a control-A. The customary Unix meaning of &lt;code&gt;\1&lt;/code&gt; is kludged in for &lt;code&gt;s///&lt;/code&gt;. However, if you get into the habit of doing that, you get yourself into trouble if you then add an &lt;code&gt;/e&lt;/code&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b17cc705ed9e94610433e56fe234d47d65c2826" translate="yes" xml:space="preserve">
          <source>This is handy for output formats that don't have anything quite like an &quot;S&amp;lt;...&amp;gt;&quot; code, but which do have a code for non-breaking space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33e8e516c4662a8793090c4f24cce78089ad98d" translate="yes" xml:space="preserve">
          <source>This is handy when you want to do a list assignment in a Boolean context, because most list functions return a null list when finished, which when assigned produces a 0, which is interpreted as FALSE.</source>
          <target state="translated">当你想在布尔上下文中进行列表赋值时,这很方便,因为大多数列表函数在完成赋值后都会返回一个空列表,当赋值后会产生一个0,解释为FALSE。</target>
        </trans-unit>
        <trans-unit id="260dc37b9db5709300e390ddfe39e24b64c85308" translate="yes" xml:space="preserve">
          <source>This is here for backwards compatibility only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2cfb1906a45c414c7c96fc609271f7955af896" translate="yes" xml:space="preserve">
          <source>This is how it works now:</source>
          <target state="translated">这就是现在的工作方式。</target>
        </trans-unit>
        <trans-unit id="57a7770321f001633ec82b62ab1060f627617660" translate="yes" xml:space="preserve">
          <source>This is how you add a global init callback. Global callbacks happen for every context for any hub or stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5549f5f96f9ae515ac59159e1ec8e9b00ca6c3" translate="yes" xml:space="preserve">
          <source>This is how you add a global release callback. Global callbacks happen for every context for any hub or stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b14ec31d0ca231ad81e0d297fc944474a8c2ffd" translate="yes" xml:space="preserve">
          <source>This is how you add a release callback for all contexts created for a given hub. These callbacks will not run for other hubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bd6a385ed391a50e1e6dfd6905efadad76fde5" translate="yes" xml:space="preserve">
          <source>This is how you add an init callback for all contexts created for a given hub. These callbacks will not run for other hubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571f913a0d93b0bc29621a81946f5e000acc80d1" translate="yes" xml:space="preserve">
          <source>This is how you add release callbacks directly to a context. The callback will &lt;b&gt;ALWAYS&lt;/b&gt; be added to the context that gets returned, it does not matter if a new one is generated, or if an existing one is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b45755b9a2299dd81f964dd03d663b8bf8ee2f" translate="yes" xml:space="preserve">
          <source>This is how you specify an init hook that will only run if your call to &lt;code&gt;context()&lt;/code&gt; generates a new context. The callback will be ignored if &lt;code&gt;context()&lt;/code&gt; is returning an existing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbdb31e7c27bacbcb7fe1d4ef14ea6d653940f1" translate="yes" xml:space="preserve">
          <source>This is identical in operation to directories(), except that it includes all the intermediate directories back up to the specified directories.</source>
          <target state="translated">这和directories()的操作是一样的,只是它把所有的中间目录备份到指定的目录中。</target>
        </trans-unit>
        <trans-unit id="e351930a2f0204ac9b6b12368a795bebdda09c11" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; function for returning the absolute value of the numerical argument, see &lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;.</source>
          <target state="translated">这与Perl内置的 &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于返回数值参数的绝对值，请参见&lt;a href=&quot;functions/abs&quot;&gt;abs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="695d548bdbb7db69858dd0c63a58915988364e1a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; function, returning the absolute value of its numerical argument.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/abs&quot;&gt;abs()&lt;/a&gt;&lt;/code&gt; 函数相同，返回其数值参数的绝对值。</target>
        </trans-unit>
        <trans-unit id="f9120a2adefbe5ba2e37ba001760405e7d0a7dbe" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; function, either for arming or disarming the &lt;code&gt;SIGARLM&lt;/code&gt; timer.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; 函数相同，可用于布防或撤防 &lt;code&gt;SIGARLM&lt;/code&gt; 计时器。</target>
        </trans-unit>
        <trans-unit id="48a476413067dd99ab4121abaa36c23eb2d9f153" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; function, returning the arcus tangent defined by its two numerical arguments, the</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; 函数相同，返回由其两个数值参数（即</target>
        </trans-unit>
        <trans-unit id="a05756bd65e3a6ef14f82f8385fe7e460811d0b5" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; function, allowing one to change the working (default) directory, see &lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; 函数相同，允许它更改工作目录（默认），请参阅&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e888ff11c427adcd230a49c55dda839ea4139d83" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; function, allowing one to change file and directory permissions, see &lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; 函数相同，允许更改文件和目录权限，请参阅&lt;a href=&quot;functions/chmod&quot;&gt;chmod&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43527baa97f98b6bb9f0a7d166453b7ea32ff963" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; function, allowing one to change file and directory owners and groups, see &lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数允许更改文件和目录的所有者和组，请参阅&lt;a href=&quot;functions/chown&quot;&gt;chown&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="137a34ed8adb7ab17d656d13fbf0961186414eb0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir()&lt;/a&gt;&lt;/code&gt; function for closing a directory handle, see &lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;.</source>
          <target state="translated">这与用于关闭目录句柄的Perl内置的 &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e039818d97c69012826d73ac04fb7fe2694eb5b3" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; function, for returning the cosine of its numerical argument, see &lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos()&lt;/a&gt;&lt;/code&gt; 函数相同，有关返回其数字参数的余弦的信息，请参见&lt;a href=&quot;functions/cos&quot;&gt;cos&lt;/a&gt;。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7986353e4fd90f34533ad5983c9c0772e03e142" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; function for exiting the program, see &lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 函数（用于退出程序）相同，请参见&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2c5c838eac2ca99b87036128b4be02041ba664e" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp()&lt;/a&gt;&lt;/code&gt; function for returning the exponent (</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/exp&quot;&gt;exp()&lt;/a&gt;&lt;/code&gt; 函数相同，用于返回指数（</target>
        </trans-unit>
        <trans-unit id="0f8afa6cc9b9bce42a0f876c4312c43a9b501d34" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0526f440f4487b3f67fbf7e27396c04e1d2573cc" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; function for duplicating the current process, see &lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt; and &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; if you are in Windows.</source>
          <target state="translated">这与用于复制当前进程的Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; 函数相同，如果您在Windows 中，请参见&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;和&lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f40ae5570bc527bc5a1dd6d93c31c6aa0f593934" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d7514c028c77e7ca42538761981fea1a5e7fde" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid()&lt;/a&gt;&lt;/code&gt; function for returning group entries by group identifiers, see &lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于通过组标识符返回组条目，请参见&lt;a href=&quot;functions/getgrgid&quot;&gt;getgrgid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60e26e2d8720ed0149b7b87c377d73417035968a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam()&lt;/a&gt;&lt;/code&gt; function for returning group entries by group names, see &lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于按组名返回组条目，请参见&lt;a href=&quot;functions/getgrnam&quot;&gt;getgrnam&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d15624acd39757d16036f7262ed6bcece3061f3a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin()&lt;/a&gt;&lt;/code&gt; function for returning the user name associated with the current session, see &lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于返回与当前会话关联的用户名，请参见&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="186fcd1d3a57037edb361be5db32f5f007ca9211" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp()&lt;/a&gt;&lt;/code&gt; function for returning the process group identifier of the current process, see &lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于返回当前进程的进程组标识符，请参见&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1809496150480256c93f1aafd87f931437ce086" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; function for returning the process identifier of the parent process of the current process , see &lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getppid&quot;&gt;getppid()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于返回当前进程的父进程的进程标识符，请参见&lt;a href=&quot;functions/getppid&quot;&gt;getppid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="457ce51591f9cb379a5adb26605bff1ac3f4ef40" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam()&lt;/a&gt;&lt;/code&gt; function for returning user entries by user names, see &lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于通过用户名返回用户条目，请参见&lt;a href=&quot;functions/getpwnam&quot;&gt;getpwnam&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="099bdffd8de12dde36332facd7fd521fe7604dc8" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid()&lt;/a&gt;&lt;/code&gt; function for returning user entries by user identifiers, see &lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于通过用户标识符返回用户条目，请参见&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2f87263d58fd06391e632ecc597293fca726096" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; function for converting seconds since the epoch to a date in Greenwich Mean Time, see &lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;.</source>
          <target state="translated">这与Perl内置的 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于将自纪元以来的秒数转换为格林威治标准时间的日期，请参见&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3c0f6e328c0a9e84f4089fb4367baf98b6b1c72" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/index&quot;&gt;index&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b121ee200825f5ba836e4ff9ea046596d9a0669c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; function for sending signals to processes (often to terminate them), see &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于向进程发送信号（通常将其终止），请参见&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b81f62db22691a94ae2b3fa4ba9674d2bf0b3fd0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link()&lt;/a&gt;&lt;/code&gt; function for creating hard links into files, see &lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/link&quot;&gt;link()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于在文件中创建硬链接，请参见&lt;a href=&quot;functions/link&quot;&gt;link&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44d5f3c7d27301e5eb1acf76c204cabece604701" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; function for converting seconds since the epoch to a date see &lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;.</source>
          <target state="translated">这与Perl内置的 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于将自纪元转换为秒后的秒数转换为日期，请参见&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e0909781f3283ef9c3e20db724f85b91f439d90" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log()&lt;/a&gt;&lt;/code&gt; function, returning the natural (</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/log&quot;&gt;log()&lt;/a&gt;&lt;/code&gt; 函数相同，返回自然值（</target>
        </trans-unit>
        <trans-unit id="e971f99436b45984924e279dba0a0153fd2a323c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; function for creating directories, see &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; 函数（用于创建目录）相同，请参见&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b41549ebc9ad587ccb819b0a3ec0f8792362c7d3" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; function for reading directory entries, see &lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; 函数（用于读取目录条目）相同，请参见&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35438e0216a544df5038b4544cbb587885a54611" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; function for renaming files, see &lt;a href=&quot;functions/rename&quot;&gt;rename&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/rename&quot;&gt;rename()&lt;/a&gt;&lt;/code&gt; 命名文件功能相同（请参阅&lt;a href=&quot;functions/rename&quot;&gt;named）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5d513c94dc874928c142ca043089cff6c9b7ef0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir()&lt;/a&gt;&lt;/code&gt; function for rewinding directory entry streams, see &lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir()&lt;/a&gt;&lt;/code&gt; 函数（用于倒退目录条目流）相同，请参见&lt;a href=&quot;functions/rewinddir&quot;&gt;rewinddir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb204757196695331f28a45173a4730e85e7f0fb" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir()&lt;/a&gt;&lt;/code&gt; function for removing (empty) directories, see &lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于删除（空）目录，请参阅&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5d85ea0b853465bcc33fe450ea49c14a87d8b77" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; function for returning the sine of the numerical argument, see &lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与Perl内置的 &lt;code&gt;&lt;a href=&quot;functions/sin&quot;&gt;sin()&lt;/a&gt;&lt;/code&gt; 函数相同，用于返回数值参数的正弦值，请参见&lt;a href=&quot;functions/sin&quot;&gt;sin&lt;/a&gt;。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="919e7a21c6ecbb020823d058dd90c7b0a9eb3a55" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt()&lt;/a&gt;&lt;/code&gt; function. for returning the square root of the numerical argument, see &lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt()&lt;/a&gt;&lt;/code&gt; 函数相同。有关返回数值参数的平方根的信息，请参见&lt;a href=&quot;functions/sqrt&quot;&gt;sqrt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0eaf8f167427908f7febf3b312f3b5eb7b5e1919" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; function for returning information about files and directories.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于返回有关文件和目录的信息。</target>
        </trans-unit>
        <trans-unit id="41d6fd8cbb0b29357e5142e667be5a61001f2978" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3273b4b3b0615a180eb23eebf260bd07416587ce" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; function for returning the number of seconds since the epoch (whatever it is for the system), see &lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数返回自纪元以来的秒数（无论对于系统是什么），请参见&lt;a href=&quot;functions/time&quot;&gt;time&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c38ab013e5c6afb6168a48634dc91f08bf30d4f9" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask()&lt;/a&gt;&lt;/code&gt; function for setting (and querying) the file creation permission mask, see &lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于设置（和查询）文件创建许可权掩码，请参见&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88df1d410534e354bba714dca11791a1312464a8" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; function for removing files, see &lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;.</source>
          <target state="translated">这与Perl内置的用于删除文件的 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5cb3ad24016b3eaa5941feee2fcd750ab1532552" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; function for changing the time stamps of files and directories, see &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/utime&quot;&gt;utime()&lt;/a&gt;&lt;/code&gt; 函数相同，该函数用于更改文件和目录的时间戳，请参见&lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2c58755bc175c3890516b5d42561515cbd4c528" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;.</source>
          <target state="translated">这与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; 函数相同，请参见&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f13c2b63ac14ab4bd5f10ae515b06359ca5e4d21" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;abs()&lt;/code&gt; function for returning the absolute value of the numerical argument, see &lt;a href=&quot;perlfunc#abs&quot;&gt;&quot;abs&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeba6e922a9db20d2f88f41c166aa3a545a6731a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;abs()&lt;/code&gt; function, returning the absolute value of its numerical argument (except that &lt;code&gt;POSIX::abs()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9272bd8809bf23877d5d262cbbf69c42040e282" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;alarm()&lt;/code&gt; function, either for arming or disarming the &lt;code&gt;SIGARLM&lt;/code&gt; timer, except that &lt;code&gt;POSIX::alarm()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3051de63b274bf89d617977e27b1e44500fb09" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;atan2()&lt;/code&gt; function, returning the arcus tangent defined by its two numerical arguments, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1ff0f865c69120ee10570db31d0b1d2c0c062f" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;chdir()&lt;/code&gt; function, allowing one to change the working (default) directory -- see &lt;a href=&quot;perlfunc#chdir&quot;&gt;&quot;chdir&quot; in perlfunc&lt;/a&gt; -- with the exception that &lt;code&gt;POSIX::chdir()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f676f007cd841319686436bdb4f53d41b3e4ebac" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;chmod()&lt;/code&gt; function, allowing one to change file and directory permissions -- see &lt;a href=&quot;perlfunc#chmod&quot;&gt;&quot;chmod&quot; in perlfunc&lt;/a&gt; -- with the exception that &lt;code&gt;POSIX::chmod()&lt;/code&gt; can only change one file at a time (rather than a list of files):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041ab8f9027b39ef8749ecf23de9f449349be363" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;chown()&lt;/code&gt; function, allowing one to change file and directory owners and groups, see &lt;a href=&quot;perlfunc#chown&quot;&gt;&quot;chown&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f95aa5daddf7fe2d2d73fca7e7d94eeb6c29f6" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;closedir()&lt;/code&gt; function for closing a directory handle, see &lt;a href=&quot;perlfunc#closedir&quot;&gt;&quot;closedir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0812d720d3d8b9aac1e21c57a80f20bcf2f9c3ab" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;cos()&lt;/code&gt; function, for returning the cosine of its numerical argument, see &lt;a href=&quot;perlfunc#cos&quot;&gt;&quot;cos&quot; in perlfunc&lt;/a&gt;. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6faa18c6cf2e2bdf15486fb7413251a6c95a308" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;exit()&lt;/code&gt; function for exiting the program, see &lt;a href=&quot;perlfunc#exit&quot;&gt;&quot;exit&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a090250e226891fdf51f2235b04607999ab01e5b" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;exp()&lt;/code&gt; function for returning the exponent (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586ed7b1cf8385f5f84201e041a4c9b38b7cf920" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;fcntl()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#fcntl&quot;&gt;&quot;fcntl&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59914e126bdf7d613799ed2b869017e992d88d81" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;fork()&lt;/code&gt; function for duplicating the current process, see &lt;a href=&quot;perlfunc#fork&quot;&gt;&quot;fork&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; if you are in Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bcde2f841642aa747906d112793663d02a4ef4" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getc()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#getc&quot;&gt;&quot;getc&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf81bd9cceb40440442cab792009031a27722e2d" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getgrgid()&lt;/code&gt; function for returning group entries by group identifiers, see &lt;a href=&quot;perlfunc#getgrgid&quot;&gt;&quot;getgrgid&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f12c9c925dd97923ec1ba9d2494d7e7cc8c09b5" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getgrnam()&lt;/code&gt; function for returning group entries by group names, see &lt;a href=&quot;perlfunc#getgrnam&quot;&gt;&quot;getgrnam&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061d771b45fe6fdb91ab663f301fc5a4200fb6c2" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getlogin()&lt;/code&gt; function for returning the user name associated with the current session, see &lt;a href=&quot;perlfunc#getlogin&quot;&gt;&quot;getlogin&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6c96531c8f8c469ecd59a4d48093daaf34500a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getpgrp()&lt;/code&gt; function for returning the process group identifier of the current process, see &lt;a href=&quot;perlfunc#getpgrp&quot;&gt;&quot;getpgrp&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbc6cb1c29cf9bd86eed81cc69e1c840c81478c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getppid()&lt;/code&gt; function for returning the process identifier of the parent process of the current process , see &lt;a href=&quot;perlfunc#getppid&quot;&gt;&quot;getppid&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56bed142f19ad2080bf45ae8481e1ee1fb488e1" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getpwnam()&lt;/code&gt; function for returning user entries by user names, see &lt;a href=&quot;perlfunc#getpwnam&quot;&gt;&quot;getpwnam&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acc60524b9abec089e2c6f8c95b08eb6714a8db" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;getpwuid()&lt;/code&gt; function for returning user entries by user identifiers, see &lt;a href=&quot;perlfunc#getpwuid&quot;&gt;&quot;getpwuid&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179770df8af708d05f10bcd98500a9e7e79703eb" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;gmtime()&lt;/code&gt; function for converting seconds since the epoch to a date in Greenwich Mean Time, see &lt;a href=&quot;perlfunc#gmtime&quot;&gt;&quot;gmtime&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a268d454fa73c16bee33c404cb94d081cc9c3644" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;index()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#index&quot;&gt;&quot;index&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc3cee015e8a57d47d2c57b6b03b7fdf0cfd74c" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;kill()&lt;/code&gt; function for sending signals to processes (often to terminate them), see &lt;a href=&quot;perlfunc#kill&quot;&gt;&quot;kill&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0e4e90b9f46713a350fa47e616a04d2e30537a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;link()&lt;/code&gt; function for creating hard links into files, see &lt;a href=&quot;perlfunc#link&quot;&gt;&quot;link&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e011fd93298aca0de0c1a897aa121a02b4277007" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;localtime()&lt;/code&gt; function for converting seconds since the epoch to a date see &lt;a href=&quot;perlfunc#localtime&quot;&gt;&quot;localtime&quot; in perlfunc&lt;/a&gt; except that &lt;code&gt;POSIX::localtime()&lt;/code&gt; must be provided an explicit value (rather than relying on an implicit &lt;code&gt;$_&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2226cccc38cb9670469353b71c92d291f37e36" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;log()&lt;/code&gt; function, returning the natural (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa3dae63b59e4b6788fcb579b64e550147a8385" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;mkdir()&lt;/code&gt; function for creating directories, see &lt;a href=&quot;perlfunc#mkdir&quot;&gt;&quot;mkdir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8372bc5819fbb2b69c11355ff429f873a1d19d34" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;readdir()&lt;/code&gt; function for reading directory entries, see &lt;a href=&quot;perlfunc#readdir&quot;&gt;&quot;readdir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc44a32d8bf4a587e48ef68a6399c088ca095e76" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;rename()&lt;/code&gt; function for renaming files, see &lt;a href=&quot;perlfunc#rename&quot;&gt;&quot;rename&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9807c8d4769fe887205ad2c319e1b6b6f530cfa0" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;rewinddir()&lt;/code&gt; function for rewinding directory entry streams, see &lt;a href=&quot;perlfunc#rewinddir&quot;&gt;&quot;rewinddir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca175f2947c71a8d62582ef5092aec4bf6d13dff" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;rmdir()&lt;/code&gt; function for removing (empty) directories, see &lt;a href=&quot;perlfunc#rmdir&quot;&gt;&quot;rmdir&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5ced0975ffedcd4b86d361ab8c812058cf8570" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;sin()&lt;/code&gt; function for returning the sine of the numerical argument, see &lt;a href=&quot;perlfunc#sin&quot;&gt;&quot;sin&quot; in perlfunc&lt;/a&gt;. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5b6569126a0ff525866fa62adee3690d41b326" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;sqrt()&lt;/code&gt; function. for returning the square root of the numerical argument, see &lt;a href=&quot;perlfunc#sqrt&quot;&gt;&quot;sqrt&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc889395d59d965a8ac912064a8cc9050755ed00" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;stat()&lt;/code&gt; function for returning information about files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8832a10bfda45b41af5380174e01f618872f3ff" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;system()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#system&quot;&gt;&quot;system&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5066c0194994f20427059d8e1f43ba7326ce9f4a" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;time()&lt;/code&gt; function for returning the number of seconds since the epoch (whatever it is for the system), see &lt;a href=&quot;perlfunc#time&quot;&gt;&quot;time&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a23c736c7514772cb5de8b72d105ced2014902" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;umask()&lt;/code&gt; function for setting (and querying) the file creation permission mask, see &lt;a href=&quot;perlfunc#umask&quot;&gt;&quot;umask&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3d6c3a129925b0029f640eeed5c30997e2fe6b" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;unlink()&lt;/code&gt; function for removing files, see &lt;a href=&quot;perlfunc#unlink&quot;&gt;&quot;unlink&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c122efad471753582acea85c0f5c56e9dd6cb21b" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;utime()&lt;/code&gt; function for changing the time stamps of files and directories, see &lt;a href=&quot;perlfunc#utime&quot;&gt;&quot;utime&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5374f3dbfc8104dc52a46f4e1cac38e75ea3732" translate="yes" xml:space="preserve">
          <source>This is identical to Perl's builtin &lt;code&gt;wait()&lt;/code&gt; function, see &lt;a href=&quot;perlfunc#wait&quot;&gt;&quot;wait&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33a2624a3bac1d7979963b70993ae442f03646c" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;_exit()&lt;/code&gt; . It exits the program immediately which means among other things buffered I/O is &lt;b&gt;not&lt;/b&gt; flushed.</source>
          <target state="translated">这与C函数 &lt;code&gt;_exit()&lt;/code&gt; 相同。它立即退出程序，这意味着缓冲的I / O &lt;b&gt;不&lt;/b&gt;刷新。</target>
        </trans-unit>
        <trans-unit id="00e254fcf98c61ec0f416895b5a730cc21dd60c2" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;_exit()&lt;/code&gt;. It exits the program immediately which means among other things buffered I/O is &lt;b&gt;not&lt;/b&gt; flushed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80c449f3b57bbebcb07635c9eb453473b86c188" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;abort()&lt;/code&gt; . It terminates the process with a &lt;code&gt;SIGABRT&lt;/code&gt; signal unless caught by a signal handler or if the handler does not return normally (it e.g. does a &lt;code&gt;longjmp&lt;/code&gt; ).</source>
          <target state="translated">这与C函数 &lt;code&gt;abort()&lt;/code&gt; 相同。除非信号处理程序捕获到该处理程序或该处理程序未正常返回（例如， &lt;code&gt;longjmp&lt;/code&gt; 会返回），否则它将以 &lt;code&gt;SIGABRT&lt;/code&gt; 信号终止该过程。</target>
        </trans-unit>
        <trans-unit id="20cdd3c3d411f66ac2cf90136127302421076da0" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;abort()&lt;/code&gt;. It terminates the process with a &lt;code&gt;SIGABRT&lt;/code&gt; signal unless caught by a signal handler or if the handler does not return normally (it e.g. does a &lt;code&gt;longjmp&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d259a90ce3ab2f4e634cfbde2a7c2b688963f261" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acos()&lt;/code&gt; , returning the arcus cosine of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;acos()&lt;/code&gt; 相同，返回其数值参数的反正弦余弦。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e673d5033a6bd97125eca8bcd1d7b8d61c4bb0ee" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acos()&lt;/code&gt;, returning the arcus cosine of its numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccee1e25346b17fb481ba7f4de4b0b4f50758bcf" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acosh()&lt;/code&gt; , returning the hyperbolic arcus cosine of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;acosh()&lt;/code&gt; 相同，返回其数值参数[C99]的双曲反正弦余弦。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="222701acaff9ce2c807037cd58cb7be89c8e135d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;acosh()&lt;/code&gt;, returning the hyperbolic arcus cosine of its numerical argument [C99]. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8333095da54e7a945d4144cea8a756431c8956dd" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asctime()&lt;/code&gt; . It returns a string of the form</source>
          <target state="translated">这与C函数 &lt;code&gt;asctime()&lt;/code&gt; 相同。它返回以下形式的字符串</target>
        </trans-unit>
        <trans-unit id="48d0b6399063cccc6c529b55c31cc0b8ab41e44e" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asctime()&lt;/code&gt;. It returns a string of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83275b8475bd60ebbcd493cefc6cdd7a1783a9d1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asin()&lt;/code&gt; , returning the arcus sine of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;asin()&lt;/code&gt; 相同，返回其数值参数的反正弦值。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54c609704a8db4a3b622bf9cc7b83ccb3470173b" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asin()&lt;/code&gt;, returning the arcus sine of its numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c416500eafa9e5a5d6b613f8969a9c043a063d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asinh()&lt;/code&gt; , returning the hyperbolic arcus sine of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;asinh()&lt;/code&gt; 相同，返回其数值参数[C99]的双曲反正弦值。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f3336a617e3723139602480ac46beceda806087" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;asinh()&lt;/code&gt;, returning the hyperbolic arcus sine of its numerical argument [C99]. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e5aa7da9f697f4c8ff8dc1fb698909d946bb08" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atan()&lt;/code&gt; , returning the arcus tangent of its numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;atan()&lt;/code&gt; 相同，返回其数值参数的反正切值。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00b11961b84c9839acb25a23858dc26ef9cc84ec" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atan()&lt;/code&gt;, returning the arcus tangent of its numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f0cbd1a192e343ff198d459f44a118616c801d" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atanh()&lt;/code&gt; , returning the hyperbolic arcus tangent of its numerical argument [C99]. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;atanh()&lt;/code&gt; 相同，返回其数值参数[C99]的双曲圆弧正切。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aacbec97967534e4e0da192e27504c8b78773bf1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;atanh()&lt;/code&gt;, returning the hyperbolic arcus tangent of its numerical argument [C99]. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1019f8f1ad013c7cb1f6add559add30196a2727" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ceil()&lt;/code&gt; , returning the smallest integer value greater than or equal to the given numerical argument.</source>
          <target state="translated">这与C函数 &lt;code&gt;ceil()&lt;/code&gt; 相同，返回大于或等于给定数值参数的最小整数值。</target>
        </trans-unit>
        <trans-unit id="09aef5268ee130db39b796423ddf5bc05a67f7d9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ceil()&lt;/code&gt;, returning the smallest integer value greater than or equal to the given numerical argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09fd6d4a60edcd6b29ae2efeeb92f7f1a3032dc" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;clock()&lt;/code&gt; , returning the amount of spent processor time in microseconds.</source>
          <target state="translated">这与C函数 &lt;code&gt;clock()&lt;/code&gt; 相同，以微秒为单位返回所花费的处理器时间。</target>
        </trans-unit>
        <trans-unit id="bb64ec4bf06850ca41b665cf03b415935ba00a08" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;clock()&lt;/code&gt;, returning the amount of spent processor time in microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed50101b37aabb6ccd0f72bf1cd12dc057e125c6" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;cosh()&lt;/code&gt; , for returning the hyperbolic cosine of its numeric argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;cosh()&lt;/code&gt; 相同，用于返回其数字参数的双曲余弦值。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3eb4801a049bd3b441ac59627ccf364d2f377e67" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;cosh()&lt;/code&gt;, for returning the hyperbolic cosine of its numeric argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f87a9c64391c986e35e0df3a461ddde69989f77" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ctime()&lt;/code&gt; and equivalent to &lt;code&gt;asctime(&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;(...))&lt;/code&gt; , see &lt;a href=&quot;#asctime&quot;&gt;asctime&lt;/a&gt; and &lt;a href=&quot;#localtime&quot;&gt;localtime&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;ctime()&lt;/code&gt; 相同，并且等效于 &lt;code&gt;asctime(&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;(...))&lt;/code&gt; ，请参见&lt;a href=&quot;#asctime&quot;&gt;asctime&lt;/a&gt;和&lt;a href=&quot;#localtime&quot;&gt;localtime&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d3b737efaa2b1ca101fca77dad87f1948da80de" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ctime()&lt;/code&gt; and equivalent to &lt;code&gt;asctime(localtime(...))&lt;/code&gt;, see &lt;a href=&quot;#asctime&quot;&gt;&quot;asctime&quot;&lt;/a&gt; and &lt;a href=&quot;#localtime&quot;&gt;&quot;localtime&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a7a8b5298975e8b4638f6e08f625101ddd94f1" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;difftime()&lt;/code&gt; , for returning the time difference (in seconds) between two times (as returned by &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt;), see &lt;a href=&quot;#time&quot;&gt;time&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;difftime()&lt;/code&gt; 相同，用于返回两次（由 &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; 返回）之间的时间差（以秒为单位），请参见&lt;a href=&quot;#time&quot;&gt;time&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="697a72690b71691d80d753e57df20f9ff5b09479" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;difftime()&lt;/code&gt;, for returning the time difference (in seconds) between two times (as returned by &lt;code&gt;time()&lt;/code&gt;), see &lt;a href=&quot;#time&quot;&gt;&quot;time&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3400f6cf25b03ffea13db374eb3a67b922b12f5c" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;floor()&lt;/code&gt; , returning the largest integer value less than or equal to the numerical argument.</source>
          <target state="translated">这与C函数 &lt;code&gt;floor()&lt;/code&gt; 相同，返回小于或等于数值参数的最大整数值。</target>
        </trans-unit>
        <trans-unit id="7b9055c370577838fb2e4da609111c91973145a3" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;floor()&lt;/code&gt;, returning the largest integer value less than or equal to the numerical argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40ee9ab2883fdc4ea6712b24d8986ecec5f39fc" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;fmod()&lt;/code&gt; .</source>
          <target state="translated">这与C函数 &lt;code&gt;fmod()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="3287da7f52ceaee5a8201c36c4596dffd105daf4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;fmod()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7a8f7914876d99686857a5b212ffa67a406bf2" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ldexp()&lt;/code&gt; for multiplying floating point numbers with powers of two.</source>
          <target state="translated">这与C函数 &lt;code&gt;ldexp()&lt;/code&gt; 相同，用于将浮点数乘以2的幂。</target>
        </trans-unit>
        <trans-unit id="5967c218ae5e6977bcfb278510b90089a48661b4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;log10()&lt;/code&gt; , returning the 10-base logarithm of the numerical argument. You can also use</source>
          <target state="translated">这与C函数 &lt;code&gt;log10()&lt;/code&gt; 相同，返回数值参数的10进制对数。您也可以使用</target>
        </trans-unit>
        <trans-unit id="08dc53f13307f9a7669daa41059fc0f3ab144475" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;log10()&lt;/code&gt;, returning the 10-base logarithm of the numerical argument. You can also use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d960a256a04c197a9681bc6a5b2df4621c6abcef" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mblen()&lt;/code&gt; .</source>
          <target state="translated">这与C函数 &lt;code&gt;mblen()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="72da259370ed7368b03117d248a4d69905a2aec8" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mbstowcs()&lt;/code&gt; .</source>
          <target state="translated">这与C函数 &lt;code&gt;mbstowcs()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="e9cb9e5092c37fe36ba32ebf9a50fb911920ee05" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;mbtowc()&lt;/code&gt; .</source>
          <target state="translated">这与C函数 &lt;code&gt;mbtowc()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="34c30fa04962ce474f9dd2f58f200b70edfa44f9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;perror()&lt;/code&gt; , which outputs to the standard error stream the specified message followed by &lt;code&gt;&quot;: &quot;&lt;/code&gt; and the current error string. Use the &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; function and the &lt;code&gt;$!&lt;/code&gt; variable instead, see &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt; and &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;perror()&lt;/code&gt; 相同，该函数将指定的消息后跟 &lt;code&gt;&quot;: &quot;&lt;/code&gt; 和当前错误字符串输出到标准错误流。使用 &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; 函数和 &lt;code&gt;$!&lt;/code&gt; 而是改为查看&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;和&lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ perlvar中的$ ERRNO&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e999e8bd354cec8599d88611d60fa296f4268ab9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;perror()&lt;/code&gt;, which outputs to the standard error stream the specified message followed by &lt;code&gt;&quot;: &quot;&lt;/code&gt; and the current error string. Use the &lt;code&gt;warn()&lt;/code&gt; function and the &lt;code&gt;$!&lt;/code&gt; variable instead, see &lt;a href=&quot;perlfunc#warn&quot;&gt;&quot;warn&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;&quot;$ERRNO&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc1118a61c7aca10633514f234f4da1ee0e5bc3" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;setsid()&lt;/code&gt; for setting the session identifier of the current process.</source>
          <target state="translated">这与用于设置当前进程的会话标识符的C函数 &lt;code&gt;setsid()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="cd2e30a5d85631fe96db821f94473755dc93c4ea" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;sinh()&lt;/code&gt; for returning the hyperbolic sine of the numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b9a9e6d01fce018b50fa102ad5992e876d6995" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;sinh()&lt;/code&gt; for returning the hyperbolic sine of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与用于返回数值参数的双曲正弦的C函数 &lt;code&gt;sinh()&lt;/code&gt; 相同。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5620e4c58d5e806939f06354c891f33af057e241" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;strcoll()&lt;/code&gt; for collating (comparing) strings transformed using the &lt;code&gt;strxfrm()&lt;/code&gt; function. Not really needed since Perl can do this transparently, see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;strcoll()&lt;/code&gt; 相同，用于整理（比较）使用 &lt;code&gt;strxfrm()&lt;/code&gt; 函数转换的字符串。由于Perl可以透明地执行此操作，因此并不需要，请参见&lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c1de6e40d16de1b4908183780ee818a15a66a41" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tan()&lt;/code&gt; , returning the tangent of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;tan()&lt;/code&gt; 相同，返回数字参数的正切值。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f498da9b7b8a82d92561bf26d0e1756b0d1ee8f4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tan()&lt;/code&gt;, returning the tangent of the numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53070d8b102022984bacaa431429b0ea23b53bf" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tanh()&lt;/code&gt; , returning the hyperbolic tangent of the numerical argument. See also &lt;a href=&quot;math/trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="translated">这与C函数 &lt;code&gt;tanh()&lt;/code&gt; 相同，返回数值参数的双曲正切值。另请参见&lt;a href=&quot;math/trig&quot;&gt;Math :: Trig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="619493a33623a4d1d100c28c84312cd640352776" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tanh()&lt;/code&gt;, returning the hyperbolic tangent of the numerical argument. See also &lt;a href=&quot;Math::Trig&quot;&gt;Math::Trig&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4339b3026b6818ba331f4b8dad83033d79b015ba" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tcgetpgrp()&lt;/code&gt; for returning the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">这与C函数 &lt;code&gt;tcgetpgrp()&lt;/code&gt; 相同，用于返回控制终端的前台进程组的进程组标识符。</target>
        </trans-unit>
        <trans-unit id="10385672619fbe5424be8d41f4c81323dffb2c77" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;ttyname()&lt;/code&gt; for returning the name of the current terminal.</source>
          <target state="translated">这与用于返回当前终端名称的C函数 &lt;code&gt;ttyname()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="61c4adb4504ab133429c5dcca9e634dda0234fa4" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tzset()&lt;/code&gt; for setting the current timezone based on the environment variable &lt;code&gt;TZ&lt;/code&gt; , to be used by &lt;code&gt;ctime()&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;mktime()&lt;/code&gt; , and &lt;code&gt;strftime()&lt;/code&gt; functions.</source>
          <target state="translated">这与C函数 &lt;code&gt;tzset()&lt;/code&gt; 相同，后者基于环境变量 &lt;code&gt;TZ&lt;/code&gt; 设置当前时区，由 &lt;code&gt;ctime()&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;mktime()&lt;/code&gt; 和 &lt;code&gt;strftime()&lt;/code&gt; 函数使用。</target>
        </trans-unit>
        <trans-unit id="c8d5049412005d34781dc9061461ec11720e4de6" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;tzset()&lt;/code&gt; for setting the current timezone based on the environment variable &lt;code&gt;TZ&lt;/code&gt;, to be used by &lt;code&gt;ctime()&lt;/code&gt;, &lt;code&gt;localtime()&lt;/code&gt;, &lt;code&gt;mktime()&lt;/code&gt;, and &lt;code&gt;strftime()&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eac2e9b93151c25128e8b44336e559f1ca26691" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;wcstombs()&lt;/code&gt; .</source>
          <target state="translated">这与C函数 &lt;code&gt;wcstombs()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="6531eaab1a3fcd3d02f83fe194ba892352425032" translate="yes" xml:space="preserve">
          <source>This is identical to the C function &lt;code&gt;wctomb()&lt;/code&gt; .</source>
          <target state="translated">这与C函数 &lt;code&gt;wctomb()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="2b638e3d48a14e811a63d8a3b93348f1843f5897" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;, see &lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;, or the equivalent &lt;code&gt;\L&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">除了可以应用于单个字符或整个字符串之外，此功能与C函数相同，并且当前的运行方式就像语言环境始终为&amp;ldquo; C&amp;rdquo;一样。考虑使用 &lt;code&gt;&lt;a href=&quot;functions/lc&quot;&gt;lc()&lt;/a&gt;&lt;/code&gt; 函数，请参见&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;，&lt;a href=&quot;functions/lc&quot;&gt;lc&lt;/a&gt;或双引号字符串中的等效 &lt;code&gt;\L&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="30976c7fff7754f905b7e098aaebc37d849842e9" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except the order of arguments is consistent with Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; with the added restriction of only one path, not a list of paths. Does the same thing as the &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; function but changes the owner of a symbolic link instead of the file the symbolic link points to.</source>
          <target state="translated">这与C函数相同，不同之处在于参数的顺序与Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; 一致，只增加了一条路径，而不是路径列表。执行与 &lt;code&gt;&lt;a href=&quot;functions/chown&quot;&gt;chown()&lt;/a&gt;&lt;/code&gt; 函数相同的操作，但是更改符号链接的所有者，而不是符号链接指向的文件。</target>
        </trans-unit>
        <trans-unit id="f2df656889ea7332cb6bc09e8c0d267a915a4923" translate="yes" xml:space="preserve">
          <source>This is identical to the C function, except the order of arguments is consistent with Perl's builtin &lt;code&gt;chown()&lt;/code&gt; with the added restriction of only one path, not a list of paths. Does the same thing as the &lt;code&gt;chown()&lt;/code&gt; function but changes the owner of a symbolic link instead of the file the symbolic link points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec15e827312e3918cb71e034a41abdc4f73a598" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_FUNCS attribute available via MakeMaker, from which it is usually taken. Its value is a reference to an associative array, in which each key is the name of a package, and each value is an a reference to an array of function names which should be exported by the extension. For instance, one might say &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ],
Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt; . The function names should be identical to those in the XSUB code; &lt;code&gt;Mksymlists&lt;/code&gt; will alter the names written to the linker option file to match the changes made by</source>
          <target state="translated">该属性与通常通过MakeMaker获得的DL_FUNCS属性相同。它的值是对关联数组的引用，其中每个键是包的名称，每个值是对应由扩展名导出的函数名称的数组的引用。例如，有人可能会说 &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ], Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt; 。函数名称应与XSUB代码中的名称相同； &lt;code&gt;Mksymlists&lt;/code&gt; 将更改写入链接器选项文件的名称，以匹配由</target>
        </trans-unit>
        <trans-unit id="05f95b67712ddc6756ad05c6f1a80aa7067863ef" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_FUNCS attribute available via MakeMaker, from which it is usually taken. Its value is a reference to an associative array, in which each key is the name of a package, and each value is an a reference to an array of function names which should be exported by the extension. For instance, one might say &lt;code&gt;DL_FUNCS =&amp;gt; { Homer::Iliad =&amp;gt; [ qw(trojans greeks) ], Homer::Odyssey =&amp;gt; [ qw(travellers family suitors) ] }&lt;/code&gt;. The function names should be identical to those in the XSUB code; &lt;code&gt;Mksymlists&lt;/code&gt; will alter the names written to the linker option file to match the changes made by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310f96db114f72f372da9166d69a4cc6f2cae9b1" translate="yes" xml:space="preserve">
          <source>This is identical to the DL_VARS attribute available via MakeMaker, and, like DL_FUNCS, it is usually specified via MakeMaker. Its value is a reference to an array of variable names which should be exported by the extension.</source>
          <target state="translated">这与通过MakeMaker提供的DL_VARS属性相同,和DL_FUNCS一样,它通常通过MakeMaker来指定。它的值是对一个变量名数组的引用,该数组应该由扩展程序导出。</target>
        </trans-unit>
        <trans-unit id="b412f9ab149e41469d7ba2eef653a9c88721e439" translate="yes" xml:space="preserve">
          <source>This is identical to the macro &lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt;.</source>
          <target state="translated">这与宏&lt;a href=&quot;#isUTF8_CHAR&quot;&gt;isUTF8_CHAR&lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="1adbe800aa3e5b1f98201baedb59f2c206a1c29e" translate="yes" xml:space="preserve">
          <source>This is identical to the macro &lt;a href=&quot;perlapi#isUTF8_CHAR&quot;&gt;&quot;isUTF8_CHAR&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee0007e2daab07905e6dc7537e69cd21d5b2ba" translate="yes" xml:space="preserve">
          <source>This is ignored by most formatters, but some may use it for building indexes. It always renders as empty-string. Example: &lt;code&gt;X&amp;lt;absolutizing relative URLs&amp;gt;&lt;/code&gt;</source>
          <target state="translated">大多数格式化程序都忽略了它，但是有些格式化程序可以将其用于建立索引。它始终呈现为空字符串。示例： &lt;code&gt;X&amp;lt;absolutizing relative URLs&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be9929994c9a23587b60ac75552db3fe41c07468" translate="yes" xml:space="preserve">
          <source>This is implemented as a macro.</source>
          <target state="translated">这是作为一个宏来实现的。</target>
        </trans-unit>
        <trans-unit id="667c85db18e1907f43da9d70ad90da9e90ed961a" translate="yes" xml:space="preserve">
          <source>This is important because miniperl, used to build XS modules in the core, can not load XS.</source>
          <target state="translated">这一点很重要,因为用于在核心中构建XS模块的miniperl不能加载XS。</target>
        </trans-unit>
        <trans-unit id="144222a27e6ef028e4173cd0825a23a1090abbf3" translate="yes" xml:space="preserve">
          <source>This is in contrast to many other dynamic languages, where the operation is determined by the type of the first argument. It also means that Perl has two versions of some operators, one for numeric and one for string comparison. For example &lt;code&gt;$x == $y&lt;/code&gt; compares two numbers for equality, and &lt;code&gt;$x &lt;a href=&quot;functions/eq&quot;&gt;eq&lt;/a&gt; $y&lt;/code&gt; compares two strings.</source>
          <target state="translated">这与许多其他动态语言相反，后者的操作由第一个参数的类型确定。这也意味着Perl有两种​​版本的某些运算符，一种用于数字运算，另一种用于字符串比较。例如， &lt;code&gt;$x == $y&lt;/code&gt; 比较两个数字是否相等，而 &lt;code&gt;$x &lt;a href=&quot;functions/eq&quot;&gt;eq&lt;/a&gt; $y&lt;/code&gt; 比较两个字符串。</target>
        </trans-unit>
        <trans-unit id="3bc5ead38c3990127ff9d0720451c4bddc83a1e1" translate="yes" xml:space="preserve">
          <source>This is in contrast to many other dynamic languages, where the operation is determined by the type of the first argument. It also means that Perl has two versions of some operators, one for numeric and one for string comparison. For example &lt;code&gt;$x == $y&lt;/code&gt; compares two numbers for equality, and &lt;code&gt;$x eq $y&lt;/code&gt; compares two strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d09a7649982765a4ac03ceb6ff657832053b721" translate="yes" xml:space="preserve">
          <source>This is independent of other methods (except that it operates after any verbatim input stripping is done).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc4ce8a710f4fb316b8dc52b8dcce601b6a9b9f" translate="yes" xml:space="preserve">
          <source>This is indexed by op name and then bit number (0..7). For single bit flags, it returns the name of the define (if any) for that bit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4362971c4874b5e0e3d89683d64eb2597dab60" translate="yes" xml:space="preserve">
          <source>This is intended as a shortcut that lets you release your context and return a value in one statement. This function will get your context, and an optional return value. It will release your context, then return your value. Scalar context is always assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fded423d74ecd2cac30cc09f0fef74a562c96a" translate="yes" xml:space="preserve">
          <source>This is intended for authors of modules which do lots of class introspection, as it allows them to very quickly check if anything important about the local properties of a given class have changed since the last time they looked. It does not increment on method/&lt;code&gt;@ISA&lt;/code&gt; changes in superclasses.</source>
          <target state="translated">这适用于进行大量类自省的模块的作者，因为它使他们可以非常快速地检查自上次查看以来与给定类的局部属性有关的任何重要事项是否已更改。它不会在超类中的方法/ @ &lt;code&gt;@ISA&lt;/code&gt; 更改上增加。</target>
        </trans-unit>
        <trans-unit id="f3febce058bf2848f33dea0d5ca24d955e2c8d64" translate="yes" xml:space="preserve">
          <source>This is intended to be a human readable summary of the event. This should ideally only be one line long, but you can use multiple lines if necessary. This is intended for human consumption. You do not need to make it easy for machines to understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0be3b75ce6b3c6941246d7312f0a73c8b3d2d9" translate="yes" xml:space="preserve">
          <source>This is intended to be called in an &lt;code&gt;END { ... }&lt;/code&gt; block. This will look at test state and set $?. This will also call any end callbacks, and wait on child processes/threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8048e3a62929d8c0b743c4d8a83b98f6eb0f81fb" translate="yes" xml:space="preserve">
          <source>This is intended to largely replace the deprecated pseudo-hashes.</source>
          <target state="translated">这在很大程度上是为了取代被废弃的伪哈希值。</target>
        </trans-unit>
        <trans-unit id="db4b800255fcc3a17f2b811fc2b88aebde232685" translate="yes" xml:space="preserve">
          <source>This is invalid because every &quot;=end&quot; command must have a formatname parameter.</source>
          <target state="translated">这是无效的,因为每条&quot;=end &quot;命令都必须有一个formatname参数。</target>
        </trans-unit>
        <trans-unit id="61a2277b2bd23db81a91f83c4d1f3dd9feb9a041" translate="yes" xml:space="preserve">
          <source>This is just a basic proof of concept. It should be seriously expanded to support configurable coloration via options passed to the constructor, and &lt;b&gt;pod2text&lt;/b&gt; should be taught about those.</source>
          <target state="translated">这只是概念的基本证明。应该认真地扩展它，以通过传递给构造函数的选项来支持可配置的着色，并且应该教&lt;b&gt;pod2text&lt;/b&gt;有关这些内容。</target>
        </trans-unit>
        <trans-unit id="68c9d184917794ed93e7fda1e4971f91e0c45375" translate="yes" xml:space="preserve">
          <source>This is just a beta release -- there are a good number of things still left to do. Notably, support for EBCDIC platforms is still half-done, an untested.</source>
          <target state="translated">这只是一个测试版--还有很多事情没有做。值得注意的是,对EBCDIC平台的支持仍然是半成品,是一个未经测试的。</target>
        </trans-unit>
        <trans-unit id="219ed1315313e10e560072058c3673015172eb8a" translate="yes" xml:space="preserve">
          <source>This is just a quick start guide. For a more in-depth tutorial on regexes, see &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; and for the reference page, see &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">这只是一个快速入门指南。有关正则表达式的更深入的教程，请参见&lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;；对于参考页面，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="285e57010c635f262d70613679ce183fe2c1fc6d" translate="yes" xml:space="preserve">
          <source>This is just a restatement of the previous section. Unless you are completely certain you know what you are doing, avoid mixing filtered &amp;amp; non-filtered data.</source>
          <target state="translated">这只是上一节的重述。除非您完全确定自己知道自己在做什么，否则请避免混合使用已过滤和未过滤的数据。</target>
        </trans-unit>
        <trans-unit id="0eb6c125a87601bb415e7dd8ac4261d5f4ccd383" translate="yes" xml:space="preserve">
          <source>This is just a shorthand for a typeglob assignment at compile time:</source>
          <target state="translated">这只是编译时typeglob赋值的一个简写。</target>
        </trans-unit>
        <trans-unit id="15b35232b5a8087ae488ff75565de5703f14864d" translate="yes" xml:space="preserve">
          <source>This is just a tutorial. For the full story on Perl regular expressions, see the &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; regular expressions reference page.</source>
          <target state="translated">这只是一个教程。有关Perl正则表达式的完整信息，请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;正则表达式参考页。</target>
        </trans-unit>
        <trans-unit id="9456d5890fbed572d26379cc56324c8cfe828e36" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="translated">这只是Perl正常 &lt;code&gt;&lt;a href=&quot;../functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 函数的包装。提供它是为了使您可以在括号表示法中使用&amp;ldquo; sprintf&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="b4ff27b6bada60e402e6197635d038979041e1aa" translate="yes" xml:space="preserve">
          <source>This is just a wrapper around Perl's normal &lt;code&gt;sprintf&lt;/code&gt; function. It's provided so that you can use &quot;sprintf&quot; in Bracket Notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77266324e65b81993bcee36043a748db86e77bf5" translate="yes" xml:space="preserve">
          <source>This is just an alias for $ctx-&amp;gt;new.</source>
          <target state="translated">这只是$ ctx-&amp;gt; new的别名。</target>
        </trans-unit>
        <trans-unit id="4341fe03623ad4301c3243c214057adf6cd69228" translate="yes" xml:space="preserve">
          <source>This is just an alias for $md5-&amp;gt;new.</source>
          <target state="translated">这只是$ md5-&amp;gt; new的别名。</target>
        </trans-unit>
        <trans-unit id="99b8f0dcbd7ef8ebc2a3383d96beb914e7c2ab77" translate="yes" xml:space="preserve">
          <source>This is just an alias for &lt;code&gt;to_bytes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb98ec9f418273dc2ca6cd9acdcab91a8675d3b" translate="yes" xml:space="preserve">
          <source>This is just like get_title, except that it returns just the modulename, if the title seems to be of the form &quot;SomeModuleName -- description&quot;.</source>
          <target state="translated">这和get_title一样,只是如果标题的形式是 &quot;SomeModuleName --description&quot;,那么它只返回modulename。</target>
        </trans-unit>
        <trans-unit id="3efe951774b37c8f5ed5c70b61d80e43335a5d14" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="translated">就像 &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search一样，只不过它在对 &lt;code&gt;&lt;a href=&quot;functions/reset&quot;&gt;reset()&lt;/a&gt;&lt;/code&gt; 运算符的调用之间仅匹配一次。例如，当您只想查看某组文件的每个文件中某事物的首次出现时，这是有用的优化。只有 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m??&lt;/a&gt;&lt;/code&gt; 重置当前程序包本地的模式。</target>
        </trans-unit>
        <trans-unit id="d73aff15bc3ff484da433da10ce9913b15e17a51" translate="yes" xml:space="preserve">
          <source>This is just like the &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; search, except that it matches only once between calls to the &lt;code&gt;reset()&lt;/code&gt; operator. This is a useful optimization when you want to see only the first occurrence of something in each file of a set of files, for instance. Only &lt;code&gt;m??&lt;/code&gt; patterns local to the current package are reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380457e35227699cc7301b94acae78bea6e5c126" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for &quot;=cut&quot; lines, not code lines. The same caveats apply. &quot;=cut&quot; lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0695e20ad7060a9368dde02cbfce95268dbd1b5b" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for &quot;=pod&quot; lines, not code lines. The same caveats apply. &quot;=pod&quot; lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2022f30d9b2a5b27c04280f1ebd50a51bbc345d3" translate="yes" xml:space="preserve">
          <source>This is just like the code_handler attribute, except that it's for lines that are seemingly blank but have whitespace (&quot; &quot; and/or &quot;\t&quot;) on them, not code lines. The same caveats apply. These lines are unlikely to be interesting, but this is included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f273b15a0cb3300a978b7939f344dd1d08639d" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt; , but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="translated">就像 &lt;code&gt;&quot;a&quot;&lt;/code&gt; ，但是某些元素是空字符串，因此不应进行调整。 &lt;code&gt;prop_invmap&lt;/code&gt; 可访问的一个内部Perl属性是这种类型：&amp;ldquo; Perl_Decimal_Digit&amp;rdquo;返回一个反转映射，该映射给出了用Unicode十进制数字字符表示的数值。不代表十进制数字的字符映射到空字符串，如下所示：</target>
        </trans-unit>
        <trans-unit id="0c85507fc9c8edf048dedc4d8b1c473489d69c9b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;&quot;a&quot;&lt;/code&gt;, but some elements are the empty string, and should not be adjusted. The one internal Perl property accessible by &lt;code&gt;prop_invmap&lt;/code&gt; is of this type: &quot;Perl_Decimal_Digit&quot; returns an inversion map which gives the numeric values that are represented by the Unicode decimal digit characters. Characters that don't represent decimal digits map to the empty string, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1dd5dc0a1e329de530690bfade7652c51e667a" translate="yes" xml:space="preserve">
          <source>This is like accept_targets, except that it specifies also that the content of sections for this target should be treated as Pod text even if the target name in &quot;=for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed31723489424c54355ea43ef7bfdd64197f0ef8" translate="yes" xml:space="preserve">
          <source>This is like the &quot;over-bullet&quot; event structure; but note that the contents are &quot;item-number&quot; instead of &quot;item-bullet&quot;, and note that they will have a &quot;number&quot; attribute, which some formatters/processors may ignore (since, for example, there's no need for it in HTML when producing an &quot;&amp;lt;UL&amp;gt;&amp;lt;LI&amp;gt;...&amp;lt;/LI&amp;gt;...&amp;lt;/UL&amp;gt;&quot; structure), but which any processor may use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c127a4acabd567283fc3055323b13e8a32015" translate="yes" xml:space="preserve">
          <source>This is like the SMTP transport, but uses TLS security. You can authenticate with this module as well, using any mechanisms your server supports after STARTTLS.</source>
          <target state="translated">这就像SMTP传输一样,但使用TLS安全。你也可以使用这个模块进行验证,使用你的服务器在STARTTLS之后支持的任何机制。</target>
        </trans-unit>
        <trans-unit id="5a91727b3a107b517a647724e9523d6e1a6aa45f" translate="yes" xml:space="preserve">
          <source>This is mainly used by legacy &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; tests which set the plan to &lt;code&gt;no plan&lt;/code&gt;, a construct that predates the much better &lt;code&gt;done_testing()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbc2d6ed341b1ef3ce37675e465b3be11154914" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;a href=&quot;#select-RBITS%2CWBITS%2CEBITS%2CTIMEOUT&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee19061e56d9213c77400710440b7c20343ebe03" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">这对于为 &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 和低级POSIX tty处理操作构造位图非常有用。如果FILEHANDLE是一个表达式，则该值将作为间接文件句柄，通常是其名称。</target>
        </trans-unit>
        <trans-unit id="4451800d0e0114802550054b61665e033a2b00a5" translate="yes" xml:space="preserve">
          <source>This is mainly useful for constructing bitmaps for &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; and low-level POSIX tty-handling operations. If FILEHANDLE is an expression, the value is taken as an indirect filehandle, generally its name.</source>
          <target state="translated">这对于为 &lt;code&gt;&lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 和低级POSIX tty处理操作构造位图非常有用。如果FILEHANDLE是一个表达式，则该值将作为间接文件句柄，通常是其名称。</target>
        </trans-unit>
        <trans-unit id="37ce9a12e2723922e8bd944d2d5d67e411bc7f1f" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt; .</source>
          <target state="translated">这只是 &lt;code&gt;as_string&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="2ff1814bfd6950f7490c26d111f974fff43e1eff" translate="yes" xml:space="preserve">
          <source>This is merely a synonym for &lt;code&gt;as_string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dab1c8c1fba88ee26cb0159afceae84eeab9c5c" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, but not as illustrative:</source>
          <target state="translated">这比原始的 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; 更可移植，但不作为说明：</target>
        </trans-unit>
        <trans-unit id="358b6febc6a20347552685e4650bab012743d763" translate="yes" xml:space="preserve">
          <source>This is more portable than the raw &lt;code&gt;ioctl&lt;/code&gt;, but not as illustrative:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a905466f9a6fe7fba1c2ba03bc5e341bea7a9afa" translate="yes" xml:space="preserve">
          <source>This is most likely the same as &lt;code&gt;$Config{osname}&lt;/code&gt;, and was the name known when perl was built. It might be different if perl was cross-compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ef392975ecd504b3ac95743d2709331ec1fc38" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; does</source>
          <target state="translated">这既不是简单性的样本，也不是可移植性的典范，但它说明了这一点：我们能够在后台偷偷摸摸，并访问Perl受到良好保护的内存！（重要说明：Perl的 &lt;code&gt;&lt;a href=&quot;functions/syscall&quot;&gt;syscall&lt;/a&gt;&lt;/code&gt; 确实</target>
        </trans-unit>
        <trans-unit id="3f30d05de7dd225aaab947f0992ea2b7121ca260" translate="yes" xml:space="preserve">
          <source>This is neither a specimen of simplicity nor a paragon of portability but it illustrates the point: We are able to sneak behind the scenes and access Perl's otherwise well-guarded memory! (Important note: Perl's &lt;code&gt;syscall&lt;/code&gt; does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebf1cbe04784f38db52da63b8ec5a60455457d" translate="yes" xml:space="preserve">
          <source>This is normally all you need to know. However, many options are available:</source>
          <target state="translated">通常这就是你需要知道的全部内容。不过,还有很多选择。</target>
        </trans-unit>
        <trans-unit id="d00bfe25391751730fea233731dd8b0f5f6ab569" translate="yes" xml:space="preserve">
          <source>This is not &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;, which tells you how to use the debugger. This manpage describes low-level details concerning the debugger's internals, which range from difficult to impossible to understand for anyone who isn't incredibly intimate with Perl's guts. Caveat lector.</source>
          <target state="translated">这不是&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;，它告诉您如何使用调试器。该手册页描述了有关调试器内部的低级详细信息，对于不熟悉Perl胆量的人，范围从难以理解到难以理解。注意警告。</target>
        </trans-unit>
        <trans-unit id="33bd7c44464b83d74ae2002b960a112388650681" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the &lt;code&gt;Encode&lt;/code&gt; extension for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f404a9e2e0db79bb4f43c8d7bbb05496d430ba62" translate="yes" xml:space="preserve">
          <source>This is not a general purpose Unicode to byte encoding interface: use the Encode extension for that.</source>
          <target state="translated">这不是一个通用的Unicode到字节的编码接口:使用Encode扩展。</target>
        </trans-unit>
        <trans-unit id="7457d8ee09385437d0b615e7e131b4e9c0b973a9" translate="yes" xml:space="preserve">
          <source>This is not a general purpose byte encoding to Unicode interface: use the Encode extension for that.</source>
          <target state="translated">这不是一个通用的字节编码到Unicode接口:使用Encode扩展。</target>
        </trans-unit>
        <trans-unit id="4bba8250f7720ad535561da71f3cfe66f5ce3b19" translate="yes" xml:space="preserve">
          <source>This is not actually a Unicode-specified obsolescence, but applies to certain Perl extensions that are present for backwards compatibility, but are discouraged from being used. These are not obsolete, but their meanings are not stable. Future Unicode versions could force any of these extensions to be removed without warning, replaced by another property with the same name that means something different. An '&lt;b&gt;X&lt;/b&gt;' flags each such entry in the table. Use the equivalent shown instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d116bb6d0c3c84c2243b689bc93fe4a6155eb5cb" translate="yes" xml:space="preserve">
          <source>This is not as short as before, but it makes it more obvious that we intend to have little-endian byte-order for a whole group, not only for individual template codes. It can also be more readable and easier to maintain.</source>
          <target state="translated">这虽然没有以前那么短,但它使我们更清楚地表明,我们打算对整个组采用小字节顺序,而不是只对单个模板代码采用小字节顺序。也可以更易读,更易维护。</target>
        </trans-unit>
        <trans-unit id="21c82389f9ec1dc190c296dba01242b89223a846" translate="yes" xml:space="preserve">
          <source>This is not ideal, but it seems to be the best compromise. If it doesn't work for you, please let me know the details of how it broke.</source>
          <target state="translated">这并不理想,但这似乎是最好的折中办法。如果它对你不起作用,请告诉我它是如何坏掉的细节。</target>
        </trans-unit>
        <trans-unit id="a8f2331f9105fa67d4e126b8930145be58fae503" translate="yes" xml:space="preserve">
          <source>This is not ok:</source>
          <target state="translated">这是不可以的。</target>
        </trans-unit>
        <trans-unit id="909f3f0de148a4f0a784930ff89af77cea3c7576" translate="yes" xml:space="preserve">
          <source>This is not really a &quot;severe&quot; error, but it is supposed to be raised by default even if warnings are not enabled, and currently the only way to do that in Perl is to mark it as serious.</source>
          <target state="translated">这并不是一个真正的 &quot;严重 &quot;错误,但它应该是在默认情况下引发的,即使没有启用警告,目前在Perl中唯一的方法是将其标记为严重错误。</target>
        </trans-unit>
        <trans-unit id="2b98cc8fd878d4e526c57ff147de3c4320ff2bb7" translate="yes" xml:space="preserve">
          <source>This is not required, but is recommended in case any code is called which may reset or alter &lt;code&gt;$@&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cb1cc350f7652ef06061348fb3eea6152592f9" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;&quot;lex_read_to&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197111743c19bce55304223ee2f18830ead89426" translate="yes" xml:space="preserve">
          <source>This is not the normal way to consume lexed text. For that, use &lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;.</source>
          <target state="translated">这不是使用词汇化文本的正常方法。为此，请使用&lt;a href=&quot;#lex_read_to&quot;&gt;lex_read_to&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f9e6c0b666a1af0815bd174af9f121c2162997f" translate="yes" xml:space="preserve">
          <source>This is not the right answer at all, but the sum looks correct. I wonder if it's anything to do with operator precedence? We'll try a couple of other possibilities with our sum:</source>
          <target state="translated">这根本不是正确的答案,但和看起来是正确的。我想这是不是和运算符的优先性有关?我们用我们的和来试试其他几种可能性。</target>
        </trans-unit>
        <trans-unit id="8a04fbe62aa8087e67610ad69a72c7364e385eaa" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt; . That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="translated">这不是在数组名称前使用的符号，以获取最后的索引，例如 &lt;code&gt;$#array&lt;/code&gt; 。这仍然是您在Perl中获得数组的最后一个索引的方式。两者彼此无关。</target>
        </trans-unit>
        <trans-unit id="0152b6d921fb917b16faa5b33711753db7914ad7" translate="yes" xml:space="preserve">
          <source>This is not the sigil you use in front of an array name to get the last index, like &lt;code&gt;$#array&lt;/code&gt;. That's still how you get the last index of an array in Perl. The two have nothing to do with each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71eefb6bc615d22ea75cd4d866e05c590f48f94" translate="yes" xml:space="preserve">
          <source>This is not to say that Perl threads are completely different from everything that's ever come before. They're not. Perl's threading model owes a lot to other thread models, especially POSIX. Just as Perl is not C, though, Perl threads are not POSIX threads. So if you find yourself looking for mutexes, or thread priorities, it's time to step back a bit and think about what you want to do and how Perl can do it.</source>
          <target state="translated">这并不是说Perl线程与之前的一切完全不同。其实不然。Perl的线程模型欠其他线程模型很多,尤其是POSIX。不过就像Perl不是C一样,Perl线程也不是POSIX线程。所以,如果你发现自己在寻找mutexes,或者线程优先级,那么你就应该退后一步,想想你想做什么,以及Perl如何做到这一点。</target>
        </trans-unit>
        <trans-unit id="1490fa72c1eafb91d46399cb68efda52398b105d" translate="yes" xml:space="preserve">
          <source>This is not very useful, and perl currently optimizes this away.</source>
          <target state="translated">这不是很有用,目前perl把这个优化掉了。</target>
        </trans-unit>
        <trans-unit id="719ad110f9ecd2d06449f518fe559ae60b466e21" translate="yes" xml:space="preserve">
          <source>This is now the recommended interface to install().</source>
          <target state="translated">这就是现在推荐的安装()接口。</target>
        </trans-unit>
        <trans-unit id="8dd3c5aefc65986cd4924a120675ce7dc9b1881f" translate="yes" xml:space="preserve">
          <source>This is of paramount importance, since it's the documentation of what goes where in the Perl source. Read it over a couple of times and it might start to make sense - don't worry if it doesn't yet, because the best way to study it is to read it in conjunction with poking at Perl source, and we'll do that later on.</source>
          <target state="translated">这一点是最重要的,因为它是Perl源码中哪些内容在哪里的文档。把它读上几遍,可能就会开始明白了--如果还不明白也不要担心,因为研究它的最好方法是结合戳穿Perl源码来读,我们稍后再做。</target>
        </trans-unit>
        <trans-unit id="5903d2508c471509c3a8871c1121aaa61b5835b7" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadd54f30e37dbf502c0a6893df00ea6b04ab979" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">如果您需要在 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 不兼容旧版本Perl的库模块之前检查当前Perl版本，这通常很有用。（我们尽量不要做比我们要做的更多的事情。）</target>
        </trans-unit>
        <trans-unit id="96345383ecfecda78d417eea671d77452c1d163e" translate="yes" xml:space="preserve">
          <source>This is often useful if you need to check the current Perl version before &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;ing library modules that won't work with older versions of Perl. (We try not to do this more than we have to.)</source>
          <target state="translated">如果您需要在 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 不兼容旧版本Perl的库模块之前检查当前Perl版本，这通常很有用。（我们尽量不要做比我们要做的更多的事情。）</target>
        </trans-unit>
        <trans-unit id="b7065d0815c75fb916f5ccef644a97fc5f9a5ab5" translate="yes" xml:space="preserve">
          <source>This is one of the cases we mentioned earlier in which references could spring into existence when in an lvalue context. Before this statement, &lt;code&gt;$array[$x]&lt;/code&gt; may have been undefined. If so, it's automatically defined with a hash reference so that we can look up &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; in it. Likewise &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; will automatically get defined with an array reference so that we can look up &lt;code&gt;[0]&lt;/code&gt; in it. This process is called</source>
          <target state="translated">这是我们前面提到的情况之一，在左值上下文中，引用可能会出现。在此语句之前，可能未定义 &lt;code&gt;$array[$x]&lt;/code&gt; 。如果是这样，它将自动使用哈希引用进行定义，以便我们可以在其中查找 &lt;code&gt;{&quot;foo&quot;}&lt;/code&gt; 。同样， &lt;code&gt;$array[$x]-&amp;gt;{&quot;foo&quot;}&lt;/code&gt; 将自动使用数组引用进行定义，以便我们可以在其中查找 &lt;code&gt;[0]&lt;/code&gt; 。这个过程叫做</target>
        </trans-unit>
        <trans-unit id="6a3344e74e174252dc0aef67360fb712feea83d3" translate="yes" xml:space="preserve">
          <source>This is one of the only places where giving a prototype to a closure makes much sense. If you wanted to impose scalar context on the arguments of these functions (probably not a wise idea for this particular example), you could have written it this way instead:</source>
          <target state="translated">这是唯一一个给一个闭包提供原型的地方,是很有意义的。如果你想把标量上下文强加在这些函数的参数上(对于这个特殊的例子来说,这可能不是一个明智的想法),你可以这样写。</target>
        </trans-unit>
        <trans-unit id="36e82904f13aaec8c8bc429b12fde4bbb0fe088f" translate="yes" xml:space="preserve">
          <source>This is only needed when converting a metadata fragment that does not include a &lt;code&gt;meta-spec&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815273ee560d0448d9c01c105592b19a9f70fd8" translate="yes" xml:space="preserve">
          <source>This is only present when &lt;code&gt;netorder&lt;/code&gt; is FALSE. It is the $Config{byteorder} string of the perl that created this image. It is a string like &quot;1234&quot; (32 bit little endian) or &quot;87654321&quot; (64 bit big endian). This must match the current perl for the image to be readable by Storable.</source>
          <target state="translated">仅在 &lt;code&gt;netorder&lt;/code&gt; 为FALSE 时才存在。是创建该映像的perl的$ Config {byteorder}字符串。它是一个字符串，例如&amp;ldquo; 1234&amp;rdquo;（32位小端）或&amp;ldquo; 87654321&amp;rdquo;（64位大端）。这必须与当前perl匹配才能使Storable读取图像。</target>
        </trans-unit>
        <trans-unit id="84ff724c95d2598efdb8d7d443f2851d8e9c24b5" translate="yes" xml:space="preserve">
          <source>This is only required on some platforms which do not handle dependent libraries automatically. For example the Socket Perl extension library (</source>
          <target state="translated">只有在一些不会自动处理依赖库的平台上才需要这样做。例如Socket Perl扩展库(</target>
        </trans-unit>
        <trans-unit id="3167fd37c36e8874785bfe9f3f3013cce7f288bd" translate="yes" xml:space="preserve">
          <source>This is open source software. The code repository is available for public review and contribution under the terms of the license.</source>
          <target state="translated">这是一个开放源码软件。根据许可证的条款,代码库可供公众审查和贡献。</target>
        </trans-unit>
        <trans-unit id="bcfe5a91a20366b07a20b45c08c83d2cb3335747" translate="yes" xml:space="preserve">
          <source>This is our final regexp. To recap, we built a regexp by</source>
          <target state="translated">这是我们最后的regexp。概括地说,我们通过以下方法建立了一个regexp。</target>
        </trans-unit>
        <trans-unit id="55cbe19c15cda5405c9b99032930566aa6e4cd4b" translate="yes" xml:space="preserve">
          <source>This is parsed as:</source>
          <target state="translated">这被解析为:</target>
        </trans-unit>
        <trans-unit id="4f7853da7a16df56ba94a3f89eeeb6c41db7cabc" translate="yes" xml:space="preserve">
          <source>This is partially implemented now.</source>
          <target state="translated">现在已经部分实施。</target>
        </trans-unit>
        <trans-unit id="2a6f22dd0203804895067e4cd94d48784411f916" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamic patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="translated">这对于动态模式特别有用，例如从配置文件读入，从参数获取或在某个地方的表中指定的动态模式。考虑以下情况：有些模式要区分大小写，而有些则不想：不区分大小写的模式只需要在模式的前面包含 &lt;code&gt;(?i)&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="a9a8ef21b0f21974a251d0cd49767a5e49f56bc4" translate="yes" xml:space="preserve">
          <source>This is particularly useful for dynamically-generated patterns, such as those read in from a configuration file, taken from an argument, or specified in a table somewhere. Consider the case where some patterns want to be case-sensitive and some do not: The case-insensitive ones merely need to include &lt;code&gt;(?i)&lt;/code&gt; at the front of the pattern. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa59114ea7716b61a1b0ecf212fbfdac38cd5ec" translate="yes" xml:space="preserve">
          <source>This is particularly useful if you have More Than One Way (tm) to solve a problem in a program, and only wish to continue down a path if all modules could be loaded, and not load them if they couldn't.</source>
          <target state="translated">如果你在一个程序中有多个方法(tm)来解决一个问题,并且只希望在所有模块都能加载的情况下继续往下走,如果不能加载就不加载,这一点特别有用。</target>
        </trans-unit>
        <trans-unit id="7f5141125aa28c42d6dec636c32fcbaa85fe78c3" translate="yes" xml:space="preserve">
          <source>This is particularly useful when applied to code references returned from reval().</source>
          <target state="translated">当应用于从reval()返回的代码引用时,这一点特别有用。</target>
        </trans-unit>
        <trans-unit id="3afdcef939cf6d1f8b0ef2be038cdb0c7d7984fa" translate="yes" xml:space="preserve">
          <source>This is powerful, and slightly dangerous, in that it's possible to intend (with the utmost sincerity) to use a hard reference, and accidentally use a symbolic reference instead. To protect against that, you can say</source>
          <target state="translated">这是强大的,也是稍微危险的,因为它有可能打算(以最大的诚意)使用一个硬引用,而不小心使用一个符号引用。为了防止这种情况,你可以说</target>
        </trans-unit>
        <trans-unit id="1d61b3fe5532441244041a6185a4d7b90b80ec48" translate="yes" xml:space="preserve">
          <source>This is primarily meant for the use of modules such as FTP where passwords are sent, but we do not want to display them in the debugging information.</source>
          <target state="translated">这主要是针对FTP等发送密码的模块的使用,但我们不希望在调试信息中显示密码。</target>
        </trans-unit>
        <trans-unit id="01c91853268ed50e9d0a33c6896652af44de4d99" translate="yes" xml:space="preserve">
          <source>This is primarily of use for people who repackage Perl modules.</source>
          <target state="translated">这主要是给重新打包Perl模块的人用的。</target>
        </trans-unit>
        <trans-unit id="831dab0bf255edc5ba7e605462344bdbe78142e8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="translated">这主要用于 &lt;code&gt;(?{...})&lt;/code&gt; 块内部，以检查最近匹配的文本。例如，要有效地将文本捕获到变量中（除了 &lt;code&gt;$1&lt;/code&gt; ， &lt;code&gt;$2&lt;/code&gt; 等），请将 &lt;code&gt;(...)&lt;/code&gt; 替换为</target>
        </trans-unit>
        <trans-unit id="785aba462ddf893b4d7d212c5fc066f6e4b29bd8" translate="yes" xml:space="preserve">
          <source>This is primarily used inside &lt;code&gt;(?{...})&lt;/code&gt; blocks for examining text recently matched. For example, to effectively capture text to a variable (in addition to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc.), replace &lt;code&gt;(...)&lt;/code&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471731e21edc337b491a7b40340da72650201ff9" translate="yes" xml:space="preserve">
          <source>This is primarily used when you need to make several actions atomic (against some signals anyway).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43405231d7a3fc726c046090388674dddde66ec5" translate="yes" xml:space="preserve">
          <source>This is primarily useful for install scripts.</source>
          <target state="translated">这主要是对安装脚本有用。</target>
        </trans-unit>
        <trans-unit id="71555351eedbd86160cbba934f94d326494c3535" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; in perl sources.</source>
          <target state="translated">这等效于printf（）。printf是为此函数定义的＃，因此（当前 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf(fmt,...)&lt;/a&gt;&lt;/code&gt; 在perl源代码中使用printf（fmt，...）是合法的。</target>
        </trans-unit>
        <trans-unit id="5a921444f0499fb36eee87f18490349a0c0c08e2" translate="yes" xml:space="preserve">
          <source>This is printf() equivalent. printf is #defined to this function, so it is (currently) legal to use &lt;code&gt;printf(fmt,...)&lt;/code&gt; in perl sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea35349c6ed8d6a98b7de634d09f57721480861" translate="yes" xml:space="preserve">
          <source>This is private to the Perl core and subject to change. Should be left null.</source>
          <target state="translated">这是Perl核心的隐私,可能会有变化。应该保持为空。</target>
        </trans-unit>
        <trans-unit id="a42a74dee5bfb28b5a2d265ff8a638902c0a2d41" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;&quot;sv_usepvn_flags&quot;&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;&quot;sv_setpvn&quot;&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;&quot;sv_setpvs&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa02440d9fac9b73c470e7ca881854b6795009" translate="yes" xml:space="preserve">
          <source>This is probably not what you want to use, you probably wanted &lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt; or &lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt; or &lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt;.</source>
          <target state="translated">这可能不是您要使用的，您可能想要&lt;a href=&quot;#sv_usepvn_flags&quot;&gt;sv_usepvn_flags&lt;/a&gt;或&lt;a href=&quot;#sv_setpvn&quot;&gt;sv_setpvn&lt;/a&gt;或&lt;a href=&quot;#sv_setpvs&quot;&gt;sv_setpvs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="697287005f5cb5ed6d011d9e5061126f21f55b05" translate="yes" xml:space="preserve">
          <source>This is provided as a more readable version of &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">它以 &lt;code&gt;if (!&lt;i&gt;condition&lt;/i&gt;)&lt;/code&gt; 可读性更高的形式提供。</target>
        </trans-unit>
        <trans-unit id="4cabb9b2376d3134de9c8bd807fc2548baba2fca" translate="yes" xml:space="preserve">
          <source>This is quite different, however, from not even trusting the writer of the code not to try to do something evil. That's the kind of trust needed when someone hands you a program you've never seen before and says, &quot;Here, run this.&quot; For that kind of safety, you might want to check out the Safe module, included standard in the Perl distribution. This module allows the programmer to set up special compartments in which all system operations are trapped and namespace access is carefully controlled. Safe should not be considered bullet-proof, though: it will not prevent the foreign code to set up infinite loops, allocate gigabytes of memory, or even abusing perl bugs to make the host interpreter crash or behave in unpredictable ways. In any case it's better avoided completely if you're really concerned about security.</source>
          <target state="translated">然而,这与不相信代码的作者不会试图做一些邪恶的事情是完全不同的。当有人递给你一个你从未见过的程序,并说 &quot;给你,运行这个 &quot;时,你需要的就是这种信任。为了这种安全,你可能会想看看安全模块,它包含在Perl发行版的标准配置中。这个模块允许程序员设置特殊的隔间,所有的系统操作都会在其中被捕获,命名空间的访问也会被仔细控制。不过Safe不应该被认为是万无一失的:它不能防止外来代码建立无限循环,分配千兆字节的内存,甚至滥用perl bug使主机解释器崩溃或以不可预测的方式行事。总之,如果你真的担心安全问题,最好完全避免。</target>
        </trans-unit>
        <trans-unit id="50d419167936516f6bf9a1f029bd288bcc5eb141" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;&quot;EXAMPLE 1&quot;&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;&quot;EXAMPLE 2&quot;&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;&quot;EXAMPLE 3&quot;&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc844a09760bd8a2dc9b577b36da09548b575605" translate="yes" xml:space="preserve">
          <source>This is quite typical for .xs files: usually the .xs file provides an interface to an existing C function. Then this C function is defined somewhere (either in an external library, or in the first part of .xs file), and a Perl interface to this function (i.e. &quot;Perl glue&quot;) is described in the second part of .xs file. The situation in &lt;a href=&quot;#EXAMPLE-1&quot;&gt;EXAMPLE 1&lt;/a&gt;, &lt;a href=&quot;#EXAMPLE-2&quot;&gt;EXAMPLE 2&lt;/a&gt;, and &lt;a href=&quot;#EXAMPLE-3&quot;&gt;EXAMPLE 3&lt;/a&gt;, when all the work is done inside the &quot;Perl glue&quot;, is somewhat of an exception rather than the rule.</source>
          <target state="translated">这对于.xs文件是非常典型的：通常.xs文件为现有C函数提供接口。然后，在某处（在外部库中或.xs文件的第一部分中）定义此C函数，并在.xs文件的第二部分中描述此函数的Perl接口（即&amp;ldquo; Perl胶&amp;rdquo;）。当所有工作都在&amp;ldquo; Perl胶水&amp;rdquo;中完成时，&lt;a href=&quot;#EXAMPLE-1&quot;&gt;示例1&lt;/a&gt;，&lt;a href=&quot;#EXAMPLE-2&quot;&gt;示例2&lt;/a&gt;和&lt;a href=&quot;#EXAMPLE-3&quot;&gt;示例3中&lt;/a&gt;的情况在某种程度上是一种例外，而非常规。</target>
        </trans-unit>
        <trans-unit id="c3a982ed6685f74bf9f57db540f3caed5035dcd6" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt; , it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="translated">这非常有用，因为它通常可以提高可读性。尽管这对于 &lt;code&gt;SV *&lt;/code&gt; 可以正常工作，但不幸的是，将 &lt;code&gt;AV *&lt;/code&gt; 或 &lt;code&gt;HV *&lt;/code&gt; 作为返回值并不容易。您</target>
        </trans-unit>
        <trans-unit id="02c1d462530bf64748def6c496de1d6240bfa91b" translate="yes" xml:space="preserve">
          <source>This is quite useful as it usually improves readability. While this works fine for an &lt;code&gt;SV *&lt;/code&gt;, it's unfortunately not as easy to have &lt;code&gt;AV *&lt;/code&gt; or &lt;code&gt;HV *&lt;/code&gt; as a return value. You</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9aa2c2c409f58ba99139ca42f157f4afdf7a29" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="translated">这很少使用。有时是使用E &amp;lt;...&amp;gt;代码的一种解决方法。例如，代替&amp;ldquo; &lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt; &amp;rdquo;（对于&amp;ldquo; N &amp;lt;3&amp;rdquo;），您可以编写&amp;ldquo; &lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt; &amp;rdquo;（&amp;ldquo; Z &amp;lt;&amp;gt;&amp;rdquo;将&amp;ldquo; N&amp;rdquo;和&amp;ldquo; &amp;lt;&amp;rdquo;分开，因此它们不能被视为（虚拟）&amp;ldquo; N &amp;lt;...&amp;gt;&amp;rdquo;代码的一部分）。</target>
        </trans-unit>
        <trans-unit id="3c3972509e727368d3c5e9a50516482551fe729d" translate="yes" xml:space="preserve">
          <source>This is rarely used. It's one way to get around using an E&amp;lt;...&amp;gt; code sometimes. For example, instead of &quot;&lt;code&gt;NE&amp;lt;lt&amp;gt;3&lt;/code&gt;&quot; (for &quot;N&amp;lt;3&quot;) you could write &quot;&lt;code&gt;NZ&amp;lt;&amp;gt;&amp;lt;3&lt;/code&gt;&quot; (the &quot;Z&amp;lt;&amp;gt;&quot; breaks up the &quot;N&quot; and the &quot;&amp;lt;&quot; so they can't be considered the part of a (fictitious) &quot;N&amp;lt;...&amp;gt;&quot; code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c569493cb06e371332b5d2d180bdd4a7a876b1d" translate="yes" xml:space="preserve">
          <source>This is required by some servers. For example if you are connecting to an INN server and you have transfer permission your connection will be connected to the transfer daemon, not the NNTP daemon. Issuing this command will cause the transfer daemon to hand over control to the NNTP daemon.</source>
          <target state="translated">这是一些服务器所需要的。例如,如果你连接到一个 INN 服务器,并且你有传输权限,你的连接将连接到传输守护进程,而不是 NNTP 守护进程。发出这个命令将导致传输守护进程将控制权交给NNTP守护进程。</target>
        </trans-unit>
        <trans-unit id="cbdfb46249e842a142c962c6d9643c65a18e64d0" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems &lt;code&gt;/tmp&lt;/code&gt; is not owned by root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aba726220151e0bdd8e20f672a38f3cb853c543" translate="yes" xml:space="preserve">
          <source>This is required since on many unix systems C is not owned by root.</source>
          <target state="translated">这是必须的,因为在许多unix系统中,C不属于root。</target>
        </trans-unit>
        <trans-unit id="53e759494f9bf8d7efd9149cfc161ebbf71db524" translate="yes" xml:space="preserve">
          <source>This is safer than and replaces the &quot;no_plan&quot; plan.</source>
          <target state="translated">这比 &quot;no_plan &quot;计划更安全,并取代了它。</target>
        </trans-unit>
        <trans-unit id="ce8477bd1dd658eb92098ae32e26b04afeab44b4" translate="yes" xml:space="preserve">
          <source>This is same as &lt;code&gt;new()&lt;/code&gt;, except that &lt;code&gt;generated_by&lt;/code&gt; and &lt;code&gt;meta-spec&lt;/code&gt; fields will be generated if not provided. This means the metadata structure is assumed to otherwise follow the latest &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ebcb8463dd98d519e70a00c26fec5b1949c87c" translate="yes" xml:space="preserve">
          <source>This is seldom necessary, though, because this is done automatically, like when you access an array:</source>
          <target state="translated">不过这很少是必要的,因为这是自动完成的,就像你访问一个数组一样。</target>
        </trans-unit>
        <trans-unit id="5b39df7c425593c524473bd917a5316f755e7f35" translate="yes" xml:space="preserve">
          <source>This is set to &lt;code&gt;true&lt;/code&gt; in</source>
          <target state="translated">这是设置为 &lt;code&gt;true&lt;/code&gt; 的</target>
        </trans-unit>
        <trans-unit id="bda100b399c447a02432db64ae424bebb5a77bb3" translate="yes" xml:space="preserve">
          <source>This is set to a true value. It allows the tests to determine if they are being executed through the harness or by any other means.</source>
          <target state="translated">这被设置为真值。它允许测试确定它们是通过线束还是通过任何其他方式执行。</target>
        </trans-unit>
        <trans-unit id="784e1d59cc78e03dfce5c4eb5ddb5046b2ae8797" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, &lt;a href=&quot;http://man.he.net/man1/grep&quot;&gt;grep(1)&lt;/a&gt; and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8825b383410611d9ab88c7c6da41a37ab67b7bd2" translate="yes" xml:space="preserve">
          <source>This is similar in spirit to, but not the same as, grep(1) and its relatives. In particular, it is not limited to using regular expressions.</source>
          <target state="translated">这与grep(1)及其亲属的精神类似,但不一样。特别是,它不限于使用正则表达式。</target>
        </trans-unit>
        <trans-unit id="031672016e4d502c018309428e47661800aac1a9" translate="yes" xml:space="preserve">
          <source>This is similar to</source>
          <target state="translated">这类似于</target>
        </trans-unit>
        <trans-unit id="3e6ba00cc4274369aaec7e06e964eb77cd40c12d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">这类似于 &lt;code&gt;$&amp;amp;&lt;/code&gt; （ &lt;code&gt;$MATCH&lt;/code&gt; ），只是它不会招致与该变量相关的性能损失。</target>
        </trans-unit>
        <trans-unit id="b7e216fa4594cbacfaf20854b0ab30d1c8d5c1e2" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$&amp;amp;&lt;/code&gt; (&lt;code&gt;$MATCH&lt;/code&gt;) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e9006abb746eec00ddbe6c7b21cfe4ec62c97b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt; ) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">这类似于 &lt;code&gt;$'&lt;/code&gt; （ &lt;code&gt;$POSTMATCH&lt;/code&gt; ），除了它不会招致与该变量相关的性能损失外。</target>
        </trans-unit>
        <trans-unit id="6fd5c8a1ee96062bbcb6f2a27266f07276bffe2f" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$'&lt;/code&gt; (&lt;code&gt;$POSTMATCH&lt;/code&gt;) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e38c00b725c5a13563494b1438770078513b03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;$`&lt;/code&gt; ($PREMATCH) except that it does not incur the performance penalty associated with that variable.</source>
          <target state="translated">类似于 &lt;code&gt;$`&lt;/code&gt; （$ PREMATCH），不同之处在于它不会招致与该变量相关的性能损失。</target>
        </trans-unit>
        <trans-unit id="b7b04635104076e8869c03a97df7510eda62d809" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="translated">这类似于 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; ，但是只返回代码引用或 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 来指示不存在该名称的其他方法。</target>
        </trans-unit>
        <trans-unit id="c76a101755f29c4620b6ee3b21e4e2a7b2d96005" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;next::method&lt;/code&gt;, but just returns either a code reference or &lt;code&gt;undef&lt;/code&gt; to indicate that no further methods of this name exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73fed07cf9661cd5a76d43367f7870e1dfd1e63" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt; . The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="translated">这类似于 &lt;code&gt;string_vianame&lt;/code&gt; 。主要区别在于，在大多数情况下， &lt;code&gt;vianame&lt;/code&gt; 返回一个序号代码点，而 &lt;code&gt;string_vianame&lt;/code&gt; 返回一个字符串。例如，</target>
        </trans-unit>
        <trans-unit id="035b09da2ed8ab563a4781cdc8cd00f1a372a968" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;string_vianame&lt;/code&gt;. The main difference is that under most circumstances, &lt;code&gt;vianame&lt;/code&gt; returns an ordinal code point, whereas &lt;code&gt;string_vianame&lt;/code&gt; returns a string. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82735301d82a0dc4313bb1d53ad031d27f023c2f" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;.</source>
          <target state="translated">这类似于Perl的内置 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; 函数，该函数返回具有根据要求设置格式的参数的字符串，请参见&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a0b7112ac62ec6b0732258b7ebbd4369edb185a" translate="yes" xml:space="preserve">
          <source>This is similar to Perl's builtin &lt;code&gt;sprintf()&lt;/code&gt; function for returning a string that has the arguments formatted as requested, see &lt;a href=&quot;perlfunc#sprintf&quot;&gt;&quot;sprintf&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9fc002d8f7d1fdb8d39dcb8cc96f69462055b3" translate="yes" xml:space="preserve">
          <source>This is similar to calling the &lt;code&gt;x&lt;/code&gt; command on each applicable var.</source>
          <target state="translated">这类似于在每个适用的var上调用 &lt;code&gt;x&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="c882c2e2c2f32205e6402773c4c5a8648cf274ab" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Perl 6. Like &lt;code&gt;(*PRUNE)&lt;/code&gt; , this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="translated">这是类似于&amp;ldquo;切团&amp;rdquo;运营商 &lt;code&gt;::&lt;/code&gt; 在Perl 6赞 &lt;code&gt;(*PRUNE)&lt;/code&gt; ，这个动词总是匹配，当回溯到上失败，它会导致正则表达式引擎来尝试最内层组在接下来的交替（捕获或以其他方式）。就 &lt;code&gt;(*THEN)&lt;/code&gt; 而言 &lt;code&gt;(?(condition)yes-pattern|no-pattern)&lt;/code&gt; 的两个分支不算作交替。</target>
        </trans-unit>
        <trans-unit id="789212497ee1cf1f776a732c31bef719dc8f5cde" translate="yes" xml:space="preserve">
          <source>This is similar to the &quot;cut group&quot; operator &lt;code&gt;::&lt;/code&gt; from Raku. Like &lt;code&gt;(*PRUNE)&lt;/code&gt;, this verb always matches, and when backtracked into on failure, it causes the regex engine to try the next alternation in the innermost enclosing group (capturing or otherwise) that has alternations. The two branches of a &lt;code&gt;(?(&lt;i&gt;condition&lt;/i&gt;)&lt;i&gt;yes-pattern&lt;/i&gt;|&lt;i&gt;no-pattern&lt;/i&gt;)&lt;/code&gt; do not count as an alternation, as far as &lt;code&gt;(*THEN)&lt;/code&gt; is concerned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b23340a8a44f500f9fdd2f514353aafef1f1600" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt; , for duplicating a file descriptor.</source>
          <target state="translated">这类似于C函数 &lt;code&gt;dup()&lt;/code&gt; ，用于复制文件描述符。</target>
        </trans-unit>
        <trans-unit id="ae6596049dbd554c0142eb69dbcbdccd65d36765" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup()&lt;/code&gt;, for duplicating a file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc59e25f670eb40f71d53b45961566d88e8da8a1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt; , for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="translated">这类似于C函数 &lt;code&gt;dup2()&lt;/code&gt; ，用于将文件描述符复制到另一个已知的文件描述符。</target>
        </trans-unit>
        <trans-unit id="f1e6999776f77cce2c537978df0c9c5950783832" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;dup2()&lt;/code&gt;, for duplicating a file descriptor to an another known file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae23dd5fc0059c09ec24ea0c5ef5acb6d58fa1" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;mkfifo()&lt;/code&gt; for creating FIFO special files.</source>
          <target state="translated">这类似于用于创建FIFO特殊文件的C函数 &lt;code&gt;mkfifo()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb82e089ae466005cc0dc383a964501667069da5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt; , for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="translated">这类似于C函数 &lt;code&gt;nice()&lt;/code&gt; ，用于更改当前进程的调度首选项。积极的论点意味着更礼貌的过程，消极的价值观意味着更需要的过程。普通（非root用户）用户进程只能朝着更礼貌的方向转变。</target>
        </trans-unit>
        <trans-unit id="9a0808a5ff368707577d5e1f0e5bcb31b1f6ad15" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;nice()&lt;/code&gt;, for changing the scheduling preference of the current process. Positive arguments mean a more polite process, negative values a more needy process. Normal (non-root) user processes can only change towards being more polite.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
