<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="44b7c0500e40c11db7bf0e11bd6e37ab7d88c5ec" translate="yes" xml:space="preserve">
          <source>Code originally inside MM_Win32. Original author unknown.</source>
          <target state="translated">代码原在MM_Win32里面。原作者不详。</target>
        </trans-unit>
        <trans-unit id="242e717fb5b853da360c4c4e3fd5e16c899cc09d" translate="yes" xml:space="preserve">
          <source>Code tree</source>
          <target state="translated">代码树</target>
        </trans-unit>
        <trans-unit id="238c9390ad5966dbe9669eb0b38a5c9c564b39c3" translate="yes" xml:space="preserve">
          <source>Code which is compiled outside the compartment can choose to place variables into (or</source>
          <target state="translated">在隔间外编译的代码可以选择将变量放入(或)。</target>
        </trans-unit>
        <trans-unit id="ca567dda33cdf7058994a40bb9ef4db135c7d283" translate="yes" xml:space="preserve">
          <source>Code:</source>
          <target state="translated">Code:</target>
        </trans-unit>
        <trans-unit id="7346b6c55ef1dd3ee635f412ba8c8fa0b34bc040" translate="yes" xml:space="preserve">
          <source>Coderef of a subroutine to call when a portion of data is received on STDERR from the executing program.</source>
          <target state="translated">当从执行程序的STDERR上接收到一部分数据时,要调用的子程序的编码。</target>
        </trans-unit>
        <trans-unit id="0e6272092332283344899c5d9151fdf70f8638d8" translate="yes" xml:space="preserve">
          <source>Coderef of a subroutine to call when a portion of data is received on STDOUT from the executing program.</source>
          <target state="translated">当从执行程序的STDOUT上接收到一部分数据时,要调用的子程序的代码。</target>
        </trans-unit>
        <trans-unit id="cc3b474bef3775734e7b035b9dfcfb4a3687ffad" translate="yes" xml:space="preserve">
          <source>Coding style is a matter of personal taste. Many people evolve their style over several years as they learn what helps them write and maintain good code. Here's one set of assorted suggestions that seem to be widely used by experienced developers:</source>
          <target state="translated">编码风格是一个个人品味的问题。许多人在几年的时间里,随着他们了解到什么能帮助他们写出和维护好的代码,他们的风格也在不断变化。这里有一套看起来被有经验的开发人员广泛使用的各种建议。</target>
        </trans-unit>
        <trans-unit id="83c20e2b46967a4d332883ed6f06dc35bb23a9dc" translate="yes" xml:space="preserve">
          <source>Coerce the given SV to a double and return it. See &lt;code&gt;SvNVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">将给定的SV强制为double并返回。有关确保只能评估sv一次的版本，请参见 &lt;code&gt;SvNVx&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b9cb8dd077ee8e9789410150752cb5df2cf59b7" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to a double and returns it. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvNV&lt;/code&gt; .</source>
          <target state="translated">将给定的SV强制为double并将其返回。保证只评估一次 &lt;code&gt;sv&lt;/code&gt; 。仅当 &lt;code&gt;sv&lt;/code&gt; 是具有副作用的表达式时才使用此选项，否则请使用更有效的 &lt;code&gt;SvNV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bac4ad8b9286fd32a256bd30b536befa1ae2a9ff" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an integer and returns it. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvIV&lt;/code&gt; .</source>
          <target state="translated">将给定的SV强制转换为整数并返回。保证只评估一次 &lt;code&gt;sv&lt;/code&gt; 。仅当 &lt;code&gt;sv&lt;/code&gt; 是具有副作用的表达式时才使用此选项，否则请使用更有效的 &lt;code&gt;SvIV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4398a91485317bebc11f68b77ab6f61e17b4142" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an integer and returns it. See &lt;code&gt;SvIVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">将给定的SV强制转换为整数并返回。请参见 &lt;code&gt;SvIVx&lt;/code&gt; ，以获取保证只评估sv一次的版本。</target>
        </trans-unit>
        <trans-unit id="7056ee3094a77bc1cd5afdf0d2f7a644af6c1de6" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an unsigned integer and returns it. Guarantees to evaluate &lt;code&gt;sv&lt;/code&gt; only once. Only use this if &lt;code&gt;sv&lt;/code&gt; is an expression with side effects, otherwise use the more efficient &lt;code&gt;SvUV&lt;/code&gt; .</source>
          <target state="translated">将给定的SV强制转换为无符号整数并返回。保证只评估一次 &lt;code&gt;sv&lt;/code&gt; 。仅当 &lt;code&gt;sv&lt;/code&gt; 是具有副作用的表达式时才使用此选项，否则请使用更有效的 &lt;code&gt;SvUV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="796a973103d95c3243cc98edd65b34d9d2c5c67f" translate="yes" xml:space="preserve">
          <source>Coerces the given SV to an unsigned integer and returns it. See &lt;code&gt;SvUVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">将给定的SV强制转换为无符号整数，然后将其返回。请参见 &lt;code&gt;SvUVx&lt;/code&gt; ，以获取保证只评估sv一次的版本。</target>
        </trans-unit>
        <trans-unit id="ea772ad5805b57d6b06159ae7393c73ccddc1d9c" translate="yes" xml:space="preserve">
          <source>CollationTest_NON_IGNORABLE.txt</source>
          <target state="translated">CollationTest_NON_IGNORABLE.txt</target>
        </trans-unit>
        <trans-unit id="7b7f09f7ff55d9003bbbf6e2b6ad35cc1d55629d" translate="yes" xml:space="preserve">
          <source>CollationTest_SHIFTED.txt</source>
          <target state="translated">CollationTest_SHIFTED.txt</target>
        </trans-unit>
        <trans-unit id="ca66835bc771bd4402dea87da5941178b9bd8799" translate="yes" xml:space="preserve">
          <source>Collects the backtrace (aka &quot;stacktrace&quot;) into a single linear malloced buffer, which the caller &lt;b&gt;must&lt;/b&gt; Perl_free_c_backtrace().</source>
          <target state="translated">将回溯（也称为&amp;ldquo; stacktrace&amp;rdquo;）收集到单个线性malloc缓冲区中，调用者&lt;b&gt;必须&lt;/b&gt;在缓冲区中使用Perl_free_c_backtrace（）。</target>
        </trans-unit>
        <trans-unit id="e2794035cca1617a1f9360d576b9e234bb68e64d" translate="yes" xml:space="preserve">
          <source>Color for debugging messages?</source>
          <target state="translated">调试信息的颜色?</target>
        </trans-unit>
        <trans-unit id="931d4698b17a59cb56194fcf346f0e3466642612" translate="yes" xml:space="preserve">
          <source>Color for normal output?</source>
          <target state="translated">正常输出的颜色?</target>
        </trans-unit>
        <trans-unit id="943c85b3de9955c182721971471df60c6005726b" translate="yes" xml:space="preserve">
          <source>Color for warnings?</source>
          <target state="translated">警告的颜色?</target>
        </trans-unit>
        <trans-unit id="37277b98a26979971b3578b4784f262eaebdf1a4" translate="yes" xml:space="preserve">
          <source>Color screen output using ANSI escape sequences</source>
          <target state="translated">使用ANSI转义序列的彩色屏幕输出</target>
        </trans-unit>
        <trans-unit id="814253eeac185847ba47c5faad82c62ef62cc160" translate="yes" xml:space="preserve">
          <source>Color support requires &lt;a href=&quot;term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; on Unix-like platforms and &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Console&quot;&gt;Win32::Console&lt;/a&gt; on windows. If the necessary module is not installed colored output will not be available.</source>
          <target state="translated">颜色支持在类似Unix的平台上需要&lt;a href=&quot;term/ansicolor&quot;&gt;Term :: ANSIColor，&lt;/a&gt;在Windows上需要&lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Console&quot;&gt;Win32 :: Console&lt;/a&gt;。如果未安装必要的模块，则彩色输出将不可用。</target>
        </trans-unit>
        <trans-unit id="303879dcc89284b00c097930cabcb85cc2dc5e5d" translate="yes" xml:space="preserve">
          <source>Colored Test Output</source>
          <target state="translated">有色测试输出</target>
        </trans-unit>
        <trans-unit id="8864b43824503a2f85bf0964b2768f6f871f7626" translate="yes" xml:space="preserve">
          <source>Colored test output using &lt;a href=&quot;tap/formatter/color&quot;&gt;TAP::Formatter::Color&lt;/a&gt; is the default, but if output is not to a terminal, color is disabled. You can override this by adding the &lt;code&gt;--color&lt;/code&gt; switch.</source>
          <target state="translated">默认使用&lt;a href=&quot;tap/formatter/color&quot;&gt;TAP :: Formatter :: Color&lt;/a&gt;进行彩色测试输出，但是如果输出不输出到终端，则禁用彩色。您可以通过添加 &lt;code&gt;--color&lt;/code&gt; 开关来覆盖它。</target>
        </trans-unit>
        <trans-unit id="3923712e15f6cde93b49aa53ec44f5c8d09bcfff" translate="yes" xml:space="preserve">
          <source>Combination of perl's malloc() and rigid DLL name resolution creates a special problem with library functions which expect their return value to be free()d by system's free(). To facilitate extensions which need to call such functions, system memory-allocation functions are still available with the prefix &lt;code&gt;emx_&lt;/code&gt; added. (Currently only DLL perl has this, it should propagate to</source>
          <target state="translated">Perl的malloc（）和严格的DLL名称解析的组合产生了一个库函数的特殊问题，该库函数期望它们的返回值由系统的free（）来free（）d。为了简化需要调用此类函数的扩展，系统内存分配功能仍然可用，并添加了前缀 &lt;code&gt;emx_&lt;/code&gt; 。（目前只有DLL perl具有此功能，它应该传播到</target>
        </trans-unit>
        <trans-unit id="d4084d48b233ef3ed460fe34c2d006a3d174500e" translate="yes" xml:space="preserve">
          <source>Combining RE Pieces</source>
          <target state="translated">合并RE部件</target>
        </trans-unit>
        <trans-unit id="d5245a49f5313d2490851a0af63ee29dbcb57fb2" translate="yes" xml:space="preserve">
          <source>Combining that form with &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; and putting parentheses immediately around a hash are forbidden (because it is not clear what they should do):</source>
          <target state="translated">禁止将该形式与 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 结合，并在圆括号内立即加上括号（因为尚不清楚它们应该做什么）：</target>
        </trans-unit>
        <trans-unit id="763921651d0da6d3a3be0284d4211879873417fe" translate="yes" xml:space="preserve">
          <source>Combining two pack codes with a slash (&lt;code&gt;/&lt;/code&gt;) associates them with a single value from the argument list. In &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, the length of the argument is taken and packed according to the first code while the argument itself is added after being converted with the template code after the slash. This saves us the trouble of inserting the &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; call, but it is in &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; where we really score: The value of the length byte marks the end of the string to be taken from the buffer. Since this combination doesn't make sense except when the second pack code isn't &lt;code&gt;a*&lt;/code&gt; , &lt;code&gt;A*&lt;/code&gt; or &lt;code&gt;Z*&lt;/code&gt; , Perl won't let you.</source>
          <target state="translated">将两个打包代码与斜杠（ &lt;code&gt;/&lt;/code&gt; ）结合使用，会将它们与参数列表中的单个值相关联。在 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 中，参数的长度是根据第一个代码获取和打包的，而参数本身是在斜杠后与模板代码转换后添加的。这为我们省去了插入 &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 调用的麻烦，但实际上是在 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 地方：长度字节的值标记了要从缓冲区中提取的字符串的结尾。由于只有当第二个打包代码不是 &lt;code&gt;a*&lt;/code&gt; ， &lt;code&gt;A*&lt;/code&gt; 或 &lt;code&gt;Z*&lt;/code&gt; ，这种组合才有意义，所以Perl不允许您这样做。</target>
        </trans-unit>
        <trans-unit id="32bae387055126d95306c7bb6532b73268f5a2d5" translate="yes" xml:space="preserve">
          <source>Comma Operator</source>
          <target state="translated">逗号运算符</target>
        </trans-unit>
        <trans-unit id="62802cbe492e03ca981781cca641adb33725f540" translate="yes" xml:space="preserve">
          <source>Command Line Options, an Introduction</source>
          <target state="translated">命令行选项,介绍</target>
        </trans-unit>
        <trans-unit id="18beb4c43cfe79cec6e126626aa3ad7fd190e477" translate="yes" xml:space="preserve">
          <source>Command Paragraph</source>
          <target state="translated">命令段</target>
        </trans-unit>
        <trans-unit id="417187d63fa0def34d24b8c333083506dc32200a" translate="yes" xml:space="preserve">
          <source>Command Switches</source>
          <target state="translated">命令开关</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">命令行</target>
        </trans-unit>
        <trans-unit id="12f9d6c76aaded8fe20cb1cb15944fff0ce754c0" translate="yes" xml:space="preserve">
          <source>Command line operated programs traditionally take their arguments from the command line, for example filenames or other information that the program needs to know. Besides arguments, these programs often take command line</source>
          <target state="translated">命令行操作的程序传统上从命令行中获取参数,例如文件名或其他程序需要知道的信息。除了参数外,这些程序还经常从命令行中获取参数。</target>
        </trans-unit>
        <trans-unit id="97c3aa97cab34b4855e7892644f3277edc0d033f" translate="yes" xml:space="preserve">
          <source>Command line options come in several flavours. Historically, they are preceded by a single dash &lt;code&gt;-&lt;/code&gt; , and consist of a single letter.</source>
          <target state="translated">命令行选项有多种形式。从历史上看，它们前面都有一个破折号 &lt;code&gt;-&lt;/code&gt; ，并且由一个字母组成。</target>
        </trans-unit>
        <trans-unit id="1ee51dd0beb8fe1eba61df99e777a8a7fdc630b8" translate="yes" xml:space="preserve">
          <source>Command line options used by &lt;code&gt;MakeMaker-&amp;gt;new()&lt;/code&gt; , and thus by &lt;code&gt;WriteMakefile()&lt;/code&gt; . The string is split as the shell would, and the result is processed before any actual command line arguments are processed.</source>
          <target state="translated">&lt;code&gt;MakeMaker-&amp;gt;new()&lt;/code&gt; 以及 &lt;code&gt;WriteMakefile()&lt;/code&gt; 使用的命令行选项。字符串将像shell一样进行拆分，并且在处理任何实际的命令行参数之前先处理结果。</target>
        </trans-unit>
        <trans-unit id="774ba146a62c9c3ff46ff9cc5455b08807e03827" translate="yes" xml:space="preserve">
          <source>Command line switches</source>
          <target state="translated">命令行开关</target>
        </trans-unit>
        <trans-unit id="878211c78a67be0fed3e28b560c4cca71216618c" translate="yes" xml:space="preserve">
          <source>Command names versus file pathnames</source>
          <target state="translated">命令名与文件路径名</target>
        </trans-unit>
        <trans-unit id="f1032cc2ac5d43d9d5d41261914fc29d43686b3f" translate="yes" xml:space="preserve">
          <source>Command so make does not print the literal commands it's running.</source>
          <target state="translated">命令,所以make不打印它正在运行的文字命令。</target>
        </trans-unit>
        <trans-unit id="4c37e3809f3281c8c25395b17b26a434eb5f38e1" translate="yes" xml:space="preserve">
          <source>Command-interpreters on non-Unix systems have rather different ideas on quoting than Unix shells. You'll need to learn the special characters in your command-interpreter (&lt;code&gt;*&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt; are common) and how to protect whitespace and these characters to run one-liners (see &lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt; below).</source>
          <target state="translated">非Unix系统上的命令解释器与Unix Shell相比，在引用上有很大不同的想法。您将需要学习命令解释器中的特殊字符（ &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;\&lt;/code&gt; 和 &lt;code&gt;&quot;&lt;/code&gt; 是常见的），以及如何保护空格和这些字符以单行运行（请参见下面的&lt;a href=&quot;#-e-commandline&quot;&gt;-e&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0f2498f5306d2ed5cdf02e78b8fd02f5090806ac" translate="yes" xml:space="preserve">
          <source>Command-line options (switches). Switches in this variable are treated as if they were on every Perl command line. Only the &lt;b&gt;-[CDIMUdmtwW]&lt;/b&gt; switches are allowed. When running taint checks (either because the program was running setuid or setgid, or because the &lt;b&gt;-T&lt;/b&gt; or &lt;b&gt;-t&lt;/b&gt; switch was used), this variable is ignored. If PERL5OPT begins with &lt;b&gt;-T&lt;/b&gt;, tainting will be enabled and subsequent options ignored. If PERL5OPT begins with &lt;b&gt;-t&lt;/b&gt;, tainting will be enabled, a writable dot removed from @INC, and subsequent options honored.</source>
          <target state="translated">命令行选项（开关）。将此变量中的开关当作在每个Perl命令行上一样。仅允许使用&lt;b&gt;-[CDIMUdmtwW]&lt;/b&gt;开关。运行taint检查时（由于程序正在运行setuid或setgid，或者因为使用了&lt;b&gt;-T&lt;/b&gt;或&lt;b&gt;-t&lt;/b&gt;开关），将忽略此变量。如果PERL5OPT以&lt;b&gt;-T&lt;/b&gt;开头，则将启用污点，而忽略后续选项。如果PERL5OPT以&lt;b&gt;-t&lt;/b&gt;开头，将启用污点处理，从@INC删除可写点，并接受后续选项。</target>
        </trans-unit>
        <trans-unit id="6f3e177b917fb27cf84346755d918af92a7cfb2b" translate="yes" xml:space="preserve">
          <source>Commands for the MM's to use in Makefiles</source>
          <target state="translated">MM们在Makefile中使用的命令。</target>
        </trans-unit>
        <trans-unit id="2312e47cb85161c64e509845981fc1af27401c37" translate="yes" xml:space="preserve">
          <source>Commands that launch external processes are generally supported on most platforms (though many of them do not support any type of forking). The problem with using them arises from what you invoke them on. External tools are often named differently on different platforms, may not be available in the same location, might accept different arguments, can behave differently, and often present their results in a platform-dependent way. Thus, you should seldom depend on them to produce consistent results. (Then again, if you're calling</source>
          <target state="translated">大多数平台一般都支持启动外部进程的命令(尽管许多平台不支持任何类型的分叉)。使用它们的问题来自于你在什么平台上调用它们。外部工具在不同的平台上通常有不同的命名,可能在不同的位置不可用,可能接受不同的参数,可能有不同的行为,并且通常以一种依赖于平台的方式显示其结果。因此,你应该很少依靠它们来产生一致的结果。话又说回来,如果你在调用</target>
        </trans-unit>
        <trans-unit id="3f11f6a37b2bb1f46ae24400fbbec0133765dee3" translate="yes" xml:space="preserve">
          <source>Comment result token.</source>
          <target state="translated">评论结果标记。</target>
        </trans-unit>
        <trans-unit id="33cd8b27d6e79d80d7f00dae59eedee6f870da21" translate="yes" xml:space="preserve">
          <source>Comment, suggestions, and patches welcome.</source>
          <target state="translated">欢迎评论、建议和补丁。</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="a6b602c915283ace9dfdb4567ddd955a24271e51" translate="yes" xml:space="preserve">
          <source>Comments begin with &quot;#&quot;, not &quot;/*&quot; or &quot;//&quot;. Perl may interpret C/C++ comments as division operators, unterminated regular expressions or the defined-or operator.</source>
          <target state="translated">注释以 &quot;#&quot;开头,而不是 &quot;**&quot;或&quot;//&quot;。Perl 可以将 C/C++注释解释为除法运算符、未加引号的正则表达式或定义或运算符。</target>
        </trans-unit>
        <trans-unit id="39a11c5627026c5647a98241784b981e03eeba67" translate="yes" xml:space="preserve">
          <source>Comments can be added to XSUBs by placing a &lt;code&gt;#&lt;/code&gt; as the first non-whitespace of a line. Care should be taken to avoid making the comment look like a C preprocessor directive, lest it be interpreted as such. The simplest way to prevent this is to put whitespace in front of the &lt;code&gt;#&lt;/code&gt; .</source>
          <target state="translated">可以通过在行的 &lt;code&gt;#&lt;/code&gt; 一个非空白处添加＃来将注释添加到XSUB 。应注意避免使注释看起来像C预处理程序指令，以免被解释为C预处理程序指令。防止这种情况的最简单方法是将空格放在 &lt;code&gt;#&lt;/code&gt; 前面。</target>
        </trans-unit>
        <trans-unit id="d3573b55c22b5f8d93f519ce02a5ac87f75d58f1" translate="yes" xml:space="preserve">
          <source>Comments can be embedded in a TEMPLATE using &lt;code&gt;#&lt;/code&gt; through the end of line. White space can separate pack codes from each other, but modifiers and repeat counts must follow immediately. Breaking complex templates into individual line-by-line components, suitably annotated, can do as much to improve legibility and maintainability of pack/unpack formats as &lt;code&gt;/x&lt;/code&gt; can for complicated pattern matches.</source>
          <target state="translated">可以在行尾使用 &lt;code&gt;#&lt;/code&gt; 将注释嵌入到TEMPLATE 中。空白可以将包装代码彼此分开，但是修饰符和重复计数必须立即跟随。将复杂的模板分解为单独的逐行组件（适当地注释）可以像 &lt;code&gt;/x&lt;/code&gt; 一样完成复杂的模式匹配，从而极大地提高了打包/解包格式的易读性和可维护性。</target>
        </trans-unit>
        <trans-unit id="c99a223d578e07988c8679c590eaf92f0323e14f" translate="yes" xml:space="preserve">
          <source>Comments on this feature are welcome; send email to &lt;code&gt;perl5-porters@perl.org&lt;/code&gt; .</source>
          <target state="translated">欢迎对此功能发表评论；发送电子邮件至 &lt;code&gt;perl5-porters@perl.org&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66bf0dd35fe077bd96ea49557abe1254cfe3d453" translate="yes" xml:space="preserve">
          <source>Comments start with a hash symbol and run to the end of the line</source>
          <target state="translated">注释以哈希符号开始,并延伸到行尾。</target>
        </trans-unit>
        <trans-unit id="a0809fab0f6e5f47cada9e750c63afe1aea71d14" translate="yes" xml:space="preserve">
          <source>Comments, Comments, Comments</source>
          <target state="translated">评论,评论,评论</target>
        </trans-unit>
        <trans-unit id="a635957687d394ed8eb32dd7af4e9fb9ea45ae9c" translate="yes" xml:space="preserve">
          <source>Commit message</source>
          <target state="translated">承诺信息</target>
        </trans-unit>
        <trans-unit id="bf8186840565d9d31b1a177074576c6626b1a28e" translate="yes" xml:space="preserve">
          <source>Committing your work will save the change</source>
          <target state="translated">提交您的工作将保存更改</target>
        </trans-unit>
        <trans-unit id="7de90a65241a6cdbd9ade485d777715d99285a1e" translate="yes" xml:space="preserve">
          <source>Common</source>
          <target state="translated">Common</target>
        </trans-unit>
        <trans-unit id="0160caed21fbd46d3db9b1e56d4701e45dadedf1" translate="yes" xml:space="preserve">
          <source>Common encodings recognized by ISO, MIME, IANA, and various other standardisation organisations are recognised; for a more detailed list see &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt;.</source>
          <target state="translated">可以识别ISO，MIME，IANA和其他各种标准化组织认可的通用编码；有关更详细的列表，请参见&lt;a href=&quot;encode/supported&quot;&gt;Encode :: Supported&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9506633a3b0fc3eabffeede071b59b13423caf84" translate="yes" xml:space="preserve">
          <source>Common errors and problems</source>
          <target state="translated">常见错误和问题</target>
        </trans-unit>
        <trans-unit id="3710bbf841f5662d9076f286b3544953fd32bcdf" translate="yes" xml:space="preserve">
          <source>Common type methods</source>
          <target state="translated">常用类型方法</target>
        </trans-unit>
        <trans-unit id="e8a9217a7a2833f7343523310e0806117cb02577" translate="yes" xml:space="preserve">
          <source>Compare 8-bit scalar data according to the current locale</source>
          <target state="translated">根据当前语言环境比较8位标量数据。</target>
        </trans-unit>
        <trans-unit id="e77e2932b456b90db814e0a4de05c60e78fca296" translate="yes" xml:space="preserve">
          <source>Compare C</source>
          <target state="translated">比较C</target>
        </trans-unit>
        <trans-unit id="9608a3eba277fa15d97bc5d85ad1fc9cb0be2844" translate="yes" xml:space="preserve">
          <source>Compare OBJ1 and OBJ2 and return -1, 0, or 1, if OBJ1 is less than, equal to, or larger than OBJ2, respectively.</source>
          <target state="translated">比较OBJ1和OBJ2,如果OBJ1分别小于、等于或大于OBJ2,则返回-1、0或1。</target>
        </trans-unit>
        <trans-unit id="5ea95d1f886daac818a31006775ac3fb0265210d" translate="yes" xml:space="preserve">
          <source>Compare files or filehandles</source>
          <target state="translated">比较文件或文件柄</target>
        </trans-unit>
        <trans-unit id="c8f1d71cf0a936dd7f0500caee4610cd7b62576a" translate="yes" xml:space="preserve">
          <source>Compare the following to the examples in &lt;code&gt;(*PRUNE)&lt;/code&gt; ; note the string is twice as long:</source>
          <target state="translated">将以下内容与 &lt;code&gt;(*PRUNE)&lt;/code&gt; 中的示例进行比较；请注意，字符串是两倍长：</target>
        </trans-unit>
        <trans-unit id="69ddd15b8d251ac3138eb554c808b81fba8e3f77" translate="yes" xml:space="preserve">
          <source>Compare this code that uses an arbitrary ID...</source>
          <target state="translated">比较这段使用任意ID的代码...</target>
        </trans-unit>
        <trans-unit id="d12d96005a498c4cadff6daa5f0a0e574ae4acad" translate="yes" xml:space="preserve">
          <source>Compare this to:</source>
          <target state="translated">相比之下。</target>
        </trans-unit>
        <trans-unit id="7f18e1a8f5bc872f75eec509b3be6157fc03fc7a" translate="yes" xml:space="preserve">
          <source>Compare this with a similar but locale-aware program:</source>
          <target state="translated">将其与一个类似但具有本地意识的程序进行比较。</target>
        </trans-unit>
        <trans-unit id="777b2f3ef1bbfb2e49e5cc0c311dce3b665b3d34" translate="yes" xml:space="preserve">
          <source>Compare this with the characters that you see and their order if you state explicitly that the locale should be ignored:</source>
          <target state="translated">如果你明确地声明应该忽略locale,则将其与你看到的字符及其顺序进行比较。</target>
        </trans-unit>
        <trans-unit id="8989d48e5efe1cfe0a91400d8b896a2d5b0f2ac0" translate="yes" xml:space="preserve">
          <source>Compares $x with $y and takes the sign into account. Returns -1, 0, 1 or undef.</source>
          <target state="translated">将$x和$y进行比较并考虑到符号。返回-1、0、1或undef。</target>
        </trans-unit>
        <trans-unit id="7080fdc780e08e244284eff667294f04737c6d6a" translate="yes" xml:space="preserve">
          <source>Compares $x with $y while ignoring their sign. Returns -1, 0, 1 or undef.</source>
          <target state="translated">将$x和$y进行比较,忽略它们的符号。返回-1、0、1或undef。</target>
        </trans-unit>
        <trans-unit id="bb939a704fb32544966548a9a5549dad34ca8481" translate="yes" xml:space="preserve">
          <source>Compares the sequence of characters (stored as octets) in &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;blen&lt;/code&gt; with the sequence of characters (stored as UTF-8) in &lt;code&gt;u&lt;/code&gt; , &lt;code&gt;ulen&lt;/code&gt; . Returns 0 if they are equal, -1 or -2 if the first string is less than the second string, +1 or +2 if the first string is greater than the second string.</source>
          <target state="translated">比较字符在序列（存储为字节） &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;blen&lt;/code&gt; 与字符序列（存储为UTF-8）在 &lt;code&gt;u&lt;/code&gt; ， &lt;code&gt;ulen&lt;/code&gt; 。如果它们相等，则返回0；如果第一个字符串小于第二个字符串，则返回-1或-2；如果第一个字符串大于第二个字符串，则返回+1或+2。</target>
        </trans-unit>
        <trans-unit id="20da491304f6c81eaa643ddf1af11a10dab08b5e" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs in a locale-aware manner. Is UTF-8 and 'use bytes' aware and will coerce its args to strings if necessary. If the flags contain SV_GMAGIC, it handles get magic. See also &lt;code&gt;sv_cmp_flags&lt;/code&gt; .</source>
          <target state="translated">以区域设置感知的方式比较两个SV中的字符串。是否知道UTF-8和&amp;ldquo;使用字节&amp;rdquo;，并在必要时将其args强制转换为字符串。如果标志包含SV_GMAGIC，则其处理将变为魔术。另请参见 &lt;code&gt;sv_cmp_flags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14038da5801f25b5039c66301e98f0e246769198" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs in a locale-aware manner. Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary. See also &lt;code&gt;sv_cmp&lt;/code&gt; .</source>
          <target state="translated">以区域设置感知的方式比较两个SV中的字符串。是否知道UTF-8和&amp;ldquo;使用字节&amp;rdquo;，句柄变得神奇，并在必要时将其args强制转换为字符串。另请参见 &lt;code&gt;sv_cmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="810a90ac09960b8d41b487c729062ca1467528ef" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs. Returns -1, 0, or 1 indicating whether the string in &lt;code&gt;sv1&lt;/code&gt; is less than, equal to, or greater than the string in &lt;code&gt;sv2&lt;/code&gt; . Is UTF-8 and 'use bytes' aware and will coerce its args to strings if necessary. If the flags include SV_GMAGIC, it handles get magic. See also &lt;code&gt;sv_cmp_locale_flags&lt;/code&gt; .</source>
          <target state="translated">比较两个SV中的字符串。返回-1、0或1，指示 &lt;code&gt;sv1&lt;/code&gt; 中的字符串是否小于，等于或大于 &lt;code&gt;sv2&lt;/code&gt; 中的字符串。是否知道UTF-8和&amp;ldquo;使用字节&amp;rdquo;，并在必要时将其args强制转换为字符串。如果标志包括SV_GMAGIC，则其处理会变魔术。另请参见 &lt;code&gt;sv_cmp_locale_flags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41ea1ccdf864f6da3ab35b8196aaf20a51353014" translate="yes" xml:space="preserve">
          <source>Compares the strings in two SVs. Returns -1, 0, or 1 indicating whether the string in &lt;code&gt;sv1&lt;/code&gt; is less than, equal to, or greater than the string in &lt;code&gt;sv2&lt;/code&gt; . Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary. See also &lt;code&gt;sv_cmp_locale&lt;/code&gt; .</source>
          <target state="translated">比较两个SV中的字符串。返回-1、0或1，指示 &lt;code&gt;sv1&lt;/code&gt; 中的字符串是否小于，等于或大于 &lt;code&gt;sv2&lt;/code&gt; 中的字符串。是否知道UTF-8和&amp;ldquo;使用字节&amp;rdquo;，句柄变得神奇，并在必要时将其args强制转换为字符串。另请参见 &lt;code&gt;sv_cmp_locale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b4ac967a48ac38926d5bd3b00ae02344f0ba5c7" translate="yes" xml:space="preserve">
          <source>Comparing and sorting by locale is usually slower than the default sorting; slow-downs of two to four times have been observed. It will also consume more memory: once a Perl scalar variable has participated in any string comparison or sorting operation obeying the locale collation rules, it will take 3-15 times more memory than before. (The exact multiplier depends on the string's contents, the operating system and the locale.) These downsides are dictated more by the operating system's implementation of the locale system than by Perl.</source>
          <target state="translated">按locale进行比较和排序的速度通常比默认的排序方式要慢;据观察,速度慢了2-4倍。它还会消耗更多的内存:一旦一个Perl标量变量参与了任何服从locale整理规则的字符串比较或排序操作,它所占用的内存将是之前的3-15倍。(具体的倍数取决于字符串的内容、操作系统和locale)。这些缺点更多的是由操作系统对locale系统的实现决定的,而不是由Perl决定的。</target>
        </trans-unit>
        <trans-unit id="5d0a71bcc03489928ee6825a22ad30e52059487a" translate="yes" xml:space="preserve">
          <source>Comparing eval'd strings with code references will give you inaccurate results: a code reference will show a slightly slower execution time than the equivalent eval'd string.</source>
          <target state="translated">将 eval'd 字符串与代码引用进行比较会得到不准确的结果:代码引用的执行时间会比等价的 eval'd 字符串稍慢。</target>
        </trans-unit>
        <trans-unit id="07ac02349f220b342a1d6f35982d496f173f647a" translate="yes" xml:space="preserve">
          <source>Comparing or matching a string case-insensitively. In Perl, it is implemented with the &lt;code&gt;/i&lt;/code&gt; pattern modifier, the &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; function, and the &lt;code&gt;\F&lt;/code&gt; double-quote translation escape.</source>
          <target state="translated">不区分大小写地比较或匹配字符串。在Perl中，使用 &lt;code&gt;/i&lt;/code&gt; 模式修饰符， &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; 函数和 &lt;code&gt;\F&lt;/code&gt; 双引号转义转义实现。</target>
        </trans-unit>
        <trans-unit id="80c2dde455c2c05f663d3e4f08b51ffa85278453" translate="yes" xml:space="preserve">
          <source>Compatibility functions:</source>
          <target state="translated">兼容性功能。</target>
        </trans-unit>
        <trans-unit id="5b943666a01e98d02ba66c24633566eaaa275c3f" translate="yes" xml:space="preserve">
          <source>Compatibility with Unix compress/uncompress.</source>
          <target state="translated">与Unix压缩/解压缩的兼容性。</target>
        </trans-unit>
        <trans-unit id="aad755de429541e8ec1db943cf4102247f2bb5d3" translate="yes" xml:space="preserve">
          <source>Compilation</source>
          <target state="translated">Compilation</target>
        </trans-unit>
        <trans-unit id="61222b08840c5d756903ba61f2c94b08f72f00f1" translate="yes" xml:space="preserve">
          <source>Compilation errors will tell you the line number of the error, with an indication of the next token or token type that was to be examined. (In a script passed to Perl via &lt;b&gt;-e&lt;/b&gt; switches, each &lt;b&gt;-e&lt;/b&gt; is counted as one line.)</source>
          <target state="translated">编译错误将告诉您错误的行号，并指出要检查的下一个标记或标记类型。（在通过&lt;b&gt;-e&lt;/b&gt;开关传递给Perl的脚本中，每个&lt;b&gt;-e&lt;/b&gt;被视为一行。）</target>
        </trans-unit>
        <trans-unit id="acc9cabc1ceec333d13d3b9abb6ebf9a6c73a5f8" translate="yes" xml:space="preserve">
          <source>Compilation problems</source>
          <target state="translated">汇编问题</target>
        </trans-unit>
        <trans-unit id="e55924dc0dada3b1eb85a06e699cc43d910428cf" translate="yes" xml:space="preserve">
          <source>Compilation starts with &lt;code&gt;pregcomp()&lt;/code&gt; , which is mostly an initialisation wrapper which farms work out to two other routines for the heavy lifting: the first is &lt;code&gt;reg()&lt;/code&gt; , which is the start point for parsing; the second, &lt;code&gt;study_chunk()&lt;/code&gt; , is responsible for optimisation.</source>
          <target state="translated">编译从 &lt;code&gt;pregcomp()&lt;/code&gt; 开始，它主要是一个初始化包装器，它为另外的繁重工作提供了另外两个例程：第一个是 &lt;code&gt;reg()&lt;/code&gt; ，它是解析的起点；第二个是 &lt;code&gt;study_chunk()&lt;/code&gt; ，负责优化。</target>
        </trans-unit>
        <trans-unit id="44ff6f247296e1f189e3389d776ef21cc85aecb1" translate="yes" xml:space="preserve">
          <source>Compile and execute code in restricted compartments</source>
          <target state="translated">在受限区间内编译和执行代码</target>
        </trans-unit>
        <trans-unit id="7d8b71307540ad88b5ce354792888a1fa8ac7b97" translate="yes" xml:space="preserve">
          <source>Compile and link C code for Perl modules</source>
          <target state="translated">编译和链接Perl模块的C代码</target>
        </trans-unit>
        <trans-unit id="b5228203f0e6f671c5f4f6a9e10132ab1a69d71c" translate="yes" xml:space="preserve">
          <source>Compile and run:</source>
          <target state="translated">编译并运行。</target>
        </trans-unit>
        <trans-unit id="527a73f377cb4327fd734d48795ab96620ea39d0" translate="yes" xml:space="preserve">
          <source>Compile as usual:</source>
          <target state="translated">照常编译。</target>
        </trans-unit>
        <trans-unit id="cdeeb661a0937ab7ad6e505a38d072a24f8b1609" translate="yes" xml:space="preserve">
          <source>Compile pass 1: check routines</source>
          <target state="translated">编译通过1:检查例程</target>
        </trans-unit>
        <trans-unit id="ad1d375b3a209f1d8455aec99a7200242837c043" translate="yes" xml:space="preserve">
          <source>Compile pass 1a: constant folding</source>
          <target state="translated">编译通1a:恒久折叠</target>
        </trans-unit>
        <trans-unit id="7161db3a41fd5c2db89e47b0432b3cd9aaab4ad8" translate="yes" xml:space="preserve">
          <source>Compile pass 2: context propagation</source>
          <target state="translated">编译通道2:上下文传播</target>
        </trans-unit>
        <trans-unit id="87a46269fcd4885277b1fc9babaffbe09e6ff612" translate="yes" xml:space="preserve">
          <source>Compile pass 3: peephole optimization</source>
          <target state="translated">编译通3:窥视孔优化</target>
        </trans-unit>
        <trans-unit id="8ca3fba27b3ae96fd6b344a588412c93d138dee1" translate="yes" xml:space="preserve">
          <source>Compile perl and extensions sources with AddressSanitizer.</source>
          <target state="translated">使用AddressSanitizer编译perl和extensions源代码。</target>
        </trans-unit>
        <trans-unit id="e9f217dff0c1cb84ca4c53ebcecee0f4ba366dbb" translate="yes" xml:space="preserve">
          <source>Compile the pattern stored in &lt;code&gt;pattern&lt;/code&gt; using the given &lt;code&gt;flags&lt;/code&gt; and return a pointer to a prepared &lt;code&gt;REGEXP&lt;/code&gt; structure that can perform the match. See &lt;a href=&quot;#The-REGEXP-structure&quot;&gt;The REGEXP structure&lt;/a&gt; below for an explanation of the individual fields in the REGEXP struct.</source>
          <target state="translated">使用给定的 &lt;code&gt;flags&lt;/code&gt; 编译存储在 &lt;code&gt;pattern&lt;/code&gt; 中的pattern，并返回一个指向可以执行匹配的 &lt;code&gt;REGEXP&lt;/code&gt; 结构的指针。有关&lt;a href=&quot;#The-REGEXP-structure&quot;&gt;REGEXP结构&lt;/a&gt;中各个字段的说明，请参见下面的REGEXP结构。</target>
        </trans-unit>
        <trans-unit id="52c41fd78e57b0ea9c7edd279f09324e8febcf36" translate="yes" xml:space="preserve">
          <source>Compile this wrapper into a binary executable and then make</source>
          <target state="translated">将这个封装器编译成二进制可执行文件,然后制作成</target>
        </trans-unit>
        <trans-unit id="5e2892ae20c461e25a70a7b9ce2cc0ca3e806286" translate="yes" xml:space="preserve">
          <source>Compile-time Output</source>
          <target state="translated">编译时输出</target>
        </trans-unit>
        <trans-unit id="316b6940ee7ff98d0c91d6eed52347ec98e1cebd" translate="yes" xml:space="preserve">
          <source>Compile-time class fields</source>
          <target state="translated">编译时的类字段</target>
        </trans-unit>
        <trans-unit id="b224a19e379a66e5216e1e3a4c23fb529c4ffd00" translate="yes" xml:space="preserve">
          <source>Compile-time options</source>
          <target state="translated">编译时选项</target>
        </trans-unit>
        <trans-unit id="f6133097eb347671ef54899d886f2ecc59f839b5" translate="yes" xml:space="preserve">
          <source>Compile-time scope hooks</source>
          <target state="translated">编译时的作用域钩子</target>
        </trans-unit>
        <trans-unit id="9a1874d143fe11d6c914d3925623b8d4023c98fe" translate="yes" xml:space="preserve">
          <source>Compiled Encodings</source>
          <target state="translated">汇编编码</target>
        </trans-unit>
        <trans-unit id="1d37a3ea5df0706c7c9b42fdc4c2ef0fe0a0aa99" translate="yes" xml:space="preserve">
          <source>Compiled code</source>
          <target state="translated">编译代码</target>
        </trans-unit>
        <trans-unit id="5c415c80469833c9cf270c47e731b8c7453f9dbd" translate="yes" xml:space="preserve">
          <source>Compiled program. Inlined into the structure so the entire struct can be treated as a single blob.</source>
          <target state="translated">编译后的程序。内嵌到结构中,因此整个结构可以被视为一个单一的blob。</target>
        </trans-unit>
        <trans-unit id="208f16ae59394d8539a13277bb3ef361462a3b2b" translate="yes" xml:space="preserve">
          <source>Compiler and Related Tools on Solaris.</source>
          <target state="translated">Solaris上的编译器和相关工具。</target>
        </trans-unit>
        <trans-unit id="34f24cbbea7db0e43a9c0993c8373a846789f46b" translate="yes" xml:space="preserve">
          <source>Compiles a C source file and produces an object file. The name of the object file is returned. The source file is specified in a &lt;code&gt;source&lt;/code&gt; parameter, which is required; the other parameters listed below are optional.</source>
          <target state="translated">编译一个C源文件并生成一个目标文件。返回目标文件的名称。源文件是在 &lt;code&gt;source&lt;/code&gt; 参数中指定的，这是必需的。下面列出的其他参数是可选的。</target>
        </trans-unit>
        <trans-unit id="e24918face3ac9c1b717001b232debfe6ee36a5c" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on AIX</source>
          <target state="translated">在AIX上编译Perl 5</target>
        </trans-unit>
        <trans-unit id="c22ae861a5bf3dbdbae654f91cbd81651f885935" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on AIX 7.1.0</source>
          <target state="translated">在AIX 7.1.0上编译Perl 5。</target>
        </trans-unit>
        <trans-unit id="9c229fda73fdbf38e74af7c957910e2ab6e8ac38" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on HP-UX</source>
          <target state="translated">在HP-UX上编译Perl 5</target>
        </trans-unit>
        <trans-unit id="4367b922eaae098fdd83c24f81fe1e73e3dcc108" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on Tru64</source>
          <target state="translated">在Tru64上编译Perl 5</target>
        </trans-unit>
        <trans-unit id="0ab72b58debfaa78bed9b0dabffd26a67134a0a0" translate="yes" xml:space="preserve">
          <source>Compiling Perl 5 on older AIX versions up to 4.3.3</source>
          <target state="translated">在4.3.3以下的旧版AIX上编译Perl 5。</target>
        </trans-unit>
        <trans-unit id="b9b693c192dd1710f2e9e413a10dac38987acc04" translate="yes" xml:space="preserve">
          <source>Compiling Perl for OS/400 PASE</source>
          <target state="translated">编译Perl for OS/400 PASE</target>
        </trans-unit>
        <trans-unit id="89c4a07bdd1b063c8640e5cb7f79fc20fab27cc4" translate="yes" xml:space="preserve">
          <source>Compiling Perl on BS2000</source>
          <target state="translated">在BS2000上编译Perl</target>
        </trans-unit>
        <trans-unit id="7f945a02f351065a45ab543615ac08775ab27ccb" translate="yes" xml:space="preserve">
          <source>Compiling Perl on Symbian</source>
          <target state="translated">在Symbian上编译Perl</target>
        </trans-unit>
        <trans-unit id="cea78e017dd3458f4890e6e74a3e6990888adbfd" translate="yes" xml:space="preserve">
          <source>Compiling and saving regular expressions</source>
          <target state="translated">编译和保存正则表达式</target>
        </trans-unit>
        <trans-unit id="73da9444429f3393b9a36999cf3b31965029c0e7" translate="yes" xml:space="preserve">
          <source>Compiling with threading (-Duseithreads) completely rewrites the function prototypes of Perl. You better try your changes with that. Related to this is the difference between &quot;Perl_-less&quot; and &quot;Perl_-ly&quot; APIs, for example:</source>
          <target state="translated">用线程编译 (-Duseithreads)完全重写了 Perl 的函数原型。你最好用它来试试你的变化。与此相关的是 &quot;Perl_-less &quot;和 &quot;Perl_-ly &quot;API之间的区别,例如。</target>
        </trans-unit>
        <trans-unit id="ce33e80de717ad8f29fa7b0d95b6100971d4a1f5" translate="yes" xml:space="preserve">
          <source>Compiling your C program</source>
          <target state="translated">编译你的C程序</target>
        </trans-unit>
        <trans-unit id="4a85048775fa0a61ab607374e9f2ae3d47a74e50" translate="yes" xml:space="preserve">
          <source>Complete Dissociation of Child from Parent</source>
          <target state="translated">子女与父母的完全分离</target>
        </trans-unit>
        <trans-unit id="c18b6d49a703c470c73b112b479a086dc7896837" translate="yes" xml:space="preserve">
          <source>Complete applications rarely belong in the Perl Module Library.</source>
          <target state="translated">完整的应用程序很少属于Perl模块库。</target>
        </trans-unit>
        <trans-unit id="74c1508ef341d68c6231bb4d7d525101aab30f53" translate="yes" xml:space="preserve">
          <source>Complex data structures</source>
          <target state="translated">复杂的数据结构</target>
        </trans-unit>
        <trans-unit id="ffe6248574dae7c5af853909dcd998ffa5a77c65" translate="yes" xml:space="preserve">
          <source>Complex numbers and associated mathematical functions</source>
          <target state="translated">复数和相关数学函数</target>
        </trans-unit>
        <trans-unit id="cc43311382c470cc090f7797edbba8e531a9d677" translate="yes" xml:space="preserve">
          <source>Complex numbers are numbers that have both a real part and an imaginary part, and are usually noted:</source>
          <target state="translated">复数是指既有实部又有虚部的数,一般都会注明。</target>
        </trans-unit>
        <trans-unit id="48b933ad5b59e3f82ebc999f039fd64112dc79e5" translate="yes" xml:space="preserve">
          <source>Compliant parsers must not treat &quot;-&amp;gt;&quot; as special.</source>
          <target state="translated">兼容的解析器不得将&amp;ldquo;-&amp;gt;&amp;rdquo;视为特殊字符。</target>
        </trans-unit>
        <trans-unit id="b4e13848c14cd38c0bce075ad2fa8690d5d9a71b" translate="yes" xml:space="preserve">
          <source>Complicated stuff for Win32 that I don't understand. :(</source>
          <target state="translated">复杂的Win32的东西,我不明白。 :(</target>
        </trans-unit>
        <trans-unit id="f9088d8d7c9d5789f609c18210cfd55fd0924e55" translate="yes" xml:space="preserve">
          <source>Composing regular expressions at runtime</source>
          <target state="translated">在运行时组成正则表达式</target>
        </trans-unit>
        <trans-unit id="ca5e00120498b815c12de59fd45e93f8086a8bfc" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">Composition</target>
        </trans-unit>
        <trans-unit id="63df8303c717b29c266d23df163b1b18d7225c3d" translate="yes" xml:space="preserve">
          <source>Composition Exclusion Table</source>
          <target state="translated">构成排除表</target>
        </trans-unit>
        <trans-unit id="fb6884eb8992b62c7c1af30d600b40339c50155a" translate="yes" xml:space="preserve">
          <source>Compound Statements</source>
          <target state="translated">复合声明</target>
        </trans-unit>
        <trans-unit id="485ff8d4769defdc95809b50d74f993442a7e521" translate="yes" xml:space="preserve">
          <source>Compress all the DLLs with</source>
          <target state="translated">压缩所有的DLLs,用</target>
        </trans-unit>
        <trans-unit id="9fd56668bd5f18daaa0b667a0debd58feedac101" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Bzip2</source>
          <target state="translated">Compress::Raw::Bzip2</target>
        </trans-unit>
        <trans-unit id="18d94e1500a428c004428df46c1953161a32df03" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Bzip2 - Low-Level Interface to bzip2 compression library</source>
          <target state="translated">Compress::Raw::Bzip2-bzip2压缩库的低级接口。</target>
        </trans-unit>
        <trans-unit id="45bc572c9ec4512947eadc206937635681bf6c11" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib</source>
          <target state="translated">Compress::Raw::Zlib</target>
        </trans-unit>
        <trans-unit id="c076710bf2d12402a0edf3b2175c1d82039053a0" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib - Low-Level Interface to zlib compression library</source>
          <target state="translated">Compress::Raw::Zlib-zlib压缩库的低级接口。</target>
        </trans-unit>
        <trans-unit id="35464ef9d0e6b29547404c53959f74fe619d2fa0" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib::Deflate</source>
          <target state="translated">Compress::Raw::Zlib::Deflate</target>
        </trans-unit>
        <trans-unit id="9da283b891dfecdc74e74f383b66cc8440ffe8da" translate="yes" xml:space="preserve">
          <source>Compress::Raw::Zlib::Inflate</source>
          <target state="translated">Compress::Raw::Zlib::Inflate</target>
        </trans-unit>
        <trans-unit id="0a6571e5bcd046dfe8f32f7d79b4f6bae3366dd5" translate="yes" xml:space="preserve">
          <source>Compress::Zlib</source>
          <target state="translated">Compress::Zlib</target>
        </trans-unit>
        <trans-unit id="96c20806a0d6c0bf54bc6c1767bdc331836742ff" translate="yes" xml:space="preserve">
          <source>Compress::Zlib - Interface to zlib compression library</source>
          <target state="translated">Compress::Zlib-zlib压缩库的接口。</target>
        </trans-unit>
        <trans-unit id="b27c649ac2489267a35287d00edb05f007c3c52e" translate="yes" xml:space="preserve">
          <source>Compress::Zlib::memGunzip</source>
          <target state="translated">Compress::Zlib::memGunzip</target>
        </trans-unit>
        <trans-unit id="6729436703929444a364247fdaaf90b9905bdce6" translate="yes" xml:space="preserve">
          <source>Compress::Zlib::memGzip</source>
          <target state="translated">Compress::Zlib::memGzip</target>
        </trans-unit>
        <trans-unit id="ee774a21a0a3c5ce8303c3d53424d9997d3a1a40" translate="yes" xml:space="preserve">
          <source>Compresses &lt;code&gt;$source&lt;/code&gt; . If successful it returns the compressed data. Otherwise it returns</source>
          <target state="translated">压缩 &lt;code&gt;$source&lt;/code&gt; 。如果成功，它将返回压缩数据。否则返回</target>
        </trans-unit>
        <trans-unit id="f4abdd87ed061063a95a2ba22a68b1517b4fb78e" translate="yes" xml:space="preserve">
          <source>Compresses and outputs the contents of the &lt;code&gt;$data&lt;/code&gt; parameter.</source>
          <target state="translated">压缩并输出 &lt;code&gt;$data&lt;/code&gt; 参数的内容。</target>
        </trans-unit>
        <trans-unit id="bae9119119ae4847de6084005870d7cd27c57d09" translate="yes" xml:space="preserve">
          <source>Compresses and outputs the contents of the &lt;code&gt;$data&lt;/code&gt; parameter. This has the same behaviour as the &lt;code&gt;&lt;a href=&quot;../../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; built-in.</source>
          <target state="translated">压缩并输出 &lt;code&gt;$data&lt;/code&gt; 参数的内容。这具有与内置 &lt;code&gt;&lt;a href=&quot;../../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 相同的行为。</target>
        </trans-unit>
        <trans-unit id="46ead4045fbadbc2f0b37b6046e5803972459710" translate="yes" xml:space="preserve">
          <source>Compression</source>
          <target state="translated">Compression</target>
        </trans-unit>
        <trans-unit id="61322d91de1a1c9dd976decc2eac0656945186ef" translate="yes" xml:space="preserve">
          <source>Compute $x ** $y.</source>
          <target state="translated">计算$x **$y。</target>
        </trans-unit>
        <trans-unit id="b0e6b1f79c9f3294396b346171031d6eefb80388" translate="yes" xml:space="preserve">
          <source>Computers are good at being predictable and bad at being random (despite appearances caused by bugs in your programs :-). The</source>
          <target state="translated">计算机善于预测,而不善于随机(尽管你的程序中的错误造成的表象:-)。的</target>
        </trans-unit>
        <trans-unit id="08d9ea43c28304526180b5a57915a96d4c9ac81d" translate="yes" xml:space="preserve">
          <source>Computes &lt;code&gt;$x&lt;/code&gt; raised to the power &lt;code&gt;$exponent&lt;/code&gt; .</source>
          <target state="translated">计算加到幂 &lt;code&gt;$exponent&lt;/code&gt; &lt;code&gt;$x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57ac7c8e25d01d0b70814899b6ae00d4e8d209cf" translate="yes" xml:space="preserve">
          <source>Computing MROs can be expensive. The implementation provides a cache, in which you can store a single &lt;code&gt;SV *&lt;/code&gt; , or anything that can be cast to &lt;code&gt;SV *&lt;/code&gt; , such as &lt;code&gt;AV *&lt;/code&gt; . To read your private value, use the macro &lt;code&gt;MRO_GET_PRIVATE_DATA()&lt;/code&gt; , passing it the &lt;code&gt;mro_meta&lt;/code&gt; structure from the stash, and a pointer to your &lt;code&gt;mro_alg&lt;/code&gt; structure:</source>
          <target state="translated">计算MRO可能会很昂贵。该实现提供了一个缓存，您可以在其中存储单个 &lt;code&gt;SV *&lt;/code&gt; 或可以强制转换为 &lt;code&gt;SV *&lt;/code&gt; 的任何内容，例如 &lt;code&gt;AV *&lt;/code&gt; 。要读取您的私有值，请使用宏 &lt;code&gt;MRO_GET_PRIVATE_DATA()&lt;/code&gt; ，从存储 &lt;code&gt;mro_meta&lt;/code&gt; 其传递给mro_meta结构，并指向您的 &lt;code&gt;mro_alg&lt;/code&gt; 结构：</target>
        </trans-unit>
        <trans-unit id="cb3a0dfbaecfd882d35c67f5f3bd704631194aab" translate="yes" xml:space="preserve">
          <source>Concatenate one or more directory names and a filename to form a complete path ending with a filename</source>
          <target state="translated">将一个或多个目录名和一个文件名连接起来,形成一个以文件名结束的完整路径。</target>
        </trans-unit>
        <trans-unit id="047b05311f0dc34982a56cd2fb9ad1f922dcbd7c" translate="yes" xml:space="preserve">
          <source>Concatenate one or more directory names and a filename to form a complete path ending with a filename. Resulting paths are &lt;b&gt;relative&lt;/b&gt; by default, but can be forced to be absolute (but avoid this).</source>
          <target state="translated">连接一个或多个目录名和一个文件名以形成以文件名结尾的完整路径。默认情况下，结果路径是&lt;b&gt;相对&lt;/b&gt;路径，但可以强制为绝对路径（但请避免这样做）。</target>
        </trans-unit>
        <trans-unit id="f35597adc56e5ce25242327211e537bda9c2f250" translate="yes" xml:space="preserve">
          <source>Concatenate the lists of ops contained directly within two list-type ops, returning the combined list.</source>
          <target state="translated">将直接包含在两个列表型操作中的操作列表进行合并,返回合并后的列表。</target>
        </trans-unit>
        <trans-unit id="649e67e9503162d4b5271ac24839b4dd127f4a0a" translate="yes" xml:space="preserve">
          <source>Concatenate two or more directory names to form a complete path ending with a directory. But remove the trailing slash from the resulting string, because it doesn't look good, isn't necessary and confuses OS/2. Of course, if this is the root directory, don't cut off the trailing slash :-)</source>
          <target state="translated">将两个或更多的目录名连接起来,形成一个以目录结尾的完整路径。但是要把后面的斜杠去掉,因为它看起来不好看,没有必要,而且会让OS/2混淆。当然,如果这是根目录,就不要剪掉尾部的斜杠:-)</target>
        </trans-unit>
        <trans-unit id="55de8a490d5d9aa9964bf82d52f080f49c22f141" translate="yes" xml:space="preserve">
          <source>Concatenate two or more directory names to form a complete path ending with a directory. But remove the trailing slash from the resulting string, because it doesn't look good, isn't necessary and confuses OS2. Of course, if this is the root directory, don't cut off the trailing slash :-)</source>
          <target state="translated">将两个或更多的目录名连接起来,形成一个以目录结尾的完整路径。但是要把后面的斜杠去掉,因为它看起来不好看,没有必要,而且会让OS2感到困惑。当然,如果这是根目录,就不要剪掉尾部的斜杠:-)</target>
        </trans-unit>
        <trans-unit id="7d067b3996ede67611d936f0cc0594b33d12b143" translate="yes" xml:space="preserve">
          <source>Concatenate two or more directory names to form a path separated by colons (&quot;:&quot;) ending with a directory. Resulting paths are &lt;b&gt;relative&lt;/b&gt; by default, but can be forced to be absolute (but avoid this, see below). Automatically puts a trailing &quot;:&quot; on the end of the complete path, because that's what's done in MacPerl's environment and helps to distinguish a file path from a directory path.</source>
          <target state="translated">连接两个或多个目录名称，以形成一个以冒号（&amp;ldquo;：&amp;rdquo;）分隔的路径，并以目录结尾。默认情况下，结果路径是&lt;b&gt;相对&lt;/b&gt;路径，但可以强制为绝对路径（但请避免使用此路径，请参见下文）。自动在完整路径的末尾加上&amp;ldquo;：&amp;rdquo;，因为这是MacPerl环境中的工作，它有助于区分文件路径和目录路径。</target>
        </trans-unit>
        <trans-unit id="1f92bbd0599928bde109c94dcff53b7718e50962" translate="yes" xml:space="preserve">
          <source>Concatenates a list of directory specifications with a filename specification to build a path.</source>
          <target state="translated">将目录规格的列表与文件名规格连接起来,建立一个路径。</target>
        </trans-unit>
        <trans-unit id="443b92cba56de5e426bb70ed2661bc12a7f0aa5f" translate="yes" xml:space="preserve">
          <source>Concatenates a list of file specifications, and returns the result as a native directory specification unless the Unix filename reporting feature has been enabled. No check is made for &quot;impossible&quot; cases (e.g. elements other than the first being absolute filespecs).</source>
          <target state="translated">连接一个文件规格列表,并将结果作为本地目录规格返回,除非 Unix 文件名报告功能已被启用。不检查 &quot;不可能 &quot;的情况(例如,除第一个元素外的其他元素是绝对的文件规格)。</target>
        </trans-unit>
        <trans-unit id="a1064ed1ab12c5551a61949efb23c2a0fe5e1b5a" translate="yes" xml:space="preserve">
          <source>Concatenates all files mentioned on command line to STDOUT.</source>
          <target state="translated">将命令行中提到的所有文件连接到STDOUT。</target>
        </trans-unit>
        <trans-unit id="aeaf86da2ac135282bf22834043d6e62fbe3a826" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;NUL&lt;/code&gt; -terminated string onto the end of the string which is in the SV. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;sv_catpv_mg&lt;/code&gt; .</source>
          <target state="translated">将 &lt;code&gt;NUL&lt;/code&gt; 终止的字符串连接到SV中字符串的末尾。如果SV设置了UTF-8状态，则附加的字节应该是有效的UTF-8。处理&amp;ldquo;获取&amp;rdquo;魔法，但不处理&amp;ldquo;设定&amp;rdquo;魔法。参见 &lt;code&gt;sv_catpv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14b45eaa62bb9cbc2fd55f55bbeff1b25f09af1b" translate="yes" xml:space="preserve">
          <source>Concatenates the &lt;code&gt;NUL&lt;/code&gt; -terminated string onto the end of the string which is in the SV. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;SV_SMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_set&lt;/code&gt; on the modified SV if appropriate.</source>
          <target state="translated">将 &lt;code&gt;NUL&lt;/code&gt; 终止的字符串连接到SV中字符串的末尾。如果SV设置了UTF-8状态，则附加的字节应该是有效的UTF-8。如果 &lt;code&gt;flags&lt;/code&gt; 有 &lt;code&gt;SV_SMAGIC&lt;/code&gt; 位设置，将 &lt;code&gt;mg_set&lt;/code&gt; 上，如果适当修改后的SV。</target>
        </trans-unit>
        <trans-unit id="eb1ee548c525e9ae72200cea308c51a15c04e05b" translate="yes" xml:space="preserve">
          <source>Concatenates the string from SV &lt;code&gt;ssv&lt;/code&gt; onto the end of the string in SV &lt;code&gt;dsv&lt;/code&gt; . If &lt;code&gt;ssv&lt;/code&gt; is null, does nothing; otherwise modifies only &lt;code&gt;dsv&lt;/code&gt; . Handles 'get' magic on both SVs, but no 'set' magic. See &lt;code&gt;sv_catsv_mg&lt;/code&gt; and &lt;code&gt;sv_catsv_nomg&lt;/code&gt; .</source>
          <target state="translated">将SV &lt;code&gt;ssv&lt;/code&gt; 中的字符串连接到SV dsv中的字符串 &lt;code&gt;dsv&lt;/code&gt; 。如果 &lt;code&gt;ssv&lt;/code&gt; 为null，则什么都不做；否则仅修改 &lt;code&gt;dsv&lt;/code&gt; 。处理两个SV上的&amp;ldquo;获取&amp;rdquo;魔法，但不处理&amp;ldquo;置位&amp;rdquo;魔法。参见 &lt;code&gt;sv_catsv_mg&lt;/code&gt; 和 &lt;code&gt;sv_catsv_nomg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="638b5971cabc9806aa9868b5283e2415ea8bede6" translate="yes" xml:space="preserve">
          <source>Concatenates the string from SV &lt;code&gt;ssv&lt;/code&gt; onto the end of the string in SV &lt;code&gt;dsv&lt;/code&gt; . If &lt;code&gt;ssv&lt;/code&gt; is null, does nothing; otherwise modifies only &lt;code&gt;dsv&lt;/code&gt; . If &lt;code&gt;flags&lt;/code&gt; include &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will call &lt;code&gt;mg_get&lt;/code&gt; on both SVs if appropriate. If &lt;code&gt;flags&lt;/code&gt; include &lt;code&gt;SV_SMAGIC&lt;/code&gt; , &lt;code&gt;mg_set&lt;/code&gt; will be called on the modified SV afterward, if appropriate. &lt;code&gt;sv_catsv&lt;/code&gt; , &lt;code&gt;sv_catsv_nomg&lt;/code&gt; , and &lt;code&gt;sv_catsv_mg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">将SV &lt;code&gt;ssv&lt;/code&gt; 中的字符串连接到SV dsv中的字符串 &lt;code&gt;dsv&lt;/code&gt; 。如果 &lt;code&gt;ssv&lt;/code&gt; 为null，则什么都不做；否则仅修改 &lt;code&gt;dsv&lt;/code&gt; 。如果 &lt;code&gt;flags&lt;/code&gt; 包含设置的 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位，则将在适当的情况下在两个SV上调用 &lt;code&gt;mg_get&lt;/code&gt; 。如果 &lt;code&gt;flags&lt;/code&gt; 包括 &lt;code&gt;SV_SMAGIC&lt;/code&gt; ， &lt;code&gt;mg_set&lt;/code&gt; 后将在修改后的SV上调用mg_set（如果适用）。 &lt;code&gt;sv_catsv&lt;/code&gt; ， &lt;code&gt;sv_catsv_nomg&lt;/code&gt; 和 &lt;code&gt;sv_catsv_mg&lt;/code&gt; 是根据此功能实现的。</target>
        </trans-unit>
        <trans-unit id="32fe76b48251f7900129b9480f9210b340fdc9af" translate="yes" xml:space="preserve">
          <source>Concatenates the string onto the end of the string which is in the SV. The &lt;code&gt;len&lt;/code&gt; indicates number of bytes to copy.</source>
          <target state="translated">将字符串连接到SV中字符串的末尾。该 &lt;code&gt;len&lt;/code&gt; 指示要复制的字节数。</target>
        </trans-unit>
        <trans-unit id="9552a0de5c0babf6573b77f8cdd2583744fe375e" translate="yes" xml:space="preserve">
          <source>Concatenates the string onto the end of the string which is in the SV. The &lt;code&gt;len&lt;/code&gt; indicates number of bytes to copy. If the SV has the UTF-8 status set, then the bytes appended should be valid UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;sv_catpvn_mg&lt;/code&gt; .</source>
          <target state="translated">将字符串连接到SV中字符串的末尾。该 &lt;code&gt;len&lt;/code&gt; 指示要复制的字节数。如果SV设置了UTF-8状态，则附加的字节应该是有效的UTF-8。处理&amp;ldquo;获取&amp;rdquo;魔法，但不处理&amp;ldquo;设定&amp;rdquo;魔法。参见 &lt;code&gt;sv_catpvn_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdcfedf7534d333df8380db86be3ac2ea169364e" translate="yes" xml:space="preserve">
          <source>Conceptually, the easiest way to count the lines in a file is to simply read them and count them:</source>
          <target state="translated">从概念上讲,计算文件中的行数,最简单的方法就是简单的读取并计算。</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="0dbde46110575d19c57e331505cceacbb06fd5c7" translate="yes" xml:space="preserve">
          <source>Conditional Operator</source>
          <target state="translated">条件运算符</target>
        </trans-unit>
        <trans-unit id="80a3a5f034865959dc043303f8d87089be9bec1e" translate="yes" xml:space="preserve">
          <source>Conditional and looping constructs</source>
          <target state="translated">条件和循环结构</target>
        </trans-unit>
        <trans-unit id="96632c17c857e0c02d178649142fafe7584b5abf" translate="yes" xml:space="preserve">
          <source>Conditional expression. Matches &lt;code&gt;yes-pattern&lt;/code&gt; if &lt;code&gt;condition&lt;/code&gt; yields a true value, matches &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; otherwise. A missing pattern always matches.</source>
          <target state="translated">条件表达式。如果 &lt;code&gt;condition&lt;/code&gt; 产生一个真值，则匹配 &lt;code&gt;yes-pattern&lt;/code&gt; ，否则匹配 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; 。缺少的模式总是匹配的。</target>
        </trans-unit>
        <trans-unit id="e428c12fd355944b5e6b7023bd80dd3c17b5aee5" translate="yes" xml:space="preserve">
          <source>Conditional expressions</source>
          <target state="translated">条件表达式</target>
        </trans-unit>
        <trans-unit id="a343c81c0a2492332b5fb3f41392ce89176105c4" translate="yes" xml:space="preserve">
          <source>Conditional tests</source>
          <target state="translated">条件测试</target>
        </trans-unit>
        <trans-unit id="cf037e3922672487abb4fdf8a9fb64c629078717" translate="yes" xml:space="preserve">
          <source>Conditionally does &lt;code&gt;OpMORESIB_set&lt;/code&gt; or &lt;code&gt;OpLASTSIB_set&lt;/code&gt; depending on whether sib is non-null. For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">根据sib是否为空，有条件地执行 &lt;code&gt;OpMORESIB_set&lt;/code&gt; 或 &lt;code&gt;OpLASTSIB_set&lt;/code&gt; 。有关更高级别的接口，请参见 &lt;code&gt;op_sibling_splice&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="ecd4bd981dd9c138dc910d68320acc6b8da803ca" translate="yes" xml:space="preserve">
          <source>Config - access Perl configuration information</source>
          <target state="translated">Config-访问Perl配置信息</target>
        </trans-unit>
        <trans-unit id="fbb49b6e5c194d0312a905696c20f6b5d8a43c67" translate="yes" xml:space="preserve">
          <source>Config Variables</source>
          <target state="translated">配置变量</target>
        </trans-unit>
        <trans-unit id="2c6df16e95af35ad3cf55abb04956aab698aea9b" translate="yes" xml:space="preserve">
          <source>Config.pm</source>
          <target state="translated">Config.pm</target>
        </trans-unit>
        <trans-unit id="3784c094667e63aa78e7304ec87ad01e622ad79e" translate="yes" xml:space="preserve">
          <source>Config.sys</source>
          <target state="translated">Config.sys</target>
        </trans-unit>
        <trans-unit id="61386747172506a6ac768b51dbad3d57554bb149" translate="yes" xml:space="preserve">
          <source>Config::Extensions</source>
          <target state="translated">Config::Extensions</target>
        </trans-unit>
        <trans-unit id="fb7f1d1b07ade815b9ca8129a9e4d8f0870938dc" translate="yes" xml:space="preserve">
          <source>Configurable Options</source>
          <target state="translated">可配置的选项</target>
        </trans-unit>
        <trans-unit id="56f4add64bfc676813ad28c07cc79f57bf4381eb" translate="yes" xml:space="preserve">
          <source>Configurable error handling can be very useful to your users. Consider offering a choice of levels for warning and debug messages, an option to send messages to a separate file, a way to specify an error-handling routine, or other such features. Be sure to default all these options to the commonest use.</source>
          <target state="translated">可配置的错误处理对你的用户非常有用。考虑提供警告和调试消息的级别选择,将消息发送到单独文件的选项,指定错误处理程序的方法,或其他类似的功能。确保将所有这些选项都默认为最常见的用途。</target>
        </trans-unit>
        <trans-unit id="81fb8746ddaba4745cb47bc6c868c238d3f12698" translate="yes" xml:space="preserve">
          <source>Configuration Variables or Methods</source>
          <target state="translated">配置变量或方法</target>
        </trans-unit>
        <trans-unit id="d2fcd0c469689696cdc57b270bd37400e3e0e6c1" translate="yes" xml:space="preserve">
          <source>Configuration errors and errors in the option definitions are signalled using die() and will terminate the calling program unless the call to Getopt::Long::GetOptions() was embedded in &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt; { ...
}&lt;/code&gt; , or die() was trapped using &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; .</source>
          <target state="translated">配置错误和选项定义中的错误使用die（）发出信号，除非调用Getopt :: Long :: GetOptions（）嵌入 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt; { ... }&lt;/code&gt; 或die（）被捕获，否则它们将终止调用程序。 &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01782ddc9fc1147edd83eb2ff115b31fada6fafa" translate="yes" xml:space="preserve">
          <source>Configuration for individual distributions (</source>
          <target state="translated">单个分布的配置 (</target>
        </trans-unit>
        <trans-unit id="620eedd56ce9ab6e57edf826ebebcc6cc23b9756" translate="yes" xml:space="preserve">
          <source>Configuration for individual distributions (_Distroprefs_)</source>
          <target state="translated">单个分布的配置 (_Distroprefs_)</target>
        </trans-unit>
        <trans-unit id="5394ae422bdb720639203760041881561ff41485" translate="yes" xml:space="preserve">
          <source>Configuration options can be passed to the constructor:</source>
          <target state="translated">配置选项可以传递给构造函数。</target>
        </trans-unit>
        <trans-unit id="38b23d1375544f4a68ea9228188041f47459e054" translate="yes" xml:space="preserve">
          <source>Configuration variables</source>
          <target state="translated">配置变量</target>
        </trans-unit>
        <trans-unit id="792c81a4cfdcb5b45d688cb03c2fd2e816f86d44" translate="yes" xml:space="preserve">
          <source>Configure</source>
          <target state="translated">Configure</target>
        </trans-unit>
        <trans-unit id="5319105d548748be6bfc04e58d097068e24ec3c4" translate="yes" xml:space="preserve">
          <source>Configure Perl on OS/390</source>
          <target state="translated">在OS/390上配置Perl</target>
        </trans-unit>
        <trans-unit id="8c3578dc7c3bfda9e6cafe0a3dcc7133abe34a4d" translate="yes" xml:space="preserve">
          <source>Configure and perl need a way to invoke a C preprocessor. I have created a simple cover for cc which does the right thing. Without this, Configure will create its own wrapper which works, but it doesn't handle some of the command line arguments that perl will throw at it.</source>
          <target state="translated">Configure和perl需要一种方法来调用C预处理器。我已经为cc创建了一个简单的封面,它可以做正确的事情。如果不这样做,Configure将创建自己的封装器,它可以工作,但它不能处理perl将向它抛出的一些命令行参数。</target>
        </trans-unit>
        <trans-unit id="42f3effdfaee1be1f099b1b5ad94e5c21896a110" translate="yes" xml:space="preserve">
          <source>Configure notes: This function is called 'Perl_signbit' instead of a plain 'signbit' because it is easy to imagine a system having a signbit() function or macro that doesn't happen to work with our particular choice of NVs. We shouldn't just re-#define signbit as Perl_signbit and expect the standard system headers to be happy. Also, this is a no-context function (no pTHX_) because Perl_signbit() is usually re-#defined in perl.h as a simple macro call to the system's signbit(). Users should just always call Perl_signbit().</source>
          <target state="translated">配置说明。这个函数被称为'Perl_signbit'而不是普通的'signbit',因为很容易想象一个系统有一个signbit()函数或宏,而这个函数或宏恰好不能与我们所选择的特定NV一起工作。我们不应该只是重新#定义signbit为Perl_signbit,并期望标准的系统头文件能够满意。另外,这是一个无上下文函数(没有pTHX_),因为Perl_signbit()通常在perl.h中被重新#定义为对系统的signbit()的简单宏调用。用户应该总是调用Perl_signbit()。</target>
        </trans-unit>
        <trans-unit id="4f6173a649f1483a99a4687a3ffadbcdca70587d" translate="yes" xml:space="preserve">
          <source>Configure-time Options for Perl on Cygwin</source>
          <target state="translated">Cygwin上Perl的配置时间选项</target>
        </trans-unit>
        <trans-unit id="9df8ff6ed6cb175291b798f1b94a9c669317082c" translate="yes" xml:space="preserve">
          <source>Configured this way, single-character options can be bundled but long options &lt;b&gt;must&lt;/b&gt; always start with a double dash &lt;code&gt;--&lt;/code&gt; to avoid ambiguity. For example, when &lt;code&gt;vax&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;v&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; are all valid options,</source>
          <target state="translated">通过这种方式配置，可以捆绑单字符选项，但长选项&lt;b&gt;必须&lt;/b&gt;始终以双破折号开头 &lt;code&gt;--&lt;/code&gt; 避免歧义。例如，当 &lt;code&gt;vax&lt;/code&gt; ， &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;v&lt;/code&gt; 和 &lt;code&gt;x&lt;/code&gt; 均为有效选项时，</target>
        </trans-unit>
        <trans-unit id="95e3547b156067af12afba08b6daf72fe4ff1b22" translate="yes" xml:space="preserve">
          <source>Configuring Getopt::Long</source>
          <target state="translated">配置Getopt::Long</target>
        </trans-unit>
        <trans-unit id="205f634664a81d583aebe4d32b4cfaa368eaa173" translate="yes" xml:space="preserve">
          <source>Configuring lynx or ncftp for going through a firewall</source>
          <target state="translated">配置lynx或ncftp以通过防火墙。</target>
        </trans-unit>
        <trans-unit id="a90ca9c9438d0e03c655e7e421109dc9a2965820" translate="yes" xml:space="preserve">
          <source>Conflicting storage orders make an utter mess out of the numbers. If a little-endian host (Intel, VAX) stores 0x12345678 (305419896 in decimal), a big-endian host (Motorola, Sparc, PA) reads it as 0x78563412 (2018915346 in decimal). Alpha and MIPS can be either: Digital/Compaq used/uses them in little-endian mode; SGI/Cray uses them in big-endian mode. To avoid this problem in network (socket) connections use the &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; formats &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; , the &quot;network&quot; orders. These are guaranteed to be portable.</source>
          <target state="translated">冲突的存储顺序使数字完全混乱。如果小端主机（Intel，VAX）存储0x12345678（十进制为305419896），则大端主机（Motorola，Sparc，PA）将其读取为0x78563412（十进制2018915346）。Alpha和MIPS可以是：Digital / Compaq使用/在Little-Endian模式下使用；SGI / Cray在大端模式下使用它们。为避免在网络（套接字）连接中出现此问题，请使用 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 格式和 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 格式 &lt;code&gt;n&lt;/code&gt; 和 &lt;code&gt;N&lt;/code&gt; ，即&amp;ldquo;网络&amp;rdquo;顺序。这些保证是便携式的。</target>
        </trans-unit>
        <trans-unit id="7c5523655003f964e64fb217f9f8e4a760dcd771" translate="yes" xml:space="preserve">
          <source>Conflicts between parameters LIB, PREFIX and the various INSTALL* arguments are resolved so that:</source>
          <target state="translated">参数LIB、PREFIX和各种INSTALL*参数之间的冲突得到解决,这样:</target>
        </trans-unit>
        <trans-unit id="d58273d316d0bc21f48ecd5b6254bb29f9f6bf8e" translate="yes" xml:space="preserve">
          <source>Confused yet? It's time for an example program to show some of the things we've covered. This program finds prime numbers using threads.</source>
          <target state="translated">困惑了吗?是时候用一个例子程序来展示我们所讲的一些东西了。这个程序使用线程寻找质数。</target>
        </trans-unit>
        <trans-unit id="e96e2cb50db9a42b686132ae3630295f7ba8934b" translate="yes" xml:space="preserve">
          <source>Connecting to the server is only the first part of the process: once you have the connection, you have to use the server's language. Each server on the network has its own little command language that it expects as input. The string that we send to the server starting with &quot;GET&quot; is in HTTP syntax. In this case, we simply request each specified document. Yes, we really are making a new connection for each document, even though it's the same host. That's the way you always used to have to speak HTTP. Recent versions of web browsers may request that the remote server leave the connection open a little while, but the server doesn't have to honor such a request.</source>
          <target state="translated">连接到服务器只是过程的第一部分:一旦你有了连接,你就必须使用服务器的语言。网络上的每一台服务器都有自己的小命令语言,它期望作为输入。我们向服务器发送的以 &quot;GET &quot;开头的字符串是用HTTP语法。在这种情况下,我们只是请求每个指定的文档。是的,我们确实是为每个文档建立了一个新的连接,尽管它是同一个主机。这就是你过去总是要讲HTTP的方式。最近版本的Web浏览器可能会要求远程服务器将连接打开一会儿,但服务器不必尊重这样的请求。</target>
        </trans-unit>
        <trans-unit id="1e64457037d72f3af7e4c98e763af1778685b4a7" translate="yes" xml:space="preserve">
          <source>Consequently, if the code in the</source>
          <target state="translated">因此,如果在</target>
        </trans-unit>
        <trans-unit id="2aebd1c0023adb488842327316cfbc056a8738a1" translate="yes" xml:space="preserve">
          <source>Consider a character, say &lt;code&gt;H&lt;/code&gt; . It could appear with various marks around it, such as an acute accent, or a circumflex, or various hooks, circles, arrows,</source>
          <target state="translated">考虑一个角色，说 &lt;code&gt;H&lt;/code&gt; 。它周围可能会出现各种痕迹，例如尖锐的重音或扬抑符，或者各种钩子，圆圈，箭头，</target>
        </trans-unit>
        <trans-unit id="f87b1aebc18642da43916d9c7c0029ba1587fd12" translate="yes" xml:space="preserve">
          <source>Consider a function foo() in package pkg compiled outside a compartment but shared with it. Assume the compartment has a root package called 'Root'. If foo() contains an eval statement like eval '$foo = 1' then, normally, $pkg::foo will be set to 1. If foo() is called from the compartment (by whatever means) then instead of setting $pkg::foo, the eval will actually set $Root::pkg::foo.</source>
          <target state="translated">考虑一个在包 pkg 中的函数 foo(),它是在一个隔间之外编译的,但与隔间共享。假设这个隔间有一个名为 'Root' 的根包。如果 foo()包含一个 eval 语句,比如 eval '$foo=1',那么通常情况下,$pkg::foo 会被设置为 1。如果 foo()被从分包中调用 (不管用什么方法),那么这个 eval 语句将不会设置 $pkg::foo,而是实际设置 $Root::pkg::foo。</target>
        </trans-unit>
        <trans-unit id="fa0726375d47145ef9cbf1c119c720175b5cdb39" translate="yes" xml:space="preserve">
          <source>Consider always blessing objects in CLASSNAMEs that are mixed case. Namespaces with all lowercase names are considered reserved for Perl pragmata. Builtin types have all uppercase names. To prevent confusion, you may wish to avoid such package names as well. Make sure that CLASSNAME is a true value.</source>
          <target state="translated">考虑总是祝福CLASSNAMEs中的对象是混合大小写的。名字空间的名字全部是小写的,被认为是为Perl的pragmata保留的。Builtin类型的名字都是大写的。为了防止混淆,你可能希望也避免使用这样的包名。确保 CLASSNAME 是一个真值。</target>
        </trans-unit>
        <trans-unit id="54bd3e39ecc1dc0a3103a2a4bb188aab06a6068e" translate="yes" xml:space="preserve">
          <source>Consider arguments as file names; no search in directories will be performed.</source>
          <target state="translated">将参数视为文件名,不会在目录中进行搜索。</target>
        </trans-unit>
        <trans-unit id="1b1d13cd5ce92e946f7ab5b33dc6419aff0f850f" translate="yes" xml:space="preserve">
          <source>Consider that &quot;division by zero&quot; of Encode :)</source>
          <target state="translated">考虑到Encode的 &quot;除以零&quot;:)</target>
        </trans-unit>
        <trans-unit id="42926455b13e587b6e93dd752aad04492e788722" translate="yes" xml:space="preserve">
          <source>Consider the Perl code below</source>
          <target state="translated">请看下面的Perl代码</target>
        </trans-unit>
        <trans-unit id="010e07e2525e9ccf7d06cb1256121da84a80d2b8" translate="yes" xml:space="preserve">
          <source>Consider the autogenerated files as skeletons only, you may invent better interfaces than what h2xs could guess.</source>
          <target state="translated">把自动生成的文件只当做骨架,你可能会发明比h2xs能猜到的更好的接口。</target>
        </trans-unit>
        <trans-unit id="8650ada785e6a05ab5925372ee6ad4e84e025768" translate="yes" xml:space="preserve">
          <source>Consider the following Perl code:</source>
          <target state="translated">请看下面的Perl代码。</target>
        </trans-unit>
        <trans-unit id="7f74e12aabb1877452a7d53cc071e21357b26c18" translate="yes" xml:space="preserve">
          <source>Consider the following pattern. The numbers underneath show in which group the captured content will be stored.</source>
          <target state="translated">请考虑以下模式。下面的数字显示了捕获的内容将被存储在哪个组中。</target>
        </trans-unit>
        <trans-unit id="5599b31813d52e72ab7b0f81e5b0ee2cd936fffb" translate="yes" xml:space="preserve">
          <source>Consider the following scenario. You have a DBM database that you need to share with a third-party C application. The C application assumes that</source>
          <target state="translated">考虑以下情况。你有一个DBM数据库,需要与第三方C应用程序共享。这个C应用程序假设</target>
        </trans-unit>
        <trans-unit id="8fd75f493422859997cd7850cec39135120cb65b" translate="yes" xml:space="preserve">
          <source>Consider the implications.</source>
          <target state="translated">考虑到这些影响。</target>
        </trans-unit>
        <trans-unit id="72c370504fc887121d33e7c91d4e60dee9fc8d48" translate="yes" xml:space="preserve">
          <source>Consider the module &lt;code&gt;MyMod::Abc&lt;/code&gt; below.</source>
          <target state="translated">考虑下面的模块 &lt;code&gt;MyMod::Abc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91193a63d32f0407e30025add9e80a60522f7554" translate="yes" xml:space="preserve">
          <source>Consider these functions: &lt;code&gt;getusers&lt;/code&gt; returns a list of users somehow, and then &lt;code&gt;main&lt;/code&gt; throws away the first user on the list and prints the rest:</source>
          <target state="translated">考虑以下功能： &lt;code&gt;getusers&lt;/code&gt; 以某种方式返回用户列表，然后 &lt;code&gt;main&lt;/code&gt; 丢弃列表中的第一个用户，并打印其余用户：</target>
        </trans-unit>
        <trans-unit id="a6af64455c7f7fc0377e14c06fd26c8d88bd4457" translate="yes" xml:space="preserve">
          <source>Consider this carefully</source>
          <target state="translated">仔细考虑这个问题</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">考虑这个例子。</target>
        </trans-unit>
        <trans-unit id="bfa3c3c6eb24f57753daa498c1da469254839e82" translate="yes" xml:space="preserve">
          <source>Consider this function:</source>
          <target state="translated">考虑这个函数。</target>
        </trans-unit>
        <trans-unit id="8941a9b985d7af8702f49a4f16ae94cca0faaad4" translate="yes" xml:space="preserve">
          <source>Consider this line:</source>
          <target state="translated">考虑这条线。</target>
        </trans-unit>
        <trans-unit id="e6c30ae9cfc668295698d4bf00794eb1d360161b" translate="yes" xml:space="preserve">
          <source>Consider this pattern:</source>
          <target state="translated">考虑一下这个模式。</target>
        </trans-unit>
        <trans-unit id="1933a50a57bf352434dc1e181b868210ee85c8c1" translate="yes" xml:space="preserve">
          <source>Consider this rather facetious example, where we have used an XS version of the call_Subtract example above inside a destructor:</source>
          <target state="translated">考虑一下这个比较有面子的例子,在这个例子中,我们在一个destructor中使用了上面call_Subtract例子的XS版本。</target>
        </trans-unit>
        <trans-unit id="6cb9a94e2bea8da922c3c19cf684a0e47677d4e9" translate="yes" xml:space="preserve">
          <source>Consider this script, which has an error you may not notice immediately.</source>
          <target state="translated">考虑一下这个脚本,它有一个你可能不会立即注意到的错误。</target>
        </trans-unit>
        <trans-unit id="221f972e292aedaaa9907f3e013cc1a6d1499997" translate="yes" xml:space="preserve">
          <source>Consider this section as a guideline only, some other options of h2xs may better suit your needs.</source>
          <target state="translated">请将本节内容仅作为参考,其他一些h2xs的选择可能更适合您的需求。</target>
        </trans-unit>
        <trans-unit id="ef89846ebcc9e55f8e16c8d6eeaf74751bcc0834" translate="yes" xml:space="preserve">
          <source>Consider two possible matches, &lt;code&gt;AB&lt;/code&gt; and &lt;code&gt;A'B'&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;A'&lt;/code&gt; are substrings which can be matched by &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;B'&lt;/code&gt; are substrings which can be matched by &lt;code&gt;T&lt;/code&gt; .</source>
          <target state="translated">考虑两个可能的匹配， &lt;code&gt;AB&lt;/code&gt; 和 &lt;code&gt;A'B'&lt;/code&gt; ， &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;A'&lt;/code&gt; 是可以与 &lt;code&gt;S&lt;/code&gt; 匹配的子字符串， &lt;code&gt;B&lt;/code&gt; 和 &lt;code&gt;B'&lt;/code&gt; 是可以与 &lt;code&gt;T&lt;/code&gt; 匹配的子字符串。</target>
        </trans-unit>
        <trans-unit id="9492d2cabe7fd9e4932b42a71ed433789fc97e73" translate="yes" xml:space="preserve">
          <source>Consider using &quot;real&quot; multidimensional arrays as described in &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;.</source>
          <target state="translated">考虑使用&lt;a href=&quot;perllol&quot;&gt;perllol中&lt;/a&gt;描述的&amp;ldquo;真实&amp;rdquo;多维数组。</target>
        </trans-unit>
        <trans-unit id="88bf0b769dc7bb2c0aaed54218c7a09d588e237d" translate="yes" xml:space="preserve">
          <source>Consider what happens during execution of the BEGIN block. At this point the BEGIN block has already been compiled, but the body of &lt;code&gt;foo()&lt;/code&gt; is still being compiled. The new value of &lt;code&gt;$^H&lt;/code&gt; will therefore be visible only while the body of &lt;code&gt;foo()&lt;/code&gt; is being compiled.</source>
          <target state="translated">考虑执行BEGIN块期间发生了什么。此时，BEGIN块已经被编译，但是 &lt;code&gt;foo()&lt;/code&gt; 的主体仍在编译中。因此，仅在编译 &lt;code&gt;foo()&lt;/code&gt; 的主体时， &lt;code&gt;$^H&lt;/code&gt; 的新值才可见。</target>
        </trans-unit>
        <trans-unit id="75e291169a2ebb63c935a5de7382990c0513d618" translate="yes" xml:space="preserve">
          <source>Consider:</source>
          <target state="translated">Consider:</target>
        </trans-unit>
        <trans-unit id="83e396f6992f0832c8075c73a610b8e2aaff7469" translate="yes" xml:space="preserve">
          <source>Considerations for module design and coding:</source>
          <target state="translated">模块设计和编码的考虑因素;</target>
        </trans-unit>
        <trans-unit id="5413348d3aaa513d685bd38624f77e878e74a24a" translate="yes" xml:space="preserve">
          <source>Consistent naming of subroutines or methods</source>
          <target state="translated">子程序或方法的统一命名。</target>
        </trans-unit>
        <trans-unit id="2d686acf592debeada13314ea153c3c8cc7487e9" translate="yes" xml:space="preserve">
          <source>Constant Folding</source>
          <target state="translated">恒定折叠</target>
        </trans-unit>
        <trans-unit id="20e7a47ab29e19ba135c447b4536a0bd6e1d82dd" translate="yes" xml:space="preserve">
          <source>Constant Functions</source>
          <target state="translated">常量函数</target>
        </trans-unit>
        <trans-unit id="d83ebf1e43cbbe5eb7aa831bfb0f3e3251894c92" translate="yes" xml:space="preserve">
          <source>Constant Interface</source>
          <target state="translated">恒定接口</target>
        </trans-unit>
        <trans-unit id="05b0c81a6abce35ba0658d6d8b023f51626d6394" translate="yes" xml:space="preserve">
          <source>Constant subs can be created with &lt;code&gt;newCONSTSUB&lt;/code&gt; or as described in &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;newCONSTSUB&lt;/code&gt; 或如&lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub&lt;/a&gt;中的&amp;ldquo; 常量函数&amp;rdquo;中所述创建常量子。</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="9e611a824a8183e220d4a7c0d0aa3bafaf2b538a" translate="yes" xml:space="preserve">
          <source>Constants belong to the package they are defined in. To refer to a constant defined in another package, specify the full package name, as in &lt;code&gt;Some::Package::CONSTANT&lt;/code&gt; . Constants may be exported by modules, and may also be called as either class or instance methods, that is, as &lt;code&gt;Some::Package-&amp;gt;CONSTANT&lt;/code&gt; or as &lt;code&gt;$obj-&amp;gt;CONSTANT&lt;/code&gt; where &lt;code&gt;$obj&lt;/code&gt; is an instance of &lt;code&gt;Some::Package&lt;/code&gt; . Subclasses may define their own constants to override those in their base class.</source>
          <target state="translated">常量属于在其定义的包中。要引用在另一个包中定义的常量，请指定完整的包名，如 &lt;code&gt;Some::Package::CONSTANT&lt;/code&gt; 。常量可以由模块导出，也可以称为类或实例方法，即，称为 &lt;code&gt;Some::Package-&amp;gt;CONSTANT&lt;/code&gt; 或 &lt;code&gt;$obj-&amp;gt;CONSTANT&lt;/code&gt; ，其中 &lt;code&gt;$obj&lt;/code&gt; 是 &lt;code&gt;Some::Package&lt;/code&gt; 的实例。子类可以定义自己的常量以覆盖其基类中的常量。</target>
        </trans-unit>
        <trans-unit id="a21cfbc2db87f9182c549bff7c8f35745bf20234" translate="yes" xml:space="preserve">
          <source>Constants defined using this module cannot be interpolated into strings like variables. However, concatenation works just fine:</source>
          <target state="translated">使用该模块定义的常量不能像变量一样插值成字符串。然而,连接的工作就很好。</target>
        </trans-unit>
        <trans-unit id="8ece936e7325f2407cd17ba720f075223bee4d90" translate="yes" xml:space="preserve">
          <source>Constants for Locale codes</source>
          <target state="translated">本地化代码的常量</target>
        </trans-unit>
        <trans-unit id="90018db3a64f1b35ef89d41c0084cc18166e6bd9" translate="yes" xml:space="preserve">
          <source>Constants giving the special &lt;code&gt;AF_INET6&lt;/code&gt; addresses for wildcard and local loopback.</source>
          <target state="translated">为通配符和本地环回提供特殊的 &lt;code&gt;AF_INET6&lt;/code&gt; 地址的常数。</target>
        </trans-unit>
        <trans-unit id="3f844ade6411f17a07d09e25894b5b9acfe42b33" translate="yes" xml:space="preserve">
          <source>Constants giving the special &lt;code&gt;AF_INET&lt;/code&gt; addresses for wildcard, broadcast, local loopback, and invalid addresses.</source>
          <target state="translated">为通配符，广播，本地环回和无效地址提供特殊 &lt;code&gt;AF_INET&lt;/code&gt; 地址的常数。</target>
        </trans-unit>
        <trans-unit id="7f1778f60074f1115e51de3d87a3332a8d7fc830" translate="yes" xml:space="preserve">
          <source>Constants may be lists of more (or less) than one value. A constant with no values evaluates to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in scalar context. Note that constants with more than one value do</source>
          <target state="translated">常数可以是大于（或小于）一个值的列表。没有值的常量在标量上下文中计算为 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。请注意，具有多个值的常数会</target>
        </trans-unit>
        <trans-unit id="355a3d53a7e14f7a729e8f91686b85505d33df33" translate="yes" xml:space="preserve">
          <source>Construct a complete filespec.</source>
          <target state="translated">构建一个完整的filespec。</target>
        </trans-unit>
        <trans-unit id="aec9f3529c9af4370344830a20d26a1ac2ddabe7" translate="yes" xml:space="preserve">
          <source>Construct and return cache object.</source>
          <target state="translated">构造并返回缓存对象。</target>
        </trans-unit>
        <trans-unit id="da33e1b7e0c4eae1911ee4a15280f0990e1a6115" translate="yes" xml:space="preserve">
          <source>Construction</source>
          <target state="translated">Construction</target>
        </trans-unit>
        <trans-unit id="0c9d593aa97f6e3f26bb7e4cf664176f5ffd4019" translate="yes" xml:space="preserve">
          <source>Construction Methods</source>
          <target state="translated">施工方法</target>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="ef269264e27df02b9462bb6740ca823b7e335569" translate="yes" xml:space="preserve">
          <source>Constructor Options</source>
          <target state="translated">构造函数选项</target>
        </trans-unit>
        <trans-unit id="94b976a5ab3f62f6c26557a2c4dbf4bbae664372" translate="yes" xml:space="preserve">
          <source>Constructor and Tailoring</source>
          <target state="translated">建筑师和裁缝</target>
        </trans-unit>
        <trans-unit id="60a5c966a71a24034f9238685790a526710ef75d" translate="yes" xml:space="preserve">
          <source>Constructors</source>
          <target state="translated">Constructors</target>
        </trans-unit>
        <trans-unit id="d746fdc33e3789e1ca29174d30fb76d7df4e6835" translate="yes" xml:space="preserve">
          <source>Constructs a state op (COP). The state op is normally a &lt;code&gt;nextstate&lt;/code&gt; op, but will be a &lt;code&gt;dbstate&lt;/code&gt; op if debugging is enabled for currently-compiled code. The state op is populated from &lt;code&gt;PL_curcop&lt;/code&gt; (or &lt;code&gt;PL_compiling&lt;/code&gt; ). If</source>
          <target state="translated">构造状态op（COP）。状态op通常是 &lt;code&gt;nextstate&lt;/code&gt; op，但是如果为当前编译的代码启用调试，则将是 &lt;code&gt;dbstate&lt;/code&gt; op。状态op由 &lt;code&gt;PL_curcop&lt;/code&gt; （或 &lt;code&gt;PL_compiling&lt;/code&gt; ）填充。如果</target>
        </trans-unit>
        <trans-unit id="252503586ad552246e785267ad1b402b11d9c378" translate="yes" xml:space="preserve">
          <source>Constructs and returns a &lt;code&gt;range&lt;/code&gt; op, with subordinate &lt;code&gt;flip&lt;/code&gt; and &lt;code&gt;flop&lt;/code&gt; ops.</source>
          <target state="translated">构造并返回 &lt;code&gt;range&lt;/code&gt; 运算符，以及从属 &lt;code&gt;flip&lt;/code&gt; 和 &lt;code&gt;flop&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="7931ff4d1b3865a020bb44b64b70244e6b1d8e26" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new pad name.</source>
          <target state="translated">构造并返回一个新的焊盘名称。</target>
        </trans-unit>
        <trans-unit id="957cf4dcc64056248a5fc94c4f5122d5b4253099" translate="yes" xml:space="preserve">
          <source>Constructs and returns a new pad name. Only use this function for names that refer to outer lexicals. (See also &lt;a href=&quot;#newPADNAMEpvn&quot;&gt;newPADNAMEpvn&lt;/a&gt;.)</source>
          <target state="translated">构造并返回一个新的填充名称。仅将此函数用于引用外部词汇的名称。（另请参见&lt;a href=&quot;#newPADNAMEpvn&quot;&gt;newPADNAMEpvn&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="2e65b217a955ea30db7dba5262fee4bb7d3f1ee4" translate="yes" xml:space="preserve">
          <source>Constructs and returns an op to access &lt;code&gt;$_&lt;/code&gt; , either as a lexical variable (if declared as &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; ) in the current scope, or the global &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">构造并返回一个操作来访问 &lt;code&gt;$_&lt;/code&gt; ，或者作为当前范围内的词法变量（如果声明为 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; ）或全局 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a4f89b89092a94b632bbcc30495e0f779fb1b98" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a conditional-expression (&lt;code&gt;cond_expr&lt;/code&gt; ) op.</source>
          <target state="translated">构造，检查并返回条件表达式（ &lt;code&gt;cond_expr&lt;/code&gt; ）op。</target>
        </trans-unit>
        <trans-unit id="a15e166f7981a3b6de1c8fa20addbc3d348e0378" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a logical (flow control) op.</source>
          <target state="translated">构造、检查并返回一个逻辑(流控制)运算。</target>
        </trans-unit>
        <trans-unit id="f0264af3189ddcf2b7f625626d2ac18862a78a27" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a loop-exiting op (such as &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">构造，检查并返回循环退出操作（例如 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="30e773cac5de3784659768f91ee0dd8d9488d2fc" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns a new &lt;code&gt;stub&lt;/code&gt; op, which represents an empty list expression.</source>
          <target state="translated">构造，检查并返回一个新的 &lt;code&gt;stub&lt;/code&gt; op，它表示一个空列表表达式。</target>
        </trans-unit>
        <trans-unit id="c12d66e7978fb577b34088dcb70b91bfaa6d01da" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an &lt;code&gt;lslice&lt;/code&gt; (list slice) op.</source>
          <target state="translated">构造，检查并返回 &lt;code&gt;lslice&lt;/code&gt; （列表切片）op。</target>
        </trans-unit>
        <trans-unit id="ba48f5f9a71999341342f24283dfacd3a8b711b1" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an assignment op.</source>
          <target state="translated">构造、检查并返回一个赋值操作。</target>
        </trans-unit>
        <trans-unit id="d9f565e2e42ef02d170588ec129f3ce0451ec355" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any base type (any type that has no extra fields).</source>
          <target state="translated">构造、检查并返回任何基类型(任何没有额外字段的类型)的op。</target>
        </trans-unit>
        <trans-unit id="01c70184d1741ef212b465d435e97985417a8b0c" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any binary type.</source>
          <target state="translated">构造、检查并返回任何二进制类型的op。</target>
        </trans-unit>
        <trans-unit id="eaa434ea30a23789450d348f36bdecb9028e1240" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any list type.</source>
          <target state="translated">构造、检查并返回任意列表类型的操作。</target>
        </trans-unit>
        <trans-unit id="f0e39d7609ebd71139a1fdb8c22c888dbc1b3832" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any pattern matching type.</source>
          <target state="translated">构造、检查并返回任何模式匹配类型的op。</target>
        </trans-unit>
        <trans-unit id="5458dc98c9452c937824a796bdb326f5e0961a85" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves a reference to a pad element.</source>
          <target state="translated">构造、检查并返回一个涉及到pad元素引用的任何类型的op。</target>
        </trans-unit>
        <trans-unit id="40ba5d8fe10410945734740719237761dd251d13" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded C-level pointer (PV).</source>
          <target state="translated">构造、检查并返回一个涉及嵌入式C级指针(PV)的任何类型的操作。</target>
        </trans-unit>
        <trans-unit id="97dc9643deaf81478aaf21202427a04fd76571a8" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded SV.</source>
          <target state="translated">构造、检查并返回一个涉及嵌入式SV的任何类型的操作。</target>
        </trans-unit>
        <trans-unit id="11846120c71e3d2b822e351f27e91e0b600f0d70" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any type that involves an embedded reference to a GV.</source>
          <target state="translated">构造、检查并返回一个涉及到GV内嵌引用的任何类型的操作。</target>
        </trans-unit>
        <trans-unit id="b1d063b1956e56be8e0dab06b4dad3b2a72f8365" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of any unary type.</source>
          <target state="translated">构造、检查并返回任意单利类型的 op。</target>
        </trans-unit>
        <trans-unit id="be6ef2fa148c74ce9131470cb7120ad15eeee6a2" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of method type with a constant method name.</source>
          <target state="translated">构造、检查并返回一个具有常量方法名的方法类型的操作。</target>
        </trans-unit>
        <trans-unit id="d3dad86210e9b0dd94c41f8743c265b479cf1818" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op of method type with a method name evaluated at runtime.</source>
          <target state="translated">构造、检查并返回一个方法类型的 op,其方法名在运行时评估。</target>
        </trans-unit>
        <trans-unit id="4ac910e3116c4e1a0b4ad7257fc6a8a1ad7ea627" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;foreach&lt;/code&gt; loop (iteration through a list of values). This is a heavyweight loop, with structure that allows exiting the loop by &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and suchlike.</source>
          <target state="translated">构造，检查并返回一个表达 &lt;code&gt;foreach&lt;/code&gt; 循环（通过值列表迭代）的操作树。这是一个重量级的循环，其结构允许在 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 退出等。</target>
        </trans-unit>
        <trans-unit id="55a13424c4ba2a08e5a59cecb68e29d3affe0ee4" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;given&lt;/code&gt; block.</source>
          <target state="translated">构造，检查并返回表示 &lt;code&gt;given&lt;/code&gt; 块的操作树。</target>
        </trans-unit>
        <trans-unit id="fa87d1a87fb2d4ab5d631e62f196faf139c56915" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;when&lt;/code&gt; block.</source>
          <target state="translated">构造，检查并返回表示 &lt;code&gt;when&lt;/code&gt; 块的op树。</target>
        </trans-unit>
        <trans-unit id="e9e325766c242f95f44aebbca8d081041fa05bdb" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a &lt;code&gt;while&lt;/code&gt; loop. This is a heavyweight loop, with structure that allows exiting the loop by &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and suchlike.</source>
          <target state="translated">构造，检查并返回表示 &lt;code&gt;while&lt;/code&gt; 循环的op树。这是一个重量级的循环，其结构允许在 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 退出等。</target>
        </trans-unit>
        <trans-unit id="c90b8188bc17094c3efa9918fac996ca1396dace" translate="yes" xml:space="preserve">
          <source>Constructs, checks, and returns an op tree expressing a loop. This is only a loop in the control flow through the op tree; it does not have the heavyweight loop structure that allows exiting the loop by &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; and suchlike.</source>
          <target state="translated">构造，检查并返回表示循环的op树。这只是通过操作树的控制流中的一个循环。它没有重量级的循环结构，不允许 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 退出循环。</target>
        </trans-unit>
        <trans-unit id="8c8c9bb3c9bf3bfa59be4b5278462422ffe70ce9" translate="yes" xml:space="preserve">
          <source>Consult &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请查阅&lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;，&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;和&lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ec12aed4c398eee706a2f38aa675e4e5cfbdd63" translate="yes" xml:space="preserve">
          <source>Consult the match table in &lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;Smartmatch Operator in perlop&lt;/a&gt; for details of when overloading is invoked.</source>
          <target state="translated">有关调用何时重载的详细信息，请&lt;a href=&quot;perlop#Smartmatch-Operator&quot;&gt;参阅perlop的Smartmatch Operator中&lt;/a&gt;的匹配表。</target>
        </trans-unit>
        <trans-unit id="ca43cc0a723d7c90161c4e5b539040ca4d3086b1" translate="yes" xml:space="preserve">
          <source>Consume text in the lexer buffer, from &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; up to</source>
          <target state="translated">在lexer缓冲区中使用文本，从&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt;一直到</target>
        </trans-unit>
        <trans-unit id="712ade694782b4208a7818ba8fcb3c706be82adc" translate="yes" xml:space="preserve">
          <source>Consuming all (or nearly all) available memory.</source>
          <target state="translated">消耗所有(或几乎所有)可用内存。</target>
        </trans-unit>
        <trans-unit id="bda96c5452873306650630c6976f525d6dc4916b" translate="yes" xml:space="preserve">
          <source>Contact a system administrator (preferably your own) and report the exact error message you get, and ask them to read this same documentation you are now reading. They should be able to check whether there is something wrong with the locale configuration of the system. The &lt;a href=&quot;#Finding-locales&quot;&gt;Finding locales&lt;/a&gt; section is unfortunately a bit vague about the exact commands and places because these things are not that standardized.</source>
          <target state="translated">与系统管理员（最好是您自己的）联系，并报告您收到的确切错误消息，并请他们阅读您现在正在阅读的同一文档。他们应该能够检查系统的语言环境配置是否存在问题。不幸的是，&amp;ldquo; &lt;a href=&quot;#Finding-locales&quot;&gt;查找语言环境&amp;rdquo;&lt;/a&gt;部分对确切的命令和位置有些含糊，因为这些内容尚未标准化。</target>
        </trans-unit>
        <trans-unit id="5a0be3e3d687fc1f8934755e52704c0c7e6471d4" translate="yes" xml:space="preserve">
          <source>Contact the author on &lt;code&gt;rainer@mathematik.uni-bielefeld.de&lt;/code&gt; .</source>
          <target state="translated">通过 &lt;code&gt;rainer@mathematik.uni-bielefeld.de&lt;/code&gt; 与作者联系。</target>
        </trans-unit>
        <trans-unit id="d62bfc367abe11a79b1d86ac7e31441eab7366c1" translate="yes" xml:space="preserve">
          <source>Contained in the file specified by the first filename on the command line. (Note that systems supporting the &lt;code&gt;#!&lt;/code&gt; notation invoke interpreters this way. See &lt;a href=&quot;#Location-of-Perl&quot;&gt;Location of Perl&lt;/a&gt;.)</source>
          <target state="translated">包含在命令行中第一个文件名指定的文件中。（请注意，支持 &lt;code&gt;#!&lt;/code&gt; 表示法的系统以这种方式调用解释器。请参见&lt;a href=&quot;#Location-of-Perl&quot;&gt;Perl的位置&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="537701da726a37f50cd1190981e9266174458d7a" translate="yes" xml:space="preserve">
          <source>Contains routines that emulate low-level math functions in BigInt, e.g. optional routines the low-level math package does not provide on its own.</source>
          <target state="translated">包含模拟BigInt中低级数学函数的例程,例如低级数学包本身不提供的可选例程。</target>
        </trans-unit>
        <trans-unit id="a8140068c6564fc99ecc142e17f391b1e09f6ccb" translate="yes" xml:space="preserve">
          <source>Contains the arguments of current subroutine, or the &lt;code&gt;@ARGV&lt;/code&gt; array if in the toplevel context.</source>
          <target state="translated">包含当前子例程的参数，如果在顶级上下文中，则包含 &lt;code&gt;@ARGV&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="9f2a5da0585f47140af9323564aa8fb7d1d06cc4" translate="yes" xml:space="preserve">
          <source>Contains the name of the current file when reading from &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">从 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 读取时包含当前文件的名称。</target>
        </trans-unit>
        <trans-unit id="6178dce23f2a4c5ea5896dcce1de535426b55d99" translate="yes" xml:space="preserve">
          <source>Contains the name of the header to be included to get va_dcl definition. Typically one of</source>
          <target state="translated">包含要获取va_dcl定义的头的名称。通常情况下,其中一个</target>
        </trans-unit>
        <trans-unit id="d1e0c34957a016a1b3c12f032cd551c8908cd506" translate="yes" xml:space="preserve">
          <source>Contains the name of the program being executed.</source>
          <target state="translated">包含正在执行的程序名称。</target>
        </trans-unit>
        <trans-unit id="a2d63762428e57520df2f4f29a1e038ab7994558" translate="yes" xml:space="preserve">
          <source>Contains the prefix to use for tagging variable names in the output. The default is &quot;VAR&quot;.</source>
          <target state="translated">包含用于标记输出中的变量名的前缀。默认为 &quot;VAR&quot;。</target>
        </trans-unit>
        <trans-unit id="0e2da210cc9bb0a18aac5aab8614cb8e5b7b6dff" translate="yes" xml:space="preserve">
          <source>Contains the subpattern from the corresponding set of capturing parentheses from the last successful pattern match, not counting patterns matched in nested blocks that have been exited already.</source>
          <target state="translated">包含上一次成功的模式匹配中捕获小括号中对应的子模式,不计算已经退出的嵌套块中匹配的模式。</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="9cb23f093a42f57fb6e20b27af11bf8e322e39c5" translate="yes" xml:space="preserve">
          <source>Continent | |--&amp;gt;Country | |--&amp;gt;[state/province] | |--&amp;gt;ftp | |--&amp;gt;[http]</source>
          <target state="translated">大陆| |-&amp;gt;国家| |-&amp;gt; [州/省] | |-&amp;gt; ftp | |-&amp;gt; [http]</target>
        </trans-unit>
        <trans-unit id="5eba0b3f0a46323a9b3b38a065a8cf6fcd45e0eb" translate="yes" xml:space="preserve">
          <source>Continue until the return from the current subroutine. Dump the return value if the &lt;code&gt;PrintRet&lt;/code&gt; option is set (default).</source>
          <target state="translated">继续直到从当前子例程返回为止。如果设置了 &lt;code&gt;PrintRet&lt;/code&gt; 选项（默认），则转储返回值。</target>
        </trans-unit>
        <trans-unit id="8cfbf2d4c02ef7cbf2f81d0785ff1541fec7f195" translate="yes" xml:space="preserve">
          <source>Continue, optionally inserting a one-time-only breakpoint at the specified line or subroutine.</source>
          <target state="translated">继续,可选择在指定的行或子程序处插入一个一次性的断点。</target>
        </trans-unit>
        <trans-unit id="8a7a39f29f66ddaa64957e3237a6a6d6ce7714c5" translate="yes" xml:space="preserve">
          <source>Contractions beginning with the specified characters are suppressed, even if those contractions are defined in &lt;code&gt;table&lt;/code&gt; .</source>
          <target state="translated">即使在 &lt;code&gt;table&lt;/code&gt; 中定义了以指定字符开头的收缩，这些收缩也会被抑制。</target>
        </trans-unit>
        <trans-unit id="f182d17ce2e9b56202114ddc3d06d6361dea7a8d" translate="yes" xml:space="preserve">
          <source>Contrary to popular belief, Perl 6 and Perl 5 peacefully coexist with one another. Perl 6 has proven to be a fascinating source of ideas for those using Perl 5 (the &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; object system is a well-known example). There is overlap in the communities, and this overlap fosters the tradition of sharing and borrowing that have been instrumental to Perl's success. The current leading implementation of Perl 6 is Rakudo, and you can learn more about it at &lt;a href=&quot;http://rakudo.org&quot;&gt;http://rakudo.org&lt;/a&gt;.</source>
          <target state="translated">与流行的看法相反，Perl 6和Perl 5彼此和平共处。对于使用Perl 5的人，Perl 6已被证明是一种引人入胜的思想源（&lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt;对象系统是一个著名的示例）。社区之间存在重叠，并且这种重叠形成了共享和借用的传统，这对Perl的成功至关重要。目前Perl 6的主要实现是Rakudo，您可以在&lt;a href=&quot;http://rakudo.org&quot;&gt;http://rakudo.org上&lt;/a&gt;了解更多有关它的信息。</target>
        </trans-unit>
        <trans-unit id="1cc2fb5710ee22531776c8ba9e55098e2618c67c" translate="yes" xml:space="preserve">
          <source>Contrast that with an independent subexpression:</source>
          <target state="translated">对比一下独立子表达。</target>
        </trans-unit>
        <trans-unit id="69735e4ec537e4e29ad052c50c3613321af3383c" translate="yes" xml:space="preserve">
          <source>Contrast this with the following make_adder() function, in which the returned anonymous function contains a reference to a lexical variable outside the scope of that function itself. Such a reference requires that Perl return a proper closure, thus locking in for all time the value that the lexical had when the function was created.</source>
          <target state="translated">与下面的make_adder()函数形成鲜明对比,在这个函数中,返回的匿名函数包含了一个对函数本身范围之外的词法变量的引用。这样的引用要求Perl返回一个适当的闭包,从而永远锁定了函数创建时词法变量的值。</target>
        </trans-unit>
        <trans-unit id="e16f6173d03c0c8b09cdd1d2ddfa6f13bebfd052" translate="yes" xml:space="preserve">
          <source>Control Flow Utilities (callbacks and exceptions etc)</source>
          <target state="translated">控制流实用程序(回调和异常等)</target>
        </trans-unit>
        <trans-unit id="d8e3def8f1fded2e3eff4c8ea59924177caf98dc" translate="yes" xml:space="preserve">
          <source>Control VMS-specific language features</source>
          <target state="translated">控制VMS特有的语言功能</target>
        </trans-unit>
        <trans-unit id="bce115b0c925643288d6d66089149032ada8c603" translate="yes" xml:space="preserve">
          <source>Control characters</source>
          <target state="translated">控制字符</target>
        </trans-unit>
        <trans-unit id="b7fe68fe8faa99ef764732f95206a72acbe672ba" translate="yes" xml:space="preserve">
          <source>Control characters can be escaped with &lt;code&gt;\c&lt;/code&gt; , so that a control-Z character would be matched with &lt;code&gt;\cZ&lt;/code&gt; . The escape sequence &lt;code&gt;\Q&lt;/code&gt; ...&lt;code&gt;\E&lt;/code&gt; quotes, or protects most non-alphabetic characters. For instance,</source>
          <target state="translated">控制字符可以使用 &lt;code&gt;\c&lt;/code&gt; 进行转义，以便控制Z字符与 &lt;code&gt;\cZ&lt;/code&gt; 匹配。转义序列 &lt;code&gt;\Q&lt;/code&gt; ... &lt;code&gt;\E&lt;/code&gt; 引用或保护大多数非字母字符。例如，</target>
        </trans-unit>
        <trans-unit id="021626ea5dbee24ff07ea2691bf82bb74b7a5674" translate="yes" xml:space="preserve">
          <source>Control characters don't produce output as such, but instead usually control the terminal somehow: for example, newline and backspace are control characters. On ASCII platforms, in the ASCII range, characters whose code points are between 0 and 31 inclusive, plus 127 (&lt;code&gt;DEL&lt;/code&gt; ) are control characters; on EBCDIC platforms, their counterparts are control characters.</source>
          <target state="translated">控制字符不会像这样产生输出，而是通常以某种方式控制终端：例如，换行符和退格键是控制字符。上ASCII平台上，在ASCII范围，其字符的码点0和31包容，加127（之间 &lt;code&gt;DEL&lt;/code&gt; ）是控制字符; 在EBCDIC平台上，其对应字符是控制字符。</target>
        </trans-unit>
        <trans-unit id="c0323bcd19431aa40d48a7a04e563e491b5de2b5" translate="yes" xml:space="preserve">
          <source>Control sort() behaviour</source>
          <target state="translated">控制排序()行为</target>
        </trans-unit>
        <trans-unit id="6eed236126d30fd4de8e539b1434bde859966005" translate="yes" xml:space="preserve">
          <source>Control the filetest permission operators</source>
          <target state="translated">控制文件测试权限操作符</target>
        </trans-unit>
        <trans-unit id="1a2eedb1b60e1d8a80a133e954e55be108ac924a" translate="yes" xml:space="preserve">
          <source>Control whether the file is unlinked when the object goes out of scope. The file is removed if this value is true and $KEEP_ALL is not.</source>
          <target state="translated">控制当对象超出范围时,文件是否被取消链接。如果该值为真,而$KEEP_ALL不为真,则文件将被删除。</target>
        </trans-unit>
        <trans-unit id="e9597894a326a5dddbc5dee41019e4d31b7362ce" translate="yes" xml:space="preserve">
          <source>Controlling Warnings from the Command Line</source>
          <target state="translated">从命令行控制警告</target>
        </trans-unit>
        <trans-unit id="68987a6a2f290ee6ca2caa6b3e7b36432344b22a" translate="yes" xml:space="preserve">
          <source>Controlling access: lock()</source>
          <target state="translated">控制访问:lock()</target>
        </trans-unit>
        <trans-unit id="a1e94cef9625b439090d57cc70615fae34127ab7" translate="yes" xml:space="preserve">
          <source>Controlling input buffering is a remarkably system-dependent matter. On many systems, you can just use the &lt;b&gt;stty&lt;/b&gt; command as shown in &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;, but as you see, that's already getting you into portability snags.</source>
          <target state="translated">控制输入​​缓冲是非常依赖系统的事情。在许多系统上，您只能使用&lt;a href=&quot;functions/getc&quot;&gt;getc中&lt;/a&gt;所示的&lt;b&gt;stty&lt;/b&gt;命令，但是如您所见，这已经使您陷入了可移植性障碍。</target>
        </trans-unit>
        <trans-unit id="d20f10fc399adc1e8262f1893ceb51478f185a6b" translate="yes" xml:space="preserve">
          <source>Controlling where the test output goes.</source>
          <target state="translated">控制测试输出的去向。</target>
        </trans-unit>
        <trans-unit id="07da5ac1184a4498e39e115db900514920d805cf" translate="yes" xml:space="preserve">
          <source>Controls how certain regex optimisations are applied and how much memory they utilize. This value by default is 65536 which corresponds to a 512kB temporary cache. Set this to a higher value to trade memory for speed when matching large alternations. Set it to a lower value if you want the optimisations to be as conservative of memory as possible but still occur, and set it to a negative value to prevent the optimisation and conserve the most memory. Under normal situations this variable should be of no interest to you.</source>
          <target state="translated">控制某些regex优化的应用方式以及它们所占用的内存。该值默认为65536,相当于512kB的临时缓存。将其设置为一个较高的值,以便在匹配大型交替时以内存换速度。如果想让优化尽可能的节约内存但仍然发生,则设置为较低的值,设置为负值则可以防止优化,节约最多的内存。在正常情况下,这个变量应该对你不感兴趣。</target>
        </trans-unit>
        <trans-unit id="554cef6ea070153a4ee1bebb92008fd6058cf45d" translate="yes" xml:space="preserve">
          <source>Controls the degree to which the output can be &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed to recreate the supplied reference structures. Setting it to 1 will output additional perl statements that will correctly recreate nested references. The default is 0.</source>
          <target state="translated">控制可以 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 输出以重新创建提供的参考结构的程度。将其设置为1将输出其他perl语句，这些语句将正确地重新创建嵌套引用。默认值为0。</target>
        </trans-unit>
        <trans-unit id="acfa684e2caf08a3da5e3ef30109246db004e5da" translate="yes" xml:space="preserve">
          <source>Controls the lengths to which the module will go to check the safety of the temporary file or directory before proceeding. Options are:</source>
          <target state="translated">控制模块在继续前检查临时文件或目录的安全程度。选项有:</target>
        </trans-unit>
        <trans-unit id="0ca7717f12fe26367883aafa8d3fbe334c1b18a2" translate="yes" xml:space="preserve">
          <source>Controls the style of indentation. It can be set to 0, 1, 2 or 3. Style 0 spews output without any newlines, indentation, or spaces between list items. It is the most compact format possible that can still be called valid perl. Style 1 outputs a readable form with newlines but no fancy indentation (each level in the structure is simply indented by a fixed amount of whitespace). Style 2 (the default) outputs a very readable form which takes into account the length of hash keys (so the hash value lines up). Style 3 is like style 2, but also annotates the elements of arrays with their index (but the comment is on its own line, so array output consumes twice the number of lines). Style 2 is the default.</source>
          <target state="translated">控制缩进的样式,可以设置为0、1、2或3。它可以设置为0、1、2或3。风格0的输出没有任何换行、缩进或列表项之间的空格。这是最紧凑的格式,仍然可以被称为有效的perl。样式1输出一个可读的形式,有换行,但没有花哨的缩进(结构中的每一级都是简单地缩进一个固定数量的空白)。样式2(默认)输出一个非常可读的表格,它考虑到了哈希键的长度(所以哈希值的行数)。样式3就像样式2一样,但是也用它们的索引来注释数组的元素(但是注释是在它自己的行上,所以数组的输出要消耗两倍的行数)。样式2是默认的。</target>
        </trans-unit>
        <trans-unit id="22a31fdc3bd2e052c43c5ff90f54688767846776" translate="yes" xml:space="preserve">
          <source>Controls whether debugging messages should be enabled.</source>
          <target state="translated">控制是否应该启用调试信息。</target>
        </trans-unit>
        <trans-unit id="e34cd6a1d6fc0675d9cf236e50c7a40d4f7e0985" translate="yes" xml:space="preserve">
          <source>Controls whether temporary files and directories should be retained regardless of any instructions in the program to remove them automatically. This is useful for debugging but should not be used in production code.</source>
          <target state="translated">控制是否应该保留临时文件和目录,不管程序中是否有自动删除它们的指令。这对调试很有用,但不应在生产代码中使用。</target>
        </trans-unit>
        <trans-unit id="7787de4ed8d37741fa377fafe5fdafa8b3011126" translate="yes" xml:space="preserve">
          <source>Controls whether the compressed data is appended to the output buffer in the &lt;code&gt;bzdeflate&lt;/code&gt; , &lt;code&gt;bzflush&lt;/code&gt; and &lt;code&gt;bzclose&lt;/code&gt; methods.</source>
          <target state="translated">控制是否在 &lt;code&gt;bzdeflate&lt;/code&gt; ， &lt;code&gt;bzflush&lt;/code&gt; 和 &lt;code&gt;bzclose&lt;/code&gt; 方法中将压缩数据附加到输出缓冲区。</target>
        </trans-unit>
        <trans-unit id="f221020431f51974b32a3b5e2fbd634d97908661" translate="yes" xml:space="preserve">
          <source>Controls whether the compressed data is appended to the output buffer in the &lt;code&gt;bzinflate&lt;/code&gt; , &lt;code&gt;bzflush&lt;/code&gt; and &lt;code&gt;bzclose&lt;/code&gt; methods.</source>
          <target state="translated">控制是否在 &lt;code&gt;bzinflate&lt;/code&gt; ， &lt;code&gt;bzflush&lt;/code&gt; 和 &lt;code&gt;bzclose&lt;/code&gt; 方法中将压缩数据附加到输出缓冲区。</target>
        </trans-unit>
        <trans-unit id="c4245dd2343e96e7d4aa52338568c9fd8977b600" translate="yes" xml:space="preserve">
          <source>Controls which compression method is used. At present four compression methods are supported, namely Store (no compression at all), Deflate, Bzip2 and Lzma.</source>
          <target state="translated">控制使用哪种压缩方法。目前支持四种压缩方法,分别是Store(完全不压缩)、Deflate、Bzip2和Lzma。</target>
        </trans-unit>
        <trans-unit id="2eb06b69bb4c9f83f42cb55738cfe404434afd67" translate="yes" xml:space="preserve">
          <source>Convenience macro to get the REGEXP from a SV. This is approximately equivalent to the following snippet:</source>
          <target state="translated">从SV中获取REGEXP的方便宏。这大约相当于下面的片段。</target>
        </trans-unit>
        <trans-unit id="197b239c74a71f263a8d75330c22e4fc91bea1ec" translate="yes" xml:space="preserve">
          <source>Convenience method for building testing functions that take regular expressions as arguments.</source>
          <target state="translated">用于构建以正则表达式为参数的测试函数的便捷方法。</target>
        </trans-unit>
        <trans-unit id="1f619076858d6ded347f81f166e575080deac279" translate="yes" xml:space="preserve">
          <source>Convenience methods</source>
          <target state="translated">便利方法</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="643e483203bf1176839f0449bd1086c5d82b2884" translate="yes" xml:space="preserve">
          <source>Conversely for &lt;code&gt;INPUT&lt;/code&gt; (Perl to XSUB) mapping, the function named &lt;code&gt;XS_unpack_$ntype&lt;/code&gt; is called with the input Perl scalar as argument and the return value is cast to the mapped C type and assigned to the output C variable.</source>
          <target state="translated">相反，对于 &lt;code&gt;INPUT&lt;/code&gt; （从Perl到XSUB）的映射，将使用输入Perl标量作为参数来调用名为 &lt;code&gt;XS_unpack_$ntype&lt;/code&gt; 的函数，并将返回值强制转换为映射的C类型并分配给输出C变量。</target>
        </trans-unit>
        <trans-unit id="12d9c05ad456b2e9dfbd26729c7d5a4582ad8668" translate="yes" xml:space="preserve">
          <source>Conversely when &lt;code&gt;Append&lt;/code&gt; is not specified, or it is present and is set to false, it will operate as follows.</source>
          <target state="translated">相反，如果未指定 &lt;code&gt;Append&lt;/code&gt; 或存在Append并将其设置为false，它将按以下方式操作。</target>
        </trans-unit>
        <trans-unit id="1099367c0a33e0960cc2a79b8c82b72aa819293c" translate="yes" xml:space="preserve">
          <source>Conversely, here is a partial solution for the task of encoding such a URL in any EBCDIC code page:</source>
          <target state="translated">相反,这里有一个部分解决方案,可以解决在任何EBCDIC代码页面中编码这样一个URL的任务。</target>
        </trans-unit>
        <trans-unit id="0cdc49909eca70fcdaa9911c75b9017083c28375" translate="yes" xml:space="preserve">
          <source>Conversely, when setting &lt;code&gt;$?&lt;/code&gt; in an END block, an attempt is made to convert the POSIX value into a native status intelligible to the operating system upon exiting Perl. What this boils down to is that setting &lt;code&gt;$?&lt;/code&gt; to zero results in the generic success value SS$_NORMAL, and setting &lt;code&gt;$?&lt;/code&gt; to a non-zero value results in the generic failure status SS$_ABORT. See also &lt;a href=&quot;perlport#exit&quot;&gt;exit in perlport&lt;/a&gt;.</source>
          <target state="translated">相反，设置 &lt;code&gt;$?&lt;/code&gt; 在END块中，尝试在退出Perl时将POSIX值转换为操作系统可理解的本机状态。这归结为设置 &lt;code&gt;$?&lt;/code&gt; 设置为零将导致通用成功值SS $ _NORMAL，并设置 &lt;code&gt;$?&lt;/code&gt; 设置为非零值将导致常规故障状态SS $ _ABORT。另请参见&lt;a href=&quot;perlport#exit&quot;&gt;在perlport中退出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42f99a69b0dbcdf11a6d0337c05dbfa48ee474e9" translate="yes" xml:space="preserve">
          <source>Conversions to and from spherical and cylindrical coordinates are available. Please notice that the conversions are not necessarily reversible because of the equalities like</source>
          <target state="translated">可以进行球面坐标和圆柱坐标的转换。请注意,这些转换不一定是可逆的,因为像这样的等量关系。</target>
        </trans-unit>
        <trans-unit id="bf35c8b871a1fb1996c50ba5b0b5ab5801039529" translate="yes" xml:space="preserve">
          <source>Convert CPAN distribution metadata structures</source>
          <target state="translated">转换CPAN分布元数据结构</target>
        </trans-unit>
        <trans-unit id="21841a84ce705fac7522bc0e5a625ceef2574143" translate="yes" xml:space="preserve">
          <source>Convert POD data to ASCII text with format escapes</source>
          <target state="translated">使用格式转义符将POD数据转换为ASCII文本。</target>
        </trans-unit>
        <trans-unit id="26d9ff3691abc55fd6770d630e2e5af82498a473" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted *roff input</source>
          <target state="translated">将POD数据转换为格式化的*roff输入。</target>
        </trans-unit>
        <trans-unit id="04c7609219077dfc8d84b97d557ad0e72666eb9b" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted ASCII text</source>
          <target state="translated">将POD数据转换为格式化的ASCII文本。</target>
        </trans-unit>
        <trans-unit id="db9fd6e0fab456fdc8445a16cbc6756038a981de" translate="yes" xml:space="preserve">
          <source>Convert POD data to formatted color ASCII text</source>
          <target state="translated">将POD数据转换为格式化的彩色ASCII文本。</target>
        </trans-unit>
        <trans-unit id="112d5a9d03872dcf431cd72fd930ebba527fc129" translate="yes" xml:space="preserve">
          <source>Convert Pod to HTML</source>
          <target state="translated">将花苞转换为HTML</target>
        </trans-unit>
        <trans-unit id="025ffb8bfa07a8087fac34adc747a7743f7ef294" translate="yes" xml:space="preserve">
          <source>Convert a string representing an unsigned decimal number to an object representing the same number. The input is normalize, i.e., it matches &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; .</source>
          <target state="translated">将表示无符号十进制数字的字符串转换为表示相同数字的对象。输入被规范化，即匹配 &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c765e62f3e179084fe5d84bf0b2c3905b911ee2" translate="yes" xml:space="preserve">
          <source>Convert all keys to lowercase</source>
          <target state="translated">将所有键转换为小写</target>
        </trans-unit>
        <trans-unit id="7fc597b2a41ac67e1656734e7eb3b3a11b24ebbf" translate="yes" xml:space="preserve">
          <source>Convert between VMS and Unix file specification syntax</source>
          <target state="translated">在VMS和Unix文件规范语法之间转换。</target>
        </trans-unit>
        <trans-unit id="22551a6fa56e0b088f54f393df223d0617c9d7fd" translate="yes" xml:space="preserve">
          <source>Convert date and time information to string. Returns the string.</source>
          <target state="translated">将日期和时间信息转换为字符串。返回字符串。</target>
        </trans-unit>
        <trans-unit id="9dcc937b46bf0f95b02e92f32e357340020b79bb" translate="yes" xml:space="preserve">
          <source>Convert date/time info to a calendar time.</source>
          <target state="translated">将日期/时间信息转换为日历时间。</target>
        </trans-unit>
        <trans-unit id="c755a3bc45c556fa5a645d889408aa48ca046b43" translate="yes" xml:space="preserve">
          <source>Convert several Pod files to several HTML files</source>
          <target state="translated">将多个Pod文件转换为多个HTML文件</target>
        </trans-unit>
        <trans-unit id="e36fcb46538b5f65c12d8c2a4fdc9c5ba89e1e4c" translate="yes" xml:space="preserve">
          <source>Convert the items to a normalised form. For 8 bit and Unicode values converts the item to an array of 1 or 2 items, both 8 bit and UTF-8 encoded.</source>
          <target state="translated">将项目转换为规范化的形式。对于8位和Unicode值,将项目转换为1或2个项目的数组,均为8位和UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="e602181f27c8b76305cde3933fa7a93bda7e1d5f" translate="yes" xml:space="preserve">
          <source>Converting a text string into an alternate but equivalent &lt;b&gt;canonical&lt;/b&gt; (or compatible) representation that can then be compared for equivalence. Unicode recognizes four different normalization forms: NFD, NFC, NFKD, and NFKC.</source>
          <target state="translated">将文本字符串转换为替代的但等效的&lt;b&gt;规范&lt;/b&gt;（或兼容）表示形式，然后可以将其进行等效性比较。 Unicode识别四种不同的规范化形式：NFD，NFC，NFKD和NFKC。</target>
        </trans-unit>
        <trans-unit id="a905d8ec528f352ed045a0e47323b3f945f63fbc" translate="yes" xml:space="preserve">
          <source>Converting data from one type to another. C permits this. Perl does not need it. Nor want it.</source>
          <target state="translated">将数据从一种类型转换为另一种类型。C语言允许这样做。Perl不需要它。也不想这样做。</target>
        </trans-unit>
        <trans-unit id="ff10e616cf0cab260f69d9d71be4dea1b4105184" translate="yes" xml:space="preserve">
          <source>Converting neutral double quotes to properly matched double quotes doesn't work unless there are no formatting codes between the quote marks. This only matters for troff output.</source>
          <target state="translated">将中性双引号转换为正确匹配的双引号是行不通的,除非引号之间没有格式代码。这只对troff输出有影响。</target>
        </trans-unit>
        <trans-unit id="39ed30f1fb153d42aedc1603d4595d899a1c4eb9" translate="yes" xml:space="preserve">
          <source>Converting these two bytes to a string can be done with the unpack template &lt;code&gt;'b16'&lt;/code&gt; . To obtain the individual bit values from the bit string we use &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; with the &quot;empty&quot; separator pattern which dissects into individual characters. Bit values from the &quot;reserved&quot; positions are simply assigned to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, a convenient notation for &quot;I don't care where this goes&quot;.</source>
          <target state="translated">可以使用解压缩模板 &lt;code&gt;'b16'&lt;/code&gt; 将这两个字节转换为字符串。为了从位串中获得单个位值，我们使用&amp;ldquo;空&amp;rdquo;分隔符模式进行 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; ，该模式分为多个单个字符。来自&amp;ldquo;保留&amp;rdquo;位置的位值被简单地分配给 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ，这是&amp;ldquo;我不在乎&amp;rdquo;的一种方便表示法。</target>
        </trans-unit>
        <trans-unit id="872d9a7e434a3f8eac01f8a956be9ef98e1065ef" translate="yes" xml:space="preserve">
          <source>Converts</source>
          <target state="translated">Converts</target>
        </trans-unit>
        <trans-unit id="f1b0ff19255621f0cc44bdfb4998d413782b614b" translate="yes" xml:space="preserve">
          <source>Converts DOS and OS/2 linefeeds to Unix style recursively.</source>
          <target state="translated">以递归方式将DOS和OS/2行进转换为Unix风格。</target>
        </trans-unit>
        <trans-unit id="10562257cdade00a6b21d5534b7a854fb31311ef" translate="yes" xml:space="preserve">
          <source>Converts Perl XS code into C code</source>
          <target state="translated">将Perl XS代码转换为C代码</target>
        </trans-unit>
        <trans-unit id="3b4c118ffecc90a457e623e35d47e06d75541310" translate="yes" xml:space="preserve">
          <source>Converts a list into a string wrapped at approximately 80 columns.</source>
          <target state="translated">将一个列表转换为一个约80列的字符串。</target>
        </trans-unit>
        <trans-unit id="68b9e6f5ba88d84e905a481b6520ce3880c387ca" translate="yes" xml:space="preserve">
          <source>Converts a pod section specification to a suitable section specification for HTML. Note that we keep spaces and special characters except &lt;code&gt;&quot;, ?&lt;/code&gt; (Netscape problem) and the hyphen (writer's problem...).</source>
          <target state="translated">将pod区域规范转换为适合HTML的区域规范。请注意，我们保留空格和特殊字符，但 &lt;code&gt;&quot;, ?&lt;/code&gt; （Netscape问题）和连字符（书写者问题...）&amp;rdquo;除外。</target>
        </trans-unit>
        <trans-unit id="49497595bfccaed317aa3b3b73a4144bb41b64d6" translate="yes" xml:space="preserve">
          <source>Converts a relative path to an absolute path.</source>
          <target state="translated">将相对路径转换为绝对路径。</target>
        </trans-unit>
        <trans-unit id="9d892d6020931849ea5043d615d0a40eee45b982" translate="yes" xml:space="preserve">
          <source>Converts a relative path to an absolute path:</source>
          <target state="translated">将相对路径转换为绝对路径。</target>
        </trans-unit>
        <trans-unit id="66b5dd91e7acb7cb912818ec494442452642d20c" translate="yes" xml:space="preserve">
          <source>Converts a scalar into a typeglob. This is an incoercible typeglob; assigning a reference to it will assign to one of its slots, instead of overwriting it as happens with typeglobs created by SvSetSV. Converting any scalar that is SvOK() may produce unpredictable results and is reserved for perl's internal use.</source>
          <target state="translated">将一个标量转换为一个 typeglob。这是一个不可执行的typeglob;对它的赋值引用将赋值到它的一个槽中,而不是像SvSetSV创建的typeglob那样覆盖它。转换任何SvOK()的标量都可能产生不可预知的结果,并保留给perl内部使用。</target>
        </trans-unit>
        <trans-unit id="cbf47bd965a32350de298ea4a1bd9d84f13c4c78" translate="yes" xml:space="preserve">
          <source>Converts a sorting key into its representation form. If &lt;code&gt;UCA_Version&lt;/code&gt; is 8, the output is slightly different.</source>
          <target state="translated">将排序键转换为其表示形式。如果 &lt;code&gt;UCA_Version&lt;/code&gt; 为8，则输出略有不同。</target>
        </trans-unit>
        <trans-unit id="e09251ed3a676eb23e02a6f2269b32e4facc6e9a" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; of length &lt;code&gt;len&lt;/code&gt; bytes from the native encoding into UTF-8. Returns a pointer to the newly-created string, and sets &lt;code&gt;len&lt;/code&gt; to reflect the new length in bytes.</source>
          <target state="translated">将长度为 &lt;code&gt;len&lt;/code&gt; 个字节的字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 从本机编码转换为UTF-8。返回指向新创建的字符串的指针，并设置 &lt;code&gt;len&lt;/code&gt; 以反映新的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="25e23f0e18e40bbf0fb5c8f36fb8ccc5209e18d9" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; of length &lt;code&gt;len&lt;/code&gt; from UTF-8 into native byte encoding. Unlike &lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt;, this over-writes the original string, and updates &lt;code&gt;len&lt;/code&gt; to contain the new length. Returns zero on failure, setting &lt;code&gt;len&lt;/code&gt; to -1.</source>
          <target state="translated">将长度为 &lt;code&gt;len&lt;/code&gt; 的字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 从UTF-8转换为本地字节编码。与&lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt;不同，这会覆盖原始字符串，并更新 &lt;code&gt;len&lt;/code&gt; 以包含新长度。失败时返回零，将 &lt;code&gt;len&lt;/code&gt; 设置为-1。</target>
        </trans-unit>
        <trans-unit id="c9aaa9139532e77f8d3100c51e3d0b848d4c571b" translate="yes" xml:space="preserve">
          <source>Converts a string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; of length &lt;code&gt;len&lt;/code&gt; from UTF-8 into native byte encoding. Unlike &lt;a href=&quot;#utf8_to_bytes&quot;&gt;utf8_to_bytes&lt;/a&gt; but like &lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt;, returns a pointer to the newly-created string, and updates &lt;code&gt;len&lt;/code&gt; to contain the new length. Returns the original string if no conversion occurs, &lt;code&gt;len&lt;/code&gt; is unchanged. Do nothing if &lt;code&gt;is_utf8&lt;/code&gt; points to 0. Sets &lt;code&gt;is_utf8&lt;/code&gt; to 0 if &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; is converted or consisted entirely of characters that are invariant in utf8 (i.e., US-ASCII on non-EBCDIC machines).</source>
          <target state="translated">将长度为 &lt;code&gt;len&lt;/code&gt; 的字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 从UTF-8转换为本地字节编码。与&lt;a href=&quot;#utf8_to_bytes&quot;&gt;utf8_to_bytes&lt;/a&gt;不同，但与&lt;a href=&quot;#bytes_to_utf8&quot;&gt;bytes_to_utf8&lt;/a&gt;类似，它返回指向新创建的字符串的指针，并更新 &lt;code&gt;len&lt;/code&gt; 以包含新的长度。如果不进行转换，则返回原始字符串， &lt;code&gt;len&lt;/code&gt; 不变。如果 &lt;code&gt;is_utf8&lt;/code&gt; 指向0， &lt;code&gt;is_utf8&lt;/code&gt; 执行任何操作。如果 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 被转换或完全由utf8中不变的字符组成（即，非EBCDIC机器上的US-ASCII），则将is_utf8设置为0 。</target>
        </trans-unit>
        <trans-unit id="57ad9fed6045b19b9f737301c45af3031d5885f4" translate="yes" xml:space="preserve">
          <source>Converts a string into something presentable, handling escaping via pv_escape() and supporting quoting and ellipses.</source>
          <target state="translated">通过pv_escape()处理转义,并支持引号和省略号,将一个字符串转换为可显示的东西。</target>
        </trans-unit>
        <trans-unit id="985fbcc4acdc3a7d9cb06fa3db4de16008517d11" translate="yes" xml:space="preserve">
          <source>Converts a time as returned by the time function to a 9-element list with the time analyzed for the local time zone. Typically used as follows:</source>
          <target state="translated">将时间函数返回的时间转换为9个元素的列表,并分析当地时区的时间。典型的使用方法如下:</target>
        </trans-unit>
        <trans-unit id="df456bac0ead4ef5d6822c04fb63b24887c0fcbb" translate="yes" xml:space="preserve">
          <source>Converts die(...) to croak(...)</source>
          <target state="translated">将die(...)转换为croak(...)</target>
        </trans-unit>
        <trans-unit id="ab7d6db5ad0a6af07725954c367981536f9b78b6" translate="yes" xml:space="preserve">
          <source>Converts files from pod format (see &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;) to HTML format. It can automatically generate indexes and cross-references, and it keeps a cache of things it knows how to cross-reference.</source>
          <target state="translated">将文件从pod格式（请参阅&lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;）转换为HTML格式。它可以自动生成索引和交叉引用，并保留其知道如何交叉引用的内容的缓存。</target>
        </trans-unit>
        <trans-unit id="0d36251afb146d0c47c8632d04ba280e7678c879" translate="yes" xml:space="preserve">
          <source>Converts files from pod format (see &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;) to HTML format.</source>
          <target state="translated">将文件从pod格式（请参阅&lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;）转换为HTML格式。</target>
        </trans-unit>
        <trans-unit id="c4c3911f04371bd3f5a9edcc045060266cb007b3" translate="yes" xml:space="preserve">
          <source>Converts in-place the character sequence to the corresponding octet sequence in</source>
          <target state="translated">将原地的字符序列转换为相应的八位数序列。</target>
        </trans-unit>
        <trans-unit id="1f8d941153ff67ac1c72faf751cbeb55c8bc3ffd" translate="yes" xml:space="preserve">
          <source>Converts in-place the internal representation of the string from</source>
          <target state="translated">原地转换字符串的内部表示法,从</target>
        </trans-unit>
        <trans-unit id="d8b721335ac74a399b53a4c7b83d6d6e77dad793" translate="yes" xml:space="preserve">
          <source>Converts in-place the internal representation of the string from an octet sequence in the native encoding (Latin-1 or EBCDIC) to</source>
          <target state="translated">将字符串的内部表示法从本地编码(Latin-1或EBCDIC)的八位数序列就地转换为字符串的内部表示法。</target>
        </trans-unit>
        <trans-unit id="693d5393f2c198b06d62ba43ecdf4f6431cd33c1" translate="yes" xml:space="preserve">
          <source>Converts package specifiers from ' to ::</source>
          <target state="translated">将''转换为:''的软件包指定符。</target>
        </trans-unit>
        <trans-unit id="75d0a666542f6f624e396b88276d95cb7e5e33ef" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to UTF-8, but then turns the &lt;code&gt;SvUTF8&lt;/code&gt; flag off so that it looks like octets again.</source>
          <target state="translated">将SV的PV转换为UTF-8，然后关闭 &lt;code&gt;SvUTF8&lt;/code&gt; 标志，使其再次看起来像八位字节。</target>
        </trans-unit>
        <trans-unit id="8e31e6f885da29a23f47b2b49d056556f7053dad" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to its UTF-8-encoded form. Forces the SV to string form if it is not already. Always sets the SvUTF8 flag to avoid future validity checks even if all the bytes are invariant in UTF-8. If &lt;code&gt;flags&lt;/code&gt; has &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;sv&lt;/code&gt; if appropriate, else not.</source>
          <target state="translated">将SV的PV转换为其UTF-8编码形式。如果尚未将SV强制转换为字符串形式。始终设置SvUTF8标志以避免将来的有效性检查，即使UTF-8中的所有字节都是不变的。如果 &lt;code&gt;flags&lt;/code&gt; 有 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位设置，将 &lt;code&gt;mg_get&lt;/code&gt; 在 &lt;code&gt;sv&lt;/code&gt; 如果合适，否则不行。</target>
        </trans-unit>
        <trans-unit id="2eaeedbacb6754f3bf67d2ff185622d62fb661fa" translate="yes" xml:space="preserve">
          <source>Converts the PV of an SV to its UTF-8-encoded form. Forces the SV to string form if it is not already. Will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;sv&lt;/code&gt; if appropriate. Always sets the SvUTF8 flag to avoid future validity checks even if the whole string is the same in UTF-8 as not. Returns the number of bytes in the converted string</source>
          <target state="translated">将SV的PV转换为其UTF-8编码形式。如果尚未将SV强制转换为字符串形式。如果合适，将在 &lt;code&gt;sv&lt;/code&gt; 上进行 &lt;code&gt;mg_get&lt;/code&gt; 。始终设置SvUTF8标志以避免将来的有效性检查，即使整个字符串在UTF-8中相同也不一样。返回转换后的字符串中的字节数</target>
        </trans-unit>
        <trans-unit id="d858a4518b8e2b0edbb72d67957101032b8b2eb8" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its foldcase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the foldcase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为折叠格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为折叠版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="52e572e9590b1d15237c9891ad99225648f02174" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its lowercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the lowercase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为小写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为小写版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="1a058c8fc2f6f2b47b13e70622269534e295cc45" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为其标题格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为标题的版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="fe4a9e2cd918385161f10e124e4741e692641e86" translate="yes" xml:space="preserve">
          <source>Converts the UTF-8 encoded character at &lt;code&gt;p&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">将 &lt;code&gt;p&lt;/code&gt; 处的UTF-8编码字符转换为大写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。注意，由于大写版本可能比原始字符长，因此 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="c3a3eb4c108a356b7fa84675b8535c22195fbd62" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its foldcase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the foldcase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其折叠格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为折叠版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="d979a580aaef23727c36debd38227c49408a9b47" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its lowercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the lowercase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其小写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为小写版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="26f7f9dab73dba77fbe7d1b19eddf8f73d1b5671" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其标题格式，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。请注意， &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区必须至少为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节，因为标题的版本可能比原始字符长。</target>
        </trans-unit>
        <trans-unit id="45a23ff030e1856fb80fa2a5c1977970b50af607" translate="yes" xml:space="preserve">
          <source>Converts the Unicode code point &lt;code&gt;cp&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt; . Note that the buffer pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">将Unicode代码点 &lt;code&gt;cp&lt;/code&gt; 转换为其大写版本，并将其存储在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中的UTF-8中，并将其长度存储在 &lt;code&gt;lenp&lt;/code&gt; 中的字节中。注意，由于大写版本可能比原始字符长，因此 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 所指向的缓冲区至少必须为 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="c3d6ca1c2f0c8dcb86d38412b232b00c790cee63" translate="yes" xml:space="preserve">
          <source>Converts the distdir into a shell archive.</source>
          <target state="translated">将distdir转换为shell存档。</target>
        </trans-unit>
        <trans-unit id="0cf90c7998d2448281ddcaab8fbf0e0504c17afc" translate="yes" xml:space="preserve">
          <source>Converts the name of a C source file to the most natural name of an output object file to create from it. For instance, on Unix the source file</source>
          <target state="translated">将 C 源文件的名称转换为要从它创建的输出对象文件的最自然名称。例如,在Unix上,源文件的名称是</target>
        </trans-unit>
        <trans-unit id="294bcf2fccd9227784487d719b1402d9277e26d7" translate="yes" xml:space="preserve">
          <source>Converts the name of an object file to the most natural name of a output library file to create from it. For instance, on Mac OS X the object file</source>
          <target state="translated">将对象文件的名称转换为要从它创建的输出库文件的最自然名称。例如,在 Mac OS X 上,对象文件的名称是</target>
        </trans-unit>
        <trans-unit id="a88553ec1e53f9448f2a6cf55dbbb5a77e63eaea" translate="yes" xml:space="preserve">
          <source>Converts the name of an object file to the most natural name of an executable file to create from it. For instance, on Mac OS X the object file</source>
          <target state="translated">将对象文件的名称转换为要创建的可执行文件的最自然名称。例如,在Mac OS X上,对象文件的名称是</target>
        </trans-unit>
        <trans-unit id="bd026beb328c8d2f6c169ba8bd729c19b9c13311" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if lenp is non-zero, it does the same to lenp, but this time starting from the offset, rather than from the start of the string. Handles type coercion.</source>
          <target state="translated">将偏移量从字符串开始的UTF-8字符数转换为等效的字节数;如果lenp非零,则对lenp做同样的处理,但这次是从偏移量开始,而不是从字符串开始。处理类型胁迫。</target>
        </trans-unit>
        <trans-unit id="00d51fe700c6a5db38a413be18aee4d817d83eb5" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles type coercion.</source>
          <target state="translated">将偏移量从字符串开始的字节数转换为等量的UTF-8字符数。处理类型胁迫。</target>
        </trans-unit>
        <trans-unit id="29fc75feba3b4414c8baae81dd1c2325b9e8ab51" translate="yes" xml:space="preserve">
          <source>Converts the specified Latin1 character to lowercase. The results are undefined if the input doesn't fit in a byte.</source>
          <target state="translated">将指定的Latin1字符转换为小写。如果输入的字符不适合放在一个字节中,那么结果就没有定义。</target>
        </trans-unit>
        <trans-unit id="2c20384152ac3c169167a164a1d915c66eb3398e" translate="yes" xml:space="preserve">
          <source>Converts the specified character to foldcase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toFOLD_A&lt;/code&gt; is equivalent. (There is no equivalent &lt;code&gt;to_FOLD_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toFOLD_uni&quot;&gt;toFOLD_uni&lt;/a&gt; is needed there.)</source>
          <target state="translated">将指定的字符转换为折叠式字符。如果输入不是ASCII大写字符，则返回该输入字符本身。变异 &lt;code&gt;toFOLD_A&lt;/code&gt; 是等价的。（对于整个Latin1范围，没有等效的 &lt;code&gt;to_FOLD_L1&lt;/code&gt; ，因为在那里需要&lt;a href=&quot;#toFOLD_uni&quot;&gt;toFOLD_uni&lt;/a&gt;的全部通用性。）</target>
        </trans-unit>
        <trans-unit id="7775e6edae290c80035bdde5ee180cafb1a95c9a" translate="yes" xml:space="preserve">
          <source>Converts the specified character to lowercase using the current locale's rules, if possible; otherwise returns the input character itself.</source>
          <target state="translated">如果可能的话,使用当前locale的规则将指定的字符转换为小写,否则返回输入字符本身。</target>
        </trans-unit>
        <trans-unit id="6f3b386523ea039f2b6d6f2c24bea443697341ca" translate="yes" xml:space="preserve">
          <source>Converts the specified character to lowercase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toLOWER_A&lt;/code&gt; is equivalent.</source>
          <target state="translated">将指定字符转换为小写。如果输入不是ASCII大写字符，则返回该输入字符本身。 &lt;code&gt;toLOWER_A&lt;/code&gt; 变体是等效的。</target>
        </trans-unit>
        <trans-unit id="4c7f73f6dc4ef675e0ea0c8a1169c8b80eea8488" translate="yes" xml:space="preserve">
          <source>Converts the specified character to titlecase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toTITLE_A&lt;/code&gt; is equivalent. (There is no &lt;code&gt;toTITLE_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toTITLE_uni&quot;&gt;toTITLE_uni&lt;/a&gt; is needed there. Titlecase is not a concept used in locale handling, so there is no functionality for that.)</source>
          <target state="translated">将指定的字符转换为大写。如果输入不是ASCII小写字符，则返回该输入字符本身。变体 &lt;code&gt;toTITLE_A&lt;/code&gt; 是等效的。（对于整个Latin1范围，没有 &lt;code&gt;toTITLE_L1&lt;/code&gt; ，因为在那里需要&lt;a href=&quot;#toTITLE_uni&quot;&gt;toTITLE_uni&lt;/a&gt;的全部通用性。Titlecase不是在语言环境处理中使用的概念，因此没有功能。）</target>
        </trans-unit>
        <trans-unit id="38943cd0db5a909d68224b0f5858aec10b5fbd97" translate="yes" xml:space="preserve">
          <source>Converts the specified character to uppercase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toUPPER_A&lt;/code&gt; is equivalent.</source>
          <target state="translated">将指定字符转换为大写。如果输入不是ASCII小写字符，则返回该输入字符本身。变异 &lt;code&gt;toUPPER_A&lt;/code&gt; 是等价的。</target>
        </trans-unit>
        <trans-unit id="cbfe95a5d57e473ed974a2c8dd7b4c3a3dc6f133" translate="yes" xml:space="preserve">
          <source>Converts the tarfile into a uuencoded file</source>
          <target state="translated">将tar文件转换为Uuencoded文件。</target>
        </trans-unit>
        <trans-unit id="8105a421b149b241dd9345f828f8405806dc4509" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by offsetp from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if lenp is non-zero, it does the same to lenp, but this time starting from the offset, rather than from the start of the string. Handles magic and type coercion.</source>
          <target state="translated">将 offsetp 指向的值从字符串开始的 UTF-8 字符数转换为等效的字节数;如果 lenp 为非零,则对 lenp 做同样的处理,但这次是从偏移量开始,而不是从字符串开始。处理魔术和类型强制。</target>
        </trans-unit>
        <trans-unit id="40b55cad996caa19ed6d279ac88d5fa4b681b529" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by offsetp from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles magic and type coercion.</source>
          <target state="translated">将offsetp指向的值从字符串开始的字节数转换为等价的UTF-8字符数。处理魔术和类型强制。</target>
        </trans-unit>
        <trans-unit id="a9134f42b0fc69f710ef38795745edc87cc85d2d" translate="yes" xml:space="preserve">
          <source>Cooperative multitasking systems have running threads give up control if one of two things happen. If a thread calls a yield function, it gives up control. It also gives up control if the thread does something that would cause it to block, such as perform I/O. In a cooperative multitasking implementation, one thread can starve all the others for CPU time if it so chooses.</source>
          <target state="translated">合作多任务系统中,如果发生两件事之一,运行中的线程就会放弃控制权。如果一个线程调用了一个屈服函数,它就会放弃控制权。如果线程做了一些会导致它阻塞的事情,比如执行I/O,它也会放弃控制权。在合作式多任务实现中,如果一个线程愿意,它可以饿死所有其他线程的CPU时间。</target>
        </trans-unit>
        <trans-unit id="d032796f15a64112e4e06fa18894fca88d7a2f99" translate="yes" xml:space="preserve">
          <source>Copied from &lt;a href=&quot;../ipc/cmd#%24path-%3d-can_run(-PROGRAM-)%3b&quot;&gt;IPC::Cmd&lt;/a&gt;, but modified into a method (and removed &lt;code&gt;$INSTANCES&lt;/code&gt; capability).</source>
          <target state="translated">从&lt;a href=&quot;../ipc/cmd#%24path-%3d-can_run(-PROGRAM-)%3b&quot;&gt;IPC :: Cmd&lt;/a&gt;复制，但修改为方法（并删除了 &lt;code&gt;$INSTANCES&lt;/code&gt; 功能）。</target>
        </trans-unit>
        <trans-unit id="58da612a1bc6d614d12d58ef8797a656a94e658e" translate="yes" xml:space="preserve">
          <source>Copies a double into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将double复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="c347bb9b827a2334958f6bf2f2ca6f534daeac0e" translate="yes" xml:space="preserve">
          <source>Copies a double into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setnv_mg&lt;/code&gt; .</source>
          <target state="translated">将double复制到给定的SV中，必要时先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;sv_setnv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b27095a6cd52e5d6134280b02b569beed020d999" translate="yes" xml:space="preserve">
          <source>Copies a pointer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. If the &lt;code&gt;pv&lt;/code&gt; argument is NULL then &lt;code&gt;PL_sv_undef&lt;/code&gt; will be placed into the SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将指针复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。如果 &lt;code&gt;pv&lt;/code&gt; 参数为NULL，则 &lt;code&gt;PL_sv_undef&lt;/code&gt; 将被放置到SV中。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="1786cfa4001f16d4465ff1be0891e50c99f2c03f" translate="yes" xml:space="preserve">
          <source>Copies a string (possibly containing embedded &lt;code&gt;NUL&lt;/code&gt; characters) into an SV. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to be copied. If the &lt;code&gt;ptr&lt;/code&gt; argument is NULL the SV will become undefined. Does not handle 'set' magic. See &lt;code&gt;sv_setpvn_mg&lt;/code&gt; .</source>
          <target state="translated">将字符串（可能包含嵌入的 &lt;code&gt;NUL&lt;/code&gt; 字符）复制到SV中。该 &lt;code&gt;len&lt;/code&gt; 参数指示要复制的字节数。如果 &lt;code&gt;ptr&lt;/code&gt; 参数为NULL，则SV将变得不确定。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;sv_setpvn_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d174a878d53f27a45b16e4832647c4bb0c4f91eb" translate="yes" xml:space="preserve">
          <source>Copies a string into a new SV, optionally blessing the SV. The length of the string must be specified with &lt;code&gt;n&lt;/code&gt; . The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将字符串复制到新的SV中，可以选择祝福该SV。字符串的长度必须用 &lt;code&gt;n&lt;/code&gt; 指定。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="2cc17ff1663cdcd5ccc34774a29afbe226d6bde7" translate="yes" xml:space="preserve">
          <source>Copies a string into an SV. The string must be terminated with a &lt;code&gt;NUL&lt;/code&gt; character. Does not handle 'set' magic. See &lt;code&gt;sv_setpv_mg&lt;/code&gt; .</source>
          <target state="translated">将字符串复制到SV中。该字符串必须以 &lt;code&gt;NUL&lt;/code&gt; 字符结尾。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;sv_setpv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acd7e631f37132f2461a9f4128a317eb4d34d689" translate="yes" xml:space="preserve">
          <source>Copies a stringified representation of the source SV into the destination SV. Automatically performs any necessary mg_get and coercion of numeric values into strings. Guaranteed to preserve UTF8 flag even from overloaded objects. Similar in nature to sv_2pv[_flags] but operates directly on an SV instead of just the string. Mostly uses sv_2pv_flags to do its work, except when that would lose the UTF-8'ness of the PV.</source>
          <target state="translated">将源SV的字符串化表示复制到目标SV中。自动执行任何必要的mg_get和胁迫数值为字符串。保证即使是重载对象也能保留UTF8标志。类似于sv_2pv[_flags]的性质,但是直接对SV进行操作,而不仅仅是字符串。大多数情况下使用 sv_2pv_flags 来完成它的工作,除非这样做会丢失 PV 的 UTF-8'ness。</target>
        </trans-unit>
        <trans-unit id="1ceb5498aa08b64599a670ddd20b40acf24c2850" translate="yes" xml:space="preserve">
          <source>Copies all the files that are in the MANIFEST file to a newly created directory with the name &lt;code&gt;$(DISTNAME)-$(VERSION)&lt;/code&gt;. If that directory exists, it will be removed first.</source>
          <target state="translated">将清单文件中的所有文件复制到名称 &lt;code&gt;$(DISTNAME)-$(VERSION)&lt;/code&gt; 的新创建的目录中。如果该目录存在，它将首先被删除。</target>
        </trans-unit>
        <trans-unit id="6f5a43cdae0ae6da25d7ce8fda19fe8a78a5ff5d" translate="yes" xml:space="preserve">
          <source>Copies an integer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将整数复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="87655bfb9567748496e5eaf66f62a786876d2425" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, also updating its string value. Does not handle 'set' magic. See &lt;code&gt;sv_setpviv_mg&lt;/code&gt; .</source>
          <target state="translated">将整数复制到给定的SV中，同时也更新其字符串值。不处理&amp;ldquo;定型&amp;rdquo;魔法。参见 &lt;code&gt;sv_setpviv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f2eb4580cc9eaa76949e7acc7122330f226683c" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setiv_mg&lt;/code&gt; .</source>
          <target state="translated">将整数复制到给定的SV中，必要时先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;sv_setiv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a3984d0cef29ac256b94baf888dc25a6bab8951" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">将无符号整数复制到新的SV中，可以选择祝福SV。该 &lt;code&gt;rv&lt;/code&gt; 参数将被升级为RV。该RV将被修改为指向新的SV。在 &lt;code&gt;classname&lt;/code&gt; 参数指示包的祝福。将 &lt;code&gt;classname&lt;/code&gt; 设置为 &lt;code&gt;NULL&lt;/code&gt; 以避免加持。新的SV的参考计数为1，并且将返回RV。</target>
        </trans-unit>
        <trans-unit id="817708bbdae5a3bc2e1729daf57c7384a8ed11df" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setuv_mg&lt;/code&gt; .</source>
          <target state="translated">将无符号整数复制到给定的SV中，必要时先进行升级。不处理&amp;ldquo;定型&amp;rdquo;魔法。另请参见 &lt;code&gt;sv_setuv_mg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f42b69b0be33ffa2663dc670be8d62b1f6b76a37" translate="yes" xml:space="preserve">
          <source>Copies each directory tree of %from_to to its corresponding value preserving timestamps and permissions.</source>
          <target state="translated">将%from_to的每个目录树复制到相应的值上,保留时间戳和权限。</target>
        </trans-unit>
        <trans-unit id="547ef09412d01381bdd77f45cd22559f6b5f129c" translate="yes" xml:space="preserve">
          <source>Copies each key of %from_to to its corresponding value efficiently. Filenames with the extension .pm are autosplit into the $autosplit_dir. Any destination directories are created.</source>
          <target state="translated">高效地将%from_to中的每个键复制到相应的值。扩展名为.pm的文件名会自动分割到$autosplit_dir中。任何目标目录都会被创建。</target>
        </trans-unit>
        <trans-unit id="8b4556d985cc8c666fe1310a61eb0e2bd704d901" translate="yes" xml:space="preserve">
          <source>Copies sources to the destination. Multiple sources are allowed if destination is an existing directory.</source>
          <target state="translated">将源文件复制到目的地。如果目的地是一个现有的目录,则允许多个来源。</target>
        </trans-unit>
        <trans-unit id="22aa8bfe9c7cb3953e35f5697eea8150b160ffab" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt; . The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic on destination SV. Calls 'get' magic on source SV. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination.</source>
          <target state="translated">将源SV &lt;code&gt;ssv&lt;/code&gt; 的内容复制到目标SV &lt;code&gt;dsv&lt;/code&gt; 中。如果源SV是致命的，则它可能会被破坏，因此，如果需要重新使用源SV，请不要使用此功能。不处理目标SV上的&amp;ldquo;设置&amp;rdquo;魔法。在源SV上调用&amp;ldquo;获取&amp;rdquo;魔法。松散地说，它执行按值复制，抹去了目标的所有先前内容。</target>
        </trans-unit>
        <trans-unit id="60fc994ce68e4c7b21a4843b708d86bf7c3db663" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt; . The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;ssv&lt;/code&gt; if appropriate, else not. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_NOSTEAL&lt;/code&gt; bit set then the buffers of temps will not be stolen. &amp;lt;sv_setsv&amp;gt; and &lt;code&gt;sv_setsv_nomg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">将源SV &lt;code&gt;ssv&lt;/code&gt; 的内容复制到目标SV &lt;code&gt;dsv&lt;/code&gt; 中。如果源SV是致命的，则它可能会被破坏，因此，如果需要重新使用源SV，请不要使用此功能。不处理&amp;ldquo;定型&amp;rdquo;魔法。松散地说，它执行按值复制，抹去了目标的所有先前内容。如果 &lt;code&gt;flags&lt;/code&gt; 参数设置了 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 位，则在适当的情况下将在 &lt;code&gt;mg_get&lt;/code&gt; 上进行 &lt;code&gt;ssv&lt;/code&gt; ，否则不进行。如果 &lt;code&gt;flags&lt;/code&gt; 参数将 &lt;code&gt;SV_NOSTEAL&lt;/code&gt; 位置1，则临时缓冲区将不会被盗。 &amp;lt;sv_setsv&amp;gt;和 &lt;code&gt;sv_setsv_nomg&lt;/code&gt; 是根据此功能实现的。</target>
        </trans-unit>
        <trans-unit id="847212512bee6cfe3c2fc61106e5643ef825dc7e" translate="yes" xml:space="preserve">
          <source>Copies the files that are the keys in %src to the $dest_dir. %src is typically returned by the maniread() function.</source>
          <target state="translated">将%src中的文件复制到$dest_dir中。%src 通常由 maniread()函数返回。</target>
        </trans-unit>
        <trans-unit id="1e68b585bfbe265f09cd9d4efb3e0feed1b83417" translate="yes" xml:space="preserve">
          <source>Copies the magic from one SV to another. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">将魔术从一个SV复制到另一个。参见 &lt;code&gt;sv_magic&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="844182ad4ab003932666f9c6d69d92cbb8e46845" translate="yes" xml:space="preserve">
          <source>Coping with duplicate mappings</source>
          <target state="translated">应对重复的映射</target>
        </trans-unit>
        <trans-unit id="82e1de5d54543510504259bd75e1005b5001c11a" translate="yes" xml:space="preserve">
          <source>Copy Constructor</source>
          <target state="translated">复制构造函数</target>
        </trans-unit>
        <trans-unit id="5534252cfc67f8ea30c5aeb4b712455aa3844020" translate="yes" xml:space="preserve">
          <source>Copy files or filehandles</source>
          <target state="translated">复制文件或文件柄</target>
        </trans-unit>
        <trans-unit id="8f8861ebe6be1c187f524367a7e8796012ce6621" translate="yes" xml:space="preserve">
          <source>Copy it from there to %PlatformSDKDir%\Bin</source>
          <target state="translated">从那里复制到%PlatformSDKDir%/Bin。</target>
        </trans-unit>
        <trans-unit id="262ea28b5df50512a45d54b1fa1054f3be93e5d2" translate="yes" xml:space="preserve">
          <source>Copy on Write</source>
          <target state="translated">抄写</target>
        </trans-unit>
        <trans-unit id="a4bc97f3ddf500700682ce93b45d0b65e29cc177" translate="yes" xml:space="preserve">
          <source>Copy some of the magic from an existing SV to new localized version of that SV. Container magic (eg %ENV, $1, tie) gets copied, value magic doesn't (eg taint, pos).</source>
          <target state="translated">从现有的SV中复制一些魔法到该SV的新的本地化版本。容器魔法(例如 %ENV,$1,tie)会被复制,值魔法不会(例如 taint,pos)。</target>
        </trans-unit>
        <trans-unit id="6d73bd4397739daf068f0e0c81f47887b133737c" translate="yes" xml:space="preserve">
          <source>Copy the miniperl executable from the native build done earlier to replace the cross compiled miniperl.</source>
          <target state="translated">将之前完成的原生构建中的miniperl可执行文件复制过来,替换交叉编译的miniperl。</target>
        </trans-unit>
        <trans-unit id="944d3ba1daacc35a1c39f04db6c6016f8a5e0184" translate="yes" xml:space="preserve">
          <source>Copy your Perl executable to a BS2000 LLM using bs2cp:</source>
          <target state="translated">使用bs2cp将Perl可执行文件复制到BS2000 LLM中。</target>
        </trans-unit>
        <trans-unit id="2d7ed2211bbc181246d723daf7d8159780f901a4" translate="yes" xml:space="preserve">
          <source>Copy your header files and C files to this directory</source>
          <target state="translated">将你的头文件和C文件复制到这个目录下。</target>
        </trans-unit>
        <trans-unit id="704f751eff0d0b505d7bf92d8e801e4d308664b6" translate="yes" xml:space="preserve">
          <source>Copying and pasting code without understanding it, while superstitiously believing in its value. This term originated from preindustrial cultures dealing with the detritus of explorers and colonizers of technologically advanced cultures. See</source>
          <target state="translated">在不了解代码的情况下复制和粘贴代码,同时迷信其价值。这个词起源于工业化前的文化,处理技术先进文化的探险家和殖民者的残渣。见</target>
        </trans-unit>
        <trans-unit id="f48221dc8de0edb298f93c3d9ea0b286f39f81ac" translate="yes" xml:space="preserve">
          <source>Copying private information out of your system. Even something as simple as your user name is of value to others. Much useful information could be gleaned from your environment variables for example.</source>
          <target state="translated">将私人信息从系统中复制出来。即使是像你的用户名这样简单的东西,对其他人也是有价值的。许多有用的信息可以从你的环境变量中收集,例如:。</target>
        </trans-unit>
        <trans-unit id="ba61f765e33a7dbdaa5dc699f7442584180fbf0c" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2012 Tom Christiansen.</source>
          <target state="translated">版权所有&amp;copy;2012 Tom Christiansen。</target>
        </trans-unit>
        <trans-unit id="937d2f60d09c53d79a1381de58ec4983d7faadb3" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1990-2011 by Larry Wall and others.</source>
          <target state="translated">Copyright (C)1990-2011 by Larry Wall and others.</target>
        </trans-unit>
        <trans-unit id="fb8450e1f5cfd8fc44ca561023832e2026e0d699" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1990-2012 by Larry Wall and others.</source>
          <target state="translated">Copyright (C)1990-2012 by Larry Wall and others.</target>
        </trans-unit>
        <trans-unit id="866e8b342f220185b06062e3c92301f53f840c56" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All rights reserved.</source>
          <target state="translated">Copyright (C)1991-2,RSA Data Security,Inc.1991年创建。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="8fd1a6d880564bdc3ea1e763f953df5ebac7e46e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1994-2013 Larry Wall</source>
          <target state="translated">Copyright (C)1994-2013 Larry Wall</target>
        </trans-unit>
        <trans-unit id="1c0c559930ca4225e8816cff4ee2873c1c41a1ac" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995, 1996, 1997, 1998 Doug MacEachern and Jon Orwant. All Rights Reserved.</source>
          <target state="translated">(C)1995,1996,1997,1998 Doug MacEachern and Jon Orwant.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="292274a2b01d4df1c901b9114cee5b641d729f45" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1996-2002,2005,2006 David Muir Sharnoff. Copyright (C) 2005 Aristotle Pagaltzis Copyright (C) 2012-2013 Google, Inc. This module may be modified, used, copied, and redistributed at your own risk. Although allowed by the preceding license, please do not publicly redistribute modified versions of this code with the name &quot;Text::Tabs&quot; unless it passes the unmodified Text::Tabs test suite.</source>
          <target state="translated">Copyright (C)1996-2002,2005,2006 David Muir Sharnoff.Copyright (C)2005 Aristotle Pagaltzis Copyright (C)2012-2013 Google,Inc.本模块可被修改,使用,复制和再分配,风险自负。尽管前述许可允许,但请不要公开以 &quot;Text::Tabs &quot;为名重新发布修改后的代码,除非它通过了未修改的Text::Tabs测试套件。</target>
        </trans-unit>
        <trans-unit id="02bb538e3acc9fba7e66a4108eaa2f54189885d2" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1996-2009 David Muir Sharnoff. Copyright (C) 2012-2013 Google, Inc. This module may be modified, used, copied, and redistributed at your own risk. Although allowed by the preceding license, please do not publicly redistribute modified versions of this code with the name &quot;Text::Wrap&quot; unless it passes the unmodified Text::Wrap test suite.</source>
          <target state="translated">Copyright (C)1996-2009 David Muir Sharnoff.Copyright (C)2012-2013 Google,Inc.本模块可被修改、使用、复制和重新分发,风险自负。尽管前述许可允许,但请不要公开重新发布修改后的代码,并将其命名为 &quot;Text::Wrap&quot;,除非它通过了未修改的Text::Wrap测试套件。</target>
        </trans-unit>
        <trans-unit id="77d8ad6518ef8e3ffa4a429ac08f118904c382ac" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997, 1999 Tom Phoenix</source>
          <target state="translated">版权所有 (C)1997,1999 Tom Phoenix</target>
        </trans-unit>
        <trans-unit id="67e16ccb30ea63aa1d756ce57f18d2d7b5847ff8" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1998, 2002, 2003 Jon Orwant. All Rights Reserved.</source>
          <target state="translated">Copyright (C)1998,2002,2003 Jon Orwant.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="b90a8995c2bc16a451a02631a6a11820b0642403" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2002-2009 Richard Clamp. All Rights Reserved.</source>
          <target state="translated">Copyright (C)2002-2009 Richard Clamp.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="066dc5f0420738b9ed994bc87aed4131e1192b32" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2015 Mark Shelor</source>
          <target state="translated">版权所有 (C)2003-2015 马克-谢勒</target>
        </trans-unit>
        <trans-unit id="1c7f20037aad67be66061eee55047374368b5f2e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2004, 2008 Matthijs van Duin. All rights reserved. Copyright (C) 2014 cPanel Inc. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (C)2004,2008 Matthijs van Duin.保留所有权利。Copyright (C)2014 cPanel Inc.保留所有权利。本程序是自由软件;您可以在与 Perl 本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="5def902ce53af0d66c9ae0b1a9f55a7bc540b36c" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2006-2007 by (Anno Siegel)</source>
          <target state="translated">版权所有(C)2006-2007年由(Anno Siegel)</target>
        </trans-unit>
        <trans-unit id="d16dc4251e47686ff5ed08ba79678470456a743a" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2011, 2012, 2013 Andrew Main (Zefram) &amp;lt;zefram@fysh.org&amp;gt;</source>
          <target state="translated">版权所有（C）2011、2012、2013 Andrew Main（Zefram）&amp;lt;zefram@fysh.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c99e15fbe5fafed3fe83907c942a8467ca2f0856" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995 Graham Barr &amp;amp; Nick Ing-Simmons. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1995 Graham Barr＆Nick Ing-Simmons。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="95d67aab425ae8ab541cdf2624605b8e79d554fe" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2011 Paul Marquess. All rights reserved. Copyright (c) 2011-2014 Reini Urban. All rights reserved.</source>
          <target state="translated">Copyright (c)1995-2011 Paul Marquess.保留所有权利。Copyright (c)2011-2014 Reini Urban.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="f9a66947e2ff3697bb460252be39f2139fd2dfb8" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2012 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1995-2012 Paul Marquess.保留所有权利。本程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="a331cc5bbf130d1638077c14f80eecf3e2a52eaf" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2014 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)1995-2014 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="733de8f3f1ca09b5c9786044fb092e7f4c05f294" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-98 Ilya Zakharevich. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1995-98 Ilya Zakharevich.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="ecaed13460704998ba577e4c2d2468a151c24b30" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996, 1997 Malcolm Beattie Copyright (c) 2008, 2010, 2013, 2014 Reini Urban</source>
          <target state="translated">Copyright (c)1996,1997 Malcolm Beattie Copyright (c)2008,2010,2013,2014 Reini Urban。</target>
        </trans-unit>
        <trans-unit id="1feb9747b49165f4eb65853775088ee0251ff609" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2002 Douglas E. Wegscheid. All rights reserved.</source>
          <target state="translated">Copyright (c)1996-2002 Douglas E.Wegscheid.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="cc400f4ad8917f7b799fd3975597a9810d8ce636" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2014 Gurusamy Sarathy. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1996-2014 Gurusamy Sarathy.保留所有权利。本程序是自由软件;您可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="485f651d515be5bba642d42e474826a93f61bb6b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1996-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="08e4cdda088cf550ea65b3bf4dc89aba9b493bbc" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2003 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1997-2003 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="4887e8376b496893469d0bac43718dbc07ae1822" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2003 Graham Barr, 2003-2007 David Rolsky. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1997-2003 Graham Barr,2003-2007 David Rolsky.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="d7245b2dcd573952f48717b9921c61d1e9b2c21e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2007 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1997-2007 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="6d6af5defc144adda44580441213764dbdd5a579" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2010 Tom Christiansen, Nathan Torkington, and other authors as noted. All rights reserved.</source>
          <target state="translated">版权所有(c)1997-2010 Tom Christiansen、Nathan Torkington和其他作者,如有注明。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="96ab04550bbdbe3276e7b627e8ac745ea70c4e50" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2013 Tom Christiansen, Nathan Torkington, and other authors as noted. All rights reserved.</source>
          <target state="translated">版权所有(c)1997-2013 Tom Christiansen,Nathan Torkington,以及其他作者,如有注明。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="b85bffc2f702e5a69d96edf1040c8231c9905e16" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）1997-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="f7a94533b6d04a11dc7e8f73fc628424ecae3fb0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-8 Graham Barr. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)1997-8 Graham Barr.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="422bbbfa2ebf0ecbc7060450d7441d3ab485a17c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998+ Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)1998+Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="4c5d0fa3fbcbb72648eeb53bb25226cd8e07fc2d" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2000 Joshua Nathaniel Pritikin.</source>
          <target state="translated">Copyright (c)1998-2000 Joshua Nathaniel Pritikin.</target>
        </trans-unit>
        <trans-unit id="f70857aa7efdb3e62785ad1d300160624d1ca8c4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)1998-2004 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="7bf33c9fe762000df4df0dfadc70c956cdf17ba0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2004 Tom Hughes &amp;lt;</source>
          <target state="translated">版权所有（c）1998-2004 Tom Hughes &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e0ae8e826ee43e27b9f80f2f471b56b206c7c868" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1999 Tuomas J. Lukka &amp;lt;lukka@iki.fi&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as perl itself.</source>
          <target state="translated">版权所有（c）1999 Tuomas J.Lukka &amp;lt;lukka@iki.fi&amp;gt;。版权所有。该程序是免费软件；您可以使用与perl本身相同的术语来重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="a6b26641bc7ea8de46aed22323cf3dc2c633f52e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1999-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)1999-2004 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="61d2f566b03b65ebb8a473ade4f6c05ec2e7b7d6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2000 Mark Kvale All rights reserved.</source>
          <target state="translated">Copyright (c)2000 Mark Kvale All rights reserved.</target>
        </trans-unit>
        <trans-unit id="956588c9cff385547adb21a72fd25e005bd741ba" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001+ Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2001+Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="101703b452cff466c3017bb8ed36a01aa5987d0f" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001, Colin McMillen. All rights reserved.</source>
          <target state="translated">Copyright (c)2001,Colin McMillen.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="4be1efc0ccc0981f45abf323878167441401a846" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2002 Michael G. Schwern.</source>
          <target state="translated">Copyright (c)2001-2002 Michael G.Schwern.</target>
        </trans-unit>
        <trans-unit id="745610c91808a145be6f46517082d4e57524612c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2001-2004 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="943b9de4d5b00b8ab9c8008e42e2cad2c939e815" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2002 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="27329c3ca1bd874414fcb99c62900358075672d6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2002 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="2b28a7c47cb1fc722aa93ca95ba51f4648d81356" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008 Jarkko Hietaniemi. All rights reserved.</source>
          <target state="translated">版权(c)2002、2003、2004、2005、2006、2007、2008 Jarkko Hietaniemi。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="999355b8d02ad239f1c7f43da46147f2a00c43e4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002, 2003, 2004, 2012 Elizabeth Mattijsen. All rights reserved. This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)2002,2003,2004,2012 Elizabeth Mattijsen.保留所有权利。这个库是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="baaf0433379f30ce563209428329e2d5328a5310" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002,3,4 Sean M. Burke. All rights reserved.</source>
          <target state="translated">Copyright (c)2002,3,4 Sean M.Burke.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="bfb8ae6b5304e536dda7306d8f5e5b4e96abc310" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2003, Rob Brown. All rights reserved.</source>
          <target state="translated">Copyright (c)2002-2003,Rob Brown.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="d3cf30d649786ddcd606f40863280a1c98090473" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2004 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2002-2004 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="370a5e83a0a375fc863482e0f23b23bcc8829b4b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2007 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2002-2007 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="d20f5965d8d31028f9af0d7c9c2319d612d7cf7c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2007 by D.H. aka PodMaster</source>
          <target state="translated">Copyright (c)2002-2007 by D.H.aka PodMaster.</target>
        </trans-unit>
        <trans-unit id="1a96f1bac6842e525db311ea1fddc129e4e8347c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2005 Allison Randal.</source>
          <target state="translated">Copyright (c)2003-2005 Allison Randal.</target>
        </trans-unit>
        <trans-unit id="739c0eceb4f80af2e4cb7f48ed65f0a345752cc6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2005 Ken Williams. All rights reserved.</source>
          <target state="translated">Copyright (c)2003-2005 Ken Williams.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="2afe6350b059d07cb75bd42fe8c3e717187f030d" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2015 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</source>
          <target state="translated">版权所有（c）2003-2015 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="8cbc77258020bb73d4d2613484c0c85b25c299f1" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004 Sean M. Burke.</source>
          <target state="translated">Copyright (c)2004 Sean M.Burke.</target>
        </trans-unit>
        <trans-unit id="68da7dd6a77efed4cbb3653f046ac6a3a62b384b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="81397d758a65133b90ab0602bb70a5a4dd4563d7" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004,2007 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004,2007 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="3c8167cf442af8fc4f64de836da6cfdb60bde4e8" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-14 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004-14 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="6b274ec54ed3e9fc14376e565d4163bda3b1ca64" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-2005 Nokia. All rights reserved.</source>
          <target state="translated">Copyright (c)2004-2005 Nokia.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="00c3184f7198be0bfec2c01f0ef09d44048c6235" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-2013 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Copyright (c)2004-2013 by the Perl 5 Porters.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="08da8c434007b220b2ae85c8f6ae67bced13a749" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c)2005 Paul Marquess.保留所有权利。这个程序是自由软件;你可以在与Perl本身相同的条款下重新发布它和/或修改它。</target>
        </trans-unit>
        <trans-unit id="626531bda13f14d08f7f1720b4b85c8df8972de4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005-2014 Paul Marquess. All rights reserved.</source>
          <target state="translated">Copyright (c)2005-2014 Paul Marquess.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="f4b7861e56dd95d2fb72c43ec9bcffc12d2604f4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2006-2007 Jarkko Hietaniemi.</source>
          <target state="translated">Copyright (c)2006-2007 Jarkko Hietaniemi.</target>
        </trans-unit>
        <trans-unit id="ca4bb54bc6b524ec7b6211da633ce092f06642b6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-10 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Based on the idea of &lt;code&gt;base.pm&lt;/code&gt; , which was introduced with Perl 5.004_04.</source>
          <target state="translated">版权（C）2007-10最大Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; 基于的想法 &lt;code&gt;base.pm&lt;/code&gt; ，将其用Perl 5.004_04引入。</target>
        </trans-unit>
        <trans-unit id="99b55113ec04a69f163df98ad79820c69bf73427" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; . All rights reserved.</source>
          <target state="translated">版权所有（c）2007-2011，Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; 。版权所有。</target>
        </trans-unit>
        <trans-unit id="edf65b9e5034d506f64cda4d822d94cf071d2118" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2008 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有（c）2008 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;。版权所有。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="d2961ceaca647df086cd88aa0aa9059e913775ed" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011 brian d foy. All rights reserved.</source>
          <target state="translated">Copyright (c)2011 brian d foy.All rights reserved.保留所有权利。</target>
        </trans-unit>
        <trans-unit id="0a0578f5c0a1861e0a6616062cbeff94f9471da0" translate="yes" xml:space="preserve">
          <source>Copyright 1995-1997,2002-2004 Gisle Aas.</source>
          <target state="translated">Copyright 1995-1997,2002-2004 Gisle Aas.</target>
        </trans-unit>
        <trans-unit id="40d0702e44bca347009394197d44a9e6c4610d74" translate="yes" xml:space="preserve">
          <source>Copyright 1995-1999, 2001-2004, 2010 Gisle Aas.</source>
          <target state="translated">Copyright 1995-1999,2001-2004,2010 Gisle Aas.</target>
        </trans-unit>
        <trans-unit id="9f586c7c8d64bfd9e85b5c08564c28475c2476d0" translate="yes" xml:space="preserve">
          <source>Copyright 1996 Zenin. Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;. Copyright 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;. This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">版权所有1996 Zenin。版权所有1996、1997、1998、2000、2001、2002、2005、2006、2008、2009、2010、2011、2012、2013、2014 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;。版权所有2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;。该程序是免费软件；您可以按照与Perl本身相同的条款重新分发和/或修改它。</target>
        </trans-unit>
        <trans-unit id="2578ceec7e839432122171b06d2ebf101a0829d8" translate="yes" xml:space="preserve">
          <source>Copyright 1997 - 2001 Damian Conway. All Rights Reserved.</source>
          <target state="translated">版权所有1997-2001年Damian Conway。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="e24c0d040bccb06d10ccb3a57cbbc46e6ed0dddf" translate="yes" xml:space="preserve">
          <source>Copyright 1998 The Perl Journal.</source>
          <target state="translated">Copyright 1998 The Perl Journal.</target>
        </trans-unit>
        <trans-unit id="d52fcfe7bec45098d75b5470bde1a0d7ed1a805a" translate="yes" xml:space="preserve">
          <source>Copyright 1998, 1999, 2000, 2001, 2012 by Mark Jason Dominus</source>
          <target state="translated">1998、1999、2000、2001、2012年,马克-杰森-多米努斯版权所有。</target>
        </trans-unit>
        <trans-unit id="25fd40d58410cd1696c803df7d48f5ed2513b4fb" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2002、2003、2004、2005、2006、2007、2008、2009、2010、2012、2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="beb00d2f951db1eb5afb7de8fb7c0bdeb6824fdf" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2002, 2004, 2006, 2008, 2009, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2002、2004、2006、2008、2009、2012、2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="a467ad5fa2d0aa209d23ad0c1537c33c44052bff" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2004、2006、2008、2010 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="d116660891649b2a4f34cbcb8ed7ded670e6b71e" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2000、2001、2004、2006、2008、2010、2012、2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="3b5d92e90abbe2d5c568afb5c521beac86f1e04e" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2002, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2001、2002、2004、2006、2008、2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="24528ac4ae30b0fed790404fa53cadcc8ddc8c0c" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有1999、2001、2004、2006、2008、2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="233c7c72bfb3a12d36d9a0b1a2a2236732bf795f" translate="yes" xml:space="preserve">
          <source>Copyright 2000 by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;. Copyright 2001, 2004, 2008 by Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;版权所有2000。Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;版权所有2001、2004、2008。</target>
        </trans-unit>
        <trans-unit id="bac1b99511dfac3f040f153e32b31825485f6b22" translate="yes" xml:space="preserve">
          <source>Copyright 2001 by Jarkko Hietaniemi</source>
          <target state="translated">2001年版权所有,作者:Jarkko Hietaniemi。</target>
        </trans-unit>
        <trans-unit id="39f328bf52bbb81edfba43d285c298d3543ac18c" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">版权所有2001、2008、2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="7c959eb5c2acf1300054205c4d9f5d4cbb02d027" translate="yes" xml:space="preserve">
          <source>Copyright 2001, Larry Wall.</source>
          <target state="translated">2001年,拉里-沃尔版权所有。</target>
        </trans-unit>
        <trans-unit id="0e90130d5f5b2ccf88af0b6d57add0a492ab06a4" translate="yes" xml:space="preserve">
          <source>Copyright 2001-2008 by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">Michael G Schwern版权所有2001-2008 &amp;lt;schwern@pobox.com&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="758760659ae9e9da078236b8c96e4f04f45e80be" translate="yes" xml:space="preserve">
          <source>Copyright 2001-2011 Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;. Now maintained by Perl 5 Porters.</source>
          <target state="translated">版权所有2001-2011 Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;。现在由Perl 5 Porters维护。</target>
        </trans-unit>
        <trans-unit id="24f4f8eae6a435477fe3bf3b0fd15810a567f325" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2008 by chromatic &amp;lt;chromatic@wgz.org&amp;gt; and Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">chromical &amp;lt;色度@ chromus @ wgz.org&amp;gt;和Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;版权所有2002-2008。</target>
        </trans-unit>
        <trans-unit id="9ad00efbd2d58cad6bbe8ee8a6e69c0624704508" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2014 Dan Kogai</source>
          <target state="translated">Copyright 2002-2014 Dan Kogai</target>
        </trans-unit>
        <trans-unit id="adff1afaa96bc6908438762288df7e0c84cec743" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2014 by Ken Williams, David Golden and other contributors. All rights reserved.</source>
          <target state="translated">版权2002-2014,作者:Ken Williams、David Golden和其他撰稿人。保留所有权利。</target>
        </trans-unit>
        <trans-unit id="718ed72e455fb194df80ae2d0693e8d68c4004c0" translate="yes" xml:space="preserve">
          <source>Copyright 2003, 2004, 2005, 2006 by Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;.</source>
          <target state="translated">唐（Audrey Tang）&amp;lt;cpan@audreyt.org&amp;gt;版权所有2003、2004、2005、2006。</target>
        </trans-unit>
        <trans-unit id="03f9138fcf89a29043a1e2a727cfe2c79ab79b5d" translate="yes" xml:space="preserve">
          <source>Copyright 2006 Yves Orton and 2007 &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason.</source>
          <target state="translated">版权所有2006 Yves Orton和2007&amp;AElig;varArnfj&amp;ouml;r&amp;eth;Bjarmason。</target>
        </trans-unit>
        <trans-unit id="a7b10ddec953c21d4f38ad07fa70d878c1a1f6b9" translate="yes" xml:space="preserve">
          <source>Copyright 2006-2008 Curtis &quot;Ovid&quot; Poe, all rights reserved.</source>
          <target state="translated">Copyright 2006-2008 Curtis &quot;Ovid&quot; Poe,all rights reserved.</target>
        </trans-unit>
        <trans-unit id="2dc2b4cddeffd8148859258dfa192ac667c79bfb" translate="yes" xml:space="preserve">
          <source>Copyright 2007-2011 Andy Armstrong.</source>
          <target state="translated">Copyright 2007-2011 Andy Armstrong.</target>
        </trans-unit>
        <trans-unit id="eeaf3232c6892ccf2f411117d77f548428dc4ef2" translate="yes" xml:space="preserve">
          <source>Copyright 2008-2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="translated">保罗&amp;middot;芬威克（Paul Fenwick）版权所有2008-2009 &amp;lt;pjf@perltraining.com.au&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4da493f5c04edefe46b0fd74ae429ad56b0dc531" translate="yes" xml:space="preserve">
          <source>Copyright 2010, brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</source>
          <target state="translated">版权所有2010，brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b47a4389c364b8abd358a0f467c39b15dbdea1cb" translate="yes" xml:space="preserve">
          <source>Copyright 2013 Tom Christiansen.</source>
          <target state="translated">Copyright 2013 Tom Christiansen.</target>
        </trans-unit>
        <trans-unit id="f64383541384dc3e2eb364fd68051f5f3748d4e0" translate="yes" xml:space="preserve">
          <source>Copyright Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002, 2004.</source>
          <target state="translated">版权Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002、2004。</target>
        </trans-unit>
        <trans-unit id="2e7c31625c0b13304190ac801e54ebae59236c4f" translate="yes" xml:space="preserve">
          <source>Copyright Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002.</source>
          <target state="translated">版权所有Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002。</target>
        </trans-unit>
        <trans-unit id="a9f33cf7a4a5fda17e447238e45c4abe5cf41f08" translate="yes" xml:space="preserve">
          <source>Copyright(C) 2001-2012, SADAHIRO Tomoyuki. Japan. All rights reserved.</source>
          <target state="translated">Copyright(C)2001-2012,SADAHIRO Tomoyuki.日本。版权所有,不得转载。</target>
        </trans-unit>
        <trans-unit id="31e40e06c4bcb283edebf594f2bd7378bcf58ce9" translate="yes" xml:space="preserve">
          <source>Copyrights</source>
          <target state="translated">Copyrights</target>
        </trans-unit>
        <trans-unit id="97c1dd3ec24454b864720faa54a3abda989f1564" translate="yes" xml:space="preserve">
          <source>Core Images</source>
          <target state="translated">核心图像</target>
        </trans-unit>
        <trans-unit id="99bb4f655f44c04dddda9615c8eb20527c7cc996" translate="yes" xml:space="preserve">
          <source>Core Layers</source>
          <target state="translated">核心层</target>
        </trans-unit>
        <trans-unit id="bc6e3a410aa372c2487ec123aa51c13c61ba9355" translate="yes" xml:space="preserve">
          <source>Core Modules</source>
          <target state="translated">核心模块</target>
        </trans-unit>
        <trans-unit id="783102c8987eec788fa90e6f2de9f84f1caf1885" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for the wide and multibyte characters of the C standards, except under UTF-8 locales, so this might be a rather useless function.</source>
          <target state="translated">Core Perl对C标准的宽字符和多字节字符没有任何支持,除了在UTF-8区位下,所以这可能是一个相当无用的功能。</target>
        </trans-unit>
        <trans-unit id="54b87e196a65aa25a514c9ea7b2551d2cd6978d7" translate="yes" xml:space="preserve">
          <source>Core Perl modules</source>
          <target state="translated">核心Perl模块</target>
        </trans-unit>
        <trans-unit id="67d35c68c7df776a652523a80899e489b317a9b0" translate="yes" xml:space="preserve">
          <source>Core modules</source>
          <target state="translated">核心模块</target>
        </trans-unit>
        <trans-unit id="ce831d7b130ca37b50a0ab62dd64d0056aa444db" translate="yes" xml:space="preserve">
          <source>Correspondingly, sending a signal to a thread does not disrupt the operation the thread is currently working on: The signal will be acted upon after the current operation has completed. For instance, if the thread is</source>
          <target state="translated">相应地,向线程发送信号不会中断线程当前正在进行的操作。信号将在当前操作完成后被执行。例如,如果线程正在</target>
        </trans-unit>
        <trans-unit id="5d25cbf547052ef26b7bd5b301c3044498d75c9a" translate="yes" xml:space="preserve">
          <source>Could it be a module instead?</source>
          <target state="translated">会不会是一个模块呢?</target>
        </trans-unit>
        <trans-unit id="09e55edb3e65ad6732e40f6cd984478db5d78fce" translate="yes" xml:space="preserve">
          <source>Counting Repetitions</source>
          <target state="translated">重复计数</target>
        </trans-unit>
        <trans-unit id="6638251b6bc95fa3de20882497e46af5dda04835" translate="yes" xml:space="preserve">
          <source>Counting bytes and watching alignments in lengthy structures is bound to be a drag. Isn't there a way we can create the template with a simple program? Here's a C program that does the trick:</source>
          <target state="translated">在冗长的结构中计算字节和观察排列,势必是一种拖累。难道我们没有办法用一个简单的程序来创建模板吗?这里有一个C程序可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="1cfd2770db664059c57a58368f587a061ac0b45a" translate="yes" xml:space="preserve">
          <source>Counting the number of entries in a hash via &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(keys(%hash))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(values(%hash)&lt;/a&gt;&lt;/code&gt;) is inefficient since it needs to iterate through all the entries with FIRSTKEY/NEXTKEY.</source>
          <target state="translated">通过 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(keys(%hash))&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(values(%hash)&lt;/a&gt;&lt;/code&gt; ）计算哈希中的条目数效率很低，因为它需要使用FIRSTKEY / NEXTKEY遍历所有条目。</target>
        </trans-unit>
        <trans-unit id="b4d6e94a784b6e291943d7b2c4e0fc93520909e7" translate="yes" xml:space="preserve">
          <source>Counting the opening parentheses to get the correct number for a backreference is error-prone as soon as there is more than one capturing group. A more convenient technique became available with Perl 5.10: relative backreferences. To refer to the immediately preceding capture group one now may write &lt;code&gt;\g{-1}&lt;/code&gt; , the next but last is available via &lt;code&gt;\g{-2}&lt;/code&gt; , and so on.</source>
          <target state="translated">一旦有多个捕获组，计算开括号以获得正确数量的反向引用就容易出错。Perl 5.10提供了更方便的技术：相对反向引用。现在要引用紧接的捕获组，可以写 &lt;code&gt;\g{-1}&lt;/code&gt; ，下一个但最后一个可以通过 &lt;code&gt;\g{-2}&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="2815297cdc53ede6ff2cb024503f24e17cc60a88" translate="yes" xml:space="preserve">
          <source>Coverity</source>
          <target state="translated">Coverity</target>
        </trans-unit>
        <trans-unit id="9fbbe918826f27bbfcf0ae0fdd88d18c0d6bd29a" translate="yes" xml:space="preserve">
          <source>Coverity (&lt;a href=&quot;http://www.coverity.com/&quot;&gt;http://www.coverity.com/&lt;/a&gt;) is a product similar to lint and as a testbed for their product they periodically check several open source projects, and they give out accounts to open source developers to the defect databases.</source>
          <target state="translated">Coverity（&lt;a href=&quot;http://www.coverity.com/&quot;&gt;http://www.coverity.com/&lt;/a&gt;）是一种类似于lint的产品，并且作为其产品的测试平台，他们定期检查几个开源项目，并向缺陷数据库提供给开源开发人员的帐户。</target>
        </trans-unit>
        <trans-unit id="30f10fb60094a5736894608b7733f1893682a3ec" translate="yes" xml:space="preserve">
          <source>Cppsym.U</source>
          <target state="translated">Cppsym.U</target>
        </trans-unit>
        <trans-unit id="5ebece852ecc4ea6150b191a89b2f264b38241db" translate="yes" xml:space="preserve">
          <source>Create VMS linker options files specifying universal symbols for this extension's shareable image, and listing other shareable images or libraries to which it should be linked.</source>
          <target state="translated">创建VMS链接器选项文件,指定该扩展的可共享图像的通用符号,并列出其他应链接到的可共享图像或库。</target>
        </trans-unit>
        <trans-unit id="02cd22cf6983deda3bb052ea3365661fc9cd4123" translate="yes" xml:space="preserve">
          <source>Create a &quot;symlink&quot; or copy your bash.exe to sh.exe in your &lt;code&gt;($DJDIR)/bin&lt;/code&gt; directory.</source>
          <target state="translated">创建一个&amp;ldquo;符号链接&amp;rdquo;或将您的bash.exe复制到 &lt;code&gt;($DJDIR)/bin&lt;/code&gt; 目录中的sh.exe。</target>
        </trans-unit>
        <trans-unit id="18cde0b66e2ee12909d4ed1d9eb6ea9c47f3f1a9" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an hexadecimal, binary or octal number in string form.</source>
          <target state="translated">从一个十六进制、二进制或八进制的数字中创建一个字符串形式的BigRat。</target>
        </trans-unit>
        <trans-unit id="473f8f658940e07568176b34bfa435fa80921f41" translate="yes" xml:space="preserve">
          <source>Create a Zip64 zip file/buffer. This option is used if you want to store files larger than 4 Gig or store more than 64K files in a single zip archive..</source>
          <target state="translated">创建一个Zip64压缩文件/缓冲区。如果你想存储大于4GB的文件或在一个压缩包中存储超过64K的文件,就会用到这个选项。</target>
        </trans-unit>
        <trans-unit id="11130cde618dc2de912450499554a974016ed7af" translate="yes" xml:space="preserve">
          <source>Create a batch file to run your program, and codify it in &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; (see the</source>
          <target state="translated">创建一个批处理文件以运行您的程序，然后将其编入 &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; 中（请参阅</target>
        </trans-unit>
        <trans-unit id="bc3d1ef79a98971d38e02b76ce890553cad199f4" translate="yes" xml:space="preserve">
          <source>Create a class for the language your internal keys are in. Name the class after the language-tag for that language, in lowercase, with dashes changed to underscores. Assuming your project's first language is US English, you should call this Projname::L10N::en_us. It should consist minimally of:</source>
          <target state="translated">为你的内部键所使用的语言创建一个类。以该语言的语言标签命名该类,用小写,破折号改为下划线。假设你的项目的第一语言是美国英语,你应该把它叫做 Projname::L10N::en_us。它应该由以下几个部分组成</target>
        </trans-unit>
        <trans-unit id="af5af99f136ed2ceb6678c03a38a42040f4ea033" translate="yes" xml:space="preserve">
          <source>Create a class for your localization project. This is the name of the class that you'll use in the idiom:</source>
          <target state="translated">为你的本地化项目创建一个类。这是您将在成语中使用的类的名称。</target>
        </trans-unit>
        <trans-unit id="d140dda80edfdc914d774a5fe6e3ebbdbcd954b7" translate="yes" xml:space="preserve">
          <source>Create a directory from a template. The template must end in X's that are replaced by the routine.</source>
          <target state="translated">从模板中创建一个目录。模板必须以X结尾,由例程替换。</target>
        </trans-unit>
        <trans-unit id="87942e6092afa4288ce7b6b61b23174e2b70e314" translate="yes" xml:space="preserve">
          <source>Create a directory from the supplied template. This template is similar to that described for tempfile(). `X' characters at the end of the template are replaced with random letters to construct the directory name. At least four `X' characters must be in the template.</source>
          <target state="translated">从提供的模板中创建一个目录。这个模板类似于tempfile()的模板。模板末尾的 &quot;X &quot;字符被随机字母替换,以构建目录名。模板中至少要有四个 &quot;X &quot;字符。</target>
        </trans-unit>
        <trans-unit id="97bd03e560de52beb6792bf090df2f8c408c1b3d" translate="yes" xml:space="preserve">
          <source>Create a directory in tmpdir() (see L&amp;lt;:spec&amp;gt;).</source>
          <target state="translated">在tmpdir（）中创建目录（请参见L &amp;lt;：spec&amp;gt;）。</target>
        </trans-unit>
        <trans-unit id="4362437c4dee6826064eba29335269a256a16b4f" translate="yes" xml:space="preserve">
          <source>Create a module Makefile</source>
          <target state="translated">创建一个模块Makefile</target>
        </trans-unit>
        <trans-unit id="50c598518f68bf9f28b1793bfb579fbc50559040" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;App::Prove&lt;/code&gt; . Optionally a hash ref of attribute initializers may be passed.</source>
          <target state="translated">创建一个新的 &lt;code&gt;App::Prove&lt;/code&gt; 。可选地，可以传递属性初始化器的哈希引用。</target>
        </trans-unit>
        <trans-unit id="637b03561b650422dbca5301699123a3114e7256" translate="yes" xml:space="preserve">
          <source>Create a new Math::BigRat object. Input can come in various forms:</source>
          <target state="translated">创建一个新的Math::BigRat对象。输入可以有多种形式。</target>
        </trans-unit>
        <trans-unit id="37ec6f7cf703eb7c8d20ea11f3b6a2d9d8f1bdf2" translate="yes" xml:space="preserve">
          <source>Create a new Perl external subroutine named $perl_name using $symref as a pointer to the function which implements the routine. This is simply a direct call to newXSUB(). Returns a reference to the installed function.</source>
          <target state="translated">使用$symref作为实现该例程的函数的指针,创建一个名为$perl_name的新Perl外部子程序。这只是对newXSUB()的直接调用。返回对安装的函数的引用。</target>
        </trans-unit>
        <trans-unit id="8b815122ea1b53bab2fea52aa82c0738dc639ea2" translate="yes" xml:space="preserve">
          <source>Create a new SigSet object. This object will be destroyed automatically when it is no longer needed. Arguments may be supplied to initialize the set.</source>
          <target state="translated">创建一个新的SigSet对象。当不再需要该对象时,该对象将被自动销毁。可以提供参数来初始化该集。</target>
        </trans-unit>
        <trans-unit id="8f2191aaab0a2fe03dd235f940c62b8ea3693cca" translate="yes" xml:space="preserve">
          <source>Create a new Termios object. This object will be destroyed automatically when it is no longer needed. A Termios object corresponds to the &lt;code&gt;termios&lt;/code&gt; C struct. &lt;code&gt;new()&lt;/code&gt; mallocs a new one, &lt;code&gt;getattr()&lt;/code&gt; fills it from a file descriptor, and &lt;code&gt;setattr()&lt;/code&gt; sets a file descriptor's parameters to match Termios' contents.</source>
          <target state="translated">创建一个新的Termios对象。不再需要该对象时，它将自动销毁。Termios对象与 &lt;code&gt;termios&lt;/code&gt; C结构相对应。 &lt;code&gt;new()&lt;/code&gt; 分配一个新变量， &lt;code&gt;getattr()&lt;/code&gt; 从文件描述符中填充它， &lt;code&gt;setattr()&lt;/code&gt; 设置文件描述符的参数以匹配Termios的内容。</target>
        </trans-unit>
        <trans-unit id="e8e14e0bd357803bf052153bab4c0a139ecb8716" translate="yes" xml:space="preserve">
          <source>Create a new cache object. This object can hold an arbitrary number of POD documents of class Pod::Cache::Item.</source>
          <target state="translated">创建一个新的缓存对象。这个对象可以容纳任意数量的POD类Pod::Cache::Item文档。</target>
        </trans-unit>
        <trans-unit id="7234e7b8446d88bd6969be5e67b0f7bcc7d431e8" translate="yes" xml:space="preserve">
          <source>Create a new directory called Mytest2 at the same level as the directory Mytest. In the Mytest2 directory, create another directory called mylib, and cd into that directory.</source>
          <target state="translated">在Mytest目录下创建一个名为Mytest2的新目录。在Mytest2目录下,创建另一个名为mylib的目录,并将其cd到该目录下。</target>
        </trans-unit>
        <trans-unit id="31384a4a0ee35aebb04c1c58d30d768f683e1f93" translate="yes" xml:space="preserve">
          <source>Create a new directory with the name &lt;code&gt;DIR&lt;/code&gt; . If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">创建一个名为 &lt;code&gt;DIR&lt;/code&gt; 的新目录。如果 &lt;code&gt;RECURSE&lt;/code&gt; 是</target>
        </trans-unit>
        <trans-unit id="d7b61de6466590ec52305327e27f85b32bce01c7" translate="yes" xml:space="preserve">
          <source>Create a new file with mode 0640. Set up the file for writing.</source>
          <target state="translated">建立一个新的文件,模式为0640。设置文件的写法。</target>
        </trans-unit>
        <trans-unit id="a881eb9aa6d20d6d909d029e4c81928e7bc18391" translate="yes" xml:space="preserve">
          <source>Create a new file. This returns a file descriptor like the ones returned by &lt;code&gt;POSIX::open&lt;/code&gt; . Use &lt;code&gt;POSIX::close&lt;/code&gt; to close the file.</source>
          <target state="translated">创建一个新文件。这将返回一个文件描述符，类似于 &lt;code&gt;POSIX::open&lt;/code&gt; 返回的文件描述符。使用 &lt;code&gt;POSIX::close&lt;/code&gt; 关闭文件。</target>
        </trans-unit>
        <trans-unit id="74dd602c7c6a1f1cb930e156dfc79f8193fd0b55" translate="yes" xml:space="preserve">
          <source>Create a new instance of the specified class.</source>
          <target state="translated">创建一个新的指定类的实例。</target>
        </trans-unit>
        <trans-unit id="6cc585773d59263f24bc1ca5a399b6f4d519e67f" translate="yes" xml:space="preserve">
          <source>Create a new list object. Properties may be specified through a hash reference like this:</source>
          <target state="translated">创建一个新的列表对象。属性可以通过像这样的哈希引用来指定。</target>
        </trans-unit>
        <trans-unit id="9ba7c62c943cded5489456e206c446db08d870de" translate="yes" xml:space="preserve">
          <source>Create a new object.</source>
          <target state="translated">创建一个新对象。</target>
        </trans-unit>
        <trans-unit id="fcb9d9d9881e78822adfe0bbac4eee7555066ecb" translate="yes" xml:space="preserve">
          <source>Create a new object. Any arguments passed to &lt;code&gt;new&lt;/code&gt; will be passed on to the &lt;a href=&quot;#_initialize&quot;&gt;_initialize&lt;/a&gt; method. Returns a new object.</source>
          <target state="translated">创建一个新对象。传递给 &lt;code&gt;new&lt;/code&gt; 的所有参数都将传递给&lt;a href=&quot;#_initialize&quot;&gt;_initialize&lt;/a&gt;方法。返回一个新对象。</target>
        </trans-unit>
        <trans-unit id="0a8a658289cee30e5b27a60292e471ac179b2181" translate="yes" xml:space="preserve">
          <source>Create a new padlist, updating the global variables for the currently-compiling padlist to point to the new padlist. The following flags can be OR'ed together:</source>
          <target state="translated">创建一个新的padlist,更新当前编译的padlist的全局变量以指向新的padlist。以下标志可以一起被OR'ed。</target>
        </trans-unit>
        <trans-unit id="ee2261993683f4a99c0cc5814cbab351173c8386" translate="yes" xml:space="preserve">
          <source>Create a new ping object. All of the parameters are optional. $proto specifies the protocol to use when doing a ping. The current choices are &quot;tcp&quot;, &quot;udp&quot;, &quot;icmp&quot;, &quot;stream&quot;, &quot;syn&quot;, or &quot;external&quot;. The default is &quot;tcp&quot;.</source>
          <target state="translated">创建一个新的ping对象。所有的参数都是可选的。$proto 指定在进行 ping 时要使用的协议,目前的选择是 &quot;tcp&quot;、&quot;udp&quot;、&quot;icmp&quot;、&quot;stream&quot;、&quot;syn &quot;或 &quot;external&quot;。当前的选择是 &quot;tcp&quot;、&quot;udp&quot;、&quot;icmp&quot;、&quot;stream&quot;、&quot;syn &quot;或 &quot;external&quot;。默认为 &quot;tcp&quot;。</target>
        </trans-unit>
        <trans-unit id="3430e716a61ae83b9e144c2c5c8622a75ae88917" translate="yes" xml:space="preserve">
          <source>Create a new semaphore set associated with &lt;code&gt;KEY&lt;/code&gt; . &lt;code&gt;NSEMS&lt;/code&gt; is the number of semaphores in the set. A new set is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的新信号量集。 &lt;code&gt;NSEMS&lt;/code&gt; 是集合中信号量的数量。如果创建新集</target>
        </trans-unit>
        <trans-unit id="4a7ef28ba91fedd9a746c8523a72dbcb8eb69fb7" translate="yes" xml:space="preserve">
          <source>Create a perl subroutine for the specified macros rather than autoload with the constant() subroutine. These macros are assumed to have a return type of &lt;b&gt;char *&lt;/b&gt;, e.g., -s sec_rgy_wildcard_name,sec_rgy_wildcard_sid.</source>
          <target state="translated">为指定的宏创建一个perl子例程，而不是使用constant（）子例程自动加载。假定这些宏具有&lt;b&gt;char *&lt;/b&gt;的返回类型，例如-s sec_rgy_wildcard_name，sec_rgy_wildcard_sid。</target>
        </trans-unit>
        <trans-unit id="481a60ee3395b3b1cf7945f04080acc645acd340" translate="yes" xml:space="preserve">
          <source>Create a reverse hash:</source>
          <target state="translated">创建一个反向哈希。</target>
        </trans-unit>
        <trans-unit id="f0e04e4f20e56fddcf662a44731769084042c59e" translate="yes" xml:space="preserve">
          <source>Create a set with &lt;code&gt;SIGUSR1&lt;/code&gt; .</source>
          <target state="translated">使用 &lt;code&gt;SIGUSR1&lt;/code&gt; 创建一个集合。</target>
        </trans-unit>
        <trans-unit id="3ac62f075bf8001f6525a8640c77b2f7fb60c81b" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using an object oriented interface.</source>
          <target state="translated">使用面向对象的接口创建一个临时目录。</target>
        </trans-unit>
        <trans-unit id="303ec3c6180101ba95b912105da0ce7bfcb1deb4" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using the supplied template, but attempt to remove it (and all files inside it) when the program exits. Note that an attempt will be made to remove all files from the directory even if they were not created by this module (otherwise why ask to clean it up?). The directory removal is made with the rmtree() function from the L&amp;lt;:path&amp;gt; module. Of course, if the template is not specified, the temporary directory will be created in tmpdir() and will also be removed at program exit.</source>
          <target state="translated">使用提供的模板创建一个临时目录，但是在程序退出时尝试将其删除（以及其中的所有文件）。请注意，即使文件不是由该模块创建的，也将尝试从目录中删除所有文件（否则为什么要对其进行清理？）。使用L &amp;lt;：path&amp;gt;模块的rmtree（）函数删除目录。当然，如果未指定模板，则将在tmpdir（）中创建临时目录，并且还将在程序退出时将其删除。</target>
        </trans-unit>
        <trans-unit id="55698f6a3601555bd654382a0b288d1302315bd9" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the current directory using the supplied template. Trailing `X' characters are replaced with random letters to generate the filename. At least four `X' characters must be present at the end of the template.</source>
          <target state="translated">使用提供的模板在当前目录下创建一个临时文件。后面的 &quot;X &quot;字符用随机字母代替,以生成文件名。模板末尾必须至少有四个 &quot;X &quot;字符。</target>
        </trans-unit>
        <trans-unit id="bc36137f6fa982d9a92b93d4881687f9cba40176" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the directory specified for temporary files, as specified by the tmpdir() function in L&amp;lt;:spec&amp;gt;.</source>
          <target state="translated">在为临时文件指定的目录中创建一个临时文件，如L &amp;lt;：spec&amp;gt;中的tmpdir（）函数所指定。</target>
        </trans-unit>
        <trans-unit id="24495d1f7765573877dcd812b1a4948cc60660ee" translate="yes" xml:space="preserve">
          <source>Create a temporary file object.</source>
          <target state="translated">创建一个临时文件对象。</target>
        </trans-unit>
        <trans-unit id="69935c6719cc9d9adfa0d718baf1f913522468e6" translate="yes" xml:space="preserve">
          <source>Create an empty set.</source>
          <target state="translated">创建一个空集。</target>
        </trans-unit>
        <trans-unit id="36282f608207859c78f549fdddb59df654b98999" translate="yes" xml:space="preserve">
          <source>Create an interprocess channel. This returns file descriptors like those returned by &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">创建一个进程间通道。返回的文件描述符类似于 &lt;code&gt;POSIX::open&lt;/code&gt; 返回的文件描述符。</target>
        </trans-unit>
        <trans-unit id="ff79fe2c6259816c55880a8381a93476c6afdffb" translate="yes" xml:space="preserve">
          <source>Create an iterator. Expects one argument containing a filehandle.</source>
          <target state="translated">创建一个迭代器。期待一个包含文件柄的参数。</target>
        </trans-unit>
        <trans-unit id="616caec393d0885ab17bf7298761058cad98107e" translate="yes" xml:space="preserve">
          <source>Create an iterator. Expects one argument containing a hashref of the form:</source>
          <target state="translated">创建一个迭代器。期待一个参数,该参数包含一个形式的哈希夫。</target>
        </trans-unit>
        <trans-unit id="7016a4d543732a6745b00979a34621bd52cd3c30" translate="yes" xml:space="preserve">
          <source>Create an iterator. Provided by &lt;a href=&quot;../object&quot;&gt;TAP::Object&lt;/a&gt;.</source>
          <target state="translated">创建一个迭代器。由&lt;a href=&quot;../object&quot;&gt;TAP :: Object提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a61216ea6bd1172096b7e521d63d97ec506b32" translate="yes" xml:space="preserve">
          <source>Create an iterator. Takes one argument: an &lt;code&gt;$array_ref&lt;/code&gt;</source>
          <target state="translated">创建一个迭代器。接受一个参数： &lt;code&gt;$array_ref&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d452463d593e43e7b412e932435358550d3459d0" translate="yes" xml:space="preserve">
          <source>Create an object to store the state of a deparsing operation and any options. The options are the same as those that can be given on the command line (see &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;); options that are separated by commas after &lt;b&gt;-MO=Deparse&lt;/b&gt; should be given as separate strings.</source>
          <target state="translated">创建一个对象以存储解析操作和所有选项的状态。这些选项与可以在命令行上给出的选项相同（请参阅&lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;）；在&lt;b&gt;-MO = Deparse&lt;/b&gt;之后用逗号分隔的选项应作为单独的字符串给出。</target>
        </trans-unit>
        <trans-unit id="9112787448a0b0a1b976b8609db263871f034c88" translate="yes" xml:space="preserve">
          <source>Create and return a new interpreter by cloning the current one.</source>
          <target state="translated">通过克隆当前的解释器创建并返回一个新的解释器。</target>
        </trans-unit>
        <trans-unit id="681f59f5e6812683ee0d03597d9f2b4876cee8dc" translate="yes" xml:space="preserve">
          <source>Create header and footer blocks containing the text of the &quot;NAME&quot; section.</source>
          <target state="translated">创建包含 &quot;名称 &quot;部分文本的页眉和页脚块。</target>
        </trans-unit>
        <trans-unit id="2d5ca272bf9f8abe24e8b1f4fd428df6751e11d3" translate="yes" xml:space="preserve">
          <source>Create or remove directory trees</source>
          <target state="translated">创建或删除目录树</target>
        </trans-unit>
        <trans-unit id="896a63b966c3b07644d559d9c2dce6fddbbfbefe" translate="yes" xml:space="preserve">
          <source>Create simple getter/setters.</source>
          <target state="translated">创建简单的getter/setters。</target>
        </trans-unit>
        <trans-unit id="82149e5249dc1d6a3b9690dd546cd84a48533f50" translate="yes" xml:space="preserve">
          <source>Created - 18 Jan 2001</source>
          <target state="translated">创建于2001年1月18日</target>
        </trans-unit>
        <trans-unit id="33db1a73ae0e0d1852a295cdab91f536d92a8891" translate="yes" xml:space="preserve">
          <source>Created by Tom Hughes &amp;lt;</source>
          <target state="translated">由汤姆&amp;middot;休斯（Tom Hughes）创建&amp;lt;</target>
        </trans-unit>
        <trans-unit id="e6cdaaaee22d0c4e6b235592749143d45c2fe9b7" translate="yes" xml:space="preserve">
          <source>Creates a constant sub equivalent to Perl &lt;code&gt;sub FOO () { 123 }&lt;/code&gt; which is eligible for inlining at compile-time.</source>
          <target state="translated">创建一个等效于Perl &lt;code&gt;sub FOO () { 123 }&lt;/code&gt; 的常量子，该常量可以在编译时进行内联。</target>
        </trans-unit>
        <trans-unit id="7f75da7fd0f98bc8dc84b4b1a932c3f5aea3cd14" translate="yes" xml:space="preserve">
          <source>Creates a digest string exactly like the crypt(3) function in the C library (assuming that you actually have a version there that has not been extirpated as a potential munition).</source>
          <target state="translated">创建一个与 C 库中 crypt(3)函数一模一样的摘要字符串 (假设你真的有一个没有被作为潜在弹药消灭的版本)。</target>
        </trans-unit>
        <trans-unit id="eac496469522ef212783107cb6f208d37140024c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IO::Handle&lt;/code&gt; object.</source>
          <target state="translated">创建一个新的 &lt;code&gt;IO::Handle&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="950a7fce8052aa44e77d67eb7cce6a9b17f503cc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;POSIX::SigAction&lt;/code&gt; object which corresponds to the C &lt;code&gt;struct sigaction&lt;/code&gt; . This object will be destroyed automatically when it is no longer needed. The first parameter is the handler, a sub reference. The second parameter is a &lt;code&gt;POSIX::SigSet&lt;/code&gt; object, it defaults to the empty set. The third parameter contains the &lt;code&gt;sa_flags&lt;/code&gt; , it defaults to 0.</source>
          <target state="translated">创建一个新的 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 对象，该对象对应于C &lt;code&gt;struct sigaction&lt;/code&gt; 。不再需要该对象时，它将自动销毁。第一个参数是处理程序，即子引用。第二个参数是 &lt;code&gt;POSIX::SigSet&lt;/code&gt; 对象，它默认为空集。第三个参数包含 &lt;code&gt;sa_flags&lt;/code&gt; ，默认为0。</target>
        </trans-unit>
        <trans-unit id="4409ce2d7a51f583ec857ef63305d9c328af09b3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;refcounted_he&lt;/code&gt; . This consists of a single key/value pair and a reference to an existing &lt;code&gt;refcounted_he&lt;/code&gt; chain (which may be empty), and thus forms a longer chain. When using the longer chain, the new key/value pair takes precedence over any entry for the same key further along the chain.</source>
          <target state="translated">创建一个新的 &lt;code&gt;refcounted_he&lt;/code&gt; 。它由单个键/值对和对现有 &lt;code&gt;refcounted_he&lt;/code&gt; 链（可能为空）的引用组成，因此形成了更长的链。当使用较长的链时，新的键/值对优先于沿链的同一键的任何条目。</target>
        </trans-unit>
        <trans-unit id="50f1aadb519c6f1717d95b45f0702486fa9496f0" translate="yes" xml:space="preserve">
          <source>Creates a new AV and populates it with a list of SVs. The SVs are copied into the array, so they may be freed after the call to av_make. The new AV will have a reference count of 1.</source>
          <target state="translated">创建一个新的AV,并在其中填充SVs列表。SVs会被复制到数组中,所以在调用av_make后,它们可能会被释放。新的AV的引用数为1。</target>
        </trans-unit>
        <trans-unit id="33114a24c831591f9857c8f08551925f33fb6511" translate="yes" xml:space="preserve">
          <source>Creates a new AV. The reference count is set to 1.</source>
          <target state="translated">创建一个新的AV。参考数设置为1。</target>
        </trans-unit>
        <trans-unit id="aa1ac2ca7a7bb62339b5b238de6e909b22341ab0" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object from a scalar or another BigInt object. The input is accepted as decimal, hex (with leading '0x') or binary (with leading '0b').</source>
          <target state="translated">从一个标量或另一个BigInt对象创建一个新的BigInt对象。输入是十进制、十六进制(前导'0x')或二进制(前导'0b')。</target>
        </trans-unit>
        <trans-unit id="cc0f0aa1d0ba94cb717a19862e381519302e9596" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing NaN (Not A Number). If used on an object, it will set it to NaN:</source>
          <target state="translated">创建一个新的BigInt对象,表示NaN(非数字)。如果在一个对象上使用,它将把它设置为NaN。</target>
        </trans-unit>
        <trans-unit id="9de9810e6c72332db75b8fa66a77cdf8fc6dc8ae" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used on an object, it will set it to infinity:</source>
          <target state="translated">创建一个新的BigInt对象,表示无穷大。可选参数是'-'或'+',表示你想要的是无穷大还是减去无穷大。如果使用在一个对象上,它将把它设置为无穷大。</target>
        </trans-unit>
        <trans-unit id="ef067d4e1aa5d4de6db6fbb3fdb193a34b25bcd5" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing one. The optional argument is either '-' or '+', indicating whether you want one or minus one. If used on an object, it will set it to one:</source>
          <target state="translated">创建一个新的BigInt对象,代表1。可选参数是'-'或'+',表示你想要一还是减一。如果使用在一个对象上,它将把它设置为1。</target>
        </trans-unit>
        <trans-unit id="2d66a0e771c364720b98473ea0bd85073686ef36" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing zero. If used on an object, it will set it to zero:</source>
          <target state="translated">创建一个新的BigInt对象,代表零。如果在一个对象上使用,它将把它设置为零。</target>
        </trans-unit>
        <trans-unit id="f27ebfb7f2c2069457b323e2292201c271ad4602" translate="yes" xml:space="preserve">
          <source>Creates a new HV. The reference count is set to 1.</source>
          <target state="translated">创建一个新的 HV。参考数设置为1。</target>
        </trans-unit>
        <trans-unit id="5c4c9fc922e6f0fc2c8c0dc9a56aa12406f49a23" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a floating point value into it. The reference count for the SV is set to 1.</source>
          <target state="translated">创建一个新的SV,并将一个浮点值复制到其中。SV的引用次数被设置为1。</target>
        </trans-unit>
        <trans-unit id="8a706dc63eba9f9d97a63992d45f33ffaa0260f8" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. If utf8 is true, calls &lt;code&gt;SvUTF8_on&lt;/code&gt; on the new SV. Implemented as a wrapper around &lt;code&gt;newSVpvn_flags&lt;/code&gt; .</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。如果utf8为true， &lt;code&gt;SvUTF8_on&lt;/code&gt; 在新SV上调用SvUTF8_on。作为 &lt;code&gt;newSVpvn_flags&lt;/code&gt; 的包装器实现。</target>
        </trans-unit>
        <trans-unit id="ba2d40d3f42edeb3193c212e63e131081199c97e" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. The reference count for the SV is set to 1. If &lt;code&gt;len&lt;/code&gt; is zero, Perl will compute the length using strlen(), (which means if you use this option, that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte).</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。SV的引用计数设置为1。如果 &lt;code&gt;len&lt;/code&gt; 为零，则Perl将使用strlen（）计算长度（这意味着，如果使用此选项，则 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，并且必须具有终止符 &lt;code&gt;NUL&lt;/code&gt; 字节）。</target>
        </trans-unit>
        <trans-unit id="b321a7140bf968fa858a05cea608e9cde629793f" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length string. You are responsible for ensuring that the source string is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; argument is NULL the new SV will be undefined. Currently the only flag bits accepted are &lt;code&gt;SVf_UTF8&lt;/code&gt; and &lt;code&gt;SVs_TEMP&lt;/code&gt; . If &lt;code&gt;SVs_TEMP&lt;/code&gt; is set, then &lt;code&gt;sv_2mortal()&lt;/code&gt; is called on the result before returning. If &lt;code&gt;SVf_UTF8&lt;/code&gt; is set, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; is considered to be in UTF-8 and the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag will be set on the new SV. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; is a convenience wrapper for this function, defined as</source>
          <target state="translated">创建一个新的SV并将一个字符串（可能包含 &lt;code&gt;NUL&lt;/code&gt; （ &lt;code&gt;\0&lt;/code&gt; ）字符）复制到其中。 SV的引用计数设置为1。请注意，如果 &lt;code&gt;len&lt;/code&gt; 为零，Perl将创建一个零长度的字符串。您有责任确保源字符串的长度至少为 &lt;code&gt;len&lt;/code&gt; 个字节。如果 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 参数为NULL，则新的SV将是未定义的。当前，唯一接受的标志位是 &lt;code&gt;SVf_UTF8&lt;/code&gt; 和 &lt;code&gt;SVs_TEMP&lt;/code&gt; 。如果设置了 &lt;code&gt;SVs_TEMP&lt;/code&gt; ，则在返回之前对结果调用 &lt;code&gt;sv_2mortal()&lt;/code&gt; 。如果设置了 &lt;code&gt;SVf_UTF8&lt;/code&gt; ，则 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 被认为是UTF-8，并且 &lt;code&gt;SVf_UTF8&lt;/code&gt; 标志将在新的SV上设置。 &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; 是此函数的便捷包装，定义为</target>
        </trans-unit>
        <trans-unit id="564cfa2529586958403f4ae104186110ddb6158c" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string into it, which may contain &lt;code&gt;NUL&lt;/code&gt; characters (&lt;code&gt;\0&lt;/code&gt; ) and other binary data. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length (Perl) string. You are responsible for ensuring that the source buffer is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;buffer&lt;/code&gt; argument is NULL the new SV will be undefined.</source>
          <target state="translated">创建一个新的SV并将一个字符串复制到其中，其中可能包含 &lt;code&gt;NUL&lt;/code&gt; 字符（ &lt;code&gt;\0&lt;/code&gt; ）和其他二进制数据。SV的引用计数设置为1。请注意，如果 &lt;code&gt;len&lt;/code&gt; 为零，Perl将创建一个零长度（Perl）字符串。您有责任确保源缓冲区的长度至少为 &lt;code&gt;len&lt;/code&gt; 个字节。如果 &lt;code&gt;buffer&lt;/code&gt; 参数为NULL，则新的SV将是未定义的。</target>
        </trans-unit>
        <trans-unit id="9de1b0a97a64089b618097ac3dffb046bfdc6779" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies an integer into it. The reference count for the SV is set to 1.</source>
          <target state="translated">创建一个新的SV,并将一个整数复制到SV中。SV的引用次数设置为1。</target>
        </trans-unit>
        <trans-unit id="ad0aaf0d14999388a8de7db8b3ae47db90806dcf" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies an unsigned integer into it. The reference count for the SV is set to 1.</source>
          <target state="translated">创建一个新的SV,并将一个无符号整数复制到SV中。SV的引用次数被设置为1。</target>
        </trans-unit>
        <trans-unit id="e144449cf71b321cfaa7ad7d73caee74bd802815" translate="yes" xml:space="preserve">
          <source>Creates a new SV and initializes it with the string formatted like &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个新的SV并使用 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 之类的格式初始化它。</target>
        </trans-unit>
        <trans-unit id="8fe580b8ead3e78b800fd8ca819c064553dc4b84" translate="yes" xml:space="preserve">
          <source>Creates a new SV containing the pad name.</source>
          <target state="translated">创建一个包含pad名称的新SV。</target>
        </trans-unit>
        <trans-unit id="fdde1c5ef502eaafbff9afbbccd3fe8baa5b7fc2" translate="yes" xml:space="preserve">
          <source>Creates a new SV for the existing RV, &lt;code&gt;rv&lt;/code&gt; , to point to. If &lt;code&gt;rv&lt;/code&gt; is not an RV then it will be upgraded to one. If &lt;code&gt;classname&lt;/code&gt; is non-null then the new SV will be blessed in the specified package. The new SV is returned and its reference count is 1. The reference count 1 is owned by &lt;code&gt;rv&lt;/code&gt; .</source>
          <target state="translated">创建为现有房车，新的SV &lt;code&gt;rv&lt;/code&gt; ，指向。如果 &lt;code&gt;rv&lt;/code&gt; 不是RV，则它将升级为一。如果 &lt;code&gt;classname&lt;/code&gt; 不为null，则新的SV将在指定的程序包中被祝福。返回新的SV，其参考计数为1。参考计数1由 &lt;code&gt;rv&lt;/code&gt; 拥有。</target>
        </trans-unit>
        <trans-unit id="639f7c9a254704d094942032f6f23eecd10dcb3d" translate="yes" xml:space="preserve">
          <source>Creates a new SV from the hash key structure. It will generate scalars that point to the shared string table where possible. Returns a new (undefined) SV if the hek is NULL.</source>
          <target state="translated">从哈希键结构中创建一个新的SV。在可能的情况下,它将生成指向共享字符串表的标量。如果hek为NULL,则返回一个新的(未定义)SV。</target>
        </trans-unit>
        <trans-unit id="1cd7ce4c785336645dd9ca8151db8dfa4fd5a1c4" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is a copy of the original SV (using &lt;code&gt;sv_setsv&lt;/code&gt; ). The new SV is marked as mortal. It will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;sv_newmortal&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; .</source>
          <target state="translated">创建一个新的SV，它是原始SV的副本（使用 &lt;code&gt;sv_setsv&lt;/code&gt; ）。新的SV被标记为凡人。通过显式调用FREETMPS或在语句边界之类的位置进行隐式调用，将很快&amp;ldquo;销毁&amp;rdquo;它。另请参见 &lt;code&gt;sv_newmortal&lt;/code&gt; 和 &lt;code&gt;sv_2mortal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04a78f404d15207cad1d1bd98de9d1a89be2f47d" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is an exact duplicate of the original SV. (Uses &lt;code&gt;sv_setsv&lt;/code&gt; .)</source>
          <target state="translated">创建一个新的SV，它与原始SV完全相同。（使用 &lt;code&gt;sv_setsv&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="f878a6fda000644884fdbc9cf596c38a8f7b65c4" translate="yes" xml:space="preserve">
          <source>Creates a new SV with its SvPVX_const pointing to a shared string in the string table. If the string does not already exist in the table, it is created first. Turns on the SvIsCOW flag (or READONLY and FAKE in 5.16 and earlier). If the &lt;code&gt;hash&lt;/code&gt; parameter is non-zero, that value is used; otherwise the hash is computed. The string's hash can later be retrieved from the SV with the &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; macro. The idea here is that as the string table is used for shared hash keys these strings will have SvPVX_const == HeKEY and hash lookup will avoid string compare.</source>
          <target state="translated">创建一个新的SV，其SvPVX_const指向字符串表中的共享字符串。如果表中不存在该字符串，则会首先创建它。打开SvIsCOW标志（或5.16及更早版本中的READONLY和FAKE）。如果 &lt;code&gt;hash&lt;/code&gt; 参数非零，则使用该值；否则，使用0。否则计算哈希值。稍后可以使用 &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; 宏从SV中检索字符串的哈希值。这里的想法是，由于将字符串表用于共享哈希键，因此这些字符串将具有SvPVX_const == HeKEY，并且哈希查找将避免字符串比较。</target>
        </trans-unit>
        <trans-unit id="c74397b44268e30b14c395c9db4f9d4c75043d98" translate="yes" xml:space="preserve">
          <source>Creates a new SV, of the type specified. The reference count for the new SV is set to 1.</source>
          <target state="translated">创建一个新的SV,类型为指定的SV。新SV的引用次数设置为1。</target>
        </trans-unit>
        <trans-unit id="d12e4b3cc81eba03f26cff30464e8b479b1d58a2" translate="yes" xml:space="preserve">
          <source>Creates a new SV. A non-zero &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes of preallocated string space the SV should have. An extra byte for a trailing &lt;code&gt;NUL&lt;/code&gt; is also reserved. (SvPOK is not set for the SV even if string space is allocated.) The reference count for the new SV is set to 1.</source>
          <target state="translated">创建一个新的SV。 &lt;code&gt;len&lt;/code&gt; 参数非零表示SV应该具有的预分配字符串空间的字节数。还保留了尾随 &lt;code&gt;NUL&lt;/code&gt; 的额外字节。（即使分配了字符串空间，也不会为SV设置SvPOK。）新SV的引用计数设置为1。</target>
        </trans-unit>
        <trans-unit id="e9a57493668fe58cacf785eda42f6ca83298c5e7" translate="yes" xml:space="preserve">
          <source>Creates a new compression object.</source>
          <target state="translated">创建一个新的压缩对象。</target>
        </trans-unit>
        <trans-unit id="5d1118553623fb7729c552dfc670d49ec70f74e5" translate="yes" xml:space="preserve">
          <source>Creates a new empty queue.</source>
          <target state="translated">创建一个新的空队列。</target>
        </trans-unit>
        <trans-unit id="453a7438c9a0abf2f411dfc88ef08eeb919af43f" translate="yes" xml:space="preserve">
          <source>Creates a new factory class.</source>
          <target state="translated">创建一个新的工厂类。</target>
        </trans-unit>
        <trans-unit id="1df3f928ae77e486f8fc4331645875637263feb9" translate="yes" xml:space="preserve">
          <source>Creates a new factory class:</source>
          <target state="translated">创建一个新的工厂类。</target>
        </trans-unit>
        <trans-unit id="f4b3ad0f4845756e7eb366403f2b64a035efb137" translate="yes" xml:space="preserve">
          <source>Creates a new filename linked to the old filename. Returns true for success, false otherwise.</source>
          <target state="translated">创建一个与旧文件名相连的新文件名。成功则返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="83f895542990ab6651e9706888c2de08e523dee6" translate="yes" xml:space="preserve">
          <source>Creates a new filename symbolically linked to the old filename. Returns &lt;code&gt;1&lt;/code&gt; for success, &lt;code&gt;0&lt;/code&gt; otherwise. On systems that don't support symbolic links, raises an exception. To check for that, use eval:</source>
          <target state="translated">创建符号链接到旧文件名的新文件名。成功返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; 。在不支持符号链接的系统上，会引发异常。要进行检查，请使用eval：</target>
        </trans-unit>
        <trans-unit id="c51b3b07b0600d4054dee0c964ac75e53c578450" translate="yes" xml:space="preserve">
          <source>Creates a new message queue associated with &lt;code&gt;KEY&lt;/code&gt; . A new queue is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的新消息队列。如果创建新队列</target>
        </trans-unit>
        <trans-unit id="b254f69cf661a8637fb6b526c326443550777a61" translate="yes" xml:space="preserve">
          <source>Creates a new null SV which is mortal. The reference count of the SV is set to 1. It will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;sv_mortalcopy&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; .</source>
          <target state="translated">创建一个新的null SV，它是凡人。SV的引用计数设置为1。通过&amp;ldquo;显式&amp;rdquo;调用FREETMPS或在诸如语句边界之类的位置进行&amp;ldquo;隐式&amp;rdquo;调用，将&amp;ldquo;很快&amp;rdquo;销毁SV。另请参见 &lt;code&gt;sv_mortalcopy&lt;/code&gt; 和 &lt;code&gt;sv_2mortal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5d61aab7b4b2bae3ae0cd3fa405a1453e48d56" translate="yes" xml:space="preserve">
          <source>Creates a new pad name list. &lt;code&gt;max&lt;/code&gt; is the highest index for which space is allocated.</source>
          <target state="translated">创建一个新的打击垫名称列表。 &lt;code&gt;max&lt;/code&gt; 是为其分配空间的最高索引。</target>
        </trans-unit>
        <trans-unit id="a518faeb54384b75b7b16380f67e97a55f19fb8d" translate="yes" xml:space="preserve">
          <source>Creates a new queue pre-populated with the provided list of items.</source>
          <target state="translated">用提供的项目列表创建一个新队列。</target>
        </trans-unit>
        <trans-unit id="97776043490921bb3f4e1a2aa4a3d94c8dd73946" translate="yes" xml:space="preserve">
          <source>Creates a new shared memory segment of &lt;code&gt;SIZE&lt;/code&gt; bytes size associated with &lt;code&gt;KEY&lt;/code&gt; . A new segment is created if</source>
          <target state="translated">创建一个与 &lt;code&gt;KEY&lt;/code&gt; 关联的 &lt;code&gt;SIZE&lt;/code&gt; 字节大小的新共享内存段。如果创建新的细分</target>
        </trans-unit>
        <trans-unit id="ad8744084b0140499061b16f2e692d8d12d06891" translate="yes" xml:space="preserve">
          <source>Creates a new warnings category with the same name as the package where the call to the pragma is used.</source>
          <target state="translated">创建一个新的警告类别,其名称与使用该pragma调用的包相同。</target>
        </trans-unit>
        <trans-unit id="5a27d8b72cf141aebe58f87546d0d0c019b88e6f" translate="yes" xml:space="preserve">
          <source>Creates a single fieldhash. The argument must be a hash. Returns a reference to the given hash if successful, otherwise nothing.</source>
          <target state="translated">创建一个单一的字段哈希值。参数必须是一个哈希值。如果创建成功,返回给定哈希值的引用,否则不返回任何内容。</target>
        </trans-unit>
        <trans-unit id="6753f8b68917c94c7ceeba08d8a64a68bec41531" translate="yes" xml:space="preserve">
          <source>Creates a tar file from the list of files provided. The first argument can either be the name of the tar file to create or a reference to an open file handle (e.g. a GLOB reference).</source>
          <target state="translated">从提供的文件列表中创建一个 tar 文件。第一个参数可以是要创建的 tar 文件的名称,也可以是打开的文件句柄的引用(例如 GLOB 引用)。</target>
        </trans-unit>
        <trans-unit id="0c586f81366892d7608cff1caa98747fac265568" translate="yes" xml:space="preserve">
          <source>Creates a warnings category with the same name as the current package.</source>
          <target state="translated">创建一个与当前包同名的警告类别。</target>
        </trans-unit>
        <trans-unit id="70531cb628a95443a0bc996522c80ed3a1612eec" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt; . If it receives any parameters, they are passed to the method &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::File&lt;/code&gt; 。如果它接收到任何参数，则将它们传递给 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 方法；如果打开失败，则对象被破坏。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="b8f206ecd7edeba7b8082544ed88fc391c7aee72" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt; opened for read/write on a newly created temporary file. On systems where this is possible, the temporary file is anonymous (i.e. it is unlinked after creation, but held open). If the temporary file cannot be created or opened, the &lt;code&gt;IO::File&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::File&lt;/code&gt; 以便在新创建的临时文件上进行读写。在可能的系统上，该临时文件是匿名的（即，在创建后将其取消链接，但保持打开状态）。如果无法创建或打开临时文件，则 &lt;code&gt;IO::File&lt;/code&gt; 对象将被破坏。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="c5557a6d1ee1551613908cbc27f931101ce8ae4e" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Handle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to the method &lt;code&gt;fdopen&lt;/code&gt; ; if the fdopen fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">像 &lt;code&gt;new&lt;/code&gt; 一样创建 &lt;code&gt;IO::Handle&lt;/code&gt; 。它需要两个参数，并传递给方法 &lt;code&gt;fdopen&lt;/code&gt; ；如果fdopen失败，则销毁该对象。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="fc7d510d5075facd036fd1af77938045b2ecd2fd" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Pipe&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;IO::Pipe::new&lt;/code&gt; optionally takes two arguments, which should be objects blessed into &lt;code&gt;IO::Handle&lt;/code&gt; , or a subclass thereof. These two objects will be used for the system call to &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;. If no arguments are given then method &lt;code&gt;handles&lt;/code&gt; is called on the new &lt;code&gt;IO::Pipe&lt;/code&gt; object.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Pipe&lt;/code&gt; ，它是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;IO::Pipe::new&lt;/code&gt; 可以选择接受两个参数，它们应该是受祝福的对象 &lt;code&gt;IO::Handle&lt;/code&gt; 或其子类。这两个对象将用于系统调用 &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; 。如果未提供任何参数，则在新的 &lt;code&gt;IO::Pipe&lt;/code&gt; 对象上调用方法 &lt;code&gt;handles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="047841e1943658ae57257fef4f133cd272fd4811" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket::INET&lt;/code&gt; object, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket::INET&lt;/code&gt; 对象，该对象是对新创建符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;new&lt;/code&gt; (可选）采用参数，这些参数位于键值对中。</target>
        </trans-unit>
        <trans-unit id="fab2be9faf86fae0e4bd5b1cd1283009b201bf09" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; object, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; 对象，该对象是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;new&lt;/code&gt; (可选）采用参数，这些参数位于键值对中。</target>
        </trans-unit>
        <trans-unit id="a250b42b4dd05b62200f3a07cb3c80166c30a874" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs. &lt;code&gt;new&lt;/code&gt; only looks for one key &lt;code&gt;Domain&lt;/code&gt; which tells new which domain the socket will be in. All other arguments will be passed to the configuration method of the package for that domain, See below.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Socket&lt;/code&gt; ，它是对新创建的符号的引用（请参见 &lt;code&gt;Symbol&lt;/code&gt; 包）。 &lt;code&gt;new&lt;/code&gt; (可选）采用参数，这些参数位于键值对中。 &lt;code&gt;new&lt;/code&gt; 只寻找一个键 &lt;code&gt;Domain&lt;/code&gt; ，它告诉new套接字将在哪个域中。所有其他参数将传递给该域的软件包的配置方法，请参见下文。</target>
        </trans-unit>
        <trans-unit id="f1fb9d0f6d66fb3d087378bdbe9232327d60e9d1" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Zlib&lt;/code&gt; object. If it receives any parameters, they are passed to the method &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">创建一个 &lt;code&gt;IO::Zlib&lt;/code&gt; 对象。如果它接收到任何参数，则将它们传递给 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 方法；如果打开失败，则对象被破坏。否则，它将返回给调用方。</target>
        </trans-unit>
        <trans-unit id="119c0a1aef44d3b6314c9a2aeed4485068748984" translate="yes" xml:space="preserve">
          <source>Creates an RV wrapper for an SV. The reference count for the original SV is &lt;b&gt;not&lt;/b&gt; incremented.</source>
          <target state="translated">为SV创建RV包装器。原始SV的参考计数&lt;b&gt;不&lt;/b&gt;增加。</target>
        </trans-unit>
        <trans-unit id="9a2099bcbcca20ca005321683291f2d84f8f9fa9" translate="yes" xml:space="preserve">
          <source>Creates an RV wrapper for an SV. The reference count for the original SV is incremented.</source>
          <target state="translated">为SV创建一个RV封装器。原SV的引用数会递增。</target>
        </trans-unit>
        <trans-unit id="583c7b0e3437e1faffd9da7f44fbc7a044be2a1d" translate="yes" xml:space="preserve">
          <source>Creates an unnamed pair of sockets in the specified domain, of the specified type. DOMAIN, TYPE, and PROTOCOL are specified the same as for the syscall of the same name. If unimplemented, raises an exception. Returns true if successful.</source>
          <target state="translated">在指定的域中创建一对指定类型的未命名套接字。DOMAIN、TYPE和PROTOCOL的指定与同名syscall相同。如果未实现,则引发异常。如果成功,返回true。</target>
        </trans-unit>
        <trans-unit id="3305aabab05db99f8bfc2b84c2d73fe46ce45fee" translate="yes" xml:space="preserve">
          <source>Creates and initialises a new lexer/parser state object, supplying a context in which to lex and parse from a new source of Perl code. A pointer to the new state object is placed in &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt;. An entry is made on the save stack so that upon unwinding the new state object will be destroyed and the former value of &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; will be restored. Nothing else need be done to clean up the parsing context.</source>
          <target state="translated">创建并初始化新的词法分析器/解析器状态对象，并提供一个上下文，在该上下文中可以从新的Perl代码源进行词法分析。指向新状态对象的指针放在&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser中&lt;/a&gt;。在保存堆栈上创建一个条目，以便在展开时将销毁新的状态对象，并恢复以前的&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt;值。无需任何其他操作即可清理解析上下文。</target>
        </trans-unit>
        <trans-unit id="0f3dfed1a964ab0db38fbf8138ec0f7abbedf2e8" translate="yes" xml:space="preserve">
          <source>Creates any number of field hashes. Arguments must be hash references. Returns the converted hashrefs in list context, their number in scalar context.</source>
          <target state="translated">创建任意数量的字段哈希。参数必须是哈希引用。在列表上下文中返回转换后的哈希值,在标量上下文中返回它们的数量。</target>
        </trans-unit>
        <trans-unit id="c592704db2b29209bd7ddf205e6af585a4f99b67" translate="yes" xml:space="preserve">
          <source>Creates directories, including any parent directories.</source>
          <target state="translated">创建目录,包括任何父目录。</target>
        </trans-unit>
        <trans-unit id="ad1d92000326b7959a82dfb9dc22227bf6a2e0c5" translate="yes" xml:space="preserve">
          <source>Creates header and footer blocks containing the text of the &lt;code&gt;NAME&lt;/code&gt; section. By default, no headers are generated.</source>
          <target state="translated">创建包含 &lt;code&gt;NAME&lt;/code&gt; 部分文本的页眉和页脚块。默认情况下，不生成头。</target>
        </trans-unit>
        <trans-unit id="530e5ca354f68101b7370c2ecfbbf80ed760e37a" translate="yes" xml:space="preserve">
          <source>Creates many idhashes from its hashref arguments. Returns those arguments that could be converted or their number in scalar context.</source>
          <target state="translated">从其hashref参数中创建许多idhash。返回那些可以转换的参数或它们在标量上下文中的数量。</target>
        </trans-unit>
        <trans-unit id="83ad3819309f6108b72bbb402ce3a8c80083d9b4" translate="yes" xml:space="preserve">
          <source>Creates the blibdirs target which creates all the directories we use in blib/.</source>
          <target state="translated">创建blibdirs目标,它可以创建我们在blib/中使用的所有目录。</target>
        </trans-unit>
        <trans-unit id="621a860874ef631fda40d3dbd09752ecf44fe523" translate="yes" xml:space="preserve">
          <source>Creates the directory cache in the given directory.</source>
          <target state="translated">在给定目录中创建目录缓存。</target>
        </trans-unit>
        <trans-unit id="de22bdbde2d4398a6a9a9d6284383fd915d03734" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MASK (as modified by &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). MASK defaults to 0777 if omitted, and FILENAME defaults to &lt;code&gt;$_&lt;/code&gt; if omitted.</source>
          <target state="translated">创建由FILENAME指定的目录，并具有MASK指定的权限（由 &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 修改）。如果成功，则返回true；否则，返回true。否则返回false并设置 &lt;code&gt;$!&lt;/code&gt; （errno）。如果省略，则MASK默认为0777，如果省略，则FILENAME默认为 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb7b117514892c7c30b3fe9f7719849bbac44c0c" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MASK (as modified by &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). MASK defaults to 0777 if omitted, and FILENAME defaults to &lt;code&gt;$_&lt;/code&gt; if omitted.</source>
          <target state="translated">创建由FILENAME指定的目录，并具有MASK指定的权限（由 &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 修改）。如果成功，则返回true；否则，返回true。否则返回false并设置 &lt;code&gt;$!&lt;/code&gt; （errno）。如果省略，则MASK默认为0777，如果省略，则FILENAME默认为 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cac7695a4d3664891070ffa2341b3035d0f19e8" translate="yes" xml:space="preserve">
          <source>Creating Custom RE Engines</source>
          <target state="translated">创建自定义RE引擎</target>
        </trans-unit>
        <trans-unit id="76d93a113b300b303dad480ac2a300eb6051aa71" translate="yes" xml:space="preserve">
          <source>Creating New Variables</source>
          <target state="translated">创建新变量</target>
        </trans-unit>
        <trans-unit id="ca3daf69e2f937f89c7b4c76bccdabe68e3b34bf" translate="yes" xml:space="preserve">
          <source>Creating Threads</source>
          <target state="translated">创建线程</target>
        </trans-unit>
        <trans-unit id="00c8935ea8223dcafffacb17ecb8c41069921e4c" translate="yes" xml:space="preserve">
          <source>Creating Unicode</source>
          <target state="translated">创建Unicode</target>
        </trans-unit>
        <trans-unit id="9a6874111f18f654b4c464c7232a28e3e371a0c4" translate="yes" xml:space="preserve">
          <source>Creating and Calling an Anonymous Subroutine in C</source>
          <target state="translated">在C语言中创建和调用匿名子程序。</target>
        </trans-unit>
        <trans-unit id="57dbae3986bf4e92740a80829b68126452d91265" translate="yes" xml:space="preserve">
          <source>Creating threads inside &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;INIT&lt;/code&gt; blocks should not be relied upon. Depending on the Perl version and the application code, results may range from success, to (apparently harmless) warnings of leaked scalar, or all the way up to crashing of the Perl interpreter.</source>
          <target state="translated">不应该依赖在 &lt;code&gt;BEGIN&lt;/code&gt; ， &lt;code&gt;CHECK&lt;/code&gt; 或 &lt;code&gt;INIT&lt;/code&gt; 块内创建线程。根据Perl版本和应用程序代码，结果可能从成功到标量泄漏的警告（显然无害），甚至一直到Perl解释器崩溃为止。</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Credits</target>
        </trans-unit>
        <trans-unit id="dbfe7362b2b881e1e5fb877d5c3a4872cad26c3a" translate="yes" xml:space="preserve">
          <source>Cross</source>
          <target state="translated">Cross</target>
        </trans-unit>
        <trans-unit id="beaa2e9dbdf1ef3ec15f5de471f07f4851c7dc4d" translate="yes" xml:space="preserve">
          <source>Cross-compilation</source>
          <target state="translated">Cross-compilation</target>
        </trans-unit>
        <trans-unit id="c43833b5347e1426f60796becda4f61af3fd0923" translate="yes" xml:space="preserve">
          <source>Cross-platform helper methods</source>
          <target state="translated">跨平台帮助方法</target>
        </trans-unit>
        <trans-unit id="011ef13d181b36064597a661d4df564056d4ff83" translate="yes" xml:space="preserve">
          <source>Cross-platform methods are being moved into MM_Any. If you can't find something that used to be in here, look in MM_Any.</source>
          <target state="translated">跨平台的方法被移到MM_Any中。如果你找不到以前在这里的东西,请到MM_Any里找。</target>
        </trans-unit>
        <trans-unit id="57799b23e7a710965dddb84cacd4ec89c1bbb1f6" translate="yes" xml:space="preserve">
          <source>Cross.U</source>
          <target state="translated">Cross.U</target>
        </trans-unit>
        <trans-unit id="ef9075f5545abec4dcc7e79d15c590cae4255eac" translate="yes" xml:space="preserve">
          <source>Cross.pm</source>
          <target state="translated">Cross.pm</target>
        </trans-unit>
        <trans-unit id="74c3c4ec5d65e9bc6995543581db9cbe363527f7" translate="yes" xml:space="preserve">
          <source>Cross/README</source>
          <target state="translated">Cross/README</target>
        </trans-unit>
        <trans-unit id="cef80d77f8c81ee5266d145a95eedb7c0a3f235f" translate="yes" xml:space="preserve">
          <source>Crypt</source>
          <target state="translated">Crypt</target>
        </trans-unit>
        <trans-unit id="ad96a37a856f346a15c53478f77eb332fbfa2f2b" translate="yes" xml:space="preserve">
          <source>Cryptographically signed modules</source>
          <target state="translated">加密签名的模块</target>
        </trans-unit>
        <trans-unit id="0141138dc5196a48315b4577e2fbfbeecad52362" translate="yes" xml:space="preserve">
          <source>Csym.U</source>
          <target state="translated">Csym.U</target>
        </trans-unit>
        <trans-unit id="52962f195b14aa22c7fc6a7f9b3d2ee383096fec" translate="yes" xml:space="preserve">
          <source>Cuddle &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;../functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; blocks. For example, print</source>
          <target state="translated">拥抱 &lt;code&gt;elsif&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ，然后 &lt;code&gt;&lt;a href=&quot;../functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 块。例如，打印</target>
        </trans-unit>
        <trans-unit id="d64219b5f8b4b745bbd46c3a32d3c7d8682cff39" translate="yes" xml:space="preserve">
          <source>Curious/ambitious users are welcome to propose additional features they wish to see in &lt;b&gt;Pod::Checker&lt;/b&gt; and &lt;b&gt;podchecker&lt;/b&gt; and verify that the checks are consistent with &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;.</source>
          <target state="translated">欢迎好奇/有抱负的用户提出他们希望在&lt;b&gt;Pod :: Checker&lt;/b&gt;和&lt;b&gt;podchecker中&lt;/b&gt;看到的其他功能，并确认检查是否与&lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="c48ab463ed0ddf5261f0effba0a08bda055eaeb3" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt; 's and &lt;code&gt;while&lt;/code&gt; 's.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;while&lt;/code&gt; 时必须使用花括号。</target>
        </trans-unit>
        <trans-unit id="25cb75f4de27b7e8de98e7a40cc8ed9bcd201ef1" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt; s and &lt;code&gt;while&lt;/code&gt; s.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; s和 &lt;code&gt;while&lt;/code&gt; s，则需要使用花括号。</target>
        </trans-unit>
        <trans-unit id="9ba0ffd4b3f7127883810edb9b6f993db6663d0a" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow</source>
          <target state="translated">当前EMX环境不允许</target>
        </trans-unit>
        <trans-unit id="993eca74c49b7893afb4ab9ac873257ea5c190b4" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow DLLs compiled using Unixish &lt;code&gt;a.out&lt;/code&gt; format to export symbols for data (or at least some types of data). This forces &lt;code&gt;omf&lt;/code&gt; -style compile of</source>
          <target state="translated">当前的EMX环境不允许使用Unixish &lt;code&gt;a.out&lt;/code&gt; 格式编译的DLL 导出数据符号（或至少某些类型的数据）。这迫使 &lt;code&gt;omf&lt;/code&gt; 风格的编译</target>
        </trans-unit>
        <trans-unit id="68015f6bd2846a758438e4878547c94c08e2b442" translate="yes" xml:space="preserve">
          <source>Current experiments</source>
          <target state="translated">目前的实验</target>
        </trans-unit>
        <trans-unit id="2bb8d55eba9da4a81fde3753ae5baa7eec0d36a4" translate="yes" xml:space="preserve">
          <source>Current line number for the last filehandle accessed.</source>
          <target state="translated">最后访问的文件柄的当前行号。</target>
        </trans-unit>
        <trans-unit id="5550dac4e1e7661323b4986a995e2ca80043241b" translate="yes" xml:space="preserve">
          <source>Current maintainer: Jesse Vincent. &amp;lt;jesse@bestpractical.com&amp;gt;</source>
          <target state="translated">目前的维护者：Jesse Vincent。&amp;lt;jesse@bestpractical.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c2eb4542085ed4c82b742e8aee8a24a813f00ba2" translate="yes" xml:space="preserve">
          <source>Current maintainer: Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">现任维护者：Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c582ebd636905458cf86a650443a01ac6fd3e11" translate="yes" xml:space="preserve">
          <source>Current maintainer: Mark Allen &lt;code&gt;&amp;lt;mallencpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">现任维护者：马克&amp;middot;艾伦 &lt;code&gt;&amp;lt;mallencpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57b3ecd8cd4c7443afc115b419ddb924ddd90e1b" translate="yes" xml:space="preserve">
          <source>Current state of the interpreter.</source>
          <target state="translated">译员的现状。</target>
        </trans-unit>
        <trans-unit id="196ba394fbe2cd700609c257874291b9dd014bf4" translate="yes" xml:space="preserve">
          <source>Currently $dir can only go down one level. &quot;foo&quot; is fine. &quot;foo/bar&quot; is not. &quot;../foo&quot; is right out.</source>
          <target state="translated">目前$dir只能下一层。&quot;foo &quot;可以。&quot;foo/bar &quot;不行。&quot;.../foo &quot;就可以了。</target>
        </trans-unit>
        <trans-unit id="7596cea97372e37b0806dba55a5df461274d6e60" translate="yes" xml:space="preserve">
          <source>Currently (October 2001), that's these three:</source>
          <target state="translated">目前(2001年10月),就是这三个。</target>
        </trans-unit>
        <trans-unit id="d0628d165c5886578d03829e62f234c1c39d03ea" translate="yes" xml:space="preserve">
          <source>Currently (as of perl version 5.004), use of the hash and array access functions requires the user to be aware of whether they are operating on &quot;normal&quot; hashes and arrays, or on their tied variants. The API may be changed to provide more transparent access to both tied and normal data types in future versions. [/MAYCHANGE]</source>
          <target state="translated">目前(从perl 5.004版本开始),使用哈希和数组访问函数需要用户知道他们是在 &quot;普通 &quot;哈希和数组上操作,还是在它们的绑定变体上操作。在未来的版本中,API可能会被修改,以提供对绑定和正常数据类型更透明的访问。[/MAYCHANGE]</target>
        </trans-unit>
        <trans-unit id="a2eb1a3bc586c516867d29f387fd017886e0b406" translate="yes" xml:space="preserve">
          <source>Currently I don't know of any portable pure perl way to do this. Suggestions welcome.</source>
          <target state="translated">目前我不知道有什么可移植的纯perl方式可以做到这一点。欢迎提出建议。</target>
        </trans-unit>
        <trans-unit id="d97947adc89187fe49c51cd883b8269beca4ae8c" translate="yes" xml:space="preserve">
          <source>Currently NAME is restricted to simple identifiers only. In other words, it must match &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; or its Unicode extension (see &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;), though it isn't extended by the locale (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;).</source>
          <target state="translated">目前，NAME仅限于简单标识符。换句话说，它必须与 &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; 或其Unicode扩展名（请参见&lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;）&lt;a href=&quot;perllocale&quot;&gt;匹配&lt;/a&gt;，尽管它不会由语言环境进行扩展（请参见perllocale）。</target>
        </trans-unit>
        <trans-unit id="834c134ad81c4eaed0abb95e07ecfa3c6f7ccea9" translate="yes" xml:space="preserve">
          <source>Currently all versions of IBM's &quot;xlc&quot;, &quot;xlc_r&quot;, &quot;cc&quot;, &quot;cc_r&quot; or &quot;vac&quot; ANSI/C compiler will work for building Perl if that compiler works on your system.</source>
          <target state="translated">目前,IBM的 &quot;xlc&quot;、&quot;xlc_r&quot;、&quot;cc&quot;、&quot;cc_r &quot;或 &quot;vac &quot;ANSI/C编译器的所有版本都可以用于构建Perl,如果该编译器在你的系统上工作的话。</target>
        </trans-unit>
        <trans-unit id="074b7a0d7926b13bdd6a6c1a7f2bd6fd96a950ef" translate="yes" xml:space="preserve">
          <source>Currently doesn't do anything at all. This flag has been a no-op for many versions of perl, at least as far back as perl5.003_07. It's allowed here for backwards compatibility.</source>
          <target state="translated">目前根本没有任何作用。这个标志在许多版本的perl中都是不允许的,至少在perl5.003_07中是这样。为了向后兼容,这里允许使用这个标志。</target>
        </trans-unit>
        <trans-unit id="c6aff6e1789a080263345630866061a6188dd023" translate="yes" xml:space="preserve">
          <source>Currently experimental, strongly object-oriented, built for speed and intended as a toolkit for building micro web apps, custom frameworks or for tieing together existing Plack-compatible web applications with one central dispatcher.</source>
          <target state="translated">目前是实验性的,强烈的面向对象的,为速度而构建的,旨在作为一个工具箱,用于构建微型网络应用,自定义框架,或通过一个中央调度器将现有的Plack兼容的网络应用捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="09e5d195957c36cd6b2d43df6986ebc708f4c278" translate="yes" xml:space="preserve">
          <source>Currently installation instructions are at &lt;a href=&quot;http://perlce.sourceforge.net/&quot;&gt;http://perlce.sourceforge.net/&lt;/a&gt;.</source>
          <target state="translated">当前的安装说明位于&lt;a href=&quot;http://perlce.sourceforge.net/&quot;&gt;http://perlce.sourceforge.net/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e0d0b77d9ca938b7c7fd7206793cd1d22b949a5" translate="yes" xml:space="preserve">
          <source>Currently internal buffer lengths are limited to 32-bit only.</source>
          <target state="translated">目前内部缓冲区长度只限于32位。</target>
        </trans-unit>
        <trans-unit id="2589b2340931b7a94577d8448f79f08344610895" translate="yes" xml:space="preserve">
          <source>Currently it is too complicated to parse your command for IO redirections. For capturing STDOUT or STDERR there is a work around however, since you can just inspect your buffers for the contents.</source>
          <target state="translated">目前,要解析你的命令以获取IO重定向太复杂了。不过对于捕获STDOUT或STDERR,有一个解决办法,因为你可以检查你的缓冲区的内容。</target>
        </trans-unit>
        <trans-unit id="d5ce11c20e5c9e26183b7df1f1d378e8843b7728" translate="yes" xml:space="preserve">
          <source>Currently loaded filename.</source>
          <target state="translated">当前加载的文件名。</target>
        </trans-unit>
        <trans-unit id="5e94b5b9580ddc9978e1586fd290c6a0085eaca0" translate="yes" xml:space="preserve">
          <source>Currently maintained by Jonathan &quot;Duke&quot; Leto &amp;lt;jonathan@leto.net&amp;gt; &lt;a href=&quot;http://leto.net&quot;&gt;http://leto.net&lt;/a&gt;</source>
          <target state="translated">当前由Jonathan&amp;ldquo; Duke&amp;rdquo; Leto维护&amp;lt;jonathan@leto.net&amp;gt; &lt;a href=&quot;http://leto.net&quot;&gt;http://leto.net&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f84d89a92a777c50292f613277c843d0fca069e" translate="yes" xml:space="preserve">
          <source>Currently maintained by Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">目前由Ken Williams维护 &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d499a420a8ad407cfcc7909e99725791aecb83a" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt;</source>
          <target state="translated">目前由Michael G Schwern维护 &lt;code&gt;schwern@pobox.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64518f708c077132fb6c81bb482b7c41112aa09f" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; .</source>
          <target state="translated">目前由Michael G Schwern维护 &lt;code&gt;schwern@pobox.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac278ddc5ecea025d9c9b038420a6a20095c0d36" translate="yes" xml:space="preserve">
          <source>Currently maintained by Sullivan Beck (sbeck@cpan.org).</source>
          <target state="translated">目前由Sullivan Beck维护(sbeck@cpan.org)。</target>
        </trans-unit>
        <trans-unit id="832ca62474658800234e1409a0265d04df2848bc" translate="yes" xml:space="preserve">
          <source>Currently maintained by the Perl 5 Porters, &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">当前由Perl 5 Porters维护，&amp;lt;perl5-porters@perl.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="70916c857e67092afc3818c0725979a17bb2bc7e" translate="yes" xml:space="preserve">
          <source>Currently maintained by the Perl Toolchain Gang.</source>
          <target state="translated">目前由Perl Toolchain Gang维护。</target>
        </trans-unit>
        <trans-unit id="22b5ae24b9fd013adf87b86fd8614fe4c5e78cae" translate="yes" xml:space="preserve">
          <source>Currently maintained by the perl 5 porters &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">当前由perl 5搬运工&amp;lt;perl5-porters@perl.org&amp;gt;维护。</target>
        </trans-unit>
        <trans-unit id="805cd2c1f1ca0def4cfd6434add453f59f15d8ad" translate="yes" xml:space="preserve">
          <source>Currently only &lt;code&gt;INDENT&lt;/code&gt; , &lt;code&gt;NAME&lt;/code&gt; , &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; , &lt;code&gt;NAMES&lt;/code&gt; , &lt;code&gt;C_FILE&lt;/code&gt; and &lt;code&gt;XS_FILE&lt;/code&gt; are recognised.</source>
          <target state="translated">当前仅识别 &lt;code&gt;INDENT&lt;/code&gt; ， &lt;code&gt;NAME&lt;/code&gt; ， &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; ， &lt;code&gt;NAMES&lt;/code&gt; ， &lt;code&gt;C_FILE&lt;/code&gt; 和 &lt;code&gt;XS_FILE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d9f8fb10567a5f5b286e925fe020ed9ddbe898d" translate="yes" xml:space="preserve">
          <source>Currently only emitted when a printf-type format required more arguments than were supplied, but might be used in the future for other cases where we can statically determine that arguments to functions are missing, e.g. for the &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; function.</source>
          <target state="translated">当前仅在printf-type格式需要的参数数量超过提供的数量时发出，但将来可能在其他情况下使用，我们可以静态确定函数的参数丢失，例如&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="c06671bbb84a6f3c0a5e03cc037107c5b937b959" translate="yes" xml:space="preserve">
          <source>Currently the base class does nothing and returns an empty string.</source>
          <target state="translated">目前基类什么都不做,返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="1e65fb55b89a16a6ff17064471534fc5b44c3a09" translate="yes" xml:space="preserve">
          <source>Currently the cache manager only keeps track of the build directory ($CPAN::Config-&amp;gt;{build_dir}). It is a simple FIFO mechanism that deletes complete directories below &lt;code&gt;build_dir&lt;/code&gt; as soon as the size of all directories there gets bigger than $CPAN::Config-&amp;gt;{build_cache} (in MB). The contents of this cache may be used for later re-installations that you intend to do manually, but will never be trusted by CPAN itself. This is due to the fact that the user might use these directories for building modules on different architectures.</source>
          <target state="translated">当前，缓存管理器仅跟踪构建目录（$ CPAN :: Config-&amp;gt; {build_dir}）。这是一种简单的FIFO机制，只要其中所有目录的大小大于$ CPAN :: Config-&amp;gt; {build_cache}（以MB为单位），就会删除 &lt;code&gt;build_dir&lt;/code&gt; 下的完整目录。此缓存的内容可用于以后打算手动进行的重新安装，但CPAN本身不会信任它。这是由于用户可能会使用这些目录在不同体系结构上构建模块。</target>
        </trans-unit>
        <trans-unit id="85cb1004cde4eafeabb526e7c97d06160b9bc9ea" translate="yes" xml:space="preserve">
          <source>Currently the example could be something like this:</source>
          <target state="translated">目前,这个例子可以是这样的。</target>
        </trans-unit>
        <trans-unit id="9ed938fc9ec074335a5a14ff39713fa96e2a44d4" translate="yes" xml:space="preserve">
          <source>Currently the first argument to define_alias() can be specified in the following ways:</source>
          <target state="translated">目前define_alias()的第一个参数可以用以下方式指定。</target>
        </trans-unit>
        <trans-unit id="a9bf96de0559faf3b7e1d096d1d8a5e2e4453bbc" translate="yes" xml:space="preserve">
          <source>Currently the following two build types are tested on NetWare:</source>
          <target state="translated">目前在NetWare上测试了以下两种构建类型。</target>
        </trans-unit>
        <trans-unit id="0dfd46b204fb5d45e8f29132257a9dee7ed55c16" translate="yes" xml:space="preserve">
          <source>Currently the mantissa is reduced as much as possible, favouring higher exponents over lower ones (e.g. returning 1e7 instead of 10e6 or 10000000e0). This might change in the future, so do not depend on it.</source>
          <target state="translated">目前,mantissa被尽可能地减少,有利于高指数而不是低指数(例如,返回1e7而不是10e6或10000000e0)。这种情况将来可能会改变,所以不要依赖它。</target>
        </trans-unit>
        <trans-unit id="cc52fa0221b520eb9cba69f5a8200cdef9bbc7cb" translate="yes" xml:space="preserve">
          <source>Currently the methods aren't as efficient as they could be, for reasons of clarity. This is probably a bad idea.</source>
          <target state="translated">目前这些方法的效率并不高,原因是不清楚。这可能是个坏主意。</target>
        </trans-unit>
        <trans-unit id="f8b020b4d907e7d336baf4a7bd1d21f0a642b241" translate="yes" xml:space="preserve">
          <source>Currently the only significant values are 'dmake' and 'nmake' for Windows users, instructing MakeMaker to generate a Makefile in the flavour of DMake (&quot;Dennis Vadura's Make&quot;) or Microsoft NMake respectively.</source>
          <target state="translated">目前对于Windows用户来说,唯一重要的值是'dmake'和'nmake',分别指示MakeMaker以DMake(&quot;Dennis Vadura的Make&quot;)或微软NMake的味道生成一个Makefile。</target>
        </trans-unit>
        <trans-unit id="f00b6778578143fea75a49ef468f9d31966e2d9a" translate="yes" xml:space="preserve">
          <source>Currently the value of &lt;code&gt;DISPLAY&lt;/code&gt; is ignored. It is recommended that it be set to be the hostname of the display, the server and screen in Unix notation. In the future the value of DISPLAY may be honored by Perl instead of using the default display.</source>
          <target state="translated">当前， &lt;code&gt;DISPLAY&lt;/code&gt; 的值被忽略。建议将其设置为Unix表示法的显示器，服务器和屏幕的主机名。将来，Perl可能会取代DISPLAY的值，而不是使用默认显示。</target>
        </trans-unit>
        <trans-unit id="8768013178cf8fe711f0d308fff8053c79e45b7a" translate="yes" xml:space="preserve">
          <source>Currently there is no way to specify more than one library on the command line. This means the following does not work:</source>
          <target state="translated">目前没有办法在命令行中指定多个库。这意味着下面的操作无法进行。</target>
        </trans-unit>
        <trans-unit id="a39b8349c59ac646b8af631b5ad977955e371ebf" translate="yes" xml:space="preserve">
          <source>Currently there is only one type of field hash, and only the boolean value of the mode makes a difference, but that may change.</source>
          <target state="translated">目前只有一种类型的字段哈希,只有模式的布尔值有区别,但这可能会改变。</target>
        </trans-unit>
        <trans-unit id="ae3b9b162a3784fe295b868497fbb629b1ddd426" translate="yes" xml:space="preserve">
          <source>Currently this OS-specific stuff consists of looking in the environment variables &quot;LANG&quot; and &quot;LANGUAGE&quot;; and on MSWin machines (where those variables are typically unused), this also tries using the module Win32::Locale to get a language-tag for whatever language/locale is currently selected in the &quot;Regional Settings&quot; (or &quot;International&quot;?) Control Panel. I welcome further suggestions for making this do the Right Thing under other operating systems that support localization.</source>
          <target state="translated">目前,这个操作系统特有的东西包括在环境变量 &quot;LANG &quot;和 &quot;LANGUAGE &quot;中查找;在MSWin机器上(这些变量通常未被使用),这也会尝试使用Win32::Locale模块来获取当前在 &quot;区域设置&quot;(或 &quot;国际&quot;?)控制面板中选择的语言/语言标签。我欢迎大家提出进一步的建议,让它在其他支持本地化的操作系统下做正确的事情。</target>
        </trans-unit>
        <trans-unit id="1b78daa9cb8c8ba0c96aabebf728d92ea741a97c" translate="yes" xml:space="preserve">
          <source>Currently this always uses mergesort. See sortsv_flags for a more flexible routine.</source>
          <target state="translated">目前总是使用mergesort。参见sortsv_flags以获得更灵活的例程。</target>
        </trans-unit>
        <trans-unit id="99139b870fbe31ffb01aeaae72d3575f4248f3e1" translate="yes" xml:space="preserve">
          <source>Currently this class works by just filtering out the non-Pod stuff from a given input file.</source>
          <target state="translated">目前这个类的工作原理只是从给定的输入文件中过滤出非Pod的东西。</target>
        </trans-unit>
        <trans-unit id="8c05bed42565fb273b3a58a2b778911f3dba48d8" translate="yes" xml:space="preserve">
          <source>Currently this has only been tested on Unix and doesn't contain any of the Windows-specific code from the &lt;code&gt;Module::Build&lt;/code&gt; project. I'll do that next.</source>
          <target state="translated">目前，该代码仅在Unix上进行了测试，并且不包含 &lt;code&gt;Module::Build&lt;/code&gt; 项目中的任何Windows特定于Windows的代码。接下来，我会做。</target>
        </trans-unit>
        <trans-unit id="6c09a661f6643655325273d50b2f4ce06d5609d8" translate="yes" xml:space="preserve">
          <source>Currently this isn't used for anything, but it's provided (with default value of &lt;code&gt;(ref($language) &amp;amp;&amp;amp; $language-&amp;gt;{'encoding'})) or &quot;iso-8859-1&quot;&lt;/code&gt; ) as a sort of suggestion that it may be useful/necessary to associate encodings with your language handles (whether on a per-class or even per-handle basis.)</source>
          <target state="translated">目前，它什么都没用，但提供了它（默认值为 &lt;code&gt;(ref($language) &amp;amp;&amp;amp; $language-&amp;gt;{'encoding'})) or &quot;iso-8859-1&quot;&lt;/code&gt; ），它是一种建议将编码与您的语言句柄相关联（无论是基于每个类，甚至每个句柄）可能都是有用/必要的。</target>
        </trans-unit>
        <trans-unit id="2fe9e02e28a1376fbaaa825eb0420d6aa9001bf2" translate="yes" xml:space="preserve">
          <source>Currently this just takes the last bit of &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref($language)&lt;/a&gt;&lt;/code&gt;, turns underscores to dashes, and returns it. So if $language is an object of class Hee::HOO::Haw::en_us, $language-&amp;gt;language_tag() returns &quot;en-us&quot;. (Yes, the usual representation for that language tag is &quot;en-US&quot;, but case is</source>
          <target state="translated">当前，这仅使用 &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref($language)&lt;/a&gt;&lt;/code&gt; 的最后一位，将下划线变为破折号，然后将其返回。因此，如果$ language是Hee :: HOO :: Haw :: en_us类的对象，则$ language-&amp;gt; language_tag（）返回&amp;ldquo; en-us&amp;rdquo;。（是的，该语言标签的通常表示形式是&amp;ldquo; en-US&amp;rdquo;，但大小写是</target>
        </trans-unit>
        <trans-unit id="79f7485198cd482639db4f4626a9508a51ae8d0f" translate="yes" xml:space="preserve">
          <source>Currently this module understands the following types. h2xs may only know a subset. The sizes of the numeric types are chosen by the &lt;code&gt;Configure&lt;/code&gt; script at compile time.</source>
          <target state="translated">当前，该模块可理解以下类型。h2xs可能只知道一个子集。数字类型的大小在编译时由&amp;ldquo; &lt;code&gt;Configure&lt;/code&gt; 脚本选择。</target>
        </trans-unit>
        <trans-unit id="d2d377b4476a6e188762144f586ad2d608b464a9" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;given&lt;/code&gt; blocks can't always be used as proper expressions. This may be addressed in a future version of Perl.</source>
          <target state="translated">当前， &lt;code&gt;given&lt;/code&gt; 块不能总是用作适当的表达式。这可能会在Perl的将来版本中解决。</target>
        </trans-unit>
        <trans-unit id="5d26c1593e61e13dda079b542bc00ebe32e1e263" translate="yes" xml:space="preserve">
          <source>Currently, Math::BigInt::new() defaults to 0, while Math::BigInt::new('') results in 'NaN'. This might change in the future, so use always the following explicit forms to get a zero or NaN:</source>
          <target state="translated">目前,Math::BigInt::new()默认为0,而Math::BigInt::new('')的结果是'NaN'。这在将来可能会发生变化,所以总是使用下面的显式来获取0或NaN。</target>
        </trans-unit>
        <trans-unit id="5a3571347f1fb8b0138ff4086aa2cd9a390c3586" translate="yes" xml:space="preserve">
          <source>Currently, Perl deals with UTF-8 strings and non-UTF-8 strings slightly differently. A flag in the SV, &lt;code&gt;SVf_UTF8&lt;/code&gt; , indicates that the string is internally encoded as UTF-8. Without it, the byte value is the codepoint number and vice versa. This flag is only meaningful if the SV is &lt;code&gt;SvPOK&lt;/code&gt; or immediately after stringification via &lt;code&gt;SvPV&lt;/code&gt; or a similar macro. You can check and manipulate this flag with the following macros:</source>
          <target state="translated">当前，Perl处理UTF-8字符串和非UTF-8字符串的方式略有不同。SV中的标志 &lt;code&gt;SVf_UTF8&lt;/code&gt; 指示字符串在内部编码为UTF-8。没有它，字节值就是代码点编号，反之亦然。仅当SV为 &lt;code&gt;SvPOK&lt;/code&gt; 或通过 &lt;code&gt;SvPV&lt;/code&gt; 或类似宏进行字符串化之后，此标志才有意义。您可以使用以下宏检查和操作此标志：</target>
        </trans-unit>
        <trans-unit id="cf064da20402a373389bd1e8534e66d897ddfb89" translate="yes" xml:space="preserve">
          <source>Currently, an unescaped &quot;~&quot; before a character other than a bracket or a comma is taken to mean just a &quot;~&quot; and that character. I.e., &quot;~X&quot; means the same as &quot;~~X&quot; -- i.e., one literal tilde, and then one literal &quot;X&quot;. However, by using &quot;~X&quot;, you are assuming that no future version of Maketext will use &quot;~X&quot; as a magic escape sequence. In practice this is not a great problem, since first off you can just write &quot;~~X&quot; and not worry about it; second off, I doubt I'll add lots of new magic characters to bracket notation; and third off, you aren't likely to want literal &quot;~&quot; characters in your messages anyway, since it's not a character with wide use in natural language text.</source>
          <target state="translated">目前,在括号或逗号以外的字符前未加括号的&quot;~&quot;被认为仅指&quot;~&quot;和该字符。也就是说,&quot;~X &quot;和&quot;~~X &quot;的意思是一样的--也就是说,先是一个字母 &quot;tilde&quot;,然后是一个字母 &quot;X&quot;。然而,使用&quot;~X&quot;,你是假设未来的Maketext版本不会使用&quot;~X &quot;作为一个神奇的转义序列。在实践中,这并不是一个很大的问题,因为首先,你可以直接写&quot;~~X &quot;而不用担心;其次,我怀疑我会在括号符号中添加很多新的魔法字符;第三,无论如何,你不可能在你的消息中想要字面的&quot;~&quot;字符,因为它不是一个在自然语言文本中广泛使用的字符。</target>
        </trans-unit>
        <trans-unit id="32c5c8dadaaaf31c38a9691666537875247237cb" translate="yes" xml:space="preserve">
          <source>Currently, bracket groups do not nest. That is, you &lt;b&gt;cannot&lt;/b&gt; say:</source>
          <target state="translated">当前，括号组不嵌套。也就是说，您&lt;b&gt;不能&lt;/b&gt;说：</target>
        </trans-unit>
        <trans-unit id="c35cdca66e034e7f9a47d31a205334d612013eef" translate="yes" xml:space="preserve">
          <source>Currently, for BigInts &lt;code&gt;$e&lt;/code&gt; is always 0, except +inf and -inf, where it is &lt;code&gt;+inf&lt;/code&gt; ; and for NaN, where it is &lt;code&gt;NaN&lt;/code&gt; ; and for &lt;code&gt;$x == 0&lt;/code&gt; , where it is &lt;code&gt;1&lt;/code&gt; (to be compatible with Math::BigFloat's internal representation of a zero as &lt;code&gt;0E1&lt;/code&gt; ).</source>
          <target state="translated">当前，对于BigInts， &lt;code&gt;$e&lt;/code&gt; 始终为0，但+ inf和-inf除外，其中 &lt;code&gt;+inf&lt;/code&gt; ；对于NaN来说，这里是 &lt;code&gt;NaN&lt;/code&gt; ；对于 &lt;code&gt;$x == 0&lt;/code&gt; ，其中为 &lt;code&gt;1&lt;/code&gt; （与Math :: BigFloat的内部零表示为 &lt;code&gt;0E1&lt;/code&gt; 兼容）。</target>
        </trans-unit>
        <trans-unit id="beb5d0250d9ace27aad40903e5fff21089b05d9e" translate="yes" xml:space="preserve">
          <source>Currently, on all platforms except MSWin32, all</source>
          <target state="translated">目前,在除MSWin32以外的所有平台上,所有的</target>
        </trans-unit>
        <trans-unit id="93a247e0eef683aaac7910c01f3f928a9e46d78c" translate="yes" xml:space="preserve">
          <source>Currently, only the &lt;code&gt;access&lt;/code&gt; sub-pragma is implemented. It enables (or disables) the use of access() when available, that is, on most UNIX systems and other POSIX environments. See details below.</source>
          <target state="translated">当前，仅实现 &lt;code&gt;access&lt;/code&gt; 子实用程序。当可用时，即在大多数UNIX系统和其他POSIX环境上，它启用（或禁用）access（）的使用。请参阅下面的详细信息。</target>
        </trans-unit>
        <trans-unit id="12cb6e902a01a88f56d9045c1e314fafc987b2ba" translate="yes" xml:space="preserve">
          <source>Currently, the only significant value for &lt;code&gt;flags&lt;/code&gt; is SVf_UTF8.</source>
          <target state="translated">当前， &lt;code&gt;flags&lt;/code&gt; 的唯一有效值是SVf_UTF8。</target>
        </trans-unit>
        <trans-unit id="c22d9a7fee9cae91b42a0d8e2cfac398a39a9b2b" translate="yes" xml:space="preserve">
          <source>Currently, the only useful value for &lt;code&gt;flags&lt;/code&gt; is SVf_UTF8.</source>
          <target state="translated">当前， &lt;code&gt;flags&lt;/code&gt; 的唯一有用的值是SVf_UTF8。</target>
        </trans-unit>
        <trans-unit id="2b251ef9a6ee9de77a03ddc9608c4a3c0db1c0a0" translate="yes" xml:space="preserve">
          <source>Currently, the outermost formatting instruction wins, so for example underlined text inside a region of bold text is displayed as simply bold. There may be some better approach possible.</source>
          <target state="translated">目前,最外侧的格式化指令获胜,因此,例如粗体文字区域内的下划线文字被显示为简单的粗体。可能有一些更好的办法可能。</target>
        </trans-unit>
        <trans-unit id="3ca8600ba039585f9f853e2c43bcdff7d5ab9e0b" translate="yes" xml:space="preserve">
          <source>Currently, the subroutine can be identified statically if the RV that the &lt;code&gt;rv2cv&lt;/code&gt; is to operate on is provided by a suitable &lt;code&gt;gv&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; op. A &lt;code&gt;gv&lt;/code&gt; op is suitable if the GV's CV slot is populated. A &lt;code&gt;const&lt;/code&gt; op is suitable if the constant value must be an RV pointing to a CV. Details of this process may change in future versions of Perl. If the &lt;code&gt;rv2cv&lt;/code&gt; op has the &lt;code&gt;OPpENTERSUB_AMPER&lt;/code&gt; flag set then no attempt is made to identify the subroutine statically: this flag is used to suppress compile-time magic on a subroutine call, forcing it to use default runtime behaviour.</source>
          <target state="translated">当前，如果 &lt;code&gt;rv2cv&lt;/code&gt; 要操作的RV 由适当的 &lt;code&gt;gv&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; op 提供，则可以静态标识该子例程。甲 &lt;code&gt;gv&lt;/code&gt; 如果填充了GV的CV槽op是合适的。甲 &lt;code&gt;const&lt;/code&gt; op是合适的，如果恒定值必须是指向一个CV RV。在以后的Perl版本中，此过程的详细信息可能会更改。如果 &lt;code&gt;rv2cv&lt;/code&gt; op 设置了 &lt;code&gt;OPpENTERSUB_AMPER&lt;/code&gt; 标志，则不会尝试静态地标识子例程：此标志用于抑制子例程调用上的编译时魔术，从而迫使其使用默认的运行时行为。</target>
        </trans-unit>
        <trans-unit id="1e2d2e7b351cedc7ed2289316efdff5558012869" translate="yes" xml:space="preserve">
          <source>Currently, we only allow opened filehandles or filenames, but not strings. The internals would need some reworking to facilitate stringified archives.</source>
          <target state="translated">目前,我们只允许打开文件柄或文件名,但不允许使用字符串。内部结构需要重新设计,以方便字符串化存档。</target>
        </trans-unit>
        <trans-unit id="810afe6a34891b144a1f9e0ce40e9fc1217c35e6" translate="yes" xml:space="preserve">
          <source>Currently, we only support this if the filehandle is an IO::Zlib object. Environments, like apache, will present you with an opened filehandle to an uploaded file, which might be a compressed archive.</source>
          <target state="translated">目前,我们只支持在filehandle是一个IO::Zlib对象的情况下这样做。像apache这样的环境,会向你展示一个已打开的上传文件的文件柄,它可能是一个压缩文件。</target>
        </trans-unit>
        <trans-unit id="261fc98a0206bd66bd4ad6212e54d2bfab7d8db4" translate="yes" xml:space="preserve">
          <source>Currently, whether or not the test suite passed with no 'problems' (such as TODO passed).</source>
          <target state="translated">目前,测试套件是否在没有 &quot;问题 &quot;的情况下通过(如TODO通过)。</target>
        </trans-unit>
        <trans-unit id="c505ffc91edd3f9012e8a66a72815302c62cb3ca" translate="yes" xml:space="preserve">
          <source>Currently, you must be running at least perl v5.6.0 in order to run with MEDIUM or HIGH security. This is simply because the safety tests use functions from L</source>
          <target state="translated">目前,你必须至少运行perl v5.6.0才能以中度或高度安全的方式运行。这只是因为安全测试使用了来自 L</target>
        </trans-unit>
        <trans-unit id="19f401a7406fb2ade217c4c2d091602740509bb8" translate="yes" xml:space="preserve">
          <source>Curtis &quot;Ovid&quot; Poe &amp;lt;ovid@cpan.org&amp;gt;</source>
          <target state="translated">柯蒂斯（Curtis&amp;ldquo; Ovid&amp;rdquo; Poe）&amp;lt;ovid@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7afc80af35ce6ee31ebae219a53944bd2652c7da" translate="yes" xml:space="preserve">
          <source>Custom Layers</source>
          <target state="translated">自定义图层</target>
        </trans-unit>
        <trans-unit id="dbdaeda1e073966b4e479d9fff0e7793b0904106" translate="yes" xml:space="preserve">
          <source>Custom Operators</source>
          <target state="translated">自定义运营商</target>
        </trans-unit>
        <trans-unit id="d0eae33b0c090e3966d3c68512ada19e1528011c" translate="yes" xml:space="preserve">
          <source>Custom formatters can be loaded configured using the &lt;code&gt;formatter_class&lt;/code&gt; parameter to &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;formatter_class&lt;/code&gt; 参数将配置的自定义格式化程序加载为&lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53cff91188bebb2a553103fb8e7b63cd42bccaa2" translate="yes" xml:space="preserve">
          <source>Custom operator support is an experimental feature that allows you to define your own ops. This is primarily to allow the building of interpreters for other languages in the Perl core, but it also allows optimizations through the creation of &quot;macro-ops&quot; (ops which perform the functions of multiple ops which are usually executed together, such as &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; .)</source>
          <target state="translated">自定义操作员支持是一项实验性功能，可让您定义自己的操作。这主要是为了在Perl内核中构建其他语言的解释器，但同时也允许通过创建&amp;ldquo;宏操作&amp;rdquo;（执行多个操作的功能的优化操作，这些操作通常一起执行，例如 &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="b8a0f9b4738b676273a2a999093c300569cd6824" translate="yes" xml:space="preserve">
          <source>Customization of the dist targets can be done by specifying a hash reference to the dist attribute of the WriteMakefile call. The following parameters are recognized:</source>
          <target state="translated">自定义dist目标可以通过指定一个对WriteMakefile调用的dist属性的哈希引用来完成。以下是被认可的参数。</target>
        </trans-unit>
        <trans-unit id="0b9b392a3be38eacab1a203c181ca6e780bde6d0" translate="yes" xml:space="preserve">
          <source>Customized option parser for Pod::Perldoc</source>
          <target state="translated">为Pod::Perldoc定制的选项解析器。</target>
        </trans-unit>
        <trans-unit id="d0f3d41e3c41ddc6cbc9c2daec27882d80caea71" translate="yes" xml:space="preserve">
          <source>Cwd</source>
          <target state="translated">Cwd</target>
        </trans-unit>
        <trans-unit id="fd9825bfa4c850e67c2151a6f5292a3e86f0c912" translate="yes" xml:space="preserve">
          <source>Cwd - get pathname of current working directory</source>
          <target state="translated">Cwd-获取当前工作目录的路径名。</target>
        </trans-unit>
        <trans-unit id="160555969f1a8fde234517fab23669eee0ccbd1e" translate="yes" xml:space="preserve">
          <source>Cwd.xs</source>
          <target state="translated">Cwd.xs</target>
        </trans-unit>
        <trans-unit id="73fc7f50fdec5b6f0f95bef5f8e06196f92c8ab5" translate="yes" xml:space="preserve">
          <source>Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)</source>
          <target state="translated">Cygwin=GNU+Cygnus+Windows (没有它不要离开UNIX)</target>
        </trans-unit>
        <trans-unit id="b410b02920a07e0c1b2f5517c0638087253c2758" translate="yes" xml:space="preserve">
          <source>Cygwin Configuration</source>
          <target state="translated">Cygwin配置</target>
        </trans-unit>
        <trans-unit id="f2fd19eff84130ae501b7f66fc64ed3790d3e356" translate="yes" xml:space="preserve">
          <source>Cygwin does an outstanding job of providing UNIX-like semantics on top of Win32 systems. However, in addition to the items noted above, there are some differences that you should know about. This is a very brief guide to portability, more information can be found in the Cygwin documentation.</source>
          <target state="translated">Cygwin在Win32系统之上提供类似UNIX的语义方面做得非常出色。然而,除了上面提到的项目之外,还有一些差异是你应该知道的。这是一个非常简短的可移植性指南,更多信息可以在Cygwin文档中找到。</target>
        </trans-unit>
        <trans-unit id="39bcb7dc63150f69c7968352d73ab68ec6457826" translate="yes" xml:space="preserve">
          <source>Cygwin does not initialize all original Win32 environment variables. See the bottom of this page &lt;a href=&quot;http://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;http://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; for &quot;Restricted Win32 environment&quot;.</source>
          <target state="translated">Cygwin不会初始化所有原始Win32环境变量。有关&amp;ldquo;受限制的Win32环境&amp;rdquo;，请参见本页底部&lt;a href=&quot;http://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;http://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81c2c7aa1db1394160b27a38c6928b843acda7e8" translate="yes" xml:space="preserve">
          <source>Cygwin is covered by the GNU General Public License (but that shouldn't matter for Perl use). Cygwin contains (in addition to the shell) a comprehensive set of standard Unix toolkit utilities.</source>
          <target state="translated">Cygwin 受 GNU 通用公共许可证的保护(但这对于 Perl 的使用来说并不重要)。除了shell之外,Cygwin还包含了一套全面的标准Unix工具箱实用程序。</target>
        </trans-unit>
        <trans-unit id="8258ca2d192f15ab780ba7a84929a7edb3f631ab" translate="yes" xml:space="preserve">
          <source>Cygwin pathnames are separated by forward (</source>
          <target state="translated">Cygwin路径名用正向(</target>
        </trans-unit>
        <trans-unit id="9651770d389e8830b4b1e3539f723c1e80eca364" translate="yes" xml:space="preserve">
          <source>Cygwin processes have their own pid, which is different from the underlying windows pid. Most posix compliant Proc functions expect the cygwin pid, but several Win32::Process functions expect the winpid. E.g. &lt;code&gt;$$&lt;/code&gt; is the cygwin pid of</source>
          <target state="translated">Cygwin进程具有自己的pid，该pid与基础的Windows pid不同。大多数posix兼容的Proc函数都希望使用cygwin pid，但是几个Win32 :: Process函数都需要使用winpid。例如 &lt;code&gt;$$&lt;/code&gt; 是的cygwin pid</target>
        </trans-unit>
        <trans-unit id="05c0c2f636a8edb75c77d41c4c7bfc716236cfce" translate="yes" xml:space="preserve">
          <source>Cygwin uses 64-bit integers for internal size and position calculations, this will be correctly detected and defined by Configure.</source>
          <target state="translated">Cygwin使用64位整数进行内部大小和位置计算,这将由Configure正确检测和定义。</target>
        </trans-unit>
        <trans-unit id="d140941c1521d2349d4bd6c64c31475654a7b43c" translate="yes" xml:space="preserve">
          <source>Cylindrical coordinates,</source>
          <target state="translated">圆柱坐标。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="96f0e31b49aae2a6d915ae3b613e4575c8b6a5d9" translate="yes" xml:space="preserve">
          <source>D. INSTALL</source>
          <target state="translated">D.安装</target>
        </trans-unit>
        <trans-unit id="7f2430aff77c078755160a61817f59ac5a442628" translate="yes" xml:space="preserve">
          <source>D. Wegscheid &amp;lt;wegscd@whirlpool.com&amp;gt; R. Schertler &amp;lt;roderick@argon.org&amp;gt; J. Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; G. Aas &amp;lt;gisle@aas.no&amp;gt;</source>
          <target state="translated">D.Wegscheid &amp;lt;wegscd@whirlpool.com&amp;gt; R.Schertler &amp;lt;roderick@argon.org&amp;gt; J.Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; G.Aas &amp;lt;gisle@aas.no&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a856f8342e4097ec46ec2ae4d0ef67ea993ed17d" translate="yes" xml:space="preserve">
          <source>D&lt;b&gt;1&lt;/b&gt;h</source>
          <target state="translated">D&lt;b&gt;1&lt;/b&gt;h</target>
        </trans-unit>
        <trans-unit id="cbcb89e55acdd88dfeeed3c5a12d75530af183e0" translate="yes" xml:space="preserve">
          <source>DATA STRUCTURES</source>
          <target state="translated">数据结构</target>
        </trans-unit>
        <trans-unit id="8c76abdec41a7652375d00f4bf05256b82c68494" translate="yes" xml:space="preserve">
          <source>DATE</source>
          <target state="translated">DATE</target>
        </trans-unit>
        <trans-unit id="c12b32a0cc17b3f8909c76d7b1bfe6c328500bd4" translate="yes" xml:space="preserve">
          <source>DB</source>
          <target state="translated">DB</target>
        </trans-unit>
        <trans-unit id="d3a3e481c8bad23af4b07c6a711d820269aa05e1" translate="yes" xml:space="preserve">
          <source>DB - programmatic interface to the Perl debugging API</source>
          <target state="translated">DB-通往Perl调试API的程序性接口</target>
        </trans-unit>
        <trans-unit id="f76a9cbb39dfd2541a72b35e7e8f4653016195c0" translate="yes" xml:space="preserve">
          <source>DBM Comparisons</source>
          <target state="translated">DBM比较</target>
        </trans-unit>
        <trans-unit id="ca5f67a0ba0d8efff1637f1da816838257659ffd" translate="yes" xml:space="preserve">
          <source>DBM FILTERS</source>
          <target state="translated">DBM过滤器</target>
        </trans-unit>
        <trans-unit id="89d82ce9435d1c0ea4a6bc6721d2f5690a7f92ea" translate="yes" xml:space="preserve">
          <source>DBM Filters are useful for a class of problems where you</source>
          <target state="translated">DBM过滤器对于以下一类问题是有用的</target>
        </trans-unit>
        <trans-unit id="7578525c0394078f99ffd4a40edc277d75ad744f" translate="yes" xml:space="preserve">
          <source>DBM_Filter</source>
          <target state="translated">DBM_Filter</target>
        </trans-unit>
        <trans-unit id="b38c7d32f616c7556af3364ba66546ed0749f03b" translate="yes" xml:space="preserve">
          <source>DBM_Filter -- Filter DBM keys/values</source>
          <target state="translated">DBM_Filter --筛选DBM键/值。</target>
        </trans-unit>
        <trans-unit id="b6b9b1dec59c3a08e8723935d64f316cd6ef56cc" translate="yes" xml:space="preserve">
          <source>DBM_Filter::compress</source>
          <target state="translated">DBM_Filter::compress</target>
        </trans-unit>
        <trans-unit id="017e1847be264d3b84ccfa3271d40094dd0bf1eb" translate="yes" xml:space="preserve">
          <source>DBM_Filter::compress - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::compress-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="e29bd395446d47ab211ec2e1146eefd14e1b20a3" translate="yes" xml:space="preserve">
          <source>DBM_Filter::encode</source>
          <target state="translated">DBM_Filter::encode</target>
        </trans-unit>
        <trans-unit id="f5e031e4b2f19789fcf7c2f3ba685f80663d177c" translate="yes" xml:space="preserve">
          <source>DBM_Filter::encode - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::encode-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="fcb2034b0ecd24b1bee4254c842bbb672bdbc7d6" translate="yes" xml:space="preserve">
          <source>DBM_Filter::int32</source>
          <target state="translated">DBM_Filter::int32</target>
        </trans-unit>
        <trans-unit id="5fe5fd365abd08f6af165c5d6a16911995a685a9" translate="yes" xml:space="preserve">
          <source>DBM_Filter::int32 - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::int32-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="4a3e906903359c539b73264aaf12312ed4cfcbb3" translate="yes" xml:space="preserve">
          <source>DBM_Filter::null</source>
          <target state="translated">DBM_Filter::null</target>
        </trans-unit>
        <trans-unit id="f2b61c34157f644580714175a9ac63fc9b039644" translate="yes" xml:space="preserve">
          <source>DBM_Filter::null - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::null-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="9bc092e44e5524b9cfa3d26c271d34f1880924e0" translate="yes" xml:space="preserve">
          <source>DBM_Filter::utf8</source>
          <target state="translated">DBM_Filter::utf8</target>
        </trans-unit>
        <trans-unit id="1bfbf4c2c625b28768968c9e40b648dd9c14d44d" translate="yes" xml:space="preserve">
          <source>DBM_Filter::utf8 - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter::utf8-DBM_Filter的过滤器。</target>
        </trans-unit>
        <trans-unit id="b02f6970eb3456617162054c6756321f766cb936" translate="yes" xml:space="preserve">
          <source>DB_BTREE</source>
          <target state="translated">DB_BTREE</target>
        </trans-unit>
        <trans-unit id="b33927ab202d8fc0904f1f9b9d856b0b54625b77" translate="yes" xml:space="preserve">
          <source>DB_File</source>
          <target state="translated">DB_File</target>
        </trans-unit>
        <trans-unit id="2c972e69463b8f58734f3a05c1368f9d2f81dba9" translate="yes" xml:space="preserve">
          <source>DB_File - Perl5 access to Berkeley DB version 1.x</source>
          <target state="translated">DB_File-Perl5 访问 Berkeley DB 1.x 版。</target>
        </trans-unit>
        <trans-unit id="39dffad4b26fe77aef729449dbd757ed61bcfd3a" translate="yes" xml:space="preserve">
          <source>DB_File tests failing on Tru64</source>
          <target state="translated">DB_File测试在Tru64上失败</target>
        </trans-unit>
        <trans-unit id="70c0dec73cd04aa605d8521bd81cda83ad9852d0" translate="yes" xml:space="preserve">
          <source>DB_HASH</source>
          <target state="translated">DB_HASH</target>
        </trans-unit>
        <trans-unit id="a90a8db476a6644718df5c14fa00dae64a074e16" translate="yes" xml:space="preserve">
          <source>DB_RECNO</source>
          <target state="translated">DB_RECNO</target>
        </trans-unit>
        <trans-unit id="1214b29ce37cdd875514a6b9e684feaa105d5701" translate="yes" xml:space="preserve">
          <source>DB_RECNO allows both fixed-length and variable-length flat text files to be manipulated using the same key/value pair interface as in DB_HASH and DB_BTREE. In this case the key will consist of a record (line) number.</source>
          <target state="translated">DB_RECNO允许使用与DB_HASH和DB_BTREE中相同的键/值对接口来操作固定长度和可变长度的平面文本文件。在这种情况下,键将由一个记录(行)号组成。</target>
        </trans-unit>
        <trans-unit id="54300d66c5de040df830a07fcc62363319edc6b3" translate="yes" xml:space="preserve">
          <source>DB_RECNO provides an interface to flat text files. Both variable and fixed length records are supported.</source>
          <target state="translated">DB_RECNO提供了一个平面文本文件的接口。同时支持可变和固定长度的记录。</target>
        </trans-unit>
        <trans-unit id="c84dd33284289aa30abfb4901524e660dc3f8fe1" translate="yes" xml:space="preserve">
          <source>DCL$PATH</source>
          <target state="translated">DCL$PATH</target>
        </trans-unit>
        <trans-unit id="0a9147164ebeee67def0458db65d380af3d847bd" translate="yes" xml:space="preserve">
          <source>DDD over gdb</source>
          <target state="translated">DDD over gdb</target>
        </trans-unit>
        <trans-unit id="bc02c571c975735551b89853409b435a7d2a911b" translate="yes" xml:space="preserve">
          <source>DEBUGGING</source>
          <target state="translated">DEBUGGING</target>
        </trans-unit>
        <trans-unit id="72e25783db89a734a8c44381188ac1bdfc0af08b" translate="yes" xml:space="preserve">
          <source>DEFINE_VERSION: -D line to set the module version when compiling</source>
          <target state="translated">DEFINE_VERSION:-D行,用于在编译时设置模块版本。</target>
        </trans-unit>
        <trans-unit id="fb047f1c6b1e76a02beec100d3b58403874139af" translate="yes" xml:space="preserve">
          <source>DEFINITIONS</source>
          <target state="translated">DEFINITIONS</target>
        </trans-unit>
        <trans-unit id="3cc8567954f6ca3e5e003d24429635955d1d02f9" translate="yes" xml:space="preserve">
          <source>DEFUNCT</source>
          <target state="translated">DEFUNCT</target>
        </trans-unit>
        <trans-unit id="83e39656dc7ac7175a510ee6558f6f575c96339a" translate="yes" xml:space="preserve">
          <source>DEPRECATED</source>
          <target state="translated">DEPRECATED</target>
        </trans-unit>
        <trans-unit id="e0dc4b2a8e17072634cdeee1910633cab2fa2010" translate="yes" xml:space="preserve">
          <source>DEPRECATED! It is planned to remove this function from a future release of Perl. Do not use it for new code; remove it from existing code.</source>
          <target state="translated">已取消! 计划在未来的Perl版本中删除这个函数。不要在新代码中使用它,请从现有代码中删除。</target>
        </trans-unit>
        <trans-unit id="a157b2a5a436f4b25182b22c822a40b087fde127" translate="yes" xml:space="preserve">
          <source>DEPRECATED!!!</source>
          <target state="translated">DEPRECATED!!!</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="e7e49a1a7cfc18f44f90aaf5e4c176c2211c9f16" translate="yes" xml:space="preserve">
          <source>DESIGNING AND WRITING YOUR MODULE</source>
          <target state="translated">设计和编写您的模块</target>
        </trans-unit>
        <trans-unit id="02f56a7bf01c1a870e819952336349625f50e2b7" translate="yes" xml:space="preserve">
          <source>DESTROY</source>
          <target state="translated">DESTROY</target>
        </trans-unit>
        <trans-unit id="1adeca5b77bafcb12821be20b10405718f410b83" translate="yes" xml:space="preserve">
          <source>DESTRUCT</source>
          <target state="translated">DESTRUCT</target>
        </trans-unit>
        <trans-unit id="9120423983b0359c503c676dadecd6bf8702131f" translate="yes" xml:space="preserve">
          <source>DETAILS</source>
          <target state="translated">DETAILS</target>
        </trans-unit>
        <trans-unit id="f459e7c8f3245e0293226ce8877ab5f73ac59297" translate="yes" xml:space="preserve">
          <source>DG/&lt;code&gt;UX&lt;/code&gt;</source>
          <target state="translated">DG/&lt;code&gt;UX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7563ce76d34297c6913b33a614a4437ccf7e6bb6" translate="yes" xml:space="preserve">
          <source>DIAGNOSTICS</source>
          <target state="translated">DIAGNOSTICS</target>
        </trans-unit>
        <trans-unit id="d61aaf2b8c8a0d55b1cee7b943d2035b67af0d4d" translate="yes" xml:space="preserve">
          <source>DISPLAYING</source>
          <target state="translated">DISPLAYING</target>
        </trans-unit>
        <trans-unit id="7f70d69b899f50f51b56a174e2446671d41836a8" translate="yes" xml:space="preserve">
          <source>DJGPP is a port of GNU C/C++ compiler and development tools to 32-bit, protected-mode environment on Intel 32-bit CPUs running MS-DOS and compatible operating systems, by DJ Delorie &amp;lt;dj@delorie.com&amp;gt; and friends.</source>
          <target state="translated">DJGPP是DJ Delorie &amp;lt;dj@delorie.com&amp;gt;和朋友们向GNU C / C ++编译器和开发工具移植到运行MS-DOS和兼容操作系统的Intel 32位CPU上的32位保护模式环境的端口。</target>
        </trans-unit>
        <trans-unit id="c7fcac2a520878c5b29e5384d7123ef0d8af803b" translate="yes" xml:space="preserve">
          <source>DLL forwarder generation</source>
          <target state="translated">DLL转发器的生成</target>
        </trans-unit>
        <trans-unit id="961816e97938085c744d70524c7f8b51961bbf33" translate="yes" xml:space="preserve">
          <source>DLL is loaded when</source>
          <target state="translated">DLL加载时</target>
        </trans-unit>
        <trans-unit id="b8fba0e1a3b69795fd7aeeb5df67e417334bbc08" translate="yes" xml:space="preserve">
          <source>DLL name mangling: 5.6.2 and beyond</source>
          <target state="translated">DLL名称混乱。5.6.2及以后</target>
        </trans-unit>
        <trans-unit id="5103efb394e8f4c78963cefb65d442857e85fbb9" translate="yes" xml:space="preserve">
          <source>DLL name mangling: pre 5.6.2</source>
          <target state="translated">DLL名称混乱:5.6.2之前。</target>
        </trans-unit>
        <trans-unit id="4199b473b62a8d487f588ef5f17c8e1e79fdfedc" translate="yes" xml:space="preserve">
          <source>DLLs in the system to be available</source>
          <target state="translated">系统中的DLL可用</target>
        </trans-unit>
        <trans-unit id="978758ab9cc6f96cf7ec21b1d65444522ce20560" translate="yes" xml:space="preserve">
          <source>DLLs was done due to misunderstanding of the OS/2 dynaloading model. OS/2 (effectively) maintains two different tables of loaded DLL:</source>
          <target state="translated">DLLs是由于对OS/2 dynaloading模型的误解。OS/2(有效地)维护了两个不同的加载DLL表。</target>
        </trans-unit>
        <trans-unit id="e72095491ba9a045230bfe18eae0af9d9f28e15a" translate="yes" xml:space="preserve">
          <source>DO NOT MIX MULTIPLE ENCODINGS</source>
          <target state="translated">请勿混合使用多种香料。</target>
        </trans-unit>
        <trans-unit id="321641aef17a94c7440c8b75a28914642814b302" translate="yes" xml:space="preserve">
          <source>DO NOT PUT TOO MANY SUSPECTS! Don't you try something like this!</source>
          <target state="translated">不要把太多的嫌疑人! 你不要尝试这样的东西!</target>
        </trans-unit>
        <trans-unit id="96cc00d75846a718bd722cef8a33a50a6d0f5535" translate="yes" xml:space="preserve">
          <source>DOCUMENTATION</source>
          <target state="translated">DOCUMENTATION</target>
        </trans-unit>
        <trans-unit id="6ec3afab8faec77e185bbb803869543c5a657284" translate="yes" xml:space="preserve">
          <source>DOCUMENTING YOUR MODULE</source>
          <target state="translated">记录您的模块</target>
        </trans-unit>
        <trans-unit id="2613d94608f3128686c4d00e8f6984910962bf29" translate="yes" xml:space="preserve">
          <source>DOS also treats several filenames as special, such as AUX, PRN, NUL, CON, COM1, LPT1, LPT2, etc. Unfortunately, sometimes these filenames won't even work if you include an explicit directory prefix. It is best to avoid such filenames, if you want your code to be portable to DOS and its derivatives. It's hard to know what these all are, unfortunately.</source>
          <target state="translated">DOS还将几个文件名视为特殊文件名,如AUX、PRN、NUL、CON、COM1、LPT1、LPT2等。不幸的是,有时这些文件名甚至不能工作,如果你包含一个明确的目录前缀。如果你想让你的代码可以移植到DOS及其派生版本中,最好避免使用这些文件名。不幸的是,很难知道这些都是什么。</target>
        </trans-unit>
        <trans-unit id="5340493a66303fc8d8a5c954e9bf8a43cd32f247" translate="yes" xml:space="preserve">
          <source>DOS and Derivatives</source>
          <target state="translated">DOS和衍生品</target>
        </trans-unit>
        <trans-unit id="9aa2dc24c805c53edba7676333ae68552dfd57a4" translate="yes" xml:space="preserve">
          <source>DOS like globbing and then some</source>
          <target state="translated">像DOS的globbing和一些</target>
        </trans-unit>
        <trans-unit id="7d8fd5f2c8edcce479637c27bb0e3ab518146c38" translate="yes" xml:space="preserve">
          <source>DOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils::MM_Unix的DOS子类。</target>
        </trans-unit>
        <trans-unit id="473d3acc2af8ba63261a26a1b7f5515a6891c343" translate="yes" xml:space="preserve">
          <source>DOS, OS/2, VMS, VOS, and Windows can work similarly to Unix with &lt;code&gt;/&lt;/code&gt; as path separator, or in their own idiosyncratic ways (such as having several root directories and various &quot;unrooted&quot; device files such NIL: and LPT:).</source>
          <target state="translated">DOS，OS / 2，VMS，VOS和Windows可以使用 &lt;code&gt;/&lt;/code&gt; 作为路径分隔符，或者以它们自己特有的方式（例如，具有多个根目录和各种&amp;ldquo;无根&amp;rdquo;设备文件，例如NIL：和LPT :）与Unix类似地工作。。</target>
        </trans-unit>
        <trans-unit id="654efd9c9792936a130d6037516309b5bdddee38" translate="yes" xml:space="preserve">
          <source>DPMI is required for RSX.</source>
          <target state="translated">RSX需要DPMI。</target>
        </trans-unit>
        <trans-unit id="2d2a24951ce705488575783be4472a26b333751c" translate="yes" xml:space="preserve">
          <source>DTrace is a framework for comprehensive system- and application-level tracing. Perl is a DTrace</source>
          <target state="translated">DTrace 是一个全面的系统级和应用级追踪框架。Perl 是一个 DTrace</target>
        </trans-unit>
        <trans-unit id="d5bf3f40de5d663351b116d65dea7bcc046dcb12" translate="yes" xml:space="preserve">
          <source>DWIM is an acronym for &amp;ldquo;Do What I Mean&amp;rdquo;, the principle that something should just do what you want it to do without an undue amount of fuss. A bit of code that does &amp;ldquo;dwimming&amp;rdquo; is a &amp;ldquo;dwimmer&amp;rdquo;. Dwimming can require a great deal of behind-the-scenes magic, which (if it doesn&amp;rsquo;t stay properly behind the scenes) is called a &lt;b&gt;dweomer&lt;/b&gt; instead.</source>
          <target state="translated">DWIM是&amp;ldquo;按我的意思做&amp;rdquo;的首字母缩略词，即某事应该按自己想要的去做而不会引起过多麻烦的原则。进行&amp;ldquo;微调&amp;rdquo;的一些代码就是&amp;ldquo;微调&amp;rdquo;。游泳可能需要大量的幕后魔术，而如果没有适当的幕后魔术，则称为&lt;b&gt;dweomer&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="85028126eeeaacb6fe3db27b148fabc61b38f172" translate="yes" xml:space="preserve">
          <source>Damian Conway</source>
          <target state="translated">Damian Conway</target>
        </trans-unit>
        <trans-unit id="84aeaa4ed1041b265c8434cc722f5bbd7d82bf67" translate="yes" xml:space="preserve">
          <source>Damian Conway (damian@conway.org)</source>
          <target state="translated">Damian Conway (damian@conway.org)</target>
        </trans-unit>
        <trans-unit id="56a7a2a736c65870e75794d64c28905d7b7353ac" translate="yes" xml:space="preserve">
          <source>Damian Conway (damian@conway.org). The maintainer of this module is now Rafael Garcia-Suarez (rgarciasuarez@gmail.com).</source>
          <target state="translated">Damian Conway (damian@conway.org)。该模块的维护者现在是Rafael Garcia-Suarez (rgarciasuarez@gmail.com)。</target>
        </trans-unit>
        <trans-unit id="d1f605e1f77b8db2ab180142323e96f99783331d" translate="yes" xml:space="preserve">
          <source>Damian Conway's &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; handles all of the thinking for you.</source>
          <target state="translated">达米安&amp;middot;康威（Damian Conway）的&lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformat&lt;/a&gt;为您处理所有想法。</target>
        </trans-unit>
        <trans-unit id="2db3f6d7414ff15624d9a6080d6aa063705cba8a" translate="yes" xml:space="preserve">
          <source>Dan Sugalski &amp;lt;dan@sidhe.org&amp;lt;gt&amp;gt;</source>
          <target state="translated">丹&amp;middot;苏加尔斯基&amp;lt;dan@sidhe.org &amp;lt;&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f5fbfc9cec6cd72e230b1bbe73cbb08d9ccf37da" translate="yes" xml:space="preserve">
          <source>Daniel S. Lewart &amp;lt;</source>
          <target state="translated">丹尼尔&amp;middot;勒沃特&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7fd1dfde23d6a5c5d15d0aee8437a3fd73417fd6" translate="yes" xml:space="preserve">
          <source>Daniel S. Sterling has written a script that uses &lt;code&gt;IO::Uncompress::UnZip&lt;/code&gt; to read a zip file and unzip its contents to disk.</source>
          <target state="translated">Daniel S. Sterling已编写了一个脚本，该脚本使用 &lt;code&gt;IO::Uncompress::UnZip&lt;/code&gt; 读取zip文件并将其内容解压缩到磁盘。</target>
        </trans-unit>
        <trans-unit id="8ed6fbf94844a47ecf83411b63cf050c8d28ac5b" translate="yes" xml:space="preserve">
          <source>Data Structures</source>
          <target state="translated">数据结构</target>
        </trans-unit>
        <trans-unit id="5cf272d33425f40ddbde3e44d761e3fc7c061ec7" translate="yes" xml:space="preserve">
          <source>Data Types and Data Type Utilities</source>
          <target state="translated">数据类型和数据类型实用程序</target>
        </trans-unit>
        <trans-unit id="6a99f8e09e7fe8334e0578359f60485516d4d7ce" translate="yes" xml:space="preserve">
          <source>Data after the &lt;code&gt;__DATA__&lt;/code&gt; token in a module is read using the FOOBAR::DATA filehandle. &lt;code&gt;__END__&lt;/code&gt; can still be used to denote the end of the &lt;code&gt;__DATA__&lt;/code&gt; section if followed by the token DATA - this is supported by the &lt;b&gt;SelfLoader&lt;/b&gt;. The &lt;code&gt;FOOBAR::DATA&lt;/code&gt; filehandle is left open if an &lt;code&gt;__END__&lt;/code&gt; followed by a DATA is found, with the filehandle positioned at the start of the line after the &lt;code&gt;__END__&lt;/code&gt; token. If no &lt;code&gt;__END__&lt;/code&gt; token is present, or an &lt;code&gt;__END__&lt;/code&gt; token with no DATA token on the same line, then the filehandle is closed.</source>
          <target state="translated">使用FOOBAR :: DATA文件句柄读取模块中 &lt;code&gt;__DATA__&lt;/code&gt; 令牌之后的数据。 &lt;code&gt;__END__&lt;/code&gt; 仍可用于表示 &lt;code&gt;__DATA__&lt;/code&gt; 节的末尾（如果其后跟令牌DATA）&lt;b&gt;-SelfLoader&lt;/b&gt;支持。该 &lt;code&gt;FOOBAR::DATA&lt;/code&gt; 如果文件句柄是开放 &lt;code&gt;__END__&lt;/code&gt; 接着通过数据发现，与位于后线的起点文件句柄 &lt;code&gt;__END__&lt;/code&gt; 令牌。如果不存在 &lt;code&gt;__END__&lt;/code&gt; 令牌，或者同一行中没有DATA令牌的 &lt;code&gt;__END__&lt;/code&gt; 令牌，则关闭文件句柄。</target>
        </trans-unit>
        <trans-unit id="b652ad0a603cd7b47d334614ee31233474c9ab8d" translate="yes" xml:space="preserve">
          <source>Data flows through filters in the same order they appear in the source file. The uudecode filter appeared before the uncompress filter, so the source file will be uudecoded before it's uncompressed.</source>
          <target state="translated">数据流经过滤器的顺序与它们在源文件中出现的顺序相同。uudecode过滤器出现在解压过滤器之前,所以源文件将在解压之前进行uudecode。</target>
        </trans-unit>
        <trans-unit id="0f54a276a0206593cde1683f28ef51b63c547eda" translate="yes" xml:space="preserve">
          <source>Data mode (the default if you redirect or pipe output). This prints out your configuration data, without mailing anything. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data.</source>
          <target state="translated">数据模式（如果您重定向或管道输出，则为默认模式）。这将打印出您的配置数据，而不发送任何邮件。您可以将其与&lt;b&gt;-v&lt;/b&gt;一起使用以获取更完整的数据。</target>
        </trans-unit>
        <trans-unit id="e6afd37625bc0367f512a035f9204374b0b5ded2" translate="yes" xml:space="preserve">
          <source>Data paragraphs are typically used for inlining non-Pod data that is to be used (typically passed through) when rendering the document to a specific format:</source>
          <target state="translated">数据段通常用于内联非Pod数据,这些数据要在将文档渲染成特定格式时使用(通常是通过)。</target>
        </trans-unit>
        <trans-unit id="94e20e5cd2604e57e9a0d23f02d2cd5d929f4af9" translate="yes" xml:space="preserve">
          <source>Data written to this layer should be UTF-8 encoded; data provided by this layer should be considered UTF-8 encoded. Can be set on any layer by &quot;:utf8&quot; dummy layer. Also set on &quot;:encoding&quot; layer.</source>
          <target state="translated">写入本层的数据应采用UTF-8编码;本层提供的数据应视为UTF-8编码。可以通过&quot;:utf8 &quot;虚层在任何一层上设置。也可以在&quot;:encoding &quot;层上设置。</target>
        </trans-unit>
        <trans-unit id="97f1bb92da1e5e7c46dc020b7ec63efc045c0a68" translate="yes" xml:space="preserve">
          <source>Data: Arrays</source>
          <target state="translated">日期:数组</target>
        </trans-unit>
        <trans-unit id="de5afcac5fbd23280f46d7161af449533e2cceda" translate="yes" xml:space="preserve">
          <source>Data: Dates</source>
          <target state="translated">日期:日期</target>
        </trans-unit>
        <trans-unit id="c411e3f24a5ba1334882780f16f3e9dbf1c659d9" translate="yes" xml:space="preserve">
          <source>Data: Hashes (Associative Arrays)</source>
          <target state="translated">数据。哈希值(关联数组)</target>
        </trans-unit>
        <trans-unit id="fa7113830ed5a59d6505a9385c9ea0bd8127836a" translate="yes" xml:space="preserve">
          <source>Data: Misc</source>
          <target state="translated">日期:Misc</target>
        </trans-unit>
        <trans-unit id="3e48ca0ae51772567ede6f2a3afe45cb0267ef60" translate="yes" xml:space="preserve">
          <source>Data: Numbers</source>
          <target state="translated">日期:数字</target>
        </trans-unit>
        <trans-unit id="58c8a967dc7612bd6e8f1483414d85eb62228a36" translate="yes" xml:space="preserve">
          <source>Data: Strings</source>
          <target state="translated">日期:字符串</target>
        </trans-unit>
        <trans-unit id="7d6e21c84e9451a0cec29192edeff8e21b85f25a" translate="yes" xml:space="preserve">
          <source>Data::Dumper</source>
          <target state="translated">Data::Dumper</target>
        </trans-unit>
        <trans-unit id="8c7c47d5705e647c7c4327d92117a5533391f0d0" translate="yes" xml:space="preserve">
          <source>Data::Dumper - stringified perl data structures, suitable for both printing and &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Data :: Dumper-字符串化的perl数据结构，适用于打印和 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff7ea8e9cb1cf0ef3310359653bd8d014b4e17b6" translate="yes" xml:space="preserve">
          <source>Data::Dumper doesn't restore the UTF8 flag; is it broken?</source>
          <target state="translated">Data::Dumper不能恢复UTF8标志,是不是坏了?</target>
        </trans-unit>
        <trans-unit id="ab7ab098392e93c21506df2dbe7e96ac2b061b9d" translate="yes" xml:space="preserve">
          <source>Data::Dumper will catalog all references encountered while dumping the values. Cross-references (in the form of names of substructures in perl syntax) will be inserted at all possible points, preserving any structural interdependencies in the original set of values. Structure traversal is depth-first, and proceeds in order from the first supplied value to the last.</source>
          <target state="translated">Data::Dumper 将对转储值时遇到的所有引用进行编目。交叉引用(在perl语法中以子结构名称的形式)将被插入到所有可能的点上,保留原始值集中的任何结构上的相互依赖关系。结构遍历是深度优先的,从第一个提供的值到最后一个值依次进行。</target>
        </trans-unit>
        <trans-unit id="5db04e397940af8e76d0eac5bf08574521dd22ae" translate="yes" xml:space="preserve">
          <source>Database Interfaces</source>
          <target state="translated">数据库接口</target>
        </trans-unit>
        <trans-unit id="a109465d898ba0dfa0c491af35be82208576d8f0" translate="yes" xml:space="preserve">
          <source>Database Ties</source>
          <target state="translated">数据库关系</target>
        </trans-unit>
        <trans-unit id="8562930b64d8c57b6dc3907022c61a4e6a5ac83f" translate="yes" xml:space="preserve">
          <source>Datatypes</source>
          <target state="translated">Datatypes</target>
        </trans-unit>
        <trans-unit id="08bd72896a609a3391d219b4992ef11ec132d222" translate="yes" xml:space="preserve">
          <source>Date Calculations</source>
          <target state="translated">日期计算</target>
        </trans-unit>
        <trans-unit id="b79e7a3976aeb6614f1bdda5b3b2eeb809fac6f4" translate="yes" xml:space="preserve">
          <source>Date Comparisons</source>
          <target state="translated">日期比较</target>
        </trans-unit>
        <trans-unit id="6cd8d0e8ff629adf381174818e2158887210c59a" translate="yes" xml:space="preserve">
          <source>Date Parsing</source>
          <target state="translated">日期解析</target>
        </trans-unit>
        <trans-unit id="27c49fc3479babc6dc4d9bc2dbc4c3a52288b570" translate="yes" xml:space="preserve">
          <source>Date comparisons are also possible, using the full suite of &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;=&quot;, &quot;&amp;lt;=&amp;gt;&quot;, &quot;==&quot; and &quot;!=&quot;.</source>
          <target state="translated">使用完整的&amp;ldquo; &amp;lt;&amp;rdquo;，&amp;ldquo;&amp;gt;&amp;rdquo;，&amp;ldquo; &amp;lt;=&amp;rdquo;，&amp;ldquo;&amp;gt; =&amp;rdquo;，&amp;ldquo; &amp;lt;=&amp;gt;&amp;rdquo;，&amp;ldquo; ==&amp;rdquo;和&amp;ldquo;！=&amp;rdquo;进行日期比较也是可能的。</target>
        </trans-unit>
        <trans-unit id="0474fa39a613bd7eeec7bea46ccb23c0ca12e724" translate="yes" xml:space="preserve">
          <source>David Fiander and Peter Prymmer with thanks to Dennis Longnecker and William Raffloer for valuable reports, LPAR and PTF feedback. Thanks to Mike MacIsaac and Egon Terwedow for SG24-5944-00. Thanks to Ignasi Roca for pointing out the floating point problems. Thanks to John Goodyear for dynamic loading help.</source>
          <target state="translated">David Fiander和Peter Prymmer感谢Dennis Longnecker和William Raffloer提供的宝贵报告、LPAR和PTF反馈。感谢Mike MacIsaac和Egon Terwedow的SG24-5944-00。感谢Ignasi Roca指出的浮点问题。感谢John Goodyear提供的动态加载帮助。</target>
        </trans-unit>
        <trans-unit id="2723c98cfbb72ae38f478d52e32129d9547f0fba" translate="yes" xml:space="preserve">
          <source>David Golden</source>
          <target state="translated">大卫-戈登</target>
        </trans-unit>
        <trans-unit id="cd5088267e514d749afe6cca6fd8c81585cd5cf6" translate="yes" xml:space="preserve">
          <source>David Golden &amp;lt;dagolden@cpan.org&amp;gt;</source>
          <target state="translated">大卫&amp;middot;金（David Golden）&amp;lt;dagolden@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d950594e5e25062fc0607cb94f5625028946e5a7" translate="yes" xml:space="preserve">
          <source>David Golden, &amp;lt;dagolden@cpan.org&amp;gt;</source>
          <target state="translated">大卫&amp;middot;金（David Golden），&amp;lt;dagolden@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8d95407bff3307b97ca4e8eedc2eced84a4438ae" translate="yes" xml:space="preserve">
          <source>David Muir Sharnoff &amp;lt;cpan@dave.sharnoff.org&amp;gt; with help from Tim Pierce and many many others.</source>
          <target state="translated">大卫&amp;middot;缪尔&amp;middot;沙诺夫（David Muir Sharnoff）在蒂姆&amp;middot;皮尔斯（Tim Pierce）等许多人的帮助下，发往&amp;lt;cpan@dave.sharnoff.org&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="e8377f90fb8277814679b9bc2dc6627a930eb98a" translate="yes" xml:space="preserve">
          <source>David P.C. Wollmann, Richard Soderberg, Sean M. Burke, Tom Christiansen, Jim Cromie, and Jeffrey Goff for useful advice.</source>
          <target state="translated">David P.C.Wollmann、Richard Soderberg、Sean M.Burke、Tom Christiansen、Jim Cromie和Jeffrey Goff提供了有用的建议。</target>
        </trans-unit>
        <trans-unit id="c7b3466055eaf20f2cad818f5843a292b4ca2d80" translate="yes" xml:space="preserve">
          <source>David Steinbrunner</source>
          <target state="translated">David Steinbrunner</target>
        </trans-unit>
        <trans-unit id="229d59d93e7e712ab429ce8580c0bd67e38e34f6" translate="yes" xml:space="preserve">
          <source>David Sundstrom &amp;lt;</source>
          <target state="translated">戴维&amp;middot;桑德斯特伦&amp;lt;</target>
        </trans-unit>
        <trans-unit id="f0503142592629f2769705a0fac2de70daef3980" translate="yes" xml:space="preserve">
          <source>Dealing with Endian-ness</source>
          <target state="translated">处理Endian-ness问题</target>
        </trans-unit>
        <trans-unit id="c3570d3bcf3e90fdaa0791aacca802822c577102" translate="yes" xml:space="preserve">
          <source>Deallocate the memory used by all arenas. Note that all the individual SV heads and bodies within the arenas must already have been freed.</source>
          <target state="translated">重新分配所有场馆使用的内存。请注意,所有场馆内的单个SV头和主体必须已经被释放。</target>
        </trans-unit>
        <trans-unit id="b05ceded49f425c214f9e2db173be8c8e1a3a8d6" translate="yes" xml:space="preserve">
          <source>Deallocates a backtrace received from get_c_bracktrace.</source>
          <target state="translated">重新分配从get_c_bracktrace接收到的反向跟踪。</target>
        </trans-unit>
        <trans-unit id="da8e6981129a80511c8976bfcddbe201d3626924" translate="yes" xml:space="preserve">
          <source>Dean Arnold &amp;lt;darnold AT presicient DOT com&amp;gt; - Stack size API</source>
          <target state="translated">Dean Arnold &amp;lt;darnold AT presicient DOT com&amp;gt;-堆栈大小API</target>
        </trans-unit>
        <trans-unit id="36ea2a10971530d1f3b41de8bb6af5b551a6ff3c" translate="yes" xml:space="preserve">
          <source>Debian GNU/kFreeBSD systems also used LinuxThreads up until and including the 6.0 release, but after that moved to FreeBSD thread semantics, which are POSIX-like.</source>
          <target state="translated">Debian GNU/kFreeBSD系统在6.0版本之前,也一直使用LinuxThreads,但在那之后,转而使用FreeBSD的线程语义,类似POSIX。</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="d7013dc1690e39306f211d819fa32173c56252c9" translate="yes" xml:space="preserve">
          <source>Debug Output</source>
          <target state="translated">调试输出</target>
        </trans-unit>
        <trans-unit id="b05fb520e7c0513f4478767235e0d3c4b22c35e6" translate="yes" xml:space="preserve">
          <source>Debug a given program using threads (experimental).</source>
          <target state="translated">使用线程调试给定程序(实验性)。</target>
        </trans-unit>
        <trans-unit id="5f7d3acbef3ce732ed02816b2d1048d41d127c3b" translate="yes" xml:space="preserve">
          <source>Debug a given program via the &lt;code&gt;Devel::ptkdb&lt;/code&gt; GUI.</source>
          <target state="translated">通过 &lt;code&gt;Devel::ptkdb&lt;/code&gt; GUI 调试给定程序。</target>
        </trans-unit>
        <trans-unit id="bd4cb2194799882c3c66213892a49639bae1936c" translate="yes" xml:space="preserve">
          <source>Debug subroutine enter/exit.</source>
          <target state="translated">调试子程序enter/exit。</target>
        </trans-unit>
        <trans-unit id="4333709c02ad553298735787840db205447e4bf6" translate="yes" xml:space="preserve">
          <source>Debugger Commands</source>
          <target state="translated">调试器命令</target>
        </trans-unit>
        <trans-unit id="9914c0d0aed65ea8f1d64b044cdff2c3fddecc0d" translate="yes" xml:space="preserve">
          <source>Debugger Customization</source>
          <target state="translated">调试器自定义</target>
        </trans-unit>
        <trans-unit id="99ecabc4479d51c9a08930be819ce0858218cf75" translate="yes" xml:space="preserve">
          <source>Debugger Customization Functions</source>
          <target state="translated">调试器自定义功能</target>
        </trans-unit>
        <trans-unit id="666cf254f85ea5d057a4582c5d8d5fdd8a5b7e41" translate="yes" xml:space="preserve">
          <source>Debugger Input/Output</source>
          <target state="translated">调试器输入/输出</target>
        </trans-unit>
        <trans-unit id="9751ba81f798bbd7760a0c6d24e8d83eb20c30ba" translate="yes" xml:space="preserve">
          <source>Debugger Internal Variables</source>
          <target state="translated">调试器内部变量</target>
        </trans-unit>
        <trans-unit id="d026646d6b3410bc5de0b3ffc654c93e730dbd4e" translate="yes" xml:space="preserve">
          <source>Debugger Internals</source>
          <target state="translated">调试器内部</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="b77aa217c50f6fe5bfd3f17727cebc255c68a2ca" translate="yes" xml:space="preserve">
          <source>Debugging Compile-Time Statements</source>
          <target state="translated">调试编译时的语句</target>
        </trans-unit>
        <trans-unit id="56a3daa806e9216f2f247d92a9789167d765ab05" translate="yes" xml:space="preserve">
          <source>Debugging Memory Usage</source>
          <target state="translated">调试内存使用情况</target>
        </trans-unit>
        <trans-unit id="7f9818adf8fc8493412c933de791d9f5c9b959e2" translate="yes" xml:space="preserve">
          <source>Debugging Perl Memory Usage</source>
          <target state="translated">调试Perl的内存使用情况</target>
        </trans-unit>
        <trans-unit id="9e08887136b7961fe7c673b82471c4d25acee0d8" translate="yes" xml:space="preserve">
          <source>Debugging Regular Expressions</source>
          <target state="translated">调试正则表达式</target>
        </trans-unit>
        <trans-unit id="a55f46b26d2e609b7ed7dd3dcdfe13f913890ab9" translate="yes" xml:space="preserve">
          <source>Debugging Regular Expressions in perldebug</source>
          <target state="translated">调试perldebug中的正则表达式</target>
        </trans-unit>
        <trans-unit id="b148c2d0cd84634d55a9ffc8e11de74f37399218" translate="yes" xml:space="preserve">
          <source>Debugging Utilities</source>
          <target state="translated">调试工具</target>
        </trans-unit>
        <trans-unit id="8057c32aee1676af868f8f55325f1ae849dbb6de" translate="yes" xml:space="preserve">
          <source>Debugging this module is more than a bit complex due to interference from the software producing the indices on CPAN, the mirroring process on CPAN, packaging, configuration, synchronicity, and even (gasp!) due to bugs within the CPAN.pm module itself.</source>
          <target state="translated">调试这个模块是比较复杂的,因为有来自CPAN上生成索引的软件、CPAN上的镜像过程、打包、配置、同步的干扰,甚至(喘气!)由于CPAN.pm模块本身的错误。</target>
        </trans-unit>
        <trans-unit id="8c401279896f59c9ac4daaaace09acb4863e72b5" translate="yes" xml:space="preserve">
          <source>December, 2001; by Nicholas Clark: make timestr() recognise the style 'none' and return an empty string. If cmpthese is calling timethese, make it pass the style in. (so that 'none' will suppress output). Make sub new dump its debugging output to STDERR, to be consistent with everything else. All bugs found while writing a regression test.</source>
          <target state="translated">2001 年 12 月;作者:Nicholas Clark:让 timestr()识别样式 'none' 并返回一个空字符串。如果 cmpthese 正在调用 timethese,让它把样式传递进来。(这样'none'将抑制输出)。让sub new把它的调试输出转储到stderr,以便与其他所有东西保持一致。在写回归测试时发现的所有bug。</target>
        </trans-unit>
        <trans-unit id="a39a923b41cc5f61bf60cc9e5e68a22cae934912" translate="yes" xml:space="preserve">
          <source>Decide what system you'll use for lexicon keys. If you insist, you can use opaque IDs (if you're nostalgic for &lt;code&gt;catgets&lt;/code&gt; ), but I have better suggestions in the section &quot;Entries in Each Lexicon&quot;, above. Assuming you opt for meaningful keys that double as values (like &quot;Minimum ([_1]) is larger than maximum ([_2])!\n&quot;), you'll have to settle on what language those should be in. For the sake of argument, I'll call this English, specifically American English, &quot;en-US&quot;.</source>
          <target state="translated">确定将用于词典密钥的系统。如果您坚持要使用，则可以使用不透明的ID（如果您对 &lt;code&gt;catgets&lt;/code&gt; 怀旧），但是在上面的&amp;ldquo;每个词典中的条目&amp;rdquo;部分中，我有更好的建议。假设您选择的有意义的键是值的两倍（例如&amp;ldquo;最小（[_1]）大于最大（[_2]）！\ n&amp;rdquo;），则必须确定这些键应使用的语言。为了论证，我将其称为英语，特别是美式英语&amp;ldquo; en-US&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="c2604e0c48edbf848a6d96ba3a8037bd0dc24ff4" translate="yes" xml:space="preserve">
          <source>Declaration and Access of Arrays of Arrays</source>
          <target state="translated">数组数组的声明和访问</target>
        </trans-unit>
        <trans-unit id="ebfaff41dd116e96392e7550a2b66d9d22027082" translate="yes" xml:space="preserve">
          <source>Declaration of MORE ELABORATE RECORDS</source>
          <target state="translated">宣布更多的电子记录。</target>
        </trans-unit>
        <trans-unit id="5ec1670ea8c424f5ee15a9e695d0c44630da018c" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF ARRAYS</source>
          <target state="translated">宣布 &quot;哈希 &quot;拍卖</target>
        </trans-unit>
        <trans-unit id="b8c8706e060a6811d69b8d2fd72320a3142d6844" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF COMPLEX RECORDS</source>
          <target state="translated">复杂记录的申报。</target>
        </trans-unit>
        <trans-unit id="4ce4e4163cd30ea8c4a041080be1e50e00906890" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF HASHES</source>
          <target state="translated">宣布 &quot;ASH OF HASHES</target>
        </trans-unit>
        <trans-unit id="968cb53513edaef6840cbb9bd46e4ba68cbf91c3" translate="yes" xml:space="preserve">
          <source>Declaration of an ARRAY OF ARRAYS</source>
          <target state="translated">阵列的宣布。</target>
        </trans-unit>
        <trans-unit id="43a23bde1fe732a75628839289c49e738219d5a3" translate="yes" xml:space="preserve">
          <source>Declaration of an ARRAY OF HASHES</source>
          <target state="translated">申报一揽子哈希方案</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="01b95bbd7c9d60ecf5c5308055fe69e1d280f03c" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; as a build-time dependency in &lt;code&gt;Makefile.PL&lt;/code&gt; (use &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ), or in your &lt;code&gt;Build.PL&lt;/code&gt; (use &lt;code&gt;build_requires&lt;/code&gt; ).</source>
          <target state="translated">在 &lt;code&gt;Makefile.PL&lt;/code&gt; （使用 &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ）或 &lt;code&gt;Build.PL&lt;/code&gt; （使用 &lt;code&gt;build_requires&lt;/code&gt; ）中，将 &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; 声明为构建时依赖项。</target>
        </trans-unit>
        <trans-unit id="1b76a6d1632adb267d07f45f92fbd92ddebb3c0e" translate="yes" xml:space="preserve">
          <source>Declare Just &lt;code&gt;SP&lt;/code&gt; . This is actually identical to &lt;code&gt;dSP&lt;/code&gt; , and declares a local copy of perl's stack pointer, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;SP&lt;/code&gt; . (Available for backward source code compatibility with the old (Perl 5.005) thread model.)</source>
          <target state="translated">声明Just &lt;code&gt;SP&lt;/code&gt; 。这实际上与 &lt;code&gt;dSP&lt;/code&gt; 相同，并声明了可通过 &lt;code&gt;SP&lt;/code&gt; 宏获得的perl堆栈指针的本地副本。参见 &lt;code&gt;SP&lt;/code&gt; 。（可与旧的（Perl 5.005）线程模型实现向后源代码兼容性。）</target>
        </trans-unit>
        <trans-unit id="b246d2c3a34b0309dc705ab2bf6fd78585237723" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function. For example:</source>
          <target state="translated">声明图片格式以供 &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 功能使用。例如：</target>
        </trans-unit>
        <trans-unit id="1337e532e08b8945e760914191518070a82f311f" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function. For example:</source>
          <target state="translated">声明图片格式以供 &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 功能使用。例如：</target>
        </trans-unit>
        <trans-unit id="79b9fcb83aaabac99dc56e38a306c39d5ceed2f1" translate="yes" xml:space="preserve">
          <source>Declare a stack marker variable, &lt;code&gt;mark&lt;/code&gt; , for the XSUB. See &lt;code&gt;MARK&lt;/code&gt; and &lt;code&gt;dORIGMARK&lt;/code&gt; .</source>
          <target state="translated">为XSUB 声明一个堆栈标记变量 &lt;code&gt;mark&lt;/code&gt; 。请参阅 &lt;code&gt;MARK&lt;/code&gt; 和 &lt;code&gt;dORIGMARK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bc325f65b062b55c0a046c697861918ab5ba8a6" translate="yes" xml:space="preserve">
          <source>Declare a typedef named &lt;code&gt;my_cxt_t&lt;/code&gt; that is a structure that contains all the data that needs to be interpreter-local.</source>
          <target state="translated">声明一个名为 &lt;code&gt;my_cxt_t&lt;/code&gt; 的typedef ，它是一个结构，其中包含需要在解释器本地进行的所有数据。</target>
        </trans-unit>
        <trans-unit id="0f3343311ea82b57cf2a91faf914e7146706bc4b" translate="yes" xml:space="preserve">
          <source>Declare constants</source>
          <target state="translated">声明常量</target>
        </trans-unit>
        <trans-unit id="e90d1629cda5e7b6f31494a6b20b0b96a93f8fec" translate="yes" xml:space="preserve">
          <source>Declare local variables for a multicall. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">声明多调用的局部变量。请参阅&lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall中的轻量级回调&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe8095595a1e11e48a82985239de9e9b7e44058b" translate="yes" xml:space="preserve">
          <source>Declare struct-like datatypes as Perl classes</source>
          <target state="translated">将类似结构的数据类型声明为Perl类。</target>
        </trans-unit>
        <trans-unit id="fd95c3fe676cb80336a8b7970197ea750ed934e1" translate="yes" xml:space="preserve">
          <source>Declares a block of tests you expect to fail and $why. Perhaps it's because you haven't fixed a bug or haven't finished a new feature:</source>
          <target state="translated">声明一个你期望失败的测试块和$why。也许是因为你还没有修复一个bug或者没有完成一个新的功能。</target>
        </trans-unit>
        <trans-unit id="4b08be3bcb055a5bfcdfe0f7e147c5f7a01a9af4" translate="yes" xml:space="preserve">
          <source>Declares a local copy of perl's stack pointer for the XSUB, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;SP&lt;/code&gt; .</source>
          <target state="translated">声明XSUB的perl堆栈指针的本地副本，可通过 &lt;code&gt;SP&lt;/code&gt; 宏使用。参见 &lt;code&gt;SP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="775811626d86d0489442dc9b97620d79f2638c9b" translate="yes" xml:space="preserve">
          <source>Declares that no more items will be added to the queue.</source>
          <target state="translated">宣布不再将物品添加到队列中。</target>
        </trans-unit>
        <trans-unit id="a88496a0e111c684a669138708549e2de67d1e28" translate="yes" xml:space="preserve">
          <source>Declares that the stream accepts perl's</source>
          <target state="translated">声明该流接受perl的</target>
        </trans-unit>
        <trans-unit id="97a2147f033bc70f2e20dfc8e311b01cc7c8c8f3" translate="yes" xml:space="preserve">
          <source>Declares that this test will run an indeterminate number of tests.</source>
          <target state="translated">声明该测试将运行不确定次数的测试。</target>
        </trans-unit>
        <trans-unit id="6da56154a8de563d222245d4af173f8b457c59e3" translate="yes" xml:space="preserve">
          <source>Declares that you are done testing, no more tests will be run after this point.</source>
          <target state="translated">宣布你已经完成了测试,此后将不再运行测试。</target>
        </trans-unit>
        <trans-unit id="cd4907e397ad786d964786ed678ccb6ec918a061" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;code&gt;&lt;a href=&quot;package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt; , like &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; , and the punctuation variables.</source>
          <target state="translated">将BLOCK或编译单元的其余部分声明为位于给定的名称空间中。包声明的范围是提供的代码BLOCK，或者在没有BLOCK的情况下，从声明本身到当前范围的末尾（封闭的块，文件或 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ）。也就是说，不带BLOCK的窗体可以在当前作用域的末尾运行，就像 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 运算符一样。此范围内的所有不合格动态标识符都将位于给定的名称空间中，除非被另一个 &lt;code&gt;&lt;a href=&quot;package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; 声明覆盖或当它们是符合 &lt;code&gt;main::&lt;/code&gt; 的特殊标识符之一时，例如 &lt;code&gt;STDOUT&lt;/code&gt; ， &lt;code&gt;ARGV&lt;/code&gt; ， &lt;code&gt;ENV&lt;/code&gt; 和标点符号变量。</target>
        </trans-unit>
        <trans-unit id="f8c0173916c6e4ea3e07071d4b7dde09c327c03c" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt; , like &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; , and the punctuation variables.</source>
          <target state="translated">将BLOCK或编译单元的其余部分声明为位于给定的名称空间中。包声明的范围是提供的代码BLOCK，或者在没有BLOCK的情况下，从声明本身到当前范围的末尾（封闭的块，文件或 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; ）。也就是说，不带BLOCK的窗体可以在当前作用域的末尾运行，就像 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 运算符一样。此范围内的所有不合格动态标识符都将位于给定的名称空间中，除非被另一个 &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; 声明覆盖或当它们是符合 &lt;code&gt;main::&lt;/code&gt; 的特殊标识符之一时，例如 &lt;code&gt;STDOUT&lt;/code&gt; ， &lt;code&gt;ARGV&lt;/code&gt; ， &lt;code&gt;ENV&lt;/code&gt; 和标点符号变量。</target>
        </trans-unit>
        <trans-unit id="f1da10a5e5d78d8ddd42db2cd6041c8878256f5e" translate="yes" xml:space="preserve">
          <source>Declaring &lt;code&gt;@EXPORT_OK&lt;/code&gt; and Friends</source>
          <target state="translated">声明 &lt;code&gt;@EXPORT_OK&lt;/code&gt; 和朋友</target>
        </trans-unit>
        <trans-unit id="bf1e27173b2b61ad7cc8d4e35225eb9ac31e3c57" translate="yes" xml:space="preserve">
          <source>Declaring @EXPORT_OK and Friends</source>
          <target state="translated">声明 @EXPORT_OK 和朋友们。</target>
        </trans-unit>
        <trans-unit id="fde084d9565bae036b5f20474e01a929023e39bf" translate="yes" xml:space="preserve">
          <source>Declaring a subroutine allows a subroutine name to be used as if it were a list operator from that point forward in the program. You can declare a subroutine without defining it by saying &lt;code&gt;sub name&lt;/code&gt; , thus:</source>
          <target state="translated">从该点开始，声明子例程将允许子例程名称像列表操作符一样使用。您可以通过说出 &lt;code&gt;sub name&lt;/code&gt; 来声明子例程而无需定义它，因此：</target>
        </trans-unit>
        <trans-unit id="df50d3b937b66b95438db0baeefd22f2c1fa73b6" translate="yes" xml:space="preserve">
          <source>Decode</source>
          <target state="translated">Decode</target>
        </trans-unit>
        <trans-unit id="2baf8b86f083c5626552d12ceb5f07d33eee642a" translate="yes" xml:space="preserve">
          <source>Decode a base64 string by calling the decode_base64() function. This function takes a single argument which is the string to decode and returns the decoded data.</source>
          <target state="translated">通过调用decode_base64()函数对base64字符串进行解码。这个函数接收一个参数,即要解码的字符串,并返回解码后的数据。</target>
        </trans-unit>
        <trans-unit id="109d6d8d7f79aeac2b306278d0d11f591a9ace1e" translate="yes" xml:space="preserve">
          <source>Decode everything you receive, encode everything you send out. (If it's text data.)</source>
          <target state="translated">解码你收到的一切,编码你发出的一切。(如果是文本数据。)</target>
        </trans-unit>
        <trans-unit id="4b9d36d83c06e37782d740af6424903230486d88" translate="yes" xml:space="preserve">
          <source>Decoding</source>
          <target state="translated">Decoding</target>
        </trans-unit>
        <trans-unit id="7569471cdb884355544f0d363051bcbdd3ab3bd3" translate="yes" xml:space="preserve">
          <source>Decoding can't happen reliably if you don't know how the data was encoded. If you get to choose, it's a good idea to standardize on UTF-8.</source>
          <target state="translated">如果你不知道数据是如何编码的,解码就无法可靠地发生。如果你可以选择,最好用UTF-8作为标准。</target>
        </trans-unit>
        <trans-unit id="abcb42a9bd28ce7905619e5495e33ddc378d15e2" translate="yes" xml:space="preserve">
          <source>Decoding does not need slurp mode if every line contains a multiple of four base64 chars:</source>
          <target state="translated">如果每一行都包含4个base64字符的倍数,解码就不需要slurp模式。</target>
        </trans-unit>
        <trans-unit id="8d2fb28c0e5d9fe827a3bd469e59cbc0c5460a44" translate="yes" xml:space="preserve">
          <source>Decomposition and Composition</source>
          <target state="translated">分解和组成</target>
        </trans-unit>
        <trans-unit id="1b059e79c07fd4e42a0c8736733855e555b987de" translate="yes" xml:space="preserve">
          <source>Decompress the file with &lt;code&gt;gzip -d yourmodule.tar.gz&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;gzip -d yourmodule.tar.gz&lt;/code&gt; 解压缩文件</target>
        </trans-unit>
        <trans-unit id="fecfe7ecbf358f7b0d7f78df884a86cc9366776a" translate="yes" xml:space="preserve">
          <source>Decrement OBJ by one.</source>
          <target state="translated">将OBJ减少一个。</target>
        </trans-unit>
        <trans-unit id="f9e1ce708a313bdfe9eca73b07a0b2fbd7af57f3" translate="yes" xml:space="preserve">
          <source>Decrement an SV's reference count, and if it drops to zero, call &lt;code&gt;sv_clear&lt;/code&gt; to invoke destructors and free up any memory used by the body; finally, deallocate the SV's head itself. Normally called via a wrapper macro &lt;code&gt;SvREFCNT_dec&lt;/code&gt; .</source>
          <target state="translated">减少SV的引用计数，如果它减少到零，则调用 &lt;code&gt;sv_clear&lt;/code&gt; 调用析构函数并释放主体使用的所有内存；最后，释放SV的头部本身。通常通过包装宏 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="3a67ea7e86c28199b5df339f2ac9cbaf49e99821" translate="yes" xml:space="preserve">
          <source>Decrement the refcnt of each remaining SV, possibly triggering a cleanup. This function may have to be called multiple times to free SVs which are in complex self-referential hierarchies.</source>
          <target state="translated">减少每个剩余SV的refcnt,可能会触发一次清理。这个函数可能需要被多次调用,以释放处于复杂自引用层次结构中的SV。</target>
        </trans-unit>
        <trans-unit id="20e7e93f2b8e3284df557787a48d088c384708e2" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; by one. If the reference count reaches zero the structure's memory is freed, which (recursively) causes a reduction of its parent &lt;code&gt;refcounted_he&lt;/code&gt; 's reference count. It is safe to pass a null pointer to this function: no action occurs in this case.</source>
          <target state="translated">一个递减的引用计数 &lt;code&gt;refcounted_he&lt;/code&gt; 一个。如果引用计数达到零，则释放结构的内存，这（递归地）导致其父 &lt;code&gt;refcounted_he&lt;/code&gt; 的引用计数减少。将空指针传递给此函数是安全的：在这种情况下，不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="dcec4515414c7f15a726073898aabc532b3d39f1" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the given SV.</source>
          <target state="translated">递减给定SV的参考数。</target>
        </trans-unit>
        <trans-unit id="fad89dfcee27e9d87d909c911b20e8fe884012e9" translate="yes" xml:space="preserve">
          <source>Deep Cloning</source>
          <target state="translated">深度克隆</target>
        </trans-unit>
        <trans-unit id="c84353cad8816e49b138a483d1ebb30bfc16441f" translate="yes" xml:space="preserve">
          <source>Default Makefile Behaviour</source>
          <target state="translated">默认的Makefile行为</target>
        </trans-unit>
        <trans-unit id="f5a8076e567450c53999f5638b343fac686a825d" translate="yes" xml:space="preserve">
          <source>Default Parameter Values</source>
          <target state="translated">默认参数值</target>
        </trans-unit>
        <trans-unit id="4753d9b7084053c5089d49a71f2cde5d97a9c631" translate="yes" xml:space="preserve">
          <source>Default Parameters</source>
          <target state="translated">默认参数</target>
        </trans-unit>
        <trans-unit id="cc0e201c7029269ea6e8c9f6874c0179cc038bae" translate="yes" xml:space="preserve">
          <source>Default Test Directory</source>
          <target state="translated">默认测试目录</target>
        </trans-unit>
        <trans-unit id="44ec713d2a53a2de818adaf52eb763f357d09499" translate="yes" xml:space="preserve">
          <source>Default Warnings and Optional Warnings</source>
          <target state="translated">默认警告和可选警告</target>
        </trans-unit>
        <trans-unit id="0566f3b85322f529cf1661115aa7b73ed4d004bc" translate="yes" xml:space="preserve">
          <source>Default destinations</source>
          <target state="translated">默认目的地</target>
        </trans-unit>
        <trans-unit id="967dd37853ad5171b91867584cc350ce812dd723" translate="yes" xml:space="preserve">
          <source>Default exports</source>
          <target state="translated">默认出口</target>
        </trans-unit>
        <trans-unit id="47421e2559e43abd036e2b184dadd2357238a719" translate="yes" xml:space="preserve">
          <source>Default is &quot;\034&quot;, the same as SUBSEP in &lt;b&gt;awk&lt;/b&gt;. If your keys contain binary data there might not be any safe value for &lt;code&gt;$;&lt;/code&gt; .</source>
          <target state="translated">默认值为&amp;ldquo; \ 034&amp;rdquo;，与&lt;b&gt;awk中的&lt;/b&gt; SUBSEP相同。如果您的密钥包含二进制数据，则 &lt;code&gt;$;&lt;/code&gt; 可能没有任何安全值；。</target>
        </trans-unit>
        <trans-unit id="ffe4ea797d5b8a7f8cfde90ab339db72e2e542a2" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="translated">默认为0。</target>
        </trans-unit>
        <trans-unit id="3614d667188f70abf848a06aa0652a05a7980f2d" translate="yes" xml:space="preserve">
          <source>Default is 0;</source>
          <target state="translated">默认为0。</target>
        </trans-unit>
        <trans-unit id="117a6bf24c7268f690b354be18d70dcb8affc433" translate="yes" xml:space="preserve">
          <source>Default is 1;</source>
          <target state="translated">默认为1。</target>
        </trans-unit>
        <trans-unit id="94d18537fb9880b0b3a9844f6456e7041684d68a" translate="yes" xml:space="preserve">
          <source>Default is 4096.</source>
          <target state="translated">默认为4096。</target>
        </trans-unit>
        <trans-unit id="6e26841758dcad7e26700059748889a29326c77f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File-Fetch@example.com&lt;/code&gt; .</source>
          <target state="translated">默认值为 &lt;code&gt;File-Fetch@example.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b21f25856f196d843b44afb04b8ac6eaef661e6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; .</source>
          <target state="translated">默认值为 &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da032bd647313ecd583e516886d8ef8538d9001f" translate="yes" xml:space="preserve">
          <source>Default is false, meaning that when you use &lt;code&gt;store&lt;/code&gt; as a template key, &lt;code&gt;check&lt;/code&gt; will put it both in the scalar you supplied, as well as in the hashref it returns.</source>
          <target state="translated">默认值为false，这意味着当您将 &lt;code&gt;store&lt;/code&gt; 用作模板键时， &lt;code&gt;check&lt;/code&gt; 会将其放入您提供的标量以及返回的hashref中。</target>
        </trans-unit>
        <trans-unit id="f23dbfcfc00cfaaa5823861693969bf14d49d57a" translate="yes" xml:space="preserve">
          <source>Default is for debugging mode to be disabled.</source>
          <target state="translated">默认为禁用调试模式。</target>
        </trans-unit>
        <trans-unit id="d09b4e9a70d326b80a3705a2d07cf6295402aa8f" translate="yes" xml:space="preserve">
          <source>Default is for files to be removed as requested by the caller.</source>
          <target state="translated">默认情况下是按照调用者的要求删除文件。</target>
        </trans-unit>
        <trans-unit id="9c92cef06212a1842160f64b786f629e6d8ef460" translate="yes" xml:space="preserve">
          <source>Default is for the file to be removed.</source>
          <target state="translated">默认为删除该文件。</target>
        </trans-unit>
        <trans-unit id="611ca2ae870bcb7431782f0c4440d0df69e48190" translate="yes" xml:space="preserve">
          <source>Default is to assume that any UID less than or equal to 10 is a root UID.</source>
          <target state="translated">默认情况下,任何小于或等于10的UID都是根UID。</target>
        </trans-unit>
        <trans-unit id="7fca13ec107ea72b752cc1954e7362fa3edfc913" translate="yes" xml:space="preserve">
          <source>Default is: &lt;code&gt; =&amp;gt; &lt;/code&gt; .</source>
          <target state="translated">默认值为： &lt;code&gt; =&amp;gt; &lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8820a54076d664561edd70760e8e08a8256672de" translate="yes" xml:space="preserve">
          <source>Default value is 0.</source>
          <target state="translated">默认值为0。</target>
        </trans-unit>
        <trans-unit id="ff65fb164557c4cda7887f6d0b88d9af2694a1c4" translate="yes" xml:space="preserve">
          <source>Default value is 1.</source>
          <target state="translated">默认值为1。</target>
        </trans-unit>
        <trans-unit id="041ad125ee75e430d661eb85a0aa9a66653995a9" translate="yes" xml:space="preserve">
          <source>Default value to use (instead of &lt;code&gt;croak&lt;/code&gt; ing with &quot;your vendor has not defined...&quot;) to return if the macro isn't defined. Specify a reference to an array with type followed by value(s).</source>
          <target state="translated">默认值使用（而不是 &lt;code&gt;croak&lt;/code&gt; ING以&amp;ldquo;你的供应商没有定义...&amp;rdquo;），如果没有定义的宏返回。用类型后跟值指定对数组的引用。</target>
        </trans-unit>
        <trans-unit id="fe91ba1dc4d3dc98854423373895e4709f7bcaf4" translate="yes" xml:space="preserve">
          <source>Default values defined in the CPAN/Config.pm file can be overridden in a user specific file: CPAN/MyConfig.pm. Such a file is best placed in &lt;code&gt;$HOME/.cpan/CPAN/MyConfig.pm&lt;/code&gt;, because &lt;code&gt;$HOME/.cpan&lt;/code&gt; is added to the search path of the CPAN module before the use() or require() statements. The mkmyconfig command writes this file for you.</source>
          <target state="translated">CPAN / Config.pm文件中定义的默认值可以在用户特定的文件CPAN / MyConfig.pm中覆盖。这样的文件最好放在 &lt;code&gt;$HOME/.cpan/CPAN/MyConfig.pm&lt;/code&gt; ，因为 &lt;code&gt;$HOME/.cpan&lt;/code&gt; 是在use（）或require（）语句之前添加到CPAN模块的搜索路径中的。mkmyconfig命令为您写入此文件。</target>
        </trans-unit>
        <trans-unit id="2390e056e940a5d1d57f0dfd7aeb859feb7ef003" translate="yes" xml:space="preserve">
          <source>Default values for XSUB arguments can be specified by placing an assignment statement in the parameter list. The default value may be a number, a string or the special string &lt;code&gt;NO_INIT&lt;/code&gt; . Defaults should always be used on the right-most parameters only.</source>
          <target state="translated">XSUB参数的默认值可以通过在参数列表中放置赋值语句来指定。默认值可以是数字，字符串或特殊字符串 &lt;code&gt;NO_INIT&lt;/code&gt; 。默认值应始终仅在最右边的参数上使用。</target>
        </trans-unit>
        <trans-unit id="ff08b56fbed2f2f2f7b04ba5e78bf45aaa623f3a" translate="yes" xml:space="preserve">
          <source>Defaults and how to override them</source>
          <target state="translated">默认值和如何覆盖它们</target>
        </trans-unit>
        <trans-unit id="e134e0139099634855fa20d262decd51a88d9996" translate="yes" xml:space="preserve">
          <source>Defaults to &quot;$(OBJECT)&quot; and is used in the ld command to specify what files to link/load from (also see dynamic_lib below for how to specify ld flags)</source>
          <target state="translated">默认值为&quot;$(OBJECT)&quot;,在ld命令中用于指定要链接/加载的文件(关于如何指定ld标志,请参见下面的dynamic_lib)</target>
        </trans-unit>
        <trans-unit id="7061416449de7f47367c9fcf92dab2f1e9008d0c" translate="yes" xml:space="preserve">
          <source>Defaults to &quot;unknown&quot;.</source>
          <target state="translated">默认值为 &quot;未知&quot;。</target>
        </trans-unit>
        <trans-unit id="3afa08668c5c5dc51326fee541b5ff3c6d50395f" translate="yes" xml:space="preserve">
          <source>Defaults to $(DIST_DEFAULT) which in turn defaults to tardist.</source>
          <target state="translated">默认值为$(DIST_DEFAULT),它又默认为tardist。</target>
        </trans-unit>
        <trans-unit id="1e15a7e04559718dd148ec2dcf10c3805456f2a3" translate="yes" xml:space="preserve">
          <source>Defaults to $(FIRST_MAKEFILE).old or $(FIRST_MAKEFILE)_old on VMS.</source>
          <target state="translated">VMS上默认为$(FIRST_MAKEFILE).old或$(FIRST_MAKEFILE)_old。</target>
        </trans-unit>
        <trans-unit id="2f77e97345b6f70484f890ef33fb548347411e97" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{installprefixexp}, falling back to $Config{installprefix}, $Config{prefixexp} or $Config{prefix} should $Config{installprefixexp} not exist.</source>
          <target state="translated">默认值为$Config{installprefixexp},如果$Config{installprefixexp}不存在,则恢复为$Config{installprefixexp}、$Config{prefixexp}或$Config{prefix}。</target>
        </trans-unit>
        <trans-unit id="0d2a34019b39d0a59222f4965b474dc8e60e223a" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{installprivlib}.</source>
          <target state="translated">默认为$Config{installprivlib}。</target>
        </trans-unit>
        <trans-unit id="297039d02dfbd310b72f4d214dc03d0177d0f5ba" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{lddlflags}.</source>
          <target state="translated">默认值为$Config{ldlflags}。</target>
        </trans-unit>
        <trans-unit id="1f5b612bc652d3b75be02b22a0c9c551d13e7785" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{ld}.</source>
          <target state="translated">默认值为$Config{ld}。</target>
        </trans-unit>
        <trans-unit id="b736bfe876455ba787df5366a5e321959e9a06ef" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{make}, which may go looking for a Make program in your environment.</source>
          <target state="translated">默认为$Config{make},它可能会在你的环境中去寻找一个Make程序。</target>
        </trans-unit>
        <trans-unit id="2a196b84e1a65651cad69ebad41443f48567f9d9" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{siteprefixexp}. Perls prior to 5.6.0 didn't have an explicit siteprefix in the Config. In those cases $Config{installprefix} will be used.</source>
          <target state="translated">默认值为$Config{siteprefixexp}。5.6.0之前的Perls在Config中没有明确的siteprefix,在这种情况下,将使用$Config{installprefix}。在这种情况下,将使用 $Config{installprefix}。</target>
        </trans-unit>
        <trans-unit id="e39813b2a929031c5d759deba757efe05e4152c9" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{vendorprefixexp}.</source>
          <target state="translated">默认值为$Config{vendorprefixexp}。</target>
        </trans-unit>
        <trans-unit id="e546dadcb8267744ab5961a80d3d0249f0af262e" translate="yes" xml:space="preserve">
          <source>Defaults to 'Makefile' or 'Descrip.MMS' on VMS.</source>
          <target state="translated">VMS上默认为'Makefile'或'Descrip.MMS'。</target>
        </trans-unit>
        <trans-unit id="36a3365955b62edce26a680e752008adf273fb56" translate="yes" xml:space="preserve">
          <source>Defaults to 0.</source>
          <target state="translated">默认值为0。</target>
        </trans-unit>
        <trans-unit id="2178c999f5078fa159c89a3040ee28c0a0ab0555" translate="yes" xml:space="preserve">
          <source>Defaults to 1.</source>
          <target state="translated">默认值为1。</target>
        </trans-unit>
        <trans-unit id="42b07f550144816ff7f9ad73156f6af2230242bf" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;-O&lt;/code&gt; . Set it to &lt;code&gt;-g&lt;/code&gt; to turn debugging on. The flag is passed to subdirectory makes.</source>
          <target state="translated">缺省为 &lt;code&gt;-O&lt;/code&gt; 。将其设置为 &lt;code&gt;-g&lt;/code&gt; 以打开调试。该标志传递给子目录make。</target>
        </trans-unit>
        <trans-unit id="4fbcc2fc6108b1d2b0294b983b1a9ad99a640450" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt; , meaning no timeout is set.</source>
          <target state="translated">默认值为 &lt;code&gt;0&lt;/code&gt; ，表示未设置超时。</target>
        </trans-unit>
        <trans-unit id="d988114015a6a9816c9d51daa92e80b47086fad8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="146cfb515515d203c57c9c8aab0bc48f6d370409" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6371c4ed1bbd778c501d9b308a25089892c98692" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;64&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;64&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3dd3b4ec101beb9f1857e77cfca0e6a41873cc62" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;8&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5da3821742eb234c04279ce3cc2f85314c99eb1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;@&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;@&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a0b8a3adf1fd6fbd992cea8cf36981968d31e21" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;LZMA_PRESET_DEFAULT&lt;/code&gt; (6).</source>
          <target state="translated">默认为 &lt;code&gt;LZMA_PRESET_DEFAULT&lt;/code&gt; （6）。</target>
        </trans-unit>
        <trans-unit id="147274cdbe6f000456b5b99fb65832fa4f82af15" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;MAX_WBITS&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;MAX_WBITS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04dcb63c213f6d34c69ca1a67ff471d071e8f496" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt; .</source>
          <target state="translated">默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c72a3e89d9401a68060eed25afb0d35d9676747" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{ &quot;ExtUtils::MakeMaker&quot; =&amp;gt; 0 }&lt;/code&gt; if this attribute is not specified.</source>
          <target state="translated">如果未指定此属性，则默认为 &lt;code&gt;{ &quot;ExtUtils::MakeMaker&quot; =&amp;gt; 0 }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbe6c62dfeedbe39bcaae924b83b87595c0727be" translate="yes" xml:space="preserve">
          <source>Defaults to DISTNAME-VERSION.</source>
          <target state="translated">默认为DISTNAME-VERSION。</target>
        </trans-unit>
        <trans-unit id="e117bd432f26952da4f40820366fde65f2edc72e" translate="yes" xml:space="preserve">
          <source>Defaults to MAX_MEM_LEVEL.</source>
          <target state="translated">默认值为MAX_MEM_LEVEL。</target>
        </trans-unit>
        <trans-unit id="9671af0548359bae98f06615c832c689de5fb555" translate="yes" xml:space="preserve">
          <source>Defaults to MAX_WBITS.</source>
          <target state="translated">默认值为MAX_WBITS。</target>
        </trans-unit>
        <trans-unit id="658dfec16a6b505da6e2bd38b1f2e25f8f18da74" translate="yes" xml:space="preserve">
          <source>Defaults to NAME below but with :: replaced with -.</source>
          <target state="translated">默认为下面的NAME,但用::替换为-。</target>
        </trans-unit>
        <trans-unit id="0031bae010e59fe54ba067d872d7762129c8aa52" translate="yes" xml:space="preserve">
          <source>Defaults to STDERR.</source>
          <target state="translated">默认值为STDERR。</target>
        </trans-unit>
        <trans-unit id="5a78e74b3a77143d8c71cfa329a6e542084b340e" translate="yes" xml:space="preserve">
          <source>Defaults to STDOUT.</source>
          <target state="translated">默认为STDOUT。</target>
        </trans-unit>
        <trans-unit id="a238dcad55848cd42cd0ed2c0201eceef53c02cf" translate="yes" xml:space="preserve">
          <source>Defaults to false, set to true to enable the described behaviour.</source>
          <target state="translated">默认为false,设置为true可启用所述行为。</target>
        </trans-unit>
        <trans-unit id="ecd31712dbbddfd1fe36a725d021309cb2a8b7de" translate="yes" xml:space="preserve">
          <source>Defaults to false, so it will remove null arguments. Set to true to allow them.</source>
          <target state="translated">默认值为false,所以会删除空参数。设为true,则允许使用空参数。</target>
        </trans-unit>
        <trans-unit id="83771af0d9e990cfd4209b40879c5dd720b86a4b" translate="yes" xml:space="preserve">
          <source>Defaults to false.</source>
          <target state="translated">默认值为false。</target>
        </trans-unit>
        <trans-unit id="18d301270448347decdf5cb69be9723a550b7cb5" translate="yes" xml:space="preserve">
          <source>Defaults to on.</source>
          <target state="translated">默认为开启。</target>
        </trans-unit>
        <trans-unit id="2b3470c82dabd8d59a7a8d6175578fc38bf7d623" translate="yes" xml:space="preserve">
          <source>Defaults to true. Turn this off at your own risk.</source>
          <target state="translated">默认值为true。关闭此功能,风险自负。</target>
        </trans-unit>
        <trans-unit id="19d3228f23c29d1d70307e4e28b3e13d0ba13b19" translate="yes" xml:space="preserve">
          <source>Deferencing Method Call</source>
          <target state="translated">引用方法调用</target>
        </trans-unit>
        <trans-unit id="87a045f3d65fd182c7b238c413050e4d1b888897" translate="yes" xml:space="preserve">
          <source>Deferred Signals (Safe Signals)</source>
          <target state="translated">推迟信号(安全信号)</target>
        </trans-unit>
        <trans-unit id="f67da11f1ea091fa4522255eade09d8d8a4672ae" translate="yes" xml:space="preserve">
          <source>Deferred Writing</source>
          <target state="translated">递延写作</target>
        </trans-unit>
        <trans-unit id="f16543b2bfaf8c9f85b87e700f4cb4c04d588365" translate="yes" xml:space="preserve">
          <source>Deferred writes are cached in memory up to the limit specified by the &lt;code&gt;dw_size&lt;/code&gt; option (see above). If the deferred-write buffer is full and you try to write still more deferred data, the buffer will be flushed. All buffered data will be written immediately, the buffer will be emptied, and the now-empty space will be used for future deferred writes.</source>
          <target state="translated">延迟的写操作将缓存在内存中，直到 &lt;code&gt;dw_size&lt;/code&gt; 选项指定的限制为止（请参见上文）。如果延迟写入缓冲区已满，并且您尝试写入更多的延迟数据，则将刷新该缓冲区。所有缓冲的数据将立即被写入，缓冲区将被清空，而现在为空的空间将用于以后的延迟写入。</target>
        </trans-unit>
        <trans-unit id="b09e3bbab301107bd10474a2528bb3ad4a99662e" translate="yes" xml:space="preserve">
          <source>Define DL_FUNCS and DL_VARS and write the *.exp files.</source>
          <target state="translated">定义DL_FUNCS和DL_VARS并写入*.exp文件。</target>
        </trans-unit>
        <trans-unit id="12da81497a7167741d2b29f763f0e078260a1250" translate="yes" xml:space="preserve">
          <source>Define OPTAG as a symbolic name for OPSET. Optag names always start with a colon &lt;code&gt;:&lt;/code&gt; .</source>
          <target state="translated">将OPTAG定义为OPSET的符号名称。Optag名称总是以冒号开头 &lt;code&gt;:&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b358b3f5282189ce82f741fa330a8ab3125c3533" translate="yes" xml:space="preserve">
          <source>Define TO_UNIX to convert OS2 linefeeds to Unix style.</source>
          <target state="translated">定义TO_UNIX来将OS2行进转换为Unix风格。</target>
        </trans-unit>
        <trans-unit id="25a3e54cd9dd2ac97b6cf9da4fc775b0fd09bf4f" translate="yes" xml:space="preserve">
          <source>Define a command alias, like</source>
          <target state="translated">定义一个命令别名,比如</target>
        </trans-unit>
        <trans-unit id="5393ccb5285b32c0372bdc2ca13e7ffc258abe0f" translate="yes" xml:space="preserve">
          <source>Define a macro. &lt;code&gt;Net::Netrc&lt;/code&gt; only parses this field to be compatible with</source>
          <target state="translated">定义一个宏。 &lt;code&gt;Net::Netrc&lt;/code&gt; 仅解析此字段以与</target>
        </trans-unit>
        <trans-unit id="4f7d921c7430791d35aa71dd9a7604bd56ac3756" translate="yes" xml:space="preserve">
          <source>Define a named capture group. Equivalent to &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt;.</source>
          <target state="translated">定义一个命名捕获组。等效于 &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51cc1c473eb56c40ad07bc0030ce03dcaeba9ef9" translate="yes" xml:space="preserve">
          <source>Define at compile-time your own custom character properties for use in regexes.</source>
          <target state="translated">在编译时定义你自己的自定义字符属性,以便在regexes中使用。</target>
        </trans-unit>
        <trans-unit id="a5e319203d5fc86ef244e3b22f31ca80388261db" translate="yes" xml:space="preserve">
          <source>Define this symbol if you want not-threaded faster perl.</source>
          <target state="translated">如果你想让非线程的perl更快,请定义这个符号。</target>
        </trans-unit>
        <trans-unit id="47e540fd76e635df75335773557a724d22e221f7" translate="yes" xml:space="preserve">
          <source>Defined Falsehood. (&lt;code&gt;PL_sv_no&lt;/code&gt; ) The value is not needed (and ignored).</source>
          <target state="translated">定义虚假。（ &lt;code&gt;PL_sv_no&lt;/code&gt; ）不需要（并忽略）该值。</target>
        </trans-unit>
        <trans-unit id="a264576fd62b5306a0590e9ebcaaeb8b9ebd00c2" translate="yes" xml:space="preserve">
          <source>Defined as a Make macro, it is invoked with file and directory arguments; &lt;code&gt;autosplit&lt;/code&gt; will split the specified file into the specified directory and delete obsolete &lt;code&gt;.al&lt;/code&gt; files, after checking first that the module does use the AutoLoader, and ensuring that the module is not already currently split in its current form (the modtime test).</source>
          <target state="translated">定义为Make宏，使用文件和目录参数调用它；在首先检查模块确实使用AutoLoader，并确保模块当前尚未以其当前形式拆分（modtime测试）之后， &lt;code&gt;autosplit&lt;/code&gt; 会将指定的文件拆分到指定的目录中并删除过时的 &lt;code&gt;.al&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="0f9705fadf1dfeea4d0b965d304ecf0e1287b32a" translate="yes" xml:space="preserve">
          <source>Defined if $procselfexe is symlink to the absolute pathname of the executing program.</source>
          <target state="translated">如果$procselfexe是指向执行程序绝对路径名的符号链接,则该定义。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
