<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="23f7b6c9ae09efe5c4f1d8f337c10d106ef5f078" translate="yes" xml:space="preserve">
          <source>Returns a string containing all warnings and errors reported during the last time &lt;code&gt;check&lt;/code&gt; was called.</source>
          <target state="translated">返回一个字符串，其中包含上次调用 &lt;code&gt;check&lt;/code&gt; 时报告的所有警告和错误。</target>
        </trans-unit>
        <trans-unit id="4bb3ec99a85a8f7b5cec264a7a5e334619af049f" translate="yes" xml:space="preserve">
          <source>Returns a string describing the version.</source>
          <target state="translated">返回一个描述版本的字符串。</target>
        </trans-unit>
        <trans-unit id="560ad6773aaeabd86bb34a6abf527b85bf339295" translate="yes" xml:space="preserve">
          <source>Returns a string describing what the SV is a reference to.</source>
          <target state="translated">返回一个描述SV引用的字符串。</target>
        </trans-unit>
        <trans-unit id="0bcecd7cffd03491f568a8084530dad173866617" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; conventions of the C library function &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;. See below for more details and see</source>
          <target state="translated">返回由C库函数 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 的常规 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 约定格式化的字符串。详情请参阅下文</target>
        </trans-unit>
        <trans-unit id="b6f450b91a33f3ae3689a45cc3e6818d55571ccf" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; conventions of the C library function &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;. See below for more details and see</source>
          <target state="translated">返回由C库函数 &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 的常规 &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 约定格式化的字符串。详情请参阅下文</target>
        </trans-unit>
        <trans-unit id="202b7b47ba160cb50028572b7ad28637d3a8c311" translate="yes" xml:space="preserve">
          <source>Returns a string in the form &quot;0x...&quot; representing the value of the internal hash function used by perl on string STR.</source>
          <target state="translated">返回一个 &quot;0x...&quot;形式的字符串,代表perl在字符串STR上使用的内部哈希函数的值。</target>
        </trans-unit>
        <trans-unit id="87194aea62990f0547030785b90b3212e124a93f" translate="yes" xml:space="preserve">
          <source>Returns a string of the form &quot;AUTHORID/TARBALL&quot;, where AUTHORID is the author's PAUSE ID and TARBALL is the distribution filename.</source>
          <target state="translated">返回格式为 &quot;AUTHORID/TARBALL &quot;的字符串,其中AUTHORID是作者的PAUSE ID,TARBALL是发行文件名。</target>
        </trans-unit>
        <trans-unit id="cc94fc30ba3cc2fa0b9159254cd41d822eea8bb0" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an opset. Can be handy for debugging.</source>
          <target state="translated">返回一个OPSET的字符串表示。可以方便地进行调试。</target>
        </trans-unit>
        <trans-unit id="1bec116d350d2b93509b7d9dc1bcced2de27bdd3" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory.</source>
          <target state="translated">返回当前目录的字符串表示。</target>
        </trans-unit>
        <trans-unit id="4a8af8e750f17ce4e2d96c8eaead548542b60e80" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory. &quot;.&quot; on UNIX.</source>
          <target state="translated">返回当前目录的字符串表示。UNIX上的&quot;.&quot;。</target>
        </trans-unit>
        <trans-unit id="77ef3a54abf0fabd7e61dc2cecc7ad7f2abc6542" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory: '[]' or '.'</source>
          <target state="translated">返回当前目录的字符串表示:'[]'或'.'。</target>
        </trans-unit>
        <trans-unit id="5277680674388d3bbc7e326522c1cd4452d83dec" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first existing directory from the following list:</source>
          <target state="translated">从以下列表中返回第一个现有目录的字符串表示。</target>
        </trans-unit>
        <trans-unit id="c9b336aabb976a50f79ee5dec6a32ed8fad8410c" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from a list of possible temporary directories. Returns the current directory if no writable temporary directories are found. The list of directories checked depends on the platform; e.g. File::Spec::Unix checks &lt;code&gt;$ENV{TMPDIR}&lt;/code&gt; (unless taint is on) and</source>
          <target state="translated">从可能的临时目录列表中返回第一个可写目录的字符串表示形式。如果找不到可写的临时目录，则返回当前目录。检查的目录列表取决于平台。例如File :: Spec :: Unix检查 &lt;code&gt;$ENV{TMPDIR}&lt;/code&gt; （除非打开污点），然后</target>
        </trans-unit>
        <trans-unit id="e32b0e0de234365f5abe153e4d7566e0b5a04ddf" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from the following list or '' if none are writable:</source>
          <target state="translated">返回下面列表中第一个可写目录的字符串,如果没有可写目录,则返回''。</target>
        </trans-unit>
        <trans-unit id="a0d3d842c919e5a866092e0bb6deec566293781b" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from the following list or the current directory if none from the list are writable:</source>
          <target state="translated">返回下面列表中第一个可写目录的字符串表示,如果列表中没有可写目录,则返回当前目录。</target>
        </trans-unit>
        <trans-unit id="eb5e90c022aa5537ad6eb0eff65c63bb424facef" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device.</source>
          <target state="translated">返回空设备的字符串表示。</target>
        </trans-unit>
        <trans-unit id="33f1afa9f4dc60ddad5ffcb246aaf7b3a56833f3" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device. &quot;/dev/null&quot; on UNIX.</source>
          <target state="translated">返回空设备的字符串表示。UNIX上的&quot;/dev/null&quot;。</target>
        </trans-unit>
        <trans-unit id="a2aaef582976802d1a3c444daa581310d3ea08bc" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device: '_NLA0:' or '/dev/null'</source>
          <target state="translated">返回空设备的字符串表示:'_NLA0:'或'/dev/null'。</target>
        </trans-unit>
        <trans-unit id="005100788ced89709018dbe6806e675a340ecd90" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory.</source>
          <target state="translated">返回父目录的字符串表示。</target>
        </trans-unit>
        <trans-unit id="05c5bf0bf7df385d9aec918eb3fbeb645de31d72" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory. &quot;..&quot; on UNIX.</source>
          <target state="translated">返回父目录的字符串表示。UNIX上的&quot;...&quot;。</target>
        </trans-unit>
        <trans-unit id="ff31bc8d25cb56e6a34f4a31b112abed632e6889" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory: '[-]' or '..'</source>
          <target state="translated">返回父目录的字符串表示:'[-]'或'.'。</target>
        </trans-unit>
        <trans-unit id="e638c79ff93a1833c5c089a4ded7d303efed4d93" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory.</source>
          <target state="translated">返回根目录的字符串表示。</target>
        </trans-unit>
        <trans-unit id="71cf646201c54c8e89f9b5a5e934830f492097b1" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory. &quot;/&quot; on UNIX.</source>
          <target state="translated">返回根目录的字符串表示。UNIX上的&quot;/&quot;。</target>
        </trans-unit>
        <trans-unit id="cdc12f555b17b9044345b3ba73fb28e2292eddf7" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory: 'SYS$DISK:[000000]' or '/'</source>
          <target state="translated">返回根目录的字符串表示:'SYS$DISK:[000000]'或'/'。</target>
        </trans-unit>
        <trans-unit id="44ee308f6fe49527fc16e579aa24022a99372f36" translate="yes" xml:space="preserve">
          <source>Returns a string representing the current directory. On Mac OS, this is &quot;:&quot;.</source>
          <target state="translated">返回一个代表当前目录的字符串。在Mac OS上,这个字符串是&quot;:&quot;。</target>
        </trans-unit>
        <trans-unit id="1a64c5e445305e29235836bd694f435ebe2a0684" translate="yes" xml:space="preserve">
          <source>Returns a string representing the null device. On Mac OS, this is &quot;Dev:Null&quot;.</source>
          <target state="translated">返回一个代表空设备的字符串。在Mac OS上,是 &quot;Dev:Null&quot;。</target>
        </trans-unit>
        <trans-unit id="0d4b7d54d23fa0e585938662d91a48d86580ab9f" translate="yes" xml:space="preserve">
          <source>Returns a string representing the parent directory. On Mac OS, this is &quot;::&quot;.</source>
          <target state="translated">返回一个代表父目录的字符串。在Mac OS上,这个字符串是&quot;::&quot;。</target>
        </trans-unit>
        <trans-unit id="2bff7ec48659fcec317a6b6e70b50492af0c8f85" translate="yes" xml:space="preserve">
          <source>Returns a string representing the root directory. Under MacPerl, returns the name of the startup volume, since that's the closest in concept, although other volumes aren't rooted there. The name has a trailing &quot;:&quot;, because that's the correct specification for a volume name on Mac OS.</source>
          <target state="translated">返回一个代表根目录的字符串。在MacPerl下,返回启动卷的名称,因为这是最接近的概念,尽管其他卷并不是根目录。这个名字后面有一个&quot;:&quot;,因为这是Mac OS上卷名的正确规范。</target>
        </trans-unit>
        <trans-unit id="00e87eac1f6ad85a2ee1d885214ba3f53277c229" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/ but recursively.</source>
          <target state="translated">返回一个适合送入shell的字符串,以递归方式返回t/中的所有测试。</target>
        </trans-unit>
        <trans-unit id="092043d7a17cb71b26b87e7562f8a3995f950284" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/*.t.</source>
          <target state="translated">返回一个适合送入shell的字符串,以返回t/*.t中的所有测试。</target>
        </trans-unit>
        <trans-unit id="2e967e6e702a424e04f475bad8bee81c8f3ad6ad" translate="yes" xml:space="preserve">
          <source>Returns a string that formats the times in the TIMEDIFF object in the requested STYLE. TIMEDIFF is expected to be a Benchmark object similar to that returned by timediff().</source>
          <target state="translated">返回一个字符串,它能按要求的STYLE格式化TIMEDIFF对象中的时间。TIMEDIFF应该是一个类似于timediff()返回的Benchmark对象。</target>
        </trans-unit>
        <trans-unit id="e800e87b67cf4d6c01edd7f39567b25c80db69ed" translate="yes" xml:space="preserve">
          <source>Returns a textual summary of the major perl configuration values. See also &lt;code&gt;-V&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;.</source>
          <target state="translated">返回主要perl配置值的文本摘要。又见 &lt;code&gt;-V&lt;/code&gt; 在&lt;a href=&quot;perlrun#Command-Switches&quot;&gt;司令部perlrun开关&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7abcb8c5e1de71f1807726c3777d9b9ac4bdd0e" translate="yes" xml:space="preserve">
          <source>Returns a true SV if &lt;code&gt;b&lt;/code&gt; is a true value, or a false SV if &lt;code&gt;b&lt;/code&gt; is 0.</source>
          <target state="translated">如果 &lt;code&gt;b&lt;/code&gt; 为真值，则返回true SV；如果 &lt;code&gt;b&lt;/code&gt; 为0 ，则返回false SV 。</target>
        </trans-unit>
        <trans-unit id="ea7fb5743497b30a6117618897c9900ddf57838e" translate="yes" xml:space="preserve">
          <source>Returns a true or false value indicating, respectively, that alphabetic case is not or is significant when comparing file specifications. Cygwin and Win32 accept an optional drive argument.</source>
          <target state="translated">返回一个true或false的值,分别表示在比较文件规格时,字母大小写不重要或重要。Cygwin和Win32接受一个可选的驱动参数。</target>
        </trans-unit>
        <trans-unit id="92b487d1ec1629983e5ce689a6c3fafc42be7c41" translate="yes" xml:space="preserve">
          <source>Returns a true or false value indicating, respectively, that alphabetic is not or is significant when comparing file specifications.</source>
          <target state="translated">返回一个真值或假值,分别表示在比较文件规格时,字母不重要或重要。</target>
        </trans-unit>
        <trans-unit id="8791a42bfa4b523a31b985722c6744f37061fdd2" translate="yes" xml:space="preserve">
          <source>Returns a true value (actually the handle itself) if it is present. Returns undef otherwise.</source>
          <target state="translated">如果存在的话,返回一个真值(实际上是句柄本身)。否则返回undef。</target>
        </trans-unit>
        <trans-unit id="20719096c98ac0e20c43dc76fae3420cbccf672f" translate="yes" xml:space="preserve">
          <source>Returns a true value (actually the reason for skipping) if all tests were skipped.</source>
          <target state="translated">如果所有测试都被跳过,则返回一个真值(实际上是跳过的原因)。</target>
        </trans-unit>
        <trans-unit id="04d8db8e32e1e3c49b45953a18f7b66147b5a83b" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is one, and false value otherwise.</source>
          <target state="translated">如果OBJ是一个,则返回真值,否则返回假值。</target>
        </trans-unit>
        <trans-unit id="8ec5b6381f66afb74a4518ac2e2c84eb526cad42" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is ten, and false value otherwise.</source>
          <target state="translated">如果OBJ是十,则返回真值,否则返回假值。</target>
        </trans-unit>
        <trans-unit id="d5f61405c16fae034f5cc703d65aad9549ecde6e" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is two, and false value otherwise.</source>
          <target state="translated">如果OBJ是两个,则返回真值,否则返回假值。</target>
        </trans-unit>
        <trans-unit id="80c27ca3c0799f492bab53b404c5a9484fdd10b9" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is zero, and false value otherwise.</source>
          <target state="translated">如果OBJ为零,则返回真值,否则返回假值。</target>
        </trans-unit>
        <trans-unit id="ced1f839258a2135af524614fee25eec1fb32c29" translate="yes" xml:space="preserve">
          <source>Returns a true value if the given handle has experienced any errors since it was opened or since the last call to &lt;code&gt;clearerr&lt;/code&gt; , or if the handle is invalid. It only returns false for a valid handle with no outstanding errors.</source>
          <target state="translated">如果给定的句柄自打开以来或上次调用 &lt;code&gt;clearerr&lt;/code&gt; 以来遇到任何错误，或者句柄无效，则返回true 。对于有效句柄，它仅返回false，而没有未解决的错误。</target>
        </trans-unit>
        <trans-unit id="54ca7839e001f459a05bf2c8707fcbddda9f126b" translate="yes" xml:space="preserve">
          <source>Returns a unique identifier for &lt;code&gt;MSGNUM&lt;/code&gt; if given. If &lt;code&gt;MSGNUM&lt;/code&gt; is not given &lt;code&gt;uidl&lt;/code&gt; returns a reference to a hash where the keys are the message numbers and the values are the unique identifiers.</source>
          <target state="translated">如果给定，则返回 &lt;code&gt;MSGNUM&lt;/code&gt; 的唯一标识符。如果 &lt;code&gt;MSGNUM&lt;/code&gt; 没有给出 &lt;code&gt;uidl&lt;/code&gt; 返回到散列的引用，其中键是消息号和值是唯一的标识符。</target>
        </trans-unit>
        <trans-unit id="5438a38240e1e5d392fba7bf5e299554e4f73a8c" translate="yes" xml:space="preserve">
          <source>Returns a valid temporary filename but does not guarantee that the file will not be opened by someone else.</source>
          <target state="translated">返回一个有效的临时文件名,但不保证该文件不会被其他人打开。</target>
        </trans-unit>
        <trans-unit id="b70f4bda16a1627b2b96c62bb159cf833ff73717" translate="yes" xml:space="preserve">
          <source>Returns a value of true if the given section and subsection heading titles match any of the currently selected section specifications in effect from prior calls to &lt;b&gt;select()&lt;/b&gt; and &lt;b&gt;add_selection()&lt;/b&gt; (or if there are no explicitly selected/deselected sections).</source>
          <target state="translated">如果给定的节和小节标题标题与从对&lt;b&gt;select（）&lt;/b&gt;和&lt;b&gt;add_selection（）的&lt;/b&gt;先前调用中生效的任何当前选择的节规范匹配（或者如果没有显式选择/取消选择的节），则返回true值。</target>
        </trans-unit>
        <trans-unit id="13c1b3be29349e8d12e061fe92c283d88a109f76" translate="yes" xml:space="preserve">
          <source>Returns actual bytes read, or -1 on an error.</source>
          <target state="translated">返回实际读取的字节数,如果出现错误则返回-1。</target>
        </trans-unit>
        <trans-unit id="c5bebf2996eece42414681984794ddac354b2cac" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::AnyInflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$AnyInflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::AnyInflate&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$AnyInflateError&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="a19b4f3d224c77b8b1cadfec1f4f42c3d8e98cb0" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::AnyUncompress&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$AnyUncompressError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::AnyUncompress&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$AnyUncompressError&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="5a45155b042a961eb0e7ee9a823ec478e805af25" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Bunzip2&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$Bunzip2Error&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::Bunzip2&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$Bunzip2Error&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="cb53d2a7e32eb184e834ea53668850307f4b3189" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$GunzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$GunzipError&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="f60796904c77b8633be7386d5c88b1256b566349" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Inflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$InflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::Inflate&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$InflateError&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="2f2a104a44992f3fb1f0ed5f97b388dc95e082ce" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$RawInflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$RawInflateError&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="0e95a721c52415064dadcbe635db82471a03534f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$UnzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功时返回 &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; 对象，失败时返回undef。变量 &lt;code&gt;$UnzipError&lt;/code&gt; 将包含有关失败的错误消息。</target>
        </trans-unit>
        <trans-unit id="f3f1c9bb441902a5fdf35a5803a9f97377d4402e" translate="yes" xml:space="preserve">
          <source>Returns an SV containing the name of the CV, mainly for use in error reporting. The CV may actually be a GV instead, in which case the returned SV holds the GV's name. Anything other than a GV or CV is treated as a string already holding the sub name, but this could change in the future.</source>
          <target state="translated">返回一个包含CV名称的SV,主要用于错误报告。CV实际上可能是一个GV,在这种情况下,返回的SV包含GV的名称。除了GV或CV之外的任何东西都会被视为一个已经持有子名称的字符串,但这在将来可能会改变。</target>
        </trans-unit>
        <trans-unit id="c17e6ded81e77cc3c4ed51e5c6e6e24ad493fca6" translate="yes" xml:space="preserve">
          <source>Returns an array of [mnt_dir, mnt_fsname, mnt_type, mnt_opts].</source>
          <target state="translated">返回一个[mnt_dir,mnt_fsname,mnt_type,mnt_opts]的数组。</target>
        </trans-unit>
        <trans-unit id="7eda9f2373bf66e043e40f6b34f45328c22ad0f1" translate="yes" xml:space="preserve">
          <source>Returns an arrayref which is the linearized MRO of the given class. Uses whichever MRO is currently in effect for that class by default, or the given MRO (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; if specified as &lt;code&gt;$type&lt;/code&gt; ).</source>
          <target state="translated">返回一个arrayref，它是给定类的线性化MRO。默认情况下，使用该类当前有效的MRO或给定的MRO（如果指定为 &lt;code&gt;$type&lt;/code&gt; 则使用 &lt;code&gt;c3&lt;/code&gt; 或 &lt;code&gt;dfs&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="86d93bd99672ee0d9f28bac4810f2e0a9f858ce0" translate="yes" xml:space="preserve">
          <source>Returns an empty string per default. Dedicated to overrides from within Makefile.PL after all constants have been defined.</source>
          <target state="translated">返回一个默认的空字符串。专门用于在定义了所有常量后,在Makefile.PL中进行覆盖。</target>
        </trans-unit>
        <trans-unit id="27565014fb4428ecce4834fb83146562b2298d8a" translate="yes" xml:space="preserve">
          <source>Returns an empty string per default. Used in Makefile.PLs to add some chunk of text to the Makefile after the object is initialized.</source>
          <target state="translated">返回一个默认的空字符串。在Makefile.PLs中用于在对象初始化后向Makefile中添加一些文本块。</target>
        </trans-unit>
        <trans-unit id="773ece94435dc9a0d9fb8f6598bb9ba0974097c7" translate="yes" xml:space="preserve">
          <source>Returns an empty string. Can be used in Makefile.PLs to write some text to the Makefile at the end.</source>
          <target state="translated">返回一个空字符串。可以在Makefile.PLs中使用,在Makefile的最后写入一些文本。</target>
        </trans-unit>
        <trans-unit id="0ba0e2b37cdb54b95bc084239f7a13f38cd0d1a3" translate="yes" xml:space="preserve">
          <source>Returns an even-sized list of those pairs for which the &lt;code&gt;BLOCK&lt;/code&gt; returned true in list context, or the count of the &lt;b&gt;number of pairs&lt;/b&gt; in scalar context. (Note, therefore, in scalar context that it returns a number half the size of the count of items it would have returned in list context).</source>
          <target state="translated">返回为其那些对偶数大小的列表 &lt;code&gt;BLOCK&lt;/code&gt; 在列表环境，或的计数返回真正的&lt;b&gt;对数&lt;/b&gt;标量环境。（因此，请注意，在标量上下文中，它返回的数量是在列表上下文中应返回的项目数的一半）。</target>
        </trans-unit>
        <trans-unit id="4a803084a92423f9bbdc2214f1af73fd1a3aa7f5" translate="yes" xml:space="preserve">
          <source>Returns an individual &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; instance for the given test name (usually the filename). Will return a new &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; instance if the name is not found.</source>
          <target state="translated">返回给定测试名称（通常是文件名）的单个 &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; 实例。如果找不到名称，将返回一个新的 &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="62b15d972fb903972214f5d70085ccda39e072a3" translate="yes" xml:space="preserve">
          <source>Returns an instance the appropriate class for the test token passed in.</source>
          <target state="translated">返回传入的测试令牌的相应类的实例。</target>
        </trans-unit>
        <trans-unit id="9d40f5ac8dac983ee95dd7bfc8356adb764626cf" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the degree of similarity between tags $lang1 and $lang2 (the order of which does not matter), where similarity is the number of common elements on the left, without regard to case and to x/i- alternation.</source>
          <target state="translated">返回一个整数,表示标签 $lang1 和 $lang2 之间的相似度(顺序不重要),其中相似度是左边共同元素的数量,不考虑大小写和 x/i-交替。</target>
        </trans-unit>
        <trans-unit id="e8a66ed5f3634ee37b47145a41066925578dc94a" translate="yes" xml:space="preserve">
          <source>Returns an integer which is incremented every time a real local method in the package &lt;code&gt;$classname&lt;/code&gt; changes, or the local &lt;code&gt;@ISA&lt;/code&gt; of &lt;code&gt;$classname&lt;/code&gt; is modified.</source>
          <target state="translated">返回一个整数，该整数在每次 &lt;code&gt;$classname&lt;/code&gt; 包中的实际本地方法更改或修改 &lt;code&gt;$classname&lt;/code&gt; 的本地 &lt;code&gt;@ISA&lt;/code&gt; 时递增。</target>
        </trans-unit>
        <trans-unit id="b574803c8b1e2181ec8e414eb3fa6557fcc86585" translate="yes" xml:space="preserve">
          <source>Returns an item from the queue without dequeuing anything. Defaults to the the head of queue (at index position 0) if no index is specified. Negative index values are supported as with &lt;a href=&quot;../perldata#Subscripts&quot;&gt;arrays&lt;/a&gt; (i.e., -1 is the end of the queue, -2 is next to last, and so on).</source>
          <target state="translated">从队列中返回一个项目而不会使任何内容出队。如果未指定索引，则默认为队列的开头（在索引位置0）。&lt;a href=&quot;../perldata#Subscripts&quot;&gt;数组&lt;/a&gt;支持负索引值（即-1是队列的末尾，-2是倒数第二个，依此类推）。</target>
        </trans-unit>
        <trans-unit id="6dd440f57a2a22171f9e14b2f8c43dc77aa1267f" translate="yes" xml:space="preserve">
          <source>Returns an iterator function that reads the tar file without loading it all in memory. Each time the function is called it will return the next file in the tarball. The files are returned as &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects. The iterator function returns the empty list once it has exhausted the files contained.</source>
          <target state="translated">返回一个迭代器函数，该函数读取tar文件而不将其全部加载到内存中。每次调用该函数时，它将返回压缩包中的下一个文件。文件以 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 对象的形式返回。一旦迭代器函数用尽了包含的文件，它就会返回空列表。</target>
        </trans-unit>
        <trans-unit id="39c744632042ee1d8ff098a788f88d056a97923b" translate="yes" xml:space="preserve">
          <source>Returns an list of test names, sorted by run order.</source>
          <target state="translated">返回按运行顺序排列的测试名称列表。</target>
        </trans-unit>
        <trans-unit id="0f0122de4d083040e8479ad25e16684d7f9b4840" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Msg::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="translated">返回 &lt;code&gt;IPC::Msg::stat&lt;/code&gt; 类型的对象，该对象是 &lt;code&gt;Class::Struct&lt;/code&gt; 的子类。它提供以下字段。有关这些字段的说明，请参见系统文档。</target>
        </trans-unit>
        <trans-unit id="ee587d40ecd5f70474f52815a34281ab59e7c9b0" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see your system documentation.</source>
          <target state="translated">返回 &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; 类型的对象，该对象是 &lt;code&gt;Class::Struct&lt;/code&gt; 的子类。它提供以下字段。有关这些字段的说明，请参见系统文档。</target>
        </trans-unit>
        <trans-unit id="0c6426cd8a7b7a9e8b6b5d780cbcd8174773b30f" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="translated">返回 &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; 类型的对象，该对象是 &lt;code&gt;Class::Struct&lt;/code&gt; 的子类。它提供以下字段。有关这些字段的说明，请参见系统文档。</target>
        </trans-unit>
        <trans-unit id="f610efd81b9b632576d1d7f64e5eb973c2277760" translate="yes" xml:space="preserve">
          <source>Returns an opaque value that represents the current position of the IO::File, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if this is not possible (eg an unseekable stream such as a terminal, pipe or socket). If the fgetpos() function is available in your C library it is used to implements getpos, else perl emulates getpos using C's ftell() function.</source>
          <target state="translated">返回表示IO :: File当前位置的不透明值；如果不可能，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; （例如，无法寻找的流，例如端子，管道或插座）。如果C库中提供了fgetpos（）函数，则该函数可用于实现getpos，否则perl将使用C的ftell（）函数来模拟getpos。</target>
        </trans-unit>
        <trans-unit id="f0b7cc80eace1c559eddbadf188c99ddc969aadd" translate="yes" xml:space="preserve">
          <source>Returns an opset containing the listed operators.</source>
          <target state="translated">返回包含所列操作符的操作集。</target>
        </trans-unit>
        <trans-unit id="d5e92487638153e66141842a1ae28226a70e43f8" translate="yes" xml:space="preserve">
          <source>Returns an opset corresponding to the current opmask.</source>
          <target state="translated">返回与当前opmask对应的OPSET。</target>
        </trans-unit>
        <trans-unit id="f44f54f1b9d5a2c5d0e8a49b190b93d6ca8183c2" translate="yes" xml:space="preserve">
          <source>Returns an opset which contains no operators.</source>
          <target state="translated">返回一个不包含运算符的操作集。</target>
        </trans-unit>
        <trans-unit id="141fbbd5c09415bd719ab00ae84cd140a623e4ab" translate="yes" xml:space="preserve">
          <source>Returns an opset which includes all operators.</source>
          <target state="translated">返回一个包含所有操作符的操作集。</target>
        </trans-unit>
        <trans-unit id="d8bca58ba2ee164f6d95554d0baaa25d9c405d7d" translate="yes" xml:space="preserve">
          <source>Returns an opset which is the inverse set of the one supplied.</source>
          <target state="translated">返回所提供的OPSET的反集。</target>
        </trans-unit>
        <trans-unit id="ac21ef9acae8108ad6f7a5d0d937be30579ecf48" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;#ucfirst&quot;&gt;ucfirst&lt;/a&gt; for that.</source>
          <target state="translated">返回EXPR的大写版本。这是在双引号字符串中实现 &lt;code&gt;\U&lt;/code&gt; 转义的内部函数。它不会尝试对首字母进行标题大小写映射。参见&lt;a href=&quot;#ucfirst&quot;&gt;ucfirst&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69dc9227494ca43d3cfc46778c8ffc1bef79303d" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;ucfirst&quot;&gt;ucfirst&lt;/a&gt; for that.</source>
          <target state="translated">返回EXPR的大写版本。这是在双引号字符串中实现 &lt;code&gt;\U&lt;/code&gt; 转义的内部函数。它不会尝试对首字母进行标题大小写映射。参见&lt;a href=&quot;ucfirst&quot;&gt;ucfirst&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f695d908b8bad70e0a01dfa2bc75e5b4c3484347" translate="yes" xml:space="preserve">
          <source>Returns bytes written or -1 on an error.</source>
          <target state="translated">错误时返回写入的字节数或-1。</target>
        </trans-unit>
        <trans-unit id="e7402bb1f542294caec1afa2185b988aa0eefb95" translate="yes" xml:space="preserve">
          <source>Returns change in number of windows. If &lt;code&gt;cnt&lt;/code&gt; is given, it is incremented by the number of messages retrieved.</source>
          <target state="translated">返回窗口数的变化。如果给定了 &lt;code&gt;cnt&lt;/code&gt; ，则将其增加检索到的消息数。</target>
        </trans-unit>
        <trans-unit id="baab0a40047a0b9b96def6bef441cce306d32f8a" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;TODO&lt;/code&gt; or &lt;code&gt;SKIP&lt;/code&gt; if either directive was present for a test line.</source>
          <target state="translated">如果测试线中存在指令，则返回 &lt;code&gt;TODO&lt;/code&gt; 或 &lt;code&gt;SKIP&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f47cc43f85a4d7cd2e2f444b1c97cbb38eed65d0" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">从哈希迭代器返回条目。参见 &lt;code&gt;hv_iterinit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5389685ef7d9db4f13e68bc30c7a8fe6f00cdee" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; and &lt;code&gt;hv_iternext&lt;/code&gt; . The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if HV_ITERNEXT_WANTPLACEHOLDERS is set the placeholders keys (for restricted hashes) will be returned in addition to normal keys. By default placeholders are automatically skipped over. Currently a placeholder is implemented with a value that is &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; . Note that the implementation of placeholders and restricted hashes may change, and the implementation currently is insufficiently abstracted for any change to be tidy.</source>
          <target state="translated">从哈希迭代器返回条目。请参阅 &lt;code&gt;hv_iterinit&lt;/code&gt; 和 &lt;code&gt;hv_iternext&lt;/code&gt; 。该 &lt;code&gt;flags&lt;/code&gt; 的值通常是零; 如果设置了HV_ITERNEXT_WANTPLACEHOLDERS，则除了普通密钥外，还将返回占位符密钥（用于受限哈希）。默认情况下，占位符会自动跳过。当前，占位符的实现值为 &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; 。请注意，占位符和受限哈希的实现可能会更改，并且当前对实现的抽象程度不足，无法使任何更改保持整洁。</target>
        </trans-unit>
        <trans-unit id="a93a739a1304b696a52b85e019108732f6bf7466" translate="yes" xml:space="preserve">
          <source>Returns false if the stat information differs or if the link count is greater than 1. Calls croak if there is a security anomaly.</source>
          <target state="translated">如果统计信息不同或链接数大于1,则返回false。 如果存在安全异常,则调用croak。</target>
        </trans-unit>
        <trans-unit id="b4d48cb7dd85d6422a4c733c21b385a4179efc4f" translate="yes" xml:space="preserve">
          <source>Returns false indicating that this is a real job rather than a 'spinner'. Spinners are returned when the scheduler still has pending jobs but can't (because of locking) return one right now.</source>
          <target state="translated">返回false,表示这是一个真实的作业,而不是一个 &quot;spinner&quot;。当调度器仍然有待处理的作业,但由于锁定的原因,现在不能返回一个作业时,就会返回Spinners。</target>
        </trans-unit>
        <trans-unit id="3f0f4a98ea06f65844fba9a641a25e67bf7f4c86" translate="yes" xml:space="preserve">
          <source>Returns false on error but croaks() if there is a security anomaly. The filehandle is not closed since on some occasions this is not required.</source>
          <target state="translated">错误时返回false,但如果存在安全异常,则返回croaks()。因为在某些情况下不需要关闭文件柄。</target>
        </trans-unit>
        <trans-unit id="1ab1400bb9572c4afc6a8ca43144492eb8661975" translate="yes" xml:space="preserve">
          <source>Returns false on failure.</source>
          <target state="translated">失败时返回false。</target>
        </trans-unit>
        <trans-unit id="217e2367fb9a2d3efa5b2f3790dc77b76b206625" translate="yes" xml:space="preserve">
          <source>Returns false, so as to preserve failure.</source>
          <target state="translated">返回false,以便保存失败。</target>
        </trans-unit>
        <trans-unit id="714c47847df2df4e45121d2349ab99ae2dc08615" translate="yes" xml:space="preserve">
          <source>Returns false. Why? Because &lt;code&gt;diag()&lt;/code&gt; is often used in conjunction with a failing test (&lt;code&gt;ok() || diag()&lt;/code&gt; ) it &quot;passes through&quot; the failure.</source>
          <target state="translated">返回false。为什么？因为 &lt;code&gt;diag()&lt;/code&gt; 通常与失败的测试（ &lt;code&gt;ok() || diag()&lt;/code&gt; ）结合使用，所以它&amp;ldquo;通过&amp;rdquo;失败。</target>
        </trans-unit>
        <trans-unit id="30c4aa79e37f4a57ccbcca748998eea1fd22c8c2" translate="yes" xml:space="preserve">
          <source>Returns file position. Optional. Default to be determined.</source>
          <target state="translated">返回文件位置。可选。默认值待定。</target>
        </trans-unit>
        <trans-unit id="51714bf33b11ba0200086c21d32b54c81a3c8c9e" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="translated">从子例程 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 或以EXPR中给出的值 &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; 返回。根据返回值的使用方式，可以在列表，标量或空上下文中评估EXPR，并且该上下文可能在一次执行与下一次执行之间有所不同（请参阅&lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt;）。如果未给出EXPR，则在列表上下文中返回一个空列表，在标量上下文中返回未定义的值，在void上下文中（当然）完全不返回任何值。</target>
        </trans-unit>
        <trans-unit id="3a72d1db8163081b6b30ed57914c55833f693f8b" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="translated">从子例程 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 或以EXPR中给出的值 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; 返回。根据返回值的使用方式，可以在列表，标量或空上下文中评估EXPR，并且该上下文可能在一次执行与下一次执行之间有所不同（请参阅&lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt;）。如果未给出EXPR，则在列表上下文中返回一个空列表，在标量上下文中返回未定义的值，在void上下文中（当然）完全不返回任何值。</target>
        </trans-unit>
        <trans-unit id="25cf97237f94a7f054c5b5f76f4761c9bfa22841" translate="yes" xml:space="preserve">
          <source>Returns just the filehandle alone when called in scalar context.</source>
          <target state="translated">当在标量上下文中调用时,仅返回filehandle。</target>
        </trans-unit>
        <trans-unit id="063c2bf6755f0dfe78c195f6e64814029ac9b16f" translate="yes" xml:space="preserve">
          <source>Returns list of extra arguments to give to the link command; the arguments are the same as for prelink(), with addition of array reference to the results of prelink(); this reference is indexed by key &lt;code&gt;prelink_res&lt;/code&gt; .</source>
          <target state="translated">返回要提供给链接命令的其他参数的列表；参数与prelink（）相同，只是对prelink（）的结果添加了数组引用；该引用由键 &lt;code&gt;prelink_res&lt;/code&gt; 索引。</target>
        </trans-unit>
        <trans-unit id="934af1d2fdc455f3125756e9f6d5752f62bc6852" translate="yes" xml:space="preserve">
          <source>Returns most significant digit of the response code.</source>
          <target state="translated">返回响应代码中最重要的数字。</target>
        </trans-unit>
        <trans-unit id="a4cbf33d163802b79fa05ca3b5b2b59d30228089" translate="yes" xml:space="preserve">
          <source>Returns non-zero if the last code value was greater than zero and less than 400. This holds true for most command servers. Servers where this does not hold may override this method.</source>
          <target state="translated">如果最后的代码值大于零且小于400,则返回非零。这对大多数命令服务器都适用。对于不适用的服务器,可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="d3b8a42be1eb6c0144ee87cd3bf27d0b57fd222a" translate="yes" xml:space="preserve">
          <source>Returns not-a-number [C99].</source>
          <target state="translated">Returns not-a-number [C99].</target>
        </trans-unit>
        <trans-unit id="4487051efaa96f640a93948c10b0ceb316d405f7" translate="yes" xml:space="preserve">
          <source>Returns nothing.</source>
          <target state="translated">不返回任何东西。</target>
        </trans-unit>
        <trans-unit id="d87a2fd152dcd6ba09ab9c19b3519254c4ff232e" translate="yes" xml:space="preserve">
          <source>Returns one character from STDIN. Identical to Perl's &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">从STDIN返回一个字符。与Perl的 &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; 相同，请参见&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2375116b6abafc2c2c6df8319b3cfdd2f7f853d" translate="yes" xml:space="preserve">
          <source>Returns one line from &lt;code&gt;STDIN&lt;/code&gt; , similar to &amp;lt;&amp;gt;, also known as the &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;.</source>
          <target state="translated">从 &lt;code&gt;STDIN&lt;/code&gt; 返回一行，类似于&amp;lt;&amp;gt;，也称为 &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; 函数，请参见&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9dddf180784dc0cd16ce28c5081452103da6dbf4" translate="yes" xml:space="preserve">
          <source>Returns one of</source>
          <target state="translated">返回其中一个</target>
        </trans-unit>
        <trans-unit id="749c2334f29b2b96a440124d9ec5143c2f80d479" translate="yes" xml:space="preserve">
          <source>Returns the</source>
          <target state="translated">返回</target>
        </trans-unit>
        <trans-unit id="557330f645f04cff83abddfdc4f9adc9c3332136" translate="yes" xml:space="preserve">
          <source>Returns the &quot;type&quot; of a token, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; .</source>
          <target state="translated">返回令牌的&amp;ldquo;类型&amp;rdquo;，例如 &lt;code&gt;comment&lt;/code&gt; 或 &lt;code&gt;test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3092cfd1a43c21ebf72be5f6bdb5aec039845045" translate="yes" xml:space="preserve">
          <source>Returns the 'dist' target to make an archive for distribution. This target simply checks to make sure the Makefile is up-to-date and depends on $(DIST_DEFAULT).</source>
          <target state="translated">返回'dist'目标来制作一个用于分发的存档。这个目标只是简单地检查Makefile是否是最新的,并且依赖于$(DIST_DEFAULT)。</target>
        </trans-unit>
        <trans-unit id="644c63c246c363e1c2b2762a7fb9132830ec3365" translate="yes" xml:space="preserve">
          <source>Returns the 'tardist' target which is simply so 'make tardist' works. The real work is done by the dynamically named tardistfile_target() method, tardist should have that as a dependency.</source>
          <target state="translated">返回'tardist'目标,它只是简单地让'make tardist'工作。真正的工作是由动态命名的 tardistfile_target()方法完成的,tardist 应该有它作为依赖。</target>
        </trans-unit>
        <trans-unit id="c6bda7de8b1dbb955384b2e58142215b10c59cff" translate="yes" xml:space="preserve">
          <source>Returns the 'zipdist' target which is simply so 'make zipdist' works. The real work is done by the dynamically named zipdistfile_target() method, zipdist should have that as a dependency.</source>
          <target state="translated">返回'zipdist'目标,它只是简单地让'make zipdist'工作。真正的工作是由动态命名的zipdistfile_target()方法完成的,zipdist应该把它作为一个依赖项。</target>
        </trans-unit>
        <trans-unit id="c0e8982ee783013779d97c7331f00522da1ee66a" translate="yes" xml:space="preserve">
          <source>Returns the 3-digit code from the last command. If a command is pending then the value 0 is returned. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&lt;/a&gt; below.)</source>
          <target state="translated">返回最后一个命令的3位代码。如果命令待处理，则返回值0。（请参阅下面的&amp;ldquo; &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="bf1c168a1ebb8df5eb2d122e19cd7bd0e00bcf56" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; object underlying Test::More for you to play with.</source>
          <target state="translated">返回Test :: More基础的&lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt;对象供您使用。</target>
        </trans-unit>
        <trans-unit id="f5507e12b916a918138b845b088ea21dff7ff3ee" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; object that was just added, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">返回刚刚添加的 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 对象，否则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e7afd4cf126138fccad1f937301ab4ad085f958" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects matching the filenames provided. If no filename list was passed, all &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects in the current Tar object are returned.</source>
          <target state="translated">返回与提供的文件名匹配的 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 对象。如果没有传递文件名列表，则返回当前Tar对象中的所有 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="986fa720e3d09a3735810c3a21de46891f4828d6" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing BEGIN blocks.</source>
          <target state="translated">返回代表BEGIN块的AV对象(即在B::AV类中)。</target>
        </trans-unit>
        <trans-unit id="a61d7ca2ff81836b68b4bd6b0696a28d3c795627" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing CHECK blocks.</source>
          <target state="translated">返回代表CHECK块的AV对象(即在B::AV类中)。</target>
        </trans-unit>
        <trans-unit id="84ebbf61627560d00156045e65f11744afbbda08" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing END blocks.</source>
          <target state="translated">返回代表END块的AV对象(即在B::AV类中)。</target>
        </trans-unit>
        <trans-unit id="9c7140959c4fee8329410b704f68b2e8bb6de30b" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing INIT blocks.</source>
          <target state="translated">返回代表INIT块的AV对象(即在B::AV类中)。</target>
        </trans-unit>
        <trans-unit id="4c7726b64a07afedf3cadbf758c4a94739a0b5c1" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing UNITCHECK blocks.</source>
          <target state="translated">返回代表UNITCHECK块的AV对象(即在B::AV类中)。</target>
        </trans-unit>
        <trans-unit id="f7a1ec841b04ed28cca7d060727c954136ed545f" translate="yes" xml:space="preserve">
          <source>Returns the AV of the specified Perl global or package array with the given name (so it won't work on lexical variables). &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">返回具有给定名称的指定Perl全局或包数组的AV（因此它不适用于词法变量）。 &lt;code&gt;flags&lt;/code&gt; 被传递给 &lt;code&gt;gv_fetchpv&lt;/code&gt; 。如果设置了 &lt;code&gt;GV_ADD&lt;/code&gt; 并且Perl变量不存在，则将创建它。如果 &lt;code&gt;flags&lt;/code&gt; 为零，并且变量不存在，则返回NULL。</target>
        </trans-unit>
        <trans-unit id="537c3fae1ebf14119d6add6de3bb8c7c62768be8" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as binary string. Works only for integers.</source>
          <target state="translated">返回BigRat的二进制字符串。只对整数有效。</target>
        </trans-unit>
        <trans-unit id="24aa2429417a873bfe983d192714c535f6f41be5" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as hexadecimal string. Works only for integers.</source>
          <target state="translated">返回BigRat的十六进制字符串。只对整数有效。</target>
        </trans-unit>
        <trans-unit id="ab8db70421e588cfad590ba346078ddb17d6903a" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as octal string. Works only for integers.</source>
          <target state="translated">返回BigRat的八进制字符串。只对整数有效。</target>
        </trans-unit>
        <trans-unit id="3c649216dc6938b841f0aeaae7c037cd9226545c" translate="yes" xml:space="preserve">
          <source>Returns the CPAN::Author object of the maintainer who uploaded this distribution</source>
          <target state="translated">返回上传此发行版的维护者的CPAN::作者对象。</target>
        </trans-unit>
        <trans-unit id="ed6f1df4390323a945eaf6da29122d9d7d968327" translate="yes" xml:space="preserve">
          <source>Returns the CPAN::Distribution object that contains the current version of this module.</source>
          <target state="translated">返回包含该模块当前版本的CPAN::Distribution对象。</target>
        </trans-unit>
        <trans-unit id="4e65e5e3a2dc703ffc81bfca0637962c4bc721c5" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; when the Parser was created.</source>
          <target state="translated">返回CPU时间（如&lt;a href=&quot;../functions/times&quot;&gt;倍&lt;/a&gt;解析器创建时。</target>
        </trans-unit>
        <trans-unit id="0b216502674bf502147c6841aea85103e9d2ed72" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; when the end of TAP input was seen.</source>
          <target state="translated">返回CPU时间（例如看到TAP输入结束的&lt;a href=&quot;../functions/times&quot;&gt;时间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d298a8675f08c9497878e3cf97947b2a586539f2" translate="yes" xml:space="preserve">
          <source>Returns the CV of the specified Perl subroutine. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl subroutine does not exist then it will be declared (which has the same effect as saying &lt;code&gt;sub name;&lt;/code&gt; ). If &lt;code&gt;GV_ADD&lt;/code&gt; is not set and the subroutine does not exist then NULL is returned.</source>
          <target state="translated">返回指定Perl子例程的CV。 &lt;code&gt;flags&lt;/code&gt; 被传递到 &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt; 。如果设置了 &lt;code&gt;GV_ADD&lt;/code&gt; 并且Perl子例程不存在，则将对其进行声明（其作用与说出subname &lt;code&gt;sub name;&lt;/code&gt; ）。如果未设置 &lt;code&gt;GV_ADD&lt;/code&gt; 并且该子例程不存在，则返回NULL。</target>
        </trans-unit>
        <trans-unit id="7bf34184c10fde09175b3280e9b95c75b930e13f" translate="yes" xml:space="preserve">
          <source>Returns the Depth-First Search linearization of @ISA the given stash. The return value is a read-only AV*. &lt;code&gt;level&lt;/code&gt; should be 0 (it is used internally in this function's recursion).</source>
          <target state="translated">返回给定存储的@ISA的深度优先搜索线性化。返回值是只读的AV *。 &lt;code&gt;level&lt;/code&gt; 应为0（此函数的递归内部使用）。</target>
        </trans-unit>
        <trans-unit id="f3bb5670f054717b159feb9b9732555768713ad3" translate="yes" xml:space="preserve">
          <source>Returns the HMAC-SHA-1/224/256/384/512 digest of</source>
          <target state="translated">返回HMAC-SHA-1/224/256/384/512的摘要。</target>
        </trans-unit>
        <trans-unit id="7b095ea66a5f74c241fda1fcfc0f3782ca0f9c54" translate="yes" xml:space="preserve">
          <source>Returns the HV of the specified Perl hash. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">返回指定Perl哈希的HV。 &lt;code&gt;flags&lt;/code&gt; 被传递给 &lt;code&gt;gv_fetchpv&lt;/code&gt; 。如果设置了 &lt;code&gt;GV_ADD&lt;/code&gt; 并且Perl变量不存在，则将创建它。如果 &lt;code&gt;flags&lt;/code&gt; 为零，并且变量不存在，则返回NULL。</target>
        </trans-unit>
        <trans-unit id="7ae648da7903390da1c8863de50aa5f123d2d569" translate="yes" xml:space="preserve">
          <source>Returns the ID of the thread. Thread IDs are unique integers with the main thread in a program being 0, and incrementing by 1 for every thread created.</source>
          <target state="translated">返回线程的ID。线程ID是唯一的整数,程序中的主线程为0,每创建一个线程,线程ID递增1。</target>
        </trans-unit>
        <trans-unit id="fc9ab720b7f2a57a3ff28409dc115ce9b93b30f5" translate="yes" xml:space="preserve">
          <source>Returns the IO::File's current position, or -1 on error.</source>
          <target state="translated">返回IO::File的当前位置,错误时返回-1。</target>
        </trans-unit>
        <trans-unit id="80231f6d9f9c07146e482e2bc9b11ca9b2769858" translate="yes" xml:space="preserve">
          <source>Returns the MRO of the given class (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; ).</source>
          <target state="translated">返回给定类的MRO（ &lt;code&gt;c3&lt;/code&gt; 或 &lt;code&gt;dfs&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c310da04f2c916d16c1dfb8bbad9b9e0d93f55bb" translate="yes" xml:space="preserve">
          <source>Returns the OP's parent. If it has no parent, or if your perl wasn't built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; , returns NULL.</source>
          <target state="translated">返回OP的父级。如果没有父项，或者您的perl不是使用 &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; 构建的，则返回NULL。</target>
        </trans-unit>
        <trans-unit id="22478030a1ea2bac8f7f1a2fefee70d7119eb4de" translate="yes" xml:space="preserve">
          <source>Returns the PADLIST object (i.e. in class B::PADLIST) of the global comppadlist. In Perl 5.16 and earlier it returns an AV object (class B::AV).</source>
          <target state="translated">返回全局 comppadlist 的 PADLIST 对象(即在 B::PADLIST 类中)。在Perl 5.16和更早的版本中,它返回一个AV对象(类B::AV)。</target>
        </trans-unit>
        <trans-unit id="3938ec41dac79cf90f8a35a5402a74b64db5051f" translate="yes" xml:space="preserve">
          <source>Returns the SV (if any) returned by the method, or NULL on failure.</source>
          <target state="translated">返回本方法返回的SV(如果有),如果失败则返回NULL。</target>
        </trans-unit>
        <trans-unit id="d9ae6a3e90556af0a58312f6c8f5a6dfe0531c83" translate="yes" xml:space="preserve">
          <source>Returns the SV at the specified index in the array. The &lt;code&gt;key&lt;/code&gt; is the index. If lval is true, you are guaranteed to get a real SV back (in case it wasn't real before), which you can then modify. Check that the return value is non-null before dereferencing it to a &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">返回数组中指定索引处的SV。该 &lt;code&gt;key&lt;/code&gt; 是索引。如果lval为true，则可以保证可以得到一个真实的SV（以防以前不是真实的），然后可以对其进行修改。在将返回值解引用为 &lt;code&gt;SV*&lt;/code&gt; 之前，请检查返回值是否为非null 。</target>
        </trans-unit>
        <trans-unit id="fc95d995c648f3e5efe5bd8de55e1e4c9f4df2bb" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;amagic_generation&lt;/code&gt; . As of Perl 5.18, this is just an alias to &lt;code&gt;PL_na&lt;/code&gt; , so its value is meaningless.</source>
          <target state="translated">返回与C变量 &lt;code&gt;amagic_generation&lt;/code&gt; 相对应的SV对象。从Perl 5.18开始，这只是 &lt;code&gt;PL_na&lt;/code&gt; 的别名，因此其值没有意义。</target>
        </trans-unit>
        <trans-unit id="1d704a67336c03147fc7ed90d617645b6b1c51b6" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_no&lt;/code&gt; .</source>
          <target state="translated">返回与C变量 &lt;code&gt;sv_no&lt;/code&gt; 对应的SV对象。</target>
        </trans-unit>
        <trans-unit id="d4836bd4a2981b6da0a9a1a815dbe758c8f4a54f" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_undef&lt;/code&gt; .</source>
          <target state="translated">返回与C变量 &lt;code&gt;sv_undef&lt;/code&gt; 对应的SV对象。</target>
        </trans-unit>
        <trans-unit id="7283b11ced8b29bf19a62b8ac4b5800a68b4bf6b" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_yes&lt;/code&gt; .</source>
          <target state="translated">返回与C变量 &lt;code&gt;sv_yes&lt;/code&gt; 对应的SV对象。</target>
        </trans-unit>
        <trans-unit id="b4eb3a26c49ad7805cf81891436e5c0fbecda4e7" translate="yes" xml:space="preserve">
          <source>Returns the SV of the specified Perl scalar. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">返回指定Perl标量的SV。 &lt;code&gt;flags&lt;/code&gt; 被传递给 &lt;code&gt;gv_fetchpv&lt;/code&gt; 。如果设置了 &lt;code&gt;GV_ADD&lt;/code&gt; 并且Perl变量不存在，则将创建它。如果 &lt;code&gt;flags&lt;/code&gt; 为零，并且变量不存在，则返回NULL。</target>
        </trans-unit>
        <trans-unit id="9142ffc1740fb05792037b696ff2b138014c5d8e" translate="yes" xml:space="preserve">
          <source>Returns the SV which corresponds to the specified key in the hash. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. If &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. This means that if there is no value in the hash associated with the given key, then one is created and a pointer to it is returned. The &lt;code&gt;SV*&lt;/code&gt; it points to can be assigned to. But always check that the return value is non-null before dereferencing it to an &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">返回与哈希中指定键对应的SV。 &lt;code&gt;klen&lt;/code&gt; 的绝对值是密钥的长度。如果 &lt;code&gt;klen&lt;/code&gt; 为负，则假定密钥为UTF-8编码的Unicode。如果设置了 &lt;code&gt;lval&lt;/code&gt; ，则提取将是存储的一部分。这意味着，如果散列中没有与给定键关联的值，那么将创建一个值并返回指向该键的指针。指向的 &lt;code&gt;SV*&lt;/code&gt; 可以分配给它。但是在将其解引用为 &lt;code&gt;SV*&lt;/code&gt; 之前，请始终检查返回值是否为非null 。</target>
        </trans-unit>
        <trans-unit id="a8939d4f22418ee3872f0a426602f1b7fd0de83a" translate="yes" xml:space="preserve">
          <source>Returns the Unicode (not-native) code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">返回字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中第一个字符的Unicode（非本地）代码点，假定该字符串以UTF-8编码；在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 的末尾 &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; 点发送到1 。 &lt;code&gt;retlen&lt;/code&gt; 将设置为该字符的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="af43a95c70ff3a78c17e8ede165581061e57305f" translate="yes" xml:space="preserve">
          <source>Returns the Unicode code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">返回假定为UTF-8编码的字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中第一个字符的Unicode代码点； &lt;code&gt;retlen&lt;/code&gt; 将设置为该字符的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="492c09171260cfe2e532067f792c91bbd4044631" translate="yes" xml:space="preserve">
          <source>Returns the Unix/Posix numeric file descriptor for the handle. Normally &lt;code&gt;PerlIOBase_fileno()&lt;/code&gt; (which just asks next layer down) will suffice for this.</source>
          <target state="translated">返回句柄的Unix / Posix数字文件描述符。通常， &lt;code&gt;PerlIOBase_fileno()&lt;/code&gt; （只要求下一层）就足够了。</target>
        </trans-unit>
        <trans-unit id="278a43bcda9b8d5eb062922e0b9229cb7bea4d53" translate="yes" xml:space="preserve">
          <source>Returns the YAML text of that schema. Dies if something fails.</source>
          <target state="translated">返回该模式的YAML文本。如果失败则死亡。</target>
        </trans-unit>
        <trans-unit id="0ea5aa9d70a1ca00f811ab40cd023520a123329d" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of its argument. If VALUE is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">返回其参数的绝对值。如果省略VALUE，则使用 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b37d5915c91dfd34321e7faf69a23b4abf6310bf" translate="yes" xml:space="preserve">
          <source>Returns the actual pointer stored in the key slot of the hash entry. The pointer may be either &lt;code&gt;char*&lt;/code&gt; or &lt;code&gt;SV*&lt;/code&gt; , depending on the value of &lt;code&gt;HeKLEN()&lt;/code&gt; . Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; or &lt;code&gt;HeSVKEY()&lt;/code&gt; macros are usually preferable for finding the value of a key.</source>
          <target state="translated">返回存储在哈希条目的键槽中的实际指针。指针可以是 &lt;code&gt;char*&lt;/code&gt; 或 &lt;code&gt;SV*&lt;/code&gt; ，具体取决于 &lt;code&gt;HeKLEN()&lt;/code&gt; 的值。可以分配给。通常，最好使用 &lt;code&gt;HePV()&lt;/code&gt; 或 &lt;code&gt;HeSVKEY()&lt;/code&gt; 宏来查找键的值。</target>
        </trans-unit>
        <trans-unit id="e5a802408c554ecadee8ec043662d1413781b7b0" translate="yes" xml:space="preserve">
          <source>Returns the address of the shared memory that has been attached to in a format suitable for use with &lt;code&gt;&lt;a href=&quot;../functions/pack&quot;&gt;pack('P')&lt;/a&gt;&lt;/code&gt;. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the shared memory has not been attached.</source>
          <target state="translated">以适合于 &lt;code&gt;&lt;a href=&quot;../functions/pack&quot;&gt;pack('P')&lt;/a&gt;&lt;/code&gt; 的格式返回已附加的共享内存的地址。如果尚未连接共享内存，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4996d78af5874f47b502316ec30ad85cac81f20" translate="yes" xml:space="preserve">
          <source>Returns the adler32 value for the dictionary.</source>
          <target state="translated">返回字典的adler32值。</target>
        </trans-unit>
        <trans-unit id="8110545d8490355aa62470c7b4a8c19fede7c3aa" translate="yes" xml:space="preserve">
          <source>Returns the adler32 value for the uncompressed data to date.</source>
          <target state="translated">返回迄今为止未压缩数据的adler32值。</target>
        </trans-unit>
        <trans-unit id="210b877f7a2c1fe6cf54c9b7efe9eabb40ff0f65" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of Y/X in the range -PI to PI.</source>
          <target state="translated">返回Y/X在-PI到PI范围内的正切值。</target>
        </trans-unit>
        <trans-unit id="7b87d41159fcb5d9bb46a3d4b918a53b817c2f0f" translate="yes" xml:space="preserve">
          <source>Returns the author's ID of the module.</source>
          <target state="translated">返回该模块的作者ID。</target>
        </trans-unit>
        <trans-unit id="fe922d38921730375ec3bda35fa42bccb6c0d784" translate="yes" xml:space="preserve">
          <source>Returns the author's email address</source>
          <target state="translated">返回作者的电子邮件地址</target>
        </trans-unit>
        <trans-unit id="115d31cf996a7c09a0151cf631c1919d8e8d1653" translate="yes" xml:space="preserve">
          <source>Returns the author's name</source>
          <target state="translated">返回作者姓名</target>
        </trans-unit>
        <trans-unit id="613408706936527cb8b30f75a308a36d14781eab" translate="yes" xml:space="preserve">
          <source>Returns the banner message which the server replied with when the initial connection was made.</source>
          <target state="translated">返回初始连接时服务器回复的横幅信息。</target>
        </trans-unit>
        <trans-unit id="71210f2e62087ea963b73d1f1d105999c2f3ec57" translate="yes" xml:space="preserve">
          <source>Returns the buffer size used to carry out the compression.</source>
          <target state="translated">返回用于进行压缩的缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="d32e46ff68fcb957de232438cd9bacf3b7e170ff" translate="yes" xml:space="preserve">
          <source>Returns the buffer size used to carry out the decompression.</source>
          <target state="translated">返回用于进行解压的缓冲区大小。</target>
        </trans-unit>
        <trans-unit id="3895d01f81623a76c7e95e3e633d7d4cd48a45ef" translate="yes" xml:space="preserve">
          <source>Returns the casefolded version of EXPR. This is the internal function implementing the &lt;code&gt;\F&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">返回EXPR的casefolded版本。这是在双引号字符串中实现 &lt;code&gt;\F&lt;/code&gt; 转义的内部函数。</target>
        </trans-unit>
        <trans-unit id="7478bfde85132ab5287293ffbe4f80921537ea44" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="translated">返回由该字符集中的NUMBER表示的字符。例如， &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; 在ASCII或Unicode中为 &lt;code&gt;&quot;A&quot;&lt;/code&gt; ，而chr（0x263a）是Unicode笑脸。</target>
        </trans-unit>
        <trans-unit id="cbc33cdff6a32e384af7664e0f3e3d792d382300" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="translated">返回由该字符集中的NUMBER表示的字符。例如， &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; 在ASCII或Unicode中为 &lt;code&gt;&quot;A&quot;&lt;/code&gt; ，而chr（0x263a）是Unicode笑脸。</target>
        </trans-unit>
        <trans-unit id="eb199f5090a474ebe28f0646c2b3618d0563582d" translate="yes" xml:space="preserve">
          <source>Returns the character used for quoting strings on this platform. This is usually a &lt;code&gt;'&lt;/code&gt; (single quote) on most systems, but some systems use different quotes. For example, &lt;code&gt;Win32&lt;/code&gt; uses &lt;code&gt;&quot;&lt;/code&gt; (double quote).</source>
          <target state="translated">返回用于在此平台上引用字符串的字符。在大多数系统上，这通常是 &lt;code&gt;'&lt;/code&gt; （单引号），但是某些系统使用不同的引号。例如， &lt;code&gt;Win32&lt;/code&gt; 使用 &lt;code&gt;&quot;&lt;/code&gt; （双引号）。</target>
        </trans-unit>
        <trans-unit id="e8448bf8848e22ad03564ea6713f1239f54e36c4" translate="yes" xml:space="preserve">
          <source>Returns the class of an object without the part of the classname preceding the first &lt;code&gt;&quot;::&quot;&lt;/code&gt; . This is used to turn &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; into &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; for example.</source>
          <target state="translated">返回对象的类，其类名的第一个 &lt;code&gt;&quot;::&quot;&lt;/code&gt; 。例如，这用于将 &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; 变为 &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5264dd1dc2780bd589669333fc619e8c145ba657" translate="yes" xml:space="preserve">
          <source>Returns the clean_subdirs target. This is used by the clean target to call clean on any subdirectories which contain Makefiles.</source>
          <target state="translated">返回clean_subdirs target。这个目标被clean target用来对任何包含Makefiles的子目录调用clean。</target>
        </trans-unit>
        <trans-unit id="a40f04f61ed94ea46c22a5564f81aa3af8cee02e" translate="yes" xml:space="preserve">
          <source>Returns the compile date (as a string), equivalent to what is shown by &lt;code&gt;perl -V&lt;/code&gt;</source>
          <target state="translated">返回编译日期（以字符串形式），等效于 &lt;code&gt;perl -V&lt;/code&gt; 显示的内容</target>
        </trans-unit>
        <trans-unit id="ca2b3208f58937ac730f25a7f1621ad213d12d3e" translate="yes" xml:space="preserve">
          <source>Returns the compression level being used.</source>
          <target state="translated">返回正在使用的压缩级别。</target>
        </trans-unit>
        <trans-unit id="296dffd4d83e098002d0989a035a14f44c5be0b6" translate="yes" xml:space="preserve">
          <source>Returns the computed hash stored in the hash entry.</source>
          <target state="translated">返回存储在哈希条目中的计算后的哈希值。</target>
        </trans-unit>
        <trans-unit id="bd4543cfbb9431e0ed34c31843d7ee80a71eeab2" translate="yes" xml:space="preserve">
          <source>Returns the concatenation of all the values returned by the &lt;code&gt;BLOCK&lt;/code&gt; in list context, or the count of the number of items that would have been returned in scalar context.</source>
          <target state="translated">返回列表上下文中 &lt;code&gt;BLOCK&lt;/code&gt; 返回的所有值的串联，或者返回标量上下文中将返回的项目数的计数。</target>
        </trans-unit>
        <trans-unit id="7697306fa0a13e73fa40eca03fcc22eef02b04a2" translate="yes" xml:space="preserve">
          <source>Returns the content of the META.yml of this distro as a hashref. Note: works only after an attempt has been made to &lt;code&gt;make&lt;/code&gt; the distribution. Returns undef otherwise. Also returns undef if the content of META.yml is not authoritative. (The rules about what exactly makes the content authoritative are still in flux.)</source>
          <target state="translated">返回此发行版的META.yml的内容作为hashref。注意：仅在尝试 &lt;code&gt;make&lt;/code&gt; 分发后才有效。否则返回undef。如果META.yml的内容不权威，也将返回undef。（有关使内容真正具有权威性的规则仍在不断变化。）</target>
        </trans-unit>
        <trans-unit id="9b35a2fe131e688b9db1d3591f5dcf2a62f9e796" translate="yes" xml:space="preserve">
          <source>Returns the contents of $ENV{TMPDIR}, if that directory exits or the current working directory otherwise. Under MacPerl, $ENV{TMPDIR} will contain a path like &quot;MacintoshHD:Temporary Items:&quot;, which is a hidden directory on your startup volume.</source>
          <target state="translated">返回$ENV{TMPDIR}的内容,如果该目录退出,则返回该目录的内容,否则返回当前工作目录。在MacPerl下,$ENV{TMPDIR}将包含一个类似于 &quot;MacintoshHD:Temporary Items:&quot;的路径,它是启动卷上的一个隐藏目录。</target>
        </trans-unit>
        <trans-unit id="0f161ded5c89a2f214ab3c554c29c2cf54cc25f0" translate="yes" xml:space="preserve">
          <source>Returns the contents of a named buffer of the last successful match. If $all is true, then returns an array ref containing one entry per buffer, otherwise returns the first defined buffer.</source>
          <target state="translated">返回最后一次成功匹配的命名缓冲区的内容。如果$all为真,则返回一个数组ref,每个缓冲区包含一个条目,否则返回第一个定义的缓冲区。</target>
        </trans-unit>
        <trans-unit id="c481d635318d5270129f3710fa2b63e432d0469d" translate="yes" xml:space="preserve">
          <source>Returns the context of the current pure perl subroutine call. In scalar context, returns the caller's package name if there</source>
          <target state="translated">返回当前纯perl子程序调用的上下文。在标量上下文中,如果有的话,返回调用者的包名。</target>
        </trans-unit>
        <trans-unit id="629a1bf5ae31e2428f6761a91af5e45898a92a1d" translate="yes" xml:space="preserve">
          <source>Returns the cosine of EXPR (expressed in radians). If EXPR is omitted, takes the cosine of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">返回EXPR的余弦值（以弧度表示）。如果省略EXPR，则取 &lt;code&gt;$_&lt;/code&gt; 的余弦值。</target>
        </trans-unit>
        <trans-unit id="382366cbd1645fc7a8be88934fd05350c798da6f" translate="yes" xml:space="preserve">
          <source>Returns the crc32 value for the uncompressed data to date.</source>
          <target state="translated">返回至今未压缩数据的crc32值。</target>
        </trans-unit>
        <trans-unit id="96ae9c4a96664dc70dd7bd85d43ba95afc713573" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;cutting&lt;/code&gt; state: a boolean-valued scalar which evaluates to true if text from the input file is currently being &quot;cut&quot; (meaning it is</source>
          <target state="translated">返回当前的 &lt;code&gt;cutting&lt;/code&gt; 状态：布尔值标量，如果当前正在对输入文件中的文本进行&amp;ldquo;切割&amp;rdquo;，则该值为真。</target>
        </trans-unit>
        <trans-unit id="cd1a14517cc73ee3846bc96e07fa9fecd6234b97" translate="yes" xml:space="preserve">
          <source>Returns the current accuracy. For &lt;code&gt;$x-&amp;gt;accuracy()&lt;/code&gt; it will return either the local accuracy, or if not defined, the global. This means the return value represents the accuracy that will be in effect for $x:</source>
          <target state="translated">返回当前精度。对于 &lt;code&gt;$x-&amp;gt;accuracy()&lt;/code&gt; ，它将返回局部精度，或者如果未定义则返回全局精度。这意味着返回值表示将对$ x生效的精度：</target>
        </trans-unit>
        <trans-unit id="9ab41cff2a71d5df164ca2f4fc69050a70621047" translate="yes" xml:space="preserve">
          <source>Returns the current content for the in-memory file</source>
          <target state="translated">返回内存文件的当前内容。</target>
        </trans-unit>
        <trans-unit id="810f5973b59e7cdd5b0d52b6480f5843daebe730" translate="yes" xml:space="preserve">
          <source>Returns the current content for the in-memory file as a scalar reference. Normal users won't need this, but it will save memory if you are dealing with very large data files in your tar archive, since it will pass the contents by reference, rather than make a copy of it first.</source>
          <target state="translated">以标量引用的方式返回当前内存文件的内容。普通用户不需要这个,但如果你要处理 tar 档案中非常大的数据文件,它将会节省内存,因为它将通过引用传递内容,而不是先复制内容。</target>
        </trans-unit>
        <trans-unit id="f977f32eb061f0a71d6ca2651f96525fc6d9a70e" translate="yes" xml:space="preserve">
          <source>Returns the current debugging flag for &lt;code&gt;walkoptree&lt;/code&gt; . If the optional DEBUG argument is non-zero, it sets the debugging flag to that. See the description of &lt;code&gt;walkoptree&lt;/code&gt; above for what the debugging flag does.</source>
          <target state="translated">返回 &lt;code&gt;walkoptree&lt;/code&gt; 的当前调试标志。如果可选的DEBUG参数不为零，则将调试标志设置为该值。有关调试标志的作用，请参见上 &lt;code&gt;walkoptree&lt;/code&gt; 的描述。</target>
        </trans-unit>
        <trans-unit id="401aa41391125b7bdfa5659f72078a7692f72646" translate="yes" xml:space="preserve">
          <source>Returns the current default per-thread stack size. The default is zero, which means the system default stack size is currently in use.</source>
          <target state="translated">返回当前默认的每线程堆栈大小。默认值为0,表示当前使用的是系统默认的堆栈大小。</target>
        </trans-unit>
        <trans-unit id="2be9304f6344655b4c4dd53810f18f19259018ba" translate="yes" xml:space="preserve">
          <source>Returns the current error string (usually, the last error reported). If a true value was specified, it will give the &lt;code&gt;Carp::longmess&lt;/code&gt; equivalent of the error, in effect giving you a stacktrace.</source>
          <target state="translated">返回当前错误字符串（通常是最后报告的错误）。如果指定了真值，它将给出与 &lt;code&gt;Carp::longmess&lt;/code&gt; 等效的错误，实际上是为您提供了堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="2ec8302516eca5089fb22e9dc7a8a81e81cc5479" translate="yes" xml:space="preserve">
          <source>Returns the current filename and line number for the interior sequence object. If called in a list context, it returns a list of two elements: first the filename, then the line number. If called in a scalar context, it returns a string containing the filename, followed by a colon (':'), followed by the line number.</source>
          <target state="translated">返回内部序列对象的当前文件名和行号。如果在列表上下文中调用,则返回一个由两个元素组成的列表:首先是文件名,然后是行号。如果在标量上下文中调用,则返回一个包含文件名的字符串,后面是冒号(':'),后面是行号。</target>
        </trans-unit>
        <trans-unit id="37b6eeba52eff8f31c174b55de2a528ba7738f6f" translate="yes" xml:space="preserve">
          <source>Returns the current filename and line number for the paragraph object. If called in a list context, it returns a list of two elements: first the filename, then the line number. If called in a scalar context, it returns a string containing the filename, followed by a colon (':'), followed by the line number.</source>
          <target state="translated">返回段落对象的当前文件名和行号。如果在列表上下文中调用,它返回一个由两个元素组成的列表:首先是文件名,然后是行号。如果在标量上下文中调用,则返回一个包含文件名的字符串,后面是冒号(':'),后面是行号。</target>
        </trans-unit>
        <trans-unit id="301b27c4f96019f2f8c4ae36f6c0daa0acd40fa1" translate="yes" xml:space="preserve">
          <source>Returns the current floating point rounding mode, one of</source>
          <target state="translated">返回当前的浮点取整模式,其中一个是</target>
        </trans-unit>
        <trans-unit id="f0387df63a5b00558cfcef9815f10187b319abcf" translate="yes" xml:space="preserve">
          <source>Returns the current input filehandle object.</source>
          <target state="translated">返回当前输入的filehandle对象。</target>
        </trans-unit>
        <trans-unit id="389d6746fc95646c0fcea387d7243321ece3de32" translate="yes" xml:space="preserve">
          <source>Returns the current position</source>
          <target state="translated">返回当前位置</target>
        </trans-unit>
        <trans-unit id="b39864a44dcc985b087ce0a4132e9be9ba1df0dc" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routines on DIRHANDLE. Value may be given to &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; to access a particular location in a directory. &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">返回DIRHANDLE上 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 例程的当前位置。可以为 &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; 赋值以访问目录中的特定位置。 &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; 对于可能的目录压缩与相应的系统库例程有相同的警告。</target>
        </trans-unit>
        <trans-unit id="7222e4c7a3a8ced2fa61913ad73cf5ff5a8ea68c" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routines on DIRHANDLE. Value may be given to &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; to access a particular location in a directory. &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">返回DIRHANDLE上 &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 例程的当前位置。可以为 &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; 赋值以访问目录中的特定位置。 &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; 对于可能的目录压缩与相应的系统库例程有相同的警告。</target>
        </trans-unit>
        <trans-unit id="c58b4b7839bacdcd78f0ce8300cc1cdc9e5b82f1" translate="yes" xml:space="preserve">
          <source>Returns the current precision. For &lt;code&gt;$x-&amp;gt;precision()&lt;/code&gt; it will return either the local precision of $x, or if not defined, the global. This means the return value represents the prevision that will be in effect for $x:</source>
          <target state="translated">返回当前精度。对于 &lt;code&gt;$x-&amp;gt;precision()&lt;/code&gt; ，它将返回$ x的局部精度，或者返回全局精度（如果未定义）。这意味着返回值表示将对$ x生效的预设：</target>
        </trans-unit>
        <trans-unit id="2c348d2f127bac6601e5a42a0e120902e638767c" translate="yes" xml:space="preserve">
          <source>Returns the current priority for a process, a process group, or a user. (See</source>
          <target state="translated">返回一个进程、一个进程组或一个用户的当前优先级。(参见</target>
        </trans-unit>
        <trans-unit id="e25edb437e0678c7aed490d4fa1cade2a3a6bb2f" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement getpgrp(2). If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="translated">返回指定PID的当前过程组。使用 &lt;code&gt;0&lt;/code&gt; 的PID 来获取当前进程的当前进程组。如果在未实现getpgrp（2）的计算机上使用，将引发异常。如果省略PID，则返回当前进程的进程组。请注意， &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; 的POSIX版本不接受PID参数，因此只有 &lt;code&gt;PID==0&lt;/code&gt; 才是真正可移植的。</target>
        </trans-unit>
        <trans-unit id="19cbb236442174d3d328d82505adcc3440a6be36" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement getpgrp(2). If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;code&gt;&lt;a href=&quot;getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="translated">返回指定PID的当前过程组。使用 &lt;code&gt;0&lt;/code&gt; 的PID 来获取当前进程的当前进程组。如果在未实现getpgrp（2）的计算机上使用，将引发异常。如果省略PID，则返回当前进程的进程组。请注意， &lt;code&gt;&lt;a href=&quot;getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; 的POSIX版本不接受PID参数，因此只有 &lt;code&gt;PID==0&lt;/code&gt; 才是真正可移植的。</target>
        </trans-unit>
        <trans-unit id="fc91437897d6caaf074aaf310cc8b71a9efba0ef" translate="yes" xml:space="preserve">
          <source>Returns the current time. Example:</source>
          <target state="translated">返回当前时间。例子:</target>
        </trans-unit>
        <trans-unit id="568b25d7cd87cbaf6286b8da7e742768573264ff" translate="yes" xml:space="preserve">
          <source>Returns the current uncompressed line number. If &lt;code&gt;EXPR&lt;/code&gt; is present it has the effect of setting the line number. Note that setting the line number does not change the current position within the file/buffer being read.</source>
          <target state="translated">返回当前未压缩的行号。如果存在 &lt;code&gt;EXPR&lt;/code&gt; ,则可以设置行号。请注意，设置行号不会更改正在读取的文件/缓冲区中的当前位置。</target>
        </trans-unit>
        <trans-unit id="1c7ca6c3d06ba8c8f091422f3579921b1ba88d59" translate="yes" xml:space="preserve">
          <source>Returns the current value of the semaphore &lt;code&gt;SEM&lt;/code&gt; .</source>
          <target state="translated">返回信号量 &lt;code&gt;SEM&lt;/code&gt; 的当前值。</target>
        </trans-unit>
        <trans-unit id="fbc79b8bcff16613d3bb8b47a656313f95474a39" translate="yes" xml:space="preserve">
          <source>Returns the current version of state storage.</source>
          <target state="translated">返回状态存储的当前版本。</target>
        </trans-unit>
        <trans-unit id="7c44a2f225c0656c4984e0204b4d9b37b2725674" translate="yes" xml:space="preserve">
          <source>Returns the current working directory.</source>
          <target state="translated">返回当前工作目录。</target>
        </trans-unit>
        <trans-unit id="6e49c468b58f004c51887df11de2e77395328246" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="translated">返回当前选择的文件句柄。如果提供了FILEHANDLE，则设置新的当前默认文件句柄以进行输出。这有两个效果：首先，默认为该FILEHANDLE的不带文件句柄的 &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 。其次，对与输出相关的变量的引用将引用此输出通道。</target>
        </trans-unit>
        <trans-unit id="5002587273ce83892d07569c520d1d13bbd5a0a5" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="translated">返回当前选择的文件句柄。如果提供了FILEHANDLE，则设置新的当前默认文件句柄以进行输出。这有两个效果：首先，默认为该FILEHANDLE的不带文件句柄的 &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 。其次，对与输出相关的变量的引用将引用此输出通道。</target>
        </trans-unit>
        <trans-unit id="5923554a461f2216ab02bd2082e338016fb58ae3" translate="yes" xml:space="preserve">
          <source>Returns the data which MakeMaker turns into the META.yml file and the META.json file.</source>
          <target state="translated">返回MakeMaker变成META.yml文件和META.json文件的数据。</target>
        </trans-unit>
        <trans-unit id="cf3ebec2434ff5cdedd394ac444cf5c4ec8d5c9e" translate="yes" xml:space="preserve">
          <source>Returns the data, if any, that is present immediately after the compressed data stream once uncompression is complete.</source>
          <target state="translated">解压缩完成后,返回紧随压缩数据流之后的数据(如果有)。</target>
        </trans-unit>
        <trans-unit id="5867cb1e4587fc25d5eb63cdf9e0c49bdd800916" translate="yes" xml:space="preserve">
          <source>Returns the data, if any, that is present immediately after the compressed data stream once uncompression is complete. It only makes sense to call this method once the end of the compressed data stream has been encountered.</source>
          <target state="translated">一旦解压缩完成,返回紧随压缩数据流之后存在的数据(如果有的话)。只有在压缩数据流结束后才有意义调用本方法。</target>
        </trans-unit>
        <trans-unit id="ca7ad4546f41d5baf4a4566eb474c608964d4b90" translate="yes" xml:space="preserve">
          <source>Returns the date on the remote server. This date will be in a UNIX time format (seconds since 1970)</source>
          <target state="translated">返回远程服务器上的日期。这个日期是UNIX时间格式(1970年以来的秒数)。</target>
        </trans-unit>
        <trans-unit id="62e3785ee4c58ec99d1c8581fa7c9d36014742ac" translate="yes" xml:space="preserve">
          <source>Returns the deflation strategy currently used. Valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">返回当前使用的放气策略。有效值为 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; ， &lt;code&gt;Z_FILTERED&lt;/code&gt; 和 &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b74cd04d7eeb4c72216a4982acc93abc4513fc13" translate="yes" xml:space="preserve">
          <source>Returns the description of the test, if any. This is the portion after the test number but before the directive.</source>
          <target state="translated">返回测试的描述,如果有的话。这是测试编号之后、指令之前的部分。</target>
        </trans-unit>
        <trans-unit id="e4e6b2be83f8d33a5aa3a2fee1a42645a4ebc110" translate="yes" xml:space="preserve">
          <source>Returns the difference between two Benchmark times as a Benchmark object suitable for passing to timestr().</source>
          <target state="translated">返回两个Benchmark时间的差值,作为一个Benchmark对象,适合传递给 timestr()。</target>
        </trans-unit>
        <trans-unit id="61b2fdc67d2ca33f1adf62666ddf8117fae5cdd2" translate="yes" xml:space="preserve">
          <source>Returns the different types of tokens which this grammar can parse.</source>
          <target state="translated">返回本语法可以解析的不同类型的标记。</target>
        </trans-unit>
        <trans-unit id="990db58c7885c866cc62a909fe1fd15ee853afe2" translate="yes" xml:space="preserve">
          <source>Returns the digest algorithm for this object. The values are 1, 224, 256, 384, 512, 512224, and 512256 for SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256, respectively.</source>
          <target state="translated">返回此对象的摘要算法。SHA-1、SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224和SHA-512/256的值分别为1、224、256、384、512、512224和512256。</target>
        </trans-unit>
        <trans-unit id="8f298412e0fd4c8b924547738fa518215dbcf58f" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a Base64 string.</source>
          <target state="translated">Returns the digest encoded as a Base64 string。</target>
        </trans-unit>
        <trans-unit id="8dadd7fd9276d3f1c746af1004060c45b877ab3e" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a binary string.</source>
          <target state="translated">返回以二进制字符串编码的摘要。</target>
        </trans-unit>
        <trans-unit id="b4edd4a2c8a97d7fda881271014c00cf593e6ffb" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a hexadecimal string.</source>
          <target state="translated">返回以十六进制字符串编码的摘要。</target>
        </trans-unit>
        <trans-unit id="0daf1408abc93979de94874fb4786c860c8907d9" translate="yes" xml:space="preserve">
          <source>Returns the directory into which this distribution has been unpacked.</source>
          <target state="translated">返回这个发行版被解压到的目录。</target>
        </trans-unit>
        <trans-unit id="41f80c4d8a32cca7a61a2ef98ffcd3073a4d2a68" translate="yes" xml:space="preserve">
          <source>Returns the distribution filename without any archive suffix. E.g &quot;Foo-Bar-0.01&quot;</source>
          <target state="translated">返回不含任何后缀的发行版文件名,如 &quot;Foo-Bar-0.01&quot;。例如:&quot;Foo-Bar-0.01&quot;</target>
        </trans-unit>
        <trans-unit id="2855fccbb327c40b86c61f3ed950206a083798e7" translate="yes" xml:space="preserve">
          <source>Returns the domain that the remote SMTP server identified itself as during connection.</source>
          <target state="translated">返回远程SMTP服务器在连接时识别的域。</target>
        </trans-unit>
        <trans-unit id="16c36120af9460aec3cc2b1903075909c2d71c5a" translate="yes" xml:space="preserve">
          <source>Returns the dump of a single scalar without printing. If the second argument is true, the return value does not contain enclosing ticks. Does not handle data structures.</source>
          <target state="translated">返回单个标量的转储值,不打印。如果第二个参数为真,则返回值不包含包围的ticks。不处理数据结构。</target>
        </trans-unit>
        <trans-unit id="11b578378f3d405a2621ca9e3ecbd469fe7be940" translate="yes" xml:space="preserve">
          <source>Returns the effective group identifier. Similar to Perl' s builtin variable &lt;code&gt;$(&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24EGID&quot;&gt;$EGID in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回有效的组标识符。类似于Perl的内置变量 &lt;code&gt;$(&lt;/code&gt; ，请参阅&lt;a href=&quot;perlvar#%24EGID&quot;&gt;perlvar中的$ EGID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbf9d9242d7f4a649796a00a1ff9152de5e8ccba" translate="yes" xml:space="preserve">
          <source>Returns the effective name of a stash, or NULL if there is none. The effective name represents a location in the symbol table where this stash resides. It is updated automatically when packages are aliased or deleted. A stash that is no longer in the symbol table has no effective name. This name is preferable to &lt;code&gt;HvNAME&lt;/code&gt; for use in MRO linearisations and isa caches.</source>
          <target state="translated">返回存储的有效名称，如果没有，则返回NULL。有效名称表示此隐藏存储在符号表中的位置。当程序包被别名或删除时，它会自动更新。符号表中不再存在的存储区没有有效的名称。对于MRO线性化和isa缓存，此名称比 &lt;code&gt;HvNAME&lt;/code&gt; 更可取。</target>
        </trans-unit>
        <trans-unit id="f056d864c5d30d613c81021e2a25b1b55f0fa9d1" translate="yes" xml:space="preserve">
          <source>Returns the effective user identifier. Identical to Perl's builtin &lt;code&gt;$&amp;gt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24EUID&quot;&gt;$EUID in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回有效的用户标识符。与Perl的内置 &lt;code&gt;$&amp;gt;&lt;/code&gt; 变量相同，请参见&lt;a href=&quot;perlvar#%24EUID&quot;&gt;perlvar中的$ EUID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a42512df26a9af0a5e28e5981d42b330a2edfe3" translate="yes" xml:space="preserve">
          <source>Returns the entire perl configuration information in the form of the original config.sh shell variable assignment script.</source>
          <target state="translated">以原始config.sh shell变量分配脚本的形式返回整个perl配置信息。</target>
        </trans-unit>
        <trans-unit id="eb4161e2e62196817c55ca3f4eabde933f4a749f" translate="yes" xml:space="preserve">
          <source>Returns the entry in the list with the highest numerical value. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">返回列表中具有最高数值的条目。如果列表为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cee51cb3c3a1af36e40de4701691c54500f8a276" translate="yes" xml:space="preserve">
          <source>Returns the error string for the specified errno. Identical to the string form of &lt;code&gt;$!&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回指定errno的错误字符串。与 &lt;code&gt;$!&lt;/code&gt; 的字符串形式相同！，请参阅&lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;perlvar中的$ ERRNO&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="861a7bd187e44e76e3ebbe4819b8629ad50b3874" translate="yes" xml:space="preserve">
          <source>Returns the event mask which represents the events that happened on IO during the last call to &lt;code&gt;poll&lt;/code&gt; .</source>
          <target state="translated">返回事件掩码，该掩码表示上次 &lt;code&gt;poll&lt;/code&gt; 调用期间IO上发生的事件。</target>
        </trans-unit>
        <trans-unit id="842c516cf6fbbca8413e030f19ccfea2ece85184" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="translated">返回文件句柄的文件描述符，如果文件句柄未打开，则返回undefined。如果在OS级别上没有实际的文件描述符，例如通过 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 与第三个参数的引用连接到内存对象的文件句柄可能会发生的情况，则返回-1。</target>
        </trans-unit>
        <trans-unit id="b8e4620189d1043104facd9f1d5508657352dac3" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="translated">返回文件句柄的文件描述符，如果文件句柄未打开，则返回undefined。如果在OS级别上没有实际的文件描述符，例如通过 &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 与第三个参数的引用连接到内存对象的文件句柄可能会发生的情况，则返回-1。</target>
        </trans-unit>
        <trans-unit id="c1461c62fed9d2cb70b8885542758d1fd2ef17b9" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for the underlying database.</source>
          <target state="translated">返回底层数据库的文件描述符。</target>
        </trans-unit>
        <trans-unit id="e8f20adcdf09867985f35137ad55c8f1eba6e594" translate="yes" xml:space="preserve">
          <source>Returns the filehandle of a temporary file.</source>
          <target state="translated">返回一个临时文件的文件柄。</target>
        </trans-unit>
        <trans-unit id="06f70c27b3badc241e28918c68390d5fe9f8cb0f" translate="yes" xml:space="preserve">
          <source>Returns the filename of the module found in @INC. The first file found is reported, just as perl itself stops searching @INC once it finds a module.</source>
          <target state="translated">返回在@INC中找到的模块的文件名。第一个找到的文件会被报告,就像perl自己在找到一个模块后会停止搜索@INC一样。</target>
        </trans-unit>
        <trans-unit id="eead9a74f584bf3fccdf0480645642eb840ae88b" translate="yes" xml:space="preserve">
          <source>Returns the filename of the module found in PERL5LIB or @INC. The first file found is reported. The advantage of this method over &lt;code&gt;inst_file&lt;/code&gt; is that modules that have been tested but not yet installed are included because PERL5LIB keeps track of tested modules.</source>
          <target state="translated">返回在PERL5LIB或@INC中找到的模块的文件名。报告找到的第一个文件。与 &lt;code&gt;inst_file&lt;/code&gt; 相比，此方法的优势在于，由于PERL5LIB跟踪已测试的模块，因此包含了已测试但尚未安装的模块。</target>
        </trans-unit>
        <trans-unit id="c169b09baf652910c9137b2f8cd5dd0d184cfb4b" translate="yes" xml:space="preserve">
          <source>Returns the filename on CPAN that is associated with the module.</source>
          <target state="translated">返回CPAN上与该模块相关联的文件名。</target>
        </trans-unit>
        <trans-unit id="d4625aaf28660b9b639231ba5f0970428e37caf7" translate="yes" xml:space="preserve">
          <source>Returns the first PERL_VERSION where the MODULE was marked as deprecated. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the MODULE has not been marked as deprecated.</source>
          <target state="translated">返回第一个PERL_VERSION，其中MODULE被标记为已弃用。如果尚未将MODULE标记为不推荐使用，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4333087024b6d761d001f5f6ca43b62f409e81b8" translate="yes" xml:space="preserve">
          <source>Returns the first pair of values from the list for which the &lt;code&gt;BLOCK&lt;/code&gt; returned true in list context, or an empty list of no such pair was found. In scalar context it returns a simple boolean value, rather than either the key or the value found.</source>
          <target state="translated">返回列表中的第一对值， &lt;code&gt;BLOCK&lt;/code&gt; 在列表上下文中为其返回true，或者没有找到没有该对的空列表。在标量上下文中，它返回一个简单的布尔值，而不是键或找到的值。</target>
        </trans-unit>
        <trans-unit id="52ed5d36bc10c7fc0651d43e0cea1e3b9a337e34" translate="yes" xml:space="preserve">
          <source>Returns the flags indicating compile-time options that were used to build the zlib library. See the zlib documentation for a description of the flags returned by &lt;code&gt;zlibCompileFlags&lt;/code&gt; .</source>
          <target state="translated">返回标志，这些标志指示用于构建zlib库的编译时选项。有关 &lt;code&gt;zlibCompileFlags&lt;/code&gt; 返回的标志的描述，请参见zlib文档。</target>
        </trans-unit>
        <trans-unit id="fafc52a30958cc2a65b7c327d2f21f623ff74d21" translate="yes" xml:space="preserve">
          <source>Returns the floating seconds between the two times, which should have been returned by &lt;code&gt;gettimeofday()&lt;/code&gt; . If the second argument is omitted, then the current time is used.</source>
          <target state="translated">返回两次之间的浮动秒数，应该由 &lt;code&gt;gettimeofday()&lt;/code&gt; 返回。如果省略第二个参数，则使用当前时间。</target>
        </trans-unit>
        <trans-unit id="03613a4fafca0a661e31e90b59391eb9ca5e8d98" translate="yes" xml:space="preserve">
          <source>Returns the format if it is valid, NULL if not.</source>
          <target state="translated">如果有效则返回格式,如果无效则返回NULL。</target>
        </trans-unit>
        <trans-unit id="65033d7a8f9ba51143d61cad9b444105938a8550" translate="yes" xml:space="preserve">
          <source>Returns the full compiler call for C programs and stores the definition in CONST_CCCMD.</source>
          <target state="translated">返回C程序的完整编译器调用,并将定义存储在CONST_CCCMD中。</target>
        </trans-unit>
        <trans-unit id="4038313df0e510dc52d21bceee61e65a3a16cbc6" translate="yes" xml:space="preserve">
          <source>Returns the full name of the character indicated by the numeric code. For example,</source>
          <target state="translated">返回数字代码所表示的字符的全称。例如</target>
        </trans-unit>
        <trans-unit id="ff3d2b908b08a50e0877f9010ffa004e68d21fcb" translate="yes" xml:space="preserve">
          <source>Returns the full path from the tar header; this is basically a concatenation of the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; fields.</source>
          <target state="translated">从tar标头返回完整路径；这基本上是 &lt;code&gt;prefix&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 字段的串联。</target>
        </trans-unit>
        <trans-unit id="f0c3147a5eefff706461b195d810511d1e6430d4" translate="yes" xml:space="preserve">
          <source>Returns the full path of the first occurrence to the file. Package names (eg 'A::B') are automatically converted to directory names in the selected directory. (eg on unix 'A::B' is converted to 'A/B'). Additionally, '.pm', '.pl' and '.pod' are appended to the search automatically if required.</source>
          <target state="translated">返回第一次出现的文件的完整路径。包名(例如'A::B')会自动转换为所选目录下的目录名。(例如在unix上,'A::B'被转换为'A/B')。此外,'.pm','.pl'和'.pod'会在需要时自动附加到搜索中。</target>
        </trans-unit>
        <trans-unit id="ee619bd4ffcf121b5599c99a22a41135db997de2" translate="yes" xml:space="preserve">
          <source>Returns the full path to the downloaded file on success, and false on failure.</source>
          <target state="translated">成功时返回下载文件的完整路径,失败时返回false。</target>
        </trans-unit>
        <trans-unit id="45b6a0183e400a3b07be8c3097337e804777f103" translate="yes" xml:space="preserve">
          <source>Returns the full pathname of the current directory.</source>
          <target state="translated">返回当前目录的完整路径名。</target>
        </trans-unit>
        <trans-unit id="f87ad3966e4b9144c40f54e6402dcf1a4b2f83af" translate="yes" xml:space="preserve">
          <source>Returns the full pathname to the new directory.</source>
          <target state="translated">返回新目录的完整路径名。</target>
        </trans-unit>
        <trans-unit id="61c9941bc1311ec2b5a0442e358024e9c55bb1ba" translate="yes" xml:space="preserve">
          <source>Returns the glob which contains the subroutine to call to invoke the method on the &lt;code&gt;stash&lt;/code&gt; . In fact in the presence of autoloading this may be the glob for &quot;AUTOLOAD&quot;. In this case the corresponding variable $AUTOLOAD is already setup.</source>
          <target state="translated">返回glob，其中包含要调用的子例程以调用 &lt;code&gt;stash&lt;/code&gt; 上的方法。实际上，在存在自动加载的情况下，这可能是&amp;ldquo; AUTOLOAD&amp;rdquo;的问题。在这种情况下，相应的变量$ AUTOLOAD已被设置。</target>
        </trans-unit>
        <trans-unit id="9d487433b7940246f543f885491d71d018b0bec9" translate="yes" xml:space="preserve">
          <source>Returns the glob with the given &lt;code&gt;name&lt;/code&gt; and a defined subroutine or &lt;code&gt;NULL&lt;/code&gt; . The glob lives in the given &lt;code&gt;stash&lt;/code&gt; , or in the stashes accessible via @ISA and UNIVERSAL::.</source>
          <target state="translated">返回具有给定 &lt;code&gt;name&lt;/code&gt; 和定义的子例程或 &lt;code&gt;NULL&lt;/code&gt; 的glob 。这个小球位于给定的 &lt;code&gt;stash&lt;/code&gt; ，或者存在于可通过@ISA和UNIVERSAL :::访问的存储区中。</target>
        </trans-unit>
        <trans-unit id="fef4351018b25a393d9cb64adb970a306dbdda38" translate="yes" xml:space="preserve">
          <source>Returns the hash entry which corresponds to the specified key in the hash. &lt;code&gt;hash&lt;/code&gt; must be a valid precomputed hash number for the given &lt;code&gt;key&lt;/code&gt; , or 0 if you want the function to compute it. IF &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. Make sure the return value is non-null before accessing it. The return value when &lt;code&gt;hv&lt;/code&gt; is a tied hash is a pointer to a static location, so be sure to make a copy of the structure if you need to store it somewhere.</source>
          <target state="translated">返回与哈希中指定键对应的哈​​希条目。 &lt;code&gt;hash&lt;/code&gt; 必须是给定 &lt;code&gt;key&lt;/code&gt; 的有效的预先计算的哈希数，如果您希望函数对其进行计算，则为0。如果设置了 &lt;code&gt;lval&lt;/code&gt; ，则提取将成为存储的一部分。在访问返回值之前，请确保它不为空。 &lt;code&gt;hv&lt;/code&gt; 是绑定哈希时的返回值是指向静态位置的指针，因此如果需要将结构存储在某个位置，请确保对其进行复制。</target>
        </trans-unit>
        <trans-unit id="32614fc90f0a28fbb48c622d08ef281a17449acd" translate="yes" xml:space="preserve">
          <source>Returns the hash reference from the first matching YAML file that the user has deposited in the &lt;code&gt;prefs_dir/&lt;/code&gt; directory. The first succeeding match wins. The files in the &lt;code&gt;prefs_dir/&lt;/code&gt; are processed alphabetically, and the canonical distro name (e.g. AUTHOR/Foo-Bar-3.14.tar.gz) is matched against the regular expressions stored in the $root-&amp;gt;{match}{distribution} attribute value. Additionally all module names contained in a distribution are matched against the regular expressions in the $root-&amp;gt;{match}{module} attribute value. The two match values are ANDed together. Each of the two attributes are optional.</source>
          <target state="translated">从用户存放在 &lt;code&gt;prefs_dir/&lt;/code&gt; 目录中的第一个匹配的YAML文件返回哈希引用。随后的第一场比赛获胜。 &lt;code&gt;prefs_dir/&lt;/code&gt; 中的文件将按字母顺序进行处理，并且规范发行版名称（例如AUTHOR / Foo-Bar-3.14.tar.gz）与$ root-&amp;gt; {match} {distribution}属性值中存储的正则表达式匹配。另外，分发中包含的所有模块名称都与$ root-&amp;gt; {match} {module}属性值中的正则表达式匹配。这两个匹配值进行&amp;ldquo;与&amp;rdquo;运算。这两个属性中的每一个都是可选的。</target>
        </trans-unit>
        <trans-unit id="d089b1e8dbdbbd95886ba11042d00902332c4f2b" translate="yes" xml:space="preserve">
          <source>Returns the hash reference that has been announced by a distribution as the &lt;code&gt;requires&lt;/code&gt; and &lt;code&gt;build_requires&lt;/code&gt; elements. These can be declared either by the &lt;code&gt;META.yml&lt;/code&gt; (if authoritative) or can be deposited after the run of &lt;code&gt;Build.PL&lt;/code&gt; in the file &lt;code&gt;./_build/prereqs&lt;/code&gt; or after the run of &lt;code&gt;Makfile.PL&lt;/code&gt; written as the &lt;code&gt;PREREQ_PM&lt;/code&gt; hash in a comment in the produced &lt;code&gt;Makefile&lt;/code&gt; .</source>
          <target state="translated">返回已经被分发宣布为哈希参考 &lt;code&gt;requires&lt;/code&gt; 和 &lt;code&gt;build_requires&lt;/code&gt; 元素。这些可以由 &lt;code&gt;META.yml&lt;/code&gt; 声明（如果具有权威性），也可以在 &lt;code&gt;Build.PL&lt;/code&gt; 运行后存放在文件 &lt;code&gt;./_build/prereqs&lt;/code&gt; 中,或者在运行 &lt;code&gt;Makfile.PL&lt;/code&gt; 之后存储为注释中的 &lt;code&gt;PREREQ_PM&lt;/code&gt; 哈希值。产生的 &lt;code&gt;Makefile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e9ebf8ea7bb35d267f0cb62310b0886e4d2ed06" translate="yes" xml:space="preserve">
          <source>Returns the highest &lt;code&gt;MSGNUM&lt;/code&gt; of all the messages accessed.</source>
          <target state="translated">返回所有已访问消息中的最高 &lt;code&gt;MSGNUM&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ce35f7f613bd71260c30034c6760ae3d6a9cbcd" translate="yes" xml:space="preserve">
          <source>Returns the highest index in the array. The number of elements in the array is &lt;code&gt;av_top_index(av) + 1&lt;/code&gt; . Returns -1 if the array is empty.</source>
          <target state="translated">返回数组中的最高索引。数组中的元素数为 &lt;code&gt;av_top_index(av) + 1&lt;/code&gt; 。如果数组为空，则返回-1。</target>
        </trans-unit>
        <trans-unit id="2670d7ef05ea6b77e23aa1a4696ff750d445dd63" translate="yes" xml:space="preserve">
          <source>Returns the highest installed version of the bundle in either @INC or &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}&lt;/code&gt; . Note that this is different from CPAN::Module::inst_file.</source>
          <target state="translated">返回@INC或 &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}&lt;/code&gt; 捆绑软件的最高安装版本。请注意，这与CPAN :: Module :: inst_file不同。</target>
        </trans-unit>
        <trans-unit id="7d854cbfcc6c64b54904b8a051f15a69e6ddaeff" translate="yes" xml:space="preserve">
          <source>Returns the ids of the user's supplementary groups. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24GID&quot;&gt;$GID in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回用户的补充组的ID。与Perl的内置变量 &lt;code&gt;$)&lt;/code&gt; 类似，请参阅&lt;a href=&quot;perlvar#%24GID&quot;&gt;perlvar中的$ GID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62c17f9ab56c19dd8776ed61db008d21dff14d62" translate="yes" xml:space="preserve">
          <source>Returns the integer (but still as floating point) nearest to the argument [C99].</source>
          <target state="translated">返回最接近参数[C99]的整数(但仍然是浮点数)。</target>
        </trans-unit>
        <trans-unit id="9ac0de93b6553ad32ba9295e6bd7485987a87868" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt; , and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;POSIX::floor&lt;/code&gt; and &lt;code&gt;POSIX::ceil&lt;/code&gt; functions will serve you better than will int().</source>
          <target state="translated">返回EXPR的整数部分。如果省略EXPR，则使用 &lt;code&gt;$_&lt;/code&gt; 。您不应该将此函数用于四舍五入：一种是因为它会向 &lt;code&gt;0&lt;/code&gt; 截断，另一种是因为浮点数的机器表示有时会产生违反直觉的结果。例如， &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; 生成-268而不是正确的-269；那是因为它实际上更像是-268.99999999999994394315658。通常， &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;POSIX::floor&lt;/code&gt; 和 &lt;code&gt;POSIX::ceil&lt;/code&gt; 函数会比int（）更好。</target>
        </trans-unit>
        <trans-unit id="dfa5ef7ea249ae1077fb57cf7217e12518dc83de" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt; , and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;POSIX::floor&lt;/code&gt; and &lt;code&gt;POSIX::ceil&lt;/code&gt; functions will serve you better than will int().</source>
          <target state="translated">返回EXPR的整数部分。如果省略EXPR，则使用 &lt;code&gt;$_&lt;/code&gt; 。您不应该将此函数用于四舍五入：一种是因为它会向 &lt;code&gt;0&lt;/code&gt; 截断，另一种是因为浮点数的机器表示有时会产生违反直觉的结果。例如， &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; 生成-268而不是正确的-269；那是因为它实际上更像是-268.99999999999994394315658。通常， &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;POSIX::floor&lt;/code&gt; 和 &lt;code&gt;POSIX::ceil&lt;/code&gt; 函数会比int（）更好。</target>
        </trans-unit>
        <trans-unit id="1383a246e6d34e5863de8dc2235891b42039056e" translate="yes" xml:space="preserve">
          <source>Returns the integer toward zero from the argument [C99].</source>
          <target state="translated">返回参数[C99]中向零的整数。</target>
        </trans-unit>
        <trans-unit id="16c734093958bc40ddded22a1e3739aa6b5e201d" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; , or &lt;code&gt;NULL&lt;/code&gt; if the hash entry does not contain an &lt;code&gt;SV*&lt;/code&gt; key.</source>
          <target state="translated">以 &lt;code&gt;SV*&lt;/code&gt; 返回密钥，如果哈希条目不包含 &lt;code&gt;SV*&lt;/code&gt; 密钥，则返回 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57286d3680e42c6fd1ee76f86624697c1c3e4dae" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; . Will create and return a temporary mortal &lt;code&gt;SV*&lt;/code&gt; if the hash entry contains only a &lt;code&gt;char*&lt;/code&gt; key.</source>
          <target state="translated">将密钥作为 &lt;code&gt;SV*&lt;/code&gt; 返回。如果哈希条目仅包含 &lt;code&gt;char*&lt;/code&gt; 键，则将创建并返回一个临时的 &lt;code&gt;SV*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1833fd9dff65195d16a1ebc8979c79da203a00f7" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; from the current position of the hash iterator. The return value will always be a mortal copy of the key. Also see &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">从哈希迭代器的当前位置以 &lt;code&gt;SV*&lt;/code&gt; 返回键。返回值将始终是密钥的致命副本。另请参见 &lt;code&gt;hv_iterinit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd09cc32c42bd53f61048e9ebb81223343deeeb0" translate="yes" xml:space="preserve">
          <source>Returns the key from the current position of the hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">从哈希迭代器的当前位置返回密钥。参见 &lt;code&gt;hv_iterinit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="613f3207f2ea6d917ddc3db1f409d97d7369fedf" translate="yes" xml:space="preserve">
          <source>Returns the key slot of the hash entry as a &lt;code&gt;char*&lt;/code&gt; value, doing any necessary dereferencing of possibly &lt;code&gt;SV*&lt;/code&gt; keys. The length of the string is placed in &lt;code&gt;len&lt;/code&gt; (this is a macro, so do</source>
          <target state="translated">返回散列条目的键槽作为 &lt;code&gt;char*&lt;/code&gt; 值，对可能的 &lt;code&gt;SV*&lt;/code&gt; 键进行任何必要的解引用。字符串的长度放在 &lt;code&gt;len&lt;/code&gt; 中（这是一个宏，所以</target>
        </trans-unit>
        <trans-unit id="f1d0f5c019ce3eb05a8b98cbb66a0e90c8d32353" translate="yes" xml:space="preserve">
          <source>Returns the label attached to a cop. The flags pointer may be set to &lt;code&gt;SVf_UTF8&lt;/code&gt; or 0.</source>
          <target state="translated">返回附加到警察的标签。标志指针可以设置为 &lt;code&gt;SVf_UTF8&lt;/code&gt; 或0。</target>
        </trans-unit>
        <trans-unit id="2ea273948872be379b7a1ea9390f0137218504b7" translate="yes" xml:space="preserve">
          <source>Returns the last encountered error as string. Pass it a true value to get the &lt;code&gt;Carp::longmess()&lt;/code&gt; output instead.</source>
          <target state="translated">以字符串形式返回最后遇到的错误。传递一个真实值以获取 &lt;code&gt;Carp::longmess()&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="028b8442d2b4f7335ece6103fe5456ee9609a42b" translate="yes" xml:space="preserve">
          <source>Returns the last error message generated by zlib.</source>
          <target state="translated">返回zlib产生的最后一条错误信息。</target>
        </trans-unit>
        <trans-unit id="12f5a1aed52002fee13903cd606de0d685254e32" translate="yes" xml:space="preserve">
          <source>Returns the latest version of this module available on CPAN.</source>
          <target state="translated">返回CPAN上该模块的最新版本。</target>
        </trans-unit>
        <trans-unit id="c039c10bf6f2af16bc45450d4afb9df7b68b222a" translate="yes" xml:space="preserve">
          <source>Returns the length in</source>
          <target state="translated">返回长度,单位为</target>
        </trans-unit>
        <trans-unit id="41a52612cbc7e2be685ec3cbf1a3dafe6b1f4a9f" translate="yes" xml:space="preserve">
          <source>Returns the length of the stash's effective name.</source>
          <target state="translated">返回stash的有效名称的长度。</target>
        </trans-unit>
        <trans-unit id="963569222dbb77b072cd4bbad2e88491ba58df87" translate="yes" xml:space="preserve">
          <source>Returns the length of the stash's name.</source>
          <target state="translated">返回储藏室名称的长度。</target>
        </trans-unit>
        <trans-unit id="89ec9309768f702c45b063f73c3c38472811452e" translate="yes" xml:space="preserve">
          <source>Returns the length of the string in the SV. Handles magic and type coercion and sets the UTF8 flag appropriately. See also &lt;code&gt;SvCUR&lt;/code&gt; , which gives raw access to the xpv_cur slot.</source>
          <target state="translated">返回SV中字符串的长度。处理魔术和强制类型，并适当设置UTF8标志。另请参见 &lt;code&gt;SvCUR&lt;/code&gt; ，它提供对xpv_cur插槽的原始访问。</target>
        </trans-unit>
        <trans-unit id="2df9f2e7b309d465f129ded466c81d5d06e108dd" translate="yes" xml:space="preserve">
          <source>Returns the length of the string which is in the SV. See &lt;code&gt;SvLEN&lt;/code&gt; .</source>
          <target state="translated">返回SV中字符串的长度。参见 &lt;code&gt;SvLEN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2effde579f3aaa3f8cf6fdafe4e1f5838fb8683" translate="yes" xml:space="preserve">
          <source>Returns the length that the decoded string would have without actually decoding it. This will return the same value as &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(decode_base64($str))&lt;/a&gt;&lt;/code&gt;, but should be more efficient.</source>
          <target state="translated">返回解码后的字符串在没有实际解码的情况下的长度。这将返回与 &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(decode_base64($str))&lt;/a&gt;&lt;/code&gt; 相同的值，但应该更有效。</target>
        </trans-unit>
        <trans-unit id="8a33baf9547a4472661c0afbec5744eecd89513a" translate="yes" xml:space="preserve">
          <source>Returns the length that the encoded string would have without actually encoding it. This will return the same value as &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(encode_base64($bytes))&lt;/a&gt;&lt;/code&gt;, but should be more efficient.</source>
          <target state="translated">返回编码的字符串在没有实际编码的情况下的长度。这将返回与 &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(encode_base64($bytes))&lt;/a&gt;&lt;/code&gt; 相同的值，但应该更有效。</target>
        </trans-unit>
        <trans-unit id="1fc6144d11b2a22ce5a6cbd0607959c33ca249d8" translate="yes" xml:space="preserve">
          <source>Returns the link as contents of &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; . Reciprocal to &lt;b&gt;parse()&lt;/b&gt;.</source>
          <target state="translated">返回链接作为 &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; 内容。互为&lt;b&gt;parse（）&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="988ee81ba1078c106143e337b9309d97a5306c83" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash but do not have a value associated to them. Thus if 'foo' is a &quot;hidden&quot; key of the %hash it will return false for both &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; tests.</source>
          <target state="translated">返回在受限哈希中合法但没有关联值的键列表。因此，如果'foo'是％hash的&amp;ldquo;隐藏&amp;rdquo;键，则对于已 &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; 测试，它都将返回false 。</target>
        </trans-unit>
        <trans-unit id="10e1d54e5a4be24e929ad91ea9a240f2f1515f46" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash. In the case of an unrestricted hash this is identical to calling keys(%hash).</source>
          <target state="translated">返回限制性哈希中合法的键的列表。在非限制性哈希的情况下,这与调用 keys(%hash)是一样的。</target>
        </trans-unit>
        <trans-unit id="c17722e7f3347f219bada8c0cf6e41454bd993e0" translate="yes" xml:space="preserve">
          <source>Returns the literal text of the &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;not ok&lt;/code&gt; status.</source>
          <target state="translated">返回 &lt;code&gt;ok&lt;/code&gt; 或 &lt;code&gt;not ok&lt;/code&gt; 状态的文字文本。</target>
        </trans-unit>
        <trans-unit id="ad7de00c063e5387a4ca0ed4f00b8f52b276e670" translate="yes" xml:space="preserve">
          <source>Returns the location of a Pod file, given a Pod/module/script name (like &quot;Foo::Bar&quot; or &quot;perlvar&quot; or &quot;perldoc&quot;), and an idea of what files/directories to look in. It searches according to the various options set by the accessors above. (For example, if the &lt;code&gt;inc&lt;/code&gt; attribute is on, as it is by default, then the perl @INC directories are implicitly added to the list of directories (if any) that you specify.)</source>
          <target state="translated">返回Pod文件的位置，给定Pod /模块/脚本名称（例如&amp;ldquo; Foo :: Bar&amp;rdquo;或&amp;ldquo; perlvar&amp;rdquo;或&amp;ldquo; perldoc&amp;rdquo;），并了解要查找的文件/目录。上面的访问器设置的各种选项。（例如，如果默认启用 &lt;code&gt;inc&lt;/code&gt; 属性，则将perl @INC目录隐式添加到您指定的目录列表（如果有）。）</target>
        </trans-unit>
        <trans-unit id="4ebd0614c6ffb9a2af844e2360967ef7bcb25b66" translate="yes" xml:space="preserve">
          <source>Returns the location of a pod document given a search directory and a module (e.g. &lt;code&gt;File::Find&lt;/code&gt; ) or script (e.g. &lt;code&gt;perldoc&lt;/code&gt; ) name.</source>
          <target state="translated">返回给定搜索目录和模块（例如 &lt;code&gt;File::Find&lt;/code&gt; ）或脚本（例如 &lt;code&gt;perldoc&lt;/code&gt; ）名称的pod文档的位置。</target>
        </trans-unit>
        <trans-unit id="5b1f274a82de40cbf58abadb14458c7f8a28f2f4" translate="yes" xml:space="preserve">
          <source>Returns the location of the SV in the string delimited by &lt;code&gt;big&lt;/code&gt; and &lt;code&gt;bigend&lt;/code&gt; . It returns &lt;code&gt;NULL&lt;/code&gt; if the string can't be found. The &lt;code&gt;sv&lt;/code&gt; does not have to be fbm_compiled, but the search will not be as fast then.</source>
          <target state="translated">返回SV在由 &lt;code&gt;big&lt;/code&gt; 和 &lt;code&gt;bigend&lt;/code&gt; 分隔的字符串中的位置。如果找不到该字符串，则返回 &lt;code&gt;NULL&lt;/code&gt; 。该 &lt;code&gt;sv&lt;/code&gt; 不必被fbm_compiled，但搜索不会那么快呢。</target>
        </trans-unit>
        <trans-unit id="64a8042ee65d8a3ae0a9e9f976fe072ccf40a831" translate="yes" xml:space="preserve">
          <source>Returns the make variant we're generating the Makefile for. This attempts to do some normalization on the information from %Config or the user.</source>
          <target state="translated">返回我们要生成Makefile的Make变量。它试图对来自%Config或用户的信息进行一些标准化处理。</target>
        </trans-unit>
        <trans-unit id="4e236569973d85c26d367dda953c500f8b575795" translate="yes" xml:space="preserve">
          <source>Returns the message-id of the &quot;current article&quot;.</source>
          <target state="translated">返回 &quot;当前文章 &quot;的消息ID。</target>
        </trans-unit>
        <trans-unit id="8659d6757518a828b16f4ac813a0e6c3cacd4f13" translate="yes" xml:space="preserve">
          <source>Returns the message-id of the article.</source>
          <target state="translated">返回文章的message-id。</target>
        </trans-unit>
        <trans-unit id="cb6c7941c0b111e87fefb5fc7cca4f11de5edce7" translate="yes" xml:space="preserve">
          <source>Returns the module name of the JSON serializer. This will either be &lt;a href=&quot;../../json/pp&quot;&gt;JSON::PP&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt;. Even if &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; is set, this will return &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; as further delegation is handled by the &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; module. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for details.</source>
          <target state="translated">返回JSON序列化器的模块名称。这将是&lt;a href=&quot;../../json/pp&quot;&gt;JSON :: PP&lt;/a&gt;或&lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt;。即使设置了 &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; ，由于进一步的委托由&lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt;模块处理，它也会返回&lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt;。有关详细信息，请参见&lt;a href=&quot;#ENVIRONMENT&quot;&gt;环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="601fe51433cdf65884cd2aaffc3a6c69698b7864" translate="yes" xml:space="preserve">
          <source>Returns the module name of the YAML serializer. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for details.</source>
          <target state="translated">返回YAML序列化器的模块名称。有关详细信息，请参见&lt;a href=&quot;#ENVIRONMENT&quot;&gt;环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d18f3bd27de976dd09a3782f7d7c5c4b440d263" translate="yes" xml:space="preserve">
          <source>Returns the most significant digit of the current status code. If a command is pending then &lt;code&gt;CMD_PENDING&lt;/code&gt; is returned.</source>
          <target state="translated">返回当前状态码的最高有效位。如果命令待处理，则返回 &lt;code&gt;CMD_PENDING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a108dd103a0a5cd8e6a4473612918a69face8b2f" translate="yes" xml:space="preserve">
          <source>Returns the mount type and flags for a specified mount point. A comma-separated string of mntent-&amp;gt;mnt_type (always &quot;system&quot; or &quot;user&quot;), then the mntent-&amp;gt;mnt_opts, where the first is always &quot;binmode&quot; or &quot;textmode&quot;.</source>
          <target state="translated">返回指定安装点的安装类型和标志。逗号分隔的mntent-&amp;gt; mnt_type字符串（总是&amp;ldquo; system&amp;rdquo;或&amp;ldquo; user&amp;rdquo;），然后是mntent-&amp;gt; mnt_opts，其中第一个始终是&amp;ldquo; binmode&amp;rdquo;或&amp;ldquo; textmode&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="09efdfb408434e477aded841b131fd9d43f9ac7d" translate="yes" xml:space="preserve">
          <source>Returns the mro linearisation for the given stash. By default, this will be whatever &lt;code&gt;mro_get_linear_isa_dfs&lt;/code&gt; returns unless some other MRO is in effect for the stash. The return value is a read-only AV*.</source>
          <target state="translated">返回给定存储的mro线性化。默认情况下，这将是 &lt;code&gt;mro_get_linear_isa_dfs&lt;/code&gt; 返回的结果，除非对该存储有效的其他一些MRO。返回值是只读AV *。</target>
        </trans-unit>
        <trans-unit id="dea494c6706252bebec4d7195db034a6c2309ab2" translate="yes" xml:space="preserve">
          <source>Returns the mtime of the test, in seconds from the epoch.</source>
          <target state="translated">返回测试的mtime,从时间点算起,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="a2184020dc9ac4a61ff4df0e43340602c3175d95" translate="yes" xml:space="preserve">
          <source>Returns the multiplicative inverse of &lt;code&gt;$x&lt;/code&gt; modulo &lt;code&gt;$mod&lt;/code&gt; . If</source>
          <target state="translated">返回 &lt;code&gt;$x&lt;/code&gt; 模 &lt;code&gt;$mod&lt;/code&gt; 的乘法逆。如果</target>
        </trans-unit>
        <trans-unit id="7190bd6c98a1fb828aaa401dc90fbc0af099715e" translate="yes" xml:space="preserve">
          <source>Returns the name of a lexical sub, otherwise &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回词 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 的名称，否则返回undef。</target>
        </trans-unit>
        <trans-unit id="67cb9b4002639ad8ccbea767d46c9c7470e80d8b" translate="yes" xml:space="preserve">
          <source>Returns the name of the class used for tracking individual tests. This class should either subclass from &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; or provide an identical interface.</source>
          <target state="translated">返回用于跟踪单个测试的类的名称。此类应为 &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; 子类，或提供相同的接口。</target>
        </trans-unit>
        <trans-unit id="4e0f387e3183348b4afeb859e07825cef057bc74" translate="yes" xml:space="preserve">
          <source>Returns the name of the current builder. Top level builders default to &lt;code&gt;$0&lt;/code&gt; (the name of the executable). Child builders are named via the &lt;code&gt;child&lt;/code&gt; method. If no name is supplied, will be named &quot;Child of $parent-&amp;gt;name&quot;.</source>
          <target state="translated">返回当前构建器的名称。顶级构建器默认为 &lt;code&gt;$0&lt;/code&gt; （可执行文件的名称）。子构建器通过 &lt;code&gt;child&lt;/code&gt; 方法命名。如果未提供名称，则将其命名为&amp;ldquo; $ parent-&amp;gt; name的子代&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="41b56c7efcd427fd3492d55c78d6c32c9077e684" translate="yes" xml:space="preserve">
          <source>Returns the name of the current working directory. See also &lt;a href=&quot;cwd&quot;&gt;Cwd&lt;/a&gt;.</source>
          <target state="translated">返回当前工作目录的名称。另请参阅&lt;a href=&quot;cwd&quot;&gt;Cwd&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baece99d59a060f3e4da17808e2b71ecf624ff08" translate="yes" xml:space="preserve">
          <source>Returns the name of the file on the server.</source>
          <target state="translated">返回服务器上文件的名称。</target>
        </trans-unit>
        <trans-unit id="8fdc36e986b937123029f6d748c89622624b61fb" translate="yes" xml:space="preserve">
          <source>Returns the name of the input file being read.</source>
          <target state="translated">返回正在读取的输入文件的名称。</target>
        </trans-unit>
        <trans-unit id="1fc1e8db08650ad957de971c64144c87c67a05b6" translate="yes" xml:space="preserve">
          <source>Returns the name of the last file stored on the server using the &lt;code&gt;STOU&lt;/code&gt; command.</source>
          <target state="translated">使用 &lt;code&gt;STOU&lt;/code&gt; 命令返回存储在服务器上的最后一个文件的名称。</target>
        </trans-unit>
        <trans-unit id="a2ee1f5da5c10654163e7e194521a4ddea7cd449" translate="yes" xml:space="preserve">
          <source>Returns the name of the output file being written.</source>
          <target state="translated">返回正在写入的输出文件的名称。</target>
        </trans-unit>
        <trans-unit id="3e47f5d703adcf47b0e9c112efd8ded3b018369e" translate="yes" xml:space="preserve">
          <source>Returns the name of the temporary directory created.</source>
          <target state="translated">返回创建的临时目录的名称。</target>
        </trans-unit>
        <trans-unit id="def4c500995e11bd7fc6da23c7bae31ef0d8faa4" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;*retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">返回字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中第一个字符的本机代码点，假定该字符串以UTF-8编码；在 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 的末尾 &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; 点发送到1 。 &lt;code&gt;*retlen&lt;/code&gt; 将设置为该字符的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="f543bf4c35cf24791ef8462c88410aaee329c4de" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">返回字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 中第一个字符的本机代码点，假定该字符串以UTF-8编码； &lt;code&gt;retlen&lt;/code&gt; 将设置为该字符的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="0f2afa6341a6574083567d5422a5df3ccc8875e1" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm (base</source>
          <target state="translated">返回自然对数(基数</target>
        </trans-unit>
        <trans-unit id="bac9d9894ddd9718f456f1063ac204406c45c4d2" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to the argument, according to the current rounding mode (see &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;) [C99].</source>
          <target state="translated">根据当前舍入模式（请参阅&lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;）[C99] ，返回最接近参数的整数。</target>
        </trans-unit>
        <trans-unit id="a6d03e57cd4567e9c5073f1d037dd6ee5948ea19" translate="yes" xml:space="preserve">
          <source>Returns the new position, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;</source>
          <target state="translated">返回新位置，否则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。返回零位置作为字符串 &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da5ebf02895ea09558fa52ddd689cb37cd02b884" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; thus &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="translated">返回新位置或失败时的未定义值。返回零位置作为字符串 &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; 因此， &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; 成功时返回true，失败时返回false，但是您仍然可以轻松确定新位置。</target>
        </trans-unit>
        <trans-unit id="33bae96f20220fca11d5d5a87f212bd820f0fc18" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; thus &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="translated">返回新位置或失败时的未定义值。返回零位置作为字符串 &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; 因此， &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; 成功时返回true，失败时返回false，但是您仍然可以轻松确定新位置。</target>
        </trans-unit>
        <trans-unit id="c9c7ecc40fd6af76f3ced9a4d4d799db79632915" translate="yes" xml:space="preserve">
          <source>Returns the next character from the input file attached to FILEHANDLE, or the undefined value at end of file or if there was an error (in the latter case &lt;code&gt;$!&lt;/code&gt; is set). If FILEHANDLE is omitted, reads from STDIN. This is not particularly efficient. However, it cannot be used by itself to fetch single characters without waiting for the user to hit enter. For that, try something more like:</source>
          <target state="translated">返回附加到FILEHANDLE的输入文件中的下一个字符，或者返回文件末尾的未定义值，或者返回错误（在后一种情况下，设置 &lt;code&gt;$!&lt;/code&gt; ）。如果省略FILEHANDLE，则从STDIN读取。这不是特别有效。但是，如果不等待用户按下Enter键，就无法单独使用它来获取单个字符。为此，请尝试更类似的方法：</target>
        </trans-unit>
        <trans-unit id="0ba81cb9a638e9d555d09818617f5dc9a9283715" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; 打开的目录的下一个目录条目。如果在列表上下文中使用，则返回目录中的所有其余条目。如果没有更多条目，则在标量上下文中返回未定义的值，在列表上下文中返回空列表。</target>
        </trans-unit>
        <trans-unit id="5148c8f92e23d2faa8c6a65ac6aee920f391f96f" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; 打开的目录的下一个目录条目。如果在列表上下文中使用，则返回目录中的所有其余条目。如果没有更多条目，则在标量上下文中返回未定义的值，在列表上下文中返回空列表。</target>
        </trans-unit>
        <trans-unit id="5211b758214a3e671cffde89772c624ecf18b64c" translate="yes" xml:space="preserve">
          <source>Returns the next representable floating point number after &lt;code&gt;x&lt;/code&gt; in the direction of &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; 之后沿 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; 方向的下一个可表示浮点数[C99]。</target>
        </trans-unit>
        <trans-unit id="95637d8a94c7b2c23f6a0b2531ccd52d6915ac3c" translate="yes" xml:space="preserve">
          <source>Returns the null list for the MacPerl application, since the concept is usually meaningless under Mac OS. But if you're using the MacPerl tool under MPW, it gives back $ENV{Commands} suitably split, as is done in :lib:ExtUtils:MM_Mac.pm.</source>
          <target state="translated">返回MacPerl应用程序的空列表,因为这个概念在Mac OS下通常没有意义。但如果你在 MPW 下使用 MacPerl 工具,它将返回 $ENV{Commands}适当拆分,就像 :lib:ExtUtils:MM_Mac.pm 所做的那样。</target>
        </trans-unit>
        <trans-unit id="11b0f8d8da906b843c8b694b9581488fdb8b5f27" translate="yes" xml:space="preserve">
          <source>Returns the number of UTF-8 characters between the UTF-8 pointers &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; .</source>
          <target state="translated">返回UTF-8指针 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 之间的UTF-8字符数。</target>
        </trans-unit>
        <trans-unit id="bb85472e3b77bee0934e39a40d445532d815833a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes actually read. On EOF it returns 0 and in the case of an error, -1.</source>
          <target state="translated">返回实际读取的字节数。EOF时返回0,如果出现错误,则返回-1。</target>
        </trans-unit>
        <trans-unit id="cae35ff2e723caccf4c8ada05d7f356476081286" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes beginning at &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which form a legal UTF-8 (or UTF-EBCDIC) encoded character, looking no further than &lt;code&gt;e - s&lt;/code&gt; bytes into &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. Returns 0 if the sequence starting at &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; through &lt;code&gt;e - 1&lt;/code&gt; is not well-formed UTF-8</source>
          <target state="translated">返回的字节开始于数 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 其形成合法UTF-8（或UTF-EBCDIC）编码的字符，查找没有比 &lt;code&gt;e - s&lt;/code&gt; 字节到 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 。如果从 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;e - 1&lt;/code&gt; 的序列格式不正确的UTF-8，则返回0</target>
        </trans-unit>
        <trans-unit id="75174ddfd486232efb60d582a8b83b5c3b742cc2" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in the converted string (not including the spares).</source>
          <target state="translated">返回转换后的字符串的字节数(不包括备用字节)。</target>
        </trans-unit>
        <trans-unit id="88c11762c84d1f08358d14b45267f8562d2a11aa" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in the converted string.</source>
          <target state="translated">返回转换后的字符串的字节数。</target>
        </trans-unit>
        <trans-unit id="3add76e354d1acc7e90baad934359228e1bbd96f" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read before any &amp;lt;CRLF&amp;gt; translation.</source>
          <target state="translated">返回任何&amp;lt;CRLF&amp;gt;转换之前读取的字节数。</target>
        </trans-unit>
        <trans-unit id="38304001d06d1583304e8a4b127b5889da6a60ac" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read so far.</source>
          <target state="translated">返回目前读取的字节数。</target>
        </trans-unit>
        <trans-unit id="c6d00c06d1d76be8e8f1893de5ecccb4b142785a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written before any &amp;lt;CRLF&amp;gt; translation.</source>
          <target state="translated">返回在任何&amp;lt;CRLF&amp;gt;转换之前写入的字节数。</target>
        </trans-unit>
        <trans-unit id="c877b0d9321a27659b38a0779f16c4d6f7be50bc" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in the string in an SV, counting wide UTF-8 bytes as a single character. Handles magic and type coercion.</source>
          <target state="translated">返回SV中字符串的字符数,将宽UTF-8字节算作一个字符。处理魔术和类型强制。</target>
        </trans-unit>
        <trans-unit id="0e7dc8ec42d520f8664de7d9c8a5ab07b4bf4e10" translate="yes" xml:space="preserve">
          <source>Returns the number of digest bits for this object. The values are 160, 224, 256, 384, 512, 224, and 256 for SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224 and SHA-512/256, respectively.</source>
          <target state="translated">返回此对象的摘要位数。SHA-1、SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224和SHA-512/256的值分别是160、224、256、384、512、224和256。</target>
        </trans-unit>
        <trans-unit id="58e5482055ad776becff57fabacedfac48285db7" translate="yes" xml:space="preserve">
          <source>Returns the number of digits in the decimal representation of the number. In list context, returns the length of the integer and fraction part. For BigInt's, the length of the fraction part will always be 0.</source>
          <target state="translated">返回数字的十进制表示中的位数。在列表上下文中,返回整数和分数部分的长度。对于BigInt's,分数部分的长度总是0。</target>
        </trans-unit>
        <trans-unit id="b77d93ca6d9bb32f039ad2172d039d9679dbe239" translate="yes" xml:space="preserve">
          <source>Returns the number of distinct names defined in the pattern used for the last successful match.</source>
          <target state="translated">返回最后一次成功匹配的模式中定义的不同名称的数量。</target>
        </trans-unit>
        <trans-unit id="2d4beed58f26f66976d2d26980a8559d762abfa2" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the array.</source>
          <target state="translated">返回数组中元素的数量。</target>
        </trans-unit>
        <trans-unit id="df16e722c3137a93ad268e13ef0e85e15fe5d5c5" translate="yes" xml:space="preserve">
          <source>Returns the number of files read in scalar context, and a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects in list context.</source>
          <target state="translated">返回在标量上下文中读取的文件数，以及列表上下文中的 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 对象的列表。</target>
        </trans-unit>
        <trans-unit id="e76d0167eb4dc83e86b7efc4472b19864a8c6d5c" translate="yes" xml:space="preserve">
          <source>Returns the number of handles that the object will check for when one of the &lt;code&gt;can_&lt;/code&gt; methods is called or the object is passed to the &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; static method.</source>
          <target state="translated">返回调用 &lt;code&gt;can_&lt;/code&gt; 方法之一或将对象传递给 &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 静态方法时对象将检查的句柄数。</target>
        </trans-unit>
        <trans-unit id="fb985a707fab944f8c24283ab158416ea1a522ac" translate="yes" xml:space="preserve">
          <source>Returns the number of hash buckets that happen to be in use. This function is wrapped by the macro &lt;code&gt;HvFILL&lt;/code&gt; .</source>
          <target state="translated">返回碰巧正在使用的哈希桶的数量。此函数由宏 &lt;code&gt;HvFILL&lt;/code&gt; 包装。</target>
        </trans-unit>
        <trans-unit id="4c36f861ad3db4d659e52c582865413664670812" translate="yes" xml:space="preserve">
          <source>Returns the number of items still in the queue. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the queue has been ended (see below), and there are no more items in the queue.</source>
          <target state="translated">返回仍在队列中的项目数。如果队列已结束（请参见下文），并且队列中没有其他项，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d00dee940b5a7f851e498c2a31eab039aa0c0ffe" translate="yes" xml:space="preserve">
          <source>Returns the number of iterations.</source>
          <target state="translated">Returns the number of iterations.</target>
        </trans-unit>
        <trans-unit id="0dd115724bfc059eb48f89636817e70be2f7297b" translate="yes" xml:space="preserve">
          <source>Returns the number of messages in the mailbox. However if there are no messages on the server the string &lt;code&gt;&quot;0E0&quot;&lt;/code&gt; will be returned. This is will give a true value in a boolean context, but zero in a numeric context.</source>
          <target state="translated">返回邮箱中的邮件数。但是，如果服务器上没有消息，则将返回字符串 &lt;code&gt;&quot;0E0&quot;&lt;/code&gt; 。在布尔上下文中这将给出一个真值，而在数字上下文中这将给出零。</target>
        </trans-unit>
        <trans-unit id="2bb802c993b1565f12edfe1942e602faebed7b94" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="translated">返回自系统认为适合于纪元的任何时间以来的非suitable秒数，适用于馈给 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 。在大多数系统上，纪元是1970年1月1日世界标准时间00:00:00；一个明显的例外是Mac OS Classic，它在当前当地时区使用1904年1月1日00:00:00。</target>
        </trans-unit>
        <trans-unit id="662bde2620f3ee7619d37225b183a8442b4c6d25" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="translated">返回自系统认为适合于纪元的任何时间以来的非suitable秒数，适用于馈给 &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 。在大多数系统上，纪元是1970年1月1日世界标准时间00:00:00；一个明显的例外是Mac OS Classic，它在当前当地时区使用1904年1月1日00:00:00。</target>
        </trans-unit>
        <trans-unit id="82a0291a92a69c8a33c62fd82a61c84e1ff9b325" translate="yes" xml:space="preserve">
          <source>Returns the number of octets from $buffer that have been successfully saved to be returned on future FILL/READ calls. Optional. Default is to push data into a temporary layer above this one.</source>
          <target state="translated">返回从$buffer中成功保存的八位数,这些八位数将在未来的FILL/READ调用中返回。可选。缺省值是将数据推送到本层之上的临时层。</target>
        </trans-unit>
        <trans-unit id="7ab52c3d733611d3fabb7545c94df797da439f07" translate="yes" xml:space="preserve">
          <source>Returns the number of octets from $buffer that have been successfully written.</source>
          <target state="translated">返回$buffer中被成功写入的八位数。</target>
        </trans-unit>
        <trans-unit id="cf5c8b3845cd4fdd2e0cb4812ccb86f72bbe2512" translate="yes" xml:space="preserve">
          <source>Returns the number of octets placed in $buffer (must be less than or equal to $len). Optional. Default is to use FILL instead.</source>
          <target state="translated">返回放置在$buffer中的字节数(必须小于或等于$len)。可选。缺省情况下,使用FILL代替。</target>
        </trans-unit>
        <trans-unit id="fee7858afbaff7dc16cb9b958a05d79fc3c147ad" translate="yes" xml:space="preserve">
          <source>Returns the number of parsers. Parsers are removed from the multiplexer when their input is exhausted.</source>
          <target state="translated">返回解析器的数量。当解析器的输入耗尽时,解析器将从多路复用器中移除。</target>
        </trans-unit>
        <trans-unit id="4268fbc1b2eeb24c8765b497975f451cd1c4a2c1" translate="yes" xml:space="preserve">
          <source>Returns the number of processes waiting for the semaphore &lt;code&gt;SEM&lt;/code&gt; to become greater than its current value</source>
          <target state="translated">返回等待信号量 &lt;code&gt;SEM&lt;/code&gt; 大于其当前值的进程数</target>
        </trans-unit>
        <trans-unit id="88269404adb70353c659aa28cf6b5e21e2bd28d4" translate="yes" xml:space="preserve">
          <source>Returns the number of processes waiting for the semaphore &lt;code&gt;SEM&lt;/code&gt; to become zero.</source>
          <target state="translated">返回等待信号量 &lt;code&gt;SEM&lt;/code&gt; 变为零的进程数。</target>
        </trans-unit>
        <trans-unit id="881f9b9bc1fd39a10f83e683ca82a8d742aeed5f" translate="yes" xml:space="preserve">
          <source>Returns the number of tests for a given test suite result.</source>
          <target state="translated">Returns the number of tests for a given test suite result.</target>
        </trans-unit>
        <trans-unit id="813c8498e317e592cb3735e49115edd07c9ad543" translate="yes" xml:space="preserve">
          <source>Returns the number of tests planned, according to the plan. For example, a plan of '1..17' will mean that 17 tests were planned.</source>
          <target state="translated">根据计划,返回计划的测试次数。例如,'1...17'的计划意味着计划进行17次测试。</target>
        </trans-unit>
        <trans-unit id="3f62a51b7d445c7479e59cd7cd311363e35b9b16" translate="yes" xml:space="preserve">
          <source>Returns the number of tests planned. For example, a plan of &lt;code&gt;1..17&lt;/code&gt; will cause this method to return '17'.</source>
          <target state="translated">返回计划的测试数。例如，计划 &lt;code&gt;1..17&lt;/code&gt; 将导致此方法返回&amp;ldquo; 17&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="828b69f875f906af59cfebfa2f9d766028bed463" translate="yes" xml:space="preserve">
          <source>Returns the number of tests which actually were run. Hopefully this will match the number of &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt; .</source>
          <target state="translated">返回实际运行的测试数。希望这将与 &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt; 的数量匹配。</target>
        </trans-unit>
        <trans-unit id="1c1af1dcee34c4b6dcddf996ebcb65d0d656b355" translate="yes" xml:space="preserve">
          <source>Returns the number of the decimal digits in the number. The output is a Perl scalar.</source>
          <target state="translated">返回数字中小数点的位数。输出是一个Perl标量。</target>
        </trans-unit>
        <trans-unit id="5042b0a93a204c5a793cbaaf65ebaf49f13dc1b7" translate="yes" xml:space="preserve">
          <source>Returns the number of the test, even if the original TAP output did not supply that number.</source>
          <target state="translated">返回测试的编号,即使最初的TAP输出没有提供该编号。</target>
        </trans-unit>
        <trans-unit id="a517ce082141e4f0cc6c00dea94c9725cf43fa5c" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written to &lt;code&gt;$buffer&lt;/code&gt; , zero if eof or a negative number on error.</source>
          <target state="translated">返回写入 &lt;code&gt;$buffer&lt;/code&gt; 的未压缩字节数，如果eof 返回零，否则返回负数。</target>
        </trans-unit>
        <trans-unit id="ba3197c4fab1aea1beec1624e01489e167b47d9d" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written, or &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if unsuccessful.</source>
          <target state="translated">返回写入的未压缩字节数，如果失败则返回 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9ffb96c993f53ccb8f1f615987845984c3b8222" translate="yes" xml:space="preserve">
          <source>Returns the number of unread chars.</source>
          <target state="translated">返回未读字符的数量。</target>
        </trans-unit>
        <trans-unit id="f804bf0367ece8be05ac406880d3ac3ef13d10c3" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the first character of EXPR. If EXPR is an empty string, returns 0. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . (Note</source>
          <target state="translated">返回EXPR的第一个字符的数值。如果EXPR为空字符串，则返回0。如果省略EXPR，则使用 &lt;code&gt;$_&lt;/code&gt; 。（注意</target>
        </trans-unit>
        <trans-unit id="fe48d260c4a1908d637c80ad7270fc55e5eff63a" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the protocol being used on the socket, if known. If the protocol is unknown, as with an AF_UNIX socket, zero is returned.</source>
          <target state="translated">如果已知,返回套接字上使用的协议的数字。如果协议未知,就像AF_UNIX套接字一样,返回0。</target>
        </trans-unit>
        <trans-unit id="76939a93dfaa37bd7042a86840e76339b42c8f57" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the socket domain type. For example, for an AF_INET socket the value of &amp;amp;AF_INET will be returned.</source>
          <target state="translated">返回套接字域类型的数字。例如，对于AF_INET套接字，将返回＆AF_INET的值。</target>
        </trans-unit>
        <trans-unit id="0d4ad4d31c2549368486e5f63628667ff1fcafee" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the socket type. For example, for a SOCK_STREAM socket the value of &amp;amp;SOCK_STREAM will be returned.</source>
          <target state="translated">返回套接字类型的数字。例如，对于SOCK_STREAM套接字，将返回＆SOCK_STREAM的值。</target>
        </trans-unit>
        <trans-unit id="02715cdde7577d8ebcd7275003732bf58eb9d020" translate="yes" xml:space="preserve">
          <source>Returns the numerical product of all the elements in &lt;code&gt;@list&lt;/code&gt; . If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;1&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;@list&lt;/code&gt; 中所有元素的数值积。如果 &lt;code&gt;@list&lt;/code&gt; 为空，则返回 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14e18a0badca7cf503234b27166d85615736adc0" translate="yes" xml:space="preserve">
          <source>Returns the numerical sum of all the elements in &lt;code&gt;@list&lt;/code&gt; . For backwards compatibility, if &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">返回 &lt;code&gt;@list&lt;/code&gt; 中所有元素的数值总和。为了向后兼容，如果 &lt;code&gt;@list&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3831814d8a8e59012333ac1ed83f5becc9ec75d" translate="yes" xml:space="preserve">
          <source>Returns the object as a scalar. This will lose some data if the object cannot be represented by a normal Perl scalar (integer or float), so use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; or &lt;a href=&quot;#as_float()&quot;&gt;as_float()&lt;/a&gt; instead.</source>
          <target state="translated">以标量形式返回对象。如果对象不能用普通的Perl标量（整数或浮点数）表示，则会丢失一些数据，因此请改用&lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int（）&lt;/a&gt;或&lt;a href=&quot;#as_float()&quot;&gt;as_float（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfa388f66b6e4485adca42c1ebd6b3383a26f5a6" translate="yes" xml:space="preserve">
          <source>Returns the offset in the bottom pad of the lex or the fake lex. cv is the CV in which to start the search, and seq is the current cop_seq to match against. If warn is true, print appropriate warnings. The out_* vars return values, and so are pointers to where the returned values should be stored. out_capture, if non-null, requests that the innermost instance of the lexical is captured; out_name is set to the innermost matched pad name or fake pad name; out_flags returns the flags normally associated with the PARENT_FAKELEX_FLAGS field of a fake pad name.</source>
          <target state="translated">cv是开始搜索的CV,seq是当前要匹配的cop_seq。如果 warn 为真,则打印相应的警告。out_*变量返回值,因此是指向返回值应该存储在哪里的指针。out_capture,如果非空,则请求捕获词库的最内层实例;out_name设置为最内层匹配的垫名或假垫名;out_flags返回通常与假垫名的PARENT_FAKELEX_FLAGS字段相关联的标志。</target>
        </trans-unit>
        <trans-unit id="71384b7d8016cb7d1aff03eeb51e237ce1600ed5" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; search left off for the variable in question (&lt;code&gt;$_&lt;/code&gt; is used when the variable is not specified). Note that 0 is a valid match offset. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="translated">返回有关变量最后一次 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; 搜索的偏移量（未指定变量时使用 &lt;code&gt;$_&lt;/code&gt; ）。请注意，0是有效的匹配偏移量。 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 表示搜索位置已重置（通常是由于匹配失败，但也可能是因为尚未在标量上运行任何匹配）。</target>
        </trans-unit>
        <trans-unit id="66cc4dc5054d673c3da8a7081460cafa3e4cf176" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; search left off for the variable in question (&lt;code&gt;$_&lt;/code&gt; is used when the variable is not specified). Note that 0 is a valid match offset. &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="translated">返回有关变量最后一次 &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; 搜索的偏移量（未指定变量时使用 &lt;code&gt;$_&lt;/code&gt; ）。请注意，0是有效的匹配偏移量。 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 表示搜索位置已重置（通常是由于匹配失败，但也可能是因为尚未在标量上运行任何匹配）。</target>
        </trans-unit>
        <trans-unit id="783e80c8529244f11ec8f9f07c22e72429a89029" translate="yes" xml:space="preserve">
          <source>Returns the original line of text which was parsed.</source>
          <target state="translated">返回被解析的原始文本行。</target>
        </trans-unit>
        <trans-unit id="72fc8546da5a908dbc3796e28a45b07488c75616" translate="yes" xml:space="preserve">
          <source>Returns the output filehandle object.</source>
          <target state="translated">返回输出文件柄对象。</target>
        </trans-unit>
        <trans-unit id="60430b499b4b64b22304735760bb5727bfef14af" translate="yes" xml:space="preserve">
          <source>Returns the package name of a stash, or NULL if &lt;code&gt;stash&lt;/code&gt; isn't a stash. See &lt;code&gt;SvSTASH&lt;/code&gt; , &lt;code&gt;CvSTASH&lt;/code&gt; .</source>
          <target state="translated">返回存储的软件包名称，如果 &lt;code&gt;stash&lt;/code&gt; 不是存储，则返回NULL 。参见 &lt;code&gt;SvSTASH&lt;/code&gt; 和 &lt;code&gt;CvSTASH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9fff387ed8c8cc9f10b8ce139430dc3f6589c9c" translate="yes" xml:space="preserve">
          <source>Returns the packed sockaddr address of the other end of the SOCKET connection.</source>
          <target state="translated">返回SOCKET连接另一端的打包sockaddr地址。</target>
        </trans-unit>
        <trans-unit id="89b4231ee691a1a4005bb409d80fced81b7744e2" translate="yes" xml:space="preserve">
          <source>Returns the packed sockaddr address of this end of the SOCKET connection, in case you don't know the address because you have several different IPs that the connection might have come in on.</source>
          <target state="translated">Returns the packed sockaddr address of this end of the SOCKET connection,case you don't know the address because you have several different IPs that the connection might have come in on.</target>
        </trans-unit>
        <trans-unit id="c0667351ad0e63a57bb566abac7473bf0fcb555e" translate="yes" xml:space="preserve">
          <source>Returns the pad name as a mortal SV.</source>
          <target state="translated">返回垫子名称为凡人SV。</target>
        </trans-unit>
        <trans-unit id="30f16ac7990a07e134fd7ccd455f37484319b0c2" translate="yes" xml:space="preserve">
          <source>Returns the parent &lt;code&gt;Test::Builder&lt;/code&gt; instance, if any. Only used with child builders for nested TAP.</source>
          <target state="translated">返回父 &lt;code&gt;Test::Builder&lt;/code&gt; 实例（如果有）。仅与子生成器一起用于嵌套TAP。</target>
        </trans-unit>
        <trans-unit id="b3e471fd4c24036dd84d6c7f3be3ccbce8312808" translate="yes" xml:space="preserve">
          <source>Returns the parent OP of o, if it has a parent. Returns NULL otherwise. This function is only available on perls built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; .</source>
          <target state="translated">如果有父级，则返回o的父级OP。否则返回NULL。此功能仅在使用-DPERL_OP_PARENT构建的 &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b72ed6ea351fa7a3d9c61ea32093d26bc16168a" translate="yes" xml:space="preserve">
          <source>Returns the path name to the file on the server which contains the specified message.</source>
          <target state="translated">返回服务器上包含指定信息的文件的路径名。</target>
        </trans-unit>
        <trans-unit id="dec3c6352306cfa9beb43e8c29b31607e59b37c0" translate="yes" xml:space="preserve">
          <source>Returns the pathanme to the fifo at the peer end</source>
          <target state="translated">将路径返回给对等端的fiftho。</target>
        </trans-unit>
        <trans-unit id="4a63db9f3e3139732db96feb937992356457415d" translate="yes" xml:space="preserve">
          <source>Returns the pathname to the fifo at the local end</source>
          <target state="translated">返回本地端的fiftho路径名。</target>
        </trans-unit>
        <trans-unit id="f8304c2725119f232b821921ec287a53510a44d3" translate="yes" xml:space="preserve">
          <source>Returns the process id of the last process that performed an operation on the semaphore &lt;code&gt;SEM&lt;/code&gt; .</source>
          <target state="translated">返回对信号量 &lt;code&gt;SEM&lt;/code&gt; 执行操作的最后一个进程的进程ID 。</target>
        </trans-unit>
        <trans-unit id="a30abfb715705790f2643fb7d63590be70980c30" translate="yes" xml:space="preserve">
          <source>Returns the process id of the parent process.</source>
          <target state="translated">返回父进程的进程ID。</target>
        </trans-unit>
        <trans-unit id="a24e95431b32943074e6b0e7739f39e159b654d8" translate="yes" xml:space="preserve">
          <source>Returns the process identifier. Identical to Perl's builtin variable &lt;code&gt;$$&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24PID&quot;&gt;$PID in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回进程标识符。与Perl的内置变量 &lt;code&gt;$$&lt;/code&gt; 相同，请参见&lt;a href=&quot;perlvar#%24PID&quot;&gt;perlvar中的$ PID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b236461eeaca748a2b3ad95de81116a2fe96d741" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, $_ is used.</source>
          <target state="translated">以字符串形式返回函数的原型（如果函数没有原型，则返回 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ）。FUNCTION是对要检索其原型的函数的引用或名称。如果省略FUNCTION，则使用$ _。</target>
        </trans-unit>
        <trans-unit id="eb14b93e077b170f79f45700e7bb8c3b8c795487" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, $_ is used.</source>
          <target state="translated">以字符串形式返回函数的原型（如果函数没有原型，则返回 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ）。FUNCTION是对要检索其原型的函数的引用或名称。如果省略FUNCTION，则使用$ _。</target>
        </trans-unit>
        <trans-unit id="a434e75a0357a748778c7ebac461e4592d53da12" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's IV slot, without checks or conversions. Only use when you are sure SvIOK is true. See also &lt;code&gt;SvIV()&lt;/code&gt; .</source>
          <target state="translated">返回SV的IV插槽中的原始值，而不进行检查或转换。仅在确定SvIOK为true时使用。另请参见 &lt;code&gt;SvIV()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f4e9edd1be6b65ecaf809ad87d2118fc29fbe3c" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's NV slot, without checks or conversions. Only use when you are sure SvNOK is true. See also &lt;code&gt;SvNV()&lt;/code&gt; .</source>
          <target state="translated">返回SV的NV插槽中的原始值，而不进行检查或转换。仅在确定SvNOK为真时使用。另请参见 &lt;code&gt;SvNV()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6dd8ebb6b0d5ad2aae103bba8da84b75a8ffa52" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's UV slot, without checks or conversions. Only use when you are sure SvIOK is true. See also &lt;code&gt;SvUV()&lt;/code&gt; .</source>
          <target state="translated">返回SV的UV插槽中的原始值，而不进行检查或转换。仅在确定SvIOK为true时使用。另请参见 &lt;code&gt;SvUV()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94b7d2f8ba8604b5f4a41178258115bbfa2a44d6" translate="yes" xml:space="preserve">
          <source>Returns the realclean_subdirs target. This is used by the realclean target to call realclean on any subdirectories which contain Makefiles.</source>
          <target state="translated">返回realclean_subdirs目标。这个目标被realclean target用来调用包含Makefiles的子目录的realclean。</target>
        </trans-unit>
        <trans-unit id="4ac58687ff93e9e124997c224255653c7d53d34d" translate="yes" xml:space="preserve">
          <source>Returns the reference address of a reference $obj. If $obj is not a reference, returns $obj.</source>
          <target state="translated">返回一个引用$obj的引用地址,如果$obj不是引用,则返回$obj。如果$obj不是引用,返回$obj。</target>
        </trans-unit>
        <trans-unit id="cfdfe21321198d76b312eaf4cebc6dd9147bcc57" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the FQDN after the</source>
          <target state="translated">返回FQDN的剩余部分。</target>
        </trans-unit>
        <trans-unit id="691ad0a16b9216b6ca373d7fe2f48a065eda5988" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in microseconds, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if an error occurred.</source>
          <target state="translated">返回警报中的剩余时间（以微秒为单位）；如果发生错误，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="411816d1a113ef6da9e977f72dfb94f0b749f7ac" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in seconds, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if an error occurred.</source>
          <target state="translated">以秒为单位返回警报中的剩余时间，如果发生错误，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="934d3c76d9239f8ba316060557ce7e19d1235609" translate="yes" xml:space="preserve">
          <source>Returns the result of adding OBJ2 to OBJ1.</source>
          <target state="translated">返回在OBJ1上添加OBJ2的结果。</target>
        </trans-unit>
        <trans-unit id="0985e11191ccc8ef75f712db00960e57ec19eb9d" translate="yes" xml:space="preserve">
          <source>Returns the result of dividing OBJ1 by OBJ2 and truncating the result to an integer.</source>
          <target state="translated">返回OBJ1除以OBJ2并将结果截断为整数的结果。</target>
        </trans-unit>
        <trans-unit id="ede343da45a3982e8cca0190748b0cbeaa826658" translate="yes" xml:space="preserve">
          <source>Returns the result of multiplying OBJ2 and OBJ1.</source>
          <target state="translated">返回OBJ2和OBJ1相乘的结果。</target>
        </trans-unit>
        <trans-unit id="6fdfa3ad313771603cd096432bfa11331e25b9ea" translate="yes" xml:space="preserve">
          <source>Returns the result of subtracting OBJ2 by OBJ1. If &lt;code&gt;flag&lt;/code&gt; is false or omitted, OBJ1 might be modified. If &lt;code&gt;flag&lt;/code&gt; is true, OBJ2 might be modified.</source>
          <target state="translated">返回OBJ1减去OBJ2的结果。如果 &lt;code&gt;flag&lt;/code&gt; 为false或省略，则可能会修改OBJ1。如果 &lt;code&gt;flag&lt;/code&gt; 为true，则可以修改OBJ2。</target>
        </trans-unit>
        <trans-unit id="2f75492cf713678a79f0a1d5e57aa692c5a28a64" translate="yes" xml:space="preserve">
          <source>Returns the result of the last call to the &lt;code&gt;BLOCK&lt;/code&gt; . If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. If &lt;code&gt;@list&lt;/code&gt; only contains one element then that element is returned and &lt;code&gt;BLOCK&lt;/code&gt; is not executed.</source>
          <target state="translated">返回对 &lt;code&gt;BLOCK&lt;/code&gt; 的最后一次调用的结果。如果 &lt;code&gt;@list&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。如果 &lt;code&gt;@list&lt;/code&gt; 仅包含一个元素，则返回该元素，并且不执行 &lt;code&gt;BLOCK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd23a6b58f73aa5d163a67f87e6c7280edfa788a" translate="yes" xml:space="preserve">
          <source>Returns the revision number of UTS #10 this module consults, that should correspond with the DUCET incorporated.</source>
          <target state="translated">返回这个模块所参考的UTS #10的修订号,它应该与纳入的DUCET相对应。</target>
        </trans-unit>
        <trans-unit id="cdbb628bb09e88629a54dd3f1600b416756da742" translate="yes" xml:space="preserve">
          <source>Returns the root op (i.e. an object in the appropriate B::OP-derived class) of the main part of the Perl program.</source>
          <target state="translated">返回Perl程序主体部分的根运算(即在适当的B::OP派生类中的一个对象)。</target>
        </trans-unit>
        <trans-unit id="f08858eb52cbd19872dd2a91cd76cd7365cadae6" translate="yes" xml:space="preserve">
          <source>Returns the shared memory identifier.</source>
          <target state="translated">返回共享内存标识符。</target>
        </trans-unit>
        <trans-unit id="9103bc997591b4f276dae9dcd284ec32253cd98d" translate="yes" xml:space="preserve">
          <source>Returns the sibling of o, or NULL if there is no sibling</source>
          <target state="translated">返回o的兄弟姐妹,如果没有兄弟姐妹,则返回NULL。</target>
        </trans-unit>
        <trans-unit id="9ba0588cfc9bf2485932a5a79df24f172279e9c6" translate="yes" xml:space="preserve">
          <source>Returns the sine of EXPR (expressed in radians). If EXPR is omitted, returns sine of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">返回EXPR的正弦值（以弧度表示）。如果省略EXPR，则返回 &lt;code&gt;$_&lt;/code&gt; 正弦值。</target>
        </trans-unit>
        <trans-unit id="13b988b656f88a25d6b8534b212c52399ee80bc3" translate="yes" xml:space="preserve">
          <source>Returns the size in bytes for the given file as stored on the remote server.</source>
          <target state="translated">返回存储在远程服务器上的指定文件的字节数。</target>
        </trans-unit>
        <trans-unit id="18e15d217df6a17c8d97da5665c9189954385074" translate="yes" xml:space="preserve">
          <source>Returns the size of the string buffer in the SV, not including any part attributable to &lt;code&gt;SvOOK&lt;/code&gt; . See &lt;code&gt;SvCUR&lt;/code&gt; .</source>
          <target state="translated">返回SV中字符串缓冲区的大小，不包括 &lt;code&gt;SvOOK&lt;/code&gt; 的任何部分。参见 &lt;code&gt;SvCUR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="deff1a1ce13a811d24a68718da12a4011d78ad85" translate="yes" xml:space="preserve">
          <source>Returns the smallest part of the FQDN which can be used to identify the host.</source>
          <target state="translated">返回FQDN的最小部分,它可以用来识别主机。</target>
        </trans-unit>
        <trans-unit id="52ea7d106b3348445ad7c6d489849aceafa81ac3" translate="yes" xml:space="preserve">
          <source>Returns the stack size for a particular thread. A return value of zero indicates the system default stack size was used for the thread.</source>
          <target state="translated">返回特定线程的堆栈大小。返回值为0时表示该线程使用了系统默认的堆栈大小。</target>
        </trans-unit>
        <trans-unit id="6376883dea84f50be2bb934689fe6bef04f6d0f7" translate="yes" xml:space="preserve">
          <source>Returns the starting op of the main part of the Perl program.</source>
          <target state="translated">返回Perl程序主要部分的起始操作。</target>
        </trans-unit>
        <trans-unit id="d3065df28d2b23358010686a7550749e685f79ba" translate="yes" xml:space="preserve">
          <source>Returns the stash of the CV. A stash is the symbol table hash, containing the package-scoped variables in the package where the subroutine was defined. For more information, see &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">返回CV的存储。存储是符号表哈希，包含定义了子例程的包中包范围的变量。有关更多信息，请参见&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1f0bb6740de7587d6844e1f412c95f92f304e1d" translate="yes" xml:space="preserve">
          <source>Returns the stash of the SV.</source>
          <target state="translated">返回SV的储藏。</target>
        </trans-unit>
        <trans-unit id="f966e8a880ea7511ad99a930a5bdfda30c867abe" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values in the list, subject to the configuration options below. The values will be named &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">根据以下配置选项，返回列表中值的字符串化形式。这些值将命名为 &lt;code&gt;$VAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd93cdf43d7b00945abd54f2f9268dfbe9432751" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values stored in the object (preserving the order in which they were supplied to &lt;code&gt;new&lt;/code&gt; ), subject to the configuration options below. In a list context, it returns a list of strings corresponding to the supplied values.</source>
          <target state="translated">返回存储在对象中的值的字符串形式（保留将它们提供给 &lt;code&gt;new&lt;/code&gt; 的顺序），但要遵循以下配置选项。在列表上下文中，它返回与提供的值相对应的字符串列表。</target>
        </trans-unit>
        <trans-unit id="6ebec182c33fde665bf986502917cab4add7ec8a" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Benchmark times as a Benchmark object suitable for passing to timestr().</source>
          <target state="translated">返回两个Benchmark时间之和,作为Benchmark对象,适合传递给 timestr()。</target>
        </trans-unit>
        <trans-unit id="f6822f634825c2fc618e64dda74ca77d744f1c2a" translate="yes" xml:space="preserve">
          <source>Returns the system identifier for the semaphore set.</source>
          <target state="translated">返回旗语集的系统标识。</target>
        </trans-unit>
        <trans-unit id="cb6c1ef855e52f1907c90fb23a471aeeec576f7e" translate="yes" xml:space="preserve">
          <source>Returns the system message queue identifier.</source>
          <target state="translated">返回系统消息队列标识符。</target>
        </trans-unit>
        <trans-unit id="00b03ab234d7468f6beb3d969a96580e7b637c7a" translate="yes" xml:space="preserve">
          <source>Returns the test plan, if found.</source>
          <target state="translated">如果找到,返回测试计划。</target>
        </trans-unit>
        <trans-unit id="0abaf4d3a631432f2373c928cd0eeac33b04645f" translate="yes" xml:space="preserve">
          <source>Returns the tests for a given generation. This is a hashref or a hash, depending on context called. The keys to the hash are the individual test names and the value is a hashref with various interesting values. Each k/v pair might resemble something like this:</source>
          <target state="translated">返回给定世代的测试。这是一个hashref或hash,取决于调用的上下文。哈希的键是各个测试的名称,值是一个包含各种有趣值的哈希。每个k/v对可能类似于这样。</target>
        </trans-unit>
        <trans-unit id="18fd0e735c5571e3935fb38043c3d22c834fcdc7" translate="yes" xml:space="preserve">
          <source>Returns the text message returned from the last command. In a scalar context it returns a single string, in a list context it will return each line as a separate element. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&lt;/a&gt; below.)</source>
          <target state="translated">返回上一条命令返回的文本消息。在标量上下文中，它返回单个字符串，在列表上下文中，它将每行作为单独的元素返回。（请参阅下面的&amp;ldquo; &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="7c44afcdd39adc1d907085b68dc1328eb7cd3007" translate="yes" xml:space="preserve">
          <source>Returns the thread object to allow for method chaining:</source>
          <target state="translated">返回允许方法链的线程对象。</target>
        </trans-unit>
        <trans-unit id="f0c5bdaab3901a070c8ff8976040622396c4fc54" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes compressed bytes input to inflate.</source>
          <target state="translated">返回要膨胀的输入压缩字节总数。</target>
        </trans-unit>
        <trans-unit id="c4608b14c708e673ffb160c24fbb6c9c9cca1c3c" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes uncompressed bytes input to deflate.</source>
          <target state="translated">返回要放气的未压缩字节的总字节数。</target>
        </trans-unit>
        <trans-unit id="06d2f89d66b6e7fed6561b11134472534b1ff3d6" translate="yes" xml:space="preserve">
          <source>Returns the total number of compressed bytes output from deflate.</source>
          <target state="translated">返回deflate输出的压缩字节总数。</target>
        </trans-unit>
        <trans-unit id="e092ecc1045e3db259589051f70b5ddb29616d9c" translate="yes" xml:space="preserve">
          <source>Returns the total number of items in the tied array associated with object</source>
          <target state="translated">返回与对象相关联的绑定数组中的项目总数。</target>
        </trans-unit>
        <trans-unit id="427a725c8edd92830c88e3b37e3c91c03dd17d77" translate="yes" xml:space="preserve">
          <source>Returns the total number of tests run.</source>
          <target state="translated">返回运行的测试总数。</target>
        </trans-unit>
        <trans-unit id="1981b6345507b455c470b49283a6ecbb90fc90fa" translate="yes" xml:space="preserve">
          <source>Returns the total number of uncompressed bytes output from inflate.</source>
          <target state="translated">返回 inflate输出的未压缩字节总数。</target>
        </trans-unit>
        <trans-unit id="689f1582b0eb5b567883c72791b662055f790c66" translate="yes" xml:space="preserve">
          <source>Returns the type of result, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; .</source>
          <target state="translated">返回结果的类型，例如 &lt;code&gt;comment&lt;/code&gt; 或 &lt;code&gt;test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6996ea16c99b1393d93a1d7ce3eb9ad6f40d481b" translate="yes" xml:space="preserve">
          <source>Returns the type of the SV. See &lt;code&gt;svtype&lt;/code&gt; .</source>
          <target state="translated">返回SV的类型。参见 &lt;code&gt;svtype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd6b42c4d1a9ea14e0eb7b552f7e0166fc5e5a67" translate="yes" xml:space="preserve">
          <source>Returns the uncompressed file offset.</source>
          <target state="translated">返回未压缩文件的偏移量。</target>
        </trans-unit>
        <trans-unit id="0b13dba661fcc526017b777ec9f0f6a6fc961688" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;code&gt;@ARGV&lt;/code&gt; array in the main program, but the &lt;code&gt;@_&lt;/code&gt; array in subroutines, just like &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果数组为空，则返回未定义的值，尽管这可能在其他时间也会发生。如果省略了ARRAY，则在主程序中弹出 &lt;code&gt;@ARGV&lt;/code&gt; 数组，但在子例程中弹出 &lt;code&gt;@_&lt;/code&gt; 数组，就像 &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="e6ccc500f6a9b6dee674b7e4875674f5071805d9" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;code&gt;@ARGV&lt;/code&gt; array in the main program, but the &lt;code&gt;@_&lt;/code&gt; array in subroutines, just like &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果数组为空，则返回未定义的值，尽管这可能在其他时间也会发生。如果省略了ARRAY，则在主程序中弹出 &lt;code&gt;@ARGV&lt;/code&gt; 数组，但在子例程中弹出 &lt;code&gt;@_&lt;/code&gt; 数组，就像 &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="f6fdde83d2b8ad29f3a1a2c3bd2bc04ec145f517" translate="yes" xml:space="preserve">
          <source>Returns the user's identifier. Identical to Perl's builtin &lt;code&gt;$&amp;lt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24UID&quot;&gt;$UID in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回用户的标识符。与Perl的内置 &lt;code&gt;$&amp;lt;&lt;/code&gt; 变量相同，请参见&lt;a href=&quot;perlvar#%24UID&quot;&gt;perlvar中的$ UID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85efab0e57c4279f7b5baf43ffb326faed2626c3" translate="yes" xml:space="preserve">
          <source>Returns the user's real group identifier. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24GID&quot;&gt;$GID in perlvar&lt;/a&gt;.</source>
          <target state="translated">返回用户的真实组标识符。与Perl的内置变量 &lt;code&gt;$)&lt;/code&gt; 类似，请参阅&lt;a href=&quot;perlvar#%24GID&quot;&gt;perlvar中的$ GID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f1e01fc4f899b71104441ca6cde6b2bc0d8e11e" translate="yes" xml:space="preserve">
          <source>Returns the value from the current position of the hash iterator. See &lt;code&gt;hv_iterkey&lt;/code&gt; .</source>
          <target state="translated">从哈希迭代器的当前位置返回值。参见 &lt;code&gt;hv_iterkey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52fd08e361909d4be5dbfd42ddda55c8051f004d" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;$num&lt;/code&gt; taken to the power &lt;code&gt;$exp&lt;/code&gt; in the modulus &lt;code&gt;$mod&lt;/code&gt; using binary exponentiation. &lt;code&gt;bmodpow&lt;/code&gt; is far superior to writing</source>
          <target state="translated">使用二进制幂返回模数 &lt;code&gt;$mod&lt;/code&gt; 幂 &lt;code&gt;$exp&lt;/code&gt; 的 &lt;code&gt;$num&lt;/code&gt; 值。 &lt;code&gt;bmodpow&lt;/code&gt; 远胜于写作</target>
        </trans-unit>
        <trans-unit id="3b09599e7e883f641c6cc99b4d5d6382e5376f16" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with all the ASCII non-&quot;word&quot; characters backslashed. (That is, all ASCII characters not matching &lt;code&gt;/[A-Za-z_0-9]/&lt;/code&gt; will be preceded by a backslash in the returned string, regardless of any locale settings.) This is the internal function implementing the &lt;code&gt;\Q&lt;/code&gt; escape in double-quoted strings. (See below for the behavior on non-ASCII code points.)</source>
          <target state="translated">返回带有反斜杠的所有ASCII非&amp;ldquo; word&amp;rdquo;字符的EXPR值。（也就是说，无论任何语言环境设置如何，所有不匹配 &lt;code&gt;/[A-Za-z_0-9]/&lt;/code&gt; 的 ASCII字符都将在返回的字符串前加反斜杠。）这是内部实现 &lt;code&gt;\Q&lt;/code&gt; 转义的内部函数引号的字符串。（有关非ASCII代码点的行为，请参见下文。）</target>
        </trans-unit>
        <trans-unit id="2d400c54fe42741adfb28f14ca6863c2eec3b9ba" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with the first character in uppercase (titlecase in Unicode). This is the internal function implementing the &lt;code&gt;\u&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">返回EXPR的值，第一个字符为大写（Unicode标题为大写）。这是在双引号字符串中实现 &lt;code&gt;\u&lt;/code&gt; 转义的内部函数。</target>
        </trans-unit>
        <trans-unit id="95ceac0c306dd626f5ab7cda760028cad6d8817d" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with the first character lowercased. This is the internal function implementing the &lt;code&gt;\l&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">返回第一个字符小写的EXPR值。这是在双引号字符串中实现 &lt;code&gt;\l&lt;/code&gt; 转义的内部函数。</target>
        </trans-unit>
        <trans-unit id="7c53e13d60d27926fdd5b2424eee55ad7bc1748d" translate="yes" xml:space="preserve">
          <source>Returns the value of a symbolic link, if symbolic links are implemented. If not, raises an exception. If there is a system error, returns the undefined value and sets &lt;code&gt;$!&lt;/code&gt; (errno). If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">如果实现了符号链接，则返回符号链接的值。如果不是，则引发异常。如果出现系统错误，则返回未定义的值并设置 &lt;code&gt;$!&lt;/code&gt; （errno）。如果省略EXPR，则使用 &lt;code&gt;$_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2375760a832779382294e9fa907c5d3e3ad7f675" translate="yes" xml:space="preserve">
          <source>Returns the value of an ASCII-range hex digit and advances the string pointer. Behaviour is only well defined when isXDIGIT(*str) is true.</source>
          <target state="translated">返回一个ASCII码范围内的十六进制数字的值,并推进字符串指针。只有当isXDIGIT(*str)为真时,行为才会被很好地定义。</target>
        </trans-unit>
        <trans-unit id="c7b80e8466f98eb2c40b79beaca15b258d25281c" translate="yes" xml:space="preserve">
          <source>Returns the value of errno.</source>
          <target state="translated">返回errno的值。</target>
        </trans-unit>
        <trans-unit id="9adec3509ce8f9ad18ba22035f03aad2a0b1e785" translate="yes" xml:space="preserve">
          <source>Returns the value of the IV,</source>
          <target state="translated">返回IV的值。</target>
        </trans-unit>
        <trans-unit id="a67d21554f8528cd56f302014c728725b03d27a7" translate="yes" xml:space="preserve">
          <source>Returns the value of the object's reference count.</source>
          <target state="translated">返回对象的引用次数的值。</target>
        </trans-unit>
        <trans-unit id="ed600390a736f758647014b404d8da9e8f3672f0" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified environment variable. The same information is available through the &lt;code&gt;%ENV&lt;/code&gt; array.</source>
          <target state="translated">返回指定环境变量的值。可通过 &lt;code&gt;%ENV&lt;/code&gt; 阵列获得相同的信息。</target>
        </trans-unit>
        <trans-unit id="a2b158779c21c22f9687811637ee298f2a0a92bb" translate="yes" xml:space="preserve">
          <source>Returns the value slot (type &lt;code&gt;SV*&lt;/code&gt; ) stored in the hash entry. Can be assigned to.</source>
          <target state="translated">返回存储在哈希条目中的值槽（类型 &lt;code&gt;SV*&lt;/code&gt; ）。可以分配给。</target>
        </trans-unit>
        <trans-unit id="f304fc671c17ec909353d9d852ad6f9b8756324c" translate="yes" xml:space="preserve">
          <source>Returns the value used by the constructor, and passed to IO::Socket::INET, to connect to the host.</source>
          <target state="translated">返回构造函数使用的值,并传递给IO::Socket::INET,以连接到主机。</target>
        </trans-unit>
        <trans-unit id="44ebf4dd62b1de35d6b110fc2c3bf137a56f04b5" translate="yes" xml:space="preserve">
          <source>Returns the values of the input in a random order</source>
          <target state="translated">按随机顺序返回输入值。</target>
        </trans-unit>
        <trans-unit id="aae391a8019cffd16e88e8c77d6ee4981b00cb05" translate="yes" xml:space="preserve">
          <source>Returns the values of the semaphore set as an array.</source>
          <target state="translated">以数组形式返回旗语集的值。</target>
        </trans-unit>
        <trans-unit id="3fa727c04d26ffd29634f2a1d3e06d3d49642e86" translate="yes" xml:space="preserve">
          <source>Returns the version number (a string) of the Unicode Standard which the &lt;code&gt;table&lt;/code&gt; file used by the collator object is based on. If the table does not include a version line (starting with &lt;code&gt;@version&lt;/code&gt; ), returns &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; .</source>
          <target state="translated">返回归类对象使用的 &lt;code&gt;table&lt;/code&gt; 文件所基于的Unicode标准的版本号（字符串）。如果该表不包含版本行（以 &lt;code&gt;@version&lt;/code&gt; 开头），则返回 &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c43991c04c0c1372a551cb8ce01e6a866bc87957" translate="yes" xml:space="preserve">
          <source>Returns the version number of UTS #10 this module consults, that should correspond with the DUCET incorporated.</source>
          <target state="translated">返回该模块所参考的UTS #10的版本号,该版本号应与纳入的DUCET对应。</target>
        </trans-unit>
        <trans-unit id="df2014ff2454fb3c77163e1b8bb40e5c6fa511b5" translate="yes" xml:space="preserve">
          <source>Returns the version number of the available module in readable format.</source>
          <target state="translated">以可读格式返回可用模块的版本号。</target>
        </trans-unit>
        <trans-unit id="37862cfa298d82ed45105eae51b8f01143f37444" translate="yes" xml:space="preserve">
          <source>Returns the version number of the installed module in readable format.</source>
          <target state="translated">以可读格式返回安装模块的版本号。</target>
        </trans-unit>
        <trans-unit id="6984540058ab0766dafaf794c5a7db314a164bd0" translate="yes" xml:space="preserve">
          <source>Returns the version of the underlying bzip2 library.</source>
          <target state="translated">返回底层bzip2库的版本。</target>
        </trans-unit>
        <trans-unit id="1d2fb973769b42e32f64b5b9e7e5484fe7f157f7" translate="yes" xml:space="preserve">
          <source>Returns the version of the zlib library.</source>
          <target state="translated">返回zlib库的版本。</target>
        </trans-unit>
        <trans-unit id="7d63e1e041bf6c2b63dc17e62e16171c075c7660" translate="yes" xml:space="preserve">
          <source>Returns the wall-clock time when the Parser was created.</source>
          <target state="translated">返回创建Parser时的挂钟时间。</target>
        </trans-unit>
        <trans-unit id="6a5155335fff92a3cb435faf1ea8f2b5273df9bb" translate="yes" xml:space="preserve">
          <source>Returns the wall-clock time when the end of TAP input was seen.</source>
          <target state="translated">返回看到TAP输入结束时的挂钟时间。</target>
        </trans-unit>
        <trans-unit id="ed2e4f04106b910dc53430cf4bfefc37bd047fe7" translate="yes" xml:space="preserve">
          <source>Returns true if</source>
          <target state="translated">如果</target>
        </trans-unit>
        <trans-unit id="4da324a95fbc80c5b9fe720971dc0126ec92b091" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$ref&lt;/code&gt; is a weak reference.</source>
          <target state="translated">如果 &lt;code&gt;$ref&lt;/code&gt; 是弱引用，则返回true 。</target>
        </trans-unit>
        <trans-unit id="47aeb6d44fb13be59145db7788f8704196e2d02b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$var&lt;/code&gt; is readonly.</source>
          <target state="translated">如果 &lt;code&gt;$var&lt;/code&gt; 为只读，则返回true 。</target>
        </trans-unit>
        <trans-unit id="f95d2b325ed0e71c04b8d53f29a9fcbf4645953b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;&amp;lt;$self-&lt;/code&gt; make&amp;gt;&amp;gt; is the given type; possibilities are:</source>
          <target state="translated">如果 &lt;code&gt;&amp;lt;$self-&lt;/code&gt; make &amp;gt;&amp;gt;是给定类型，则返回true；否则，返回true 。可能性是：</target>
        </trans-unit>
        <trans-unit id="6640c925e7db6ea286cf7fbbe8c1821aa2b2b7ed" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;bzip2&lt;/code&gt; compressed archives</source>
          <target state="translated">如果 &lt;code&gt;Archive::Tar&lt;/code&gt; 可以提取 &lt;code&gt;bzip2&lt;/code&gt; 压缩的归档文件，则返回true</target>
        </trans-unit>
        <trans-unit id="097a09a0980755f5b5aaee6c4ea94d3ded8c2f1c" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;zlib&lt;/code&gt; compressed archives</source>
          <target state="translated">如果 &lt;code&gt;Archive::Tar&lt;/code&gt; 可以提取 &lt;code&gt;zlib&lt;/code&gt; 压缩的归档文件，则返回true</target>
        </trans-unit>
        <trans-unit id="53f4c5181323486757b7012ccc41933f9e15252b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Compress::Zlib&lt;/code&gt; is available. Note that this does not mean that &lt;code&gt;Compress::Zlib&lt;/code&gt; is being used: see &lt;a href=&quot;#gzip_external&quot;&gt;gzip_external&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/gzip_used&quot;&gt;gzip_used&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Compress::Zlib&lt;/code&gt; 可用，则返回true 。请注意，这并不意味着正在使用 &lt;code&gt;Compress::Zlib&lt;/code&gt; ：请参见&lt;a href=&quot;#gzip_external&quot;&gt;gzip_external&lt;/a&gt;和&lt;a href=&quot;http://search.cpan.org/perldoc/gzip_used&quot;&gt;gzip_used&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20bf1d834149c96f974797ae3b16c138792ec181" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;arg&lt;/code&gt; is subject to overloading of some operations.</source>
          <target state="translated">如果 &lt;code&gt;arg&lt;/code&gt; 承受某些操作的重载，则返回true 。</target>
        </trans-unit>
        <trans-unit id="e2615132d98702c39aee2818f6b4d6e992a35f89" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;make&lt;/code&gt; can handle (probably by quoting) dependencies that contain a space. Currently known true for GNU make, false for BSD pmake derivative.</source>
          <target state="translated">如果 &lt;code&gt;make&lt;/code&gt; 可以处理（可能通过引用）包含空格的依赖项，则返回true 。目前已知对GNU make为true，对于BSD pmake派生为false。</target>
        </trans-unit>
        <trans-unit id="a64ae7a302c259faf3a91bf8054b43f98292b3d6" translate="yes" xml:space="preserve">
          <source>Returns true if C, XS, MYEXTLIB or similar objects exist within this object that need a compiler. Does not descend into subdirectories as needs_linking() does.</source>
          <target state="translated">如果这个对象中存在C、XS、MYEXTLIB或类似的对象需要编译器,则返回true。不像 needs_linking()那样,将编译器下放到子目录中。</target>
        </trans-unit>
        <trans-unit id="e2a943d4344737fedde0486fc361844b04fbfab3" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE is marked as deprecated in PERL_VERSION. If PERL_VERSION is omitted, it defaults to the current version of Perl.</source>
          <target state="translated">如果在PERL_VERSION中MODULE被标记为废弃,则返回true。如果PERL_VERSION被省略,则默认为当前Perl的版本。</target>
        </trans-unit>
        <trans-unit id="9ddf8ac076f87248553a1744aa4c9f8d19563b6f" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE was bundled with the specified version of Perl. You can optionally specify a minimum version of the module, and can also specify a version of Perl. If a version of Perl isn't specified, &lt;code&gt;is_core()&lt;/code&gt; will use the numeric version of Perl that is running (ie &lt;code&gt;$]&lt;/code&gt; ).</source>
          <target state="translated">如果MODULE与指定版本的Perl捆绑在一起，则返回true。您可以选择指定模块的最低版本，也可以指定Perl的版本。如果未指定Perl版本，则 &lt;code&gt;is_core()&lt;/code&gt; 将使用正在运行的Perl的数字版本（即 &lt;code&gt;$]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c50f3867b6c57790c9d0ffb22d4f984c8e12beaf" translate="yes" xml:space="preserve">
          <source>Returns true if a backtrace could be retrieved, false if not.</source>
          <target state="translated">如果可以检索到回溯,则返回true,如果不能,则返回false。</target>
        </trans-unit>
        <trans-unit id="1b44016bfcbe04b6586f1a44576dbe6c5dd811ca" translate="yes" xml:space="preserve">
          <source>Returns true if a thread is still running (i.e., if its entry point function has not yet finished or exited).</source>
          <target state="translated">如果一个线程仍在运行,则返回true(即,如果它的入口点函数尚未完成或退出)。</target>
        </trans-unit>
        <trans-unit id="dcd6286ed136ef27ce6f021e3f240e0d956cc9d3" translate="yes" xml:space="preserve">
          <source>Returns true if all copies succeeded, false otherwise.</source>
          <target state="translated">如果所有副本成功,则返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="c484acc777160fa213787bde200b697b5e359b72" translate="yes" xml:space="preserve">
          <source>Returns true if all moves succeeded, false otherwise.</source>
          <target state="translated">如果所有动作都成功,则返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="0de48b342093ad5d26eae4ecf7389dda0a98fe8a" translate="yes" xml:space="preserve">
          <source>Returns true if implementation has a buffer, and can return pointer to whole buffer and its size. Used by perl for &lt;b&gt;-T&lt;/b&gt; / &lt;b&gt;-B&lt;/b&gt; tests. Other uses would be very obscure...</source>
          <target state="translated">如果实现具有缓冲区，则返回true，并且可以返回指向整个缓冲区及其大小的指针。由perl用于&lt;b&gt;-T&lt;/b&gt; / &lt;b&gt;-B&lt;/b&gt;测试。其他用途将非常晦涩...</target>
        </trans-unit>
        <trans-unit id="10a3a96d5fac5f6ce937d9b2bf9324cc77950396" translate="yes" xml:space="preserve">
          <source>Returns true if implementation has all the interfaces required to allow perl's &lt;code&gt;sv_gets&lt;/code&gt; to &quot;bypass&quot; normal IO mechanism. This can vary from handle to handle.</source>
          <target state="translated">如果实现具有允许perl的 &lt;code&gt;sv_gets&lt;/code&gt; &amp;ldquo;绕过&amp;rdquo;常规IO机制所需的所有接口，则返回true 。这可能因手柄而异。</target>
        </trans-unit>
        <trans-unit id="e1a0c9d61807bdca034a1ddbe7a877069a3e72f0" translate="yes" xml:space="preserve">
          <source>Returns true if o has a sibling</source>
          <target state="translated">如果o有兄弟姐妹,返回true。</target>
        </trans-unit>
        <trans-unit id="da60c4762a50d2388782db8a105b48bd656d3e40" translate="yes" xml:space="preserve">
          <source>Returns true if perl thinks &lt;code&gt;$var&lt;/code&gt; is a number. See &lt;a href=&quot;../perlapi#looks_like_number&quot;&gt;looks_like_number in perlapi&lt;/a&gt;.</source>
          <target state="translated">如果perl认为 &lt;code&gt;$var&lt;/code&gt; 是一个数字，则返回true 。参见&lt;a href=&quot;../perlapi#looks_like_number&quot;&gt;perlapi中的looks_like_number&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cd5069f1020afc9a12639bf7ffb4954393da1cb" translate="yes" xml:space="preserve">
          <source>Returns true if some new text was added to the buffer, or false if the buffer has reached the end of the input text.</source>
          <target state="translated">如果有新的文本被添加到缓冲区,则返回true;如果缓冲区已经到达输入文本的终点,则返回false。</target>
        </trans-unit>
        <trans-unit id="5bf6c266e6971bff3c0632523caf0469c2fae0a5" translate="yes" xml:space="preserve">
          <source>Returns true if successful.</source>
          <target state="translated">如果成功返回true。</target>
        </trans-unit>
        <trans-unit id="61d51461172eed59e4390319f9a62c6f1c196914" translate="yes" xml:space="preserve">
          <source>Returns true if the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method has been called.</source>
          <target state="translated">如果已调用 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 方法，则返回true 。</target>
        </trans-unit>
        <trans-unit id="0efca7dadde7431809e7bd764986970c8e6ed89a" translate="yes" xml:space="preserve">
          <source>Returns true if the SV has a true value by Perl's rules. Use the &lt;code&gt;SvTRUE&lt;/code&gt; macro instead, which may call &lt;code&gt;sv_true()&lt;/code&gt; or may instead use an in-line version.</source>
          <target state="translated">如果SV根据Perl的规则具有true值，则返回true。请改用 &lt;code&gt;SvTRUE&lt;/code&gt; 宏，它可以调用 &lt;code&gt;sv_true()&lt;/code&gt; 或改用嵌入式版本。</target>
        </trans-unit>
        <trans-unit id="c788f1858dc6c04f02a0039b15605291ddd9b724" translate="yes" xml:space="preserve">
          <source>Returns true if the SV has get magic or overloading. If either is true then the scalar is active data, and has the potential to return a new value every time it is accessed. Hence you must be careful to only read it once per user logical operation and work with that returned value. If neither is true then the scalar's value cannot change unless written to.</source>
          <target state="translated">如果SV有get magic或overloading,则返回true。如果其中之一为真,那么这个标量就是活动数据,并且有可能在每次访问时返回一个新的值。因此,你必须注意每个用户逻辑操作只读取一次,并使用该返回值工作。如果两者都不为真,那么标量的值就不能改变,除非写入。</target>
        </trans-unit>
        <trans-unit id="f516034ddab4dc82ec24aa62a130edf02e5ef266" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is &lt;code&gt;NaN&lt;/code&gt; (not-a-number) [C99].</source>
          <target state="translated">如果参数为 &lt;code&gt;NaN&lt;/code&gt; （非数字）[C99]，则返回true 。</target>
        </trans-unit>
        <trans-unit id="b203b18b3c4abc08a3fe30ef9a1a52388c595620" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a compiled regular expression as returned by &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, false if it is not.</source>
          <target state="translated">如果参数是 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; 返回的已编译正则表达式，则返回true；否则返回false。</target>
        </trans-unit>
        <trans-unit id="a935c230a2ab8bc372e69c5ed9a2f7ffc933c1a8" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a finite number (that is, not an infinity, or the not-a-number) [C99].</source>
          <target state="translated">如果参数是一个有限的数(即不是无穷大,或者不是一个数),则返回true[C99]。</target>
        </trans-unit>
        <trans-unit id="1f10c37fb922fab58eefa878c1a15696e8ebfad8" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is an infinity (positive or negative) [C99].</source>
          <target state="translated">如果参数是无穷大(正或负),返回true[C99]。</target>
        </trans-unit>
        <trans-unit id="92ae4d0a491f5c0e34207aef83ac4ea519198664" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is normal (that is, not a subnormal/denormal, and not an infinity, or a not-a-number) [C99].</source>
          <target state="translated">如果参数是正常的(也就是说,不是次正常/正态,也不是无穷大,或者不是一个数),返回true[C99]。</target>
        </trans-unit>
        <trans-unit id="2be5c07f18b17fd28aa02070537cb445b797d23a" translate="yes" xml:space="preserve">
          <source>Returns true if the context of the currently executing subroutine or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is looking for a list value. Returns false if the context is looking for a scalar. Returns the undefined value if the context is looking for no value (void context).</source>
          <target state="translated">如果当前正在执行的子例程或 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 的上下文正在寻找列表值，则返回true 。如果上下文正在寻找标量，则返回false。如果上下文不寻找任何值（无效上下文），则返回未定义的值。</target>
        </trans-unit>
        <trans-unit id="2a7d0b45afa62d6038916062a47dfbc62ef8ba5f" translate="yes" xml:space="preserve">
          <source>Returns true if the context of the currently executing subroutine or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is looking for a list value. Returns false if the context is looking for a scalar. Returns the undefined value if the context is looking for no value (void context).</source>
          <target state="translated">如果当前正在执行的子例程或 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 的上下文正在寻找列表值，则返回true 。如果上下文正在寻找标量，则返回false。如果上下文不寻找任何值（无效上下文），则返回未定义的值。</target>
        </trans-unit>
        <trans-unit id="b91850a84bf1d1a3bd747c97a1a7c21e57479110" translate="yes" xml:space="preserve">
          <source>Returns true if the current system has a working C compiler and linker, false otherwise. To determine this, we actually compile and link a sample C library. The sample will be compiled in the system tempdir or, if that fails for some reason, in the current directory.</source>
          <target state="translated">如果当前系统有工作的C编译器和链接器,返回true,否则返回false。为了确定这一点,我们实际编译和链接一个示例C库。样本将在系统的tempdir中编译,如果编译失败,则在当前目录中编译。</target>
        </trans-unit>
        <trans-unit id="482c217957cb2df6d53192611a5e7bdb0a875970" translate="yes" xml:space="preserve">
          <source>Returns true if the effective name is in UTF8 encoding.</source>
          <target state="translated">如果有效名称是UTF8编码,返回true。</target>
        </trans-unit>
        <trans-unit id="501a38d82aa91865b220249a5d3fc899775d9f9a" translate="yes" xml:space="preserve">
          <source>Returns true if the element indexed by &lt;code&gt;key&lt;/code&gt; has been initialized.</source>
          <target state="translated">如果由 &lt;code&gt;key&lt;/code&gt; 索引的元素已初始化，则返回true 。</target>
        </trans-unit>
        <trans-unit id="ca177cc07bd654ccfe210837313135cb5faa9fcf" translate="yes" xml:space="preserve">
          <source>Returns true if the end of the compressed input stream has been reached.</source>
          <target state="translated">如果压缩后的输入流已经结束,则返回true。</target>
        </trans-unit>
        <trans-unit id="f14991dbb147f0859d05ca33c75a7818dab41ebf" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;&lt;a href=&quot;../../functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">如果文件是 &lt;code&gt;&lt;a href=&quot;../../functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt; 类型，则返回true</target>
        </trans-unit>
        <trans-unit id="e84bc7aca66344ab87212c76ad0d61c5d25dce9c" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;&lt;a href=&quot;../../functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;&lt;a href=&quot;../../functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; ,则返回true</target>
        </trans-unit>
        <trans-unit id="9a4e465b07f3a887e61b71ecbebaa7046ff62288" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;Label&lt;/code&gt; . Should not happen after a successful &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;Label&lt;/code&gt; ,则返回true 。成功 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 后不应发生。</target>
        </trans-unit>
        <trans-unit id="8fadb1152307ad9882e2623beb98970efa2d1559" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;LongLink&lt;/code&gt; . Should not happen after a successful &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;LongLink&lt;/code&gt; ,则返回true 。成功 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 后不应发生。</target>
        </trans-unit>
        <trans-unit id="65a383e821293bb49c0e77aee65012ba2b77181d" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;blockdev&lt;/code&gt;</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;blockdev&lt;/code&gt; ,则返回true</target>
        </trans-unit>
        <trans-unit id="d0fc6e1fdd4accd7b45ff2752baf317c2e3349d6" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;chardev&lt;/code&gt;</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;chardev&lt;/code&gt; ,则返回true</target>
        </trans-unit>
        <trans-unit id="77b87462e692c2a96239770207e882160a6928c2" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;dir&lt;/code&gt;</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;dir&lt;/code&gt; ,则返回true</target>
        </trans-unit>
        <trans-unit id="41b75950efa0534211d7f43a4ddc09117b32dc5f" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;fifo&lt;/code&gt;</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;fifo&lt;/code&gt; ,则返回true</target>
        </trans-unit>
        <trans-unit id="f1e8727692877d59f462990af248fafaf24c5f32" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;file&lt;/code&gt;</source>
          <target state="translated">如果文件属于 &lt;code&gt;file&lt;/code&gt; 类型，则返回true</target>
        </trans-unit>
        <trans-unit id="09714c06b0880005fc6ca97a5c9cf509aca601f8" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;hardlink&lt;/code&gt;</source>
          <target state="translated">如果文件的类型为 &lt;code&gt;hardlink&lt;/code&gt; ,则返回true</target>
        </trans-unit>
        <trans-unit id="6409db86dba4e87c8ab21a510400dea6d8787df5" translate="yes" xml:space="preserve">
          <source>Returns true if the file type is &lt;code&gt;unknown&lt;/code&gt;</source>
          <target state="translated">如果文件类型 &lt;code&gt;unknown&lt;/code&gt; 则返回true</target>
        </trans-unit>
        <trans-unit id="7ba7b5973acb913d07d03e97b45a59c7943aaaea" translate="yes" xml:space="preserve">
          <source>Returns true if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; form a valid UTF-8 string, false otherwise. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">如果字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 的前 &lt;code&gt;len&lt;/code&gt; 个字节形成有效的UTF-8字符串，则返回true，否则返回false。如果 &lt;code&gt;len&lt;/code&gt; 为0，则将使用 &lt;code&gt;strlen(s)&lt;/code&gt; 进行计算（这意味着，如果使用此选项，则 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 不能嵌入 &lt;code&gt;NUL&lt;/code&gt; 字符，而必须具有终止 &lt;code&gt;NUL&lt;/code&gt; 字节）。请注意，所有ASCII字符都构成&amp;ldquo;有效的UTF-8字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8f757b0a6c8ccae7fc0d8912d332c5dafe558105" translate="yes" xml:space="preserve">
          <source>Returns true if the given OP is not a NULL pointer and if it is of the given type or used to be before being replaced by an OP of type OP_NULL.</source>
          <target state="translated">如果给定的OP不是一个NULL指针,并且在被OP_NULL类型的OP替换之前是给定类型或曾经是给定类型的OP,则返回true。</target>
        </trans-unit>
        <trans-unit id="c2e85dd861c1c8dede97792bec3acf5f219b3646" translate="yes" xml:space="preserve">
          <source>Returns true if the given OP is not a NULL pointer and if it is of the given type.</source>
          <target state="translated">如果给定的OP不是一个NULL指针,并且是给定类型,则返回true。</target>
        </trans-unit>
        <trans-unit id="d92bb35f426b979014ecf29e128d9930f1c3628d" translate="yes" xml:space="preserve">
          <source>Returns true if the given cygwin path is binary mounted, false if the path is mounted in textmode.</source>
          <target state="translated">如果给定的cygwin路径是二进制挂载,则返回true;如果路径是以textmode挂载,则返回false。</target>
        </trans-unit>
        <trans-unit id="8d954f00f7f76782153e5ef886e7f5ee8e1bd978" translate="yes" xml:space="preserve">
          <source>Returns true if the handle is currently positioned at end of file?</source>
          <target state="translated">如果句柄当前位于文件末尾,返回true。</target>
        </trans-unit>
        <trans-unit id="94fc47898ea7d99f0d0e4310469547b1a4e62980" translate="yes" xml:space="preserve">
          <source>Returns true if the hash and its keys are locked.</source>
          <target state="translated">如果哈希和它的密钥被锁定,返回true。</target>
        </trans-unit>
        <trans-unit id="ba0e26b1eb6e089c1f70b6233f48370e7e8ba3d1" translate="yes" xml:space="preserve">
          <source>Returns true if the hash and its keys are unlocked.</source>
          <target state="translated">如果哈希和它的密钥被解锁,返回true。</target>
        </trans-unit>
        <trans-unit id="0febcbce5882975e24bfdc812b8bb09fccb4cebe" translate="yes" xml:space="preserve">
          <source>Returns true if the leading len bytes of the strings s1 and s2 are the same case-insensitively in the current locale; false otherwise.</source>
          <target state="translated">如果字符串s1和s2的前导len字节在当前locale中不区分大小写,返回true;否则返回false。</target>
        </trans-unit>
        <trans-unit id="a8dce8bfb1803e74ae42c62ae214fadaa06271c0" translate="yes" xml:space="preserve">
          <source>Returns true if the leading len bytes of the strings s1 and s2 are the same case-insensitively; false otherwise. Uppercase and lowercase ASCII range bytes match themselves and their opposite case counterparts. Non-cased and non-ASCII range bytes match only themselves.</source>
          <target state="translated">如果字符串s1和s2的前导len字节不区分大小写,返回true;否则返回false。大写和小写的ASCII范围字节与它们的大小写相对应。非大写和非ASCII字符集的字节只匹配它们自己。</target>
        </trans-unit>
        <trans-unit id="fd3339cf5d76cf048c809d61f14cdd493d30b803" translate="yes" xml:space="preserve">
          <source>Returns true if the leading portions of the strings &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; (either or both of which may be in UTF-8) are the same case-insensitively; false otherwise. How far into the strings to compare is determined by other input parameters.</source>
          <target state="translated">如果字符串 &lt;code&gt;s1&lt;/code&gt; 和 &lt;code&gt;s2&lt;/code&gt; 的前导部分（其中一个或两个都在UTF-8中）不区分大小写，则返回true；否则，返回true 。否则为假。要比较的字符串有多远取决于其他输入参数。</target>
        </trans-unit>
        <trans-unit id="b11a86d7be35a30e62a79e23f089d0e569d33fd9" translate="yes" xml:space="preserve">
          <source>Returns true if the module is installed and in a usable state. Only useful for a handful of modules that are used internally. See the source for details.</source>
          <target state="translated">如果模块已安装并处于可用状态,返回true。只对少数内部使用的模块有用。详情请看源代码。</target>
        </trans-unit>
        <trans-unit id="87bfa5f9def05bede19f7c99d788c408eb2a3bfa" translate="yes" xml:space="preserve">
          <source>Returns true if the module is installed. Used to load all modules into the running CPAN.pm that are considered optional. The config variable &lt;code&gt;dontload_list&lt;/code&gt; intercepts the &lt;code&gt;has_inst()&lt;/code&gt; call such that an optional module is not loaded despite being available. For example, the following command will prevent &lt;code&gt;YAML.pm&lt;/code&gt; from being loaded:</source>
          <target state="translated">如果安装了模块，则返回true。用于将所有可选模块加载到正在运行的CPAN.pm中。config变量 &lt;code&gt;dontload_list&lt;/code&gt; 拦截 &lt;code&gt;has_inst()&lt;/code&gt; 调用，以便尽管可选模块仍然可用，但不会加载。例如，以下命令将阻止加载 &lt;code&gt;YAML.pm&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7eee243e5a583ec6622e9b64dd2d67609ae2e73b" translate="yes" xml:space="preserve">
          <source>Returns true if the name is in UTF8 encoding.</source>
          <target state="translated">如果名称是UTF8编码,返回true。</target>
        </trans-unit>
        <trans-unit id="a2b4fda3ea5d9e4d976704d93ca66eb8a3351df4" translate="yes" xml:space="preserve">
          <source>Returns true if the object currently refers to a opened file.</source>
          <target state="translated">如果该对象当前指向一个已打开的文件,则返回true。</target>
        </trans-unit>
        <trans-unit id="3369d3f65732b59f904e9d9c53a8772585d61185" translate="yes" xml:space="preserve">
          <source>Returns true if the object currently refers to a opened file/buffer.</source>
          <target state="translated">如果对象当前指向一个已打开的文件/缓冲区,则返回true。</target>
        </trans-unit>
        <trans-unit id="539179b9dd3e4b1a906b0e8dd80de73320ce32b0" translate="yes" xml:space="preserve">
          <source>Returns true if the object is currently a valid file descriptor, false otherwise.</source>
          <target state="translated">如果该对象当前是一个有效的文件描述符,则返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="e08ec5a9f31000deb0ace03b0535b4364054ab29" translate="yes" xml:space="preserve">
          <source>Returns true if the shared memory segment has been removed or marked for removal.</source>
          <target state="translated">如果共享内存段已被移除或标记为移除,则返回true。</target>
        </trans-unit>
        <trans-unit id="ff4b6dfb8f1e3eba5bbe7f880a14258acb306aae" translate="yes" xml:space="preserve">
          <source>Returns true if the subtest passed, false otherwise.</source>
          <target state="translated">如果子测试通过,返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="6f55049328363a9874e1574f1c2a89fcaaf95a63" translate="yes" xml:space="preserve">
          <source>Returns true if the supplied filename (not POD module) contains some Pod documentation. =head1 SUPPORT</source>
          <target state="translated">如果提供的文件名(不是POD模块)包含一些Pod文档,则返回true。 =head1 SUPPORT</target>
        </trans-unit>
        <trans-unit id="8bf1df015583028faecbc0c2066cffa4f4e2f58c" translate="yes" xml:space="preserve">
          <source>Returns true if the supplied filename (not POD module) contains some pod information.</source>
          <target state="translated">如果提供的文件名(不是POD模块)包含一些pod信息,则返回true。</target>
        </trans-unit>
        <trans-unit id="67e7d95677937f6371a7ae035ad1bb5355e9cfac" translate="yes" xml:space="preserve">
          <source>Returns true if the supplied opset looks like a valid opset (is the right length etc) otherwise it returns false. If an optional second parameter is true then verify_opset will croak on an invalid opset instead of returning false.</source>
          <target state="translated">如果提供的OPSET看起来像一个有效的OPSET(长度正确等),返回true,否则返回false。如果第二个可选参数为true,那么verify_opset将在无效的OPSET上崩溃,而不是返回false。</target>
        </trans-unit>
        <trans-unit id="ff3a5ae2a7c5ec548bc217496727410856563318" translate="yes" xml:space="preserve">
          <source>Returns true if the test is currently inside a TODO block.</source>
          <target state="translated">如果测试当前在TODO块中,则返回true。</target>
        </trans-unit>
        <trans-unit id="53bcaf8624bb2f76465d64879f1e0f8560b5117c" translate="yes" xml:space="preserve">
          <source>Returns true if the thread has been detached.</source>
          <target state="translated">如果线程已被分离,返回true。</target>
        </trans-unit>
        <trans-unit id="c8cabc0a16d49869bcf8a3223837dac51f7716e1" translate="yes" xml:space="preserve">
          <source>Returns true if the thread has finished running, is not detached and has not yet been joined. In other words, the thread is ready to be joined, and a call to &lt;code&gt;$thr-&amp;gt;join()&lt;/code&gt; will not</source>
          <target state="translated">如果线程已完成运行，未分离且尚未加入，则返回true。换句话说，线程已准备好加入，并且对 &lt;code&gt;$thr-&amp;gt;join()&lt;/code&gt; 的调用不会</target>
        </trans-unit>
        <trans-unit id="c70320728c813de1f906ffb6bab649b0487d4ff5" translate="yes" xml:space="preserve">
          <source>Returns true if we currently have &lt;code&gt;IO::String&lt;/code&gt; support loaded.</source>
          <target state="translated">如果当前加载了 &lt;code&gt;IO::String&lt;/code&gt; 支持，则返回true 。</target>
        </trans-unit>
        <trans-unit id="d6f9b9b08d05dd0d99ab33c1c933d761aa3bd2b2" translate="yes" xml:space="preserve">
          <source>Returns true if we currently have &lt;code&gt;perlio&lt;/code&gt; support loaded.</source>
          <target state="translated">如果我们当前已加载 &lt;code&gt;perlio&lt;/code&gt; 支持，则返回true 。</target>
        </trans-unit>
        <trans-unit id="2f872207c69edd1c37c7274b4519565d78bc2219" translate="yes" xml:space="preserve">
          <source>Returns true if we have the ability to load XS.</source>
          <target state="translated">如果我们有能力加载XS,则返回true。</target>
        </trans-unit>
        <trans-unit id="bf1c9c76e4876814ca746fd7fab74303fe7011a6" translate="yes" xml:space="preserve">
          <source>Returns true if within a retrieve operation (via STORABLE_thaw hook).</source>
          <target state="translated">如果在检索操作中,返回true(通过STORABLE_thaw钩子)。</target>
        </trans-unit>
        <trans-unit id="e1844983342fa7ed4a41ed51002bb4a591e82ded" translate="yes" xml:space="preserve">
          <source>Returns true if within a store operation (via STORABLE_freeze hook).</source>
          <target state="translated">如果在存储操作中,返回true(通过STORABLE_freeze钩子)。</target>
        </trans-unit>
        <trans-unit id="d65382a8c176da2d2ec3d0b82d52770ffe9a51bb" translate="yes" xml:space="preserve">
          <source>Returns true iff $lang1 and $lang2 are acceptable variant tags representing the same language-form.</source>
          <target state="translated">如果$lang1和$lang2是可接受的表示同一语言形式的变体标记,则返回true。</target>
        </trans-unit>
        <trans-unit id="062e4d2f5e9b3ae16a476c3d729f9d8ea61bd474" translate="yes" xml:space="preserve">
          <source>Returns true iff $lang1 is a formally valid language tag.</source>
          <target state="translated">如果$lang1是一个正式有效的语言标签,则返回true。</target>
        </trans-unit>
        <trans-unit id="1565fd32dd5c80d8c591abf0f76e7f99bea2a25f" translate="yes" xml:space="preserve">
          <source>Returns true iff language tag $lang1 represents a subform of language tag $lang2.</source>
          <target state="translated">如果语言标签$lang1代表语言标签$lang2的子形式,则返回true。</target>
        </trans-unit>
        <trans-unit id="7f01916a2ad34fd19ed8834c20e91c5211486bcb" translate="yes" xml:space="preserve">
          <source>Returns true iff the first &lt;code&gt;len&lt;/code&gt; bytes of the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; are the same regardless of the UTF-8 encoding of the string (or UTF-EBCDIC encoding on EBCDIC machines). That is, if they are UTF-8 invariant. On ASCII-ish machines, all the ASCII characters and only the ASCII characters fit this definition. On EBCDIC machines, the ASCII-range characters are invariant, but so also are the C1 controls and &lt;code&gt;\c?&lt;/code&gt; (which isn't in the ASCII range on EBCDIC).</source>
          <target state="translated">如果字符串 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 前 &lt;code&gt;len&lt;/code&gt; 个字节相同，则不管字符串的 UTF-8编码（或EBCDIC机器上的UTF-EBCDIC编码）如何，都返回true 。也就是说，如果它们是UTF-8不变的。在使用ASCII的计算机上，所有ASCII字符且仅ASCII字符符合此定义。在EBCDIC机器上，ASCII范围字符是不变的，但是C1控件和 &lt;code&gt;\c?&lt;/code&gt; 也是如此。（不在EBCDIC的ASCII范围内）。</target>
        </trans-unit>
        <trans-unit id="a4f85750c5f0e01ab8dc4e6498b24f2bca333f09" translate="yes" xml:space="preserve">
          <source>Returns true indicating that is a 'spinner' job. Spinners are returned when the scheduler still has pending jobs but can't (because of locking) return one right now.</source>
          <target state="translated">返回true,表示这是一个 &quot;spinner &quot;作业。当调度器仍有待处理的作业,但由于锁定的原因不能返回时,就会返回Spinners。</target>
        </trans-unit>
        <trans-unit id="97933bd1be8d825799757357878cf512221b1701" translate="yes" xml:space="preserve">
          <source>Returns true on error, sets $^E. Expects expr() be a call of &lt;code&gt;Dos*&lt;/code&gt; -style API.</source>
          <target state="translated">错误返回true，设置$ ^ E。期望expr（）是 &lt;code&gt;Dos*&lt;/code&gt; 风格的API的调用。</target>
        </trans-unit>
        <trans-unit id="8ceb8d13f6ae573893d38c5a6162e5e97774290d" translate="yes" xml:space="preserve">
          <source>Returns true on error, sets $^E. Expects expr() be a call of &lt;code&gt;Win*&lt;/code&gt; -style API.</source>
          <target state="translated">错误返回true，设置$ ^ E。期望expr（）是 &lt;code&gt;Win*&lt;/code&gt; -style API的调用。</target>
        </trans-unit>
        <trans-unit id="38295b5e4d38ce7ed8e3ef4714791772130b3211" translate="yes" xml:space="preserve">
          <source>Returns true on platforms where &lt;code&gt;prelink()&lt;/code&gt; should be called during linking, and false otherwise.</source>
          <target state="translated">在链接期间应调用 &lt;code&gt;prelink()&lt;/code&gt; 的平台上返回true ，否则返回false。</target>
        </trans-unit>
        <trans-unit id="b9b4c7399dc86d0b22d9394410f2e2b91c8f9d5a" translate="yes" xml:space="preserve">
          <source>Returns true on success and false on failure.</source>
          <target state="translated">成功时返回true,失败时返回false。</target>
        </trans-unit>
        <trans-unit id="308c40c428bfb468dbabf3ecef1477c66240dd0d" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure</source>
          <target state="translated">成功时返回true,失败时返回false。</target>
        </trans-unit>
        <trans-unit id="c4a3610619264a8a6a93918c4a76acf89e8f7382" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
          <target state="translated">成功时返回true,失败时返回false。</target>
        </trans-unit>
        <trans-unit id="e64c41ac0505688c9c07dbd4ea1c1aa2a87b911e" translate="yes" xml:space="preserve">
          <source>Returns true on success, otherwise 0.</source>
          <target state="translated">成功后返回true,否则返回0。</target>
        </trans-unit>
        <trans-unit id="40405f8c197d6636052d305e55694c6907d75eae" translate="yes" xml:space="preserve">
          <source>Returns true on success.</source>
          <target state="translated">成功后返回true。</target>
        </trans-unit>
        <trans-unit id="38441271f310a9d9ec3653eae2301f8b2ed546f3" translate="yes" xml:space="preserve">
          <source>Returns true or false if &lt;code&gt;bigint&lt;/code&gt; is in effect in the current scope.</source>
          <target state="translated">如果 &lt;code&gt;bigint&lt;/code&gt; 在当前作用域中有效，则返回true或false 。</target>
        </trans-unit>
        <trans-unit id="2f88b6f329909127f9de26a3ecb92cef04fef9f6" translate="yes" xml:space="preserve">
          <source>Returns true or false if &lt;code&gt;bignum&lt;/code&gt; is in effect in the current scope.</source>
          <target state="translated">如果 &lt;code&gt;bignum&lt;/code&gt; 在当前作用域中有效，则返回true或false 。</target>
        </trans-unit>
        <trans-unit id="070335e3f7f1c54fd9a40504d8c28f973d89d7c8" translate="yes" xml:space="preserve">
          <source>Returns true or false if &lt;code&gt;bigrat&lt;/code&gt; is in effect in the current scope.</source>
          <target state="translated">如果 &lt;code&gt;bigrat&lt;/code&gt; 在当前作用域中有效，则返回true或false 。</target>
        </trans-unit>
        <trans-unit id="7b06bde566fc1edd59560961d2214a698d16d2be" translate="yes" xml:space="preserve">
          <source>Returns true, if the argument is likely to be a command.</source>
          <target state="translated">如果参数可能是一个命令,则返回true。</target>
        </trans-unit>
        <trans-unit id="b1c6719c0ce90334223ac6cf5038fe11bb944ede" translate="yes" xml:space="preserve">
          <source>Returns undef on failure.</source>
          <target state="translated">失败时返回undef。</target>
        </trans-unit>
        <trans-unit id="121317dfcd16cb713d71cfb208b7ac4c244d8d29" translate="yes" xml:space="preserve">
          <source>Returns undef upon failure.</source>
          <target state="translated">失败时返回undef。</target>
        </trans-unit>
        <trans-unit id="00afc5bb2af4a1a4377898de222c6c5572366b55" translate="yes" xml:space="preserve">
          <source>Returns undef where unavailable.</source>
          <target state="translated">如果不可用,则返回undef。</target>
        </trans-unit>
        <trans-unit id="9116fcc653f355fbfd6e7abd2f61495440b47db1" translate="yes" xml:space="preserve">
          <source>Returns what evaluating the hash in scalar context yields.</source>
          <target state="translated">返回在标量上下文中评估哈希的结果。</target>
        </trans-unit>
        <trans-unit id="7f59a49ed0b62250e67916f34c02bf313c90233c" translate="yes" xml:space="preserve">
          <source>Returns whether the &lt;code&gt;char *&lt;/code&gt; value returned by &lt;code&gt;HePV&lt;/code&gt; is encoded in UTF-8, doing any necessary dereferencing of possibly &lt;code&gt;SV*&lt;/code&gt; keys. The value returned will be 0 or non-0, not necessarily 1 (or even a value with any low bits set), so &lt;b&gt;do not&lt;/b&gt; blindly assign this to a &lt;code&gt;bool&lt;/code&gt; variable, as &lt;code&gt;bool&lt;/code&gt; may be a typedef for &lt;code&gt;char&lt;/code&gt; .</source>
          <target state="translated">返回由 &lt;code&gt;HePV&lt;/code&gt; 返回的 &lt;code&gt;char *&lt;/code&gt; 值是否以UTF-8编码，是否对 &lt;code&gt;SV*&lt;/code&gt; 键进行了必要的解引用。返回的值将为0或非0，不一定为1（甚至没有设置任何低位的值），因此&lt;b&gt;请不要&lt;/b&gt;盲目地将其分配给 &lt;code&gt;bool&lt;/code&gt; 变量，因为 &lt;code&gt;bool&lt;/code&gt; 可能是 &lt;code&gt;char&lt;/code&gt; 的typedef 。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="30353ca4e138694a3683e69ccd73f7116d965f39" translate="yes" xml:space="preserve">
          <source>Returns whether we can use IPv6.</source>
          <target state="translated">Returns whether we can use IPv6.</target>
        </trans-unit>
        <trans-unit id="4d0c52a5d31bdfe1d4347d2ead869da2d86188ce" translate="yes" xml:space="preserve">
          <source>Returns whether we can use SSL.</source>
          <target state="translated">返回我们是否可以使用SSL。</target>
        </trans-unit>
        <trans-unit id="6426421c03bcc5cb547f5467c8362c00ef8e22d0" translate="yes" xml:space="preserve">
          <source>Returns zero for positive arguments, non-zero for negative arguments [C99].</source>
          <target state="translated">正参数返回零,负参数返回非零[C99]。</target>
        </trans-unit>
        <trans-unit id="51ec5507e7b335d374fda130a376742c555fbb10" translate="yes" xml:space="preserve">
          <source>Returns: a Benchmark object.</source>
          <target state="translated">返回:一个Benchmark对象。</target>
        </trans-unit>
        <trans-unit id="c32b14c79752da5b732e7d8002dd6ef9e28bc920" translate="yes" xml:space="preserve">
          <source>Reversing by codepoint messes up diacritics, mistakenly converting &lt;code&gt;cr&amp;egrave;me br&amp;ucirc;l&amp;eacute;e&lt;/code&gt; into &lt;code&gt;&amp;eacute;el̂urb em̀erc&lt;/code&gt; instead of into &lt;code&gt;e&amp;eacute;l&amp;ucirc;rb em&amp;egrave;rc&lt;/code&gt; ; so reverse by grapheme instead. Both these approaches work right no matter what normalization the string is in:</source>
          <target state="translated">代码点的反转使变音符号混乱，错误地将 &lt;code&gt;cr&amp;egrave;me br&amp;ucirc;l&amp;eacute;e&lt;/code&gt; 转换为 &lt;code&gt;&amp;eacute;el̂urb em̀erc&lt;/code&gt; ,而不是转换为 &lt;code&gt;e&amp;eacute;l&amp;ucirc;rb em&amp;egrave;rc&lt;/code&gt; 。所以改为用字素来代替。不管字符串处于何种规范化中，这两种方法都可以正常工作：</target>
        </trans-unit>
        <trans-unit id="fab68fc82b2d76300ca1ff4f061653f085942faf" translate="yes" xml:space="preserve">
          <source>Reverts all config variables to the state in the saved config file.</source>
          <target state="translated">将所有配置变量恢复到保存的配置文件中的状态。</target>
        </trans-unit>
        <trans-unit id="cfb99563fa9591b9f08855877fac0944a4d84097" translate="yes" xml:space="preserve">
          <source>Review &lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq/wiki&quot;&gt;https://github.com/perl-doc-cats/perlfaq/wiki&lt;/a&gt;. If you don't find your suggestion create an issue or pull request against &lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq&quot;&gt;https://github.com/perl-doc-cats/perlfaq&lt;/a&gt;.</source>
          <target state="translated">查看&lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq/wiki&quot;&gt;https://github.com/perl-doc-cats/perlfaq/wiki&lt;/a&gt;。如果找不到您的建议，请对&lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq&quot;&gt;https://github.com/perl-doc-cats/perlfaq&lt;/a&gt;提出问题或提出请求。</target>
        </trans-unit>
        <trans-unit id="19fea591d81ec109c5e8a664f51c134758a0bc2e" translate="yes" xml:space="preserve">
          <source>Reviewed and assisted by Dean Roehrich, Ilya Zakharevich, Andreas Koenig, and Tim Bunce.</source>
          <target state="translated">由Dean Roehrich、Ilya Zakharevich、Andreas Koenig和Tim Bunce审查和协助。</target>
        </trans-unit>
        <trans-unit id="929c73f5eedbf3154e748357f0580d5f7e560c43" translate="yes" xml:space="preserve">
          <source>Revision date</source>
          <target state="translated">修订日期</target>
        </trans-unit>
        <trans-unit id="824932735c91a154350323ceaf339e097128258a" translate="yes" xml:space="preserve">
          <source>Reworked internals to support better interface to dodgey fields than normal Perl function provides. Added pw_has() field. Improved documentation.</source>
          <target state="translated">重做了内部结构,以支持比普通 Perl 函数更好的 dodgey 字段接口。增加了 pw_has()字段。改进了文档。</target>
        </trans-unit>
        <trans-unit id="07d1a72358d59f7b4d4684920a771ff936958fa1" translate="yes" xml:space="preserve">
          <source>Reworked slightly by J&amp;ouml;rg Walter &amp;lt;jwalt@cpan.org&amp;lt;gt&amp;gt; to be more concise about thread-safety of Perl code.</source>
          <target state="translated">约尔格&amp;middot;沃尔特（J&amp;ouml;rgWalter）&amp;lt;jwalt@cpan.org &amp;lt;&amp;gt;&amp;gt;进行了稍许的重新整理，以使Perl代码的线程安全性更加简洁。</target>
        </trans-unit>
        <trans-unit id="fdae908bfca6992fc8d75e0a1098919e5fb5b715" translate="yes" xml:space="preserve">
          <source>Reworked to use the Opcode module and other changes added by Tim Bunce.</source>
          <target state="translated">重新设计以使用Opcode模块和其他由Tim Bunce添加的改动。</target>
        </trans-unit>
        <trans-unit id="9a6773ad96db7ff026e4c199bf72c8ee8b865fad" translate="yes" xml:space="preserve">
          <source>Ricardo Signes &amp;lt;rjbs@cpan.org&amp;gt;</source>
          <target state="translated">里卡多&amp;middot;西斯（Ricardo Signes）&amp;lt;rjbs@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1fc1fcb411d385d33c3130c930f5dc3a9067d61c" translate="yes" xml:space="preserve">
          <source>Richard Clamp &amp;lt;richardc@unixbeard.net&amp;gt;</source>
          <target state="translated">理查德&amp;middot;克兰普（Richard Clamp）&amp;lt;richardc@unixbeard.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fe4cb18a025be706350b49a51923b7821e811358" translate="yes" xml:space="preserve">
          <source>Richard Foley &amp;lt;richard.foley@rfi.net&amp;gt; Copyright (c) 2000</source>
          <target state="translated">理查德&amp;middot;弗利（Richard Foley）&amp;lt;richard.foley@rfi.net&amp;gt;版权所有（c）2000</target>
        </trans-unit>
        <trans-unit id="e1621bb814a3d14c116734bfded333de0dc42d57" translate="yes" xml:space="preserve">
          <source>Richard Foley &amp;lt;richard.foley@rfi.net&amp;gt; Copyright (c) 2008</source>
          <target state="translated">理查德&amp;middot;弗利（Richard Foley）&amp;lt;richard.foley@rfi.net&amp;gt;版权所有（c）2008</target>
        </trans-unit>
        <trans-unit id="c16204821e2dd5a287a6a98bb45f40432a7482ea" translate="yes" xml:space="preserve">
          <source>Richard Soderberg &amp;lt;perl AT crystalflame DOT net&amp;gt; - Helping me out tons, trying to find reasons for races and other weird bugs!</source>
          <target state="translated">理查德&amp;middot;索德伯格（Richard Soderberg）&amp;lt;perl AT crystalflame DOT net&amp;gt;-帮助我克服重担，试图找出种族和其他怪异错误的原因！</target>
        </trans-unit>
        <trans-unit id="f5d7d8269406c8e21373049c7ceaa20731866c88" translate="yes" xml:space="preserve">
          <source>Right operand is a Regexp:</source>
          <target state="translated">右边的操作数是一个Regexp。</target>
        </trans-unit>
        <trans-unit id="ea4e5ca2c4529b1027635ef20230ed7f5749f550" translate="yes" xml:space="preserve">
          <source>Right shifting usually amounts to dividing $x by $n ** $y and truncating the result:</source>
          <target state="translated">右移通常相当于将$x除以$n**$y,并将结果截断。</target>
        </trans-unit>
        <trans-unit id="8e1238f1c2f8917ffa9df1be7d82e7d4cdcc7dc7" translate="yes" xml:space="preserve">
          <source>Right. Very funny. Don't do that.</source>
          <target state="translated">是啊,很有趣 非常有趣。不要这样做。</target>
        </trans-unit>
        <trans-unit id="07379953779572b23ed2558fd2e31c298c5068ac" translate="yes" xml:space="preserve">
          <source>Robbins, Kay. A., and Steven Robbins. Practical Unix Programming: A Guide to Concurrency, Communication, and Multithreading. Prentice-Hall, 1996.</source>
          <target state="translated">罗宾斯,凯。A.,和Steven Robbins.实用Unix编程。A Guide to Concurrency,Communication,and Multithreading.Prentice-Hall,1996。</target>
        </trans-unit>
        <trans-unit id="283cadc3a8f78bdaf7355a81e1ffd7e734bb292c" translate="yes" xml:space="preserve">
          <source>Rocco Caputo &amp;lt;troc AT netrus DOT net&amp;gt;</source>
          <target state="translated">罗科&amp;middot;卡普托&amp;lt;troc AT netrus DOT net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="18b0ae2f88a1cdcee8653b904e7092b3bed1b39e" translate="yes" xml:space="preserve">
          <source>Roderick Schertler &amp;lt;roderick@gate.net&amp;gt; - for various inputs</source>
          <target state="translated">Roderick Schertler &amp;lt;roderick@gate.net&amp;gt;-用于各种输入</target>
        </trans-unit>
        <trans-unit id="80b2caecfb2619b070c732f75696c89aa8660329" translate="yes" xml:space="preserve">
          <source>Role::Tiny</source>
          <target state="translated">Role::Tiny</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="3d757a7fd958e02d8192c9ff566f2078fa44423b" translate="yes" xml:space="preserve">
          <source>Roles are an alternative to inheritance for providing polymorphism. Let's assume we have two classes, &lt;code&gt;Radio&lt;/code&gt; and &lt;code&gt;Computer&lt;/code&gt; . Both of these things have on/off switches. We want to model that in our class definitions.</source>
          <target state="translated">角色是提供多态性的继承的替代方法。假设我们有两个类， &lt;code&gt;Radio&lt;/code&gt; 和 &lt;code&gt;Computer&lt;/code&gt; 。这两个东西都有开/关开关。我们想在我们的类定义中对其建模。</target>
        </trans-unit>
        <trans-unit id="ea66d675e76bfd310bd11c0a9dec9414bd6a3dcb" translate="yes" xml:space="preserve">
          <source>Ronald J Kimball &amp;lt;rjk@linguist.dartmouth.edu&amp;gt;</source>
          <target state="translated">罗纳德&amp;middot;金博尔&amp;lt;rjk@linguist.dartmouth.edu&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8fc1558ed2b47cf9f8046e73d3d9fa1d782da453" translate="yes" xml:space="preserve">
          <source>Roughly, if you ever found yourself writing this</source>
          <target state="translated">大致上,如果你曾经发现自己在写这篇文章的时候</target>
        </trans-unit>
        <trans-unit id="d5be650afe095d1b86854feefb8666a3c565045c" translate="yes" xml:space="preserve">
          <source>Round $x to accuracy &lt;code&gt;$A&lt;/code&gt; or precision &lt;code&gt;$P&lt;/code&gt; using the round mode &lt;code&gt;$round_mode&lt;/code&gt; .</source>
          <target state="translated">回合$ X时精度 &lt;code&gt;$A&lt;/code&gt; 或精度 &lt;code&gt;$P&lt;/code&gt; 采用圆形模式 &lt;code&gt;$round_mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed14e07529b686f58007f5e3da9ec33b810ef68c" translate="yes" xml:space="preserve">
          <source>Round $x towards minus infinity (i.e., set $x to the largest integer less than or equal to $x). This is a no-op in BigInt, but changes $x in BigFloat, if $x is not an integer.</source>
          <target state="translated">将 $x 四舍五入到减去无穷大 (即把 $x 设为小于或等于 $x 的最大整数)。在BigInt中,这是一个无操作,但在BigFloat中,如果$x不是整数,则改变$x。</target>
        </trans-unit>
        <trans-unit id="d3965d97c158aff3589c25015271155450961486" translate="yes" xml:space="preserve">
          <source>Round $x towards plus infinity (i.e., set $x to the smallest integer greater than or equal to $x). This is a no-op in BigInt, but changes $x in BigFloat, if $x is not an integer.</source>
          <target state="translated">将 $x 四舍五入为加无穷大 (即,将 $x 设为大于或等于 $x 的最小整数).这在 BigInt 中是没有操作的,但在 BigFloat 中,如果 $x 不是整数,则改变 $x。在BigInt中,这是一个无操作,但在BigFloat中,如果$x不是整数,则改变$x。</target>
        </trans-unit>
        <trans-unit id="837550e6bb9bc5af84ed93a65b16832db1430f55" translate="yes" xml:space="preserve">
          <source>Round $x towards zero. This is a no-op in BigInt, but changes $x in BigFloat, if $x is not an integer.</source>
          <target state="translated">将$x四舍五入为零。在BigInt中,这是一个没有操作的选项,但是在BigFloat中,如果$x不是一个整数,则会改变$x。</target>
        </trans-unit>
        <trans-unit id="710080b52565cfdf0681e86d481627d9918f12a9" translate="yes" xml:space="preserve">
          <source>Round trip safe. A character decoded to Unicode encodes back to the same byte sequence. Most characters have this flag.</source>
          <target state="translated">回程安全。解码为Unicode的字符编码回到相同的字节序列。大多数字符都有这个标志。</target>
        </trans-unit>
        <trans-unit id="905cc3792492961c10eb158788a7c9f956d57aa5" translate="yes" xml:space="preserve">
          <source>Rounding</source>
          <target state="translated">Rounding</target>
        </trans-unit>
        <trans-unit id="f751763a4b1d62eba85a96b8eb7876a818d572fe" translate="yes" xml:space="preserve">
          <source>Rounding in financial applications can have serious implications, and the rounding method used should be specified precisely. In these cases, it probably pays not to trust whichever system of rounding is being used by Perl, but instead to implement the rounding function you need yourself.</source>
          <target state="translated">金融应用中的四舍五入可能会产生严重的影响,应该精确地指定使用的四舍五入方法。在这种情况下,可能不要相信Perl使用的任何一种四舍五入系统,而是要自己实现所需的四舍五入功能。</target>
        </trans-unit>
        <trans-unit id="6698eae5d6b2b4ddcea946ace93c25b4e6ef6c3a" translate="yes" xml:space="preserve">
          <source>Rounding in financial applications can have serious implications, and the rounding method used should be specified precisely. In these cases, it probably pays not to trust whichever system rounding is being used by Perl, but to instead implement the rounding function you need yourself.</source>
          <target state="translated">金融应用中的四舍五入可能会产生严重的影响,应该精确地指定使用的四舍五入方法。在这种情况下,可能不要相信Perl使用的哪种系统四舍五入,而是要自己实现所需的四舍五入功能。</target>
        </trans-unit>
        <trans-unit id="f4268fe614cfe304ddeb1b291f77cb218846bf0c" translate="yes" xml:space="preserve">
          <source>Rounding mode R</source>
          <target state="translated">四舍五入模式R</target>
        </trans-unit>
        <trans-unit id="801086876b0b5e84b716b6aedf1f8228ba8acfbd" translate="yes" xml:space="preserve">
          <source>Rounds to an integer.</source>
          <target state="translated">四舍五入到一个整数。</target>
        </trans-unit>
        <trans-unit id="bf85833d7405feeeec7667a69742fbf41e8e6700" translate="yes" xml:space="preserve">
          <source>Rounds to the $scale'th place left from the '.', counting from the dot. The first digit is numbered 1.</source>
          <target state="translated">从'.'开始向左舍入$scale'th位,从点开始计算。第一个数字是1。</target>
        </trans-unit>
        <trans-unit id="90e22860991a8aeaac612a499d65ebd6f21eef25" translate="yes" xml:space="preserve">
          <source>Rounds to the $scale'th place right from the '.', counting from the dot.</source>
          <target state="translated">从'.'开始向$scale'th位进发,从点开始计算。</target>
        </trans-unit>
        <trans-unit id="4958256b98544f9414f9fae8ee3b737198f6fcdd" translate="yes" xml:space="preserve">
          <source>Rpcb1.xsh</source>
          <target state="translated">Rpcb1.xsh</target>
        </trans-unit>
        <trans-unit id="153d87d3f8ea09dd979152152155f13a48dbfd40" translate="yes" xml:space="preserve">
          <source>Rudimentary per-package memory usage dump. Calculates total size of strings found in variables in the package. This does not include lexicals in a module's file scope, or lost in closures.</source>
          <target state="translated">基本的每个包的内存使用量转储。计算包中变量中字符串的总大小。这不包括模块文件作用域中的词法,也不包括闭包中丢失的词法。</target>
        </trans-unit>
        <trans-unit id="bb11a8e3f8712e36e7cd9d1c615a4e3dbb03336a" translate="yes" xml:space="preserve">
          <source>Rules</source>
          <target state="translated">Rules</target>
        </trans-unit>
        <trans-unit id="82ade16083a700a9e567305fb686d47ae9d18b6d" translate="yes" xml:space="preserve">
          <source>Rules data structure</source>
          <target state="translated">规则数据结构</target>
        </trans-unit>
        <trans-unit id="9225115841543de7d5a9513dca793003c049ec1b" translate="yes" xml:space="preserve">
          <source>Rules examples</source>
          <target state="translated">规则范例</target>
        </trans-unit>
        <trans-unit id="36b2207b593443540c54328adf8c73e48c5a2841" translate="yes" xml:space="preserve">
          <source>Rules resolution</source>
          <target state="translated">规则决议</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="2ed293065b44f042c95a5ac523d0194821e21e25" translate="yes" xml:space="preserve">
          <source>Run &quot;&lt;code&gt;h2xs -A -n Mytest&lt;/code&gt; &quot;. This creates a directory named Mytest, possibly under ext/ if that directory exists in the current working directory. Several files will be created under the Mytest dir, including MANIFEST, Makefile.PL, lib/Mytest.pm, Mytest.xs, t/Mytest.t, and Changes.</source>
          <target state="translated">运行&amp;ldquo; &lt;code&gt;h2xs -A -n Mytest&lt;/code&gt; &amp;rdquo;。这将创建一个名为Mytest的目录，如果当前工作目录中存在该目录，则可能在ext /下。在Mytest目录下将创建几个文件，包括MANIFEST，Makefile.PL，lib / Mytest.pm，Mytest.xs，t / Mytest.t和Changes。</target>
        </trans-unit>
        <trans-unit id="40b1680590a9e17c0525f4e29f165cce74b8cecd" translate="yes" xml:space="preserve">
          <source>Run &quot;&lt;code&gt;make test&lt;/code&gt; &quot; and all should be well. There are some warnings on missing tests for the Mytest2::mylib extension, but you can ignore them.</source>
          <target state="translated">运行&amp;ldquo; &lt;code&gt;make test&lt;/code&gt; &amp;rdquo;，一切都应该很好。关于Mytest2 :: mylib扩展缺少测试的警告，但是您可以忽略它们。</target>
        </trans-unit>
        <trans-unit id="c5ac738ea9d0004f5e399473d8c37b59f41ce4ca" translate="yes" xml:space="preserve">
          <source>Run &quot;&lt;code&gt;make test&lt;/code&gt; &quot; and notice that Perl dies with a fatal error. Perl won't let you change the value of constants!</source>
          <target state="translated">运行&amp;ldquo; &lt;code&gt;make test&lt;/code&gt; &amp;rdquo;，注意Perl死于致命错误。Perl不会让您更改常量的值！</target>
        </trans-unit>
        <trans-unit id="d0ecfb9954902261408d81dec22ab79badcc0b55" translate="yes" xml:space="preserve">
          <source>Run &amp;lt;n&amp;gt; (default 9) parallel jobs.</source>
          <target state="translated">运行&amp;lt;n&amp;gt;（默认9个）并行作业。</target>
        </trans-unit>
        <trans-unit id="5ebe6d216897e8da269fdd9d77d3781c9acd0c04" translate="yes" xml:space="preserve">
          <source>Run Configure with -Duseithreads which will configure Perl with the Perl 5.8.0 &quot;interpreter threads&quot;, see &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt;.</source>
          <target state="translated">运行带有-Duseithreads的配置，它将使用Perl 5.8.0&amp;ldquo;解释器线程&amp;rdquo;来配置Perl，请参阅&lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="021a32a69e29cd7390a0b00ca84ffca5411ecab1" translate="yes" xml:space="preserve">
          <source>Run Perl standard test scripts with statistics</source>
          <target state="translated">运行带有统计数据的Perl标准测试脚本</target>
        </trans-unit>
        <trans-unit id="132b74943d953fced136da3d16fb7652fc817fff" translate="yes" xml:space="preserve">
          <source>Run Perl test scripts with color</source>
          <target state="translated">运行带有颜色的Perl测试脚本</target>
        </trans-unit>
        <trans-unit id="1d5731cf909147c22f4afe5b6cd77d3b2a5b25fb" translate="yes" xml:space="preserve">
          <source>Run Tk while prompting (with ReadLine).</source>
          <target state="translated">在提示时运行Tk(用ReadLine)。</target>
        </trans-unit>
        <trans-unit id="8b4aade5fb1327e0cd83ef6aded2d84741d502f5" translate="yes" xml:space="preserve">
          <source>Run all tests in normal order</source>
          <target state="translated">按正常顺序运行所有测试</target>
        </trans-unit>
        <trans-unit id="e6617249c8dc884cd3653e230bd6a061c75a4ccf" translate="yes" xml:space="preserve">
          <source>Run all tests in normal order. Multple options may be specified, so to run all tests with the failures from last time first:</source>
          <target state="translated">按正常顺序运行所有测试。可以指定多个选项,所以要先运行上次失败的所有测试。</target>
        </trans-unit>
        <trans-unit id="b29e50dd26d0d667426a2c9c5cc5cdb059d02781" translate="yes" xml:space="preserve">
          <source>Run any tests with todos.</source>
          <target state="translated">用todos运行任何测试。</target>
        </trans-unit>
        <trans-unit id="a478fdca867e1e2d00738df21d08640b80cc45e3" translate="yes" xml:space="preserve">
          <source>Run automagically; convert &lt;b&gt;headerfiles&lt;/b&gt;, as well as any &lt;b&gt;.h&lt;/b&gt; files which they include. This option will search for &lt;b&gt;.h&lt;/b&gt; files in all directories which your C compiler ordinarily uses. &lt;b&gt;-a&lt;/b&gt; and &lt;b&gt;-r&lt;/b&gt; are mutually exclusive.</source>
          <target state="translated">自动运行；转换&lt;b&gt;headerfiles&lt;/b&gt;，以及任何&lt;b&gt;的.h&lt;/b&gt;文件，它们包括。此选项将在C编译器通常使用的所有目录中搜索&lt;b&gt;.h&lt;/b&gt;文件。&lt;b&gt;-a&lt;/b&gt;和&lt;b&gt;-r&lt;/b&gt;是互斥的。</target>
        </trans-unit>
        <trans-unit id="e48d34e0fb300e987c588be4615fe8a461781363" translate="yes" xml:space="preserve">
          <source>Run by O'Reilly Media (the publisher of &lt;a href=&quot;perlbook&quot;&gt;the Camel Book&lt;/a&gt;, among other Perl-related literature), perl.com provides current Perl news, articles, and resources for Perl developers as well as a directory of other useful websites.</source>
          <target state="translated">perl.com 由O'Reilly Media（&lt;a href=&quot;perlbook&quot;&gt;骆驼书&lt;/a&gt;的出版商，以及其他与Perl相关的文献）运营，它为Perl开发人员提供最新的Perl新闻，文章和资源，以及其他有用网站的目录。</target>
        </trans-unit>
        <trans-unit id="326960afc55d724212ac1930fb4269abdb59d10d" translate="yes" xml:space="preserve">
          <source>Run cmd in a subprocess (reads from DB::IN, writes to DB::OUT) See &lt;code&gt;o shellBang&lt;/code&gt; , also. Note that the user's current shell (well, their &lt;code&gt;$ENV{SHELL}&lt;/code&gt; variable) will be used, which can interfere with proper interpretation of exit status or signal and coredump information.</source>
          <target state="translated">在子 &lt;code&gt;o shellBang&lt;/code&gt; 运行cmd（从DB :: IN读取，写入DB :: OUT）。另请参见shellBang。请注意，将使用用户的当前shell（以及他们的 &lt;code&gt;$ENV{SHELL}&lt;/code&gt; 变量），这会干扰对退出状态或信号和核心转储信息的正确解释。</target>
        </trans-unit>
        <trans-unit id="eb24057fedbca0dcb021765da26b416b33187ba9" translate="yes" xml:space="preserve">
          <source>Run h2xs, overwriting older autogenerated files:</source>
          <target state="translated">运行h2xs,覆盖旧的自动生成的文件。</target>
        </trans-unit>
        <trans-unit id="16aea89e863e124d187a74fdbeac06b4be6038c5" translate="yes" xml:space="preserve">
          <source>Run in the same order as last time</source>
          <target state="translated">按上次的顺序运行</target>
        </trans-unit>
        <trans-unit id="b4429b64fc5881f2fabca157076445de7d127a35" translate="yes" xml:space="preserve">
          <source>Run it with the flavor of Perl (</source>
          <target state="translated">用Perl的味道运行它(</target>
        </trans-unit>
        <trans-unit id="347675fe350031dfd280ae83b6e21090e95f3292" translate="yes" xml:space="preserve">
          <source>Run it, Run it:</source>
          <target state="translated">跑吧,跑吧。</target>
        </trans-unit>
        <trans-unit id="d147275c88800a63e231e45f2c38ff73c3aa8d51" translate="yes" xml:space="preserve">
          <source>Run only the failed tests from last time</source>
          <target state="translated">只运行上次失败的测试</target>
        </trans-unit>
        <trans-unit id="a25befa25096ae64e47bee7ddc24245960a98020" translate="yes" xml:space="preserve">
          <source>Run only the passed tests from last time</source>
          <target state="translated">只运行上次通过的测试</target>
        </trans-unit>
        <trans-unit id="4d959cffbfdddc280822defcb6f79363ecf38f04" translate="yes" xml:space="preserve">
          <source>Run only the passed tests from last time. Useful to make sure that no new problems have been introduced.</source>
          <target state="translated">只运行上次通过的测试。有助于确保没有新的问题被引入。</target>
        </trans-unit>
        <trans-unit id="cbd76170a9102754749c68ddd809939c528d45ff" translate="yes" xml:space="preserve">
          <source>Run only the tests that failed on the last run.</source>
          <target state="translated">只运行上次运行失败的测试。</target>
        </trans-unit>
        <trans-unit id="ebe6589f33506756f449cc0f8dffe352f935e46d" translate="yes" xml:space="preserve">
          <source>Run recursively; if any of &lt;b&gt;headerfiles&lt;/b&gt; are directories, then run</source>
          <target state="translated">递归运行；如果任何&lt;b&gt;headerfiles&lt;/b&gt;是目录，然后运行</target>
        </trans-unit>
        <trans-unit id="4d703a042a216c55e2d0e661b30e14e4754b587e" translate="yes" xml:space="preserve">
          <source>Run test scripts with statistics</source>
          <target state="translated">运行带有统计功能的测试脚本</target>
        </trans-unit>
        <trans-unit id="3d77737445a9bcee2270f1793080b381688d576f" translate="yes" xml:space="preserve">
          <source>Run test tests in fastest to slowest order.</source>
          <target state="translated">按最快到最慢的顺序运行测试试验。</target>
        </trans-unit>
        <trans-unit id="d983e0b42fe98913127be263fea7fcc1061fc81c" translate="yes" xml:space="preserve">
          <source>Run the autobundle command for your old perl and optionally rename the resulting bundle file (e.g. Bundle/mybundle.pm), install the new perl with the Configure option prefix, e.g.</source>
          <target state="translated">为你的旧 perl 运行 autobundle 命令,并选择性地重命名产生的 bundle 文件 (例如 Bundle/mybundle.pm),用 Configure 选项前缀安装新的 perl,例如。</target>
        </trans-unit>
        <trans-unit id="b902930e9608e1708152e8271d3ed6bc10e108c3" translate="yes" xml:space="preserve">
          <source>Run the debugger command, piping DB::OUT into your current pager.</source>
          <target state="translated">运行调试器命令,将DB::OUT管道到当前的寻呼机中。</target>
        </trans-unit>
        <trans-unit id="2e6dfab3126ed8f08d6e193e0c7874ae7cc3053e" translate="yes" xml:space="preserve">
          <source>Run the following command at the command prompt:</source>
          <target state="translated">在命令提示符下运行以下命令。</target>
        </trans-unit>
        <trans-unit id="923312cc1522105a4d6b517a1f05c9d1e5b835ca" translate="yes" xml:space="preserve">
          <source>Run the named tests and display a summary of result. Tests will be run in the order found.</source>
          <target state="translated">运行指定的测试并显示结果摘要。测试将按照找到的顺序运行。</target>
        </trans-unit>
        <trans-unit id="13bec37d48429c19b3c97f27f5e6093e330bf0b4" translate="yes" xml:space="preserve">
          <source>Run the new code against the same logfile, as above, to check the new time.</source>
          <target state="translated">对着同样的日志文件运行新的代码,就像上面一样,检查新的时间。</target>
        </trans-unit>
        <trans-unit id="344fe785e4b01bb1a9823c27a947942df830fbcf" translate="yes" xml:space="preserve">
          <source>Run the program with the given arguments.</source>
          <target state="translated">用给定的参数运行程序。</target>
        </trans-unit>
        <trans-unit id="b04d438f75db5b58c7668b6c858a25848fc19c67" translate="yes" xml:space="preserve">
          <source>Run the same tests as the last time the state was saved. This makes it possible, for example, to recreate the ordering of a shuffled test.</source>
          <target state="translated">运行与上次保存状态时相同的测试。例如,这使得它可以重新创建一个洗牌测试的顺序。</target>
        </trans-unit>
        <trans-unit id="615587743f9be2b0898b636b95c48f5366220b40" translate="yes" xml:space="preserve">
          <source>Run the test suite with the</source>
          <target state="translated">运行测试套件,使用</target>
        </trans-unit>
        <trans-unit id="8ab2804c16c9e2f16adcf494a79aa4071b8d2940" translate="yes" xml:space="preserve">
          <source>Run the tests in newest to oldest order based on the modification times of the test scripts.</source>
          <target state="translated">根据测试脚本的修改时间,按照从新到旧的顺序运行测试。</target>
        </trans-unit>
        <trans-unit id="276857a4a89b1b42f09b42c1a1d021db70aa0067" translate="yes" xml:space="preserve">
          <source>Run the tests in newest to oldest order.</source>
          <target state="translated">按从新到旧的顺序运行测试。</target>
        </trans-unit>
        <trans-unit id="187026222974971fb5d64e60df0fc344ecab04e0" translate="yes" xml:space="preserve">
          <source>Run the tests in oldest to newest order.</source>
          <target state="translated">按最早的到最新的顺序运行测试。</target>
        </trans-unit>
        <trans-unit id="e37276fad9d46f08b5b3740bb8681d41e48d7322" translate="yes" xml:space="preserve">
          <source>Run the tests in slowest to fastest order.</source>
          <target state="translated">按最慢到最快的顺序运行测试。</target>
        </trans-unit>
        <trans-unit id="99e8e6b9895108b7d033db82aba32483ab5e7dcd" translate="yes" xml:space="preserve">
          <source>Run the tests in slowest to fastest order. This is useful in conjunction with the &lt;code&gt;-j&lt;/code&gt; parallel testing switch to ensure that your slowest tests start running first.</source>
          <target state="translated">以最慢到最快的顺序运行测试。与 &lt;code&gt;-j&lt;/code&gt; 并行测试开关一起使用时，此功能很有用，以确保最慢的测试首先开始运行。</target>
        </trans-unit>
        <trans-unit id="c2992040d44efab3ec014c23b10fdc73d1c5a258" translate="yes" xml:space="preserve">
          <source>Run the tests ordered by number of todos.</source>
          <target state="translated">按todos数量排序运行测试。</target>
        </trans-unit>
        <trans-unit id="dcd2ba91cbdef101a4e551d876a6bbe03f610cc3" translate="yes" xml:space="preserve">
          <source>Run the tests that most recently failed first</source>
          <target state="translated">先运行最近失败的测试</target>
        </trans-unit>
        <trans-unit id="22a661e4b1cc97884aa5c7ad00e644aff3fe8d32" translate="yes" xml:space="preserve">
          <source>Run the tests that most recently failed first. The last failure time of each test is stored. The &lt;code&gt;hot&lt;/code&gt; option causes tests to be run in most-recent- failure order.</source>
          <target state="translated">首先运行最近失败的测试。存储每个测试的最后失败时间。该 &lt;code&gt;hot&lt;/code&gt; 选项使测试中最recent-失败顺序运行。</target>
        </trans-unit>
        <trans-unit id="b751d8ce33b82a72966b78a2fe594e60073f52f4" translate="yes" xml:space="preserve">
          <source>Run the tests under verbose mode so you can see what tests were run, and debug output.</source>
          <target state="translated">在verbose模式下运行测试,这样你就可以看到运行了哪些测试,以及调试输出。</target>
        </trans-unit>
        <trans-unit id="64d909ee99215528f8bb65aee45be2b7c215e564" translate="yes" xml:space="preserve">
          <source>Run the torture tests as well as the normal set.</source>
          <target state="translated">运行拷问测试以及正常集。</target>
        </trans-unit>
        <trans-unit id="d71365267480825eaa78ea5cd3ecc4ed182988c9" translate="yes" xml:space="preserve">
          <source>Run these code snippets to get a quick feel for the behavior of this module. When you are through with these examples, you may want to add or change the various configuration variables described above, to see their behavior. (See the testsuite in the Data::Dumper distribution for more examples.)</source>
          <target state="translated">运行这些代码片段来快速了解这个模块的行为。当你完成这些例子后,你可能会想要添加或更改上面描述的各种配置变量,以查看它们的行为。(更多的例子请参见 Data::Dumper 发行版中的 testsuite)</target>
        </trans-unit>
        <trans-unit id="36c64406909c9d8d65152eea12aba242a2f308b8" translate="yes" xml:space="preserve">
          <source>Run those test scripts that have been modified since the last test run.</source>
          <target state="translated">运行那些自上次测试运行后被修改的测试脚本。</target>
        </trans-unit>
        <trans-unit id="d65232ea421c0a08d384c464e7edc6b231264df7" translate="yes" xml:space="preserve">
          <source>Run until the end of the current function, then stop again.</source>
          <target state="translated">运行到当前功能结束,然后再停止。</target>
        </trans-unit>
        <trans-unit id="9402341f966b1f2237c237df2a33a29de914171b" translate="yes" xml:space="preserve">
          <source>Run until the next breakpoint.</source>
          <target state="translated">运行到下一个断点。</target>
        </trans-unit>
        <trans-unit id="cb99206f9621cf0baa39b3455a1ac0d1fb5b7c1b" translate="yes" xml:space="preserve">
          <source>Run-time Output</source>
          <target state="translated">运行时输出</target>
        </trans-unit>
        <trans-unit id="3835d25772e88988c981fd235e2e007d564bb224" translate="yes" xml:space="preserve">
          <source>Run-time Overloading</source>
          <target state="translated">运行时超载</target>
        </trans-unit>
        <trans-unit id="73989d9c59264da08a15dba21c7d58237a91f08f" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="translated">Running</target>
        </trans-unit>
        <trans-unit id="a4157a9dab9bc4703b677fbf1666829ae51b08f6" translate="yes" xml:space="preserve">
          <source>Running &quot;&lt;code&gt;make test&lt;/code&gt; &quot; should now print out that all nine tests are okay.</source>
          <target state="translated">现在运行&amp;ldquo; &lt;code&gt;make test&lt;/code&gt; &amp;rdquo;应该打印出所有九个测试都可以。</target>
        </trans-unit>
        <trans-unit id="acb2d381f62f6e9ccdd680091fe04a4f981c57a1" translate="yes" xml:space="preserve">
          <source>Running B::Concise::compile()</source>
          <target state="translated">运行B::Concise::compile()</target>
        </trans-unit>
        <trans-unit id="f0e8ef3ad21e46856efdf6639102c115914f4c23" translate="yes" xml:space="preserve">
          <source>Running Perl Scripts</source>
          <target state="translated">运行Perl脚本</target>
        </trans-unit>
        <trans-unit id="448aca736dc491b373a3bffd1cb8148803168aed" translate="yes" xml:space="preserve">
          <source>Running Perl programs</source>
          <target state="translated">运行Perl程序</target>
        </trans-unit>
        <trans-unit id="3ca8f02052bacd5ffc869e5f86246ee326790af1" translate="yes" xml:space="preserve">
          <source>Running it produces the error in question:</source>
          <target state="translated">运行后会产生上述错误。</target>
        </trans-unit>
        <trans-unit id="f113af52a808286796ebc41b9efb541559f87c11" translate="yes" xml:space="preserve">
          <source>Running it produces this output:</source>
          <target state="translated">运行它会产生这样的输出。</target>
        </trans-unit>
        <trans-unit id="d38bbafeb6c120aa99d66722d9256164881ad731" translate="yes" xml:space="preserve">
          <source>Running ppport.h</source>
          <target state="translated">运行pport.h</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">运行测试</target>
        </trans-unit>
        <trans-unit id="976e0b62f0992bb63dac57b4ef7d1e39b7fced97" translate="yes" xml:space="preserve">
          <source>Running tests by hand</source>
          <target state="translated">手动运行测试</target>
        </trans-unit>
        <trans-unit id="9288568c58b86cfa31ab840046652ac62749b9c2" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;harness&lt;/code&gt; is painful because of the many failing Unicode-related tests will output megabytes of failure messages, but if one patiently waits, one gets these results:</source>
          <target state="translated">运行该 &lt;code&gt;harness&lt;/code&gt; 非常麻烦，因为许多与Unicode相关的测试失败，将输出兆字节的失败消息，但是如果耐心等待，一个人将得到以下结果：</target>
        </trans-unit>
        <trans-unit id="8f4fca91d05d5a91f846d5e3bb38f85ccda92848" translate="yes" xml:space="preserve">
          <source>Running the code gives us our results:</source>
          <target state="translated">运行这段代码,就能得到我们的结果。</target>
        </trans-unit>
        <trans-unit id="298ce7341da07a876349a3e21fbfee6edd26611a" translate="yes" xml:space="preserve">
          <source>Running the profiled version of Perl will cause profile output to be generated. For each source file an accompanying</source>
          <target state="translated">运行Perl的剖面版本将导致剖面输出的生成。对于每个源文件,都会产生一个附带的</target>
        </trans-unit>
        <trans-unit id="9d3ce8fa0731f61c84ffe2d9bfa287832f73b234" translate="yes" xml:space="preserve">
          <source>Running the test suite in SunOS 4.1 is a bit tricky since the</source>
          <target state="translated">在SunOS 4.1中运行测试套件有点棘手,因为在SunOS 4.1中的</target>
        </trans-unit>
        <trans-unit id="ba601cc1eca875455c950799ee630fdc36657e74" translate="yes" xml:space="preserve">
          <source>Running this program produces the following output:</source>
          <target state="translated">运行该程序会产生以下输出。</target>
        </trans-unit>
        <trans-unit id="ba6290730e5261e657d8ab4b0945945b52af6d06" translate="yes" xml:space="preserve">
          <source>Running this same process as a &lt;code&gt;Schwarzian Transform&lt;/code&gt; it is possible to eliminate the input and output arrays for storing all the data, and work on the input directly as it arrives too. Otherwise, the code looks fairly similar:</source>
          <target state="translated">运行与 &lt;code&gt;Schwarzian Transform&lt;/code&gt; 相同的过程，可以消除用于存储所有数据的输入和输出数组，并在输入到达时直接对其进行处理。否则，代码看起来非常相似：</target>
        </trans-unit>
        <trans-unit id="c99795b0ad2b8f6ce5eb458b619b71027a25a260" translate="yes" xml:space="preserve">
          <source>Running under the &lt;code&gt;&amp;ndash;T&lt;/code&gt; switch, marking all external data as suspect and refusing to use it with system commands. See Camel chapter 20, &amp;ldquo;Security&amp;rdquo;.</source>
          <target state="translated">在 &lt;code&gt;&amp;ndash;T&lt;/code&gt; 开关下运行，将所有外部数据标记为可疑，并拒绝将其与系统命令一起使用。请参阅骆驼第20章&amp;ldquo;安全性&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f8cde9834f650e063d400cc9ef89fc044ff61626" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;make&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">在与此模块关联的发行版上运行 &lt;code&gt;make&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef7beb2e98a633700558f628bbef52293537360e" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;perldoc&lt;/code&gt; on this module.</source>
          <target state="translated">在此模块上运行 &lt;code&gt;perldoc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="203a6f0990a5e3d73b37486df63370d540b212f2" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;readme&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">在与此模块关联的发行版上运行 &lt;code&gt;readme&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="4cb53d21c3faaa60d712747f2aa9c43958382b5a" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;test&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">在与此模块关联的发行版上运行 &lt;code&gt;test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54b3d63665a8b2545742aa75f4e10bb696c3ca15" translate="yes" xml:space="preserve">
          <source>Runs a clean on the distribution associated with this module.</source>
          <target state="translated">在与此模块相关的发行版上运行清理。</target>
        </trans-unit>
        <trans-unit id="7481337f98a4521e76d8e62c2472f27b0ef4936d" translate="yes" xml:space="preserve">
          <source>Runs a cvs_import on the distribution associated with this module.</source>
          <target state="translated">在与此模块相关联的发行版上运行 cvs_import。</target>
        </trans-unit>
        <trans-unit id="f6afcf4e11da7f66d018bb65aab69f1ee5b92dec" translate="yes" xml:space="preserve">
          <source>Runs a get on the distribution associated with this module.</source>
          <target state="translated">运行与本模块相关联的发行版的get。</target>
        </trans-unit>
        <trans-unit id="31130a723db7cca107881803b18536b8caa450ae" translate="yes" xml:space="preserve">
          <source>Runs a tardist first and uuencodes the tarfile.</source>
          <target state="translated">首先运行一个 tardist 并对 tar 文件进行 uuencodes。</target>
        </trans-unit>
        <trans-unit id="5fe942298de68e1416635017ad15368a86af0bdf" translate="yes" xml:space="preserve">
          <source>Runs all the given &lt;code&gt;@test_files&lt;/code&gt; (just like &lt;code&gt;runtests()&lt;/code&gt; ) but doesn't generate the final report. During testing, progress information will be written to the currently selected output filehandle (usually &lt;code&gt;STDOUT&lt;/code&gt; ), or to the filehandle given by the &lt;code&gt;out&lt;/code&gt; parameter. The</source>
          <target state="translated">运行所有给定的 &lt;code&gt;@test_files&lt;/code&gt; （就像 &lt;code&gt;runtests()&lt;/code&gt; 一样），但不生成最终报告。在测试过程中，进度信息将被写入当前选定的输出文件句柄（通常为 &lt;code&gt;STDOUT&lt;/code&gt; ）或 &lt;code&gt;out&lt;/code&gt; 参数给定的文件句柄中。的</target>
        </trans-unit>
        <trans-unit id="6dacfc94bc7a00fd8176e7a38504744a4951f65a" translate="yes" xml:space="preserve">
          <source>Runs an &lt;code&gt;install&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">在与此模块关联的发行版上运行 &lt;code&gt;install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cb9753fd8412766e708598d8f8b0a6237ec39da" translate="yes" xml:space="preserve">
          <source>Runs an interactive configuration dialog for matching variables. Without argument runs the dialog over all supported config variables. To specify a MATCH the argument must be enclosed by slashes.</source>
          <target state="translated">运行交互式配置对话框以匹配变量。如果没有参数,则会在所有支持的配置变量上运行对话框。要指定匹配变量,必须用斜线括起来。</target>
        </trans-unit>
        <trans-unit id="429f486dc0c3f35135f4234db94197e212d8160c" translate="yes" xml:space="preserve">
          <source>Runs the supplied command and includes its output into the current XS document. &lt;code&gt;INCLUDE_COMMAND&lt;/code&gt; assigns special meaning to the &lt;code&gt;$^X&lt;/code&gt; token in that it runs the same perl interpreter that is running &lt;code&gt;xsubpp&lt;/code&gt; :</source>
          <target state="translated">运行提供的命令，并将其输出包含到当前XS文档中。 &lt;code&gt;INCLUDE_COMMAND&lt;/code&gt; 为 &lt;code&gt;$^X&lt;/code&gt; 令牌赋予特殊含义，因为它运行与运行 &lt;code&gt;xsubpp&lt;/code&gt; 相同的perl解释器：</target>
        </trans-unit>
        <trans-unit id="fbe649f94aca783e56d7207473071c2e11f49842" translate="yes" xml:space="preserve">
          <source>Runs the tests on @ARGV via Test::Harness passing through the $verbose flag. Any @test_libs will be unshifted onto the test's @INC.</source>
          <target state="translated">通过Test::Harness通过$verbose标志在@ARGV上运行测试。任何 @test_libs 都会被解移到测试的 @INC 上。</target>
        </trans-unit>
        <trans-unit id="cf845777b1ba4ed44be135f0aa292db074e7ce96" translate="yes" xml:space="preserve">
          <source>Runtime debugging</source>
          <target state="translated">运行时调试</target>
        </trans-unit>
        <trans-unit id="5f8daabe1c3305061a303ad921d48e240dec05ca" translate="yes" xml:space="preserve">
          <source>Runtime require of both modules and files</source>
          <target state="translated">运行时需要模块和文件</target>
        </trans-unit>
        <trans-unit id="8fc591fdc47c99524c9038fddd8cc8299faabc5e" translate="yes" xml:space="preserve">
          <source>Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;, based</source>
          <target state="translated">Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;，基于</target>
        </trans-unit>
        <trans-unit id="5744fe01693afab781f83e6c4f4f645a19bfc91f" translate="yes" xml:space="preserve">
          <source>Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;, with large portions of this documentation taken from the documentation of the original &lt;b&gt;pod2man&lt;/b&gt; implementation by Larry Wall and Tom Christiansen.</source>
          <target state="translated">Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;，其中大部分文档来自Larry Wall和Tom Christiansen 最初的&lt;b&gt;pod2man&lt;/b&gt;实现的文档。</target>
        </trans-unit>
        <trans-unit id="ccf4b9bc92d7f944555e33cae0a6ad8a3c2bde6c" translate="yes" xml:space="preserve">
          <source>Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="7d21195005ef117e310a2370051226757a91d1fc" translate="yes" xml:space="preserve">
          <source>S&amp;eacute;bastien Aperghis-Tramoni &lt;code&gt;&amp;lt;saper@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">S&amp;eacute;bastienAperghis-Tramoni &lt;code&gt;&amp;lt;saper@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="689837fee911a3abe7f6a22d5e5632351df4b07a" translate="yes" xml:space="preserve">
          <source>S-regex</source>
          <target state="translated">S-regex</target>
        </trans-unit>
        <trans-unit id="79e42ced841472bde049b15b6714ebb3f6a91886" translate="yes" xml:space="preserve">
          <source>SADAHIRO Tomoyuki &amp;lt;SADAHIRO@cpan.org&amp;gt;</source>
          <target state="translated">SADAHIRO智之&amp;lt;SADAHIRO@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1c1a149ffa7e57a787cea83ed6a3a2c0ffa35345" translate="yes" xml:space="preserve">
          <source>SCALAR by Tassilo von Parseval &amp;lt;</source>
          <target state="translated">Tassilo von Parseval的SCALAR &amp;lt;</target>
        </trans-unit>
        <trans-unit id="43993ba468ce32a67952244d9e5192667e84cd03" translate="yes" xml:space="preserve">
          <source>SCALAR objects have the weirdest looking &lt;code&gt;&lt;a href=&quot;../functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; workaround.</source>
          <target state="translated">标量对象有怪异的看着 &lt;code&gt;&lt;a href=&quot;../functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; 解决方法。</target>
        </trans-unit>
        <trans-unit id="8add1ce4b3b0f237cb257bfdfad785395ef1e5bc" translate="yes" xml:space="preserve">
          <source>SCALAR, UNTIE and DESTROY</source>
          <target state="translated">SCALAR、UNTIE和DESTROY。</target>
        </trans-unit>
        <trans-unit id="59c76652af2d2c360a807543951673bfa19a4bab" translate="yes" xml:space="preserve">
          <source>SCALAR_CACHE, LIST_CACHE</source>
          <target state="translated">SCALAR_CACHE,LIST_CACHE。</target>
        </trans-unit>
        <trans-unit id="46ab5a918078b88865c34d46d45763f78a5cc2a8" translate="yes" xml:space="preserve">
          <source>SCRIPT</source>
          <target state="translated">SCRIPT</target>
        </trans-unit>
        <trans-unit id="e003ea419cd6d683b3dc245b907e737d9db1ae18" translate="yes" xml:space="preserve">
          <source>SCRIPTNAME</source>
          <target state="translated">SCRIPTNAME</target>
        </trans-unit>
        <trans-unit id="0f0ba912c0054dc78bfcf20fe7b6e50703bcd2fb" translate="yes" xml:space="preserve">
          <source>SDBM_File</source>
          <target state="translated">SDBM_File</target>
        </trans-unit>
        <trans-unit id="28e149b5061e0e199eeb8ad29d19c2b452c7308d" translate="yes" xml:space="preserve">
          <source>SDBM_File - Tied access to sdbm files</source>
          <target state="translated">SDBM_File-对SDBM文件的绑定访问。</target>
        </trans-unit>
        <trans-unit id="8588b248d51f71630f790c3eb34cf84896c594a3" translate="yes" xml:space="preserve">
          <source>SDBM_File optionally exports the following constants:</source>
          <target state="translated">SDBM_File 可以选择输出以下常量。</target>
        </trans-unit>
        <trans-unit id="1faeb0377926bf58af76c255c58712a5d3e6ec90" translate="yes" xml:space="preserve">
          <source>SDBM_File works properly on VMS. It has, however, one minor difference. The database directory file created has a</source>
          <target state="translated">SDBM_File 在 VMS 上正常工作。然而,它有一个小的区别。创建的数据库目录文件有一个</target>
        </trans-unit>
        <trans-unit id="1952101e9f51419b4802f5cf2205dbe7f82c6050" translate="yes" xml:space="preserve">
          <source>SDK support</source>
          <target state="translated">支持SDK</target>
        </trans-unit>
        <trans-unit id="0b5c47070a456be30ed273d884c5ec6f4e9bab40" translate="yes" xml:space="preserve">
          <source>SEARCHLIST</source>
          <target state="translated">SEARCHLIST</target>
        </trans-unit>
        <trans-unit id="76cc8b48c61108caae8462edc037736919e97499" translate="yes" xml:space="preserve">
          <source>SECONDARY METHODS</source>
          <target state="translated">第二种方法</target>
        </trans-unit>
        <trans-unit id="2f94587f40525a0a8a732b6707107d4fbdffb1c1" translate="yes" xml:space="preserve">
          <source>SECTION SPECIFICATIONS</source>
          <target state="translated">部份规格</target>
        </trans-unit>
        <trans-unit id="0a7b77e1bff2cdf175f16e6d7ba96ce707ec6d1f" translate="yes" xml:space="preserve">
          <source>SECURITY</source>
          <target state="translated">SECURITY</target>
        </trans-unit>
        <trans-unit id="12713ecff9f1245e64977a8fa414c57fa087a008" translate="yes" xml:space="preserve">
          <source>SECURITY ADVICE</source>
          <target state="translated">安全建议</target>
        </trans-unit>
        <trans-unit id="bfd285ce31ccc93ae218db34512d55c8fef1bf03" translate="yes" xml:space="preserve">
          <source>SECURITY CONSIDERATIONS</source>
          <target state="translated">安全考虑因素</target>
        </trans-unit>
        <trans-unit id="c06a8de7571099d0932997aba5af14fa479ee594" translate="yes" xml:space="preserve">
          <source>SECURITY MECHANISMS AND CONCERNS</source>
          <target state="translated">安全机制和关注的问题</target>
        </trans-unit>
        <trans-unit id="23221788445fd727530d1bc6254db2bce93ad328" translate="yes" xml:space="preserve">
          <source>SECURITY VULNERABILITY CONTACT INFORMATION</source>
          <target state="translated">安全漏洞联系信息</target>
        </trans-unit>
        <trans-unit id="1c956b4275eeb6f3263c0bd524a24f06a31af248" translate="yes" xml:space="preserve">
          <source>SECURITY WARNING</source>
          <target state="translated">安全警告</target>
        </trans-unit>
        <trans-unit id="2545989a050467477ac52f135227af914644a6f6" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="a514a40dba849cc960ceb2766c69bf6dbfac5efe" translate="yes" xml:space="preserve">
          <source>SETTING UP</source>
          <target state="translated">设置</target>
        </trans-unit>
        <trans-unit id="ea891f207d532669ff9b90ec72a7baa4f36f053a" translate="yes" xml:space="preserve">
          <source>SEVERE errors may be trapped using the modern interface. If the they are not trapped, or the old interface is used, such an error will cause the program will halt.</source>
          <target state="translated">使用现代界面可以捕捉到严重的错误,如果没有被捕捉到,或者使用旧的界面,这样的错误将导致程序停止。如果没有被捕获,或者使用旧的接口,这样的错误将导致程序停止。</target>
        </trans-unit>
        <trans-unit id="4a0522194695bd9bef8665629020d38d138bbf60" translate="yes" xml:space="preserve">
          <source>SHOULD</source>
          <target state="translated">SHOULD</target>
        </trans-unit>
        <trans-unit id="f284419b463720e759d9bd38bb7313ae06f0c7a4" translate="yes" xml:space="preserve">
          <source>SHUT_RD, SHUT_RDWR, SHUT_WR</source>
          <target state="translated">SHUT_RD,SHUT_RDWR,SHUT_WR。</target>
        </trans-unit>
        <trans-unit id="14aa89a719ec7122c2ce360f693449bd2b19b4bb" translate="yes" xml:space="preserve">
          <source>SIDE EFFECTS</source>
          <target state="translated">副作用</target>
        </trans-unit>
        <trans-unit id="e131851088ee5bd4a8d05eac73ba1e1c34fea115" translate="yes" xml:space="preserve">
          <source>SIGCHLD handlers require some special care. If a second child dies while in the signal handler caused by the first death, we won't get another signal. So must loop here else we will leave the unreaped child as a zombie. And the next time two children die we get another zombie. And so on.</source>
          <target state="translated">SIGCHLD处理程序需要一些特殊的照顾。如果第二个孩子在第一个死亡引起的信号处理程序中死亡,我们就不会再得到另一个信号。所以必须在这里循环,否则我们会让未收割的孩子成为僵尸。而下一次两个孩子死亡的时候,我们又会得到一个僵尸。以此类推。</target>
        </trans-unit>
        <trans-unit id="6c516a9cdc9c6a2dc636e4dc4edef8cf15c9a35e" translate="yes" xml:space="preserve">
          <source>SIGN</source>
          <target state="translated">SIGN</target>
        </trans-unit>
        <trans-unit id="289e7cb687cf889ca955ad085551ec3d6e9b0f5c" translate="yes" xml:space="preserve">
          <source>SIGNAL</source>
          <target state="translated">SIGNAL</target>
        </trans-unit>
        <trans-unit id="e4c348d27951fa0e0b6f3964c9a0317f5c5fdfc5" translate="yes" xml:space="preserve">
          <source>SIGNAL HANDLERS</source>
          <target state="translated">信号处理员(SIGNAL HANDLERS)</target>
        </trans-unit>
        <trans-unit id="95d9f548097dbe6158b3add5ee8ac2dff325c1b4" translate="yes" xml:space="preserve">
          <source>SIGNAL LISTS</source>
          <target state="translated">信号列表</target>
        </trans-unit>
        <trans-unit id="c7919905bf1f940e4f07557025388777dc3f0680" translate="yes" xml:space="preserve">
          <source>SIGNAL may be either a signal name (a string) or a signal number. A signal name may start with a &lt;code&gt;SIG&lt;/code&gt; prefix, thus &lt;code&gt;FOO&lt;/code&gt; and &lt;code&gt;SIGFOO&lt;/code&gt; refer to the same signal. The string form of SIGNAL is recommended for portability because the same signal may have different numbers in different operating systems.</source>
          <target state="translated">SIGNAL可以是信号名称（字符串）或信号编号。信号名称可以以 &lt;code&gt;SIG&lt;/code&gt; 前缀开头，因此 &lt;code&gt;FOO&lt;/code&gt; 和 &lt;code&gt;SIGFOO&lt;/code&gt; 指的是同一信号。建议使用SIGNAL字符串形式以实现可移植性，因为同一信号在不同的操作系统中可能具有不同的编号。</target>
        </trans-unit>
        <trans-unit id="45d7ab163c3519f034360b9f8c15583993072de3" translate="yes" xml:space="preserve">
          <source>SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS</source>
          <target state="translated">简单(真实)的论点,复杂的结果。</target>
        </trans-unit>
        <trans-unit id="36fb236688433f7ba1fe71d8334a5881c26945e8" translate="yes" xml:space="preserve">
          <source>SINGLE</source>
          <target state="translated">SINGLE</target>
        </trans-unit>
        <trans-unit id="9551f9ebadb6b8874f0a09d6fd17dc9a6313f20f" translate="yes" xml:space="preserve">
          <source>SINGLE OCTET TABLES</source>
          <target state="translated">单一八位数表</target>
        </trans-unit>
        <trans-unit id="88087292ed82e26f3eb824d0bffc05ccf7a30f8d" translate="yes" xml:space="preserve">
          <source>SIZE</source>
          <target state="translated">SIZE</target>
        </trans-unit>
        <trans-unit id="ef55ad765ee655a35542a988358cf7b9367f4896" translate="yes" xml:space="preserve">
          <source>SOCKETS</source>
          <target state="translated">SOCKETS</target>
        </trans-unit>
        <trans-unit id="d9d19b4d1282cc807176ba014d065344ca6bbd6f" translate="yes" xml:space="preserve">
          <source>SOCK_NONBLOCK. SOCK_CLOEXEC</source>
          <target state="translated">SOCK_NONBLOCK。SOCK_CLOEXEC</target>
        </trans-unit>
        <trans-unit id="df29c59e479c0271bf7e9c0ad92c8237cad6f2e0" translate="yes" xml:space="preserve">
          <source>SOCK_STREAM, SOCK_DGRAM, SOCK_RAW, ...</source>
          <target state="translated">SOCK_STREAM,SOCK_DGRAM,SOCK_RAW,...。</target>
        </trans-unit>
        <trans-unit id="a78809e52bb535d4af719afc8ed332b56e8e1f89" translate="yes" xml:space="preserve">
          <source>SOLARIS-SPECIFIC MODULES.</source>
          <target state="translated">SOLARIS-专用模块。</target>
        </trans-unit>
        <trans-unit id="9c600da6a371817a1804028bdc065e60095ceee4" translate="yes" xml:space="preserve">
          <source>SOLARIS-SPECIFIC PROBLEMS WITH MODULES.</source>
          <target state="translated">SOLARIS-特定的模块问题。</target>
        </trans-unit>
        <trans-unit id="17c8bdf0e5e4e0187b930b3d9bfb3544bfba93c1" translate="yes" xml:space="preserve">
          <source>SOL_SOCKET</source>
          <target state="translated">SOL_SOCKET</target>
        </trans-unit>
        <trans-unit id="11691e308bd0d9194f09e5e1e6a5cfb98fc37a2c" translate="yes" xml:space="preserve">
          <source>SORTING</source>
          <target state="translated">SORTING</target>
        </trans-unit>
        <trans-unit id="e9ae0ed784fa4b84ae7b592fd74578fd81749524" translate="yes" xml:space="preserve">
          <source>SOURCE</source>
          <target state="translated">SOURCE</target>
        </trans-unit>
        <trans-unit id="b1381d371061209491819eb2609a01de24fdb853" translate="yes" xml:space="preserve">
          <source>SOURCE CODE STATIC ANALYSIS</source>
          <target state="translated">源代码统计分析</target>
        </trans-unit>
        <trans-unit id="c8f16f5a1f1356b3650bb7ab2c5f8f37d42461c3" translate="yes" xml:space="preserve">
          <source>SOURCE HANDLERS</source>
          <target state="translated">源处理商</target>
        </trans-unit>
        <trans-unit id="9836d9fa982da4ba0a76274027dfcf4145f8ed19" translate="yes" xml:space="preserve">
          <source>SO_ACCEPTCONN, SO_BROADCAST, SO_ERROR, ...</source>
          <target state="translated">SO_ACCEPTCONN,SO_BROADCAST,SO_ERROR,...。</target>
        </trans-unit>
        <trans-unit id="5cca89f9409718b1da6907e6e93572d06c40ca6d" translate="yes" xml:space="preserve">
          <source>SPECIAL NOTES</source>
          <target state="translated">特别说明:</target>
        </trans-unit>
        <trans-unit id="5869ad2af52d01c61e6d7c2327c37cf5db83ed34" translate="yes" xml:space="preserve">
          <source>SPECIAL VARIABLES</source>
          <target state="translated">特殊变量</target>
        </trans-unit>
        <trans-unit id="265ffc5673e34f04cd058a9e47b2f3fc4118c0e5" translate="yes" xml:space="preserve">
          <source>SPEED</source>
          <target state="translated">SPEED</target>
        </trans-unit>
        <trans-unit id="92288c56bc2d9ae8d3ddd7aea35d68f216ba8209" translate="yes" xml:space="preserve">
          <source>STACKS</source>
          <target state="translated">STACKS</target>
        </trans-unit>
        <trans-unit id="3cd0e3397d7d517e68e7d898e8d530d51a211c50" translate="yes" xml:space="preserve">
          <source>STANDARDS OF CONDUCT</source>
          <target state="translated">行为标准</target>
        </trans-unit>
        <trans-unit id="7196e7c29d205cf35657781e59674fc592b0e1d5" translate="yes" xml:space="preserve">
          <source>START</source>
          <target state="translated">START</target>
        </trans-unit>
        <trans-unit id="0580918dfe727b503f118df4dfa837d1d97b8afb" translate="yes" xml:space="preserve">
          <source>STAT</source>
          <target state="translated">STAT</target>
        </trans-unit>
        <trans-unit id="459c448fab4f45a0006af647b52de2148f3245b8" translate="yes" xml:space="preserve">
          <source>STATIC becomes &quot;static&quot; in C, and may be #define'd to nothing in some configurations in the future.</source>
          <target state="translated">STATIC在C语言中变成了 &quot;静态&quot;,将来在某些配置中可能会被#定义为无。</target>
        </trans-unit>
        <trans-unit id="152beb2de4a9191bf00c402b86c178a1e96b8bde" translate="yes" xml:space="preserve">
          <source>STDIN. If you open a pipe</source>
          <target state="translated">STDIN。如果你打开一个管道</target>
        </trans-unit>
        <trans-unit id="d49edcaca803885dd3d3de3582a20b0a8ac42bbc" translate="yes" xml:space="preserve">
          <source>STDIO</source>
          <target state="translated">STDIO</target>
        </trans-unit>
        <trans-unit id="6717a5443e936a38121877fb3474d434376f157d" translate="yes" xml:space="preserve">
          <source>STDLIB</source>
          <target state="translated">STDLIB</target>
        </trans-unit>
        <trans-unit id="9276851877b23012083cb17a9b38f356b1fd2912" translate="yes" xml:space="preserve">
          <source>STDOUT.</source>
          <target state="translated">STDOUT.</target>
        </trans-unit>
        <trans-unit id="9d268d2e24eca6fdbe8751403875b5d409cc2bab" translate="yes" xml:space="preserve">
          <source>STORABLE SUPPORT</source>
          <target state="translated">稳定的支持</target>
        </trans-unit>
        <trans-unit id="927396a1c407c35ce234da193b181423ab846b07" translate="yes" xml:space="preserve">
          <source>STORAGE</source>
          <target state="translated">STORAGE</target>
        </trans-unit>
        <trans-unit id="da5aba16204ebd88821d2bbf3642268c4231fb1f" translate="yes" xml:space="preserve">
          <source>STRING</source>
          <target state="translated">STRING</target>
        </trans-unit>
        <trans-unit id="e004a975375cfcdf1578fc0ef7c035457310c786" translate="yes" xml:space="preserve">
          <source>STRING-OFFSET</source>
          <target state="translated">STRING-OFFSET</target>
        </trans-unit>
        <trans-unit id="d39d4197672a8a5a8b01bc20bee3ed97b2ee0de2" translate="yes" xml:space="preserve">
          <source>STRUCTURE MANIPULATORS</source>
          <target state="translated">结构操纵器</target>
        </trans-unit>
        <trans-unit id="88d861b852455a77bedc56d5051d1494e3427dc1" translate="yes" xml:space="preserve">
          <source>STYLE can be any of 'all', 'none', 'noc', 'nop' or 'auto'. 'all' shows each of the 5 times available ('wallclock' time, user time, system time, user time of children, and system time of children). 'noc' shows all except the two children times. 'nop' shows only wallclock and the two children times. 'auto' (the default) will act as 'all' unless the children times are both zero, in which case it acts as 'noc'. 'none' prevents output.</source>
          <target state="translated">STYLE可以是'all'、'none'、'noc'、'nop'或'auto'中的任何一种。'all'显示5个可用时间中的每一个('挂钟'时间、用户时间、系统时间、子代的用户时间和子代的系统时间)。'noc'显示除两个孩子时间外的所有时间。'nop'只显示挂钟时间和两个子代时间。'auto'(默认)将作为'all',除非子代时间都是零,在这种情况下,它将作为'noc'。'none'会阻止输出。</target>
        </trans-unit>
        <trans-unit id="f785aa60eb1687828109026f7c1556afeb4bb5ca" translate="yes" xml:space="preserve">
          <source>SUBCHAR</source>
          <target state="translated">SUBCHAR</target>
        </trans-unit>
        <trans-unit id="d5529482d8b56979cf6f3c8ce6edeba18392ec47" translate="yes" xml:space="preserve">
          <source>SUBCLASSING</source>
          <target state="translated">SUBCLASSING</target>
        </trans-unit>
        <trans-unit id="41007eab9a3f59844238f520d3b3fbe3574e4ec5" translate="yes" xml:space="preserve">
          <source>SUBVERSION</source>
          <target state="translated">SUBVERSION</target>
        </trans-unit>
        <trans-unit id="78da15466bc22ba4c2064f6819f0ee327ab6981d" translate="yes" xml:space="preserve">
          <source>SUGGESTED ADDITIONS</source>
          <target state="translated">建议增加的内容</target>
        </trans-unit>
        <trans-unit id="1450844d24f350ba57985fb7baa645d1b3c9ba65" translate="yes" xml:space="preserve">
          <source>SUMMARY</source>
          <target state="translated">SUMMARY</target>
        </trans-unit>
        <trans-unit id="7ba6b2cd3c556610f9bf6f732ed3dc1225ebaf0f" translate="yes" xml:space="preserve">
          <source>SUPER QUICK PATCH GUIDE</source>
          <target state="translated">超级快速补丁指南</target>
        </trans-unit>
        <trans-unit id="0e5b114f4724be24326da9743475bcb96c13f24e" translate="yes" xml:space="preserve">
          <source>SUPPORT</source>
          <target state="translated">SUPPORT</target>
        </trans-unit>
        <trans-unit id="1b8d4eee010f24ac16595341e950461ca5a3d3c5" translate="yes" xml:space="preserve">
          <source>SUPPORT STATUS</source>
          <target state="translated">支持状况</target>
        </trans-unit>
        <trans-unit id="71646130bf9009d21884a40db0eb3e646eeba733" translate="yes" xml:space="preserve">
          <source>SUPPORTED CODE SETS</source>
          <target state="translated">支持的代码集</target>
        </trans-unit>
        <trans-unit id="20f08435befa244d15b9abb7ce29315ba6bffd6b" translate="yes" xml:space="preserve">
          <source>SUSv3 issue 6, IEEE Std 1003.1, 2004 edition, &lt;a href=&quot;http://www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&quot;&gt;http://www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&lt;/a&gt;</source>
          <target state="translated">SUSv3第6期，IEEE Std 1003.1，2004版，&lt;a href=&quot;http://www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&quot;&gt;http：//www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b5c5ccc00f6f2dea45c028134844e08294c70f1" translate="yes" xml:space="preserve">
          <source>SV Flags</source>
          <target state="translated">SV旗帜</target>
        </trans-unit>
        <trans-unit id="41d145450f8d5d05c4883a59c3e33bb73bbc87e8" translate="yes" xml:space="preserve">
          <source>SV Manipulation Functions</source>
          <target state="translated">SV操作功能</target>
        </trans-unit>
        <trans-unit id="0cb2c0f60120ed03f422bd6a37739838c8afb9ce" translate="yes" xml:space="preserve">
          <source>SV, there are eight routines:</source>
          <target state="translated">SV,有八个常规。</target>
        </trans-unit>
        <trans-unit id="3236c7e44f8f9dbf237dbf7ecffd22d6b088623b" translate="yes" xml:space="preserve">
          <source>SV-Body Allocation</source>
          <target state="translated">SV-主体分配</target>
        </trans-unit>
        <trans-unit id="846d9529fb9f3b7b94dbe63d0869250da5e8c08a" translate="yes" xml:space="preserve">
          <source>SV-RELATED CLASSES</source>
          <target state="translated">SV-相关类</target>
        </trans-unit>
        <trans-unit id="602ec148a2bdfca7c0a3c4ab4bf15e8c72bc3fca" translate="yes" xml:space="preserve">
          <source>SV-bodies are similar, but they use arena-sets by default, which separate the link and info from the arena itself, and reclaim the 1st slot in the arena. SV-bodies are further described later.</source>
          <target state="translated">SV-body与之类似,但它们默认使用竞技场设置,将链接和信息与竞技场本身分开,并回收竞技场的第1个槽位。后面会进一步介绍SV-body。</target>
        </trans-unit>
        <trans-unit id="fcd62da02a3398df0ea64cfb6d4ceaebc2e3a756" translate="yes" xml:space="preserve">
          <source>SVN uses a simple integer for $Revision$ so you can adapt it for your $VERSION like so:</source>
          <target state="translated">SVN对$Revision$使用了一个简单的整数,所以你可以根据你的$VERSION来调整它,就像这样。</target>
        </trans-unit>
        <trans-unit id="a2f35854bf09b97bdf55f2c138c6b37ff40b32bd" translate="yes" xml:space="preserve">
          <source>SVt_PVGV represents a typeglob. If !SvFAKE(sv), then it is a real, incoercible typeglob. If SvFAKE(sv), then it is a scalar to which a typeglob has been assigned. Assigning to it again will stop it from being a typeglob. SVt_PVLV represents a scalar that delegates to another scalar behind the scenes. It is used, e.g., for the return value of &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; and for tied hash and array elements. It can hold any scalar value, including a typeglob. SVt_REGEXP is for regular expressions. SVt_INVLIST is for Perl core internal use only.</source>
          <target state="translated">SVt_PVGV表示类型。如果！SvFAKE（sv），则它是真实的，不可矫正的typeglob。如果为SvFAKE（sv），则它是分配了typeglob的标量。再次分配它将使其不再是typeglob。SVt_PVLV代表一个标量，该标量委派给幕后的另一个标量。例如，它用于 &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; 的返回值以及绑定的哈希和数组元素。它可以保存任何标量值，包括typeglob。SVt_REGEXP用于正则表达式。SVt_INVLIST仅用于Perl内核内部。</target>
        </trans-unit>
        <trans-unit id="e1b54a9af41d4561f6c66399c7eb7425f92860f5" translate="yes" xml:space="preserve">
          <source>SVt_PVIO is for I/O objects, SVt_PVFM for formats, SVt_PVCV for subroutines, SVt_PVHV for hashes and SVt_PVAV for arrays.</source>
          <target state="translated">SVt_PVIO代表I/O对象,SVt_PVFM代表格式,SVt_PVCV代表子程序,SVt_PVHV代表哈希,SVt_PVAV代表数组。</target>
        </trans-unit>
        <trans-unit id="da6136a42687f177a60f91d4eb2271eae2d7a6fe" translate="yes" xml:space="preserve">
          <source>SVt_PVMG represents a &quot;normal&quot; scalar (not a typeglob, regular expression, or delegate). Since most scalars do not need all the internal fields of a PVMG, we save memory by allocating smaller structs when possible. All the other types are just simpler forms of SVt_PVMG, with fewer internal fields. SVt_NULL can only hold undef. SVt_IV can hold undef, an integer, or a reference. (SVt_RV is an alias for SVt_IV, which exists for backward compatibility.) SVt_NV can hold any of those or a double. SVt_PV can only hold undef or a string. SVt_PVIV is a superset of SVt_PV and SVt_IV. SVt_PVNV is similar. SVt_PVMG can hold anything SVt_PVNV can hold, but it can, but does not have to, be blessed or magical.</source>
          <target state="translated">SVt_PVMG表示一个 &quot;正常 &quot;的标量(不是typeglob、正则表达式或委托)。由于大多数标量不需要PVMG的所有内部字段,我们尽可能通过分配较小的结构来节省内存。所有其他类型都只是SVt_PVMG的简单形式,其内部字段较少。SVt_NULL只能容纳undef。SVt_IV 可以存放 undef、一个整数或一个引用。(SVt_RV是SVt_IV的别名,它的存在是为了向后兼容。)SVt_NV可以持有上述任何一种或一个双数。SVt_PV 只能容纳 undef 或一个字符串。SVt_PVIV 是 SVt_PV 和 SVt_IV 的超集。SVt_PVNV与之类似。SVt_PVMG 可以容纳任何 SVt_PVNV 可以容纳的东西,但它可以,但不必是祝福或魔法的。</target>
        </trans-unit>
        <trans-unit id="a7a5d6a90a5b581314432609a1aaaae6f408bf9a" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>
        </trans-unit>
        <trans-unit id="ba535e00f2cea4dffdea53b50104764a5aca819d" translate="yes" xml:space="preserve">
          <source>SYNOPSIS (HMAC-SHA)</source>
          <target state="translated">SYNOPSIS (HMAC-SHA)</target>
        </trans-unit>
        <trans-unit id="0a0dbd67fd1a8a9e460081aa85aa8c11647d6ba7" translate="yes" xml:space="preserve">
          <source>SYNOPSYS</source>
          <target state="translated">SYNOPSYS</target>
        </trans-unit>
        <trans-unit id="4365133368e505044b85d8816d51802800113e75" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>
        </trans-unit>
        <trans-unit id="263688edc9561b0e7849790fe7b9019315fd50b7" translate="yes" xml:space="preserve">
          <source>SYS$SHARE</source>
          <target state="translated">SYS$SHARE</target>
        </trans-unit>
        <trans-unit id="25cf338ba4e9f22e025039bf3c275a868be00bfe" translate="yes" xml:space="preserve">
          <source>SYS$TIMEZONE_DIFFERENTIAL</source>
          <target state="translated">SYS$TIMEZONE_DIFFERENTIAL</target>
        </trans-unit>
        <trans-unit id="c35cdf82bdfbb49c501122d2828eee3ef5797946" translate="yes" xml:space="preserve">
          <source>SYSTEM CONFIGURATION</source>
          <target state="translated">系统配置</target>
        </trans-unit>
        <trans-unit id="f9198a48ddaa8ff0ec23ff200f540f506ae3ddb4" translate="yes" xml:space="preserve">
          <source>Sadly, &lt;code&gt;lynx&lt;/code&gt; doesn't support any options to return a different exit code on non-&lt;code&gt;200 OK&lt;/code&gt; status, giving us no way to tell the difference between a 'successful' fetch and a custom error page.</source>
          <target state="translated">可悲的是， &lt;code&gt;lynx&lt;/code&gt; 不支持在非 &lt;code&gt;200 OK&lt;/code&gt; 状态下返回不同退出代码的任何选项，这使我们无法分辨&amp;ldquo;成功&amp;rdquo;获取和自定义错误页面之间的区别。</target>
        </trans-unit>
        <trans-unit id="7254bc87b66c696df03eacde41a89426aec5ce13" translate="yes" xml:space="preserve">
          <source>Sadly, even though the calling interface for &lt;code&gt;setlocale()&lt;/code&gt; has been standardized, names of locales and the directories where the configuration resides have not been. The basic form of the name is</source>
          <target state="translated">遗憾的是，即使 &lt;code&gt;setlocale()&lt;/code&gt; 的调用接口已经标准化，但语言环境的名称和配置所在的目录仍未确定。名称的基本形式是</target>
        </trans-unit>
        <trans-unit id="9525ae1781bb71fc767a9bab4b6f299ac5cc8c5d" translate="yes" xml:space="preserve">
          <source>Safe</source>
          <target state="translated">Safe</target>
        </trans-unit>
        <trans-unit id="c092b73f2d08889d224aaac1dfe39e9c3ec18a07" translate="yes" xml:space="preserve">
          <source>Safe - Compile and execute code in restricted compartments</source>
          <target state="translated">安全--在受限区间内编译和执行代码。</target>
        </trans-unit>
        <trans-unit id="81516db1154dd2dc31bd7cb4e79b8345e2747962" translate="yes" xml:space="preserve">
          <source>Safe Pipe Opens</source>
          <target state="translated">安全管打开</target>
        </trans-unit>
        <trans-unit id="8ae4c57642b69daa8411a88b64b74e8c1614ca44" translate="yes" xml:space="preserve">
          <source>Safe signals is the default behavior, and the old, immediate, unsafe signalling behavior is only in effect in the following situations:</source>
          <target state="translated">安全信号是默认的行为,旧的、即时的、不安全的信号行为只在以下情况下有效。</target>
        </trans-unit>
        <trans-unit id="426fc0d823d8ce8d11a2788b68d9d04c1d7cac53" translate="yes" xml:space="preserve">
          <source>Safe signals must be in effect to use the &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; signalling method. See &lt;a href=&quot;#Unsafe-signals&quot;&gt;Unsafe signals&lt;/a&gt; for more details.</source>
          <target state="translated">安全信号必须有效才能使用 &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; 信号方法。有关更多详细信息，请参见&lt;a href=&quot;#Unsafe-signals&quot;&gt;不安全信号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60ccef5a9b25d5a0bde44f8d971b0cef4aaf45b1" translate="yes" xml:space="preserve">
          <source>Safe ways to lock a database</source>
          <target state="translated">锁定数据库的安全方法</target>
        </trans-unit>
        <trans-unit id="d3439f3ace2bccf44cb18d9ce2a33f4cb7456e7e" translate="yes" xml:space="preserve">
          <source>Safely Storing Static Data in XS</source>
          <target state="translated">在XS中安全地存储静态数据</target>
        </trans-unit>
        <trans-unit id="3ab4d69c0a0b9d592cb5a7085cb5c887e9e3e59f" translate="yes" xml:space="preserve">
          <source>Safety net</source>
          <target state="translated">安全网</target>
        </trans-unit>
        <trans-unit id="5e45447f5171516fe0acb7993b2e08eb58a883bf" translate="yes" xml:space="preserve">
          <source>Said of a &lt;b&gt;function&lt;/b&gt; that happily receives an indeterminate number of &lt;b&gt;actual arguments&lt;/b&gt;.</source>
          <target state="translated">表示一个&lt;b&gt;函数&lt;/b&gt;，该&lt;b&gt;函数&lt;/b&gt;愉快地接收不确定数量的&lt;b&gt;实际参数&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="a14b6b23e4ce9693d49b5f5cbe13c14753c55987" translate="yes" xml:space="preserve">
          <source>Said of a program that runs with the privileges of its &lt;b&gt;owner&lt;/b&gt; rather than (as is usually the case) the privileges of whoever is running it. Also describes the bit in the mode word (&lt;b&gt;permission bits&lt;/b&gt;) that controls the feature. This bit must be explicitly set by the owner to enable this feature, and the program must be carefully written not to give away more privileges than it ought to.</source>
          <target state="translated">所说的程序以其&lt;b&gt;所有者&lt;/b&gt;的特权而不是（通常是）运行者的特权来运行。还描述了模式字中控制功能的&lt;b&gt;位&lt;/b&gt;（&lt;b&gt;权限位&lt;/b&gt;）。所有者必须明确设置此位以启用此功能，并且必须仔细编写程序，以免赋予过多的特权。</target>
        </trans-unit>
        <trans-unit id="30d1861158149b44eddb9b4f4bf93da6c465ed88" translate="yes" xml:space="preserve">
          <source>Said of data derived from the grubby hands of a user, and thus unsafe for a secure program to rely on. Perl does taint checks if you run a &lt;b&gt;setuid&lt;/b&gt; (or &lt;b&gt;setgid&lt;/b&gt;) program, or if you use the &lt;code&gt;&amp;ndash;T&lt;/code&gt; switch.</source>
          <target state="translated">这些数据来自用户肮脏的手，因此对于安全程序来说是不安全的。Perl会污点检查是否运行&lt;b&gt;setuid&lt;/b&gt;（或&lt;b&gt;setgid&lt;/b&gt;）程序，或者是否使用 &lt;code&gt;&amp;ndash;T&lt;/code&gt; 开关。</target>
        </trans-unit>
        <trans-unit id="5e56fc30bcecbd35bd1cc38f0496ee99dc529906" translate="yes" xml:space="preserve">
          <source>Said of events or activities whose relative temporal ordering is indeterminate because too many things are going on at once. Hence, an asynchronous event is one you didn&amp;rsquo;t know when to expect.</source>
          <target state="translated">说事件或活动的相对时间顺序不确定的事件，因为一次发生的事情太多了。因此，异步事件是您不知道何时期望的事件。</target>
        </trans-unit>
        <trans-unit id="d54d1114ba4c663a3e4fa480f2bddaa86d60d57a" translate="yes" xml:space="preserve">
          <source>Said of quantifiers and groups in patterns that refuse to give up anything once they&amp;rsquo;ve gotten their mitts on it. Catchier and easier to say than the even more formal</source>
          <target state="translated">称谓词和模式中的量词和组表示一旦放弃就放弃任何东西。Catchier比正式更容易说</target>
        </trans-unit>
        <trans-unit id="f34b8818028305e4c77c915b3fa571ae8296f8df" translate="yes" xml:space="preserve">
          <source>Same as $ctx-&amp;gt;digest, but will return the digest as a base64 encoded string.</source>
          <target state="translated">与$ ctx-&amp;gt; digest相同，但将摘要作为base64编码的字符串返回。</target>
        </trans-unit>
        <trans-unit id="f1896d17ac713c86bd5e735d6ed3009cef2fb611" translate="yes" xml:space="preserve">
          <source>Same as $ctx-&amp;gt;digest, but will return the digest in hexadecimal form.</source>
          <target state="translated">与$ ctx-&amp;gt; digest相同，但将以十六进制形式返回摘要。</target>
        </trans-unit>
        <trans-unit id="321e50212902338e1f8d07475551f6c1b21cf1cd" translate="yes" xml:space="preserve">
          <source>Same as $md5-&amp;gt;digest, but will return the digest as a base64 encoded string. The length of the returned string will be 22 and it will only contain characters from this set: 'A'..'Z', 'a'..'z', '0'..'9', '+' and '/'.</source>
          <target state="translated">与$ md5-&amp;gt; digest相同，但将摘要作为base64编码的字符串返回。返回的字符串的长度为22，并且仅包含该集合中的字符：'A'..'Z'，'a'..'z'，'0'..'9'，'+'和'/'。</target>
        </trans-unit>
        <trans-unit id="cf30f8e6bb8aec6a7d65f80317c122a59e54ddbe" translate="yes" xml:space="preserve">
          <source>Same as $md5-&amp;gt;digest, but will return the digest in hexadecimal form. The length of the returned string will be 32 and it will only contain characters from this set: '0'..'9' and 'a'..'f'.</source>
          <target state="translated">与$ md5-&amp;gt; digest相同，但将以十六进制形式返回摘要。返回的字符串的长度为32，并且将仅包含以下字符集：&amp;ldquo; 0&amp;rdquo; ..&amp;ldquo; 9&amp;rdquo;和&amp;ldquo; a&amp;rdquo; ..&amp;ldquo; f&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="adc31e09a43f709f9a62052f6bf654a631be9c55" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#av_top_index&quot;&gt;av_top_index&lt;/a&gt;. Note that, unlike what the name implies, it returns the highest index in the array, so to get the size of the array you need to use &lt;code&gt;av_len(av) + 1&lt;/code&gt; . This is unlike &lt;a href=&quot;#sv_len&quot;&gt;sv_len&lt;/a&gt;, which returns what you would expect.</source>
          <target state="translated">与&lt;a href=&quot;#av_top_index&quot;&gt;av_top_index&lt;/a&gt;相同。请注意，与名称含义不同，它返回数组中的最高索引，因此，要使用 &lt;code&gt;av_len(av) + 1&lt;/code&gt; 来获取数组的大小。这与&lt;a href=&quot;#sv_len&quot;&gt;sv_len&lt;/a&gt;不同，后者会返回您期望的结果。</target>
        </trans-unit>
        <trans-unit id="bd00e5b4a628549dfb2a56fc60eeae52a5492154" translate="yes" xml:space="preserve">
          <source>Same as &lt;b&gt;#targarg&lt;/b&gt;, but followed by the COP sequence numbers that delimit the variable's lifetime (or 'end' for a variable in an open scope) for a variable.</source>
          <target state="translated">与&lt;b&gt;#targarg&lt;/b&gt;相同，但后跟COP序列号，用于定义变量的变量生存期（或在开放作用域中变量的&amp;ldquo; end&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="b333ea2d5eb991eb18e1fe085e7827d0861784dd" translate="yes" xml:space="preserve">
          <source>Same as &lt;b&gt;setuid&lt;/b&gt;, only having to do with giving away &lt;b&gt;group&lt;/b&gt; privileges.</source>
          <target state="translated">与&lt;b&gt;setuid&lt;/b&gt;相同，仅与放弃&lt;b&gt;组&lt;/b&gt;特权有关。</target>
        </trans-unit>
        <trans-unit id="dd2c1685765b164ff8c757696e79f8ef8a05da80" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;$dumper-&amp;gt;dumpValue([$value1, $value2]);&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;$dumper-&amp;gt;dumpValue([$value1, $value2]);&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b66d989845a614c7ee96f117c157deaa3d7d272" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-C 1&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;-C 1&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="17ff6b0adea1652a2ecbb3b63ae65d9ce56e642c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; {$DB::OUT} expr&lt;/code&gt; in the current package. In particular, because this is just Perl's own &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; function, this means that nested data structures and objects are not dumped, unlike with the &lt;code&gt;x&lt;/code&gt; command.</source>
          <target state="translated">与当前软件包中的 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; {$DB::OUT} expr&lt;/code&gt; 相同。特别是，由于这只是Perl自己的 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 功能，因此与 &lt;code&gt;x&lt;/code&gt; 命令不同，这意味着不会转储嵌套的数据结构和对象。</target>
        </trans-unit>
        <trans-unit id="5bded8b49632c2bc354dee454e68ddb3343b94b2" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;GLOB_NOCHECK&lt;/code&gt; but it only returns the pattern if it does not contain any of the special characters &quot;*&quot;, &quot;?&quot; or &quot;[&quot;. &lt;code&gt;NOMAGIC&lt;/code&gt; is provided to simplify implementing the historic csh(1) globbing behaviour and should probably not be used anywhere else.</source>
          <target state="translated">与 &lt;code&gt;GLOB_NOCHECK&lt;/code&gt; 相同，但仅在不包含任何特殊字符&amp;ldquo; *&amp;rdquo;，&amp;ldquo;？&amp;rdquo;的情况下才返回模式 要么 &amp;rdquo;[&amp;rdquo;。提供 &lt;code&gt;NOMAGIC&lt;/code&gt; 是为了简化实现历史性的csh（1）全局行为，并且可能不应该在其他任何地方使用。</target>
        </trans-unit>
        <trans-unit id="8fa53f872690857788d9b7f7b09c9f41522d38cb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;S{0,1}&lt;/code&gt; , &lt;code&gt;S{0,BIG_NUMBER}&lt;/code&gt; , &lt;code&gt;S{1,BIG_NUMBER}&lt;/code&gt; respectively.</source>
          <target state="translated">分别与 &lt;code&gt;S{0,1}&lt;/code&gt; ， &lt;code&gt;S{0,BIG_NUMBER}&lt;/code&gt; 和 &lt;code&gt;S{1,BIG_NUMBER}&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="d73739841976f1a7dcb32427273c9847bcee05cc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;S{0,1}?&lt;/code&gt;, &lt;code&gt;S{0,BIG_NUMBER}?&lt;/code&gt;, &lt;code&gt;S{1,BIG_NUMBER}?&lt;/code&gt; respectively.</source>
          <target state="translated">与 &lt;code&gt;S{0,1}?&lt;/code&gt; 相同吗？， &lt;code&gt;S{0,BIG_NUMBER}?&lt;/code&gt; ， &lt;code&gt;S{1,BIG_NUMBER}?&lt;/code&gt; 分别。</target>
        </trans-unit>
        <trans-unit id="b501d45522ee6fcbd27a8e6421a481de4730d35b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;V currentpackage [vars]&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;V currentpackage [vars]&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="fc9732600b3f4ba496b226be29f8d7502bec183b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;av_top_index()&lt;/code&gt; .</source>
          <target state="translated">与 &lt;code&gt;av_top_index()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="ed15951528f9a3b1693795d231b59c334e96fd72" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;av_top_index()&lt;/code&gt; . Deprecated, use &lt;code&gt;av_top_index()&lt;/code&gt; instead.</source>
          <target state="translated">与 &lt;code&gt;av_top_index()&lt;/code&gt; 相同。不推荐使用，而是使用 &lt;code&gt;av_top_index()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fd79a44452154dcd5bee2f1f88ca1f0be978a80" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;can_read&lt;/code&gt; except check for handles that can be written to.</source>
          <target state="translated">与 &lt;code&gt;can_read&lt;/code&gt; 相同，除了检查可写入的句柄。</target>
        </trans-unit>
        <trans-unit id="86717aa28434827c3cce31e46810aad20494d04b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;can_read&lt;/code&gt; except check for handles that have an exception condition, for example pending out-of-band data.</source>
          <target state="translated">与 &lt;code&gt;can_read&lt;/code&gt; 相同，除了检查具有异常条件的句柄（例如，待处理的带外数据）。</target>
        </trans-unit>
        <trans-unit id="cf9b7e48710259527983c11a42b3d64277049fd5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;nlst&lt;/code&gt; but using the &lt;code&gt;LIST&lt;/code&gt; command</source>
          <target state="translated">与 &lt;code&gt;nlst&lt;/code&gt; 相同，但使用 &lt;code&gt;LIST&lt;/code&gt; 命令</target>
        </trans-unit>
        <trans-unit id="07e6b1de2aca7aeabbbb74cb40cd6fb12115b1a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;stor&lt;/code&gt; but using the &lt;code&gt;STOU&lt;/code&gt; command. The name of the unique file which was created on the server will be available via the &lt;code&gt;unique_name&lt;/code&gt; method after the data connection has been closed.</source>
          <target state="translated">与 &lt;code&gt;stor&lt;/code&gt; 相同，但使用 &lt;code&gt;STOU&lt;/code&gt; 命令。数据连接关闭后，可以通过 &lt;code&gt;unique_name&lt;/code&gt; 方法获得在服务器上创建的唯一文件的名称。</target>
        </trans-unit>
        <trans-unit id="050cdf215abb00fa4b1a92a37d95bcdab6cdf803" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;sv_insert&lt;/code&gt; , but the extra &lt;code&gt;flags&lt;/code&gt; are passed to the &lt;code&gt;SvPV_force_flags&lt;/code&gt; that applies to &lt;code&gt;bigstr&lt;/code&gt; .</source>
          <target state="translated">同 &lt;code&gt;sv_insert&lt;/code&gt; ，但额外的 &lt;code&gt;flags&lt;/code&gt; 传递给 &lt;code&gt;SvPV_force_flags&lt;/code&gt; 适用于 &lt;code&gt;bigstr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4948ae2952aeaa54a9b08b1d52d0aebd89300fe8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;|dbcmd&lt;/code&gt; but DB::OUT is temporarily &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;ed as well.</source>
          <target state="translated">与 &lt;code&gt;|dbcmd&lt;/code&gt; 相同，但是DB :: OUT也被临时 &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17cd3b097f00891c15503e0ba808355b9776ae01" translate="yes" xml:space="preserve">
          <source>Same as B::RV::RV, except that it will die() if the PV isn't a reference.</source>
          <target state="translated">与 B::RV::RV 相同,只是如果 PV 不是引用,它将 die()。</target>
        </trans-unit>
        <trans-unit id="12731699524953733ca1ae6acee18e5d893ae3c5" translate="yes" xml:space="preserve">
          <source>Same as INST_LIB for architecture dependent files.</source>
          <target state="translated">与INST_LIB相同,适用于依赖于架构的文件。</target>
        </trans-unit>
        <trans-unit id="768d60df579e4e0017be429538ddb9929b0ad58b" translate="yes" xml:space="preserve">
          <source>Same as Setswana.</source>
          <target state="translated">和Setswana一样。</target>
        </trans-unit>
        <trans-unit id="0c4eef73f645ae4e5c46bde75fc207d5bc51e18d" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_dec, but can only be used if you know</source>
          <target state="translated">和SvREFCNT_dec一样,但只有当你知道了</target>
        </trans-unit>
        <trans-unit id="fef013ae4d66be03935dc3bf20b53909c95a6d83" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used if you don't need the return value, and you know that</source>
          <target state="translated">和 SvREFCNT_inc 一样,但只有在不需要返回值的情况下才可以使用,而且你知道</target>
        </trans-unit>
        <trans-unit id="426f8f6410e7d89c64463478b80b9be327e690b5" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used if you don't need the return value. The macro doesn't need to return a meaningful value.</source>
          <target state="translated">和 SvREFCNT_inc 一样,但只有在不需要返回值的情况下才可以使用。这个宏不需要返回一个有意义的值。</target>
        </trans-unit>
        <trans-unit id="a620762017f73057c46b448ecd94ff355974e200" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used if you know</source>
          <target state="translated">和 SvREFCNT_inc 一样,但只有当你知道了</target>
        </trans-unit>
        <trans-unit id="fee188b770ede281dc6a3c41613f42a22ba1ccc7" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used with expressions without side effects. Since we don't have to store a temporary value, it's faster.</source>
          <target state="translated">和 SvREFCNT_inc 一样,但只能用于没有副作用的表达式。因为我们不需要存储一个临时值,所以速度更快。</target>
        </trans-unit>
        <trans-unit id="2595b6980871a8b0471d922ed4278fe547a4ef91" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc_simple, but can only be used if you don't need the return value. The macro doesn't need to return a meaningful value.</source>
          <target state="translated">和 SvREFCNT_inc_simple 一样,但只有在不需要返回值的情况下才能使用。这个宏不需要返回一个有意义的值。</target>
        </trans-unit>
        <trans-unit id="5e0ebce8c721dcc08adc0d78215a69aae80cdf74" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc_simple, but can only be used if you know</source>
          <target state="translated">和SvREFCNT_inc_simple一样,但只有在你知道的情况下才能使用</target>
        </trans-unit>
        <trans-unit id="e8b04bf629db3203ee704935da9b218f8fca2c72" translate="yes" xml:space="preserve">
          <source>Same as T_INOUT, but the filehandle that is returned from C to Perl can only be used for reading (mode &lt;code&gt;&amp;lt;&lt;/code&gt; ).</source>
          <target state="translated">与T_INOUT相同，但是从C返回到Perl的文件句柄只能用于读取（模式 &lt;code&gt;&amp;lt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a42b3ecf40946781fcdeda5f632a6ee1faa496c6" translate="yes" xml:space="preserve">
          <source>Same as T_INOUT, but the filehandle that is returned from C to Perl is set to use the open mode &lt;code&gt;+&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">与T_INOUT相同，但是从C返回到Perl的文件句柄被设置为使用打开模式 &lt;code&gt;+&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2f46714a4ca062dc49faadfa76cc1f276656ec9" translate="yes" xml:space="preserve">
          <source>Same as digest_file(), but return the digest as a base64 encoded string.</source>
          <target state="translated">和 digest_file()一样,但返回的是一个 base64 编码的字符串。</target>
        </trans-unit>
        <trans-unit id="b8221d65ea0f84a8082261e35b336ff6ae782ce3" translate="yes" xml:space="preserve">
          <source>Same as digest_file(), but return the digest in hex form.</source>
          <target state="translated">和 digest_file()一样,但是返回十六进制的摘要。</target>
        </trans-unit>
        <trans-unit id="34cacc2ec86aa6ca9b2faa2d99bfd159b89a57fd" translate="yes" xml:space="preserve">
          <source>Same as for PERL_LIB, but for architecture dependent files.</source>
          <target state="translated">和PERL_LIB一样,但对于依赖于架构的文件。</target>
        </trans-unit>
        <trans-unit id="00de2894d4cedb1815bb8821b2b4d0231c867bf6" translate="yes" xml:space="preserve">
          <source>Same as gv_fetchmeth_pvn(), but looks for autoloaded subroutines too. Returns a glob for the subroutine.</source>
          <target state="translated">和 gv_fetchmeth_pvn()一样,但也会查找自动加载的子程序。返回子程序的 glob。</target>
        </trans-unit>
        <trans-unit id="ede508d134d237d64d45e3e62801dcc9fa897bc3" translate="yes" xml:space="preserve">
          <source>Same as gv_init_pvn(), but takes a nul-terminated string for the name instead of separate char * and length parameters.</source>
          <target state="translated">和gv_init_pvn()一样,但是取一个无结尾的字符串作为名称,而不是单独的char *和length参数。</target>
        </trans-unit>
        <trans-unit id="381c253197f4086597faaea267515867c533575c" translate="yes" xml:space="preserve">
          <source>Same as gv_init_pvn(), but takes an SV * for the name instead of separate char * and length parameters. &lt;code&gt;flags&lt;/code&gt; is currently unused.</source>
          <target state="translated">与gv_init_pvn（）相同，但是名称使用SV *而不是单独的char *和length参数。 &lt;code&gt;flags&lt;/code&gt; 目前未使用。</target>
        </trans-unit>
        <trans-unit id="5aeb2ed424e87338cd58b8bbceb6777011cc76bf" translate="yes" xml:space="preserve">
          <source>Same as macro for the depend attribute.</source>
          <target state="translated">与依赖属性的宏相同。</target>
        </trans-unit>
        <trans-unit id="a2753a525f040c2e927f132ecc56578c6fe59a69" translate="yes" xml:space="preserve">
          <source>Same as md5(), but will return the digest as a base64 encoded string. The length of the returned string will be 22 and it will only contain characters from this set: 'A'..'Z', 'a'..'z', '0'..'9', '+' and '/'.</source>
          <target state="translated">与md5()相同,但会以base64编码的字符串返回摘要。返回的字符串长度为22,并且只包含这组字符。'A'...'Z','a'...'z','0'...'9','+'和'/'。</target>
        </trans-unit>
        <trans-unit id="ffef2f77f0642531d955ceb8e1d9f30caf01a8de" translate="yes" xml:space="preserve">
          <source>Same as md5(), but will return the digest in hexadecimal form. The length of the returned string will be 32 and it will only contain characters from this set: '0'..'9' and 'a'..'f'.</source>
          <target state="translated">与md5()相同,但将以十六进制形式返回摘要。返回的字符串长度为32,并且只包含这组字符。'0'...'9'和'a'...'f'。</target>
        </trans-unit>
        <trans-unit id="f9e83cb51ae17520eb72ee7373b3bb693bd3e680" translate="yes" xml:space="preserve">
          <source>Same as previously, except that a suffix is added to the template after the `X' translation. Useful for ensuring that a temporary filename has a particular extension when needed by other applications. But see the WARNING at the end.</source>
          <target state="translated">与之前的一样,只是在 &quot;X &quot;翻译之后,会给模板添加一个后缀。对于确保临时文件名在其他应用程序需要时有一个特定的扩展名很有用。但请看最后的警告。</target>
        </trans-unit>
        <trans-unit id="cffdae28cf613c2b709759b1b9e3abe7266b1ef0" translate="yes" xml:space="preserve">
          <source>Same as put but appends to the file on the remote server.</source>
          <target state="translated">和put一样,但把文件附加到远程服务器上。</target>
        </trans-unit>
        <trans-unit id="701195d933e2174a2321ba9b4568da7c8fec78cc" translate="yes" xml:space="preserve">
          <source>Same as put but uses the &lt;code&gt;STOU&lt;/code&gt; command.</source>
          <target state="translated">与put相同，但使用 &lt;code&gt;STOU&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="86da614b9aa4e21631bf016f7e54338d618a642b" translate="yes" xml:space="preserve">
          <source>Same as the PERL_CORE parameter. The parameter overrides this.</source>
          <target state="translated">与PERL_CORE参数相同。该参数优先于此。</target>
        </trans-unit>
        <trans-unit id="e9b188f1869bbf1477040a87a90bf4df89cd9059" translate="yes" xml:space="preserve">
          <source>Same remark as above applies. Additionally, if this directory is not one of directories on @INC (and @INC is influenced by &lt;code&gt;PERLLIB_PREFIX&lt;/code&gt; ), you need to put this directory and subdirectory</source>
          <target state="translated">与上述相同。此外，如果此目录不是@INC上的目录之一（并且@INC受 &lt;code&gt;PERLLIB_PREFIX&lt;/code&gt; 的影响），则需要将该目录和子目录放入</target>
        </trans-unit>
        <trans-unit id="e597ac886abacfd0992bb21191156be2f19d9a09" translate="yes" xml:space="preserve">
          <source>Same remark as for</source>
          <target state="translated">同上所述。</target>
        </trans-unit>
        <trans-unit id="fe6a6f88454c592600be80925db301a7cbcc92b0" translate="yes" xml:space="preserve">
          <source>Same terms as Perl.</source>
          <target state="translated">与Perl术语相同。</target>
        </trans-unit>
        <trans-unit id="2ac79dcdaa1e2309a1fab775d426f56238e5ad3c" translate="yes" xml:space="preserve">
          <source>Same thing, but this time using the macro corresponding to &lt;code&gt;LOCAL0&lt;/code&gt; :</source>
          <target state="translated">同样，但这次使用的是对应于 &lt;code&gt;LOCAL0&lt;/code&gt; 的宏：</target>
        </trans-unit>
        <trans-unit id="11e08dfb51a6c565ef7f28f608d749bcea3e1912" translate="yes" xml:space="preserve">
          <source>Same thing, if you are really sure it is UTF-8</source>
          <target state="translated">同样的道理,如果你真的确定是UTF-8的话。</target>
        </trans-unit>
        <trans-unit id="40cfdb43915ff314d9bb8743e68eca6619969325" translate="yes" xml:space="preserve">
          <source>Same, but in a specific locale.</source>
          <target state="translated">一样,但在特定的地域。</target>
        </trans-unit>
        <trans-unit id="4905f1529c823d05e3e370cdc7c6defe47ff89ce" translate="yes" xml:space="preserve">
          <source>Sample Plugin</source>
          <target state="translated">样品插件</target>
        </trans-unit>
        <trans-unit id="b161c83401520548013d7cc9cbbdfa41e7b4cfb2" translate="yes" xml:space="preserve">
          <source>Sample code in the</source>
          <target state="translated">中的示例代码</target>
        </trans-unit>
        <trans-unit id="35d8ede57f6e8012d47776f1169df3e4ba33d0d4" translate="yes" xml:space="preserve">
          <source>Save a label into a &lt;code&gt;cop_hints_hash&lt;/code&gt; . You need to set flags to &lt;code&gt;SVf_UTF8&lt;/code&gt; for a utf-8 label.</source>
          <target state="translated">将标签保存到 &lt;code&gt;cop_hints_hash&lt;/code&gt; 中。您需要将utf-8标签的标志设置为 &lt;code&gt;SVf_UTF8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0359c0571d78475449c07e73a9debddd961179d8" translate="yes" xml:space="preserve">
          <source>Save a pad slot (used to restore after an iteration)</source>
          <target state="translated">保存一个垫槽(用于迭代后的还原</target>
        </trans-unit>
        <trans-unit id="b316567714310524f1206ebce538bba96fa589b1" translate="yes" xml:space="preserve">
          <source>Save and restore selected file handle</source>
          <target state="translated">保存和恢复选定的文件句柄</target>
        </trans-unit>
        <trans-unit id="d076e982abbbcf014b673c9e65a8d95251455ac0" translate="yes" xml:space="preserve">
          <source>Save source code lines into &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; .</source>
          <target state="translated">将源代码行保存到 &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8943ff1bfba89ddb28ec1c80c1950a342495e0f1" translate="yes" xml:space="preserve">
          <source>Save stack</source>
          <target state="translated">保存栈</target>
        </trans-unit>
        <trans-unit id="919cd7a10b9f8c408a41299ba67656e3aed96881" translate="yes" xml:space="preserve">
          <source>Save the current pad in the given context block structure.</source>
          <target state="translated">在给定的上下文块结构中保存当前的焊盘。</target>
        </trans-unit>
        <trans-unit id="9dfd9cc2125ff0c4b78c83937c1d7a8f97ebf8d1" translate="yes" xml:space="preserve">
          <source>Save the current pad then set it to null.</source>
          <target state="translated">保存当前焊盘,然后将其设置为空。</target>
        </trans-unit>
        <trans-unit id="2e3eac961a008d0de718654d13d767b1f0a60d2f" translate="yes" xml:space="preserve">
          <source>Save the current pad to the local variable opad, then make the current pad equal to npad</source>
          <target state="translated">将当前的pad保存到本地变量opad中,然后使当前pad等于npad。</target>
        </trans-unit>
        <trans-unit id="6069707b65587cd0c4611efa1bc57e483008913e" translate="yes" xml:space="preserve">
          <source>Save the state on exit.</source>
          <target state="translated">退出时保存状态。</target>
        </trans-unit>
        <trans-unit id="be2f62debbdb3162148e615df694537e06e4dd97" translate="yes" xml:space="preserve">
          <source>Save the state on exit. The state is stored in a file called</source>
          <target state="translated">退出时保存状态。状态存储在一个名为</target>
        </trans-unit>
        <trans-unit id="469a06af599c9bb8a4ea455a09ece66c7f10bfdd" translate="yes" xml:space="preserve">
          <source>Save the test results. Should be called after all tests have run.</source>
          <target state="translated">保存测试结果。应该在所有测试运行后调用。</target>
        </trans-unit>
        <trans-unit id="8a898e2f0f9dbc1708c8c365ee9ed73e85942904" translate="yes" xml:space="preserve">
          <source>Saves all config variables to the current config file (CPAN/Config.pm or CPAN/MyConfig.pm that was loaded at start).</source>
          <target state="translated">将所有的配置变量保存到当前的配置文件中(CPAN/Config.pm或CPAN/MyConfig.pm,在启动时已加载)。</target>
        </trans-unit>
        <trans-unit id="6f36c48737f3987b460b62ee4ed57c9e8844ae2b" translate="yes" xml:space="preserve">
          <source>Saves or restores the internal state. When called with no arguments, returns a 3-element list: number of blocks processed, a 16-byte internal state buffer, then up to 63 bytes of unprocessed data. When passed those same arguments, restores the state. This is only useful for specialised operations.</source>
          <target state="translated">保存或恢复内部状态。当调用时没有任何参数,返回一个3元素列表:已处理的块数,一个16字节的内部状态缓冲区,然后是最多63字节的未处理数据。当传递这些相同的参数时,恢复状态。这只对专门的操作有用。</target>
        </trans-unit>
        <trans-unit id="66487db7153fb72329118b454dd0d2ddccc1050a" translate="yes" xml:space="preserve">
          <source>Saves the original stack mark for the XSUB. See &lt;code&gt;ORIGMARK&lt;/code&gt; .</source>
          <target state="translated">保存XSUB的原始堆栈标记。参见 &lt;code&gt;ORIGMARK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ffbbb1a8f837ab41cce503e56c95dc0e7394a98" translate="yes" xml:space="preserve">
          <source>Say for example you want to interface to a library which allows asynchronous file i/o. In this case you may be able to register a callback whenever a read operation has completed. To be of any use we want to be able to call separate Perl subroutines for each file that is opened. As it stands, the error handler example above would not be adequate as it allows only a single callback to be defined at any time. What we require is a means of storing the mapping between the opened file and the Perl subroutine we want to be called for that file.</source>
          <target state="translated">比如说你想与一个允许异步文件i/o的库接口。在这种情况下,你可以在读取操作完成时注册一个回调。为了达到目的,我们希望能够为每个被打开的文件调用单独的 Perl 子程序。就目前而言,上面的错误处理程序的例子是不够的,因为它只允许在任何时候定义一个回调。我们需要的是一种存储打开的文件和我们希望为该文件调用的 Perl 子程序之间的映射的方法。</target>
        </trans-unit>
        <trans-unit id="baa19f1b44eb2b392a69c65427e59d2abdd91bc8" translate="yes" xml:space="preserve">
          <source>Say the Perl subroutine in the previous section was called in a scalar context, like this</source>
          <target state="translated">假设上一节中的Perl子程序是在一个标量上下文中调用的,就像下面这样</target>
        </trans-unit>
        <trans-unit id="e0565efe29b7ae5b91f77178993c686f84ba177b" translate="yes" xml:space="preserve">
          <source>Say the i/o library has a function &lt;code&gt;asynch_read&lt;/code&gt; which associates a C function &lt;code&gt;ProcessRead&lt;/code&gt; with a file handle &lt;code&gt;fh&lt;/code&gt; --this assumes that it has also provided some routine to open the file and so obtain the file handle.</source>
          <target state="translated">假设i / o库具有一个函数 &lt;code&gt;asynch_read&lt;/code&gt; ，该函数将C函数 &lt;code&gt;ProcessRead&lt;/code&gt; 与文件句柄 &lt;code&gt;fh&lt;/code&gt; 关联起来-假设它还提供了一些例程来打开文件并获取文件句柄。</target>
        </trans-unit>
        <trans-unit id="a215b51b4ba88f6072caaad7e52e02dce8c50f4d" translate="yes" xml:space="preserve">
          <source>Say you have a zip file, &lt;code&gt;file1.zip&lt;/code&gt; , that only contains a single member, you can read it and write the uncompressed data to the file &lt;code&gt;file1.txt&lt;/code&gt; like this.</source>
          <target state="translated">假设您有一个zip文件 &lt;code&gt;file1.zip&lt;/code&gt; ，它仅包含一个成员，您可以读取该文件并将未压缩的数据写入文件 &lt;code&gt;file1.txt&lt;/code&gt; 中,如下所示。</target>
        </trans-unit>
        <trans-unit id="eda1fb6298984843c947e829a5ac8ec6f967d016" translate="yes" xml:space="preserve">
          <source>Say you need to interoperate with a legacy C application that stores keys as C ints and the values and null terminated UTF-8 strings. Here is how you would set that up</source>
          <target state="translated">假设你需要与一个传统的C应用程序进行互操作,该应用程序将键存储为C ints,将值和空端UTF-8字符串存储。下面是你如何设置的</target>
        </trans-unit>
        <trans-unit id="ec67546682546ac7030cc97a1719c04309ba84e6" translate="yes" xml:space="preserve">
          <source>Say you want to pass your Perl source through the C preprocessor before execution. As it happens, the source filters distribution comes with a C preprocessor filter module called Filter::cpp.</source>
          <target state="translated">假设你想在执行之前将Perl源代码通过C预处理器。碰巧,源码过滤器发行版中自带了一个名为Filter::cpp的C预处理器过滤器模块。</target>
        </trans-unit>
        <trans-unit id="1a26d9bc1ddfa461c88c744318b63af9d71c8a3a" translate="yes" xml:space="preserve">
          <source>Say you wanted to include a lot of debugging code in your Perl script during development, but you didn't want it available in the released product. Source filters offer a solution. In order to keep the example simple, let's say you wanted the debugging output to be controlled by an environment variable, &lt;code&gt;DEBUG&lt;/code&gt; . Debugging code is enabled if the variable exists, otherwise it is disabled.</source>
          <target state="translated">假设您想在开发过程中在Perl脚本中包含很多调试代码，但是您不希望它在发行的产品中可用。源过滤器提供了一种解决方案。为了简化示例，假设您希望调试输出由环境变量 &lt;code&gt;DEBUG&lt;/code&gt; 控制。如果变量存在，则启用调试代码，否则禁用它。</target>
        </trans-unit>
        <trans-unit id="b5eb3a639d927b2cd0c565a8f3c729b51f32b624" translate="yes" xml:space="preserve">
          <source>Saying &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Complex;&lt;/code&gt; exports many mathematical routines in the caller environment and even overrides some (&lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt;). This is construed as a feature by the Authors, actually... ;-)</source>
          <target state="translated">说 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Complex;&lt;/code&gt; 在调用者环境中导出许多数学例程，甚至覆盖某些例程（ &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; ）。作者将其解释为一项功能，实际上... ;-)</target>
        </trans-unit>
        <trans-unit id="155b29a848ba5b16897da887f3debf4d01094d0c" translate="yes" xml:space="preserve">
          <source>Saying &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Trig;&lt;/code&gt; exports many mathematical routines in the caller environment and even overrides some (&lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt;). This is construed as a feature by the Authors, actually... ;-)</source>
          <target state="translated">说 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Trig;&lt;/code&gt; 在调用者环境中导出许多数学例程，甚至覆盖某些数学例程（ &lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt; ）。作者将其解释为一项功能，实际上... ;-)</target>
        </trans-unit>
        <trans-unit id="57194b243a92a7e8e15ddea54dbe790768bcd41b" translate="yes" xml:space="preserve">
          <source>Scalar context, independent iterator context fixes (GSAR 15-SEP-97)</source>
          <target state="translated">标量上下文,独立迭代器上下文修正(GSAR 15-SEP-97)</target>
        </trans-unit>
        <trans-unit id="034c18b70c248b69dc13cd87a11cf2b429364e5c" translate="yes" xml:space="preserve">
          <source>Scalar or list context propagates downward into the 2nd or 3rd argument, whichever is selected.</source>
          <target state="translated">标量或列表上下文向下传播到第2个或第3个参数中,以选择的为准。</target>
        </trans-unit>
        <trans-unit id="45f7bfd92fa471419ef42bd6d0c9eafee00c1e2d" translate="yes" xml:space="preserve">
          <source>Scalar true/false (or less/equal/greater) result is never tainted.</source>
          <target state="translated">标量真/假(或小于/等于/大于)的结果永远不会被污染。</target>
        </trans-unit>
        <trans-unit id="566d600f0de91b778dff9482940e6debc2bef1a5" translate="yes" xml:space="preserve">
          <source>Scalar true/false result never tainted.</source>
          <target state="translated">Scalar真/假结果永远不会被污染。</target>
        </trans-unit>
        <trans-unit id="981f79763f9c9f7ec32732d722b06d4a72b03531" translate="yes" xml:space="preserve">
          <source>Scalar value constructors</source>
          <target state="translated">标量值构造器</target>
        </trans-unit>
        <trans-unit id="d2aaf6d5a76dde30ec6ce5eeb523012d7281b427" translate="yes" xml:space="preserve">
          <source>Scalar values</source>
          <target state="translated">标量值</target>
        </trans-unit>
        <trans-unit id="c929255e3d198943a72a41224719746cb0fbe821" translate="yes" xml:space="preserve">
          <source>Scalar values are a bit different, since:</source>
          <target state="translated">标量值有点不同,因为。</target>
        </trans-unit>
        <trans-unit id="46ab62d3cf82170d59effe5077d3216d782d76ec" translate="yes" xml:space="preserve">
          <source>Scalar values are always named with '$', even when referring to a scalar that is part of an array or a hash. The '$' symbol works semantically like the English word &quot;the&quot; in that it indicates a single value is expected.</source>
          <target state="translated">标量值总是用'$'来命名,即使是数组或散列的一部分的标量。'$'符号在语义上的作用就像英语单词 &quot;the &quot;一样,它表示希望有一个单一的值。</target>
        </trans-unit>
        <trans-unit id="8c149d9f35dc486d4c4d21248b0b6791d6afa112" translate="yes" xml:space="preserve">
          <source>Scalar values can be strings, integers or floating point numbers, and Perl will automatically convert between them as required. There is no need to pre-declare your variable types, but you have to declare them using the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; keyword the first time you use them. (This is one of the requirements of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; .)</source>
          <target state="translated">标量值可以是字符串，整数或浮点数，Perl将根据需要在它们之间自动进行转换。不需要预先声明变量类型，但是第一次使用它们时必须使用 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 关键字声明它们。（这是 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; 的要求之一；。）</target>
        </trans-unit>
        <trans-unit id="586b63769083cde82554c2e7d8cb7b2cb7593ae5" translate="yes" xml:space="preserve">
          <source>Scalar values can be used in various ways:</source>
          <target state="translated">标量值可以以各种方式使用。</target>
        </trans-unit>
        <trans-unit id="9b46a906ec84de23014636bd09feffd935370288" translate="yes" xml:space="preserve">
          <source>Scalar variables normally contain only one type of value, an integer, double, pointer, or reference. Perl will automatically convert the actual scalar data from the stored type into the requested type.</source>
          <target state="translated">标量变量通常只包含一种类型的值,即整数、双数、指针或引用。Perl会自动将实际的标量数据从存储类型转换为请求类型。</target>
        </trans-unit>
        <trans-unit id="4757d832b960c0fac31f8d9d7a4ffc1b693ecf00" translate="yes" xml:space="preserve">
          <source>Scalar::Util</source>
          <target state="translated">Scalar::Util</target>
        </trans-unit>
        <trans-unit id="ea60bce9f15316fe98c9f903cd4f86402a71e67b" translate="yes" xml:space="preserve">
          <source>Scalar::Util - A selection of general-utility scalar subroutines</source>
          <target state="translated">Scalar::Util-一个通用的标量子程序的选择。</target>
        </trans-unit>
        <trans-unit id="1a772b28b4bca42287e990293bcc006277412dc6" translate="yes" xml:space="preserve">
          <source>Scalars are already passed by reference, so you can modify scalar arguments without using this mechanism by referring explicitly to &lt;code&gt;$_[0]&lt;/code&gt; etc. You can modify all the elements of an array by passing all the elements as scalars, but you have to use the &lt;code&gt;*&lt;/code&gt; mechanism (or the equivalent reference mechanism) to &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, or change the size of an array. It will certainly be faster to pass the typeglob (or reference).</source>
          <target state="translated">标量已通过引用传递，因此您可以通过显式引用 &lt;code&gt;$_[0]&lt;/code&gt; 等来修改标量参数，而无需使用此机制。您可以通过将所有元素作为标量传递来修改数组的所有元素，但是您必须使用的 &lt;code&gt;*&lt;/code&gt; 机构（或等效的参考机构）来 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; ，或更改数组的大小。传递typeglob（或引用）肯定会更快。</target>
        </trans-unit>
        <trans-unit id="f45e57cd25bc46859bbe54787b208157d09c7fc5" translate="yes" xml:space="preserve">
          <source>Scalars aren't necessarily one thing or another. There's no place to declare a scalar variable to be of type &quot;string&quot;, type &quot;number&quot;, type &quot;reference&quot;, or anything else. Because of the automatic conversion of scalars, operations that return scalars don't need to care (and in fact, cannot care) whether their caller is looking for a string, a number, or a reference. Perl is a contextually polymorphic language whose scalars can be strings, numbers, or references (which includes objects). Although strings and numbers are considered pretty much the same thing for nearly all purposes, references are strongly-typed, uncastable pointers with builtin reference-counting and destructor invocation.</source>
          <target state="translated">标量不一定是一种东西,也不一定是另一种东西。没有地方可以声明一个标量变量的类型是 &quot;字符串&quot;、类型是 &quot;数字&quot;、类型是 &quot;引用&quot;,或者其他什么类型。由于标量的自动转换,返回标量的操作不需要关心(事实上,也不能关心)它们的调用者是在寻找一个字符串、一个数字还是一个引用。Perl是一种上下文多态语言,其标量可以是字符串、数字或引用(其中包括对象)。虽然字符串和数字在几乎所有的目的中都被认为是差不多的东西,但引用是强类型的、不可铸造的指针,具有内置的引用计数和析构器调用。</target>
        </trans-unit>
        <trans-unit id="953ae63d2cdb294f5e639e7eecef9f77d955c57c" translate="yes" xml:space="preserve">
          <source>Scalars holding numbers may also be passed, but note that non-integer numbers may already have lost precision due to the conversion to float. Quote your input if you want BigInt to see all the digits:</source>
          <target state="translated">持有数字的标量也可以被传递,但请注意,非整数可能已经因为转换为浮点数而失去了精度。如果你想让BigInt看到所有的数字,请引用你的输入。</target>
        </trans-unit>
        <trans-unit id="d44a7e1989e932a1f263afd20c2951408fa65160" translate="yes" xml:space="preserve">
          <source>Scalars that contain only ASCII and are marked as UTF-8 are sometimes a drag to your program. If you recognize such a situation, just remove the UTF8 flag:</source>
          <target state="translated">只包含ASCII码并且标记为UTF-8的标量有时会拖累你的程序。如果你认识到这种情况,只需删除UTF8标志。</target>
        </trans-unit>
        <trans-unit id="5c0df7bcd9f773b37cd0565bb6449d0e72c38539" translate="yes" xml:space="preserve">
          <source>Scalars, arrays and hashes are documented more fully in &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;.</source>
          <target state="translated">标量，数组和哈希在&lt;a href=&quot;perldata&quot;&gt;perldata中&lt;/a&gt;有更完整的记录。</target>
        </trans-unit>
        <trans-unit id="6edc7768be61f0a36d519e17270ba48e820babe9" translate="yes" xml:space="preserve">
          <source>Scan and skip for a numeric decimal separator (radix).</source>
          <target state="translated">扫描并跳过数字小数分隔符(radix)。</target>
        </trans-unit>
        <trans-unit id="b447752f185cdad2017fcfb4683c08e101844aba" translate="yes" xml:space="preserve">
          <source>Scans &lt;code&gt;$buffer&lt;/code&gt; until it reaches either a</source>
          <target state="translated">扫描 &lt;code&gt;$buffer&lt;/code&gt; 直到达到</target>
        </trans-unit>
        <trans-unit id="f9cc97efd39c36ca8aea6dc3fbaf8c549242a820" translate="yes" xml:space="preserve">
          <source>Scans the directory structure and initializes DIR, XS, XS_FILES, C, C_FILES, O_FILES, H, H_FILES, PL_FILES, EXE_FILES.</source>
          <target state="translated">扫描目录结构并初始化DIR、XS、XS_FILES、C、C_FILES、O_FILES、H、H_FILES、PL_FILES、EXE_FILES。</target>
        </trans-unit>
        <trans-unit id="8b3e0206445d84e0c05bdf3f7e512c348e7dd63c" translate="yes" xml:space="preserve">
          <source>Scans the frames back by depth + skip, then drops the skip innermost, returning at most depth frames.</source>
          <target state="translated">按深度+跳过扫描回帧,然后将跳过的帧丢在最里面,返回最深度的帧。</target>
        </trans-unit>
        <trans-unit id="898d348def33a95c917edb2b47a3656695cfe3f4" translate="yes" xml:space="preserve">
          <source>Schedule tests during parallel testing</source>
          <target state="translated">在平行测试期间安排测试</target>
        </trans-unit>
        <trans-unit id="f1767826d4933a0055c5d47e6c08999b74948c31" translate="yes" xml:space="preserve">
          <source>Schema verification with &lt;code&gt;Kwalify&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;Kwalify&lt;/code&gt; 进行架构验证</target>
        </trans-unit>
        <trans-unit id="dd0e72bd36c98d5abde3acf0b83adc65065c30a6" translate="yes" xml:space="preserve">
          <source>Schema verification with Kwalify</source>
          <target state="translated">使用Kwalify进行模式验证</target>
        </trans-unit>
        <trans-unit id="cc72d54e23e8e30e4e1d63e248c21ce7335655bd" translate="yes" xml:space="preserve">
          <source>Scratchpads</source>
          <target state="translated">Scratchpads</target>
        </trans-unit>
        <trans-unit id="ca1a20b78474d4ab643effd1fc473b3dd0822f75" translate="yes" xml:space="preserve">
          <source>Scratchpads and recursion</source>
          <target state="translated">Scratchpads和递归</target>
        </trans-unit>
        <trans-unit id="48b52f6e45afb6430e381c2398fc1596c6ef5cbf" translate="yes" xml:space="preserve">
          <source>Script Portability on Cygwin</source>
          <target state="translated">Cygwin上的脚本可移植性</target>
        </trans-unit>
        <trans-unit id="381e3298b2b8f6caeb2208b57d805ada38402f0b" translate="yes" xml:space="preserve">
          <source>Scripts</source>
          <target state="translated">Scripts</target>
        </trans-unit>
        <trans-unit id="ad3f4b3b7f509de9f3b3d367a1f94cdc356a1e32" translate="yes" xml:space="preserve">
          <source>Scripts are matched with the regular-expression construct &lt;code&gt;\p{...}&lt;/code&gt; (e.g. &lt;code&gt;\p{Tibetan}&lt;/code&gt; matches characters of the Tibetan script), while &lt;code&gt;\p{Blk=...}&lt;/code&gt; is used for blocks (e.g. &lt;code&gt;\p{Blk=Tibetan}&lt;/code&gt; matches any of the 256 code points in the Tibetan block).</source>
          <target state="translated">脚本与正则表达式构造 &lt;code&gt;\p{...}&lt;/code&gt; 匹配（例如 &lt;code&gt;\p{Tibetan}&lt;/code&gt; 匹配藏文字符），而 &lt;code&gt;\p{Blk=...}&lt;/code&gt; 用于块（例如 &lt;code&gt;\p{Blk=Tibetan}&lt;/code&gt; 与藏文块中的256个代码点匹配。</target>
        </trans-unit>
        <trans-unit id="1abe3e573b15fe96d066363e71021c0a77f61490" translate="yes" xml:space="preserve">
          <source>Scripts starting with #!/usr/bin/perl should work if you have /QOpenSys/usr/bin/perl symlinked to your perl binary. This will not work if you've done a setuid/setgid or have environment variable PASE_EXEC_QOPENSYS=&quot;N&quot;. If you have V5R1, you'll need to get the latest PTFs to have this feature. Scripts starting with #!/QOpenSys/perl/bin/perl should always work.</source>
          <target state="translated">如果你有/QOpenSys/usr/bin/perl符号链接到你的perl二进制文件,以#!/usr/bin/perl开头的脚本应该可以工作。如果你做了setuid/setgid或者环境变量PASE_EXEC_QOPENSYS=&quot;N&quot;,这将无法工作。如果你有V5R1,你需要得到最新的PTF来拥有这个功能。以#!/QOpenSys/perl/bin/perl开头的脚本应该总是能用。</target>
        </trans-unit>
        <trans-unit id="d6e8754d3cda956d2814749461fe8e0c09c0829d" translate="yes" xml:space="preserve">
          <source>Sean M. Burke</source>
          <target state="translated">Sean M.Burke</target>
        </trans-unit>
        <trans-unit id="d838b0b9eb490114353a37b37fd534deb835813a" translate="yes" xml:space="preserve">
          <source>Sean M. Burke &lt;code&gt;sburke@cpan.org&lt;/code&gt;</source>
          <target state="translated">肖恩&amp;middot;M&amp;middot;伯克 &lt;code&gt;sburke@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4a4c9d21a83d403cf6abf74d07de221f606bec9" translate="yes" xml:space="preserve">
          <source>Sean M. Burke, sburke@cpan.org</source>
          <target state="translated">Sean M.Burke,sburke@cpan.org</target>
        </trans-unit>
        <trans-unit id="157f5589fc268213aaeb57461931db7a967e393a" translate="yes" xml:space="preserve">
          <source>Search @INC for the pod and also the &lt;code&gt;scriptdir&lt;/code&gt; defined in the &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; module.</source>
          <target state="translated">在@INC中搜索pod以及在&lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;模块中定义的 &lt;code&gt;scriptdir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d473edf4f992769d896ded0aee42c81af7bdef8c" translate="yes" xml:space="preserve">
          <source>Search along a &lt;code&gt;refcounted_he&lt;/code&gt; chain for an entry with the key specified by</source>
          <target state="translated">沿着 &lt;code&gt;refcounted_he&lt;/code&gt; 链搜索具有由指定的键的条目</target>
        </trans-unit>
        <trans-unit id="0425f1949b3efb097e0af51ce6a638737fa1a8d0" translate="yes" xml:space="preserve">
          <source>Search and replace</source>
          <target state="translated">搜索和替换</target>
        </trans-unit>
        <trans-unit id="91aaba48038a8793d6d8ec9d13575e3f72353702" translate="yes" xml:space="preserve">
          <source>Search and replace is performed using &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/regex/replacement/modifiers&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;replacement&lt;/code&gt; is a Perl double-quoted string that replaces in the string whatever is matched with the &lt;code&gt;regex&lt;/code&gt; . The operator &lt;code&gt;=~&lt;/code&gt; is also used here to associate a string with &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;. If matching against &lt;code&gt;$_&lt;/code&gt; , the &lt;code&gt;$_ =~&lt;/code&gt; can be dropped. If there is a match, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; returns the number of substitutions made; otherwise it returns false. Here are a few examples:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/regex/replacement/modifiers&lt;/a&gt;&lt;/code&gt; 执行搜索和替换。该 &lt;code&gt;replacement&lt;/code&gt; 是一个Perl双引号字符串，字符串中替换掉与匹配的 &lt;code&gt;regex&lt;/code&gt; 。这里还使用运算符 &lt;code&gt;=~&lt;/code&gt; 将字符串与 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 关联。如果与 &lt;code&gt;$_&lt;/code&gt; 匹配，则可以删除 &lt;code&gt;$_ =~&lt;/code&gt; 。如果匹配，则 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 返回被替换的次数；否则返回false。这里有一些例子：</target>
        </trans-unit>
        <trans-unit id="8176a17b3ec2ee1e141881712cc1e6f85341c1e2" translate="yes" xml:space="preserve">
          <source>Search and replace or tr</source>
          <target state="translated">搜索和替换或三合一</target>
        </trans-unit>
        <trans-unit id="20bccd1860b2ff784dc0dd9e3496ebcb95342ff2" translate="yes" xml:space="preserve">
          <source>Search backwards for pattern; final ? is optional. The search is case-insensitive by default.</source>
          <target state="translated">向后搜索模式,最后的?是可选的。缺省情况下,搜索是不区分大小写的。</target>
        </trans-unit>
        <trans-unit id="712e0a5a32c85d5d676dd22914dfa6472338302c" translate="yes" xml:space="preserve">
          <source>Search for PODs in the current Perl interpreter's</source>
          <target state="translated">在当前 Perl 解释器的</target>
        </trans-unit>
        <trans-unit id="149ca8cdb14351a33bdb87598c22f991df3653d9" translate="yes" xml:space="preserve">
          <source>Search for PODs in the current Perl interpreter's installation &lt;b&gt;scriptdir&lt;/b&gt;. This is taken from the local &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; module.</source>
          <target state="translated">在当前Perl解释器的安装&lt;b&gt;scriptdir中&lt;/b&gt;搜索POD 。这是从本地&lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;模块获取的。</target>
        </trans-unit>
        <trans-unit id="6091da1a30ccbeddbf689bdb94636baedb98b8b8" translate="yes" xml:space="preserve">
          <source>Search forwards for pattern (a Perl regex); final / is optional. The search is case-insensitive by default.</source>
          <target state="translated">向前搜索模式(Perl regex);final /是可选的。缺省情况下,搜索是不区分大小写的。</target>
        </trans-unit>
        <trans-unit id="b078d5b07dff8d9c3414352d2c8b1e8766374ab7" translate="yes" xml:space="preserve">
          <source>Search path for ModuleName.a archives. Default path is &lt;code&gt;@INC&lt;/code&gt; . Library archives are expected to be found as</source>
          <target state="translated">ModuleName.a归档的搜索路径。默认路径为 &lt;code&gt;@INC&lt;/code&gt; 。图书馆档案预计将被发现为</target>
        </trans-unit>
        <trans-unit id="7ba4c83bebd38d6c9ef98df13ee7c93324a9f85b" translate="yes" xml:space="preserve">
          <source>Search::Dict</source>
          <target state="translated">Search::Dict</target>
        </trans-unit>
        <trans-unit id="159c02c52328a5c3d8f1f6d33f4619174fc4d3fd" translate="yes" xml:space="preserve">
          <source>Search::Dict - look - search for key in dictionary file</source>
          <target state="translated">Search::Dict-查找-在字典文件中搜索关键字。</target>
        </trans-unit>
        <trans-unit id="cb274b582ed470bcbc679792fd0efcf47c827828" translate="yes" xml:space="preserve">
          <source>Searches a string for a pattern match, and in scalar context returns true if it succeeds, false if it fails. If no string is specified via the &lt;code&gt;=~&lt;/code&gt; or &lt;code&gt;!~&lt;/code&gt; operator, the &lt;code&gt;$_&lt;/code&gt; string is searched. (The string specified with &lt;code&gt;=~&lt;/code&gt; need not be an lvalue--it may be the result of an expression evaluation, but remember the &lt;code&gt;=~&lt;/code&gt; binds rather tightly.) See also &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">在字符串中搜索模式匹配，如果成功，则在标量上下文中返回true，如果失败，则返回false。如果没有通过 &lt;code&gt;=~&lt;/code&gt; 或 &lt;code&gt;!~&lt;/code&gt; 运算符指定任何字符串，则搜索 &lt;code&gt;$_&lt;/code&gt; 字符串。（用 &lt;code&gt;=~&lt;/code&gt; 指定的字符串不必是左值，它可以是表达式求值的结果，但请记住 &lt;code&gt;=~&lt;/code&gt; 绑定得很紧密。）另请参见&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01609669c2084e3949064f2044ad67fc03ade780" translate="yes" xml:space="preserve">
          <source>Searches a string for a pattern, and if found, replaces that pattern with the replacement text and returns the number of substitutions made. Otherwise it returns false (specifically, the empty string).</source>
          <target state="translated">在字符串中搜索一个模式,如果找到了,就用替换的文本替换该模式,并返回替换的次数。否则返回false(具体来说就是空字符串)。</target>
        </trans-unit>
        <trans-unit id="a9dce8c565339549241ce0f3e41d601fb3d4880b" translate="yes" xml:space="preserve">
          <source>Seasoned &lt;b&gt;sed&lt;/b&gt; programmers should take note of the following:</source>
          <target state="translated">经验丰富的&lt;b&gt;sed&lt;/b&gt;程序员应注意以下几点：</target>
        </trans-unit>
        <trans-unit id="b2b7c5f0762186ebbe1bd303994e0861cc28e489" translate="yes" xml:space="preserve">
          <source>Second is the &quot;large file compilation environment&quot;, described in lfcompile(5). According to the man page,</source>
          <target state="translated">二是 &quot;大文件编译环境&quot;,在lfcompile(5)中描述。根据man页面的介绍。</target>
        </trans-unit>
        <trans-unit id="1da21f35eb86e1a8bb31daf3e166d2e2032a9f8a" translate="yes" xml:space="preserve">
          <source>Second problem: there must be a syntax so that the same subroutine declarations and calls can pass a structure as their first argument, or pass nothing. To solve this, the subroutines are named and declared in a particular way. Here's a typical start of a static function used within the Perl guts:</source>
          <target state="translated">第二个问题:必须有一种语法,使同样的子程序声明和调用可以传递一个结构作为它们的第一个参数,或者什么也不传递。为了解决这个问题,子程序的命名和声明都有特定的方式。下面是一个典型的在Perl内胆中使用的静态函数的开始。</target>
        </trans-unit>
        <trans-unit id="d4dd029c6590c127bd82515d97b74688e28135c8" translate="yes" xml:space="preserve">
          <source>Second, if using the listed commands you see something &lt;b&gt;exactly&lt;/b&gt; (prefix matches do not count and case usually counts) like &quot;En_US&quot; without the quotes, then you should be okay because you are using a locale name that should be installed and available in your system. In this case, see &lt;a href=&quot;#Permanently-fixing-your-system's-locale-configuration&quot;&gt;Permanently fixing your system's locale configuration&lt;/a&gt;.</source>
          <target state="translated">其次，如果使用列出的命令，您看到的东西&lt;b&gt;完全准确&lt;/b&gt;（前缀匹配不计算在内，并且通常区分大小写），例如&amp;ldquo; En_US&amp;rdquo;，但不带引号，那么您应该没问题，因为您使用的语言环境名称应已安装并在您的语言环境中可用系统。在这种情况下，请参阅&lt;a href=&quot;#Permanently-fixing-your-system's-locale-configuration&quot;&gt;永久修复系统的语言环境配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f926debd74642042072112400fb8e27254214f5" translate="yes" xml:space="preserve">
          <source>Second, the new &lt;code&gt;(?PARNO)&lt;/code&gt; refers to the sub-pattern in the particular capture group given by &lt;code&gt;PARNO&lt;/code&gt; . In the following regex, the first capture group finds (and remembers) the balanced text, and you need that same pattern within the first buffer to get past the nested text. That's the recursive part. The &lt;code&gt;(?1)&lt;/code&gt; uses the pattern in the outer capture group as an independent part of the regex.</source>
          <target state="translated">第二，新的 &lt;code&gt;(?PARNO)&lt;/code&gt; 指的是 &lt;code&gt;PARNO&lt;/code&gt; 给定的特定捕获组中的子模式。在下面的正则表达式中，第一个捕获组找到（并记住）平衡的文本，并且您需要在第一个缓冲区内使用相同的模式才能越过嵌套的文本。那是递归的部分。的 &lt;code&gt;(?1)&lt;/code&gt; 使用外捕获组中的图案作为正则表达式的一个独立部分。</target>
        </trans-unit>
        <trans-unit id="30470a6ac50aeafc982e0aa947ff8346f98bec87" translate="yes" xml:space="preserve">
          <source>Second, we create a new tied hash each time the hash syntax is used. This allows us not to worry about a possibility of a reference loop, which would lead to a memory leak.</source>
          <target state="translated">其次,每次使用哈希语法时,我们都会创建一个新的绑定哈希。这样我们就不用担心可能会出现引用循环,从而导致内存泄漏。</target>
        </trans-unit>
        <trans-unit id="0f94865fdffc02738a231b5c96d59404dc8257a9" translate="yes" xml:space="preserve">
          <source>Second, when classes are well encapsulated, they become easier to subclass. Ideally, a subclass uses the same APIs to access object data that its parent class uses. In reality, subclassing sometimes involves violating encapsulation, but a good API can minimize the need to do this.</source>
          <target state="translated">其次,当类被很好地封装后,它们就更容易被子类化。理想情况下,子类使用与父类相同的API来访问对象数据。在现实中,子类有时会涉及到违反封装的问题,但一个好的API可以将这种需要降到最低。</target>
        </trans-unit>
        <trans-unit id="1957a7a78ef8a058a21c4bb4fffe79261487e0e1" translate="yes" xml:space="preserve">
          <source>Secondly, there is a hard-wired limit (in this case 3) to the number of callbacks that can exist simultaneously. The only way to increase the limit is by modifying the code to add more functions and then recompiling. None the less, as long as the number of functions is chosen with some care, it is still a workable solution and in some cases is the only one available.</source>
          <target state="translated">其次,同时存在的回调次数是有硬性限制的(在本例中为3)。增加限制的唯一方法是修改代码,增加更多的函数,然后重新编译。尽管如此,只要谨慎选择函数的数量,这仍然是一个可行的解决方案,在某些情况下是唯一可用的方案。</target>
        </trans-unit>
        <trans-unit id="77568c91a4005c80b85e07eded864156aa3ade19" translate="yes" xml:space="preserve">
          <source>Section 5 of CPAN's</source>
          <target state="translated">禁毒网第5节</target>
        </trans-unit>
        <trans-unit id="26953313a3fcd73212535356659ea498185826b3" translate="yes" xml:space="preserve">
          <source>Section ordering varies, although NAME must always be the first section (you'll break some man page systems otherwise), and NAME, SYNOPSIS, DESCRIPTION, and OPTIONS generally always occur first and in that order if present. In general, SEE ALSO, AUTHOR, and similar material should be left for last. Some systems also move WARNINGS and NOTES to last. The order given above should be reasonable for most purposes.</source>
          <target state="translated">节的顺序各不相同,但 NAME 必须总是放在第一节(否则会破坏某些 man page 系统),NAME、SYNOPSIS、DESCRIPTION 和 OPTIONS 一般总是放在第一节,如果有的话,也是按照这个顺序。一般来说,SEE ALSO、AUTHOR和类似的材料应该留到最后。有些系统还将WARNINGS和NOTES移到最后。以上给出的顺序对大多数目的来说应该是合理的。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="81d78e545bd3a736da1afe1a0a7207c7d44d30f7" translate="yes" xml:space="preserve">
          <source>Security Bugs</source>
          <target state="translated">安全漏洞</target>
        </trans-unit>
        <trans-unit id="c582e980afaacab4d25850669d3019f76eb55523" translate="yes" xml:space="preserve">
          <source>Security Implications of Unicode</source>
          <target state="translated">统一码的安全影响</target>
        </trans-unit>
        <trans-unit id="5bf0e79ff05f1ce749dc53266bc353f163fb157d" translate="yes" xml:space="preserve">
          <source>Security problems</source>
          <target state="translated">安全问题</target>
        </trans-unit>
        <trans-unit id="e03e4e146e9017e89a80cbc3ccdcf528aeccd0c2" translate="yes" xml:space="preserve">
          <source>Sed Traps</source>
          <target state="translated">诱捕器</target>
        </trans-unit>
        <trans-unit id="ce3df4d818316dd10c7bca5ae8539c894dc07dbb" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">See</target>
        </trans-unit>
        <trans-unit id="3dc8ef7cce56914fea40d1a846d9d17ce65d4086" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#%24%3f&quot;&gt;$?&lt;/a&gt; for a description of the encoding of the Unix value to produce a native VMS status containing it.</source>
          <target state="translated">看到&lt;a href=&quot;#%24%3f&quot;&gt;$？&lt;/a&gt;有关Unix值编码的描述，以产生包含该值的本机VMS状态。</target>
        </trans-unit>
        <trans-unit id="e3a615c4d743ebe05c6698fe24ee2738441f777a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#%24%5eV&quot;&gt;$^V&lt;/a&gt; for a representation of the Perl version as a &lt;a href=&quot;version&quot;&gt;version&lt;/a&gt; object, which allows more flexible string comparisons.</source>
          <target state="translated">有关将Perl版本表示为&lt;a href=&quot;version&quot;&gt;版本&lt;/a&gt;对象的信息，请参见&lt;a href=&quot;#%24%5eV&quot;&gt;$ ^ V&lt;/a&gt;，它允许更灵活的字符串比较。</target>
        </trans-unit>
        <trans-unit id="f5c4312bfbd997d7021c16cb642d0d0f0b8927c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#%2fx&quot;&gt;/x&lt;/a&gt; for another way to have comments in patterns.</source>
          <target state="translated">有关在模式中添加注释的另一种方法，请参见&lt;a href=&quot;#%2fx&quot;&gt;/ x&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd59b9a8679a0100d8220fe2c0d02d9e16f259a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#(*SKIP)&quot;&gt;(*SKIP)&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#(*SKIP)&quot;&gt;（* SKIP）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7d48087051d931d791f967ec5d5ea3ce9bb1cba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; for the circumstances in which the behavior differs from that described above.</source>
          <target state="translated">见&lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;对于其中上述从该行为的不同的情况。</target>
        </trans-unit>
        <trans-unit id="da18bfb3150711a07386cdf3494de4add4c29c5d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; for special considerations when matching Unicode properties against non-Unicode code points.</source>
          <target state="translated">当将Unicode属性与非&lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Unicode代码点&lt;/a&gt;进行匹配时，请参见Unicode代码点之外的特殊注意事项。</target>
        </trans-unit>
        <trans-unit id="d36f9be4eca1ce27f465834779627dc0abc422e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;Blocks versus Scripts&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;块与脚本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82fe1dd4332f5aa3192be363adc37ec0e102169c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#COMPATIBILITY&quot;&gt;COMPATIBILITY&lt;/a&gt; for the versions of Term::ANSIColor that introduced particular features and the versions of Perl that included them.</source>
          <target state="translated">有关引入特定功能的Term :: ANSIColor版本以及包含这些功能的Perl版本，请参见&lt;a href=&quot;#COMPATIBILITY&quot;&gt;兼容性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01324509104c95010c37d83e2a9b0d89c4ae1472" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES&lt;/a&gt; above for restrictions on</source>
          <target state="translated">有关限制的信息，请参见上面的&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;自定义别名&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b29fc8b5779a3a961738b69765d188e1e77e2418" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Capture-groups&quot;&gt;Capture groups&lt;/a&gt; below for details.</source>
          <target state="translated">有关详细信息，请参见下面的&lt;a href=&quot;#Capture-groups&quot;&gt;捕获组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42d897bd6009af34b566e1b063cb729a21cabbfd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Caveats&quot;&gt;Caveats&lt;/a&gt; for remarks on how commands are parsed and their limitations.</source>
          <target state="translated">请参阅&lt;a href=&quot;#Caveats&quot;&gt;警告，&lt;/a&gt;以获取有关如何解析命令及其限制的说明。</target>
        </trans-unit>
        <trans-unit id="2529b1bbb4cb9bd268f2471b3af1f6bf2544fda1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Centralized-management-of-resources&quot;&gt;Centralized management of resources&lt;/a&gt; for additional details.</source>
          <target state="translated">有关其他详细信息，请参见&lt;a href=&quot;#Centralized-management-of-resources&quot;&gt;资源的集中管理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0d608eaff9fc2d5fda41c89a06afb0e93e74b1b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Changing-the-BTREE-sort-order&quot;&gt;Changing the BTREE sort order&lt;/a&gt; for an example of using the &lt;code&gt;compare&lt;/code&gt; template.</source>
          <target state="translated">有关使用 &lt;code&gt;compare&lt;/code&gt; 模板的示例，请参见&lt;a href=&quot;#Changing-the-BTREE-sort-order&quot;&gt;更改BTREE排序顺序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="697d7d5ea9a46415162262fa3a5975d249dd3463" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Deferred-Writing&quot;&gt;Deferred Writing&lt;/a&gt;, below.</source>
          <target state="translated">请参阅下面的&lt;a href=&quot;#Deferred-Writing&quot;&gt;延期写作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6646def3e55c6c16682534051cece8c01a8afaa3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#EXAMPLE&quot;&gt;EXAMPLE&lt;/a&gt; below for a more complete example.</source>
          <target state="translated">见&lt;a href=&quot;#EXAMPLE&quot;&gt;实例&lt;/a&gt;下面的一个更完整的例子。</target>
        </trans-unit>
        <trans-unit id="bf409a63c99af27e22c018e6065e6f150ada234e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Example-4%3a-Using-filter_del&quot;&gt;Example 4: Using filter_del&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;#Example-4%3a-Using-filter_del&quot;&gt;示例4：使用filter_del&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbd7b2d9bda5bb15fb80642ca4e1486942d59d02" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Extended-Patterns&quot;&gt;Extended Patterns&lt;/a&gt; below for details.</source>
          <target state="translated">有关详细信息，请参见下面的&lt;a href=&quot;#Extended-Patterns&quot;&gt;扩展模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d17871c3ac0073ed5220689da11af40928a963e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Further-Resources&quot;&gt;Further Resources&lt;/a&gt; for how to find all these names and numeric codes.</source>
          <target state="translated">有关如何查找所有这些名称和数字代码的信息，请参见&amp;ldquo; &lt;a href=&quot;#Further-Resources&quot;&gt;其他资源&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7a47ce09f053dcaab42113b6af18f9dae5d5d068" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#How-Perl-Chooses-an-Operator-Implementation&quot;&gt;How Perl Chooses an Operator Implementation&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;#How-Perl-Chooses-an-Operator-Implementation&quot;&gt;Perl如何选择运算符实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64f5f0910d5ebda4dc132ab2bf8b411cf50e5398" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#I%2fO-Operators&quot;&gt;I/O Operators&lt;/a&gt; for more discussion.</source>
          <target state="translated">有关更多讨论，请参见&lt;a href=&quot;#I%2fO-Operators&quot;&gt;I / O操作员&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1f584feebfe576b999765fed59db5431c20da25" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#In-Memory-Databases&quot;&gt;In Memory Databases&lt;/a&gt; for a discussion on the use of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in place of a filename.</source>
          <target state="translated">有关使用 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 代替文件名的讨论，请参见&lt;a href=&quot;#In-Memory-Databases&quot;&gt;内存数据库&lt;/a&gt;中的讨论。</target>
        </trans-unit>
        <trans-unit id="ed6d7d5b46237ab1bfbb7cdc2df2d3f94335ca44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Input&quot;&gt;Input&lt;/a&gt; for more info on accepted input formats.</source>
          <target state="translated">有关接受的输入格式的更多信息，请参见&lt;a href=&quot;#Input&quot;&gt;输入&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d14b703a54eb99c944b45318383220f44655c4b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#KNOWN-BUGS&quot;&gt;KNOWN BUGS&lt;/a&gt; for a known-bug with &lt;code&gt;pairmap&lt;/code&gt; , and a workaround.</source>
          <target state="translated">有关 &lt;code&gt;pairmap&lt;/code&gt; 的已知错误和解决方法，请参见&lt;a href=&quot;#KNOWN-BUGS&quot;&gt;已知&lt;/a&gt;的错误。</target>
        </trans-unit>
        <trans-unit id="4d41685efc41efc4161ad099493a7baa3375996d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#LIMITATIONS&quot;&gt;LIMITATIONS&lt;/a&gt; for caveats related to passing objects via queues.</source>
          <target state="translated">有关与通过队列传递对象有关的注意事项，请参阅&amp;ldquo; &lt;a href=&quot;#LIMITATIONS&quot;&gt;限制&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="81bb2f60f99bb31682143a641130d9d08a0bcb37" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Locking%3a-The-Trouble-with-fd&quot;&gt;Locking: The Trouble with fd&lt;/a&gt; for an explanation for why you should not use &lt;code&gt;fd&lt;/code&gt; to lock your database.</source>
          <target state="translated">有关为什么不应该使用 &lt;code&gt;fd&lt;/code&gt; 锁定数据库的说明，请参见&lt;a href=&quot;#Locking%3a-The-Trouble-with-fd&quot;&gt;使用fd锁定：故障&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1435fd615006ca2ca2a068d620ebf63df37e4f1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Misfeatures&quot;&gt;Misfeatures&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;#Misfeatures&quot;&gt;错误&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="58d0e20526f31ba7307453ef32cf9b232482fb74" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Named-Unary-Operators&quot;&gt;Named Unary Operators&lt;/a&gt; for more discussion of this.</source>
          <target state="translated">有关此的更多讨论，请参见&lt;a href=&quot;#Named-Unary-Operators&quot;&gt;命名一元运算符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1deb57eded4764562d600d45db1e77dd6a893842" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#PARSING-OPTIONS&quot;&gt;PARSING OPTIONS&lt;/a&gt; for more information on the name and meaning of each parse-option currently recognized.</source>
          <target state="translated">请参阅&lt;a href=&quot;#PARSING-OPTIONS&quot;&gt;解析选项&lt;/a&gt;有关名称的更多信息和目前公认的解析各选项的含义。</target>
        </trans-unit>
        <trans-unit id="802f8d1c0614b0c5ba97ddf4d846b72f51fe2467" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Performance-issues&quot;&gt;Performance issues&lt;/a&gt; above for the serious performance implications of using this variable (even once) in your code.</source>
          <target state="translated">见&lt;a href=&quot;#Performance-issues&quot;&gt;性能问题&lt;/a&gt;上面在代码中使用这个变量（甚至一度）的严重的性能问题。</target>
        </trans-unit>
        <trans-unit id="e0721d3a583f622706bb6fd9d55e25e76e7c9c08" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Performance-issues&quot;&gt;Performance issues&lt;/a&gt; above.</source>
          <target state="translated">请参阅上面的&lt;a href=&quot;#Performance-issues&quot;&gt;性能问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="012cca9376c3d6fc72832cdaf6a1953876b6418e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Rules&quot;&gt;Rules&lt;/a&gt; for detailed loading rule.</source>
          <target state="translated">有关详细的加载规则，请参见&lt;a href=&quot;#Rules&quot;&gt;规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0c7190e276dd1123e2d20bfc38a0252bb4583e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;</source>
          <target state="translated">见&lt;a href=&quot;#SYNOPSIS&quot;&gt;提要&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44e2b75cc42cb4c89209bef33f45eded56856cc9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Special-Keys-for-use-overload&quot;&gt;Special Keys for use overload&lt;/a&gt;.</source>
          <target state="translated">有关&lt;a href=&quot;#Special-Keys-for-use-overload&quot;&gt;使用过载，&lt;/a&gt;请参见特殊键。</target>
        </trans-unit>
        <trans-unit id="8783b870d4a4c36fbb9d72d08404624811961c63" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#THREAD-CONTEXT&quot;&gt;THREAD CONTEXT&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#THREAD-CONTEXT&quot;&gt;线程上下文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98abc0c6869dfeaa370f845365c578913d06663d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Text-mode-filehandles&quot;&gt;Text-mode filehandles&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#Text-mode-filehandles&quot;&gt;文本模式文件句柄&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dd5546a5583c5aabbe7a399944669fbe743c078" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#The-LimitOutput-option&quot;&gt;The LimitOutput option&lt;/a&gt; for a discussion on why &lt;code&gt;LimitOutput&lt;/code&gt; is needed and how to use it.</source>
          <target state="translated">有关为什么需要 &lt;code&gt;LimitOutput&lt;/code&gt; 及其使用方法的讨论，请参见&lt;a href=&quot;#The-LimitOutput-option&quot;&gt;LimitOutput选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a04db2897769ec8be9b6e15d301b0fd351331da" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#The-UTF8-flag&quot;&gt;The UTF8 flag&lt;/a&gt; below.</source>
          <target state="translated">请参阅&lt;a href=&quot;#The-UTF8-flag&quot;&gt;下面的UTF8标志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6df4e7ffdc66da3528db2677bd950579d6d17583" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#The-untie()-Gotcha&quot;&gt;The untie() Gotcha&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#The-untie()-Gotcha&quot;&gt;untie（）陷阱&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e3c912519f7e9d0616e33d41fa8cbbc6ac73acd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays&lt;/a&gt; for more information on how to use the array access functions on tied arrays.</source>
          <target state="translated">有关如何在绑定数组上使用数组访问功能的更多信息，请参见&lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;了解绑定哈希和数组的魔力&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28d606a69fa12e18007cdee15b06bccffc4ee71d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays&lt;/a&gt; for more information on how to use the hash access functions on tied hashes.</source>
          <target state="translated">有关如何在绑定哈希上使用哈希访问功能的更多信息，请参见&lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;了解绑定哈希和数组的魔力&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8574bac2e52b1f51dde3adc91743277ad06ddf1b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Unicode-Character-Properties&quot;&gt;Unicode Character Properties&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#Unicode-Character-Properties&quot;&gt;Unicode字符属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="203a3d29f8f05d571a4e10025074d6770fd09885" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#autochomp&quot;&gt;autochomp&lt;/a&gt;, above.</source>
          <target state="translated">参见上面的&lt;a href=&quot;#autochomp&quot;&gt;autochomp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ad27be42bc92f62a41dd4b63858ed5bb05bb0d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cond_signal-VARIABLE&quot;&gt;cond_signal VARIABLE&lt;/a&gt;, above.</source>
          <target state="translated">请参阅上面的&lt;a href=&quot;#cond_signal-VARIABLE&quot;&gt;cond_signal VARIABLE&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43619f99edd9a06b65c218c077a415499c62dd22" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#extract_quotelike&quot;&gt;extract_quotelike&lt;/a&gt; for a (partial) solution to this problem.</source>
          <target state="translated">有关此问题的（部分）解决方案，请参见&lt;a href=&quot;#extract_quotelike&quot;&gt;extract_quotelike&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1c0215be7ce9711980d458716ac64d44747b272" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#gv_fetchmethod_autoload&quot;&gt;gv_fetchmethod_autoload&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#gv_fetchmethod_autoload&quot;&gt;gv_fetchmethod_autoload&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d09c097e5834c91b3461437cdd59127a1114c7b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#mblen&quot;&gt;mblen&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#mblen&quot;&gt;mblen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90821f3f4f5fe72a6ebc3f0f884b46c92488c075" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;</source>
          <target state="translated">看到&lt;a href=&quot;#new&quot;&gt;新的&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d57baf16b4d09759bff717ffa26a6bb8887776db" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#newCONSTSUB_flags&quot;&gt;newCONSTSUB_flags&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#newCONSTSUB_flags&quot;&gt;newCONSTSUB_flags&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecf00f996d4f157c12b443d968d7b0b66f8cac29" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pack&quot;&gt;pack&lt;/a&gt; for more examples and notes.</source>
          <target state="translated">有关更多示例和说明，请参见&lt;a href=&quot;#pack&quot;&gt;包装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1e61b3f3e66fd760583cb51239cfcf62659998f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#seek&quot;&gt;seek&lt;/a&gt; for some details about mixing reading and writing.</source>
          <target state="translated">请参阅&lt;a href=&quot;#seek&quot;&gt;寻求&lt;/a&gt;有关混合阅读和写作的详细信息。</target>
        </trans-unit>
        <trans-unit id="6859925b573c3bde89aa6c7a189f1b102a55949e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../file/globmapper&quot;&gt;File::GlobMapper&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../../file/globmapper&quot;&gt;File :: GlobMapper&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cad30a790e2f07c488b20b392de1346cd1bbf83" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../compress/faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO::Compress::FAQ&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;../compress/faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO :: Compress :: FAQ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a75373c931961b818d9b5eb330cc1e2c76e391d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../cpan/meta/spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; for the list of options.</source>
          <target state="translated">有关选项列表，请参见&lt;a href=&quot;../cpan/meta/spec&quot;&gt;CPAN :: Meta :: Spec&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a8fe6cc2e4ded44502e94b8532be8a853b69e54" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../h2xs&quot;&gt;h2xs&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/ppport.h&quot;&gt;ppport.h&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../h2xs&quot;&gt;h2xs&lt;/a&gt;，&lt;a href=&quot;http://search.cpan.org/perldoc/ppport.h&quot;&gt;ppport.h&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c059550545e55864295e27980cc6659740de60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../harness&quot;&gt;TAP::Harness&lt;/a&gt; for an example of its use.</source>
          <target state="translated">有关其用法的示例，请参见&lt;a href=&quot;../harness&quot;&gt;TAP :: Harness&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="622442b7292c83ca7f0aefb63a8ee718715cb692" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../io/compress/gzip&quot;&gt;IO::Compress::Gzip&lt;/a&gt; for an alternative way to carry out in-memory gzip compression.</source>
          <target state="translated">有关执行内存gzip压缩的替代方法，请参见&lt;a href=&quot;../io/compress/gzip&quot;&gt;IO :: Compress :: Gzip&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d433aa954c81682466e97c55c6954b291775bc9d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO::Uncompress::Gunzip&lt;/a&gt; for an alternative way to carry out in-memory gzip uncompression.</source>
          <target state="translated">请参阅&lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO :: Uncompress :: Gunzip&lt;/a&gt;，了解执行内存gzip解压缩的另一种方法。</target>
        </trans-unit>
        <trans-unit id="af42a5136f23e17fd08461caee6d19a5bb00d2cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt;, &lt;a href=&quot;../ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, and &lt;a href=&quot;../perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;Bidirectional Communication with Another Process in perlipc&lt;/a&gt; for examples of such things.</source>
          <target state="translated">有关&lt;a href=&quot;../ipc/open2&quot;&gt;此类示例&lt;/a&gt;，请参见IPC :: Open2，&lt;a href=&quot;../ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt;和&lt;a href=&quot;../perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;perlipc中与另一个进程的双向通信&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03da0f84566af40e837487ef03fd238bed94716c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../manifest&quot;&gt;ExtUtils::Manifest&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../manifest&quot;&gt;ExtUtils :: Manifest&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3647958f60e89397bf2bde781bed08d1308313a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../memoize&quot;&gt;Memoize&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../memoize&quot;&gt;记忆&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f9a12130707b8ca02375cde805042b1c33c74c5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../more&quot;&gt;Test::More&lt;/a&gt; for an example of its use.</source>
          <target state="translated">有关其使用示例，请参见&lt;a href=&quot;../more&quot;&gt;Test :: More&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0555c7f4dc92917b2979a0e0cdf513034e3b1d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfork&quot;&gt;perlfork&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../perlfork&quot;&gt;perlfork&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8939879cdfd7836cc7736c3828ed69b009572b5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt; for many details and examples.</source>
          <target state="translated">有关更多详细信息和示例，请参见&lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77785e75b0d6c740bbf27cc27866df83e8b43ec8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Handle&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">有关以下每种受支持的 &lt;code&gt;IO::Handle&lt;/code&gt; 方法的完整说明，请参见&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;，它们只是相应内置函数的前端：</target>
        </trans-unit>
        <trans-unit id="7fc5cef92e449ab26391ca99deebb87709a4330f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Seekable&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">有关以下每种受支持的 &lt;code&gt;IO::Seekable&lt;/code&gt; 方法的完整说明，请参见&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;，它们只是相应内置函数的前端：</target>
        </trans-unit>
        <trans-unit id="19572da817ef7827b83221364edd09ae1ad10d56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Socket&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">有关以下每个受支持的 &lt;code&gt;IO::Socket&lt;/code&gt; 方法的完整说明，请参见&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;，它们只是相应内置函数的前端：</target>
        </trans-unit>
        <trans-unit id="8bbc75f5bfe996251241d0713b66327344e9f40f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perliol&quot;&gt;perliol&lt;/a&gt; for detailed info on PerlIO.</source>
          <target state="translated">有关&lt;a href=&quot;../perliol&quot;&gt;PerlIO&lt;/a&gt;的详细信息，请参见perliol。</target>
        </trans-unit>
        <trans-unit id="5f225e5a27c859287b167abbb13baa484ef8b512" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for an example of socketpair use. Perl 5.8 and later will emulate socketpair using IP sockets to localhost if your system implements sockets but not socketpair.</source>
          <target state="translated">有关使用套接字对的示例，请参见&lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt;。如果您的系统实现套接字而不是套接字对，则Perl 5.8和更高版本将使用IP套接字模拟localhost来模拟套接字对。</target>
        </trans-unit>
        <trans-unit id="0e9a322055c7540bb7740a0fe4b76cdb071a6093" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens in perlipc&lt;/a&gt; for more examples of this.</source>
          <target state="translated">有关更多示例，请参见&lt;a href=&quot;../perlipc#Safe-Pipe-Opens&quot;&gt;perlipc中的&amp;ldquo;安全管道打开&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebbc0f9a40727535ec701d451803ad593388a76c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../perlipc#Signals&quot;&gt;perlipc中的Signals&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb73966eabe36b1530522691d1fc3dc07b25b69f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlmod#Packages&quot;&gt;Packages in perlmod&lt;/a&gt; for more information about packages, modules, and classes. See &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; for other scoping issues.</source>
          <target state="translated">有关软件包，模块和类的更多信息，请参见&lt;a href=&quot;../perlmod#Packages&quot;&gt;perlmod&lt;/a&gt;中的软件包。有关其他范围问题，请参见&lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="985bdd70e55c9ed9f5ad2560ba4334b7b81af83f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlmod#Perl-Modules&quot;&gt;Perl Modules in perlmod&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;../perlmod#Perl-Modules&quot;&gt;perlmod中的Perl模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82c97792d9e42a35fd44809c775603ba881dcc7a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for a list of standard modules and pragmas. See &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; for the &lt;code&gt;-M&lt;/code&gt; and &lt;code&gt;-m&lt;/code&gt; command-line options to Perl that give &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; functionality from the command-line.</source>
          <target state="translated">有关标准模块和&lt;a href=&quot;../perlmodlib&quot;&gt;实用&lt;/a&gt;程序的列表，请参见perlmodlib。有关&lt;a href=&quot;../perlrun&quot;&gt;Perl&lt;/a&gt;的 &lt;code&gt;-M&lt;/code&gt; 和 &lt;code&gt;-m&lt;/code&gt; 命令行选项的信息，请参见perlrun，这些选项提供了命令行的 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="d51f7ba23fb3c9f5084207833d54cc6415991442" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt; for more details on unary operators and the comma operator.</source>
          <target state="translated">有关一元运算符和逗号运算符的更多详细信息，请参见&lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a0898ea362c4e60952c0b4d9ad478988aec328c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlopentut&quot;&gt;perlopentut&lt;/a&gt; for a kinder, gentler explanation of opening files.</source>
          <target state="translated">请参阅&lt;a href=&quot;../perlopentut&quot;&gt;perlopentut&lt;/a&gt;以获取对打开文件的更详尽的解释。</target>
        </trans-unit>
        <trans-unit id="f66d62e04ba999c41f9836e2ffee1a58bbb165d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlpacktut&quot;&gt;perlpacktut&lt;/a&gt; for an introduction to this function.</source>
          <target state="translated">有关此功能的介绍，请参见&lt;a href=&quot;../perlpacktut&quot;&gt;perlpacktut&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7404bd4f3b36a82a8b877fe66842b0804d56e6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; and &lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt; for details about subroutines and references; see &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt; and &lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt; for more information about attributes.</source>
          <target state="translated">有关子例程和引用的详细信息，请参见&lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt;和&lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt;。有关属性的更多信息，请参见&lt;a href=&quot;../attributes&quot;&gt;attribute&lt;/a&gt;和&lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ba1ad28ebe02a00f832bdafdafe5695e8a238c4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt; for more about Unicode.</source>
          <target state="translated">有关Unicode的更多信息，请参见&lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74f668202e69ad1f37f65a34698e6ab00d881acf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Handle&lt;/code&gt; methods. All of them return the previous value of the attribute and takes an optional single argument that when given will set the value. If no argument is given the previous value is unchanged (except for $io-&amp;gt;autoflush will actually turn ON autoflush by default).</source>
          <target state="translated">有关以下每个受支持的 &lt;code&gt;IO::Handle&lt;/code&gt; 方法的完整说明，请参见&lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;。它们全部返回该属性的先前值，并带有一个可选的单个参数，当给定该参数时将设置该值。如果未给出任何参数，则先前的值不变（默认情况下，$ io-&amp;gt; autoflush会自动打开自动刷新）。</target>
        </trans-unit>
        <trans-unit id="b682446acb0b848355149be92f806f8de129a27b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; for details on setting &lt;code&gt;%SIG&lt;/code&gt; entries and for more examples. See the Carp module for other kinds of warnings using its carp() and cluck() functions.</source>
          <target state="translated">有关设置 &lt;code&gt;%SIG&lt;/code&gt; 条目的详细信息和更多示例，请参见&lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;。请参阅Carp模块，以使用其carp（）和cluck（）函数获得其他类型的警告。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
